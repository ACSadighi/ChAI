Search.setIndex({"docnames": ["index", "modules/internal/ArrayViewRankChange", "modules/internal/ArrayViewReindex", "modules/internal/ArrayViewSlice", "modules/internal/Atomics", "modules/internal/AtomicsCommon", "modules/internal/ByteBufferHelpers", "modules/internal/Bytes", "modules/internal/BytesCasts", "modules/internal/BytesStringCommon", "modules/internal/CString", "modules/internal/ChapelArray", "modules/internal/ChapelArrayViewElision", "modules/internal/ChapelAutoAggregation", "modules/internal/ChapelAutoLocalAccess", "modules/internal/ChapelBase", "modules/internal/ChapelBase/currentTask", "modules/internal/ChapelContext", "modules/internal/ChapelDebugPrint", "modules/internal/ChapelDistribution", "modules/internal/ChapelDomain", "modules/internal/ChapelGpuSupport", "modules/internal/ChapelHashing", "modules/internal/ChapelHashtable", "modules/internal/ChapelIOSerialize", "modules/internal/ChapelIOStringifyHelper", "modules/internal/ChapelIteratorSupport", "modules/internal/ChapelLocale", "modules/internal/ChapelLocks", "modules/internal/ChapelNumLocales", "modules/internal/ChapelPrivatization", "modules/internal/ChapelRange", "modules/internal/ChapelReduce", "modules/internal/ChapelRemoteVars", "modules/internal/ChapelSerializedBroadcast", "modules/internal/ChapelShortArrayTransfer", "modules/internal/ChapelStandard", "modules/internal/ChapelStaticVars", "modules/internal/ChapelSyncvar", "modules/internal/ChapelTaskData", "modules/internal/ChapelTaskDataHelp", "modules/internal/ChapelTaskID", "modules/internal/ChapelThreads", "modules/internal/ChapelTuple", "modules/internal/ChapelUtil", "modules/internal/DefaultAssociative", "modules/internal/DefaultRectangular", "modules/internal/DefaultSparse", "modules/internal/ExportWrappers", "modules/internal/ExternalArray", "modules/internal/ISO_Fortran_binding", "modules/internal/LocaleModelHelpAPU", "modules/internal/LocaleModelHelpFlat", "modules/internal/LocaleModelHelpGPU", "modules/internal/LocaleModelHelpMem", "modules/internal/LocaleModelHelpRuntime", "modules/internal/LocaleModelHelpSetup", "modules/internal/LocalesArray", "modules/internal/MemConsistency", "modules/internal/MemTracking", "modules/internal/NetworkAtomicTypes", "modules/internal/NetworkAtomics", "modules/internal/OwnedObject", "modules/internal/PrintModuleInitOrder", "modules/internal/SharedObject", "modules/internal/String", "modules/internal/String/NVStringFactory", "modules/internal/StringCasts", "modules/internal/startInitCommDiags", "modules/internal/stopInitCommDiags"], "filenames": ["index.rst", "modules/internal/ArrayViewRankChange.rst", "modules/internal/ArrayViewReindex.rst", "modules/internal/ArrayViewSlice.rst", "modules/internal/Atomics.rst", "modules/internal/AtomicsCommon.rst", "modules/internal/ByteBufferHelpers.rst", "modules/internal/Bytes.rst", "modules/internal/BytesCasts.rst", "modules/internal/BytesStringCommon.rst", "modules/internal/CString.rst", "modules/internal/ChapelArray.rst", "modules/internal/ChapelArrayViewElision.rst", "modules/internal/ChapelAutoAggregation.rst", "modules/internal/ChapelAutoLocalAccess.rst", "modules/internal/ChapelBase.rst", "modules/internal/ChapelBase/currentTask.rst", "modules/internal/ChapelContext.rst", "modules/internal/ChapelDebugPrint.rst", "modules/internal/ChapelDistribution.rst", "modules/internal/ChapelDomain.rst", "modules/internal/ChapelGpuSupport.rst", "modules/internal/ChapelHashing.rst", "modules/internal/ChapelHashtable.rst", "modules/internal/ChapelIOSerialize.rst", "modules/internal/ChapelIOStringifyHelper.rst", "modules/internal/ChapelIteratorSupport.rst", "modules/internal/ChapelLocale.rst", "modules/internal/ChapelLocks.rst", "modules/internal/ChapelNumLocales.rst", "modules/internal/ChapelPrivatization.rst", "modules/internal/ChapelRange.rst", "modules/internal/ChapelReduce.rst", "modules/internal/ChapelRemoteVars.rst", "modules/internal/ChapelSerializedBroadcast.rst", "modules/internal/ChapelShortArrayTransfer.rst", "modules/internal/ChapelStandard.rst", "modules/internal/ChapelStaticVars.rst", "modules/internal/ChapelSyncvar.rst", "modules/internal/ChapelTaskData.rst", "modules/internal/ChapelTaskDataHelp.rst", "modules/internal/ChapelTaskID.rst", "modules/internal/ChapelThreads.rst", "modules/internal/ChapelTuple.rst", "modules/internal/ChapelUtil.rst", "modules/internal/DefaultAssociative.rst", "modules/internal/DefaultRectangular.rst", "modules/internal/DefaultSparse.rst", "modules/internal/ExportWrappers.rst", "modules/internal/ExternalArray.rst", "modules/internal/ISO_Fortran_binding.rst", "modules/internal/LocaleModelHelpAPU.rst", "modules/internal/LocaleModelHelpFlat.rst", "modules/internal/LocaleModelHelpGPU.rst", "modules/internal/LocaleModelHelpMem.rst", "modules/internal/LocaleModelHelpRuntime.rst", "modules/internal/LocaleModelHelpSetup.rst", "modules/internal/LocalesArray.rst", "modules/internal/MemConsistency.rst", "modules/internal/MemTracking.rst", "modules/internal/NetworkAtomicTypes.rst", "modules/internal/NetworkAtomics.rst", "modules/internal/OwnedObject.rst", "modules/internal/PrintModuleInitOrder.rst", "modules/internal/SharedObject.rst", "modules/internal/String.rst", "modules/internal/String/NVStringFactory.rst", "modules/internal/StringCasts.rst", "modules/internal/startInitCommDiags.rst", "modules/internal/stopInitCommDiags.rst"], "titles": ["chpldoc documentation", "ArrayViewRankChange", "ArrayViewReindex", "ArrayViewSlice", "Atomics", "AtomicsCommon", "ByteBufferHelpers", "Bytes", "BytesCasts", "BytesStringCommon", "CString", "ChapelArray", "ChapelArrayViewElision", "ChapelAutoAggregation", "ChapelAutoLocalAccess", "ChapelBase", "currentTask", "ChapelContext", "ChapelDebugPrint", "ChapelDistribution", "ChapelDomain", "ChapelGpuSupport", "ChapelHashing", "ChapelHashtable", "ChapelIOSerialize", "ChapelIOStringifyHelper", "ChapelIteratorSupport", "ChapelLocale", "ChapelLocks", "ChapelNumLocales", "ChapelPrivatization", "ChapelRange", "ChapelReduce", "ChapelRemoteVars", "ChapelSerializedBroadcast", "ChapelShortArrayTransfer", "ChapelStandard", "ChapelStaticVars", "ChapelSyncvar", "ChapelTaskData", "ChapelTaskDataHelp", "ChapelTaskID", "ChapelThreads", "ChapelTuple", "ChapelUtil", "DefaultAssociative", "DefaultRectangular", "DefaultSparse", "ExportWrappers", "ExternalArray", "ISO_Fortran_binding", "LocaleModelHelpAPU", "LocaleModelHelpFlat", "LocaleModelHelpGPU", "LocaleModelHelpMem", "LocaleModelHelpRuntime", "LocaleModelHelpSetup", "LocalesArray", "MemConsistency", "MemTracking", "NetworkAtomicTypes", "NetworkAtomics", "OwnedObject", "PrintModuleInitOrder", "SharedObject", "String", "NVStringFactory", "StringCasts", "startInitCommDiags", "stopInitCommDiags"], "terms": {"content": [0, 7, 28, 59, 65], "arrayviewrankchang": 0, "arrayviewreindex": 0, "arrayviewslic": 0, "atom": [0, 11, 28, 37, 56, 64], "atomicscommon": 0, "bytebufferhelp": 0, "byte": [0, 8, 9, 11, 48, 49, 65], "bytescast": 0, "bytesstringcommon": 0, "cstring": 0, "chapelarrai": 0, "chapelarrayviewelis": 0, "chapelautoaggreg": 0, "chapelautolocalaccess": 0, "chapelbas": [0, 16], "currenttask": [0, 15, 55], "chapelcontext": 0, "chapeldebugprint": 0, "chapeldistribut": 0, "chapeldomain": 0, "chapelgpusupport": 0, "chapelhash": 0, "chapelhasht": 0, "chapelioseri": 0, "chapeliostringifyhelp": 0, "chapeliteratorsupport": 0, "chapellocal": 0, "chapellock": 0, "chapelnumlocal": 0, "chapelprivat": 0, "chapelrang": [0, 20], "chapelreduc": 0, "chapelremotevar": 0, "chapelserializedbroadcast": 0, "chapelshortarraytransf": 0, "chapelstandard": 0, "chapelstaticvar": 0, "chapelsyncvar": 0, "chapeltaskdata": 0, "chapeltaskdatahelp": 0, "chapeltaskid": 0, "chapelthread": 0, "chapeltupl": 0, "chapelutil": 0, "defaultassoci": 0, "defaultrectangular": [0, 18], "defaultspars": 0, "exportwrapp": 0, "externalarrai": 0, "iso_fortran_bind": 0, "localemodelhelpapu": 0, "localemodelhelpflat": 0, "localemodelhelpgpu": 0, "localemodelhelpmem": 0, "localemodelhelpruntim": 0, "localemodelhelpsetup": 0, "localesarrai": [0, 27], "memconsist": 0, "memtrack": 0, "networkatomictyp": 0, "networkatom": 0, "ownedobject": 0, "printmoduleinitord": 0, "sharedobject": 0, "string": [0, 7, 9, 10, 11, 15, 18, 19, 20, 25, 27, 31, 48, 49, 56, 59, 66, 67], "nvstringfactori": [0, 65], "stringcast": 0, "startinitcommdiag": 0, "stopinitcommdiag": 0, "index": [0, 7, 9, 10, 11, 19, 20, 27, 31, 47, 65], "chapel": [0, 4, 20, 26, 27], "modul": [0, 18, 26], "search": [0, 7, 11, 65], "page": 0, "usag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "class": [1, 2, 3, 15, 19, 20, 23, 27, 32, 33, 37, 38, 45, 46, 47, 62, 64], "arrayviewrankchangedist": 1, "basedist": [1, 2, 11, 19, 45, 46, 47], "var": [1, 2, 3, 4, 5, 7, 9, 11, 12, 15, 18, 19, 20, 23, 27, 28, 30, 31, 32, 33, 37, 38, 44, 45, 46, 47, 48, 49, 50, 56, 61, 62, 63, 64, 65], "downdistpid": [1, 2], "int": [1, 2, 4, 5, 6, 7, 9, 10, 11, 15, 19, 20, 22, 23, 26, 27, 29, 30, 31, 34, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 63, 64, 65, 66], "downdistinst": [1, 2], "const": [1, 2, 3, 4, 7, 9, 11, 12, 15, 19, 20, 23, 25, 26, 27, 29, 31, 33, 38, 42, 43, 45, 46, 47, 49, 50, 51, 57, 58, 59, 62, 63, 64, 65], "collapseddim": 1, "idx": [1, 11, 19, 20, 27, 34, 45, 46], "proc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67], "downdist": [1, 2], "overrid": [1, 2, 3, 15, 19, 27, 45, 46, 47], "dsinewrectangulardom": [1, 2, 19, 46], "param": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 25, 26, 27, 31, 32, 34, 35, 38, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 58, 65, 67], "rank": [1, 2, 3, 11, 12, 19, 20, 45, 46, 47, 50], "type": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 26, 27, 30, 31, 32, 33, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 61, 62, 64, 65, 67], "idxtyp": [1, 2, 3, 11, 19, 20, 31, 45, 46, 47, 65], "stride": [1, 2, 11, 19, 20, 31, 46, 50], "ind": [1, 2, 19, 20, 31, 46, 47], "dsiclon": [1, 2, 46], "dsisupportsprivat": [1, 2, 3, 19], "dsigetprivatizedata": [1, 2, 3], "dsiprivat": [1, 2, 3], "privatizedata": [1, 2, 3], "dsidestroydist": [1, 2, 19], "dsiislayout": [1, 2, 19, 46], "dsiequaldmap": [1, 46], "arrayviewrankchangedom": 1, "baserectangulardom": [1, 2, 19, 20, 46], "updominst": [1, 2], "unmanag": [1, 2, 11, 15, 19, 26, 27, 38, 40, 45, 46, 47, 62, 64], "defaultrectangulardom": [1, 2, 26, 46], "distpid": [1, 2], "distinst": [1, 2], "dist": [1, 2, 19, 20, 45, 46, 47], "downdompid": [1, 2], "downdominst": [1, 2], "downdomtyp": [1, 2], "size": [1, 2, 4, 7, 9, 10, 11, 15, 19, 20, 23, 31, 43, 46, 48, 54, 65, 66], "downrank": 1, "updom": [1, 2], "downdom": [1, 2], "dsibuildarrai": [1, 2, 45, 46, 47], "elttyp": [1, 2, 3, 10, 11, 12, 15, 19, 20, 32, 33, 45, 46, 47, 49, 50], "initelt": [1, 2, 19, 20, 45, 46, 47], "bool": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 15, 19, 20, 22, 23, 25, 26, 27, 28, 31, 38, 39, 43, 45, 46, 47, 48, 49, 51, 52, 53, 55, 58, 59, 62, 64, 65, 67], "dsisetindic": [1, 2, 46], "dsiassigndomain": [1, 2, 45, 46, 47], "rh": [1, 2, 4, 7, 9, 11, 12, 15, 19, 20, 31, 38, 45, 46, 47, 58, 62, 64, 65], "domain": [1, 2, 11, 14, 15, 19, 20, 26, 31, 45, 46, 47, 49, 57], "lhsprivat": [1, 2, 45, 46, 47], "iter": [1, 2, 3, 7, 9, 11, 12, 15, 19, 20, 23, 26, 27, 31, 43, 45, 46, 47, 65], "tag": [1, 2, 3, 11, 12, 20, 23, 27, 31, 43, 45, 46, 47], "iterkind": [1, 2, 3, 11, 12, 15, 20, 23, 27, 31, 43, 45, 46, 47], "where": [1, 2, 3, 4, 7, 9, 10, 11, 12, 13, 15, 19, 20, 23, 26, 27, 31, 34, 38, 43, 45, 46, 47, 49, 62, 64, 65, 67], "standalon": [1, 2, 3, 11, 15, 20, 23, 27, 31, 45, 46, 47], "localemodelhassublocal": [1, 2, 3, 51, 52, 53], "chpl__isdrordrview": [1, 2, 11, 46], "__primit": [1, 2, 3, 11, 15, 20, 26, 62, 64], "resolv": [1, 2, 3, 11, 18, 20], "leader": [1, 2, 3, 11, 12, 15, 20, 23, 26, 31, 43, 45, 46, 47], "followthi": [1, 2, 3, 11, 12, 20, 23, 31, 43, 45, 46, 47], "follow": [1, 2, 3, 4, 7, 11, 12, 15, 20, 23, 27, 31, 43, 45, 46, 47, 65], "chpl_rankchangeconvertlodtupletohid": 1, "tup": [1, 2, 7, 20, 65], "chpl_rankchangeconverthidtupletolod": 1, "downidxtoupidx": [1, 2], "downidx": [1, 2], "dsiserialwrit": [1, 2, 3, 45, 46, 47], "f": [1, 2, 3, 7, 45, 46, 47, 62, 64, 65], "throw": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 19, 20, 27, 31, 38, 45, 46, 47, 58, 62, 64, 65, 67], "dsimydist": [1, 2, 19, 45, 46, 47], "dsitargetlocal": [1, 2, 45, 46, 47], "ref": [1, 2, 3, 4, 7, 9, 10, 11, 12, 15, 19, 20, 23, 26, 27, 28, 31, 32, 33, 34, 37, 38, 41, 43, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 62, 64, 65], "dsihassinglelocalsubdomain": [1, 2, 3, 45, 46, 47], "dsilocalsubdomain": [1, 2, 3, 45, 46, 47], "loc": [1, 2, 3, 6, 11, 20, 27, 33, 45, 46, 47, 51, 52, 53, 55, 56], "local": [1, 2, 3, 7, 11, 19, 20, 22, 27, 28, 37, 45, 46, 47, 56, 57, 65], "isrankchangedomainview": [1, 19], "_getactualdomain": [1, 2], "dsidestroydom": [1, 2, 19], "parsaf": [1, 2, 15, 19, 20, 45, 46, 47], "dsilow": [1, 2, 19, 46], "dsihigh": [1, 2, 19, 46], "dsistrid": [1, 2, 19, 46], "dsialign": [1, 2, 19, 46], "dsifirst": [1, 2, 19, 46, 47], "dsilast": [1, 2, 19, 46, 47], "dsialignedlow": [1, 2, 19, 46], "dsialignedhigh": [1, 2, 19, 46], "dsiindexord": [1, 2, 19, 46], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 26, 27, 30, 31, 33, 37, 38, 43, 45, 46, 48, 51, 52, 53, 55, 58, 59, 62, 63, 64, 65, 67], "dsicreateindexbuff": [1, 2, 19], "dsigetreprivatizedata": [1, 2], "dsireprivat": [1, 2], "other": [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 19, 20, 27, 28, 30, 31, 32, 33, 37, 38, 46, 48, 51, 52, 53, 56, 58, 64, 65, 67], "reprivatizedata": [1, 2], "dsisupportsautolocalaccess": [1, 19, 45, 46, 47], "arrayviewrankchangearr": 1, "absbasearr": [1, 2, 3, 19, 45], "_dompid": [1, 2, 3], "dom": [1, 2, 3, 11, 13, 19, 20, 45, 46, 47, 49], "_arrpid": [1, 2, 3], "_arrinst": [1, 2, 3], "indexcach": [1, 2, 3], "ownsarrinst": [1, 2], "init": [1, 2, 3, 4, 5, 7, 12, 15, 19, 20, 23, 27, 28, 31, 33, 37, 38, 45, 46, 47, 56, 62, 64, 65], "isrankchangearrayview": [1, 19], "privdom": [1, 2, 3], "dsiserialread": [1, 2, 3, 45, 46], "dsidisplayrepresent": [1, 2, 3, 19, 46], "dsiaccess": [1, 2, 3, 45, 46, 47], "shouldreturnrvaluebyvalu": [1, 2, 3, 11, 45, 46, 47], "dsilocalaccess": [1, 2, 45], "dsiboundscheck": [1, 2, 3, 46], "shoulduseindexcach": [1, 2, 3], "buildindexcach": [1, 2, 3], "arr": [1, 2, 3, 11, 12, 13, 14, 15, 19, 20, 45, 46, 49], "dsigetbasedom": [1, 2, 3, 19, 45, 46], "_getactualarrai": [1, 2, 3], "_containsrcr": [1, 2, 3], "_getrcreview": [1, 2, 3], "dsielementinitializationcomplet": [1, 2, 3, 19, 45, 46], "dsidestroyarr": [1, 2, 3, 19, 45, 46], "deinitelt": [1, 2, 3, 11, 19, 45, 46], "doicanbulktransferrankchang": [1, 2, 3, 19, 46], "doibulktransferfromknown": [1, 2, 3, 46, 47], "destdom": [1, 2, 3, 46, 47], "srcclass": [1, 2, 3, 11, 46, 47], "srcdom": [1, 2, 3, 46, 47], "thi": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 27, 30, 31, 33, 37, 38, 43, 46, 47, 48, 51, 52, 53, 58, 62, 64, 65, 67], "doibulktransfertoknown": [1, 2, 3, 46, 47], "destclass": [1, 2, 3, 11, 46, 47], "chpl_rankchangeconvertidx": 1, "integr": [1, 2, 6, 7, 8, 9, 10, 11, 14, 15, 20, 31, 43, 46, 54, 65, 67], "chpl_rankchangeconvertidxhidtolod": 1, "chpl_rankchangeconvertdowntoup": 1, "dim": [1, 2, 11, 12, 20, 26, 46, 50], "uprank": 1, "chpl_rankchangeconvertdom": 1, "arrayviewreindexdist": 2, "arrayviewreindexdom": 2, "ownsdowndominst": 2, "fals": [2, 3, 4, 7, 9, 11, 12, 14, 15, 18, 19, 20, 27, 31, 35, 38, 44, 45, 46, 47, 51, 52, 53, 56, 59, 62, 63, 64, 65], "chpl_reindexconvertlodtupletohid": 2, "chpl_reindexconverthidtupletolod": 2, "isreindexdomainview": [2, 19], "arrayviewreindexarr": 2, "isreindexarrayview": [2, 19], "chpl_reindexconvertidxdim": 2, "chpl_reindexconvertidx": 2, "chpl_reindexconvertdom": 2, "chpl_reindexconvertdommaybeslic": 2, "chpl_debugserializeslic": 3, "chpl_serializeslic": 3, "arrayviewslicearr": 3, "chpl__rvfme": [3, 11, 19], "chpl__serial": [3, 7, 11, 20, 46, 65], "chpl__deseri": [3, 7, 11, 20, 46, 65], "data": [3, 7, 9, 11, 15, 19, 20, 26, 27, 32, 45, 46, 48, 59, 65], "isslicearrayview": [3, 19], "For": [4, 7, 11, 20, 59, 65], "exampl": [4, 7, 11, 20, 31, 59, 65], "code": [4, 7, 9, 65], "declar": [4, 19, 20], "an": [4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 19, 20, 27, 30, 31, 33, 37, 38, 48, 51, 52, 53, 58, 62, 64, 65, 67], "variabl": [4, 11, 27, 33, 37, 38, 46, 59, 63], "x": [4, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 26, 31, 32, 38, 41, 43, 44, 46, 49, 62, 64, 65, 66, 67], "store": [4, 11, 27, 38, 64, 65], "Such": 4, "without": [4, 5, 6, 8, 9, 12, 13, 14, 19, 20, 25, 30, 33, 37, 38, 48, 51, 52, 53, 58, 62, 64, 67], "initi": [4, 9, 18, 20, 27, 38, 55, 62, 64], "express": [4, 5, 6, 8, 9, 11, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "default": [4, 7, 9, 11, 15, 20, 27, 32, 37, 38, 65], "valu": [4, 7, 9, 11, 15, 19, 20, 27, 31, 32, 37, 38, 49, 62, 64, 65], "contain": [4, 7, 11, 19, 20, 31, 37, 62, 64, 65], "e": [4, 7, 11, 15, 20, 31, 40, 64, 65], "0": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 26, 27, 30, 31, 33, 37, 43, 46, 47, 48, 50, 51, 52, 53, 58, 59, 65, 67], "can": [4, 7, 11, 18, 19, 20, 25, 27, 31, 64, 65], "also": [4, 20, 27, 31], "y": [4, 7, 11, 43, 65], "1": [4, 5, 6, 7, 9, 11, 12, 19, 20, 27, 31, 45, 46, 47, 50, 65], "similarli": 4, "temporari": 4, "creat": [4, 7, 9, 19, 20, 27, 62, 64, 65], "cast": [4, 11, 15, 20, 31, 38, 43, 64], "one": [4, 7, 11, 19, 20, 27, 31, 38, 64, 65], "assign": [4, 11, 20, 38, 62, 64], "support": [4, 7, 11, 15, 20, 64, 65], "between": [4, 7, 9, 11, 20, 31, 62, 64, 65], "well": [4, 11], "2": [4, 5, 6, 8, 9, 12, 13, 14, 15, 19, 20, 30, 31, 32, 33, 37, 46, 48, 51, 52, 53, 58, 63, 67], "equival": [4, 20], "write": [4, 5, 6, 8, 9, 11, 12, 13, 14, 19, 30, 33, 37, 38, 48, 51, 52, 53, 58, 67], "read": [4, 5, 9, 11, 38], "current": [4, 7, 11, 20, 26, 31, 38, 64, 65], "oper": [4, 7, 8, 10, 11, 12, 15, 20, 26, 27, 31, 38, 41, 43, 58, 62, 64, 65, 67], "all": [4, 7, 11, 19, 20, 26, 27, 59, 62, 64, 65], "sign": [4, 11], "unsign": 4, "integ": [4, 7, 11, 27, 31, 65], "real": [4, 8, 15, 22, 23, 67], "note": [4, 11, 19, 20, 27], "ar": [4, 7, 11, 15, 19, 20, 26, 27, 31, 32, 33, 38, 59, 62, 64, 65], "The": [4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 19, 20, 27, 30, 31, 33, 37, 38, 46, 48, 52, 58, 59, 62, 63, 64, 65, 67], "list": [4, 19, 65], "each": [4, 7, 9, 11, 20, 31, 37, 43, 65], "rational": 4, "choic": [4, 9], "wa": [4, 19, 64], "strongli": 4, "influenc": 4, "c11": 4, "standard": [4, 26], "most": [4, 20], "method": [4, 7, 11, 18, 19, 20, 27, 38, 64, 65], "accept": [4, 20], "option": [4, 7, 59, 65], "argument": [4, 7, 9, 11, 20, 27, 38, 43, 46, 59, 62, 64, 65], "name": [4, 15, 27], "order": [4, 11, 15, 18, 20, 26, 31, 58], "memoryord": [4, 15, 58], "specifi": [4, 7, 9, 11, 20, 27, 31, 65], "constraint": 4, "relax": [4, 58], "acquir": [4, 58], "releas": [4, 7, 26, 58, 62, 65], "acqrel": [4, 58], "seqcst": [4, 58], "see": [4, 5, 6, 8, 9, 12, 13, 14, 19, 20, 30, 31, 32, 33, 37, 48, 51, 52, 53, 58, 67], "chapter": 4, "memory_consistency_model": 4, "particular": [4, 11, 19, 20], "non_sc_atom": 4, "more": [4, 7, 11, 20, 27, 31, 65], "inform": [4, 20, 27], "mean": [4, 9, 20], "memori": [4, 7, 20, 27, 59, 62, 64, 65], "unless": [4, 5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "paramet": [4, 11, 15, 20, 31], "implementor": 4, "Not": 4, "architectur": [4, 27], "implement": [4, 18, 19, 20, 27, 31, 38, 64], "mai": [4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 19, 20, 27, 30, 31, 33, 37, 46, 48, 51, 52, 53, 58, 65, 67], "In": [4, 18, 20, 26, 27, 62, 64, 65], "case": [4, 7, 11, 20, 62, 64, 65], "should": [4, 7, 11, 19, 20, 31, 65], "conserv": 4, "than": [4, 7, 20, 27, 31, 65], "chpl_atomic_thread_f": 4, "memory_ord": [4, 58], "atomic_f": 4, "memory_order_seq_cst": [4, 58], "atomicf": 4, "fenc": 4, "establish": [4, 31, 38], "non": [4, 7, 9, 20, 38, 64, 65], "chpl__processoratomictyp": [4, 5, 11, 27, 28, 45], "valtyp": [4, 23, 38, 61], "chpl__atomictyp": 4, "chpl_comm_ensure_progress": 4, "void": [4, 7, 10, 11, 15, 19, 30, 31, 34, 37, 39, 44, 46, 48, 49, 50, 54, 55, 65], "record": [4, 5, 7, 9, 11, 12, 15, 19, 20, 23, 27, 28, 30, 31, 33, 37, 38, 43, 44, 46, 48, 49, 50, 55, 56, 59, 61, 62, 64, 65], "atomicbool": 4, "writeserializ": [4, 7, 11, 15, 19, 20, 27, 38, 61, 62, 64, 65], "_v": [4, 61], "externt": 4, "init_help": 4, "val": [4, 11, 20, 23, 27, 38, 48, 65], "deinit": [4, 7, 11, 19, 20, 23, 27, 38, 45, 62, 64, 65], "return": [4, 7, 9, 10, 11, 15, 19, 20, 27, 31, 38, 43, 62, 64, 65], "new": [4, 7, 11, 20, 27, 31, 38, 46, 62, 64, 65], "exchang": 4, "origin": [4, 9, 11, 20, 31, 46], "compareexchang": 4, "expect": [4, 20, 27, 64], "desir": [4, 20], "onli": [4, 7, 19, 20, 27, 46, 59, 62, 64, 65], "equal": [4, 7, 11, 27, 65], "true": [4, 7, 9, 11, 15, 19, 20, 27, 31, 34, 38, 45, 46, 47, 51, 53, 64, 65], "otherwis": [4, 7, 11, 20, 31, 65], "updat": [4, 11, 64], "success": 4, "failur": 4, "compareexchangeweak": 4, "similar": 4, "except": [4, 5, 6, 8, 9, 12, 13, 14, 19, 20, 30, 33, 37, 48, 51, 52, 53, 58, 67], "function": [4, 7, 9, 11, 15, 19, 37, 62, 64, 65], "even": [4, 20], "happen": [4, 9], "could": [4, 11, 19], "weak": [4, 64], "version": [4, 5, 6, 7, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 50, 51, 52, 53, 58, 65, 67], "allow": [4, 9, 19, 20, 26, 31], "spurious": 4, "fail": [4, 20, 64], "when": [4, 7, 9, 11, 20, 27, 31, 38, 62, 64, 65], "alreadi": [4, 7, 20, 64, 65], "loop": [4, 26, 64], "offer": 4, "better": [4, 20], "perform": [4, 7, 20, 27, 38, 59, 65], "some": [4, 19, 20, 62, 64, 65], "platform": 4, "compareandswap": 4, "unstabl": [4, 7, 11, 15, 20, 27, 31, 32, 33, 38, 46, 59, 63, 65], "testandset": 4, "old": [4, 31], "clear": [4, 20], "waitfor": [4, 15], "wait": 4, "until": [4, 20, 38, 64], "yield": [4, 7, 11, 20, 46, 65], "run": [4, 7, 27, 65], "task": [4, 27, 64], "while": [4, 20, 31, 64], "serial": [4, 7, 10, 11, 15, 19, 20, 27, 38, 58, 62, 64, 65], "writer": [4, 7, 10, 11, 15, 19, 20, 27, 38, 58, 62, 64, 65], "t": [4, 7, 8, 9, 10, 11, 12, 15, 19, 20, 23, 25, 26, 31, 34, 38, 41, 43, 44, 58, 62, 64, 65, 67], "atomict": 4, "fetchadd": 4, "add": [4, 11, 15, 19, 20, 38], "result": [4, 7, 11, 20, 31, 50, 62, 64, 65], "defin": [4, 7, 11, 18, 19, 20, 31, 65], "fetchsub": 4, "subtract": 4, "from": [4, 7, 9, 11, 15, 19, 20, 27, 31, 38, 43, 62, 64, 65], "sub": [4, 15, 20], "fetchor": 4, "appli": [4, 7, 11, 20, 38, 65], "fetchand": 4, "fetchxor": 4, "xor": 4, "b": [4, 7, 9, 10, 11, 12, 15, 20, 22, 31, 35, 41, 43, 44, 58, 65], "copyright": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "2020": [5, 6, 8, 9, 12, 13, 14, 19, 30, 37, 48, 51, 52, 53, 58, 67], "2024": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "hewlett": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "packard": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "enterpris": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "develop": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "lp": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "2004": [5, 6, 8, 9, 12, 13, 14, 19, 30, 37, 48, 51, 52, 53, 58, 67], "2019": [5, 6, 8, 9, 12, 13, 14, 19, 30, 37, 48, 51, 52, 53, 58, 67], "crai": [5, 6, 8, 9, 12, 13, 14, 19, 27, 30, 37, 48, 51, 52, 53, 58, 67], "inc": [5, 6, 8, 9, 12, 13, 14, 19, 30, 37, 48, 51, 52, 53, 58, 67], "addit": [5, 6, 8, 9, 12, 13, 14, 19, 20, 30, 33, 37, 48, 51, 52, 53, 58, 67], "holder": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "indic": [5, 6, 7, 8, 9, 11, 12, 13, 14, 19, 20, 30, 33, 37, 43, 48, 51, 52, 53, 58, 65, 67], "within": [5, 6, 7, 8, 9, 10, 12, 13, 14, 19, 20, 27, 30, 31, 33, 37, 48, 51, 52, 53, 58, 65, 67], "entireti": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 52, 58, 67], "work": [5, 6, 7, 8, 9, 12, 13, 14, 18, 19, 30, 33, 37, 48, 52, 58, 65, 67], "licens": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "under": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "apach": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "you": [5, 6, 8, 9, 12, 13, 14, 19, 20, 30, 33, 37, 48, 51, 52, 53, 58, 67], "file": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "complianc": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "obtain": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "copi": [5, 6, 7, 8, 9, 11, 12, 13, 14, 19, 20, 30, 33, 37, 38, 48, 51, 52, 53, 58, 59, 62, 64, 65, 67], "http": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "www": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "org": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "requir": [5, 6, 8, 9, 12, 13, 14, 19, 26, 27, 30, 33, 37, 38, 48, 51, 52, 53, 58, 67], "applic": [5, 6, 7, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "law": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "agre": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "softwar": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "distribut": [5, 6, 8, 9, 11, 12, 13, 14, 19, 20, 30, 33, 37, 48, 51, 52, 53, 58, 67], "AS": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "basi": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "warranti": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "OR": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "condit": [5, 6, 7, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 65, 67], "OF": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "ani": [5, 6, 7, 8, 9, 12, 13, 14, 19, 20, 27, 30, 31, 33, 37, 48, 51, 52, 53, 58, 62, 64, 65, 67], "kind": [5, 6, 8, 9, 11, 12, 13, 14, 19, 27, 30, 33, 37, 48, 51, 52, 53, 58, 67], "either": [5, 6, 8, 9, 12, 13, 14, 19, 27, 30, 33, 37, 38, 48, 51, 52, 53, 58, 64, 65, 67], "impli": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "specif": [5, 6, 8, 9, 11, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "languag": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "govern": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "permiss": [5, 6, 8, 9, 12, 13, 14, 19, 30, 33, 37, 48, 51, 52, 53, 58, 67], "limit": [5, 6, 7, 8, 9, 12, 13, 14, 19, 27, 30, 33, 37, 48, 51, 52, 53, 58, 65, 67], "atomic_refcnt": 5, "_cnt": 5, "cnt": 5, "dec": 5, "64": [5, 6, 8, 15, 31, 41, 43, 44, 48, 54, 61, 67], "bytetyp": [6, 9], "uint": [6, 7, 9, 10, 15, 22, 31, 41, 43, 48, 49, 59, 65], "8": [6, 7, 9, 10, 15, 31, 48, 65], "buffertyp": [6, 7, 9, 65, 66], "c_ptr": [6, 7, 9, 10, 15, 30, 34, 39, 40, 46, 48, 49, 50, 54, 65], "locidtyp": 6, "chpl_nodeid": [6, 7, 9, 56, 65], "config": [6, 9, 11, 15, 18, 20, 27, 29, 31, 34, 35, 38, 43, 44, 45, 46, 47, 51, 53, 56, 59, 63, 65], "chpl_stringgrowthfactor": 6, "5": [6, 11, 20, 31], "chpl_string_comm_get": 6, "dest": 6, "src_loc_id": 6, "src_addr": 6, "len": [6, 63], "bufferalloc": 6, "requesteds": 6, "bufferrealloc": 6, "buf": [6, 19], "bufferensures": 6, "currents": 6, "buffercopyremot": 6, "buffercopyloc": 6, "bufferfre": 6, "buffercopi": 6, "off": [6, 15, 20, 31, 46], "buffermemcpi": 6, "dst": [6, 56], "src_loc": 6, "src": [6, 62, 64], "dst_off": 6, "src_off": 6, "buffermemcpyloc": 6, "buffermemmoveloc": 6, "buffergetbyt": 6, "bufferequ": 6, "buf1": 6, "off1": 6, "loc1": 6, "buf2": 6, "off2": 6, "loc2": 6, "bufferequalsloc": 6, "_strcmp": 6, "len1": 6, "len2": 6, "createborrowingbuff": [7, 65], "chang": [7, 11, 15, 20, 31, 46, 59, 63, 64, 65], "futur": [7, 11, 15, 20, 26, 31, 46, 59, 63, 64, 65], "which": [7, 11, 19, 20, 27, 65], "borrow": [7, 11, 15, 19, 22, 56, 57, 62, 64, 65], "intern": [7, 18, 19, 20, 31, 65], "buffer": [7, 9, 20, 65], "anoth": [7, 19, 62, 64, 65], "If": [7, 9, 11, 20, 26, 27, 31, 62, 64, 65], "freed": [7, 65], "befor": [7, 18, 20, 27, 62, 65], "access": [7, 20, 27, 37, 65], "undefin": [7, 20, 31, 65], "behavior": [7, 9, 20, 31, 32, 65], "A": [7, 11, 20, 27, 65], "chpl_c_string": [7, 10, 15, 44, 63, 65], "length": [7, 9, 19, 65, 66], "c_string": [7, 15, 65], "deprec": [7, 11, 15, 20, 31, 38, 55, 65], "pleas": [7, 11, 15, 55, 65], "variant": [7, 65], "take": [7, 9, 11, 20, 27, 31, 62, 64, 65], "c_ptrconst": [7, 9, 10, 15, 44, 59, 65], "c_char": [7, 9, 10, 15, 44, 48, 59, 65], "instead": [7, 11, 15, 19, 20, 55, 65], "strlen": [7, 65], "alloc": [7, 20, 59, 65], "exclud": [7, 20, 65], "termin": [7, 65], "null": [7, 65], "number": [7, 9, 11, 20, 27, 31, 54, 65], "chpl_createbyteswithliter": 7, "offset": [7, 9, 14, 19, 20, 31, 46, 65], "createadoptingbuff": [7, 65], "ownership": [7, 62, 64, 65], "deiniti": [7, 62, 64, 65], "": [7, 9, 11, 15, 20, 27, 31, 37, 38, 44, 64, 65, 67], "createcopyingbuff": [7, 65], "_byte": 7, "readdeserializ": [7, 11, 19, 20, 38, 62, 64], "bufflen": [7, 9, 65], "buffsiz": [7, 9, 65], "buff": [7, 9, 65], "nil": [7, 15, 20, 23, 27, 31, 46, 62, 64, 65], "isown": [7, 38, 48, 65], "locale_id": [7, 9, 65], "deseri": [7, 10, 11, 19, 20, 38, 62, 64], "reader": [7, 10, 11, 19, 20, 38, 62, 64], "ingbuff": [7, 65], "byteindic": [7, 65], "numbyt": [7, 65], "item": [7, 65], "byteindex": [7, 9, 65], "tobyt": [7, 65], "join": [7, 65], "istupl": [7, 9, 20, 26, 65], "ir": [7, 9, 11, 15, 26, 65], "_iteratorrecord": [7, 9, 11, 15, 20, 26, 65], "rang": [7, 9, 10, 11, 12, 19, 20, 22, 26, 27, 31, 46, 65], "get": [7, 27, 33, 65], "execut": [7, 20, 27, 65], "shallow": [7, 65], "deep": [7, 65], "c_str": [7, 65], "ha": [7, 11, 15, 19, 20, 26, 27, 31, 59, 64, 65], "move": [7, 11, 26, 64, 65], "ctype": [7, 15, 50, 65], "share": [7, 15, 20, 62, 64, 65], "call": [7, 9, 11, 20, 25, 31, 37, 62, 64, 65], "safe": [7, 15, 64, 65], "whose": [7, 31, 65], "home": [7, 65], "properti": [7, 38, 65], "enforc": [7, 65], "remot": [7, 33, 37, 65], "program": [7, 20, 26, 27, 59, 65], "halt": [7, 20, 31, 65], "mybyt": 7, "hello": [7, 65], "differentlocal": 7, "printf": [7, 65], "point": [7, 62, 65], "underli": [7, 11, 20, 65], "valid": [7, 9, 20, 65], "same": [7, 11, 20, 27, 59, 64, 65], "ascii": 7, "charact": [7, 9, 65], "singl": [7, 11, 15, 20, 38, 65], "th": [7, 20, 31, 65], "over": [7, 9, 11, 19, 20, 31, 62, 64, 65], "chpl_byte": [7, 65], "r": [7, 9, 10, 11, 20, 31, 46, 50, 65], "slice": [7, 20, 31, 65], "empti": [7, 20, 23, 31, 38, 62, 65], "complet": [7, 38, 65], "insid": [7, 65], "compil": [7, 11, 15, 20, 26, 31, 62, 64, 65], "check": [7, 20, 31, 65], "fast": [7, 11, 20, 26, 65], "disabl": [7, 39, 65], "made": [7, 65], "zero": [7, 31, 64, 65], "isempti": [7, 11, 20, 31, 65], "startswith": [7, 65], "pattern": [7, 65], "start": [7, 9, 31, 62, 64, 65], "given": [7, 20, 31, 59, 65], "match": [7, 59, 64, 65], "against": [7, 65], "begin": [7, 9, 65], "endswith": [7, 65], "end": [7, 20, 31, 39, 59, 65], "find": [7, 11, 47, 65], "whole": [7, 65], "first": [7, 9, 10, 11, 15, 20, 31, 37, 45, 65], "occurr": [7, 10, 65], "left": [7, 20], "rfind": [7, 65], "right": [7, 19, 20, 38, 65], "count": [7, 9, 11, 20, 27, 31, 64, 65], "substr": [7, 10, 65], "time": [7, 11, 62, 64, 65], "occur": [7, 11, 20, 65], "replac": [7, 9, 15, 65], "make": [7, 19, 20, 26, 64, 65], "less": [7, 11, 65], "up": [7, 20, 27, 65], "split": [7, 65], "sep": [7, 9, 65], "maxsplit": [7, 9, 65], "ignoreempti": [7, 9, 65], "delimit": [7, 65], "break": [7, 65], "chunk": [7, 65], "neg": [7, 20, 31, 65], "abov": [7, 9, 11, 20, 65], "whitespac": [7, 65], "maximum": [7, 27], "concaten": [7, 65], "pass": [7, 9, 11, 62, 64, 65], "receiv": [7, 20, 65], "insert": [7, 65], "them": [7, 27, 65], "10": [7, 11, 20, 31, 65], "d": [7, 11, 19, 20, 31, 32, 46, 47, 65], "writeln": [7, 31, 65], "print": [7, 18, 59, 65], "myjoinedtupl": [7, 65], "myjoinedarrai": [7, 65], "arrai": [7, 9, 11, 15, 19, 20, 31, 46, 59, 65], "tupl": [7, 9, 11, 19, 20, 31, 43, 65], "strip": [7, 65], "char": [7, 9, 65], "n": [7, 9, 15, 20, 65], "lead": [7, 9, 26, 65], "trail": [7, 9, 65], "set": [7, 20, 27, 31, 38, 43, 62], "remov": [7, 19, 20, 31, 65], "appropri": [7, 65], "partit": [7, 65], "3": [7, 9, 11, 20, 31, 65], "separ": 7, "consist": [7, 65], "section": [7, 27, 28, 65], "after": [7, 20, 62, 64, 65], "found": [7, 11, 20, 27, 65], "two": [7, 31, 43, 62, 64, 65], "dedent": [7, 65], "column": [7, 9, 65], "ignorefirst": [7, 9, 65], "subject": [7, 11, 20, 46, 59, 63, 65], "indent": [7, 65], "line": [7, 65], "multi": [7, 65], "sourc": [7, 50, 62, 64, 65], "output": [7, 31, 65], "determin": [7, 9, 31, 38, 65], "level": [7, 65], "common": [7, 19, 65], "across": [7, 20, 65], "tab": [7, 65], "space": [7, 20, 65], "consid": [7, 20, 65], "treat": [7, 65], "so": [7, 19, 20, 25, 31, 62, 65], "infer": [7, 38, 65], "ignor": [7, 27, 65], "decod": [7, 9], "polici": [7, 9, 15, 19, 65], "decodepolici": [7, 9, 65], "strict": [7, 9, 65], "utf": [7, 9, 65], "malform": [7, 9, 65], "action": [7, 65], "rais": [7, 9, 65], "error": [7, 9, 11, 15, 20, 31, 40, 62, 64, 65], "drop": [7, 9, 64, 65], "silent": [7, 9, 65], "escap": [7, 9, 65], "illeg": [7, 9, 65], "privat": [7, 19, 31, 64, 65], "codepoint": [7, 9, 65], "decodeerror": [7, 65], "isupp": [7, 65], "uppercas": [7, 65], "z": [7, 65], "uncas": [7, 65], "letter": [7, 65], "extend": 7, "decim": 7, "larger": 7, "127": 7, "least": [7, 65], "lowercas": [7, 65], "islow": [7, 65], "isspac": [7, 65], "v": [7, 31, 37, 65], "isalpha": [7, 65], "alphabet": [7, 65], "za": [7, 65], "isdigit": [7, 65], "digit": [7, 65], "9": [7, 20, 31, 65], "isalnum": [7, 65], "alphanumer": [7, 65], "z0": [7, 65], "isprint": [7, 65], "printabl": [7, 65], "istitl": [7, 65], "preced": [7, 65], "describ": [7, 11, 20, 65], "met": [7, 65], "tolow": [7, 65], "convert": [7, 11, 65], "counterpart": [7, 65], "remain": [7, 20, 59], "untouch": 7, "toupper": [7, 65], "totitl": [7, 65], "titl": 7, "capit": [7, 65], "lh": [7, 9, 12, 15, 19, 20, 31, 38, 58, 62, 64, 65], "append": [7, 9, 27, 65], "appendbytevalu": 7, "tohexadecim": 7, "resulttyp": [7, 31], "comput": [7, 20, 27, 37, 46], "hexadecim": 7, "represent": 7, "rhs_c": 7, "s0": [7, 9, 10, 65], "s1": [7, 9, 10, 31, 63, 65], "repeat": [7, 65], "commut": [7, 65], "hash": [7, 20, 22, 65], "_real_cast_help": [8, 67], "isimag": [8, 67], "chpl_anyr": [8, 10, 15, 67], "chpl_anyimag": [8, 10, 15, 67], "chpl_anycomplex": [8, 10, 11, 15, 67], "chpl_short_string_s": 9, "c_int": [9, 50], "chpl__inplacebuff": 9, "chpl__getinplacebufferdata": 9, "chpl__getinplacebufferdataforwrit": 9, "__serializehelp": 9, "shortdata": 9, "cachednumcodepoint": [9, 65], "enum": [9, 11, 15, 22, 23, 27, 31, 37, 46, 58], "what": [9, 20], "invalid": [9, 65], "0xxx": 9, "0xdcxx": 9, "constant": [9, 11, 15, 23, 27, 31, 37, 46, 58], "encodepolici": [9, 65], "unescap": [9, 65], "utf8": [9, 65], "encod": [9, 65], "directli": [9, 62, 64, 65], "recov": [9, 65], "showstringbytesinitdeprwarn": 9, "surrogateescap": 9, "0xdc": 9, "getcstr": 9, "decodebytebuff": 9, "factori": [9, 11], "c": [9, 10, 20, 65], "It": [9, 11, 19, 20, 27, 31, 62, 64], "try": [9, 11], "out": [9, 15, 20, 23, 25, 56, 62, 64], "sequenc": [9, 31, 65], "doesn": 9, "correspond": [9, 11, 20, 27, 43, 59, 65], "document": 9, "differ": [9, 27, 31, 65], "decodehelp": 9, "allowesc": 9, "wrapper": [9, 38], "qio_decode_char_buf": 9, "qio_decode_char_buf_esc": 9, "errorcod": 9, "cp": [9, 48], "nbyte": 9, "arg": [9, 11, 15, 18, 20, 25, 26, 27, 31, 40, 44, 49, 51, 52, 53, 55], "decoderet": 9, "chr": 9, "initwithborrowedbuff": 9, "initwithownedbuff": 9, "initwithnewbuff": 9, "getview": 9, "checkmisalign": 9, "getslic": 9, "getindextyp": 9, "doreplac": 9, "needl": [9, 10], "dosplithelp": 9, "localx": 9, "localsep": 9, "splitcount": [9, 65], "dosplit": 9, "dosplitwsnoenchelp": 9, "nosplit": [9, 65], "limitsplit": [9, 65], "iend": [9, 65], "dosplitwsnoenc": 9, "dosearchnoenc": 9, "region": 9, "fromleft": [9, 65], "startsendswith": 9, "ishomogeneoustupl": [9, 20, 43], "dojoiniter": 9, "dojoin": 9, "isarrai": [9, 19], "dopartit": 9, "doded": 9, "resizebufferforappend": 9, "doappend": 9, "doappendsomebyt": 9, "bytecarr": 9, "c_arrai": 9, "ncodepoint": 9, "resizebuff": 9, "reinitwithnewbuff": 9, "numcodepoint": [9, 65, 66], "reinitwithownedbuff": 9, "doassign": 9, "domultipli": 9, "doconcat": 9, "dostripnoenc": 9, "doeq": 9, "t1": [9, 20, 43], "t2": [9, 20, 43], "dolessthan": 9, "dogreaterthan": 9, "dolessthanoreq": 9, "dogreaterthanoreq": 9, "gethash": 9, "countnumcodepoint": 9, "isinitialbyt": 9, "multibyt": [9, 65], "_findstartofnextcodepointfrombyt": 9, "includ": [9, 19, 20, 64, 65], "_cleanupfornumericcast": 9, "byte_isascii": 9, "byte_iswhitespac": 9, "byte_isprint": 9, "byte_isalpha": 9, "byte_isupp": 9, "byte_islow": 9, "byte_isdigit": 9, "byte_isalnum": 9, "byte_toupp": 9, "byte_tolow": 9, "chpl__initcopi": [10, 11, 15, 38, 55, 62], "definedconst": [10, 11, 15, 19, 20, 38, 55, 62], "chpl__autocopi": [10, 11, 15, 38, 62], "_niltyp": [10, 15, 62, 64], "_string_contain": [10, 65], "indexof": 10, "string_index_of": 10, "haystack": 10, "chpl_free_c_str": 10, "numprivateobject": 11, "nullpid": [11, 19], "debugbulktransf": 11, "usebulktransf": 11, "usebulktransferstrid": 11, "usebulkptrtransf": 11, "disableconstdomainopt": 11, "debugoptimizedswap": [11, 46], "podvalaccess": 11, "usebulktransferdist": 11, "arrayasvecgrowthfactor": [11, 19], "debugarrayasvec": 11, "logdistarreltaccess": 11, "logallarreltaccess": 11, "_isprivat": 11, "_newprivatizedclass": 11, "_freeprivatizedclass": 11, "pid": [11, 19], "rootclass": [11, 15, 22], "_reprivat": 11, "_makeindextupl": 11, "_tupl": [11, 15, 20, 26, 31, 43, 46], "concept": 11, "expand": [11, 20, 31], "_newarrai": 11, "_getdistribut": 11, "chpl__buildarrayruntimetyp": 11, "chpl__convertruntimetypetovalu": [11, 20], "isnoinit": [11, 20], "chpl__convertvaluetoruntimetyp": [11, 20], "chpl_warn_domain_liter": 11, "unset": [11, 43], "liter": [11, 31], "detect": 11, "dure": [11, 27, 64], "pars": 11, "expr": 11, "through": [11, 20], "variou": [11, 27], "phase": 11, "regular": [11, 27], "would": [11, 20], "nice": 11, "second": 11, "handl": [11, 20], "multipl": [11, 19, 64, 65], "howev": [11, 20, 27], "possibl": [11, 20], "atm": 11, "due": [11, 19, 27, 32], "queri": [11, 20, 27], "arrayliterallowbound": 11, "defaultlowbound": [11, 15], "capturediteratorlowbound": 11, "chpl__buildarrayexpr": 11, "elem": 11, "k": [11, 25, 67], "chpl_computeunifiedtyp": 11, "chpl_computeunifiedtypehelp": 11, "j": [11, 46], "chpl__buildassociativearrayexpr": 11, "chpl_increfcountsfordomainsinarrayelttyp": 11, "basearr": [11, 19, 20], "chpl_decrefcountsfordomainsinarrayelttyp": 11, "chpl__distribut": 11, "chpl__isarrayview": 11, "chpl__getactualarrai": 11, "chpl__isdomainview": 11, "chpl__getactualdomain": 11, "domaintyp": [11, 20], "chpl__distributionfromdomainruntimetyp": 11, "rtt": [11, 20], "chpl__elttypefromarrayruntimetyp": 11, "chpl__instancetypefromarrayruntimetyp": 11, "chpl__instancetypefromdomainruntimetyp": 11, "chpl__buildindextyp": 11, "chpl__checkretelttypematch": 11, "chpl__checkoutelttypematch": 11, "dmap": [11, 46], "avail": [11, 20, 26, 27], "chpl__builddisttyp": 11, "issubtyp": [11, 15, 19, 20, 26, 62, 64], "_to_borrow": [11, 15, 19], "chpl__builddistvalu": 11, "own": [11, 15, 20, 23, 31, 33, 37, 40, 62, 64], "chpl__builddistdmapvalu": 11, "d1": [11, 20], "_distribut": [11, 15, 19], "d2": [11, 20], "chpl_defaultcompar": [11, 20], "_arrai": [11, 22], "_pid": [11, 19, 20, 49], "_instanc": [11, 19, 20, 27, 49, 57], "_unown": [11, 19, 20, 49], "chpl__promotiontyp": [11, 20, 31], "_valu": [11, 12, 19, 20, 27], "element": [11, 20, 31], "repres": [11, 20, 27, 31, 59, 65], "multidimension": [11, 20], "per": [11, 20, 37], "dimens": [11, 20, 31], "fullidxtyp": [11, 20], "dimension": 11, "associ": [11, 15, 20, 27], "_dom": 11, "hasunitstrid": [11, 19, 20, 31, 46], "hasposnegunitstrid": [11, 19, 20, 31], "isspars": [11, 19, 20], "isassoci": [11, 19, 20], "dens": [11, 20], "rectangular": [11, 20], "irregular": [11, 20], "checkaccess": 11, "checkslic": 11, "chpl__istupleofrang": [11, 20], "localaccess": 11, "_validrankchangearg": [11, 20], "bound": [11, 19, 20, 31, 46], "spars": [11, 19, 20], "parent": [11, 20, 27], "boundari": [11, 20], "checkrankchang": 11, "localslic": [11, 20], "trycopi": 11, "chpl__localslicedefaultaritharrhelp": 11, "sizea": [11, 12, 20, 31], "chpl_checkarrargdom": 11, "formaldom": 11, "runtimecheck": 11, "reindex": 11, "newdomain": 11, "isrectangular": [11, 12, 19, 20, 49], "view": [11, 20], "must": [11, 20, 64], "6": [11, 20], "15": 11, "rea": 11, "newdim": 11, "implicitli": [11, 26], "4": [11, 31], "13": 11, "14": 11, "16": [11, 15, 23, 31], "deserializefrom": [11, 19, 20, 38], "irv": [11, 19], "displayrepresent": [11, 19, 20, 31], "targetlocal": [11, 19, 20], "been": [11, 15, 20, 27, 64], "hassinglelocalsubdomain": [11, 20], "subdomain": [11, 20], "localsubdomain": [11, 20], "here": [11, 19, 20, 27], "place": [11, 19, 20], "chpl__isdense1darrai": 11, "last": [11, 20, 31, 38, 64], "whether": 11, "lexicograph": 11, "earliest": 11, "unspecifi": 11, "lowbound": [11, 20, 31], "w": [11, 15, 31], "low": [11, 20, 31, 65], "min": [11, 32, 43], "shape": [11, 20], "assum": [11, 20, 62, 64, 65], "unsupport": [11, 20], "_scan": 11, "op": [11, 15, 19, 32, 38, 46], "reflect": [11, 26], "canresolvemethod": 11, "doiscan": [11, 46], "iteratoryieldslocalel": [11, 20], "chpl_isnondistributedarrai": 11, "isirregular": [11, 20], "g": [11, 20, 31], "_do_destroy_arr": 11, "_do_destroy_arrai": 11, "_deinitelementsisparallel": 11, "_deinitel": [11, 45], "format": 11, "io": [11, 18, 25, 46], "formattedio": 11, "et": 11, "iscollapseddimens": 11, "chpl__countrang": 11, "lack": 11, "test": 11, "chpl__serializeassign": 11, "chpl__compatibleforbulktransf": 11, "_telt": 11, "chpl__supporteddatatypeforbulktransf": 11, "sync": [11, 15, 38], "checkarrayshapesuponassign": 11, "forswap": 11, "chpl__protoslic": [11, 12], "initcopi": 11, "chpl__uncheckedarraytransf": 11, "chpl__initafterbulktransf": 11, "chpl__compatibleforwideptrbulktransf": 11, "chpl__bulktransferptrarrai": 11, "chpl__bulktransferarrai": 11, "ad": [11, 20, 31], "bd": 11, "destview": 11, "srcview": 11, "chpl__transferarrai": 11, "alwaysseri": 11, "istupletyp": [11, 43], "iscoerc": [11, 20, 43], "_desync": 11, "_syncvar": [11, 38], "_singlevar": [11, 38], "isatomictyp": [11, 38], "Or": 11, "we": [11, 19, 20, 31, 65], "explicitli": [11, 20, 26], "overload": [11, 15, 19, 20, 31], "sinc": [11, 20], "fix": [11, 20, 27], "issynctyp": 11, "direct": [11, 31, 38], "modifi": [11, 20, 38], "issingletyp": 11, "writeef": [11, 38], "explicit": [11, 15, 38], "xd": 11, "yd": 11, "reshap": 11, "linear": 11, "localizeconstdomain": 11, "debuglocalizedconstdomain": 11, "chpl__coercehelp": 11, "dsttype": [11, 15, 20], "chpl__coercecopi": [11, 20], "chpl__coercemov": [11, 20], "_domain": [11, 20], "desyncelttyp": 11, "chpl__unref": [11, 15, 43], "chpl_iteratorhasdomainshap": [11, 26], "chpl_iteratorhasrangeshap": [11, 26], "chpl_iteratorfromforexpr": [11, 26], "chpl__initcopy_shapehelp": 11, "chpl__throwerroruncheck": 11, "chpl_arraytoptrerrorhelp": 11, "chpl_arraytoptr": 11, "casttovoidstar": 11, "chpl_arraytoptrconst": 11, "chpl__createprotoslic": 12, "slicingexpr": 12, "chpl__createprotosliceargcheck": 12, "chpl__createconstprotoslic": 12, "chpl__ave_exprcanbeprotoslic": 12, "base": [12, 19, 20, 26, 31, 38], "idxexpr": 12, "chpl__ave_protoslicessupportassign": 12, "isconst": 12, "ptrtoarr": 12, "slicingexprtyp": 12, "isrankchang": 12, "domorrang": 12, "isprotoslic": 12, "chpl_srcaggregatorfor": 13, "isdomain": 13, "chpl_dstaggregatorfor": 13, "chpl__arrayiteratoryieldslocalel": 13, "chpl__staticautolocalcheck": 14, "accessbas": 14, "loopdomain": 14, "hasoffset": 14, "chpl__dynamicautolocalcheck": 14, "chpl__ala_offsetcheck": 14, "chpl__isarrayviewwithdifferentdist": 14, "submodul": [15, 65], "c_fn_ptr": 15, "chpl_c_fn_ptr": [15, 44], "procedur": [15, 31], "rootlocaleiniti": 15, "enablepostfixbangcheck": 15, "chpl_config_has_valu": 15, "module_nam": 15, "chpl_config_get_valu": 15, "chpl_stringminallocs": 15, "warnmaximalrang": 15, "chpl_unstableinternalsymbolfortest": 15, "assocparsafedefault": [15, 20], "sassocparsafedefault": 15, "turn": [15, 31], "par": 15, "warn": [15, 20, 31], "just": 15, "like": [15, 20, 26, 27], "snoparsafewarn": 15, "noparsafewarn": 15, "suppress": [15, 20], "about": [15, 20, 27, 32], "miss": 15, "mode": [15, 37], "_object": 15, "object": [15, 62, 64, 65], "abstract": [15, 27], "root": 15, "fcfsusepointerimplement": 15, "32": [15, 27, 31, 42, 44, 51, 53, 63, 65], "imag": [15, 22], "complex": [15, 22, 43], "128": [15, 43], "opaqu": 15, "noth": [15, 31, 45], "isuint": [15, 31], "inlin": 15, "do": [15, 20, 27, 31, 38, 46, 64], "_intexphelp": 15, "_exphelp": 15, "_expbasehelp": 15, "_basepowertwo": 15, "_canoptimizeexp": 15, "istru": 15, "bitshiftcheck": 15, "postfix": [15, 62, 64], "chpl_statementlevelsymbol": 15, "_cond_test": [15, 65], "_cond_invalid": 15, "isnonneg": 15, "re": [15, 19, 46], "im": 15, "_i2r": 15, "_r2i": 15, "arrayinit": 15, "heuristicinit": 15, "noinit": 15, "serialinit": 15, "parallelinit": 15, "gpuinit": 15, "chpl_defaultarrayinitmethod": 15, "chpl_defaultgpuarrayinitmethod": 15, "chpl_gpu_mem_strategi": 15, "array_on_devic": 15, "els": [15, 19, 31, 45, 46, 64], "chpl_arrayinitmethodruntimeselect": 15, "chpl_setarrayinitmethod": 15, "initmethod": 15, "chpl_getarrayinitmethod": 15, "chpl_shoulddogpuinit": 15, "init_elts_method": 15, "init_elt": 15, "lo": [15, 46], "chpl_mem_descint_t": [15, 54], "chpl_ddataresizepolici": [15, 19], "normalinit": [15, 19], "skipinit": 15, "skipinitbutclearmem": 15, "_ddata": [15, 20, 23, 45, 46], "chpl_isddata": 15, "_ddata_shift": 15, "shift": [15, 31], "_ddata_sizeof_el": 15, "c_size_t": [15, 50, 51, 52, 53, 55, 59], "_ddata_allocate_noinit": 15, "callpostalloc": [15, 46], "subloc": [15, 27, 51, 53, 55], "c_sublocid_non": [15, 27], "haltonoom": 15, "_try_ddata_alloc": 15, "_ddata_allocate_noinit_gpu_shar": 15, "_ddata_allocate_postalloc": 15, "_ddata_alloc": 15, "_ddata_supports_realloc": 15, "oldddata": 15, "oldsiz": [15, 19, 23, 45], "newsiz": [15, 19, 23, 45], "_ddata_fil": 15, "ddata": 15, "hi": [15, 46], "fill": [15, 20], "_ddata_realloc": 15, "_ddata_fre": 15, "_ref": 15, "_val": 15, "chpl_rt_reset_task_spawn": 15, "chpl_resettaskspawn": 15, "numtask": [15, 46], "useatomictaskcnt": 15, "defaultatomictaskcount": 15, "commdiagstrackendcount": 15, "endcountdiagsmanag": 15, "contextmanag": [15, 20], "taskinfo": 15, "chpl_task_infochapel_t": [15, 39, 40], "prevdiagsdisabledv": 15, "entercontext": [15, 20], "exitcontext": [15, 20], "unus": 15, "_endcountbas": [15, 40], "chpl_taskerror": 15, "_endcount": 15, "ityp": 15, "tasktyp": 15, "taskcnt": 15, "_endcountalloc": 15, "forcelocaltyp": 15, "_remoteendcounttyp": [15, 39], "_endcountfre": 15, "_upendcount": 15, "countrunningtask": 15, "chpl_comm_unordered_task_f": 15, "chpl_comm_task_cr": 15, "chpl_comm_task_end": 15, "chpl_after_forall_f": 15, "_downendcount": 15, "err": [15, 20, 40], "_waitendcount": 15, "_updynamicendcount": 15, "_downdynamicendcount": 15, "chpl_waitdynamicendcount": 15, "transmut": 15, "routin": [15, 20], "signatur": [15, 19], "chpl_typesupportsprimitivecast": 15, "chpl_checkcastabstractenumerror": 15, "enumtyp": 15, "float": 15, "chpl_castunmanagederror": 15, "typestr": 15, "_to_unmanag": 15, "_to_nonnil": [15, 62], "ispropersubtyp": [15, 62, 64], "chpl__autodestroi": [15, 38, 62, 64], "chpl__delet": 15, "func": [15, 49], "constructor": 15, "syntax": 15, "rettyp": 15, "isiter": [15, 62, 64], "ic": [15, 26], "_iteratorclass": [15, 26], "not_an_iter": 15, "isnumerictyp": [15, 20], "isintegralorrealtyp": 15, "swap": [15, 38, 62, 64], "isgenerictyp": 15, "isnilableclasstyp": 15, "isnonnilableclasstyp": 15, "isborrowedorunmanagedclasstyp": 15, "qio_style_element_str": 15, "qio_style_element_complex": 15, "qio_style_element_arrai": 15, "qio_style_element_aggreg": 15, "qio_style_element_tupl": 15, "qio_style_element_byte_ord": 15, "qio_style_element_is_native_byte_ord": 15, "qio_style_element_skip_unknown_field": 15, "qio_array_format_spac": 15, "qio_array_format_chpl": 15, "qio_array_format_json": 15, "qio_aggregate_format_brac": 15, "qio_aggregate_format_chpl": 15, "qio_aggregate_format_json": 15, "qio_tuple_format_chpl": 15, "qio_tuple_format_spac": 15, "qio_tuple_format_json": 15, "chpl_moduledeinit": 15, "modulenam": [15, 44], "deinitfun": [15, 44], "prevmodul": 15, "chpl_moduledeinitfun": 15, "chpl_checklegaltypefieldaccessor": 15, "thisarg": 15, "fieldtyp": 15, "fieldnam": 15, "_to_nil": 15, "chpl_checkborrowifvar": 15, "iswhil": 15, "_removed_cast": 15, "chpl_supportsboundedcoforal": 15, "zipper": 15, "chpl_boundedcoforalls": 15, "chpl_field_neq": 15, "chpl_field_": 15, "gener": [15, 19, 20, 27, 31, 32, 43], "comparison": 15, "field": 15, "isarraytyp": 15, "chpl_field_lt": 15, "chpl_field_gt": 15, "chpl__bothloc": 15, "yieldexecut": [16, 55], "chpl__verifytypecontext": 17, "debug": 18, "around": 18, "problem": 18, "resolut": 18, "commonli": [18, 27], "stdout": 18, "facil": 18, "chpl": 18, "chpl_debug_stringifi": 18, "chpl_debug_writeln": 18, "chpl__testparflag": 18, "chpl__testparon": 18, "chpl__testparstart": 18, "chpl__testparstop": 18, "chpl__testpar": 18, "chpl__testparwriteln": 18, "_do_destroi": [19, 20], "clone": [19, 32], "newrectangulardom": 19, "stridekind": [19, 20, 31, 46], "boundkind": [19, 20, 31, 46], "both": [19, 20, 31, 46], "newassociativedom": 19, "newsparsedom": 19, "idxtolocal": 19, "_doms_containing_dist": 19, "_domslock": 19, "chpl_localspinlock": [19, 28, 32, 45, 46], "_free_when_no_dom": 19, "remove_dom": 19, "basedom": 19, "add_dom": 19, "dsinewassociativedom": [19, 46], "dsinewsparsedom": [19, 46], "dsirequiresprivat": 19, "trackdomain": [19, 46], "dsitrackdomain": [19, 46], "singleton": [19, 46], "_arrs_head": 19, "_arrs_containing_dom": 19, "_arrslock": 19, "_free_when_no_arr": 19, "_arr": 19, "dnserror": 19, "trackarrai": 19, "remove_arr": 19, "rmfromlist": 19, "add_arr": 19, "lock": [19, 28], "addtolist": 19, "remove_containing_arr": 19, "add_containing_arr": 19, "linksdistribut": [19, 45, 46, 47], "dsilinksdistribut": [19, 45, 46, 47], "dsisupportsoffsetautolocalaccess": 19, "dsiautolocalaccessoffsetcheck": 19, "dsiiteratoryieldslocalel": [19, 46], "isdefaultrectangular": [19, 20, 46], "isslicedomainview": 19, "getbasearrtyp": 19, "dsiadd": [19, 45, 47], "dsiremov": [19, 45, 47], "basesparsedomimpl": [19, 47], "basesparsedom": [19, 20], "nnzdom": [19, 47], "dsibulkadd": 19, "datasort": [19, 20, 47], "isuniqu": [19, 20, 47], "addon": [19, 20, 47], "nillocal": [19, 20, 27, 47], "dsibulkaddnopreserveind": 19, "bulkadd_help": [19, 47], "indsdom": [19, 47], "_grow": 19, "factor": 19, "grow": [19, 23], "necessari": 19, "_shrink": 19, "shrink": 19, "_bulkgrow": 19, "_countdupl": 19, "bulkadd_prepareind": 19, "cmp": 19, "__getactualinsertpt": 19, "dsiclear": [19, 45, 47], "sparseindexbuff": [19, 20], "obj": [19, 30, 62, 64], "bufdom": 19, "cur": 19, "commit": [19, 20], "parentdom": [19, 20, 47], "nnz": 19, "getnnz": [19, 47], "boundscheck": 19, "candodirectassign": 19, "dsidim": [19, 46], "dsinumindic": [19, 45, 46], "dsisiz": 19, "baseassociativedom": [19, 20, 45], "prev": 19, "next": 19, "_deceltrefcount": 19, "_resizepolici": 19, "dsistaticfastfollowcheck": 19, "leadtyp": 19, "chpl_setresizepolici": 19, "chpl_iselementtypedefaultinitializ": 19, "chpl_iselementtypenonnilableclass": 19, "chpl_unsafeassignisclasselementnil": [19, 46], "manag": [19, 20, 27, 46, 62, 64], "chpl_unsafeassignhaltuninitializedel": 19, "dsielementdeinitializationcomplet": [19, 45, 46], "dsirealloc": [19, 46], "dsipostrealloc": [19, 46], "_purg": 19, "_resiz": 19, "old_map": 19, "sparseshiftarrai": 19, "shiftrang": 19, "initrang": 19, "sparseshiftarrayback": 19, "sparsebulkshiftarrai": 19, "shiftmap": 19, "oldnnz": 19, "_defaultinitslot": [19, 45], "slot": [19, 23, 45], "_deinitslot": [19, 45], "_startrehash": [19, 45], "_finishrehash": [19, 45], "_moveelementduringrehash": [19, 45], "oldslot": [19, 23, 45], "newslot": [19, 23, 45], "dsisupportsalignedfollow": 19, "deceltcountsifneed": 19, "subclass": 19, "everi": 19, "put": 19, "reli": [19, 25], "being": [19, 26], "refer": [19, 62, 64], "instanti": 19, "basearroverrectangulardom": 19, "overridden": 19, "look": 19, "wai": [19, 64], "narrow": 19, "those": [19, 20, 59], "box": 19, "baserectangulararr": [19, 46], "basesparsearr": 19, "veri": [19, 20, 28], "basic": [19, 27], "have": [19, 20, 27, 31], "flexibl": 19, "defaultsparsedom": [19, 47], "basesparsearrimpl": [19, 47], "helper": 19, "go": 19, "_delete_dist": 19, "_delete_dom": 19, "_delete_arr": 19, "chpl_assigndomainwithgetsetindic": 19, "chpl_assigndomainwithindsitersafeforremov": 19, "defaulthashtableresizethreshold": [20, 23], "fraction": 20, "how": [20, 27], "full": [20, 23, 38], "request": [20, 26], "map": [20, 65], "resiz": [20, 23], "50": 20, "exclus": [20, 32], "lower": 20, "potenti": [20, 65], "improv": [20, 27], "tabl": [20, 23, 45], "fewer": 20, "collis": 20, "higher": 20, "help": 20, "save": 20, "impact": [20, 62, 64], "structur": 20, "nonegativestridewarn": 20, "snonegativestridewarn": 20, "_getdomain": 20, "tupleofrangesslic": 20, "chpl__builddomainruntimetyp": 20, "chpl__buildsparsedomainruntimetyp": 20, "chpl__buildsparsedomainruntimetypeforparentdomain": 20, "chpl__buildsubdomaintyp": 20, "chpl__builddomainexpr": 20, "kei": [20, 23], "chpl__ensuredomainexpr": 20, "chpl__isrectangulardomtyp": 20, "chpl__issparsedomtyp": 20, "chpl__parentdomainfromdomainruntimetyp": 20, "chpl__domainfromarrayruntimetyp": 20, "chpl_isassociativedomclass": 20, "dc": 20, "chpl__checkdomainsmatch": 20, "chpl_countdomhelp": 20, "nordadd": 20, "chpl_samedomainkind": 20, "thei": [20, 25, 31, 59, 64], "exist": 20, "present": [20, 27, 59], "sd": 20, "chpl__checktupirregdomassign": 20, "msg": [20, 31], "chpl__islegalrecttupdomassign": 20, "align": [20, 31, 54], "chpl_domaindistislayout": 20, "prevent": 20, "user": [20, 26, 31], "datatyp": 20, "unintention": 20, "public": 20, "favor": 20, "1d": [20, 46], "chpl_integralidxtyp": [20, 31, 46], "isposnegon": [20, 31], "numarg": 20, "dimit": [20, 47], "chpl_shapea": 20, "becaus": [20, 31, 59], "tend": 20, "promot": 20, "confus": 20, "boundingbox": [20, 31], "lowest": 20, "high": [20, 31, 65], "highest": 20, "pure": 20, "wherea": [20, 31], "highbound": [20, 31], "chpl_checkelttyp": 20, "chpl_checknegativestrid": 20, "buildarrai": 20, "trycreatearrai": 20, "invok": [20, 26, 31], "attempt": [20, 64], "instanc": [20, 27, 38, 62, 64], "enough": 20, "satisfi": 20, "thrown": [20, 26], "continu": 20, "oppos": 20, "thu": 20, "stop": 20, "reliabl": 20, "configur": [20, 27], "heap": 20, "chpl_gasnet_seg": 20, "larg": 20, "dynam": 20, "overcommit": 20, "caus": [20, 25, 27, 37, 59], "succe": 20, "physic": [20, 27], "bu": 20, "doitrycreatearrai": [20, 46], "arrayoomerror": 20, "initexpr": 20, "arrayelttyp": 20, "buildarraywith": 20, "allocs": [20, 46], "unsafeassignmanag": 20, "context": 20, "statement": [20, 26], "initializ": 20, "bodi": 20, "hand": [20, 38], "side": [20, 38], "had": 20, "unsafeassign": 20, "formal": [20, 31], "newli": 20, "uniniti": 20, "usual": 20, "_lhsinstanc": 20, "_lhspid": 20, "_rhsinstanc": 20, "_rhspid": 20, "_oldlhsdomaincopi": 20, "_check": 20, "_isactivemanag": 20, "_arraysoverlhsdom": 20, "postinit": 20, "runtim": [20, 27, 31], "safeti": 20, "enabl": [20, 31], "isclassreferencenil": 20, "_checkthatarrayshapeissupport": 20, "_checkthatindexmatchesarrayshap": 20, "_isbasearrclasselementnil": 20, "iselementiniti": 20, "_checkifallelementsareiniti": 20, "_ensurenolongermanagingthi": 20, "_isarrayownedbylhsdomain": 20, "_moveinitializeel": 20, "_checknocheckswhennondefaultinitializableelttyp": 20, "newindic": 20, "unsaf": 20, "guarante": 20, "onc": [20, 37, 64], "These": [20, 64], "hold": 20, "done": [20, 62, 64], "mgr": 20, "need": 20, "nilabl": [20, 62, 64], "provid": [20, 26, 27], "leav": [20, 38], "were": 20, "bulkadd": 20, "bulkaddnopreserveind": 20, "createindexbuff": 20, "faster": 20, "spsdom": 20, "someindexiter": 20, "idxbuf": 20, "snippet": 20, "automat": 20, "goe": [20, 62, 64], "scope": [20, 62, 64], "bulk": 20, "flag": [20, 26, 31], "expens": 20, "avoid": 20, "To": 20, "now": [20, 31], "sentinel": [20, 27], "denot": [20, 31], "unknown": 20, "sort": 20, "preserv": [20, 31, 62, 64], "extra": 20, "doe": [20, 26, 31, 38, 64, 65], "duplic": 20, "nearli": 20, "ident": [20, 32, 38], "unsort": 20, "requestcapac": [20, 23], "capac": 20, "indexord": [20, 31], "ordertoindex": [20, 31], "its": [20, 27, 31, 38, 46, 59, 62, 63, 64], "ith": 20, "numer": 20, "checkorderbound": 20, "posit": [20, 31], "contract": [20, 31], "further": 20, "exterior": [20, 31], "portion": [20, 25, 31], "interior": [20, 31], "translat": [20, 31], "chpl__untransl": [20, 31], "setindic": 20, "getindic": 20, "compar": [20, 45], "defaultsparsedist": 20, "supportsautolocalaccess": 20, "supportsoffsetautolocalaccess": 20, "autolocalaccessoffsetcheck": 20, "trycast": [20, 31], "chpl_domaintrycastissaf": 20, "illegalargumenterror": [20, 31], "fit": [20, 31], "legal": [20, 31], "chpl_domaintrycasthelp": 20, "chpl_domaincastissaf": 20, "below": [20, 31], "todo": [20, 31], "chpl_domaincasthelp": 20, "makerectangulardomain": 20, "inclus": 20, "chpl_isvalidrangeidxtyp": [20, 31], "scalar": 20, "pairwis": 20, "11": [20, 31], "chpl__defaulthashwrapperinn": 22, "chpl__defaulthashwrapp": 22, "_gen_kei": 22, "chpl__defaulthashcombin": 22, "fieldnum": 22, "chpl_taskid_t": [22, 41], "chpl__hash_statu": 23, "delet": [23, 62, 64], "chpl_tableentri": 23, "statu": 23, "isful": [23, 38], "_allslot": 23, "chpl__rehashhelp": [23, 45], "startrehash": [23, 45], "moveelementduringrehash": [23, 45], "finishrehash": [23, 45], "chpl__hashtabl": [23, 45], "keytyp": 23, "tablenumfullslot": 23, "tablenumdeletedslot": 23, "tables": 23, "rehashhelp": 23, "postponeres": 23, "resizethreshold": 23, "startings": 23, "initialcapac": 23, "isslotful": 23, "allslot": 23, "keysmatch": 23, "key1": 23, "key2": 23, "_findslot": 23, "_lookforslot": 23, "numslot": 23, "findavailableslot": 23, "fillslot": 23, "tableentri": 23, "slotnum": 23, "findfullslot": 23, "clearslot": 23, "maybeshrinkafterremov": 23, "_findpowerof2": 23, "numkei": [23, 45], "allocatedata": 23, "tableelttyp": 23, "allocatet": 23, "rehash": 23, "pull": 25, "stringifi": 25, "don": 25, "circular": 25, "depend": [25, 38], "_can_stringify_direct": 25, "stringify_simpl": 25, "parallel": [26, 27, 46], "construct": [26, 27], "foral": 26, "vectoriz": 26, "vector": 26, "emit": 26, "hint": 26, "backend": 26, "though": 26, "effect": 26, "vari": 26, "target": 26, "prototyp": 26, "mark": 26, "iteratorindex": 26, "iteratorindextyp": 26, "iteratorindextypezip": 26, "iteratortoarrayelementtyp": 26, "thunktoreturntyp": 26, "_thunkrecord": [26, 33], "chpl_elemtypeforreducingiter": 26, "chpl_buildstandinrtt": 26, "domtyp": 26, "arrtyp": [26, 49], "irtyp": 26, "nonrttyp": 26, "dominst": 26, "chpl_triviallead": 26, "chpl_computeiteratorshap": 26, "chpl_iteratorhasshap": 26, "chpl_iteratorshapestatictypeornoth": 26, "chpl_iteratorfromforeachexpr": 26, "_getiter": 26, "_getiteratorzip": 26, "_freeiter": 26, "_tolead": 26, "_toleaderzip": 26, "canresolv": 26, "_tostandalon": 26, "chpl__canhavefastfollow": 26, "chpl__canleadfastfollow": 26, "chpl__staticfastfollowcheck": 26, "chpl__dynamicfastfollowcheck": 26, "_tofollow": 26, "leaderindex": 26, "_tofollowerzip": 26, "_tofollowerzipintern": 26, "_tofastfollow": 26, "singlevalit": 26, "singlerefit": 26, "chpl_nodeid_t": [27, 55, 56], "chpl_sublocid_t": [27, 55], "c_sublocid_ani": 27, "c_sublocid_al": 27, "chpl_isactualsublocid": 27, "localekind": 27, "dummi": 27, "concret": 27, "baselocal": 27, "placehold": 27, "notion": 27, "anywher": 27, "setup": 27, "tree": 27, "properli": 27, "defaultlocal": 27, "dummylocal": 27, "_local": 27, "localeid": 27, "chpl_id": 27, "chpl_localeid": 27, "chpl_name": 27, "_getchildcount": 27, "hostnam": 27, "node": [27, 55], "oversubscrib": 27, "manner": 27, "id": [27, 34], "launch": 27, "chpl_comm": 27, "gasnet": 27, "chpl_comm_substr": 27, "udp": 27, "gasnet_spawnfn": 27, "l": [27, 28, 31, 32], "smp": 27, "environ": 27, "readm": 27, "multilocal": 27, "uniqu": 27, "identifi": 27, "numlocal": [27, 29], "maxtaskpar": [27, 56], "concurr": [27, 64], "achiev": 27, "estim": 27, "layer": 27, "typic": 27, "processor": [27, 28], "core": 27, "unlik": 27, "numpu": 27, "logic": 27, "process": 27, "unit": 27, "pu": 27, "thing": [27, 62], "instruct": 27, "tell": 27, "mani": 27, "known": 27, "hardwar": 27, "thread": 27, "hyperthread": 27, "account": 27, "o": 27, "best": 27, "By": 27, "ones": 27, "reach": 27, "sever": 27, "resourc": 27, "On": [27, 64], "plain": 27, "linux": 27, "system": 27, "taskset": 27, "command": 27, "chpl_launcher_cores_per_local": 27, "indirectli": 27, "via": 27, "job": 27, "launcher": 27, "aprun": 27, "slurm": 27, "manual": [27, 38], "batch": 27, "runningtask": 27, "intend": [27, 28], "guid": 27, "creation": 27, "greater": [27, 31], "decreas": 27, "walltim": 27, "begun": 27, "yet": 27, "finish": 27, "l1": 27, "l2": 27, "inherit": 27, "interfac": [27, 46, 59, 63], "part": 27, "rest": 27, "npuslogacc": [27, 56], "npuslogal": [27, 56], "npusphysacc": [27, 56], "npusphysal": [27, 56], "chpl_localeid_t": [27, 51, 52, 53, 55], "runningtaskcount": 27, "runningtaskcntset": 27, "runningtaskcntadd": 27, "runningtaskcntsub": 27, "runningtaskcnt": 27, "addchild": 27, "_getchild": 27, "gpu": 27, "gpusimpl": 27, "isgpu": 27, "hierarchi": 27, "fact": 27, "control": 27, "itself": 27, "chpl_getsingletonlocalearrai": 27, "abstractlocalemodel": 27, "chpl_singletonthislocalearrai": 27, "parent_loc": 27, "rootlocal": [27, 56, 57], "replicaterootlocal": 27, "origrootlocal": 27, "abstractrootlocal": 27, "getdefaultlocalespac": 27, "chpl_emptylocalespac": 27, "getdefaultlocalearrai": [27, 57], "chpl_emptylocal": 27, "localeidtolocal": 27, "chpl_initonlocal": 27, "chpl_init_rootlocal": 27, "chpl_rootlocaleinitpriv": 27, "locidx": 27, "chpl_defaultlocaleinitpriv": 27, "chpl_singletoncurrentlocaleinitprivatesubloc": 27, "chpl_singletoncurrentlocaleinitpriv": 27, "chpl_task_getrequestedsubloc": 27, "export": [27, 39, 44, 48, 49, 51, 52, 59], "chpl_getlocaleid": 27, "here_id": 27, "chpl_localeid_to_local": 27, "chpl_taskrunningcntinc": 27, "chpl_taskrunningcntdec": 27, "chpl_taskrunningcntreset": 27, "collect": 28, "mutex": 28, "spinlock": 28, "situat": 28, "minim": 28, "short": 28, "critic": 28, "unlock": 28, "chpl_comm_default_num_local": 29, "chpl_privateobject_t": 30, "chpl_privateobject": 30, "chpl_getprivatizedcopi": 30, "objecttyp": 30, "objectpid": 30, "debugchapelrang": 31, "useoptimizedrangeiter": 31, "newslicerul": 31, "switch": 31, "rule": 31, "alwai": 31, "regardless": [31, 38], "revers": 31, "newrangeliteraltyp": 31, "snewrangeliteraltyp": 31, "produc": 31, "neither": 31, "negon": 31, "_rang": 31, "_low": 31, "chpl__idxtypetointidxtyp": [31, 46], "_high": 31, "_stride": 31, "chpl__rangestridetyp": [31, 65], "_align": 31, "strtype": 31, "renam": 31, "evalu": 31, "doc": 31, "hope": 31, "detail": 31, "face": 31, "featur": 31, "normalizealign": 31, "alignmentvalu": 31, "chpl_build_bounded_rang": [31, 65], "chpl__nudgelowbound": 31, "chpl__nudgehighbound": 31, "chpl_build_low_bounded_rang": [31, 65], "chpl_build_high_bounded_rang": [31, 65], "chpl_build_unbounded_rang": 31, "createwithsingleel": 31, "elm": 31, "chpl_compute_low_param_loop_bound": 31, "chpl_compute_high_param_loop_bound": 31, "chpl_compute_count_param_loop": 31, "chpl_low_bound_count_for_param_loop": 31, "chpl_high_bound_count_for_param_loop": 31, "chpl_bounded_count_for_param_loop_low": 31, "chpl_bounded_count_for_param_loop_high": 31, "hasparamstrid": 31, "hasparamalign": 31, "isalign": 31, "unambigu": 31, "hasparamalignmentfield": 31, "hasparamstridealtvalald": 31, "haslowbound": 31, "infti": 31, "haspositivestrid": 31, "hassign": 31, "isani": 31, "hasnegativestrid": 31, "ison": 31, "isnegon": 31, "isposit": 31, "isneg": 31, "defaultstrid": 31, "chpl_strideproduct": 31, "s2": [31, 63], "r1": 31, "r2": 31, "stride2": 31, "chpl_strideunion": 31, "chpl_strideunionrc": 31, "chpl_assignstrideissaf": 31, "rhsstride": 31, "chpl_assignstrideisunsaf": 31, "chpl_setfield": 31, "alignedlowasint": 31, "chpl_alignedlowasintforit": 31, "hashighbound": 31, "alignedhighasint": 31, "chpl_alignedhighasintforit": 31, "chpl_isnaturallyalign": 31, "ambigu": 31, "isfiniteidxtyp": 31, "unbound": 31, "exce": 31, "max": [31, 32, 43], "infinit": 31, "maxim": 31, "sizeashelp": 31, "al": 31, "ah": 31, "chpl_sizeasforit": 31, "hasfirst": 31, "hasfirstforit": 31, "hasfirstlastareparam": 31, "firstasint": 31, "chpl_firstasintforit": 31, "haslast": 31, "haslastforit": 31, "lastasint": 31, "chpl_lastasintforit": 31, "chpl_idxtypesizechang": 31, "chpl_ident": 31, "chpl_trycastissaf": 31, "chpl_castissaf": 31, "chpl_throwingcast": 31, "totyp": [31, 38], "chpl_idxcastissaf": 31, "chpl_checkstrid": 31, "chpl_idxcastthrow": 31, "chpl_boundscheck": 31, "alignlow": 31, "alignhigh": 31, "ordin": 31, "member": 31, "show": 31, "ord": 31, "7": 31, "chpl__singlevalidxtyp": 31, "h": 31, "operand": 31, "rather": 31, "chpl_check_step_integr": 31, "step": 31, "chpl_need_to_check_step": 31, "chpl_range_check_strid": 31, "chpl_by_help": 31, "newstrid": 31, "algn": 31, "plu": 31, "chpl_count_help": 31, "chpl_checkifrangeiterwilloverflow": 31, "shouldhalt": 31, "checkifiterwilloverflow": 31, "chpl_direct_range_it": 31, "chpl_direct_strided_range_it": 31, "w2": 31, "chpl_direct_counted_range_it": 31, "chpl_direct_counted_range_iter_help": 31, "chpl_direct_pos_stride_range_it": 31, "chpl_direct_param_stride_range_it": 31, "haslowboundforit": 31, "hashighboundforit": 31, "generaliter": 31, "localemodelpartitionsiterationonsublocal": [31, 51, 52, 53], "chpl__mod": 31, "dividend": 31, "modulu": 31, "numbit": 31, "isint": 31, "chpl__diffmod": 31, "minuend": 31, "subtrahend": 31, "chpl__add": 31, "chpl__addrangestrid": 31, "chpl__extendedeuclidhelp": 31, "u": 31, "chpl__extendedeuclid": 31, "chpl_inttoidx": [31, 46], "chpl__inttoidx": [31, 46, 65], "isbooltyp": 31, "chpl__idxtoint": [31, 65], "chpl__scanstaterestypesmatch": [32, 46], "chpl__scaniteratorzip": 32, "scan": [32, 46], "question": 32, "issu": 32, "20204": 32, "chpl__scaniter": 32, "chpl__accumgen": 32, "chpl__reducecombin": 32, "globalop": 32, "localop": 32, "chpl__cleanuplocalop": 32, "chpl_sumtypeissam": 32, "chpl__sumtyp": 32, "reducescanop": 32, "sumreducescanop": 32, "accumul": 32, "accumulateontost": 32, "state": [32, 38, 46], "combin": 32, "productreducescanop": 32, "_prod_id": 32, "maxreducescanop": 32, "minreducescanop": 32, "minmax": 32, "logicalandreducescanop": 32, "_land_id": 32, "logicalorreducescanop": 32, "_lor_id": 32, "bitwiseandreducescanop": 32, "_band_id": 32, "bitwiseorreducescanop": 32, "_bor_id": 32, "bitwisexorreducescanop": 32, "_bxor_id": 32, "_maxloc_id": 32, "_minloc_id": 32, "maxloc": 32, "minloc": 32, "_remotevarcontain": 33, "containedvalu": 33, "_remotevarwrapp": 33, "tmp": 33, "__defaultvaluefortyp": 33, "intyp": 33, "chpl__buildremotewrapp": 33, "tr": 33, "chpl__enableserializedglob": 34, "chpl_get_global_serialize_t": 34, "chpl__broadcastglob": 34, "localezeroglob": 34, "chpl__destroybroadcastedglob": 34, "debugshortarraytransf": 35, "disableshortarraytransf": 35, "shortarraytransferthreshold": 35, "60": 35, "chpl__staticcheckshortarraytransf": 35, "chpl__dynamiccheckshortarraytransf": 35, "sharingkind": 37, "computeorretriev": 37, "computeperlocal": 37, "whichev": 37, "static": 37, "_staticwrappercontain": 37, "_staticwrapp": 37, "valuetyp": 37, "setvalu": 37, "getvalu": 37, "callershouldcomputevalu": 37, "reset": [37, 38], "chpl__functionstaticvariablewrappertyp": 37, "chpl__executestaticwrappercleanupeverywher": 37, "fn": [37, 51, 52, 53, 55], "usenativesyncvar": 38, "chpl__readxx": 38, "wrap": 38, "getsyncclasstyp": 38, "readf": 38, "block": [38, 46], "readff": 38, "readxx": 38, "unchang": 38, "writeff": 38, "writexf": 38, "alter": 38, "chpl__compilergeneratedassignsyncsingl": 38, "chpl__compilergeneratedcopysyncsingl": 38, "sv": 38, "chpl__maybeautodestroi": 38, "_synccl": 38, "syncaux": 38, "chpl_sync_aux_t": 38, "_qthreads_synccl": 38, "alignedvalu": 38, "aligned_t": 38, "_singlecl": 38, "singleaux": 38, "chpl_single_aux_t": 38, "chpl_task_data_setdynamicendcount": 39, "tl": 39, "chpl_task_data_getdynamicendcount": 39, "chpl_task_data_setseri": 39, "makeseri": 39, "chpl_task_data_getseri": 39, "chpl_task_data_setnextcostmtseri": 39, "chpl_task_data_getnextcostmtseri": 39, "chpl_task_data_setcommdiagstemporarilydis": 39, "chpl_task_data_getcommdiagstemporarilydis": 39, "chpl_task_setdynamicendcount": 39, "chpl_task_getdynamicendcount": 39, "chpl_task_setseri": 39, "chpl_task_getseri": 39, "chpl_task_setcommdiagstemporarilydis": 39, "chpl_task_getcommdiagstemporarilydis": 39, "chpl_task_getinfochapel": 40, "chpl_task_getinfochapelinbundl": 40, "chpl_task_bundle_p": [40, 55], "chpl_task_data_setup": 40, "infochapel": 40, "chpl_save_task_error": 40, "chpl_save_task_error_own": 40, "chpl_task_getenvnumthreadsperlocal": 42, "numthreadsperlocal": 42, "chpl__init_tupl": 43, "_build_tupl": 43, "_build_tuple_noref": 43, "_build_tuple_always_allow_ref": 43, "p": [43, 62, 64], "_build_star_tuple_noref": 43, "chpl__tuplifi": 43, "_check_tuple_var_decl": 43, "chpl_warn_tuple_iter": 43, "chpl__tuplerest": 43, "compon": 43, "chpl_twohomogtupl": 43, "safeadd": 44, "safesub": 44, "safemul": 44, "_command_line_cast": 44, "chpl_main_argu": 44, "argc": 44, "return_valu": 44, "chpl_convert_arg": 44, "chpl_get_mli_connect": 44, "chpl_rt_preusercodehook": 44, "chpl_rt_postusercodehook": 44, "allocate_string_literals_buf": 44, "deallocate_string_literals_buf": 44, "printmoduledeinitord": 44, "chpl_addmodul": 44, "chpl_deinitmodul": 44, "debugdefaultassoc": 45, "debugassocdatapar": 45, "defaultassociativesupportsautolocalaccess": 45, "defaultassociativedomrehashhelp": 45, "defaultassociativedom": 45, "defaultdist": [45, 46, 47], "numentri": 45, "tablelock": 45, "locktabl": 45, "unlockt": 45, "_usingseri": 45, "_isdefaultdes": 45, "dsiindsitersafeforremov": [45, 47], "_isslotful": 45, "dsimemb": [45, 46, 47], "_add": 45, "dsirequestcapac": 45, "dsisort": 45, "_fullslot": 45, "defaultassociativearr": 45, "parsafedom": 45, "datas": 45, "tmpdata": 45, "eltsneeddeinit": 45, "dsiserialreadwrit": [45, 46], "printbrac": 45, "inout": 45, "readchapelstyleassocarrai": 45, "_dodefaultinitslot": 45, "inadd": 45, "_elementneedsdeinit": 45, "elt": [45, 49], "chpl_serialreadwriteassociativehelp": 45, "datapartasksperlocal": 46, "dataparignorerunningtask": 46, "dataparmingranular": 46, "debugdefaultdist": 46, "debugdefaultdistbulktransf": 46, "debugdatapar": 46, "debugdataparnuma": 46, "disablearrrealloc": 46, "reportinplacerealloc": 46, "parallelassignthreshold": 46, "1024": 46, "enableparallelgetsinassign": 46, "enableparallelputsinassign": 46, "defaultdoradopt": 46, "defaultdisablelazyradopt": 46, "earlyshiftdata": 46, "usepollyarrayindex": 46, "defaultrectangularsupportsautolocalaccess": 46, "arraystorageord": 46, "rmo": 46, "cmo": 46, "defaultstorageord": 46, "storageord": 46, "polly_array_index": 46, "dsiindextolocal": 46, "dsiassign": 46, "chpl_defaultdistinitpriv": 46, "_serialized_domain": 46, "dsigetindic": 46, "these_help": 46, "rd": 46, "tasksperlocal": 46, "ignorerun": 46, "minindicespertask": 46, "createtupl": 46, "dsibuildarraywith": 46, "dsilocalslic": 46, "_remoteaccessdata": 46, "blkchang": 46, "blk": 46, "str": [46, 65], "chpl__signedtyp": 46, "factoredoff": 46, "shifteddata": 46, "thedata": 46, "getdataelem": 46, "dataelem": 46, "shifteddataelem": 46, "getdataindex": 46, "computefactoredoff": 46, "initshifteddata": 46, "stridealignup": 46, "stridealigndown": 46, "initdatafrom": 46, "toslic": 46, "newdom": 46, "toreindex": 46, "torankchang": 46, "cd": 46, "locradcach": 46, "targetlocdom": 46, "rad": 46, "radlock": 46, "newtargetlocdom": 46, "lockrad": 46, "rlocidx": 46, "unlockrad": 46, "defaultrectangulararr": 46, "idxsignedtyp": 46, "sizesperdim": 46, "externfreefunc": 46, "externarr": 46, "_borrow": 46, "setupfieldsandalloc": 46, "getshift": 46, "adjustblkoffstrfornewdomain": 46, "alia": 46, "dsigetrad": 46, "chpl__serialviewiter1d": 46, "viewrang": 46, "chpl__serialviewit": 46, "viewdom": 46, "chpl__serialviewiterhelp": 46, "_supportsseri": 46, "isdefaultserializertyp": 46, "serializertyp": 46, "deserializertyp": 46, "defaultdeseri": 46, "doitostr": 46, "chpl_serialreadwriterectangular": 46, "_supportsbulkel": 46, "chpl_serialreadwriterectangularhelp": 46, "isdatacontigu": 46, "debugdrscan": 46, "doioptimizedswap": 46, "chpl__prescan": 46, "restyp": 46, "chpl__postscan": 46, "rng": 46, "debugdefaultspars": 47, "defaultsparsesupportsautolocalaccess": 47, "_nnz": 47, "_indic": 47, "add_help": 47, "rem_help": 47, "defaultsparsearr": 47, "printbracket": 47, "chpl_librarymodulelevelsetup": 48, "chpl_librarymodulelevelcleanup": 48, "chpl_byte_buff": 48, "chpl_byte_buffer_fre": 48, "cb": 48, "chpl__exporttypechplbytebuff": 48, "chpl__exportretstringorbyt": 48, "chpl__exportret": 48, "rt": 48, "chpl__exportarg": 48, "chpl_opaque_arrai": 49, "chpl_external_arrai": 49, "num_elt": 49, "freer": 49, "chpl_make_external_arrai": 49, "elt_siz": 49, "chpl_make_external_array_ptr": 49, "chpl_make_external_array_ptr_fre": 49, "chpl_free_external_arrai": 49, "chpl_call_free_func": 49, "makearrayfromptr": 49, "makearrayfromexternarrai": 49, "makearrayfromopaqu": 49, "convertstringorbyt": 49, "converttoexternalarrai": 49, "getexternalarraytyp": 49, "cleanupopaquearrai": 49, "cfi_attribute_point": 50, "cfi_attribute_allocat": 50, "cfi_attribute_oth": 50, "cfi__max_attribut": 50, "cfi_type_int8_t": 50, "cfi_type_int16_t": 50, "cfi_type_int32_t": 50, "cfi_type_int64_t": 50, "cfi_type_signed_char": 50, "cfi_type_short": 50, "cfi_type_int": 50, "cfi_type_long": 50, "cfi_type_long_long": 50, "cfi_type_size_t": 50, "cfi_type_int_least8_t": 50, "cfi_type_int_least16_t": 50, "cfi_type_int_least32_t": 50, "cfi_type_int_least64_t": 50, "cfi_type_int_fast8_t": 50, "cfi_type_int_fast16_t": 50, "cfi_type_int_fast32_t": 50, "cfi_type_int_fast64_t": 50, "cfi_type_intmax_t": 50, "cfi_type_intptr_t": 50, "cfi_type_ptrdiff_t": 50, "cfi_type_float": 50, "cfi_type_doubl": 50, "cfi_type_long_doubl": 50, "cfi_type_double_complex": 50, "cfi_type_long_double_complex": 50, "cfi_type_bool": 50, "cfi_type_char": 50, "cfi_type_cptr": 50, "cfi_type_struct": 50, "cfi_type_oth": 50, "cfi__max_typ": 50, "cfi_success": 50, "cfi_error_base_addr_nul": 50, "cfi_error_base_addr_not_nul": 50, "cfi_invalid_elem_len": 50, "cfi_invalid_rank": 50, "cfi_invalid_typ": 50, "cfi_invalid_attribut": 50, "cfi_invalid_ext": 50, "cfi_invalid_descriptor": 50, "cfi_error_mem_alloc": 50, "cfi_error_out_of_bound": 50, "cfi_max_rank": 50, "cfi_vers": 50, "cfi__version_0001": 50, "cfi_address": 50, "dv": 50, "cfi_cdesc_t": 50, "subscript": 50, "cfi_index_t": 50, "for_cfi_address": 50, "cfi_alloc": 50, "lower_bound": 50, "upper_bound": 50, "elem_len": 50, "for_cfi_alloc": 50, "cfi_dealloc": 50, "for_cfi_dealloc": 50, "cfi_establish": 50, "base_addr": 50, "attribut": 50, "cfi_attribute_t": 50, "type_arg": 50, "cfi_type_t": 50, "cfi_rank_t": 50, "extent": 50, "for_cfi_establish": 50, "cfi_is_contigu": 50, "for_cfi_is_contigu": 50, "cfi_sect": 50, "for_cfi_sect": 50, "cfi_select_part": 50, "displac": 50, "for_cfi_select_part": 50, "cfi_setpoint": 50, "for_cfi_setpoint": 50, "c_ptrdiff": 50, "cfi_dim_t": 50, "extern": 50, "sm": 50, "makearrayfromfortranarrai": 50, "fa": 50, "2017": 51, "advanc": 51, "micro": 51, "devic": 51, "debugapulocal": 51, "chpl_getsubloc": [51, 53], "chpl_task_setsubloc": [51, 53], "chpl_dodirectexecuteon": [51, 52, 53], "chpl_executeon": [51, 52, 53], "chpl_comm_on_bundle_p": [51, 52, 53, 55], "args_siz": [51, 52, 53, 55], "chpl_executeonfast": [51, 52, 53], "chpl_executeonnb": [51, 52, 53], "debuggpulocal": 53, "chpl_here_alloc": 54, "md": 54, "chpl_here_aligned_alloc": 54, "chpl_here_calloc": 54, "chpl_here_realloc": 54, "ptr": 54, "chpl_here_good_alloc_s": 54, "min_siz": 54, "chpl_here_fre": 54, "chpl_comm_on_bundle_t": 55, "chpl_task_bundle_t": 55, "chpl_comm_on_bundle_task_bundl": 55, "bundl": 55, "chpl_rt_buildlocaleid": 55, "chpl_rt_nodefromlocaleid": 55, "chpl_rt_sublocfromlocaleid": 55, "chpl_buildlocaleid": 55, "chpl_nodefromlocaleid": 55, "chpl_sublocfromlocaleid": 55, "chpl_comm_execute_on": 55, "loc_id": 55, "subloc_id": 55, "arg_siz": 55, "chpl_comm_execute_on_fast": 55, "chpl_comm_execute_on_nb": 55, "chpl_comm_taskcallft": 55, "chpl_ftable_cal": 55, "chpl_task_addtask": 55, "chpl_task_yield": 55, "chpl_taskaddbegin": 55, "chpl_taskaddcostmt": 55, "debuglocalemodel": 56, "chpl_root_locale_accum": 56, "accum": 56, "setrootlocalevalu": 56, "helpsetuprootlocaleflat": 56, "helpsetuprootlocalenuma": 56, "helpsetuprootlocaleapu": 56, "helpsetuprootlocalegpu": 56, "helpsetuplocaleflat": 56, "localemodel": 56, "local_nam": 56, "helpsetuplocalenuma": 56, "numsublocal": 56, "numadomain": 56, "helpsetuplocaleapu": 56, "cpulocal": 56, "gpulocal": 56, "helpsetuplocalegpu": 56, "localespac": 57, "_defaultof": 58, "memory_order_relax": 58, "memory_order_consum": 58, "memory_order_acquir": 58, "memory_order_releas": 58, "memory_order_acq_rel": 58, "readableord": 58, "c_memory_ord": 58, "chpl_rmem_consist_releas": 58, "chpl_rmem_consist_acquir": 58, "chpl_rmem_consist_maybe_releas": 58, "chpl_rmem_consist_maybe_acquir": 58, "chpl_rmem_consist_f": 58, "memstat": 59, "memleaksbytyp": 59, "memleak": 59, "memmax": 59, "memthreshold": 59, "memlog": 59, "memleakslog": 59, "memleaksbydesc": 59, "track": 59, "entri": 59, "leak": 59, "free": [59, 65], "dump": 59, "cmemmax": 59, "safecast": 59, "cmemthreshold": 59, "chpl_memtracking_returnconfigv": 59, "ret_memtrack": 59, "ret_memstat": 59, "ret_memleaksbytyp": 59, "ret_memleaksbydesc": 59, "ret_memleak": 59, "ret_memmax": 59, "ret_memthreshold": 59, "ret_memlog": 59, "ret_memleakslog": 59, "ratomicbool": 61, "ratomict": 61, "_own": 62, "respons": [62, 64, 65], "lifetim": [62, 64], "chpl_t": [62, 64], "chpl_p": [62, 64], "isclass": [62, 64], "adopt": [62, 64], "strategi": [62, 64], "previous": 62, "destroi": [62, 64], "reason": [62, 64], "caught": [62, 64], "isnonnilableclass": [62, 64], "isnilableclass": [62, 64], "transfer": 62, "_readwritehelp": [62, 64], "moduleinitlevel": 63, "printmoduleinit": 63, "initprint": 63, "referencecount": 64, "strongcount": 64, "totalcount": 64, "retain": 64, "releasestrong": 64, "releasetot": 64, "tryretainweak": 64, "increment": 64, "strong": 64, "whatev": 64, "total": 64, "upgrad": 64, "someon": 64, "conflict": 64, "releaseweak": 64, "incrementweak": 64, "_share": 64, "owner": 64, "chpl_pn": 64, "_privat": 64, "coercion": 64, "sens": 64, "intent": 64, "pn": 64, "pointer": 64, "doclear": 64, "recogn": 64, "expir": 64, "longer": 64, "downgrad": 64, "experiment": 64, "usecachednumcodepoint": 65, "_bindex": 65, "codepointindex": 65, "_cpindex": 65, "cpi": 65, "chpl__rangeunsignedtyp": 65, "chpl_createstringwithliter": 65, "event": 65, "caller": 65, "_string": 65, "hasescap": 65, "isascii": 65, "_cpindexlenhelpnoadjust": 65, "_cpindexlen": 65, "unicod": 65, "skip": 65, "prior": 65, "accident": 65, "middl": 65, "correctli": 65, "_indexlen": 65, "dosplitwsutf8help": 65, "dosplitwsutf8": 65, "dosearchutf8": 65, "my_str": 65, "different_local": 65, "back": 65, "abcd": 65, "synonym": 65, "tocodepoint": 65, "codepointspliterror": 65, "vararg": 65, "toward": 65, "row": 65, "mystr": 65, "appendcodepointvalu": 65, "0x10ffff": 65, "0xfffd": 65, "wint_t": 65, "codepointtostr": 65, "chpl_createstringwithnewbuffernv": 66, "chpl_createstringwithborrowedbuffernv": 66, "chpl_createstringwithownedbuffernv": 66, "isprimitivetyp": 67, "ishomogeneoustupletyp": 67}, "objects": {"ArrayViewRankChange": [[1, 0, 1, "", "ArrayViewRankChangeArr"], [1, 0, 1, "", "ArrayViewRankChangeDist"], [1, 0, 1, "", "ArrayViewRankChangeDom"], [1, 4, 1, "", "chpl_rankChangeConvertDom"], [1, 4, 1, "", "chpl_rankChangeConvertDownToUp"], [1, 4, 1, "", "chpl_rankChangeConvertIdx"], [1, 4, 1, "", "chpl_rankChangeConvertIdxHiDToLoD"]], "ArrayViewRankChange.ArrayViewRankChangeArr": [[1, 1, 1, "", "_ArrInstance"], [1, 1, 1, "", "_ArrPid"], [1, 1, 1, "", "_DomPid"], [1, 2, 1, "", "_containsRCRE"], [1, 2, 1, "", "_getActualArray"], [1, 2, 1, "", "_getRCREView"], [1, 2, 1, "", "arr"], [1, 2, 1, "", "buildIndexCache"], [1, 1, 1, "", "collapsedDim"], [1, 2, 1, "", "doiBulkTransferFromKnown"], [1, 2, 1, "", "doiBulkTransferToKnown"], [1, 2, 1, "", "doiCanBulkTransferRankChange"], [1, 1, 1, "", "dom"], [1, 2, 1, "", "dsiAccess"], [1, 2, 1, "", "dsiBoundsCheck"], [1, 2, 1, "", "dsiDestroyArr"], [1, 2, 1, "", "dsiDisplayRepresentation"], [1, 2, 1, "", "dsiElementInitializationComplete"], [1, 2, 1, "", "dsiGetBaseDom"], [1, 2, 1, "", "dsiGetPrivatizeData"], [1, 2, 1, "", "dsiHasSingleLocalSubdomain"], [1, 2, 1, "", "dsiLocalAccess"], [1, 2, 1, "", "dsiLocalSubdomain"], [1, 2, 1, "", "dsiPrivatize"], [1, 2, 1, "", "dsiSerialRead"], [1, 2, 1, "", "dsiSerialWrite"], [1, 2, 1, "", "dsiSupportsPrivatization"], [1, 1, 1, "", "idx"], [1, 2, 1, "", "idxType"], [1, 1, 1, "", "indexCache"], [1, 2, 1, "", "init"], [1, 2, 1, "", "isRankChangeArrayView"], [1, 1, 1, "", "ownsArrInstance"], [1, 2, 1, "", "privDom"], [1, 2, 1, "", "rank"], [1, 2, 1, "", "shouldUseIndexCache"], [1, 3, 1, "", "these"]], "ArrayViewRankChange.ArrayViewRankChangeDist": [[1, 1, 1, "", "collapsedDim"], [1, 2, 1, "", "downDist"], [1, 1, 1, "", "downDistInst"], [1, 1, 1, "", "downDistPid"], [1, 2, 1, "", "dsiClone"], [1, 2, 1, "", "dsiDestroyDist"], [1, 2, 1, "", "dsiEqualDMaps"], [1, 2, 1, "", "dsiGetPrivatizeData"], [1, 2, 1, "", "dsiIsLayout"], [1, 2, 1, "", "dsiNewRectangularDom"], [1, 2, 1, "", "dsiPrivatize"], [1, 2, 1, "", "dsiSupportsPrivatization"], [1, 1, 1, "", "idx"]], "ArrayViewRankChange.ArrayViewRankChangeDom": [[1, 2, 1, "", "_getActualDomain"], [1, 2, 1, "", "chpl_rankChangeConvertHiDTupleToLoD"], [1, 2, 1, "", "chpl_rankChangeConvertLoDTupleToHiD"], [1, 1, 1, "", "collapsedDim"], [1, 2, 1, "", "dist"], [1, 1, 1, "", "distInst"], [1, 1, 1, "", "distPid"], [1, 2, 1, "", "downDom"], [1, 1, 1, "", "downDomInst"], [1, 1, 1, "", "downDomPid"], [1, 2, 1, "", "downIdxToUpIdx"], [1, 2, 1, "", "downrank"], [1, 2, 1, "", "dsiAlignedHigh"], [1, 2, 1, "", "dsiAlignedLow"], [1, 2, 1, "", "dsiAlignment"], [1, 2, 1, "", "dsiAssignDomain"], [1, 2, 1, "", "dsiBuildArray"], [1, 2, 1, "", "dsiCreateIndexBuffer"], [1, 2, 1, "", "dsiDestroyDom"], [1, 2, 1, "", "dsiFirst"], [1, 2, 1, "", "dsiGetPrivatizeData"], [1, 2, 1, "", "dsiGetReprivatizeData"], [1, 2, 1, "", "dsiHasSingleLocalSubdomain"], [1, 2, 1, "", "dsiHigh"], [1, 2, 1, "", "dsiIndexOrder"], [1, 2, 1, "", "dsiLast"], [1, 2, 1, "", "dsiLocalSubdomain"], [1, 2, 1, "", "dsiLow"], [1, 2, 1, "", "dsiMyDist"], [1, 2, 1, "", "dsiPrivatize"], [1, 2, 1, "", "dsiReprivatize"], [1, 2, 1, "", "dsiSerialWrite"], [1, 2, 1, "", "dsiSetIndices"], [1, 2, 1, "", "dsiStride"], [1, 2, 1, "", "dsiSupportsAutoLocalAccess"], [1, 2, 1, "", "dsiSupportsPrivatization"], [1, 2, 1, "", "dsiTargetLocales"], [1, 1, 1, "", "idx"], [1, 2, 1, "", "isRankChangeDomainView"], [1, 2, 1, "", "parSafe"], [1, 3, 1, "", "these"], [1, 2, 1, "", "upDom"], [1, 1, 1, "", "upDomInst"]], "ArrayViewReindex": [[2, 0, 1, "", "ArrayViewReindexArr"], [2, 0, 1, "", "ArrayViewReindexDist"], [2, 0, 1, "", "ArrayViewReindexDom"], [2, 4, 1, "", "chpl_reindexConvertDom"], [2, 4, 1, "", "chpl_reindexConvertDomMaybeSlice"], [2, 4, 1, "", "chpl_reindexConvertIdx"], [2, 4, 1, "", "chpl_reindexConvertIdxDim"]], "ArrayViewReindex.ArrayViewReindexArr": [[2, 1, 1, "", "_ArrInstance"], [2, 1, 1, "", "_ArrPid"], [2, 1, 1, "", "_DomPid"], [2, 2, 1, "", "_containsRCRE"], [2, 2, 1, "", "_getActualArray"], [2, 2, 1, "", "_getRCREView"], [2, 2, 1, "", "arr"], [2, 2, 1, "", "buildIndexCache"], [2, 2, 1, "", "doiBulkTransferFromKnown"], [2, 2, 1, "", "doiBulkTransferToKnown"], [2, 2, 1, "", "doiCanBulkTransferRankChange"], [2, 1, 1, "", "dom"], [2, 2, 1, "", "downdom"], [2, 2, 1, "", "dsiAccess"], [2, 2, 1, "", "dsiBoundsCheck"], [2, 2, 1, "", "dsiDestroyArr"], [2, 2, 1, "", "dsiDisplayRepresentation"], [2, 2, 1, "", "dsiElementInitializationComplete"], [2, 2, 1, "", "dsiGetBaseDom"], [2, 2, 1, "", "dsiGetPrivatizeData"], [2, 2, 1, "", "dsiHasSingleLocalSubdomain"], [2, 2, 1, "", "dsiLocalAccess"], [2, 2, 1, "", "dsiLocalSubdomain"], [2, 2, 1, "", "dsiPrivatize"], [2, 2, 1, "", "dsiSerialRead"], [2, 2, 1, "", "dsiSerialWrite"], [2, 2, 1, "", "dsiSupportsPrivatization"], [2, 2, 1, "", "idxType"], [2, 1, 1, "", "indexCache"], [2, 2, 1, "", "init"], [2, 2, 1, "", "isReindexArrayView"], [2, 1, 1, "", "ownsArrInstance"], [2, 2, 1, "", "privDom"], [2, 2, 1, "", "rank"], [2, 2, 1, "", "shouldUseIndexCache"], [2, 3, 1, "", "these"]], "ArrayViewReindex.ArrayViewReindexDist": [[2, 2, 1, "", "downDist"], [2, 1, 1, "", "downDistInst"], [2, 1, 1, "", "downDistPid"], [2, 1, 1, "", "downdomInst"], [2, 1, 1, "", "downdomPid"], [2, 2, 1, "", "dsiClone"], [2, 2, 1, "", "dsiDestroyDist"], [2, 2, 1, "", "dsiGetPrivatizeData"], [2, 2, 1, "", "dsiIsLayout"], [2, 2, 1, "", "dsiNewRectangularDom"], [2, 2, 1, "", "dsiPrivatize"], [2, 2, 1, "", "dsiSupportsPrivatization"], [2, 1, 1, "", "updom"]], "ArrayViewReindex.ArrayViewReindexDom": [[2, 2, 1, "", "_getActualDomain"], [2, 2, 1, "", "chpl_reindexConvertHiDTupleToLoD"], [2, 2, 1, "", "chpl_reindexConvertLoDTupleToHiD"], [2, 2, 1, "", "dist"], [2, 1, 1, "", "distInst"], [2, 1, 1, "", "distPid"], [2, 2, 1, "", "downIdxToUpIdx"], [2, 2, 1, "", "downdom"], [2, 1, 1, "", "downdomInst"], [2, 1, 1, "", "downdomPid"], [2, 2, 1, "", "downdomtype"], [2, 2, 1, "", "dsiAlignedHigh"], [2, 2, 1, "", "dsiAlignedLow"], [2, 2, 1, "", "dsiAlignment"], [2, 2, 1, "", "dsiAssignDomain"], [2, 2, 1, "", "dsiBuildArray"], [2, 2, 1, "", "dsiCreateIndexBuffer"], [2, 2, 1, "", "dsiDestroyDom"], [2, 2, 1, "", "dsiFirst"], [2, 2, 1, "", "dsiGetPrivatizeData"], [2, 2, 1, "", "dsiGetReprivatizeData"], [2, 2, 1, "", "dsiHasSingleLocalSubdomain"], [2, 2, 1, "", "dsiHigh"], [2, 2, 1, "", "dsiIndexOrder"], [2, 2, 1, "", "dsiLast"], [2, 2, 1, "", "dsiLocalSubdomain"], [2, 2, 1, "", "dsiLow"], [2, 2, 1, "", "dsiMyDist"], [2, 2, 1, "", "dsiPrivatize"], [2, 2, 1, "", "dsiReprivatize"], [2, 2, 1, "", "dsiSetIndices"], [2, 2, 1, "", "dsiStride"], [2, 2, 1, "", "dsiSupportsPrivatization"], [2, 2, 1, "", "dsiTargetLocales"], [2, 2, 1, "", "isReindexDomainView"], [2, 1, 1, "", "ownsDownDomInst"], [2, 2, 1, "", "parSafe"], [2, 3, 1, "", "these"], [2, 2, 1, "", "updom"], [2, 1, 1, "", "updomInst"]], "ArrayViewSlice": [[3, 0, 1, "", "ArrayViewSliceArr"], [3, 5, 1, "", "chpl_debugSerializeSlice"], [3, 5, 1, "", "chpl_serializeSlices"]], "ArrayViewSlice.ArrayViewSliceArr": [[3, 1, 1, "", "_ArrInstance"], [3, 1, 1, "", "_ArrPid"], [3, 1, 1, "", "_DomPid"], [3, 2, 1, "", "_containsRCRE"], [3, 2, 1, "", "_getActualArray"], [3, 2, 1, "", "_getRCREView"], [3, 2, 1, "", "arr"], [3, 2, 1, "", "buildIndexCache"], [3, 2, 1, "", "chpl__deserialize"], [3, 2, 1, "", "chpl__rvfMe"], [3, 2, 1, "", "chpl__serialize"], [3, 2, 1, "", "doiBulkTransferFromKnown"], [3, 2, 1, "", "doiBulkTransferToKnown"], [3, 2, 1, "", "doiCanBulkTransferRankChange"], [3, 1, 1, "", "dom"], [3, 2, 1, "", "dsiAccess"], [3, 2, 1, "", "dsiBoundsCheck"], [3, 2, 1, "", "dsiDestroyArr"], [3, 2, 1, "", "dsiDisplayRepresentation"], [3, 2, 1, "", "dsiElementInitializationComplete"], [3, 2, 1, "", "dsiGetBaseDom"], [3, 2, 1, "", "dsiGetPrivatizeData"], [3, 2, 1, "", "dsiHasSingleLocalSubdomain"], [3, 2, 1, "", "dsiLocalSubdomain"], [3, 3, 1, "", "dsiLocalSubdomains"], [3, 2, 1, "", "dsiPrivatize"], [3, 2, 1, "", "dsiSerialRead"], [3, 2, 1, "", "dsiSerialWrite"], [3, 2, 1, "", "dsiSupportsPrivatization"], [3, 2, 1, "", "idxType"], [3, 1, 1, "", "indexCache"], [3, 2, 1, "", "init"], [3, 2, 1, "", "isSliceArrayView"], [3, 2, 1, "", "privDom"], [3, 2, 1, "", "rank"], [3, 2, 1, "", "shouldUseIndexCache"], [3, 3, 1, "", "these"]], "Atomics": [[4, 4, 1, "", ":"], [4, 6, 1, "", "AtomicBool"], [4, 6, 1, "", "AtomicT"], [4, 4, 1, "", "atomicFence"], [4, 4, 1, "", "atomic_fence"], [4, 4, 1, "", "chpl__atomicType"], [4, 4, 1, "", "chpl__processorAtomicType"], [4, 4, 1, "", "chpl_atomic_thread_fence"], [4, 4, 1, "", "chpl_comm_ensure_progress"]], "Atomics.AtomicBool": [[4, 2, 1, "", "="], [4, 1, 1, "", "_v"], [4, 2, 1, "", "clear"], [4, 2, 1, "", "compareAndSwap"], [4, 2, 1, "", "compareExchange"], [4, 2, 1, "", "compareExchangeWeak"], [4, 2, 1, "", "deinit"], [4, 2, 1, "", "exchange"], [4, 2, 1, "", "init"], [4, 2, 1, "", "init="], [4, 2, 1, "", "init_helper"], [4, 2, 1, "", "testAndSet"], [4, 2, 1, "", "valType"], [4, 2, 1, "", "write"]], "Atomics.AtomicT": [[4, 2, 1, "", "%"], [4, 2, 1, "", "*"], [4, 2, 1, "", "+"], [4, 2, 1, "", "-"], [4, 2, 1, "", "/"], [4, 2, 1, "", "="], [4, 1, 1, "", "_v"], [4, 2, 1, "", "add"], [4, 2, 1, "", "and"], [4, 2, 1, "", "compareAndSwap"], [4, 2, 1, "", "compareExchange"], [4, 2, 1, "", "compareExchangeWeak"], [4, 2, 1, "", "deinit"], [4, 2, 1, "", "exchange"], [4, 2, 1, "", "fetchAdd"], [4, 2, 1, "", "fetchAnd"], [4, 2, 1, "", "fetchOr"], [4, 2, 1, "", "fetchSub"], [4, 2, 1, "", "fetchXor"], [4, 2, 1, "", "init"], [4, 2, 1, "", "init="], [4, 2, 1, "", "init_helper"], [4, 2, 1, "", "or"], [4, 2, 1, "", "sub"], [4, 1, 1, "", "valType"], [4, 2, 1, "", "write"], [4, 2, 1, "", "xor"]], "AtomicsCommon": [[5, 6, 1, "", "atomic_refcnt"]], "AtomicsCommon.atomic_refcnt": [[5, 1, 1, "", "_cnt"], [5, 2, 1, "", "dec"], [5, 2, 1, "", "inc"], [5, 2, 1, "", "init"], [5, 2, 1, "", "init="], [5, 2, 1, "", "read"]], "ByteBufferHelpers": [[6, 4, 1, "", "_strcmp"], [6, 4, 1, "", "bufferAlloc"], [6, 4, 1, "", "bufferCopy"], [6, 4, 1, "", "bufferCopyLocal"], [6, 4, 1, "", "bufferCopyRemote"], [6, 4, 1, "", "bufferEnsureSize"], [6, 4, 1, "", "bufferEquals"], [6, 4, 1, "", "bufferEqualsLocal"], [6, 4, 1, "", "bufferFree"], [6, 4, 1, "", "bufferGetByte"], [6, 4, 1, "", "bufferMemcpy"], [6, 4, 1, "", "bufferMemcpyLocal"], [6, 4, 1, "", "bufferMemmoveLocal"], [6, 4, 1, "", "bufferRealloc"], [6, 7, 1, "", "bufferType"], [6, 7, 1, "", "byteType"], [6, 5, 1, "", "chpl_stringGrowthFactor"], [6, 4, 1, "", "chpl_string_comm_get"], [6, 7, 1, "", "locIdType"]], "Bytes": [[7, 4, 1, "", "*"], [7, 4, 1, "", ":"], [7, 6, 1, "", "_bytes"], [7, 7, 1, "", "bytes"], [7, 4, 1, "", "chpl_createBytesWithLiteral"]], "Bytes._bytes": [[7, 1, 1, "", "buff"], [7, 1, 1, "", "buffLen"], [7, 1, 1, "", "buffSize"], [7, 2, 1, "", "byte"], [7, 2, 1, "", "byteIndices"], [7, 2, 1, "", "chpl__deserialize"], [7, 2, 1, "", "chpl__serialize"], [7, 2, 1, "", "deinit"], [7, 2, 1, "", "deserialize"], [7, 2, 1, "", "init"], [7, 2, 1, "", "init="], [7, 1, 1, "", "isOwned"], [7, 2, 1, "", "item"], [7, 2, 1, "", "join"], [7, 1, 1, "", "locale_id"], [7, 2, 1, "", "numBytes"], [7, 2, 1, "", "serialize"], [7, 2, 1, "", "size"], [7, 2, 1, "", "this"], [7, 2, 1, "", "toByte"]], "Bytes.bytes": [[7, 2, 1, "", "!="], [7, 2, 1, "", "+"], [7, 2, 1, "", "+="], [7, 2, 1, "Bytes.bytes.<", "&lt;"], [7, 2, 1, "Bytes.bytes.<=", "&lt;="], [7, 2, 1, "Bytes.bytes.<=>", "&lt;=&gt;"], [7, 2, 1, "", "="], [7, 2, 1, "", "=="], [7, 2, 1, "Bytes.bytes.>", "&gt;"], [7, 2, 1, "Bytes.bytes.>=", "&gt;="], [7, 2, 1, "", "appendByteValues"], [7, 2, 1, "", "byte"], [7, 2, 1, "", "c_str"], [7, 3, 1, "", "chpl_bytes"], [7, 2, 1, "", "count"], [7, 2, 1, "", "createAdoptingBuffer"], [7, 2, 1, "", "createBorrowingBuffer"], [7, 2, 1, "", "createCopyingBuffer"], [7, 2, 1, "", "decode"], [7, 2, 1, "", "dedent"], [7, 2, 1, "", "endsWith"], [7, 2, 1, "", "find"], [7, 2, 1, "", "hash"], [7, 2, 1, "", "indices"], [7, 2, 1, "", "isAlnum"], [7, 2, 1, "", "isAlpha"], [7, 2, 1, "", "isDigit"], [7, 2, 1, "", "isEmpty"], [7, 2, 1, "", "isLower"], [7, 2, 1, "", "isPrintable"], [7, 2, 1, "", "isSpace"], [7, 2, 1, "", "isTitle"], [7, 2, 1, "", "isUpper"], [7, 2, 1, "", "item"], [7, 3, 1, "", "items"], [7, 2, 1, "", "join"], [7, 2, 1, "", "localize"], [7, 2, 1, "", "numBytes"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "rfind"], [7, 2, 1, "", "size"], [7, 3, 1, "", "split"], [7, 2, 1, "", "startsWith"], [7, 2, 1, "", "strip"], [7, 3, 1, "", "these"], [7, 2, 1, "", "this"], [7, 2, 1, "", "toByte"], [7, 2, 1, "", "toHexadecimal"], [7, 2, 1, "", "toLower"], [7, 2, 1, "", "toTitle"], [7, 2, 1, "", "toUpper"]], "BytesCasts": [[8, 4, 1, "", ":"], [8, 4, 1, "", "_real_cast_helper"]], "BytesStringCommon": [[9, 5, 1, "", "CHPL_SHORT_STRING_SIZE"], [9, 6, 1, "", "__serializeHelper"], [9, 4, 1, "", "_cleanupForNumericCast"], [9, 4, 1, "", "_findStartOfNextCodepointFromByte"], [9, 4, 1, "", "byte_isAlnum"], [9, 4, 1, "", "byte_isAlpha"], [9, 4, 1, "", "byte_isAscii"], [9, 4, 1, "", "byte_isDigit"], [9, 4, 1, "", "byte_isLower"], [9, 4, 1, "", "byte_isPrintable"], [9, 4, 1, "", "byte_isUpper"], [9, 4, 1, "", "byte_isWhitespace"], [9, 4, 1, "", "byte_toLower"], [9, 4, 1, "", "byte_toUpper"], [9, 4, 1, "", "chpl__getInPlaceBufferData"], [9, 4, 1, "", "chpl__getInPlaceBufferDataForWrite"], [9, 6, 1, "", "chpl__inPlaceBuffer"], [9, 4, 1, "", "countNumCodepoints"], [9, 4, 1, "", "decodeByteBuffer"], [9, 4, 1, "", "decodeHelp"], [9, 8, 1, "", "decodePolicy"], [9, 4, 1, "", "doAppend"], [9, 4, 1, "", "doAppendSomeBytes"], [9, 4, 1, "", "doAssign"], [9, 4, 1, "", "doConcat"], [9, 4, 1, "", "doDedent"], [9, 4, 1, "", "doEq"], [9, 4, 1, "", "doGreaterThan"], [9, 4, 1, "", "doGreaterThanOrEq"], [9, 4, 1, "", "doJoin"], [9, 4, 1, "", "doJoinIterator"], [9, 4, 1, "", "doLessThan"], [9, 4, 1, "", "doLessThanOrEq"], [9, 4, 1, "", "doMultiply"], [9, 4, 1, "", "doPartition"], [9, 4, 1, "", "doReplace"], [9, 4, 1, "", "doSearchNoEnc"], [9, 10, 1, "", "doSplit"], [9, 4, 1, "", "doSplitHelp"], [9, 10, 1, "", "doSplitWSNoEnc"], [9, 4, 1, "", "doSplitWSNoEncHelp"], [9, 4, 1, "", "doStripNoEnc"], [9, 8, 1, "", "encodePolicy"], [9, 4, 1, "", "getCStr"], [9, 4, 1, "", "getHash"], [9, 4, 1, "", "getIndexType"], [9, 4, 1, "", "getSlice"], [9, 4, 1, "", "getView"], [9, 4, 1, "", "initWithBorrowedBuffer"], [9, 4, 1, "", "initWithNewBuffer"], [9, 4, 1, "", "initWithOwnedBuffer"], [9, 4, 1, "", "isInitialByte"], [9, 4, 1, "", "reinitWithNewBuffer"], [9, 4, 1, "", "reinitWithOwnedBuffer"], [9, 4, 1, "", "resizeBuffer"], [9, 4, 1, "", "resizeBufferForAppend"], [9, 5, 1, "", "showStringBytesInitDeprWarnings"], [9, 4, 1, "", "startsEndsWith"], [9, 5, 1, "", "surrogateEscape"]], "BytesStringCommon.__serializeHelper": [[9, 1, 1, "", "buff"], [9, 1, 1, "", "buffLen"], [9, 1, 1, "", "cachedNumCodepoints"], [9, 1, 1, "", "locale_id"], [9, 1, 1, "", "shortData"], [9, 1, 1, "", "size"]], "BytesStringCommon.decodePolicy": [[9, 9, 1, "", "drop"], [9, 9, 1, "", "escape"], [9, 9, 1, "", "replace"], [9, 9, 1, "", "strict"]], "BytesStringCommon.encodePolicy": [[9, 9, 1, "", "pass"], [9, 9, 1, "", "unescape"]], "CString": [[10, 4, 1, "", ":"], [10, 4, 1, "", "_string_contains"], [10, 4, 1, "", "chpl__autoCopy"], [10, 4, 1, "", "chpl__initCopy"], [10, 4, 1, "", "chpl_free_c_string"], [10, 4, 1, "", "string_index_of"]], "CString.chpl_c_string": [[10, 2, 1, "", "!="], [10, 2, 1, "CString.chpl_c_string.<", "&lt;"], [10, 2, 1, "CString.chpl_c_string.<=", "&lt;="], [10, 2, 1, "", "="], [10, 2, 1, "", "=="], [10, 2, 1, "CString.chpl_c_string.>", "&gt;"], [10, 2, 1, "CString.chpl_c_string.>=", "&gt;="], [10, 2, 1, "", "deserialize"], [10, 2, 1, "", "indexOf"], [10, 2, 1, "", "serialize"], [10, 2, 1, "", "size"], [10, 2, 1, "", "substring"]], "ChapelArray": [[11, 4, 1, "", "!="], [11, 4, 1, "", "%="], [11, 4, 1, "ChapelArray.&=", "&amp;="], [11, 4, 1, "", "**="], [11, 4, 1, "", "*="], [11, 4, 1, "", "+="], [11, 4, 1, "", "-="], [11, 4, 1, "", "/="], [11, 4, 1, "", ":"], [11, 4, 1, "ChapelArray.<<=", "&lt;&lt;="], [11, 4, 1, "ChapelArray.<=>", "&lt;=&gt;"], [11, 4, 1, "", "="], [11, 4, 1, "", "=="], [11, 4, 1, "ChapelArray.>>=", "&gt;&gt;="], [11, 5, 1, "", "CHPL_WARN_DOMAIN_LITERAL"], [11, 5, 1, "", "PODValAccess"], [11, 4, 1, "", "^="], [11, 6, 1, "", "_array"], [11, 4, 1, "", "_deinitElements"], [11, 4, 1, "", "_deinitElementsIsParallel"], [11, 4, 1, "", "_desync"], [11, 4, 1, "", "_do_destroy_arr"], [11, 4, 1, "", "_do_destroy_array"], [11, 4, 1, "", "_freePrivatizedClass"], [11, 4, 1, "", "_getDistribution"], [11, 4, 1, "", "_isPrivatized"], [11, 4, 1, "", "_makeIndexTuple"], [11, 4, 1, "", "_newArray"], [11, 4, 1, "", "_newPrivatizedClass"], [11, 4, 1, "", "_reprivatize"], [11, 8, 1, "", "_tElt"], [11, 4, 1, "", "_validRankChangeArgs"], [11, 5, 1, "", "arrayAsVecGrowthFactor"], [11, 5, 1, "", "arrayLiteralLowBound"], [11, 5, 1, "", "capturedIteratorLowBound"], [11, 4, 1, "", "checkArrayShapesUponAssignment"], [11, 4, 1, "", "chpl__autoCopy"], [11, 4, 1, "", "chpl__buildArrayExpr"], [11, 4, 1, "", "chpl__buildArrayRuntimeType"], [11, 4, 1, "", "chpl__buildAssociativeArrayExpr"], [11, 4, 1, "", "chpl__buildDistDMapValue"], [11, 4, 1, "", "chpl__buildDistType"], [11, 4, 1, "", "chpl__buildDistValue"], [11, 4, 1, "", "chpl__buildIndexType"], [11, 4, 1, "", "chpl__bulkTransferArray"], [11, 4, 1, "", "chpl__bulkTransferPtrArray"], [11, 4, 1, "", "chpl__checkOutEltTypeMatch"], [11, 4, 1, "", "chpl__checkRetEltTypeMatch"], [11, 4, 1, "", "chpl__coerceCopy"], [11, 4, 1, "", "chpl__coerceHelp"], [11, 4, 1, "", "chpl__coerceMove"], [11, 4, 1, "", "chpl__compatibleForBulkTransfer"], [11, 4, 1, "", "chpl__compatibleForWidePtrBulkTransfer"], [11, 4, 1, "", "chpl__convertRuntimeTypeToValue"], [11, 4, 1, "", "chpl__convertValueToRuntimeType"], [11, 4, 1, "", "chpl__countRanges"], [11, 4, 1, "", "chpl__distributed"], [11, 4, 1, "", "chpl__distributionFromDomainRuntimeType"], [11, 4, 1, "", "chpl__eltTypeFromArrayRuntimeType"], [11, 4, 1, "", "chpl__getActualArray"], [11, 4, 1, "", "chpl__getActualDomain"], [11, 4, 1, "", "chpl__initAfterBulkTransfer"], [11, 4, 1, "", "chpl__initCopy"], [11, 4, 1, "", "chpl__initCopy_shapeHelp"], [11, 4, 1, "", "chpl__instanceTypeFromArrayRuntimeType"], [11, 4, 1, "", "chpl__instanceTypeFromDomainRuntimeType"], [11, 4, 1, "", "chpl__isArrayView"], [11, 4, 1, "", "chpl__isDROrDRView"], [11, 4, 1, "", "chpl__isDomainView"], [11, 4, 1, "", "chpl__serializeAssignment"], [11, 4, 1, "", "chpl__supportedDataTypeForBulkTransfer"], [11, 4, 1, "", "chpl__throwErrorUnchecked"], [11, 4, 1, "", "chpl__transferArray"], [11, 4, 1, "", "chpl__uncheckedArrayTransfer"], [11, 4, 1, "", "chpl__unref"], [11, 4, 1, "", "chpl_arrayToPtr"], [11, 4, 1, "", "chpl_arrayToPtrConst"], [11, 4, 1, "", "chpl_arrayToPtrErrorHelper"], [11, 4, 1, "", "chpl_computeUnifiedType"], [11, 4, 1, "", "chpl_computeUnifiedTypeHelp"], [11, 4, 1, "", "chpl_decRefCountsForDomainsInArrayEltTypes"], [11, 4, 1, "", "chpl_defaultComparator"], [11, 4, 1, "", "chpl_incRefCountsForDomainsInArrayEltTypes"], [11, 5, 1, "", "debugArrayAsVec"], [11, 5, 1, "", "debugBulkTransfer"], [11, 5, 1, "", "debugLocalizedConstDomains"], [11, 5, 1, "", "debugOptimizedSwap"], [11, 5, 1, "", "disableConstDomainOpt"], [11, 6, 1, "", "dmap"], [11, 4, 1, "", "isCollapsedDimension"], [11, 10, 1, "", "linearize"], [11, 5, 1, "", "localizeConstDomains"], [11, 5, 1, "", "logAllArrEltAccess"], [11, 5, 1, "", "logDistArrEltAccess"], [11, 5, 1, "", "nullPid"], [11, 5, 1, "", "numPrivateObjects"], [11, 4, 1, "", "reshape"], [11, 4, 1, "", "shouldReturnRvalueByValue"], [11, 5, 1, "", "useBulkPtrTransfer"], [11, 5, 1, "", "useBulkTransfer"], [11, 5, 1, "", "useBulkTransferDist"], [11, 5, 1, "", "useBulkTransferStride"], [11, 4, 1, "", "|="]], "ChapelArray._array": [[11, 2, 1, "", "IRV"], [11, 2, 1, "", "_dom"], [11, 1, 1, "", "_instance"], [11, 1, 1, "", "_pid"], [11, 2, 1, "", "_scan"], [11, 1, 1, "", "_unowned"], [11, 2, 1, "", "_value"], [11, 2, 1, "", "checkAccess"], [11, 2, 1, "", "checkRankChange"], [11, 2, 1, "", "checkSlice"], [11, 2, 1, "", "chpl__deserialize"], [11, 2, 1, "", "chpl__isDense1DArray"], [11, 2, 1, "", "chpl__localSliceDefaultArithArrHelp"], [11, 2, 1, "", "chpl__promotionType"], [11, 2, 1, "", "chpl__serialize"], [11, 2, 1, "", "chpl_checkArrArgDoms"], [11, 2, 1, "", "chpl_isNonDistributedArray"], [11, 2, 1, "", "count"], [11, 2, 1, "", "deinit"], [11, 2, 1, "", "deserialize"], [11, 2, 1, "", "deserializeFrom"], [11, 2, 1, "", "dim"], [11, 2, 1, "", "dims"], [11, 2, 1, "", "displayRepresentation"], [11, 2, 1, "", "eltType"], [11, 2, 1, "", "equals"], [11, 2, 1, "", "find"], [11, 2, 1, "", "first"], [11, 2, 1, "", "fullIdxType"], [11, 2, 1, "", "hasPosNegUnitStride"], [11, 2, 1, "", "hasSingleLocalSubdomain"], [11, 2, 1, "", "hasUnitStride"], [11, 2, 1, "", "idxType"], [11, 2, 1, "", "indices"], [11, 2, 1, "", "isAssociative"], [11, 2, 1, "", "isEmpty"], [11, 2, 1, "", "isIrregular"], [11, 2, 1, "", "isRectangular"], [11, 2, 1, "", "isSparse"], [11, 2, 1, "", "iteratorYieldsLocalElements"], [11, 2, 1, "", "last"], [11, 2, 1, "", "localAccess"], [11, 2, 1, "", "localSlice"], [11, 2, 1, "", "localSubdomain"], [11, 3, 1, "", "localSubdomains"], [11, 2, 1, "", "rank"], [11, 2, 1, "", "reindex"], [11, 2, 1, "", "serialize"], [11, 2, 1, "", "shape"], [11, 2, 1, "", "size"], [11, 2, 1, "", "sizeAs"], [11, 2, 1, "", "strides"], [11, 2, 1, "", "targetLocales"], [11, 3, 1, "", "these"], [11, 2, 1, "", "this"], [11, 2, 1, "", "tryCopy"]], "ChapelArray._tElt": [[11, 9, 1, "", "assign"], [11, 9, 1, "", "initCopy"], [11, 9, 1, "", "move"]], "ChapelArrayViewElision": [[12, 4, 1, "", ":"], [12, 4, 1, "", "=="], [12, 4, 1, "", "chpl__ave_exprCanBeProtoSlice"], [12, 4, 1, "", "chpl__ave_protoSlicesSupportAssignment"], [12, 4, 1, "", "chpl__createConstProtoSlice"], [12, 4, 1, "", "chpl__createProtoSlice"], [12, 6, 1, "", "chpl__protoSlice"], [12, 4, 1, "", "isProtoSlice"]], "ChapelArrayViewElision.chpl__protoSlice": [[12, 2, 1, "", "_value"], [12, 2, 1, "", "dims"], [12, 2, 1, "", "domOrRange"], [12, 2, 1, "", "eltType"], [12, 2, 1, "", "init"], [12, 2, 1, "", "init="], [12, 1, 1, "", "isConst"], [12, 1, 1, "", "isRankChange"], [12, 2, 1, "", "isRectangular"], [12, 1, 1, "", "ptrToArr"], [12, 1, 1, "", "ranges"], [12, 1, 1, "", "rank"], [12, 2, 1, "", "sizeAs"], [12, 1, 1, "", "slicingExprType"], [12, 3, 1, "", "these"]], "ChapelAutoAggregation": [[13, 4, 1, "", "chpl__arrayIteratorYieldsLocalElements"], [13, 4, 1, "", "chpl_dstAggregatorFor"], [13, 4, 1, "", "chpl_srcAggregatorFor"]], "ChapelAutoLocalAccess": [[14, 4, 1, "", "chpl__ala_offsetCheck"], [14, 4, 1, "", "chpl__dynamicAutoLocalCheck"], [14, 4, 1, "", "chpl__isArrayViewWithDifferentDist"], [14, 4, 1, "", "chpl__staticAutoLocalCheck"]], "ChapelBase": [[15, 4, 1, "", "!"], [15, 4, 1, "", "!="], [15, 4, 1, "", "%"], [15, 4, 1, "", "%="], [15, 4, 1, "ChapelBase.&", "&amp;"], [15, 4, 1, "ChapelBase.&=", "&amp;="], [15, 4, 1, "", "*"], [15, 4, 1, "", "**"], [15, 4, 1, "", "**="], [15, 4, 1, "", "*="], [15, 4, 1, "", "+"], [15, 4, 1, "", "+="], [15, 4, 1, "", "-"], [15, 4, 1, "", "-="], [15, 4, 1, "", "/"], [15, 4, 1, "", "/="], [15, 4, 1, "", ":"], [15, 4, 1, "ChapelBase.<", "&lt;"], [15, 4, 1, "ChapelBase.<<", "&lt;&lt;"], [15, 4, 1, "ChapelBase.<<=", "&lt;&lt;="], [15, 4, 1, "ChapelBase.<=", "&lt;="], [15, 4, 1, "ChapelBase.<=>", "&lt;=&gt;"], [15, 4, 1, "", "="], [15, 4, 1, "", "=="], [15, 4, 1, "ChapelBase.>", "&gt;"], [15, 4, 1, "ChapelBase.>=", "&gt;="], [15, 4, 1, "ChapelBase.>>", "&gt;&gt;"], [15, 4, 1, "ChapelBase.>>=", "&gt;&gt;="], [15, 8, 1, "", "ArrayInit"], [15, 5, 1, "", "QIO_AGGREGATE_FORMAT_BRACES"], [15, 5, 1, "", "QIO_AGGREGATE_FORMAT_CHPL"], [15, 5, 1, "", "QIO_AGGREGATE_FORMAT_JSON"], [15, 5, 1, "", "QIO_ARRAY_FORMAT_CHPL"], [15, 5, 1, "", "QIO_ARRAY_FORMAT_JSON"], [15, 5, 1, "", "QIO_ARRAY_FORMAT_SPACE"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_AGGREGATE"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_ARRAY"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_BYTE_ORDER"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_COMPLEX"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_SKIP_UNKNOWN_FIELDS"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_STRING"], [15, 5, 1, "", "QIO_STYLE_ELEMENT_TUPLE"], [15, 5, 1, "", "QIO_TUPLE_FORMAT_CHPL"], [15, 5, 1, "", "QIO_TUPLE_FORMAT_JSON"], [15, 5, 1, "", "QIO_TUPLE_FORMAT_SPACE"], [15, 4, 1, "", "^"], [15, 4, 1, "", "^="], [15, 0, 1, "", "_EndCount"], [15, 0, 1, "", "_EndCountBase"], [15, 4, 1, "", "_basePowerTwo"], [15, 4, 1, "", "_canOptimizeExp"], [15, 4, 1, "", "_cond_invalid"], [15, 4, 1, "", "_cond_test"], [15, 0, 1, "", "_ddata"], [15, 4, 1, "", "_ddata_allocate"], [15, 4, 1, "", "_ddata_allocate_noinit"], [15, 4, 1, "", "_ddata_allocate_noinit_gpu_shared"], [15, 4, 1, "", "_ddata_allocate_postalloc"], [15, 4, 1, "", "_ddata_fill"], [15, 4, 1, "", "_ddata_free"], [15, 4, 1, "", "_ddata_reallocate"], [15, 4, 1, "", "_ddata_shift"], [15, 4, 1, "", "_ddata_sizeof_element"], [15, 4, 1, "", "_ddata_supports_reallocate"], [15, 4, 1, "", "_downDynamicEndCount"], [15, 4, 1, "", "_downEndCount"], [15, 4, 1, "", "_endCountAlloc"], [15, 4, 1, "", "_endCountFree"], [15, 4, 1, "", "_expBaseHelp"], [15, 4, 1, "", "_expHelp"], [15, 4, 1, "", "_i2r"], [15, 4, 1, "", "_intExpHelp"], [15, 0, 1, "", "_object"], [15, 4, 1, "", "_r2i"], [15, 0, 1, "", "_ref"], [15, 7, 1, "", "_remoteEndCountType"], [15, 4, 1, "", "_removed_cast"], [15, 4, 1, "", "_to_borrowed"], [15, 4, 1, "", "_to_nilable"], [15, 4, 1, "", "_to_nonnil"], [15, 4, 1, "", "_to_unmanaged"], [15, 4, 1, "", "_try_ddata_allocate"], [15, 4, 1, "", "_upDynamicEndCount"], [15, 4, 1, "", "_upEndCount"], [15, 4, 1, "", "_waitEndCount"], [15, 5, 1, "", "assocParSafeDefault"], [15, 4, 1, "", "bitshiftChecks"], [15, 7, 1, "", "c_fn_ptr"], [15, 7, 1, "", "c_string"], [15, 0, 1, "", "chpl_ModuleDeinit"], [15, 4, 1, "", "chpl__autoCopy"], [15, 4, 1, "", "chpl__autoDestroy"], [15, 4, 1, "", "chpl__bothLocal"], [15, 4, 1, "", "chpl__delete"], [15, 4, 1, "", "chpl__initCopy"], [15, 4, 1, "", "chpl__unref"], [15, 4, 1, "", "chpl_after_forall_fence"], [15, 5, 1, "", "chpl_arrayInitMethodRuntimeSelectable"], [15, 4, 1, "", "chpl_boundedCoforallSize"], [15, 4, 1, "", "chpl_castUnmanagedError"], [15, 4, 1, "", "chpl_checkBorrowIfVar"], [15, 4, 1, "", "chpl_checkCastAbstractEnumError"], [15, 4, 1, "", "chpl_checkLegalTypeFieldAccessor"], [15, 4, 1, "", "chpl_comm_task_create"], [15, 4, 1, "", "chpl_comm_task_end"], [15, 4, 1, "", "chpl_comm_unordered_task_fence"], [15, 4, 1, "", "chpl_config_get_value"], [15, 4, 1, "", "chpl_config_has_value"], [15, 8, 1, "", "chpl_ddataResizePolicy"], [15, 5, 1, "", "chpl_defaultArrayInitMethod"], [15, 5, 1, "", "chpl_defaultGpuArrayInitMethod"], [15, 4, 1, "", "chpl_field_gt"], [15, 4, 1, "", "chpl_field_lt"], [15, 4, 1, "", "chpl_field_neq"], [15, 4, 1, "", "chpl_getArrayInitMethod"], [15, 4, 1, "", "chpl_isDdata"], [15, 7, 1, "", "chpl_mem_descInt_t"], [15, 5, 1, "", "chpl_moduleDeinitFuns"], [15, 4, 1, "", "chpl_resetTaskSpawn"], [15, 4, 1, "", "chpl_rt_reset_task_spawn"], [15, 4, 1, "", "chpl_setArrayInitMethod"], [15, 4, 1, "", "chpl_shouldDoGpuInit"], [15, 4, 1, "", "chpl_statementLevelSymbol"], [15, 5, 1, "", "chpl_stringMinAllocSize"], [15, 4, 1, "", "chpl_supportsBoundedCoforall"], [15, 4, 1, "", "chpl_typeSupportsPrimitiveCast"], [15, 5, 1, "", "chpl_unstableInternalSymbolForTesting"], [15, 4, 1, "", "chpl_waitDynamicEndCount"], [15, 5, 1, "", "commDiagsTrackEndCounts"], [15, 4, 1, "", "defaultAtomicTaskCount"], [15, 5, 1, "", "defaultLowBound"], [15, 5, 1, "", "enablePostfixBangChecks"], [15, 6, 1, "", "endCountDiagsManager"], [15, 5, 1, "", "fcfsUsePointerImplementation"], [15, 4, 1, "", "func"], [15, 4, 1, "", "init_elts"], [15, 4, 1, "", "init_elts_method"], [15, 4, 1, "", "isBorrowedOrUnmanagedClassType"], [15, 4, 1, "", "isGenericType"], [15, 4, 1, "", "isIterator"], [15, 4, 1, "", "isNilableClassType"], [15, 4, 1, "", "isNonNilableClassType"], [15, 4, 1, "", "isNonnegative"], [15, 4, 1, "", "isTrue"], [15, 8, 1, "", "iterKind"], [15, 5, 1, "", "noParSafeWarning"], [15, 0, 1, "", "object"], [15, 2, 1, "", "param"], [15, 2, 1, "", "proc"], [15, 5, 1, "", "rootLocaleInitialized"], [15, 5, 1, "", "useAtomicTaskCnt"], [15, 5, 1, "", "warnMaximalRange"], [15, 4, 1, "", "|"], [15, 4, 1, "", "|="], [15, 4, 1, "", "~"]], "ChapelBase.ArrayInit": [[15, 9, 1, "", "gpuInit"], [15, 9, 1, "", "heuristicInit"], [15, 9, 1, "", "noInit"], [15, 9, 1, "", "parallelInit"], [15, 9, 1, "", "serialInit"]], "ChapelBase._EndCount": [[15, 2, 1, "", "add"], [15, 1, 1, "", "i"], [15, 1, 1, "", "iType"], [15, 2, 1, "", "init"], [15, 2, 1, "", "sub"], [15, 1, 1, "", "taskCnt"], [15, 1, 1, "", "taskType"], [15, 2, 1, "", "waitFor"]], "ChapelBase._EndCountBase": [[15, 1, 1, "", "errors"]], "ChapelBase._ddata": [[15, 1, 1, "", "eltType"], [15, 2, 1, "", "this"]], "ChapelBase._ref": [[15, 1, 1, "", "_val"]], "ChapelBase.c_fn_ptr": [[15, 2, 1, "", "="], [15, 2, 1, "", "this"]], "ChapelBase.chpl_ModuleDeinit": [[15, 1, 1, "", "deinitFun"], [15, 1, 1, "", "moduleName"], [15, 1, 1, "", "prevModule"], [15, 2, 1, "", "serialize"]], "ChapelBase.chpl_anycomplex": [[15, 2, 1, "", "im"], [15, 2, 1, "", "re"]], "ChapelBase.chpl_ddataResizePolicy": [[15, 9, 1, "", "normalInit"], [15, 9, 1, "", "skipInit"], [15, 9, 1, "", "skipInitButClearMem"]], "ChapelBase.endCountDiagsManager": [[15, 2, 1, "", "enterContext"], [15, 2, 1, "", "exitContext"], [15, 1, 1, "", "prevDiagsDisabledVal"], [15, 1, 1, "", "taskInfo"]], "ChapelBase.iterKind": [[15, 9, 1, "", "follower"], [15, 9, 1, "", "leader"], [15, 9, 1, "", "standalone"]], "ChapelContext": [[17, 4, 1, "", "chpl__verifyTypeContext"]], "ChapelDebugPrint": [[18, 4, 1, "", "chpl__testPar"], [18, 5, 1, "", "chpl__testParFlag"], [18, 5, 1, "", "chpl__testParOn"], [18, 4, 1, "", "chpl__testParStart"], [18, 4, 1, "", "chpl__testParStop"], [18, 4, 1, "", "chpl__testParWriteln"], [18, 4, 1, "", "chpl_debug_stringify"], [18, 4, 1, "", "chpl_debug_writeln"]], "ChapelDistribution": [[19, 0, 1, "", "AbsBaseArr"], [19, 0, 1, "", "BaseArr"], [19, 0, 1, "", "BaseArrOverRectangularDom"], [19, 0, 1, "", "BaseAssociativeDom"], [19, 0, 1, "", "BaseDist"], [19, 0, 1, "", "BaseDom"], [19, 0, 1, "", "BaseRectangularArr"], [19, 0, 1, "", "BaseRectangularDom"], [19, 0, 1, "", "BaseSparseArr"], [19, 0, 1, "", "BaseSparseArrImpl"], [19, 0, 1, "", "BaseSparseDom"], [19, 0, 1, "", "BaseSparseDomImpl"], [19, 6, 1, "", "SparseIndexBuffer"], [19, 4, 1, "", "_delete_arr"], [19, 4, 1, "", "_delete_dist"], [19, 4, 1, "", "_delete_dom"], [19, 6, 1, "", "_distribution"], [19, 4, 1, "", "chpl_assignDomainWithGetSetIndices"], [19, 4, 1, "", "chpl_assignDomainWithIndsIterSafeForRemoving"]], "ChapelDistribution.AbsBaseArr": [[19, 2, 1, "", "decEltCountsIfNeeded"], [19, 1, 1, "", "eltType"]], "ChapelDistribution.BaseArr": [[19, 1, 1, "", "_decEltRefCounts"], [19, 2, 1, "", "_defaultInitSlot"], [19, 2, 1, "", "_deinitSlot"], [19, 2, 1, "", "_finishRehash"], [19, 2, 1, "", "_moveElementDuringRehash"], [19, 2, 1, "", "_purge"], [19, 2, 1, "", "_resize"], [19, 1, 1, "", "_resizePolicy"], [19, 2, 1, "", "_startRehash"], [19, 2, 1, "", "chpl__rvfMe"], [19, 2, 1, "", "chpl_isElementTypeDefaultInitializable"], [19, 2, 1, "", "chpl_isElementTypeNonNilableClass"], [19, 2, 1, "", "chpl_setResizePolicy"], [19, 2, 1, "", "chpl_unsafeAssignHaltUninitializedElement"], [19, 2, 1, "", "chpl_unsafeAssignIsClassElementNil"], [19, 2, 1, "", "decEltCountsIfNeeded"], [19, 2, 1, "", "deinit"], [19, 2, 1, "", "doiCanBulkTransferRankChange"], [19, 2, 1, "", "dsiDestroyArr"], [19, 2, 1, "", "dsiDisplayRepresentation"], [19, 2, 1, "", "dsiElementDeinitializationComplete"], [19, 2, 1, "", "dsiElementInitializationComplete"], [19, 2, 1, "", "dsiGetBaseDom"], [19, 2, 1, "", "dsiIteratorYieldsLocalElements"], [19, 2, 1, "", "dsiPostReallocate"], [19, 2, 1, "", "dsiReallocate"], [19, 2, 1, "", "dsiRequiresPrivatization"], [19, 2, 1, "", "dsiStaticFastFollowCheck"], [19, 2, 1, "", "dsiSupportsAlignedFollower"], [19, 2, 1, "", "dsiSupportsPrivatization"], [19, 2, 1, "", "isDefaultRectangular"], [19, 2, 1, "", "isRankChangeArrayView"], [19, 2, 1, "", "isReindexArrayView"], [19, 2, 1, "", "isSliceArrayView"], [19, 1, 1, "", "next"], [19, 1, 1, "", "pid"], [19, 1, 1, "", "prev"], [19, 2, 1, "", "remove"], [19, 2, 1, "", "sparseBulkShiftArray"], [19, 2, 1, "", "sparseShiftArray"], [19, 2, 1, "", "sparseShiftArrayBack"]], "ChapelDistribution.BaseArrOverRectangularDom": [[19, 2, 1, "", "deinit"], [19, 2, 1, "", "dsiPostReallocate"], [19, 2, 1, "", "dsiReallocate"], [19, 2, 1, "", "hasPosNegUnitStride"], [19, 2, 1, "", "hasUnitStride"], [19, 1, 1, "", "idxType"], [19, 1, 1, "", "rank"], [19, 1, 1, "", "strides"]], "ChapelDistribution.BaseAssociativeDom": [[19, 2, 1, "", "deinit"], [19, 2, 1, "", "dsiAdd"], [19, 2, 1, "", "dsiClear"], [19, 2, 1, "", "isAssociative"], [19, 2, 1, "", "rank"]], "ChapelDistribution.BaseDist": [[19, 1, 1, "", "_domsLock"], [19, 1, 1, "", "_doms_containing_dist"], [19, 1, 1, "", "_free_when_no_doms"], [19, 2, 1, "", "add_dom"], [19, 2, 1, "", "deinit"], [19, 2, 1, "", "dsiDestroyDist"], [19, 2, 1, "", "dsiDisplayRepresentation"], [19, 2, 1, "", "dsiIsLayout"], [19, 2, 1, "", "dsiNewAssociativeDom"], [19, 2, 1, "", "dsiNewRectangularDom"], [19, 2, 1, "", "dsiNewSparseDom"], [19, 2, 1, "", "dsiRequiresPrivatization"], [19, 2, 1, "", "dsiSupportsPrivatization"], [19, 2, 1, "", "dsiTrackDomains"], [19, 1, 1, "", "pid"], [19, 2, 1, "", "remove"], [19, 2, 1, "", "remove_dom"], [19, 2, 1, "", "singleton"], [19, 2, 1, "", "trackDomains"]], "ChapelDistribution.BaseDom": [[19, 3, 1, "", "_arrs"], [19, 1, 1, "", "_arrsLock"], [19, 1, 1, "", "_arrs_containing_dom"], [19, 1, 1, "", "_arrs_head"], [19, 1, 1, "", "_free_when_no_arrs"], [19, 2, 1, "", "add_arr"], [19, 2, 1, "", "add_containing_arr"], [19, 1, 1, "", "definedConst"], [19, 2, 1, "", "deinit"], [19, 2, 1, "", "dnsError"], [19, 2, 1, "", "dsiAlignedHigh"], [19, 2, 1, "", "dsiAlignedLow"], [19, 2, 1, "", "dsiAlignment"], [19, 2, 1, "", "dsiAutoLocalAccessOffsetCheck"], [19, 2, 1, "", "dsiCreateIndexBuffer"], [19, 2, 1, "", "dsiDestroyDom"], [19, 2, 1, "", "dsiDisplayRepresentation"], [19, 2, 1, "", "dsiFirst"], [19, 2, 1, "", "dsiHigh"], [19, 2, 1, "", "dsiIndexOrder"], [19, 2, 1, "", "dsiIteratorYieldsLocalElements"], [19, 2, 1, "", "dsiLast"], [19, 2, 1, "", "dsiLinksDistribution"], [19, 2, 1, "", "dsiLow"], [19, 2, 1, "", "dsiMyDist"], [19, 2, 1, "", "dsiRequiresPrivatization"], [19, 2, 1, "", "dsiStride"], [19, 2, 1, "", "dsiSupportsAutoLocalAccess"], [19, 2, 1, "", "dsiSupportsOffsetAutoLocalAccess"], [19, 2, 1, "", "dsiSupportsPrivatization"], [19, 2, 1, "", "init"], [19, 2, 1, "", "isAssociative"], [19, 2, 1, "", "isDefaultRectangular"], [19, 2, 1, "", "isRankChangeDomainView"], [19, 2, 1, "", "isRectangular"], [19, 2, 1, "", "isReindexDomainView"], [19, 2, 1, "", "isSliceDomainView"], [19, 2, 1, "", "isSparse"], [19, 2, 1, "", "linksDistribution"], [19, 1, 1, "", "pid"], [19, 2, 1, "", "remove"], [19, 2, 1, "", "remove_arr"], [19, 2, 1, "", "remove_containing_arr"], [19, 2, 1, "", "trackArrays"]], "ChapelDistribution.BaseRectangularArr": [[19, 2, 1, "", "chpl_isElementTypeDefaultInitializable"], [19, 2, 1, "", "chpl_isElementTypeNonNilableClass"], [19, 2, 1, "", "chpl_unsafeAssignHaltUninitializedElement"], [19, 2, 1, "", "decEltCountsIfNeeded"], [19, 2, 1, "", "deinit"], [19, 1, 1, "", "eltType"]], "ChapelDistribution.BaseRectangularDom": [[19, 2, 1, "", "deinit"], [19, 2, 1, "", "dsiAdd"], [19, 2, 1, "", "dsiRemove"], [19, 2, 1, "", "getBaseArrType"], [19, 2, 1, "", "hasPosNegUnitStride"], [19, 2, 1, "", "hasUnitStride"], [19, 1, 1, "", "idxType"], [19, 2, 1, "", "isRectangular"], [19, 1, 1, "", "rank"], [19, 1, 1, "", "strides"]], "ChapelDistribution.BaseSparseArr": [[19, 2, 1, "", "deinit"], [19, 1, 1, "", "dom"], [19, 2, 1, "", "dsiGetBaseDom"], [19, 1, 1, "", "idxType"], [19, 1, 1, "", "rank"]], "ChapelDistribution.BaseSparseArrImpl": [[19, 2, 1, "", "IRV"], [19, 1, 1, "", "data"], [19, 2, 1, "", "deinit"], [19, 2, 1, "", "dsiDestroyArr"], [19, 2, 1, "", "dsiElementDeinitializationComplete"], [19, 2, 1, "", "dsiElementInitializationComplete"], [19, 2, 1, "", "init"], [19, 1, 1, "", "irv"], [19, 2, 1, "", "sparseBulkShiftArray"], [19, 2, 1, "", "sparseShiftArray"], [19, 2, 1, "", "sparseShiftArrayBack"]], "ChapelDistribution.BaseSparseDom": [[19, 2, 1, "", "boundsCheck"], [19, 2, 1, "", "canDoDirectAssignment"], [19, 2, 1, "", "deinit"], [19, 2, 1, "", "dsiAlignedHigh"], [19, 2, 1, "", "dsiAlignedLow"], [19, 2, 1, "", "dsiAlignment"], [19, 2, 1, "", "dsiBulkAdd"], [19, 2, 1, "", "dsiBulkAddNoPreserveInds"], [19, 2, 1, "", "dsiClear"], [19, 2, 1, "", "dsiCreateIndexBuffer"], [19, 2, 1, "", "dsiDim"], [19, 2, 1, "", "dsiDims"], [19, 2, 1, "", "dsiFirst"], [19, 2, 1, "", "dsiHigh"], [19, 2, 1, "", "dsiLast"], [19, 2, 1, "", "dsiLow"], [19, 2, 1, "", "dsiNumIndices"], [19, 2, 1, "", "dsiSize"], [19, 2, 1, "", "dsiStride"], [19, 2, 1, "", "getNNZ"], [19, 1, 1, "", "idxType"], [19, 2, 1, "", "isSparse"], [19, 1, 1, "", "parentDom"], [19, 1, 1, "", "rank"]], "ChapelDistribution.BaseSparseDomImpl": [[19, 2, 1, "", "__getActualInsertPts"], [19, 2, 1, "", "_bulkGrow"], [19, 2, 1, "", "_countDuplicates"], [19, 2, 1, "", "_grow"], [19, 2, 1, "", "_shrink"], [19, 2, 1, "", "bulkAdd_help"], [19, 2, 1, "", "bulkAdd_prepareInds"], [19, 2, 1, "", "deinit"], [19, 2, 1, "", "dsiBulkAdd"], [19, 2, 1, "", "dsiBulkAddNoPreserveInds"], [19, 2, 1, "", "dsiClear"], [19, 1, 1, "", "nnzDom"]], "ChapelDistribution.SparseIndexBuffer": [[19, 2, 1, "", "add"], [19, 1, 1, "", "buf"], [19, 1, 1, "", "bufDom"], [19, 2, 1, "", "commit"], [19, 1, 1, "", "cur"], [19, 2, 1, "", "deinit"], [19, 1, 1, "", "idxType"], [19, 2, 1, "", "init"], [19, 1, 1, "", "obj"], [19, 1, 1, "", "rank"]], "ChapelDistribution._distribution": [[19, 2, 1, "", "_do_destroy"], [19, 1, 1, "", "_instance"], [19, 1, 1, "", "_pid"], [19, 1, 1, "", "_unowned"], [19, 2, 1, "", "_value"], [19, 2, 1, "", "clone"], [19, 2, 1, "", "deinit"], [19, 2, 1, "", "deserialize"], [19, 2, 1, "", "deserializeFrom"], [19, 2, 1, "", "displayRepresentation"], [19, 2, 1, "", "idxToLocale"], [19, 2, 1, "", "init"], [19, 2, 1, "", "init="], [19, 2, 1, "", "newAssociativeDom"], [19, 2, 1, "", "newRectangularDom"], [19, 2, 1, "", "newSparseDom"], [19, 2, 1, "", "serialize"], [19, 2, 1, "", "targetLocales"]], "ChapelDomain": [[20, 4, 1, "", "!="], [20, 4, 1, "ChapelDomain.&", "&amp;"], [20, 4, 1, "ChapelDomain.&=", "&amp;="], [20, 4, 1, "", "+"], [20, 4, 1, "", "+="], [20, 4, 1, "", "-"], [20, 4, 1, "", "-="], [20, 4, 1, "", "="], [20, 4, 1, "", "=="], [20, 4, 1, "", "^"], [20, 4, 1, "", "^="], [20, 6, 1, "", "_domain"], [20, 4, 1, "", "_getDomain"], [20, 4, 1, "", "align"], [20, 4, 1, "", "by"], [20, 4, 1, "", "chpl__buildDomainExpr"], [20, 4, 1, "", "chpl__buildDomainRuntimeType"], [20, 4, 1, "", "chpl__buildSparseDomainRuntimeType"], [20, 4, 1, "", "chpl__buildSparseDomainRuntimeTypeForParentDomain"], [20, 4, 1, "", "chpl__buildSubDomainType"], [20, 4, 1, "", "chpl__checkDomainsMatch"], [20, 4, 1, "", "chpl__checkTupIrregDomAssign"], [20, 4, 1, "", "chpl__coerceCopy"], [20, 4, 1, "", "chpl__coerceMove"], [20, 4, 1, "", "chpl__convertRuntimeTypeToValue"], [20, 4, 1, "", "chpl__convertValueToRuntimeType"], [20, 4, 1, "", "chpl__domainFromArrayRuntimeType"], [20, 4, 1, "", "chpl__ensureDomainExpr"], [20, 4, 1, "", "chpl__isLegalRectTupDomAssign"], [20, 4, 1, "", "chpl__isRectangularDomType"], [20, 4, 1, "", "chpl__isSparseDomType"], [20, 4, 1, "", "chpl__isTupleOfRanges"], [20, 4, 1, "", "chpl__parentDomainFromDomainRuntimeType"], [20, 4, 1, "", "chpl_countDomHelp"], [20, 4, 1, "", "chpl_domainDistIsLayout"], [20, 4, 1, "", "chpl_isAssociativeDomClass"], [20, 4, 1, "", "chpl_sameDomainKind"], [20, 5, 1, "", "defaultHashTableResizeThreshold"], [20, 4, 1, "", "makeRectangularDomain"], [20, 5, 1, "", "noNegativeStrideWarnings"], [20, 4, 1, "", "tupleOfRangesSlice"], [20, 4, 1, "", "|"], [20, 4, 1, "", "|="]], "ChapelDomain._domain": [[20, 2, 1, "", ":"], [20, 2, 1, "", "_do_destroy"], [20, 1, 1, "", "_instance"], [20, 1, 1, "", "_pid"], [20, 1, 1, "", "_unowned"], [20, 2, 1, "", "_value"], [20, 2, 1, "", "add"], [20, 2, 1, "", "alignment"], [20, 2, 1, "", "autoLocalAccessOffsetCheck"], [20, 2, 1, "", "boundingBox"], [20, 2, 1, "", "buildArray"], [20, 2, 1, "", "buildArrayWith"], [20, 2, 1, "", "bulkAdd"], [20, 2, 1, "", "bulkAddNoPreserveInds"], [20, 2, 1, "", "checkOrderBounds"], [20, 2, 1, "", "chpl__deserialize"], [20, 2, 1, "", "chpl__promotionType"], [20, 2, 1, "", "chpl__serialize"], [20, 2, 1, "", "chpl__unTranslate"], [20, 2, 1, "", "chpl_checkEltType"], [20, 2, 1, "", "chpl_checkNegativeStride"], [20, 2, 1, "", "chpl_domainCastHelper"], [20, 2, 1, "", "chpl_domainCastIsSafe"], [20, 2, 1, "", "chpl_domainTryCastHelper"], [20, 2, 1, "", "chpl_domainTryCastIsSafe"], [20, 2, 1, "", "chpl_integralIdxType"], [20, 2, 1, "", "chpl_shapeAs"], [20, 2, 1, "", "clear"], [20, 2, 1, "", "contains"], [20, 2, 1, "", "createIndexBuffer"], [20, 2, 1, "", "defaultSparseDist"], [20, 2, 1, "", "deinit"], [20, 2, 1, "", "deserialize"], [20, 2, 1, "", "deserializeFrom"], [20, 2, 1, "", "dim"], [20, 3, 1, "", "dimIter"], [20, 2, 1, "", "dims"], [20, 2, 1, "", "displayRepresentation"], [20, 2, 1, "", "dist"], [20, 2, 1, "", "distribution"], [20, 2, 1, "", "expand"], [20, 2, 1, "", "exterior"], [20, 2, 1, "", "first"], [20, 2, 1, "", "fullIdxType"], [20, 2, 1, "", "getIndices"], [20, 2, 1, "", "hasPosNegUnitStride"], [20, 2, 1, "", "hasSingleLocalSubdomain"], [20, 2, 1, "", "hasUnitStride"], [20, 2, 1, "", "high"], [20, 2, 1, "", "highBound"], [20, 2, 1, "", "idxType"], [20, 2, 1, "", "indexOrder"], [20, 2, 1, "", "indices"], [20, 2, 1, "", "init"], [20, 2, 1, "", "init="], [20, 2, 1, "", "interior"], [20, 2, 1, "", "isAssociative"], [20, 2, 1, "", "isEmpty"], [20, 2, 1, "", "isIrregular"], [20, 2, 1, "", "isRectangular"], [20, 2, 1, "", "isSparse"], [20, 2, 1, "", "iteratorYieldsLocalElements"], [20, 2, 1, "", "last"], [20, 2, 1, "", "localSlice"], [20, 2, 1, "", "localSubdomain"], [20, 3, 1, "", "localSubdomains"], [20, 2, 1, "", "low"], [20, 2, 1, "", "lowBound"], [20, 2, 1, "", "orderToIndex"], [20, 2, 1, "", "position"], [20, 2, 1, "", "rank"], [20, 2, 1, "", "remove"], [20, 2, 1, "", "requestCapacity"], [20, 2, 1, "", "serialize"], [20, 2, 1, "", "setIndices"], [20, 2, 1, "", "shape"], [20, 2, 1, "", "size"], [20, 2, 1, "", "sizeAs"], [20, 3, 1, "", "sorted"], [20, 2, 1, "", "stride"], [20, 2, 1, "", "strides"], [20, 2, 1, "", "supportsAutoLocalAccess"], [20, 2, 1, "", "supportsOffsetAutoLocalAccess"], [20, 2, 1, "", "targetLocales"], [20, 3, 1, "", "these"], [20, 2, 1, "", "this"], [20, 2, 1, "", "translate"], [20, 2, 1, "", "tryCast"], [20, 2, 1, "", "tryCreateArray"], [20, 2, 1, "", "unsafeAssign"], [20, 6, 1, "", "unsafeAssignManager"]], "ChapelDomain._domain.unsafeAssignManager": [[20, 3, 1, "", "_arraysOverLhsDom"], [20, 2, 1, "", "_checkIfAllElementsAreInitialized"], [20, 2, 1, "", "_checkNoChecksWhenNonDefaultInitializableEltType"], [20, 2, 1, "", "_checkThatArrayShapeIsSupported"], [20, 2, 1, "", "_checkThatIndexMatchesArrayShape"], [20, 1, 1, "", "_checks"], [20, 2, 1, "", "_ensureNoLongerManagingThis"], [20, 1, 1, "", "_isActiveManager"], [20, 2, 1, "", "_isArrayOwnedByLhsDomain"], [20, 2, 1, "", "_isBaseArrClassElementNil"], [20, 1, 1, "", "_lhsInstance"], [20, 1, 1, "", "_lhsPid"], [20, 2, 1, "", "_moveInitializeElement"], [20, 1, 1, "", "_oldLhsDomainCopy"], [20, 1, 1, "", "_rhsInstance"], [20, 1, 1, "", "_rhsPid"], [20, 2, 1, "", "checks"], [20, 2, 1, "", "deinit"], [20, 2, 1, "", "enterContext"], [20, 2, 1, "", "exitContext"], [20, 2, 1, "", "initialize"], [20, 2, 1, "", "isClassReferenceNil"], [20, 2, 1, "", "isElementInitialized"], [20, 3, 1, "", "newIndices"], [20, 2, 1, "", "postinit"]], "ChapelHashing._array": [[22, 2, 1, "", "hash"]], "ChapelHashing": [[22, 4, 1, "", "_gen_key"], [22, 4, 1, "", "chpl__defaultHashCombine"], [22, 4, 1, "", "chpl__defaultHashWrapper"], [22, 4, 1, "", "chpl__defaultHashWrapperInner"], [22, 2, 1, "", "proc"]], "ChapelHashing.bool": [[22, 2, 1, "", "hash"]], "ChapelHashing.chpl_taskID_t": [[22, 2, 1, "", "hash"]], "ChapelHashing.complex": [[22, 2, 1, "", "hash"]], "ChapelHashing.enum": [[22, 2, 1, "", "hash"]], "ChapelHashing.imag": [[22, 2, 1, "", "hash"]], "ChapelHashing.int": [[22, 2, 1, "", "hash"]], "ChapelHashing.locale": [[22, 2, 1, "", "hash"]], "ChapelHashing.range": [[22, 2, 1, "", "hash"]], "ChapelHashing.real": [[22, 2, 1, "", "hash"]], "ChapelHashing.uint": [[22, 2, 1, "", "hash"]], "ChapelHashtable": [[23, 10, 1, "", "_allSlots"], [23, 6, 1, "", "chpl_TableEntry"], [23, 8, 1, "", "chpl__hash_status"], [23, 6, 1, "", "chpl__hashtable"], [23, 0, 1, "", "chpl__rehashHelpers"]], "ChapelHashtable.chpl_TableEntry": [[23, 2, 1, "", "isFull"], [23, 1, 1, "", "key"], [23, 1, 1, "", "status"], [23, 1, 1, "", "val"]], "ChapelHashtable.chpl__hash_status": [[23, 9, 1, "", "deleted"], [23, 9, 1, "", "empty"], [23, 9, 1, "", "full"]], "ChapelHashtable.chpl__hashtable": [[23, 2, 1, "", "_findPowerOf2"], [23, 2, 1, "", "_findSlot"], [23, 3, 1, "", "_lookForSlots"], [23, 3, 1, "", "allSlots"], [23, 2, 1, "", "allocateData"], [23, 2, 1, "", "allocateTable"], [23, 2, 1, "", "clearSlot"], [23, 2, 1, "", "deinit"], [23, 2, 1, "", "fillSlot"], [23, 2, 1, "", "findAvailableSlot"], [23, 2, 1, "", "findFullSlot"], [23, 2, 1, "", "init"], [23, 2, 1, "", "isSlotFull"], [23, 1, 1, "", "keyType"], [23, 2, 1, "", "keysMatch"], [23, 2, 1, "", "maybeShrinkAfterRemove"], [23, 1, 1, "", "postponeResize"], [23, 2, 1, "", "rehash"], [23, 1, 1, "", "rehashHelpers"], [23, 2, 1, "", "requestCapacity"], [23, 2, 1, "", "resize"], [23, 1, 1, "", "resizeThreshold"], [23, 1, 1, "", "startingSize"], [23, 1, 1, "", "table"], [23, 1, 1, "", "tableNumDeletedSlots"], [23, 1, 1, "", "tableNumFullSlots"], [23, 1, 1, "", "tableSize"], [23, 1, 1, "", "valType"]], "ChapelHashtable.chpl__rehashHelpers": [[23, 2, 1, "", "finishRehash"], [23, 2, 1, "", "moveElementDuringRehash"], [23, 2, 1, "", "startRehash"]], "ChapelIOStringifyHelper": [[25, 4, 1, "", "_can_stringify_direct"], [25, 4, 1, "", "stringify_simple"]], "ChapelIteratorSupport": [[26, 4, 1, "", "="], [26, 4, 1, "", "_freeIterator"], [26, 4, 1, "", "_getIterator"], [26, 4, 1, "", "_getIteratorZip"], [26, 4, 1, "", "_toFastFollower"], [26, 4, 1, "", "_toFollower"], [26, 4, 1, "", "_toFollowerZip"], [26, 4, 1, "", "_toFollowerZipInternal"], [26, 4, 1, "", "_toLeader"], [26, 4, 1, "", "_toLeaderZip"], [26, 4, 1, "", "_toStandalone"], [26, 4, 1, "", "chpl__canHaveFastFollowers"], [26, 4, 1, "", "chpl__canLeadFastFollowers"], [26, 4, 1, "", "chpl__dynamicFastFollowCheck"], [26, 4, 1, "", "chpl__staticFastFollowCheck"], [26, 4, 1, "", "chpl_buildStandInRTT"], [26, 4, 1, "", "chpl_computeIteratorShape"], [26, 4, 1, "", "chpl_elemTypeForReducingIterables"], [26, 4, 1, "", "chpl_iteratorFromForExpr"], [26, 4, 1, "", "chpl_iteratorFromForeachExpr"], [26, 4, 1, "", "chpl_iteratorHasDomainShape"], [26, 4, 1, "", "chpl_iteratorHasRangeShape"], [26, 4, 1, "", "chpl_iteratorHasShape"], [26, 4, 1, "", "chpl_iteratorShapeStaticTypeOrNothing"], [26, 10, 1, "", "chpl_trivialLeader"], [26, 4, 1, "", "iteratorIndex"], [26, 4, 1, "", "iteratorIndexType"], [26, 4, 1, "", "iteratorIndexTypeZip"], [26, 4, 1, "", "iteratorToArrayElementType"], [26, 4, 1, "", "singleRefIter"], [26, 4, 1, "", "singleValIter"], [26, 4, 1, "", "thunkToReturnType"]], "ChapelLocale": [[27, 0, 1, "", "AbstractLocaleModel"], [27, 0, 1, "", "AbstractRootLocale"], [27, 0, 1, "", "BaseLocale"], [27, 0, 1, "", "DummyLocale"], [27, 6, 1, "", "_locale"], [27, 5, 1, "", "c_sublocid_all"], [27, 5, 1, "", "c_sublocid_any"], [27, 5, 1, "", "c_sublocid_none"], [27, 4, 1, "", "chpl_defaultLocaleInitPrivate"], [27, 4, 1, "", "chpl_getLocaleID"], [27, 4, 1, "", "chpl_getSingletonLocaleArray"], [27, 4, 1, "", "chpl_init_rootLocale"], [27, 4, 1, "", "chpl_isActualSublocID"], [27, 4, 1, "", "chpl_localeID_to_locale"], [27, 7, 1, "", "chpl_nodeID_t"], [27, 4, 1, "", "chpl_rootLocaleInitPrivate"], [27, 4, 1, "", "chpl_singletonCurrentLocaleInitPrivate"], [27, 4, 1, "", "chpl_singletonCurrentLocaleInitPrivateSublocs"], [27, 7, 1, "", "chpl_sublocID_t"], [27, 4, 1, "", "chpl_taskRunningCntDec"], [27, 4, 1, "", "chpl_taskRunningCntInc"], [27, 4, 1, "", "chpl_taskRunningCntReset"], [27, 4, 1, "", "chpl_task_getRequestedSubloc"], [27, 5, 1, "", "defaultLocale"], [27, 4, 1, "", "deinit"], [27, 5, 1, "", "dummyLocale"], [27, 4, 1, "", "here"], [27, 4, 1, "", "here_id"], [27, 8, 1, "", "localeKind"], [27, 5, 1, "", "nilLocale"], [27, 5, 1, "", "origRootLocale"], [27, 5, 1, "", "replicateRootLocale"], [27, 5, 1, "", "rootLocale"]], "ChapelLocale.AbstractLocaleModel": [[27, 1, 1, "", "chpl_singletonThisLocaleArray"], [27, 2, 1, "", "init"]], "ChapelLocale.AbstractRootLocale": [[27, 3, 1, "", "chpl_initOnLocales"], [27, 2, 1, "", "getDefaultLocaleArray"], [27, 2, 1, "", "getDefaultLocaleSpace"], [27, 2, 1, "", "init"], [27, 2, 1, "", "localeIDtoLocale"]], "ChapelLocale.BaseLocale": [[27, 2, 1, "", "_getChild"], [27, 2, 1, "", "_getChildCount"], [27, 2, 1, "", "addChild"], [27, 2, 1, "", "chpl_id"], [27, 2, 1, "", "chpl_localeid"], [27, 2, 1, "", "chpl_name"], [27, 2, 1, "", "gpus"], [27, 2, 1, "", "gpusImpl"], [27, 2, 1, "", "hostname"], [27, 2, 1, "", "id"], [27, 2, 1, "", "init"], [27, 2, 1, "", "isGpu"], [27, 2, 1, "", "localeid"], [27, 1, 1, "", "maxTaskPar"], [27, 1, 1, "", "nPUsLogAcc"], [27, 1, 1, "", "nPUsLogAll"], [27, 1, 1, "", "nPUsPhysAcc"], [27, 1, 1, "", "nPUsPhysAll"], [27, 2, 1, "", "name"], [27, 2, 1, "", "numPUs"], [27, 1, 1, "", "parent"], [27, 2, 1, "", "runningTaskCnt"], [27, 2, 1, "", "runningTaskCntAdd"], [27, 2, 1, "", "runningTaskCntSet"], [27, 2, 1, "", "runningTaskCntSub"], [27, 1, 1, "", "runningTaskCounter"], [27, 2, 1, "", "serialize"]], "ChapelLocale.DummyLocale": [[27, 2, 1, "", "_getChild"], [27, 2, 1, "", "_getChildCount"], [27, 2, 1, "", "addChild"], [27, 2, 1, "", "chpl_id"], [27, 2, 1, "", "chpl_localeid"], [27, 2, 1, "", "chpl_name"], [27, 2, 1, "", "init"]], "ChapelLocale._locale": [[27, 2, 1, "", "_getChildCount"], [27, 1, 1, "", "_instance"], [27, 2, 1, "", "_value"], [27, 2, 1, "", "chpl_id"], [27, 2, 1, "", "chpl_localeid"], [27, 2, 1, "", "chpl_name"], [27, 2, 1, "", "deinit"], [27, 2, 1, "", "init"], [27, 2, 1, "", "init="], [27, 2, 1, "", "localeid"]], "ChapelLocale.locale": [[27, 2, 1, "", "="], [27, 2, 1, "", "hostname"], [27, 2, 1, "", "id"], [27, 2, 1, "", "maxTaskPar"], [27, 2, 1, "", "name"], [27, 2, 1, "", "numPUs"], [27, 2, 1, "", "runningTasks"]], "ChapelLocale.localeKind": [[27, 9, 1, "", "any"], [27, 9, 1, "", "default"], [27, 9, 1, "", "dummy"], [27, 9, 1, "", "nilLocale"], [27, 9, 1, "", "regular"]], "ChapelLocks": [[28, 6, 1, "", "chpl_LocalSpinlock"]], "ChapelLocks.chpl_LocalSpinlock": [[28, 2, 1, "", "init"], [28, 2, 1, "", "init="], [28, 1, 1, "", "l"], [28, 2, 1, "", "lock"], [28, 2, 1, "", "unlock"]], "ChapelNumLocales": [[29, 4, 1, "", "chpl_comm_default_num_locales"], [29, 5, 1, "", "numLocales"]], "ChapelPrivatization": [[30, 4, 1, "", "chpl_getPrivatizedCopy"], [30, 6, 1, "", "chpl_privateObject_t"], [30, 5, 1, "", "chpl_privateObjects"]], "ChapelPrivatization.chpl_privateObject_t": [[30, 1, 1, "", "obj"]], "ChapelRange": [[31, 4, 1, "", "!="], [31, 4, 1, "", "+"], [31, 4, 1, "", "+="], [31, 4, 1, "", "-"], [31, 4, 1, "", "-="], [31, 4, 1, "", ":"], [31, 4, 1, "ChapelRange.<", "&lt;"], [31, 4, 1, "ChapelRange.<=", "&lt;="], [31, 4, 1, "", "="], [31, 4, 1, "", "=="], [31, 4, 1, "ChapelRange.>", "&gt;"], [31, 4, 1, "ChapelRange.>=", "&gt;="], [31, 6, 1, "", "_range"], [31, 4, 1, "", "align"], [31, 8, 1, "", "boundKind"], [31, 4, 1, "", "by"], [31, 4, 1, "", "chpl__add"], [31, 4, 1, "", "chpl__addRangeStrides"], [31, 4, 1, "", "chpl__diffMod"], [31, 4, 1, "", "chpl__extendedEuclid"], [31, 4, 1, "", "chpl__extendedEuclidHelper"], [31, 4, 1, "", "chpl__idxToInt"], [31, 4, 1, "", "chpl__idxTypeToIntIdxType"], [31, 4, 1, "", "chpl__intToIdx"], [31, 4, 1, "", "chpl__mod"], [31, 4, 1, "", "chpl__nudgeHighBound"], [31, 4, 1, "", "chpl__nudgeLowBound"], [31, 4, 1, "", "chpl__singleValIdxType"], [31, 4, 1, "", "chpl_assignStrideIsSafe"], [31, 4, 1, "", "chpl_assignStrideIsUnsafe"], [31, 4, 1, "", "chpl_bounded_count_for_param_loop_high"], [31, 4, 1, "", "chpl_bounded_count_for_param_loop_low"], [31, 4, 1, "", "chpl_build_bounded_range"], [31, 4, 1, "", "chpl_build_high_bounded_range"], [31, 4, 1, "", "chpl_build_low_bounded_range"], [31, 4, 1, "", "chpl_build_unbounded_range"], [31, 4, 1, "", "chpl_by_help"], [31, 4, 1, "", "chpl_castIsSafe"], [31, 4, 1, "", "chpl_checkIfRangeIterWillOverflow"], [31, 4, 1, "", "chpl_check_step_integral"], [31, 4, 1, "", "chpl_compute_count_param_loop"], [31, 4, 1, "", "chpl_compute_high_param_loop_bound"], [31, 4, 1, "", "chpl_compute_low_param_loop_bound"], [31, 4, 1, "", "chpl_count_help"], [31, 10, 1, "", "chpl_direct_counted_range_iter"], [31, 10, 1, "", "chpl_direct_counted_range_iter_helper"], [31, 10, 1, "", "chpl_direct_param_stride_range_iter"], [31, 10, 1, "", "chpl_direct_pos_stride_range_iter"], [31, 10, 1, "", "chpl_direct_range_iter"], [31, 10, 1, "", "chpl_direct_strided_range_iter"], [31, 4, 1, "", "chpl_high_bound_count_for_param_loop"], [31, 4, 1, "", "chpl_ident"], [31, 4, 1, "", "chpl_idxCastIsSafe"], [31, 4, 1, "", "chpl_idxCastThrows"], [31, 4, 1, "", "chpl_idxTypeSizeChange"], [31, 4, 1, "", "chpl_isValidRangeIdxType"], [31, 4, 1, "", "chpl_low_bound_count_for_param_loop"], [31, 4, 1, "", "chpl_need_to_check_step"], [31, 4, 1, "", "chpl_range_check_stride"], [31, 4, 1, "", "chpl_strideProduct"], [31, 4, 1, "", "chpl_strideUnion"], [31, 4, 1, "", "chpl_strideUnionRC"], [31, 4, 1, "", "chpl_throwingCast"], [31, 4, 1, "", "chpl_tryCastIsSafe"], [31, 5, 1, "", "debugChapelRange"], [31, 5, 1, "", "newRangeLiteralType"], [31, 5, 1, "", "newSliceRule"], [31, 8, 1, "", "strideKind"], [31, 5, 1, "", "useOptimizedRangeIterators"]], "ChapelRange._range": [[31, 1, 1, "", "_alignment"], [31, 1, 1, "", "_high"], [31, 1, 1, "", "_low"], [31, 1, 1, "", "_stride"], [31, 1, 1, "", "bounds"], [31, 1, 1, "", "idxType"], [31, 1, 1, "", "strides"]], "ChapelRange.boundKind": [[31, 9, 1, "", "both"], [31, 9, 1, "", "high"], [31, 9, 1, "", "low"], [31, 9, 1, "", "neither"]], "ChapelRange.range": [[31, 2, 1, "", "alignHigh"], [31, 2, 1, "", "alignLow"], [31, 2, 1, "", "alignedHighAsInt"], [31, 2, 1, "", "alignedLowAsInt"], [31, 2, 1, "", "alignment"], [31, 2, 1, "", "boundingBox"], [31, 2, 1, "", "checkIfIterWillOverflow"], [31, 2, 1, "", "chpl__promotionType"], [31, 2, 1, "", "chpl__unTranslate"], [31, 2, 1, "", "chpl_alignedHighAsIntForIter"], [31, 2, 1, "", "chpl_alignedLowAsIntForIter"], [31, 2, 1, "", "chpl_boundsCheck"], [31, 2, 1, "", "chpl_checkStrides"], [31, 2, 1, "", "chpl_firstAsIntForIter"], [31, 2, 1, "", "chpl_intToIdx"], [31, 2, 1, "", "chpl_integralIdxType"], [31, 2, 1, "", "chpl_isNaturallyAligned"], [31, 2, 1, "", "chpl_lastAsIntForIter"], [31, 2, 1, "", "chpl_setFields"], [31, 2, 1, "", "chpl_sizeAsForIter"], [31, 2, 1, "", "contains"], [31, 2, 1, "", "createWithSingleElement"], [31, 2, 1, "", "displayRepresentation"], [31, 2, 1, "", "expand"], [31, 2, 1, "", "exterior"], [31, 2, 1, "", "first"], [31, 2, 1, "", "firstAsInt"], [31, 3, 1, "", "generalIterator"], [31, 2, 1, "", "hasFirst"], [31, 2, 1, "", "hasFirstForIter"], [31, 2, 1, "", "hasHighBound"], [31, 2, 1, "", "hasLast"], [31, 2, 1, "", "hasLastForIter"], [31, 2, 1, "", "hasLowBound"], [31, 2, 1, "", "hasNegativeStride"], [31, 2, 1, "", "hasParamAligned"], [31, 2, 1, "", "hasParamAlignment"], [31, 2, 1, "", "hasParamAlignmentField"], [31, 2, 1, "", "hasParamStride"], [31, 2, 1, "", "hasParamStrideAltvalAld"], [31, 2, 1, "", "hasPosNegUnitStride"], [31, 2, 1, "", "hasPositiveStride"], [31, 2, 1, "", "hasUnitStride"], [31, 2, 1, "", "high"], [31, 2, 1, "", "highBound"], [31, 2, 1, "", "indexOrder"], [31, 2, 1, "", "init"], [31, 2, 1, "", "init="], [31, 2, 1, "", "interior"], [31, 2, 1, "", "isAligned"], [31, 2, 1, "", "isEmpty"], [31, 2, 1, "", "last"], [31, 2, 1, "", "lastAsInt"], [31, 2, 1, "", "low"], [31, 2, 1, "", "lowBound"], [31, 2, 1, "", "offset"], [31, 2, 1, "", "orderToIndex"], [31, 2, 1, "", "size"], [31, 2, 1, "", "sizeAs"], [31, 2, 1, "", "sizeAsHelp"], [31, 2, 1, "", "strType"], [31, 2, 1, "", "stride"], [31, 3, 1, "", "these"], [31, 2, 1, "", "translate"], [31, 2, 1, "", "tryCast"]], "ChapelRange.strideKind": [[31, 9, 1, "", "any"], [31, 2, 1, "", "defaultStride"], [31, 2, 1, "", "hasSign"], [31, 2, 1, "", "isAny"], [31, 2, 1, "", "isNegOne"], [31, 2, 1, "", "isNegative"], [31, 2, 1, "", "isOne"], [31, 2, 1, "", "isPosNegOne"], [31, 2, 1, "", "isPositive"], [31, 9, 1, "", "negOne"], [31, 9, 1, "", "negative"], [31, 9, 1, "", "one"], [31, 9, 1, "", "positive"]], "ChapelReduce": [[32, 0, 1, "", "BitwiseAndReduceScanOp"], [32, 0, 1, "", "BitwiseOrReduceScanOp"], [32, 0, 1, "", "BitwiseXorReduceScanOp"], [32, 0, 1, "", "LogicalAndReduceScanOp"], [32, 0, 1, "", "LogicalOrReduceScanOp"], [32, 0, 1, "", "MaxReduceScanOp"], [32, 0, 1, "", "MinReduceScanOp"], [32, 0, 1, "", "ProductReduceScanOp"], [32, 0, 1, "", "ReduceScanOp"], [32, 0, 1, "", "SumReduceScanOp"], [32, 4, 1, "", "_maxloc_id"], [32, 4, 1, "", "_minloc_id"], [32, 4, 1, "", "chpl__accumgen"], [32, 4, 1, "", "chpl__cleanupLocalOp"], [32, 4, 1, "", "chpl__reduceCombine"], [32, 4, 1, "", "chpl__scanIterator"], [32, 4, 1, "", "chpl__scanIteratorZip"], [32, 4, 1, "", "chpl__scanStateResTypesMatch"], [32, 4, 1, "", "chpl__sumType"], [32, 4, 1, "", "chpl_sumTypeIsSame"], [32, 0, 1, "", "maxloc"], [32, 0, 1, "", "minloc"], [32, 0, 1, "", "minmax"]], "ChapelReduce.BitwiseAndReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.BitwiseOrReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.BitwiseXorReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.LogicalAndReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.LogicalOrReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.MaxReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.MinReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.ProductReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.ReduceScanOp": [[32, 1, 1, "", "l"]], "ChapelReduce.SumReduceScanOp": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.maxloc": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.minloc": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelReduce.minmax": [[32, 2, 1, "", "accumulate"], [32, 2, 1, "", "accumulateOntoState"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "combine"], [32, 1, 1, "", "eltType"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "identity"], [32, 1, 1, "", "value"]], "ChapelRemoteVars": [[33, 4, 1, "", "__defaultValueForType"], [33, 0, 1, "", "_remoteVarContainer"], [33, 6, 1, "", "_remoteVarWrapper"], [33, 4, 1, "", "chpl__buildRemoteWrapper"]], "ChapelRemoteVars._remoteVarContainer": [[33, 1, 1, "", "containedValue"]], "ChapelRemoteVars._remoteVarWrapper": [[33, 1, 1, "", "eltType"], [33, 2, 1, "", "get"], [33, 2, 1, "", "init"], [33, 1, 1, "", "tmp"]], "ChapelSerializedBroadcast": [[34, 4, 1, "", "chpl__broadcastGlobal"], [34, 4, 1, "", "chpl__destroyBroadcastedGlobal"], [34, 5, 1, "", "chpl__enableSerializedGlobals"], [34, 4, 1, "", "chpl_get_global_serialize_table"]], "ChapelShortArrayTransfer": [[35, 4, 1, "", "chpl__dynamicCheckShortArrayTransfer"], [35, 4, 1, "", "chpl__staticCheckShortArrayTransfer"], [35, 5, 1, "", "debugShortArrayTransfer"], [35, 5, 1, "", "disableShortArrayTransfer"], [35, 5, 1, "", "shortArrayTransferThreshold"]], "ChapelStaticVars": [[37, 6, 1, "", "_staticWrapper"], [37, 0, 1, "", "_staticWrapperContainer"], [37, 4, 1, "", "chpl__executeStaticWrapperCleanupEverywhere"], [37, 4, 1, "", "chpl__functionStaticVariableWrapperType"], [37, 8, 1, "", "sharingKind"]], "ChapelStaticVars._staticWrapper": [[37, 2, 1, "", "callerShouldComputeValue"], [37, 1, 1, "", "container"], [37, 2, 1, "", "getValue"], [37, 2, 1, "", "init"], [37, 1, 1, "", "inited"], [37, 2, 1, "", "reset"], [37, 2, 1, "", "setValue"], [37, 1, 1, "", "valueType"]], "ChapelStaticVars._staticWrapperContainer": [[37, 1, 1, "", "value"]], "ChapelStaticVars.sharingKind": [[37, 9, 1, "", "computeOrRetrieve"], [37, 9, 1, "", "computePerLocale"]], "ChapelSyncvar": [[38, 4, 1, "", "%="], [38, 4, 1, "ChapelSyncvar.&=", "&amp;="], [38, 4, 1, "", "**="], [38, 4, 1, "", "*="], [38, 4, 1, "", "+="], [38, 4, 1, "", "-="], [38, 4, 1, "", "/="], [38, 4, 1, "", ":"], [38, 4, 1, "ChapelSyncvar.<<=", "&lt;&lt;="], [38, 4, 1, "ChapelSyncvar.<=>", "&lt;=&gt;"], [38, 4, 1, "", "="], [38, 4, 1, "ChapelSyncvar.>>=", "&gt;&gt;="], [38, 4, 1, "", "^="], [38, 0, 1, "", "_qthreads_synccls"], [38, 0, 1, "", "_singlecls"], [38, 6, 1, "", "_singlevar"], [38, 0, 1, "", "_synccls"], [38, 6, 1, "", "_syncvar"], [38, 4, 1, "", "chpl__autoCopy"], [38, 4, 1, "", "chpl__autoDestroy"], [38, 4, 1, "", "chpl__compilerGeneratedAssignSyncSingle"], [38, 4, 1, "", "chpl__compilerGeneratedCopySyncSingle"], [38, 4, 1, "", "chpl__initCopy"], [38, 4, 1, "", "chpl__maybeAutoDestroyed"], [38, 4, 1, "", "chpl__readXX"], [38, 5, 1, "", "useNativeSyncVar"], [38, 4, 1, "", "|="]], "ChapelSyncvar._qthreads_synccls": [[38, 1, 1, "", "alignedValue"], [38, 2, 1, "", "deinit"], [38, 2, 1, "", "init"], [38, 2, 1, "", "isFull"], [38, 2, 1, "", "readFE"], [38, 2, 1, "", "readFF"], [38, 2, 1, "", "readXX"], [38, 2, 1, "", "reset"], [38, 1, 1, "", "valType"], [38, 2, 1, "", "writeEF"], [38, 2, 1, "", "writeFF"], [38, 2, 1, "", "writeXF"]], "ChapelSyncvar._singlecls": [[38, 2, 1, "", "deinit"], [38, 2, 1, "", "init"], [38, 2, 1, "", "isFull"], [38, 2, 1, "", "readFF"], [38, 2, 1, "", "readXX"], [38, 1, 1, "", "singleAux"], [38, 1, 1, "", "valType"], [38, 1, 1, "", "value"], [38, 2, 1, "", "writeEF"]], "ChapelSyncvar._singlevar": [[38, 2, 1, "", "deinit"], [38, 2, 1, "", "deserialize"], [38, 2, 1, "", "deserializeFrom"], [38, 2, 1, "", "init"], [38, 2, 1, "", "init="], [38, 2, 1, "", "isFull"], [38, 1, 1, "", "isOwned"], [38, 2, 1, "", "readFF"], [38, 2, 1, "", "readXX"], [38, 2, 1, "", "serialize"], [38, 1, 1, "", "valType"], [38, 1, 1, "", "wrapped"], [38, 2, 1, "", "writeEF"]], "ChapelSyncvar._synccls": [[38, 2, 1, "", "deinit"], [38, 2, 1, "", "init"], [38, 2, 1, "", "isFull"], [38, 2, 1, "", "readFE"], [38, 2, 1, "", "reset"], [38, 1, 1, "", "syncAux"], [38, 1, 1, "", "valType"], [38, 1, 1, "", "value"], [38, 2, 1, "", "writeEF"], [38, 2, 1, "", "writeFF"], [38, 2, 1, "", "writeXF"]], "ChapelSyncvar._syncvar": [[38, 2, 1, "", "deinit"], [38, 2, 1, "", "deserialize"], [38, 2, 1, "", "deserializeFrom"], [38, 2, 1, "", "init"], [38, 2, 1, "", "init="], [38, 2, 1, "", "isFull"], [38, 1, 1, "", "isOwned"], [38, 2, 1, "", "readFE"], [38, 2, 1, "", "readFF"], [38, 2, 1, "", "readXX"], [38, 2, 1, "", "reset"], [38, 2, 1, "", "serialize"], [38, 1, 1, "", "valType"], [38, 1, 1, "", "wrapped"], [38, 2, 1, "", "writeEF"], [38, 2, 1, "", "writeFF"], [38, 2, 1, "", "writeXF"]], "ChapelTaskData": [[39, 4, 1, "", "chpl_task_data_getCommDiagsTemporarilyDisabled"], [39, 4, 1, "", "chpl_task_data_getDynamicEndCount"], [39, 4, 1, "", "chpl_task_data_getNextCoStmtSerial"], [39, 4, 1, "", "chpl_task_data_getSerial"], [39, 4, 1, "", "chpl_task_data_setCommDiagsTemporarilyDisabled"], [39, 4, 1, "", "chpl_task_data_setDynamicEndCount"], [39, 4, 1, "", "chpl_task_data_setNextCoStmtSerial"], [39, 4, 1, "", "chpl_task_data_setSerial"], [39, 4, 1, "", "chpl_task_getCommDiagsTemporarilyDisabled"], [39, 4, 1, "", "chpl_task_getDynamicEndCount"], [39, 4, 1, "", "chpl_task_getSerial"], [39, 4, 1, "", "chpl_task_setCommDiagsTemporarilyDisabled"], [39, 4, 1, "", "chpl_task_setDynamicEndCount"], [39, 4, 1, "", "chpl_task_setSerial"]], "ChapelTaskDataHelp": [[40, 4, 1, "", "chpl_save_task_error"], [40, 4, 1, "", "chpl_save_task_error_owned"], [40, 4, 1, "", "chpl_task_data_setup"], [40, 4, 1, "", "chpl_task_getInfoChapel"], [40, 4, 1, "", "chpl_task_getInfoChapelInBundle"], [40, 7, 1, "", "chpl_task_infoChapel_t"]], "ChapelTaskID": [[41, 4, 1, "", "!="], [41, 4, 1, "", ":"], [41, 4, 1, "", "="], [41, 4, 1, "", "=="]], "ChapelThreads": [[42, 4, 1, "", "chpl_task_getenvNumThreadsPerLocale"], [42, 5, 1, "", "numThreadsPerLocale"]], "ChapelTuple": [[43, 4, 1, "", "!"], [43, 4, 1, "", "!="], [43, 4, 1, "", "%"], [43, 4, 1, "ChapelTuple.&", "&amp;"], [43, 4, 1, "", "*"], [43, 4, 1, "", "**"], [43, 4, 1, "", "+"], [43, 4, 1, "", "-"], [43, 4, 1, "", "/"], [43, 4, 1, "", ":"], [43, 4, 1, "ChapelTuple.<", "&lt;"], [43, 4, 1, "ChapelTuple.<<", "&lt;&lt;"], [43, 4, 1, "ChapelTuple.<=", "&lt;="], [43, 4, 1, "", "="], [43, 4, 1, "", "=="], [43, 4, 1, "ChapelTuple.>", "&gt;"], [43, 4, 1, "ChapelTuple.>=", "&gt;="], [43, 4, 1, "ChapelTuple.>>", "&gt;&gt;"], [43, 5, 1, "", "CHPL_WARN_TUPLE_ITERATION"], [43, 4, 1, "", "^"], [43, 4, 1, "", "_build_star_tuple_noref"], [43, 4, 1, "", "_build_tuple"], [43, 4, 1, "", "_build_tuple_always_allow_ref"], [43, 4, 1, "", "_build_tuple_noref"], [43, 4, 1, "", "_check_tuple_var_decl"], [43, 6, 1, "", "_tuple"], [43, 4, 1, "", "chpl_TwoHomogTuples"], [43, 4, 1, "", "chpl__init_tuple"], [43, 4, 1, "", "chpl__tupleRest"], [43, 4, 1, "", "chpl__tuplify"], [43, 4, 1, "", "chpl__unref"], [43, 4, 1, "", "max"], [43, 4, 1, "", "min"], [43, 4, 1, "", "|"], [43, 4, 1, "", "~"]], "ChapelTuple._tuple": [[43, 2, 1, "", "indices"], [43, 1, 1, "", "size"], [43, 3, 1, "", "these"], [43, 2, 1, "", "this"]], "ChapelUtil": [[44, 4, 1, "", "_command_line_cast"], [44, 4, 1, "", "allocate_string_literals_buf"], [44, 4, 1, "", "chpl_addModule"], [44, 4, 1, "", "chpl_convert_args"], [44, 4, 1, "", "chpl_deinitModules"], [44, 4, 1, "", "chpl_get_mli_connection"], [44, 6, 1, "", "chpl_main_argument"], [44, 4, 1, "", "chpl_rt_postUserCodeHook"], [44, 4, 1, "", "chpl_rt_preUserCodeHook"], [44, 4, 1, "", "deallocate_string_literals_buf"], [44, 5, 1, "", "printModuleDeinitOrder"], [44, 4, 1, "", "safeAdd"], [44, 4, 1, "", "safeMul"], [44, 4, 1, "", "safeSub"]], "ChapelUtil.chpl_main_argument": [[44, 1, 1, "", "argc"], [44, 1, 1, "", "return_value"]], "DefaultAssociative": [[45, 0, 1, "", "DefaultAssociativeArr"], [45, 0, 1, "", "DefaultAssociativeDom"], [45, 0, 1, "", "DefaultAssociativeDomRehashHelper"], [45, 4, 1, "", "chpl_serialReadWriteAssociativeHelper"], [45, 5, 1, "", "debugAssocDataPar"], [45, 5, 1, "", "debugDefaultAssoc"], [45, 5, 1, "", "defaultAssociativeSupportsAutoLocalAccess"]], "DefaultAssociative.DefaultAssociativeArr": [[45, 2, 1, "", "_defaultInitSlot"], [45, 2, 1, "", "_deinitElement"], [45, 2, 1, "", "_deinitSlot"], [45, 2, 1, "", "_doDefaultInitSlot"], [45, 2, 1, "", "_elementNeedsDeinit"], [45, 2, 1, "", "_finishRehash"], [45, 2, 1, "", "_moveElementDuringRehash"], [45, 2, 1, "", "_startRehash"], [45, 1, 1, "", "data"], [45, 1, 1, "", "dataSize"], [45, 2, 1, "", "deinit"], [45, 1, 1, "", "dom"], [45, 2, 1, "", "dsiAccess"], [45, 2, 1, "", "dsiDestroyArr"], [45, 2, 1, "", "dsiElementDeinitializationComplete"], [45, 2, 1, "", "dsiElementInitializationComplete"], [45, 2, 1, "", "dsiGetBaseDom"], [45, 2, 1, "", "dsiHasSingleLocalSubdomain"], [45, 2, 1, "", "dsiLocalAccess"], [45, 2, 1, "", "dsiLocalSubdomain"], [45, 2, 1, "", "dsiSerialRead"], [45, 2, 1, "", "dsiSerialReadWrite"], [45, 2, 1, "", "dsiSerialWrite"], [45, 3, 1, "", "dsiSorted"], [45, 2, 1, "", "dsiTargetLocales"], [45, 1, 1, "", "eltsNeedDeinit"], [45, 1, 1, "", "idxType"], [45, 2, 1, "", "init"], [45, 1, 1, "", "parSafeDom"], [45, 2, 1, "", "rank"], [45, 2, 1, "", "readChapelStyleAssocArray"], [45, 3, 1, "", "these"], [45, 1, 1, "", "tmpData"]], "DefaultAssociative.DefaultAssociativeDom": [[45, 2, 1, "", "_add"], [45, 3, 1, "", "_fullSlots"], [45, 2, 1, "", "_isSlotFull"], [45, 2, 1, "", "deinit"], [45, 1, 1, "", "dist"], [45, 2, 1, "", "dsiAdd"], [45, 2, 1, "", "dsiAssignDomain"], [45, 2, 1, "", "dsiBuildArray"], [45, 2, 1, "", "dsiClear"], [45, 2, 1, "", "dsiHasSingleLocalSubdomain"], [45, 3, 1, "", "dsiIndsIterSafeForRemoving"], [45, 2, 1, "", "dsiLinksDistribution"], [45, 2, 1, "", "dsiLocalSubdomain"], [45, 2, 1, "", "dsiMember"], [45, 2, 1, "", "dsiMyDist"], [45, 2, 1, "", "dsiNumIndices"], [45, 2, 1, "", "dsiRemove"], [45, 2, 1, "", "dsiRequestCapacity"], [45, 2, 1, "", "dsiSerialRead"], [45, 2, 1, "", "dsiSerialWrite"], [45, 3, 1, "", "dsiSorted"], [45, 2, 1, "", "dsiSupportsAutoLocalAccess"], [45, 2, 1, "", "dsiTargetLocales"], [45, 1, 1, "", "idxType"], [45, 2, 1, "", "init"], [45, 2, 1, "", "linksDistribution"], [45, 2, 1, "", "lockTable"], [45, 1, 1, "", "numEntries"], [45, 1, 1, "", "parSafe"], [45, 1, 1, "", "table"], [45, 1, 1, "", "tableLock"], [45, 3, 1, "", "these"], [45, 2, 1, "", "unlockTable"]], "DefaultAssociative.DefaultAssociativeDomRehashHelper": [[45, 1, 1, "", "dom"], [45, 2, 1, "", "finishRehash"], [45, 2, 1, "", "moveElementDuringRehash"], [45, 2, 1, "", "startRehash"]], "DefaultRectangular": [[46, 8, 1, "", "ArrayStorageOrder"], [46, 0, 1, "", "DefaultDist"], [46, 0, 1, "", "DefaultRectangularArr"], [46, 0, 1, "", "DefaultRectangularDom"], [46, 0, 1, "", "LocRADCache"], [46, 6, 1, "", "_remoteAccessData"], [46, 4, 1, "", "_supportsBulkElements"], [46, 4, 1, "", "_supportsSerializers"], [46, 4, 1, "", "chpl__intToIdx"], [46, 10, 1, "", "chpl__serialViewIter"], [46, 10, 1, "", "chpl__serialViewIter1D"], [46, 10, 1, "", "chpl__serialViewIterHelper"], [46, 4, 1, "", "chpl_defaultDistInitPrivate"], [46, 4, 1, "", "chpl_serialReadWriteRectangular"], [46, 4, 1, "", "chpl_serialReadWriteRectangularHelper"], [46, 5, 1, "", "dataParIgnoreRunningTasks"], [46, 5, 1, "", "dataParMinGranularity"], [46, 5, 1, "", "dataParTasksPerLocale"], [46, 5, 1, "", "debugDRScan"], [46, 5, 1, "", "debugDataPar"], [46, 5, 1, "", "debugDataParNuma"], [46, 5, 1, "", "debugDefaultDist"], [46, 5, 1, "", "debugDefaultDistBulkTransfer"], [46, 5, 1, "", "defaultDisableLazyRADOpt"], [46, 5, 1, "", "defaultDist"], [46, 5, 1, "", "defaultDoRADOpt"], [46, 5, 1, "", "defaultRectangularSupportsAutoLocalAccess"], [46, 5, 1, "", "defaultStorageOrder"], [46, 5, 1, "", "disableArrRealloc"], [46, 5, 1, "", "earlyShiftData"], [46, 5, 1, "", "enableParallelGetsInAssignment"], [46, 5, 1, "", "enableParallelPutsInAssignment"], [46, 5, 1, "", "parallelAssignThreshold"], [46, 4, 1, "", "polly_array_index"], [46, 5, 1, "", "reportInPlaceRealloc"], [46, 5, 1, "", "storageOrder"], [46, 5, 1, "", "usePollyArrayIndex"]], "DefaultRectangular.ArrayStorageOrder": [[46, 9, 1, "", "CMO"], [46, 9, 1, "", "RMO"]], "DefaultRectangular.DefaultDist": [[46, 2, 1, "", "dsiAssign"], [46, 2, 1, "", "dsiClone"], [46, 2, 1, "", "dsiEqualDMaps"], [46, 2, 1, "", "dsiIndexToLocale"], [46, 2, 1, "", "dsiIsLayout"], [46, 2, 1, "", "dsiNewAssociativeDom"], [46, 2, 1, "", "dsiNewRectangularDom"], [46, 2, 1, "", "dsiNewSparseDom"], [46, 2, 1, "", "dsiTargetLocales"], [46, 2, 1, "", "dsiTrackDomains"], [46, 2, 1, "", "singleton"], [46, 2, 1, "", "trackDomains"]], "DefaultRectangular.DefaultRectangularArr": [[46, 1, 1, "", "_borrowed"], [46, 2, 1, "", "adjustBlkOffStrForNewDomain"], [46, 1, 1, "", "blk"], [46, 1, 1, "", "callPostAlloc"], [46, 2, 1, "", "chpl__postScan"], [46, 2, 1, "", "chpl__preScan"], [46, 2, 1, "", "chpl_integralIdxType"], [46, 2, 1, "", "chpl_unsafeAssignIsClassElementNil"], [46, 2, 1, "", "computeFactoredOffs"], [46, 1, 1, "", "data"], [46, 1, 1, "", "deinitElts"], [46, 2, 1, "", "doiBulkTransferFromKnown"], [46, 2, 1, "", "doiBulkTransferToKnown"], [46, 2, 1, "", "doiCanBulkTransferRankChange"], [46, 2, 1, "", "doiOptimizedSwap"], [46, 2, 1, "", "doiScan"], [46, 1, 1, "", "dom"], [46, 2, 1, "", "dsiAccess"], [46, 2, 1, "", "dsiBoundsCheck"], [46, 2, 1, "", "dsiDestroyArr"], [46, 2, 1, "", "dsiDisplayRepresentation"], [46, 2, 1, "", "dsiElementDeinitializationComplete"], [46, 2, 1, "", "dsiElementInitializationComplete"], [46, 2, 1, "", "dsiGetBaseDom"], [46, 2, 1, "", "dsiGetRAD"], [46, 2, 1, "", "dsiHasSingleLocalSubdomain"], [46, 2, 1, "", "dsiIteratorYieldsLocalElements"], [46, 2, 1, "", "dsiLocalSlice"], [46, 2, 1, "", "dsiLocalSubdomain"], [46, 3, 1, "", "dsiLocalSubdomains"], [46, 2, 1, "", "dsiPostReallocate"], [46, 2, 1, "", "dsiReallocate"], [46, 2, 1, "", "dsiSerialRead"], [46, 2, 1, "", "dsiSerialReadWrite"], [46, 2, 1, "", "dsiSerialWrite"], [46, 2, 1, "", "dsiTargetLocales"], [46, 1, 1, "", "externArr"], [46, 1, 1, "", "externFreeFunc"], [46, 1, 1, "", "factoredOffs"], [46, 2, 1, "", "getDataIndex"], [46, 1, 1, "", "idxSignedType"], [46, 2, 1, "", "init"], [46, 2, 1, "", "initShiftedData"], [46, 2, 1, "", "isDataContiguous"], [46, 2, 1, "", "isDefaultRectangular"], [46, 1, 1, "", "off"], [46, 2, 1, "", "setupFieldsAndAllocate"], [46, 1, 1, "", "shiftedData"], [46, 1, 1, "", "sizesPerDim"], [46, 1, 1, "", "str"], [46, 2, 1, "", "theData"], [46, 3, 1, "", "these"]], "DefaultRectangular.DefaultRectangularDom": [[46, 6, 1, "", "_serialized_domain"], [46, 2, 1, "", "chpl__deserialize"], [46, 2, 1, "", "chpl__serialize"], [46, 2, 1, "", "chpl_intToIdx"], [46, 2, 1, "", "chpl_integralIdxType"], [46, 1, 1, "", "dist"], [46, 2, 1, "", "doiToString"], [46, 2, 1, "", "doiTryCreateArray"], [46, 2, 1, "", "dsiAlignedHigh"], [46, 2, 1, "", "dsiAlignedLow"], [46, 2, 1, "", "dsiAlignment"], [46, 2, 1, "", "dsiAssignDomain"], [46, 2, 1, "", "dsiBuildArray"], [46, 2, 1, "", "dsiBuildArrayWith"], [46, 2, 1, "", "dsiDim"], [46, 2, 1, "", "dsiDims"], [46, 2, 1, "", "dsiDisplayRepresentation"], [46, 2, 1, "", "dsiFirst"], [46, 2, 1, "", "dsiGetIndices"], [46, 2, 1, "", "dsiHasSingleLocalSubdomain"], [46, 2, 1, "", "dsiHigh"], [46, 2, 1, "", "dsiIndexOrder"], [46, 2, 1, "", "dsiLast"], [46, 2, 1, "", "dsiLinksDistribution"], [46, 2, 1, "", "dsiLocalSlice"], [46, 2, 1, "", "dsiLocalSubdomain"], [46, 3, 1, "", "dsiLocalSubdomains"], [46, 2, 1, "", "dsiLow"], [46, 2, 1, "", "dsiMember"], [46, 2, 1, "", "dsiMyDist"], [46, 2, 1, "", "dsiNumIndices"], [46, 2, 1, "", "dsiSerialRead"], [46, 2, 1, "", "dsiSerialReadWrite"], [46, 2, 1, "", "dsiSerialWrite"], [46, 2, 1, "", "dsiSetIndices"], [46, 2, 1, "", "dsiStride"], [46, 2, 1, "", "dsiSupportsAutoLocalAccess"], [46, 2, 1, "", "dsiTargetLocales"], [46, 2, 1, "", "init"], [46, 2, 1, "", "isDefaultRectangular"], [46, 2, 1, "", "linksDistribution"], [46, 2, 1, "", "parSafe"], [46, 1, 1, "", "ranges"], [46, 3, 1, "", "these"], [46, 3, 1, "", "these_help"]], "DefaultRectangular.DefaultRectangularDom._serialized_domain": [[46, 1, 1, "", "dims"], [46, 1, 1, "", "idxType"], [46, 1, 1, "", "isDefaultRectangular"], [46, 1, 1, "", "rank"], [46, 1, 1, "", "strides"]], "DefaultRectangular.LocRADCache": [[46, 1, 1, "", "RAD"], [46, 1, 1, "", "RADLocks"], [46, 1, 1, "", "eltType"], [46, 1, 1, "", "idxType"], [46, 2, 1, "", "init"], [46, 2, 1, "", "lockRAD"], [46, 1, 1, "", "rank"], [46, 1, 1, "", "strides"], [46, 1, 1, "", "targetLocDom"], [46, 2, 1, "", "unlockRAD"]], "DefaultRectangular._remoteAccessData": [[46, 1, 1, "", "blk"], [46, 1, 1, "", "blkChanged"], [46, 2, 1, "", "computeFactoredOffs"], [46, 1, 1, "", "data"], [46, 2, 1, "", "dataElem"], [46, 1, 1, "", "eltType"], [46, 1, 1, "", "factoredOffs"], [46, 2, 1, "", "getDataElem"], [46, 2, 1, "", "getDataIndex"], [46, 2, 1, "", "hasUnitStride"], [46, 1, 1, "", "idxType"], [46, 2, 1, "", "initDataFrom"], [46, 2, 1, "", "initShiftedData"], [46, 1, 1, "", "off"], [46, 1, 1, "", "origin"], [46, 1, 1, "", "rank"], [46, 1, 1, "", "shiftedData"], [46, 2, 1, "", "shiftedDataElem"], [46, 1, 1, "", "str"], [46, 2, 1, "", "strideAlignDown"], [46, 2, 1, "", "strideAlignUp"], [46, 1, 1, "", "strides"], [46, 2, 1, "", "theData"], [46, 2, 1, "", "toRankChange"], [46, 2, 1, "", "toReindex"], [46, 2, 1, "", "toSlice"]], "DefaultSparse": [[47, 0, 1, "", "DefaultSparseArr"], [47, 0, 1, "", "DefaultSparseDom"], [47, 5, 1, "", "debugDefaultSparse"], [47, 5, 1, "", "defaultSparseSupportsAutoLocalAccess"]], "DefaultSparse.DefaultSparseArr": [[47, 2, 1, "", "doiBulkTransferFromKnown"], [47, 2, 1, "", "doiBulkTransferToKnown"], [47, 2, 1, "", "dsiAccess"], [47, 2, 1, "", "dsiHasSingleLocalSubdomain"], [47, 2, 1, "", "dsiLocalSubdomain"], [47, 2, 1, "", "dsiSerialWrite"], [47, 2, 1, "", "dsiTargetLocales"], [47, 2, 1, "", "init"], [47, 3, 1, "", "these"]], "DefaultSparse.DefaultSparseDom": [[47, 1, 1, "", "_indices"], [47, 1, 1, "", "_nnz"], [47, 2, 1, "", "add_help"], [47, 2, 1, "", "bulkAdd_help"], [47, 3, 1, "", "dimIter"], [47, 1, 1, "", "dist"], [47, 2, 1, "", "dsiAdd"], [47, 2, 1, "", "dsiAssignDomain"], [47, 2, 1, "", "dsiBuildArray"], [47, 2, 1, "", "dsiClear"], [47, 2, 1, "", "dsiFirst"], [47, 2, 1, "", "dsiHasSingleLocalSubdomain"], [47, 3, 1, "", "dsiIndsIterSafeForRemoving"], [47, 2, 1, "", "dsiLast"], [47, 2, 1, "", "dsiLinksDistribution"], [47, 2, 1, "", "dsiLocalSubdomain"], [47, 2, 1, "", "dsiMember"], [47, 2, 1, "", "dsiMyDist"], [47, 2, 1, "", "dsiRemove"], [47, 2, 1, "", "dsiSerialWrite"], [47, 2, 1, "", "dsiSupportsAutoLocalAccess"], [47, 2, 1, "", "dsiTargetLocales"], [47, 2, 1, "", "find"], [47, 2, 1, "", "getNNZ"], [47, 2, 1, "", "init"], [47, 2, 1, "", "linksDistribution"], [47, 2, 1, "", "parSafe"], [47, 2, 1, "", "rem_help"], [47, 3, 1, "", "these"]], "ExportWrappers": [[48, 4, 1, "", "chpl__exportArg"], [48, 4, 1, "", "chpl__exportRet"], [48, 4, 1, "", "chpl__exportRetStringOrBytes"], [48, 7, 1, "", "chpl__exportTypeChplByteBuffer"], [48, 6, 1, "", "chpl_byte_buffer"], [48, 4, 1, "", "chpl_byte_buffer_free"], [48, 4, 1, "", "chpl_libraryModuleLevelCleanup"], [48, 4, 1, "", "chpl_libraryModuleLevelSetup"]], "ExportWrappers.chpl_byte_buffer": [[48, 1, 1, "", "data"], [48, 1, 1, "", "isOwned"], [48, 1, 1, "", "size"]], "ExternalArray": [[49, 4, 1, "", "chpl_call_free_func"], [49, 6, 1, "", "chpl_external_array"], [49, 4, 1, "", "chpl_free_external_array"], [49, 4, 1, "", "chpl_make_external_array"], [49, 4, 1, "", "chpl_make_external_array_ptr"], [49, 4, 1, "", "chpl_make_external_array_ptr_free"], [49, 6, 1, "", "chpl_opaque_array"], [49, 4, 1, "", "cleanupOpaqueArray"], [49, 4, 1, "", "convertStringOrBytes"], [49, 4, 1, "", "convertToExternalArray"], [49, 4, 1, "", "getExternalArrayType"], [49, 4, 1, "", "makeArrayFromExternArray"], [49, 4, 1, "", "makeArrayFromOpaque"], [49, 4, 1, "", "makeArrayFromPtr"]], "ExternalArray.chpl_external_array": [[49, 1, 1, "", "elts"], [49, 1, 1, "", "freer"], [49, 1, 1, "", "num_elts"]], "ExternalArray.chpl_opaque_array": [[49, 1, 1, "", "_instance"], [49, 1, 1, "", "_pid"], [49, 1, 1, "", "_unowned"]], "ISO_Fortran_binding": [[50, 5, 1, "", "CFI_ERROR_BASE_ADDR_NOT_NULL"], [50, 5, 1, "", "CFI_ERROR_BASE_ADDR_NULL"], [50, 5, 1, "", "CFI_ERROR_MEM_ALLOCATION"], [50, 5, 1, "", "CFI_ERROR_OUT_OF_BOUNDS"], [50, 5, 1, "", "CFI_INVALID_ATTRIBUTE"], [50, 5, 1, "", "CFI_INVALID_DESCRIPTOR"], [50, 5, 1, "", "CFI_INVALID_ELEM_LEN"], [50, 5, 1, "", "CFI_INVALID_EXTENT"], [50, 5, 1, "", "CFI_INVALID_RANK"], [50, 5, 1, "", "CFI_INVALID_TYPE"], [50, 5, 1, "", "CFI_MAX_RANK"], [50, 5, 1, "", "CFI_SUCCESS"], [50, 5, 1, "", "CFI_VERSION"], [50, 5, 1, "", "CFI__VERSION_0001"], [50, 5, 1, "", "CFI__max_attribute"], [50, 5, 1, "", "CFI__max_type"], [50, 4, 1, "", "CFI_address"], [50, 4, 1, "", "CFI_allocate"], [50, 5, 1, "", "CFI_attribute_allocatable"], [50, 5, 1, "", "CFI_attribute_other"], [50, 5, 1, "", "CFI_attribute_pointer"], [50, 7, 1, "", "CFI_attribute_t"], [50, 6, 1, "", "CFI_cdesc_t"], [50, 4, 1, "", "CFI_deallocate"], [50, 6, 1, "", "CFI_dim_t"], [50, 4, 1, "", "CFI_establish"], [50, 7, 1, "", "CFI_index_t"], [50, 4, 1, "", "CFI_is_contiguous"], [50, 7, 1, "", "CFI_rank_t"], [50, 4, 1, "", "CFI_section"], [50, 4, 1, "", "CFI_select_part"], [50, 4, 1, "", "CFI_setpointer"], [50, 5, 1, "", "CFI_type_Bool"], [50, 5, 1, "", "CFI_type_char"], [50, 5, 1, "", "CFI_type_cptr"], [50, 5, 1, "", "CFI_type_double"], [50, 5, 1, "", "CFI_type_double_Complex"], [50, 5, 1, "", "CFI_type_float"], [50, 5, 1, "", "CFI_type_int"], [50, 5, 1, "", "CFI_type_int16_t"], [50, 5, 1, "", "CFI_type_int32_t"], [50, 5, 1, "", "CFI_type_int64_t"], [50, 5, 1, "", "CFI_type_int8_t"], [50, 5, 1, "", "CFI_type_int_fast16_t"], [50, 5, 1, "", "CFI_type_int_fast32_t"], [50, 5, 1, "", "CFI_type_int_fast64_t"], [50, 5, 1, "", "CFI_type_int_fast8_t"], [50, 5, 1, "", "CFI_type_int_least16_t"], [50, 5, 1, "", "CFI_type_int_least32_t"], [50, 5, 1, "", "CFI_type_int_least64_t"], [50, 5, 1, "", "CFI_type_int_least8_t"], [50, 5, 1, "", "CFI_type_intmax_t"], [50, 5, 1, "", "CFI_type_intptr_t"], [50, 5, 1, "", "CFI_type_long"], [50, 5, 1, "", "CFI_type_long_double"], [50, 5, 1, "", "CFI_type_long_double_Complex"], [50, 5, 1, "", "CFI_type_long_long"], [50, 5, 1, "", "CFI_type_other"], [50, 5, 1, "", "CFI_type_ptrdiff_t"], [50, 5, 1, "", "CFI_type_short"], [50, 5, 1, "", "CFI_type_signed_char"], [50, 5, 1, "", "CFI_type_size_t"], [50, 5, 1, "", "CFI_type_struct"], [50, 7, 1, "", "CFI_type_t"], [50, 4, 1, "", "for_CFI_address"], [50, 4, 1, "", "for_CFI_allocate"], [50, 4, 1, "", "for_CFI_deallocate"], [50, 4, 1, "", "for_CFI_establish"], [50, 4, 1, "", "for_CFI_is_contiguous"], [50, 4, 1, "", "for_CFI_section"], [50, 4, 1, "", "for_CFI_select_part"], [50, 4, 1, "", "for_CFI_setpointer"], [50, 4, 1, "", "makeArrayFromFortranArray"]], "ISO_Fortran_binding.CFI_cdesc_t": [[50, 1, 1, "", "attribute"], [50, 1, 1, "", "base_addr"], [50, 1, 1, "", "ctype"], [50, 1, 1, "", "dim"], [50, 1, 1, "", "elem_len"], [50, 1, 1, "", "rank"], [50, 1, 1, "", "version"]], "ISO_Fortran_binding.CFI_dim_t": [[50, 1, 1, "", "extent"], [50, 1, 1, "", "lower_bound"], [50, 1, 1, "", "sm"]], "LocaleModelHelpAPU": [[51, 4, 1, "", "chpl_doDirectExecuteOn"], [51, 4, 1, "", "chpl_executeOn"], [51, 4, 1, "", "chpl_executeOnFast"], [51, 4, 1, "", "chpl_executeOnNB"], [51, 4, 1, "", "chpl_getSubloc"], [51, 4, 1, "", "chpl_task_setSubloc"], [51, 5, 1, "", "debugAPULocale"], [51, 5, 1, "", "localeModelHasSublocales"], [51, 5, 1, "", "localeModelPartitionsIterationOnSublocales"]], "LocaleModelHelpFlat": [[52, 4, 1, "", "chpl_doDirectExecuteOn"], [52, 4, 1, "", "chpl_executeOn"], [52, 4, 1, "", "chpl_executeOnFast"], [52, 4, 1, "", "chpl_executeOnNB"], [52, 5, 1, "", "localeModelHasSublocales"], [52, 5, 1, "", "localeModelPartitionsIterationOnSublocales"]], "LocaleModelHelpGPU": [[53, 4, 1, "", "chpl_doDirectExecuteOn"], [53, 4, 1, "", "chpl_executeOn"], [53, 4, 1, "", "chpl_executeOnFast"], [53, 4, 1, "", "chpl_executeOnNB"], [53, 4, 1, "", "chpl_getSubloc"], [53, 4, 1, "", "chpl_task_setSubloc"], [53, 5, 1, "", "debugGPULocale"], [53, 5, 1, "", "localeModelHasSublocales"], [53, 5, 1, "", "localeModelPartitionsIterationOnSublocales"]], "LocaleModelHelpMem": [[54, 4, 1, "", "chpl_here_aligned_alloc"], [54, 4, 1, "", "chpl_here_alloc"], [54, 4, 1, "", "chpl_here_calloc"], [54, 4, 1, "", "chpl_here_free"], [54, 4, 1, "", "chpl_here_good_alloc_size"], [54, 4, 1, "", "chpl_here_realloc"]], "LocaleModelHelpRuntime": [[55, 4, 1, "", "chpl__initCopy"], [55, 4, 1, "", "chpl_buildLocaleID"], [55, 4, 1, "", "chpl_comm_execute_on"], [55, 4, 1, "", "chpl_comm_execute_on_fast"], [55, 4, 1, "", "chpl_comm_execute_on_nb"], [55, 7, 1, "", "chpl_comm_on_bundle_p"], [55, 6, 1, "", "chpl_comm_on_bundle_t"], [55, 4, 1, "", "chpl_comm_on_bundle_task_bundle"], [55, 4, 1, "", "chpl_comm_taskCallFTable"], [55, 4, 1, "", "chpl_ftable_call"], [55, 6, 1, "", "chpl_localeID_t"], [55, 4, 1, "", "chpl_nodeFromLocaleID"], [55, 4, 1, "", "chpl_rt_buildLocaleID"], [55, 4, 1, "", "chpl_rt_nodeFromLocaleID"], [55, 4, 1, "", "chpl_rt_sublocFromLocaleID"], [55, 4, 1, "", "chpl_sublocFromLocaleID"], [55, 4, 1, "", "chpl_taskAddBegin"], [55, 4, 1, "", "chpl_taskAddCoStmt"], [55, 4, 1, "", "chpl_task_addTask"], [55, 7, 1, "", "chpl_task_bundle_p"], [55, 6, 1, "", "chpl_task_bundle_t"], [55, 4, 1, "", "chpl_task_yield"]], "LocaleModelHelpSetup": [[56, 4, 1, "", "chpl_nodeID"], [56, 6, 1, "", "chpl_root_locale_accum"], [56, 5, 1, "", "debugLocaleModel"], [56, 4, 1, "", "helpSetupLocaleAPU"], [56, 4, 1, "", "helpSetupLocaleFlat"], [56, 4, 1, "", "helpSetupLocaleGPU"], [56, 4, 1, "", "helpSetupLocaleNUMA"], [56, 4, 1, "", "helpSetupRootLocaleAPU"], [56, 4, 1, "", "helpSetupRootLocaleFlat"], [56, 4, 1, "", "helpSetupRootLocaleGPU"], [56, 4, 1, "", "helpSetupRootLocaleNUMA"]], "LocaleModelHelpSetup.chpl_root_locale_accum": [[56, 2, 1, "", "accum"], [56, 2, 1, "", "init"], [56, 2, 1, "", "init="], [56, 1, 1, "", "maxTaskPar"], [56, 1, 1, "", "nPUsLogAcc"], [56, 1, 1, "", "nPUsLogAll"], [56, 1, 1, "", "nPUsPhysAcc"], [56, 1, 1, "", "nPUsPhysAll"], [56, 2, 1, "", "setRootLocaleValues"]], "LocalesArray": [[57, 5, 1, "", "LocaleSpace"], [57, 5, 1, "", "Locales"]], "MemConsistency": [[58, 4, 1, "", "_defaultOf"], [58, 4, 1, "", "c_memory_order"], [58, 4, 1, "", "chpl_rmem_consist_acquire"], [58, 4, 1, "", "chpl_rmem_consist_fence"], [58, 4, 1, "", "chpl_rmem_consist_maybe_acquire"], [58, 4, 1, "", "chpl_rmem_consist_maybe_release"], [58, 4, 1, "", "chpl_rmem_consist_release"], [58, 8, 1, "", "memoryOrder"], [58, 7, 1, "", "memory_order"], [58, 5, 1, "", "memory_order_acq_rel"], [58, 5, 1, "", "memory_order_acquire"], [58, 5, 1, "", "memory_order_consume"], [58, 5, 1, "", "memory_order_relaxed"], [58, 5, 1, "", "memory_order_release"], [58, 5, 1, "", "memory_order_seq_cst"], [58, 4, 1, "", "readableOrder"]], "MemConsistency.memoryOrder": [[58, 9, 1, "", "acqRel"], [58, 9, 1, "", "acquire"], [58, 9, 1, "", "relaxed"], [58, 9, 1, "", "release"], [58, 9, 1, "", "seqCst"]], "MemConsistency.memory_order": [[58, 2, 1, "", "!="], [58, 2, 1, "", "="], [58, 2, 1, "", "=="], [58, 2, 1, "", "serialize"]], "MemTracking": [[59, 5, 1, "", "cMemMax"], [59, 5, 1, "", "cMemThreshold"], [59, 4, 1, "", "chpl_memTracking_returnConfigVals"], [59, 5, 1, "", "memLeaks"], [59, 5, 1, "", "memLeaksByDesc"], [59, 5, 1, "", "memLeaksByType"], [59, 5, 1, "", "memLeaksLog"], [59, 5, 1, "", "memLog"], [59, 5, 1, "", "memMax"], [59, 5, 1, "", "memStats"], [59, 5, 1, "", "memThreshold"], [59, 5, 1, "", "memTrack"]], "NVStringFactory": [[66, 4, 1, "", "chpl_createStringWithBorrowedBufferNV"], [66, 4, 1, "", "chpl_createStringWithNewBufferNV"], [66, 4, 1, "", "chpl_createStringWithOwnedBufferNV"]], "NetworkAtomics": [[61, 6, 1, "", "RAtomicBool"], [61, 6, 1, "", "RAtomicT"]], "NetworkAtomics.RAtomicBool": [[61, 1, 1, "", "_v"], [61, 2, 1, "", "valType"]], "NetworkAtomics.RAtomicT": [[61, 1, 1, "", "_v"], [61, 1, 1, "", "valType"]], "OwnedObject": [[62, 4, 1, "", ":"], [62, 4, 1, "OwnedObject.<=>", "&lt;=&gt;"], [62, 4, 1, "", "="], [62, 6, 1, "", "_owned"], [62, 4, 1, "", "chpl__autoCopy"], [62, 4, 1, "", "chpl__autoDestroy"], [62, 4, 1, "", "chpl__initCopy"]], "OwnedObject._owned": [[62, 2, 1, "", "_readWriteHelper"], [62, 2, 1, "", "adopt"], [62, 2, 1, "", "borrow"], [62, 1, 1, "", "chpl_p"], [62, 1, 1, "", "chpl_t"], [62, 2, 1, "", "deinit"], [62, 2, 1, "", "deserialize"], [62, 2, 1, "", "init"], [62, 2, 1, "", "init="], [62, 2, 1, "", "release"], [62, 2, 1, "", "serialize"]], "PrintModuleInitOrder": [[63, 4, 1, "", "initPrint"], [63, 5, 1, "", "moduleInitLevel"], [63, 4, 1, "", "printModuleInit"], [63, 5, 1, "", "printModuleInitOrder"]], "SharedObject": [[64, 4, 1, "", ":"], [64, 4, 1, "SharedObject.<=>", "&lt;=&gt;"], [64, 4, 1, "", "="], [64, 0, 1, "", "ReferenceCount"], [64, 6, 1, "", "_shared"], [64, 4, 1, "", "chpl__autoDestroy"]], "SharedObject.ReferenceCount": [[64, 2, 1, "", "incrementWeak"], [64, 2, 1, "", "init"], [64, 2, 1, "", "releaseStrong"], [64, 2, 1, "", "releaseTotal"], [64, 2, 1, "", "releaseWeak"], [64, 2, 1, "", "retain"], [64, 1, 1, "", "strongCount"], [64, 1, 1, "", "totalCount"], [64, 2, 1, "", "tryRetainWeak"]], "SharedObject._shared": [[64, 2, 1, "", "_readWriteHelper"], [64, 2, 1, "", "adopt"], [64, 2, 1, "", "borrow"], [64, 1, 1, "", "chpl_p"], [64, 1, 1, "", "chpl_pn"], [64, 1, 1, "", "chpl_t"], [64, 2, 1, "", "deinit"], [64, 2, 1, "", "deserialize"], [64, 2, 1, "", "doClear"], [64, 2, 1, "", "downgrade"], [64, 2, 1, "", "init"], [64, 2, 1, "", "init="], [64, 2, 1, "", "serialize"]], "String": [[65, 4, 1, "", "*"], [65, 4, 1, "", "+"], [65, 4, 1, "", ":"], [65, 4, 1, "", "="], [65, 4, 1, "", "_cond_test"], [65, 6, 1, "", "_string"], [65, 4, 1, "", "_string_contains"], [65, 6, 1, "", "byteIndex"], [65, 4, 1, "", "chpl__idxToInt"], [65, 4, 1, "", "chpl__intToIdx"], [65, 4, 1, "", "chpl__rangeStrideType"], [65, 4, 1, "", "chpl__rangeUnsignedType"], [65, 4, 1, "", "chpl_build_bounded_range"], [65, 4, 1, "", "chpl_build_high_bounded_range"], [65, 4, 1, "", "chpl_build_low_bounded_range"], [65, 4, 1, "", "chpl_createStringWithLiteral"], [65, 6, 1, "", "codepointIndex"], [65, 4, 1, "", "codepointToString"], [65, 7, 1, "", "string"], [65, 5, 1, "", "useCachedNumCodepoints"], [65, 7, 1, "", "wint_t"]], "String._string": [[65, 3, 1, "", "_cpIndexLen"], [65, 2, 1, "", "_cpIndexLenHelpNoAdjustment"], [65, 3, 1, "", "_indexLen"], [65, 1, 1, "", "buff"], [65, 1, 1, "", "buffLen"], [65, 1, 1, "", "buffSize"], [65, 2, 1, "", "byteIndices"], [65, 1, 1, "", "cachedNumCodepoints"], [65, 2, 1, "", "capitalize"], [65, 2, 1, "", "chpl__deserialize"], [65, 2, 1, "", "chpl__serialize"], [65, 2, 1, "", "deinit"], [65, 2, 1, "", "doSearchUTF8"], [65, 3, 1, "", "doSplitWSUTF8"], [65, 2, 1, "", "doSplitWSUTF8Help"], [65, 1, 1, "", "hasEscapes"], [65, 2, 1, "", "init"], [65, 2, 1, "", "init="], [65, 2, 1, "", "isASCII"], [65, 1, 1, "", "isOwned"], [65, 2, 1, "", "join"], [65, 1, 1, "", "locale_id"], [65, 2, 1, "", "serialize"], [65, 2, 1, "", "substring"]], "String.byteIndex": [[65, 2, 1, "", "!"], [65, 2, 1, "", "!="], [65, 2, 1, "", "+"], [65, 2, 1, "", "-"], [65, 2, 1, "", ":"], [65, 2, 1, "String.byteIndex.<", "&lt;"], [65, 2, 1, "String.byteIndex.<=", "&lt;="], [65, 2, 1, "", "="], [65, 2, 1, "", "=="], [65, 2, 1, "String.byteIndex.>", "&gt;"], [65, 2, 1, "String.byteIndex.>=", "&gt;="], [65, 1, 1, "", "_bindex"], [65, 2, 1, "", "init"], [65, 2, 1, "", "init="], [65, 2, 1, "", "serialize"]], "String.codepointIndex": [[65, 2, 1, "", "!"], [65, 2, 1, "", "!="], [65, 2, 1, "", "+"], [65, 2, 1, "", "-"], [65, 2, 1, "", ":"], [65, 2, 1, "String.codepointIndex.<", "&lt;"], [65, 2, 1, "String.codepointIndex.<=", "&lt;="], [65, 2, 1, "", "="], [65, 2, 1, "", "=="], [65, 2, 1, "String.codepointIndex.>", "&gt;"], [65, 2, 1, "String.codepointIndex.>=", "&gt;="], [65, 1, 1, "", "_cpindex"], [65, 2, 1, "", "init"], [65, 2, 1, "", "init="], [65, 2, 1, "", "serialize"]], "String.string": [[65, 2, 1, "", "!="], [65, 2, 1, "", "+"], [65, 2, 1, "", "+="], [65, 2, 1, "String.string.<", "&lt;"], [65, 2, 1, "String.string.<=", "&lt;="], [65, 2, 1, "String.string.<=>", "&lt;=&gt;"], [65, 2, 1, "", "=="], [65, 2, 1, "String.string.>", "&gt;"], [65, 2, 1, "String.string.>=", "&gt;="], [65, 2, 1, "", "appendCodepointValues"], [65, 2, 1, "", "byte"], [65, 2, 1, "", "c_str"], [65, 3, 1, "", "chpl_bytes"], [65, 2, 1, "", "codepoint"], [65, 3, 1, "", "codepoints"], [65, 2, 1, "", "count"], [65, 2, 1, "", "createAdoptingBuffer"], [65, 2, 1, "", "createBorrowingBuffer"], [65, 2, 1, "", "createCopyingBuffer"], [65, 2, 1, "", "dedent"], [65, 2, 1, "", "encode"], [65, 2, 1, "", "endsWith"], [65, 2, 1, "", "find"], [65, 2, 1, "", "hash"], [65, 2, 1, "", "indices"], [65, 2, 1, "", "isAlnum"], [65, 2, 1, "", "isAlpha"], [65, 2, 1, "", "isDigit"], [65, 2, 1, "", "isEmpty"], [65, 2, 1, "", "isLower"], [65, 2, 1, "", "isPrintable"], [65, 2, 1, "", "isSpace"], [65, 2, 1, "", "isTitle"], [65, 2, 1, "", "isUpper"], [65, 2, 1, "", "item"], [65, 3, 1, "", "items"], [65, 2, 1, "", "join"], [65, 2, 1, "", "localize"], [65, 2, 1, "", "numBytes"], [65, 2, 1, "", "numCodepoints"], [65, 2, 1, "", "replace"], [65, 2, 1, "", "rfind"], [65, 2, 1, "", "size"], [65, 3, 1, "", "split"], [65, 2, 1, "", "startsWith"], [65, 2, 1, "", "strip"], [65, 3, 1, "", "these"], [65, 2, 1, "", "this"], [65, 2, 1, "", "toByte"], [65, 2, 1, "", "toCodepoint"], [65, 2, 1, "", "toLower"], [65, 2, 1, "", "toTitle"], [65, 2, 1, "", "toUpper"]], "StringCasts": [[67, 4, 1, "", ":"], [67, 4, 1, "", "_real_cast_helper"]], "currentTask": [[16, 4, 1, "", "yieldExecution"]]}, "objtypes": {"0": "chpl:class", "1": "chpl:attribute", "2": "chpl:method", "3": "chpl:itermethod", "4": "chpl:function", "5": "chpl:data", "6": "chpl:record", "7": "chpl:type", "8": "chpl:enum", "9": "chpl:enumconstant", "10": "chpl:iterfunction"}, "objnames": {"0": ["chpl", "class", " class"], "1": ["chpl", "attribute", " attribute"], "2": ["chpl", "method", " method"], "3": ["chpl", "itermethod", " itermethod"], "4": ["chpl", "function", " function"], "5": ["chpl", "data", " data"], "6": ["chpl", "record", " record"], "7": ["chpl", "type", " type"], "8": ["chpl", "enum", " enum"], "9": ["chpl", "enumconstant", " enumconstant"], "10": ["chpl", "iterfunction", " iterfunction"]}, "titleterms": {"chpldoc": 0, "document": 0, "indic": 0, "tabl": 0, "arrayviewrankchang": 1, "arrayviewreindex": 2, "arrayviewslic": 3, "atom": 4, "atomicscommon": 5, "bytebufferhelp": 6, "byte": 7, "bytescast": 8, "bytesstringcommon": 9, "cstring": 10, "chapelarrai": 11, "chapelarrayviewelis": 12, "chapelautoaggreg": 13, "chapelautolocalaccess": 14, "chapelbas": 15, "currenttask": 16, "chapelcontext": 17, "chapeldebugprint": 18, "chapeldistribut": 19, "chapeldomain": 20, "chapelgpusupport": 21, "chapelhash": 22, "chapelhasht": 23, "chapelioseri": 24, "chapeliostringifyhelp": 25, "chapeliteratorsupport": 26, "chapellocal": 27, "chapellock": 28, "chapelnumlocal": 29, "chapelprivat": 30, "chapelrang": 31, "chapelreduc": 32, "chapelremotevar": 33, "chapelserializedbroadcast": 34, "chapelshortarraytransf": 35, "chapelstandard": 36, "chapelstaticvar": 37, "chapelsyncvar": 38, "chapeltaskdata": 39, "chapeltaskdatahelp": 40, "chapeltaskid": 41, "chapelthread": 42, "chapeltupl": 43, "chapelutil": 44, "defaultassoci": 45, "defaultrectangular": 46, "defaultspars": 47, "exportwrapp": 48, "externalarrai": 49, "iso_fortran_bind": 50, "localemodelhelpapu": 51, "localemodelhelpflat": 52, "localemodelhelpgpu": 53, "localemodelhelpmem": 54, "localemodelhelpruntim": 55, "localemodelhelpsetup": 56, "localesarrai": 57, "memconsist": 58, "memtrack": 59, "networkatomictyp": 60, "networkatom": 61, "ownedobject": 62, "printmoduleinitord": 63, "sharedobject": 64, "string": 65, "nvstringfactori": 66, "stringcast": 67, "startinitcommdiag": 68, "stopinitcommdiag": 69}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"chpldoc documentation": [[0, "chpldoc-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "ArrayViewRankChange": [[1, "arrayviewrankchange"]], "ArrayViewReindex": [[2, "arrayviewreindex"]], "ArrayViewSlice": [[3, "arrayviewslice"]], "Atomics": [[4, "atomics"]], "AtomicsCommon": [[5, "atomicscommon"]], "ByteBufferHelpers": [[6, "bytebufferhelpers"]], "Bytes": [[7, "bytes"]], "BytesCasts": [[8, "bytescasts"]], "BytesStringCommon": [[9, "bytesstringcommon"]], "CString": [[10, "cstring"]], "ChapelArray": [[11, "chapelarray"]], "ChapelArrayViewElision": [[12, "chapelarrayviewelision"]], "ChapelAutoAggregation": [[13, "chapelautoaggregation"]], "ChapelAutoLocalAccess": [[14, "chapelautolocalaccess"]], "ChapelBase": [[15, "chapelbase"]], "currentTask": [[16, "currenttask"]], "ChapelContext": [[17, "chapelcontext"]], "ChapelDebugPrint": [[18, "chapeldebugprint"]], "ChapelDistribution": [[19, "chapeldistribution"]], "ChapelDomain": [[20, "chapeldomain"]], "ChapelGpuSupport": [[21, "chapelgpusupport"]], "ChapelHashing": [[22, "chapelhashing"]], "ChapelHashtable": [[23, "chapelhashtable"]], "ChapelIOSerialize": [[24, "chapelioserialize"]], "ChapelIOStringifyHelper": [[25, "chapeliostringifyhelper"]], "ChapelIteratorSupport": [[26, "chapeliteratorsupport"]], "ChapelLocale": [[27, "chapellocale"]], "ChapelLocks": [[28, "chapellocks"]], "ChapelNumLocales": [[29, "chapelnumlocales"]], "ChapelPrivatization": [[30, "chapelprivatization"]], "ChapelRange": [[31, "chapelrange"]], "ChapelReduce": [[32, "chapelreduce"]], "ChapelRemoteVars": [[33, "chapelremotevars"]], "ChapelSerializedBroadcast": [[34, "chapelserializedbroadcast"]], "ChapelShortArrayTransfer": [[35, "chapelshortarraytransfer"]], "ChapelStandard": [[36, "chapelstandard"]], "ChapelStaticVars": [[37, "chapelstaticvars"]], "ChapelSyncvar": [[38, "chapelsyncvar"]], "ChapelTaskData": [[39, "chapeltaskdata"]], "ChapelTaskDataHelp": [[40, "chapeltaskdatahelp"]], "ChapelTaskID": [[41, "chapeltaskid"]], "ChapelThreads": [[42, "chapelthreads"]], "ChapelTuple": [[43, "chapeltuple"]], "ChapelUtil": [[44, "chapelutil"]], "DefaultAssociative": [[45, "defaultassociative"]], "DefaultRectangular": [[46, "defaultrectangular"]], "DefaultSparse": [[47, "defaultsparse"]], "ExportWrappers": [[48, "exportwrappers"]], "ExternalArray": [[49, "externalarray"]], "ISO_Fortran_binding": [[50, "iso-fortran-binding"]], "LocaleModelHelpAPU": [[51, "localemodelhelpapu"]], "LocaleModelHelpFlat": [[52, "localemodelhelpflat"]], "LocaleModelHelpGPU": [[53, "localemodelhelpgpu"]], "LocaleModelHelpMem": [[54, "localemodelhelpmem"]], "LocaleModelHelpRuntime": [[55, "localemodelhelpruntime"]], "LocaleModelHelpSetup": [[56, "localemodelhelpsetup"]], "LocalesArray": [[57, "localesarray"]], "MemConsistency": [[58, "memconsistency"]], "MemTracking": [[59, "memtracking"]], "NetworkAtomicTypes": [[60, "networkatomictypes"]], "NetworkAtomics": [[61, "networkatomics"]], "OwnedObject": [[62, "ownedobject"]], "PrintModuleInitOrder": [[63, "printmoduleinitorder"]], "SharedObject": [[64, "sharedobject"]], "String": [[65, "string"]], "NVStringFactory": [[66, "nvstringfactory"]], "StringCasts": [[67, "stringcasts"]], "startInitCommDiags": [[68, "startinitcommdiags"]], "stopInitCommDiags": [[69, "stopinitcommdiags"]]}, "indexentries": {"arrayviewrankchangearr (class in arrayviewrankchange)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr"]], "arrayviewrankchangedist (class in arrayviewrankchange)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist"]], "arrayviewrankchangedom (class in arrayviewrankchange)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom"]], "_arrinstance (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr._ArrInstance"]], "_arrpid (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr._ArrPid"]], "_dompid (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr._DomPid"]], "_containsrcre() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr._containsRCRE"]], "_getactualarray() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr._getActualArray"]], "_getactualdomain() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom._getActualDomain"]], "_getrcreview() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr._getRCREView"]], "arr() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.arr"]], "buildindexcache() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.buildIndexCache"]], "chpl_rankchangeconvertdom() (in module arrayviewrankchange)": [[1, "ArrayViewRankChange.chpl_rankChangeConvertDom"]], "chpl_rankchangeconvertdowntoup() (in module arrayviewrankchange)": [[1, "ArrayViewRankChange.chpl_rankChangeConvertDownToUp"]], "chpl_rankchangeconverthidtupletolod() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.chpl_rankChangeConvertHiDTupleToLoD"]], "chpl_rankchangeconvertidx() (in module arrayviewrankchange)": [[1, "ArrayViewRankChange.chpl_rankChangeConvertIdx"]], "chpl_rankchangeconvertidxhidtolod() (in module arrayviewrankchange)": [[1, "ArrayViewRankChange.chpl_rankChangeConvertIdxHiDToLoD"]], "chpl_rankchangeconvertlodtupletohid() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.chpl_rankChangeConvertLoDTupleToHiD"]], "collapseddim (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.collapsedDim"]], "collapseddim (arrayviewrankchange.arrayviewrankchangedist attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.collapsedDim"]], "collapseddim (arrayviewrankchange.arrayviewrankchangedom attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.collapsedDim"]], "dist() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dist"]], "distinst (arrayviewrankchange.arrayviewrankchangedom attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.distInst"]], "distpid (arrayviewrankchange.arrayviewrankchangedom attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.distPid"]], "doibulktransferfromknown() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.doiBulkTransferFromKnown"]], "doibulktransfertoknown() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.doiBulkTransferToKnown"]], "doicanbulktransferrankchange() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.doiCanBulkTransferRankChange"]], "dom (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dom"]], "downdist() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.downDist"]], "downdistinst (arrayviewrankchange.arrayviewrankchangedist attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.downDistInst"]], "downdistpid (arrayviewrankchange.arrayviewrankchangedist attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.downDistPid"]], "downdom() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.downDom"]], "downdominst (arrayviewrankchange.arrayviewrankchangedom attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.downDomInst"]], "downdompid (arrayviewrankchange.arrayviewrankchangedom attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.downDomPid"]], "downidxtoupidx() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.downIdxToUpIdx"]], "downrank() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.downrank"]], "dsiaccess() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiAccess"]], "dsialignedhigh() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiAlignedHigh"]], "dsialignedlow() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiAlignedLow"]], "dsialignment() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiAlignment"]], "dsiassigndomain() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiAssignDomain"]], "dsiboundscheck() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiBoundsCheck"]], "dsibuildarray() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiBuildArray"]], "dsiclone() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiClone"]], "dsicreateindexbuffer() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiCreateIndexBuffer"]], "dsidestroyarr() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiDestroyArr"]], "dsidestroydist() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiDestroyDist"]], "dsidestroydom() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiDestroyDom"]], "dsidisplayrepresentation() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiDisplayRepresentation"]], "dsielementinitializationcomplete() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiElementInitializationComplete"]], "dsiequaldmaps() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiEqualDMaps"]], "dsifirst() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiFirst"]], "dsigetbasedom() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiGetBaseDom"]], "dsigetprivatizedata() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiGetPrivatizeData"]], "dsigetprivatizedata() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiGetPrivatizeData"]], "dsigetprivatizedata() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiGetPrivatizeData"]], "dsigetreprivatizedata() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiGetReprivatizeData"]], "dsihassinglelocalsubdomain() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiHasSingleLocalSubdomain"]], "dsihassinglelocalsubdomain() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiHasSingleLocalSubdomain"]], "dsihigh() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiHigh"]], "dsiindexorder() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiIndexOrder"]], "dsiislayout() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiIsLayout"]], "dsilast() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiLast"]], "dsilocalaccess() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiLocalAccess"]], "dsilocalsubdomain() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiLocalSubdomain"]], "dsilocalsubdomain() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiLocalSubdomain"]], "dsilow() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiLow"]], "dsimydist() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiMyDist"]], "dsinewrectangulardom() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiNewRectangularDom"]], "dsiprivatize() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiPrivatize"]], "dsiprivatize() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiPrivatize"]], "dsiprivatize() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiPrivatize"]], "dsireprivatize() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiReprivatize"]], "dsiserialread() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiSerialRead"]], "dsiserialwrite() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiSerialWrite"]], "dsiserialwrite() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiSerialWrite"]], "dsisetindices() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiSetIndices"]], "dsistride() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiStride"]], "dsisupportsautolocalaccess() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiSupportsAutoLocalAccess"]], "dsisupportsprivatization() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.dsiSupportsPrivatization"]], "dsisupportsprivatization() (arrayviewrankchange.arrayviewrankchangedist method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.dsiSupportsPrivatization"]], "dsisupportsprivatization() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiSupportsPrivatization"]], "dsitargetlocales() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.dsiTargetLocales"]], "idx (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.idx"]], "idx (arrayviewrankchange.arrayviewrankchangedist attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDist.idx"]], "idx (arrayviewrankchange.arrayviewrankchangedom attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.idx"]], "idxtype() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.idxType"]], "indexcache (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.indexCache"]], "init() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.init"]], "isrankchangearrayview() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.isRankChangeArrayView"]], "isrankchangedomainview() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.isRankChangeDomainView"]], "ownsarrinstance (arrayviewrankchange.arrayviewrankchangearr attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.ownsArrInstance"]], "parsafe() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.parSafe"]], "privdom() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.privDom"]], "rank() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.rank"]], "shoulduseindexcache() (arrayviewrankchange.arrayviewrankchangearr method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.shouldUseIndexCache"]], "these() (arrayviewrankchange.arrayviewrankchangearr iterator)": [[1, "ArrayViewRankChange.ArrayViewRankChangeArr.these"]], "these() (arrayviewrankchange.arrayviewrankchangedom iterator)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.these"]], "updom() (arrayviewrankchange.arrayviewrankchangedom method)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.upDom"]], "updominst (arrayviewrankchange.arrayviewrankchangedom attribute)": [[1, "ArrayViewRankChange.ArrayViewRankChangeDom.upDomInst"]], "arrayviewreindexarr (class in arrayviewreindex)": [[2, "ArrayViewReindex.ArrayViewReindexArr"]], "arrayviewreindexdist (class in arrayviewreindex)": [[2, "ArrayViewReindex.ArrayViewReindexDist"]], "arrayviewreindexdom (class in arrayviewreindex)": [[2, "ArrayViewReindex.ArrayViewReindexDom"]], "_arrinstance (arrayviewreindex.arrayviewreindexarr attribute)": [[2, "ArrayViewReindex.ArrayViewReindexArr._ArrInstance"]], "_arrpid (arrayviewreindex.arrayviewreindexarr attribute)": [[2, "ArrayViewReindex.ArrayViewReindexArr._ArrPid"]], "_dompid (arrayviewreindex.arrayviewreindexarr attribute)": [[2, "ArrayViewReindex.ArrayViewReindexArr._DomPid"]], "_containsrcre() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr._containsRCRE"]], "_getactualarray() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr._getActualArray"]], "_getactualdomain() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom._getActualDomain"]], "_getrcreview() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr._getRCREView"]], "arr() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.arr"]], "buildindexcache() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.buildIndexCache"]], "chpl_reindexconvertdom() (in module arrayviewreindex)": [[2, "ArrayViewReindex.chpl_reindexConvertDom"]], "chpl_reindexconvertdommaybeslice() (in module arrayviewreindex)": [[2, "ArrayViewReindex.chpl_reindexConvertDomMaybeSlice"]], "chpl_reindexconverthidtupletolod() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.chpl_reindexConvertHiDTupleToLoD"]], "chpl_reindexconvertidx() (in module arrayviewreindex)": [[2, "ArrayViewReindex.chpl_reindexConvertIdx"]], "chpl_reindexconvertidxdim() (in module arrayviewreindex)": [[2, "ArrayViewReindex.chpl_reindexConvertIdxDim"]], "chpl_reindexconvertlodtupletohid() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.chpl_reindexConvertLoDTupleToHiD"]], "dist() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dist"]], "distinst (arrayviewreindex.arrayviewreindexdom attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDom.distInst"]], "distpid (arrayviewreindex.arrayviewreindexdom attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDom.distPid"]], "doibulktransferfromknown() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.doiBulkTransferFromKnown"]], "doibulktransfertoknown() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.doiBulkTransferToKnown"]], "doicanbulktransferrankchange() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.doiCanBulkTransferRankChange"]], "dom (arrayviewreindex.arrayviewreindexarr attribute)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dom"]], "downdist() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.downDist"]], "downdistinst (arrayviewreindex.arrayviewreindexdist attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDist.downDistInst"]], "downdistpid (arrayviewreindex.arrayviewreindexdist attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDist.downDistPid"]], "downidxtoupidx() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.downIdxToUpIdx"]], "downdom() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.downdom"]], "downdom() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.downdom"]], "downdominst (arrayviewreindex.arrayviewreindexdist attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDist.downdomInst"]], "downdominst (arrayviewreindex.arrayviewreindexdom attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDom.downdomInst"]], "downdompid (arrayviewreindex.arrayviewreindexdist attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDist.downdomPid"]], "downdompid (arrayviewreindex.arrayviewreindexdom attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDom.downdomPid"]], "downdomtype() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.downdomtype"]], "dsiaccess() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiAccess"]], "dsialignedhigh() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiAlignedHigh"]], "dsialignedlow() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiAlignedLow"]], "dsialignment() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiAlignment"]], "dsiassigndomain() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiAssignDomain"]], "dsiboundscheck() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiBoundsCheck"]], "dsibuildarray() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiBuildArray"]], "dsiclone() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.dsiClone"]], "dsicreateindexbuffer() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiCreateIndexBuffer"]], "dsidestroyarr() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiDestroyArr"]], "dsidestroydist() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.dsiDestroyDist"]], "dsidestroydom() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiDestroyDom"]], "dsidisplayrepresentation() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiDisplayRepresentation"]], "dsielementinitializationcomplete() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiElementInitializationComplete"]], "dsifirst() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiFirst"]], "dsigetbasedom() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiGetBaseDom"]], "dsigetprivatizedata() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiGetPrivatizeData"]], "dsigetprivatizedata() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.dsiGetPrivatizeData"]], "dsigetprivatizedata() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiGetPrivatizeData"]], "dsigetreprivatizedata() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiGetReprivatizeData"]], "dsihassinglelocalsubdomain() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiHasSingleLocalSubdomain"]], "dsihassinglelocalsubdomain() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiHasSingleLocalSubdomain"]], "dsihigh() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiHigh"]], "dsiindexorder() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiIndexOrder"]], "dsiislayout() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.dsiIsLayout"]], "dsilast() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiLast"]], "dsilocalaccess() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiLocalAccess"]], "dsilocalsubdomain() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiLocalSubdomain"]], "dsilocalsubdomain() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiLocalSubdomain"]], "dsilow() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiLow"]], "dsimydist() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiMyDist"]], "dsinewrectangulardom() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.dsiNewRectangularDom"]], "dsiprivatize() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiPrivatize"]], "dsiprivatize() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.dsiPrivatize"]], "dsiprivatize() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiPrivatize"]], "dsireprivatize() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiReprivatize"]], "dsiserialread() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiSerialRead"]], "dsiserialwrite() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiSerialWrite"]], "dsisetindices() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiSetIndices"]], "dsistride() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiStride"]], "dsisupportsprivatization() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.dsiSupportsPrivatization"]], "dsisupportsprivatization() (arrayviewreindex.arrayviewreindexdist method)": [[2, "ArrayViewReindex.ArrayViewReindexDist.dsiSupportsPrivatization"]], "dsisupportsprivatization() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiSupportsPrivatization"]], "dsitargetlocales() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.dsiTargetLocales"]], "idxtype() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.idxType"]], "indexcache (arrayviewreindex.arrayviewreindexarr attribute)": [[2, "ArrayViewReindex.ArrayViewReindexArr.indexCache"]], "init() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.init"]], "isreindexarrayview() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.isReindexArrayView"]], "isreindexdomainview() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.isReindexDomainView"]], "ownsarrinstance (arrayviewreindex.arrayviewreindexarr attribute)": [[2, "ArrayViewReindex.ArrayViewReindexArr.ownsArrInstance"]], "ownsdowndominst (arrayviewreindex.arrayviewreindexdom attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDom.ownsDownDomInst"]], "parsafe() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.parSafe"]], "privdom() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.privDom"]], "rank() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.rank"]], "shoulduseindexcache() (arrayviewreindex.arrayviewreindexarr method)": [[2, "ArrayViewReindex.ArrayViewReindexArr.shouldUseIndexCache"]], "these() (arrayviewreindex.arrayviewreindexarr iterator)": [[2, "ArrayViewReindex.ArrayViewReindexArr.these"]], "these() (arrayviewreindex.arrayviewreindexdom iterator)": [[2, "ArrayViewReindex.ArrayViewReindexDom.these"]], "updom (arrayviewreindex.arrayviewreindexdist attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDist.updom"]], "updom() (arrayviewreindex.arrayviewreindexdom method)": [[2, "ArrayViewReindex.ArrayViewReindexDom.updom"]], "updominst (arrayviewreindex.arrayviewreindexdom attribute)": [[2, "ArrayViewReindex.ArrayViewReindexDom.updomInst"]], "arrayviewslicearr (class in arrayviewslice)": [[3, "ArrayViewSlice.ArrayViewSliceArr"]], "_arrinstance (arrayviewslice.arrayviewslicearr attribute)": [[3, "ArrayViewSlice.ArrayViewSliceArr._ArrInstance"]], "_arrpid (arrayviewslice.arrayviewslicearr attribute)": [[3, "ArrayViewSlice.ArrayViewSliceArr._ArrPid"]], "_dompid (arrayviewslice.arrayviewslicearr attribute)": [[3, "ArrayViewSlice.ArrayViewSliceArr._DomPid"]], "_containsrcre() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr._containsRCRE"]], "_getactualarray() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr._getActualArray"]], "_getrcreview() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr._getRCREView"]], "arr() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.arr"]], "buildindexcache() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.buildIndexCache"]], "chpl__deserialize() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.chpl__deserialize"]], "chpl__rvfme() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.chpl__rvfMe"]], "chpl__serialize() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.chpl__serialize"]], "chpl_debugserializeslice (in module arrayviewslice)": [[3, "ArrayViewSlice.chpl_debugSerializeSlice"]], "chpl_serializeslices (in module arrayviewslice)": [[3, "ArrayViewSlice.chpl_serializeSlices"]], "doibulktransferfromknown() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.doiBulkTransferFromKnown"]], "doibulktransfertoknown() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.doiBulkTransferToKnown"]], "doicanbulktransferrankchange() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.doiCanBulkTransferRankChange"]], "dom (arrayviewslice.arrayviewslicearr attribute)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dom"]], "dsiaccess() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiAccess"]], "dsiboundscheck() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiBoundsCheck"]], "dsidestroyarr() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiDestroyArr"]], "dsidisplayrepresentation() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiDisplayRepresentation"]], "dsielementinitializationcomplete() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiElementInitializationComplete"]], "dsigetbasedom() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiGetBaseDom"]], "dsigetprivatizedata() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiGetPrivatizeData"]], "dsihassinglelocalsubdomain() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiHasSingleLocalSubdomain"]], "dsilocalsubdomain() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiLocalSubdomain"]], "dsilocalsubdomains() (arrayviewslice.arrayviewslicearr iterator)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiLocalSubdomains"]], "dsiprivatize() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiPrivatize"]], "dsiserialread() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiSerialRead"]], "dsiserialwrite() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiSerialWrite"]], "dsisupportsprivatization() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.dsiSupportsPrivatization"]], "idxtype() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.idxType"]], "indexcache (arrayviewslice.arrayviewslicearr attribute)": [[3, "ArrayViewSlice.ArrayViewSliceArr.indexCache"]], "init() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.init"]], "isslicearrayview() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.isSliceArrayView"]], "privdom() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.privDom"]], "rank() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.rank"]], "shoulduseindexcache() (arrayviewslice.arrayviewslicearr method)": [[3, "ArrayViewSlice.ArrayViewSliceArr.shouldUseIndexCache"]], "these() (arrayviewslice.arrayviewslicearr iterator)": [[3, "ArrayViewSlice.ArrayViewSliceArr.these"]], "%() (atomics.atomict method)": [[4, "Atomics.AtomicT.%"]], "*() (atomics.atomict method)": [[4, "Atomics.AtomicT.*"]], "+() (atomics.atomict method)": [[4, "Atomics.AtomicT.+"]], "-() (atomics.atomict method)": [[4, "Atomics.AtomicT.-"]], "/() (atomics.atomict method)": [[4, "Atomics.AtomicT./"]], ":() (in module atomics)": [[4, "Atomics.:"]], "=() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.="]], "=() (atomics.atomict method)": [[4, "Atomics.AtomicT.="]], "atomicbool (record in atomics)": [[4, "Atomics.AtomicBool"]], "atomict (record in atomics)": [[4, "Atomics.AtomicT"]], "_v (atomics.atomicbool attribute)": [[4, "Atomics.AtomicBool._v"]], "_v (atomics.atomict attribute)": [[4, "Atomics.AtomicT._v"]], "add() (atomics.atomict method)": [[4, "Atomics.AtomicT.add"]], "and() (atomics.atomict method)": [[4, "Atomics.AtomicT.and"]], "atomicfence() (in module atomics)": [[4, "Atomics.atomicFence"]], "atomic_fence() (in module atomics)": [[4, "Atomics.atomic_fence"]], "chpl__atomictype() (in module atomics)": [[4, "Atomics.chpl__atomicType"]], "chpl__processoratomictype() (in module atomics)": [[4, "Atomics.chpl__processorAtomicType"]], "chpl_atomic_thread_fence() (in module atomics)": [[4, "Atomics.chpl_atomic_thread_fence"]], "chpl_comm_ensure_progress() (in module atomics)": [[4, "Atomics.chpl_comm_ensure_progress"]], "clear() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.clear"]], "compareandswap() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.compareAndSwap"]], "compareandswap() (atomics.atomict method)": [[4, "Atomics.AtomicT.compareAndSwap"]], "compareexchange() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.compareExchange"]], "compareexchange() (atomics.atomict method)": [[4, "Atomics.AtomicT.compareExchange"]], "compareexchangeweak() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.compareExchangeWeak"]], "compareexchangeweak() (atomics.atomict method)": [[4, "Atomics.AtomicT.compareExchangeWeak"]], "deinit() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.deinit"]], "deinit() (atomics.atomict method)": [[4, "Atomics.AtomicT.deinit"]], "exchange() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.exchange"]], "exchange() (atomics.atomict method)": [[4, "Atomics.AtomicT.exchange"]], "fetchadd() (atomics.atomict method)": [[4, "Atomics.AtomicT.fetchAdd"]], "fetchand() (atomics.atomict method)": [[4, "Atomics.AtomicT.fetchAnd"]], "fetchor() (atomics.atomict method)": [[4, "Atomics.AtomicT.fetchOr"]], "fetchsub() (atomics.atomict method)": [[4, "Atomics.AtomicT.fetchSub"]], "fetchxor() (atomics.atomict method)": [[4, "Atomics.AtomicT.fetchXor"]], "init() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.init"]], "init() (atomics.atomict method)": [[4, "Atomics.AtomicT.init"]], "init=() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.init="]], "init=() (atomics.atomict method)": [[4, "Atomics.AtomicT.init="]], "init_helper() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.init_helper"]], "init_helper() (atomics.atomict method)": [[4, "Atomics.AtomicT.init_helper"]], "or() (atomics.atomict method)": [[4, "Atomics.AtomicT.or"]], "sub() (atomics.atomict method)": [[4, "Atomics.AtomicT.sub"]], "testandset() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.testAndSet"]], "valtype (atomics.atomict attribute)": [[4, "Atomics.AtomicT.valType"]], "valtype() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.valType"]], "write() (atomics.atomicbool method)": [[4, "Atomics.AtomicBool.write"]], "write() (atomics.atomict method)": [[4, "Atomics.AtomicT.write"]], "xor() (atomics.atomict method)": [[4, "Atomics.AtomicT.xor"]], "_cnt (atomicscommon.atomic_refcnt attribute)": [[5, "AtomicsCommon.atomic_refcnt._cnt"]], "atomic_refcnt (record in atomicscommon)": [[5, "AtomicsCommon.atomic_refcnt"]], "dec() (atomicscommon.atomic_refcnt method)": [[5, "AtomicsCommon.atomic_refcnt.dec"]], "inc() (atomicscommon.atomic_refcnt method)": [[5, "AtomicsCommon.atomic_refcnt.inc"]], "init() (atomicscommon.atomic_refcnt method)": [[5, "AtomicsCommon.atomic_refcnt.init"]], "init=() (atomicscommon.atomic_refcnt method)": [[5, "AtomicsCommon.atomic_refcnt.init="]], "read() (atomicscommon.atomic_refcnt method)": [[5, "AtomicsCommon.atomic_refcnt.read"]], "_strcmp() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers._strcmp"]], "bufferalloc() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferAlloc"]], "buffercopy() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferCopy"]], "buffercopylocal() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferCopyLocal"]], "buffercopyremote() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferCopyRemote"]], "bufferensuresize() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferEnsureSize"]], "bufferequals() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferEquals"]], "bufferequalslocal() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferEqualsLocal"]], "bufferfree() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferFree"]], "buffergetbyte() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferGetByte"]], "buffermemcpy() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferMemcpy"]], "buffermemcpylocal() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferMemcpyLocal"]], "buffermemmovelocal() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferMemmoveLocal"]], "bufferrealloc() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferRealloc"]], "buffertype (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.bufferType"]], "bytetype (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.byteType"]], "chpl_stringgrowthfactor (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.chpl_stringGrowthFactor"]], "chpl_string_comm_get() (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.chpl_string_comm_get"]], "locidtype (in module bytebufferhelpers)": [[6, "ByteBufferHelpers.locIdType"]], "!=() (bytes.bytes method)": [[7, "Bytes.bytes.!="]], "*() (in module bytes)": [[7, "Bytes.*"]], "+() (bytes.bytes method)": [[7, "Bytes.bytes.+"]], "+=() (bytes.bytes method)": [[7, "Bytes.bytes.+="]], ":() (in module bytes)": [[7, "Bytes.:"]], "<() (bytes.bytes method)": [[7, "Bytes.bytes.<"]], "<=() (bytes.bytes method)": [[7, "Bytes.bytes.<="]], "<=>() (bytes.bytes method)": [[7, "Bytes.bytes.<=>"]], "=() (bytes.bytes method)": [[7, "Bytes.bytes.="]], "==() (bytes.bytes method)": [[7, "Bytes.bytes.=="]], ">() (bytes.bytes method)": [[7, "Bytes.bytes.>"]], ">=() (bytes.bytes method)": [[7, "Bytes.bytes.>="]], "_bytes (record in bytes)": [[7, "Bytes._bytes"]], "appendbytevalues() (bytes.bytes method)": [[7, "Bytes.bytes.appendByteValues"]], "buff (bytes._bytes attribute)": [[7, "Bytes._bytes.buff"]], "bufflen (bytes._bytes attribute)": [[7, "Bytes._bytes.buffLen"]], "buffsize (bytes._bytes attribute)": [[7, "Bytes._bytes.buffSize"]], "byte() (bytes._bytes method)": [[7, "Bytes._bytes.byte"]], "byte() (bytes.bytes method)": [[7, "Bytes.bytes.byte"]], "byteindices() (bytes._bytes method)": [[7, "Bytes._bytes.byteIndices"]], "bytes (in module bytes)": [[7, "Bytes.bytes"]], "c_str() (bytes.bytes method)": [[7, "Bytes.bytes.c_str"]], "chpl__deserialize() (bytes._bytes method)": [[7, "Bytes._bytes.chpl__deserialize"]], "chpl__serialize() (bytes._bytes method)": [[7, "Bytes._bytes.chpl__serialize"]], "chpl_bytes() (bytes.bytes iterator)": [[7, "Bytes.bytes.chpl_bytes"]], "chpl_createbyteswithliteral() (in module bytes)": [[7, "Bytes.chpl_createBytesWithLiteral"]], "count() (bytes.bytes method)": [[7, "Bytes.bytes.count"]], "createadoptingbuffer() (bytes.bytes method)": [[7, "Bytes.bytes.createAdoptingBuffer"]], "createborrowingbuffer() (bytes.bytes method)": [[7, "Bytes.bytes.createBorrowingBuffer"]], "createcopyingbuffer() (bytes.bytes method)": [[7, "Bytes.bytes.createCopyingBuffer"]], "decode() (bytes.bytes method)": [[7, "Bytes.bytes.decode"]], "dedent() (bytes.bytes method)": [[7, "Bytes.bytes.dedent"]], "deinit() (bytes._bytes method)": [[7, "Bytes._bytes.deinit"]], "deserialize() (bytes._bytes method)": [[7, "Bytes._bytes.deserialize"]], "endswith() (bytes.bytes method)": [[7, "Bytes.bytes.endsWith"]], "find() (bytes.bytes method)": [[7, "Bytes.bytes.find"]], "hash() (bytes.bytes method)": [[7, "Bytes.bytes.hash"]], "indices() (bytes.bytes method)": [[7, "Bytes.bytes.indices"]], "init() (bytes._bytes method)": [[7, "Bytes._bytes.init"]], "init=() (bytes._bytes method)": [[7, "Bytes._bytes.init="]], "isalnum() (bytes.bytes method)": [[7, "Bytes.bytes.isAlnum"]], "isalpha() (bytes.bytes method)": [[7, "Bytes.bytes.isAlpha"]], "isdigit() (bytes.bytes method)": [[7, "Bytes.bytes.isDigit"]], "isempty() (bytes.bytes method)": [[7, "Bytes.bytes.isEmpty"]], "islower() (bytes.bytes method)": [[7, "Bytes.bytes.isLower"]], "isowned (bytes._bytes attribute)": [[7, "Bytes._bytes.isOwned"]], "isprintable() (bytes.bytes method)": [[7, "Bytes.bytes.isPrintable"]], "isspace() (bytes.bytes method)": [[7, "Bytes.bytes.isSpace"]], "istitle() (bytes.bytes method)": [[7, "Bytes.bytes.isTitle"]], "isupper() (bytes.bytes method)": [[7, "Bytes.bytes.isUpper"]], "item() (bytes._bytes method)": [[7, "Bytes._bytes.item"]], "item() (bytes.bytes method)": [[7, "Bytes.bytes.item"]], "items() (bytes.bytes iterator)": [[7, "Bytes.bytes.items"]], "join() (bytes._bytes method)": [[7, "Bytes._bytes.join"]], "join() (bytes.bytes method)": [[7, "Bytes.bytes.join"]], "locale_id (bytes._bytes attribute)": [[7, "Bytes._bytes.locale_id"]], "localize() (bytes.bytes method)": [[7, "Bytes.bytes.localize"]], "numbytes() (bytes._bytes method)": [[7, "Bytes._bytes.numBytes"]], "numbytes() (bytes.bytes method)": [[7, "Bytes.bytes.numBytes"]], "replace() (bytes.bytes method)": [[7, "Bytes.bytes.replace"]], "rfind() (bytes.bytes method)": [[7, "Bytes.bytes.rfind"]], "serialize() (bytes._bytes method)": [[7, "Bytes._bytes.serialize"]], "size() (bytes._bytes method)": [[7, "Bytes._bytes.size"]], "size() (bytes.bytes method)": [[7, "Bytes.bytes.size"]], "split() (bytes.bytes iterator)": [[7, "Bytes.bytes.split"]], "startswith() (bytes.bytes method)": [[7, "Bytes.bytes.startsWith"]], "strip() (bytes.bytes method)": [[7, "Bytes.bytes.strip"]], "these() (bytes.bytes iterator)": [[7, "Bytes.bytes.these"]], "this() (bytes._bytes method)": [[7, "Bytes._bytes.this"]], "this() (bytes.bytes method)": [[7, "Bytes.bytes.this"]], "tobyte() (bytes._bytes method)": [[7, "Bytes._bytes.toByte"]], "tobyte() (bytes.bytes method)": [[7, "Bytes.bytes.toByte"]], "tohexadecimal() (bytes.bytes method)": [[7, "Bytes.bytes.toHexadecimal"]], "tolower() (bytes.bytes method)": [[7, "Bytes.bytes.toLower"]], "totitle() (bytes.bytes method)": [[7, "Bytes.bytes.toTitle"]], "toupper() (bytes.bytes method)": [[7, "Bytes.bytes.toUpper"]], ":() (in module bytescasts)": [[8, "BytesCasts.:"]], "_real_cast_helper() (in module bytescasts)": [[8, "BytesCasts._real_cast_helper"]], "chpl_short_string_size (in module bytesstringcommon)": [[9, "BytesStringCommon.CHPL_SHORT_STRING_SIZE"]], "__serializehelper (record in bytesstringcommon)": [[9, "BytesStringCommon.__serializeHelper"]], "_cleanupfornumericcast() (in module bytesstringcommon)": [[9, "BytesStringCommon._cleanupForNumericCast"]], "_findstartofnextcodepointfrombyte() (in module bytesstringcommon)": [[9, "BytesStringCommon._findStartOfNextCodepointFromByte"]], "buff (bytesstringcommon.__serializehelper attribute)": [[9, "BytesStringCommon.__serializeHelper.buff"]], "bufflen (bytesstringcommon.__serializehelper attribute)": [[9, "BytesStringCommon.__serializeHelper.buffLen"]], "byte_isalnum() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isAlnum"]], "byte_isalpha() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isAlpha"]], "byte_isascii() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isAscii"]], "byte_isdigit() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isDigit"]], "byte_islower() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isLower"]], "byte_isprintable() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isPrintable"]], "byte_isupper() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isUpper"]], "byte_iswhitespace() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_isWhitespace"]], "byte_tolower() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_toLower"]], "byte_toupper() (in module bytesstringcommon)": [[9, "BytesStringCommon.byte_toUpper"]], "cachednumcodepoints (bytesstringcommon.__serializehelper attribute)": [[9, "BytesStringCommon.__serializeHelper.cachedNumCodepoints"]], "chpl__getinplacebufferdata() (in module bytesstringcommon)": [[9, "BytesStringCommon.chpl__getInPlaceBufferData"]], "chpl__getinplacebufferdataforwrite() (in module bytesstringcommon)": [[9, "BytesStringCommon.chpl__getInPlaceBufferDataForWrite"]], "chpl__inplacebuffer (record in bytesstringcommon)": [[9, "BytesStringCommon.chpl__inPlaceBuffer"]], "countnumcodepoints() (in module bytesstringcommon)": [[9, "BytesStringCommon.countNumCodepoints"]], "decodebytebuffer() (in module bytesstringcommon)": [[9, "BytesStringCommon.decodeByteBuffer"]], "decodehelp() (in module bytesstringcommon)": [[9, "BytesStringCommon.decodeHelp"]], "decodepolicy (enum in bytesstringcommon)": [[9, "BytesStringCommon.decodePolicy"]], "doappend() (in module bytesstringcommon)": [[9, "BytesStringCommon.doAppend"]], "doappendsomebytes() (in module bytesstringcommon)": [[9, "BytesStringCommon.doAppendSomeBytes"]], "doassign() (in module bytesstringcommon)": [[9, "BytesStringCommon.doAssign"]], "doconcat() (in module bytesstringcommon)": [[9, "BytesStringCommon.doConcat"]], "dodedent() (in module bytesstringcommon)": [[9, "BytesStringCommon.doDedent"]], "doeq() (in module bytesstringcommon)": [[9, "BytesStringCommon.doEq"]], "dogreaterthan() (in module bytesstringcommon)": [[9, "BytesStringCommon.doGreaterThan"]], "dogreaterthanoreq() (in module bytesstringcommon)": [[9, "BytesStringCommon.doGreaterThanOrEq"]], "dojoin() (in module bytesstringcommon)": [[9, "BytesStringCommon.doJoin"]], "dojoiniterator() (in module bytesstringcommon)": [[9, "BytesStringCommon.doJoinIterator"]], "dolessthan() (in module bytesstringcommon)": [[9, "BytesStringCommon.doLessThan"]], "dolessthanoreq() (in module bytesstringcommon)": [[9, "BytesStringCommon.doLessThanOrEq"]], "domultiply() (in module bytesstringcommon)": [[9, "BytesStringCommon.doMultiply"]], "dopartition() (in module bytesstringcommon)": [[9, "BytesStringCommon.doPartition"]], "doreplace() (in module bytesstringcommon)": [[9, "BytesStringCommon.doReplace"]], "dosearchnoenc() (in module bytesstringcommon)": [[9, "BytesStringCommon.doSearchNoEnc"]], "dosplit() (in module bytesstringcommon)": [[9, "BytesStringCommon.doSplit"]], "dosplithelp() (in module bytesstringcommon)": [[9, "BytesStringCommon.doSplitHelp"]], "dosplitwsnoenc() (in module bytesstringcommon)": [[9, "BytesStringCommon.doSplitWSNoEnc"]], "dosplitwsnoenchelp() (in module bytesstringcommon)": [[9, "BytesStringCommon.doSplitWSNoEncHelp"]], "dostripnoenc() (in module bytesstringcommon)": [[9, "BytesStringCommon.doStripNoEnc"]], "encodepolicy (enum in bytesstringcommon)": [[9, "BytesStringCommon.encodePolicy"]], "getcstr() (in module bytesstringcommon)": [[9, "BytesStringCommon.getCStr"]], "gethash() (in module bytesstringcommon)": [[9, "BytesStringCommon.getHash"]], "getindextype() (in module bytesstringcommon)": [[9, "BytesStringCommon.getIndexType"]], "getslice() (in module bytesstringcommon)": [[9, "BytesStringCommon.getSlice"]], "getview() (in module bytesstringcommon)": [[9, "BytesStringCommon.getView"]], "initwithborrowedbuffer() (in module bytesstringcommon)": [[9, "BytesStringCommon.initWithBorrowedBuffer"]], "initwithnewbuffer() (in module bytesstringcommon)": [[9, "BytesStringCommon.initWithNewBuffer"]], "initwithownedbuffer() (in module bytesstringcommon)": [[9, "BytesStringCommon.initWithOwnedBuffer"]], "isinitialbyte() (in module bytesstringcommon)": [[9, "BytesStringCommon.isInitialByte"]], "locale_id (bytesstringcommon.__serializehelper attribute)": [[9, "BytesStringCommon.__serializeHelper.locale_id"]], "reinitwithnewbuffer() (in module bytesstringcommon)": [[9, "BytesStringCommon.reinitWithNewBuffer"]], "reinitwithownedbuffer() (in module bytesstringcommon)": [[9, "BytesStringCommon.reinitWithOwnedBuffer"]], "resizebuffer() (in module bytesstringcommon)": [[9, "BytesStringCommon.resizeBuffer"]], "resizebufferforappend() (in module bytesstringcommon)": [[9, "BytesStringCommon.resizeBufferForAppend"]], "shortdata (bytesstringcommon.__serializehelper attribute)": [[9, "BytesStringCommon.__serializeHelper.shortData"]], "showstringbytesinitdeprwarnings (in module bytesstringcommon)": [[9, "BytesStringCommon.showStringBytesInitDeprWarnings"]], "size (bytesstringcommon.__serializehelper attribute)": [[9, "BytesStringCommon.__serializeHelper.size"]], "startsendswith() (in module bytesstringcommon)": [[9, "BytesStringCommon.startsEndsWith"]], "surrogateescape (in module bytesstringcommon)": [[9, "BytesStringCommon.surrogateEscape"]], "!=() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.!="]], ":() (in module cstring)": [[10, "CString.:"]], "<() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.<"]], "<=() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.<="]], "=() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.="]], "==() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.=="]], ">() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.>"]], ">=() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.>="]], "_string_contains() (in module cstring)": [[10, "CString._string_contains"]], "chpl__autocopy() (in module cstring)": [[10, "CString.chpl__autoCopy"]], "chpl__initcopy() (in module cstring)": [[10, "CString.chpl__initCopy"]], "chpl_free_c_string() (in module cstring)": [[10, "CString.chpl_free_c_string"]], "deserialize() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.deserialize"]], "indexof() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.indexOf"]], "serialize() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.serialize"]], "size() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.size"]], "string_index_of() (in module cstring)": [[10, "CString.string_index_of"]], "substring() (cstring.chpl_c_string method)": [[10, "CString.chpl_c_string.substring"]], "!=() (in module chapelarray)": [[11, "ChapelArray.!="]], "%=() (in module chapelarray)": [[11, "ChapelArray.%="]], "&=() (in module chapelarray)": [[11, "ChapelArray.&="]], "**=() (in module chapelarray)": [[11, "ChapelArray.**="]], "*=() (in module chapelarray)": [[11, "ChapelArray.*="]], "+=() (in module chapelarray)": [[11, "ChapelArray.+="]], "-=() (in module chapelarray)": [[11, "ChapelArray.-="]], "/=() (in module chapelarray)": [[11, "ChapelArray./="]], ":() (in module chapelarray)": [[11, "ChapelArray.:"]], "<<=() (in module chapelarray)": [[11, "ChapelArray.<<="]], "<=>() (in module chapelarray)": [[11, "ChapelArray.<=>"]], "=() (in module chapelarray)": [[11, "ChapelArray.="]], "==() (in module chapelarray)": [[11, "ChapelArray.=="]], ">>=() (in module chapelarray)": [[11, "ChapelArray.>>="]], "chpl_warn_domain_literal (in module chapelarray)": [[11, "ChapelArray.CHPL_WARN_DOMAIN_LITERAL"]], "irv() (chapelarray._array method)": [[11, "ChapelArray._array.IRV"]], "podvalaccess (in module chapelarray)": [[11, "ChapelArray.PODValAccess"]], "^=() (in module chapelarray)": [[11, "ChapelArray.^="]], "_array (record in chapelarray)": [[11, "ChapelArray._array"]], "_deinitelements() (in module chapelarray)": [[11, "ChapelArray._deinitElements"]], "_deinitelementsisparallel() (in module chapelarray)": [[11, "ChapelArray._deinitElementsIsParallel"]], "_desync() (in module chapelarray)": [[11, "ChapelArray._desync"]], "_do_destroy_arr() (in module chapelarray)": [[11, "ChapelArray._do_destroy_arr"]], "_do_destroy_array() (in module chapelarray)": [[11, "ChapelArray._do_destroy_array"]], "_dom() (chapelarray._array method)": [[11, "ChapelArray._array._dom"]], "_freeprivatizedclass() (in module chapelarray)": [[11, "ChapelArray._freePrivatizedClass"]], "_getdistribution() (in module chapelarray)": [[11, "ChapelArray._getDistribution"]], "_instance (chapelarray._array attribute)": [[11, "ChapelArray._array._instance"]], "_isprivatized() (in module chapelarray)": [[11, "ChapelArray._isPrivatized"]], "_makeindextuple() (in module chapelarray)": [[11, "ChapelArray._makeIndexTuple"]], "_newarray() (in module chapelarray)": [[11, "ChapelArray._newArray"]], "_newprivatizedclass() (in module chapelarray)": [[11, "ChapelArray._newPrivatizedClass"]], "_pid (chapelarray._array attribute)": [[11, "ChapelArray._array._pid"]], "_reprivatize() (in module chapelarray)": [[11, "ChapelArray._reprivatize"]], "_scan() (chapelarray._array method)": [[11, "ChapelArray._array._scan"]], "_telt (enum in chapelarray)": [[11, "ChapelArray._tElt"]], "_unowned (chapelarray._array attribute)": [[11, "ChapelArray._array._unowned"]], "_validrankchangeargs() (in module chapelarray)": [[11, "ChapelArray._validRankChangeArgs"]], "_value() (chapelarray._array method)": [[11, "ChapelArray._array._value"]], "arrayasvecgrowthfactor (in module chapelarray)": [[11, "ChapelArray.arrayAsVecGrowthFactor"]], "arrayliterallowbound (in module chapelarray)": [[11, "ChapelArray.arrayLiteralLowBound"]], "capturediteratorlowbound (in module chapelarray)": [[11, "ChapelArray.capturedIteratorLowBound"]], "checkaccess() (chapelarray._array method)": [[11, "ChapelArray._array.checkAccess"]], "checkarrayshapesuponassignment() (in module chapelarray)": [[11, "ChapelArray.checkArrayShapesUponAssignment"]], "checkrankchange() (chapelarray._array method)": [[11, "ChapelArray._array.checkRankChange"]], "checkslice() (chapelarray._array method)": [[11, "ChapelArray._array.checkSlice"]], "chpl__autocopy() (in module chapelarray)": [[11, "ChapelArray.chpl__autoCopy"]], "chpl__buildarrayexpr() (in module chapelarray)": [[11, "ChapelArray.chpl__buildArrayExpr"]], "chpl__buildarrayruntimetype() (in module chapelarray)": [[11, "ChapelArray.chpl__buildArrayRuntimeType"]], "chpl__buildassociativearrayexpr() (in module chapelarray)": [[11, "ChapelArray.chpl__buildAssociativeArrayExpr"]], "chpl__builddistdmapvalue() (in module chapelarray)": [[11, "ChapelArray.chpl__buildDistDMapValue"]], "chpl__builddisttype() (in module chapelarray)": [[11, "ChapelArray.chpl__buildDistType"]], "chpl__builddistvalue() (in module chapelarray)": [[11, "ChapelArray.chpl__buildDistValue"]], "chpl__buildindextype() (in module chapelarray)": [[11, "ChapelArray.chpl__buildIndexType"]], "chpl__bulktransferarray() (in module chapelarray)": [[11, "ChapelArray.chpl__bulkTransferArray"]], "chpl__bulktransferptrarray() (in module chapelarray)": [[11, "ChapelArray.chpl__bulkTransferPtrArray"]], "chpl__checkoutelttypematch() (in module chapelarray)": [[11, "ChapelArray.chpl__checkOutEltTypeMatch"]], "chpl__checkretelttypematch() (in module chapelarray)": [[11, "ChapelArray.chpl__checkRetEltTypeMatch"]], "chpl__coercecopy() (in module chapelarray)": [[11, "ChapelArray.chpl__coerceCopy"]], "chpl__coercehelp() (in module chapelarray)": [[11, "ChapelArray.chpl__coerceHelp"]], "chpl__coercemove() (in module chapelarray)": [[11, "ChapelArray.chpl__coerceMove"]], "chpl__compatibleforbulktransfer() (in module chapelarray)": [[11, "ChapelArray.chpl__compatibleForBulkTransfer"]], "chpl__compatibleforwideptrbulktransfer() (in module chapelarray)": [[11, "ChapelArray.chpl__compatibleForWidePtrBulkTransfer"]], "chpl__convertruntimetypetovalue() (in module chapelarray)": [[11, "ChapelArray.chpl__convertRuntimeTypeToValue"]], "chpl__convertvaluetoruntimetype() (in module chapelarray)": [[11, "ChapelArray.chpl__convertValueToRuntimeType"]], "chpl__countranges() (in module chapelarray)": [[11, "ChapelArray.chpl__countRanges"]], "chpl__deserialize() (chapelarray._array method)": [[11, "ChapelArray._array.chpl__deserialize"]], "chpl__distributed() (in module chapelarray)": [[11, "ChapelArray.chpl__distributed"]], "chpl__distributionfromdomainruntimetype() (in module chapelarray)": [[11, "ChapelArray.chpl__distributionFromDomainRuntimeType"]], "chpl__elttypefromarrayruntimetype() (in module chapelarray)": [[11, "ChapelArray.chpl__eltTypeFromArrayRuntimeType"]], "chpl__getactualarray() (in module chapelarray)": [[11, "ChapelArray.chpl__getActualArray"]], "chpl__getactualdomain() (in module chapelarray)": [[11, "ChapelArray.chpl__getActualDomain"]], "chpl__initafterbulktransfer() (in module chapelarray)": [[11, "ChapelArray.chpl__initAfterBulkTransfer"]], "chpl__initcopy() (in module chapelarray)": [[11, "ChapelArray.chpl__initCopy"]], "chpl__initcopy_shapehelp() (in module chapelarray)": [[11, "ChapelArray.chpl__initCopy_shapeHelp"]], "chpl__instancetypefromarrayruntimetype() (in module chapelarray)": [[11, "ChapelArray.chpl__instanceTypeFromArrayRuntimeType"]], "chpl__instancetypefromdomainruntimetype() (in module chapelarray)": [[11, "ChapelArray.chpl__instanceTypeFromDomainRuntimeType"]], "chpl__isarrayview() (in module chapelarray)": [[11, "ChapelArray.chpl__isArrayView"]], "chpl__isdrordrview() (in module chapelarray)": [[11, "ChapelArray.chpl__isDROrDRView"]], "chpl__isdense1darray() (chapelarray._array method)": [[11, "ChapelArray._array.chpl__isDense1DArray"]], "chpl__isdomainview() (in module chapelarray)": [[11, "ChapelArray.chpl__isDomainView"]], "chpl__localslicedefaultaritharrhelp() (chapelarray._array method)": [[11, "ChapelArray._array.chpl__localSliceDefaultArithArrHelp"]], "chpl__promotiontype() (chapelarray._array method)": [[11, "ChapelArray._array.chpl__promotionType"]], "chpl__serialize() (chapelarray._array method)": [[11, "ChapelArray._array.chpl__serialize"]], "chpl__serializeassignment() (in module chapelarray)": [[11, "ChapelArray.chpl__serializeAssignment"]], "chpl__supporteddatatypeforbulktransfer() (in module chapelarray)": [[11, "ChapelArray.chpl__supportedDataTypeForBulkTransfer"]], "chpl__throwerrorunchecked() (in module chapelarray)": [[11, "ChapelArray.chpl__throwErrorUnchecked"]], "chpl__transferarray() (in module chapelarray)": [[11, "ChapelArray.chpl__transferArray"]], "chpl__uncheckedarraytransfer() (in module chapelarray)": [[11, "ChapelArray.chpl__uncheckedArrayTransfer"]], "chpl__unref() (in module chapelarray)": [[11, "ChapelArray.chpl__unref"]], "chpl_arraytoptr() (in module chapelarray)": [[11, "ChapelArray.chpl_arrayToPtr"]], "chpl_arraytoptrconst() (in module chapelarray)": [[11, "ChapelArray.chpl_arrayToPtrConst"]], "chpl_arraytoptrerrorhelper() (in module chapelarray)": [[11, "ChapelArray.chpl_arrayToPtrErrorHelper"]], "chpl_checkarrargdoms() (chapelarray._array method)": [[11, "ChapelArray._array.chpl_checkArrArgDoms"]], "chpl_computeunifiedtype() (in module chapelarray)": [[11, "ChapelArray.chpl_computeUnifiedType"]], "chpl_computeunifiedtypehelp() (in module chapelarray)": [[11, "ChapelArray.chpl_computeUnifiedTypeHelp"]], "chpl_decrefcountsfordomainsinarrayelttypes() (in module chapelarray)": [[11, "ChapelArray.chpl_decRefCountsForDomainsInArrayEltTypes"]], "chpl_defaultcomparator() (in module chapelarray)": [[11, "ChapelArray.chpl_defaultComparator"]], "chpl_increfcountsfordomainsinarrayelttypes() (in module chapelarray)": [[11, "ChapelArray.chpl_incRefCountsForDomainsInArrayEltTypes"]], "chpl_isnondistributedarray() (chapelarray._array method)": [[11, "ChapelArray._array.chpl_isNonDistributedArray"]], "count() (chapelarray._array method)": [[11, "ChapelArray._array.count"]], "debugarrayasvec (in module chapelarray)": [[11, "ChapelArray.debugArrayAsVec"]], "debugbulktransfer (in module chapelarray)": [[11, "ChapelArray.debugBulkTransfer"]], "debuglocalizedconstdomains (in module chapelarray)": [[11, "ChapelArray.debugLocalizedConstDomains"]], "debugoptimizedswap (in module chapelarray)": [[11, "ChapelArray.debugOptimizedSwap"]], "deinit() (chapelarray._array method)": [[11, "ChapelArray._array.deinit"]], "deserialize() (chapelarray._array method)": [[11, "ChapelArray._array.deserialize"]], "deserializefrom() (chapelarray._array method)": [[11, "ChapelArray._array.deserializeFrom"]], "dim() (chapelarray._array method)": [[11, "ChapelArray._array.dim"]], "dims() (chapelarray._array method)": [[11, "ChapelArray._array.dims"]], "disableconstdomainopt (in module chapelarray)": [[11, "ChapelArray.disableConstDomainOpt"]], "displayrepresentation() (chapelarray._array method)": [[11, "ChapelArray._array.displayRepresentation"]], "dmap (record in chapelarray)": [[11, "ChapelArray.dmap"]], "elttype() (chapelarray._array method)": [[11, "ChapelArray._array.eltType"]], "equals() (chapelarray._array method)": [[11, "ChapelArray._array.equals"]], "find() (chapelarray._array method)": [[11, "ChapelArray._array.find"]], "first() (chapelarray._array method)": [[11, "ChapelArray._array.first"]], "fullidxtype() (chapelarray._array method)": [[11, "ChapelArray._array.fullIdxType"]], "hasposnegunitstride() (chapelarray._array method)": [[11, "ChapelArray._array.hasPosNegUnitStride"]], "hassinglelocalsubdomain() (chapelarray._array method)": [[11, "ChapelArray._array.hasSingleLocalSubdomain"]], "hasunitstride() (chapelarray._array method)": [[11, "ChapelArray._array.hasUnitStride"]], "idxtype() (chapelarray._array method)": [[11, "ChapelArray._array.idxType"]], "indices() (chapelarray._array iterator)": [[11, "ChapelArray._array.indices"]], "indices() (chapelarray._array method)": [[11, "ChapelArray._array.indices"]], "isassociative() (chapelarray._array method)": [[11, "ChapelArray._array.isAssociative"]], "iscollapseddimension() (in module chapelarray)": [[11, "ChapelArray.isCollapsedDimension"]], "isempty() (chapelarray._array method)": [[11, "ChapelArray._array.isEmpty"]], "isirregular() (chapelarray._array method)": [[11, "ChapelArray._array.isIrregular"]], "isrectangular() (chapelarray._array method)": [[11, "ChapelArray._array.isRectangular"]], "issparse() (chapelarray._array method)": [[11, "ChapelArray._array.isSparse"]], "iteratoryieldslocalelements() (chapelarray._array method)": [[11, "ChapelArray._array.iteratorYieldsLocalElements"]], "last() (chapelarray._array method)": [[11, "ChapelArray._array.last"]], "linearize() (in module chapelarray)": [[11, "ChapelArray.linearize"]], "localaccess() (chapelarray._array method)": [[11, "ChapelArray._array.localAccess"]], "localslice() (chapelarray._array method)": [[11, "ChapelArray._array.localSlice"]], "localsubdomain() (chapelarray._array method)": [[11, "ChapelArray._array.localSubdomain"]], "localsubdomains() (chapelarray._array iterator)": [[11, "ChapelArray._array.localSubdomains"]], "localizeconstdomains (in module chapelarray)": [[11, "ChapelArray.localizeConstDomains"]], "logallarreltaccess (in module chapelarray)": [[11, "ChapelArray.logAllArrEltAccess"]], "logdistarreltaccess (in module chapelarray)": [[11, "ChapelArray.logDistArrEltAccess"]], "nullpid (in module chapelarray)": [[11, "ChapelArray.nullPid"]], "numprivateobjects (in module chapelarray)": [[11, "ChapelArray.numPrivateObjects"]], "rank() (chapelarray._array method)": [[11, "ChapelArray._array.rank"]], "reindex() (chapelarray._array method)": [[11, "ChapelArray._array.reindex"]], "reshape() (in module chapelarray)": [[11, "ChapelArray.reshape"]], "serialize() (chapelarray._array method)": [[11, "ChapelArray._array.serialize"]], "shape() (chapelarray._array method)": [[11, "ChapelArray._array.shape"]], "shouldreturnrvaluebyvalue() (in module chapelarray)": [[11, "ChapelArray.shouldReturnRvalueByValue"]], "size() (chapelarray._array method)": [[11, "ChapelArray._array.size"]], "sizeas() (chapelarray._array method)": [[11, "ChapelArray._array.sizeAs"]], "strides() (chapelarray._array method)": [[11, "ChapelArray._array.strides"]], "targetlocales() (chapelarray._array method)": [[11, "ChapelArray._array.targetLocales"]], "these() (chapelarray._array iterator)": [[11, "ChapelArray._array.these"]], "this() (chapelarray._array method)": [[11, "ChapelArray._array.this"]], "trycopy() (chapelarray._array method)": [[11, "ChapelArray._array.tryCopy"]], "usebulkptrtransfer (in module chapelarray)": [[11, "ChapelArray.useBulkPtrTransfer"]], "usebulktransfer (in module chapelarray)": [[11, "ChapelArray.useBulkTransfer"]], "usebulktransferdist (in module chapelarray)": [[11, "ChapelArray.useBulkTransferDist"]], "usebulktransferstride (in module chapelarray)": [[11, "ChapelArray.useBulkTransferStride"]], "|=() (in module chapelarray)": [[11, "ChapelArray.|="]], ":() (in module chapelarrayviewelision)": [[12, "ChapelArrayViewElision.:"]], "==() (in module chapelarrayviewelision)": [[12, "ChapelArrayViewElision.=="]], "_value() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice._value"]], "chpl__ave_exprcanbeprotoslice() (in module chapelarrayviewelision)": [[12, "ChapelArrayViewElision.chpl__ave_exprCanBeProtoSlice"]], "chpl__ave_protoslicessupportassignment() (in module chapelarrayviewelision)": [[12, "ChapelArrayViewElision.chpl__ave_protoSlicesSupportAssignment"]], "chpl__createconstprotoslice() (in module chapelarrayviewelision)": [[12, "ChapelArrayViewElision.chpl__createConstProtoSlice"]], "chpl__createprotoslice() (in module chapelarrayviewelision)": [[12, "ChapelArrayViewElision.chpl__createProtoSlice"]], "chpl__protoslice (record in chapelarrayviewelision)": [[12, "ChapelArrayViewElision.chpl__protoSlice"]], "dims() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.dims"]], "domorrange() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.domOrRange"]], "elttype() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.eltType"]], "init() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.init"]], "init=() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.init="]], "isconst (chapelarrayviewelision.chpl__protoslice attribute)": [[12, "ChapelArrayViewElision.chpl__protoSlice.isConst"]], "isprotoslice() (in module chapelarrayviewelision)": [[12, "ChapelArrayViewElision.isProtoSlice"]], "isrankchange (chapelarrayviewelision.chpl__protoslice attribute)": [[12, "ChapelArrayViewElision.chpl__protoSlice.isRankChange"]], "isrectangular() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.isRectangular"]], "ptrtoarr (chapelarrayviewelision.chpl__protoslice attribute)": [[12, "ChapelArrayViewElision.chpl__protoSlice.ptrToArr"]], "ranges (chapelarrayviewelision.chpl__protoslice attribute)": [[12, "ChapelArrayViewElision.chpl__protoSlice.ranges"]], "rank (chapelarrayviewelision.chpl__protoslice attribute)": [[12, "ChapelArrayViewElision.chpl__protoSlice.rank"]], "rank() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.rank"]], "sizeas() (chapelarrayviewelision.chpl__protoslice method)": [[12, "ChapelArrayViewElision.chpl__protoSlice.sizeAs"]], "slicingexprtype (chapelarrayviewelision.chpl__protoslice attribute)": [[12, "ChapelArrayViewElision.chpl__protoSlice.slicingExprType"]], "these() (chapelarrayviewelision.chpl__protoslice iterator)": [[12, "ChapelArrayViewElision.chpl__protoSlice.these"]], "chpl__arrayiteratoryieldslocalelements() (in module chapelautoaggregation)": [[13, "ChapelAutoAggregation.chpl__arrayIteratorYieldsLocalElements"]], "chpl_dstaggregatorfor() (in module chapelautoaggregation)": [[13, "ChapelAutoAggregation.chpl_dstAggregatorFor"]], "chpl_srcaggregatorfor() (in module chapelautoaggregation)": [[13, "ChapelAutoAggregation.chpl_srcAggregatorFor"]], "chpl__ala_offsetcheck() (in module chapelautolocalaccess)": [[14, "ChapelAutoLocalAccess.chpl__ala_offsetCheck"]], "chpl__dynamicautolocalcheck() (in module chapelautolocalaccess)": [[14, "ChapelAutoLocalAccess.chpl__dynamicAutoLocalCheck"]], "chpl__isarrayviewwithdifferentdist() (in module chapelautolocalaccess)": [[14, "ChapelAutoLocalAccess.chpl__isArrayViewWithDifferentDist"]], "chpl__staticautolocalcheck() (in module chapelautolocalaccess)": [[14, "ChapelAutoLocalAccess.chpl__staticAutoLocalCheck"]], "!() (in module chapelbase)": [[15, "ChapelBase.!"]], "!=() (in module chapelbase)": [[15, "ChapelBase.!="]], "%() (in module chapelbase)": [[15, "ChapelBase.%"]], "%=() (in module chapelbase)": [[15, "ChapelBase.%="]], "&() (in module chapelbase)": [[15, "ChapelBase.&"]], "&=() (in module chapelbase)": [[15, "ChapelBase.&="]], "*() (in module chapelbase)": [[15, "ChapelBase.*"]], "**() (in module chapelbase)": [[15, "ChapelBase.**"]], "**=() (in module chapelbase)": [[15, "ChapelBase.**="]], "*=() (in module chapelbase)": [[15, "ChapelBase.*="]], "+() (in module chapelbase)": [[15, "ChapelBase.+"]], "+=() (in module chapelbase)": [[15, "ChapelBase.+="]], "-() (in module chapelbase)": [[15, "ChapelBase.-"]], "-=() (in module chapelbase)": [[15, "ChapelBase.-="]], "/() (in module chapelbase)": [[15, "ChapelBase./"]], "/=() (in module chapelbase)": [[15, "ChapelBase./="]], ":() (in module chapelbase)": [[15, "ChapelBase.:"]], "<() (in module chapelbase)": [[15, "ChapelBase.<"]], "<<() (in module chapelbase)": [[15, "ChapelBase.<<"]], "<<=() (in module chapelbase)": [[15, "ChapelBase.<<="]], "<=() (in module chapelbase)": [[15, "ChapelBase.<="]], "<=>() (in module chapelbase)": [[15, "ChapelBase.<=>"]], "=() (chapelbase.c_fn_ptr method)": [[15, "ChapelBase.c_fn_ptr.="]], "=() (in module chapelbase)": [[15, "ChapelBase.="]], "==() (in module chapelbase)": [[15, "ChapelBase.=="]], ">() (in module chapelbase)": [[15, "ChapelBase.>"]], ">=() (in module chapelbase)": [[15, "ChapelBase.>="]], ">>() (in module chapelbase)": [[15, "ChapelBase.>>"]], ">>=() (in module chapelbase)": [[15, "ChapelBase.>>="]], "arrayinit (enum in chapelbase)": [[15, "ChapelBase.ArrayInit"]], "qio_aggregate_format_braces (in module chapelbase)": [[15, "ChapelBase.QIO_AGGREGATE_FORMAT_BRACES"]], "qio_aggregate_format_chpl (in module chapelbase)": [[15, "ChapelBase.QIO_AGGREGATE_FORMAT_CHPL"]], "qio_aggregate_format_json (in module chapelbase)": [[15, "ChapelBase.QIO_AGGREGATE_FORMAT_JSON"]], "qio_array_format_chpl (in module chapelbase)": [[15, "ChapelBase.QIO_ARRAY_FORMAT_CHPL"]], "qio_array_format_json (in module chapelbase)": [[15, "ChapelBase.QIO_ARRAY_FORMAT_JSON"]], "qio_array_format_space (in module chapelbase)": [[15, "ChapelBase.QIO_ARRAY_FORMAT_SPACE"]], "qio_style_element_aggregate (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_AGGREGATE"]], "qio_style_element_array (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_ARRAY"]], "qio_style_element_byte_order (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_BYTE_ORDER"]], "qio_style_element_complex (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_COMPLEX"]], "qio_style_element_is_native_byte_order (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER"]], "qio_style_element_skip_unknown_fields (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_SKIP_UNKNOWN_FIELDS"]], "qio_style_element_string (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_STRING"]], "qio_style_element_tuple (in module chapelbase)": [[15, "ChapelBase.QIO_STYLE_ELEMENT_TUPLE"]], "qio_tuple_format_chpl (in module chapelbase)": [[15, "ChapelBase.QIO_TUPLE_FORMAT_CHPL"]], "qio_tuple_format_json (in module chapelbase)": [[15, "ChapelBase.QIO_TUPLE_FORMAT_JSON"]], "qio_tuple_format_space (in module chapelbase)": [[15, "ChapelBase.QIO_TUPLE_FORMAT_SPACE"]], "^() (in module chapelbase)": [[15, "ChapelBase.^"]], "^=() (in module chapelbase)": [[15, "ChapelBase.^="]], "_endcount (class in chapelbase)": [[15, "ChapelBase._EndCount"]], "_endcountbase (class in chapelbase)": [[15, "ChapelBase._EndCountBase"]], "_basepowertwo() (in module chapelbase)": [[15, "ChapelBase._basePowerTwo"]], "_canoptimizeexp() (in module chapelbase)": [[15, "ChapelBase._canOptimizeExp"]], "_cond_invalid() (in module chapelbase)": [[15, "ChapelBase._cond_invalid"]], "_cond_test() (in module chapelbase)": [[15, "ChapelBase._cond_test"]], "_ddata (class in chapelbase)": [[15, "ChapelBase._ddata"]], "_ddata_allocate() (in module chapelbase)": [[15, "ChapelBase._ddata_allocate"]], "_ddata_allocate_noinit() (in module chapelbase)": [[15, "ChapelBase._ddata_allocate_noinit"]], "_ddata_allocate_noinit_gpu_shared() (in module chapelbase)": [[15, "ChapelBase._ddata_allocate_noinit_gpu_shared"]], "_ddata_allocate_postalloc() (in module chapelbase)": [[15, "ChapelBase._ddata_allocate_postalloc"]], "_ddata_fill() (in module chapelbase)": [[15, "ChapelBase._ddata_fill"]], "_ddata_free() (in module chapelbase)": [[15, "ChapelBase._ddata_free"]], "_ddata_reallocate() (in module chapelbase)": [[15, "ChapelBase._ddata_reallocate"]], "_ddata_shift() (in module chapelbase)": [[15, "ChapelBase._ddata_shift"]], "_ddata_sizeof_element() (in module chapelbase)": [[15, "ChapelBase._ddata_sizeof_element"]], "_ddata_supports_reallocate() (in module chapelbase)": [[15, "ChapelBase._ddata_supports_reallocate"]], "_downdynamicendcount() (in module chapelbase)": [[15, "ChapelBase._downDynamicEndCount"]], "_downendcount() (in module chapelbase)": [[15, "ChapelBase._downEndCount"]], "_endcountalloc() (in module chapelbase)": [[15, "ChapelBase._endCountAlloc"]], "_endcountfree() (in module chapelbase)": [[15, "ChapelBase._endCountFree"]], "_expbasehelp() (in module chapelbase)": [[15, "ChapelBase._expBaseHelp"]], "_exphelp() (in module chapelbase)": [[15, "ChapelBase._expHelp"]], "_i2r() (in module chapelbase)": [[15, "ChapelBase._i2r"]], "_intexphelp() (in module chapelbase)": [[15, "ChapelBase._intExpHelp"]], "_object (class in chapelbase)": [[15, "ChapelBase._object"]], "_r2i() (in module chapelbase)": [[15, "ChapelBase._r2i"]], "_ref (class in chapelbase)": [[15, "ChapelBase._ref"]], "_remoteendcounttype (in module chapelbase)": [[15, "ChapelBase._remoteEndCountType"]], "_removed_cast() (in module chapelbase)": [[15, "ChapelBase._removed_cast"]], "_to_borrowed() (in module chapelbase)": [[15, "ChapelBase._to_borrowed"]], "_to_nilable() (in module chapelbase)": [[15, "ChapelBase._to_nilable"]], "_to_nonnil() (in module chapelbase)": [[15, "ChapelBase._to_nonnil"]], "_to_unmanaged() (in module chapelbase)": [[15, "ChapelBase._to_unmanaged"]], "_try_ddata_allocate() (in module chapelbase)": [[15, "ChapelBase._try_ddata_allocate"]], "_updynamicendcount() (in module chapelbase)": [[15, "ChapelBase._upDynamicEndCount"]], "_upendcount() (in module chapelbase)": [[15, "ChapelBase._upEndCount"]], "_val (chapelbase._ref attribute)": [[15, "ChapelBase._ref._val"]], "_waitendcount() (in module chapelbase)": [[15, "ChapelBase._waitEndCount"]], "add() (chapelbase._endcount method)": [[15, "ChapelBase._EndCount.add"]], "assocparsafedefault (in module chapelbase)": [[15, "ChapelBase.assocParSafeDefault"]], "bitshiftchecks() (in module chapelbase)": [[15, "ChapelBase.bitshiftChecks"]], "c_fn_ptr (in module chapelbase)": [[15, "ChapelBase.c_fn_ptr"]], "c_string (in module chapelbase)": [[15, "ChapelBase.c_string"]], "chpl_moduledeinit (class in chapelbase)": [[15, "ChapelBase.chpl_ModuleDeinit"]], "chpl__autocopy() (in module chapelbase)": [[15, "ChapelBase.chpl__autoCopy"]], "chpl__autodestroy() (in module chapelbase)": [[15, "ChapelBase.chpl__autoDestroy"]], "chpl__bothlocal() (in module chapelbase)": [[15, "ChapelBase.chpl__bothLocal"]], "chpl__delete() (in module chapelbase)": [[15, "ChapelBase.chpl__delete"]], "chpl__initcopy() (in module chapelbase)": [[15, "ChapelBase.chpl__initCopy"]], "chpl__unref() (in module chapelbase)": [[15, "ChapelBase.chpl__unref"]], "chpl_after_forall_fence() (in module chapelbase)": [[15, "ChapelBase.chpl_after_forall_fence"]], "chpl_arrayinitmethodruntimeselectable (in module chapelbase)": [[15, "ChapelBase.chpl_arrayInitMethodRuntimeSelectable"]], "chpl_boundedcoforallsize() (in module chapelbase)": [[15, "ChapelBase.chpl_boundedCoforallSize"]], "chpl_castunmanagederror() (in module chapelbase)": [[15, "ChapelBase.chpl_castUnmanagedError"]], "chpl_checkborrowifvar() (in module chapelbase)": [[15, "ChapelBase.chpl_checkBorrowIfVar"]], "chpl_checkcastabstractenumerror() (in module chapelbase)": [[15, "ChapelBase.chpl_checkCastAbstractEnumError"]], "chpl_checklegaltypefieldaccessor() (in module chapelbase)": [[15, "ChapelBase.chpl_checkLegalTypeFieldAccessor"]], "chpl_comm_task_create() (in module chapelbase)": [[15, "ChapelBase.chpl_comm_task_create"]], "chpl_comm_task_end() (in module chapelbase)": [[15, "ChapelBase.chpl_comm_task_end"]], "chpl_comm_unordered_task_fence() (in module chapelbase)": [[15, "ChapelBase.chpl_comm_unordered_task_fence"]], "chpl_config_get_value() (in module chapelbase)": [[15, "ChapelBase.chpl_config_get_value"]], "chpl_config_has_value() (in module chapelbase)": [[15, "ChapelBase.chpl_config_has_value"]], "chpl_ddataresizepolicy (enum in chapelbase)": [[15, "ChapelBase.chpl_ddataResizePolicy"]], "chpl_defaultarrayinitmethod (in module chapelbase)": [[15, "ChapelBase.chpl_defaultArrayInitMethod"]], "chpl_defaultgpuarrayinitmethod (in module chapelbase)": [[15, "ChapelBase.chpl_defaultGpuArrayInitMethod"]], "chpl_field_gt() (in module chapelbase)": [[15, "ChapelBase.chpl_field_gt"]], "chpl_field_lt() (in module chapelbase)": [[15, "ChapelBase.chpl_field_lt"]], "chpl_field_neq() (in module chapelbase)": [[15, "ChapelBase.chpl_field_neq"]], "chpl_getarrayinitmethod() (in module chapelbase)": [[15, "ChapelBase.chpl_getArrayInitMethod"]], "chpl_isddata() (in module chapelbase)": [[15, "ChapelBase.chpl_isDdata"]], "chpl_mem_descint_t (in module chapelbase)": [[15, "ChapelBase.chpl_mem_descInt_t"]], "chpl_moduledeinitfuns (in module chapelbase)": [[15, "ChapelBase.chpl_moduleDeinitFuns"]], "chpl_resettaskspawn() (in module chapelbase)": [[15, "ChapelBase.chpl_resetTaskSpawn"]], "chpl_rt_reset_task_spawn() (in module chapelbase)": [[15, "ChapelBase.chpl_rt_reset_task_spawn"]], "chpl_setarrayinitmethod() (in module chapelbase)": [[15, "ChapelBase.chpl_setArrayInitMethod"]], "chpl_shoulddogpuinit() (in module chapelbase)": [[15, "ChapelBase.chpl_shouldDoGpuInit"]], "chpl_statementlevelsymbol() (in module chapelbase)": [[15, "ChapelBase.chpl_statementLevelSymbol"]], "chpl_stringminallocsize (in module chapelbase)": [[15, "ChapelBase.chpl_stringMinAllocSize"]], "chpl_supportsboundedcoforall() (in module chapelbase)": [[15, "ChapelBase.chpl_supportsBoundedCoforall"]], "chpl_typesupportsprimitivecast() (in module chapelbase)": [[15, "ChapelBase.chpl_typeSupportsPrimitiveCast"]], "chpl_unstableinternalsymbolfortesting (in module chapelbase)": [[15, "ChapelBase.chpl_unstableInternalSymbolForTesting"]], "chpl_waitdynamicendcount() (in module chapelbase)": [[15, "ChapelBase.chpl_waitDynamicEndCount"]], "commdiagstrackendcounts (in module chapelbase)": [[15, "ChapelBase.commDiagsTrackEndCounts"]], "defaultatomictaskcount() (in module chapelbase)": [[15, "ChapelBase.defaultAtomicTaskCount"]], "defaultlowbound (in module chapelbase)": [[15, "ChapelBase.defaultLowBound"]], "deinitfun (chapelbase.chpl_moduledeinit attribute)": [[15, "ChapelBase.chpl_ModuleDeinit.deinitFun"]], "elttype (chapelbase._ddata attribute)": [[15, "ChapelBase._ddata.eltType"]], "enablepostfixbangchecks (in module chapelbase)": [[15, "ChapelBase.enablePostfixBangChecks"]], "endcountdiagsmanager (record in chapelbase)": [[15, "ChapelBase.endCountDiagsManager"]], "entercontext() (chapelbase.endcountdiagsmanager method)": [[15, "ChapelBase.endCountDiagsManager.enterContext"]], "errors (chapelbase._endcountbase attribute)": [[15, "ChapelBase._EndCountBase.errors"]], "exitcontext() (chapelbase.endcountdiagsmanager method)": [[15, "ChapelBase.endCountDiagsManager.exitContext"]], "fcfsusepointerimplementation (in module chapelbase)": [[15, "ChapelBase.fcfsUsePointerImplementation"]], "func() (in module chapelbase)": [[15, "ChapelBase.func"]], "i (chapelbase._endcount attribute)": [[15, "ChapelBase._EndCount.i"]], "itype (chapelbase._endcount attribute)": [[15, "ChapelBase._EndCount.iType"]], "im() (chapelbase.chpl_anycomplex method)": [[15, "ChapelBase.chpl_anycomplex.im"]], "init() (chapelbase._endcount method)": [[15, "ChapelBase._EndCount.init"]], "init_elts() (in module chapelbase)": [[15, "ChapelBase.init_elts"]], "init_elts_method() (in module chapelbase)": [[15, "ChapelBase.init_elts_method"]], "isborrowedorunmanagedclasstype() (in module chapelbase)": [[15, "ChapelBase.isBorrowedOrUnmanagedClassType"]], "isgenerictype() (in module chapelbase)": [[15, "ChapelBase.isGenericType"]], "isiterator() (in module chapelbase)": [[15, "ChapelBase.isIterator"]], "isnilableclasstype() (in module chapelbase)": [[15, "ChapelBase.isNilableClassType"]], "isnonnilableclasstype() (in module chapelbase)": [[15, "ChapelBase.isNonNilableClassType"]], "isnonnegative() (in module chapelbase)": [[15, "ChapelBase.isNonnegative"]], "istrue() (in module chapelbase)": [[15, "ChapelBase.isTrue"]], "iterkind (enum in chapelbase)": [[15, "ChapelBase.iterKind"]], "modulename (chapelbase.chpl_moduledeinit attribute)": [[15, "ChapelBase.chpl_ModuleDeinit.moduleName"]], "noparsafewarning (in module chapelbase)": [[15, "ChapelBase.noParSafeWarning"]], "object (class in chapelbase)": [[15, "ChapelBase.object"]], "param() (in module chapelbase)": [[15, "ChapelBase.param"]], "prevdiagsdisabledval (chapelbase.endcountdiagsmanager attribute)": [[15, "ChapelBase.endCountDiagsManager.prevDiagsDisabledVal"]], "prevmodule (chapelbase.chpl_moduledeinit attribute)": [[15, "ChapelBase.chpl_ModuleDeinit.prevModule"]], "proc() (in module chapelbase)": [[15, "ChapelBase.proc"]], "re() (chapelbase.chpl_anycomplex method)": [[15, "ChapelBase.chpl_anycomplex.re"]], "rootlocaleinitialized (in module chapelbase)": [[15, "ChapelBase.rootLocaleInitialized"]], "serialize() (chapelbase.chpl_moduledeinit method)": [[15, "ChapelBase.chpl_ModuleDeinit.serialize"]], "sub() (chapelbase._endcount method)": [[15, "ChapelBase._EndCount.sub"]], "taskcnt (chapelbase._endcount attribute)": [[15, "ChapelBase._EndCount.taskCnt"]], "taskinfo (chapelbase.endcountdiagsmanager attribute)": [[15, "ChapelBase.endCountDiagsManager.taskInfo"]], "tasktype (chapelbase._endcount attribute)": [[15, "ChapelBase._EndCount.taskType"]], "this() (chapelbase._ddata method)": [[15, "ChapelBase._ddata.this"]], "this() (chapelbase.c_fn_ptr method)": [[15, "ChapelBase.c_fn_ptr.this"]], "useatomictaskcnt (in module chapelbase)": [[15, "ChapelBase.useAtomicTaskCnt"]], "waitfor() (chapelbase._endcount method)": [[15, "ChapelBase._EndCount.waitFor"]], "warnmaximalrange (in module chapelbase)": [[15, "ChapelBase.warnMaximalRange"]], "|() (in module chapelbase)": [[15, "ChapelBase.|"]], "|=() (in module chapelbase)": [[15, "ChapelBase.|="]], "~() (in module chapelbase)": [[15, "ChapelBase.~"]], "yieldexecution() (in module currenttask)": [[16, "currentTask.yieldExecution"]], "chpl__verifytypecontext() (in module chapelcontext)": [[17, "ChapelContext.chpl__verifyTypeContext"]], "chpl__testpar() (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl__testPar"]], "chpl__testparflag (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl__testParFlag"]], "chpl__testparon (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl__testParOn"]], "chpl__testparstart() (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl__testParStart"]], "chpl__testparstop() (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl__testParStop"]], "chpl__testparwriteln() (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl__testParWriteln"]], "chpl_debug_stringify() (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl_debug_stringify"]], "chpl_debug_writeln() (in module chapeldebugprint)": [[18, "ChapelDebugPrint.chpl_debug_writeln"]], "absbasearr (class in chapeldistribution)": [[19, "ChapelDistribution.AbsBaseArr"]], "basearr (class in chapeldistribution)": [[19, "ChapelDistribution.BaseArr"]], "basearroverrectangulardom (class in chapeldistribution)": [[19, "ChapelDistribution.BaseArrOverRectangularDom"]], "baseassociativedom (class in chapeldistribution)": [[19, "ChapelDistribution.BaseAssociativeDom"]], "basedist (class in chapeldistribution)": [[19, "ChapelDistribution.BaseDist"]], "basedom (class in chapeldistribution)": [[19, "ChapelDistribution.BaseDom"]], "baserectangulararr (class in chapeldistribution)": [[19, "ChapelDistribution.BaseRectangularArr"]], "baserectangulardom (class in chapeldistribution)": [[19, "ChapelDistribution.BaseRectangularDom"]], "basesparsearr (class in chapeldistribution)": [[19, "ChapelDistribution.BaseSparseArr"]], "basesparsearrimpl (class in chapeldistribution)": [[19, "ChapelDistribution.BaseSparseArrImpl"]], "basesparsedom (class in chapeldistribution)": [[19, "ChapelDistribution.BaseSparseDom"]], "basesparsedomimpl (class in chapeldistribution)": [[19, "ChapelDistribution.BaseSparseDomImpl"]], "irv() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.IRV"]], "sparseindexbuffer (record in chapeldistribution)": [[19, "ChapelDistribution.SparseIndexBuffer"]], "__getactualinsertpts() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl.__getActualInsertPts"]], "_arrs() (chapeldistribution.basedom iterator)": [[19, "ChapelDistribution.BaseDom._arrs"]], "_arrslock (chapeldistribution.basedom attribute)": [[19, "ChapelDistribution.BaseDom._arrsLock"]], "_arrs_containing_dom (chapeldistribution.basedom attribute)": [[19, "ChapelDistribution.BaseDom._arrs_containing_dom"]], "_arrs_head (chapeldistribution.basedom attribute)": [[19, "ChapelDistribution.BaseDom._arrs_head"]], "_bulkgrow() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl._bulkGrow"]], "_countduplicates() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl._countDuplicates"]], "_deceltrefcounts (chapeldistribution.basearr attribute)": [[19, "ChapelDistribution.BaseArr._decEltRefCounts"]], "_defaultinitslot() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr._defaultInitSlot"]], "_deinitslot() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr._deinitSlot"]], "_delete_arr() (in module chapeldistribution)": [[19, "ChapelDistribution._delete_arr"]], "_delete_dist() (in module chapeldistribution)": [[19, "ChapelDistribution._delete_dist"]], "_delete_dom() (in module chapeldistribution)": [[19, "ChapelDistribution._delete_dom"]], "_distribution (record in chapeldistribution)": [[19, "ChapelDistribution._distribution"]], "_do_destroy() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution._do_destroy"]], "_domslock (chapeldistribution.basedist attribute)": [[19, "ChapelDistribution.BaseDist._domsLock"]], "_doms_containing_dist (chapeldistribution.basedist attribute)": [[19, "ChapelDistribution.BaseDist._doms_containing_dist"]], "_finishrehash() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr._finishRehash"]], "_free_when_no_arrs (chapeldistribution.basedom attribute)": [[19, "ChapelDistribution.BaseDom._free_when_no_arrs"]], "_free_when_no_doms (chapeldistribution.basedist attribute)": [[19, "ChapelDistribution.BaseDist._free_when_no_doms"]], "_grow() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl._grow"]], "_instance (chapeldistribution._distribution attribute)": [[19, "ChapelDistribution._distribution._instance"]], "_moveelementduringrehash() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr._moveElementDuringRehash"]], "_pid (chapeldistribution._distribution attribute)": [[19, "ChapelDistribution._distribution._pid"]], "_purge() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr._purge"]], "_resize() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr._resize"]], "_resizepolicy (chapeldistribution.basearr attribute)": [[19, "ChapelDistribution.BaseArr._resizePolicy"]], "_shrink() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl._shrink"]], "_startrehash() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr._startRehash"]], "_unowned (chapeldistribution._distribution attribute)": [[19, "ChapelDistribution._distribution._unowned"]], "_value() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution._value"]], "add() (chapeldistribution.sparseindexbuffer method)": [[19, "ChapelDistribution.SparseIndexBuffer.add"]], "add_arr() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.add_arr"]], "add_containing_arr() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.add_containing_arr"]], "add_dom() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.add_dom"]], "boundscheck() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.boundsCheck"]], "buf (chapeldistribution.sparseindexbuffer attribute)": [[19, "ChapelDistribution.SparseIndexBuffer.buf"]], "bufdom (chapeldistribution.sparseindexbuffer attribute)": [[19, "ChapelDistribution.SparseIndexBuffer.bufDom"]], "bulkadd_help() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl.bulkAdd_help"]], "bulkadd_prepareinds() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl.bulkAdd_prepareInds"]], "candodirectassignment() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.canDoDirectAssignment"]], "chpl__rvfme() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.chpl__rvfMe"]], "chpl_assigndomainwithgetsetindices() (in module chapeldistribution)": [[19, "ChapelDistribution.chpl_assignDomainWithGetSetIndices"]], "chpl_assigndomainwithindsitersafeforremoving() (in module chapeldistribution)": [[19, "ChapelDistribution.chpl_assignDomainWithIndsIterSafeForRemoving"]], "chpl_iselementtypedefaultinitializable() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.chpl_isElementTypeDefaultInitializable"]], "chpl_iselementtypedefaultinitializable() (chapeldistribution.baserectangulararr method)": [[19, "ChapelDistribution.BaseRectangularArr.chpl_isElementTypeDefaultInitializable"]], "chpl_iselementtypenonnilableclass() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.chpl_isElementTypeNonNilableClass"]], "chpl_iselementtypenonnilableclass() (chapeldistribution.baserectangulararr method)": [[19, "ChapelDistribution.BaseRectangularArr.chpl_isElementTypeNonNilableClass"]], "chpl_setresizepolicy() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.chpl_setResizePolicy"]], "chpl_unsafeassignhaltuninitializedelement() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.chpl_unsafeAssignHaltUninitializedElement"]], "chpl_unsafeassignhaltuninitializedelement() (chapeldistribution.baserectangulararr method)": [[19, "ChapelDistribution.BaseRectangularArr.chpl_unsafeAssignHaltUninitializedElement"]], "chpl_unsafeassignisclasselementnil() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.chpl_unsafeAssignIsClassElementNil"]], "clone() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.clone"]], "commit() (chapeldistribution.sparseindexbuffer method)": [[19, "ChapelDistribution.SparseIndexBuffer.commit"]], "cur (chapeldistribution.sparseindexbuffer attribute)": [[19, "ChapelDistribution.SparseIndexBuffer.cur"]], "data (chapeldistribution.basesparsearrimpl attribute)": [[19, "ChapelDistribution.BaseSparseArrImpl.data"]], "deceltcountsifneeded() (chapeldistribution.absbasearr method)": [[19, "ChapelDistribution.AbsBaseArr.decEltCountsIfNeeded"]], "deceltcountsifneeded() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.decEltCountsIfNeeded"]], "deceltcountsifneeded() (chapeldistribution.baserectangulararr method)": [[19, "ChapelDistribution.BaseRectangularArr.decEltCountsIfNeeded"]], "definedconst (chapeldistribution.basedom attribute)": [[19, "ChapelDistribution.BaseDom.definedConst"]], "deinit() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.deinit"]], "deinit() (chapeldistribution.basearroverrectangulardom method)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.deinit"]], "deinit() (chapeldistribution.baseassociativedom method)": [[19, "ChapelDistribution.BaseAssociativeDom.deinit"]], "deinit() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.deinit"]], "deinit() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.deinit"]], "deinit() (chapeldistribution.baserectangulararr method)": [[19, "ChapelDistribution.BaseRectangularArr.deinit"]], "deinit() (chapeldistribution.baserectangulardom method)": [[19, "ChapelDistribution.BaseRectangularDom.deinit"]], "deinit() (chapeldistribution.basesparsearr method)": [[19, "ChapelDistribution.BaseSparseArr.deinit"]], "deinit() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.deinit"]], "deinit() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.deinit"]], "deinit() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl.deinit"]], "deinit() (chapeldistribution.sparseindexbuffer method)": [[19, "ChapelDistribution.SparseIndexBuffer.deinit"]], "deinit() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.deinit"]], "deserialize() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.deserialize"]], "deserializefrom() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.deserializeFrom"]], "displayrepresentation() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.displayRepresentation"]], "dnserror() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dnsError"]], "doicanbulktransferrankchange() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.doiCanBulkTransferRankChange"]], "dom (chapeldistribution.basesparsearr attribute)": [[19, "ChapelDistribution.BaseSparseArr.dom"]], "dsiadd() (chapeldistribution.baseassociativedom method)": [[19, "ChapelDistribution.BaseAssociativeDom.dsiAdd"]], "dsiadd() (chapeldistribution.baserectangulardom method)": [[19, "ChapelDistribution.BaseRectangularDom.dsiAdd"]], "dsialignedhigh() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiAlignedHigh"]], "dsialignedhigh() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiAlignedHigh"]], "dsialignedlow() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiAlignedLow"]], "dsialignedlow() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiAlignedLow"]], "dsialignment() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiAlignment"]], "dsialignment() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiAlignment"]], "dsiautolocalaccessoffsetcheck() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiAutoLocalAccessOffsetCheck"]], "dsibulkadd() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiBulkAdd"]], "dsibulkadd() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl.dsiBulkAdd"]], "dsibulkaddnopreserveinds() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiBulkAddNoPreserveInds"]], "dsibulkaddnopreserveinds() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl.dsiBulkAddNoPreserveInds"]], "dsiclear() (chapeldistribution.baseassociativedom method)": [[19, "ChapelDistribution.BaseAssociativeDom.dsiClear"]], "dsiclear() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiClear"]], "dsiclear() (chapeldistribution.basesparsedomimpl method)": [[19, "ChapelDistribution.BaseSparseDomImpl.dsiClear"]], "dsicreateindexbuffer() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiCreateIndexBuffer"]], "dsicreateindexbuffer() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiCreateIndexBuffer"]], "dsidestroyarr() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiDestroyArr"]], "dsidestroyarr() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.dsiDestroyArr"]], "dsidestroydist() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiDestroyDist"]], "dsidestroydom() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiDestroyDom"]], "dsidim() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiDim"]], "dsidims() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiDims"]], "dsidisplayrepresentation() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiDisplayRepresentation"]], "dsidisplayrepresentation() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiDisplayRepresentation"]], "dsidisplayrepresentation() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiDisplayRepresentation"]], "dsielementdeinitializationcomplete() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiElementDeinitializationComplete"]], "dsielementdeinitializationcomplete() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.dsiElementDeinitializationComplete"]], "dsielementinitializationcomplete() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiElementInitializationComplete"]], "dsielementinitializationcomplete() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.dsiElementInitializationComplete"]], "dsifirst() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiFirst"]], "dsifirst() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiFirst"]], "dsigetbasedom() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiGetBaseDom"]], "dsigetbasedom() (chapeldistribution.basesparsearr method)": [[19, "ChapelDistribution.BaseSparseArr.dsiGetBaseDom"]], "dsihigh() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiHigh"]], "dsihigh() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiHigh"]], "dsiindexorder() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiIndexOrder"]], "dsiislayout() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiIsLayout"]], "dsiiteratoryieldslocalelements() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiIteratorYieldsLocalElements"]], "dsiiteratoryieldslocalelements() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiIteratorYieldsLocalElements"]], "dsilast() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiLast"]], "dsilast() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiLast"]], "dsilinksdistribution() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiLinksDistribution"]], "dsilow() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiLow"]], "dsilow() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiLow"]], "dsimydist() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiMyDist"]], "dsinewassociativedom() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiNewAssociativeDom"]], "dsinewrectangulardom() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiNewRectangularDom"]], "dsinewsparsedom() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiNewSparseDom"]], "dsinumindices() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiNumIndices"]], "dsipostreallocate() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiPostReallocate"]], "dsipostreallocate() (chapeldistribution.basearroverrectangulardom method)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.dsiPostReallocate"]], "dsireallocate() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiReallocate"]], "dsireallocate() (chapeldistribution.basearroverrectangulardom method)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.dsiReallocate"]], "dsiremove() (chapeldistribution.baserectangulardom method)": [[19, "ChapelDistribution.BaseRectangularDom.dsiRemove"]], "dsirequiresprivatization() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiRequiresPrivatization"]], "dsirequiresprivatization() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiRequiresPrivatization"]], "dsirequiresprivatization() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiRequiresPrivatization"]], "dsisize() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiSize"]], "dsistaticfastfollowcheck() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiStaticFastFollowCheck"]], "dsistride() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiStride"]], "dsistride() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.dsiStride"]], "dsisupportsalignedfollower() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiSupportsAlignedFollower"]], "dsisupportsautolocalaccess() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiSupportsAutoLocalAccess"]], "dsisupportsoffsetautolocalaccess() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiSupportsOffsetAutoLocalAccess"]], "dsisupportsprivatization() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.dsiSupportsPrivatization"]], "dsisupportsprivatization() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiSupportsPrivatization"]], "dsisupportsprivatization() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.dsiSupportsPrivatization"]], "dsitrackdomains() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.dsiTrackDomains"]], "elttype (chapeldistribution.absbasearr attribute)": [[19, "ChapelDistribution.AbsBaseArr.eltType"]], "elttype (chapeldistribution.baserectangulararr attribute)": [[19, "ChapelDistribution.BaseRectangularArr.eltType"]], "getbasearrtype() (chapeldistribution.baserectangulardom method)": [[19, "ChapelDistribution.BaseRectangularDom.getBaseArrType"]], "getnnz() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.getNNZ"]], "hasposnegunitstride() (chapeldistribution.basearroverrectangulardom method)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.hasPosNegUnitStride"]], "hasposnegunitstride() (chapeldistribution.baserectangulardom method)": [[19, "ChapelDistribution.BaseRectangularDom.hasPosNegUnitStride"]], "hasunitstride() (chapeldistribution.basearroverrectangulardom method)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.hasUnitStride"]], "hasunitstride() (chapeldistribution.baserectangulardom method)": [[19, "ChapelDistribution.BaseRectangularDom.hasUnitStride"]], "idxtolocale() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.idxToLocale"]], "idxtype (chapeldistribution.basearroverrectangulardom attribute)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.idxType"]], "idxtype (chapeldistribution.baserectangulardom attribute)": [[19, "ChapelDistribution.BaseRectangularDom.idxType"]], "idxtype (chapeldistribution.basesparsearr attribute)": [[19, "ChapelDistribution.BaseSparseArr.idxType"]], "idxtype (chapeldistribution.basesparsedom attribute)": [[19, "ChapelDistribution.BaseSparseDom.idxType"]], "idxtype (chapeldistribution.sparseindexbuffer attribute)": [[19, "ChapelDistribution.SparseIndexBuffer.idxType"]], "init() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.init"]], "init() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.init"]], "init() (chapeldistribution.sparseindexbuffer method)": [[19, "ChapelDistribution.SparseIndexBuffer.init"]], "init() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.init"]], "init=() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.init="]], "irv (chapeldistribution.basesparsearrimpl attribute)": [[19, "ChapelDistribution.BaseSparseArrImpl.irv"]], "isassociative() (chapeldistribution.baseassociativedom method)": [[19, "ChapelDistribution.BaseAssociativeDom.isAssociative"]], "isassociative() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.isAssociative"]], "isdefaultrectangular() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.isDefaultRectangular"]], "isdefaultrectangular() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.isDefaultRectangular"]], "isrankchangearrayview() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.isRankChangeArrayView"]], "isrankchangedomainview() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.isRankChangeDomainView"]], "isrectangular() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.isRectangular"]], "isrectangular() (chapeldistribution.baserectangulardom method)": [[19, "ChapelDistribution.BaseRectangularDom.isRectangular"]], "isreindexarrayview() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.isReindexArrayView"]], "isreindexdomainview() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.isReindexDomainView"]], "isslicearrayview() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.isSliceArrayView"]], "isslicedomainview() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.isSliceDomainView"]], "issparse() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.isSparse"]], "issparse() (chapeldistribution.basesparsedom method)": [[19, "ChapelDistribution.BaseSparseDom.isSparse"]], "linksdistribution() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.linksDistribution"]], "newassociativedom() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.newAssociativeDom"]], "newrectangulardom() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.newRectangularDom"]], "newsparsedom() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.newSparseDom"]], "next (chapeldistribution.basearr attribute)": [[19, "ChapelDistribution.BaseArr.next"]], "nnzdom (chapeldistribution.basesparsedomimpl attribute)": [[19, "ChapelDistribution.BaseSparseDomImpl.nnzDom"]], "obj (chapeldistribution.sparseindexbuffer attribute)": [[19, "ChapelDistribution.SparseIndexBuffer.obj"]], "parentdom (chapeldistribution.basesparsedom attribute)": [[19, "ChapelDistribution.BaseSparseDom.parentDom"]], "pid (chapeldistribution.basearr attribute)": [[19, "ChapelDistribution.BaseArr.pid"]], "pid (chapeldistribution.basedist attribute)": [[19, "ChapelDistribution.BaseDist.pid"]], "pid (chapeldistribution.basedom attribute)": [[19, "ChapelDistribution.BaseDom.pid"]], "prev (chapeldistribution.basearr attribute)": [[19, "ChapelDistribution.BaseArr.prev"]], "rank (chapeldistribution.basearroverrectangulardom attribute)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.rank"]], "rank (chapeldistribution.baserectangulardom attribute)": [[19, "ChapelDistribution.BaseRectangularDom.rank"]], "rank (chapeldistribution.basesparsearr attribute)": [[19, "ChapelDistribution.BaseSparseArr.rank"]], "rank (chapeldistribution.basesparsedom attribute)": [[19, "ChapelDistribution.BaseSparseDom.rank"]], "rank (chapeldistribution.sparseindexbuffer attribute)": [[19, "ChapelDistribution.SparseIndexBuffer.rank"]], "rank() (chapeldistribution.baseassociativedom method)": [[19, "ChapelDistribution.BaseAssociativeDom.rank"]], "remove() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.remove"]], "remove() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.remove"]], "remove() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.remove"]], "remove_arr() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.remove_arr"]], "remove_containing_arr() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.remove_containing_arr"]], "remove_dom() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.remove_dom"]], "serialize() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.serialize"]], "singleton() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.singleton"]], "sparsebulkshiftarray() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.sparseBulkShiftArray"]], "sparsebulkshiftarray() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.sparseBulkShiftArray"]], "sparseshiftarray() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.sparseShiftArray"]], "sparseshiftarray() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.sparseShiftArray"]], "sparseshiftarrayback() (chapeldistribution.basearr method)": [[19, "ChapelDistribution.BaseArr.sparseShiftArrayBack"]], "sparseshiftarrayback() (chapeldistribution.basesparsearrimpl method)": [[19, "ChapelDistribution.BaseSparseArrImpl.sparseShiftArrayBack"]], "strides (chapeldistribution.basearroverrectangulardom attribute)": [[19, "ChapelDistribution.BaseArrOverRectangularDom.strides"]], "strides (chapeldistribution.baserectangulardom attribute)": [[19, "ChapelDistribution.BaseRectangularDom.strides"]], "targetlocales() (chapeldistribution._distribution method)": [[19, "ChapelDistribution._distribution.targetLocales"]], "trackarrays() (chapeldistribution.basedom method)": [[19, "ChapelDistribution.BaseDom.trackArrays"]], "trackdomains() (chapeldistribution.basedist method)": [[19, "ChapelDistribution.BaseDist.trackDomains"]], "!=() (in module chapeldomain)": [[20, "ChapelDomain.!="]], "&() (in module chapeldomain)": [[20, "ChapelDomain.&"]], "&=() (in module chapeldomain)": [[20, "ChapelDomain.&="]], "+() (in module chapeldomain)": [[20, "ChapelDomain.+"]], "+=() (in module chapeldomain)": [[20, "ChapelDomain.+="]], "-() (in module chapeldomain)": [[20, "ChapelDomain.-"]], "-=() (in module chapeldomain)": [[20, "ChapelDomain.-="]], ":() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.:"]], "=() (in module chapeldomain)": [[20, "ChapelDomain.="]], "==() (in module chapeldomain)": [[20, "ChapelDomain.=="]], "^() (in module chapeldomain)": [[20, "ChapelDomain.^"]], "^=() (in module chapeldomain)": [[20, "ChapelDomain.^="]], "_arraysoverlhsdom() (chapeldomain._domain.unsafeassignmanager iterator)": [[20, "ChapelDomain._domain.unsafeAssignManager._arraysOverLhsDom"]], "_checkifallelementsareinitialized() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._checkIfAllElementsAreInitialized"]], "_checknocheckswhennondefaultinitializableelttype() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._checkNoChecksWhenNonDefaultInitializableEltType"]], "_checkthatarrayshapeissupported() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._checkThatArrayShapeIsSupported"]], "_checkthatindexmatchesarrayshape() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._checkThatIndexMatchesArrayShape"]], "_checks (chapeldomain._domain.unsafeassignmanager attribute)": [[20, "ChapelDomain._domain.unsafeAssignManager._checks"]], "_do_destroy() (chapeldomain._domain method)": [[20, "ChapelDomain._domain._do_destroy"]], "_domain (record in chapeldomain)": [[20, "ChapelDomain._domain"]], "_domain.unsafeassignmanager (record in chapeldomain)": [[20, "ChapelDomain._domain.unsafeAssignManager"]], "_ensurenolongermanagingthis() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._ensureNoLongerManagingThis"]], "_getdomain() (in module chapeldomain)": [[20, "ChapelDomain._getDomain"]], "_instance (chapeldomain._domain attribute)": [[20, "ChapelDomain._domain._instance"]], "_isactivemanager (chapeldomain._domain.unsafeassignmanager attribute)": [[20, "ChapelDomain._domain.unsafeAssignManager._isActiveManager"]], "_isarrayownedbylhsdomain() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._isArrayOwnedByLhsDomain"]], "_isbasearrclasselementnil() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._isBaseArrClassElementNil"]], "_lhsinstance (chapeldomain._domain.unsafeassignmanager attribute)": [[20, "ChapelDomain._domain.unsafeAssignManager._lhsInstance"]], "_lhspid (chapeldomain._domain.unsafeassignmanager attribute)": [[20, "ChapelDomain._domain.unsafeAssignManager._lhsPid"]], "_moveinitializeelement() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager._moveInitializeElement"]], "_oldlhsdomaincopy (chapeldomain._domain.unsafeassignmanager attribute)": [[20, "ChapelDomain._domain.unsafeAssignManager._oldLhsDomainCopy"]], "_pid (chapeldomain._domain attribute)": [[20, "ChapelDomain._domain._pid"]], "_rhsinstance (chapeldomain._domain.unsafeassignmanager attribute)": [[20, "ChapelDomain._domain.unsafeAssignManager._rhsInstance"]], "_rhspid (chapeldomain._domain.unsafeassignmanager attribute)": [[20, "ChapelDomain._domain.unsafeAssignManager._rhsPid"]], "_unowned (chapeldomain._domain attribute)": [[20, "ChapelDomain._domain._unowned"]], "_value() (chapeldomain._domain method)": [[20, "ChapelDomain._domain._value"]], "add() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.add"]], "align() (in module chapeldomain)": [[20, "ChapelDomain.align"]], "alignment() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.alignment"]], "autolocalaccessoffsetcheck() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.autoLocalAccessOffsetCheck"]], "boundingbox() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.boundingBox"]], "buildarray() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.buildArray"]], "buildarraywith() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.buildArrayWith"]], "bulkadd() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.bulkAdd"]], "bulkaddnopreserveinds() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.bulkAddNoPreserveInds"]], "by() (in module chapeldomain)": [[20, "ChapelDomain.by"]], "checkorderbounds() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.checkOrderBounds"]], "checks() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.checks"]], "chpl__builddomainexpr() (in module chapeldomain)": [[20, "ChapelDomain.chpl__buildDomainExpr"]], "chpl__builddomainruntimetype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__buildDomainRuntimeType"]], "chpl__buildsparsedomainruntimetype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__buildSparseDomainRuntimeType"]], "chpl__buildsparsedomainruntimetypeforparentdomain() (in module chapeldomain)": [[20, "ChapelDomain.chpl__buildSparseDomainRuntimeTypeForParentDomain"]], "chpl__buildsubdomaintype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__buildSubDomainType"]], "chpl__checkdomainsmatch() (in module chapeldomain)": [[20, "ChapelDomain.chpl__checkDomainsMatch"]], "chpl__checktupirregdomassign() (in module chapeldomain)": [[20, "ChapelDomain.chpl__checkTupIrregDomAssign"]], "chpl__coercecopy() (in module chapeldomain)": [[20, "ChapelDomain.chpl__coerceCopy"]], "chpl__coercemove() (in module chapeldomain)": [[20, "ChapelDomain.chpl__coerceMove"]], "chpl__convertruntimetypetovalue() (in module chapeldomain)": [[20, "ChapelDomain.chpl__convertRuntimeTypeToValue"]], "chpl__convertvaluetoruntimetype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__convertValueToRuntimeType"]], "chpl__deserialize() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl__deserialize"]], "chpl__domainfromarrayruntimetype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__domainFromArrayRuntimeType"]], "chpl__ensuredomainexpr() (in module chapeldomain)": [[20, "ChapelDomain.chpl__ensureDomainExpr"]], "chpl__islegalrecttupdomassign() (in module chapeldomain)": [[20, "ChapelDomain.chpl__isLegalRectTupDomAssign"]], "chpl__isrectangulardomtype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__isRectangularDomType"]], "chpl__issparsedomtype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__isSparseDomType"]], "chpl__istupleofranges() (in module chapeldomain)": [[20, "ChapelDomain.chpl__isTupleOfRanges"]], "chpl__parentdomainfromdomainruntimetype() (in module chapeldomain)": [[20, "ChapelDomain.chpl__parentDomainFromDomainRuntimeType"]], "chpl__promotiontype() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl__promotionType"]], "chpl__serialize() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl__serialize"]], "chpl__untranslate() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl__unTranslate"]], "chpl_checkelttype() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_checkEltType"]], "chpl_checknegativestride() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_checkNegativeStride"]], "chpl_countdomhelp() (in module chapeldomain)": [[20, "ChapelDomain.chpl_countDomHelp"]], "chpl_domaincasthelper() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_domainCastHelper"]], "chpl_domaincastissafe() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_domainCastIsSafe"]], "chpl_domaindistislayout() (in module chapeldomain)": [[20, "ChapelDomain.chpl_domainDistIsLayout"]], "chpl_domaintrycasthelper() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_domainTryCastHelper"]], "chpl_domaintrycastissafe() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_domainTryCastIsSafe"]], "chpl_integralidxtype() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_integralIdxType"]], "chpl_isassociativedomclass() (in module chapeldomain)": [[20, "ChapelDomain.chpl_isAssociativeDomClass"]], "chpl_samedomainkind() (in module chapeldomain)": [[20, "ChapelDomain.chpl_sameDomainKind"]], "chpl_shapeas() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.chpl_shapeAs"]], "clear() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.clear"]], "contains() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.contains"]], "createindexbuffer() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.createIndexBuffer"]], "defaulthashtableresizethreshold (in module chapeldomain)": [[20, "ChapelDomain.defaultHashTableResizeThreshold"]], "defaultsparsedist() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.defaultSparseDist"]], "deinit() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.deinit"]], "deinit() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.deinit"]], "deserialize() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.deserialize"]], "deserializefrom() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.deserializeFrom"]], "dim() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.dim"]], "dimiter() (chapeldomain._domain iterator)": [[20, "ChapelDomain._domain.dimIter"]], "dims() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.dims"]], "displayrepresentation() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.displayRepresentation"]], "dist() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.dist"]], "distribution() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.distribution"]], "entercontext() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.enterContext"]], "exitcontext() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.exitContext"]], "expand() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.expand"]], "exterior() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.exterior"]], "first() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.first"]], "fullidxtype() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.fullIdxType"]], "getindices() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.getIndices"]], "hasposnegunitstride() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.hasPosNegUnitStride"]], "hassinglelocalsubdomain() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.hasSingleLocalSubdomain"]], "hasunitstride() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.hasUnitStride"]], "high() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.high"]], "highbound() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.highBound"]], "idxtype() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.idxType"]], "indexorder() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.indexOrder"]], "indices() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.indices"]], "init() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.init"]], "init=() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.init="]], "initialize() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.initialize"]], "interior() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.interior"]], "isassociative() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.isAssociative"]], "isclassreferencenil() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.isClassReferenceNil"]], "iselementinitialized() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.isElementInitialized"]], "isempty() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.isEmpty"]], "isirregular() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.isIrregular"]], "isrectangular() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.isRectangular"]], "issparse() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.isSparse"]], "iteratoryieldslocalelements() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.iteratorYieldsLocalElements"]], "last() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.last"]], "localslice() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.localSlice"]], "localsubdomain() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.localSubdomain"]], "localsubdomains() (chapeldomain._domain iterator)": [[20, "ChapelDomain._domain.localSubdomains"]], "low() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.low"]], "lowbound() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.lowBound"]], "makerectangulardomain() (in module chapeldomain)": [[20, "ChapelDomain.makeRectangularDomain"]], "newindices() (chapeldomain._domain.unsafeassignmanager iterator)": [[20, "ChapelDomain._domain.unsafeAssignManager.newIndices"]], "nonegativestridewarnings (in module chapeldomain)": [[20, "ChapelDomain.noNegativeStrideWarnings"]], "ordertoindex() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.orderToIndex"]], "position() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.position"]], "postinit() (chapeldomain._domain.unsafeassignmanager method)": [[20, "ChapelDomain._domain.unsafeAssignManager.postinit"]], "rank() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.rank"]], "remove() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.remove"]], "requestcapacity() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.requestCapacity"]], "serialize() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.serialize"]], "setindices() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.setIndices"]], "shape() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.shape"]], "size() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.size"]], "sizeas() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.sizeAs"]], "sorted() (chapeldomain._domain iterator)": [[20, "ChapelDomain._domain.sorted"]], "stride() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.stride"]], "strides() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.strides"]], "supportsautolocalaccess() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.supportsAutoLocalAccess"]], "supportsoffsetautolocalaccess() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.supportsOffsetAutoLocalAccess"]], "targetlocales() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.targetLocales"]], "these() (chapeldomain._domain iterator)": [[20, "ChapelDomain._domain.these"]], "this() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.this"]], "translate() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.translate"]], "trycast() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.tryCast"]], "trycreatearray() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.tryCreateArray"]], "tupleofrangesslice() (in module chapeldomain)": [[20, "ChapelDomain.tupleOfRangesSlice"]], "unsafeassign() (chapeldomain._domain method)": [[20, "ChapelDomain._domain.unsafeAssign"]], "|() (in module chapeldomain)": [[20, "ChapelDomain.|"]], "|=() (in module chapeldomain)": [[20, "ChapelDomain.|="]], "_gen_key() (in module chapelhashing)": [[22, "ChapelHashing._gen_key"]], "chpl__defaulthashcombine() (in module chapelhashing)": [[22, "ChapelHashing.chpl__defaultHashCombine"]], "chpl__defaulthashwrapper() (in module chapelhashing)": [[22, "ChapelHashing.chpl__defaultHashWrapper"]], "chpl__defaulthashwrapperinner() (in module chapelhashing)": [[22, "ChapelHashing.chpl__defaultHashWrapperInner"]], "hash() (chapelhashing._array method)": [[22, "ChapelHashing._array.hash"]], "hash() (chapelhashing.bool method)": [[22, "ChapelHashing.bool.hash"]], "hash() (chapelhashing.chpl_taskid_t method)": [[22, "ChapelHashing.chpl_taskID_t.hash"]], "hash() (chapelhashing.complex method)": [[22, "ChapelHashing.complex.hash"]], "hash() (chapelhashing.enum method)": [[22, "ChapelHashing.enum.hash"]], "hash() (chapelhashing.imag method)": [[22, "ChapelHashing.imag.hash"]], "hash() (chapelhashing.int method)": [[22, "ChapelHashing.int.hash"]], "hash() (chapelhashing.locale method)": [[22, "ChapelHashing.locale.hash"]], "hash() (chapelhashing.range method)": [[22, "ChapelHashing.range.hash"]], "hash() (chapelhashing.real method)": [[22, "ChapelHashing.real.hash"]], "hash() (chapelhashing.uint method)": [[22, "ChapelHashing.uint.hash"]], "proc() (in module chapelhashing)": [[22, "ChapelHashing.proc"]], "_allslots() (in module chapelhashtable)": [[23, "ChapelHashtable._allSlots"]], "_findpowerof2() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable._findPowerOf2"]], "_findslot() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable._findSlot"]], "_lookforslots() (chapelhashtable.chpl__hashtable iterator)": [[23, "ChapelHashtable.chpl__hashtable._lookForSlots"]], "allslots() (chapelhashtable.chpl__hashtable iterator)": [[23, "ChapelHashtable.chpl__hashtable.allSlots"]], "allocatedata() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.allocateData"]], "allocatetable() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.allocateTable"]], "chpl_tableentry (record in chapelhashtable)": [[23, "ChapelHashtable.chpl_TableEntry"]], "chpl__hash_status (enum in chapelhashtable)": [[23, "ChapelHashtable.chpl__hash_status"]], "chpl__hashtable (record in chapelhashtable)": [[23, "ChapelHashtable.chpl__hashtable"]], "chpl__rehashhelpers (class in chapelhashtable)": [[23, "ChapelHashtable.chpl__rehashHelpers"]], "clearslot() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.clearSlot"]], "deinit() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.deinit"]], "fillslot() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.fillSlot"]], "findavailableslot() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.findAvailableSlot"]], "findfullslot() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.findFullSlot"]], "finishrehash() (chapelhashtable.chpl__rehashhelpers method)": [[23, "ChapelHashtable.chpl__rehashHelpers.finishRehash"]], "init() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.init"]], "isfull() (chapelhashtable.chpl_tableentry method)": [[23, "ChapelHashtable.chpl_TableEntry.isFull"]], "isslotfull() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.isSlotFull"]], "key (chapelhashtable.chpl_tableentry attribute)": [[23, "ChapelHashtable.chpl_TableEntry.key"]], "keytype (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.keyType"]], "keysmatch() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.keysMatch"]], "maybeshrinkafterremove() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.maybeShrinkAfterRemove"]], "moveelementduringrehash() (chapelhashtable.chpl__rehashhelpers method)": [[23, "ChapelHashtable.chpl__rehashHelpers.moveElementDuringRehash"]], "postponeresize (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.postponeResize"]], "rehash() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.rehash"]], "rehashhelpers (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.rehashHelpers"]], "requestcapacity() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.requestCapacity"]], "resize() (chapelhashtable.chpl__hashtable method)": [[23, "ChapelHashtable.chpl__hashtable.resize"]], "resizethreshold (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.resizeThreshold"]], "startrehash() (chapelhashtable.chpl__rehashhelpers method)": [[23, "ChapelHashtable.chpl__rehashHelpers.startRehash"]], "startingsize (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.startingSize"]], "status (chapelhashtable.chpl_tableentry attribute)": [[23, "ChapelHashtable.chpl_TableEntry.status"]], "table (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.table"]], "tablenumdeletedslots (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.tableNumDeletedSlots"]], "tablenumfullslots (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.tableNumFullSlots"]], "tablesize (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.tableSize"]], "val (chapelhashtable.chpl_tableentry attribute)": [[23, "ChapelHashtable.chpl_TableEntry.val"]], "valtype (chapelhashtable.chpl__hashtable attribute)": [[23, "ChapelHashtable.chpl__hashtable.valType"]], "_can_stringify_direct() (in module chapeliostringifyhelper)": [[25, "ChapelIOStringifyHelper._can_stringify_direct"]], "stringify_simple() (in module chapeliostringifyhelper)": [[25, "ChapelIOStringifyHelper.stringify_simple"]], "=() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.="]], "_freeiterator() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._freeIterator"]], "_getiterator() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._getIterator"]], "_getiteratorzip() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._getIteratorZip"]], "_tofastfollower() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._toFastFollower"]], "_tofollower() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._toFollower"]], "_tofollowerzip() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._toFollowerZip"]], "_tofollowerzipinternal() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._toFollowerZipInternal"]], "_toleader() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._toLeader"]], "_toleaderzip() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._toLeaderZip"]], "_tostandalone() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport._toStandalone"]], "chpl__canhavefastfollowers() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl__canHaveFastFollowers"]], "chpl__canleadfastfollowers() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl__canLeadFastFollowers"]], "chpl__dynamicfastfollowcheck() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl__dynamicFastFollowCheck"]], "chpl__staticfastfollowcheck() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl__staticFastFollowCheck"]], "chpl_buildstandinrtt() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_buildStandInRTT"]], "chpl_computeiteratorshape() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_computeIteratorShape"]], "chpl_elemtypeforreducingiterables() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_elemTypeForReducingIterables"]], "chpl_iteratorfromforexpr() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_iteratorFromForExpr"]], "chpl_iteratorfromforeachexpr() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_iteratorFromForeachExpr"]], "chpl_iteratorhasdomainshape() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_iteratorHasDomainShape"]], "chpl_iteratorhasrangeshape() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_iteratorHasRangeShape"]], "chpl_iteratorhasshape() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_iteratorHasShape"]], "chpl_iteratorshapestatictypeornothing() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_iteratorShapeStaticTypeOrNothing"]], "chpl_trivialleader() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.chpl_trivialLeader"]], "iteratorindex() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.iteratorIndex"]], "iteratorindextype() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.iteratorIndexType"]], "iteratorindextypezip() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.iteratorIndexTypeZip"]], "iteratortoarrayelementtype() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.iteratorToArrayElementType"]], "singlerefiter() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.singleRefIter"]], "singlevaliter() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.singleValIter"]], "thunktoreturntype() (in module chapeliteratorsupport)": [[26, "ChapelIteratorSupport.thunkToReturnType"]], "=() (chapellocale.locale method)": [[27, "ChapelLocale.locale.="]], "abstractlocalemodel (class in chapellocale)": [[27, "ChapelLocale.AbstractLocaleModel"]], "abstractrootlocale (class in chapellocale)": [[27, "ChapelLocale.AbstractRootLocale"]], "baselocale (class in chapellocale)": [[27, "ChapelLocale.BaseLocale"]], "dummylocale (class in chapellocale)": [[27, "ChapelLocale.DummyLocale"]], "_getchild() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale._getChild"]], "_getchild() (chapellocale.dummylocale method)": [[27, "ChapelLocale.DummyLocale._getChild"]], "_getchildcount() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale._getChildCount"]], "_getchildcount() (chapellocale.dummylocale method)": [[27, "ChapelLocale.DummyLocale._getChildCount"]], "_getchildcount() (chapellocale._locale method)": [[27, "ChapelLocale._locale._getChildCount"]], "_instance (chapellocale._locale attribute)": [[27, "ChapelLocale._locale._instance"]], "_locale (record in chapellocale)": [[27, "ChapelLocale._locale"]], "_value() (chapellocale._locale method)": [[27, "ChapelLocale._locale._value"]], "addchild() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.addChild"]], "addchild() (chapellocale.dummylocale method)": [[27, "ChapelLocale.DummyLocale.addChild"]], "c_sublocid_all (in module chapellocale)": [[27, "ChapelLocale.c_sublocid_all"]], "c_sublocid_any (in module chapellocale)": [[27, "ChapelLocale.c_sublocid_any"]], "c_sublocid_none (in module chapellocale)": [[27, "ChapelLocale.c_sublocid_none"]], "chpl_defaultlocaleinitprivate() (in module chapellocale)": [[27, "ChapelLocale.chpl_defaultLocaleInitPrivate"]], "chpl_getlocaleid() (in module chapellocale)": [[27, "ChapelLocale.chpl_getLocaleID"]], "chpl_getsingletonlocalearray() (in module chapellocale)": [[27, "ChapelLocale.chpl_getSingletonLocaleArray"]], "chpl_id() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.chpl_id"]], "chpl_id() (chapellocale.dummylocale method)": [[27, "ChapelLocale.DummyLocale.chpl_id"]], "chpl_id() (chapellocale._locale method)": [[27, "ChapelLocale._locale.chpl_id"]], "chpl_initonlocales() (chapellocale.abstractrootlocale iterator)": [[27, "ChapelLocale.AbstractRootLocale.chpl_initOnLocales"]], "chpl_init_rootlocale() (in module chapellocale)": [[27, "ChapelLocale.chpl_init_rootLocale"]], "chpl_isactualsublocid() (in module chapellocale)": [[27, "ChapelLocale.chpl_isActualSublocID"]], "chpl_localeid_to_locale() (in module chapellocale)": [[27, "ChapelLocale.chpl_localeID_to_locale"]], "chpl_localeid() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.chpl_localeid"]], "chpl_localeid() (chapellocale.dummylocale method)": [[27, "ChapelLocale.DummyLocale.chpl_localeid"]], "chpl_localeid() (chapellocale._locale method)": [[27, "ChapelLocale._locale.chpl_localeid"]], "chpl_name() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.chpl_name"]], "chpl_name() (chapellocale.dummylocale method)": [[27, "ChapelLocale.DummyLocale.chpl_name"]], "chpl_name() (chapellocale._locale method)": [[27, "ChapelLocale._locale.chpl_name"]], "chpl_nodeid_t (in module chapellocale)": [[27, "ChapelLocale.chpl_nodeID_t"]], "chpl_rootlocaleinitprivate() (in module chapellocale)": [[27, "ChapelLocale.chpl_rootLocaleInitPrivate"]], "chpl_singletoncurrentlocaleinitprivate() (in module chapellocale)": [[27, "ChapelLocale.chpl_singletonCurrentLocaleInitPrivate"]], "chpl_singletoncurrentlocaleinitprivatesublocs() (in module chapellocale)": [[27, "ChapelLocale.chpl_singletonCurrentLocaleInitPrivateSublocs"]], "chpl_singletonthislocalearray (chapellocale.abstractlocalemodel attribute)": [[27, "ChapelLocale.AbstractLocaleModel.chpl_singletonThisLocaleArray"]], "chpl_sublocid_t (in module chapellocale)": [[27, "ChapelLocale.chpl_sublocID_t"]], "chpl_taskrunningcntdec() (in module chapellocale)": [[27, "ChapelLocale.chpl_taskRunningCntDec"]], "chpl_taskrunningcntinc() (in module chapellocale)": [[27, "ChapelLocale.chpl_taskRunningCntInc"]], "chpl_taskrunningcntreset() (in module chapellocale)": [[27, "ChapelLocale.chpl_taskRunningCntReset"]], "chpl_task_getrequestedsubloc() (in module chapellocale)": [[27, "ChapelLocale.chpl_task_getRequestedSubloc"]], "defaultlocale (in module chapellocale)": [[27, "ChapelLocale.defaultLocale"]], "deinit() (chapellocale._locale method)": [[27, "ChapelLocale._locale.deinit"]], "deinit() (in module chapellocale)": [[27, "ChapelLocale.deinit"]], "dummylocale (in module chapellocale)": [[27, "ChapelLocale.dummyLocale"]], "getdefaultlocalearray() (chapellocale.abstractrootlocale method)": [[27, "ChapelLocale.AbstractRootLocale.getDefaultLocaleArray"]], "getdefaultlocalespace() (chapellocale.abstractrootlocale method)": [[27, "ChapelLocale.AbstractRootLocale.getDefaultLocaleSpace"]], "gpus() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.gpus"]], "gpusimpl() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.gpusImpl"]], "here() (in module chapellocale)": [[27, "ChapelLocale.here"]], "here_id() (in module chapellocale)": [[27, "ChapelLocale.here_id"]], "hostname() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.hostname"]], "hostname() (chapellocale.locale method)": [[27, "ChapelLocale.locale.hostname"]], "id() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.id"]], "id() (chapellocale.locale method)": [[27, "ChapelLocale.locale.id"]], "init() (chapellocale.abstractlocalemodel method)": [[27, "ChapelLocale.AbstractLocaleModel.init"]], "init() (chapellocale.abstractrootlocale method)": [[27, "ChapelLocale.AbstractRootLocale.init"]], "init() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.init"]], "init() (chapellocale.dummylocale method)": [[27, "ChapelLocale.DummyLocale.init"]], "init() (chapellocale._locale method)": [[27, "ChapelLocale._locale.init"]], "init=() (chapellocale._locale method)": [[27, "ChapelLocale._locale.init="]], "isgpu() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.isGpu"]], "localeidtolocale() (chapellocale.abstractrootlocale method)": [[27, "ChapelLocale.AbstractRootLocale.localeIDtoLocale"]], "localekind (enum in chapellocale)": [[27, "ChapelLocale.localeKind"]], "localeid() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.localeid"]], "localeid() (chapellocale._locale method)": [[27, "ChapelLocale._locale.localeid"]], "maxtaskpar (chapellocale.baselocale attribute)": [[27, "ChapelLocale.BaseLocale.maxTaskPar"]], "maxtaskpar() (chapellocale.locale method)": [[27, "ChapelLocale.locale.maxTaskPar"]], "npuslogacc (chapellocale.baselocale attribute)": [[27, "ChapelLocale.BaseLocale.nPUsLogAcc"]], "npuslogall (chapellocale.baselocale attribute)": [[27, "ChapelLocale.BaseLocale.nPUsLogAll"]], "npusphysacc (chapellocale.baselocale attribute)": [[27, "ChapelLocale.BaseLocale.nPUsPhysAcc"]], "npusphysall (chapellocale.baselocale attribute)": [[27, "ChapelLocale.BaseLocale.nPUsPhysAll"]], "name() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.name"]], "name() (chapellocale.locale method)": [[27, "ChapelLocale.locale.name"]], "nillocale (in module chapellocale)": [[27, "ChapelLocale.nilLocale"]], "numpus() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.numPUs"]], "numpus() (chapellocale.locale method)": [[27, "ChapelLocale.locale.numPUs"]], "origrootlocale (in module chapellocale)": [[27, "ChapelLocale.origRootLocale"]], "parent (chapellocale.baselocale attribute)": [[27, "ChapelLocale.BaseLocale.parent"]], "replicaterootlocale (in module chapellocale)": [[27, "ChapelLocale.replicateRootLocale"]], "rootlocale (in module chapellocale)": [[27, "ChapelLocale.rootLocale"]], "runningtaskcnt() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.runningTaskCnt"]], "runningtaskcntadd() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.runningTaskCntAdd"]], "runningtaskcntset() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.runningTaskCntSet"]], "runningtaskcntsub() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.runningTaskCntSub"]], "runningtaskcounter (chapellocale.baselocale attribute)": [[27, "ChapelLocale.BaseLocale.runningTaskCounter"]], "runningtasks() (chapellocale.locale method)": [[27, "ChapelLocale.locale.runningTasks"]], "serialize() (chapellocale.baselocale method)": [[27, "ChapelLocale.BaseLocale.serialize"]], "chpl_localspinlock (record in chapellocks)": [[28, "ChapelLocks.chpl_LocalSpinlock"]], "init() (chapellocks.chpl_localspinlock method)": [[28, "ChapelLocks.chpl_LocalSpinlock.init"]], "init=() (chapellocks.chpl_localspinlock method)": [[28, "ChapelLocks.chpl_LocalSpinlock.init="]], "l (chapellocks.chpl_localspinlock attribute)": [[28, "ChapelLocks.chpl_LocalSpinlock.l"]], "lock() (chapellocks.chpl_localspinlock method)": [[28, "ChapelLocks.chpl_LocalSpinlock.lock"]], "unlock() (chapellocks.chpl_localspinlock method)": [[28, "ChapelLocks.chpl_LocalSpinlock.unlock"]], "chpl_comm_default_num_locales() (in module chapelnumlocales)": [[29, "ChapelNumLocales.chpl_comm_default_num_locales"]], "numlocales (in module chapelnumlocales)": [[29, "ChapelNumLocales.numLocales"]], "chpl_getprivatizedcopy() (in module chapelprivatization)": [[30, "ChapelPrivatization.chpl_getPrivatizedCopy"]], "chpl_privateobject_t (record in chapelprivatization)": [[30, "ChapelPrivatization.chpl_privateObject_t"]], "chpl_privateobjects (in module chapelprivatization)": [[30, "ChapelPrivatization.chpl_privateObjects"]], "obj (chapelprivatization.chpl_privateobject_t attribute)": [[30, "ChapelPrivatization.chpl_privateObject_t.obj"]], "!=() (in module chapelrange)": [[31, "ChapelRange.!="]], "+() (in module chapelrange)": [[31, "ChapelRange.+"]], "+=() (in module chapelrange)": [[31, "ChapelRange.+="]], "-() (in module chapelrange)": [[31, "ChapelRange.-"]], "-=() (in module chapelrange)": [[31, "ChapelRange.-="]], ":() (in module chapelrange)": [[31, "ChapelRange.:"]], "<() (in module chapelrange)": [[31, "ChapelRange.<"]], "<=() (in module chapelrange)": [[31, "ChapelRange.<="]], "=() (in module chapelrange)": [[31, "ChapelRange.="]], "==() (in module chapelrange)": [[31, "ChapelRange.=="]], ">() (in module chapelrange)": [[31, "ChapelRange.>"]], ">=() (in module chapelrange)": [[31, "ChapelRange.>="]], "_alignment (chapelrange._range attribute)": [[31, "ChapelRange._range._alignment"]], "_high (chapelrange._range attribute)": [[31, "ChapelRange._range._high"]], "_low (chapelrange._range attribute)": [[31, "ChapelRange._range._low"]], "_range (record in chapelrange)": [[31, "ChapelRange._range"]], "_stride (chapelrange._range attribute)": [[31, "ChapelRange._range._stride"]], "align() (in module chapelrange)": [[31, "ChapelRange.align"]], "alignhigh() (chapelrange.range method)": [[31, "ChapelRange.range.alignHigh"]], "alignlow() (chapelrange.range method)": [[31, "ChapelRange.range.alignLow"]], "alignedhighasint() (chapelrange.range method)": [[31, "ChapelRange.range.alignedHighAsInt"]], "alignedlowasint() (chapelrange.range method)": [[31, "ChapelRange.range.alignedLowAsInt"]], "alignment() (chapelrange.range method)": [[31, "ChapelRange.range.alignment"]], "boundkind (enum in chapelrange)": [[31, "ChapelRange.boundKind"]], "boundingbox() (chapelrange.range method)": [[31, "ChapelRange.range.boundingBox"]], "bounds (chapelrange._range attribute)": [[31, "ChapelRange._range.bounds"]], "by() (in module chapelrange)": [[31, "ChapelRange.by"]], "checkifiterwilloverflow() (chapelrange.range method)": [[31, "ChapelRange.range.checkIfIterWillOverflow"]], "chpl__add() (in module chapelrange)": [[31, "ChapelRange.chpl__add"]], "chpl__addrangestrides() (in module chapelrange)": [[31, "ChapelRange.chpl__addRangeStrides"]], "chpl__diffmod() (in module chapelrange)": [[31, "ChapelRange.chpl__diffMod"]], "chpl__extendedeuclid() (in module chapelrange)": [[31, "ChapelRange.chpl__extendedEuclid"]], "chpl__extendedeuclidhelper() (in module chapelrange)": [[31, "ChapelRange.chpl__extendedEuclidHelper"]], "chpl__idxtoint() (in module chapelrange)": [[31, "ChapelRange.chpl__idxToInt"]], "chpl__idxtypetointidxtype() (in module chapelrange)": [[31, "ChapelRange.chpl__idxTypeToIntIdxType"]], "chpl__inttoidx() (in module chapelrange)": [[31, "ChapelRange.chpl__intToIdx"]], "chpl__mod() (in module chapelrange)": [[31, "ChapelRange.chpl__mod"]], "chpl__nudgehighbound() (in module chapelrange)": [[31, "ChapelRange.chpl__nudgeHighBound"]], "chpl__nudgelowbound() (in module chapelrange)": [[31, "ChapelRange.chpl__nudgeLowBound"]], "chpl__promotiontype() (chapelrange.range method)": [[31, "ChapelRange.range.chpl__promotionType"]], "chpl__singlevalidxtype() (in module chapelrange)": [[31, "ChapelRange.chpl__singleValIdxType"]], "chpl__untranslate() (chapelrange.range method)": [[31, "ChapelRange.range.chpl__unTranslate"]], "chpl_alignedhighasintforiter() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_alignedHighAsIntForIter"]], "chpl_alignedlowasintforiter() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_alignedLowAsIntForIter"]], "chpl_assignstrideissafe() (in module chapelrange)": [[31, "ChapelRange.chpl_assignStrideIsSafe"]], "chpl_assignstrideisunsafe() (in module chapelrange)": [[31, "ChapelRange.chpl_assignStrideIsUnsafe"]], "chpl_bounded_count_for_param_loop_high() (in module chapelrange)": [[31, "ChapelRange.chpl_bounded_count_for_param_loop_high"]], "chpl_bounded_count_for_param_loop_low() (in module chapelrange)": [[31, "ChapelRange.chpl_bounded_count_for_param_loop_low"]], "chpl_boundscheck() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_boundsCheck"]], "chpl_build_bounded_range() (in module chapelrange)": [[31, "ChapelRange.chpl_build_bounded_range"]], "chpl_build_high_bounded_range() (in module chapelrange)": [[31, "ChapelRange.chpl_build_high_bounded_range"]], "chpl_build_low_bounded_range() (in module chapelrange)": [[31, "ChapelRange.chpl_build_low_bounded_range"]], "chpl_build_unbounded_range() (in module chapelrange)": [[31, "ChapelRange.chpl_build_unbounded_range"]], "chpl_by_help() (in module chapelrange)": [[31, "ChapelRange.chpl_by_help"]], "chpl_castissafe() (in module chapelrange)": [[31, "ChapelRange.chpl_castIsSafe"]], "chpl_checkifrangeiterwilloverflow() (in module chapelrange)": [[31, "ChapelRange.chpl_checkIfRangeIterWillOverflow"]], "chpl_checkstrides() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_checkStrides"]], "chpl_check_step_integral() (in module chapelrange)": [[31, "ChapelRange.chpl_check_step_integral"]], "chpl_compute_count_param_loop() (in module chapelrange)": [[31, "ChapelRange.chpl_compute_count_param_loop"]], "chpl_compute_high_param_loop_bound() (in module chapelrange)": [[31, "ChapelRange.chpl_compute_high_param_loop_bound"]], "chpl_compute_low_param_loop_bound() (in module chapelrange)": [[31, "ChapelRange.chpl_compute_low_param_loop_bound"]], "chpl_count_help() (in module chapelrange)": [[31, "ChapelRange.chpl_count_help"]], "chpl_direct_counted_range_iter() (in module chapelrange)": [[31, "ChapelRange.chpl_direct_counted_range_iter"]], "chpl_direct_counted_range_iter_helper() (in module chapelrange)": [[31, "ChapelRange.chpl_direct_counted_range_iter_helper"]], "chpl_direct_param_stride_range_iter() (in module chapelrange)": [[31, "ChapelRange.chpl_direct_param_stride_range_iter"]], "chpl_direct_pos_stride_range_iter() (in module chapelrange)": [[31, "ChapelRange.chpl_direct_pos_stride_range_iter"]], "chpl_direct_range_iter() (in module chapelrange)": [[31, "ChapelRange.chpl_direct_range_iter"]], "chpl_direct_strided_range_iter() (in module chapelrange)": [[31, "ChapelRange.chpl_direct_strided_range_iter"]], "chpl_firstasintforiter() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_firstAsIntForIter"]], "chpl_high_bound_count_for_param_loop() (in module chapelrange)": [[31, "ChapelRange.chpl_high_bound_count_for_param_loop"]], "chpl_ident() (in module chapelrange)": [[31, "ChapelRange.chpl_ident"]], "chpl_idxcastissafe() (in module chapelrange)": [[31, "ChapelRange.chpl_idxCastIsSafe"]], "chpl_idxcastthrows() (in module chapelrange)": [[31, "ChapelRange.chpl_idxCastThrows"]], "chpl_idxtypesizechange() (in module chapelrange)": [[31, "ChapelRange.chpl_idxTypeSizeChange"]], "chpl_inttoidx() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_intToIdx"]], "chpl_integralidxtype() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_integralIdxType"]], "chpl_isnaturallyaligned() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_isNaturallyAligned"]], "chpl_isvalidrangeidxtype() (in module chapelrange)": [[31, "ChapelRange.chpl_isValidRangeIdxType"]], "chpl_lastasintforiter() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_lastAsIntForIter"]], "chpl_low_bound_count_for_param_loop() (in module chapelrange)": [[31, "ChapelRange.chpl_low_bound_count_for_param_loop"]], "chpl_need_to_check_step() (in module chapelrange)": [[31, "ChapelRange.chpl_need_to_check_step"]], "chpl_range_check_stride() (in module chapelrange)": [[31, "ChapelRange.chpl_range_check_stride"]], "chpl_setfields() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_setFields"]], "chpl_sizeasforiter() (chapelrange.range method)": [[31, "ChapelRange.range.chpl_sizeAsForIter"]], "chpl_strideproduct() (in module chapelrange)": [[31, "ChapelRange.chpl_strideProduct"]], "chpl_strideunion() (in module chapelrange)": [[31, "ChapelRange.chpl_strideUnion"]], "chpl_strideunionrc() (in module chapelrange)": [[31, "ChapelRange.chpl_strideUnionRC"]], "chpl_throwingcast() (in module chapelrange)": [[31, "ChapelRange.chpl_throwingCast"]], "chpl_trycastissafe() (in module chapelrange)": [[31, "ChapelRange.chpl_tryCastIsSafe"]], "contains() (chapelrange.range method)": [[31, "ChapelRange.range.contains"]], "createwithsingleelement() (chapelrange.range method)": [[31, "ChapelRange.range.createWithSingleElement"]], "debugchapelrange (in module chapelrange)": [[31, "ChapelRange.debugChapelRange"]], "defaultstride() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.defaultStride"]], "displayrepresentation() (chapelrange.range method)": [[31, "ChapelRange.range.displayRepresentation"]], "expand() (chapelrange.range method)": [[31, "ChapelRange.range.expand"]], "exterior() (chapelrange.range method)": [[31, "ChapelRange.range.exterior"]], "first() (chapelrange.range method)": [[31, "ChapelRange.range.first"]], "firstasint() (chapelrange.range method)": [[31, "ChapelRange.range.firstAsInt"]], "generaliterator() (chapelrange.range iterator)": [[31, "ChapelRange.range.generalIterator"]], "hasfirst() (chapelrange.range method)": [[31, "ChapelRange.range.hasFirst"]], "hasfirstforiter() (chapelrange.range method)": [[31, "ChapelRange.range.hasFirstForIter"]], "hashighbound() (chapelrange.range method)": [[31, "ChapelRange.range.hasHighBound"]], "haslast() (chapelrange.range method)": [[31, "ChapelRange.range.hasLast"]], "haslastforiter() (chapelrange.range method)": [[31, "ChapelRange.range.hasLastForIter"]], "haslowbound() (chapelrange.range method)": [[31, "ChapelRange.range.hasLowBound"]], "hasnegativestride() (chapelrange.range method)": [[31, "ChapelRange.range.hasNegativeStride"]], "hasparamaligned() (chapelrange.range method)": [[31, "ChapelRange.range.hasParamAligned"]], "hasparamalignment() (chapelrange.range method)": [[31, "ChapelRange.range.hasParamAlignment"]], "hasparamalignmentfield() (chapelrange.range method)": [[31, "ChapelRange.range.hasParamAlignmentField"]], "hasparamstride() (chapelrange.range method)": [[31, "ChapelRange.range.hasParamStride"]], "hasparamstridealtvalald() (chapelrange.range method)": [[31, "ChapelRange.range.hasParamStrideAltvalAld"]], "hasposnegunitstride() (chapelrange.range method)": [[31, "ChapelRange.range.hasPosNegUnitStride"]], "haspositivestride() (chapelrange.range method)": [[31, "ChapelRange.range.hasPositiveStride"]], "hassign() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.hasSign"]], "hasunitstride() (chapelrange.range method)": [[31, "ChapelRange.range.hasUnitStride"]], "high() (chapelrange.range method)": [[31, "ChapelRange.range.high"]], "highbound() (chapelrange.range method)": [[31, "ChapelRange.range.highBound"]], "idxtype (chapelrange._range attribute)": [[31, "ChapelRange._range.idxType"]], "indexorder() (chapelrange.range method)": [[31, "ChapelRange.range.indexOrder"]], "init() (chapelrange.range method)": [[31, "ChapelRange.range.init"]], "init=() (chapelrange.range method)": [[31, "ChapelRange.range.init="]], "interior() (chapelrange.range method)": [[31, "ChapelRange.range.interior"]], "isaligned() (chapelrange.range method)": [[31, "ChapelRange.range.isAligned"]], "isany() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.isAny"]], "isempty() (chapelrange.range method)": [[31, "ChapelRange.range.isEmpty"]], "isnegone() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.isNegOne"]], "isnegative() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.isNegative"]], "isone() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.isOne"]], "isposnegone() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.isPosNegOne"]], "ispositive() (chapelrange.stridekind method)": [[31, "ChapelRange.strideKind.isPositive"]], "last() (chapelrange.range method)": [[31, "ChapelRange.range.last"]], "lastasint() (chapelrange.range method)": [[31, "ChapelRange.range.lastAsInt"]], "low() (chapelrange.range method)": [[31, "ChapelRange.range.low"]], "lowbound() (chapelrange.range method)": [[31, "ChapelRange.range.lowBound"]], "newrangeliteraltype (in module chapelrange)": [[31, "ChapelRange.newRangeLiteralType"]], "newslicerule (in module chapelrange)": [[31, "ChapelRange.newSliceRule"]], "offset() (chapelrange.range method)": [[31, "ChapelRange.range.offset"]], "ordertoindex() (chapelrange.range method)": [[31, "ChapelRange.range.orderToIndex"]], "size() (chapelrange.range method)": [[31, "ChapelRange.range.size"]], "sizeas() (chapelrange.range method)": [[31, "ChapelRange.range.sizeAs"]], "sizeashelp() (chapelrange.range method)": [[31, "ChapelRange.range.sizeAsHelp"]], "strtype() (chapelrange.range method)": [[31, "ChapelRange.range.strType"]], "stride() (chapelrange.range method)": [[31, "ChapelRange.range.stride"]], "stridekind (enum in chapelrange)": [[31, "ChapelRange.strideKind"]], "strides (chapelrange._range attribute)": [[31, "ChapelRange._range.strides"]], "these() (chapelrange.range iterator)": [[31, "ChapelRange.range.these"]], "translate() (chapelrange.range method)": [[31, "ChapelRange.range.translate"]], "trycast() (chapelrange.range method)": [[31, "ChapelRange.range.tryCast"]], "useoptimizedrangeiterators (in module chapelrange)": [[31, "ChapelRange.useOptimizedRangeIterators"]], "bitwiseandreducescanop (class in chapelreduce)": [[32, "ChapelReduce.BitwiseAndReduceScanOp"]], "bitwiseorreducescanop (class in chapelreduce)": [[32, "ChapelReduce.BitwiseOrReduceScanOp"]], "bitwisexorreducescanop (class in chapelreduce)": [[32, "ChapelReduce.BitwiseXorReduceScanOp"]], "logicalandreducescanop (class in chapelreduce)": [[32, "ChapelReduce.LogicalAndReduceScanOp"]], "logicalorreducescanop (class in chapelreduce)": [[32, "ChapelReduce.LogicalOrReduceScanOp"]], "maxreducescanop (class in chapelreduce)": [[32, "ChapelReduce.MaxReduceScanOp"]], "minreducescanop (class in chapelreduce)": [[32, "ChapelReduce.MinReduceScanOp"]], "productreducescanop (class in chapelreduce)": [[32, "ChapelReduce.ProductReduceScanOp"]], "reducescanop (class in chapelreduce)": [[32, "ChapelReduce.ReduceScanOp"]], "sumreducescanop (class in chapelreduce)": [[32, "ChapelReduce.SumReduceScanOp"]], "_maxloc_id() (in module chapelreduce)": [[32, "ChapelReduce._maxloc_id"]], "_minloc_id() (in module chapelreduce)": [[32, "ChapelReduce._minloc_id"]], "accumulate() (chapelreduce.bitwiseandreducescanop method)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.accumulate"]], "accumulate() (chapelreduce.bitwiseorreducescanop method)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.accumulate"]], "accumulate() (chapelreduce.bitwisexorreducescanop method)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.accumulate"]], "accumulate() (chapelreduce.logicalandreducescanop method)": [[32, "ChapelReduce.LogicalAndReduceScanOp.accumulate"]], "accumulate() (chapelreduce.logicalorreducescanop method)": [[32, "ChapelReduce.LogicalOrReduceScanOp.accumulate"]], "accumulate() (chapelreduce.maxreducescanop method)": [[32, "ChapelReduce.MaxReduceScanOp.accumulate"]], "accumulate() (chapelreduce.minreducescanop method)": [[32, "ChapelReduce.MinReduceScanOp.accumulate"]], "accumulate() (chapelreduce.productreducescanop method)": [[32, "ChapelReduce.ProductReduceScanOp.accumulate"]], "accumulate() (chapelreduce.sumreducescanop method)": [[32, "ChapelReduce.SumReduceScanOp.accumulate"]], "accumulate() (chapelreduce.maxloc method)": [[32, "ChapelReduce.maxloc.accumulate"]], "accumulate() (chapelreduce.minloc method)": [[32, "ChapelReduce.minloc.accumulate"]], "accumulate() (chapelreduce.minmax method)": [[32, "ChapelReduce.minmax.accumulate"]], "accumulateontostate() (chapelreduce.bitwiseandreducescanop method)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.bitwiseorreducescanop method)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.bitwisexorreducescanop method)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.logicalandreducescanop method)": [[32, "ChapelReduce.LogicalAndReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.logicalorreducescanop method)": [[32, "ChapelReduce.LogicalOrReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.maxreducescanop method)": [[32, "ChapelReduce.MaxReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.minreducescanop method)": [[32, "ChapelReduce.MinReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.productreducescanop method)": [[32, "ChapelReduce.ProductReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.sumreducescanop method)": [[32, "ChapelReduce.SumReduceScanOp.accumulateOntoState"]], "accumulateontostate() (chapelreduce.maxloc method)": [[32, "ChapelReduce.maxloc.accumulateOntoState"]], "accumulateontostate() (chapelreduce.minloc method)": [[32, "ChapelReduce.minloc.accumulateOntoState"]], "accumulateontostate() (chapelreduce.minmax method)": [[32, "ChapelReduce.minmax.accumulateOntoState"]], "chpl__accumgen() (in module chapelreduce)": [[32, "ChapelReduce.chpl__accumgen"]], "chpl__cleanuplocalop() (in module chapelreduce)": [[32, "ChapelReduce.chpl__cleanupLocalOp"]], "chpl__reducecombine() (in module chapelreduce)": [[32, "ChapelReduce.chpl__reduceCombine"]], "chpl__scaniterator() (in module chapelreduce)": [[32, "ChapelReduce.chpl__scanIterator"]], "chpl__scaniteratorzip() (in module chapelreduce)": [[32, "ChapelReduce.chpl__scanIteratorZip"]], "chpl__scanstaterestypesmatch() (in module chapelreduce)": [[32, "ChapelReduce.chpl__scanStateResTypesMatch"]], "chpl__sumtype() (in module chapelreduce)": [[32, "ChapelReduce.chpl__sumType"]], "chpl_sumtypeissame() (in module chapelreduce)": [[32, "ChapelReduce.chpl_sumTypeIsSame"]], "clone() (chapelreduce.bitwiseandreducescanop method)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.clone"]], "clone() (chapelreduce.bitwiseorreducescanop method)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.clone"]], "clone() (chapelreduce.bitwisexorreducescanop method)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.clone"]], "clone() (chapelreduce.logicalandreducescanop method)": [[32, "ChapelReduce.LogicalAndReduceScanOp.clone"]], "clone() (chapelreduce.logicalorreducescanop method)": [[32, "ChapelReduce.LogicalOrReduceScanOp.clone"]], "clone() (chapelreduce.maxreducescanop method)": [[32, "ChapelReduce.MaxReduceScanOp.clone"]], "clone() (chapelreduce.minreducescanop method)": [[32, "ChapelReduce.MinReduceScanOp.clone"]], "clone() (chapelreduce.productreducescanop method)": [[32, "ChapelReduce.ProductReduceScanOp.clone"]], "clone() (chapelreduce.sumreducescanop method)": [[32, "ChapelReduce.SumReduceScanOp.clone"]], "clone() (chapelreduce.maxloc method)": [[32, "ChapelReduce.maxloc.clone"]], "clone() (chapelreduce.minloc method)": [[32, "ChapelReduce.minloc.clone"]], "clone() (chapelreduce.minmax method)": [[32, "ChapelReduce.minmax.clone"]], "combine() (chapelreduce.bitwiseandreducescanop method)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.combine"]], "combine() (chapelreduce.bitwiseorreducescanop method)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.combine"]], "combine() (chapelreduce.bitwisexorreducescanop method)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.combine"]], "combine() (chapelreduce.logicalandreducescanop method)": [[32, "ChapelReduce.LogicalAndReduceScanOp.combine"]], "combine() (chapelreduce.logicalorreducescanop method)": [[32, "ChapelReduce.LogicalOrReduceScanOp.combine"]], "combine() (chapelreduce.maxreducescanop method)": [[32, "ChapelReduce.MaxReduceScanOp.combine"]], "combine() (chapelreduce.minreducescanop method)": [[32, "ChapelReduce.MinReduceScanOp.combine"]], "combine() (chapelreduce.productreducescanop method)": [[32, "ChapelReduce.ProductReduceScanOp.combine"]], "combine() (chapelreduce.sumreducescanop method)": [[32, "ChapelReduce.SumReduceScanOp.combine"]], "combine() (chapelreduce.maxloc method)": [[32, "ChapelReduce.maxloc.combine"]], "combine() (chapelreduce.minloc method)": [[32, "ChapelReduce.minloc.combine"]], "combine() (chapelreduce.minmax method)": [[32, "ChapelReduce.minmax.combine"]], "elttype (chapelreduce.bitwiseandreducescanop attribute)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.eltType"]], "elttype (chapelreduce.bitwiseorreducescanop attribute)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.eltType"]], "elttype (chapelreduce.bitwisexorreducescanop attribute)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.eltType"]], "elttype (chapelreduce.logicalandreducescanop attribute)": [[32, "ChapelReduce.LogicalAndReduceScanOp.eltType"]], "elttype (chapelreduce.logicalorreducescanop attribute)": [[32, "ChapelReduce.LogicalOrReduceScanOp.eltType"]], "elttype (chapelreduce.maxreducescanop attribute)": [[32, "ChapelReduce.MaxReduceScanOp.eltType"]], "elttype (chapelreduce.minreducescanop attribute)": [[32, "ChapelReduce.MinReduceScanOp.eltType"]], "elttype (chapelreduce.productreducescanop attribute)": [[32, "ChapelReduce.ProductReduceScanOp.eltType"]], "elttype (chapelreduce.sumreducescanop attribute)": [[32, "ChapelReduce.SumReduceScanOp.eltType"]], "elttype (chapelreduce.maxloc attribute)": [[32, "ChapelReduce.maxloc.eltType"]], "elttype (chapelreduce.minloc attribute)": [[32, "ChapelReduce.minloc.eltType"]], "elttype (chapelreduce.minmax attribute)": [[32, "ChapelReduce.minmax.eltType"]], "generate() (chapelreduce.bitwiseandreducescanop method)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.generate"]], "generate() (chapelreduce.bitwiseorreducescanop method)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.generate"]], "generate() (chapelreduce.bitwisexorreducescanop method)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.generate"]], "generate() (chapelreduce.logicalandreducescanop method)": [[32, "ChapelReduce.LogicalAndReduceScanOp.generate"]], "generate() (chapelreduce.logicalorreducescanop method)": [[32, "ChapelReduce.LogicalOrReduceScanOp.generate"]], "generate() (chapelreduce.maxreducescanop method)": [[32, "ChapelReduce.MaxReduceScanOp.generate"]], "generate() (chapelreduce.minreducescanop method)": [[32, "ChapelReduce.MinReduceScanOp.generate"]], "generate() (chapelreduce.productreducescanop method)": [[32, "ChapelReduce.ProductReduceScanOp.generate"]], "generate() (chapelreduce.sumreducescanop method)": [[32, "ChapelReduce.SumReduceScanOp.generate"]], "generate() (chapelreduce.maxloc method)": [[32, "ChapelReduce.maxloc.generate"]], "generate() (chapelreduce.minloc method)": [[32, "ChapelReduce.minloc.generate"]], "generate() (chapelreduce.minmax method)": [[32, "ChapelReduce.minmax.generate"]], "identity() (chapelreduce.bitwiseandreducescanop method)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.identity"]], "identity() (chapelreduce.bitwiseorreducescanop method)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.identity"]], "identity() (chapelreduce.bitwisexorreducescanop method)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.identity"]], "identity() (chapelreduce.logicalandreducescanop method)": [[32, "ChapelReduce.LogicalAndReduceScanOp.identity"]], "identity() (chapelreduce.logicalorreducescanop method)": [[32, "ChapelReduce.LogicalOrReduceScanOp.identity"]], "identity() (chapelreduce.maxreducescanop method)": [[32, "ChapelReduce.MaxReduceScanOp.identity"]], "identity() (chapelreduce.minreducescanop method)": [[32, "ChapelReduce.MinReduceScanOp.identity"]], "identity() (chapelreduce.productreducescanop method)": [[32, "ChapelReduce.ProductReduceScanOp.identity"]], "identity() (chapelreduce.sumreducescanop method)": [[32, "ChapelReduce.SumReduceScanOp.identity"]], "identity() (chapelreduce.maxloc method)": [[32, "ChapelReduce.maxloc.identity"]], "identity() (chapelreduce.minloc method)": [[32, "ChapelReduce.minloc.identity"]], "identity() (chapelreduce.minmax method)": [[32, "ChapelReduce.minmax.identity"]], "l (chapelreduce.reducescanop attribute)": [[32, "ChapelReduce.ReduceScanOp.l"]], "maxloc (class in chapelreduce)": [[32, "ChapelReduce.maxloc"]], "minloc (class in chapelreduce)": [[32, "ChapelReduce.minloc"]], "minmax (class in chapelreduce)": [[32, "ChapelReduce.minmax"]], "value (chapelreduce.bitwiseandreducescanop attribute)": [[32, "ChapelReduce.BitwiseAndReduceScanOp.value"]], "value (chapelreduce.bitwiseorreducescanop attribute)": [[32, "ChapelReduce.BitwiseOrReduceScanOp.value"]], "value (chapelreduce.bitwisexorreducescanop attribute)": [[32, "ChapelReduce.BitwiseXorReduceScanOp.value"]], "value (chapelreduce.logicalandreducescanop attribute)": [[32, "ChapelReduce.LogicalAndReduceScanOp.value"]], "value (chapelreduce.logicalorreducescanop attribute)": [[32, "ChapelReduce.LogicalOrReduceScanOp.value"]], "value (chapelreduce.maxreducescanop attribute)": [[32, "ChapelReduce.MaxReduceScanOp.value"]], "value (chapelreduce.minreducescanop attribute)": [[32, "ChapelReduce.MinReduceScanOp.value"]], "value (chapelreduce.productreducescanop attribute)": [[32, "ChapelReduce.ProductReduceScanOp.value"]], "value (chapelreduce.sumreducescanop attribute)": [[32, "ChapelReduce.SumReduceScanOp.value"]], "value (chapelreduce.maxloc attribute)": [[32, "ChapelReduce.maxloc.value"]], "value (chapelreduce.minloc attribute)": [[32, "ChapelReduce.minloc.value"]], "value (chapelreduce.minmax attribute)": [[32, "ChapelReduce.minmax.value"]], "__defaultvaluefortype() (in module chapelremotevars)": [[33, "ChapelRemoteVars.__defaultValueForType"]], "_remotevarcontainer (class in chapelremotevars)": [[33, "ChapelRemoteVars._remoteVarContainer"]], "_remotevarwrapper (record in chapelremotevars)": [[33, "ChapelRemoteVars._remoteVarWrapper"]], "chpl__buildremotewrapper() (in module chapelremotevars)": [[33, "ChapelRemoteVars.chpl__buildRemoteWrapper"]], "containedvalue (chapelremotevars._remotevarcontainer attribute)": [[33, "ChapelRemoteVars._remoteVarContainer.containedValue"]], "elttype (chapelremotevars._remotevarwrapper attribute)": [[33, "ChapelRemoteVars._remoteVarWrapper.eltType"]], "get() (chapelremotevars._remotevarwrapper method)": [[33, "ChapelRemoteVars._remoteVarWrapper.get"]], "init() (chapelremotevars._remotevarwrapper method)": [[33, "ChapelRemoteVars._remoteVarWrapper.init"]], "tmp (chapelremotevars._remotevarwrapper attribute)": [[33, "ChapelRemoteVars._remoteVarWrapper.tmp"]], "chpl__broadcastglobal() (in module chapelserializedbroadcast)": [[34, "ChapelSerializedBroadcast.chpl__broadcastGlobal"]], "chpl__destroybroadcastedglobal() (in module chapelserializedbroadcast)": [[34, "ChapelSerializedBroadcast.chpl__destroyBroadcastedGlobal"]], "chpl__enableserializedglobals (in module chapelserializedbroadcast)": [[34, "ChapelSerializedBroadcast.chpl__enableSerializedGlobals"]], "chpl_get_global_serialize_table() (in module chapelserializedbroadcast)": [[34, "ChapelSerializedBroadcast.chpl_get_global_serialize_table"]], "chpl__dynamiccheckshortarraytransfer() (in module chapelshortarraytransfer)": [[35, "ChapelShortArrayTransfer.chpl__dynamicCheckShortArrayTransfer"]], "chpl__staticcheckshortarraytransfer() (in module chapelshortarraytransfer)": [[35, "ChapelShortArrayTransfer.chpl__staticCheckShortArrayTransfer"]], "debugshortarraytransfer (in module chapelshortarraytransfer)": [[35, "ChapelShortArrayTransfer.debugShortArrayTransfer"]], "disableshortarraytransfer (in module chapelshortarraytransfer)": [[35, "ChapelShortArrayTransfer.disableShortArrayTransfer"]], "shortarraytransferthreshold (in module chapelshortarraytransfer)": [[35, "ChapelShortArrayTransfer.shortArrayTransferThreshold"]], "_staticwrapper (record in chapelstaticvars)": [[37, "ChapelStaticVars._staticWrapper"]], "_staticwrappercontainer (class in chapelstaticvars)": [[37, "ChapelStaticVars._staticWrapperContainer"]], "callershouldcomputevalue() (chapelstaticvars._staticwrapper method)": [[37, "ChapelStaticVars._staticWrapper.callerShouldComputeValue"]], "chpl__executestaticwrappercleanupeverywhere() (in module chapelstaticvars)": [[37, "ChapelStaticVars.chpl__executeStaticWrapperCleanupEverywhere"]], "chpl__functionstaticvariablewrappertype() (in module chapelstaticvars)": [[37, "ChapelStaticVars.chpl__functionStaticVariableWrapperType"]], "container (chapelstaticvars._staticwrapper attribute)": [[37, "ChapelStaticVars._staticWrapper.container"]], "getvalue() (chapelstaticvars._staticwrapper method)": [[37, "ChapelStaticVars._staticWrapper.getValue"]], "init() (chapelstaticvars._staticwrapper method)": [[37, "ChapelStaticVars._staticWrapper.init"]], "inited (chapelstaticvars._staticwrapper attribute)": [[37, "ChapelStaticVars._staticWrapper.inited"]], "reset() (chapelstaticvars._staticwrapper method)": [[37, "ChapelStaticVars._staticWrapper.reset"]], "setvalue() (chapelstaticvars._staticwrapper method)": [[37, "ChapelStaticVars._staticWrapper.setValue"]], "sharingkind (enum in chapelstaticvars)": [[37, "ChapelStaticVars.sharingKind"]], "value (chapelstaticvars._staticwrappercontainer attribute)": [[37, "ChapelStaticVars._staticWrapperContainer.value"]], "valuetype (chapelstaticvars._staticwrapper attribute)": [[37, "ChapelStaticVars._staticWrapper.valueType"]], "%=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.%="]], "&=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.&="]], "**=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.**="]], "*=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.*="]], "+=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.+="]], "-=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.-="]], "/=() (in module chapelsyncvar)": [[38, "ChapelSyncvar./="]], ":() (in module chapelsyncvar)": [[38, "ChapelSyncvar.:"]], "<<=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.<<="]], "<=>() (in module chapelsyncvar)": [[38, "ChapelSyncvar.<=>"]], "=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.="]], ">>=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.>>="]], "^=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.^="]], "_qthreads_synccls (class in chapelsyncvar)": [[38, "ChapelSyncvar._qthreads_synccls"]], "_singlecls (class in chapelsyncvar)": [[38, "ChapelSyncvar._singlecls"]], "_singlevar (record in chapelsyncvar)": [[38, "ChapelSyncvar._singlevar"]], "_synccls (class in chapelsyncvar)": [[38, "ChapelSyncvar._synccls"]], "_syncvar (record in chapelsyncvar)": [[38, "ChapelSyncvar._syncvar"]], "alignedvalue (chapelsyncvar._qthreads_synccls attribute)": [[38, "ChapelSyncvar._qthreads_synccls.alignedValue"]], "chpl__autocopy() (in module chapelsyncvar)": [[38, "ChapelSyncvar.chpl__autoCopy"]], "chpl__autodestroy() (in module chapelsyncvar)": [[38, "ChapelSyncvar.chpl__autoDestroy"]], "chpl__compilergeneratedassignsyncsingle() (in module chapelsyncvar)": [[38, "ChapelSyncvar.chpl__compilerGeneratedAssignSyncSingle"]], "chpl__compilergeneratedcopysyncsingle() (in module chapelsyncvar)": [[38, "ChapelSyncvar.chpl__compilerGeneratedCopySyncSingle"]], "chpl__initcopy() (in module chapelsyncvar)": [[38, "ChapelSyncvar.chpl__initCopy"]], "chpl__maybeautodestroyed() (in module chapelsyncvar)": [[38, "ChapelSyncvar.chpl__maybeAutoDestroyed"]], "chpl__readxx() (in module chapelsyncvar)": [[38, "ChapelSyncvar.chpl__readXX"]], "deinit() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.deinit"]], "deinit() (chapelsyncvar._singlecls method)": [[38, "ChapelSyncvar._singlecls.deinit"]], "deinit() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.deinit"]], "deinit() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.deinit"]], "deinit() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.deinit"]], "deserialize() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.deserialize"]], "deserialize() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.deserialize"]], "deserializefrom() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.deserializeFrom"]], "deserializefrom() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.deserializeFrom"]], "init() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.init"]], "init() (chapelsyncvar._singlecls method)": [[38, "ChapelSyncvar._singlecls.init"]], "init() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.init"]], "init() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.init"]], "init() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.init"]], "init=() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.init="]], "init=() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.init="]], "isfull() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.isFull"]], "isfull() (chapelsyncvar._singlecls method)": [[38, "ChapelSyncvar._singlecls.isFull"]], "isfull() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.isFull"]], "isfull() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.isFull"]], "isfull() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.isFull"]], "isowned (chapelsyncvar._singlevar attribute)": [[38, "ChapelSyncvar._singlevar.isOwned"]], "isowned (chapelsyncvar._syncvar attribute)": [[38, "ChapelSyncvar._syncvar.isOwned"]], "readfe() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.readFE"]], "readfe() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.readFE"]], "readfe() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.readFE"]], "readff() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.readFF"]], "readff() (chapelsyncvar._singlecls method)": [[38, "ChapelSyncvar._singlecls.readFF"]], "readff() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.readFF"]], "readff() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.readFF"]], "readxx() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.readXX"]], "readxx() (chapelsyncvar._singlecls method)": [[38, "ChapelSyncvar._singlecls.readXX"]], "readxx() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.readXX"]], "readxx() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.readXX"]], "reset() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.reset"]], "reset() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.reset"]], "reset() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.reset"]], "serialize() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.serialize"]], "serialize() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.serialize"]], "singleaux (chapelsyncvar._singlecls attribute)": [[38, "ChapelSyncvar._singlecls.singleAux"]], "syncaux (chapelsyncvar._synccls attribute)": [[38, "ChapelSyncvar._synccls.syncAux"]], "usenativesyncvar (in module chapelsyncvar)": [[38, "ChapelSyncvar.useNativeSyncVar"]], "valtype (chapelsyncvar._qthreads_synccls attribute)": [[38, "ChapelSyncvar._qthreads_synccls.valType"]], "valtype (chapelsyncvar._singlecls attribute)": [[38, "ChapelSyncvar._singlecls.valType"]], "valtype (chapelsyncvar._singlevar attribute)": [[38, "ChapelSyncvar._singlevar.valType"]], "valtype (chapelsyncvar._synccls attribute)": [[38, "ChapelSyncvar._synccls.valType"]], "valtype (chapelsyncvar._syncvar attribute)": [[38, "ChapelSyncvar._syncvar.valType"]], "value (chapelsyncvar._singlecls attribute)": [[38, "ChapelSyncvar._singlecls.value"]], "value (chapelsyncvar._synccls attribute)": [[38, "ChapelSyncvar._synccls.value"]], "wrapped (chapelsyncvar._singlevar attribute)": [[38, "ChapelSyncvar._singlevar.wrapped"]], "wrapped (chapelsyncvar._syncvar attribute)": [[38, "ChapelSyncvar._syncvar.wrapped"]], "writeef() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.writeEF"]], "writeef() (chapelsyncvar._singlecls method)": [[38, "ChapelSyncvar._singlecls.writeEF"]], "writeef() (chapelsyncvar._singlevar method)": [[38, "ChapelSyncvar._singlevar.writeEF"]], "writeef() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.writeEF"]], "writeef() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.writeEF"]], "writeff() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.writeFF"]], "writeff() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.writeFF"]], "writeff() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.writeFF"]], "writexf() (chapelsyncvar._qthreads_synccls method)": [[38, "ChapelSyncvar._qthreads_synccls.writeXF"]], "writexf() (chapelsyncvar._synccls method)": [[38, "ChapelSyncvar._synccls.writeXF"]], "writexf() (chapelsyncvar._syncvar method)": [[38, "ChapelSyncvar._syncvar.writeXF"]], "|=() (in module chapelsyncvar)": [[38, "ChapelSyncvar.|="]], "chpl_task_data_getcommdiagstemporarilydisabled() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_getCommDiagsTemporarilyDisabled"]], "chpl_task_data_getdynamicendcount() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_getDynamicEndCount"]], "chpl_task_data_getnextcostmtserial() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_getNextCoStmtSerial"]], "chpl_task_data_getserial() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_getSerial"]], "chpl_task_data_setcommdiagstemporarilydisabled() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_setCommDiagsTemporarilyDisabled"]], "chpl_task_data_setdynamicendcount() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_setDynamicEndCount"]], "chpl_task_data_setnextcostmtserial() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_setNextCoStmtSerial"]], "chpl_task_data_setserial() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_data_setSerial"]], "chpl_task_getcommdiagstemporarilydisabled() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_getCommDiagsTemporarilyDisabled"]], "chpl_task_getdynamicendcount() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_getDynamicEndCount"]], "chpl_task_getserial() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_getSerial"]], "chpl_task_setcommdiagstemporarilydisabled() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_setCommDiagsTemporarilyDisabled"]], "chpl_task_setdynamicendcount() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_setDynamicEndCount"]], "chpl_task_setserial() (in module chapeltaskdata)": [[39, "ChapelTaskData.chpl_task_setSerial"]], "chpl_save_task_error() (in module chapeltaskdatahelp)": [[40, "ChapelTaskDataHelp.chpl_save_task_error"]], "chpl_save_task_error_owned() (in module chapeltaskdatahelp)": [[40, "ChapelTaskDataHelp.chpl_save_task_error_owned"]], "chpl_task_data_setup() (in module chapeltaskdatahelp)": [[40, "ChapelTaskDataHelp.chpl_task_data_setup"]], "chpl_task_getinfochapel() (in module chapeltaskdatahelp)": [[40, "ChapelTaskDataHelp.chpl_task_getInfoChapel"]], "chpl_task_getinfochapelinbundle() (in module chapeltaskdatahelp)": [[40, "ChapelTaskDataHelp.chpl_task_getInfoChapelInBundle"]], "chpl_task_infochapel_t (in module chapeltaskdatahelp)": [[40, "ChapelTaskDataHelp.chpl_task_infoChapel_t"]], "!=() (in module chapeltaskid)": [[41, "ChapelTaskID.!="]], ":() (in module chapeltaskid)": [[41, "ChapelTaskID.:"]], "=() (in module chapeltaskid)": [[41, "ChapelTaskID.="]], "==() (in module chapeltaskid)": [[41, "ChapelTaskID.=="]], "chpl_task_getenvnumthreadsperlocale() (in module chapelthreads)": [[42, "ChapelThreads.chpl_task_getenvNumThreadsPerLocale"]], "numthreadsperlocale (in module chapelthreads)": [[42, "ChapelThreads.numThreadsPerLocale"]], "!() (in module chapeltuple)": [[43, "ChapelTuple.!"]], "!=() (in module chapeltuple)": [[43, "ChapelTuple.!="]], "%() (in module chapeltuple)": [[43, "ChapelTuple.%"]], "&() (in module chapeltuple)": [[43, "ChapelTuple.&"]], "*() (in module chapeltuple)": [[43, "ChapelTuple.*"]], "**() (in module chapeltuple)": [[43, "ChapelTuple.**"]], "+() (in module chapeltuple)": [[43, "ChapelTuple.+"]], "-() (in module chapeltuple)": [[43, "ChapelTuple.-"]], "/() (in module chapeltuple)": [[43, "ChapelTuple./"]], ":() (in module chapeltuple)": [[43, "ChapelTuple.:"]], "<() (in module chapeltuple)": [[43, "ChapelTuple.<"]], "<<() (in module chapeltuple)": [[43, "ChapelTuple.<<"]], "<=() (in module chapeltuple)": [[43, "ChapelTuple.<="]], "=() (in module chapeltuple)": [[43, "ChapelTuple.="]], "==() (in module chapeltuple)": [[43, "ChapelTuple.=="]], ">() (in module chapeltuple)": [[43, "ChapelTuple.>"]], ">=() (in module chapeltuple)": [[43, "ChapelTuple.>="]], ">>() (in module chapeltuple)": [[43, "ChapelTuple.>>"]], "chpl_warn_tuple_iteration (in module chapeltuple)": [[43, "ChapelTuple.CHPL_WARN_TUPLE_ITERATION"]], "^() (in module chapeltuple)": [[43, "ChapelTuple.^"]], "_build_star_tuple_noref() (in module chapeltuple)": [[43, "ChapelTuple._build_star_tuple_noref"]], "_build_tuple() (in module chapeltuple)": [[43, "ChapelTuple._build_tuple"]], "_build_tuple_always_allow_ref() (in module chapeltuple)": [[43, "ChapelTuple._build_tuple_always_allow_ref"]], "_build_tuple_noref() (in module chapeltuple)": [[43, "ChapelTuple._build_tuple_noref"]], "_check_tuple_var_decl() (in module chapeltuple)": [[43, "ChapelTuple._check_tuple_var_decl"]], "_tuple (record in chapeltuple)": [[43, "ChapelTuple._tuple"]], "chpl_twohomogtuples() (in module chapeltuple)": [[43, "ChapelTuple.chpl_TwoHomogTuples"]], "chpl__init_tuple() (in module chapeltuple)": [[43, "ChapelTuple.chpl__init_tuple"]], "chpl__tuplerest() (in module chapeltuple)": [[43, "ChapelTuple.chpl__tupleRest"]], "chpl__tuplify() (in module chapeltuple)": [[43, "ChapelTuple.chpl__tuplify"]], "chpl__unref() (in module chapeltuple)": [[43, "ChapelTuple.chpl__unref"]], "indices() (chapeltuple._tuple method)": [[43, "ChapelTuple._tuple.indices"]], "max() (in module chapeltuple)": [[43, "ChapelTuple.max"]], "min() (in module chapeltuple)": [[43, "ChapelTuple.min"]], "size (chapeltuple._tuple attribute)": [[43, "ChapelTuple._tuple.size"]], "these() (chapeltuple._tuple iterator)": [[43, "ChapelTuple._tuple.these"]], "this() (chapeltuple._tuple method)": [[43, "ChapelTuple._tuple.this"]], "|() (in module chapeltuple)": [[43, "ChapelTuple.|"]], "~() (in module chapeltuple)": [[43, "ChapelTuple.~"]], "_command_line_cast() (in module chapelutil)": [[44, "ChapelUtil._command_line_cast"]], "allocate_string_literals_buf() (in module chapelutil)": [[44, "ChapelUtil.allocate_string_literals_buf"]], "argc (chapelutil.chpl_main_argument attribute)": [[44, "ChapelUtil.chpl_main_argument.argc"]], "chpl_addmodule() (in module chapelutil)": [[44, "ChapelUtil.chpl_addModule"]], "chpl_convert_args() (in module chapelutil)": [[44, "ChapelUtil.chpl_convert_args"]], "chpl_deinitmodules() (in module chapelutil)": [[44, "ChapelUtil.chpl_deinitModules"]], "chpl_get_mli_connection() (in module chapelutil)": [[44, "ChapelUtil.chpl_get_mli_connection"]], "chpl_main_argument (record in chapelutil)": [[44, "ChapelUtil.chpl_main_argument"]], "chpl_rt_postusercodehook() (in module chapelutil)": [[44, "ChapelUtil.chpl_rt_postUserCodeHook"]], "chpl_rt_preusercodehook() (in module chapelutil)": [[44, "ChapelUtil.chpl_rt_preUserCodeHook"]], "deallocate_string_literals_buf() (in module chapelutil)": [[44, "ChapelUtil.deallocate_string_literals_buf"]], "printmoduledeinitorder (in module chapelutil)": [[44, "ChapelUtil.printModuleDeinitOrder"]], "return_value (chapelutil.chpl_main_argument attribute)": [[44, "ChapelUtil.chpl_main_argument.return_value"]], "safeadd() (in module chapelutil)": [[44, "ChapelUtil.safeAdd"]], "safemul() (in module chapelutil)": [[44, "ChapelUtil.safeMul"]], "safesub() (in module chapelutil)": [[44, "ChapelUtil.safeSub"]], "defaultassociativearr (class in defaultassociative)": [[45, "DefaultAssociative.DefaultAssociativeArr"]], "defaultassociativedom (class in defaultassociative)": [[45, "DefaultAssociative.DefaultAssociativeDom"]], "defaultassociativedomrehashhelper (class in defaultassociative)": [[45, "DefaultAssociative.DefaultAssociativeDomRehashHelper"]], "_add() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom._add"]], "_defaultinitslot() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._defaultInitSlot"]], "_deinitelement() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._deinitElement"]], "_deinitslot() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._deinitSlot"]], "_dodefaultinitslot() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._doDefaultInitSlot"]], "_elementneedsdeinit() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._elementNeedsDeinit"]], "_finishrehash() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._finishRehash"]], "_fullslots() (defaultassociative.defaultassociativedom iterator)": [[45, "DefaultAssociative.DefaultAssociativeDom._fullSlots"]], "_isslotfull() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom._isSlotFull"]], "_moveelementduringrehash() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._moveElementDuringRehash"]], "_startrehash() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr._startRehash"]], "chpl_serialreadwriteassociativehelper() (in module defaultassociative)": [[45, "DefaultAssociative.chpl_serialReadWriteAssociativeHelper"]], "data (defaultassociative.defaultassociativearr attribute)": [[45, "DefaultAssociative.DefaultAssociativeArr.data"]], "datasize (defaultassociative.defaultassociativearr attribute)": [[45, "DefaultAssociative.DefaultAssociativeArr.dataSize"]], "debugassocdatapar (in module defaultassociative)": [[45, "DefaultAssociative.debugAssocDataPar"]], "debugdefaultassoc (in module defaultassociative)": [[45, "DefaultAssociative.debugDefaultAssoc"]], "defaultassociativesupportsautolocalaccess (in module defaultassociative)": [[45, "DefaultAssociative.defaultAssociativeSupportsAutoLocalAccess"]], "deinit() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.deinit"]], "deinit() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.deinit"]], "dist (defaultassociative.defaultassociativedom attribute)": [[45, "DefaultAssociative.DefaultAssociativeDom.dist"]], "dom (defaultassociative.defaultassociativearr attribute)": [[45, "DefaultAssociative.DefaultAssociativeArr.dom"]], "dom (defaultassociative.defaultassociativedomrehashhelper attribute)": [[45, "DefaultAssociative.DefaultAssociativeDomRehashHelper.dom"]], "dsiaccess() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiAccess"]], "dsiadd() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiAdd"]], "dsiassigndomain() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiAssignDomain"]], "dsibuildarray() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiBuildArray"]], "dsiclear() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiClear"]], "dsidestroyarr() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiDestroyArr"]], "dsielementdeinitializationcomplete() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiElementDeinitializationComplete"]], "dsielementinitializationcomplete() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiElementInitializationComplete"]], "dsigetbasedom() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiGetBaseDom"]], "dsihassinglelocalsubdomain() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiHasSingleLocalSubdomain"]], "dsihassinglelocalsubdomain() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiHasSingleLocalSubdomain"]], "dsiindsitersafeforremoving() (defaultassociative.defaultassociativedom iterator)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiIndsIterSafeForRemoving"]], "dsilinksdistribution() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiLinksDistribution"]], "dsilocalaccess() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiLocalAccess"]], "dsilocalsubdomain() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiLocalSubdomain"]], "dsilocalsubdomain() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiLocalSubdomain"]], "dsimember() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiMember"]], "dsimydist() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiMyDist"]], "dsinumindices() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiNumIndices"]], "dsiremove() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiRemove"]], "dsirequestcapacity() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiRequestCapacity"]], "dsiserialread() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiSerialRead"]], "dsiserialread() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiSerialRead"]], "dsiserialreadwrite() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiSerialReadWrite"]], "dsiserialwrite() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiSerialWrite"]], "dsiserialwrite() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiSerialWrite"]], "dsisorted() (defaultassociative.defaultassociativearr iterator)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiSorted"]], "dsisorted() (defaultassociative.defaultassociativedom iterator)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiSorted"]], "dsisupportsautolocalaccess() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiSupportsAutoLocalAccess"]], "dsitargetlocales() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.dsiTargetLocales"]], "dsitargetlocales() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.dsiTargetLocales"]], "eltsneeddeinit (defaultassociative.defaultassociativearr attribute)": [[45, "DefaultAssociative.DefaultAssociativeArr.eltsNeedDeinit"]], "finishrehash() (defaultassociative.defaultassociativedomrehashhelper method)": [[45, "DefaultAssociative.DefaultAssociativeDomRehashHelper.finishRehash"]], "idxtype (defaultassociative.defaultassociativearr attribute)": [[45, "DefaultAssociative.DefaultAssociativeArr.idxType"]], "idxtype (defaultassociative.defaultassociativedom attribute)": [[45, "DefaultAssociative.DefaultAssociativeDom.idxType"]], "init() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.init"]], "init() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.init"]], "linksdistribution() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.linksDistribution"]], "locktable() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.lockTable"]], "moveelementduringrehash() (defaultassociative.defaultassociativedomrehashhelper method)": [[45, "DefaultAssociative.DefaultAssociativeDomRehashHelper.moveElementDuringRehash"]], "numentries (defaultassociative.defaultassociativedom attribute)": [[45, "DefaultAssociative.DefaultAssociativeDom.numEntries"]], "parsafe (defaultassociative.defaultassociativedom attribute)": [[45, "DefaultAssociative.DefaultAssociativeDom.parSafe"]], "parsafedom (defaultassociative.defaultassociativearr attribute)": [[45, "DefaultAssociative.DefaultAssociativeArr.parSafeDom"]], "rank() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.rank"]], "readchapelstyleassocarray() (defaultassociative.defaultassociativearr method)": [[45, "DefaultAssociative.DefaultAssociativeArr.readChapelStyleAssocArray"]], "startrehash() (defaultassociative.defaultassociativedomrehashhelper method)": [[45, "DefaultAssociative.DefaultAssociativeDomRehashHelper.startRehash"]], "table (defaultassociative.defaultassociativedom attribute)": [[45, "DefaultAssociative.DefaultAssociativeDom.table"]], "tablelock (defaultassociative.defaultassociativedom attribute)": [[45, "DefaultAssociative.DefaultAssociativeDom.tableLock"]], "these() (defaultassociative.defaultassociativearr iterator)": [[45, "DefaultAssociative.DefaultAssociativeArr.these"]], "these() (defaultassociative.defaultassociativedom iterator)": [[45, "DefaultAssociative.DefaultAssociativeDom.these"]], "tmpdata (defaultassociative.defaultassociativearr attribute)": [[45, "DefaultAssociative.DefaultAssociativeArr.tmpData"]], "unlocktable() (defaultassociative.defaultassociativedom method)": [[45, "DefaultAssociative.DefaultAssociativeDom.unlockTable"]], "arraystorageorder (enum in defaultrectangular)": [[46, "DefaultRectangular.ArrayStorageOrder"]], "defaultdist (class in defaultrectangular)": [[46, "DefaultRectangular.DefaultDist"]], "defaultrectangulararr (class in defaultrectangular)": [[46, "DefaultRectangular.DefaultRectangularArr"]], "defaultrectangulardom (class in defaultrectangular)": [[46, "DefaultRectangular.DefaultRectangularDom"]], "defaultrectangulardom._serialized_domain (record in defaultrectangular)": [[46, "DefaultRectangular.DefaultRectangularDom._serialized_domain"]], "locradcache (class in defaultrectangular)": [[46, "DefaultRectangular.LocRADCache"]], "rad (defaultrectangular.locradcache attribute)": [[46, "DefaultRectangular.LocRADCache.RAD"]], "radlocks (defaultrectangular.locradcache attribute)": [[46, "DefaultRectangular.LocRADCache.RADLocks"]], "_borrowed (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr._borrowed"]], "_remoteaccessdata (record in defaultrectangular)": [[46, "DefaultRectangular._remoteAccessData"]], "_supportsbulkelements() (in module defaultrectangular)": [[46, "DefaultRectangular._supportsBulkElements"]], "_supportsserializers() (in module defaultrectangular)": [[46, "DefaultRectangular._supportsSerializers"]], "adjustblkoffstrfornewdomain() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.adjustBlkOffStrForNewDomain"]], "blk (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.blk"]], "blk (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.blk"]], "blkchanged (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.blkChanged"]], "callpostalloc (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.callPostAlloc"]], "chpl__deserialize() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.chpl__deserialize"]], "chpl__inttoidx() (in module defaultrectangular)": [[46, "DefaultRectangular.chpl__intToIdx"]], "chpl__postscan() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.chpl__postScan"]], "chpl__prescan() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.chpl__preScan"]], "chpl__serialviewiter() (in module defaultrectangular)": [[46, "DefaultRectangular.chpl__serialViewIter"]], "chpl__serialviewiter1d() (in module defaultrectangular)": [[46, "DefaultRectangular.chpl__serialViewIter1D"]], "chpl__serialviewiterhelper() (in module defaultrectangular)": [[46, "DefaultRectangular.chpl__serialViewIterHelper"]], "chpl__serialize() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.chpl__serialize"]], "chpl_defaultdistinitprivate() (in module defaultrectangular)": [[46, "DefaultRectangular.chpl_defaultDistInitPrivate"]], "chpl_inttoidx() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.chpl_intToIdx"]], "chpl_integralidxtype() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.chpl_integralIdxType"]], "chpl_integralidxtype() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.chpl_integralIdxType"]], "chpl_serialreadwriterectangular() (in module defaultrectangular)": [[46, "DefaultRectangular.chpl_serialReadWriteRectangular"]], "chpl_serialreadwriterectangularhelper() (in module defaultrectangular)": [[46, "DefaultRectangular.chpl_serialReadWriteRectangularHelper"]], "chpl_unsafeassignisclasselementnil() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.chpl_unsafeAssignIsClassElementNil"]], "computefactoredoffs() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.computeFactoredOffs"]], "computefactoredoffs() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.computeFactoredOffs"]], "data (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.data"]], "data (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.data"]], "dataelem() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.dataElem"]], "dataparignorerunningtasks (in module defaultrectangular)": [[46, "DefaultRectangular.dataParIgnoreRunningTasks"]], "dataparmingranularity (in module defaultrectangular)": [[46, "DefaultRectangular.dataParMinGranularity"]], "datapartasksperlocale (in module defaultrectangular)": [[46, "DefaultRectangular.dataParTasksPerLocale"]], "debugdrscan (in module defaultrectangular)": [[46, "DefaultRectangular.debugDRScan"]], "debugdatapar (in module defaultrectangular)": [[46, "DefaultRectangular.debugDataPar"]], "debugdataparnuma (in module defaultrectangular)": [[46, "DefaultRectangular.debugDataParNuma"]], "debugdefaultdist (in module defaultrectangular)": [[46, "DefaultRectangular.debugDefaultDist"]], "debugdefaultdistbulktransfer (in module defaultrectangular)": [[46, "DefaultRectangular.debugDefaultDistBulkTransfer"]], "defaultdisablelazyradopt (in module defaultrectangular)": [[46, "DefaultRectangular.defaultDisableLazyRADOpt"]], "defaultdist (in module defaultrectangular)": [[46, "DefaultRectangular.defaultDist"]], "defaultdoradopt (in module defaultrectangular)": [[46, "DefaultRectangular.defaultDoRADOpt"]], "defaultrectangularsupportsautolocalaccess (in module defaultrectangular)": [[46, "DefaultRectangular.defaultRectangularSupportsAutoLocalAccess"]], "defaultstorageorder (in module defaultrectangular)": [[46, "DefaultRectangular.defaultStorageOrder"]], "deinitelts (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.deinitElts"]], "dims (defaultrectangular.defaultrectangulardom._serialized_domain attribute)": [[46, "DefaultRectangular.DefaultRectangularDom._serialized_domain.dims"]], "disablearrrealloc (in module defaultrectangular)": [[46, "DefaultRectangular.disableArrRealloc"]], "dist (defaultrectangular.defaultrectangulardom attribute)": [[46, "DefaultRectangular.DefaultRectangularDom.dist"]], "doibulktransferfromknown() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.doiBulkTransferFromKnown"]], "doibulktransfertoknown() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.doiBulkTransferToKnown"]], "doicanbulktransferrankchange() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.doiCanBulkTransferRankChange"]], "doioptimizedswap() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.doiOptimizedSwap"]], "doiscan() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.doiScan"]], "doitostring() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.doiToString"]], "doitrycreatearray() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.doiTryCreateArray"]], "dom (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.dom"]], "dsiaccess() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiAccess"]], "dsialignedhigh() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiAlignedHigh"]], "dsialignedlow() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiAlignedLow"]], "dsialignment() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiAlignment"]], "dsiassign() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiAssign"]], "dsiassigndomain() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiAssignDomain"]], "dsiboundscheck() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiBoundsCheck"]], "dsibuildarray() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiBuildArray"]], "dsibuildarraywith() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiBuildArrayWith"]], "dsiclone() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiClone"]], "dsidestroyarr() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiDestroyArr"]], "dsidim() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiDim"]], "dsidims() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiDims"]], "dsidisplayrepresentation() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiDisplayRepresentation"]], "dsidisplayrepresentation() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiDisplayRepresentation"]], "dsielementdeinitializationcomplete() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiElementDeinitializationComplete"]], "dsielementinitializationcomplete() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiElementInitializationComplete"]], "dsiequaldmaps() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiEqualDMaps"]], "dsifirst() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiFirst"]], "dsigetbasedom() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiGetBaseDom"]], "dsigetindices() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiGetIndices"]], "dsigetrad() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiGetRAD"]], "dsihassinglelocalsubdomain() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiHasSingleLocalSubdomain"]], "dsihassinglelocalsubdomain() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiHasSingleLocalSubdomain"]], "dsihigh() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiHigh"]], "dsiindexorder() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiIndexOrder"]], "dsiindextolocale() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiIndexToLocale"]], "dsiislayout() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiIsLayout"]], "dsiiteratoryieldslocalelements() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiIteratorYieldsLocalElements"]], "dsilast() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiLast"]], "dsilinksdistribution() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiLinksDistribution"]], "dsilocalslice() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiLocalSlice"]], "dsilocalslice() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiLocalSlice"]], "dsilocalsubdomain() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiLocalSubdomain"]], "dsilocalsubdomain() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiLocalSubdomain"]], "dsilocalsubdomains() (defaultrectangular.defaultrectangulararr iterator)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiLocalSubdomains"]], "dsilocalsubdomains() (defaultrectangular.defaultrectangulardom iterator)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiLocalSubdomains"]], "dsilow() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiLow"]], "dsimember() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiMember"]], "dsimydist() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiMyDist"]], "dsinewassociativedom() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiNewAssociativeDom"]], "dsinewrectangulardom() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiNewRectangularDom"]], "dsinewsparsedom() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiNewSparseDom"]], "dsinumindices() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiNumIndices"]], "dsipostreallocate() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiPostReallocate"]], "dsireallocate() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiReallocate"]], "dsiserialread() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiSerialRead"]], "dsiserialread() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiSerialRead"]], "dsiserialreadwrite() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiSerialReadWrite"]], "dsiserialreadwrite() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiSerialReadWrite"]], "dsiserialwrite() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiSerialWrite"]], "dsiserialwrite() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiSerialWrite"]], "dsisetindices() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiSetIndices"]], "dsistride() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiStride"]], "dsisupportsautolocalaccess() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiSupportsAutoLocalAccess"]], "dsitargetlocales() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiTargetLocales"]], "dsitargetlocales() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.dsiTargetLocales"]], "dsitargetlocales() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.dsiTargetLocales"]], "dsitrackdomains() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.dsiTrackDomains"]], "earlyshiftdata (in module defaultrectangular)": [[46, "DefaultRectangular.earlyShiftData"]], "elttype (defaultrectangular.locradcache attribute)": [[46, "DefaultRectangular.LocRADCache.eltType"]], "elttype (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.eltType"]], "enableparallelgetsinassignment (in module defaultrectangular)": [[46, "DefaultRectangular.enableParallelGetsInAssignment"]], "enableparallelputsinassignment (in module defaultrectangular)": [[46, "DefaultRectangular.enableParallelPutsInAssignment"]], "externarr (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.externArr"]], "externfreefunc (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.externFreeFunc"]], "factoredoffs (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.factoredOffs"]], "factoredoffs (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.factoredOffs"]], "getdataelem() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.getDataElem"]], "getdataindex() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.getDataIndex"]], "getdataindex() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.getDataIndex"]], "hasunitstride() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.hasUnitStride"]], "idxsignedtype (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.idxSignedType"]], "idxtype (defaultrectangular.defaultrectangulardom._serialized_domain attribute)": [[46, "DefaultRectangular.DefaultRectangularDom._serialized_domain.idxType"]], "idxtype (defaultrectangular.locradcache attribute)": [[46, "DefaultRectangular.LocRADCache.idxType"]], "idxtype (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.idxType"]], "init() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.init"]], "init() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.init"]], "init() (defaultrectangular.locradcache method)": [[46, "DefaultRectangular.LocRADCache.init"]], "initdatafrom() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.initDataFrom"]], "initshifteddata() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.initShiftedData"]], "initshifteddata() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.initShiftedData"]], "isdatacontiguous() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.isDataContiguous"]], "isdefaultrectangular (defaultrectangular.defaultrectangulardom._serialized_domain attribute)": [[46, "DefaultRectangular.DefaultRectangularDom._serialized_domain.isDefaultRectangular"]], "isdefaultrectangular() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.isDefaultRectangular"]], "isdefaultrectangular() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.isDefaultRectangular"]], "linksdistribution() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.linksDistribution"]], "lockrad() (defaultrectangular.locradcache method)": [[46, "DefaultRectangular.LocRADCache.lockRAD"]], "off (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.off"]], "off (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.off"]], "origin (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.origin"]], "parsafe() (defaultrectangular.defaultrectangulardom method)": [[46, "DefaultRectangular.DefaultRectangularDom.parSafe"]], "parallelassignthreshold (in module defaultrectangular)": [[46, "DefaultRectangular.parallelAssignThreshold"]], "polly_array_index() (in module defaultrectangular)": [[46, "DefaultRectangular.polly_array_index"]], "ranges (defaultrectangular.defaultrectangulardom attribute)": [[46, "DefaultRectangular.DefaultRectangularDom.ranges"]], "rank (defaultrectangular.defaultrectangulardom._serialized_domain attribute)": [[46, "DefaultRectangular.DefaultRectangularDom._serialized_domain.rank"]], "rank (defaultrectangular.locradcache attribute)": [[46, "DefaultRectangular.LocRADCache.rank"]], "rank (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.rank"]], "reportinplacerealloc (in module defaultrectangular)": [[46, "DefaultRectangular.reportInPlaceRealloc"]], "setupfieldsandallocate() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.setupFieldsAndAllocate"]], "shifteddata (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.shiftedData"]], "shifteddata (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.shiftedData"]], "shifteddataelem() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.shiftedDataElem"]], "singleton() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.singleton"]], "sizesperdim (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.sizesPerDim"]], "storageorder (in module defaultrectangular)": [[46, "DefaultRectangular.storageOrder"]], "str (defaultrectangular.defaultrectangulararr attribute)": [[46, "DefaultRectangular.DefaultRectangularArr.str"]], "str (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.str"]], "stridealigndown() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.strideAlignDown"]], "stridealignup() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.strideAlignUp"]], "strides (defaultrectangular.defaultrectangulardom._serialized_domain attribute)": [[46, "DefaultRectangular.DefaultRectangularDom._serialized_domain.strides"]], "strides (defaultrectangular.locradcache attribute)": [[46, "DefaultRectangular.LocRADCache.strides"]], "strides (defaultrectangular._remoteaccessdata attribute)": [[46, "DefaultRectangular._remoteAccessData.strides"]], "targetlocdom (defaultrectangular.locradcache attribute)": [[46, "DefaultRectangular.LocRADCache.targetLocDom"]], "thedata() (defaultrectangular.defaultrectangulararr method)": [[46, "DefaultRectangular.DefaultRectangularArr.theData"]], "thedata() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.theData"]], "these() (defaultrectangular.defaultrectangulararr iterator)": [[46, "DefaultRectangular.DefaultRectangularArr.these"]], "these() (defaultrectangular.defaultrectangulardom iterator)": [[46, "DefaultRectangular.DefaultRectangularDom.these"]], "these_help() (defaultrectangular.defaultrectangulardom iterator)": [[46, "DefaultRectangular.DefaultRectangularDom.these_help"]], "torankchange() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.toRankChange"]], "toreindex() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.toReindex"]], "toslice() (defaultrectangular._remoteaccessdata method)": [[46, "DefaultRectangular._remoteAccessData.toSlice"]], "trackdomains() (defaultrectangular.defaultdist method)": [[46, "DefaultRectangular.DefaultDist.trackDomains"]], "unlockrad() (defaultrectangular.locradcache method)": [[46, "DefaultRectangular.LocRADCache.unlockRAD"]], "usepollyarrayindex (in module defaultrectangular)": [[46, "DefaultRectangular.usePollyArrayIndex"]], "defaultsparsearr (class in defaultsparse)": [[47, "DefaultSparse.DefaultSparseArr"]], "defaultsparsedom (class in defaultsparse)": [[47, "DefaultSparse.DefaultSparseDom"]], "_indices (defaultsparse.defaultsparsedom attribute)": [[47, "DefaultSparse.DefaultSparseDom._indices"]], "_nnz (defaultsparse.defaultsparsedom attribute)": [[47, "DefaultSparse.DefaultSparseDom._nnz"]], "add_help() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.add_help"]], "bulkadd_help() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.bulkAdd_help"]], "debugdefaultsparse (in module defaultsparse)": [[47, "DefaultSparse.debugDefaultSparse"]], "defaultsparsesupportsautolocalaccess (in module defaultsparse)": [[47, "DefaultSparse.defaultSparseSupportsAutoLocalAccess"]], "dimiter() (defaultsparse.defaultsparsedom iterator)": [[47, "DefaultSparse.DefaultSparseDom.dimIter"]], "dist (defaultsparse.defaultsparsedom attribute)": [[47, "DefaultSparse.DefaultSparseDom.dist"]], "doibulktransferfromknown() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.doiBulkTransferFromKnown"]], "doibulktransfertoknown() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.doiBulkTransferToKnown"]], "dsiaccess() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.dsiAccess"]], "dsiadd() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiAdd"]], "dsiassigndomain() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiAssignDomain"]], "dsibuildarray() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiBuildArray"]], "dsiclear() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiClear"]], "dsifirst() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiFirst"]], "dsihassinglelocalsubdomain() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.dsiHasSingleLocalSubdomain"]], "dsihassinglelocalsubdomain() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiHasSingleLocalSubdomain"]], "dsiindsitersafeforremoving() (defaultsparse.defaultsparsedom iterator)": [[47, "DefaultSparse.DefaultSparseDom.dsiIndsIterSafeForRemoving"]], "dsilast() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiLast"]], "dsilinksdistribution() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiLinksDistribution"]], "dsilocalsubdomain() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.dsiLocalSubdomain"]], "dsilocalsubdomain() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiLocalSubdomain"]], "dsimember() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiMember"]], "dsimydist() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiMyDist"]], "dsiremove() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiRemove"]], "dsiserialwrite() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.dsiSerialWrite"]], "dsiserialwrite() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiSerialWrite"]], "dsisupportsautolocalaccess() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiSupportsAutoLocalAccess"]], "dsitargetlocales() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.dsiTargetLocales"]], "dsitargetlocales() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.dsiTargetLocales"]], "find() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.find"]], "getnnz() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.getNNZ"]], "init() (defaultsparse.defaultsparsearr method)": [[47, "DefaultSparse.DefaultSparseArr.init"]], "init() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.init"]], "linksdistribution() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.linksDistribution"]], "parsafe() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.parSafe"]], "rem_help() (defaultsparse.defaultsparsedom method)": [[47, "DefaultSparse.DefaultSparseDom.rem_help"]], "these() (defaultsparse.defaultsparsearr iterator)": [[47, "DefaultSparse.DefaultSparseArr.these"]], "these() (defaultsparse.defaultsparsedom iterator)": [[47, "DefaultSparse.DefaultSparseDom.these"]], "chpl__exportarg() (in module exportwrappers)": [[48, "ExportWrappers.chpl__exportArg"]], "chpl__exportret() (in module exportwrappers)": [[48, "ExportWrappers.chpl__exportRet"]], "chpl__exportretstringorbytes() (in module exportwrappers)": [[48, "ExportWrappers.chpl__exportRetStringOrBytes"]], "chpl__exporttypechplbytebuffer (in module exportwrappers)": [[48, "ExportWrappers.chpl__exportTypeChplByteBuffer"]], "chpl_byte_buffer (record in exportwrappers)": [[48, "ExportWrappers.chpl_byte_buffer"]], "chpl_byte_buffer_free() (in module exportwrappers)": [[48, "ExportWrappers.chpl_byte_buffer_free"]], "chpl_librarymodulelevelcleanup() (in module exportwrappers)": [[48, "ExportWrappers.chpl_libraryModuleLevelCleanup"]], "chpl_librarymodulelevelsetup() (in module exportwrappers)": [[48, "ExportWrappers.chpl_libraryModuleLevelSetup"]], "data (exportwrappers.chpl_byte_buffer attribute)": [[48, "ExportWrappers.chpl_byte_buffer.data"]], "isowned (exportwrappers.chpl_byte_buffer attribute)": [[48, "ExportWrappers.chpl_byte_buffer.isOwned"]], "size (exportwrappers.chpl_byte_buffer attribute)": [[48, "ExportWrappers.chpl_byte_buffer.size"]], "_instance (externalarray.chpl_opaque_array attribute)": [[49, "ExternalArray.chpl_opaque_array._instance"]], "_pid (externalarray.chpl_opaque_array attribute)": [[49, "ExternalArray.chpl_opaque_array._pid"]], "_unowned (externalarray.chpl_opaque_array attribute)": [[49, "ExternalArray.chpl_opaque_array._unowned"]], "chpl_call_free_func() (in module externalarray)": [[49, "ExternalArray.chpl_call_free_func"]], "chpl_external_array (record in externalarray)": [[49, "ExternalArray.chpl_external_array"]], "chpl_free_external_array() (in module externalarray)": [[49, "ExternalArray.chpl_free_external_array"]], "chpl_make_external_array() (in module externalarray)": [[49, "ExternalArray.chpl_make_external_array"]], "chpl_make_external_array_ptr() (in module externalarray)": [[49, "ExternalArray.chpl_make_external_array_ptr"]], "chpl_make_external_array_ptr_free() (in module externalarray)": [[49, "ExternalArray.chpl_make_external_array_ptr_free"]], "chpl_opaque_array (record in externalarray)": [[49, "ExternalArray.chpl_opaque_array"]], "cleanupopaquearray() (in module externalarray)": [[49, "ExternalArray.cleanupOpaqueArray"]], "convertstringorbytes() (in module externalarray)": [[49, "ExternalArray.convertStringOrBytes"]], "converttoexternalarray() (in module externalarray)": [[49, "ExternalArray.convertToExternalArray"]], "elts (externalarray.chpl_external_array attribute)": [[49, "ExternalArray.chpl_external_array.elts"]], "freer (externalarray.chpl_external_array attribute)": [[49, "ExternalArray.chpl_external_array.freer"]], "getexternalarraytype() (in module externalarray)": [[49, "ExternalArray.getExternalArrayType"]], "makearrayfromexternarray() (in module externalarray)": [[49, "ExternalArray.makeArrayFromExternArray"]], "makearrayfromopaque() (in module externalarray)": [[49, "ExternalArray.makeArrayFromOpaque"]], "makearrayfromptr() (in module externalarray)": [[49, "ExternalArray.makeArrayFromPtr"]], "num_elts (externalarray.chpl_external_array attribute)": [[49, "ExternalArray.chpl_external_array.num_elts"]], "cfi_error_base_addr_not_null (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_ERROR_BASE_ADDR_NOT_NULL"]], "cfi_error_base_addr_null (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_ERROR_BASE_ADDR_NULL"]], "cfi_error_mem_allocation (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_ERROR_MEM_ALLOCATION"]], "cfi_error_out_of_bounds (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_ERROR_OUT_OF_BOUNDS"]], "cfi_invalid_attribute (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_INVALID_ATTRIBUTE"]], "cfi_invalid_descriptor (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_INVALID_DESCRIPTOR"]], "cfi_invalid_elem_len (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_INVALID_ELEM_LEN"]], "cfi_invalid_extent (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_INVALID_EXTENT"]], "cfi_invalid_rank (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_INVALID_RANK"]], "cfi_invalid_type (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_INVALID_TYPE"]], "cfi_max_rank (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_MAX_RANK"]], "cfi_success (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_SUCCESS"]], "cfi_version (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_VERSION"]], "cfi__version_0001 (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI__VERSION_0001"]], "cfi__max_attribute (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI__max_attribute"]], "cfi__max_type (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI__max_type"]], "cfi_address() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_address"]], "cfi_allocate() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_allocate"]], "cfi_attribute_allocatable (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_attribute_allocatable"]], "cfi_attribute_other (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_attribute_other"]], "cfi_attribute_pointer (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_attribute_pointer"]], "cfi_attribute_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_attribute_t"]], "cfi_cdesc_t (record in iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_cdesc_t"]], "cfi_deallocate() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_deallocate"]], "cfi_dim_t (record in iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_dim_t"]], "cfi_establish() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_establish"]], "cfi_index_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_index_t"]], "cfi_is_contiguous() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_is_contiguous"]], "cfi_rank_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_rank_t"]], "cfi_section() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_section"]], "cfi_select_part() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_select_part"]], "cfi_setpointer() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_setpointer"]], "cfi_type_bool (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_Bool"]], "cfi_type_char (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_char"]], "cfi_type_cptr (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_cptr"]], "cfi_type_double (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_double"]], "cfi_type_double_complex (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_double_Complex"]], "cfi_type_float (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_float"]], "cfi_type_int (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int"]], "cfi_type_int16_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int16_t"]], "cfi_type_int32_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int32_t"]], "cfi_type_int64_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int64_t"]], "cfi_type_int8_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int8_t"]], "cfi_type_int_fast16_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_fast16_t"]], "cfi_type_int_fast32_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_fast32_t"]], "cfi_type_int_fast64_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_fast64_t"]], "cfi_type_int_fast8_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_fast8_t"]], "cfi_type_int_least16_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_least16_t"]], "cfi_type_int_least32_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_least32_t"]], "cfi_type_int_least64_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_least64_t"]], "cfi_type_int_least8_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_int_least8_t"]], "cfi_type_intmax_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_intmax_t"]], "cfi_type_intptr_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_intptr_t"]], "cfi_type_long (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_long"]], "cfi_type_long_double (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_long_double"]], "cfi_type_long_double_complex (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_long_double_Complex"]], "cfi_type_long_long (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_long_long"]], "cfi_type_other (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_other"]], "cfi_type_ptrdiff_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_ptrdiff_t"]], "cfi_type_short (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_short"]], "cfi_type_signed_char (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_signed_char"]], "cfi_type_size_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_size_t"]], "cfi_type_struct (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_struct"]], "cfi_type_t (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.CFI_type_t"]], "attribute (iso_fortran_binding.cfi_cdesc_t attribute)": [[50, "ISO_Fortran_binding.CFI_cdesc_t.attribute"]], "base_addr (iso_fortran_binding.cfi_cdesc_t attribute)": [[50, "ISO_Fortran_binding.CFI_cdesc_t.base_addr"]], "ctype (iso_fortran_binding.cfi_cdesc_t attribute)": [[50, "ISO_Fortran_binding.CFI_cdesc_t.ctype"]], "dim (iso_fortran_binding.cfi_cdesc_t attribute)": [[50, "ISO_Fortran_binding.CFI_cdesc_t.dim"]], "elem_len (iso_fortran_binding.cfi_cdesc_t attribute)": [[50, "ISO_Fortran_binding.CFI_cdesc_t.elem_len"]], "extent (iso_fortran_binding.cfi_dim_t attribute)": [[50, "ISO_Fortran_binding.CFI_dim_t.extent"]], "for_cfi_address() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_address"]], "for_cfi_allocate() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_allocate"]], "for_cfi_deallocate() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_deallocate"]], "for_cfi_establish() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_establish"]], "for_cfi_is_contiguous() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_is_contiguous"]], "for_cfi_section() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_section"]], "for_cfi_select_part() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_select_part"]], "for_cfi_setpointer() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.for_CFI_setpointer"]], "lower_bound (iso_fortran_binding.cfi_dim_t attribute)": [[50, "ISO_Fortran_binding.CFI_dim_t.lower_bound"]], "makearrayfromfortranarray() (in module iso_fortran_binding)": [[50, "ISO_Fortran_binding.makeArrayFromFortranArray"]], "rank (iso_fortran_binding.cfi_cdesc_t attribute)": [[50, "ISO_Fortran_binding.CFI_cdesc_t.rank"]], "sm (iso_fortran_binding.cfi_dim_t attribute)": [[50, "ISO_Fortran_binding.CFI_dim_t.sm"]], "version (iso_fortran_binding.cfi_cdesc_t attribute)": [[50, "ISO_Fortran_binding.CFI_cdesc_t.version"]], "chpl_dodirectexecuteon() (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.chpl_doDirectExecuteOn"]], "chpl_executeon() (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.chpl_executeOn"]], "chpl_executeonfast() (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.chpl_executeOnFast"]], "chpl_executeonnb() (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.chpl_executeOnNB"]], "chpl_getsubloc() (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.chpl_getSubloc"]], "chpl_task_setsubloc() (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.chpl_task_setSubloc"]], "debugapulocale (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.debugAPULocale"]], "localemodelhassublocales (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.localeModelHasSublocales"]], "localemodelpartitionsiterationonsublocales (in module localemodelhelpapu)": [[51, "LocaleModelHelpAPU.localeModelPartitionsIterationOnSublocales"]], "chpl_dodirectexecuteon() (in module localemodelhelpflat)": [[52, "LocaleModelHelpFlat.chpl_doDirectExecuteOn"]], "chpl_executeon() (in module localemodelhelpflat)": [[52, "LocaleModelHelpFlat.chpl_executeOn"]], "chpl_executeonfast() (in module localemodelhelpflat)": [[52, "LocaleModelHelpFlat.chpl_executeOnFast"]], "chpl_executeonnb() (in module localemodelhelpflat)": [[52, "LocaleModelHelpFlat.chpl_executeOnNB"]], "localemodelhassublocales (in module localemodelhelpflat)": [[52, "LocaleModelHelpFlat.localeModelHasSublocales"]], "localemodelpartitionsiterationonsublocales (in module localemodelhelpflat)": [[52, "LocaleModelHelpFlat.localeModelPartitionsIterationOnSublocales"]], "chpl_dodirectexecuteon() (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.chpl_doDirectExecuteOn"]], "chpl_executeon() (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.chpl_executeOn"]], "chpl_executeonfast() (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.chpl_executeOnFast"]], "chpl_executeonnb() (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.chpl_executeOnNB"]], "chpl_getsubloc() (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.chpl_getSubloc"]], "chpl_task_setsubloc() (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.chpl_task_setSubloc"]], "debuggpulocale (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.debugGPULocale"]], "localemodelhassublocales (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.localeModelHasSublocales"]], "localemodelpartitionsiterationonsublocales (in module localemodelhelpgpu)": [[53, "LocaleModelHelpGPU.localeModelPartitionsIterationOnSublocales"]], "chpl_here_aligned_alloc() (in module localemodelhelpmem)": [[54, "LocaleModelHelpMem.chpl_here_aligned_alloc"]], "chpl_here_alloc() (in module localemodelhelpmem)": [[54, "LocaleModelHelpMem.chpl_here_alloc"]], "chpl_here_calloc() (in module localemodelhelpmem)": [[54, "LocaleModelHelpMem.chpl_here_calloc"]], "chpl_here_free() (in module localemodelhelpmem)": [[54, "LocaleModelHelpMem.chpl_here_free"]], "chpl_here_good_alloc_size() (in module localemodelhelpmem)": [[54, "LocaleModelHelpMem.chpl_here_good_alloc_size"]], "chpl_here_realloc() (in module localemodelhelpmem)": [[54, "LocaleModelHelpMem.chpl_here_realloc"]], "chpl__initcopy() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl__initCopy"]], "chpl_buildlocaleid() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_buildLocaleID"]], "chpl_comm_execute_on() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_comm_execute_on"]], "chpl_comm_execute_on_fast() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_comm_execute_on_fast"]], "chpl_comm_execute_on_nb() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_comm_execute_on_nb"]], "chpl_comm_on_bundle_p (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_comm_on_bundle_p"]], "chpl_comm_on_bundle_t (record in localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_comm_on_bundle_t"]], "chpl_comm_on_bundle_task_bundle() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_comm_on_bundle_task_bundle"]], "chpl_comm_taskcallftable() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_comm_taskCallFTable"]], "chpl_ftable_call() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_ftable_call"]], "chpl_localeid_t (record in localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_localeID_t"]], "chpl_nodefromlocaleid() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_nodeFromLocaleID"]], "chpl_rt_buildlocaleid() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_rt_buildLocaleID"]], "chpl_rt_nodefromlocaleid() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_rt_nodeFromLocaleID"]], "chpl_rt_sublocfromlocaleid() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_rt_sublocFromLocaleID"]], "chpl_sublocfromlocaleid() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_sublocFromLocaleID"]], "chpl_taskaddbegin() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_taskAddBegin"]], "chpl_taskaddcostmt() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_taskAddCoStmt"]], "chpl_task_addtask() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_task_addTask"]], "chpl_task_bundle_p (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_task_bundle_p"]], "chpl_task_bundle_t (record in localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_task_bundle_t"]], "chpl_task_yield() (in module localemodelhelpruntime)": [[55, "LocaleModelHelpRuntime.chpl_task_yield"]], "accum() (localemodelhelpsetup.chpl_root_locale_accum method)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.accum"]], "chpl_nodeid() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.chpl_nodeID"]], "chpl_root_locale_accum (record in localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum"]], "debuglocalemodel (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.debugLocaleModel"]], "helpsetuplocaleapu() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupLocaleAPU"]], "helpsetuplocaleflat() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupLocaleFlat"]], "helpsetuplocalegpu() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupLocaleGPU"]], "helpsetuplocalenuma() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupLocaleNUMA"]], "helpsetuprootlocaleapu() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupRootLocaleAPU"]], "helpsetuprootlocaleflat() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupRootLocaleFlat"]], "helpsetuprootlocalegpu() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupRootLocaleGPU"]], "helpsetuprootlocalenuma() (in module localemodelhelpsetup)": [[56, "LocaleModelHelpSetup.helpSetupRootLocaleNUMA"]], "init() (localemodelhelpsetup.chpl_root_locale_accum method)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.init"]], "init=() (localemodelhelpsetup.chpl_root_locale_accum method)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.init="]], "maxtaskpar (localemodelhelpsetup.chpl_root_locale_accum attribute)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.maxTaskPar"]], "npuslogacc (localemodelhelpsetup.chpl_root_locale_accum attribute)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.nPUsLogAcc"]], "npuslogall (localemodelhelpsetup.chpl_root_locale_accum attribute)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.nPUsLogAll"]], "npusphysacc (localemodelhelpsetup.chpl_root_locale_accum attribute)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.nPUsPhysAcc"]], "npusphysall (localemodelhelpsetup.chpl_root_locale_accum attribute)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.nPUsPhysAll"]], "setrootlocalevalues() (localemodelhelpsetup.chpl_root_locale_accum method)": [[56, "LocaleModelHelpSetup.chpl_root_locale_accum.setRootLocaleValues"]], "localespace (in module localesarray)": [[57, "LocalesArray.LocaleSpace"]], "locales (in module localesarray)": [[57, "LocalesArray.Locales"]], "!=() (memconsistency.memory_order method)": [[58, "MemConsistency.memory_order.!="]], "=() (memconsistency.memory_order method)": [[58, "MemConsistency.memory_order.="]], "==() (memconsistency.memory_order method)": [[58, "MemConsistency.memory_order.=="]], "_defaultof() (in module memconsistency)": [[58, "MemConsistency._defaultOf"]], "c_memory_order() (in module memconsistency)": [[58, "MemConsistency.c_memory_order"]], "chpl_rmem_consist_acquire() (in module memconsistency)": [[58, "MemConsistency.chpl_rmem_consist_acquire"]], "chpl_rmem_consist_fence() (in module memconsistency)": [[58, "MemConsistency.chpl_rmem_consist_fence"]], "chpl_rmem_consist_maybe_acquire() (in module memconsistency)": [[58, "MemConsistency.chpl_rmem_consist_maybe_acquire"]], "chpl_rmem_consist_maybe_release() (in module memconsistency)": [[58, "MemConsistency.chpl_rmem_consist_maybe_release"]], "chpl_rmem_consist_release() (in module memconsistency)": [[58, "MemConsistency.chpl_rmem_consist_release"]], "memoryorder (enum in memconsistency)": [[58, "MemConsistency.memoryOrder"]], "memory_order (in module memconsistency)": [[58, "MemConsistency.memory_order"]], "memory_order_acq_rel (in module memconsistency)": [[58, "MemConsistency.memory_order_acq_rel"]], "memory_order_acquire (in module memconsistency)": [[58, "MemConsistency.memory_order_acquire"]], "memory_order_consume (in module memconsistency)": [[58, "MemConsistency.memory_order_consume"]], "memory_order_relaxed (in module memconsistency)": [[58, "MemConsistency.memory_order_relaxed"]], "memory_order_release (in module memconsistency)": [[58, "MemConsistency.memory_order_release"]], "memory_order_seq_cst (in module memconsistency)": [[58, "MemConsistency.memory_order_seq_cst"]], "readableorder() (in module memconsistency)": [[58, "MemConsistency.readableOrder"]], "serialize() (memconsistency.memory_order method)": [[58, "MemConsistency.memory_order.serialize"]], "cmemmax (in module memtracking)": [[59, "MemTracking.cMemMax"]], "cmemthreshold (in module memtracking)": [[59, "MemTracking.cMemThreshold"]], "chpl_memtracking_returnconfigvals() (in module memtracking)": [[59, "MemTracking.chpl_memTracking_returnConfigVals"]], "memleaks (in module memtracking)": [[59, "MemTracking.memLeaks"]], "memleaksbydesc (in module memtracking)": [[59, "MemTracking.memLeaksByDesc"]], "memleaksbytype (in module memtracking)": [[59, "MemTracking.memLeaksByType"]], "memleakslog (in module memtracking)": [[59, "MemTracking.memLeaksLog"]], "memlog (in module memtracking)": [[59, "MemTracking.memLog"]], "memmax (in module memtracking)": [[59, "MemTracking.memMax"]], "memstats (in module memtracking)": [[59, "MemTracking.memStats"]], "memthreshold (in module memtracking)": [[59, "MemTracking.memThreshold"]], "memtrack (in module memtracking)": [[59, "MemTracking.memTrack"]], "ratomicbool (record in networkatomics)": [[61, "NetworkAtomics.RAtomicBool"]], "ratomict (record in networkatomics)": [[61, "NetworkAtomics.RAtomicT"]], "_v (networkatomics.ratomicbool attribute)": [[61, "NetworkAtomics.RAtomicBool._v"]], "_v (networkatomics.ratomict attribute)": [[61, "NetworkAtomics.RAtomicT._v"]], "valtype (networkatomics.ratomict attribute)": [[61, "NetworkAtomics.RAtomicT.valType"]], "valtype() (networkatomics.ratomicbool method)": [[61, "NetworkAtomics.RAtomicBool.valType"]], ":() (in module ownedobject)": [[62, "OwnedObject.:"]], "<=>() (in module ownedobject)": [[62, "OwnedObject.<=>"]], "=() (in module ownedobject)": [[62, "OwnedObject.="]], "_owned (record in ownedobject)": [[62, "OwnedObject._owned"]], "_readwritehelper() (ownedobject._owned method)": [[62, "OwnedObject._owned._readWriteHelper"]], "adopt() (ownedobject._owned method)": [[62, "OwnedObject._owned.adopt"]], "borrow() (ownedobject._owned method)": [[62, "OwnedObject._owned.borrow"]], "chpl__autocopy() (in module ownedobject)": [[62, "OwnedObject.chpl__autoCopy"]], "chpl__autodestroy() (in module ownedobject)": [[62, "OwnedObject.chpl__autoDestroy"]], "chpl__initcopy() (in module ownedobject)": [[62, "OwnedObject.chpl__initCopy"]], "chpl_p (ownedobject._owned attribute)": [[62, "OwnedObject._owned.chpl_p"]], "chpl_t (ownedobject._owned attribute)": [[62, "OwnedObject._owned.chpl_t"]], "deinit() (ownedobject._owned method)": [[62, "OwnedObject._owned.deinit"]], "deserialize() (ownedobject._owned method)": [[62, "OwnedObject._owned.deserialize"]], "init() (ownedobject._owned method)": [[62, "OwnedObject._owned.init"]], "init=() (ownedobject._owned method)": [[62, "OwnedObject._owned.init="]], "release() (ownedobject._owned method)": [[62, "OwnedObject._owned.release"]], "serialize() (ownedobject._owned method)": [[62, "OwnedObject._owned.serialize"]], "initprint() (in module printmoduleinitorder)": [[63, "PrintModuleInitOrder.initPrint"]], "moduleinitlevel (in module printmoduleinitorder)": [[63, "PrintModuleInitOrder.moduleInitLevel"]], "printmoduleinit() (in module printmoduleinitorder)": [[63, "PrintModuleInitOrder.printModuleInit"]], "printmoduleinitorder (in module printmoduleinitorder)": [[63, "PrintModuleInitOrder.printModuleInitOrder"]], ":() (in module sharedobject)": [[64, "SharedObject.:"]], "<=>() (in module sharedobject)": [[64, "SharedObject.<=>"]], "=() (in module sharedobject)": [[64, "SharedObject.="]], "referencecount (class in sharedobject)": [[64, "SharedObject.ReferenceCount"]], "_readwritehelper() (sharedobject._shared method)": [[64, "SharedObject._shared._readWriteHelper"]], "_shared (record in sharedobject)": [[64, "SharedObject._shared"]], "adopt() (sharedobject._shared method)": [[64, "SharedObject._shared.adopt"]], "borrow() (sharedobject._shared method)": [[64, "SharedObject._shared.borrow"]], "chpl__autodestroy() (in module sharedobject)": [[64, "SharedObject.chpl__autoDestroy"]], "chpl_p (sharedobject._shared attribute)": [[64, "SharedObject._shared.chpl_p"]], "chpl_pn (sharedobject._shared attribute)": [[64, "SharedObject._shared.chpl_pn"]], "chpl_t (sharedobject._shared attribute)": [[64, "SharedObject._shared.chpl_t"]], "deinit() (sharedobject._shared method)": [[64, "SharedObject._shared.deinit"]], "deserialize() (sharedobject._shared method)": [[64, "SharedObject._shared.deserialize"]], "doclear() (sharedobject._shared method)": [[64, "SharedObject._shared.doClear"]], "downgrade() (sharedobject._shared method)": [[64, "SharedObject._shared.downgrade"]], "incrementweak() (sharedobject.referencecount method)": [[64, "SharedObject.ReferenceCount.incrementWeak"]], "init() (sharedobject.referencecount method)": [[64, "SharedObject.ReferenceCount.init"]], "init() (sharedobject._shared method)": [[64, "SharedObject._shared.init"]], "init=() (sharedobject._shared method)": [[64, "SharedObject._shared.init="]], "releasestrong() (sharedobject.referencecount method)": [[64, "SharedObject.ReferenceCount.releaseStrong"]], "releasetotal() (sharedobject.referencecount method)": [[64, "SharedObject.ReferenceCount.releaseTotal"]], "releaseweak() (sharedobject.referencecount method)": [[64, "SharedObject.ReferenceCount.releaseWeak"]], "retain() (sharedobject.referencecount method)": [[64, "SharedObject.ReferenceCount.retain"]], "serialize() (sharedobject._shared method)": [[64, "SharedObject._shared.serialize"]], "strongcount (sharedobject.referencecount attribute)": [[64, "SharedObject.ReferenceCount.strongCount"]], "totalcount (sharedobject.referencecount attribute)": [[64, "SharedObject.ReferenceCount.totalCount"]], "tryretainweak() (sharedobject.referencecount method)": [[64, "SharedObject.ReferenceCount.tryRetainWeak"]], "!() (string.byteindex method)": [[65, "String.byteIndex.!"]], "!() (string.codepointindex method)": [[65, "String.codepointIndex.!"]], "!=() (string.byteindex method)": [[65, "String.byteIndex.!="]], "!=() (string.codepointindex method)": [[65, "String.codepointIndex.!="]], "!=() (string.string method)": [[65, "String.string.!="]], "*() (in module string)": [[65, "String.*"]], "+() (string.byteindex method)": [[65, "String.byteIndex.+"]], "+() (string.codepointindex method)": [[65, "String.codepointIndex.+"]], "+() (string.string method)": [[65, "String.string.+"]], "+() (in module string)": [[65, "String.+"]], "+=() (string.string method)": [[65, "String.string.+="]], "-() (string.byteindex method)": [[65, "String.byteIndex.-"]], "-() (string.codepointindex method)": [[65, "String.codepointIndex.-"]], ":() (string.byteindex method)": [[65, "String.byteIndex.:"]], ":() (string.codepointindex method)": [[65, "String.codepointIndex.:"]], ":() (in module string)": [[65, "String.:"]], "<() (string.byteindex method)": [[65, "String.byteIndex.<"]], "<() (string.codepointindex method)": [[65, "String.codepointIndex.<"]], "<() (string.string method)": [[65, "String.string.<"]], "<=() (string.byteindex method)": [[65, "String.byteIndex.<="]], "<=() (string.codepointindex method)": [[65, "String.codepointIndex.<="]], "<=() (string.string method)": [[65, "String.string.<="]], "<=>() (string.string method)": [[65, "String.string.<=>"]], "=() (string.byteindex method)": [[65, "String.byteIndex.="]], "=() (string.codepointindex method)": [[65, "String.codepointIndex.="]], "=() (in module string)": [[65, "String.="]], "==() (string.byteindex method)": [[65, "String.byteIndex.=="]], "==() (string.codepointindex method)": [[65, "String.codepointIndex.=="]], "==() (string.string method)": [[65, "String.string.=="]], ">() (string.byteindex method)": [[65, "String.byteIndex.>"]], ">() (string.codepointindex method)": [[65, "String.codepointIndex.>"]], ">() (string.string method)": [[65, "String.string.>"]], ">=() (string.byteindex method)": [[65, "String.byteIndex.>="]], ">=() (string.codepointindex method)": [[65, "String.codepointIndex.>="]], ">=() (string.string method)": [[65, "String.string.>="]], "_bindex (string.byteindex attribute)": [[65, "String.byteIndex._bindex"]], "_cond_test() (in module string)": [[65, "String._cond_test"]], "_cpindexlen() (string._string iterator)": [[65, "String._string._cpIndexLen"]], "_cpindexlenhelpnoadjustment() (string._string method)": [[65, "String._string._cpIndexLenHelpNoAdjustment"]], "_cpindex (string.codepointindex attribute)": [[65, "String.codepointIndex._cpindex"]], "_indexlen() (string._string iterator)": [[65, "String._string._indexLen"]], "_string (record in string)": [[65, "String._string"]], "_string_contains() (in module string)": [[65, "String._string_contains"]], "appendcodepointvalues() (string.string method)": [[65, "String.string.appendCodepointValues"]], "buff (string._string attribute)": [[65, "String._string.buff"]], "bufflen (string._string attribute)": [[65, "String._string.buffLen"]], "buffsize (string._string attribute)": [[65, "String._string.buffSize"]], "byte() (string.string method)": [[65, "String.string.byte"]], "byteindex (record in string)": [[65, "String.byteIndex"]], "byteindices() (string._string method)": [[65, "String._string.byteIndices"]], "c_str() (string.string method)": [[65, "String.string.c_str"]], "cachednumcodepoints (string._string attribute)": [[65, "String._string.cachedNumCodepoints"]], "capitalize() (string._string method)": [[65, "String._string.capitalize"]], "chpl__deserialize() (string._string method)": [[65, "String._string.chpl__deserialize"]], "chpl__idxtoint() (in module string)": [[65, "String.chpl__idxToInt"]], "chpl__inttoidx() (in module string)": [[65, "String.chpl__intToIdx"]], "chpl__rangestridetype() (in module string)": [[65, "String.chpl__rangeStrideType"]], "chpl__rangeunsignedtype() (in module string)": [[65, "String.chpl__rangeUnsignedType"]], "chpl__serialize() (string._string method)": [[65, "String._string.chpl__serialize"]], "chpl_build_bounded_range() (in module string)": [[65, "String.chpl_build_bounded_range"]], "chpl_build_high_bounded_range() (in module string)": [[65, "String.chpl_build_high_bounded_range"]], "chpl_build_low_bounded_range() (in module string)": [[65, "String.chpl_build_low_bounded_range"]], "chpl_bytes() (string.string iterator)": [[65, "String.string.chpl_bytes"]], "chpl_createstringwithliteral() (in module string)": [[65, "String.chpl_createStringWithLiteral"]], "codepoint() (string.string method)": [[65, "String.string.codepoint"]], "codepointindex (record in string)": [[65, "String.codepointIndex"]], "codepointtostring() (in module string)": [[65, "String.codepointToString"]], "codepoints() (string.string iterator)": [[65, "String.string.codepoints"]], "count() (string.string method)": [[65, "String.string.count"]], "createadoptingbuffer() (string.string method)": [[65, "String.string.createAdoptingBuffer"]], "createborrowingbuffer() (string.string method)": [[65, "String.string.createBorrowingBuffer"]], "createcopyingbuffer() (string.string method)": [[65, "String.string.createCopyingBuffer"]], "dedent() (string.string method)": [[65, "String.string.dedent"]], "deinit() (string._string method)": [[65, "String._string.deinit"]], "dosearchutf8() (string._string method)": [[65, "String._string.doSearchUTF8"]], "dosplitwsutf8() (string._string iterator)": [[65, "String._string.doSplitWSUTF8"]], "dosplitwsutf8help() (string._string method)": [[65, "String._string.doSplitWSUTF8Help"]], "encode() (string.string method)": [[65, "String.string.encode"]], "endswith() (string.string method)": [[65, "String.string.endsWith"]], "find() (string.string method)": [[65, "String.string.find"]], "hasescapes (string._string attribute)": [[65, "String._string.hasEscapes"]], "hash() (string.string method)": [[65, "String.string.hash"]], "indices() (string.string method)": [[65, "String.string.indices"]], "init() (string._string method)": [[65, "String._string.init"]], "init() (string.byteindex method)": [[65, "String.byteIndex.init"]], "init() (string.codepointindex method)": [[65, "String.codepointIndex.init"]], "init=() (string._string method)": [[65, "String._string.init="]], "init=() (string.byteindex method)": [[65, "String.byteIndex.init="]], "init=() (string.codepointindex method)": [[65, "String.codepointIndex.init="]], "isascii() (string._string method)": [[65, "String._string.isASCII"]], "isalnum() (string.string method)": [[65, "String.string.isAlnum"]], "isalpha() (string.string method)": [[65, "String.string.isAlpha"]], "isdigit() (string.string method)": [[65, "String.string.isDigit"]], "isempty() (string.string method)": [[65, "String.string.isEmpty"]], "islower() (string.string method)": [[65, "String.string.isLower"]], "isowned (string._string attribute)": [[65, "String._string.isOwned"]], "isprintable() (string.string method)": [[65, "String.string.isPrintable"]], "isspace() (string.string method)": [[65, "String.string.isSpace"]], "istitle() (string.string method)": [[65, "String.string.isTitle"]], "isupper() (string.string method)": [[65, "String.string.isUpper"]], "item() (string.string method)": [[65, "String.string.item"]], "items() (string.string iterator)": [[65, "String.string.items"]], "join() (string._string method)": [[65, "String._string.join"]], "join() (string.string method)": [[65, "String.string.join"]], "locale_id (string._string attribute)": [[65, "String._string.locale_id"]], "localize() (string.string method)": [[65, "String.string.localize"]], "numbytes() (string.string method)": [[65, "String.string.numBytes"]], "numcodepoints() (string.string method)": [[65, "String.string.numCodepoints"]], "replace() (string.string method)": [[65, "String.string.replace"]], "rfind() (string.string method)": [[65, "String.string.rfind"]], "serialize() (string._string method)": [[65, "String._string.serialize"]], "serialize() (string.byteindex method)": [[65, "String.byteIndex.serialize"]], "serialize() (string.codepointindex method)": [[65, "String.codepointIndex.serialize"]], "size() (string.string method)": [[65, "String.string.size"]], "split() (string.string iterator)": [[65, "String.string.split"]], "startswith() (string.string method)": [[65, "String.string.startsWith"]], "string (in module string)": [[65, "String.string"]], "strip() (string.string method)": [[65, "String.string.strip"]], "substring() (string._string method)": [[65, "String._string.substring"]], "these() (string.string iterator)": [[65, "String.string.these"]], "this() (string.string method)": [[65, "String.string.this"]], "tobyte() (string.string method)": [[65, "String.string.toByte"]], "tocodepoint() (string.string method)": [[65, "String.string.toCodepoint"]], "tolower() (string.string method)": [[65, "String.string.toLower"]], "totitle() (string.string method)": [[65, "String.string.toTitle"]], "toupper() (string.string method)": [[65, "String.string.toUpper"]], "usecachednumcodepoints (in module string)": [[65, "String.useCachedNumCodepoints"]], "wint_t (in module string)": [[65, "String.wint_t"]], "chpl_createstringwithborrowedbuffernv() (in module nvstringfactory)": [[66, "NVStringFactory.chpl_createStringWithBorrowedBufferNV"]], "chpl_createstringwithnewbuffernv() (in module nvstringfactory)": [[66, "NVStringFactory.chpl_createStringWithNewBufferNV"]], "chpl_createstringwithownedbuffernv() (in module nvstringfactory)": [[66, "NVStringFactory.chpl_createStringWithOwnedBufferNV"]], ":() (in module stringcasts)": [[67, "StringCasts.:"]], "_real_cast_helper() (in module stringcasts)": [[67, "StringCasts._real_cast_helper"]]}})
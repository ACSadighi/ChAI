AST dump for HaltWrappers after pass cleanup.
Module use list: 

{
  (386992 'use' ChapelStandard)
  function initHalt[291](arg s[294] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (299 call halt s)
  }
  function iterHalt[303](arg s[306] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (311 call halt s)
  }
  function pureVirtualMethodHalt[315]() : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (319 call halt "pure virtual method called")
  }
  function exhaustiveSelectHalt[325](arg s[328] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (333 call halt s)
  }
  function zipLengthHalt[337](arg s[340] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (345 call halt s)
  }
  function outOfMemoryHalt[349](arg s[352] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (359 'use' CTypes 'only' c_str)
    const err[362] "const"(363 call +(365 call + "Out of memory allocating \"" s) "\"")
    (375 'end of statement')
    (376 'chpl_error'(389 call(386 call .(383 call(380 call . err c"localize")) c"c_str")))
  }
  function nilCheckHalt[392](arg s[395] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (400 call halt s)
  }
  function boundsCheckHalt[404](arg s[407] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (412 call halt s)
  }
  function formalDomainCheckHalt[416](arg s[419] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (424 call halt s)
  }
  function localCheckHalt[428](arg s[431] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (436 call halt s)
  }
  function safeCastCheckHalt[440](arg s[443] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (448 call halt s)
  }
  function divByZeroCheckHalt[452](arg s[455] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (460 call halt s)
  }
  function unimplementedFeatureHalt[464](arg feature[467] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (472 call halt feature(474 call +(476 call + " is currently not supported\n" "  (please feel encouraged to file a GitHub issue requesting this:\n") "   https://github.com/chapel-lang/chapel/issues)"))
  }
  function unimplementedFeatureHalt[489](arg subject[492] :
  string[244], arg feature[496] :
  string[244]) : _unknown[42] "always propagate line file info" "function terminates program" "no return value for void"
  {
    (501 call halt subject " doesn't support " feature(507 call +(509 call + " yet\n" "  (please feel encouraged to file a GitHub issue requesting this:\n") "   https://github.com/chapel-lang/chapel/issues)"))
  }
}
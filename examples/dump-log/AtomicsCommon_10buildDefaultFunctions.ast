AST dump for AtomicsCommon after pass buildDefaultFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[468399]() : void[4] "insert line file info" "module init"
  {
    (600080 return _void[46])
  }
  function atomic_refcnt[92033].init[91852](arg _mt[91856]:_MT[201], ref arg this[91854]:atomic_refcnt[92033]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown _cnt[520426] "temp"
    unknown call_tmp[773777] "expr temp" "maybe param" "maybe type" "temp"
    (773780 'move' call_tmp[773777](520429 call chpl__processorAtomicType int(64)[10]))
    (520431 'default init var' _cnt[520426] call_tmp[773777])
    (520433 '.=' this[91854] c"_cnt" _cnt[520426])
    (550532 'end of statement')
    (600032 return _void[46])
  }
  function atomic_refcnt[92033].init=[91861](arg _mt[91869]:_MT[201], ref arg this[91863]:atomic_refcnt[92033], arg other[91866]:atomic_refcnt[92033]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown _cnt[520437] "temp"
    unknown call_tmp[773782] "expr temp" "maybe param" "maybe type" "temp"
    (773785 'move' call_tmp[773782](520440 call chpl__processorAtomicType int(64)[10]))
    (520442 'default init var' _cnt[520437] call_tmp[773782])
    (520444 '.=' this[91863] c"_cnt" _cnt[520437])
    (550533 'end of statement')
    (520448 'init done')
    (550534 'end of statement')
    unknown call_tmp[773789] "expr temp" "maybe param" "maybe type" "temp"
    (773792 'move' call_tmp[773789](91880 call _cnt _mt[203] this[91863]))
    unknown call_tmp[773798] "expr temp" "maybe param" "maybe type" "temp"
    (773801 'move' call_tmp[773798](91888 call _cnt _mt[203] other[91866]))
    unknown call_tmp[773805] "expr temp" "maybe param" "maybe type" "temp"
    (773808 'move' call_tmp[773805](91894 call(91891 call (partial) read _mt[203] call_tmp[773798])))
    (91886 call(91883 call (partial) init_helper _mt[203] call_tmp[773789]) call_tmp[773805])
    (600034 return _void[46])
  }
  function atomic_refcnt[92033].inc[91897](arg _mt[91905]:_MT[201], arg this[91899]:atomic_refcnt[92033], arg cnt[91902] :
  1 =
  1) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[773810] "expr temp" "maybe param" "maybe type" "temp"
    (773813 'move' call_tmp[773810](91928 call _cond_test 1))
    if call_tmp[773810]
    {
      unknown call_tmp[773817] "expr temp" "maybe param" "maybe type" "temp"
      (773820 'move' call_tmp[773817](400735 call _cnt _mt[203] this[91899]))
      (91912 call(91909 call (partial) add _mt[203] call_tmp[773817]) cnt[91902](order = relaxed[81224]))
    }
    {
      unknown call_tmp[773826] "expr temp" "maybe param" "maybe type" "temp"
      (773829 'move' call_tmp[773826](400741 call _cnt _mt[203] this[91899]))
      (91924 call(91921 call (partial) add _mt[203] call_tmp[773826]) cnt[91902])
    }
    (600036 return _void[46])
  }
  function atomic_refcnt[92033].dec[91936](arg _mt[91940]:_MT[201], arg this[91938]:atomic_refcnt[92033]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[600040] "RVV" "temp"
    unknown got[91947] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[644587] "maybe param" "maybe type" "temp"
    (644595 'move' type_tmp[644587](644593 call int(64)[10] 64))
    (644589 'init var split decl' got[91947] type_tmp[644587])
    (91952 'end of statement')
    unknown call_tmp[773833] "expr temp" "maybe param" "maybe type" "temp"
    (773836 'move' call_tmp[773833](92006 call _cond_test 1))
    if call_tmp[773833]
    {
      unknown call_tmp[773840] "expr temp" "maybe param" "maybe type" "temp"
      (773843 'move' call_tmp[773840](400746 call _cnt _mt[203] this[91938]))
      unknown call_tmp[773847] "maybe param" "maybe type" "temp"
      (773850 'move' call_tmp[773847](91961 call(91958 call (partial) fetchSub _mt[203] call_tmp[773840]) 1(order = release[81220])))
      (644597 'init var split init' got[91947] call_tmp[773847] type_tmp[644587])
      (550538 'end of statement' got[91947])
      unknown call_tmp[773852] "expr temp" "maybe param" "maybe type" "temp"
      (773855 'move' call_tmp[773852](91977 call == got[91947] 1))
      unknown call_tmp[773857] "expr temp" "maybe param" "maybe type" "temp"
      (773860 'move' call_tmp[773857](91981 call _cond_test call_tmp[773852]))
      if call_tmp[773857]
      {
        (91970 call atomicFence acquire[81222])
        (550540 'end of statement')
        unknown call_tmp[773862] "expr temp" "maybe param" "maybe type" "temp"
        (773865 'move' call_tmp[773862](600045 call int(64)[10] 64))
        (600048 'move' ret[600040](600047 'coerce' 0 call_tmp[773862]))
        gotoReturn _end_dec[600038] _end_dec[600038]
      }
      unknown call_tmp[773867] "expr temp" "maybe param" "maybe type" "temp"
      (773870 'move' call_tmp[773867](91986 call - got[91947] 1))
      unknown call_tmp[773872] "expr temp" "maybe param" "maybe type" "temp"
      (773875 'move' call_tmp[773872](600053 call int(64)[10] 64))
      (600056 'move' ret[600040](600055 'coerce' call_tmp[773867] call_tmp[773872]))
      gotoReturn _end_dec[600038] _end_dec[600038]
      (550542 'end of statement' got[91947])
    }
    {
      unknown call_tmp[773879] "expr temp" "maybe param" "maybe type" "temp"
      (773882 'move' call_tmp[773879](400753 call _cnt _mt[203] this[91938]))
      unknown call_tmp[773886] "maybe param" "maybe type" "temp"
      (773889 'move' call_tmp[773886](91998 call(91995 call (partial) fetchSub _mt[203] call_tmp[773879]) 1))
      (644600 'init var split init' got[91947] call_tmp[773886] type_tmp[644587])
      (550544 'end of statement' got[91947])
      unknown call_tmp[773891] "expr temp" "maybe param" "maybe type" "temp"
      (773894 'move' call_tmp[773891](92001 call - got[91947] 1))
      unknown call_tmp[773896] "expr temp" "maybe param" "maybe type" "temp"
      (773899 'move' call_tmp[773896](600061 call int(64)[10] 64))
      (600064 'move' ret[600040](600063 'coerce' call_tmp[773891] call_tmp[773896]))
      gotoReturn _end_dec[600038] _end_dec[600038]
      (550546 'end of statement' got[91947])
    }
    label _end_dec[600038]
    (600042 return ret[600040])
  }
  { scopeless type
    (91943 call int(64)[10] 64)
  }
  function atomic_refcnt[92033].read[92013](arg _mt[92017]:_MT[201], arg this[92015]:atomic_refcnt[92033]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[600070] "RVV" "temp"
    unknown call_tmp[773903] "expr temp" "maybe param" "maybe type" "temp"
    (773906 'move' call_tmp[773903](400758 call _cnt _mt[203] this[92015]))
    unknown call_tmp[773910] "expr temp" "maybe param" "maybe type" "temp"
    (773913 'move' call_tmp[773910](92028 call(92025 call (partial) read _mt[203] call_tmp[773903])))
    unknown call_tmp[773915] "expr temp" "maybe param" "maybe type" "temp"
    (773918 'move' call_tmp[773915](600075 call int(64)[10] 64))
    (600078 'move' ret[600070](600077 'coerce' call_tmp[773910] call_tmp[773915]))
    (600072 return ret[600070])
  }
  { scopeless type
    (92020 call int(64)[10] 64)
  }
  function atomic_refcnt[92033]._cnt[1068860](arg _mt[1068862]:_MT[201], ref arg this[1068864]:atomic_refcnt[92033]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1068874] "RVV" "temp"
    unknown call_tmp[1068881] "expr temp" "maybe param" "maybe type" "temp"
    (1068884 'move' call_tmp[1068881](1068868 '.' this[1068864] c"_cnt"))
    (1068879 'move' ret[1068874](1068878 'addr of' call_tmp[1068881]))
    (1068876 return ret[1068874])
  }
  function atomic_refcnt[92033].deinit[1068886](arg _mt[1068888]:_MT[201], arg this[1068890]:atomic_refcnt[92033]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1068898 return _void[46])
  }
  function atomic_refcnt[92033].serialize[1068900](arg _mt[1068904]:_MT[201], arg this[1068902]:atomic_refcnt[92033], arg writer[1068903]:_any[141](?), ref arg serializer[1068908]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1068911 call serializeDefaultImpl writer[1068903] serializer[1068908] this[1068902])
    (1068917 return _void[46])
  }
  function atomic_refcnt[92033].deserialize[1068919](arg _mt[1068923]:_MT[201], ref arg this[1068921]:atomic_refcnt[92033], arg reader[1068922]:_any[141](?), ref arg deserializer[1068928]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1068930] "temp"
    (1068932 'move' _deser_temp[1068930] this[1068921])
    (1068935 call deserializeDefaultImpl reader[1068922] deserializer[1068928] _deser_temp[1068930])
    (1068941 return _void[46])
  }
  function atomic_refcnt[92033].=[1068943](arg _mt[1068945]:_MT[201], arg this[1068947]:atomic_refcnt[92033], ref arg _arg1[1068949]:atomic_refcnt[92033], const?  ref arg _arg2[1068950]:atomic_refcnt[92033]) : void[4] "assignop" "compiler generated" "last resort" "method" "operator"
  {
    unknown call_tmp[1068976] "expr temp" "maybe param" "maybe type" "temp"
    (1068979 'move' call_tmp[1068976](1068960 call _cnt _mt[203] _arg1[1068949]))
    unknown call_tmp[1068983] "expr temp" "maybe param" "maybe type" "temp"
    (1068986 'move' call_tmp[1068983](1068964 call _cnt _mt[203] _arg2[1068950]))
    (1068968 call = call_tmp[1068976] call_tmp[1068983])
    (1068972 return _void[46])
  }
  where {
    unknown call_tmp[1068988] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1068991 'move' call_tmp[1068988](1068953 'typeof' _arg1[1068949]))
    unknown call_tmp[1068993] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1068996 'move' call_tmp[1068993](1068955 'typeof' _arg2[1068950]))
    (1068957 call == call_tmp[1068988] call_tmp[1068993])
  }
  function atomic_refcnt[92033].hash[1068998](arg _mt[1069001]:_MT[201], arg this[1069000]:atomic_refcnt[92033]) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1069015] "RVV" "temp"
    unknown call_tmp[1069022] "expr temp" "maybe param" "maybe type" "temp"
    (1069025 'move' call_tmp[1069022](1069004 call _cnt _mt[203] this[1069000]))
    unknown call_tmp[1069027] "expr temp" "maybe param" "maybe type" "temp"
    (1069030 'move' call_tmp[1069027](1069008 call chpl__defaultHashWrapperInner call_tmp[1069022]))
    (1069020 'move' ret[1069015](1069019 'deref' call_tmp[1069027]))
    (1069017 return ret[1069015])
  }
  function chpl_fields_are_comparable[1069048](arg _arg1[1069050]:atomic_refcnt[92033], arg _arg2[1069051]:atomic_refcnt[92033]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1069069]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1069076] "expr temp" "maybe param" "maybe type" "temp"
    (1069079 'move' call_tmp[1069076](1069054 call _cnt _mt[203] _arg1[1069050]))
    unknown call_tmp[1069081] "expr temp" "maybe param" "maybe type" "temp"
    (1069084 'move' call_tmp[1069081](1069058 call _cnt _mt[203] _arg2[1069051]))
    unknown call_tmp[1069086] "expr temp" "maybe param" "maybe type" "temp"
    (1069089 'move' call_tmp[1069086](1069062 'call resolves' c"==" call_tmp[1069076] call_tmp[1069081]))
    (1069074 'move' ret[1069069](1069073 'deref' call_tmp[1069086]))
    (1069071 return ret[1069069])
  }
  function atomic_refcnt[92033].==[1069032](arg _mt[1069034]:_MT[201], arg this[1069036]:atomic_refcnt[92033], arg _arg1[1069038]:atomic_refcnt[92033], arg _arg2[1069039]:atomic_refcnt[92033]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1069118]:bool[19] "RVV" "temp"
    unknown call_tmp[1069130] "expr temp" "maybe param" "maybe type" "temp"
    (1069133 'move' call_tmp[1069130](1069097 call _cnt _mt[203] _arg1[1069038]))
    unknown call_tmp[1069135] "expr temp" "maybe param" "maybe type" "temp"
    (1069138 'move' call_tmp[1069135](1069101 call _cnt _mt[203] _arg2[1069039]))
    unknown call_tmp[1069140] "expr temp" "maybe param" "maybe type" "temp"
    (1069143 'move' call_tmp[1069140](1069105 call chpl_field_neq call_tmp[1069130] call_tmp[1069135]))
    if call_tmp[1069140]
    {
      (1069123 'move' ret[1069118](1069122 'deref' 0))
      gotoReturn _end_==[1069116] _end_==[1069116]
    }
    (1069128 'move' ret[1069118](1069127 'deref' 1))
    label _end_==[1069116]
    (1069120 return ret[1069118])
  }
  where {
    unknown call_tmp[1069145] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069148 'move' call_tmp[1069145](1069042 'typeof' _arg1[1069038]))
    unknown call_tmp[1069150] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069153 'move' call_tmp[1069150](1069044 'typeof' _arg2[1069039]))
    unknown call_tmp[1069155] "expr temp" "maybe param" "maybe type" "temp"
    (1069158 'move' call_tmp[1069155](1069046 call == call_tmp[1069145] call_tmp[1069150]))
    unknown call_tmp[1069160] "expr temp" "maybe param" "maybe type" "temp"
    (1069163 'move' call_tmp[1069160](1069091 call chpl_fields_are_comparable[1069048] _arg1[1069038] _arg2[1069039]))
    (1069095 '&' call_tmp[1069155] call_tmp[1069160])
  }
  function chpl_fields_are_comparable[1069181](arg _arg1[1069183]:atomic_refcnt[92033], arg _arg2[1069184]:atomic_refcnt[92033]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1069202]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1069209] "expr temp" "maybe param" "maybe type" "temp"
    (1069212 'move' call_tmp[1069209](1069187 call _cnt _mt[203] _arg1[1069183]))
    unknown call_tmp[1069214] "expr temp" "maybe param" "maybe type" "temp"
    (1069217 'move' call_tmp[1069214](1069191 call _cnt _mt[203] _arg2[1069184]))
    unknown call_tmp[1069219] "expr temp" "maybe param" "maybe type" "temp"
    (1069222 'move' call_tmp[1069219](1069195 'call resolves' c"!=" call_tmp[1069209] call_tmp[1069214]))
    (1069207 'move' ret[1069202](1069206 'deref' call_tmp[1069219]))
    (1069204 return ret[1069202])
  }
  function atomic_refcnt[92033].!=[1069165](arg _mt[1069167]:_MT[201], arg this[1069169]:atomic_refcnt[92033], arg _arg1[1069171]:atomic_refcnt[92033], arg _arg2[1069172]:atomic_refcnt[92033]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1069251]:bool[19] "RVV" "temp"
    unknown call_tmp[1069263] "expr temp" "maybe param" "maybe type" "temp"
    (1069266 'move' call_tmp[1069263](1069230 call _cnt _mt[203] _arg1[1069171]))
    unknown call_tmp[1069268] "expr temp" "maybe param" "maybe type" "temp"
    (1069271 'move' call_tmp[1069268](1069234 call _cnt _mt[203] _arg2[1069172]))
    unknown call_tmp[1069273] "expr temp" "maybe param" "maybe type" "temp"
    (1069276 'move' call_tmp[1069273](1069238 call chpl_field_neq call_tmp[1069263] call_tmp[1069268]))
    if call_tmp[1069273]
    {
      (1069256 'move' ret[1069251](1069255 'deref' 1))
      gotoReturn _end_!=[1069249] _end_!=[1069249]
    }
    (1069261 'move' ret[1069251](1069260 'deref' 0))
    label _end_!=[1069249]
    (1069253 return ret[1069251])
  }
  where {
    unknown call_tmp[1069278] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069281 'move' call_tmp[1069278](1069175 'typeof' _arg1[1069171]))
    unknown call_tmp[1069283] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069286 'move' call_tmp[1069283](1069177 'typeof' _arg2[1069172]))
    unknown call_tmp[1069288] "expr temp" "maybe param" "maybe type" "temp"
    (1069291 'move' call_tmp[1069288](1069179 call == call_tmp[1069278] call_tmp[1069283]))
    unknown call_tmp[1069293] "expr temp" "maybe param" "maybe type" "temp"
    (1069296 'move' call_tmp[1069293](1069224 call chpl_fields_are_comparable[1069181] _arg1[1069171] _arg2[1069172]))
    (1069228 '&' call_tmp[1069288] call_tmp[1069293])
  }
  function chpl_fields_are_comparable[1069314](arg _arg1[1069316]:atomic_refcnt[92033], arg _arg2[1069317]:atomic_refcnt[92033]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1069335]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1069342] "expr temp" "maybe param" "maybe type" "temp"
    (1069345 'move' call_tmp[1069342](1069320 call _cnt _mt[203] _arg1[1069316]))
    unknown call_tmp[1069347] "expr temp" "maybe param" "maybe type" "temp"
    (1069350 'move' call_tmp[1069347](1069324 call _cnt _mt[203] _arg2[1069317]))
    unknown call_tmp[1069352] "expr temp" "maybe param" "maybe type" "temp"
    (1069355 'move' call_tmp[1069352](1069328 'call resolves' c"<" call_tmp[1069342] call_tmp[1069347]))
    (1069340 'move' ret[1069335](1069339 'deref' call_tmp[1069352]))
    (1069337 return ret[1069335])
  }
  function atomic_refcnt[92033].<[1069298](arg _mt[1069300]:_MT[201], arg this[1069302]:atomic_refcnt[92033], arg _arg1[1069304]:atomic_refcnt[92033], arg _arg2[1069305]:atomic_refcnt[92033]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1069399]:bool[19] "RVV" "temp"
    unknown call_tmp[1069416] "expr temp" "maybe param" "maybe type" "temp"
    (1069419 'move' call_tmp[1069416](1069363 call _cnt _mt[203] _arg1[1069304]))
    unknown call_tmp[1069421] "expr temp" "maybe param" "maybe type" "temp"
    (1069424 'move' call_tmp[1069421](1069367 call _cnt _mt[203] _arg2[1069305]))
    unknown call_tmp[1069426] "expr temp" "maybe param" "maybe type" "temp"
    (1069429 'move' call_tmp[1069426](1069371 call chpl_field_lt call_tmp[1069416] call_tmp[1069421]))
    if call_tmp[1069426]
    {
      (1069404 'move' ret[1069399](1069403 'deref' 1))
      gotoReturn _end_<[1069397] _end_<[1069397]
    }
    unknown call_tmp[1069431] "expr temp" "maybe param" "maybe type" "temp"
    (1069434 'move' call_tmp[1069431](1069377 call _cnt _mt[203] _arg1[1069304]))
    unknown call_tmp[1069436] "expr temp" "maybe param" "maybe type" "temp"
    (1069439 'move' call_tmp[1069436](1069381 call _cnt _mt[203] _arg2[1069305]))
    unknown call_tmp[1069441] "expr temp" "maybe param" "maybe type" "temp"
    (1069444 'move' call_tmp[1069441](1069385 call chpl_field_gt call_tmp[1069431] call_tmp[1069436]))
    if call_tmp[1069441]
    {
      (1069409 'move' ret[1069399](1069408 'deref' 0))
      gotoReturn _end_<[1069397] _end_<[1069397]
    }
    (1069414 'move' ret[1069399](1069413 'deref' 0))
    label _end_<[1069397]
    (1069401 return ret[1069399])
  }
  where {
    unknown call_tmp[1069446] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069449 'move' call_tmp[1069446](1069308 'typeof' _arg1[1069304]))
    unknown call_tmp[1069451] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069454 'move' call_tmp[1069451](1069310 'typeof' _arg2[1069305]))
    unknown call_tmp[1069456] "expr temp" "maybe param" "maybe type" "temp"
    (1069459 'move' call_tmp[1069456](1069312 call == call_tmp[1069446] call_tmp[1069451]))
    unknown call_tmp[1069461] "expr temp" "maybe param" "maybe type" "temp"
    (1069464 'move' call_tmp[1069461](1069357 call chpl_fields_are_comparable[1069314] _arg1[1069304] _arg2[1069305]))
    (1069361 '&' call_tmp[1069456] call_tmp[1069461])
  }
  function chpl_fields_are_comparable[1069482](arg _arg1[1069484]:atomic_refcnt[92033], arg _arg2[1069485]:atomic_refcnt[92033]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1069503]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1069510] "expr temp" "maybe param" "maybe type" "temp"
    (1069513 'move' call_tmp[1069510](1069488 call _cnt _mt[203] _arg1[1069484]))
    unknown call_tmp[1069515] "expr temp" "maybe param" "maybe type" "temp"
    (1069518 'move' call_tmp[1069515](1069492 call _cnt _mt[203] _arg2[1069485]))
    unknown call_tmp[1069520] "expr temp" "maybe param" "maybe type" "temp"
    (1069523 'move' call_tmp[1069520](1069496 'call resolves' c"<=" call_tmp[1069510] call_tmp[1069515]))
    (1069508 'move' ret[1069503](1069507 'deref' call_tmp[1069520]))
    (1069505 return ret[1069503])
  }
  function atomic_refcnt[92033].<=[1069466](arg _mt[1069468]:_MT[201], arg this[1069470]:atomic_refcnt[92033], arg _arg1[1069472]:atomic_refcnt[92033], arg _arg2[1069473]:atomic_refcnt[92033]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1069567]:bool[19] "RVV" "temp"
    unknown call_tmp[1069584] "expr temp" "maybe param" "maybe type" "temp"
    (1069587 'move' call_tmp[1069584](1069531 call _cnt _mt[203] _arg1[1069472]))
    unknown call_tmp[1069589] "expr temp" "maybe param" "maybe type" "temp"
    (1069592 'move' call_tmp[1069589](1069535 call _cnt _mt[203] _arg2[1069473]))
    unknown call_tmp[1069594] "expr temp" "maybe param" "maybe type" "temp"
    (1069597 'move' call_tmp[1069594](1069539 call chpl_field_lt call_tmp[1069584] call_tmp[1069589]))
    if call_tmp[1069594]
    {
      (1069572 'move' ret[1069567](1069571 'deref' 1))
      gotoReturn _end_<=[1069565] _end_<=[1069565]
    }
    unknown call_tmp[1069599] "expr temp" "maybe param" "maybe type" "temp"
    (1069602 'move' call_tmp[1069599](1069545 call _cnt _mt[203] _arg1[1069472]))
    unknown call_tmp[1069604] "expr temp" "maybe param" "maybe type" "temp"
    (1069607 'move' call_tmp[1069604](1069549 call _cnt _mt[203] _arg2[1069473]))
    unknown call_tmp[1069609] "expr temp" "maybe param" "maybe type" "temp"
    (1069612 'move' call_tmp[1069609](1069553 call chpl_field_gt call_tmp[1069599] call_tmp[1069604]))
    if call_tmp[1069609]
    {
      (1069577 'move' ret[1069567](1069576 'deref' 0))
      gotoReturn _end_<=[1069565] _end_<=[1069565]
    }
    (1069582 'move' ret[1069567](1069581 'deref' 1))
    label _end_<=[1069565]
    (1069569 return ret[1069567])
  }
  where {
    unknown call_tmp[1069614] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069617 'move' call_tmp[1069614](1069476 'typeof' _arg1[1069472]))
    unknown call_tmp[1069619] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069622 'move' call_tmp[1069619](1069478 'typeof' _arg2[1069473]))
    unknown call_tmp[1069624] "expr temp" "maybe param" "maybe type" "temp"
    (1069627 'move' call_tmp[1069624](1069480 call == call_tmp[1069614] call_tmp[1069619]))
    unknown call_tmp[1069629] "expr temp" "maybe param" "maybe type" "temp"
    (1069632 'move' call_tmp[1069629](1069525 call chpl_fields_are_comparable[1069482] _arg1[1069472] _arg2[1069473]))
    (1069529 '&' call_tmp[1069624] call_tmp[1069629])
  }
  function chpl_fields_are_comparable[1069650](arg _arg1[1069652]:atomic_refcnt[92033], arg _arg2[1069653]:atomic_refcnt[92033]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1069671]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1069678] "expr temp" "maybe param" "maybe type" "temp"
    (1069681 'move' call_tmp[1069678](1069656 call _cnt _mt[203] _arg1[1069652]))
    unknown call_tmp[1069683] "expr temp" "maybe param" "maybe type" "temp"
    (1069686 'move' call_tmp[1069683](1069660 call _cnt _mt[203] _arg2[1069653]))
    unknown call_tmp[1069688] "expr temp" "maybe param" "maybe type" "temp"
    (1069691 'move' call_tmp[1069688](1069664 'call resolves' c">" call_tmp[1069678] call_tmp[1069683]))
    (1069676 'move' ret[1069671](1069675 'deref' call_tmp[1069688]))
    (1069673 return ret[1069671])
  }
  function atomic_refcnt[92033].>[1069634](arg _mt[1069636]:_MT[201], arg this[1069638]:atomic_refcnt[92033], arg _arg1[1069640]:atomic_refcnt[92033], arg _arg2[1069641]:atomic_refcnt[92033]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1069735]:bool[19] "RVV" "temp"
    unknown call_tmp[1069752] "expr temp" "maybe param" "maybe type" "temp"
    (1069755 'move' call_tmp[1069752](1069699 call _cnt _mt[203] _arg1[1069640]))
    unknown call_tmp[1069757] "expr temp" "maybe param" "maybe type" "temp"
    (1069760 'move' call_tmp[1069757](1069703 call _cnt _mt[203] _arg2[1069641]))
    unknown call_tmp[1069762] "expr temp" "maybe param" "maybe type" "temp"
    (1069765 'move' call_tmp[1069762](1069707 call chpl_field_gt call_tmp[1069752] call_tmp[1069757]))
    if call_tmp[1069762]
    {
      (1069740 'move' ret[1069735](1069739 'deref' 1))
      gotoReturn _end_>[1069733] _end_>[1069733]
    }
    unknown call_tmp[1069767] "expr temp" "maybe param" "maybe type" "temp"
    (1069770 'move' call_tmp[1069767](1069713 call _cnt _mt[203] _arg1[1069640]))
    unknown call_tmp[1069772] "expr temp" "maybe param" "maybe type" "temp"
    (1069775 'move' call_tmp[1069772](1069717 call _cnt _mt[203] _arg2[1069641]))
    unknown call_tmp[1069777] "expr temp" "maybe param" "maybe type" "temp"
    (1069780 'move' call_tmp[1069777](1069721 call chpl_field_lt call_tmp[1069767] call_tmp[1069772]))
    if call_tmp[1069777]
    {
      (1069745 'move' ret[1069735](1069744 'deref' 0))
      gotoReturn _end_>[1069733] _end_>[1069733]
    }
    (1069750 'move' ret[1069735](1069749 'deref' 0))
    label _end_>[1069733]
    (1069737 return ret[1069735])
  }
  where {
    unknown call_tmp[1069782] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069785 'move' call_tmp[1069782](1069644 'typeof' _arg1[1069640]))
    unknown call_tmp[1069787] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069790 'move' call_tmp[1069787](1069646 'typeof' _arg2[1069641]))
    unknown call_tmp[1069792] "expr temp" "maybe param" "maybe type" "temp"
    (1069795 'move' call_tmp[1069792](1069648 call == call_tmp[1069782] call_tmp[1069787]))
    unknown call_tmp[1069797] "expr temp" "maybe param" "maybe type" "temp"
    (1069800 'move' call_tmp[1069797](1069693 call chpl_fields_are_comparable[1069650] _arg1[1069640] _arg2[1069641]))
    (1069697 '&' call_tmp[1069792] call_tmp[1069797])
  }
  function chpl_fields_are_comparable[1069818](arg _arg1[1069820]:atomic_refcnt[92033], arg _arg2[1069821]:atomic_refcnt[92033]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1069839]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1069846] "expr temp" "maybe param" "maybe type" "temp"
    (1069849 'move' call_tmp[1069846](1069824 call _cnt _mt[203] _arg1[1069820]))
    unknown call_tmp[1069851] "expr temp" "maybe param" "maybe type" "temp"
    (1069854 'move' call_tmp[1069851](1069828 call _cnt _mt[203] _arg2[1069821]))
    unknown call_tmp[1069856] "expr temp" "maybe param" "maybe type" "temp"
    (1069859 'move' call_tmp[1069856](1069832 'call resolves' c">=" call_tmp[1069846] call_tmp[1069851]))
    (1069844 'move' ret[1069839](1069843 'deref' call_tmp[1069856]))
    (1069841 return ret[1069839])
  }
  function atomic_refcnt[92033].>=[1069802](arg _mt[1069804]:_MT[201], arg this[1069806]:atomic_refcnt[92033], arg _arg1[1069808]:atomic_refcnt[92033], arg _arg2[1069809]:atomic_refcnt[92033]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1069903]:bool[19] "RVV" "temp"
    unknown call_tmp[1069920] "expr temp" "maybe param" "maybe type" "temp"
    (1069923 'move' call_tmp[1069920](1069867 call _cnt _mt[203] _arg1[1069808]))
    unknown call_tmp[1069925] "expr temp" "maybe param" "maybe type" "temp"
    (1069928 'move' call_tmp[1069925](1069871 call _cnt _mt[203] _arg2[1069809]))
    unknown call_tmp[1069930] "expr temp" "maybe param" "maybe type" "temp"
    (1069933 'move' call_tmp[1069930](1069875 call chpl_field_gt call_tmp[1069920] call_tmp[1069925]))
    if call_tmp[1069930]
    {
      (1069908 'move' ret[1069903](1069907 'deref' 1))
      gotoReturn _end_>=[1069901] _end_>=[1069901]
    }
    unknown call_tmp[1069935] "expr temp" "maybe param" "maybe type" "temp"
    (1069938 'move' call_tmp[1069935](1069881 call _cnt _mt[203] _arg1[1069808]))
    unknown call_tmp[1069940] "expr temp" "maybe param" "maybe type" "temp"
    (1069943 'move' call_tmp[1069940](1069885 call _cnt _mt[203] _arg2[1069809]))
    unknown call_tmp[1069945] "expr temp" "maybe param" "maybe type" "temp"
    (1069948 'move' call_tmp[1069945](1069889 call chpl_field_lt call_tmp[1069935] call_tmp[1069940]))
    if call_tmp[1069945]
    {
      (1069913 'move' ret[1069903](1069912 'deref' 0))
      gotoReturn _end_>=[1069901] _end_>=[1069901]
    }
    (1069918 'move' ret[1069903](1069917 'deref' 1))
    label _end_>=[1069901]
    (1069905 return ret[1069903])
  }
  where {
    unknown call_tmp[1069950] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069953 'move' call_tmp[1069950](1069812 'typeof' _arg1[1069808]))
    unknown call_tmp[1069955] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1069958 'move' call_tmp[1069955](1069814 'typeof' _arg2[1069809]))
    unknown call_tmp[1069960] "expr temp" "maybe param" "maybe type" "temp"
    (1069963 'move' call_tmp[1069960](1069816 call == call_tmp[1069950] call_tmp[1069955]))
    unknown call_tmp[1069965] "expr temp" "maybe param" "maybe type" "temp"
    (1069968 'move' call_tmp[1069965](1069861 call chpl_fields_are_comparable[1069818] _arg1[1069808] _arg2[1069809]))
    (1069865 '&' call_tmp[1069960] call_tmp[1069965])
  }
  type atomic_refcnt[92033] unknown _cnt[91846](91848 call chpl__processorAtomicType int(64)[10])
  (396099 'used modules list'(91842 'use' ChapelStandard[315387]))
}
AST dump for DSIUtil after pass normalize.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[468408]() : void[4] "insert line file info" "module init"
  {
    (1000998 'resolution point' |writeSerializable[475212])
    (1001000 'end of statement')
    (601542 return _void[46])
  }
  function getDataParTasksPerLocale[94330]() : _unknown[42] "inline"
  {
    unknown ret[600897] "RVV" "temp"
    (600902 'move' ret[600897](600901 'deref' dataParTasksPerLocale[287582]))
    (600899 return ret[600897])
  }
  function getDataParIgnoreRunningTasks[94337]() : _unknown[42] "inline"
  {
    unknown ret[600906] "RVV" "temp"
    (600911 'move' ret[600906](600910 'deref' dataParIgnoreRunningTasks[287587]))
    (600908 return ret[600906])
  }
  function getDataParMinGranularity[94344]() : _unknown[42] "inline"
  {
    unknown ret[600915] "RVV" "temp"
    (600920 'move' ret[600915](600919 'deref' dataParMinGranularity[287592]))
    (600917 return ret[600915])
  }
  function createTuple[94351](param arg rank[94353]:_any[141](?), arg t[94355]:_any[141](?), arg val[94357]:_any[141](?)) : _unknown[42]
  {
    unknown ret[600924] "RVV" "temp"
    unknown tup[94365] "dead at end of block" "insert auto destroy"
    unknown call_tmp[775393] "expr temp" "maybe param" "maybe type" "temp"
    (775396 'move' call_tmp[775393](94366 call * rank[94353] t[94355]))
    (644666 'default init var' tup[94365] call_tmp[775393])
    (94371 'end of statement')
    {
      unknown i[94372] "dead at end of block" "index var" "insert auto destroy"
      (644668 'init var' i[94372] 0)
      (550728 'end of statement')
      unknown tmp[94388] "maybe param" "temp"
      unknown call_tmp[775398] "expr temp" "maybe param" "maybe type" "temp"
      (775401 'move' call_tmp[775398](94375 call - rank[94353] 1))
      (94400 'move' tmp[94388](94398 call chpl_compute_low_param_loop_bound 0 call_tmp[775398]))
      unknown tmp[94389] "maybe param" "temp"
      unknown call_tmp[775403] "expr temp" "maybe param" "maybe type" "temp"
      (775406 'move' call_tmp[775403](94405 call - rank[94353] 1))
      (94410 'move' tmp[94389](94408 call chpl_compute_high_param_loop_bound 0 call_tmp[775403]))
      unknown tmp[94390] "maybe param" "temp"
      (94413 'move' tmp[94390] 1)
      ParamForLoop[94415]
      { i[94372] tmp[94388] tmp[94389] tmp[94390]
        unknown call_tmp[775408] "expr temp" "maybe param" "maybe type" "temp"
        (775411 'move' call_tmp[775408](94384 call tup[94365] i[94372]))
        (94381 call = call_tmp[775408] val[94357])
        (550729 'end of statement' tup[94365] i[94372])
      }
      label _unused_continueLabel[94392]
      label _breakLabel[94391]
    }
    unknown call_tmp[775413] "expr temp" "maybe param" "maybe type" "temp"
    (775416 'move' call_tmp[775413](600929 call * rank[94353] t[94355]))
    (600933 'move' ret[600924](600932 'coerce' tup[94365] call_tmp[775413]))
    gotoReturn _end_createTuple[600922] _end_createTuple[600922]
    (550732 'end of statement' tup[94365])
    label _end_createTuple[600922]
    (600926 return ret[600924])
  }
  { scopeless type
    (94359 call * rank[94353] t[94355])
  }
  function _computeChunkStuff[94429](arg maxTasks[94431]:_any[141](?), arg ignoreRunning[94433]:_any[141](?), arg minSize[94435]:_any[141](?), arg ranges[94437]:_any[141](?), param arg adjustToOneDim[94440] :
  1 =
  1) : _unknown[42]
  {
    unknown ret[600939] "RVV" "temp"
    unknown call_tmp[775420] "maybe param" "maybe type" "temp"
    (775423 'move' call_tmp[775420](94452 call size _mt[203] ranges[94437]))
    unknown rank[94450] "dead at end of block" "param"
    (644670 'init var' rank[94450] call_tmp[775420])
    (94456 'end of statement')
    unknown EC[94458] "dead at end of block" "insert auto destroy" "type variable"
    (644673 'move' EC[94458] uint(64)[86])
    unknown call_tmp[775425] "maybe param" "maybe type" "temp"
    (775428 'move' call_tmp[775425](94463 call : 1 EC[94458]))
    unknown numElems[94462] "dead at end of block" "insert auto destroy"
    (644675 'init var' numElems[94462] call_tmp[775425])
    (94468 'end of statement')
    {
      unknown i[94469] "dead at end of block" "index var" "insert auto destroy"
      (644677 'init var' i[94469] 0)
      (550735 'end of statement')
      unknown tmp[94492] "maybe param" "temp"
      unknown call_tmp[775430] "expr temp" "maybe param" "maybe type" "temp"
      (775433 'move' call_tmp[775430](94472 call - rank[94450] 1))
      (94504 'move' tmp[94492](94502 call chpl_compute_low_param_loop_bound 0 call_tmp[775430]))
      unknown tmp[94493] "maybe param" "temp"
      unknown call_tmp[775435] "expr temp" "maybe param" "maybe type" "temp"
      (775438 'move' call_tmp[775435](94509 call - rank[94450] 1))
      (94514 'move' tmp[94493](94512 call chpl_compute_high_param_loop_bound 0 call_tmp[775435]))
      unknown tmp[94494] "maybe param" "temp"
      (94517 'move' tmp[94494] 1)
      ParamForLoop[94519]
      { i[94469] tmp[94492] tmp[94493] tmp[94494]
        {
          unknown call_tmp[775440] "expr temp" "maybe param" "maybe type" "temp"
          (775443 'move' call_tmp[775440](94483 call ranges[94437] i[94469]))
          unknown call_tmp[775447] "expr temp" "maybe param" "maybe type" "temp"
          (775450 'move' call_tmp[775447](94490 call(94487 call (partial) sizeAs _mt[203] call_tmp[775440]) EC[94458]))
          (94479 call *= numElems[94462] call_tmp[775447])
          (550736 'end of statement' numElems[94462] i[94469] EC[94458])
        }
      }
      label _unused_continueLabel[94496]
      label _breakLabel[94495]
    }
    unknown call_tmp[775452] "maybe param" "maybe type" "temp"
    (775455 'move' call_tmp[775452](94531 call _computeNumChunks maxTasks[94431] ignoreRunning[94433] minSize[94435] numElems[94462]))
    unknown numChunks[94529] "dead at end of block" "insert auto destroy"
    (644679 'init var' numChunks[94529] call_tmp[775452])
    (94537 'end of statement')
    unknown call_tmp[775457] "expr temp" "maybe param" "maybe type" "temp"
    (775460 'move' call_tmp[775457](94547 call == numChunks[94529] 0))
    unknown call_tmp[775462] "expr temp" "maybe param" "maybe type" "temp"
    (775465 'move' call_tmp[775462](94551 call _cond_test call_tmp[775457]))
    if call_tmp[775462]
    {
      unknown call_tmp[775467] "expr temp" "maybe param" "maybe type" "temp"
      (775470 'move' call_tmp[775467](94541 call - 1))
      unknown call_tmp[775472] "expr temp" "maybe param" "maybe type" "temp"
      (775475 'move' call_tmp[775472](94544 call _build_tuple 0 call_tmp[775467]))
      unknown call_tmp[775477] "expr temp" "maybe param" "maybe type" "temp"
      (775480 'move' call_tmp[775477](600944 call _build_tuple int(64)[10] int(64)[10]))
      (600948 'move' ret[600939](600947 'coerce' call_tmp[775472] call_tmp[775477]))
      gotoReturn _end__computeChunkStuff[600937] _end__computeChunkStuff[600937]
    }
    unknown call_tmp[775482] "expr temp" "maybe param" "maybe type" "temp"
    (775485 'move' call_tmp[775482](94558 call > numChunks[94529] 0))
    (94557 call assert call_tmp[775482])
    (550742 'end of statement' numChunks[94529])
    unknown call_tmp[775487] "maybe param" "maybe type" "temp"
    (775490 'move' call_tmp[775487](94564 call - 1))
    unknown parDim[94563] "dead at end of block" "insert auto destroy"
    (644681 'init var' parDim[94563] call_tmp[775487])
    (94568 'end of statement')
    unknown call_tmp[775492] "maybe param" "maybe type" "temp"
    (775495 'move' call_tmp[775492](94571 call - 1))
    unknown maxDim[94570] "dead at end of block" "insert auto destroy"
    (644683 'init var' maxDim[94570] call_tmp[775492])
    (94575 'end of statement')
    unknown call_tmp[775497] "maybe param" "maybe type" "temp"
    (775500 'move' call_tmp[775497](94579 call min EC[94458]))
    unknown maxElems[94577] "dead at end of block" "insert auto destroy"
    (644685 'init var' maxElems[94577] call_tmp[775497])
    (94582 'end of statement' EC[94458] numElems[94462])
    {
      unknown _indexOfInterest[94641] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[94642] "expr temp" "temp"
      unknown call_tmp[775502] "expr temp" "maybe param" "maybe type" "temp"
      (775505 'move' call_tmp[775502](94655 call - rank[94450] 1))
      unknown call_tmp[775507] "expr temp" "maybe param" "maybe type" "temp"
      (775510 'move' call_tmp[775507](94658 call chpl_direct_range_iter 0 call_tmp[775502]))
      (94651 'move' _iterator[94642](94649 call _getIterator call_tmp[775507]))
      Defer
      {
        {
          (94673 call _freeIterator _iterator[94642])
        }
      }
      { scopeless type
        (94663 'move' _indexOfInterest[94641](94660 call iteratorIndex _iterator[94642]))
      }
      ForLoop[94643]
      {
        unknown i[94583] "index var" "insert auto destroy"
        (550745 'end of statement')
        (94668 'move' i[94583] _indexOfInterest[94641])
        (550746 'end of statement' i[94583])
        {
          unknown call_tmp[775512] "expr temp" "maybe param" "maybe type" "temp"
          (775515 'move' call_tmp[775512](94596 call ranges[94437] i[94583]))
          unknown call_tmp[775519] "maybe param" "maybe type" "temp"
          (775522 'move' call_tmp[775519](94601 call(94598 call (partial) sizeAs _mt[203] call_tmp[775512]) EC[94458]))
          const curElems[94594] "dead at end of block" "const" "insert auto destroy"
          (644687 'init var' curElems[94594] call_tmp[775519])
          (94604 'end of statement' i[94583] EC[94458])
          unknown call_tmp[775524] "expr temp" "maybe param" "maybe type" "temp"
          (775527 'move' call_tmp[775524](94616 call : numChunks[94529] EC[94458]))
          unknown call_tmp[775529] "expr temp" "maybe param" "maybe type" "temp"
          (775532 'move' call_tmp[775529](94613 call >= curElems[94594] call_tmp[775524]))
          unknown call_tmp[775534] "expr temp" "maybe param" "maybe type" "temp"
          (775537 'move' call_tmp[775534](94620 call _cond_test call_tmp[775529]))
          if call_tmp[775534]
          {
            (94606 call = parDim[94563] i[94583])
            (550750 'end of statement' parDim[94563] i[94583])
            break _breakLabel[94647] _breakLabel[94647]
          }
          unknown call_tmp[775539] "expr temp" "maybe param" "maybe type" "temp"
          (775542 'move' call_tmp[775539](94633 call > curElems[94594] maxElems[94577]))
          unknown call_tmp[775544] "expr temp" "maybe param" "maybe type" "temp"
          (775547 'move' call_tmp[775544](94637 call _cond_test call_tmp[775539]))
          if call_tmp[775544]
          {
            (94625 call = maxElems[94577] curElems[94594])
            (550753 'end of statement' maxElems[94577] curElems[94594])
            (94629 call = maxDim[94570] i[94583])
            (550756 'end of statement' maxDim[94570] i[94583])
          }
        }
        label _continueLabel[94646]
        _indexOfInterest[94641]
        _iterator[94642]
      }
      label _breakLabel[94647]
    }
    unknown call_tmp[775549] "expr temp" "maybe param" "maybe type" "temp"
    (775552 'move' call_tmp[775549](94711 call - 1))
    unknown call_tmp[775554] "expr temp" "maybe param" "maybe type" "temp"
    (775557 'move' call_tmp[775554](94708 call == parDim[94563] call_tmp[775549]))
    unknown call_tmp[775559] "expr temp" "maybe param" "maybe type" "temp"
    (775562 'move' call_tmp[775559](94714 call _cond_test call_tmp[775554]))
    if call_tmp[775559]
    {
      (94681 call = parDim[94563] maxDim[94570])
      (550759 'end of statement' parDim[94563] maxDim[94570])
      unknown tmp[482310] "maybe param" "temp"
      (482321 'move' tmp[482310] adjustToOneDim[94440])
      unknown call_tmp[775564] "expr temp" "maybe param" "maybe type" "temp"
      (775567 'move' call_tmp[775564](482323 call _cond_invalid tmp[482310]))
      if call_tmp[775564]
      {
        (482326 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[669772] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[669773] "maybe param" "temp"
      unknown call_tmp[775569] "expr temp" "maybe param" "maybe type" "temp"
      (775572 'move' call_tmp[775569](482311 call isTrue tmp[482310]))
      (669778 'move' tmp[669773](669776 call _cond_test call_tmp[775569]))
      if tmp[669773]
      {
        unknown tmp[669780] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[775574] "expr temp" "maybe param" "maybe type" "temp"
        (775577 'move' call_tmp[775574](94699 call : numChunks[94529] EC[94458]))
        unknown call_tmp[775579] "expr temp" "maybe param" "maybe type" "temp"
        (775582 'move' call_tmp[775579](94696 call < maxElems[94577] call_tmp[775574]))
        (669782 'move' tmp[669780](482314 call isTrue call_tmp[775579]))
        (669787 'move' tmp[669772](669784 '_paramFoldLogical' tmp[669773] tmp[669780]))
      }
      {
        (669792 'move' tmp[669772](669789 '_paramFoldLogical' tmp[669773] 0))
      }
      unknown call_tmp[775584] "expr temp" "maybe param" "maybe type" "temp"
      (775587 'move' call_tmp[775584](94703 call _cond_test tmp[669772]))
      if call_tmp[775584]
      {
        unknown call_tmp[775589] "expr temp" "maybe param" "maybe type" "temp"
        (775592 'move' call_tmp[775589](94688 call : maxElems[94577] int(64)[10]))
        (94685 call = numChunks[94529] call_tmp[775589])
        (550763 'end of statement' numChunks[94529] maxElems[94577])
      }
    }
    unknown call_tmp[775594] "expr temp" "maybe param" "maybe type" "temp"
    (775597 'move' call_tmp[775594](94722 call _build_tuple numChunks[94529] parDim[94563]))
    unknown call_tmp[775599] "expr temp" "maybe param" "maybe type" "temp"
    (775602 'move' call_tmp[775599](600953 call _build_tuple int(64)[10] int(64)[10]))
    (600957 'move' ret[600939](600956 'coerce' call_tmp[775594] call_tmp[775599]))
    gotoReturn _end__computeChunkStuff[600937] _end__computeChunkStuff[600937]
    (550766 'end of statement' numChunks[94529] parDim[94563])
    label _end__computeChunkStuff[600937]
    (600941 return ret[600939])
  }
  { scopeless type
    (94446 call _build_tuple int(64)[10] int(64)[10])
  }
  function _computeNumChunks[94727](arg maxTasks[94729]:_any[141](?), arg ignoreRunning[94731]:_any[141](?), arg minSize[94733]:_any[141](?), arg numElems[94735]:_any[141](?)) : _unknown[42]
  {
    unknown ret[600963] "RVV" "temp"
    unknown call_tmp[775604] "expr temp" "maybe param" "maybe type" "temp"
    (775607 'move' call_tmp[775604](94742 call <= numElems[94735] 0))
    unknown call_tmp[775609] "expr temp" "maybe param" "maybe type" "temp"
    (775612 'move' call_tmp[775609](94746 call _cond_test call_tmp[775604]))
    if call_tmp[775609]
    {
      (600969 'move' ret[600963](600968 'coerce' 0 int(64)[10]))
      gotoReturn _end__computeNumChunks[600961] _end__computeNumChunks[600961]
    }
    unknown EC[94752] "dead at end of block" "insert auto destroy" "type variable"
    (644690 'move' EC[94752] uint(64)[86])
    unknown call_tmp[775614] "maybe param" "maybe type" "temp"
    (775617 'move' call_tmp[775614](94757 call : numElems[94735] EC[94752]))
    const unumElems[94756] "dead at end of block" "const" "insert auto destroy"
    (644692 'init var' unumElems[94756] call_tmp[775614])
    (94762 'end of statement')
    unknown call_tmp[775619] "maybe param" "maybe type" "temp"
    (775622 'move' call_tmp[775619](94765 call : maxTasks[94729] int(64)[10]))
    unknown numChunks[94764] "dead at end of block" "insert auto destroy"
    (644694 'init var' numChunks[94764] call_tmp[775619])
    (94770 'end of statement' EC[94752])
    unknown call_tmp[775624] "expr temp" "maybe param" "maybe type" "temp"
    (775627 'move' call_tmp[775624](94804 call ! ignoreRunning[94731]))
    unknown call_tmp[775629] "expr temp" "maybe param" "maybe type" "temp"
    (775632 'move' call_tmp[775629](94807 call _cond_test call_tmp[775624]))
    if call_tmp[775629]
    {
      unknown call_tmp[775634] "expr temp" "maybe param" "maybe type" "temp"
      (775637 'move' call_tmp[775634](400829 call here[135591]))
      unknown call_tmp[775641] "expr temp" "maybe param" "maybe type" "temp"
      (775644 'move' call_tmp[775641](94782 call(94779 call (partial) runningTasks _mt[203] call_tmp[775634])))
      unknown call_tmp[775646] "maybe param" "maybe type" "temp"
      (775649 'move' call_tmp[775646](94774 call - call_tmp[775641] 1))
      const otherTasks[94773] "dead at end of block" "const" "insert auto destroy"
      (644696 'init var' otherTasks[94773] call_tmp[775646])
      (94785 'end of statement')
      unknown tmp[669799] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[669800] "maybe param" "temp"
      unknown call_tmp[775651] "expr temp" "maybe param" "maybe type" "temp"
      (775654 'move' call_tmp[775651](94789 call < otherTasks[94773] maxTasks[94729]))
      (669805 'move' tmp[669800](669803 call _cond_test call_tmp[775651]))
      if tmp[669800]
      {
        unknown tmp[669807] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[775656] "expr temp" "maybe param" "maybe type" "temp"
        (775659 'move' call_tmp[775656](94795 call - maxTasks[94729] otherTasks[94773]))
        (669809 'move' tmp[669807](94793 call : call_tmp[775656] int(64)[10]))
        (669814 'move' tmp[669799](669811 '_paramFoldLogical' tmp[669800] tmp[669807]))
      }
      {
        (669819 'move' tmp[669799](669816 '_paramFoldLogical' tmp[669800] 1))
      }
      (94786 call = numChunks[94764] tmp[669799])
      (550771 'end of statement' numChunks[94764] otherTasks[94773])
    }
    unknown call_tmp[775661] "expr temp" "maybe param" "maybe type" "temp"
    (775664 'move' call_tmp[775661](94883 call > minSize[94733] 0))
    unknown call_tmp[775666] "expr temp" "maybe param" "maybe type" "temp"
    (775669 'move' call_tmp[775666](94887 call _cond_test call_tmp[775661]))
    if call_tmp[775666]
    {
      unknown tmp[94832] "temp"
      unknown tmp[482352] "maybe param" "temp"
      unknown call_tmp[775671] "expr temp" "maybe param" "maybe type" "temp"
      (775674 'move' call_tmp[775671](94872 call * minSize[94733] numChunks[94764]))
      unknown call_tmp[775676] "expr temp" "maybe param" "maybe type" "temp"
      (775679 'move' call_tmp[775676](94870 call : call_tmp[775671] EC[94752]))
      (482363 'move' tmp[482352](94867 call < unumElems[94756] call_tmp[775676]))
      unknown call_tmp[775681] "expr temp" "maybe param" "maybe type" "temp"
      (775684 'move' call_tmp[775681](482365 call _cond_invalid tmp[482352]))
      if call_tmp[775681]
      {
        (482368 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[669826] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[669827] "maybe param" "temp"
      unknown call_tmp[775686] "expr temp" "maybe param" "maybe type" "temp"
      (775689 'move' call_tmp[775686](482353 call isTrue tmp[482352]))
      (669832 'move' tmp[669827](669830 call _cond_test call_tmp[775686]))
      if tmp[669827]
      {
        unknown tmp[669834] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[775691] "expr temp" "maybe param" "maybe type" "temp"
        (775694 'move' call_tmp[775691](94877 call > numChunks[94764] 1))
        (669836 'move' tmp[669834](482356 call isTrue call_tmp[775691]))
        (669841 'move' tmp[669826](669838 '_paramFoldLogical' tmp[669827] tmp[669834]))
      }
      {
        (669846 'move' tmp[669826](669843 '_paramFoldLogical' tmp[669827] 0))
      }
      (94880 'move' tmp[94832](94863 call _cond_test tmp[669826]))
      WhileDo[94837]
      {
        {
          (94828 call -= numChunks[94764] 1)
          (550775 'end of statement' numChunks[94764])
        }
        label _continueLabel[94835]
        unknown tmp[482331] "maybe param" "temp"
        unknown call_tmp[775696] "expr temp" "maybe param" "maybe type" "temp"
        (775699 'move' call_tmp[775696](94850 call * minSize[94733] numChunks[94764]))
        unknown call_tmp[775701] "expr temp" "maybe param" "maybe type" "temp"
        (775704 'move' call_tmp[775701](94848 call : call_tmp[775696] EC[94752]))
        (482342 'move' tmp[482331](94845 call < unumElems[94756] call_tmp[775701]))
        unknown call_tmp[775706] "expr temp" "maybe param" "maybe type" "temp"
        (775709 'move' call_tmp[775706](482344 call _cond_invalid tmp[482331]))
        if call_tmp[775706]
        {
          (482347 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[669853] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[669854] "maybe param" "temp"
        unknown call_tmp[775711] "expr temp" "maybe param" "maybe type" "temp"
        (775714 'move' call_tmp[775711](482332 call isTrue tmp[482331]))
        (669859 'move' tmp[669854](669857 call _cond_test call_tmp[775711]))
        if tmp[669854]
        {
          unknown tmp[669861] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[775716] "expr temp" "maybe param" "maybe type" "temp"
          (775719 'move' call_tmp[775716](94855 call > numChunks[94764] 1))
          (669863 'move' tmp[669861](482335 call isTrue call_tmp[775716]))
          (669868 'move' tmp[669853](669865 '_paramFoldLogical' tmp[669854] tmp[669861]))
        }
        {
          (669873 'move' tmp[669853](669870 '_paramFoldLogical' tmp[669854] 0))
        }
        (94858 'move' tmp[94832](94841 call _cond_test tmp[669853]))
        tmp[94832]
      }
      label _breakLabel[94836]
    }
    unknown call_tmp[775721] "expr temp" "maybe param" "maybe type" "temp"
    (775724 'move' call_tmp[775721](94901 call : numChunks[94764] EC[94752]))
    unknown call_tmp[775726] "expr temp" "maybe param" "maybe type" "temp"
    (775729 'move' call_tmp[775726](94899 call > call_tmp[775721] unumElems[94756]))
    unknown call_tmp[775731] "expr temp" "maybe param" "maybe type" "temp"
    (775734 'move' call_tmp[775731](94906 call _cond_test call_tmp[775726]))
    if call_tmp[775731]
    {
      unknown call_tmp[775736] "expr temp" "maybe param" "maybe type" "temp"
      (775739 'move' call_tmp[775736](94894 call : unumElems[94756] int(64)[10]))
      (94891 call = numChunks[94764] call_tmp[775736])
      (550778 'end of statement' numChunks[94764] unumElems[94756])
    }
    (600975 'move' ret[600963](600974 'coerce' numChunks[94764] int(64)[10]))
    gotoReturn _end__computeNumChunks[600961] _end__computeNumChunks[600961]
    (550781 'end of statement' numChunks[94764])
    label _end__computeNumChunks[600961]
    (600965 return ret[600963])
  }
  { scopeless type
    int(64)[10]
  }
  function _computeNumChunks[94916](arg numElems[94918]:_any[141](?)) : _unknown[42]
  {
    unknown ret[600981] "RVV" "temp"
    unknown numTasks[94923] "dead at end of block" "insert auto destroy"
    unknown tmp[669880] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669881] "maybe param" "temp"
    unknown call_tmp[775741] "expr temp" "maybe param" "maybe type" "temp"
    (775744 'move' call_tmp[775741](94924 call == dataParTasksPerLocale[287582] 0))
    (669886 'move' tmp[669881](669884 call _cond_test call_tmp[775741]))
    if tmp[669881]
    {
      unknown tmp[669888] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[775746] "expr temp" "maybe param" "maybe type" "temp"
      (775749 'move' call_tmp[775746](400831 call here[135591]))
      (669890 'move' tmp[669888](94929 call maxTaskPar _mt[203] call_tmp[775746]))
      (669895 'move' tmp[669880](669892 '_paramFoldLogical' tmp[669881] tmp[669888]))
    }
    {
      (669900 'move' tmp[669880](669897 '_paramFoldLogical' tmp[669881] dataParTasksPerLocale[287582]))
    }
    (644698 'init var' numTasks[94923] tmp[669880])
    (94937 'end of statement')
    unknown ignoreRunning[94939] "dead at end of block" "insert auto destroy"
    (644700 'init var' ignoreRunning[94939] dataParIgnoreRunningTasks[287587])
    (94942 'end of statement')
    unknown minIndicesPerTask[94944] "dead at end of block" "insert auto destroy"
    (644702 'init var' minIndicesPerTask[94944] dataParMinGranularity[287592])
    (94947 'end of statement')
    unknown call_tmp[775753] "maybe param" "maybe type" "temp"
    (775756 'move' call_tmp[775753](94951 call _computeNumChunks numTasks[94923] ignoreRunning[94939] minIndicesPerTask[94944] numElems[94918]))
    unknown numChunks[94949] "dead at end of block" "insert auto destroy"
    (644704 'init var' numChunks[94949] call_tmp[775753])
    (94957 'end of statement' numTasks[94923] ignoreRunning[94939] minIndicesPerTask[94944])
    (600987 'move' ret[600981](600986 'coerce' numChunks[94949] int(64)[10]))
    gotoReturn _end__computeNumChunks[600979] _end__computeNumChunks[600979]
    (550786 'end of statement' numChunks[94949])
    label _end__computeNumChunks[600979]
    (600983 return ret[600981])
  }
  { scopeless type
    int(64)[10]
  }
  function _computeChunkStartEnd[94963](arg nElems[94965]:_any[141](?), arg nChunks[94967]:_any[141](?), arg myCnk[94969]:_any[141](?)) : _unknown[42]
  {
    unknown ret[600993] "RVV" "temp"
    unknown IT[94978] "dead at end of block" "insert auto destroy" "type variable"
    unknown tmp[669907] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669908] "maybe param" "temp"
    unknown call_tmp[775758] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (775761 'move' call_tmp[775758](644708 'typeof' nElems[94965]))
    unknown call_tmp[775763] "expr temp" "maybe param" "maybe type" "temp"
    (775766 'move' call_tmp[775763](644707 call == call_tmp[775758] uint(64)[86]))
    (669913 'move' tmp[669908](669911 call _cond_test call_tmp[775763]))
    if tmp[669908]
    {
      (669918 'move' tmp[669907](669915 '_paramFoldLogical' tmp[669908] uint(64)[86]))
    }
    {
      (669923 'move' tmp[669907](669920 '_paramFoldLogical' tmp[669908] int(64)[10]))
    }
    (644716 'move' IT[94978] tmp[669907])
    unknown call_tmp[775768] "expr temp" "maybe param" "maybe type" "temp"
    (775771 'move' call_tmp[775768](94998 call : nElems[94965] IT[94978]))
    unknown call_tmp[775773] "expr temp" "maybe param" "maybe type" "temp"
    (775776 'move' call_tmp[775773](95002 call : nChunks[94967] IT[94978]))
    unknown call_tmp[775778] "expr temp" "maybe param" "maybe type" "temp"
    (775781 'move' call_tmp[775778](95006 call : myCnk[94969] IT[94978]))
    unknown call_tmp[775783] "maybe param" "maybe type" "temp"
    (775786 'move' call_tmp[775783](95010 call _build_tuple call_tmp[775768] call_tmp[775773] call_tmp[775778]))
    const tmp[95012] "dead at end of block" "const" "insert auto destroy" "temp"
    (644718 'init var' tmp[95012] call_tmp[775783])
    (95022 call _check_tuple_var_decl tmp[95012] 3)
    (550788 'end of statement')
    unknown call_tmp[775788] "maybe param" "maybe type" "temp"
    (775791 'move' call_tmp[775788](95013 call tmp[95012] 0))
    const numElems[94991] "dead at end of block" "const" "insert auto destroy"
    (644720 'init var' numElems[94991] call_tmp[775788])
    unknown call_tmp[775793] "maybe param" "maybe type" "temp"
    (775796 'move' call_tmp[775793](95016 call tmp[95012] 1))
    const numChunks[94993] "dead at end of block" "const" "insert auto destroy"
    (644722 'init var' numChunks[94993] call_tmp[775793])
    unknown call_tmp[775798] "maybe param" "maybe type" "temp"
    (775801 'move' call_tmp[775798](95019 call tmp[95012] 2))
    const myChunk[94995] "dead at end of block" "const" "insert auto destroy"
    (644724 'init var' myChunk[94995] call_tmp[775798])
    (95027 'end of statement')
    unknown RT[95029] "dead at end of block" "insert auto destroy" "type variable"
    (644728 'move' RT[95029](644726 'typeof' nElems[94965]))
    unknown call_tmp[775803] "maybe param" "maybe type" "temp"
    (775806 'move' call_tmp[775803](95035 call / numElems[94991] numChunks[94993]))
    unknown div[95034] "dead at end of block" "insert auto destroy"
    (644730 'init var' div[95034] call_tmp[775803])
    (95040 'end of statement')
    unknown call_tmp[775808] "maybe param" "maybe type" "temp"
    (775811 'move' call_tmp[775808](95043 call % numElems[94991] numChunks[94993]))
    unknown rem[95042] "dead at end of block" "insert auto destroy"
    (644732 'init var' rem[95042] call_tmp[775808])
    (95048 'end of statement' numElems[94991] numChunks[94993])
    unknown tmp[482373] "maybe param" "temp"
    (482384 'move' tmp[482373](95053 call <= 1 myChunk[94995]))
    unknown call_tmp[775813] "expr temp" "maybe param" "maybe type" "temp"
    (775816 'move' call_tmp[775813](482386 call _cond_invalid tmp[482373]))
    if call_tmp[775813]
    {
      (482389 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[669930] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669931] "maybe param" "temp"
    unknown call_tmp[775818] "expr temp" "maybe param" "maybe type" "temp"
    (775821 'move' call_tmp[775818](482374 call isTrue tmp[482373]))
    (669936 'move' tmp[669931](669934 call _cond_test call_tmp[775818]))
    if tmp[669931]
    {
      unknown tmp[669938] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[775823] "expr temp" "maybe param" "maybe type" "temp"
      (775826 'move' call_tmp[775823](95057 call <= myChunk[94995] numChunks[94993]))
      (669940 'move' tmp[669938](482377 call isTrue call_tmp[775823]))
      (669945 'move' tmp[669930](669942 '_paramFoldLogical' tmp[669931] tmp[669938]))
    }
    {
      (669950 'move' tmp[669930](669947 '_paramFoldLogical' tmp[669931] 0))
    }
    (95050 call assert tmp[669930])
    (550792 'end of statement' myChunk[94995] numChunks[94993])
    unknown call_tmp[775828] "expr temp" "maybe param" "maybe type" "temp"
    (775831 'move' call_tmp[775828](95124 call <= myChunk[94995] rem[95042]))
    unknown call_tmp[775833] "expr temp" "maybe param" "maybe type" "temp"
    (775836 'move' call_tmp[775833](95128 call _cond_test call_tmp[775828]))
    if call_tmp[775833]
    {
      unknown call_tmp[775838] "expr temp" "maybe param" "maybe type" "temp"
      (775841 'move' call_tmp[775838](95067 call + div[95034] 1))
      unknown call_tmp[775843] "maybe param" "maybe type" "temp"
      (775846 'move' call_tmp[775843](95064 call * myChunk[94995] call_tmp[775838]))
      unknown endIx[95063] "dead at end of block" "insert auto destroy"
      (644734 'init var' endIx[95063] call_tmp[775843])
      (95072 'end of statement' myChunk[94995] div[95034])
      unknown call_tmp[775848] "expr temp" "maybe param" "maybe type" "temp"
      (775851 'move' call_tmp[775848](95077 call - endIx[95063] div[95034]))
      unknown call_tmp[775853] "expr temp" "maybe param" "maybe type" "temp"
      (775856 'move' call_tmp[775853](95075 call : call_tmp[775848] RT[95029]))
      unknown call_tmp[775858] "expr temp" "maybe param" "maybe type" "temp"
      (775861 'move' call_tmp[775858](95082 call : endIx[95063] RT[95029]))
      unknown call_tmp[775863] "expr temp" "maybe param" "maybe type" "temp"
      (775866 'move' call_tmp[775863](95086 call _build_tuple call_tmp[775853] call_tmp[775858]))
      unknown call_tmp[775868] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (775871 'move' call_tmp[775868](601000 'typeof' nElems[94965]))
      unknown call_tmp[775873] "expr temp" "maybe param" "maybe type" "temp"
      (775876 'move' call_tmp[775873](600998 call * 2 call_tmp[775868]))
      (601003 'move' ret[600993](601002 'coerce' call_tmp[775863] call_tmp[775873]))
      gotoReturn _end__computeChunkStartEnd[600991] _end__computeChunkStartEnd[600991]
      (550797 'end of statement' endIx[95063] div[95034] RT[95029])
    }
    {
      unknown call_tmp[775878] "expr temp" "maybe param" "maybe type" "temp"
      (775881 'move' call_tmp[775878](95098 call - numChunks[94993] myChunk[94995]))
      unknown call_tmp[775883] "expr temp" "maybe param" "maybe type" "temp"
      (775886 'move' call_tmp[775883](95096 call + call_tmp[775878] 1))
      unknown call_tmp[775888] "expr temp" "maybe param" "maybe type" "temp"
      (775891 'move' call_tmp[775888](95094 call * call_tmp[775883] div[95034]))
      unknown call_tmp[775893] "maybe param" "maybe type" "temp"
      (775896 'move' call_tmp[775893](95091 call - numElems[94991] call_tmp[775888]))
      unknown startIx1[95090] "dead at end of block" "insert auto destroy"
      (644736 'init var' startIx1[95090] call_tmp[775893])
      (95105 'end of statement' numElems[94991] numChunks[94993] myChunk[94995] div[95034])
      unknown call_tmp[775898] "expr temp" "maybe param" "maybe type" "temp"
      (775901 'move' call_tmp[775898](95110 call + startIx1[95090] 1))
      unknown call_tmp[775903] "expr temp" "maybe param" "maybe type" "temp"
      (775906 'move' call_tmp[775903](95108 call : call_tmp[775898] RT[95029]))
      unknown call_tmp[775908] "expr temp" "maybe param" "maybe type" "temp"
      (775911 'move' call_tmp[775908](95117 call + startIx1[95090] div[95034]))
      unknown call_tmp[775913] "expr temp" "maybe param" "maybe type" "temp"
      (775916 'move' call_tmp[775913](95115 call : call_tmp[775908] RT[95029]))
      unknown call_tmp[775918] "expr temp" "maybe param" "maybe type" "temp"
      (775921 'move' call_tmp[775918](95122 call _build_tuple call_tmp[775903] call_tmp[775913]))
      unknown call_tmp[775923] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (775926 'move' call_tmp[775923](601010 'typeof' nElems[94965]))
      unknown call_tmp[775928] "expr temp" "maybe param" "maybe type" "temp"
      (775931 'move' call_tmp[775928](601008 call * 2 call_tmp[775923]))
      (601013 'move' ret[600993](601012 'coerce' call_tmp[775918] call_tmp[775928]))
      gotoReturn _end__computeChunkStartEnd[600991] _end__computeChunkStartEnd[600991]
      (550805 'end of statement' startIx1[95090] RT[95029] div[95034] RT[95029])
    }
    label _end__computeChunkStartEnd[600991]
    (600995 return ret[600993])
  }
  { scopeless type
    unknown call_tmp[775933] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (775936 'move' call_tmp[775933](94975 'typeof' nElems[94965]))
    (94971 call * 2 call_tmp[775933])
  }
  function intCeilXDivByY[95135](arg x[95137]:_any[141](?), arg y[95139]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601019] "RVV" "temp"
    unknown call_tmp[775938] "expr temp" "maybe param" "maybe type" "temp"
    (775941 'move' call_tmp[775938](95148 call - x[95137] 1))
    unknown call_tmp[775943] "expr temp" "maybe param" "maybe type" "temp"
    (775946 'move' call_tmp[775943](95146 call / call_tmp[775938] y[95139]))
    unknown call_tmp[775948] "expr temp" "maybe param" "maybe type" "temp"
    (775951 'move' call_tmp[775948](95143 call + 1 call_tmp[775943]))
    (601024 'move' ret[601019](601023 'deref' call_tmp[775948]))
    (601021 return ret[601019])
  }
  function _computeBlock[95155](arg numelems[95157]:_any[141](?), arg numblocks[95159]:_any[141](?), arg blocknum[95161]:_any[141](?), arg wayhi[95163]:_any[141](?), arg waylo[95170] :
  unknown call_tmp[1001878] "expr temp" "maybe param" "maybe type" "temp" "type variable" =
  unknown call_tmp[775953] "expr temp" "maybe param" "maybe type" "temp" "type variable", arg lo[95178] :
  unknown call_tmp[1001889] "expr temp" "maybe param" "maybe type" "temp" "type variable" =
  unknown call_tmp[775958] "expr temp" "maybe param" "maybe type" "temp" "type variable") : _unknown[42]
  {
    unknown ret[601028] "RVV" "temp"
    unknown call_tmp[775963] "expr temp" "maybe param" "maybe type" "temp"
    (775966 'move' call_tmp[775963](95197 call == numelems[95157] 0))
    unknown call_tmp[775968] "expr temp" "maybe param" "maybe type" "temp"
    (775971 'move' call_tmp[775968](95201 call _cond_test call_tmp[775963]))
    if call_tmp[775968]
    {
      unknown call_tmp[775973] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (775976 'move' call_tmp[775973](95188 'typeof' lo[95178]))
      unknown call_tmp[775978] "expr temp" "maybe param" "maybe type" "temp"
      (775981 'move' call_tmp[775978](95184 call : 1 call_tmp[775973]))
      unknown call_tmp[775983] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (775986 'move' call_tmp[775983](95193 'typeof' lo[95178]))
      unknown call_tmp[775988] "expr temp" "maybe param" "maybe type" "temp"
      (775991 'move' call_tmp[775988](95189 call : 0 call_tmp[775983]))
      unknown call_tmp[775993] "expr temp" "maybe param" "maybe type" "temp"
      (775996 'move' call_tmp[775993](95194 call _build_tuple call_tmp[775978] call_tmp[775988]))
      (601033 'move' ret[601028](601032 'deref' call_tmp[775993]))
      gotoReturn _end__computeBlock[601026] _end__computeBlock[601026]
    }
    const blo[95207] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[669957] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669958] "maybe param" "temp"
    unknown call_tmp[775998] "expr temp" "maybe param" "maybe type" "temp"
    (776001 'move' call_tmp[775998](95208 call == blocknum[95161] 0))
    (669963 'move' tmp[669958](669961 call _cond_test call_tmp[775998]))
    if tmp[669958]
    {
      (669968 'move' tmp[669957](669965 '_paramFoldLogical' tmp[669958] waylo[95170]))
    }
    {
      unknown tmp[669970] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[776003] "expr temp" "maybe param" "maybe type" "temp"
      (776006 'move' call_tmp[776003](95222 call : numelems[95157] uint(64)[86]))
      unknown call_tmp[776008] "expr temp" "maybe param" "maybe type" "temp"
      (776011 'move' call_tmp[776008](95226 call : blocknum[95161] uint(64)[86]))
      unknown call_tmp[776013] "expr temp" "maybe param" "maybe type" "temp"
      (776016 'move' call_tmp[776013](95220 call * call_tmp[776003] call_tmp[776008]))
      unknown call_tmp[776018] "expr temp" "maybe param" "maybe type" "temp"
      (776021 'move' call_tmp[776018](95230 call : numblocks[95159] uint(64)[86]))
      unknown call_tmp[776023] "expr temp" "maybe param" "maybe type" "temp"
      (776026 'move' call_tmp[776023](95219 call intCeilXDivByY call_tmp[776013] call_tmp[776018]))
      unknown call_tmp[776028] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (776031 'move' call_tmp[776028](95235 'typeof' lo[95178]))
      unknown call_tmp[776033] "expr temp" "maybe param" "maybe type" "temp"
      (776036 'move' call_tmp[776033](95216 call : call_tmp[776023] call_tmp[776028]))
      (669972 'move' tmp[669970](95213 call + lo[95178] call_tmp[776033]))
      (669977 'move' tmp[669957](669974 '_paramFoldLogical' tmp[669958] tmp[669970]))
    }
    (644738 'init var' blo[95207] tmp[669957])
    (95240 'end of statement')
    const bhi[95242] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[669984] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669985] "maybe param" "temp"
    unknown call_tmp[776038] "expr temp" "maybe param" "maybe type" "temp"
    (776041 'move' call_tmp[776038](95246 call - numblocks[95159] 1))
    unknown call_tmp[776043] "expr temp" "maybe param" "maybe type" "temp"
    (776046 'move' call_tmp[776043](95243 call == blocknum[95161] call_tmp[776038]))
    (669990 'move' tmp[669985](669988 call _cond_test call_tmp[776043]))
    if tmp[669985]
    {
      (669995 'move' tmp[669984](669992 '_paramFoldLogical' tmp[669985] wayhi[95163]))
    }
    {
      unknown tmp[669997] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[776048] "expr temp" "maybe param" "maybe type" "temp"
      (776051 'move' call_tmp[776048](95262 call : numelems[95157] uint(64)[86]))
      unknown call_tmp[776053] "expr temp" "maybe param" "maybe type" "temp"
      (776056 'move' call_tmp[776053](95268 call + blocknum[95161] 1))
      unknown call_tmp[776058] "expr temp" "maybe param" "maybe type" "temp"
      (776061 'move' call_tmp[776058](95266 call : call_tmp[776053] uint(64)[86]))
      unknown call_tmp[776063] "expr temp" "maybe param" "maybe type" "temp"
      (776066 'move' call_tmp[776063](95260 call * call_tmp[776048] call_tmp[776058]))
      unknown call_tmp[776068] "expr temp" "maybe param" "maybe type" "temp"
      (776071 'move' call_tmp[776068](95273 call : numblocks[95159] uint(64)[86]))
      unknown call_tmp[776073] "expr temp" "maybe param" "maybe type" "temp"
      (776076 'move' call_tmp[776073](95259 call intCeilXDivByY call_tmp[776063] call_tmp[776068]))
      unknown call_tmp[776078] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (776081 'move' call_tmp[776078](95278 'typeof' lo[95178]))
      unknown call_tmp[776083] "expr temp" "maybe param" "maybe type" "temp"
      (776086 'move' call_tmp[776083](95256 call : call_tmp[776073] call_tmp[776078]))
      unknown call_tmp[776088] "expr temp" "maybe param" "maybe type" "temp"
      (776091 'move' call_tmp[776088](95253 call + lo[95178] call_tmp[776083]))
      (669999 'move' tmp[669997](95251 call - call_tmp[776088] 1))
      (670004 'move' tmp[669984](670001 '_paramFoldLogical' tmp[669985] tmp[669997]))
    }
    (644740 'init var' bhi[95242] tmp[669984])
    (95284 'end of statement')
    unknown call_tmp[776093] "expr temp" "maybe param" "maybe type" "temp"
    (776096 'move' call_tmp[776093](95289 call _build_tuple blo[95207] bhi[95242]))
    (601038 'move' ret[601028](601037 'deref' call_tmp[776093]))
    gotoReturn _end__computeBlock[601026] _end__computeBlock[601026]
    (550812 'end of statement' blo[95207] bhi[95242])
    label _end__computeBlock[601026]
    (601030 return ret[601028])
  }
  function _factor[95293](param arg rank[95296]:int(64)[10], arg value[95299]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601044] "RVV" "temp"
    unknown factors[95303] "dead at end of block" "insert auto destroy"
    unknown call_tmp[776098] "expr temp" "maybe param" "maybe type" "temp"
    (776101 'move' call_tmp[776098](95304 call * rank[95296] int(64)[10]))
    (644742 'default init var' factors[95303] call_tmp[776098])
    (95309 'end of statement')
    {
      unknown i[95310] "dead at end of block" "index var" "insert auto destroy"
      (644744 'init var' i[95310] 0)
      (550815 'end of statement')
      unknown tmp[95326] "maybe param" "temp"
      unknown call_tmp[776103] "expr temp" "maybe param" "maybe type" "temp"
      (776106 'move' call_tmp[776103](95313 call - rank[95296] 1))
      (95338 'move' tmp[95326](95336 call chpl_compute_low_param_loop_bound 0 call_tmp[776103]))
      unknown tmp[95327] "maybe param" "temp"
      unknown call_tmp[776108] "expr temp" "maybe param" "maybe type" "temp"
      (776111 'move' call_tmp[776108](95343 call - rank[95296] 1))
      (95348 'move' tmp[95327](95346 call chpl_compute_high_param_loop_bound 0 call_tmp[776108]))
      unknown tmp[95328] "maybe param" "temp"
      (95351 'move' tmp[95328] 1)
      ParamForLoop[95353]
      { i[95310] tmp[95326] tmp[95327] tmp[95328]
        unknown call_tmp[776113] "expr temp" "maybe param" "maybe type" "temp"
        (776116 'move' call_tmp[776113](95322 call factors[95303] i[95310]))
        (95319 call = call_tmp[776113] 1)
        (550816 'end of statement' factors[95303] i[95310])
      }
      label _unused_continueLabel[95330]
      label _breakLabel[95329]
    }
    unknown call_tmp[776118] "expr temp" "maybe param" "maybe type" "temp"
    (776121 'move' call_tmp[776118](95548 call >= value[95299] 1))
    unknown call_tmp[776123] "expr temp" "maybe param" "maybe type" "temp"
    (776126 'move' call_tmp[776123](95552 call _cond_test call_tmp[776118]))
    if call_tmp[776123]
    {
      unknown iv[95364] "dead at end of block" "insert auto destroy"
      (644746 'init var' iv[95364] value[95299])
      (95367 'end of statement')
      unknown factor[95369] "dead at end of block" "insert auto destroy"
      (644748 'init var' factor[95369] 1)
      (95372 'end of statement')
      {
        unknown tmp[95521] "temp"
        unknown call_tmp[776128] "expr temp" "maybe param" "maybe type" "temp"
        (776131 'move' call_tmp[776128](95542 call > iv[95364] 1))
        (95545 'move' tmp[95521](95540 call _cond_test call_tmp[776128]))
        WhileDo[95526]
        {
          {
            {
              unknown _indexOfInterest[95485] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[95486] "expr temp" "temp"
              unknown call_tmp[776133] "expr temp" "maybe param" "maybe type" "temp"
              (776136 'move' call_tmp[776133](95499 call chpl_direct_range_iter 2 iv[95364]))
              (95495 'move' _iterator[95486](95493 call _getIterator call_tmp[776133]))
              Defer
              {
                {
                  (95514 call _freeIterator _iterator[95486])
                }
              }
              { scopeless type
                (95504 'move' _indexOfInterest[95485](95501 call iteratorIndex _iterator[95486]))
              }
              ForLoop[95487]
              {
                unknown i[95378] "index var" "insert auto destroy"
                (550820 'end of statement')
                (95509 'move' i[95378] _indexOfInterest[95485])
                (550821 'end of statement' i[95378])
                {
                  unknown call_tmp[776138] "expr temp" "maybe param" "maybe type" "temp"
                  (776141 'move' call_tmp[776138](95476 call % iv[95364] i[95378]))
                  unknown call_tmp[776143] "expr temp" "maybe param" "maybe type" "temp"
                  (776146 'move' call_tmp[776143](95474 call == call_tmp[776138] 0))
                  unknown call_tmp[776148] "expr temp" "maybe param" "maybe type" "temp"
                  (776151 'move' call_tmp[776148](95481 call _cond_test call_tmp[776143]))
                  if call_tmp[776148]
                  {
                    unknown j[95387] "dead at end of block" "insert auto destroy"
                    (644750 'init var' j[95387] 0)
                    (95390 'end of statement')
                    {
                      unknown _indexOfInterest[95419] "an _indexOfInterest or chpl__followIdx variable" "temp"
                      unknown _iterator[95420] "expr temp" "temp"
                      unknown call_tmp[776153] "expr temp" "maybe param" "maybe type" "temp"
                      (776156 'move' call_tmp[776153](95433 call - rank[95296] 1))
                      unknown call_tmp[776158] "expr temp" "maybe param" "maybe type" "temp"
                      (776161 'move' call_tmp[776158](95436 call chpl_direct_range_iter 1 call_tmp[776153]))
                      (95429 'move' _iterator[95420](95427 call _getIterator call_tmp[776158]))
                      Defer
                      {
                        {
                          (95451 call _freeIterator _iterator[95420])
                        }
                      }
                      { scopeless type
                        (95441 'move' _indexOfInterest[95419](95438 call iteratorIndex _iterator[95420]))
                      }
                      ForLoop[95421]
                      {
                        unknown i[95391] "index var" "insert auto destroy"
                        (550824 'end of statement')
                        (95446 'move' i[95391] _indexOfInterest[95419])
                        (550825 'end of statement' i[95391])
                        {
                          unknown call_tmp[776163] "expr temp" "maybe param" "maybe type" "temp"
                          (776166 'move' call_tmp[776163](95409 call factors[95303] i[95391]))
                          unknown call_tmp[776168] "expr temp" "maybe param" "maybe type" "temp"
                          (776171 'move' call_tmp[776168](95412 call factors[95303] j[95387]))
                          unknown call_tmp[776173] "expr temp" "maybe param" "maybe type" "temp"
                          (776176 'move' call_tmp[776173](95406 call < call_tmp[776163] call_tmp[776168]))
                          unknown call_tmp[776178] "expr temp" "maybe param" "maybe type" "temp"
                          (776181 'move' call_tmp[776178](95414 call _cond_test call_tmp[776173]))
                          if call_tmp[776178]
                          {
                            (95401 call = j[95387] i[95391])
                            (550827 'end of statement' j[95387] i[95391])
                          }
                        }
                        label _continueLabel[95424]
                        _indexOfInterest[95419]
                        _iterator[95420]
                      }
                      label _breakLabel[95425]
                    }
                    unknown call_tmp[776183] "expr temp" "maybe param" "maybe type" "temp"
                    (776186 'move' call_tmp[776183](95461 call factors[95303] j[95387]))
                    (95458 call *= call_tmp[776183] i[95378])
                    (550830 'end of statement' factors[95303] j[95387] i[95378])
                    unknown call_tmp[776188] "expr temp" "maybe param" "maybe type" "temp"
                    (776191 'move' call_tmp[776188](95467 call / iv[95364] i[95378]))
                    (95464 call = iv[95364] call_tmp[776188])
                    (550834 'end of statement' iv[95364] i[95378])
                    break _breakLabel[95491] _breakLabel[95491]
                  }
                }
                label _continueLabel[95490]
                _indexOfInterest[95485]
                _iterator[95486]
              }
              label _breakLabel[95491]
            }
          }
          label _continueLabel[95524]
          unknown call_tmp[776193] "expr temp" "maybe param" "maybe type" "temp"
          (776196 'move' call_tmp[776193](95532 call > iv[95364] 1))
          (95535 'move' tmp[95521](95530 call _cond_test call_tmp[776193]))
          tmp[95521]
        }
        label _breakLabel[95525]
      }
    }
    {
      unknown _indexOfInterest[95641] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[95642] "expr temp" "temp"
      unknown call_tmp[776198] "expr temp" "maybe param" "maybe type" "temp"
      (776201 'move' call_tmp[776198](95655 call - rank[95296] 1))
      unknown call_tmp[776203] "expr temp" "maybe param" "maybe type" "temp"
      (776206 'move' call_tmp[776203](95658 call chpl_direct_range_iter 0 call_tmp[776198]))
      (95651 'move' _iterator[95642](95649 call _getIterator call_tmp[776203]))
      Defer
      {
        {
          (95673 call _freeIterator _iterator[95642])
        }
      }
      { scopeless type
        (95663 'move' _indexOfInterest[95641](95660 call iteratorIndex _iterator[95642]))
      }
      ForLoop[95643]
      {
        unknown i[95556] "index var" "insert auto destroy"
        (550838 'end of statement')
        (95668 'move' i[95556] _indexOfInterest[95641])
        (550839 'end of statement' i[95556])
        {
          unknown _indexOfInterest[95599] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[95600] "expr temp" "temp"
          unknown call_tmp[776208] "expr temp" "maybe param" "maybe type" "temp"
          (776211 'move' call_tmp[776208](95612 call + i[95556] 1))
          unknown call_tmp[776213] "expr temp" "maybe param" "maybe type" "temp"
          (776216 'move' call_tmp[776213](95616 call - rank[95296] 1))
          unknown call_tmp[776218] "expr temp" "maybe param" "maybe type" "temp"
          (776221 'move' call_tmp[776218](95619 call chpl_direct_range_iter call_tmp[776208] call_tmp[776213]))
          (95609 'move' _iterator[95600](95607 call _getIterator call_tmp[776218]))
          Defer
          {
            {
              (95634 call _freeIterator _iterator[95600])
            }
          }
          { scopeless type
            (95624 'move' _indexOfInterest[95599](95621 call iteratorIndex _iterator[95600]))
          }
          ForLoop[95601]
          {
            unknown j[95565] "index var" "insert auto destroy"
            (550842 'end of statement')
            (95629 'move' j[95565] _indexOfInterest[95599])
            (550843 'end of statement' j[95565])
            unknown call_tmp[776223] "expr temp" "maybe param" "maybe type" "temp"
            (776226 'move' call_tmp[776223](95589 call factors[95303] i[95556]))
            unknown call_tmp[776228] "expr temp" "maybe param" "maybe type" "temp"
            (776231 'move' call_tmp[776228](95592 call factors[95303] j[95565]))
            unknown call_tmp[776233] "expr temp" "maybe param" "maybe type" "temp"
            (776236 'move' call_tmp[776233](95586 call < call_tmp[776223] call_tmp[776228]))
            unknown call_tmp[776238] "expr temp" "maybe param" "maybe type" "temp"
            (776241 'move' call_tmp[776238](95594 call _cond_test call_tmp[776233]))
            if call_tmp[776238]
            {
              unknown call_tmp[776243] "expr temp" "maybe param" "maybe type" "temp"
              (776246 'move' call_tmp[776243](95580 call factors[95303] i[95556]))
              unknown call_tmp[776248] "expr temp" "maybe param" "maybe type" "temp"
              (776251 'move' call_tmp[776248](95583 call factors[95303] j[95565]))
              (95577 call <=> call_tmp[776243] call_tmp[776248])
              (550845 'end of statement' factors[95303] i[95556] j[95565])
            }
            label _continueLabel[95604]
            _indexOfInterest[95599]
            _iterator[95600]
          }
          label _breakLabel[95605]
        }
        label _continueLabel[95646]
        _indexOfInterest[95641]
        _iterator[95642]
      }
      label _breakLabel[95647]
    }
    (601049 'move' ret[601044](601048 'deref' factors[95303]))
    gotoReturn _end__factor[601042] _end__factor[601042]
    (550849 'end of statement' factors[95303])
    label _end__factor[601042]
    (601046 return ret[601044])
  }
  function computeZeroBasedDomain[95684](arg dom[95687]:_domain[225034](?)) : _unknown[42]
  {
    unknown ret[601055] "RVV" "temp"
    unknown call_tmp[776255] "expr temp" "maybe param" "maybe type" "temp"
    (776258 'move' call_tmp[776255](95701 call(95698 call (partial) dims _mt[203] dom[95687])))
    unknown call_tmp[776260] "expr temp" "maybe param" "maybe type" "temp"
    (776263 'move' call_tmp[776260](95694 call computeZeroBasedRanges call_tmp[776255]))
    unknown call_tmp[776265] "expr temp" "maybe param" "maybe type" "temp"
    (776268 'move' call_tmp[776265](95704 call chpl__buildDomainExpr(95702 'expand_tuple' call_tmp[776260]) 1))
    (601060 'move' ret[601055](601059 'deref' call_tmp[776265]))
    (601057 return ret[601055])
  }
  function computeZeroBasedRanges[95708](arg ranges[95711]:_tuple[246](?)) : _unknown[42]
  {
    unknown ret[601080] "RVV" "temp"
    function helper[95715](arg idxType[95717]:_any[141](?), arg first[95719]:_any[141](?), arg rest[95722]:_any[141](?) ...) : _unknown[42]
    {
      unknown ret[601064] "RVV" "temp"
      unknown call_tmp[776272] "expr temp" "maybe param" "maybe type" "temp"
      (776275 'move' call_tmp[776272](95789 call size _mt[203] rest[95722]))
      unknown call_tmp[776277] "expr temp" "maybe param" "maybe type" "temp"
      (776280 'move' call_tmp[776277](95786 call > call_tmp[776272] 1))
      unknown call_tmp[776282] "expr temp" "maybe param" "maybe type" "temp"
      (776285 'move' call_tmp[776282](95793 call _cond_test call_tmp[776277]))
      if call_tmp[776282]
      {
        unknown call_tmp[776287] "expr temp" "maybe param" "maybe type" "temp"
        (776290 'move' call_tmp[776287](95730 call : 0 idxType[95717]))
        unknown call_tmp[776292] "expr temp" "maybe param" "maybe type" "temp"
        (776295 'move' call_tmp[776292](95734 call chpl_build_low_bounded_range call_tmp[776287]))
        unknown call_tmp[776299] "expr temp" "maybe param" "maybe type" "temp"
        (776302 'move' call_tmp[776299](95740 call(95737 call (partial) sizeAs _mt[203] first[95719]) idxType[95717]))
        unknown call_tmp[776304] "expr temp" "maybe param" "maybe type" "temp"
        (776307 'move' call_tmp[776304](95728 call # call_tmp[776292] call_tmp[776299]))
        unknown call_tmp[776309] "expr temp" "maybe param" "maybe type" "temp"
        (776312 'move' call_tmp[776309](95743 call helper idxType[95717](95746 'expand_tuple' rest[95722])))
        unknown call_tmp[776314] "expr temp" "maybe param" "maybe type" "temp"
        (776317 'move' call_tmp[776314](95748 call _build_tuple call_tmp[776304](95747 'expand_tuple' call_tmp[776309])))
        (601069 'move' ret[601064](601068 'deref' call_tmp[776314]))
        gotoReturn _end_helper[601062] _end_helper[601062]
      }
      {
        unknown call_tmp[776319] "expr temp" "maybe param" "maybe type" "temp"
        (776322 'move' call_tmp[776319](95755 call : 0 idxType[95717]))
        unknown call_tmp[776324] "expr temp" "maybe param" "maybe type" "temp"
        (776327 'move' call_tmp[776324](95759 call chpl_build_low_bounded_range call_tmp[776319]))
        unknown call_tmp[776331] "expr temp" "maybe param" "maybe type" "temp"
        (776334 'move' call_tmp[776331](95765 call(95762 call (partial) sizeAs _mt[203] first[95719]) idxType[95717]))
        unknown call_tmp[776336] "expr temp" "maybe param" "maybe type" "temp"
        (776339 'move' call_tmp[776336](95753 call # call_tmp[776324] call_tmp[776331]))
        unknown call_tmp[776341] "expr temp" "maybe param" "maybe type" "temp"
        (776344 'move' call_tmp[776341](95769 call : 0 idxType[95717]))
        unknown call_tmp[776346] "expr temp" "maybe param" "maybe type" "temp"
        (776349 'move' call_tmp[776346](95773 call chpl_build_low_bounded_range call_tmp[776341]))
        unknown call_tmp[776351] "expr temp" "maybe param" "maybe type" "temp"
        (776354 'move' call_tmp[776351](95776 call rest[95722] 0))
        unknown call_tmp[776358] "expr temp" "maybe param" "maybe type" "temp"
        (776361 'move' call_tmp[776358](95781 call(95778 call (partial) sizeAs _mt[203] call_tmp[776351]) idxType[95717]))
        unknown call_tmp[776363] "expr temp" "maybe param" "maybe type" "temp"
        (776366 'move' call_tmp[776363](95767 call # call_tmp[776346] call_tmp[776358]))
        unknown call_tmp[776368] "expr temp" "maybe param" "maybe type" "temp"
        (776371 'move' call_tmp[776368](95783 call _build_tuple call_tmp[776336] call_tmp[776363]))
        (601074 'move' ret[601064](601073 'deref' call_tmp[776368]))
        gotoReturn _end_helper[601062] _end_helper[601062]
      }
      label _end_helper[601062]
      (601066 return ret[601064])
    }
    unknown idxType[95802] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[776373] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776376 'move' call_tmp[776373](644755 call ranges[95711] 0))
    (644758 'move' idxType[95802](644753 call idxType _mt[203] call_tmp[776373]))
    (550854 'end of statement')
    unknown call_tmp[776382] "expr temp" "maybe param" "maybe type" "temp"
    (776385 'move' call_tmp[776382](95841 call size _mt[203] ranges[95711]))
    unknown call_tmp[776387] "expr temp" "maybe param" "maybe type" "temp"
    (776390 'move' call_tmp[776387](95838 call > call_tmp[776382] 1))
    unknown call_tmp[776392] "expr temp" "maybe param" "maybe type" "temp"
    (776395 'move' call_tmp[776392](95845 call _cond_test call_tmp[776387]))
    if call_tmp[776392]
    {
      unknown call_tmp[776397] "expr temp" "maybe param" "maybe type" "temp"
      (776400 'move' call_tmp[776397](95812 call helper idxType[95802](95815 'expand_tuple' ranges[95711])))
      (601085 'move' ret[601080](601084 'deref' call_tmp[776397]))
      gotoReturn _end_computeZeroBasedRanges[601078] _end_computeZeroBasedRanges[601078]
      (550855 'end of statement' idxType[95802])
    }
    {
      unknown call_tmp[776402] "expr temp" "maybe param" "maybe type" "temp"
      (776405 'move' call_tmp[776402](95821 call : 0 idxType[95802]))
      unknown call_tmp[776407] "expr temp" "maybe param" "maybe type" "temp"
      (776410 'move' call_tmp[776407](95825 call chpl_build_low_bounded_range call_tmp[776402]))
      unknown call_tmp[776412] "expr temp" "maybe param" "maybe type" "temp"
      (776415 'move' call_tmp[776412](95828 call ranges[95711] 0))
      unknown call_tmp[776419] "expr temp" "maybe param" "maybe type" "temp"
      (776422 'move' call_tmp[776419](95833 call(95830 call (partial) sizeAs _mt[203] call_tmp[776412]) idxType[95802]))
      unknown call_tmp[776424] "expr temp" "maybe param" "maybe type" "temp"
      (776427 'move' call_tmp[776424](95819 call # call_tmp[776407] call_tmp[776419]))
      unknown call_tmp[776429] "expr temp" "maybe param" "maybe type" "temp"
      (776432 'move' call_tmp[776429](95835 call _build_tuple call_tmp[776424]))
      (601090 'move' ret[601080](601089 'deref' call_tmp[776429]))
      gotoReturn _end_computeZeroBasedRanges[601078] _end_computeZeroBasedRanges[601078]
      (550857 'end of statement' idxType[95802])
    }
    label _end_computeZeroBasedRanges[601078]
    (601082 return ret[601080])
  }
  function densiResult[95853](arg arg[95856]:_domain[225034](?), arg whole[95860]:_domain[225034](?)) type : _unknown[42] "private"
  {
    unknown ret[601096] "RVV" "temp" "type variable"
    unknown call_tmp[776436] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776439 'move' call_tmp[776436](95869 call rank _mt[203] whole[95860]))
    unknown call_tmp[776443] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776446 'move' call_tmp[776443](95873 call idxType _mt[203] whole[95860]))
    unknown call_tmp[776450] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776453 'move' call_tmp[776450](95884 call(95881 call (partial) dim _mt[203] arg[95856]) 0))
    unknown call_tmp[776457] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776460 'move' call_tmp[776457](95890 call(95887 call (partial) dim _mt[203] whole[95860]) 0))
    unknown call_tmp[776462] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776465 'move' call_tmp[776462](95877 call chpl_strideProduct call_tmp[776450] call_tmp[776457]))
    unknown call_tmp[776467] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776470 'move' call_tmp[776467](95866 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[776436] call_tmp[776443] call_tmp[776462]))
    (601101 'move' ret[601096](601100 'deref' call_tmp[776467]))
    (601098 return ret[601096])
  }
  function densiResult[95894](arg arg[95897]:_tuple[246](?), arg whole[95901]:_tuple[246](?)) type : _unknown[42] "private"
  {
    unknown ret[601105] "RVV" "temp" "type variable"
    unknown call_tmp[776472] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776475 'move' call_tmp[776472](95909 call whole[95901] 0))
    unknown call_tmp[776479] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776482 'move' call_tmp[776479](95911 call idxType _mt[203] call_tmp[776472]))
    unknown call_tmp[776484] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776487 'move' call_tmp[776484](95915 call arg[95897] 0))
    unknown call_tmp[776491] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776494 'move' call_tmp[776491](95917 call bounds _mt[203] call_tmp[776484]))
    unknown call_tmp[776496] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776499 'move' call_tmp[776496](95923 call chpl_strideUnion arg[95897]))
    unknown call_tmp[776501] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776504 'move' call_tmp[776501](95926 call chpl_strideUnion whole[95901]))
    unknown call_tmp[776506] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776509 'move' call_tmp[776506](95921 call chpl_strideProduct call_tmp[776496] call_tmp[776501]))
    unknown call_tmp[776511] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776514 'move' call_tmp[776511](95907 call range[240](?) call_tmp[776479] call_tmp[776491] call_tmp[776506]))
    (601110 'move' ret[601105](601109 'deref' call_tmp[776511]))
    (601107 return ret[601105])
  }
  function densiResult[95930](arg arg[95935]:range[240](?), arg whole[95941]:range[240](?)) type : _unknown[42] "private"
  {
    unknown ret[601114] "RVV" "temp" "type variable"
    unknown call_tmp[776518] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776521 'move' call_tmp[776518](95949 call idxType _mt[203] whole[95941]))
    unknown call_tmp[776525] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776528 'move' call_tmp[776525](95953 call bounds _mt[203] arg[95935]))
    unknown call_tmp[776530] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776533 'move' call_tmp[776530](95957 call chpl_strideProduct arg[95935] whole[95941]))
    unknown call_tmp[776535] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776538 'move' call_tmp[776535](95947 call range[240](?) call_tmp[776518] call_tmp[776525] call_tmp[776530]))
    (601119 'move' ret[601114](601118 'deref' call_tmp[776535]))
    (601116 return ret[601114])
  }
  function densify[95962](arg sub[95965]:_domain[225034](?), arg whole[95969]:_domain[225034](?), arg userErrors[95973] :
  1 =
  1) : _unknown[42]
  {
    unknown ret[601123] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577135] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[776540] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (776543 'move' call_tmp[776540](95986 call _build_tuple sub[95965] whole[95969]))
      (577139 'move' call_type_tmp[577135](95988 'typeof' call_tmp[776540]))
    }
    unknown argtypes[95982] "dead at end of block" "insert auto destroy" "type variable"
    (644761 'move' argtypes[95982] call_type_tmp[577135])
    (550862 'end of statement')
    unknown call_tmp[776547] "expr temp" "maybe param" "maybe type" "temp"
    (776550 'move' call_tmp[776547](95995 call rank _mt[203] sub[95965]))
    unknown call_tmp[776554] "expr temp" "maybe param" "maybe type" "temp"
    (776557 'move' call_tmp[776554](95999 call rank _mt[203] whole[95969]))
    unknown call_tmp[776559] "expr temp" "maybe param" "maybe type" "temp"
    (776562 'move' call_tmp[776559](95992 call == call_tmp[776547] call_tmp[776554]))
    (95991 call _densiCheck call_tmp[776559] argtypes[95982])
    (550863 'end of statement' argtypes[95982])
    unknown call_tmp[776566] "expr temp" "maybe param" "maybe type" "temp"
    (776569 'move' call_tmp[776566](96006 call idxType _mt[203] sub[95965]))
    unknown call_tmp[776573] "expr temp" "maybe param" "maybe type" "temp"
    (776576 'move' call_tmp[776573](96010 call idxType _mt[203] whole[95969]))
    (96004 call _densiIdxCheck call_tmp[776566] call_tmp[776573] argtypes[95982])
    (550865 'end of statement' argtypes[95982])
    unknown call_tmp[776580] "expr temp" "maybe param" "maybe type" "temp"
    (776583 'move' call_tmp[776580](96022 call(96019 call (partial) dims _mt[203] sub[95965])))
    unknown call_tmp[776587] "expr temp" "maybe param" "maybe type" "temp"
    (776590 'move' call_tmp[776587](96027 call(96024 call (partial) dims _mt[203] whole[95969])))
    unknown call_tmp[776592] "expr temp" "maybe param" "maybe type" "temp"
    (776595 'move' call_tmp[776592](96017 call densify call_tmp[776580] call_tmp[776587] userErrors[95973]))
    unknown call_tmp[776597] "expr temp" "maybe param" "maybe type" "temp"
    (776600 'move' call_tmp[776597](96031 call chpl__buildDomainExpr(96029 'expand_tuple' call_tmp[776592]) 1))
    unknown call_tmp[776602] "expr temp" "maybe param" "maybe type" "temp"
    (776605 'move' call_tmp[776602](601128 call densiResult sub[95965] whole[95969]))
    (601132 'move' ret[601123](601131 'coerce' call_tmp[776597] call_tmp[776602]))
    (601125 return ret[601123])
  }
  { scopeless type
    (95977 call densiResult sub[95965] whole[95969])
  }
  function densify[96036](arg subs[96038]:_any[141](?), arg wholes[96040]:_any[141](?), arg userErrors[96043] :
  1 =
  1) : _unknown[42]
  {
    unknown ret[601136] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577141] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[776607] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (776610 'move' call_tmp[776607](96060 call _build_tuple subs[96038] wholes[96040]))
      (577145 'move' call_type_tmp[577141](96062 'typeof' call_tmp[776607]))
    }
    unknown argtypes[96056] "dead at end of block" "insert auto destroy" "type variable"
    (644764 'move' argtypes[96056] call_type_tmp[577141])
    unknown call_tmp[776614] "expr temp" "maybe param" "maybe type" "temp"
    (776617 'move' call_tmp[776614](96069 call size _mt[203] wholes[96040]))
    unknown call_tmp[776621] "expr temp" "maybe param" "maybe type" "temp"
    (776624 'move' call_tmp[776621](96073 call size _mt[203] subs[96038]))
    unknown call_tmp[776626] "expr temp" "maybe param" "maybe type" "temp"
    (776629 'move' call_tmp[776626](96066 call == call_tmp[776614] call_tmp[776621]))
    (96065 call _densiCheck call_tmp[776626] argtypes[96056])
    (550868 'end of statement' argtypes[96056])
    unknown call_tmp[776631] "expr temp" "maybe param" "maybe type" "temp"
    (776634 'move' call_tmp[776631](96082 call subs[96038] 0))
    unknown call_tmp[776636] "expr temp" "maybe param" "maybe type" "temp"
    (776639 'move' call_tmp[776636](96080 call isRange call_tmp[776631]))
    (96078 call _densiCheck call_tmp[776636] argtypes[96056])
    (550870 'end of statement' argtypes[96056])
    unknown call_tmp[776641] "expr temp" "maybe param" "maybe type" "temp"
    (776644 'move' call_tmp[776641](96090 call wholes[96040] 0))
    unknown call_tmp[776646] "expr temp" "maybe param" "maybe type" "temp"
    (776649 'move' call_tmp[776646](96088 call isRange call_tmp[776641]))
    (96086 call _densiCheck call_tmp[776646] argtypes[96056])
    (550872 'end of statement' argtypes[96056])
    unknown call_tmp[776651] "expr temp" "maybe param" "maybe type" "temp"
    (776654 'move' call_tmp[776651](96096 call subs[96038] 0))
    (96094 call _densiEnsureBounded call_tmp[776651])
    (550874 'end of statement')
    unknown call_tmp[776656] "expr temp" "maybe param" "maybe type" "temp"
    (776659 'move' call_tmp[776656](96101 call subs[96038] 0))
    unknown call_tmp[776663] "expr temp" "maybe param" "maybe type" "temp"
    (776666 'move' call_tmp[776663](96103 call idxType _mt[203] call_tmp[776656]))
    unknown call_tmp[776668] "expr temp" "maybe param" "maybe type" "temp"
    (776671 'move' call_tmp[776668](96107 call wholes[96040] 0))
    unknown call_tmp[776675] "expr temp" "maybe param" "maybe type" "temp"
    (776678 'move' call_tmp[776675](96109 call idxType _mt[203] call_tmp[776668]))
    (96099 call _densiIdxCheck call_tmp[776663] call_tmp[776675] argtypes[96056])
    (550875 'end of statement' argtypes[96056])
    unknown call_tmp[776682] "maybe param" "maybe type" "temp"
    (776685 'move' call_tmp[776682](96116 call size _mt[203] wholes[96040]))
    unknown rank[96114] "dead at end of block" "param"
    (644766 'init var' rank[96114] call_tmp[776682])
    (96120 'end of statement')
    unknown IT[96122] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[776687] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (776690 'move' call_tmp[776687](644771 call wholes[96040] 0))
    (644774 'move' IT[96122](644769 call idxType _mt[203] call_tmp[776687]))
    unknown result[96131] "dead at end of block" "insert auto destroy"
    unknown call_tmp[776694] "expr temp" "maybe param" "maybe type" "temp"
    (776697 'move' call_tmp[776694](96136 call densiResult subs[96038] wholes[96040]))
    unknown call_tmp[776699] "expr temp" "maybe param" "maybe type" "temp"
    (776702 'move' call_tmp[776699](96132 call * rank[96114] call_tmp[776694]))
    (644776 'default init var' result[96131] call_tmp[776699])
    (96140 'end of statement')
    {
      unknown d[96141] "dead at end of block" "index var" "insert auto destroy"
      (644778 'init var' d[96141] 0)
      (550877 'end of statement')
      unknown tmp[96211] "maybe param" "temp"
      unknown call_tmp[776704] "expr temp" "maybe param" "maybe type" "temp"
      (776707 'move' call_tmp[776704](96144 call - rank[96114] 1))
      (96223 'move' tmp[96211](96221 call chpl_compute_low_param_loop_bound 0 call_tmp[776704]))
      unknown tmp[96212] "maybe param" "temp"
      unknown call_tmp[776709] "expr temp" "maybe param" "maybe type" "temp"
      (776712 'move' call_tmp[776709](96228 call - rank[96114] 1))
      (96233 'move' tmp[96212](96231 call chpl_compute_high_param_loop_bound 0 call_tmp[776709]))
      unknown tmp[96213] "maybe param" "temp"
      (96236 'move' tmp[96213] 1)
      ParamForLoop[96238]
      { d[96141] tmp[96211] tmp[96212] tmp[96213]
        {
          unknown call_tmp[776714] "expr temp" "maybe param" "maybe type" "temp"
          (776717 'move' call_tmp[776714](96156 call subs[96038] d[96141]))
          unknown call_tmp[776719] "expr temp" "maybe param" "maybe type" "temp"
          (776722 'move' call_tmp[776719](96154 call isRange call_tmp[776714]))
          (96152 call _densiCheck call_tmp[776719] argtypes[96056])
          (550878 'end of statement' d[96141] argtypes[96056])
          unknown call_tmp[776724] "expr temp" "maybe param" "maybe type" "temp"
          (776727 'move' call_tmp[776724](96164 call wholes[96040] d[96141]))
          unknown call_tmp[776729] "expr temp" "maybe param" "maybe type" "temp"
          (776732 'move' call_tmp[776729](96162 call isRange call_tmp[776724]))
          (96160 call _densiCheck call_tmp[776729] argtypes[96056])
          (550881 'end of statement' d[96141] argtypes[96056])
          unknown call_tmp[776734] "expr temp" "maybe param" "maybe type" "temp"
          (776737 'move' call_tmp[776734](96170 call wholes[96040] d[96141]))
          unknown call_tmp[776741] "expr temp" "maybe param" "maybe type" "temp"
          (776744 'move' call_tmp[776741](96172 call idxType _mt[203] call_tmp[776734]))
          (96168 call _densiIdxCheck call_tmp[776741] IT[96122] argtypes[96056])
          (550884 'end of statement' d[96141] IT[96122] argtypes[96056])
          unknown call_tmp[776746] "expr temp" "maybe param" "maybe type" "temp"
          (776749 'move' call_tmp[776746](96180 call subs[96038] d[96141]))
          (96178 call _densiEnsureBounded call_tmp[776746])
          (550888 'end of statement' d[96141])
          unknown call_tmp[776751] "expr temp" "maybe param" "maybe type" "temp"
          (776754 'move' call_tmp[776751](96185 call subs[96038] d[96141]))
          unknown call_tmp[776758] "expr temp" "maybe param" "maybe type" "temp"
          (776761 'move' call_tmp[776758](96187 call idxType _mt[203] call_tmp[776751]))
          unknown call_tmp[776763] "expr temp" "maybe param" "maybe type" "temp"
          (776766 'move' call_tmp[776763](96191 call wholes[96040] d[96141]))
          unknown call_tmp[776770] "expr temp" "maybe param" "maybe type" "temp"
          (776773 'move' call_tmp[776770](96193 call idxType _mt[203] call_tmp[776763]))
          (96183 call _densiIdxCheck call_tmp[776758] call_tmp[776770] argtypes[96056])
          (550890 'end of statement' d[96141] argtypes[96056])
          unknown call_tmp[776775] "expr temp" "maybe param" "maybe type" "temp"
          (776778 'move' call_tmp[776775](96200 call result[96131] d[96141]))
          unknown call_tmp[776780] "expr temp" "maybe param" "maybe type" "temp"
          (776783 'move' call_tmp[776780](96205 call subs[96038] d[96141]))
          unknown call_tmp[776785] "expr temp" "maybe param" "maybe type" "temp"
          (776788 'move' call_tmp[776785](96208 call wholes[96040] d[96141]))
          unknown call_tmp[776790] "expr temp" "maybe param" "maybe type" "temp"
          (776793 'move' call_tmp[776790](96203 call densify call_tmp[776780] call_tmp[776785] userErrors[96043]))
          (96197 call = call_tmp[776775] call_tmp[776790])
          (550893 'end of statement' result[96131] d[96141])
        }
      }
      label _unused_continueLabel[96215]
      label _breakLabel[96214]
    }
    (601141 'move' ret[601136](601140 'deref' result[96131]))
    gotoReturn _end_densify[601134] _end_densify[601134]
    (550896 'end of statement' result[96131])
    label _end_densify[601134]
    (601138 return ret[601136])
  }
  where {
    unknown tmp[482394] "maybe param" "temp"
    (482405 'move' tmp[482394](96049 call isTuple subs[96038]))
    unknown call_tmp[776795] "expr temp" "maybe param" "maybe type" "temp"
    (776798 'move' call_tmp[776795](482407 call _cond_invalid tmp[482394]))
    if call_tmp[776795]
    {
      (482410 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670011] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670012] "maybe param" "temp"
    unknown call_tmp[776800] "expr temp" "maybe param" "maybe type" "temp"
    (776803 'move' call_tmp[776800](482395 call isTrue tmp[482394]))
    (670017 'move' tmp[670012](670015 call _cond_test call_tmp[776800]))
    if tmp[670012]
    {
      unknown tmp[670019] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[776805] "expr temp" "maybe param" "maybe type" "temp"
      (776808 'move' call_tmp[776805](96052 call isTuple wholes[96040]))
      (670021 'move' tmp[670019](482398 call isTrue call_tmp[776805]))
      (670026 'move' tmp[670011](670023 '_paramFoldLogical' tmp[670012] tmp[670019]))
    }
    {
      (670031 'move' tmp[670011](670028 '_paramFoldLogical' tmp[670012] 0))
    }
    (1001360 call chpl_statementLevelSymbol tmp[670011])
  }
  function densify[96252](arg s[96260]:range[240](?), arg w[96268]:range[240](?), arg userErrors[96272] :
  1 =
  1) : _unknown[42]
  {
    unknown ret[601149] "RVV" "temp"
    (96281 call _densiEnsureBounded s[96260])
    (550898 'end of statement')
    { scopeless type
      unknown call_type_tmp[577147] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[776810] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (776813 'move' call_tmp[776810](96293 call _build_tuple s[96260] w[96268]))
      (577151 'move' call_type_tmp[577147](96295 'typeof' call_tmp[776810]))
    }
    unknown call_tmp[776817] "expr temp" "maybe param" "maybe type" "temp"
    (776820 'move' call_tmp[776817](96286 call idxType _mt[203] s[96260]))
    unknown call_tmp[776822] "expr temp" "maybe param" "maybe type" "temp"
    (776825 'move' call_tmp[776822](520492 'query' w[96268] 1))
    (96284 call _densiIdxCheck call_tmp[776817] call_tmp[776822] call_type_tmp[577147])
    (550899 'end of statement')
    function ensure[96296](arg cond[96298]:_any[141](?), arg args[96301]:_any[141](?) ...) : _unknown[42] "no return value for void"
    {
      unknown call_tmp[776827] "expr temp" "maybe param" "maybe type" "temp"
      (776830 'move' call_tmp[776827](96326 call _cond_test userErrors[96272]))
      if call_tmp[776827]
      {
        unknown call_tmp[776832] "expr temp" "maybe param" "maybe type" "temp"
        (776835 'move' call_tmp[776832](96311 call ! cond[96298]))
        unknown call_tmp[776837] "expr temp" "maybe param" "maybe type" "temp"
        (776840 'move' call_tmp[776837](96314 call _cond_test call_tmp[776832]))
        if call_tmp[776837]
        {
          (96307 call halt(96309 'expand_tuple' args[96301]))
        }
      }
      {
        (96320 call assert cond[96298](96323 'expand_tuple' args[96301]))
      }
      (601145 return _void[46])
    }
    unknown call_tmp[776844] "expr temp" "maybe param" "maybe type" "temp"
    (776847 'move' call_tmp[776844](96538 call(96535 call (partial) sizeAs _mt[203] s[96260]) int(64)[10]))
    unknown call_tmp[776849] "expr temp" "maybe param" "maybe type" "temp"
    (776852 'move' call_tmp[776849](96532 call == call_tmp[776844] 0))
    unknown call_tmp[776854] "expr temp" "maybe param" "maybe type" "temp"
    (776857 'move' call_tmp[776854](96541 call _cond_test call_tmp[776849]))
    if call_tmp[776854]
    {
      unknown call_tmp[776859] "expr temp" "maybe param" "maybe type" "temp"
      (776862 'move' call_tmp[776859](96337 call densiResult s[96260] w[96268]))
      unknown call_tmp[776864] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (776867 'move' call_tmp[776864](1000048 'new' call_tmp[776859]))
      unknown call_tmp[776869] "expr temp" "maybe param" "maybe type" "temp"
      (776872 'move' call_tmp[776869](601154 call densiResult s[96260] w[96268]))
      (601158 'move' ret[601149](601157 'coerce' call_tmp[776864] call_tmp[776869]))
      gotoReturn _end_densify[601147] _end_densify[601147]
    }
    {
      unknown call_tmp[776876] "expr temp" "maybe param" "maybe type" "temp"
      (776879 'move' call_tmp[776876](96350 call(96347 call (partial) sizeAs _mt[203] w[96268]) uint(64)[86]))
      unknown call_tmp[776881] "expr temp" "maybe param" "maybe type" "temp"
      (776884 'move' call_tmp[776881](96344 call > call_tmp[776876] 0))
      (96343 call ensure call_tmp[776881] "densify(s=" s[96260] ", w=" w[96268] "): w is empty while s is not")
      (550903 'end of statement')
      unknown call_tmp[776890] "expr temp" "maybe param" "maybe type" "temp"
      (776893 'move' call_tmp[776890](96375 call first _mt[203] s[96260]))
      unknown call_tmp[776895] "maybe param" "maybe type" "temp"
      (776898 'move' call_tmp[776895](96373 call(96370 call (partial) indexOrder _mt[203] w[96268]) call_tmp[776890]))
      unknown call_tmp[776900] "maybe param" "maybe type" "temp"
      (776903 'move' call_tmp[776900](520495 'query' w[96268] 1))
      unknown low[96365] "dead at end of block" "insert auto destroy"
      (644780 'init var' low[96365] call_tmp[776895] call_tmp[776900])
      (96379 'end of statement')
      unknown call_tmp[776905] "expr temp" "maybe param" "maybe type" "temp"
      (776908 'move' call_tmp[776905](96382 call >= low[96365] 0))
      (96381 call ensure call_tmp[776905] "densify(s=" s[96260] ", w=" w[96268] "): s.first is not in w")
      (550904 'end of statement' low[96365])
      unknown call_tmp[776912] "expr temp" "maybe param" "maybe type" "temp"
      (776915 'move' call_tmp[776912](96525 call(96522 call (partial) sizeAs _mt[203] s[96260]) int(64)[10]))
      unknown call_tmp[776917] "expr temp" "maybe param" "maybe type" "temp"
      (776920 'move' call_tmp[776917](96519 call == call_tmp[776912] 1))
      unknown call_tmp[776922] "expr temp" "maybe param" "maybe type" "temp"
      (776925 'move' call_tmp[776922](96528 call _cond_test call_tmp[776917]))
      if call_tmp[776922]
      {
        unknown call_tmp[776927] "expr temp" "maybe param" "maybe type" "temp"
        (776930 'move' call_tmp[776927](96396 call densiResult s[96260] w[96268]))
        unknown call_tmp[776934] "expr temp" "maybe param" "maybe type" "temp"
        (776937 'move' call_tmp[776934](96404 call(96401 call (partial) createWithSingleElement _mt[203] call_tmp[776927]) low[96365]))
        unknown call_tmp[776939] "expr temp" "maybe param" "maybe type" "temp"
        (776942 'move' call_tmp[776939](601163 call densiResult s[96260] w[96268]))
        (601167 'move' ret[601149](601166 'coerce' call_tmp[776934] call_tmp[776939]))
        gotoReturn _end_densify[601147] _end_densify[601147]
        (550906 'end of statement' low[96365])
      }
      {
        unknown call_tmp[776948] "expr temp" "maybe param" "maybe type" "temp"
        (776951 'move' call_tmp[776948](96418 call last _mt[203] s[96260]))
        unknown call_tmp[776953] "maybe param" "maybe type" "temp"
        (776956 'move' call_tmp[776953](96414 call(96411 call (partial) indexOrder _mt[203] w[96268]) call_tmp[776948]))
        unknown call_tmp[776958] "maybe param" "maybe type" "temp"
        (776961 'move' call_tmp[776958](520498 'query' w[96268] 1))
        unknown high[96408] "dead at end of block" "insert auto destroy"
        (644782 'init var' high[96408] call_tmp[776953] call_tmp[776958])
        (96422 'end of statement')
        unknown call_tmp[776963] "expr temp" "maybe param" "maybe type" "temp"
        (776966 'move' call_tmp[776963](96425 call >= high[96408] 0))
        (96424 call ensure call_tmp[776963] "densify(s=" s[96260] ", w=" w[96268] "): s.last is not in w")
        (550908 'end of statement' high[96408])
        unknown call_tmp[776970] "expr temp" "maybe param" "maybe type" "temp"
        (776973 'move' call_tmp[776970](96443 call stride _mt[203] s[96260]))
        unknown call_tmp[776977] "expr temp" "maybe param" "maybe type" "temp"
        (776980 'move' call_tmp[776977](96447 call stride _mt[203] w[96268]))
        unknown call_tmp[776982] "expr temp" "maybe param" "maybe type" "temp"
        (776985 'move' call_tmp[776982](96440 call % call_tmp[776970] call_tmp[776977]))
        unknown call_tmp[776987] "expr temp" "maybe param" "maybe type" "temp"
        (776990 'move' call_tmp[776987](96438 call == call_tmp[776982] 0))
        (96437 call ensure call_tmp[776987] "densify(s=" s[96260] ", w=" w[96268] "): s.stride is not a multiple of w.stride")
        (550910 'end of statement')
        unknown call_tmp[776994] "expr temp" "maybe param" "maybe type" "temp"
        (776997 'move' call_tmp[776994](96463 call stride _mt[203] s[96260]))
        unknown call_tmp[777001] "expr temp" "maybe param" "maybe type" "temp"
        (777004 'move' call_tmp[777001](96467 call stride _mt[203] w[96268]))
        unknown call_tmp[777006] "maybe param" "maybe type" "temp"
        (777009 'move' call_tmp[777006](96460 call / call_tmp[776994] call_tmp[777001]))
        const stride[96459] "dead at end of block" "const" "insert auto destroy"
        (644784 'init var' stride[96459] call_tmp[777006])
        (96471 'end of statement')
        unknown call_tmp[777011] "expr temp" "maybe param" "maybe type" "temp"
        (777014 'move' call_tmp[777011](96477 call < stride[96459] 0))
        unknown call_tmp[777016] "expr temp" "maybe param" "maybe type" "temp"
        (777019 'move' call_tmp[777016](96481 call _cond_test call_tmp[777011]))
        if call_tmp[777016]
        {
          (96472 call <=> low[96365] high[96408])
          (550911 'end of statement' low[96365] high[96408])
        }
        unknown call_tmp[777021] "expr temp" "maybe param" "maybe type" "temp"
        (777024 'move' call_tmp[777021](96488 call <= low[96365] high[96408]))
        (96487 call assert call_tmp[777021] "densify(s=" s[96260] ", w=" w[96268] "): got low (" low[96365] ") larger than high (" high[96408] ")")
        (550914 'end of statement' low[96365] high[96408])
        unknown call_tmp[777026] "expr temp" "maybe param" "maybe type" "temp"
        (777029 'move' call_tmp[777026](96512 call chpl_build_bounded_range low[96365] high[96408]))
        unknown call_tmp[777031] "expr temp" "maybe param" "maybe type" "temp"
        (777034 'move' call_tmp[777031](96508 call chpl_by call_tmp[777026] stride[96459]))
        unknown call_tmp[777036] "expr temp" "maybe param" "maybe type" "temp"
        (777039 'move' call_tmp[777036](96516 call densiResult s[96260] w[96268]))
        unknown call_tmp[777041] "expr temp" "maybe param" "maybe type" "temp"
        (777044 'move' call_tmp[777041](96506 call : call_tmp[777031] call_tmp[777036]))
        unknown call_tmp[777046] "expr temp" "maybe param" "maybe type" "temp"
        (777049 'move' call_tmp[777046](601172 call densiResult s[96260] w[96268]))
        (601176 'move' ret[601149](601175 'coerce' call_tmp[777041] call_tmp[777046]))
        gotoReturn _end_densify[601147] _end_densify[601147]
        (550917 'end of statement' low[96365] high[96408] stride[96459])
      }
    }
    label _end_densify[601147]
    (601151 return ret[601149])
  }
  { scopeless type
    (96276 call densiResult s[96260] w[96268])
  }
  function densify[96548](arg sArg[96559]:range[240](?), arg w[96574]:range[240](?), arg userErrors[96578] :
  1 =
  1) : _unknown[42] "compiler added where"
  {
    unknown ret[601184] "RVV" "temp"
    (96588 call _densiEnsureBounded sArg[96559])
    (550921 'end of statement')
    { scopeless type
      unknown call_type_tmp[577153] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[777051] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (777054 'move' call_tmp[777051](96600 call _build_tuple sArg[96559] w[96574]))
      (577157 'move' call_type_tmp[577153](96602 'typeof' call_tmp[777051]))
    }
    unknown call_tmp[777058] "expr temp" "maybe param" "maybe type" "temp"
    (777061 'move' call_tmp[777058](96593 call idxType _mt[203] sArg[96559]))
    unknown call_tmp[777063] "expr temp" "maybe param" "maybe type" "temp"
    (777066 'move' call_tmp[777063](520564 'query' w[96574] c"strides" 1))
    (96591 call _densiIdxCheck call_tmp[777058] call_tmp[777063] call_type_tmp[577153])
    (550922 'end of statement')
    unknown call_tmp[777068] "expr temp" "maybe param" "maybe type" "temp"
    (777071 'move' call_tmp[777068](520568 'query' w[96574] c"strides" 1))
    unknown call_tmp[777073] "expr temp" "maybe param" "maybe type" "temp"
    (777076 'move' call_tmp[777073](520512 'query' sArg[96559] c"bounds"))
    unknown call_tmp[777078] "expr temp" "maybe param" "maybe type" "temp"
    (777081 'move' call_tmp[777078](520528 'query' sArg[96559] c"strides"))
    unknown call_tmp[777083] "expr temp" "maybe param" "maybe type" "temp"
    (777086 'move' call_tmp[777083](96609 call range[240](?) call_tmp[777068] call_tmp[777073] call_tmp[777078]))
    unknown call_tmp[777088] "maybe param" "maybe type" "temp"
    (777091 'move' call_tmp[777088](96605 call : sArg[96559] call_tmp[777083]))
    const s[96604] "dead at end of block" "const" "insert auto destroy"
    (644786 'init var' s[96604] call_tmp[777088])
    (96614 'end of statement')
    function ensure[96615](arg cond[96617]:_any[141](?)) : _unknown[42] "no return value for void"
    {
      unknown call_tmp[777093] "expr temp" "maybe param" "maybe type" "temp"
      (777096 'move' call_tmp[777093](96637 call _cond_test userErrors[96578]))
      if call_tmp[777093]
      {
        unknown call_tmp[777098] "expr temp" "maybe param" "maybe type" "temp"
        (777101 'move' call_tmp[777098](96624 call ! cond[96617]))
        unknown call_tmp[777103] "expr temp" "maybe param" "maybe type" "temp"
        (777106 'move' call_tmp[777103](96627 call _cond_test call_tmp[777098]))
        if call_tmp[777103]
        {
          (96622 call halt)
        }
      }
      {
        (96633 call assert cond[96617])
      }
      (601180 return _void[46])
    }
    unknown tmp[482415] "maybe param" "temp"
    (482426 'move' tmp[482415](96652 call(96649 call (partial) isEmpty _mt[203] s[96604])))
    unknown call_tmp[777110] "expr temp" "maybe param" "maybe type" "temp"
    (777113 'move' call_tmp[777110](482428 call _cond_invalid tmp[482415]))
    if call_tmp[777110]
    {
      (482431 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[670069] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670070] "maybe param" "temp"
    unknown call_tmp[777115] "expr temp" "maybe param" "maybe type" "temp"
    (777118 'move' call_tmp[777115](482416 call isTrue tmp[482415]))
    (670075 'move' tmp[670070](670073 call _cond_test call_tmp[777115]))
    if tmp[670070]
    {
      (670080 'move' tmp[670069](670077 '_paramFoldLogical' tmp[670070] 1))
    }
    {
      unknown tmp[670038] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[670039] "maybe param" "temp"
      unknown call_tmp[777120] "expr temp" "maybe param" "maybe type" "temp"
      (777123 'move' call_tmp[777120](520572 'query' w[96574] c"strides" 1))
      unknown call_tmp[777125] "expr temp" "maybe param" "maybe type" "temp"
      (777128 'move' call_tmp[777125](96660 call isIntType call_tmp[777120]))
      (670044 'move' tmp[670039](670042 call _cond_test call_tmp[777125]))
      if tmp[670039]
      {
        unknown tmp[670046] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (670048 'move' tmp[670046](96663 call low _mt[203] s[96604]))
        (670053 'move' tmp[670038](670050 '_paramFoldLogical' tmp[670039] tmp[670046]))
      }
      {
        unknown tmp[670055] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (670057 'move' tmp[670055](96667 call lowBound _mt[203] s[96604]))
        (670062 'move' tmp[670038](670059 '_paramFoldLogical' tmp[670039] tmp[670055]))
      }
      unknown tmp[670082] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777136] "expr temp" "maybe param" "maybe type" "temp"
      (777139 'move' call_tmp[777136](96656 call lowBound _mt[203] w[96574]))
      unknown call_tmp[777141] "expr temp" "maybe param" "maybe type" "temp"
      (777144 'move' call_tmp[777141](96653 call <= call_tmp[777136] tmp[670038]))
      (670084 'move' tmp[670082](482420 call isTrue call_tmp[777141]))
      (670089 'move' tmp[670069](670086 '_paramFoldLogical' tmp[670070] tmp[670082]))
    }
    (96645 call ensure tmp[670069])
    (550926 'end of statement' s[96604])
    unknown tmp[482436] "maybe param" "temp"
    unknown tmp[482457] "maybe param" "temp"
    (482468 'move' tmp[482457](96683 call(96680 call (partial) isEmpty _mt[203] s[96604])))
    unknown call_tmp[777148] "expr temp" "maybe param" "maybe type" "temp"
    (777151 'move' call_tmp[777148](482470 call _cond_invalid tmp[482457]))
    if call_tmp[777148]
    {
      (482473 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[670096] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670097] "maybe param" "temp"
    unknown call_tmp[777153] "expr temp" "maybe param" "maybe type" "temp"
    (777156 'move' call_tmp[777153](482458 call isTrue tmp[482457]))
    (670102 'move' tmp[670097](670100 call _cond_test call_tmp[777153]))
    if tmp[670097]
    {
      (670107 'move' tmp[670096](670104 '_paramFoldLogical' tmp[670097] 1))
    }
    {
      unknown tmp[670109] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777160] "expr temp" "maybe param" "maybe type" "temp"
      (777163 'move' call_tmp[777160](96690 call(96687 call (partial) hasHighBound _mt[203] w[96574])))
      unknown call_tmp[777165] "expr temp" "maybe param" "maybe type" "temp"
      (777168 'move' call_tmp[777165](96684 call ! call_tmp[777160]))
      (670111 'move' tmp[670109](482462 call isTrue call_tmp[777165]))
      (670116 'move' tmp[670096](670113 '_paramFoldLogical' tmp[670097] tmp[670109]))
    }
    (482447 'move' tmp[482436] tmp[670096])
    unknown call_tmp[777170] "expr temp" "maybe param" "maybe type" "temp"
    (777173 'move' call_tmp[777170](482449 call _cond_invalid tmp[482436]))
    if call_tmp[777170]
    {
      (482452 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[670123] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670124] "maybe param" "temp"
    unknown call_tmp[777175] "expr temp" "maybe param" "maybe type" "temp"
    (777178 'move' call_tmp[777175](482437 call isTrue tmp[482436]))
    (670129 'move' tmp[670124](670127 call _cond_test call_tmp[777175]))
    if tmp[670124]
    {
      (670134 'move' tmp[670123](670131 '_paramFoldLogical' tmp[670124] 1))
    }
    {
      unknown tmp[670136] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777182] "expr temp" "maybe param" "maybe type" "temp"
      (777185 'move' call_tmp[777182](96694 call high _mt[203] s[96604]))
      unknown call_tmp[777189] "expr temp" "maybe param" "maybe type" "temp"
      (777192 'move' call_tmp[777189](96698 call highBound _mt[203] w[96574]))
      unknown call_tmp[777194] "expr temp" "maybe param" "maybe type" "temp"
      (777197 'move' call_tmp[777194](96691 call <= call_tmp[777182] call_tmp[777189]))
      (670138 'move' tmp[670136](482441 call isTrue call_tmp[777194]))
      (670143 'move' tmp[670123](670140 '_paramFoldLogical' tmp[670124] tmp[670136]))
    }
    (96674 call ensure tmp[670123])
    (550930 'end of statement' s[96604])
    unknown tmp[482478] "maybe param" "temp"
    unknown call_tmp[777199] "expr temp" "maybe param" "maybe type" "temp"
    (777202 'move' call_tmp[777199](520576 'query' w[96574] c"strides" 1))
    (482489 'move' tmp[482478](96712 call isUintType call_tmp[777199]))
    unknown call_tmp[777204] "expr temp" "maybe param" "maybe type" "temp"
    (777207 'move' call_tmp[777204](482491 call _cond_invalid tmp[482478]))
    if call_tmp[777204]
    {
      (482494 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670150] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670151] "maybe param" "temp"
    unknown call_tmp[777209] "expr temp" "maybe param" "maybe type" "temp"
    (777212 'move' call_tmp[777209](482479 call isTrue tmp[482478]))
    (670156 'move' tmp[670151](670154 call _cond_test call_tmp[777209]))
    if tmp[670151]
    {
      unknown tmp[670158] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777216] "expr temp" "maybe param" "maybe type" "temp"
      (777219 'move' call_tmp[777216](96718 call(96715 call (partial) isEmpty _mt[203] s[96604])))
      (670160 'move' tmp[670158](482482 call isTrue call_tmp[777216]))
      (670165 'move' tmp[670150](670162 '_paramFoldLogical' tmp[670151] tmp[670158]))
    }
    {
      (670170 'move' tmp[670150](670167 '_paramFoldLogical' tmp[670151] 0))
    }
    unknown call_tmp[777221] "expr temp" "maybe param" "maybe type" "temp"
    (777224 'move' call_tmp[777221](96719 call _cond_test tmp[670150]))
    if call_tmp[777221]
    {
      unknown call_tmp[777226] "expr temp" "maybe param" "maybe type" "temp"
      (777229 'move' call_tmp[777226](520580 'query' w[96574] c"strides" 1))
      unknown call_tmp[777231] "expr temp" "maybe param" "maybe type" "temp"
      (777234 'move' call_tmp[777231](520515 'query' sArg[96559] c"bounds"))
      unknown call_tmp[777236] "expr temp" "maybe param" "maybe type" "temp"
      (777239 'move' call_tmp[777236](520531 'query' sArg[96559] c"strides"))
      unknown call_tmp[777241] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (777244 'move' call_tmp[777241](1000049 'new' range[240](?) call_tmp[777226] call_tmp[777231] call_tmp[777236]))
      unknown call_tmp[777246] "expr temp" "maybe param" "maybe type" "temp"
      (777249 'move' call_tmp[777246](601190 'query' w[96574] c"strides" 1))
      unknown call_tmp[777251] "expr temp" "maybe param" "maybe type" "temp"
      (777254 'move' call_tmp[777251](601194 'query' sArg[96559] c"bounds"))
      unknown call_tmp[777256] "expr temp" "maybe param" "maybe type" "temp"
      (777259 'move' call_tmp[777256](601197 'query' sArg[96559] c"strides"))
      unknown call_tmp[777261] "expr temp" "maybe param" "maybe type" "temp"
      (777264 'move' call_tmp[777261](601189 call range[240](?) call_tmp[777246] call_tmp[777251] call_tmp[777256]))
      (601201 'move' ret[601184](601200 'coerce' call_tmp[777241] call_tmp[777261]))
      gotoReturn _end_densify[601182] _end_densify[601182]
    }
    unknown call_tmp[777268] "expr temp" "maybe param" "maybe type" "temp"
    (777271 'move' call_tmp[777268](96731 call lowBound _mt[203] w[96574]))
    unknown call_tmp[777273] "expr temp" "maybe param" "maybe type" "temp"
    (777276 'move' call_tmp[777273](96727 call - s[96604] call_tmp[777268]))
    unknown call_tmp[777278] "expr temp" "maybe param" "maybe type" "temp"
    (777281 'move' call_tmp[777278](520584 'query' w[96574] c"strides" 1))
    unknown call_tmp[777283] "expr temp" "maybe param" "maybe type" "temp"
    (777286 'move' call_tmp[777283](520518 'query' sArg[96559] c"bounds"))
    unknown call_tmp[777288] "expr temp" "maybe param" "maybe type" "temp"
    (777291 'move' call_tmp[777288](520534 'query' sArg[96559] c"strides"))
    unknown call_tmp[777293] "expr temp" "maybe param" "maybe type" "temp"
    (777296 'move' call_tmp[777293](96735 call range[240](?) call_tmp[777278] call_tmp[777283] call_tmp[777288]))
    unknown call_tmp[777298] "expr temp" "maybe param" "maybe type" "temp"
    (777301 'move' call_tmp[777298](96725 call : call_tmp[777273] call_tmp[777293]))
    unknown call_tmp[777303] "expr temp" "maybe param" "maybe type" "temp"
    (777306 'move' call_tmp[777303](601207 'query' w[96574] c"strides" 1))
    unknown call_tmp[777308] "expr temp" "maybe param" "maybe type" "temp"
    (777311 'move' call_tmp[777308](601211 'query' sArg[96559] c"bounds"))
    unknown call_tmp[777313] "expr temp" "maybe param" "maybe type" "temp"
    (777316 'move' call_tmp[777313](601214 'query' sArg[96559] c"strides"))
    unknown call_tmp[777318] "expr temp" "maybe param" "maybe type" "temp"
    (777321 'move' call_tmp[777318](601206 call range[240](?) call_tmp[777303] call_tmp[777308] call_tmp[777313]))
    (601218 'move' ret[601184](601217 'coerce' call_tmp[777298] call_tmp[777318]))
    gotoReturn _end_densify[601182] _end_densify[601182]
    (550934 'end of statement' s[96604])
    label _end_densify[601182]
    (601186 return ret[601184])
  }
  where {
    unknown call_tmp[777323] "expr temp" "maybe param" "maybe type" "temp"
    (777326 'move' call_tmp[777323](520551 'query' w[96574] c"strides"))
    unknown call_tmp[777328] "expr temp" "maybe param" "maybe type" "temp"
    (777331 'move' call_tmp[777328](520554 call == one[107127] call_tmp[777323]))
    (520558 call & 1 call_tmp[777328])
  }
  { scopeless type
    unknown call_tmp[777333] "expr temp" "maybe param" "maybe type" "temp"
    (777336 'move' call_tmp[777333](520588 'query' w[96574] c"strides" 1))
    unknown call_tmp[777338] "expr temp" "maybe param" "maybe type" "temp"
    (777341 'move' call_tmp[777338](520521 'query' sArg[96559] c"bounds"))
    unknown call_tmp[777343] "expr temp" "maybe param" "maybe type" "temp"
    (777346 'move' call_tmp[777343](520537 'query' sArg[96559] c"strides"))
    (96582 call range[240](?) call_tmp[777333] call_tmp[777338] call_tmp[777343])
  }
  function _densiEnsureBounded[96742](arg arg[96747]:range[240](?)) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[777350] "expr temp" "maybe param" "maybe type" "temp"
    (777353 'move' call_tmp[777350](96761 call bounds _mt[203] arg[96747]))
    unknown call_tmp[777355] "expr temp" "maybe param" "maybe type" "temp"
    (777358 'move' call_tmp[777355](96758 call != call_tmp[777350] both[107114]))
    unknown call_tmp[777360] "expr temp" "maybe param" "maybe type" "temp"
    (777363 'move' call_tmp[777360](96770 call _cond_test call_tmp[777355]))
    if call_tmp[777360]
    {
      (96752 call compilerError "densify() currently requires that sub-ranges be bounded" 2)
    }
    (601222 return _void[46])
  }
  function _densiIdxCheck[96777](arg subIdxType[96779]:_any[141](?), arg wholeIdxType[96781]:_any[141](?), arg argtypes[96783]:_any[141](?)) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[777365] "expr temp" "maybe param" "maybe type" "temp"
    (777368 'move' call_tmp[777365](96789 call chpl__legalIntCoerce subIdxType[96779] wholeIdxType[96781]))
    (96787 call _densiCheck call_tmp[777365] argtypes[96783](errlevel = 3))
    (601224 return _void[46])
  }
  function _densiCheck[96797](param arg cond[96799]:_any[141](?), arg argtypes[96801]:_any[141](?), param arg errlevel[96804] :
  2 =
  2) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[777370] "expr temp" "maybe param" "maybe type" "temp"
    (777373 'move' call_tmp[777370](96819 call ! cond[96799]))
    unknown call_tmp[777375] "expr temp" "maybe param" "maybe type" "temp"
    (777378 'move' call_tmp[777375](96822 call _cond_test call_tmp[777370]))
    if call_tmp[777375]
    {
      unknown call_tmp[777380] "expr temp" "maybe param" "maybe type" "temp"
      (777383 'move' call_tmp[777380](96813 call : argtypes[96801] string[244]))
      (96809 call compilerError "densify() is defined only on matching domains, ranges, and quasi-homogeneous tuples of ranges (except stridability and range b call_tmp[777380] errlevel[96804])
    }
    (601226 return _void[46])
  }
  function unDensify[96829](arg dense[96832]:_domain[225034](?), arg whole[96836]:_domain[225034](?), arg userErrors[96840] :
  1 =
  1) : _unknown[42]
  {
    unknown ret[601230] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577159] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[777385] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (777388 'move' call_tmp[777385](96853 call _build_tuple dense[96832] whole[96836]))
      (577163 'move' call_type_tmp[577159](96855 'typeof' call_tmp[777385]))
    }
    unknown argtypes[96849] "dead at end of block" "insert auto destroy" "type variable"
    (644789 'move' argtypes[96849] call_type_tmp[577159])
    (550939 'end of statement')
    unknown call_tmp[777392] "expr temp" "maybe param" "maybe type" "temp"
    (777395 'move' call_tmp[777392](96862 call rank _mt[203] dense[96832]))
    unknown call_tmp[777399] "expr temp" "maybe param" "maybe type" "temp"
    (777402 'move' call_tmp[777399](96866 call rank _mt[203] whole[96836]))
    unknown call_tmp[777404] "expr temp" "maybe param" "maybe type" "temp"
    (777407 'move' call_tmp[777404](96859 call == call_tmp[777392] call_tmp[777399]))
    (96858 call _undensCheck call_tmp[777404] argtypes[96849])
    (550940 'end of statement' argtypes[96849])
    unknown call_tmp[777411] "expr temp" "maybe param" "maybe type" "temp"
    (777414 'move' call_tmp[777411](96878 call(96875 call (partial) dims _mt[203] dense[96832])))
    unknown call_tmp[777418] "expr temp" "maybe param" "maybe type" "temp"
    (777421 'move' call_tmp[777418](96883 call(96880 call (partial) dims _mt[203] whole[96836])))
    unknown call_tmp[777423] "expr temp" "maybe param" "maybe type" "temp"
    (777426 'move' call_tmp[777423](96873 call unDensify call_tmp[777411] call_tmp[777418] userErrors[96840]))
    unknown call_tmp[777428] "expr temp" "maybe param" "maybe type" "temp"
    (777431 'move' call_tmp[777428](96887 call chpl__buildDomainExpr(96885 'expand_tuple' call_tmp[777423]) 1))
    unknown call_tmp[777433] "expr temp" "maybe param" "maybe type" "temp"
    (777436 'move' call_tmp[777433](601235 call densiResult dense[96832] whole[96836]))
    (601239 'move' ret[601230](601238 'coerce' call_tmp[777428] call_tmp[777433]))
    (601232 return ret[601230])
  }
  { scopeless type
    (96844 call densiResult dense[96832] whole[96836])
  }
  function unDensify[96892](arg denses[96894]:_any[141](?), arg wholes[96896]:_any[141](?), arg userErrors[96899] :
  1 =
  1) : _unknown[42]
  {
    unknown ret[601243] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577165] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[777438] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (777441 'move' call_tmp[777438](96916 call _build_tuple denses[96894] wholes[96896]))
      (577169 'move' call_type_tmp[577165](96918 'typeof' call_tmp[777438]))
    }
    unknown argtypes[96912] "dead at end of block" "insert auto destroy" "type variable"
    (644792 'move' argtypes[96912] call_type_tmp[577165])
    unknown call_tmp[777445] "expr temp" "maybe param" "maybe type" "temp"
    (777448 'move' call_tmp[777445](96925 call size _mt[203] wholes[96896]))
    unknown call_tmp[777452] "expr temp" "maybe param" "maybe type" "temp"
    (777455 'move' call_tmp[777452](96929 call size _mt[203] denses[96894]))
    unknown call_tmp[777457] "expr temp" "maybe param" "maybe type" "temp"
    (777460 'move' call_tmp[777457](96922 call == call_tmp[777445] call_tmp[777452]))
    (96921 call _undensCheck call_tmp[777457] argtypes[96912])
    (550943 'end of statement' argtypes[96912])
    unknown call_tmp[777462] "expr temp" "maybe param" "maybe type" "temp"
    (777465 'move' call_tmp[777462](96938 call denses[96894] 0))
    unknown call_tmp[777467] "expr temp" "maybe param" "maybe type" "temp"
    (777470 'move' call_tmp[777467](96936 call isRange call_tmp[777462]))
    (96934 call _undensCheck call_tmp[777467] argtypes[96912])
    (550945 'end of statement' argtypes[96912])
    unknown call_tmp[777472] "expr temp" "maybe param" "maybe type" "temp"
    (777475 'move' call_tmp[777472](96946 call wholes[96896] 0))
    unknown call_tmp[777477] "expr temp" "maybe param" "maybe type" "temp"
    (777480 'move' call_tmp[777477](96944 call isRange call_tmp[777472]))
    (96942 call _undensCheck call_tmp[777477] argtypes[96912])
    (550947 'end of statement' argtypes[96912])
    unknown call_tmp[777482] "expr temp" "maybe param" "maybe type" "temp"
    (777485 'move' call_tmp[777482](96952 call denses[96894] 0))
    (96950 call _undensEnsureBounded call_tmp[777482])
    (550949 'end of statement')
    unknown call_tmp[777489] "maybe param" "maybe type" "temp"
    (777492 'move' call_tmp[777489](96957 call size _mt[203] wholes[96896]))
    unknown rank[96955] "dead at end of block" "param"
    (644794 'init var' rank[96955] call_tmp[777489])
    (96961 'end of statement')
    unknown IT[96963] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[777494] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (777497 'move' call_tmp[777494](644799 call wholes[96896] 0))
    (644802 'move' IT[96963](644797 call idxType _mt[203] call_tmp[777494]))
    unknown result[96972] "dead at end of block" "insert auto destroy"
    unknown call_tmp[777501] "expr temp" "maybe param" "maybe type" "temp"
    (777504 'move' call_tmp[777501](96977 call densiResult denses[96894] wholes[96896]))
    unknown call_tmp[777506] "expr temp" "maybe param" "maybe type" "temp"
    (777509 'move' call_tmp[777506](96973 call * rank[96955] call_tmp[777501]))
    (644804 'default init var' result[96972] call_tmp[777506])
    (96981 'end of statement')
    {
      unknown d[96982] "dead at end of block" "index var" "insert auto destroy"
      (644806 'init var' d[96982] 0)
      (550950 'end of statement')
      unknown tmp[97038] "maybe param" "temp"
      unknown call_tmp[777511] "expr temp" "maybe param" "maybe type" "temp"
      (777514 'move' call_tmp[777511](96985 call - rank[96955] 1))
      (97050 'move' tmp[97038](97048 call chpl_compute_low_param_loop_bound 0 call_tmp[777511]))
      unknown tmp[97039] "maybe param" "temp"
      unknown call_tmp[777516] "expr temp" "maybe param" "maybe type" "temp"
      (777519 'move' call_tmp[777516](97055 call - rank[96955] 1))
      (97060 'move' tmp[97039](97058 call chpl_compute_high_param_loop_bound 0 call_tmp[777516]))
      unknown tmp[97040] "maybe param" "temp"
      (97063 'move' tmp[97040] 1)
      ParamForLoop[97065]
      { d[96982] tmp[97038] tmp[97039] tmp[97040]
        {
          unknown call_tmp[777521] "expr temp" "maybe param" "maybe type" "temp"
          (777524 'move' call_tmp[777521](96997 call denses[96894] d[96982]))
          unknown call_tmp[777526] "expr temp" "maybe param" "maybe type" "temp"
          (777529 'move' call_tmp[777526](96995 call isRange call_tmp[777521]))
          (96993 call _undensCheck call_tmp[777526] argtypes[96912])
          (550951 'end of statement' d[96982] argtypes[96912])
          unknown call_tmp[777531] "expr temp" "maybe param" "maybe type" "temp"
          (777534 'move' call_tmp[777531](97005 call wholes[96896] d[96982]))
          unknown call_tmp[777536] "expr temp" "maybe param" "maybe type" "temp"
          (777539 'move' call_tmp[777536](97003 call isRange call_tmp[777531]))
          (97001 call _undensCheck call_tmp[777536] argtypes[96912])
          (550954 'end of statement' d[96982] argtypes[96912])
          unknown call_tmp[777541] "expr temp" "maybe param" "maybe type" "temp"
          (777544 'move' call_tmp[777541](97013 call wholes[96896] d[96982]))
          unknown call_tmp[777548] "expr temp" "maybe param" "maybe type" "temp"
          (777551 'move' call_tmp[777548](97015 call idxType _mt[203] call_tmp[777541]))
          unknown call_tmp[777553] "expr temp" "maybe param" "maybe type" "temp"
          (777556 'move' call_tmp[777553](97011 call chpl__legalIntCoerce call_tmp[777548] IT[96963]))
          (97009 call _undensCheck call_tmp[777553] argtypes[96912])
          (550957 'end of statement' d[96982] IT[96963] argtypes[96912])
          unknown call_tmp[777558] "expr temp" "maybe param" "maybe type" "temp"
          (777561 'move' call_tmp[777558](97023 call denses[96894] d[96982]))
          (97021 call _undensEnsureBounded call_tmp[777558])
          (550961 'end of statement' d[96982])
          unknown call_tmp[777563] "expr temp" "maybe param" "maybe type" "temp"
          (777566 'move' call_tmp[777563](97028 call result[96972] d[96982]))
          unknown call_tmp[777568] "expr temp" "maybe param" "maybe type" "temp"
          (777571 'move' call_tmp[777568](97033 call denses[96894] d[96982]))
          unknown call_tmp[777573] "expr temp" "maybe param" "maybe type" "temp"
          (777576 'move' call_tmp[777573](97036 call wholes[96896] d[96982]))
          unknown call_tmp[777578] "expr temp" "maybe param" "maybe type" "temp"
          (777581 'move' call_tmp[777578](97031 call unDensify call_tmp[777568] call_tmp[777573]))
          (97025 call = call_tmp[777563] call_tmp[777578])
          (550963 'end of statement' result[96972] d[96982])
        }
      }
      label _unused_continueLabel[97042]
      label _breakLabel[97041]
    }
    (601248 'move' ret[601243](601247 'deref' result[96972]))
    gotoReturn _end_unDensify[601241] _end_unDensify[601241]
    (550966 'end of statement' result[96972])
    label _end_unDensify[601241]
    (601245 return ret[601243])
  }
  where {
    unknown tmp[482499] "maybe param" "temp"
    (482510 'move' tmp[482499](96905 call isTuple denses[96894]))
    unknown call_tmp[777583] "expr temp" "maybe param" "maybe type" "temp"
    (777586 'move' call_tmp[777583](482512 call _cond_invalid tmp[482499]))
    if call_tmp[777583]
    {
      (482515 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670177] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670178] "maybe param" "temp"
    unknown call_tmp[777588] "expr temp" "maybe param" "maybe type" "temp"
    (777591 'move' call_tmp[777588](482500 call isTrue tmp[482499]))
    (670183 'move' tmp[670178](670181 call _cond_test call_tmp[777588]))
    if tmp[670178]
    {
      unknown tmp[670185] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777593] "expr temp" "maybe param" "maybe type" "temp"
      (777596 'move' call_tmp[777593](96908 call isTuple wholes[96896]))
      (670187 'move' tmp[670185](482503 call isTrue call_tmp[777593]))
      (670192 'move' tmp[670177](670189 '_paramFoldLogical' tmp[670178] tmp[670185]))
    }
    {
      (670197 'move' tmp[670177](670194 '_paramFoldLogical' tmp[670178] 0))
    }
    (1001362 call chpl_statementLevelSymbol tmp[670177])
  }
  function unDensify[97079](arg dense[97088]:range[240](?), arg whole[97096]:range[240](?)) : _unknown[42]
  {
    unknown ret[601254] "RVV" "temp"
    (97105 call _undensEnsureBounded dense[97088])
    (550968 'end of statement')
    unknown call_tmp[777600] "expr temp" "maybe param" "maybe type" "temp"
    (777603 'move' call_tmp[777600](97116 call bounds _mt[203] whole[97096]))
    unknown call_tmp[777605] "expr temp" "maybe param" "maybe type" "temp"
    (777608 'move' call_tmp[777605](97113 call == call_tmp[777600] neither[107120]))
    unknown call_tmp[777610] "expr temp" "maybe param" "maybe type" "temp"
    (777613 'move' call_tmp[777610](97125 call _cond_test call_tmp[777605]))
    if call_tmp[777610]
    {
      (97108 call compilerError "unDensify(): the 'whole' argument must have at least one bound")
    }
    unknown call_tmp[777617] "expr temp" "maybe param" "maybe type" "temp"
    (777620 'move' call_tmp[777617](97144 call(97141 call (partial) sizeAs _mt[203] dense[97088]) int(64)[10]))
    unknown call_tmp[777622] "expr temp" "maybe param" "maybe type" "temp"
    (777625 'move' call_tmp[777622](97138 call == call_tmp[777617] 0))
    unknown call_tmp[777627] "expr temp" "maybe param" "maybe type" "temp"
    (777630 'move' call_tmp[777627](97147 call _cond_test call_tmp[777622]))
    if call_tmp[777627]
    {
      unknown call_tmp[777632] "expr temp" "maybe param" "maybe type" "temp"
      (777635 'move' call_tmp[777632](97133 call densiResult dense[97088] whole[97096]))
      unknown call_tmp[777637] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (777640 'move' call_tmp[777637](1000050 'new' call_tmp[777632]))
      unknown call_tmp[777642] "expr temp" "maybe param" "maybe type" "temp"
      (777645 'move' call_tmp[777642](601259 call densiResult dense[97088] whole[97096]))
      (601263 'move' ret[601254](601262 'coerce' call_tmp[777637] call_tmp[777642]))
      gotoReturn _end_unDensify[601252] _end_unDensify[601252]
    }
    unknown call_tmp[777649] "expr temp" "maybe param" "maybe type" "temp"
    (777652 'move' call_tmp[777649](97166 call(97163 call (partial) hasFirst _mt[203] whole[97096])))
    unknown call_tmp[777654] "expr temp" "maybe param" "maybe type" "temp"
    (777657 'move' call_tmp[777654](97158 call ! call_tmp[777649]))
    unknown call_tmp[777659] "expr temp" "maybe param" "maybe type" "temp"
    (777662 'move' call_tmp[777659](97167 call _cond_test call_tmp[777654]))
    if call_tmp[777659]
    {
      (97153 call halt "unDensify() is invoked with the 'whole' range that has no first index")
    }
    unknown call_tmp[777668] "expr temp" "maybe param" "maybe type" "temp"
    (777671 'move' call_tmp[777668](97181 call first _mt[203] dense[97088]))
    unknown call_tmp[777673] "maybe param" "maybe type" "temp"
    (777676 'move' call_tmp[777673](97179 call(97176 call (partial) orderToIndex _mt[203] whole[97096]) call_tmp[777668]))
    unknown call_tmp[777678] "maybe param" "maybe type" "temp"
    (777681 'move' call_tmp[777678](520626 'query' whole[97096] 1))
    unknown low[97173] "dead at end of block" "insert auto destroy"
    (644808 'init var' low[97173] call_tmp[777673] call_tmp[777678])
    (97185 'end of statement')
    unknown call_tmp[777685] "expr temp" "maybe param" "maybe type" "temp"
    (777688 'move' call_tmp[777685](97191 call stride _mt[203] whole[97096]))
    unknown call_tmp[777692] "expr temp" "maybe param" "maybe type" "temp"
    (777695 'move' call_tmp[777692](97195 call stride _mt[203] dense[97088]))
    unknown call_tmp[777697] "maybe param" "maybe type" "temp"
    (777700 'move' call_tmp[777697](97188 call * call_tmp[777685] call_tmp[777692]))
    const stride[97187] "dead at end of block" "const" "insert auto destroy"
    (644810 'init var' stride[97187] call_tmp[777697])
    (97199 'end of statement')
    unknown call_tmp[777704] "expr temp" "maybe param" "maybe type" "temp"
    (777707 'move' call_tmp[777704](520615 'query' dense[97088] c"bounds" 1))
    unknown call_tmp[777709] "expr temp" "maybe param" "maybe type" "temp"
    (777712 'move' call_tmp[777709](97213 call(97210 call (partial) sizeAs _mt[203] dense[97088]) call_tmp[777704]))
    unknown call_tmp[777714] "expr temp" "maybe param" "maybe type" "temp"
    (777717 'move' call_tmp[777714](97207 call - call_tmp[777709] 1))
    unknown call_tmp[777719] "maybe param" "maybe type" "temp"
    (777722 'move' call_tmp[777719](97204 call chpl__addRangeStrides low[97173] stride[97187] call_tmp[777714]))
    unknown call_tmp[777724] "maybe param" "maybe type" "temp"
    (777727 'move' call_tmp[777724](520629 'query' whole[97096] 1))
    unknown high[97201] "dead at end of block" "insert auto destroy"
    (644812 'init var' high[97201] call_tmp[777719] call_tmp[777724])
    (97217 'end of statement' low[97173] stride[97187])
    unknown call_tmp[777733] "expr temp" "maybe param" "maybe type" "temp"
    (777736 'move' call_tmp[777733](97229 call last _mt[203] dense[97088]))
    unknown call_tmp[777738] "expr temp" "maybe param" "maybe type" "temp"
    (777741 'move' call_tmp[777738](97227 call(97224 call (partial) orderToIndex _mt[203] whole[97096]) call_tmp[777733]))
    unknown call_tmp[777743] "expr temp" "maybe param" "maybe type" "temp"
    (777746 'move' call_tmp[777743](97220 call == high[97201] call_tmp[777738]))
    (97219 call assert call_tmp[777743])
    (550974 'end of statement' high[97201])
    unknown call_tmp[777748] "expr temp" "maybe param" "maybe type" "temp"
    (777751 'move' call_tmp[777748](97237 call < stride[97187] 0))
    unknown call_tmp[777753] "expr temp" "maybe param" "maybe type" "temp"
    (777756 'move' call_tmp[777753](97241 call _cond_test call_tmp[777748]))
    if call_tmp[777753]
    {
      (97232 call <=> low[97173] high[97201])
      (550976 'end of statement' low[97173] high[97201])
    }
    unknown call_tmp[777758] "expr temp" "maybe param" "maybe type" "temp"
    (777761 'move' call_tmp[777758](97248 call <= low[97173] high[97201]))
    (97247 call assert call_tmp[777758] "unDensify(dense=" dense[97088] ", whole=" whole[97096] "): got low (" low[97173] ") larger than high (" high[97201] ")")
    (550979 'end of statement' low[97173] high[97201])
    unknown call_tmp[777763] "expr temp" "maybe param" "maybe type" "temp"
    (777766 'move' call_tmp[777763](97272 call chpl_build_bounded_range low[97173] high[97201]))
    unknown call_tmp[777768] "expr temp" "maybe param" "maybe type" "temp"
    (777771 'move' call_tmp[777768](97268 call chpl_by call_tmp[777763] stride[97187]))
    unknown call_tmp[777773] "expr temp" "maybe param" "maybe type" "temp"
    (777776 'move' call_tmp[777773](97276 call densiResult dense[97088] whole[97096]))
    unknown call_tmp[777778] "expr temp" "maybe param" "maybe type" "temp"
    (777781 'move' call_tmp[777778](97266 call : call_tmp[777768] call_tmp[777773]))
    unknown call_tmp[777783] "expr temp" "maybe param" "maybe type" "temp"
    (777786 'move' call_tmp[777783](601268 call densiResult dense[97088] whole[97096]))
    (601272 'move' ret[601254](601271 'coerce' call_tmp[777778] call_tmp[777783]))
    gotoReturn _end_unDensify[601252] _end_unDensify[601252]
    (550982 'end of statement' low[97173] high[97201] stride[97187])
    label _end_unDensify[601252]
    (601256 return ret[601254])
  }
  { scopeless type
    (97100 call densiResult dense[97088] whole[97096])
  }
  function unDensify[97282](arg dense[97293]:range[240](?), arg whole[97306]:range[240](?)) : _unknown[42] "compiler added where"
  {
    unknown ret[601278] "RVV" "temp"
    unknown call_tmp[777790] "expr temp" "maybe param" "maybe type" "temp"
    (777793 'move' call_tmp[777790](97327 call(97324 call (partial) hasLowBound _mt[203] whole[97306])))
    unknown call_tmp[777795] "expr temp" "maybe param" "maybe type" "temp"
    (777798 'move' call_tmp[777795](97321 call ! call_tmp[777790]))
    unknown call_tmp[777800] "expr temp" "maybe param" "maybe type" "temp"
    (777803 'move' call_tmp[777800](97328 call _cond_test call_tmp[777795]))
    if call_tmp[777800]
    {
      (97316 call compilerError "unDensify(): the 'whole' argument, when not stridable, must have a low bound")
    }
    unknown call_tmp[777807] "expr temp" "maybe param" "maybe type" "temp"
    (777810 'move' call_tmp[777807](97340 call lowBound _mt[203] whole[97306]))
    unknown call_tmp[777812] "expr temp" "maybe param" "maybe type" "temp"
    (777815 'move' call_tmp[777812](97336 call + dense[97293] call_tmp[777807]))
    unknown call_tmp[777817] "expr temp" "maybe param" "maybe type" "temp"
    (777820 'move' call_tmp[777817](520683 'query' whole[97306] c"strides" 1))
    unknown call_tmp[777822] "expr temp" "maybe param" "maybe type" "temp"
    (777825 'move' call_tmp[777822](520643 'query' dense[97293] c"bounds"))
    unknown call_tmp[777827] "expr temp" "maybe param" "maybe type" "temp"
    (777830 'move' call_tmp[777827](520653 'query' dense[97293] c"strides"))
    unknown call_tmp[777832] "expr temp" "maybe param" "maybe type" "temp"
    (777835 'move' call_tmp[777832](97344 call range[240](?) call_tmp[777817] call_tmp[777822] call_tmp[777827]))
    unknown call_tmp[777837] "expr temp" "maybe param" "maybe type" "temp"
    (777840 'move' call_tmp[777837](97334 call : call_tmp[777812] call_tmp[777832]))
    unknown call_tmp[777842] "expr temp" "maybe param" "maybe type" "temp"
    (777845 'move' call_tmp[777842](601284 'query' whole[97306] c"strides" 1))
    unknown call_tmp[777847] "expr temp" "maybe param" "maybe type" "temp"
    (777850 'move' call_tmp[777847](601288 'query' dense[97293] c"bounds"))
    unknown call_tmp[777852] "expr temp" "maybe param" "maybe type" "temp"
    (777855 'move' call_tmp[777852](601291 'query' dense[97293] c"strides"))
    unknown call_tmp[777857] "expr temp" "maybe param" "maybe type" "temp"
    (777860 'move' call_tmp[777857](601283 call range[240](?) call_tmp[777842] call_tmp[777847] call_tmp[777852]))
    (601295 'move' ret[601278](601294 'coerce' call_tmp[777837] call_tmp[777857]))
    (601280 return ret[601278])
  }
  where {
    unknown call_tmp[777862] "expr temp" "maybe param" "maybe type" "temp"
    (777865 'move' call_tmp[777862](520670 'query' whole[97306] c"strides"))
    unknown call_tmp[777867] "expr temp" "maybe param" "maybe type" "temp"
    (777870 'move' call_tmp[777867](520673 call == one[107127] call_tmp[777862]))
    (520677 call & 1 call_tmp[777867])
  }
  { scopeless type
    unknown call_tmp[777872] "expr temp" "maybe param" "maybe type" "temp"
    (777875 'move' call_tmp[777872](520687 'query' whole[97306] c"strides" 1))
    unknown call_tmp[777877] "expr temp" "maybe param" "maybe type" "temp"
    (777880 'move' call_tmp[777877](520646 'query' dense[97293] c"bounds"))
    unknown call_tmp[777882] "expr temp" "maybe param" "maybe type" "temp"
    (777885 'move' call_tmp[777882](520656 'query' dense[97293] c"strides"))
    (97310 call range[240](?) call_tmp[777872] call_tmp[777877] call_tmp[777882])
  }
  function _undensEnsureBounded[97351](arg arg[97356]:range[240](?)) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[777889] "expr temp" "maybe param" "maybe type" "temp"
    (777892 'move' call_tmp[777889](97370 call bounds _mt[203] arg[97356]))
    unknown call_tmp[777894] "expr temp" "maybe param" "maybe type" "temp"
    (777897 'move' call_tmp[777894](97367 call != call_tmp[777889] both[107114]))
    unknown call_tmp[777899] "expr temp" "maybe param" "maybe type" "temp"
    (777902 'move' call_tmp[777899](97377 call _cond_test call_tmp[777894]))
    if call_tmp[777899]
    {
      (97361 call compilerError "unDensify() currently requires that the densified ranges be bounded" 2)
    }
    (601297 return _void[46])
  }
  function _undensCheck[97384](param arg cond[97386]:_any[141](?), arg argtypes[97388]:_any[141](?), param arg errlevel[97391] :
  2 =
  2) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[777904] "expr temp" "maybe param" "maybe type" "temp"
    (777907 'move' call_tmp[777904](97406 call ! cond[97386]))
    unknown call_tmp[777909] "expr temp" "maybe param" "maybe type" "temp"
    (777912 'move' call_tmp[777909](97409 call _cond_test call_tmp[777904]))
    if call_tmp[777909]
    {
      unknown call_tmp[777914] "expr temp" "maybe param" "maybe type" "temp"
      (777917 'move' call_tmp[777914](97400 call : argtypes[97388] string[244]))
      (97396 call compilerError "unDensify() is defined only on matching domains, ranges, and quasi-homogeneous tuples of ranges, but is invoked on " call_tmp[777914] errlevel[97391])
    }
    (601299 return _void[46])
  }
  function chpl_allStridesArePositive[97416](arg arg1[97418]:_any[141](?), arg arg2[97420]:_any[141](?), arg arg3[97422]:_any[141](?), arg arg4[97424]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[601303] "RVV" "param" "temp"
    (601308 'move' ret[601303](601307 'deref' 1))
    (601305 return ret[601303])
  }
  where {
    unknown tmp[482520] "maybe param" "temp"
    unknown tmp[482541] "maybe param" "temp"
    unknown tmp[482562] "maybe param" "temp"
    (482573 'move' tmp[482562](97433 call asapP1 arg1[97418]))
    unknown call_tmp[777919] "expr temp" "maybe param" "maybe type" "temp"
    (777922 'move' call_tmp[777919](482575 call _cond_invalid tmp[482562]))
    if call_tmp[777919]
    {
      (482578 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670204] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670205] "maybe param" "temp"
    unknown call_tmp[777924] "expr temp" "maybe param" "maybe type" "temp"
    (777927 'move' call_tmp[777924](482563 call isTrue tmp[482562]))
    (670210 'move' tmp[670205](670208 call _cond_test call_tmp[777924]))
    if tmp[670205]
    {
      unknown tmp[670212] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777929] "expr temp" "maybe param" "maybe type" "temp"
      (777932 'move' call_tmp[777929](97436 call asapP1 arg2[97420]))
      (670214 'move' tmp[670212](482566 call isTrue call_tmp[777929]))
      (670219 'move' tmp[670204](670216 '_paramFoldLogical' tmp[670205] tmp[670212]))
    }
    {
      (670224 'move' tmp[670204](670221 '_paramFoldLogical' tmp[670205] 0))
    }
    (482552 'move' tmp[482541] tmp[670204])
    unknown call_tmp[777934] "expr temp" "maybe param" "maybe type" "temp"
    (777937 'move' call_tmp[777934](482554 call _cond_invalid tmp[482541]))
    if call_tmp[777934]
    {
      (482557 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670231] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670232] "maybe param" "temp"
    unknown call_tmp[777939] "expr temp" "maybe param" "maybe type" "temp"
    (777942 'move' call_tmp[777939](482542 call isTrue tmp[482541]))
    (670237 'move' tmp[670232](670235 call _cond_test call_tmp[777939]))
    if tmp[670232]
    {
      unknown tmp[670239] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777944] "expr temp" "maybe param" "maybe type" "temp"
      (777947 'move' call_tmp[777944](97439 call asapP1 arg3[97422]))
      (670241 'move' tmp[670239](482545 call isTrue call_tmp[777944]))
      (670246 'move' tmp[670231](670243 '_paramFoldLogical' tmp[670232] tmp[670239]))
    }
    {
      (670251 'move' tmp[670231](670248 '_paramFoldLogical' tmp[670232] 0))
    }
    (482531 'move' tmp[482520] tmp[670231])
    unknown call_tmp[777949] "expr temp" "maybe param" "maybe type" "temp"
    (777952 'move' call_tmp[777949](482533 call _cond_invalid tmp[482520]))
    if call_tmp[777949]
    {
      (482536 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670258] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670259] "maybe param" "temp"
    unknown call_tmp[777954] "expr temp" "maybe param" "maybe type" "temp"
    (777957 'move' call_tmp[777954](482521 call isTrue tmp[482520]))
    (670264 'move' tmp[670259](670262 call _cond_test call_tmp[777954]))
    if tmp[670259]
    {
      unknown tmp[670266] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777959] "expr temp" "maybe param" "maybe type" "temp"
      (777962 'move' call_tmp[777959](97442 call asapP1 arg4[97424]))
      (670268 'move' tmp[670266](482524 call isTrue call_tmp[777959]))
      (670273 'move' tmp[670258](670270 '_paramFoldLogical' tmp[670259] tmp[670266]))
    }
    {
      (670278 'move' tmp[670258](670275 '_paramFoldLogical' tmp[670259] 0))
    }
    (1001364 call chpl_statementLevelSymbol tmp[670258])
  }
  function chpl_allStridesArePositive[97450](arg arg1[97452]:_any[141](?), arg arg2[97454]:_any[141](?), arg arg3[97456]:_any[141](?), arg arg4[97458]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601312] "RVV" "temp"
    unknown tmp[482583] "maybe param" "temp"
    unknown tmp[482604] "maybe param" "temp"
    unknown tmp[482625] "maybe param" "temp"
    (482636 'move' tmp[482625](97469 call asap1 arg1[97452]))
    unknown call_tmp[777964] "expr temp" "maybe param" "maybe type" "temp"
    (777967 'move' call_tmp[777964](482638 call _cond_invalid tmp[482625]))
    if call_tmp[777964]
    {
      (482641 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670285] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670286] "maybe param" "temp"
    unknown call_tmp[777969] "expr temp" "maybe param" "maybe type" "temp"
    (777972 'move' call_tmp[777969](482626 call isTrue tmp[482625]))
    (670291 'move' tmp[670286](670289 call _cond_test call_tmp[777969]))
    if tmp[670286]
    {
      unknown tmp[670293] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777974] "expr temp" "maybe param" "maybe type" "temp"
      (777977 'move' call_tmp[777974](97472 call asap1 arg2[97454]))
      (670295 'move' tmp[670293](482629 call isTrue call_tmp[777974]))
      (670300 'move' tmp[670285](670297 '_paramFoldLogical' tmp[670286] tmp[670293]))
    }
    {
      (670305 'move' tmp[670285](670302 '_paramFoldLogical' tmp[670286] 0))
    }
    (482615 'move' tmp[482604] tmp[670285])
    unknown call_tmp[777979] "expr temp" "maybe param" "maybe type" "temp"
    (777982 'move' call_tmp[777979](482617 call _cond_invalid tmp[482604]))
    if call_tmp[777979]
    {
      (482620 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670312] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670313] "maybe param" "temp"
    unknown call_tmp[777984] "expr temp" "maybe param" "maybe type" "temp"
    (777987 'move' call_tmp[777984](482605 call isTrue tmp[482604]))
    (670318 'move' tmp[670313](670316 call _cond_test call_tmp[777984]))
    if tmp[670313]
    {
      unknown tmp[670320] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[777989] "expr temp" "maybe param" "maybe type" "temp"
      (777992 'move' call_tmp[777989](97475 call asap1 arg3[97456]))
      (670322 'move' tmp[670320](482608 call isTrue call_tmp[777989]))
      (670327 'move' tmp[670312](670324 '_paramFoldLogical' tmp[670313] tmp[670320]))
    }
    {
      (670332 'move' tmp[670312](670329 '_paramFoldLogical' tmp[670313] 0))
    }
    (482594 'move' tmp[482583] tmp[670312])
    unknown call_tmp[777994] "expr temp" "maybe param" "maybe type" "temp"
    (777997 'move' call_tmp[777994](482596 call _cond_invalid tmp[482583]))
    if call_tmp[777994]
    {
      (482599 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670339] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670340] "maybe param" "temp"
    unknown call_tmp[777999] "expr temp" "maybe param" "maybe type" "temp"
    (778002 'move' call_tmp[777999](482584 call isTrue tmp[482583]))
    (670345 'move' tmp[670340](670343 call _cond_test call_tmp[777999]))
    if tmp[670340]
    {
      unknown tmp[670347] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[778004] "expr temp" "maybe param" "maybe type" "temp"
      (778007 'move' call_tmp[778004](97478 call asap1 arg4[97458]))
      (670349 'move' tmp[670347](482587 call isTrue call_tmp[778004]))
      (670354 'move' tmp[670339](670351 '_paramFoldLogical' tmp[670340] tmp[670347]))
    }
    {
      (670359 'move' tmp[670339](670356 '_paramFoldLogical' tmp[670340] 0))
    }
    (601317 'move' ret[601312](601316 'deref' tmp[670339]))
    (601314 return ret[601312])
  }
  function asap1[97482](arg arg[97484]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[601321] "RVV" "param" "temp"
    (601326 'move' ret[601321](601325 'deref' 1))
    (601323 return ret[601321])
  }
  where {
    (97487 call asapP1 arg[97484])
  }
  function asap1[97495](arg arg[97497]:_any[141](?)) : _unknown[42] "private"
  {
    unknown ret[601330] "RVV" "temp"
    unknown call_tmp[778009] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (778012 'move' call_tmp[778009](97512 'typeof' arg[97497]))
    unknown call_tmp[778014] "expr temp" "maybe param" "maybe type" "temp"
    (778017 'move' call_tmp[778014](394764 'is_subtype' _domain[225034](?) call_tmp[778009]))
    unknown call_tmp[778019] "expr temp" "maybe param" "maybe type" "temp"
    (778022 'move' call_tmp[778019](97514 call _cond_test call_tmp[778014]))
    if call_tmp[778019]
    {
      unknown call_tmp[778026] "expr temp" "maybe param" "maybe type" "temp"
      (778029 'move' call_tmp[778026](97507 call(97504 call (partial) dims _mt[203] arg[97497])))
      unknown call_tmp[778031] "expr temp" "maybe param" "maybe type" "temp"
      (778034 'move' call_tmp[778031](97502 call asapTuple call_tmp[778026]))
      (601335 'move' ret[601330](601334 'deref' call_tmp[778031]))
      gotoReturn _end_asap1[601328] _end_asap1[601328]
    }
    unknown call_tmp[778036] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (778039 'move' call_tmp[778036](97531 'typeof' arg[97497]))
    unknown call_tmp[778041] "expr temp" "maybe param" "maybe type" "temp"
    (778044 'move' call_tmp[778041](394765 'is_subtype' _array[255540](?) call_tmp[778036]))
    unknown call_tmp[778046] "expr temp" "maybe param" "maybe type" "temp"
    (778049 'move' call_tmp[778046](97533 call _cond_test call_tmp[778041]))
    if call_tmp[778046]
    {
      unknown call_tmp[778053] "expr temp" "maybe param" "maybe type" "temp"
      (778056 'move' call_tmp[778053](97526 call(97523 call (partial) dims _mt[203] arg[97497])))
      unknown call_tmp[778058] "expr temp" "maybe param" "maybe type" "temp"
      (778061 'move' call_tmp[778058](97521 call asapTuple call_tmp[778053]))
      (601340 'move' ret[601330](601339 'deref' call_tmp[778058]))
      gotoReturn _end_asap1[601328] _end_asap1[601328]
    }
    unknown call_tmp[778063] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (778066 'move' call_tmp[778063](97552 'typeof' arg[97497]))
    unknown call_tmp[778068] "expr temp" "maybe param" "maybe type" "temp"
    (778071 'move' call_tmp[778068](394766 'is_subtype' BaseDom[424169](?) call_tmp[778063]))
    unknown call_tmp[778073] "expr temp" "maybe param" "maybe type" "temp"
    (778076 'move' call_tmp[778073](97554 call _cond_test call_tmp[778068]))
    if call_tmp[778073]
    {
      unknown call_tmp[778080] "expr temp" "maybe param" "maybe type" "temp"
      (778083 'move' call_tmp[778080](97547 call(97544 call (partial) dsiDims _mt[203] arg[97497])))
      unknown call_tmp[778085] "expr temp" "maybe param" "maybe type" "temp"
      (778088 'move' call_tmp[778085](97540 call asapTuple call_tmp[778080]))
      (601345 'move' ret[601330](601344 'deref' call_tmp[778085]))
      gotoReturn _end_asap1[601328] _end_asap1[601328]
    }
    unknown call_tmp[778090] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (778093 'move' call_tmp[778090](97576 'typeof' arg[97497]))
    unknown call_tmp[778095] "expr temp" "maybe param" "maybe type" "temp"
    (778098 'move' call_tmp[778095](394767 'is_subtype' BaseArr[424790](?) call_tmp[778090]))
    unknown call_tmp[778100] "expr temp" "maybe param" "maybe type" "temp"
    (778103 'move' call_tmp[778100](97578 call _cond_test call_tmp[778095]))
    if call_tmp[778100]
    {
      unknown call_tmp[778107] "expr temp" "maybe param" "maybe type" "temp"
      (778110 'move' call_tmp[778107](97565 call dom _mt[203] arg[97497]))
      unknown call_tmp[778114] "expr temp" "maybe param" "maybe type" "temp"
      (778117 'move' call_tmp[778114](97571 call(97568 call (partial) dsiDims _mt[203] call_tmp[778107])))
      unknown call_tmp[778119] "expr temp" "maybe param" "maybe type" "temp"
      (778122 'move' call_tmp[778119](97561 call asapTuple call_tmp[778114]))
      (601350 'move' ret[601330](601349 'deref' call_tmp[778119]))
      gotoReturn _end_asap1[601328] _end_asap1[601328]
    }
    unknown call_tmp[778124] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (778127 'move' call_tmp[778124](97591 'typeof' arg[97497]))
    unknown call_tmp[778129] "expr temp" "maybe param" "maybe type" "temp"
    (778132 'move' call_tmp[778129](97588 call : call_tmp[778124] string[244]))
    (97584 call compilerError "asap1: unsupported argument type " call_tmp[778129])
    (551000 'end of statement')
    (601355 'move' ret[601330](601354 'deref' 0))
    label _end_asap1[601328]
    (601332 return ret[601330])
  }
  function asapP1[97597](arg arg[97599]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[601359] "RVV" "param" "temp"
    unknown call_tmp[778136] "expr temp" "maybe param" "maybe type" "temp"
    (778139 'move' call_tmp[778136](97604 call strides _mt[203] arg[97599]))
    unknown call_tmp[778143] "expr temp" "maybe param" "maybe type" "temp"
    (778146 'move' call_tmp[778143](97612 call(97609 call (partial) isPositive _mt[203] call_tmp[778136])))
    (601364 'move' ret[601359](601363 'deref' call_tmp[778143]))
    (601361 return ret[601359])
  }
  function asapTuple[97615](arg dims[97618]:_tuple[246](?)) : _unknown[42] "private"
  {
    unknown ret[601368] "RVV" "temp"
    {
      unknown _indexOfInterest[97640] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[97641] "expr temp" "temp"
      (97650 'move' _iterator[97641](97648 call _getIterator dims[97618]))
      Defer
      {
        {
          (97665 call _freeIterator _iterator[97641])
        }
      }
      { scopeless type
        (97655 'move' _indexOfInterest[97640](97652 call iteratorIndex _iterator[97641]))
      }
      ForLoop[97642]
      {
        unknown d[97622] "index var" "insert auto destroy"
        (551004 'end of statement')
        (97660 'move' d[97622] _indexOfInterest[97640])
        (551005 'end of statement' d[97622])
        unknown call_tmp[778150] "expr temp" "maybe param" "maybe type" "temp"
        (778153 'move' call_tmp[778150](97634 call(97631 call (partial) hasNegativeStride _mt[203] d[97622])))
        unknown call_tmp[778155] "expr temp" "maybe param" "maybe type" "temp"
        (778158 'move' call_tmp[778155](97635 call _cond_test call_tmp[778150]))
        if call_tmp[778155]
        {
          (601373 'move' ret[601368](601372 'deref' 0))
          gotoReturn _end_asapTuple[601366] _end_asapTuple[601366]
        }
        label _continueLabel[97645]
        _indexOfInterest[97640]
        _iterator[97641]
      }
      label _breakLabel[97646]
    }
    (601378 'move' ret[601368](601377 'deref' 1))
    label _end_asapTuple[601366]
    (601370 return ret[601368])
  }
  function setupTargetLocalesArray[97676](ref arg targetLocDom[97678]:_any[141](?), arg targetLocArr[97680]:_any[141](?), arg specifiedLocArr[97682]:_any[141](?)) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[778162] "maybe param" "maybe type" "temp"
    (778165 'move' call_tmp[778162](97688 call rank _mt[203] targetLocDom[97678]))
    unknown rank[97686] "dead at end of block" "param"
    (644814 'init var' rank[97686] call_tmp[778162])
    (97692 'end of statement')
    unknown tmp[482646] "maybe param" "temp"
    (482657 'move' tmp[482646](97900 call != rank[97686] 1))
    unknown call_tmp[778167] "expr temp" "maybe param" "maybe type" "temp"
    (778170 'move' call_tmp[778167](482659 call _cond_invalid tmp[482646]))
    if call_tmp[778167]
    {
      (482662 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670366] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670367] "maybe param" "temp"
    unknown call_tmp[778172] "expr temp" "maybe param" "maybe type" "temp"
    (778175 'move' call_tmp[778172](482647 call isTrue tmp[482646]))
    (670372 'move' tmp[670367](670370 call _cond_test call_tmp[778172]))
    if tmp[670367]
    {
      unknown tmp[670374] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[778179] "expr temp" "maybe param" "maybe type" "temp"
      (778182 'move' call_tmp[778179](97907 call rank _mt[203] specifiedLocArr[97682]))
      unknown call_tmp[778184] "expr temp" "maybe param" "maybe type" "temp"
      (778187 'move' call_tmp[778184](97904 call == call_tmp[778179] 1))
      (670376 'move' tmp[670374](482650 call isTrue call_tmp[778184]))
      (670381 'move' tmp[670366](670378 '_paramFoldLogical' tmp[670367] tmp[670374]))
    }
    {
      (670386 'move' tmp[670366](670383 '_paramFoldLogical' tmp[670367] 0))
    }
    unknown call_tmp[778189] "expr temp" "maybe param" "maybe type" "temp"
    (778192 'move' call_tmp[778189](97911 call _cond_test tmp[670366]))
    if call_tmp[778189]
    {
      unknown call_tmp[778196] "expr temp" "maybe param" "maybe type" "temp"
      (778199 'move' call_tmp[778196](97700 call size _mt[203] specifiedLocArr[97682]))
      unknown call_tmp[778201] "maybe param" "maybe type" "temp"
      (778204 'move' call_tmp[778201](97697 call _factor rank[97686] call_tmp[778196]))
      const factors[97695] "dead at end of block" "const" "insert auto destroy"
      (644816 'init var' factors[97695] call_tmp[778201])
      (97704 'end of statement')
      unknown ranges[97706] "dead at end of block" "insert auto destroy"
      unknown call_tmp[778206] "expr temp" "maybe param" "maybe type" "temp"
      (778209 'move' call_tmp[778206](97707 call * rank[97686] range[240](?)))
      (644818 'default init var' ranges[97706] call_tmp[778206])
      (97712 'end of statement')
      {
        unknown i[97713] "dead at end of block" "index var" "insert auto destroy"
        (644820 'init var' i[97713] 0)
        (551010 'end of statement')
        unknown tmp[97736] "maybe param" "temp"
        unknown call_tmp[778211] "expr temp" "maybe param" "maybe type" "temp"
        (778214 'move' call_tmp[778211](97716 call - rank[97686] 1))
        (97748 'move' tmp[97736](97746 call chpl_compute_low_param_loop_bound 0 call_tmp[778211]))
        unknown tmp[97737] "maybe param" "temp"
        unknown call_tmp[778216] "expr temp" "maybe param" "maybe type" "temp"
        (778219 'move' call_tmp[778216](97753 call - rank[97686] 1))
        (97758 'move' tmp[97737](97756 call chpl_compute_high_param_loop_bound 0 call_tmp[778216]))
        unknown tmp[97738] "maybe param" "temp"
        (97761 'move' tmp[97738] 1)
        ParamForLoop[97763]
        { i[97713] tmp[97736] tmp[97737] tmp[97738]
          unknown call_tmp[778221] "expr temp" "maybe param" "maybe type" "temp"
          (778224 'move' call_tmp[778221](97725 call ranges[97706] i[97713]))
          unknown call_tmp[778226] "expr temp" "maybe param" "maybe type" "temp"
          (778229 'move' call_tmp[778226](97730 call chpl_build_low_bounded_range 0))
          unknown call_tmp[778231] "expr temp" "maybe param" "maybe type" "temp"
          (778234 'move' call_tmp[778231](97733 call factors[97695] i[97713]))
          unknown call_tmp[778236] "expr temp" "maybe param" "maybe type" "temp"
          (778239 'move' call_tmp[778236](97727 call # call_tmp[778226] call_tmp[778231]))
          (97722 call = call_tmp[778221] call_tmp[778236])
          (551011 'end of statement' ranges[97706] i[97713] factors[97695] i[97713])
        }
        label _unused_continueLabel[97740]
        label _breakLabel[97739]
      }
      unknown call_tmp[778241] "expr temp" "maybe param" "maybe type" "temp"
      (778244 'move' call_tmp[778241](97779 call chpl__buildDomainExpr(97777 'expand_tuple' ranges[97706]) 1))
      (97772 call = targetLocDom[97678] call_tmp[778241])
      (551016 'end of statement' ranges[97706])
      unknown call_tmp[778246] "expr temp" "maybe param" "maybe type" "temp"
      (778249 'move' call_tmp[778246](97785 call reshape specifiedLocArr[97682] targetLocDom[97678]))
      (97781 call = targetLocArr[97680] call_tmp[778246])
    }
    {
      unknown call_tmp[778253] "expr temp" "maybe param" "maybe type" "temp"
      (778256 'move' call_tmp[778253](97798 call rank _mt[203] specifiedLocArr[97682]))
      unknown call_tmp[778258] "expr temp" "maybe param" "maybe type" "temp"
      (778261 'move' call_tmp[778258](97795 call != call_tmp[778253] rank[97686]))
      unknown call_tmp[778263] "expr temp" "maybe param" "maybe type" "temp"
      (778266 'move' call_tmp[778263](97802 call _cond_test call_tmp[778258]))
      if call_tmp[778263]
      {
        (97790 call compilerError "specified target array of locales must equal 1 or distribution rank")
      }
      unknown ranges[97808] "dead at end of block" "insert auto destroy"
      unknown call_tmp[778268] "expr temp" "maybe param" "maybe type" "temp"
      (778271 'move' call_tmp[778268](97809 call * rank[97686] range[240](?)))
      (644822 'default init var' ranges[97808] call_tmp[778268])
      (97814 'end of statement')
      {
        unknown i[97815] "dead at end of block" "index var" "insert auto destroy"
        (644824 'init var' i[97815] 0)
        (551020 'end of statement')
        unknown tmp[97849] "maybe param" "temp"
        unknown call_tmp[778273] "expr temp" "maybe param" "maybe type" "temp"
        (778276 'move' call_tmp[778273](97818 call - rank[97686] 1))
        (97861 'move' tmp[97849](97859 call chpl_compute_low_param_loop_bound 0 call_tmp[778273]))
        unknown tmp[97850] "maybe param" "temp"
        unknown call_tmp[778278] "expr temp" "maybe param" "maybe type" "temp"
        (778281 'move' call_tmp[778278](97866 call - rank[97686] 1))
        (97871 'move' tmp[97850](97869 call chpl_compute_high_param_loop_bound 0 call_tmp[778278]))
        unknown tmp[97851] "maybe param" "temp"
        (97874 'move' tmp[97851] 1)
        ParamForLoop[97876]
        { i[97815] tmp[97849] tmp[97850] tmp[97851]
          unknown call_tmp[778283] "expr temp" "maybe param" "maybe type" "temp"
          (778286 'move' call_tmp[778283](97827 call ranges[97808] i[97815]))
          unknown call_tmp[778288] "expr temp" "maybe param" "maybe type" "temp"
          (778291 'move' call_tmp[778288](97832 call chpl_build_low_bounded_range 0))
          unknown call_tmp[778295] "expr temp" "maybe param" "maybe type" "temp"
          (778298 'move' call_tmp[778295](97835 call _dom _mt[203] specifiedLocArr[97682]))
          unknown call_tmp[778302] "expr temp" "maybe param" "maybe type" "temp"
          (778305 'move' call_tmp[778302](97841 call(97838 call (partial) dim _mt[203] call_tmp[778295]) i[97815]))
          unknown call_tmp[778309] "expr temp" "maybe param" "maybe type" "temp"
          (778312 'move' call_tmp[778309](97846 call(97843 call (partial) sizeAs _mt[203] call_tmp[778302]) int(64)[10]))
          unknown call_tmp[778314] "expr temp" "maybe param" "maybe type" "temp"
          (778317 'move' call_tmp[778314](97829 call # call_tmp[778288] call_tmp[778309]))
          (97824 call = call_tmp[778283] call_tmp[778314])
          (551021 'end of statement' ranges[97808] i[97815])
        }
        label _unused_continueLabel[97853]
        label _breakLabel[97852]
      }
      unknown call_tmp[778319] "expr temp" "maybe param" "maybe type" "temp"
      (778322 'move' call_tmp[778319](97892 call chpl__buildDomainExpr(97890 'expand_tuple' ranges[97808]) 1))
      (97885 call = targetLocDom[97678] call_tmp[778319])
      (551024 'end of statement' ranges[97808])
      (97894 call = targetLocArr[97680] specifiedLocArr[97682])
    }
    (601380 return _void[46])
  }
  function setupTargetLocRanges[97917](param arg rank[97919]:_any[141](?), arg specifiedLocArr[97921]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601384] "RVV" "temp"
    unknown ranges[97925] "dead at end of block" "insert auto destroy"
    unknown call_tmp[778324] "expr temp" "maybe param" "maybe type" "temp"
    (778327 'move' call_tmp[778324](97926 call * rank[97919] range[240](?)))
    (644826 'default init var' ranges[97925] call_tmp[778324])
    (97931 'end of statement')
    unknown tmp[482667] "maybe param" "temp"
    (482678 'move' tmp[482667](98092 call != rank[97919] 1))
    unknown call_tmp[778329] "expr temp" "maybe param" "maybe type" "temp"
    (778332 'move' call_tmp[778329](482680 call _cond_invalid tmp[482667]))
    if call_tmp[778329]
    {
      (482683 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670393] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670394] "maybe param" "temp"
    unknown call_tmp[778334] "expr temp" "maybe param" "maybe type" "temp"
    (778337 'move' call_tmp[778334](482668 call isTrue tmp[482667]))
    (670399 'move' tmp[670394](670397 call _cond_test call_tmp[778334]))
    if tmp[670394]
    {
      unknown tmp[670401] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[778341] "expr temp" "maybe param" "maybe type" "temp"
      (778344 'move' call_tmp[778341](98099 call rank _mt[203] specifiedLocArr[97921]))
      unknown call_tmp[778346] "expr temp" "maybe param" "maybe type" "temp"
      (778349 'move' call_tmp[778346](98096 call == call_tmp[778341] 1))
      (670403 'move' tmp[670401](482671 call isTrue call_tmp[778346]))
      (670408 'move' tmp[670393](670405 '_paramFoldLogical' tmp[670394] tmp[670401]))
    }
    {
      (670413 'move' tmp[670393](670410 '_paramFoldLogical' tmp[670394] 0))
    }
    unknown call_tmp[778351] "expr temp" "maybe param" "maybe type" "temp"
    (778354 'move' call_tmp[778351](98103 call _cond_test tmp[670393]))
    if call_tmp[778351]
    {
      unknown call_tmp[778358] "expr temp" "maybe param" "maybe type" "temp"
      (778361 'move' call_tmp[778358](97939 call size _mt[203] specifiedLocArr[97921]))
      unknown call_tmp[778363] "maybe param" "maybe type" "temp"
      (778366 'move' call_tmp[778363](97936 call _factor rank[97919] call_tmp[778358]))
      const factors[97934] "dead at end of block" "const" "insert auto destroy"
      (644828 'init var' factors[97934] call_tmp[778363])
      (97943 'end of statement')
      {
        unknown i[97944] "dead at end of block" "index var" "insert auto destroy"
        (644830 'init var' i[97944] 0)
        (551028 'end of statement')
        unknown tmp[97967] "maybe param" "temp"
        unknown call_tmp[778368] "expr temp" "maybe param" "maybe type" "temp"
        (778371 'move' call_tmp[778368](97947 call - rank[97919] 1))
        (97979 'move' tmp[97967](97977 call chpl_compute_low_param_loop_bound 0 call_tmp[778368]))
        unknown tmp[97968] "maybe param" "temp"
        unknown call_tmp[778373] "expr temp" "maybe param" "maybe type" "temp"
        (778376 'move' call_tmp[778373](97984 call - rank[97919] 1))
        (97989 'move' tmp[97968](97987 call chpl_compute_high_param_loop_bound 0 call_tmp[778373]))
        unknown tmp[97969] "maybe param" "temp"
        (97992 'move' tmp[97969] 1)
        ParamForLoop[97994]
        { i[97944] tmp[97967] tmp[97968] tmp[97969]
          unknown call_tmp[778378] "expr temp" "maybe param" "maybe type" "temp"
          (778381 'move' call_tmp[778378](97956 call ranges[97925] i[97944]))
          unknown call_tmp[778383] "expr temp" "maybe param" "maybe type" "temp"
          (778386 'move' call_tmp[778383](97961 call chpl_build_low_bounded_range 0))
          unknown call_tmp[778388] "expr temp" "maybe param" "maybe type" "temp"
          (778391 'move' call_tmp[778388](97964 call factors[97934] i[97944]))
          unknown call_tmp[778393] "expr temp" "maybe param" "maybe type" "temp"
          (778396 'move' call_tmp[778393](97958 call # call_tmp[778383] call_tmp[778388]))
          (97953 call = call_tmp[778378] call_tmp[778393])
          (551029 'end of statement' ranges[97925] i[97944] factors[97934] i[97944])
        }
        label _unused_continueLabel[97971]
        label _breakLabel[97970]
      }
    }
    {
      unknown call_tmp[778400] "expr temp" "maybe param" "maybe type" "temp"
      (778403 'move' call_tmp[778400](98011 call rank _mt[203] specifiedLocArr[97921]))
      unknown call_tmp[778405] "expr temp" "maybe param" "maybe type" "temp"
      (778408 'move' call_tmp[778405](98008 call != call_tmp[778400] rank[97919]))
      unknown call_tmp[778410] "expr temp" "maybe param" "maybe type" "temp"
      (778413 'move' call_tmp[778410](98015 call _cond_test call_tmp[778405]))
      if call_tmp[778410]
      {
        (98005 call compilerError "specified target array of locales must equal 1 or distribution rank")
      }
      {
        unknown i[98020] "dead at end of block" "index var" "insert auto destroy"
        (644832 'init var' i[98020] 0)
        (551035 'end of statement')
        unknown tmp[98054] "maybe param" "temp"
        unknown call_tmp[778415] "expr temp" "maybe param" "maybe type" "temp"
        (778418 'move' call_tmp[778415](98023 call - rank[97919] 1))
        (98066 'move' tmp[98054](98064 call chpl_compute_low_param_loop_bound 0 call_tmp[778415]))
        unknown tmp[98055] "maybe param" "temp"
        unknown call_tmp[778420] "expr temp" "maybe param" "maybe type" "temp"
        (778423 'move' call_tmp[778420](98071 call - rank[97919] 1))
        (98076 'move' tmp[98055](98074 call chpl_compute_high_param_loop_bound 0 call_tmp[778420]))
        unknown tmp[98056] "maybe param" "temp"
        (98079 'move' tmp[98056] 1)
        ParamForLoop[98081]
        { i[98020] tmp[98054] tmp[98055] tmp[98056]
          unknown call_tmp[778425] "expr temp" "maybe param" "maybe type" "temp"
          (778428 'move' call_tmp[778425](98032 call ranges[97925] i[98020]))
          unknown call_tmp[778430] "expr temp" "maybe param" "maybe type" "temp"
          (778433 'move' call_tmp[778430](98037 call chpl_build_low_bounded_range 0))
          unknown call_tmp[778437] "expr temp" "maybe param" "maybe type" "temp"
          (778440 'move' call_tmp[778437](98040 call _dom _mt[203] specifiedLocArr[97921]))
          unknown call_tmp[778444] "expr temp" "maybe param" "maybe type" "temp"
          (778447 'move' call_tmp[778444](98046 call(98043 call (partial) dim _mt[203] call_tmp[778437]) i[98020]))
          unknown call_tmp[778451] "expr temp" "maybe param" "maybe type" "temp"
          (778454 'move' call_tmp[778451](98051 call(98048 call (partial) sizeAs _mt[203] call_tmp[778444]) int(64)[10]))
          unknown call_tmp[778456] "expr temp" "maybe param" "maybe type" "temp"
          (778459 'move' call_tmp[778456](98034 call # call_tmp[778430] call_tmp[778451]))
          (98029 call = call_tmp[778425] call_tmp[778456])
          (551036 'end of statement' ranges[97925] i[98020])
        }
        label _unused_continueLabel[98058]
        label _breakLabel[98057]
      }
    }
    (601389 'move' ret[601384](601388 'deref' ranges[97925]))
    gotoReturn _end_setupTargetLocRanges[601382] _end_setupTargetLocRanges[601382]
    (551039 'end of statement' ranges[97925])
    label _end_setupTargetLocRanges[601382]
    (601386 return ret[601384])
  }
  function createWholeDomainForInds[98111](param arg rank[98113]:_any[141](?), arg idxType[98115]:_any[141](?), param arg strides[98117]:_any[141](?), arg inds[98119]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601395] "RVV" "temp"
    unknown call_tmp[778461] "expr temp" "maybe param" "maybe type" "temp"
    (778464 'move' call_tmp[778461](98147 call isDomain inds[98119]))
    unknown call_tmp[778466] "expr temp" "maybe param" "maybe type" "temp"
    (778469 'move' call_tmp[778466](98149 call _cond_test call_tmp[778461]))
    if call_tmp[778466]
    {
      (601400 'move' ret[601395](601399 'deref' inds[98119]))
      gotoReturn _end_createWholeDomainForInds[601393] _end_createWholeDomainForInds[601393]
    }
    {
      unknown result[98127] "dead at end of block" "insert auto destroy"
      unknown call_tmp[778471] "expr temp" "maybe param" "maybe type" "temp"
      (778474 'move' call_tmp[778471](98129 call chpl__buildDomainRuntimeType defaultDist[288287] rank[98113] idxType[98115] strides[98117]))
      (644834 'default init var' result[98127] call_tmp[778471])
      (98135 'end of statement')
      (98142 call(98139 call (partial) setIndices _mt[203] result[98127]) inds[98119])
      (551042 'end of statement' result[98127])
      (601405 'move' ret[601395](601404 'deref' result[98127]))
      gotoReturn _end_createWholeDomainForInds[601393] _end_createWholeDomainForInds[601393]
      (551044 'end of statement' result[98127])
    }
    label _end_createWholeDomainForInds[601393]
    (601397 return ret[601395])
  }
  function bulkCommComputeActiveDims[98155](arg LeftDims[98157]:_any[141](?), arg RightDims[98159]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601413] "RVV" "temp"
    unknown call_tmp[778480] "maybe param" "maybe type" "temp"
    (778483 'move' call_tmp[778480](98165 call size _mt[203] LeftDims[98157]))
    unknown LeftRank[98163] "dead at end of block" "param"
    (644836 'init var' LeftRank[98163] call_tmp[778480])
    (98169 'end of statement')
    unknown call_tmp[778487] "maybe param" "maybe type" "temp"
    (778490 'move' call_tmp[778487](98173 call size _mt[203] RightDims[98159]))
    unknown RightRank[98171] "dead at end of block" "param"
    (644838 'init var' RightRank[98171] call_tmp[778487])
    (98177 'end of statement')
    unknown call_tmp[778492] "maybe param" "maybe type" "temp"
    (778495 'move' call_tmp[778492](98181 call min LeftRank[98163] RightRank[98171]))
    unknown minRank[98179] "dead at end of block" "param"
    (644840 'init var' minRank[98179] call_tmp[778492])
    (98185 'end of statement')
    unknown inferredRank[98187] "dead at end of block" "insert auto destroy"
    (644842 'init var' inferredRank[98187] 0)
    (98190 'end of statement')
    unknown type_tmp[98201] "dead at end of block" "insert auto destroy" "temp" "type variable"
    (644848 'move' type_tmp[98201](644845 call * minRank[98179] int(64)[10]))
    unknown LeftActives[98200] "dead at end of block" "insert auto destroy"
    (644850 'default init var' LeftActives[98200] type_tmp[98201])
    unknown RightActives[98193] "dead at end of block" "insert auto destroy"
    (644852 'default init var' RightActives[98193] type_tmp[98201])
    (98206 'end of statement')
    unknown li[98213] "dead at end of block" "insert auto destroy"
    (644854 'init var' li[98213] 0)
    unknown ri[98209] "dead at end of block" "insert auto destroy"
    (644856 'init var' ri[98209] 0)
    (98216 'end of statement')
    function advance[98217]() : _unknown[42] "no return value for void"
    {
      {
        unknown tmp[98256] "temp"
        unknown tmp[482709] "maybe param" "temp"
        unknown call_tmp[778497] "expr temp" "maybe param" "maybe type" "temp"
        (778500 'move' call_tmp[778497](98310 call LeftDims[98157] li[98213]))
        unknown call_tmp[778504] "expr temp" "maybe param" "maybe type" "temp"
        (778507 'move' call_tmp[778504](98313 call(98308 call (partial) sizeAs _mt[203] call_tmp[778497]) int(64)[10]))
        (482720 'move' tmp[482709](98306 call == call_tmp[778504] 1))
        unknown call_tmp[778509] "expr temp" "maybe param" "maybe type" "temp"
        (778512 'move' call_tmp[778509](482722 call _cond_invalid tmp[482709]))
        if call_tmp[778509]
        {
          (482725 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[670420] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[670421] "maybe param" "temp"
        unknown call_tmp[778514] "expr temp" "maybe param" "maybe type" "temp"
        (778517 'move' call_tmp[778514](482710 call isTrue tmp[482709]))
        (670426 'move' tmp[670421](670424 call _cond_test call_tmp[778514]))
        if tmp[670421]
        {
          unknown tmp[670428] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[778519] "expr temp" "maybe param" "maybe type" "temp"
          (778522 'move' call_tmp[778519](98321 call LeftDims[98157] li[98213]))
          unknown call_tmp[778526] "expr temp" "maybe param" "maybe type" "temp"
          (778529 'move' call_tmp[778526](98324 call(98319 call (partial) sizeAs _mt[203] call_tmp[778519]) uint(64)[86]))
          unknown call_tmp[778531] "expr temp" "maybe param" "maybe type" "temp"
          (778534 'move' call_tmp[778531](98329 call RightDims[98159] ri[98209]))
          unknown call_tmp[778538] "expr temp" "maybe param" "maybe type" "temp"
          (778541 'move' call_tmp[778538](98332 call(98327 call (partial) sizeAs _mt[203] call_tmp[778531]) uint(64)[86]))
          unknown call_tmp[778543] "expr temp" "maybe param" "maybe type" "temp"
          (778546 'move' call_tmp[778543](98317 call != call_tmp[778526] call_tmp[778538]))
          (670430 'move' tmp[670428](482713 call isTrue call_tmp[778543]))
          (670435 'move' tmp[670420](670432 '_paramFoldLogical' tmp[670421] tmp[670428]))
        }
        {
          (670440 'move' tmp[670420](670437 '_paramFoldLogical' tmp[670421] 0))
        }
        (98334 'move' tmp[98256](98302 call _cond_test tmp[670420]))
        WhileDo[98261]
        {
          (98251 call += li[98213] 1)
          (551047 'end of statement')
          label _continueLabel[98259]
          unknown tmp[482688] "maybe param" "temp"
          unknown call_tmp[778548] "expr temp" "maybe param" "maybe type" "temp"
          (778551 'move' call_tmp[778548](98273 call LeftDims[98157] li[98213]))
          unknown call_tmp[778555] "expr temp" "maybe param" "maybe type" "temp"
          (778558 'move' call_tmp[778555](98276 call(98271 call (partial) sizeAs _mt[203] call_tmp[778548]) int(64)[10]))
          (482699 'move' tmp[482688](98269 call == call_tmp[778555] 1))
          unknown call_tmp[778560] "expr temp" "maybe param" "maybe type" "temp"
          (778563 'move' call_tmp[778560](482701 call _cond_invalid tmp[482688]))
          if call_tmp[778560]
          {
            (482704 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[670447] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[670448] "maybe param" "temp"
          unknown call_tmp[778565] "expr temp" "maybe param" "maybe type" "temp"
          (778568 'move' call_tmp[778565](482689 call isTrue tmp[482688]))
          (670453 'move' tmp[670448](670451 call _cond_test call_tmp[778565]))
          if tmp[670448]
          {
            unknown tmp[670455] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[778570] "expr temp" "maybe param" "maybe type" "temp"
            (778573 'move' call_tmp[778570](98284 call LeftDims[98157] li[98213]))
            unknown call_tmp[778577] "expr temp" "maybe param" "maybe type" "temp"
            (778580 'move' call_tmp[778577](98287 call(98282 call (partial) sizeAs _mt[203] call_tmp[778570]) uint(64)[86]))
            unknown call_tmp[778582] "expr temp" "maybe param" "maybe type" "temp"
            (778585 'move' call_tmp[778582](98292 call RightDims[98159] ri[98209]))
            unknown call_tmp[778589] "expr temp" "maybe param" "maybe type" "temp"
            (778592 'move' call_tmp[778589](98295 call(98290 call (partial) sizeAs _mt[203] call_tmp[778582]) uint(64)[86]))
            unknown call_tmp[778594] "expr temp" "maybe param" "maybe type" "temp"
            (778597 'move' call_tmp[778594](98280 call != call_tmp[778577] call_tmp[778589]))
            (670457 'move' tmp[670455](482692 call isTrue call_tmp[778594]))
            (670462 'move' tmp[670447](670459 '_paramFoldLogical' tmp[670448] tmp[670455]))
          }
          {
            (670467 'move' tmp[670447](670464 '_paramFoldLogical' tmp[670448] 0))
          }
          (98297 'move' tmp[98256](98265 call _cond_test tmp[670447]))
          tmp[98256]
        }
        label _breakLabel[98260]
      }
      {
        unknown tmp[98373] "temp"
        unknown tmp[482751] "maybe param" "temp"
        unknown call_tmp[778599] "expr temp" "maybe param" "maybe type" "temp"
        (778602 'move' call_tmp[778599](98427 call RightDims[98159] ri[98209]))
        unknown call_tmp[778606] "expr temp" "maybe param" "maybe type" "temp"
        (778609 'move' call_tmp[778606](98430 call(98425 call (partial) sizeAs _mt[203] call_tmp[778599]) int(64)[10]))
        (482762 'move' tmp[482751](98423 call == call_tmp[778606] 1))
        unknown call_tmp[778611] "expr temp" "maybe param" "maybe type" "temp"
        (778614 'move' call_tmp[778611](482764 call _cond_invalid tmp[482751]))
        if call_tmp[778611]
        {
          (482767 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[670474] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[670475] "maybe param" "temp"
        unknown call_tmp[778616] "expr temp" "maybe param" "maybe type" "temp"
        (778619 'move' call_tmp[778616](482752 call isTrue tmp[482751]))
        (670480 'move' tmp[670475](670478 call _cond_test call_tmp[778616]))
        if tmp[670475]
        {
          unknown tmp[670482] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[778621] "expr temp" "maybe param" "maybe type" "temp"
          (778624 'move' call_tmp[778621](98438 call RightDims[98159] ri[98209]))
          unknown call_tmp[778628] "expr temp" "maybe param" "maybe type" "temp"
          (778631 'move' call_tmp[778628](98441 call(98436 call (partial) sizeAs _mt[203] call_tmp[778621]) uint(64)[86]))
          unknown call_tmp[778633] "expr temp" "maybe param" "maybe type" "temp"
          (778636 'move' call_tmp[778633](98446 call LeftDims[98157] li[98213]))
          unknown call_tmp[778640] "expr temp" "maybe param" "maybe type" "temp"
          (778643 'move' call_tmp[778640](98449 call(98444 call (partial) sizeAs _mt[203] call_tmp[778633]) uint(64)[86]))
          unknown call_tmp[778645] "expr temp" "maybe param" "maybe type" "temp"
          (778648 'move' call_tmp[778645](98434 call != call_tmp[778628] call_tmp[778640]))
          (670484 'move' tmp[670482](482755 call isTrue call_tmp[778645]))
          (670489 'move' tmp[670474](670486 '_paramFoldLogical' tmp[670475] tmp[670482]))
        }
        {
          (670494 'move' tmp[670474](670491 '_paramFoldLogical' tmp[670475] 0))
        }
        (98451 'move' tmp[98373](98419 call _cond_test tmp[670474]))
        WhileDo[98378]
        {
          (98368 call += ri[98209] 1)
          (551050 'end of statement')
          label _continueLabel[98376]
          unknown tmp[482730] "maybe param" "temp"
          unknown call_tmp[778650] "expr temp" "maybe param" "maybe type" "temp"
          (778653 'move' call_tmp[778650](98390 call RightDims[98159] ri[98209]))
          unknown call_tmp[778657] "expr temp" "maybe param" "maybe type" "temp"
          (778660 'move' call_tmp[778657](98393 call(98388 call (partial) sizeAs _mt[203] call_tmp[778650]) int(64)[10]))
          (482741 'move' tmp[482730](98386 call == call_tmp[778657] 1))
          unknown call_tmp[778662] "expr temp" "maybe param" "maybe type" "temp"
          (778665 'move' call_tmp[778662](482743 call _cond_invalid tmp[482730]))
          if call_tmp[778662]
          {
            (482746 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[670501] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[670502] "maybe param" "temp"
          unknown call_tmp[778667] "expr temp" "maybe param" "maybe type" "temp"
          (778670 'move' call_tmp[778667](482731 call isTrue tmp[482730]))
          (670507 'move' tmp[670502](670505 call _cond_test call_tmp[778667]))
          if tmp[670502]
          {
            unknown tmp[670509] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[778672] "expr temp" "maybe param" "maybe type" "temp"
            (778675 'move' call_tmp[778672](98401 call RightDims[98159] ri[98209]))
            unknown call_tmp[778679] "expr temp" "maybe param" "maybe type" "temp"
            (778682 'move' call_tmp[778679](98404 call(98399 call (partial) sizeAs _mt[203] call_tmp[778672]) uint(64)[86]))
            unknown call_tmp[778684] "expr temp" "maybe param" "maybe type" "temp"
            (778687 'move' call_tmp[778684](98409 call LeftDims[98157] li[98213]))
            unknown call_tmp[778691] "expr temp" "maybe param" "maybe type" "temp"
            (778694 'move' call_tmp[778691](98412 call(98407 call (partial) sizeAs _mt[203] call_tmp[778684]) uint(64)[86]))
            unknown call_tmp[778696] "expr temp" "maybe param" "maybe type" "temp"
            (778699 'move' call_tmp[778696](98397 call != call_tmp[778679] call_tmp[778691]))
            (670511 'move' tmp[670509](482734 call isTrue call_tmp[778696]))
            (670516 'move' tmp[670501](670513 '_paramFoldLogical' tmp[670502] tmp[670509]))
          }
          {
            (670521 'move' tmp[670501](670518 '_paramFoldLogical' tmp[670502] 0))
          }
          (98414 'move' tmp[98373](98382 call _cond_test tmp[670501]))
          tmp[98373]
        }
        label _breakLabel[98377]
      }
      unknown call_tmp[778701] "expr temp" "maybe param" "maybe type" "temp"
      (778704 'move' call_tmp[778701](98459 call LeftDims[98157] li[98213]))
      unknown call_tmp[778708] "expr temp" "maybe param" "maybe type" "temp"
      (778711 'move' call_tmp[778708](98464 call(98461 call (partial) sizeAs _mt[203] call_tmp[778701]) uint(64)[86]))
      unknown call_tmp[778713] "expr temp" "maybe param" "maybe type" "temp"
      (778716 'move' call_tmp[778713](98467 call RightDims[98159] ri[98209]))
      unknown call_tmp[778720] "expr temp" "maybe param" "maybe type" "temp"
      (778723 'move' call_tmp[778720](98472 call(98469 call (partial) sizeAs _mt[203] call_tmp[778713]) uint(64)[86]))
      unknown call_tmp[778725] "expr temp" "maybe param" "maybe type" "temp"
      (778728 'move' call_tmp[778725](98456 call == call_tmp[778708] call_tmp[778720]))
      (98455 call assert call_tmp[778725])
      (601409 return _void[46])
    }
    {
      unknown tmp[98513] "temp"
      DoWhile[98534]
      {
        {
          (98488 call advance)
          (551053 'end of statement')
          unknown call_tmp[778730] "expr temp" "maybe param" "maybe type" "temp"
          (778733 'move' call_tmp[778730](98492 call LeftActives[98200] inferredRank[98187]))
          (98489 call = call_tmp[778730] li[98213])
          (551054 'end of statement' LeftActives[98200] inferredRank[98187] li[98213])
          unknown call_tmp[778735] "expr temp" "maybe param" "maybe type" "temp"
          (778738 'move' call_tmp[778735](98498 call RightActives[98193] inferredRank[98187]))
          (98495 call = call_tmp[778735] ri[98209])
          (551058 'end of statement' RightActives[98193] inferredRank[98187] ri[98209])
          (98501 call += inferredRank[98187] 1)
          (551062 'end of statement' inferredRank[98187])
          (98505 call += li[98213] 1)
          (551064 'end of statement' li[98213])
          (98509 call += ri[98209] 1)
          (551066 'end of statement' ri[98209])
          label _continueLabel[98516]
          unknown tmp[482772] "maybe param" "temp"
          (482783 'move' tmp[482772](98525 call < li[98213] LeftRank[98163]))
          unknown call_tmp[778740] "expr temp" "maybe param" "maybe type" "temp"
          (778743 'move' call_tmp[778740](482785 call _cond_invalid tmp[482772]))
          if call_tmp[778740]
          {
            (482788 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[670528] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[670529] "maybe param" "temp"
          unknown call_tmp[778745] "expr temp" "maybe param" "maybe type" "temp"
          (778748 'move' call_tmp[778745](482773 call isTrue tmp[482772]))
          (670534 'move' tmp[670529](670532 call _cond_test call_tmp[778745]))
          if tmp[670529]
          {
            unknown tmp[670536] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[778750] "expr temp" "maybe param" "maybe type" "temp"
            (778753 'move' call_tmp[778750](98529 call < ri[98209] RightRank[98171]))
            (670538 'move' tmp[670536](482776 call isTrue call_tmp[778750]))
            (670543 'move' tmp[670528](670540 '_paramFoldLogical' tmp[670529] tmp[670536]))
          }
          {
            (670548 'move' tmp[670528](670545 '_paramFoldLogical' tmp[670529] 0))
          }
          (98532 'move' tmp[98513](98521 call _cond_test tmp[670528]))
        }
        tmp[98513]
      }
      label _breakLabel[98517]
    }
    unknown call_tmp[778755] "expr temp" "maybe param" "maybe type" "temp"
    (778758 'move' call_tmp[778755](98543 call _build_tuple LeftActives[98200] RightActives[98193] inferredRank[98187]))
    (601418 'move' ret[601413](601417 'deref' call_tmp[778755]))
    gotoReturn _end_bulkCommComputeActiveDims[601411] _end_bulkCommComputeActiveDims[601411]
    (551069 'end of statement' LeftActives[98200] RightActives[98193] inferredRank[98187])
    label _end_bulkCommComputeActiveDims[601411]
    (601415 return ret[601413])
  }
  function bulkCommTranslateDomain[98547](arg srcSlice[98550]:_domain[225034](?), arg srcDom[98554]:_domain[225034](?), arg targetDom[98558]:_domain[225034](?)) : _unknown[42]
  {
    unknown ret[601424] "RVV" "temp"
    unknown call_tmp[778762] "expr temp" "maybe param" "maybe type" "temp"
    (778765 'move' call_tmp[778762](98571 call rank _mt[203] srcSlice[98550]))
    unknown call_tmp[778769] "expr temp" "maybe param" "maybe type" "temp"
    (778772 'move' call_tmp[778769](98575 call rank _mt[203] srcDom[98554]))
    unknown call_tmp[778774] "expr temp" "maybe param" "maybe type" "temp"
    (778777 'move' call_tmp[778774](98568 call != call_tmp[778762] call_tmp[778769]))
    unknown call_tmp[778779] "expr temp" "maybe param" "maybe type" "temp"
    (778782 'move' call_tmp[778779](98578 call _cond_test call_tmp[778774]))
    if call_tmp[778779]
    {
      (98563 call compilerError "bulkCommTranslateDomain: source slice and source domain must have identical rank")
    }
    unknown call_tmp[778786] "expr temp" "maybe param" "maybe type" "temp"
    (778789 'move' call_tmp[778786](98596 call(98593 call (partial) dims _mt[203] srcDom[98554])))
    unknown call_tmp[778793] "expr temp" "maybe param" "maybe type" "temp"
    (778796 'move' call_tmp[778793](98601 call(98598 call (partial) dims _mt[203] targetDom[98558])))
    unknown call_tmp[778798] "maybe param" "maybe type" "temp"
    (778801 'move' call_tmp[778798](98591 call bulkCommComputeActiveDims call_tmp[778786] call_tmp[778793]))
    const tmp[98602] "dead at end of block" "const" "insert auto destroy" "temp"
    (644858 'init var' tmp[98602] call_tmp[778798])
    (98612 call _check_tuple_var_decl tmp[98602] 3)
    (551074 'end of statement')
    unknown call_tmp[778803] "maybe param" "maybe type" "temp"
    (778806 'move' call_tmp[778803](98603 call tmp[98602] 0))
    const SrcActives[98584] "dead at end of block" "const" "insert auto destroy"
    (644860 'init var' SrcActives[98584] call_tmp[778803])
    unknown call_tmp[778808] "maybe param" "maybe type" "temp"
    (778811 'move' call_tmp[778808](98606 call tmp[98602] 1))
    const TargetActives[98586] "dead at end of block" "const" "insert auto destroy"
    (644862 'init var' TargetActives[98586] call_tmp[778808])
    unknown call_tmp[778813] "maybe param" "maybe type" "temp"
    (778816 'move' call_tmp[778813](98609 call tmp[98602] 2))
    const inferredRank[98588] "dead at end of block" "const" "insert auto destroy"
    (644864 'init var' inferredRank[98588] call_tmp[778813])
    (98617 'end of statement')
    unknown call_tmp[778818] "maybe param" "maybe type" "temp"
    (778821 'move' call_tmp[778818](98621 call chpl_strideUnion targetDom[98558] srcSlice[98550]))
    unknown strides[98619] "dead at end of block" "param"
    (644866 'init var' strides[98619] call_tmp[778818])
    (98625 'end of statement')
    unknown call_tmp[778825] "expr temp" "maybe param" "maybe type" "temp"
    (778828 'move' call_tmp[778825](98634 call(98631 call (partial) dims _mt[203] targetDom[98558])))
    unknown call_tmp[778832] "expr temp" "maybe param" "maybe type" "temp"
    (778835 'move' call_tmp[778832](98638 call rank _mt[203] targetDom[98558]))
    unknown call_tmp[778839] "expr temp" "maybe param" "maybe type" "temp"
    (778842 'move' call_tmp[778839](98644 call idxType _mt[203] targetDom[98558]))
    unknown call_tmp[778844] "expr temp" "maybe param" "maybe type" "temp"
    (778847 'move' call_tmp[778844](98642 call range[240](?) call_tmp[778839](strides = strides[98619])))
    unknown call_tmp[778849] "expr temp" "maybe param" "maybe type" "temp"
    (778852 'move' call_tmp[778849](98635 call * call_tmp[778832] call_tmp[778844]))
    unknown call_tmp[778854] "maybe param" "maybe type" "temp"
    (778857 'move' call_tmp[778854](98628 call : call_tmp[778825] call_tmp[778849]))
    unknown rngs[98627] "dead at end of block" "insert auto destroy"
    (644868 'init var' rngs[98627] call_tmp[778854])
    (98650 'end of statement')
    {
      unknown _indexOfInterest[98707] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[98708] "expr temp" "temp"
      unknown call_tmp[778859] "expr temp" "maybe param" "maybe type" "temp"
      (778862 'move' call_tmp[778859](98721 call - inferredRank[98588] 1))
      unknown call_tmp[778864] "expr temp" "maybe param" "maybe type" "temp"
      (778867 'move' call_tmp[778864](98724 call chpl_direct_range_iter 0 call_tmp[778859]))
      (98717 'move' _iterator[98708](98715 call _getIterator call_tmp[778864]))
      Defer
      {
        {
          (98739 call _freeIterator _iterator[98708])
        }
      }
      { scopeless type
        (98729 'move' _indexOfInterest[98707](98726 call iteratorIndex _iterator[98708]))
      }
      ForLoop[98709]
      {
        unknown i[98651] "index var" "insert auto destroy"
        (551076 'end of statement')
        (98734 'move' i[98651] _indexOfInterest[98707])
        (551077 'end of statement' i[98651])
        {
          unknown call_tmp[778869] "maybe param" "maybe type" "temp"
          (778872 'move' call_tmp[778869](98664 call SrcActives[98584] i[98651]))
          const SD[98662] "dead at end of block" "const" "insert auto destroy"
          (644870 'init var' SD[98662] call_tmp[778869])
          (98667 'end of statement')
          unknown call_tmp[778874] "maybe param" "maybe type" "temp"
          (778877 'move' call_tmp[778874](98671 call TargetActives[98586] i[98651]))
          const TD[98669] "dead at end of block" "const" "insert auto destroy"
          (644872 'init var' TD[98669] call_tmp[778874])
          (98674 'end of statement')
          unknown call_tmp[778881] "expr temp" "maybe param" "maybe type" "temp"
          (778884 'move' call_tmp[778881](98683 call(98680 call (partial) dim _mt[203] srcSlice[98550]) SD[98662]))
          unknown call_tmp[778888] "expr temp" "maybe param" "maybe type" "temp"
          (778891 'move' call_tmp[778888](98689 call(98686 call (partial) dim _mt[203] srcDom[98554]) SD[98662]))
          unknown call_tmp[778893] "maybe param" "maybe type" "temp"
          (778896 'move' call_tmp[778893](98678 call densify call_tmp[778881] call_tmp[778888]))
          const dense[98676] "dead at end of block" "const" "insert auto destroy"
          (644874 'init var' dense[98676] call_tmp[778893])
          (98692 'end of statement' SrcActives[98584] i[98651] TargetActives[98586] i[98651] SD[98662])
          unknown call_tmp[778898] "expr temp" "maybe param" "maybe type" "temp"
          (778901 'move' call_tmp[778898](98696 call rngs[98627] TD[98669]))
          unknown call_tmp[778905] "expr temp" "maybe param" "maybe type" "temp"
          (778908 'move' call_tmp[778905](98705 call(98702 call (partial) dim _mt[203] targetDom[98558]) TD[98669]))
          unknown call_tmp[778910] "expr temp" "maybe param" "maybe type" "temp"
          (778913 'move' call_tmp[778910](98699 call unDensify dense[98676] call_tmp[778905]))
          (98693 call = call_tmp[778898] call_tmp[778910])
          (551084 'end of statement' rngs[98627] TD[98669] dense[98676] TD[98669])
        }
        label _continueLabel[98712]
        _indexOfInterest[98707]
        _iterator[98708]
      }
      label _breakLabel[98713]
    }
    unknown call_tmp[778915] "expr temp" "maybe param" "maybe type" "temp"
    (778918 'move' call_tmp[778915](98751 call chpl__buildDomainExpr(98749 'expand_tuple' rngs[98627]) 1))
    (601429 'move' ret[601424](601428 'deref' call_tmp[778915]))
    gotoReturn _end_bulkCommTranslateDomain[601422] _end_bulkCommTranslateDomain[601422]
    (551089 'end of statement' rngs[98627])
    label _end_bulkCommTranslateDomain[601422]
    (601426 return ret[601424])
  }
  function bulkCommConvertCoordinate[98755](arg ind[98757]:_any[141](?), arg bView[98760]:_domain[225034](?), arg aView[98764]:_domain[225034](?)) : _unknown[42]
  {
    unknown ret[601435] "RVV" "temp"
    unknown call_tmp[778922] "expr temp" "maybe param" "maybe type" "temp"
    (778925 'move' call_tmp[778922](98794 call rank _mt[203] bView[98760]))
    unknown call_tmp[778929] "expr temp" "maybe param" "maybe type" "temp"
    (778932 'move' call_tmp[778929](98798 call rank _mt[203] aView[98764]))
    unknown call_tmp[778934] "expr temp" "maybe param" "maybe type" "temp"
    (778937 'move' call_tmp[778934](98791 call != call_tmp[778922] call_tmp[778929]))
    unknown call_tmp[778939] "expr temp" "maybe param" "maybe type" "temp"
    (778942 'move' call_tmp[778939](98801 call _cond_test call_tmp[778934]))
    if call_tmp[778939]
    {
      unknown call_tmp[778946] "expr temp" "maybe param" "maybe type" "temp"
      (778949 'move' call_tmp[778946](98777 call rank _mt[203] bView[98760]))
      unknown call_tmp[778951] "expr temp" "maybe param" "maybe type" "temp"
      (778954 'move' call_tmp[778951](98774 call : call_tmp[778946] string[244]))
      unknown call_tmp[778958] "expr temp" "maybe param" "maybe type" "temp"
      (778961 'move' call_tmp[778958](98787 call rank _mt[203] aView[98764]))
      unknown call_tmp[778963] "expr temp" "maybe param" "maybe type" "temp"
      (778966 'move' call_tmp[778963](98784 call : call_tmp[778958] string[244]))
      (98770 call compilerError "Invalid arguments passed to bulkCommConvertCoordinate - domain ranks must match: bView.rank = " call_tmp[778951] ", aView.rank = " call_tmp[778963])
    }
    unknown call_tmp[778970] "maybe param" "maybe type" "temp"
    (778973 'move' call_tmp[778970](98808 call rank _mt[203] aView[98764]))
    unknown rank[98806] "dead at end of block" "param"
    (644876 'init var' rank[98806] call_tmp[778970])
    (98812 'end of statement')
    unknown call_tmp[778975] "maybe param" "maybe type" "temp"
    (778978 'move' call_tmp[778975](98816 call chpl__tuplify ind[98757]))
    const b[98814] "dead at end of block" "const" "insert auto destroy"
    (644878 'init var' b[98814] call_tmp[778975])
    (98819 'end of statement')
    unknown call_tmp[778982] "expr temp" "maybe param" "maybe type" "temp"
    (778985 'move' call_tmp[778982](98864 call size _mt[203] b[98814]))
    unknown call_tmp[778987] "expr temp" "maybe param" "maybe type" "temp"
    (778990 'move' call_tmp[778987](98861 call != call_tmp[778982] rank[98806]))
    unknown call_tmp[778992] "expr temp" "maybe param" "maybe type" "temp"
    (778995 'move' call_tmp[778992](98868 call _cond_test call_tmp[778987]))
    if call_tmp[778992]
    {
      unknown plural[98822] "dead at end of block" "param"
      unknown tmp[670555] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[670556] "maybe param" "temp"
      unknown call_tmp[778999] "expr temp" "maybe param" "maybe type" "temp"
      (779002 'move' call_tmp[778999](98826 call size _mt[203] b[98814]))
      unknown call_tmp[779004] "expr temp" "maybe param" "maybe type" "temp"
      (779007 'move' call_tmp[779004](98823 call == call_tmp[778999] 1))
      (670561 'move' tmp[670556](670559 call _cond_test call_tmp[779004]))
      if tmp[670556]
      {
        (670566 'move' tmp[670555](670563 '_paramFoldLogical' tmp[670556] " element"))
      }
      {
        (670571 'move' tmp[670555](670568 '_paramFoldLogical' tmp[670556] " elements"))
      }
      (644880 'init var' plural[98822] tmp[670555])
      (98840 'end of statement' b[98814])
      unknown call_tmp[779009] "expr temp" "maybe param" "maybe type" "temp"
      (779012 'move' call_tmp[779009](98846 call : rank[98806] string[244]))
      unknown call_tmp[779016] "expr temp" "maybe param" "maybe type" "temp"
      (779019 'move' call_tmp[779016](98856 call size _mt[203] b[98814]))
      unknown call_tmp[779021] "expr temp" "maybe param" "maybe type" "temp"
      (779024 'move' call_tmp[779021](98853 call : call_tmp[779016] string[244]))
      (98842 call compilerError "Invalid arguments passed to bulkCommConvertCoordinate - expecting index with " call_tmp[779009] " elements, got " call_tmp[779021] plural[98822])
      (551093 'end of statement' b[98814])
    }
    unknown idxType[98873] "dead at end of block" "insert auto destroy" "type variable"
    (644886 'move' idxType[98873](644883 call idxType _mt[203] aView[98764]))
    unknown call_tmp[779030] "maybe param" "maybe type" "temp"
    (779033 'move' call_tmp[779030](98885 call(98882 call (partial) dims _mt[203] aView[98764])))
    const AD[98880] "dead at end of block" "const" "insert auto destroy"
    (644888 'init var' AD[98880] call_tmp[779030])
    (98887 'end of statement')
    unknown call_tmp[779037] "maybe param" "maybe type" "temp"
    (779040 'move' call_tmp[779037](98894 call(98891 call (partial) dims _mt[203] bView[98760])))
    const BD[98889] "dead at end of block" "const" "insert auto destroy"
    (644890 'init var' BD[98889] call_tmp[779037])
    (98896 'end of statement')
    unknown result[98898] "dead at end of block" "insert auto destroy"
    unknown call_tmp[779042] "expr temp" "maybe param" "maybe type" "temp"
    (779045 'move' call_tmp[779042](98899 call * rank[98806] idxType[98873]))
    (644892 'default init var' result[98898] call_tmp[779042])
    (98904 'end of statement' idxType[98873])
    {
      unknown i[98905] "dead at end of block" "index var" "insert auto destroy"
      (644894 'init var' i[98905] 0)
      (551096 'end of statement')
      unknown tmp[98964] "maybe param" "temp"
      unknown call_tmp[779047] "expr temp" "maybe param" "maybe type" "temp"
      (779050 'move' call_tmp[779047](98908 call - rank[98806] 1))
      (98976 'move' tmp[98964](98974 call chpl_compute_low_param_loop_bound 0 call_tmp[779047]))
      unknown tmp[98965] "maybe param" "temp"
      unknown call_tmp[779052] "expr temp" "maybe param" "maybe type" "temp"
      (779055 'move' call_tmp[779052](98981 call - rank[98806] 1))
      (98986 'move' tmp[98965](98984 call chpl_compute_high_param_loop_bound 0 call_tmp[779052]))
      unknown tmp[98966] "maybe param" "temp"
      (98989 'move' tmp[98966] 1)
      ParamForLoop[98991]
      { i[98905] tmp[98964] tmp[98965] tmp[98966]
        {
          unknown call_tmp[779057] "maybe param" "maybe type" "temp"
          (779060 'move' call_tmp[779057](98925 call AD[98880] i[98905]))
          const ar[98923] "dead at end of block" "const" "insert auto destroy"
          (644896 'init var' ar[98923] call_tmp[779057])
          unknown call_tmp[779062] "maybe param" "maybe type" "temp"
          (779065 'move' call_tmp[779062](98919 call BD[98889] i[98905]))
          const br[98917] "dead at end of block" "const" "insert auto destroy"
          (644898 'init var' br[98917] call_tmp[779062])
          (98928 'end of statement' AD[98880] i[98905] BD[98889] i[98905])
          unknown call_tmp[779067] "expr temp" "maybe param" "maybe type" "temp"
          (779070 'move' call_tmp[779067](98941 call _cond_test 1))
          if call_tmp[779067]
          {
            unknown call_tmp[779074] "expr temp" "maybe param" "maybe type" "temp"
            (779077 'move' call_tmp[779074](98937 call b[98814] i[98905]))
            unknown call_tmp[779079] "expr temp" "maybe param" "maybe type" "temp"
            (779082 'move' call_tmp[779079](98935 call(98932 call (partial) contains _mt[203] br[98917]) call_tmp[779074]))
            (98930 call assert call_tmp[779079])
            (551101 'end of statement' br[98917] b[98814] i[98905])
          }
          unknown call_tmp[779084] "expr temp" "maybe param" "maybe type" "temp"
          (779087 'move' call_tmp[779084](98949 call result[98898] i[98905]))
          unknown call_tmp[779093] "expr temp" "maybe param" "maybe type" "temp"
          (779096 'move' call_tmp[779093](98962 call b[98814] i[98905]))
          unknown call_tmp[779098] "expr temp" "maybe param" "maybe type" "temp"
          (779101 'move' call_tmp[779098](98960 call(98957 call (partial) indexOrder _mt[203] br[98917]) call_tmp[779093]))
          unknown call_tmp[779103] "expr temp" "maybe param" "maybe type" "temp"
          (779106 'move' call_tmp[779103](98955 call(98952 call (partial) orderToIndex _mt[203] ar[98923]) call_tmp[779098]))
          (98946 call = call_tmp[779084] call_tmp[779103])
          (551105 'end of statement' result[98898] i[98905] ar[98923] br[98917] b[98814] i[98905])
        }
      }
      label _unused_continueLabel[98968]
      label _breakLabel[98967]
    }
    (601440 'move' ret[601435](601439 'deref' result[98898]))
    gotoReturn _end_bulkCommConvertCoordinate[601433] _end_bulkCommConvertCoordinate[601433]
    (551112 'end of statement' result[98898])
    label _end_bulkCommConvertCoordinate[601433]
    (601437 return ret[601435])
  }
  function chpl_PrivatizedDistHelper[99445](?)._value[99020](arg _mt[99024]:_MT[201], arg this[99022]:chpl_PrivatizedDistHelper[99445](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[601446] "RVV" "temp"
    unknown call_tmp[779110] "expr temp" "maybe param" "maybe type" "temp"
    (779113 'move' call_tmp[779110](424956 call _instance _mt[203] this[99022]))
    unknown call_tmp[779115] "expr temp" "maybe param" "maybe type" "temp"
    (779118 'move' call_tmp[779115](99038 call _isPrivatized call_tmp[779110]))
    unknown call_tmp[779120] "expr temp" "maybe param" "maybe type" "temp"
    (779123 'move' call_tmp[779120](99040 call _cond_test call_tmp[779115]))
    if call_tmp[779120]
    {
      { scopeless type
        unknown call_type_tmp[577171] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[779127] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (779130 'move' call_tmp[779127](424941 call _instance _mt[203] this[99022]))
        (577175 'move' call_type_tmp[577171](99032 'typeof' call_tmp[779127]))
      }
      unknown call_tmp[779134] "expr temp" "maybe param" "maybe type" "temp"
      (779137 'move' call_tmp[779134](424946 call _pid _mt[203] this[99022]))
      unknown call_tmp[779139] "expr temp" "maybe param" "maybe type" "temp"
      (779142 'move' call_tmp[779139](99030 call chpl_getPrivatizedCopy call_type_tmp[577171] call_tmp[779134]))
      (601451 'move' ret[601446](601450 'deref' call_tmp[779139]))
      gotoReturn _end__value[601444] _end__value[601444]
    }
    {
      unknown call_tmp[779146] "expr temp" "maybe param" "maybe type" "temp"
      (779149 'move' call_tmp[779146](424951 call _instance _mt[203] this[99022]))
      (601456 'move' ret[601446](601455 'deref' call_tmp[779146]))
      gotoReturn _end__value[601444] _end__value[601444]
    }
    label _end__value[601444]
    (601448 return ret[601446])
  }
  function chpl_PrivatizedDistHelper[99445](?).chpl_forwarding_expr1[99047](arg _mt[99052]:_MT[201], arg this[99050]:chpl_PrivatizedDistHelper[99445](?)) : _unknown[42] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[601462] "RVV" "temp"
    (601466 'move' ret[601462](424960 call _value _mt[203] this[99050]))
    (601464 return ret[601462])
  }
  function chpl_PrivatizedDistHelper[99445](?)._do_destroy[99060](arg _mt[99064]:_MT[201], arg this[99062]:chpl_PrivatizedDistHelper[99445](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown tmp[482793] "maybe param" "temp"
    unknown call_tmp[779155] "expr temp" "maybe param" "maybe type" "temp"
    (779158 'move' call_tmp[779155](424977 call _unowned _mt[203] this[99062]))
    (482804 'move' tmp[482793](99111 call ! call_tmp[779155]))
    unknown call_tmp[779160] "expr temp" "maybe param" "maybe type" "temp"
    (779163 'move' call_tmp[779160](482806 call _cond_invalid tmp[482793]))
    if call_tmp[779160]
    {
      (482809 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670578] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670579] "maybe param" "temp"
    unknown call_tmp[779165] "expr temp" "maybe param" "maybe type" "temp"
    (779168 'move' call_tmp[779165](482794 call isTrue tmp[482793]))
    (670584 'move' tmp[670579](670582 call _cond_test call_tmp[779165]))
    if tmp[670579]
    {
      unknown tmp[670586] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[779172] "expr temp" "maybe param" "maybe type" "temp"
      (779175 'move' call_tmp[779172](400951 call _instance _mt[203] this[99062]))
      unknown call_tmp[779179] "expr temp" "maybe param" "maybe type" "temp"
      (779182 'move' call_tmp[779179](99122 call(99119 call (partial) singleton _mt[203] call_tmp[779172])))
      unknown call_tmp[779184] "expr temp" "maybe param" "maybe type" "temp"
      (779187 'move' call_tmp[779184](99114 call ! call_tmp[779179]))
      (670588 'move' tmp[670586](482797 call isTrue call_tmp[779184]))
      (670593 'move' tmp[670578](670590 '_paramFoldLogical' tmp[670579] tmp[670586]))
    }
    {
      (670598 'move' tmp[670578](670595 '_paramFoldLogical' tmp[670579] 0))
    }
    unknown call_tmp[779189] "expr temp" "maybe param" "maybe type" "temp"
    (779192 'move' call_tmp[779189](99123 call _cond_test tmp[670578]))
    if call_tmp[779189]
    {
      {
        const tmp[99101] "const" "temp"
        unknown call_tmp[779196] "expr temp" "maybe param" "maybe type" "temp"
        (779199 'move' call_tmp[779196](424965 call _instance _mt[203] this[99062]))
        unknown call_tmp[779201] "expr temp" "maybe param" "maybe type" "temp"
        (779204 'move' call_tmp[779201](99098 '_wide_get_locale' call_tmp[779196]))
        (99102 'move' tmp[99101](99099 'deref' call_tmp[779201]))
        {
          unknown call_tmp[779208] "expr temp" "maybe param" "maybe type" "temp"
          (779211 'move' call_tmp[779208](400946 call _instance _mt[203] this[99062]))
          unknown call_tmp[779215] "maybe param" "maybe type" "temp"
          (779218 'move' call_tmp[779215](99078 call(99075 call (partial) remove _mt[203] call_tmp[779208])))
          unknown distToFree[99071] "dead at end of block" "insert auto destroy"
          (644900 'init var' distToFree[99071] call_tmp[779215])
          (99080 'end of statement')
          unknown call_tmp[779220] "expr temp" "maybe param" "maybe type" "temp"
          (779223 'move' call_tmp[779220](99090 call != distToFree[99071] nil[32]))
          unknown call_tmp[779225] "expr temp" "maybe param" "maybe type" "temp"
          (779228 'move' call_tmp[779225](99094 call _cond_test call_tmp[779220]))
          if call_tmp[779225]
          {
            unknown call_tmp[779230] "expr temp" "maybe param" "maybe type" "temp"
            (779233 'move' call_tmp[779230](99084 call postfix! distToFree[99071]))
            unknown call_tmp[779237] "expr temp" "maybe param" "maybe type" "temp"
            (779240 'move' call_tmp[779237](424971 call _instance _mt[203] this[99062]))
            unknown call_tmp[779242] "expr temp" "maybe param" "maybe type" "temp"
            (779245 'move' call_tmp[779242](99088 call _isPrivatized call_tmp[779237]))
            (99083 call _delete_dist call_tmp[779230] call_tmp[779242])
            (551117 'end of statement' distToFree[99071])
          }
        }
        (99105 'elided on block' 0 tmp[99101])
      }
    }
    (601468 return _void[46])
  }
  function chpl_PrivatizedDistHelper[99445](?).deinit[99129](arg _mt[99133]:_MT[201], arg this[99131]:chpl_PrivatizedDistHelper[99445](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (99137 call(424983 call (partial) _do_destroy _mt[203] this[99131]))
    (601470 return _void[46])
  }
  function chpl_PrivatizedDistHelper[99445](?).newRectangularDom[99140](arg _mt[99174]:_MT[201], arg this[99142]:chpl_PrivatizedDistHelper[99445](?), param arg rank[99145]:int(64)[10], arg idxType[99148]:_any[141](?), param arg strides[99151]:strideKind[107137], arg ranges[99165] :
  unknown call_tmp[779249] "expr temp" "maybe param" "maybe type" "temp", arg definedConst[99170]:bool[19] =
  0) : _unknown[42] "method" "primary method"
  {
    unknown ret[601474] "RVV" "temp"
    unknown call_tmp[779256] "expr temp" "maybe param" "maybe type" "temp"
    (779259 'move' call_tmp[779256](400956 call _value _mt[203] this[99142]))
    unknown call_tmp[779263] "maybe param" "maybe type" "temp"
    (779266 'move' call_tmp[779263](99185 call(99182 call (partial) dsiNewRectangularDom _mt[203] call_tmp[779256]) rank[99145] idxType[99148] strides[99151] ranges[99165]))
    unknown x[99178] "dead at end of block" "insert auto destroy"
    (644902 'init var' x[99178] call_tmp[779263])
    (99191 'end of statement')
    unknown call_tmp[779270] "expr temp" "maybe param" "maybe type" "temp"
    (779273 'move' call_tmp[779270](99197 call definedConst _mt[203] x[99178]))
    (99192 call = call_tmp[779270] definedConst[99170])
    (551120 'end of statement' x[99178])
    unknown call_tmp[779277] "expr temp" "maybe param" "maybe type" "temp"
    (779280 'move' call_tmp[779277](99216 call(99213 call (partial) linksDistribution _mt[203] x[99178])))
    unknown call_tmp[779282] "expr temp" "maybe param" "maybe type" "temp"
    (779285 'move' call_tmp[779282](99217 call _cond_test call_tmp[779277]))
    if call_tmp[779282]
    {
      unknown call_tmp[779289] "expr temp" "maybe param" "maybe type" "temp"
      (779292 'move' call_tmp[779289](400961 call _value _mt[203] this[99142]))
      (99208 call(99205 call (partial) add_dom _mt[203] call_tmp[779289]) x[99178])
      (551122 'end of statement' x[99178])
    }
    (601479 'move' ret[601474](601478 'deref' x[99178]))
    gotoReturn _end_newRectangularDom[601472] _end_newRectangularDom[601472]
    (551124 'end of statement' x[99178])
    label _end_newRectangularDom[601472]
    (601476 return ret[601474])
  }
  function chpl_PrivatizedDistHelper[99445](?).newRectangularDom[99225](arg _mt[99245]:_MT[201], arg this[99227]:chpl_PrivatizedDistHelper[99445](?), param arg rank[99230]:int(64)[10], arg idxType[99233]:_any[141](?), param arg strides[99236]:strideKind[107137], arg definedConst[99241]:bool[19] =
  0) : _unknown[42] "method" "primary method"
  {
    unknown ret[601485] "RVV" "temp"
    unknown ranges[99249] "dead at end of block" "insert auto destroy"
    unknown call_tmp[779296] "expr temp" "maybe param" "maybe type" "temp"
    (779299 'move' call_tmp[779296](99254 call range[240](?) idxType[99233] both[107114] strides[99236]))
    unknown call_tmp[779301] "expr temp" "maybe param" "maybe type" "temp"
    (779304 'move' call_tmp[779301](99250 call * rank[99230] call_tmp[779296]))
    (644904 'default init var' ranges[99249] call_tmp[779301])
    (99262 'end of statement')
    unknown call_tmp[779308] "expr temp" "maybe param" "maybe type" "temp"
    (779311 'move' call_tmp[779308](99265 call(425006 call (partial) newRectangularDom _mt[203] this[99227]) rank[99230] idxType[99233] strides[99236] ranges[99249] definedConst[99241]))
    (601490 'move' ret[601485](601489 'deref' call_tmp[779308]))
    gotoReturn _end_newRectangularDom[601483] _end_newRectangularDom[601483]
    (551126 'end of statement' ranges[99249])
    label _end_newRectangularDom[601483]
    (601487 return ret[601485])
  }
  function chpl_PrivatizedDistHelper[99445](?).newAssociativeDom[99273](arg _mt[99285]:_MT[201], arg this[99275]:chpl_PrivatizedDistHelper[99445](?), arg idxType[99277]:_any[141](?), param arg parSafe[99281]:bool[19] =
  1) : _unknown[42] "method" "primary method"
  {
    unknown ret[601496] "RVV" "temp"
    unknown call_tmp[779315] "expr temp" "maybe param" "maybe type" "temp"
    (779318 'move' call_tmp[779315](400967 call _value _mt[203] this[99275]))
    unknown call_tmp[779322] "maybe param" "maybe type" "temp"
    (779325 'move' call_tmp[779322](99296 call(99293 call (partial) dsiNewAssociativeDom _mt[203] call_tmp[779315]) idxType[99277] parSafe[99281]))
    unknown x[99289] "dead at end of block" "insert auto destroy"
    (644906 'init var' x[99289] call_tmp[779322])
    (99300 'end of statement')
    unknown call_tmp[779329] "expr temp" "maybe param" "maybe type" "temp"
    (779332 'move' call_tmp[779329](99312 call(99309 call (partial) linksDistribution _mt[203] x[99289])))
    unknown call_tmp[779334] "expr temp" "maybe param" "maybe type" "temp"
    (779337 'move' call_tmp[779334](99313 call _cond_test call_tmp[779329]))
    if call_tmp[779334]
    {
      unknown call_tmp[779341] "expr temp" "maybe param" "maybe type" "temp"
      (779344 'move' call_tmp[779341](400971 call _value _mt[203] this[99275]))
      (99306 call(99303 call (partial) add_dom _mt[203] call_tmp[779341]) x[99289])
      (551128 'end of statement' x[99289])
    }
    (601501 'move' ret[601496](601500 'deref' x[99289]))
    gotoReturn _end_newAssociativeDom[601494] _end_newAssociativeDom[601494]
    (551130 'end of statement' x[99289])
    label _end_newAssociativeDom[601494]
    (601498 return ret[601496])
  }
  function chpl_PrivatizedDistHelper[99445](?).newSparseDom[99321](arg _mt[99335]:_MT[201], arg this[99323]:chpl_PrivatizedDistHelper[99445](?), param arg rank[99326]:int(64)[10], arg idxType[99329]:_any[141](?), arg dom[99332]:_domain[225034](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[601507] "RVV" "temp"
    unknown call_tmp[779350] "expr temp" "maybe param" "maybe type" "temp"
    (779353 'move' call_tmp[779350](400976 call _value _mt[203] this[99323]))
    unknown call_tmp[779357] "maybe param" "maybe type" "temp"
    (779360 'move' call_tmp[779357](99346 call(99343 call (partial) dsiNewSparseDom _mt[203] call_tmp[779350]) rank[99326] idxType[99329] dom[99332]))
    unknown x[99339] "dead at end of block" "insert auto destroy"
    (644908 'init var' x[99339] call_tmp[779357])
    (99351 'end of statement')
    unknown call_tmp[779364] "expr temp" "maybe param" "maybe type" "temp"
    (779367 'move' call_tmp[779364](99363 call(99360 call (partial) linksDistribution _mt[203] x[99339])))
    unknown call_tmp[779369] "expr temp" "maybe param" "maybe type" "temp"
    (779372 'move' call_tmp[779369](99364 call _cond_test call_tmp[779364]))
    if call_tmp[779369]
    {
      unknown call_tmp[779376] "expr temp" "maybe param" "maybe type" "temp"
      (779379 'move' call_tmp[779376](400980 call _value _mt[203] this[99323]))
      (99357 call(99354 call (partial) add_dom _mt[203] call_tmp[779376]) x[99339])
      (551132 'end of statement' x[99339])
    }
    (601512 'move' ret[601507](601511 'deref' x[99339]))
    gotoReturn _end_newSparseDom[601505] _end_newSparseDom[601505]
    (551134 'end of statement' x[99339])
    label _end_newSparseDom[601505]
    (601509 return ret[601507])
  }
  function chpl_PrivatizedDistHelper[99445](?).idxToLocale[99372](arg _mt[99378]:_MT[201], arg this[99374]:chpl_PrivatizedDistHelper[99445](?), arg ind[99376]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[601518] "RVV" "temp"
    unknown call_tmp[779385] "expr temp" "maybe param" "maybe type" "temp"
    (779388 'move' call_tmp[779385](400985 call _value _mt[203] this[99374]))
    unknown call_tmp[779392] "expr temp" "maybe param" "maybe type" "temp"
    (779395 'move' call_tmp[779392](99388 call(99385 call (partial) dsiIndexToLocale _mt[203] call_tmp[779385]) ind[99376]))
    (601523 'move' ret[601518](601522 'deref' call_tmp[779392]))
    (601520 return ret[601518])
  }
  function chpl_PrivatizedDistHelper[99445](?).serialize[99392](arg _mt[99400]:_MT[201], arg this[99394]:chpl_PrivatizedDistHelper[99445](?), arg writer[99396]:_any[141](?), ref arg serializer[99398]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[779401] "expr temp" "maybe param" "maybe type" "temp"
    (779404 'move' call_tmp[779401](425027 call _value _mt[203] this[99394]))
    (99407 call(99404 call (partial) write _mt[203] writer[99396]) call_tmp[779401])
    (601525 return _void[46])
  }
  function chpl_PrivatizedDistHelper[99445](?).displayRepresentation[99411](arg _mt[99415]:_MT[201], arg this[99413]:chpl_PrivatizedDistHelper[99445](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[779408] "expr temp" "maybe param" "maybe type" "temp"
    (779411 'move' call_tmp[779408](400990 call _value _mt[203] this[99413]))
    (99424 call(99421 call (partial) dsiDisplayRepresentation _mt[203] call_tmp[779408]))
    (601527 return _void[46])
  }
  function chpl_PrivatizedDistHelper[99445](?).targetLocales[99427](arg _mt[99431]:_MT[201], arg this[99429]:chpl_PrivatizedDistHelper[99445](?)) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[601531] "RVV" "temp"
    unknown call_tmp[779417] "expr temp" "maybe param" "maybe type" "temp"
    (779420 'move' call_tmp[779417](400994 call _value _mt[203] this[99429]))
    unknown call_tmp[779424] "expr temp" "maybe param" "maybe type" "temp"
    (779427 'move' call_tmp[779424](99441 call(99438 call (partial) dsiTargetLocales _mt[203] call_tmp[779417])))
    (601536 'move' ret[601531](601535 'addr of' call_tmp[779424]))
    (601533 return ret[601531])
  }
  type chpl_PrivatizedDistHelper[99445](?) val _pid[99007]:int(64)[10] int(64)[10] unknown _instance[99012] "owned" val _unowned[99016]:bool[19] bool[19] forwarding ( )
  function |writeSerializable[475212]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] chpl_PrivatizedDistHelper[99445](?)
    {
    }
    (601540 return _void[46])
  }
  (396105 'used modules list'(387014 'use' ChapelStandard[315387]))
}
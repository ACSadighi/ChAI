AST dump for ChapelRange after pass denormalize.
Module use list: ChapelBase HaltWrappers AutoMath DSIUtil Reflection ChapelDebugPrint 

{
  function chpl__init_ChapelRange[468420](const in arg _ln[9365349]:int(64)[10], in arg _fn[9365351]:int(32)[66]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelRange_p[9307413]
    {
      goto _exit_chpl__init_ChapelRange[9307450] _exit_chpl__init_ChapelRange[9307450]
    }
    ref refIndentLevel[9307436]:int(32)[66] "temp"
    (9307434 call printModuleInit[386886] c"%*s\n" c"ChapelRange" 11 _ln[9365349] _fn[9365351])
    (9307440 'move' refIndentLevel[9307436](9307439 'addr of' moduleInitLevel[386877]))
    (9307443 '+=' refIndentLevel[9307436] 1)
    (9307419 'move' chpl__init_ChapelRange_p[9307413] 1)
    {
      (9305164 call chpl__init_ChapelBase[468297] _ln[9365349] _fn[9365351])
      (9305166 call chpl__init_HaltWrappers[468312] _ln[9365349] _fn[9365351])
      (9305168 call chpl__init_AutoMath[468318] _ln[9365349] _fn[9365351])
      (9305170 call chpl__init_DSIUtil[468408] _ln[9365349] _fn[9365351])
      (9305172 call chpl__init_Reflection[468315] _ln[9365349] _fn[9365351])
      (9305174 call chpl__init_ChapelDebugPrint[468417] _ln[9365349] _fn[9365351])
    }
    (9307446 '-=' refIndentLevel[9307436] 1)
    label _exit_chpl__init_ChapelRange[9307450]
    (607001 return _void[46])
  }
  type boundKind[107122] def both[107114]:boundKind[107122] def low[107116]:boundKind[107122] def high[107118]:boundKind[107122] def neither[107120]:boundKind[107122]
  type strideKind[107137] def one[107127]:strideKind[107137] def negOne[107129]:strideKind[107137] def positive[107131]:strideKind[107137] def negative[107133]:strideKind[107137] def any[107135]:strideKind[107137]
  type range(int(64),low,one)[1576928] val _low[1576890]:int(64)[10] val _high[1576895]:int(64)[10]
  type range(int(64),both,one)[1610039] val _low[1610001]:int(64)[10] val _high[1610006]:int(64)[10]
  type range(int(64),both,any)[3464570] val _low[3464532]:int(64)[10] val _high[3464537]:int(64)[10] val _stride[3464542]:int(64)[10] val _alignment[3464556]:int(64)[10]
  type range(int(64),high,one)[1730829] val _low[1730791]:int(64)[10] val _high[1730796]:int(64)[10]
  type range(byteIndex,both,one)[1655317] val _low[1655279]:int(64)[10] val _high[1655284]:int(64)[10]
  type range(byteIndex,low,one)[1698271] val _low[1698233]:int(64)[10] val _high[1698238]:int(64)[10]
  type range(byteIndex,high,one)[1726799] val _low[1726761]:int(64)[10] val _high[1726766]:int(64)[10]
  function range(int(64),both,one)[1610039].init[1610254](ref arg this[1610260]:range(int(64),both,one)[1610039], const in arg low[1610266]:int(64)[10], const in arg high[1610270]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1610338 '.=' this[1610260] _low[1610001] low[1610266])
    (1610370 '.=' this[1610260] _high[1610006] high[1610270])
    (1610501 return _void[46])
  }
  function range(byteIndex,both,one)[1655317].init[1654908](ref arg this[1654914]:range(byteIndex,both,one)[1655317], const  ref arg low[1654920]:byteIndex[18611], const  ref arg high[1654924]:byteIndex[18611]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1654992 '.=' this[1654914] _low[1655279](7362593 '.v' low[1654920] _bindex[18495]))
    (1655024 '.=' this[1654914] _high[1655284](7362603 '.v' high[1654924] _bindex[18495]))
    (1655155 return _void[46])
  }
  function range(int(64),low,one)[1576928].init[1576460](ref arg this[1576466]:range(int(64),low,one)[1576928], const in arg low[1576468]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1576537 '.=' this[1576466] _low[1576890] low[1576468])
    (1576561 '.=' this[1576466] _high[1576895] 0)
    (1576746 return _void[46])
  }
  function range(byteIndex,low,one)[1698271].init[1697875](ref arg this[1697881]:range(byteIndex,low,one)[1698271], const  ref arg low[1697883]:byteIndex[18611]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1697952 '.=' this[1697881] _low[1698233](7362613 '.v' low[1697883] _bindex[18495]))
    (1697976 '.=' this[1697881] _high[1698238] 0)
    (1698161 return _void[46])
  }
  function range(byteIndex,high,one)[1726799].init[1726403](ref arg this[1726409]:range(byteIndex,high,one)[1726799], const  ref arg high[1726411]:byteIndex[18611]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1726472 '.=' this[1726409] _low[1726761] 0)
    (1726504 '.=' this[1726409] _high[1726766](7362623 '.v' high[1726411] _bindex[18495]))
    (1726689 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1763679](ref arg this[1763685]:range(int(64),both,one)[1610039]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1763894 call init[1638161] this[1763685] 1 0 1 0)
    (1763906 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1662481](ref arg this[1662487]:range(int(64),both,one)[1610039]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1662566 call init[1638161] this[1662487] 1 0 1 0)
    (1662578 return _void[46])
  }
  function range(int(64),low,one)[1576928].init[1703333](ref arg this[1703339]:range(int(64),low,one)[1576928]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1703418 call init[1703894] this[1703339] 1 0 1 0)
    (1703430 return _void[46])
  }
  function range(int(64),high,one)[1730829].init[1732335](ref arg this[1732341]:range(int(64),high,one)[1730829]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1732420 call init[1732941] this[1732341] 0 0 1 0)
    (1732432 return _void[46])
  }
  function range(int(64),both,any)[3464570].init[3462587](ref arg this[3462593]:range(int(64),both,any)[3464570], const in arg _low[3462601]:int(64)[10], const in arg _high[3462603]:int(64)[10], const in arg _stride[3462605]:int(64)[10], const in arg _alignment[3462607]:int(64)[10], const in arg _aligned[3462609]:bool[19], const in arg _ln[9508693]:int(64)[10], in arg _fn[9508695]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[3462670]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
    if(7351557 'u!' _aligned[3462609])
    {
      (3462696 'move' tmp[3462670] -1)
    }
    {
      (3462741 'move' tmp[3462670](3462720 call chpl__mod[3462785] _alignment[3462607] _stride[3462605] _ln[9508693] _fn[9508695]))
    }
    (3462762 call init[3464064] this[3462593] _low[3462601] _high[3462603] _stride[3462605] tmp[3462670])
    (3462772 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1629805](ref arg this[1629811]:range(int(64),both,one)[1610039], const in arg _low[1629819]:int(64)[10], const in arg _high[1629821]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1629913 '.=' this[1629811] _low[1610001] _low[1629819])
    (1629953 '.=' this[1629811] _high[1610006] _high[1629821])
    (1630253 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1638161](ref arg this[1638167]:range(int(64),both,one)[1610039], const in arg _low[1638175]:int(64)[10], const in arg _high[1638177]:int(64)[10], const in arg _stride[1638179]:int(64)[10], const in arg alignmentValue[1638181]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1638269 '.=' this[1638167] _low[1610001] _low[1638175])
    (1638309 '.=' this[1638167] _high[1610006] _high[1638177])
    (1638609 return _void[46])
  }
  function range(int(64),low,one)[1576928].init[1703894](ref arg this[1703900]:range(int(64),low,one)[1576928], const in arg _low[1703908]:int(64)[10], const in arg _high[1703910]:int(64)[10], const in arg _stride[1703912]:int(64)[10], const in arg alignmentValue[1703914]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1704002 '.=' this[1703900] _low[1576890] _low[1703908])
    (1704042 '.=' this[1703900] _high[1576895] _high[1703910])
    (1704342 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1716487](ref arg this[1716493]:range(int(64),both,one)[1610039], const in arg _low[1716501]:int(64)[10], const in arg _high[1716503]:int(64)[10], const in arg _stride[1716505]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1716595 '.=' this[1716493] _low[1610001] _low[1716501])
    (1716635 '.=' this[1716493] _high[1610006] _high[1716503])
    (1716935 return _void[46])
  }
  function range(int(64),high,one)[1730829].init[1732941](ref arg this[1732947]:range(int(64),high,one)[1730829], const in arg _low[1732955]:int(64)[10], const in arg _high[1732957]:int(64)[10], const in arg _stride[1732959]:int(64)[10], const in arg alignmentValue[1732961]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1733049 '.=' this[1732947] _low[1730791] _low[1732955])
    (1733089 '.=' this[1732947] _high[1730796] _high[1732957])
    (1733389 return _void[46])
  }
  function range(int(64),both,any)[3464570].init[3464064](ref arg this[3464070]:range(int(64),both,any)[3464570], const in arg _low[3464078]:int(64)[10], const in arg _high[3464080]:int(64)[10], const in arg _stride[3464082]:int(64)[10], const in arg alignmentValue[3464084]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (3464172 '.=' this[3464070] _low[3464532] _low[3464078])
    (3464212 '.=' this[3464070] _high[3464537] _high[3464080])
    (3464301 '.=' this[3464070] _stride[3464542] _stride[3464082])
    (3464365 '.=' this[3464070] _alignment[3464556] alignmentValue[3464084])
    (3464380 call verifyAppropriateStride[3464843] _stride[3464082])
    (3464512 return _void[46])
  }
  function chpl_build_bounded_range[1489158](ref arg _retArg[5546254]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val call_tmp[1489299]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4442685]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4442688 call init[1610254] initTemp[4442685] 0 2)
    (1489301 'move' call_tmp[1489299] initTemp[4442685])
    (5546256 '=' _retArg[5546254] call_tmp[1489299])
    (5546258 return _void[46])
  }
  function chpl_build_bounded_range[1509041](ref arg _retArg[5547430]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1509066]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1907803]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1907806 call init[1610254] initTemp[1907803] 0 0)
    (1509068 'move' call_tmp[1509066] initTemp[1907803])
    (5547432 '=' _retArg[5547430] call_tmp[1509066])
    (5547434 return _void[46])
  }
  function chpl_build_bounded_range[1605270](ref arg _retArg[5548949]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val call_tmp[1605295]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4460535]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4460538 call init[1610254] initTemp[4460535] 0 4)
    (1605297 'move' call_tmp[1605295] initTemp[4460535])
    (5548951 '=' _retArg[5548949] call_tmp[1605295])
    (5548953 return _void[46])
  }
  function chpl_build_bounded_range[1622277](ref arg _retArg[5549055]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val call_tmp[1622302]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4428836]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4428839 call init[1610254] initTemp[4428836] 0 1)
    (1622304 'move' call_tmp[1622302] initTemp[4428836])
    (5549057 '=' _retArg[5549055] call_tmp[1622302])
    (5549059 return _void[46])
  }
  function chpl_build_bounded_range[1645149](ref arg _retArg[5549760]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val call_tmp[1645174]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4410846]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4410849 call init[1610254] initTemp[4410846] 0 3)
    (1645176 'move' call_tmp[1645174] initTemp[4410846])
    (5549762 '=' _retArg[5549760] call_tmp[1645174])
    (5549764 return _void[46])
  }
  function chpl_build_bounded_range[1759352](ref arg _retArg[5551527]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val call_tmp[1759377]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1760492]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1760495 call init[1610254] initTemp[1760492] 1 0)
    (1759379 'move' call_tmp[1759377] initTemp[1760492])
    (5551529 '=' _retArg[5551527] call_tmp[1759377])
    (5551531 return _void[46])
  }
  function chpl_build_bounded_range[2833325](ref arg _retArg[5579652]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val call_tmp[2833350]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4476428]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4476431 call init[1610254] initTemp[4476428] 0 5)
    (2833352 'move' call_tmp[2833350] initTemp[4476428])
    (5579654 '=' _retArg[5579652] call_tmp[2833350])
    (5579656 return _void[46])
  }
  function chpl_build_bounded_range[108787](const in arg low[108792]:int(64)[10], const in arg high[108798]:int(64)[10], ref arg _retArg[5542616]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[786667]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1610242]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1610245 call init[1610254] initTemp[1610242] low[108792] high[108798])
    (786670 'move' call_tmp[786667] initTemp[1610242])
    (5542618 '=' _retArg[5542616] call_tmp[786667])
    (5542620 return _void[46])
  }
  function chpl__nudgeHighBound[1599937](const in arg high[1599939]:int(64)[10]) : int(64)[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7444818]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7444820 'move' call_tmp[7444818](7444822 '-' high[1599939] 1))
    (1599982 return call_tmp[7444818])
  }
  function chpl_build_low_bounded_range[1576395](const in arg low[1576397]:int(64)[10], ref arg _retArg[5548649]:range(int(64),low,one)[1576928]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1576435]:range(int(64),low,one)[1576928] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1576451]:range(int(64),low,one)[1576928] "dead after last mention" "delay instantiation" "temp"
    (1576454 call init[1576460] initTemp[1576451] low[1576397])
    (1576437 'move' call_tmp[1576435] initTemp[1576451])
    (5548651 '=' _retArg[5548649] call_tmp[1576435])
    (5548653 return _void[46])
  }
  function range(int(64),both,any)[3464570].hasPositiveStride[3467799](const in arg this[3467805]:range(int(64),both,any)[3464570]) : bool[19] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7317058]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7317060 'move' call_tmp[7317058](7317062 '>'(9223147 '.v' this[3467805] _stride[3464542]) 0))
    (3467853 return call_tmp[7317058])
  }
  function verifyAppropriateStride[3464843](const in arg stride[3464847]:int(64)[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (3464915 return _void[46])
  }
  function verifyAppropriateStride[3810065](const in arg stride[3810069]:int(64)[10], const in arg _ln[9517935]:int(64)[10], in arg _fn[9517937]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (3810104 call assert[87867](7317437 '>' stride[3810069] 0) _ln[9517935] _fn[9517937])
    (3810137 return _void[46])
  }
  function range(int(64),both,one)[1610039].size[1649150](const in arg this[1649156]:range(int(64),both,one)[1610039], const in arg _ln[9492001]:int(64)[10], in arg _fn[9492003]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[1649168]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1649170 'move' call_tmp[1649168](1649176 call sizeAs[1649186] this[1649156] _ln[9492001] _fn[9492003]))
    (1649183 return call_tmp[1649168])
  }
  function range(int(64),both,one)[1610039].sizeAs[1630327](const in arg this[1630333]:range(int(64),both,one)[1610039], const in arg _ln[9492621]:int(64)[10], in arg _fn[9492623]:int(32)[66]) : uint(64)[86] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val call_tmp[1630444]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1630446 'move' call_tmp[1630444](1630452 call sizeAsHelp[1630476] this[1630333](7796856 '.v' this[1630333] _low[1610001])(7796866 '.v' this[1630333] _high[1610006]) _ln[9492621] _fn[9492623]))
    (1630461 return call_tmp[1630444])
  }
  function range(int(64),both,one)[1610039].sizeAs[1649186](const in arg this[1649192]:range(int(64),both,one)[1610039], const in arg _ln[9491229]:int(64)[10], in arg _fn[9491231]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val call_tmp[1649303]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1649305 'move' call_tmp[1649303](1649311 call sizeAsHelp[1649335] this[1649192](7801757 '.v' this[1649192] _low[1610001])(7801767 '.v' this[1649192] _high[1610006]) _ln[9491229] _fn[9491231]))
    (1649320 return call_tmp[1649303])
  }
  function range(int(64),both,one)[1610039].sizeAsHelp[1630476](const in arg this[1630482]:range(int(64),both,one)[1610039], const in arg al[1630496]:int(64)[10], const in arg ah[1630508]:int(64)[10], const in arg _ln[9368435]:int(64)[10], in arg _fn[9368437]:int(32)[66]) : uint(64)[86] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1630512]:uint(64)[86] "dead after last mention" "RVV" "temp"
    val ret[7745963]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7745965 'move' ret[7745963](7745967 '.v' this[1630482] _high[1610006]))
    val ret[7743268]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7743270 'move' ret[7743268](7743272 '.v' this[1630482] _low[1610001]))
    if(7315087 '>' ret[7743268] ret[7745963])
    {
      (1632619 '=' ret[1630512] 0)
      gotoReturn _end_sizeAsHelp[1630905] _end_sizeAsHelp[1630905]
    }
    const-val call_tmp[7498912]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498914 'move' call_tmp[7498912](7498916 '-'(1630636 'cast' uint(64)[86] ret[7745963] _ln[9368435] _fn[9368437])(1630651 'cast' uint(64)[86] ret[7743268] _ln[9368435] _fn[9368437])))
    val tmp[7508788]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7508786 'u!'(7508779 '<' 0 0))
    {
      (7508806 'move' tmp[7508788](7508803 '==' 1(7508796 'cast' uint(64)[86] 0 _ln[9368435] _fn[9368437])))
    }
    {
      (7508810 'move' tmp[7508788] 0)
    }
    if tmp[7508788]
    {
      (7508817 call halt[88131] "Attempt to divide by zero" _ln[9368435] _fn[9368437])
    }
    const-val call_tmp[7508820]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7508822 'move' call_tmp[7508820](7508824 '/' call_tmp[7498912] 1))
    const-val call_tmp[7637409]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7637411 'move' call_tmp[7637409](7637413 '+' call_tmp[7508820] 1))
    val tmp[7507096]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7507094 'u!'(7507087 '<' 0 0))
    {
      (7507114 'move' tmp[7507096](7507111 '==' call_tmp[7637409](7507104 'cast' uint(64)[86] 0 _ln[9368435] _fn[9368437])))
    }
    {
      (7507118 'move' tmp[7507096] 0)
    }
    val tmp[1630752]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7507096]
    {
      (1630770 'move' tmp[1630752] 1)
    }
    {
      (1630798 'move' tmp[1630752](7498411 '>' call_tmp[7637409] 18446744073709551615))
    }
    if tmp[1630752]
    {
      const-val call_tmp[1630858]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5549202]:string[244] "temp"
      (1630863 call :[1631991] this[1630482] ret_tmp[5549202] _ln[9368435] _fn[9368437])
      (5549205 'move' call_tmp[1630858] ret_tmp[5549202])
      const-val call_tmp[1630866]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539350]:string[244] "temp"
      (1630871 call +[28065] "range.size exceeds max(uint(64)) for: '" call_tmp[1630858] ret_tmp[5539350] _ln[9368435] _fn[9368437])
      (5539353 'move' call_tmp[1630866] ret_tmp[5539350])
      const-val call_tmp[1630874]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539356]:string[244] "temp"
      (1630879 call +[28065] call_tmp[1630866] "'" ret_tmp[5539356] _ln[9368435] _fn[9368437])
      (5539359 'move' call_tmp[1630874] ret_tmp[5539356])
      (1630883 call boundsCheckHalt[404] call_tmp[1630874] _ln[9368435] _fn[9368437])
      ref i_x[7336570]:string[244] "temp"
      (7336574 'move' i_x[7336570](7336572 'set reference' call_tmp[1630874]))
      (7336578 call deinit[21354] i_x[7336570] _ln[9368435] _fn[9368437])
      ref i_x[7336582]:string[244] "temp"
      (7336586 'move' i_x[7336582](7336584 'set reference' call_tmp[1630866]))
      (7336590 call deinit[21354] i_x[7336582] _ln[9368435] _fn[9368437])
      ref i_x[7336594]:string[244] "temp"
      (7336598 'move' i_x[7336594](7336596 'set reference' call_tmp[1630858]))
      (7336602 call deinit[21354] i_x[7336594] _ln[9368435] _fn[9368437])
    }
    (1632622 '=' ret[1630512] call_tmp[7637409])
    label _end_sizeAsHelp[1630905]
    (1630907 return ret[1630512])
  }
  function range(int(64),both,one)[1610039].sizeAsHelp[1649335](const in arg this[1649341]:range(int(64),both,one)[1610039], const in arg al[1649355]:int(64)[10], const in arg ah[1649367]:int(64)[10], const in arg _ln[9368463]:int(64)[10], in arg _fn[9368465]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1649371]:int(64)[10] "dead after last mention" "RVV" "temp"
    val ret[7745987]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7745989 'move' ret[7745987](7745991 '.v' this[1649341] _high[1610006]))
    val ret[7743292]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7743294 'move' ret[7743292](7743296 '.v' this[1649341] _low[1610001]))
    if(7315097 '>' ret[7743292] ret[7745987])
    {
      (1649427 'move' ret[1649371] 0)
      gotoReturn _end_sizeAsHelp[1649764] _end_sizeAsHelp[1649764]
    }
    const-val call_tmp[7498922]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498924 'move' call_tmp[7498922](7498926 '-'(1649495 'cast' uint(64)[86] ret[7745987] _ln[9368463] _fn[9368465])(1649510 'cast' uint(64)[86] ret[7743292] _ln[9368463] _fn[9368465])))
    val tmp[7508848]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7508846 'u!'(7508839 '<' 0 0))
    {
      (7508866 'move' tmp[7508848](7508863 '==' 1(7508856 'cast' uint(64)[86] 0 _ln[9368463] _fn[9368465])))
    }
    {
      (7508870 'move' tmp[7508848] 0)
    }
    if tmp[7508848]
    {
      (7508877 call halt[88131] "Attempt to divide by zero" _ln[9368463] _fn[9368465])
    }
    const-val call_tmp[7508880]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7508882 'move' call_tmp[7508880](7508884 '/' call_tmp[7498922] 1))
    const-val call_tmp[7637419]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7637421 'move' call_tmp[7637419](7637423 '+' call_tmp[7508880] 1))
    val tmp[7507378]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7507376 'u!'(7507369 '<' 0 0))
    {
      (7507396 'move' tmp[7507378](7507393 '==' call_tmp[7637419](7507386 'cast' uint(64)[86] 0 _ln[9368463] _fn[9368465])))
    }
    {
      (7507400 'move' tmp[7507378] 0)
    }
    val tmp[1649611]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7507378]
    {
      (1649629 'move' tmp[1649611] 1)
    }
    {
      val tmp[7521638]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(7521635 '<' 9223372036854775807 0)
      {
        (7521642 'move' tmp[7521638] 1)
      }
      {
        (7521660 'move' tmp[7521638](7521657 '>' call_tmp[7637419](7521650 'cast' uint(64)[86] 9223372036854775807 _ln[9368463] _fn[9368465])))
      }
      (1649657 'move' tmp[1649611] tmp[7521638])
    }
    if tmp[1649611]
    {
      const-val call_tmp[1649717]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5549214]:string[244] "temp"
      (1649722 call :[1631991] this[1649341] ret_tmp[5549214] _ln[9368463] _fn[9368465])
      (5549217 'move' call_tmp[1649717] ret_tmp[5549214])
      const-val call_tmp[1649725]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539368]:string[244] "temp"
      (1649730 call +[28065] "range.size exceeds max(int(64)) for: '" call_tmp[1649717] ret_tmp[5539368] _ln[9368463] _fn[9368465])
      (5539371 'move' call_tmp[1649725] ret_tmp[5539368])
      const-val call_tmp[1649733]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539374]:string[244] "temp"
      (1649738 call +[28065] call_tmp[1649725] "'" ret_tmp[5539374] _ln[9368463] _fn[9368465])
      (5539377 'move' call_tmp[1649733] ret_tmp[5539374])
      (1649742 call boundsCheckHalt[404] call_tmp[1649733] _ln[9368463] _fn[9368465])
      ref i_x[7336678]:string[244] "temp"
      (7336682 'move' i_x[7336678](7336680 'set reference' call_tmp[1649733]))
      (7336686 call deinit[21354] i_x[7336678] _ln[9368463] _fn[9368465])
      ref i_x[7336690]:string[244] "temp"
      (7336694 'move' i_x[7336690](7336692 'set reference' call_tmp[1649725]))
      (7336698 call deinit[21354] i_x[7336690] _ln[9368463] _fn[9368465])
      ref i_x[7336702]:string[244] "temp"
      (7336706 'move' i_x[7336702](7336704 'set reference' call_tmp[1649717]))
      (7336710 call deinit[21354] i_x[7336702] _ln[9368463] _fn[9368465])
    }
    (1650005 '=' ret[1649371](7443592 'cast' int(64)[10] call_tmp[7637419] _ln[9368463] _fn[9368465]))
    label _end_sizeAsHelp[1649764]
    (1649766 return ret[1649371])
  }
  function ==[1639102](const in arg r1[1639104]:range(int(64),both,one)[1610039], const in arg r2[1639106]:range(int(64),both,one)[1610039], const in arg _ln[9368447]:int(64)[10], in arg _fn[9368449]:int(32)[66]) : bool[19] "instantiated generic" "invisible fn" "operator" "resolved"
  {
    val ret[1639131]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1639256]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (1639258 'move' call_tmp[1639256](1639264 call sizeAs[1630327] r1[1639104] _ln[9368447] _fn[9368449]))
    const-val call_tmp[1639271]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (1639273 'move' call_tmp[1639271](1639279 call sizeAs[1630327] r2[1639106] _ln[9368447] _fn[9368449]))
    if(7496896 '!=' call_tmp[1639256] call_tmp[1639271])
    {
      (1639304 'move' ret[1639131] 0)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    val tmp[7507284]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7507282 'u!'(7507275 '<' 0 0))
    {
      (7507302 'move' tmp[7507284](7507299 '==' call_tmp[1639256](7507292 'cast' uint(64)[86] 0 _ln[9368447] _fn[9368449])))
    }
    {
      (7507306 'move' tmp[7507284] 0)
    }
    if tmp[7507284]
    {
      (1639329 'move' ret[1639131] 1)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    if(7495676 '!='(7799552 '.v' r1[1639104] _low[1610001])(7799562 '.v' r2[1639106] _low[1610001]))
    {
      (1639370 'move' ret[1639131] 0)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    val tmp[7507331]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7507329 'u!'(7507322 '<' 1 0))
    {
      (7507349 'move' tmp[7507331](7507346 '==' call_tmp[1639256](7507339 'cast' uint(64)[86] 1 _ln[9368447] _fn[9368449])))
    }
    {
      (7507353 'move' tmp[7507331] 0)
    }
    if tmp[7507331]
    {
      (1639395 'move' ret[1639131] 1)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    (1639444 'move' ret[1639131] 1)
    label _end_==[1639621]
    (1639623 return ret[1639131])
  }
  function !=[4369284](const in arg r1[4369286]:range(int(64),both,one)[1610039], const in arg r2[4369288]:range(int(64),both,one)[1610039], const in arg _ln[9492523]:int(64)[10], in arg _fn[9492525]:int(32)[66]) : bool[19] "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val call_tmp[4369684]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4369686 'move' call_tmp[4369684](4369689 call ==[1639102] r1[4369286] r2[4369288] _ln[9492523] _fn[9492525]))
    const-val call_tmp[7352354]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7352356 'move' call_tmp[7352354](7352358 'u!' call_tmp[4369684]))
    (4369703 return call_tmp[7352354])
  }
  function :[1661372](const in arg r[1661374]:range(byteIndex,both,one)[1655317], ref arg _retArg[5550123]:range(int(64),both,one)[1610039], const in arg _ln[9368561]:int(64)[10], in arg _fn[9368563]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    (1661648 call checkBounds[1662128] r[1661374])
    (1661653 call checkEnumIdx[1662223] r[1661374])
    const-val initTemp[1662470]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1662473 call init[1662481] initTemp[1662470])
    val tmp[1661691]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1661693 'move' tmp[1661691] initTemp[1662470])
    const-val call_tmp[1661745]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7804861]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7804863 'move' coerce_tmp[7804861](7804865 '.v' r[1661374] _low[1655279]))
    val cpi[7804870]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7804873 call init[18499] cpi[7804870])
    (7804875 '.=' cpi[7804870] _bindex[18495] coerce_tmp[7804861])
    (5550018 'move' call_tmp[1661745] cpi[7804870])
    (9198820 '.=' tmp[1661691] _low[1610001](7362361 '.v' call_tmp[1661745] _bindex[18495]))
    const-val call_tmp[1661839]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7805631]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7805633 'move' coerce_tmp[7805631](7805635 '.v' r[1661374] _high[1655284]))
    val cpi[7805640]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7805643 call init[18499] cpi[7805640])
    (7805645 '.=' cpi[7805640] _bindex[18495] coerce_tmp[7805631])
    (5550102 'move' call_tmp[1661839] cpi[7805640])
    (9198829 '.=' tmp[1661691] _high[1610006](7362377 '.v' call_tmp[1661839] _bindex[18495]))
    const-val call_tmp[1661920]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550129]:owned IllegalArgumentError?[1471812] "temp"
    (1661928 call chpl_checkStrides[1662840] r[1661374] ret_tmp[5550129] _ln[9368561] _fn[9368563])
    (5550132 'move' call_tmp[1661920] ret_tmp[5550129])
    ref i_arg[7322887]:owned IllegalArgumentError?[1471812] "temp"
    (7322891 'move' i_arg[7322887](7322889 'set reference' call_tmp[1661920]))
    val call_tmp[7322896]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7322898 'move' call_tmp[7322896](7322901 call borrow[1479886] i_arg[7322887]))
    if(7334448 '!='(7334441 'cast' RootClass[236] call_tmp[7322896] _ln[9368561] _fn[9368563]) nil[32])
    {
      const-val call_tmp[1661955]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1663995]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1664001 'move' coerce_tmp[1663995](1663997 'cast' Error[85511] call_tmp[7322896] _ln[9368561] _fn[9368563]))
      (9316480 '_check_nil' coerce_tmp[1663995] _ln[9368561] _fn[9368563])
      val ret_tmp[5541555]:string[244] "temp"
      (1661963 'virtual method call' message[85497](5469284 'getcid' coerce_tmp[1663995]) coerce_tmp[1663995] ret_tmp[5541555] _ln[9368561] _fn[9368563])
      (5541558 'move' call_tmp[1661955] ret_tmp[5541555])
      (1661965 call boundsCheckHalt[404] call_tmp[1661955] _ln[9368561] _fn[9368563])
      ref i_x[7336858]:string[244] "temp"
      (7336862 'move' i_x[7336858](7336860 'set reference' call_tmp[1661955]))
      (7336866 call deinit[21354] i_x[7336858] _ln[9368561] _fn[9368563])
    }
    (5612136 call chpl__autoDestroy[3929258] call_tmp[1661920] _ln[9368561] _fn[9368563])
    (5550125 '=' _retArg[5550123] tmp[1661691])
    (5550127 return _void[46])
  }
  function :[1702383](const in arg r[1702385]:range(byteIndex,low,one)[1698271], ref arg _retArg[5550561]:range(int(64),low,one)[1576928], const in arg _ln[9368697]:int(64)[10], in arg _fn[9368699]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    (1702500 call checkBounds[1702980] r[1702385])
    (1702505 call checkEnumIdx[1703075] r[1702385])
    const-val initTemp[1703322]:range(int(64),low,one)[1576928] "dead at end of block" "delay instantiation" "temp"
    (1703325 call init[1703333] initTemp[1703322])
    val tmp[1702543]:range(int(64),low,one)[1576928] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1702545 'move' tmp[1702543] initTemp[1703322])
    const-val call_tmp[1702597]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7807588]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7807590 'move' coerce_tmp[7807588](7807592 '.v' r[1702385] _low[1698233]))
    val cpi[7807597]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7807600 call init[18499] cpi[7807597])
    (7807602 '.=' cpi[7807597] _bindex[18495] coerce_tmp[7807588])
    (5550522 'move' call_tmp[1702597] cpi[7807597])
    (9199351 '.=' tmp[1702543] _low[1576890](7362425 '.v' call_tmp[1702597] _bindex[18495]))
    (9199371 '.=' tmp[1702543] _high[1576895](9199364 '.v' r[1702385] _high[1698238]))
    const-val call_tmp[1702772]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550567]:owned IllegalArgumentError?[1471812] "temp"
    (1702780 call chpl_checkStrides[1704454] r[1702385] ret_tmp[5550567] _ln[9368697] _fn[9368699])
    (5550570 'move' call_tmp[1702772] ret_tmp[5550567])
    ref i_arg[7322910]:owned IllegalArgumentError?[1471812] "temp"
    (7322914 'move' i_arg[7322910](7322912 'set reference' call_tmp[1702772]))
    val call_tmp[7322919]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7322921 'move' call_tmp[7322919](7322924 call borrow[1479886] i_arg[7322910]))
    if(7334472 '!='(7334465 'cast' RootClass[236] call_tmp[7322919] _ln[9368697] _fn[9368699]) nil[32])
    {
      const-val call_tmp[1702807]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1705247]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1705253 'move' coerce_tmp[1705247](1705249 'cast' Error[85511] call_tmp[7322919] _ln[9368697] _fn[9368699]))
      (9316482 '_check_nil' coerce_tmp[1705247] _ln[9368697] _fn[9368699])
      val ret_tmp[5541561]:string[244] "temp"
      (1702815 'virtual method call' message[85497](5469291 'getcid' coerce_tmp[1705247]) coerce_tmp[1705247] ret_tmp[5541561] _ln[9368697] _fn[9368699])
      (5541564 'move' call_tmp[1702807] ret_tmp[5541561])
      (1702817 call boundsCheckHalt[404] call_tmp[1702807] _ln[9368697] _fn[9368699])
      ref i_x[7337230]:string[244] "temp"
      (7337234 'move' i_x[7337230](7337232 'set reference' call_tmp[1702807]))
      (7337238 call deinit[21354] i_x[7337230] _ln[9368697] _fn[9368699])
    }
    (5612523 call chpl__autoDestroy[3929258] call_tmp[1702772] _ln[9368697] _fn[9368699])
    (5550563 '=' _retArg[5550561] tmp[1702543])
    (5550565 return _void[46])
  }
  function :[1731022](const in arg r[1731024]:range(byteIndex,high,one)[1726799], ref arg _retArg[5551335]:range(int(64),high,one)[1730829], const in arg _ln[9368809]:int(64)[10], in arg _fn[9368811]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    (1731191 call checkBounds[1731671] r[1731024])
    (1731196 call checkEnumIdx[1732024] r[1731024])
    const-val initTemp[1732324]:range(int(64),high,one)[1730829] "dead at end of block" "delay instantiation" "temp"
    (1732327 call init[1732335] initTemp[1732324])
    val tmp[1731234]:range(int(64),high,one)[1730829] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1731236 'move' tmp[1731234] initTemp[1732324])
    (9199585 '.=' tmp[1731234] _low[1730791](9199578 '.v' r[1731024] _low[1726761]))
    const-val call_tmp[1731382]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7810459]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7810461 'move' coerce_tmp[7810459](7810463 '.v' r[1731024] _high[1726766]))
    val cpi[7810468]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7810471 call init[18499] cpi[7810468])
    (7810473 '.=' cpi[7810468] _bindex[18495] coerce_tmp[7810459])
    (5551302 'move' call_tmp[1731382] cpi[7810468])
    (9199594 '.=' tmp[1731234] _high[1730796](7362483 '.v' call_tmp[1731382] _bindex[18495]))
    const-val call_tmp[1731463]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5551341]:owned IllegalArgumentError?[1471812] "temp"
    (1731471 call chpl_checkStrides[1733727] r[1731024] ret_tmp[5551341] _ln[9368809] _fn[9368811])
    (5551344 'move' call_tmp[1731463] ret_tmp[5551341])
    ref i_arg[7322933]:owned IllegalArgumentError?[1471812] "temp"
    (7322937 'move' i_arg[7322933](7322935 'set reference' call_tmp[1731463]))
    val call_tmp[7322942]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7322944 'move' call_tmp[7322942](7322947 call borrow[1479886] i_arg[7322933]))
    if(7334496 '!='(7334489 'cast' RootClass[236] call_tmp[7322942] _ln[9368809] _fn[9368811]) nil[32])
    {
      const-val call_tmp[1731498]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1734520]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1734526 'move' coerce_tmp[1734520](1734522 'cast' Error[85511] call_tmp[7322942] _ln[9368809] _fn[9368811]))
      (9316484 '_check_nil' coerce_tmp[1734520] _ln[9368809] _fn[9368811])
      val ret_tmp[5541567]:string[244] "temp"
      (1731506 'virtual method call' message[85497](5469298 'getcid' coerce_tmp[1734520]) coerce_tmp[1734520] ret_tmp[5541567] _ln[9368809] _fn[9368811])
      (5541570 'move' call_tmp[1731498] ret_tmp[5541567])
      (1731508 call boundsCheckHalt[404] call_tmp[1731498] _ln[9368809] _fn[9368811])
      ref i_x[7337470]:string[244] "temp"
      (7337474 'move' i_x[7337470](7337472 'set reference' call_tmp[1731498]))
      (7337478 call deinit[21354] i_x[7337470] _ln[9368809] _fn[9368811])
    }
    (5612733 call chpl__autoDestroy[3929258] call_tmp[1731463] _ln[9368809] _fn[9368811])
    (5551337 '=' _retArg[5551335] tmp[1731234])
    (5551339 return _void[46])
  }
  function checkBounds[1662128](const in arg from[1662132]:range(byteIndex,both,one)[1655317]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1662212 return _void[46])
  }
  function checkBounds[1702980](const in arg from[1702984]:range(byteIndex,low,one)[1698271]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1703064 return _void[46])
  }
  function checkBounds[1731671](const in arg from[1731675]:range(byteIndex,high,one)[1726799]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1731755 return _void[46])
  }
  function checkEnumIdx[1662223](const in arg from[1662227]:range(byteIndex,both,one)[1655317]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1662447 return _void[46])
  }
  function checkEnumIdx[1703075](const in arg from[1703079]:range(byteIndex,low,one)[1698271]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1703299 return _void[46])
  }
  function checkEnumIdx[1732024](const in arg from[1732028]:range(byteIndex,high,one)[1726799]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1732248 return _void[46])
  }
  function range(byteIndex,both,one)[1655317].chpl_checkStrides[1662840](const in arg this[1662846]:range(byteIndex,both,one)[1655317], ref arg _retArg[5550135]:owned IllegalArgumentError?[1471812], const in arg _ln[9499323]:int(64)[10], in arg _fn[9499325]:int(32)[66]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "resolved"
  {
    val ret[1662854]:owned IllegalArgumentError?[1471812] "dead after last mention" "RVV" "temp"
    (9276512 'noop')
    {
      (1663982 call init=[1479108] ret[1662854] nil[32] _ln[9499323] _fn[9499325])
      gotoReturn _end_chpl_checkStrides[1663250] _end_chpl_checkStrides[1663250]
    }
    label _end_chpl_checkStrides[1663250]
    (5550137 '=' _retArg[5550135] ret[1662854])
    (5550139 return _void[46])
  }
  function range(byteIndex,low,one)[1698271].chpl_checkStrides[1704454](const in arg this[1704460]:range(byteIndex,low,one)[1698271], ref arg _retArg[5550573]:owned IllegalArgumentError?[1471812], const in arg _ln[9499315]:int(64)[10], in arg _fn[9499317]:int(32)[66]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "resolved"
  {
    val ret[1704468]:owned IllegalArgumentError?[1471812] "dead after last mention" "RVV" "temp"
    (9276514 'noop')
    {
      (1705234 call init=[1479108] ret[1704468] nil[32] _ln[9499315] _fn[9499317])
      gotoReturn _end_chpl_checkStrides[1704864] _end_chpl_checkStrides[1704864]
    }
    label _end_chpl_checkStrides[1704864]
    (5550575 '=' _retArg[5550573] ret[1704468])
    (5550577 return _void[46])
  }
  function range(byteIndex,high,one)[1726799].chpl_checkStrides[1733727](const in arg this[1733733]:range(byteIndex,high,one)[1726799], ref arg _retArg[5551347]:owned IllegalArgumentError?[1471812], const in arg _ln[9499307]:int(64)[10], in arg _fn[9499309]:int(32)[66]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "resolved"
  {
    val ret[1733741]:owned IllegalArgumentError?[1471812] "dead after last mention" "RVV" "temp"
    (9276515 'noop')
    {
      (1734507 call init=[1479108] ret[1733741] nil[32] _ln[9499307] _fn[9499309])
      gotoReturn _end_chpl_checkStrides[1734137] _end_chpl_checkStrides[1734137]
    }
    label _end_chpl_checkStrides[1734137]
    (5551349 '=' _retArg[5551347] ret[1733741])
    (5551351 return _void[46])
  }
  function range(int(64),both,one)[1610039].orderToIndex[1719284](const in arg this[1719290]:range(int(64),both,one)[1610039], const in arg ord[1719292]:int(64)[10], const in arg _ln[9368715]:int(64)[10], in arg _fn[9368717]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "method" "resolved" "@unstable"
  {
    val tmp[7810180]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7810177 '>'(7810163 '.v' this[1719290] _low[1610001])(7810170 '.v' this[1719290] _high[1610006]))
    {
      (7810184 'move' tmp[7810180] 0)
    }
    {
      (7810188 'move' tmp[7810180] 1)
    }
    if(7349964 'u!' tmp[7810180])
    {
      (1719348 call boundsCheckHalt[404] "invoking orderToIndex on a range that has no first index" _ln[9368715] _fn[9368717])
    }
    if(7319512 '<' ord[1719292] 0)
    {
      const-val call_tmp[1719405]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546419]:string[244] "temp"
      (1719410 call :[1496816] ord[1719292] ret_tmp[5546419] _ln[9368715] _fn[9368717])
      (5546422 'move' call_tmp[1719405] ret_tmp[5546419])
      const-val call_tmp[1719413]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539452]:string[244] "temp"
      (1719418 call +[28065] "invoking orderToIndex on a negative integer: " call_tmp[1719405] ret_tmp[5539452] _ln[9368715] _fn[9368717])
      (5539455 'move' call_tmp[1719413] ret_tmp[5539452])
      (1719422 call boundsCheckHalt[404] call_tmp[1719413] _ln[9368715] _fn[9368717])
      ref i_x[7337302]:string[244] "temp"
      (7337306 'move' i_x[7337302](7337304 'set reference' call_tmp[1719413]))
      (7337310 call deinit[21354] i_x[7337302] _ln[9368715] _fn[9368717])
      ref i_x[7337314]:string[244] "temp"
      (7337318 'move' i_x[7337314](7337316 'set reference' call_tmp[1719405]))
      (7337322 call deinit[21354] i_x[7337314] _ln[9368715] _fn[9368717])
    }
    const-val call_tmp[1719476]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1719478 'move' call_tmp[1719476](1719484 call sizeAs[1630327] this[1719290] _ln[9368715] _fn[9368717]))
    val tmp[7522459]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7522457 'u!'(7522450 '<' ord[1719292] 0))
    {
      (7522477 'move' tmp[7522459](7522474 '>='(7522467 'cast' uint(64)[86] ord[1719292] _ln[9368715] _fn[9368717]) call_tmp[1719476]))
    }
    {
      (7522481 'move' tmp[7522459] 0)
    }
    if tmp[7522459]
    {
      const-val call_tmp[1719522]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546425]:string[244] "temp"
      (1719527 call :[1496816] ord[1719292] ret_tmp[5546425] _ln[9368715] _fn[9368717])
      (5546428 'move' call_tmp[1719522] ret_tmp[5546425])
      const-val call_tmp[1719530]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539458]:string[244] "temp"
      (1719535 call +[28065] "invoking orderToIndex on an integer " call_tmp[1719522] ret_tmp[5539458] _ln[9368715] _fn[9368717])
      (5539461 'move' call_tmp[1719530] ret_tmp[5539458])
      const-val call_tmp[1719538]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539464]:string[244] "temp"
      (1719543 call +[28065] call_tmp[1719530] " that is larger than the range's number of indices " ret_tmp[5539464] _ln[9368715] _fn[9368717])
      (5539467 'move' call_tmp[1719538] ret_tmp[5539464])
      const-val call_tmp[1719546]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (1719548 'move' call_tmp[1719546](1719554 call sizeAs[1630327] this[1719290] _ln[9368715] _fn[9368717]))
      const-val call_tmp[1719556]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5551152]:string[244] "temp"
      (1719561 call :[1721023] call_tmp[1719546] ret_tmp[5551152] _ln[9368715] _fn[9368717])
      (5551155 'move' call_tmp[1719556] ret_tmp[5551152])
      const-val call_tmp[1719564]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539470]:string[244] "temp"
      (1719569 call +[28065] call_tmp[1719538] call_tmp[1719556] ret_tmp[5539470] _ln[9368715] _fn[9368717])
      (5539473 'move' call_tmp[1719564] ret_tmp[5539470])
      (1719573 call boundsCheckHalt[404] call_tmp[1719564] _ln[9368715] _fn[9368717])
      ref i_x[7337326]:string[244] "temp"
      (7337330 'move' i_x[7337326](7337328 'set reference' call_tmp[1719564]))
      (7337334 call deinit[21354] i_x[7337326] _ln[9368715] _fn[9368717])
      ref i_x[7337338]:string[244] "temp"
      (7337342 'move' i_x[7337338](7337340 'set reference' call_tmp[1719556]))
      (7337346 call deinit[21354] i_x[7337338] _ln[9368715] _fn[9368717])
      ref i_x[7337350]:string[244] "temp"
      (7337354 'move' i_x[7337350](7337352 'set reference' call_tmp[1719538]))
      (7337358 call deinit[21354] i_x[7337350] _ln[9368715] _fn[9368717])
      ref i_x[7337362]:string[244] "temp"
      (7337366 'move' i_x[7337362](7337364 'set reference' call_tmp[1719530]))
      (7337370 call deinit[21354] i_x[7337362] _ln[9368715] _fn[9368717])
      ref i_x[7337374]:string[244] "temp"
      (7337378 'move' i_x[7337374](7337376 'set reference' call_tmp[1719522]))
      (7337382 call deinit[21354] i_x[7337374] _ln[9368715] _fn[9368717])
    }
    const-val call_tmp[1719595]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1719597 'move' call_tmp[1719595](1719600 call chpl__addRangeStrides[1722025](7745908 '.v' this[1719290] _low[1610001]) 1 ord[1719292]))
    (1719627 return call_tmp[1719595])
  }
  function chpl_by_help[3461277](const in arg r[3461279]:range(int(64),both,one)[1610039], const in arg step[3461281]:int(64)[10], ref arg _retArg[5590470]:range(int(64),both,any)[3464570], const in arg _ln[9508699]:int(64)[10], in arg _fn[9508701]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[3461285]:range(int(64),both,any)[3464570] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[3461951]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3461955 'move' coerce_tmp[3461951](9223115 '.v' r[3461279] _low[1610001]))
    (3461307 'noop')
    const-val coerce_tmp[3461962]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3461966 'move' coerce_tmp[3461962](9223122 '.v' r[3461279] _high[1610006]))
    (3461320 'noop')
    const-val call_tmp[7975825]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7975827 'move' call_tmp[7975825](7975829 '*' 1 step[3461281]))
    (3461378 call compilerAssert[1518488])
    if(8486444 '>' call_tmp[7975825] 0)
    {
      const-val initTemp[3462571]:range(int(64),both,any)[3464570] "dead after last mention" "delay instantiation" "temp"
      (3462574 call init[3462587] initTemp[3462571] coerce_tmp[3461951] coerce_tmp[3461962] call_tmp[7975825](8486456 '.v' r[3461279] _low[1610001]) 1 _ln[9508699] _fn[9508701])
      (3461650 'move' ret[3461285] initTemp[3462571])
      gotoReturn _end_chpl_by_help[3461942] _end_chpl_by_help[3461942]
    }
    {
      const-val initTemp[3465402]:range(int(64),both,any)[3464570] "dead after last mention" "delay instantiation" "temp"
      (3465405 call init[3462587] initTemp[3465402] coerce_tmp[3461951] coerce_tmp[3461962] call_tmp[7975825](8486473 '.v' r[3461279] _high[1610006]) 1 _ln[9508699] _fn[9508701])
      (3461778 'move' ret[3461285] initTemp[3465402])
      gotoReturn _end_chpl_by_help[3461942] _end_chpl_by_help[3461942]
    }
    label _end_chpl_by_help[3461942]
    (5590472 '=' _retArg[5590470] ret[3461285])
    (5590474 return _void[46])
  }
  function range(int(64),both,one)[1610039].this[1633175](const in arg this[1633181]:range(int(64),both,one)[1610039], const in arg other[1633183]:range(int(64),both,one)[1610039], ref arg _retArg[5549703]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free"
  {
    (1633772 'noop')
    const-val coerce_tmp[1636551]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1636555 'move' coerce_tmp[1636551](9198719 '.v' this[1633181] _high[1610006]))
    (1633826 'noop')
    (1633901 'noop')
    const-val coerce_tmp[1636583]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1636587 'move' coerce_tmp[1636583](9198739 '.v' other[1633183] _high[1610006]))
    (1633955 'noop')
    val newlo[1634422]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1634424 'move' newlo[1634422](1634403 call myMax[1634344](9198709 '.v' this[1633181] _low[1610001])(9198729 '.v' other[1633183] _low[1610001])))
    val newhi[1634452]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1634454 'move' newhi[1634452](1634433 call myMin[1634168] coerce_tmp[1636551] coerce_tmp[1636583]))
    (9276511 'noop')
    (1634942 call compilerAssert[1518488])
    const-val call_tmp[1635002]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1638147]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1638150 call init[1638161] initTemp[1638147] newlo[1634422] newhi[1634452] 1 0)
    (1635004 'move' call_tmp[1635002] initTemp[1638147])
    (5549705 '=' _retArg[5549703] call_tmp[1635002])
    (5549707 return _void[46])
  }
  function range(int(64),low,one)[1576928].this[1692702](const in arg this[1692708]:range(int(64),low,one)[1576928], const in arg other[1692710]:range(int(64),both,one)[1610039], ref arg _retArg[5550441]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free"
  {
    (1693299 'noop')
    const-val coerce_tmp[1696080]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1696084 'move' coerce_tmp[1696080](9199241 '.v' other[1692710] _high[1610006]))
    (1693353 'noop')
    (1693428 'noop')
    const-val coerce_tmp[1696112]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1696116 'move' coerce_tmp[1696112](9199261 '.v' other[1692710] _high[1610006]))
    (1693482 'noop')
    val newlo[1693949]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1693951 'move' newlo[1693949](1693930 call myMax[1693871](9199231 '.v' this[1692708] _low[1576890])(9199251 '.v' other[1692710] _low[1610001])))
    val newhi[1693979]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1693981 'move' newhi[1693979](1693960 call myMin[1693695] coerce_tmp[1696080] coerce_tmp[1696112]))
    (9276513 'noop')
    (1694469 call compilerAssert[1518488])
    const-val call_tmp[1694529]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1696247]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1696250 call init[1638161] initTemp[1696247] newlo[1693949] newhi[1693979] 1 0)
    (1694531 'move' call_tmp[1694529] initTemp[1696247])
    (5550443 '=' _retArg[5550441] call_tmp[1694529])
    (5550445 return _void[46])
  }
  function range(int(64),high,one)[1730829].this[1744685](const in arg this[1744691]:range(int(64),high,one)[1730829], const in arg other[1744693]:range(int(64),both,one)[1610039], ref arg _retArg[5551434]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "resolved" "fn synchronization free"
  {
    (1745282 'noop')
    const-val coerce_tmp[1748063]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1748067 'move' coerce_tmp[1748063](9199687 '.v' this[1744691] _high[1730796]))
    (1745336 'noop')
    (1745411 'noop')
    const-val coerce_tmp[1748302]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1748306 'move' coerce_tmp[1748302](9199707 '.v' other[1744693] _high[1610006]))
    (1745465 'noop')
    val newlo[1745932]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1745934 'move' newlo[1745932](1745913 call myMax[1745854](9199677 '.v' other[1744693] _low[1610001])(9199697 '.v' other[1744693] _low[1610001])))
    val newhi[1745962]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1745964 'move' newhi[1745962](1745943 call myMin[1745678] coerce_tmp[1748063] coerce_tmp[1748302]))
    (9276516 'noop')
    (1746452 call compilerAssert[1518488])
    const-val call_tmp[1746512]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1748437]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1748440 call init[1638161] initTemp[1748437] newlo[1745932] newhi[1745962] 1 0)
    (1746514 'move' call_tmp[1746512] initTemp[1748437])
    (5551436 '=' _retArg[5551434] call_tmp[1746512])
    (5551438 return _void[46])
  }
  function chpl_count_help[1714296](const in arg r[1714298]:range(int(64),low,one)[1576928], const in arg count[1714300]:int(64)[10], ref arg _retArg[5551146]:range(int(64),both,one)[1610039], const in arg _ln[9510507]:int(64)[10], in arg _fn[9510509]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1714302]:range(int(64),both,one)[1610039] "dead after last mention" "RVV" "temp"
    if(7379603 '==' count[1714300] 0)
    {
      const-val call_tmp[1714563]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1714565 'move' call_tmp[1714563](1714568 call absSameType[1716263] r[1714298]))
      const-val initTemp[1716466]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
      (1716469 call init[1716487] initTemp[1716466](9199447 '.v' r[1714298] _low[1576890])(9530185 'cast' int(64)[10](7377714 '-'(9199454 '.v' r[1714298] _low[1576890]) call_tmp[1714563])) 1)
      (1714615 'move' ret[1714302] initTemp[1716466])
      gotoReturn _end_chpl_count_help[1716232] _end_chpl_count_help[1716232]
    }
    val tmp[1714858]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7315162 '>' count[1714300] 0)
    {
      (1714899 'move' tmp[1714858] 0)
    }
    {
      (1714905 'move' tmp[1714858] 0)
    }
    if tmp[1714858]
    {
      (1714921 call boundsCheckHalt[404] "With a positive count, the range must have a first index." _ln[9510507] _fn[9510509])
    }
    val tmp[1714945]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7319442 '<' count[1714300] 0)
    {
      (1714986 'move' tmp[1714945] 1)
    }
    {
      (1714992 'move' tmp[1714945] 0)
    }
    if tmp[1714945]
    {
      (1715008 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9510507] _fn[9510509])
    }
    const-val call_tmp[7807755]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7807757 'move' call_tmp[7807755](7807759 '*' count[1714300] 1))
    val tmp[1715766]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7315177 '>' call_tmp[7807755] 0)
    {
      (1719270 '=' tmp[1715766](9199461 '.v' r[1714298] _low[1576890]))
    }
    {
      (1715840 'move' tmp[1715766](1715836 call chpl__add[1718211](9199471 '.v' r[1714298] _high[1576895])(9530181 'cast' int(64)[10](7479374 '+' call_tmp[7807755] 1))))
    }
    val tmp[1715853]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7319497 '<' call_tmp[7807755] 0)
    {
      (1719274 '=' tmp[1715853](9199478 '.v' r[1714298] _high[1576895]))
    }
    {
      (1715927 'move' tmp[1715853](1715923 call chpl__add[1718211](9199488 '.v' r[1714298] _low[1576890])(9530183 'cast' int(64)[10](7444882 '-' call_tmp[7807755] 1))))
    }
    const-val initTemp[1719234]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1719237 call init[1629805] initTemp[1719234] tmp[1715766] tmp[1715853])
    (1716223 'move' ret[1714302] initTemp[1719234])
    label _end_chpl_count_help[1716232]
    (5551148 '=' _retArg[5551146] ret[1714302])
    (5551150 return _void[46])
  }
  function chpl_count_help[1909396](const in arg r[1909398]:range(int(64),low,one)[1576928], const in arg count[1909400]:uint(32)[81], ref arg _retArg[5557298]:range(int(64),both,one)[1610039], const in arg _ln[9370375]:int(64)[10], in arg _fn[9370377]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1909402]:range(int(64),both,one)[1610039] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[1911351]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1911357 'move' coerce_tmp[1911351](1911353 'cast' int(32)[66] 0 _ln[9370375] _fn[9370377]))
    val tmp[7520569]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7520567 'u!'(7520560 '<' coerce_tmp[1911351] 0))
    {
      (7520587 'move' tmp[7520569](7520584 '==' count[1909400](7520577 'cast' uint(32)[81] coerce_tmp[1911351] _ln[9370375] _fn[9370377])))
    }
    {
      (7520591 'move' tmp[7520569] 0)
    }
    if tmp[7520569]
    {
      const-val call_tmp[1909663]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1909665 'move' call_tmp[1909663](1909668 call absSameType[1911871] r[1909398]))
      const-val initTemp[1911981]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
      (1911984 call init[1716487] initTemp[1911981](9200871 '.v' r[1909398] _low[1576890])(9530291 'cast' int(64)[10](7377764 '-'(9200878 '.v' r[1909398] _low[1576890]) call_tmp[1909663])) 1)
      (1909715 'move' ret[1909402] initTemp[1911981])
      gotoReturn _end_chpl_count_help[1911332] _end_chpl_count_help[1911332]
    }
    const-val coerce_tmp[1912019]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1912025 'move' coerce_tmp[1912019](1912021 'cast' int(32)[66] 0 _ln[9370375] _fn[9370377]))
    val tmp[7521597]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7521594 '<' coerce_tmp[1912019] 0)
    {
      (7521601 'move' tmp[7521597] 1)
    }
    {
      (7521619 'move' tmp[7521597](7521616 '>' count[1909400](7521609 'cast' uint(32)[81] coerce_tmp[1912019] _ln[9370375] _fn[9370377])))
    }
    val tmp[1909958]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7521597]
    {
      (1909999 'move' tmp[1909958] 0)
    }
    {
      (1910005 'move' tmp[1909958] 0)
    }
    if tmp[1909958]
    {
      (1910021 call boundsCheckHalt[404] "With a positive count, the range must have a first index." _ln[9370375] _fn[9370377])
    }
    const-val call_tmp[7807765]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7807767 'move' call_tmp[7807765](7807769 '*'(1910831 'cast' int(64)[10] count[1909400] _ln[9370375] _fn[9370377]) 1))
    val tmp[1910866]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7315387 '>' call_tmp[7807765] 0)
    {
      (1913566 '=' tmp[1910866](9200885 '.v' r[1909398] _low[1576890]))
    }
    {
      (1910940 'move' tmp[1910866](1910936 call chpl__add[1718211](9200895 '.v' r[1909398] _high[1576895])(9530287 'cast' int(64)[10](7479474 '+' call_tmp[7807765] 1))))
    }
    val tmp[1910953]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7319672 '<' call_tmp[7807765] 0)
    {
      (1913570 '=' tmp[1910953](9200902 '.v' r[1909398] _high[1576895]))
    }
    {
      (1911027 'move' tmp[1910953](1911023 call chpl__add[1718211](9200912 '.v' r[1909398] _low[1576890])(9530289 'cast' int(64)[10](7444982 '-' call_tmp[7807765] 1))))
    }
    const-val initTemp[1913530]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1913533 call init[1629805] initTemp[1913530] tmp[1910866] tmp[1910953])
    (1911323 'move' ret[1909402] initTemp[1913530])
    label _end_chpl_count_help[1911332]
    (5557300 '=' _retArg[5557298] ret[1909402])
    (5557302 return _void[46])
  }
  function #[1714265](const in arg r[1714267]:range(int(64),low,one)[1576928], const in arg count[1714269]:int(64)[10], ref arg _retArg[5551134]:range(int(64),both,one)[1610039], const in arg _ln[9510513]:int(64)[10], in arg _fn[9510515]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1714281]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5551140]:range(int(64),both,one)[1610039] "temp"
    (1714286 call chpl_count_help[1714296] r[1714267] count[1714269] ret_tmp[5551140] _ln[9510513] _fn[9510515])
    (5551143 'move' call_tmp[1714281] ret_tmp[5551140])
    (5551136 '=' _retArg[5551134] call_tmp[1714281])
    (5551138 return _void[46])
  }
  function #[1909365](const in arg r[1909367]:range(int(64),low,one)[1576928], const in arg count[1909369]:uint(32)[81], ref arg _retArg[5557286]:range(int(64),both,one)[1610039], const in arg _ln[9486795]:int(64)[10], in arg _fn[9486797]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val call_tmp[1909381]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557292]:range(int(64),both,one)[1610039] "temp"
    (1909386 call chpl_count_help[1909396] r[1909367] count[1909369] ret_tmp[5557292] _ln[9486795] _fn[9486797])
    (5557295 'move' call_tmp[1909381] ret_tmp[5557292])
    (5557288 '=' _retArg[5557286] call_tmp[1909381])
    (5557290 return _void[46])
  }
  function chpl_checkIfRangeIterWillOverflow[1518856](const in arg low[1518860]:int(64)[10], const in arg high[1518862]:int(64)[10], const in arg stride[1518864]:int(64)[10], const in arg first[1518870]:int(64)[10], const in arg last[1518876]:int(64)[10], const in arg shouldHalt[1518882]:bool[19], const in arg _ln[9511821]:int(64)[10], in arg _fn[9511823]:int(32)[66]) : bool[19] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1518884]:bool[19] "dead after last mention" "RVV" "temp"
    if(7315012 '>' low[1518860] high[1518862])
    {
      (1518915 'move' ret[1518884] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1519396] _end_chpl_checkIfRangeIterWillOverflow[1519396]
    }
    val willOverFlow[1518922]:bool[19] "dead at end of block" "insert auto destroy"
    (1518924 'move' willOverFlow[1518922] 0)
    val tmp[1518965]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7315027 '>' last[1518876] 0)
    {
      (1518998 'move' tmp[1518965](7315042 '>' stride[1518864] 0))
    }
    {
      (1519004 'move' tmp[1518965] 0)
    }
    if tmp[1518965]
    {
      if(7315052 '>' stride[1518864](9530085 'cast' int(64)[10](7641768 '-' 9223372036854775807 last[1518876])))
      {
        (7392283 '=' willOverFlow[1518922] 1)
      }
    }
    {
      val tmp[1519080]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(7319182 '<' last[1518876] 0)
      {
        (1519113 'move' tmp[1519080](7319197 '<' stride[1518864] 0))
      }
      {
        (1519119 'move' tmp[1519080] 0)
      }
      if tmp[1519080]
      {
        if(7319207 '<' stride[1518864](9530087 'cast' int(64)[10](7641738 '-' -9223372036854775808 last[1518876])))
        {
          (7392300 '=' willOverFlow[1518922] 1)
        }
      }
    }
    val tmp[1519334]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1518922]
    {
      (1519359 'move' tmp[1519334] shouldHalt[1518882])
    }
    {
      (1519365 'move' tmp[1519334] 0)
    }
    if tmp[1519334]
    {
      (1519383 call boundsCheckHalt[404] "Iteration over a bounded range may be incorrect due to overflow." _ln[9511821] _fn[9511823])
    }
    (1519388 'move' ret[1518884] willOverFlow[1518922])
    label _end_chpl_checkIfRangeIterWillOverflow[1519396]
    (1519398 return ret[1518884])
  }
  function range(int(64),both,one)[1610039].checkIfIterWillOverflow[1612304](const in arg this[1612310]:range(int(64),both,one)[1610039], const in arg shouldHalt[1612316]:bool[19], const in arg _ln[9512253]:int(64)[10], in arg _fn[9512255]:int(32)[66]) : bool[19] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1612405]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1612407 'move' call_tmp[1612405](1612410 call chpl_checkIfRangeIterWillOverflow[1518856](9198436 '.v' this[1612310] _low[1610001])(9198443 '.v' this[1612310] _high[1610006]) 1(7745920 '.v' this[1612310] _low[1610001])(7746061 '.v' this[1612310] _high[1610006]) shouldHalt[1612316] _ln[9512253] _fn[9512255]))
    (1612424 return call_tmp[1612405])
  }
  function range(int(64),both,any)[3464570].checkIfIterWillOverflow[3466948](const in arg this[3466954]:range(int(64),both,any)[3464570], const in arg shouldHalt[3466960]:bool[19], const in arg _ln[9508419]:int(64)[10], in arg _fn[9508421]:int(32)[66]) : bool[19] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    val ret[8489246]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8489248 'move' ret[8489246](8489250 '.v' this[3466954] _stride[3464542]))
    val tmp[8490379]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[8490381]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8490383 'move' call_tmp[8490381](8490386 call hasPositiveStride[3467799] this[3466954]))
    if call_tmp[8490381]
    {
      if(8490408 'u!'(8490401 '!='(8490394 '.v' this[3466954] _alignment[3464556]) -1))
      {
        (8490413 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range" _ln[9508419] _fn[9508421])
      }
      const-val coerce_tmp[8490423]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490425 'move' coerce_tmp[8490423](8490427 '.v' this[3466954] _low[3464532]))
      const-val call_tmp[8490437]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490439 'move' call_tmp[8490437](8490442 call chpl__diffMod[3468213](8490434 '.v' this[3466954] _alignment[3464556]) coerce_tmp[8490423](8490420 '.v' this[3466954] _stride[3464542]) _ln[9508419] _fn[9508421]))
      (8490453 'move' tmp[8490379](9532241 'cast' int(64)[10](8490450 '+' coerce_tmp[8490423] call_tmp[8490437])))
    }
    {
      if(8490475 'u!'(8490468 '!='(8490461 '.v' this[3466954] _alignment[3464556]) -1))
      {
        (8490480 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range" _ln[9508419] _fn[9508421])
      }
      const-val coerce_tmp[8490490]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490492 'move' coerce_tmp[8490490](8490494 '.v' this[3466954] _high[3464537]))
      const-val call_tmp[8490504]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490506 'move' call_tmp[8490504](8490509 call chpl__diffMod[3468213] coerce_tmp[8490490](8490501 '.v' this[3466954] _alignment[3464556])(8490487 '.v' this[3466954] _stride[3464542]) _ln[9508419] _fn[9508421]))
      (8490520 'move' tmp[8490379](9532243 'cast' int(64)[10](8490517 '-' coerce_tmp[8490490] call_tmp[8490504])))
    }
    val tmp[8494402]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[8494404]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8494406 'move' call_tmp[8494404](8494409 call hasPositiveStride[3467799] this[3466954]))
    if call_tmp[8494404]
    {
      if(8494431 'u!'(8494424 '!='(8494417 '.v' this[3466954] _alignment[3464556]) -1))
      {
        (8494436 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range" _ln[9508419] _fn[9508421])
      }
      const-val coerce_tmp[8494446]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494448 'move' coerce_tmp[8494446](8494450 '.v' this[3466954] _high[3464537]))
      const-val call_tmp[8494460]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494462 'move' call_tmp[8494460](8494465 call chpl__diffMod[3468213] coerce_tmp[8494446](8494457 '.v' this[3466954] _alignment[3464556])(8494443 '.v' this[3466954] _stride[3464542]) _ln[9508419] _fn[9508421]))
      (8494476 'move' tmp[8494402](9532245 'cast' int(64)[10](8494473 '-' coerce_tmp[8494446] call_tmp[8494460])))
    }
    {
      if(8494498 'u!'(8494491 '!='(8494484 '.v' this[3466954] _alignment[3464556]) -1))
      {
        (8494503 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range" _ln[9508419] _fn[9508421])
      }
      const-val coerce_tmp[8494513]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494515 'move' coerce_tmp[8494513](8494517 '.v' this[3466954] _low[3464532]))
      const-val call_tmp[8494527]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494529 'move' call_tmp[8494527](8494532 call chpl__diffMod[3468213](8494524 '.v' this[3466954] _alignment[3464556]) coerce_tmp[8494513](8494510 '.v' this[3466954] _stride[3464542]) _ln[9508419] _fn[9508421]))
      (8494543 'move' tmp[8494402](9532247 'cast' int(64)[10](8494540 '+' coerce_tmp[8494513] call_tmp[8494527])))
    }
    const-val call_tmp[3467049]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3467051 'move' call_tmp[3467049](3467054 call chpl_checkIfRangeIterWillOverflow[1518856](9223132 '.v' this[3466954] _low[3464532])(9223139 '.v' this[3466954] _high[3464537]) ret[8489246] tmp[8490379] tmp[8494402] shouldHalt[3466960] _ln[9508419] _fn[9508421]))
    (3467068 return call_tmp[3467049])
  }
  type _ic_chpl_direct_range_iter[1600114] val super[1600115]:RootClass[236] "super class" val more[1600117]:int(64)[10] const-val F0_low[6827421]:int(64)[10] const-val F1_high[6827425]:int(64)[10] val F2__iterator[6827429]:_ic_chpl_direct_param_stride_range_iter[1519526] val F3_i[6827431]:int(64)[10] const-val F4_low[6827433]:int(64)[10] val value[6827435]:int(64)[10]
  type _ic_chpl_direct_counted_range_iter[1520064] val super[1520065]:RootClass[236] "super class" val more[1520067]:int(64)[10] const-val F0_low[6832410]:int(64)[10] const-val F1_count[6832414]:int(64)[10] val F2__iterator[6832418]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F3__iterator[6832420]:_ic_chpl_direct_param_stride_range_iter[1519526] val F4_i[6832422]:int(64)[10] const-val F5_low[6832424]:int(64)[10] val value[6832426]:int(64)[10]
  type _ic_chpl_direct_counted_range_iter_helper[1519797] val super[1519798]:RootClass[236] "super class" val more[1519800]:int(64)[10] const-val F0_low[6834174]:int(64)[10] const-val F1_count[6834178]:int(64)[10] val F2__iterator[6834182]:_ic_chpl_direct_param_stride_range_iter[1519526] val F3_i[6834184]:int(64)[10] const-val F4_low[6834186]:int(64)[10] val value[6834188]:int(64)[10]
  type _ic_chpl_direct_param_stride_range_iter[1519526] val super[1519527]:RootClass[236] "super class" val more[1519529]:int(64)[10] const-val F0_low[6835591]:int(64)[10] const-val F1_high[6835595]:int(64)[10] val value[6835599]:int(64)[10]
  function _ic_these_range_int64_t_both_one[1615692].advance[1615718](const in arg this[1615720]:_ic_these_range_int64_t_both_one[1615692], const in arg _ln[9368179]:int(64)[10], in arg _fn[9368181]:int(32)[66]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[6836714]:int(64)[10]
    (9320718 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836742 'move' more[6836714](6836739 '.v' this[1615720] more[1615695]))
    if(6836721 '==' more[6836714] 2)
    {
      gotoIterResume _jump_2[6836706] _jump_2[6836706]
    }
    if(6836731 '==' more[6836714] -2)
    {
      gotoIterResume _jump_break_2[6836708] _jump_break_2[6836708]
    }
    const-val tmp[6836155]:range(int(64),both,one)[1610039] "temp"
    (9320686 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836160 'move' tmp[6836155](6836157 '.v' this[1615720] F0_this[6836143]))
    (1611920 call checkIfIterWillOverflow[1612304] tmp[6836155] 1 _ln[9368179] _fn[9368181])
    (9320688 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836164 '.=' this[1615720] F1_i[6836147] 0)
    const-val tmp[6836168]:range(int(64),both,one)[1610039] "temp"
    (9320690 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836173 'move' tmp[6836168](6836170 '.v' this[1615720] F0_this[6836143]))
    const-val coerce_tmp[7759150]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7759152 'move' coerce_tmp[7759150](7759154 '.v' tmp[6836168] _low[1610001]))
    (9320692 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836177 '.=' this[1615720] F3_call_tmp[6836151] coerce_tmp[7759150])
    const-val tmp[6836188]:range(int(64),both,one)[1610039] "temp"
    (9320694 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836193 'move' tmp[6836188](6836190 '.v' this[1615720] F0_this[6836143]))
    const-val coerce_tmp[7775529]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7775531 'move' coerce_tmp[7775529](7775533 '.v' tmp[6836188] _high[1610006]))
    (9320696 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836197 '.=' this[1615720] F2_end[6836149] coerce_tmp[7775529])
    CForLoop[1612001]
    {
      const-val tmp[6836214]:int(64)[10] "temp"
      (9320700 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
      (6836219 'move' tmp[6836214](6836216 '.v' this[1615720] F1_i[6836147]))
      (9320698 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
      (6836203 '.=' this[1615720] value[6836153] tmp[6836214])
      (9320714 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
      (6836700 '.=' this[1615720] more[1615695] 2)
      gotoIterEnd _end[6836698] _end[6836698]
      label _jump_break_2[6836708]
      gotoReturn _end_these[1612184] _end_these[1612184]
      label _jump_2[6836706]
      {
        const-val tmp[6836234]:int(64)[10] "temp"
        (9320704 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
        (6836239 'move' tmp[6836234](6836236 '.v' this[1615720] F3_call_tmp[6836151]))
        (9320702 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
        (6836230 '.=' this[1615720] F1_i[6836147] tmp[6836234])
      }
      {
        val tmp[6836241]:int(64)[10] "temp"
        (9320706 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
        (6836246 'move' tmp[6836241](6836243 '.v' this[1615720] F1_i[6836147]))
        (9320708 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
        (1612010 '<=' tmp[6836241](6836250 '.v' this[1615720] F2_end[6836149]))
      }
      {
        val tmp[6836255]:int(64)[10] "temp"
        (9320710 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
        (6836260 'move' tmp[6836255](6836257 '.v' this[1615720] F1_i[6836147]))
        (1612033 '+=' tmp[6836255] 1)
        (9320712 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
        (6836262 '.=' this[1615720] F1_i[6836147] tmp[6836255])
      }
    }
    label _end_these[1612184]
    (9320716 '_check_nil' this[1615720] _ln[9368179] _fn[9368181])
    (6836710 '.=' this[1615720] more[1615695] 0)
    label _end[6836698]
    (6836745 return _void[46])
  }
  type _ic_these_range_int64_t_both_one[1615692] val super[1615693]:RootClass[236] "super class" val more[1615695]:int(64)[10] const-val F0_this[6836143]:range(int(64),both,one)[1610039] val F1_i[6836147]:int(64)[10] const F2_end[6836149]:int(64)[10] val F3_call_tmp[6836151]:int(64)[10] val value[6836153]:int(64)[10]
  function :[1631991](const in arg x[1631993]:range(int(64),both,one)[1610039], ref arg _retArg[5549538]:string[244], const in arg _ln[9498433]:int(64)[10], in arg _fn[9498435]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1631997]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1632054]:string[244] "dead at end of block" "insert auto destroy"
    (1632594 call init[21321] ret[1632054] _ln[9498433] _fn[9498435])
    const-val call_tmp[1632086]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546365]:string[244] "temp"
    (1632091 call :[1496816](7748263 '.v' x[1631993] _low[1610001]) ret_tmp[5546365] _ln[9498433] _fn[9498435])
    (5546368 'move' call_tmp[1632086] ret_tmp[5546365])
    (1632095 call +=[28600] ret[1632054] call_tmp[1632086] _ln[9498433] _fn[9498435])
    ref i_x[7336606]:string[244] "temp"
    (7336610 'move' i_x[7336606](7336608 'set reference' call_tmp[1632086]))
    (7336614 call deinit[21354] i_x[7336606] _ln[9498433] _fn[9498435])
    (1632102 call +=[28600] ret[1632054] ".." _ln[9498433] _fn[9498435])
    const-val call_tmp[1632262]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546371]:string[244] "temp"
    (1632267 call :[1496816](7761814 '.v' x[1631993] _high[1610006]) ret_tmp[5546371] _ln[9498433] _fn[9498435])
    (5546374 'move' call_tmp[1632262] ret_tmp[5546371])
    (1632271 call +=[28600] ret[1632054] call_tmp[1632262] _ln[9498433] _fn[9498435])
    ref i_x[7336618]:string[244] "temp"
    (7336622 'move' i_x[7336618](7336620 'set reference' call_tmp[1632262]))
    (7336626 call deinit[21354] i_x[7336618] _ln[9498433] _fn[9498435])
    (1632527 'move' ret[1631997] ret[1632054])
    (5549540 '=' _retArg[5549538] ret[1631997])
    (5549542 return _void[46])
  }
  function :[1672374](const in arg x[1672376]:range(byteIndex,both,one)[1655317], ref arg _retArg[5550210]:string[244], const in arg _ln[9498653]:int(64)[10], in arg _fn[9498655]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1672380]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1672437]:string[244] "dead at end of block" "insert auto destroy"
    (1672995 call init[21321] ret[1672437] _ln[9498653] _fn[9498655])
    const-val call_tmp[1672461]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7804894]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7804896 'move' coerce_tmp[7804894](7804898 '.v' x[1672376] _low[1655279]))
    val cpi[7804903]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7804906 call init[18499] cpi[7804903])
    (7804908 '.=' cpi[7804903] _bindex[18495] coerce_tmp[7804894])
    (5550024 'move' call_tmp[1672461] cpi[7804903])
    const-val call_tmp[1672469]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538164]:string[244] "temp"
    (1672474 call :[18585] call_tmp[1672461] ret_tmp[5538164] _ln[9498653] _fn[9498655])
    (5538167 'move' call_tmp[1672469] ret_tmp[5538164])
    (1672478 call +=[28600] ret[1672437] call_tmp[1672469] _ln[9498653] _fn[9498655])
    ref i_x[7336918]:string[244] "temp"
    (7336922 'move' i_x[7336918](7336920 'set reference' call_tmp[1672469]))
    (7336926 call deinit[21354] i_x[7336918] _ln[9498653] _fn[9498655])
    (1672485 call +=[28600] ret[1672437] ".." _ln[9498653] _fn[9498655])
    const-val call_tmp[1672637]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7805671]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7805673 'move' coerce_tmp[7805671](7805675 '.v' x[1672376] _high[1655284]))
    val cpi[7805680]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7805683 call init[18499] cpi[7805680])
    (7805685 '.=' cpi[7805680] _bindex[18495] coerce_tmp[7805671])
    (5550108 'move' call_tmp[1672637] cpi[7805680])
    const-val call_tmp[1672645]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538170]:string[244] "temp"
    (1672650 call :[18585] call_tmp[1672637] ret_tmp[5538170] _ln[9498653] _fn[9498655])
    (5538173 'move' call_tmp[1672645] ret_tmp[5538170])
    (1672654 call +=[28600] ret[1672437] call_tmp[1672645] _ln[9498653] _fn[9498655])
    ref i_x[7336930]:string[244] "temp"
    (7336934 'move' i_x[7336930](7336932 'set reference' call_tmp[1672645]))
    (7336938 call deinit[21354] i_x[7336930] _ln[9498653] _fn[9498655])
    (1672910 'move' ret[1672380] ret[1672437])
    (5550212 '=' _retArg[5550210] ret[1672380])
    (5550214 return _void[46])
  }
  function :[1691857](const in arg x[1691859]:range(int(64),low,one)[1576928], ref arg _retArg[5550417]:string[244], const in arg _ln[9498343]:int(64)[10], in arg _fn[9498345]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1691863]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1691920]:string[244] "dead at end of block" "insert auto destroy"
    (1692549 call init[21321] ret[1691920] _ln[9498343] _fn[9498345])
    const-val call_tmp[1691952]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546407]:string[244] "temp"
    (1691957 call :[1496816](7807294 '.v' x[1691859] _low[1576890]) ret_tmp[5546407] _ln[9498343] _fn[9498345])
    (5546410 'move' call_tmp[1691952] ret_tmp[5546407])
    (1691961 call +=[28600] ret[1691920] call_tmp[1691952] _ln[9498343] _fn[9498345])
    ref i_x[7337038]:string[244] "temp"
    (7337042 'move' i_x[7337038](7337040 'set reference' call_tmp[1691952]))
    (7337046 call deinit[21354] i_x[7337038] _ln[9498343] _fn[9498345])
    (1691968 call +=[28600] ret[1691920] ".." _ln[9498343] _fn[9498345])
    (1692393 'move' ret[1691863] ret[1691920])
    (5550419 '=' _retArg[5550417] ret[1691863])
    (5550421 return _void[46])
  }
  function :[1713457](const in arg x[1713459]:range(byteIndex,low,one)[1698271], ref arg _retArg[5550648]:string[244], const in arg _ln[9498643]:int(64)[10], in arg _fn[9498645]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1713463]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1713520]:string[244] "dead at end of block" "insert auto destroy"
    (1714051 call init[21321] ret[1713520] _ln[9498643] _fn[9498645])
    const-val call_tmp[1713544]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7807621]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7807623 'move' coerce_tmp[7807621](7807625 '.v' x[1713459] _low[1698233]))
    val cpi[7807630]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7807633 call init[18499] cpi[7807630])
    (7807635 '.=' cpi[7807630] _bindex[18495] coerce_tmp[7807621])
    (5550528 'move' call_tmp[1713544] cpi[7807630])
    const-val call_tmp[1713552]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538182]:string[244] "temp"
    (1713557 call :[18585] call_tmp[1713544] ret_tmp[5538182] _ln[9498643] _fn[9498645])
    (5538185 'move' call_tmp[1713552] ret_tmp[5538182])
    (1713561 call +=[28600] ret[1713520] call_tmp[1713552] _ln[9498643] _fn[9498645])
    ref i_x[7337290]:string[244] "temp"
    (7337294 'move' i_x[7337290](7337292 'set reference' call_tmp[1713552]))
    (7337298 call deinit[21354] i_x[7337290] _ln[9498643] _fn[9498645])
    (1713568 call +=[28600] ret[1713520] ".." _ln[9498643] _fn[9498645])
    (1713993 'move' ret[1713463] ret[1713520])
    (5550650 '=' _retArg[5550648] ret[1713463])
    (5550652 return _void[46])
  }
  function :[1743926](const in arg x[1743928]:range(byteIndex,high,one)[1726799], ref arg _retArg[5551422]:string[244], const in arg _ln[9498633]:int(64)[10], in arg _fn[9498635]:int(32)[66]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1743932]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1743989]:string[244] "dead at end of block" "insert auto destroy"
    (1744532 call init[21321] ret[1743989] _ln[9498633] _fn[9498635])
    (1744037 call +=[28600] ret[1743989] ".." _ln[9498633] _fn[9498635])
    const-val call_tmp[1744189]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7810499]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7810501 'move' coerce_tmp[7810499](7810503 '.v' x[1743928] _high[1726766]))
    val cpi[7810508]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7810511 call init[18499] cpi[7810508])
    (7810513 '.=' cpi[7810508] _bindex[18495] coerce_tmp[7810499])
    (5551308 'move' call_tmp[1744189] cpi[7810508])
    const-val call_tmp[1744197]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538194]:string[244] "temp"
    (1744202 call :[18585] call_tmp[1744189] ret_tmp[5538194] _ln[9498633] _fn[9498635])
    (5538197 'move' call_tmp[1744197] ret_tmp[5538194])
    (1744206 call +=[28600] ret[1743989] call_tmp[1744197] _ln[9498633] _fn[9498635])
    ref i_x[7337530]:string[244] "temp"
    (7337534 'move' i_x[7337530](7337532 'set reference' call_tmp[1744197]))
    (7337538 call deinit[21354] i_x[7337530] _ln[9498633] _fn[9498635])
    (1744462 'move' ret[1743932] ret[1743989])
    (5551424 '=' _retArg[5551422] ret[1743932])
    (5551426 return _void[46])
  }
  function chpl__mod[3462785](const in arg dividend[3462787]:int(64)[10], const in arg modulus[3462789]:int(64)[10], const in arg _ln[9508479]:int(64)[10], in arg _fn[9508481]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[3462822]:int(64)[10] "dead after last mention" "RVV" "temp"
    val m[3463771]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3463773 'move' m[3463771] modulus[3462789])
    val tmp[3463860]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7320752 '<' modulus[3462789] 0)
    {
      (3463900 'move' tmp[3463860](7496366 '!=' modulus[3462789] -9223372036854775808))
    }
    {
      (3463906 'move' tmp[3463860] 0)
    }
    if tmp[3463860]
    {
      (7366955 '=' m[3463771](7627878 'u-' modulus[3462789]))
    }
    if(7509404 '==' m[3463771] 0)
    {
      (7509410 call halt[88131] "Attempt to compute a modulus by zero" _ln[9508479] _fn[9508481])
    }
    const-val call_tmp[7509413]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7509415 'move' call_tmp[7509413](7509417 '%' dividend[3462787] m[3463771]))
    val tmp[3463957]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3463959 'move' tmp[3463957] call_tmp[7509413])
    if(7320767 '<' call_tmp[7509413] 0)
    {
      ref i_lhs[7512769]:int(64)[10] "temp"
      (7512773 'move' i_lhs[7512769](7512771 'set reference' tmp[3463957]))
      (7512776 '+=' i_lhs[7512769] m[3463771])
    }
    (3464020 'move' ret[3462822] tmp[3463957])
    (3464030 return ret[3462822])
  }
  function chpl__diffMod[3468213](const in arg minuend[3468215]:int(64)[10], const in arg subtrahend[3468217]:int(64)[10], const in arg modulus[3468219]:int(64)[10], const in arg _ln[9508485]:int(64)[10], in arg _fn[9508487]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val tmp[7627892]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7627898 '<' modulus[3468219] 0)
    {
      (7627909 'move' tmp[7627892](7627907 'u-' modulus[3468219]))
    }
    {
      (7627913 'move' tmp[7627892] modulus[3468219])
    }
    const-val call_tmp[3468282]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3468284 'move' call_tmp[3468282](3468287 call chpl__mod[3462785] minuend[3468215] tmp[7627892] _ln[9508485] _fn[9508487]))
    const-val call_tmp[3468296]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3468298 'move' call_tmp[3468296](3468301 call chpl__mod[3462785] subtrahend[3468217] tmp[7627892] _ln[9508485] _fn[9508487]))
    val tmp[3468311]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7320792 '<' call_tmp[3468282] call_tmp[3468296])
    {
      (3468360 'move' tmp[3468311](9532249 'cast' int(64)[10](7378124 '-' tmp[7627892](9532253 'cast' int(64)[10](7378114 '-' call_tmp[3468296] call_tmp[3468282])))))
    }
    {
      (3468374 'move' tmp[3468311](9532251 'cast' int(64)[10](7378134 '-' call_tmp[3468282] call_tmp[3468296])))
    }
    (3468400 return tmp[3468311])
  }
  function chpl__add[1718211](const in arg a[1718213]:int(64)[10], const in arg b[1718218]:int(64)[10]) : int(64)[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[1718222]:int(64)[10] "dead after last mention" "RVV" "temp"
    val tmp[1718288]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7315192 '>' a[1718213] 0)
    {
      (1718321 'move' tmp[1718288](7315207 '>' b[1718218] 0))
    }
    {
      (1718327 'move' tmp[1718288] 0)
    }
    val tmp[1718349]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1718288]
    {
      (1718403 'move' tmp[1718349](7315217 '>' b[1718218](9530189 'cast' int(64)[10](7641778 '-' 9223372036854775807 a[1718213]))))
    }
    {
      (1718409 'move' tmp[1718349] 0)
    }
    if tmp[1718349]
    {
      (1718431 'move' ret[1718222] 9223372036854775807)
      gotoReturn _end_chpl__add[1719155] _end_chpl__add[1719155]
    }
    val tmp[1718461]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7319457 '<' a[1718213] 0)
    {
      (1718494 'move' tmp[1718461](7319472 '<' b[1718218] 0))
    }
    {
      (1718500 'move' tmp[1718461] 0)
    }
    val tmp[1718522]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1718461]
    {
      (1718576 'move' tmp[1718522](7319482 '<' b[1718218](9530191 'cast' int(64)[10](7641748 '-' -9223372036854775808 a[1718213]))))
    }
    {
      (1718582 'move' tmp[1718522] 0)
    }
    if tmp[1718522]
    {
      (1718604 'move' ret[1718222] -9223372036854775808)
      gotoReturn _end_chpl__add[1719155] _end_chpl__add[1719155]
    }
    (1719151 'move' ret[1718222](9530187 'cast' int(64)[10](7373309 '+' a[1718213] b[1718218])))
    label _end_chpl__add[1719155]
    (1719157 return ret[1718222])
  }
  function chpl__addRangeStrides[1722025](const in arg start[1722027]:int(64)[10], const in arg stride[1722029]:int(64)[10], const in arg count[1722031]:int(64)[10]) : int(64)[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1722457]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1722459 'move' call_tmp[1722457](1722462 call mul[1722501] stride[1722029] count[1722031]))
    const-val call_tmp[1722465]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1722467 'move' call_tmp[1722465](1722470 call add[1722856] start[1722027] call_tmp[1722457]))
    (1722498 return call_tmp[1722465])
  }
  function adjustedSlice[1633050](const  ref arg slice[5491308]:range(int(64),both,one)[1610039], ref arg _retArg[5549550]:range(int(64),both,one)[1610039]) : void[4] "fast on" "fn returns via _retArg" "local fn" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1633053]:range(int(64),both,one)[1610039] "dead after last mention" "RVV" "temp"
    (1633102 'move' ret[1633053] slice[5491308])
    (5549552 '=' _retArg[5549550] ret[1633053])
    (5549557 return _void[46])
  }
  function myMin[1634168](const in arg x[1634170]:int(64)[10], const in arg y[1634172]:int(64)[10]) : int(64)[10] "fast on" "local fn" "resolved" "fn synchronization free"
  {
    val tmp[7322534]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7322540 '<' x[1634170] y[1634172])
    {
      (7322545 'move' tmp[7322534] x[1634170])
    }
    {
      (7322549 'move' tmp[7322534] y[1634172])
    }
    (1634189 return tmp[7322534])
  }
  function myMax[1634344](const in arg x[1634346]:int(64)[10], const in arg y[1634348]:int(64)[10]) : int(64)[10] "fast on" "local fn" "resolved" "fn synchronization free"
  {
    val tmp[7318532]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7318538 '>' x[1634346] y[1634348])
    {
      (7318543 'move' tmp[7318532] x[1634346])
    }
    {
      (7318547 'move' tmp[7318532] y[1634348])
    }
    (1634365 return tmp[7318532])
  }
  function myMin[1693695](const in arg x[1693697]:int(64)[10], const in arg y[1693699]:int(64)[10]) : int(64)[10] "fast on" "local fn" "resolved" "fn synchronization free"
  {
    val tmp[7322556]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7322562 '<' x[1693697] y[1693699])
    {
      (7322567 'move' tmp[7322556] x[1693697])
    }
    {
      (7322571 'move' tmp[7322556] y[1693699])
    }
    (1693716 return tmp[7322556])
  }
  function myMax[1693871](const in arg x[1693873]:int(64)[10], const in arg y[1693875]:int(64)[10]) : int(64)[10] "fast on" "local fn" "resolved" "fn synchronization free"
  {
    val tmp[7318554]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7318560 '>' x[1693873] y[1693875])
    {
      (7318565 'move' tmp[7318554] x[1693873])
    }
    {
      (7318569 'move' tmp[7318554] y[1693875])
    }
    (1693892 return tmp[7318554])
  }
  function absSameType[1716263](const in arg r[1716265]:range(int(64),low,one)[1576928]) : int(64)[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    (1716352 return 1)
  }
  function mul[1722501](const in arg a[1722503]:int(64)[10], const in arg b[1722505]:int(64)[10]) : int(64)[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7501792]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7501794 'move' call_tmp[7501792](7501796 '*' a[1722503] b[1722505]))
    (1722598 return call_tmp[7501792])
  }
  function add[1722856](const in arg a[1722858]:int(64)[10], const in arg b[1722860]:int(64)[10]) : int(64)[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7374195]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7374197 'move' call_tmp[7374195](7374199 '+' a[1722858] b[1722860]))
    (1722953 return call_tmp[7374195])
  }
  function myMin[1745678](const in arg x[1745680]:int(64)[10], const in arg y[1745682]:int(64)[10]) : int(64)[10] "fast on" "local fn" "resolved" "fn synchronization free"
  {
    val tmp[7322578]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7322584 '<' x[1745680] y[1745682])
    {
      (7322589 'move' tmp[7322578] x[1745680])
    }
    {
      (7322593 'move' tmp[7322578] y[1745682])
    }
    (1745699 return tmp[7322578])
  }
  function myMax[1745854](const in arg x[1745856]:int(64)[10], const in arg y[1745858]:int(64)[10]) : int(64)[10] "fast on" "local fn" "resolved" "fn synchronization free"
  {
    val tmp[7318576]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7318582 '>' x[1745856] y[1745858])
    {
      (7318587 'move' tmp[7318576] x[1745856])
    }
    {
      (7318591 'move' tmp[7318576] y[1745858])
    }
    (1745875 return tmp[7318576])
  }
  function absSameType[1911871](const in arg r[1911873]:range(int(64),low,one)[1576928]) : int(64)[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    (1911960 return 1)
  }
}
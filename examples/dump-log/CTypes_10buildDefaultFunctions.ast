AST dump for CTypes after pass buildDefaultFunctions.
Module use list: ChapelStandard HaltWrappers ChapelSysCTypes Reflection Math POSIX BytesStringCommon 

{
  function chpl__init_CTypes[468360]() : void[4] "insert line file info" "module init"
  {
    { scopeless type extern
      (644235 'move' c_float[46758](644233 call real(64)[13] 32))
    }
    { scopeless type extern
      (644241 'move' c_double[46764](644239 call real(64)[13] 64))
    }
    (644244 'init var' cFileTypeHasPointer[46770] 0)
    (46773 'end of statement')
    (644249 'move' c_void_ptr[46781](644247 call c_ptr[46891](?) void[4]))
    (644269 'move' writable_c_ptr_void[47818](644267 call c_ptr[46891](?) void[4]))
    (644271 'init var' cPtrToLogicalValue[49953] 1)
    (49956 'end of statement')
    (1000959 'resolution point' |writeSerializable[475162])
    (1000961 'end of statement')
    (1000962 'resolution point' |writeSerializable[475167])
    (1000964 'end of statement')
    (1000965 'resolution point' |writeSerializable[475172])
    (1000967 'end of statement')
    (598485 return _void[46])
  }
  unknown c_float[46758] "dead at end of block" "extern" "insert auto destroy" "type variable"
  unknown c_double[46764] "dead at end of block" "extern" "insert auto destroy" "type variable"
  unknown cFileTypeHasPointer[46770] "config" "deprecated" "param"
  function =[1036388](ref arg _arg1[1036390]:c_FILE[46778], arg _arg2[1036391]:c_FILE[46778]) : _unknown[42] "assignop" "compiler generated" "inline" "last resort"
  {
    (1036394 '=' _arg1[1036390] _arg2[1036391])
    (1036399 return _void[46])
  }
  type c_FILE[46778]
  unknown c_void_ptr[46781] "dead at end of block" "deprecated" "insert auto destroy" "last resort" "type variable"
  function c_ptr[46891](?).this[46791](arg _mt[46799]:_MT[201], arg this[46793]:c_ptr[46891](?), arg i[46796]:integral[159](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597449] "RVV" "temp"
    unknown call_tmp[762511] "expr temp" "maybe param" "maybe type" "temp"
    (762514 'move' call_tmp[762511](46818 call eltType _mt[203] this[46793]))
    unknown call_tmp[762516] "expr temp" "maybe param" "maybe type" "temp"
    (762519 'move' call_tmp[762516](46813 call == call_tmp[762511] void[4]))
    unknown call_tmp[762521] "expr temp" "maybe param" "maybe type" "temp"
    (762524 'move' call_tmp[762521](46822 call _cond_test call_tmp[762516]))
    if call_tmp[762521]
    {
      unknown call_tmp[762526] "expr temp" "maybe param" "maybe type" "temp"
      (762529 'move' call_tmp[762526](46805 call + "Cannot dereference a void pointer; cast to a " "non-opaque pointee type first."))
      (46804 call compilerError call_tmp[762526])
    }
    unknown call_tmp[762531] "expr temp" "maybe param" "maybe type" "temp"
    (762534 'move' call_tmp[762531](46827 'array_get' this[46793] i[46796]))
    (597454 'move' ret[597449](597453 'addr of' call_tmp[762531]))
    (597451 return ret[597449])
  }
  function c_ptr[46891](?).deref[46832](arg _mt[46836]:_MT[201], arg this[46834]:c_ptr[46891](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597458] "RVV" "temp"
    unknown call_tmp[762538] "expr temp" "maybe param" "maybe type" "temp"
    (762541 'move' call_tmp[762538](46849 call eltType _mt[203] this[46834]))
    unknown call_tmp[762543] "expr temp" "maybe param" "maybe type" "temp"
    (762546 'move' call_tmp[762543](46846 call == call_tmp[762538] void[4]))
    unknown call_tmp[762548] "expr temp" "maybe param" "maybe type" "temp"
    (762551 'move' call_tmp[762548](46853 call _cond_test call_tmp[762543]))
    if call_tmp[762548]
    {
      unknown call_tmp[762553] "expr temp" "maybe param" "maybe type" "temp"
      (762556 'move' call_tmp[762553](46842 call + "Cannot dereference a void pointer; cast to a " "non-opaque pointee type first."))
      (46841 call compilerError call_tmp[762553])
    }
    unknown call_tmp[762558] "expr temp" "maybe param" "maybe type" "temp"
    (762561 'move' call_tmp[762558](46858 'array_get' this[46834] 0))
    (597463 'move' ret[597458](597462 'addr of' call_tmp[762558]))
    (597460 return ret[597458])
  }
  function c_ptr[46891](?).serialize[46863](arg _mt[46871]:_MT[201], arg this[46865]:c_ptr[46891](?), arg writer[46867]:_any[141](?), ref arg serializer[46869]:_any[141](?)) : _unknown[42] throws "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[762563] "expr temp" "maybe param" "maybe type" "temp"
    (762566 'move' call_tmp[762563](46878 call c_ptr[46891](?) void[4]))
    unknown call_tmp[762568] "expr temp" "maybe param" "maybe type" "temp"
    (762571 'move' call_tmp[762568](46874 call : this[46865] call_tmp[762563]))
    (46885 call(46882 call (partial) serialize _mt[203] call_tmp[762568]) writer[46867] serializer[46869])
    (597465 return _void[46])
  }
  function c_ptr[46891](?).eltType[1036401](arg _mt[1036403]:_MT[201], arg this[1036405]:c_ptr[46891](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1036424] "RVV" "temp" "type variable"
    unknown call_tmp[1036438] "expr temp" "maybe param" "maybe type" "temp"
    (1036441 'move' call_tmp[1036438](1036410 'is bound' this[1036405] c"eltType"))
    if call_tmp[1036438]
    {
      unknown call_tmp[1036443] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1036446 'move' call_tmp[1036443](1036409 '.v' this[1036405] c"eltType"))
      (1036429 'move' ret[1036424](1036428 'deref' call_tmp[1036443]))
      gotoReturn _end_eltType[1036422] _end_eltType[1036422]
    }
    {
      (1036434 'move' ret[1036424](1036433 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1036422] _end_eltType[1036422]
    }
    label _end_eltType[1036422]
    (1036426 return ret[1036424])
  }
  function c_ptr[46891](?).eltType[1036448](arg _mt[1036450]:_MT[201], arg this[1036452]:c_ptr[46891](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1036471] "RVV" "temp" "type variable"
    unknown call_tmp[1036485] "expr temp" "maybe param" "maybe type" "temp"
    (1036488 'move' call_tmp[1036485](1036457 'is bound' this[1036452] c"eltType"))
    if call_tmp[1036485]
    {
      unknown call_tmp[1036490] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1036493 'move' call_tmp[1036490](1036456 '.v' this[1036452] c"eltType"))
      (1036476 'move' ret[1036471](1036475 'deref' call_tmp[1036490]))
      gotoReturn _end_eltType[1036469] _end_eltType[1036469]
    }
    {
      (1036481 'move' ret[1036471](1036480 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1036469] _end_eltType[1036469]
    }
    label _end_eltType[1036469]
    (1036473 return ret[1036471])
  }
  function c_ptr[46891](?).init[1036495](arg _mt[1036497]:_MT[201], arg this[1036498]:c_ptr[46891](?), arg eltType[1036501]:_any[141](?)) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1036515 'init field' this[1036498] c"eltType" eltType[1036501])
    (1036520 'end of statement')
    (1036518 'setcid' this[1036498])
    (1036522 return _void[46])
  }
  function c_ptr[46891](?).init[1036524](arg _mt[1036526]:_MT[201], arg this[1036527]:c_ptr[46891](?), arg eltType[1036548]:_any[141](?), arg reader[1036528]:_any[141](?), ref arg deserializer[1036529]:_any[141](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1036585] "expr temp" "maybe param" "maybe type" "temp"
    (1036588 'move' call_tmp[1036585](1036539 'simple type name' this[1036527]))
    unknown call_tmp[1036590] "maybe param" "maybe type" "temp"
    (1036593 'move' call_tmp[1036590](1036541 call startClass _mt[203] deserializer[1036529] reader[1036528] call_tmp[1036585]))
    unknown _chpl_des_helper[1036546] "dead at end of block" "insert auto destroy"
    (1036583 'init var' _chpl_des_helper[1036546] call_tmp[1036590])
    (1036576 'end of statement')
    unknown eltType[1036566] "temp" "type variable"
    (1036568 'move' eltType[1036566] eltType[1036548])
    (1036570 'init field' this[1036527] c"eltType" eltType[1036566])
    (1036577 'end of statement')
    (1036557 call endClass _mt[203] _chpl_des_helper[1036546])
    (1036578 'end of statement' _chpl_des_helper[1036546])
    (1036574 'setcid' this[1036527])
    (1036581 return _void[46])
  }
  where {
    unknown call_tmp[1036595] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1036598 'move' call_tmp[1036595](1036530 'typeof' reader[1036528]))
    (1036532 call chpl__isFileReader call_tmp[1036595])
  }
  function c_ptr[46891](?).deinit[1036602](arg _mt[1036604]:_MT[201], arg this[1036606]:c_ptr[46891](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1036614 return _void[46])
  }
  type c_ptr[46891](?) unknown eltType[46789] "type variable"
  function c_ptrConst[46990](?).this[46898](arg _mt[46906]:_MT[201], arg this[46900]:c_ptrConst[46990](?), arg i[46903]:integral[159](?)) const ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597469] "RVV" "temp"
    unknown call_tmp[762577] "expr temp" "maybe param" "maybe type" "temp"
    (762580 'move' call_tmp[762577](46919 call eltType _mt[203] this[46900]))
    unknown call_tmp[762582] "expr temp" "maybe param" "maybe type" "temp"
    (762585 'move' call_tmp[762582](46916 call == call_tmp[762577] void[4]))
    unknown call_tmp[762587] "expr temp" "maybe param" "maybe type" "temp"
    (762590 'move' call_tmp[762587](46923 call _cond_test call_tmp[762582]))
    if call_tmp[762587]
    {
      unknown call_tmp[762592] "expr temp" "maybe param" "maybe type" "temp"
      (762595 'move' call_tmp[762592](46912 call + "Cannot dereference a void pointer; cast to a " "non-opaque pointee type first."))
      (46911 call compilerError call_tmp[762592])
    }
    unknown call_tmp[762597] "expr temp" "maybe param" "maybe type" "temp"
    (762600 'move' call_tmp[762597](46928 'array_get' this[46900] i[46903]))
    (597474 'move' ret[597469](597473 'addr of' call_tmp[762597]))
    (597471 return ret[597469])
  }
  function c_ptrConst[46990](?).deref[46933](arg _mt[46937]:_MT[201], arg this[46935]:c_ptrConst[46990](?)) const ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597478] "RVV" "temp"
    unknown call_tmp[762604] "expr temp" "maybe param" "maybe type" "temp"
    (762607 'move' call_tmp[762604](46950 call eltType _mt[203] this[46935]))
    unknown call_tmp[762609] "expr temp" "maybe param" "maybe type" "temp"
    (762612 'move' call_tmp[762609](46947 call == call_tmp[762604] void[4]))
    unknown call_tmp[762614] "expr temp" "maybe param" "maybe type" "temp"
    (762617 'move' call_tmp[762614](46954 call _cond_test call_tmp[762609]))
    if call_tmp[762614]
    {
      unknown call_tmp[762619] "expr temp" "maybe param" "maybe type" "temp"
      (762622 'move' call_tmp[762619](46943 call + "Cannot dereference a void pointer; cast to a " "non-opaque pointee type first."))
      (46942 call compilerError call_tmp[762619])
    }
    unknown call_tmp[762624] "expr temp" "maybe param" "maybe type" "temp"
    (762627 'move' call_tmp[762624](46959 'array_get' this[46935] 0))
    (597483 'move' ret[597478](597482 'addr of' call_tmp[762624]))
    (597480 return ret[597478])
  }
  function c_ptrConst[46990](?).serialize[46964](arg _mt[46972]:_MT[201], arg this[46966]:c_ptrConst[46990](?), arg writer[46968]:_any[141](?), ref arg serializer[46970]:_any[141](?)) : _unknown[42] throws "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[762629] "expr temp" "maybe param" "maybe type" "temp"
    (762632 'move' call_tmp[762629](46979 call c_ptr[46891](?) void[4]))
    unknown call_tmp[762634] "expr temp" "maybe param" "maybe type" "temp"
    (762637 'move' call_tmp[762634](46975 call : this[46966] call_tmp[762629]))
    (46984 call(46981 call (partial) serialize _mt[203] call_tmp[762634]) writer[46968] serializer[46970])
    (597485 return _void[46])
  }
  function c_ptrConst[46990](?).eltType[1036616](arg _mt[1036618]:_MT[201], arg this[1036620]:c_ptrConst[46990](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1036639] "RVV" "temp" "type variable"
    unknown call_tmp[1036653] "expr temp" "maybe param" "maybe type" "temp"
    (1036656 'move' call_tmp[1036653](1036625 'is bound' this[1036620] c"eltType"))
    if call_tmp[1036653]
    {
      unknown call_tmp[1036658] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1036661 'move' call_tmp[1036658](1036624 '.v' this[1036620] c"eltType"))
      (1036644 'move' ret[1036639](1036643 'deref' call_tmp[1036658]))
      gotoReturn _end_eltType[1036637] _end_eltType[1036637]
    }
    {
      (1036649 'move' ret[1036639](1036648 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1036637] _end_eltType[1036637]
    }
    label _end_eltType[1036637]
    (1036641 return ret[1036639])
  }
  function c_ptrConst[46990](?).eltType[1036663](arg _mt[1036665]:_MT[201], arg this[1036667]:c_ptrConst[46990](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1036686] "RVV" "temp" "type variable"
    unknown call_tmp[1036700] "expr temp" "maybe param" "maybe type" "temp"
    (1036703 'move' call_tmp[1036700](1036672 'is bound' this[1036667] c"eltType"))
    if call_tmp[1036700]
    {
      unknown call_tmp[1036705] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1036708 'move' call_tmp[1036705](1036671 '.v' this[1036667] c"eltType"))
      (1036691 'move' ret[1036686](1036690 'deref' call_tmp[1036705]))
      gotoReturn _end_eltType[1036684] _end_eltType[1036684]
    }
    {
      (1036696 'move' ret[1036686](1036695 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1036684] _end_eltType[1036684]
    }
    label _end_eltType[1036684]
    (1036688 return ret[1036686])
  }
  function c_ptrConst[46990](?).init[1036710](arg _mt[1036712]:_MT[201], arg this[1036713]:c_ptrConst[46990](?), arg eltType[1036716]:_any[141](?)) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1036730 'init field' this[1036713] c"eltType" eltType[1036716])
    (1036735 'end of statement')
    (1036733 'setcid' this[1036713])
    (1036737 return _void[46])
  }
  function c_ptrConst[46990](?).init[1036739](arg _mt[1036741]:_MT[201], arg this[1036742]:c_ptrConst[46990](?), arg eltType[1036763]:_any[141](?), arg reader[1036743]:_any[141](?), ref arg deserializer[1036744]:_any[141](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1036800] "expr temp" "maybe param" "maybe type" "temp"
    (1036803 'move' call_tmp[1036800](1036754 'simple type name' this[1036742]))
    unknown call_tmp[1036805] "maybe param" "maybe type" "temp"
    (1036808 'move' call_tmp[1036805](1036756 call startClass _mt[203] deserializer[1036744] reader[1036743] call_tmp[1036800]))
    unknown _chpl_des_helper[1036761] "dead at end of block" "insert auto destroy"
    (1036798 'init var' _chpl_des_helper[1036761] call_tmp[1036805])
    (1036791 'end of statement')
    unknown eltType[1036781] "temp" "type variable"
    (1036783 'move' eltType[1036781] eltType[1036763])
    (1036785 'init field' this[1036742] c"eltType" eltType[1036781])
    (1036792 'end of statement')
    (1036772 call endClass _mt[203] _chpl_des_helper[1036761])
    (1036793 'end of statement' _chpl_des_helper[1036761])
    (1036789 'setcid' this[1036742])
    (1036796 return _void[46])
  }
  where {
    unknown call_tmp[1036810] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1036813 'move' call_tmp[1036810](1036745 'typeof' reader[1036743]))
    (1036747 call chpl__isFileReader call_tmp[1036810])
  }
  function c_ptrConst[46990](?).deinit[1036817](arg _mt[1036819]:_MT[201], arg this[1036821]:c_ptrConst[46990](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1036829 return _void[46])
  }
  type c_ptrConst[46990](?) unknown eltType[46896] "type variable"
  function c_array[47643](?).init[47001](arg _mt[47009]:_MT[201], ref arg this[47003]:c_array[47643](?), arg eltType[47005]:_any[141](?), param arg size[47007]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[762641] "expr temp" "maybe param" "maybe type" "temp"
    (762644 'move' call_tmp[762641](47018 call == eltType[47005] void[4]))
    unknown call_tmp[762646] "expr temp" "maybe param" "maybe type" "temp"
    (762649 'move' call_tmp[762646](47022 call _cond_test call_tmp[762641]))
    if call_tmp[762646]
    {
      (47013 call compilerError "c_array element type cannot be 'void'")
    }
    unknown call_tmp[762651] "expr temp" "maybe param" "maybe type" "temp"
    (762654 'move' call_tmp[762651](47033 call == eltType[47005] nothing[7]))
    unknown call_tmp[762656] "expr temp" "maybe param" "maybe type" "temp"
    (762659 'move' call_tmp[762656](47037 call _cond_test call_tmp[762651]))
    if call_tmp[762656]
    {
      (47028 call compilerError "c_array element type cannot be 'nothing'")
    }
    unknown eltType[515202] "temp" "type variable"
    (515204 'move' eltType[515202] eltType[47005])
    (515206 'init field' this[47003] c"eltType" eltType[515202])
    (549590 'end of statement')
    unknown size[515210] "param" "temp"
    (515212 'init var' size[515210] size[47007])
    (515214 'init field' this[47003] c"size" size[515210])
    (549591 'end of statement')
    (515218 'init done')
    (549592 'end of statement')
    unknown i[47062] "dead at end of block" "insert auto destroy"
    (644251 'init var' i[47062] 0)
    (47065 'end of statement')
    {
      unknown tmp[47090] "temp"
      unknown call_tmp[762661] "expr temp" "maybe param" "maybe type" "temp"
      (762664 'move' call_tmp[762661](47111 call < i[47062] size[47007]))
      (47114 'move' tmp[47090](47109 call _cond_test call_tmp[762661]))
      WhileDo[47095]
      {
        {
          unknown default[47072] "dead at end of block" "no auto destroy"
          (644253 'default init var' default[47072] eltType[47005])
          (47075 'end of statement')
          unknown eltRef[47077] "dead at end of block" "ref var"
          (644258 'init ref decl' eltRef[47077])
          unknown call_tmp[762666] "expr temp" "maybe param" "maybe type" "temp"
          (762669 'move' call_tmp[762666](47078 'array_get' this[47003] i[47062]))
          (644256 'move' eltRef[47077](644255 'addr of' call_tmp[762666]))
          (47082 'end of statement' i[47062])
          (47083 '=' eltRef[47077] default[47072])
          (549594 'end of statement' eltRef[47077] default[47072])
          (47086 call += i[47062] 1)
          (549597 'end of statement' i[47062])
        }
        label _continueLabel[47093]
        unknown call_tmp[762671] "expr temp" "maybe param" "maybe type" "temp"
        (762674 'move' call_tmp[762671](47101 call < i[47062] size[47007]))
        (47104 'move' tmp[47090](47099 call _cond_test call_tmp[762671]))
        tmp[47090]
      }
      label _breakLabel[47094]
    }
    (597487 return _void[46])
  }
  function c_array[47643](?).deinit[47119](arg _mt[47123]:_MT[201], arg this[47121]:c_array[47643](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    unknown i[47127] "dead at end of block" "insert auto destroy"
    (644260 'init var' i[47127] 0)
    (47130 'end of statement')
    {
      unknown tmp[47145] "temp"
      unknown call_tmp[762678] "expr temp" "maybe param" "maybe type" "temp"
      (762681 'move' call_tmp[762678](418252 call size _mt[203] this[47121]))
      unknown call_tmp[762683] "expr temp" "maybe param" "maybe type" "temp"
      (762686 'move' call_tmp[762683](47166 call < i[47127] call_tmp[762678]))
      (47169 'move' tmp[47145](47164 call _cond_test call_tmp[762683]))
      WhileDo[47150]
      {
        {
          unknown call_tmp[762688] "expr temp" "maybe param" "maybe type" "temp"
          (762691 'move' call_tmp[762688](47138 'array_get' this[47121] i[47127]))
          (47137 call chpl__autoDestroy call_tmp[762688])
          (549599 'end of statement' i[47127])
          (47141 call += i[47127] 1)
          (549601 'end of statement' i[47127])
        }
        label _continueLabel[47148]
        unknown call_tmp[762695] "expr temp" "maybe param" "maybe type" "temp"
        (762698 'move' call_tmp[762695](418246 call size _mt[203] this[47121]))
        unknown call_tmp[762700] "expr temp" "maybe param" "maybe type" "temp"
        (762703 'move' call_tmp[762700](47156 call < i[47127] call_tmp[762695]))
        (47159 'move' tmp[47145](47154 call _cond_test call_tmp[762700]))
        tmp[47145]
      }
      label _breakLabel[47149]
    }
    (597489 return _void[46])
  }
  function c_array[47643](?).this[47174](arg _mt[47182]:_MT[201], ref arg this[47176]:c_array[47643](?), arg i[47179]:integral[159](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597493] "RVV" "temp"
    unknown call_tmp[762705] "expr temp" "maybe param" "maybe type" "temp"
    (762708 'move' call_tmp[762705](47234 call _cond_test 1))
    if call_tmp[762705]
    {
      unknown tmp[479076] "maybe param" "temp"
      (479087 'move' tmp[479076](47220 call < i[47179] 0))
      unknown call_tmp[762710] "expr temp" "maybe param" "maybe type" "temp"
      (762713 'move' call_tmp[762710](479089 call _cond_invalid tmp[479076]))
      if call_tmp[762710]
      {
        (479092 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[667730] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[667731] "maybe param" "temp"
      unknown call_tmp[762715] "expr temp" "maybe param" "maybe type" "temp"
      (762718 'move' call_tmp[762715](479077 call isTrue tmp[479076]))
      (667736 'move' tmp[667731](667734 call _cond_test call_tmp[762715]))
      if tmp[667731]
      {
        (667741 'move' tmp[667730](667738 '_paramFoldLogical' tmp[667731] 1))
      }
      {
        unknown tmp[667743] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[762722] "expr temp" "maybe param" "maybe type" "temp"
        (762725 'move' call_tmp[762722](418271 call size _mt[203] this[47176]))
        unknown call_tmp[762727] "expr temp" "maybe param" "maybe type" "temp"
        (762730 'move' call_tmp[762727](47224 call >= i[47179] call_tmp[762722]))
        (667745 'move' tmp[667743](479081 call isTrue call_tmp[762727]))
        (667750 'move' tmp[667730](667747 '_paramFoldLogical' tmp[667731] tmp[667743]))
      }
      unknown call_tmp[762732] "expr temp" "maybe param" "maybe type" "temp"
      (762735 'move' call_tmp[762732](47228 call _cond_test tmp[667730]))
      if call_tmp[762732]
      {
        unknown call_tmp[762737] "expr temp" "maybe param" "maybe type" "temp"
        (762740 'move' call_tmp[762737](47202 call : i[47179] string[244]))
        unknown call_tmp[762742] "expr temp" "maybe param" "maybe type" "temp"
        (762745 'move' call_tmp[762742](47197 call + "c array index out of bounds " call_tmp[762737]))
        unknown call_tmp[762747] "expr temp" "maybe param" "maybe type" "temp"
        (762750 'move' call_tmp[762747](47195 call + call_tmp[762742] "(indices are 0.."))
        unknown call_tmp[762754] "expr temp" "maybe param" "maybe type" "temp"
        (762757 'move' call_tmp[762754](418264 call size _mt[203] this[47176]))
        unknown call_tmp[762759] "expr temp" "maybe param" "maybe type" "temp"
        (762762 'move' call_tmp[762759](47211 call - call_tmp[762754] 1))
        unknown call_tmp[762764] "expr temp" "maybe param" "maybe type" "temp"
        (762767 'move' call_tmp[762764](47209 call : call_tmp[762759] string[244]))
        unknown call_tmp[762769] "expr temp" "maybe param" "maybe type" "temp"
        (762772 'move' call_tmp[762769](47193 call + call_tmp[762747] call_tmp[762764]))
        unknown call_tmp[762774] "expr temp" "maybe param" "maybe type" "temp"
        (762777 'move' call_tmp[762774](47191 call + call_tmp[762769] ")"))
        (47190 call boundsCheckHalt module=[222] HaltWrappers[518] call_tmp[762774])
        (399881 'referenced modules list' HaltWrappers[518])
      }
    }
    unknown call_tmp[762779] "expr temp" "maybe param" "maybe type" "temp"
    (762782 'move' call_tmp[762779](47240 'array_get' this[47176] i[47179]))
    (597498 'move' ret[597493](597497 'addr of' call_tmp[762779]))
    (597495 return ret[597493])
  }
  { scopeless type
    (418258 call eltType _mt[203] this[47176])
  }
  function c_array[47643](?).this[47246](arg _mt[47254]:_MT[201], const  ref arg this[47248]:c_array[47643](?), arg i[47251]:integral[159](?)) const ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597502] "RVV" "temp"
    unknown call_tmp[762786] "expr temp" "maybe param" "maybe type" "temp"
    (762789 'move' call_tmp[762786](47302 call _cond_test 1))
    if call_tmp[762786]
    {
      unknown tmp[479097] "maybe param" "temp"
      (479108 'move' tmp[479097](47288 call < i[47251] 0))
      unknown call_tmp[762791] "expr temp" "maybe param" "maybe type" "temp"
      (762794 'move' call_tmp[762791](479110 call _cond_invalid tmp[479097]))
      if call_tmp[762791]
      {
        (479113 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[667757] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[667758] "maybe param" "temp"
      unknown call_tmp[762796] "expr temp" "maybe param" "maybe type" "temp"
      (762799 'move' call_tmp[762796](479098 call isTrue tmp[479097]))
      (667763 'move' tmp[667758](667761 call _cond_test call_tmp[762796]))
      if tmp[667758]
      {
        (667768 'move' tmp[667757](667765 '_paramFoldLogical' tmp[667758] 1))
      }
      {
        unknown tmp[667770] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[762803] "expr temp" "maybe param" "maybe type" "temp"
        (762806 'move' call_tmp[762803](418293 call size _mt[203] this[47248]))
        unknown call_tmp[762808] "expr temp" "maybe param" "maybe type" "temp"
        (762811 'move' call_tmp[762808](47292 call >= i[47251] call_tmp[762803]))
        (667772 'move' tmp[667770](479102 call isTrue call_tmp[762808]))
        (667777 'move' tmp[667757](667774 '_paramFoldLogical' tmp[667758] tmp[667770]))
      }
      unknown call_tmp[762813] "expr temp" "maybe param" "maybe type" "temp"
      (762816 'move' call_tmp[762813](47296 call _cond_test tmp[667757]))
      if call_tmp[762813]
      {
        unknown call_tmp[762818] "expr temp" "maybe param" "maybe type" "temp"
        (762821 'move' call_tmp[762818](47272 call : i[47251] string[244]))
        unknown call_tmp[762823] "expr temp" "maybe param" "maybe type" "temp"
        (762826 'move' call_tmp[762823](47269 call + "c array index out of bounds " call_tmp[762818]))
        unknown call_tmp[762828] "expr temp" "maybe param" "maybe type" "temp"
        (762831 'move' call_tmp[762828](47267 call + call_tmp[762823] "(indices are 0.."))
        unknown call_tmp[762835] "expr temp" "maybe param" "maybe type" "temp"
        (762838 'move' call_tmp[762835](418286 call size _mt[203] this[47248]))
        unknown call_tmp[762840] "expr temp" "maybe param" "maybe type" "temp"
        (762843 'move' call_tmp[762840](47279 call - call_tmp[762835] 1))
        unknown call_tmp[762845] "expr temp" "maybe param" "maybe type" "temp"
        (762848 'move' call_tmp[762845](47277 call : call_tmp[762840] string[244]))
        unknown call_tmp[762850] "expr temp" "maybe param" "maybe type" "temp"
        (762853 'move' call_tmp[762850](47265 call + call_tmp[762828] call_tmp[762845]))
        unknown call_tmp[762855] "expr temp" "maybe param" "maybe type" "temp"
        (762858 'move' call_tmp[762855](47263 call + call_tmp[762850] ")"))
        (47262 call boundsCheckHalt module=[222] HaltWrappers[518] call_tmp[762855])
        (399887 'referenced modules list' HaltWrappers[518])
      }
    }
    unknown call_tmp[762860] "expr temp" "maybe param" "maybe type" "temp"
    (762863 'move' call_tmp[762860](47308 'array_get' this[47248] i[47251]))
    (597507 'move' ret[597502](597506 'addr of' call_tmp[762860]))
    (597504 return ret[597502])
  }
  { scopeless type
    (418280 call eltType _mt[203] this[47248])
  }
  function c_array[47643](?).this[47314](arg _mt[47322]:_MT[201], ref arg this[47316]:c_array[47643](?), param arg i[47319]:integral[159](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597511] "RVV" "temp"
    unknown tmp[479118] "maybe param" "temp"
    (479129 'move' tmp[479118](47353 call < i[47319] 0))
    unknown call_tmp[762867] "expr temp" "maybe param" "maybe type" "temp"
    (762870 'move' call_tmp[762867](479131 call _cond_invalid tmp[479118]))
    if call_tmp[762867]
    {
      (479134 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[667784] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667785] "maybe param" "temp"
    unknown call_tmp[762872] "expr temp" "maybe param" "maybe type" "temp"
    (762875 'move' call_tmp[762872](479119 call isTrue tmp[479118]))
    (667790 'move' tmp[667785](667788 call _cond_test call_tmp[762872]))
    if tmp[667785]
    {
      (667795 'move' tmp[667784](667792 '_paramFoldLogical' tmp[667785] 1))
    }
    {
      unknown tmp[667797] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[762879] "expr temp" "maybe param" "maybe type" "temp"
      (762882 'move' call_tmp[762879](418315 call size _mt[203] this[47316]))
      unknown call_tmp[762884] "expr temp" "maybe param" "maybe type" "temp"
      (762887 'move' call_tmp[762884](47357 call >= i[47319] call_tmp[762879]))
      (667799 'move' tmp[667797](479123 call isTrue call_tmp[762884]))
      (667804 'move' tmp[667784](667801 '_paramFoldLogical' tmp[667785] tmp[667797]))
    }
    unknown call_tmp[762889] "expr temp" "maybe param" "maybe type" "temp"
    (762892 'move' call_tmp[762889](47361 call _cond_test tmp[667784]))
    if call_tmp[762889]
    {
      unknown call_tmp[762894] "expr temp" "maybe param" "maybe type" "temp"
      (762897 'move' call_tmp[762894](47337 call : i[47319] string[244]))
      unknown call_tmp[762899] "expr temp" "maybe param" "maybe type" "temp"
      (762902 'move' call_tmp[762899](47334 call + "c array index out of bounds " call_tmp[762894]))
      unknown call_tmp[762904] "expr temp" "maybe param" "maybe type" "temp"
      (762907 'move' call_tmp[762904](47332 call + call_tmp[762899] "(indices are 0.."))
      unknown call_tmp[762911] "expr temp" "maybe param" "maybe type" "temp"
      (762914 'move' call_tmp[762911](418308 call size _mt[203] this[47316]))
      unknown call_tmp[762916] "expr temp" "maybe param" "maybe type" "temp"
      (762919 'move' call_tmp[762916](47344 call - call_tmp[762911] 1))
      unknown call_tmp[762921] "expr temp" "maybe param" "maybe type" "temp"
      (762924 'move' call_tmp[762921](47342 call : call_tmp[762916] string[244]))
      unknown call_tmp[762926] "expr temp" "maybe param" "maybe type" "temp"
      (762929 'move' call_tmp[762926](47330 call + call_tmp[762904] call_tmp[762921]))
      unknown call_tmp[762931] "expr temp" "maybe param" "maybe type" "temp"
      (762934 'move' call_tmp[762931](47328 call + call_tmp[762926] ")"))
      (47327 call compilerError call_tmp[762931])
    }
    unknown call_tmp[762936] "expr temp" "maybe param" "maybe type" "temp"
    (762939 'move' call_tmp[762936](47367 'array_get' this[47316] i[47319]))
    (597516 'move' ret[597511](597515 'addr of' call_tmp[762936]))
    (597513 return ret[597511])
  }
  { scopeless type
    (418302 call eltType _mt[203] this[47316])
  }
  function c_array[47643](?).this[47373](arg _mt[47381]:_MT[201], const  ref arg this[47375]:c_array[47643](?), param arg i[47378]:integral[159](?)) const ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[597520] "RVV" "temp"
    unknown tmp[479139] "maybe param" "temp"
    (479150 'move' tmp[479139](47412 call < i[47378] 0))
    unknown call_tmp[762943] "expr temp" "maybe param" "maybe type" "temp"
    (762946 'move' call_tmp[762943](479152 call _cond_invalid tmp[479139]))
    if call_tmp[762943]
    {
      (479155 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[667811] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667812] "maybe param" "temp"
    unknown call_tmp[762948] "expr temp" "maybe param" "maybe type" "temp"
    (762951 'move' call_tmp[762948](479140 call isTrue tmp[479139]))
    (667817 'move' tmp[667812](667815 call _cond_test call_tmp[762948]))
    if tmp[667812]
    {
      (667822 'move' tmp[667811](667819 '_paramFoldLogical' tmp[667812] 1))
    }
    {
      unknown tmp[667824] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[762955] "expr temp" "maybe param" "maybe type" "temp"
      (762958 'move' call_tmp[762955](418336 call size _mt[203] this[47375]))
      unknown call_tmp[762960] "expr temp" "maybe param" "maybe type" "temp"
      (762963 'move' call_tmp[762960](47416 call >= i[47378] call_tmp[762955]))
      (667826 'move' tmp[667824](479144 call isTrue call_tmp[762960]))
      (667831 'move' tmp[667811](667828 '_paramFoldLogical' tmp[667812] tmp[667824]))
    }
    unknown call_tmp[762965] "expr temp" "maybe param" "maybe type" "temp"
    (762968 'move' call_tmp[762965](47420 call _cond_test tmp[667811]))
    if call_tmp[762965]
    {
      unknown call_tmp[762970] "expr temp" "maybe param" "maybe type" "temp"
      (762973 'move' call_tmp[762970](47396 call : i[47378] string[244]))
      unknown call_tmp[762975] "expr temp" "maybe param" "maybe type" "temp"
      (762978 'move' call_tmp[762975](47393 call + "c array index out of bounds " call_tmp[762970]))
      unknown call_tmp[762980] "expr temp" "maybe param" "maybe type" "temp"
      (762983 'move' call_tmp[762980](47391 call + call_tmp[762975] "(indices are 0.."))
      unknown call_tmp[762987] "expr temp" "maybe param" "maybe type" "temp"
      (762990 'move' call_tmp[762987](418329 call size _mt[203] this[47375]))
      unknown call_tmp[762992] "expr temp" "maybe param" "maybe type" "temp"
      (762995 'move' call_tmp[762992](47403 call - call_tmp[762987] 1))
      unknown call_tmp[762997] "expr temp" "maybe param" "maybe type" "temp"
      (763000 'move' call_tmp[762997](47401 call : call_tmp[762992] string[244]))
      unknown call_tmp[763002] "expr temp" "maybe param" "maybe type" "temp"
      (763005 'move' call_tmp[763002](47389 call + call_tmp[762980] call_tmp[762997]))
      unknown call_tmp[763007] "expr temp" "maybe param" "maybe type" "temp"
      (763010 'move' call_tmp[763007](47387 call + call_tmp[763002] ")"))
      (47386 call compilerError call_tmp[763007])
    }
    unknown call_tmp[763012] "expr temp" "maybe param" "maybe type" "temp"
    (763015 'move' call_tmp[763012](47426 'array_get' this[47375] i[47378]))
    (597525 'move' ret[597520](597524 'addr of' call_tmp[763012]))
    (597522 return ret[597520])
  }
  { scopeless type
    (418323 call eltType _mt[203] this[47375])
  }
  function c_array[47643](?).serialize[47432](arg _mt[47440]:_MT[201], const arg this[47434]:c_array[47643](?), arg writer[47436]:_any[141](?), ref arg serializer[47438]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (47449 call(47446 call (partial) writeLiteral _mt[203] writer[47436]) "[")
    (549615 'end of statement')
    unknown first[47454] "dead at end of block" "insert auto destroy"
    (644262 'init var' first[47454] 1)
    (47457 'end of statement')
    {
      unknown _indexOfInterest[47494] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[47495] "expr temp" "temp"
      unknown call_tmp[763023] "expr temp" "maybe param" "maybe type" "temp"
      (763026 'move' call_tmp[763023](418351 call size _mt[203] this[47434]))
      unknown call_tmp[763028] "expr temp" "maybe param" "maybe type" "temp"
      (763031 'move' call_tmp[763028](47511 call chpl_direct_counted_range_iter 0 call_tmp[763023]))
      (47504 'move' _iterator[47495](47502 call _getIterator call_tmp[763028]))
      Defer
      {
        {
          (47526 call _freeIterator _iterator[47495])
        }
      }
      { scopeless type
        (47516 'move' _indexOfInterest[47494](47513 call iteratorIndex _iterator[47495]))
      }
      ForLoop[47496]
      {
        unknown i[47458] "index var" "insert auto destroy"
        (549617 'end of statement')
        (47521 'move' i[47458] _indexOfInterest[47494])
        (549618 'end of statement' i[47458])
        {
          unknown call_tmp[763035] "expr temp" "maybe param" "maybe type" "temp"
          (763038 'move' call_tmp[763035](47473 call this[47434] i[47458]))
          (47471 call(47468 call (partial) write _mt[203] writer[47436]) call_tmp[763035])
          (549620 'end of statement' i[47458])
          unknown call_tmp[763042] "expr temp" "maybe param" "maybe type" "temp"
          (763045 'move' call_tmp[763042](418346 call size _mt[203] this[47434]))
          unknown call_tmp[763047] "expr temp" "maybe param" "maybe type" "temp"
          (763050 'move' call_tmp[763047](47485 call - call_tmp[763042] 1))
          unknown call_tmp[763052] "expr temp" "maybe param" "maybe type" "temp"
          (763055 'move' call_tmp[763052](47482 call != i[47458] call_tmp[763047]))
          unknown call_tmp[763057] "expr temp" "maybe param" "maybe type" "temp"
          (763060 'move' call_tmp[763057](47489 call _cond_test call_tmp[763052]))
          if call_tmp[763057]
          {
            (47479 call(47476 call (partial) writeLiteral _mt[203] writer[47436]) ", ")
          }
        }
        label _continueLabel[47499]
        _indexOfInterest[47494]
        _iterator[47495]
      }
      label _breakLabel[47500]
    }
    (47537 call(47534 call (partial) writeLiteral _mt[203] writer[47436]) "]")
    (597527 return _void[46])
  }
  function c_array[47643](?).init=[47543](arg _mt[47551]:_MT[201], ref arg this[47545]:c_array[47643](?), arg other[47548]:c_array[47643](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown eltType[515219] "temp" "type variable"
    (515221 'move' eltType[515219](47561 call eltType _mt[203] other[47548]))
    (515223 'init field' this[47545] c"eltType" eltType[515219])
    (549624 'end of statement')
    unknown call_tmp[763070] "maybe param" "maybe type" "temp"
    (763073 'move' call_tmp[763070](47571 call size _mt[203] other[47548]))
    unknown size[515227] "param" "temp"
    (515229 'init var' size[515227] call_tmp[763070])
    (515231 'init field' this[47545] c"size" size[515227])
    (549625 'end of statement')
    (515235 'init done')
    (549626 'end of statement')
    {
      unknown _indexOfInterest[47601] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[47602] "expr temp" "temp"
      unknown call_tmp[763077] "expr temp" "maybe param" "maybe type" "temp"
      (763080 'move' call_tmp[763077](418367 call size _mt[203] this[47545]))
      unknown call_tmp[763082] "expr temp" "maybe param" "maybe type" "temp"
      (763085 'move' call_tmp[763082](47618 call chpl_direct_counted_range_iter 0 call_tmp[763077]))
      (47611 'move' _iterator[47602](47609 call _getIterator call_tmp[763082]))
      Defer
      {
        {
          (47633 call _freeIterator _iterator[47602])
        }
      }
      { scopeless type
        (47623 'move' _indexOfInterest[47601](47620 call iteratorIndex _iterator[47602]))
      }
      ForLoop[47603]
      {
        unknown i[47579] "index var" "insert auto destroy"
        (549628 'end of statement')
        (47628 'move' i[47579] _indexOfInterest[47601])
        (549629 'end of statement' i[47579])
        {
          unknown call_tmp[763087] "maybe param" "maybe type" "temp"
          (763090 'move' call_tmp[763087](47592 call other[47548] i[47579]))
          unknown call_tmp[763094] "maybe param" "maybe type" "temp"
          (763097 'move' call_tmp[763094](418357 call eltType _mt[203] this[47545]))
          unknown value[47589] "dead at end of block" "no auto destroy"
          (644264 'init var' value[47589] call_tmp[763087] call_tmp[763094])
          (47595 'end of statement' i[47579])
          unknown call_tmp[763099] "expr temp" "maybe param" "maybe type" "temp"
          (763102 'move' call_tmp[763099](47598 call this[47545] i[47579]))
          (47596 '=' call_tmp[763099] value[47589])
          (549632 'end of statement' i[47579] value[47589])
        }
        label _continueLabel[47606]
        _indexOfInterest[47601]
        _iterator[47602]
      }
      label _breakLabel[47607]
    }
    (597529 return _void[46])
  }
  function c_array[47643](?).eltType[1036831](arg _mt[1036833]:_MT[201], arg this[1036835]:c_array[47643](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1036854] "RVV" "temp" "type variable"
    unknown call_tmp[1036868] "expr temp" "maybe param" "maybe type" "temp"
    (1036871 'move' call_tmp[1036868](1036840 'is bound' this[1036835] c"eltType"))
    if call_tmp[1036868]
    {
      unknown call_tmp[1036873] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1036876 'move' call_tmp[1036873](1036839 '.v' this[1036835] c"eltType"))
      (1036859 'move' ret[1036854](1036858 'deref' call_tmp[1036873]))
      gotoReturn _end_eltType[1036852] _end_eltType[1036852]
    }
    {
      (1036864 'move' ret[1036854](1036863 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1036852] _end_eltType[1036852]
    }
    label _end_eltType[1036852]
    (1036856 return ret[1036854])
  }
  function c_array[47643](?).eltType[1036878](arg _mt[1036880]:_MT[201], arg this[1036882]:c_array[47643](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1036901] "RVV" "temp" "type variable"
    unknown call_tmp[1036915] "expr temp" "maybe param" "maybe type" "temp"
    (1036918 'move' call_tmp[1036915](1036887 'is bound' this[1036882] c"eltType"))
    if call_tmp[1036915]
    {
      unknown call_tmp[1036920] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1036923 'move' call_tmp[1036920](1036886 '.v' this[1036882] c"eltType"))
      (1036906 'move' ret[1036901](1036905 'deref' call_tmp[1036920]))
      gotoReturn _end_eltType[1036899] _end_eltType[1036899]
    }
    {
      (1036911 'move' ret[1036901](1036910 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1036899] _end_eltType[1036899]
    }
    label _end_eltType[1036899]
    (1036903 return ret[1036901])
  }
  function c_array[47643](?).size[1036925](arg _mt[1036927]:_MT[201], arg this[1036929]:c_array[47643](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1036948] "RVV" "param" "temp"
    unknown call_tmp[1036962] "expr temp" "maybe param" "maybe type" "temp"
    (1036965 'move' call_tmp[1036962](1036934 'is bound' this[1036929] c"size"))
    if call_tmp[1036962]
    {
      unknown call_tmp[1036967] "expr temp" "maybe param" "maybe type" "temp"
      (1036970 'move' call_tmp[1036967](1036933 '.' this[1036929] c"size"))
      (1036953 'move' ret[1036948](1036952 'deref' call_tmp[1036967]))
      gotoReturn _end_size[1036946] _end_size[1036946]
    }
    {
      (1036958 'move' ret[1036948](1036957 'deref' ?[227]))
      gotoReturn _end_size[1036946] _end_size[1036946]
    }
    label _end_size[1036946]
    (1036950 return ret[1036948])
  }
  function c_array[47643](?).size[1036972](arg _mt[1036974]:_MT[201], arg this[1036976]:c_array[47643](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1036995] "RVV" "param" "temp"
    unknown call_tmp[1037009] "expr temp" "maybe param" "maybe type" "temp"
    (1037012 'move' call_tmp[1037009](1036981 'is bound' this[1036976] c"size"))
    if call_tmp[1037009]
    {
      unknown call_tmp[1037014] "expr temp" "maybe param" "maybe type" "temp"
      (1037017 'move' call_tmp[1037014](1036980 '.' this[1036976] c"size"))
      (1037000 'move' ret[1036995](1036999 'deref' call_tmp[1037014]))
      gotoReturn _end_size[1036993] _end_size[1036993]
    }
    {
      (1037005 'move' ret[1036995](1037004 'deref' ?[227]))
      gotoReturn _end_size[1036993] _end_size[1036993]
    }
    label _end_size[1036993]
    (1036997 return ret[1036995])
  }
  function c_array[47643](?).deserialize[1037019](arg _mt[1037023]:_MT[201], ref arg this[1037021]:c_array[47643](?), arg reader[1037022]:_any[141](?), ref arg deserializer[1037028]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1037030 call compilerError "'deserialize' methods are not compiler-generated when a type has a user-defined 'serialize' method.")
    (1037034 return _void[46])
  }
  function c_array[47643](?).hash[1037036](arg _mt[1037039]:_MT[201], arg this[1037038]:c_array[47643](?)) : _unknown[42] "compiler generated" "inline" "last resort" "method"
  {
    unknown ret[1037048] "RVV" "temp"
    (1037053 'move' ret[1037048](1037052 'deref' 0))
    (1037050 return ret[1037048])
  }
  function chpl_fields_are_comparable[1037071](arg _arg1[1037073]:c_array[47643](?), arg _arg2[1037074]:c_array[47643](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1037092]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1037099] "expr temp" "maybe param" "maybe type" "temp"
    (1037102 'move' call_tmp[1037099](1037077 call size _mt[203] _arg1[1037073]))
    unknown call_tmp[1037104] "expr temp" "maybe param" "maybe type" "temp"
    (1037107 'move' call_tmp[1037104](1037081 call size _mt[203] _arg2[1037074]))
    unknown call_tmp[1037109] "expr temp" "maybe param" "maybe type" "temp"
    (1037112 'move' call_tmp[1037109](1037085 'call resolves' c"==" call_tmp[1037099] call_tmp[1037104]))
    (1037097 'move' ret[1037092](1037096 'deref' call_tmp[1037109]))
    (1037094 return ret[1037092])
  }
  function c_array[47643](?).==[1037055](arg _mt[1037057]:_MT[201], arg this[1037059]:c_array[47643](?), arg _arg1[1037061]:c_array[47643](?), arg _arg2[1037062]:c_array[47643](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1037141]:bool[19] "RVV" "temp"
    unknown call_tmp[1037153] "expr temp" "maybe param" "maybe type" "temp"
    (1037156 'move' call_tmp[1037153](1037120 call size _mt[203] _arg1[1037061]))
    unknown call_tmp[1037158] "expr temp" "maybe param" "maybe type" "temp"
    (1037161 'move' call_tmp[1037158](1037124 call size _mt[203] _arg2[1037062]))
    unknown call_tmp[1037163] "expr temp" "maybe param" "maybe type" "temp"
    (1037166 'move' call_tmp[1037163](1037128 call chpl_field_neq call_tmp[1037153] call_tmp[1037158]))
    if call_tmp[1037163]
    {
      (1037146 'move' ret[1037141](1037145 'deref' 0))
      gotoReturn _end_==[1037139] _end_==[1037139]
    }
    (1037151 'move' ret[1037141](1037150 'deref' 1))
    label _end_==[1037139]
    (1037143 return ret[1037141])
  }
  where {
    unknown call_tmp[1037168] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037171 'move' call_tmp[1037168](1037065 'typeof' _arg1[1037061]))
    unknown call_tmp[1037173] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037176 'move' call_tmp[1037173](1037067 'typeof' _arg2[1037062]))
    unknown call_tmp[1037178] "expr temp" "maybe param" "maybe type" "temp"
    (1037181 'move' call_tmp[1037178](1037069 call == call_tmp[1037168] call_tmp[1037173]))
    unknown call_tmp[1037183] "expr temp" "maybe param" "maybe type" "temp"
    (1037186 'move' call_tmp[1037183](1037114 call chpl_fields_are_comparable[1037071] _arg1[1037061] _arg2[1037062]))
    (1037118 '&' call_tmp[1037178] call_tmp[1037183])
  }
  function chpl_fields_are_comparable[1037204](arg _arg1[1037206]:c_array[47643](?), arg _arg2[1037207]:c_array[47643](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1037225]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1037232] "expr temp" "maybe param" "maybe type" "temp"
    (1037235 'move' call_tmp[1037232](1037210 call size _mt[203] _arg1[1037206]))
    unknown call_tmp[1037237] "expr temp" "maybe param" "maybe type" "temp"
    (1037240 'move' call_tmp[1037237](1037214 call size _mt[203] _arg2[1037207]))
    unknown call_tmp[1037242] "expr temp" "maybe param" "maybe type" "temp"
    (1037245 'move' call_tmp[1037242](1037218 'call resolves' c"!=" call_tmp[1037232] call_tmp[1037237]))
    (1037230 'move' ret[1037225](1037229 'deref' call_tmp[1037242]))
    (1037227 return ret[1037225])
  }
  function c_array[47643](?).!=[1037188](arg _mt[1037190]:_MT[201], arg this[1037192]:c_array[47643](?), arg _arg1[1037194]:c_array[47643](?), arg _arg2[1037195]:c_array[47643](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1037274]:bool[19] "RVV" "temp"
    unknown call_tmp[1037286] "expr temp" "maybe param" "maybe type" "temp"
    (1037289 'move' call_tmp[1037286](1037253 call size _mt[203] _arg1[1037194]))
    unknown call_tmp[1037291] "expr temp" "maybe param" "maybe type" "temp"
    (1037294 'move' call_tmp[1037291](1037257 call size _mt[203] _arg2[1037195]))
    unknown call_tmp[1037296] "expr temp" "maybe param" "maybe type" "temp"
    (1037299 'move' call_tmp[1037296](1037261 call chpl_field_neq call_tmp[1037286] call_tmp[1037291]))
    if call_tmp[1037296]
    {
      (1037279 'move' ret[1037274](1037278 'deref' 1))
      gotoReturn _end_!=[1037272] _end_!=[1037272]
    }
    (1037284 'move' ret[1037274](1037283 'deref' 0))
    label _end_!=[1037272]
    (1037276 return ret[1037274])
  }
  where {
    unknown call_tmp[1037301] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037304 'move' call_tmp[1037301](1037198 'typeof' _arg1[1037194]))
    unknown call_tmp[1037306] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037309 'move' call_tmp[1037306](1037200 'typeof' _arg2[1037195]))
    unknown call_tmp[1037311] "expr temp" "maybe param" "maybe type" "temp"
    (1037314 'move' call_tmp[1037311](1037202 call == call_tmp[1037301] call_tmp[1037306]))
    unknown call_tmp[1037316] "expr temp" "maybe param" "maybe type" "temp"
    (1037319 'move' call_tmp[1037316](1037247 call chpl_fields_are_comparable[1037204] _arg1[1037194] _arg2[1037195]))
    (1037251 '&' call_tmp[1037311] call_tmp[1037316])
  }
  function chpl_fields_are_comparable[1037337](arg _arg1[1037339]:c_array[47643](?), arg _arg2[1037340]:c_array[47643](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1037358]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1037365] "expr temp" "maybe param" "maybe type" "temp"
    (1037368 'move' call_tmp[1037365](1037343 call size _mt[203] _arg1[1037339]))
    unknown call_tmp[1037370] "expr temp" "maybe param" "maybe type" "temp"
    (1037373 'move' call_tmp[1037370](1037347 call size _mt[203] _arg2[1037340]))
    unknown call_tmp[1037375] "expr temp" "maybe param" "maybe type" "temp"
    (1037378 'move' call_tmp[1037375](1037351 'call resolves' c"<" call_tmp[1037365] call_tmp[1037370]))
    (1037363 'move' ret[1037358](1037362 'deref' call_tmp[1037375]))
    (1037360 return ret[1037358])
  }
  function c_array[47643](?).<[1037321](arg _mt[1037323]:_MT[201], arg this[1037325]:c_array[47643](?), arg _arg1[1037327]:c_array[47643](?), arg _arg2[1037328]:c_array[47643](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1037422]:bool[19] "RVV" "temp"
    unknown call_tmp[1037439] "expr temp" "maybe param" "maybe type" "temp"
    (1037442 'move' call_tmp[1037439](1037386 call size _mt[203] _arg1[1037327]))
    unknown call_tmp[1037444] "expr temp" "maybe param" "maybe type" "temp"
    (1037447 'move' call_tmp[1037444](1037390 call size _mt[203] _arg2[1037328]))
    unknown call_tmp[1037449] "expr temp" "maybe param" "maybe type" "temp"
    (1037452 'move' call_tmp[1037449](1037394 call chpl_field_lt call_tmp[1037439] call_tmp[1037444]))
    if call_tmp[1037449]
    {
      (1037427 'move' ret[1037422](1037426 'deref' 1))
      gotoReturn _end_<[1037420] _end_<[1037420]
    }
    unknown call_tmp[1037454] "expr temp" "maybe param" "maybe type" "temp"
    (1037457 'move' call_tmp[1037454](1037400 call size _mt[203] _arg1[1037327]))
    unknown call_tmp[1037459] "expr temp" "maybe param" "maybe type" "temp"
    (1037462 'move' call_tmp[1037459](1037404 call size _mt[203] _arg2[1037328]))
    unknown call_tmp[1037464] "expr temp" "maybe param" "maybe type" "temp"
    (1037467 'move' call_tmp[1037464](1037408 call chpl_field_gt call_tmp[1037454] call_tmp[1037459]))
    if call_tmp[1037464]
    {
      (1037432 'move' ret[1037422](1037431 'deref' 0))
      gotoReturn _end_<[1037420] _end_<[1037420]
    }
    (1037437 'move' ret[1037422](1037436 'deref' 0))
    label _end_<[1037420]
    (1037424 return ret[1037422])
  }
  where {
    unknown call_tmp[1037469] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037472 'move' call_tmp[1037469](1037331 'typeof' _arg1[1037327]))
    unknown call_tmp[1037474] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037477 'move' call_tmp[1037474](1037333 'typeof' _arg2[1037328]))
    unknown call_tmp[1037479] "expr temp" "maybe param" "maybe type" "temp"
    (1037482 'move' call_tmp[1037479](1037335 call == call_tmp[1037469] call_tmp[1037474]))
    unknown call_tmp[1037484] "expr temp" "maybe param" "maybe type" "temp"
    (1037487 'move' call_tmp[1037484](1037380 call chpl_fields_are_comparable[1037337] _arg1[1037327] _arg2[1037328]))
    (1037384 '&' call_tmp[1037479] call_tmp[1037484])
  }
  function chpl_fields_are_comparable[1037505](arg _arg1[1037507]:c_array[47643](?), arg _arg2[1037508]:c_array[47643](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1037526]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1037533] "expr temp" "maybe param" "maybe type" "temp"
    (1037536 'move' call_tmp[1037533](1037511 call size _mt[203] _arg1[1037507]))
    unknown call_tmp[1037538] "expr temp" "maybe param" "maybe type" "temp"
    (1037541 'move' call_tmp[1037538](1037515 call size _mt[203] _arg2[1037508]))
    unknown call_tmp[1037543] "expr temp" "maybe param" "maybe type" "temp"
    (1037546 'move' call_tmp[1037543](1037519 'call resolves' c"<=" call_tmp[1037533] call_tmp[1037538]))
    (1037531 'move' ret[1037526](1037530 'deref' call_tmp[1037543]))
    (1037528 return ret[1037526])
  }
  function c_array[47643](?).<=[1037489](arg _mt[1037491]:_MT[201], arg this[1037493]:c_array[47643](?), arg _arg1[1037495]:c_array[47643](?), arg _arg2[1037496]:c_array[47643](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1037590]:bool[19] "RVV" "temp"
    unknown call_tmp[1037607] "expr temp" "maybe param" "maybe type" "temp"
    (1037610 'move' call_tmp[1037607](1037554 call size _mt[203] _arg1[1037495]))
    unknown call_tmp[1037612] "expr temp" "maybe param" "maybe type" "temp"
    (1037615 'move' call_tmp[1037612](1037558 call size _mt[203] _arg2[1037496]))
    unknown call_tmp[1037617] "expr temp" "maybe param" "maybe type" "temp"
    (1037620 'move' call_tmp[1037617](1037562 call chpl_field_lt call_tmp[1037607] call_tmp[1037612]))
    if call_tmp[1037617]
    {
      (1037595 'move' ret[1037590](1037594 'deref' 1))
      gotoReturn _end_<=[1037588] _end_<=[1037588]
    }
    unknown call_tmp[1037622] "expr temp" "maybe param" "maybe type" "temp"
    (1037625 'move' call_tmp[1037622](1037568 call size _mt[203] _arg1[1037495]))
    unknown call_tmp[1037627] "expr temp" "maybe param" "maybe type" "temp"
    (1037630 'move' call_tmp[1037627](1037572 call size _mt[203] _arg2[1037496]))
    unknown call_tmp[1037632] "expr temp" "maybe param" "maybe type" "temp"
    (1037635 'move' call_tmp[1037632](1037576 call chpl_field_gt call_tmp[1037622] call_tmp[1037627]))
    if call_tmp[1037632]
    {
      (1037600 'move' ret[1037590](1037599 'deref' 0))
      gotoReturn _end_<=[1037588] _end_<=[1037588]
    }
    (1037605 'move' ret[1037590](1037604 'deref' 1))
    label _end_<=[1037588]
    (1037592 return ret[1037590])
  }
  where {
    unknown call_tmp[1037637] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037640 'move' call_tmp[1037637](1037499 'typeof' _arg1[1037495]))
    unknown call_tmp[1037642] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037645 'move' call_tmp[1037642](1037501 'typeof' _arg2[1037496]))
    unknown call_tmp[1037647] "expr temp" "maybe param" "maybe type" "temp"
    (1037650 'move' call_tmp[1037647](1037503 call == call_tmp[1037637] call_tmp[1037642]))
    unknown call_tmp[1037652] "expr temp" "maybe param" "maybe type" "temp"
    (1037655 'move' call_tmp[1037652](1037548 call chpl_fields_are_comparable[1037505] _arg1[1037495] _arg2[1037496]))
    (1037552 '&' call_tmp[1037647] call_tmp[1037652])
  }
  function chpl_fields_are_comparable[1037673](arg _arg1[1037675]:c_array[47643](?), arg _arg2[1037676]:c_array[47643](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1037694]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1037701] "expr temp" "maybe param" "maybe type" "temp"
    (1037704 'move' call_tmp[1037701](1037679 call size _mt[203] _arg1[1037675]))
    unknown call_tmp[1037706] "expr temp" "maybe param" "maybe type" "temp"
    (1037709 'move' call_tmp[1037706](1037683 call size _mt[203] _arg2[1037676]))
    unknown call_tmp[1037711] "expr temp" "maybe param" "maybe type" "temp"
    (1037714 'move' call_tmp[1037711](1037687 'call resolves' c">" call_tmp[1037701] call_tmp[1037706]))
    (1037699 'move' ret[1037694](1037698 'deref' call_tmp[1037711]))
    (1037696 return ret[1037694])
  }
  function c_array[47643](?).>[1037657](arg _mt[1037659]:_MT[201], arg this[1037661]:c_array[47643](?), arg _arg1[1037663]:c_array[47643](?), arg _arg2[1037664]:c_array[47643](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1037758]:bool[19] "RVV" "temp"
    unknown call_tmp[1037775] "expr temp" "maybe param" "maybe type" "temp"
    (1037778 'move' call_tmp[1037775](1037722 call size _mt[203] _arg1[1037663]))
    unknown call_tmp[1037780] "expr temp" "maybe param" "maybe type" "temp"
    (1037783 'move' call_tmp[1037780](1037726 call size _mt[203] _arg2[1037664]))
    unknown call_tmp[1037785] "expr temp" "maybe param" "maybe type" "temp"
    (1037788 'move' call_tmp[1037785](1037730 call chpl_field_gt call_tmp[1037775] call_tmp[1037780]))
    if call_tmp[1037785]
    {
      (1037763 'move' ret[1037758](1037762 'deref' 1))
      gotoReturn _end_>[1037756] _end_>[1037756]
    }
    unknown call_tmp[1037790] "expr temp" "maybe param" "maybe type" "temp"
    (1037793 'move' call_tmp[1037790](1037736 call size _mt[203] _arg1[1037663]))
    unknown call_tmp[1037795] "expr temp" "maybe param" "maybe type" "temp"
    (1037798 'move' call_tmp[1037795](1037740 call size _mt[203] _arg2[1037664]))
    unknown call_tmp[1037800] "expr temp" "maybe param" "maybe type" "temp"
    (1037803 'move' call_tmp[1037800](1037744 call chpl_field_lt call_tmp[1037790] call_tmp[1037795]))
    if call_tmp[1037800]
    {
      (1037768 'move' ret[1037758](1037767 'deref' 0))
      gotoReturn _end_>[1037756] _end_>[1037756]
    }
    (1037773 'move' ret[1037758](1037772 'deref' 0))
    label _end_>[1037756]
    (1037760 return ret[1037758])
  }
  where {
    unknown call_tmp[1037805] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037808 'move' call_tmp[1037805](1037667 'typeof' _arg1[1037663]))
    unknown call_tmp[1037810] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037813 'move' call_tmp[1037810](1037669 'typeof' _arg2[1037664]))
    unknown call_tmp[1037815] "expr temp" "maybe param" "maybe type" "temp"
    (1037818 'move' call_tmp[1037815](1037671 call == call_tmp[1037805] call_tmp[1037810]))
    unknown call_tmp[1037820] "expr temp" "maybe param" "maybe type" "temp"
    (1037823 'move' call_tmp[1037820](1037716 call chpl_fields_are_comparable[1037673] _arg1[1037663] _arg2[1037664]))
    (1037720 '&' call_tmp[1037815] call_tmp[1037820])
  }
  function chpl_fields_are_comparable[1037841](arg _arg1[1037843]:c_array[47643](?), arg _arg2[1037844]:c_array[47643](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1037862]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1037869] "expr temp" "maybe param" "maybe type" "temp"
    (1037872 'move' call_tmp[1037869](1037847 call size _mt[203] _arg1[1037843]))
    unknown call_tmp[1037874] "expr temp" "maybe param" "maybe type" "temp"
    (1037877 'move' call_tmp[1037874](1037851 call size _mt[203] _arg2[1037844]))
    unknown call_tmp[1037879] "expr temp" "maybe param" "maybe type" "temp"
    (1037882 'move' call_tmp[1037879](1037855 'call resolves' c">=" call_tmp[1037869] call_tmp[1037874]))
    (1037867 'move' ret[1037862](1037866 'deref' call_tmp[1037879]))
    (1037864 return ret[1037862])
  }
  function c_array[47643](?).>=[1037825](arg _mt[1037827]:_MT[201], arg this[1037829]:c_array[47643](?), arg _arg1[1037831]:c_array[47643](?), arg _arg2[1037832]:c_array[47643](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1037926]:bool[19] "RVV" "temp"
    unknown call_tmp[1037943] "expr temp" "maybe param" "maybe type" "temp"
    (1037946 'move' call_tmp[1037943](1037890 call size _mt[203] _arg1[1037831]))
    unknown call_tmp[1037948] "expr temp" "maybe param" "maybe type" "temp"
    (1037951 'move' call_tmp[1037948](1037894 call size _mt[203] _arg2[1037832]))
    unknown call_tmp[1037953] "expr temp" "maybe param" "maybe type" "temp"
    (1037956 'move' call_tmp[1037953](1037898 call chpl_field_gt call_tmp[1037943] call_tmp[1037948]))
    if call_tmp[1037953]
    {
      (1037931 'move' ret[1037926](1037930 'deref' 1))
      gotoReturn _end_>=[1037924] _end_>=[1037924]
    }
    unknown call_tmp[1037958] "expr temp" "maybe param" "maybe type" "temp"
    (1037961 'move' call_tmp[1037958](1037904 call size _mt[203] _arg1[1037831]))
    unknown call_tmp[1037963] "expr temp" "maybe param" "maybe type" "temp"
    (1037966 'move' call_tmp[1037963](1037908 call size _mt[203] _arg2[1037832]))
    unknown call_tmp[1037968] "expr temp" "maybe param" "maybe type" "temp"
    (1037971 'move' call_tmp[1037968](1037912 call chpl_field_lt call_tmp[1037958] call_tmp[1037963]))
    if call_tmp[1037968]
    {
      (1037936 'move' ret[1037926](1037935 'deref' 0))
      gotoReturn _end_>=[1037924] _end_>=[1037924]
    }
    (1037941 'move' ret[1037926](1037940 'deref' 1))
    label _end_>=[1037924]
    (1037928 return ret[1037926])
  }
  where {
    unknown call_tmp[1037973] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037976 'move' call_tmp[1037973](1037835 'typeof' _arg1[1037831]))
    unknown call_tmp[1037978] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1037981 'move' call_tmp[1037978](1037837 'typeof' _arg2[1037832]))
    unknown call_tmp[1037983] "expr temp" "maybe param" "maybe type" "temp"
    (1037986 'move' call_tmp[1037983](1037839 call == call_tmp[1037973] call_tmp[1037978]))
    unknown call_tmp[1037988] "expr temp" "maybe param" "maybe type" "temp"
    (1037991 'move' call_tmp[1037988](1037884 call chpl_fields_are_comparable[1037841] _arg1[1037831] _arg2[1037832]))
    (1037888 '&' call_tmp[1037983] call_tmp[1037988])
  }
  type c_array[47643](?) unknown eltType[46995] "type variable" unknown size[46998] "param"
  function c_array[47643](?).=[47645](arg _mt[47659]:_MT[201], arg this[47648]:c_array[47643](?) :
  c_array[47643](?), ref arg lhs[47652]:c_array[47643](?), arg rhs[47656]:c_array[47643](?)) : _unknown[42] "assignop" "method" "operator" "no return value for void"
  {
    unknown call_tmp[763106] "expr temp" "maybe param" "maybe type" "temp"
    (763109 'move' call_tmp[763106](47671 call eltType _mt[203] lhs[47652]))
    unknown call_tmp[763113] "expr temp" "maybe param" "maybe type" "temp"
    (763116 'move' call_tmp[763113](47675 call eltType _mt[203] rhs[47656]))
    unknown call_tmp[763118] "expr temp" "maybe param" "maybe type" "temp"
    (763121 'move' call_tmp[763118](47668 call != call_tmp[763106] call_tmp[763113]))
    unknown call_tmp[763123] "expr temp" "maybe param" "maybe type" "temp"
    (763126 'move' call_tmp[763123](47678 call _cond_test call_tmp[763118]))
    if call_tmp[763123]
    {
      (47663 call compilerError "element type mismatch in c_array assignment")
    }
    unknown call_tmp[763130] "expr temp" "maybe param" "maybe type" "temp"
    (763133 'move' call_tmp[763130](47692 call size _mt[203] lhs[47652]))
    unknown call_tmp[763137] "expr temp" "maybe param" "maybe type" "temp"
    (763140 'move' call_tmp[763137](47696 call size _mt[203] rhs[47656]))
    unknown call_tmp[763142] "expr temp" "maybe param" "maybe type" "temp"
    (763145 'move' call_tmp[763142](47689 call != call_tmp[763130] call_tmp[763137]))
    unknown call_tmp[763147] "expr temp" "maybe param" "maybe type" "temp"
    (763150 'move' call_tmp[763147](47699 call _cond_test call_tmp[763142]))
    if call_tmp[763147]
    {
      (47684 call compilerError "size mismatch in c_array assignment")
    }
    {
      unknown _indexOfInterest[47724] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[47725] "expr temp" "temp"
      unknown call_tmp[763154] "expr temp" "maybe param" "maybe type" "temp"
      (763157 'move' call_tmp[763154](47740 call size _mt[203] lhs[47652]))
      unknown call_tmp[763159] "expr temp" "maybe param" "maybe type" "temp"
      (763162 'move' call_tmp[763159](47744 call chpl_direct_counted_range_iter 0 call_tmp[763154]))
      (47734 'move' _iterator[47725](47732 call _getIterator call_tmp[763159]))
      Defer
      {
        {
          (47759 call _freeIterator _iterator[47725])
        }
      }
      { scopeless type
        (47749 'move' _indexOfInterest[47724](47746 call iteratorIndex _iterator[47725]))
      }
      ForLoop[47726]
      {
        unknown i[47704] "index var" "insert auto destroy"
        (549638 'end of statement')
        (47754 'move' i[47704] _indexOfInterest[47724])
        (549639 'end of statement' i[47704])
        {
          unknown call_tmp[763164] "expr temp" "maybe param" "maybe type" "temp"
          (763167 'move' call_tmp[763164](47719 call lhs[47652] i[47704]))
          unknown call_tmp[763169] "expr temp" "maybe param" "maybe type" "temp"
          (763172 'move' call_tmp[763169](47722 call rhs[47656] i[47704]))
          (47716 call = call_tmp[763164] call_tmp[763169])
          (549641 'end of statement' i[47704])
        }
        label _continueLabel[47729]
        _indexOfInterest[47724]
        _iterator[47725]
      }
      label _breakLabel[47730]
    }
    (597531 return _void[46])
  }
  function =[47768](ref arg lhs[47771]:c_ptr[46891](?), ref arg rhs[47775]:c_array[47643](?)) : _unknown[42] "assignop" "operator" "no return value for void"
  {
    unknown tmp[479160] "maybe param" "temp"
    unknown call_tmp[763176] "expr temp" "maybe param" "maybe type" "temp"
    (763179 'move' call_tmp[763176](47788 call eltType _mt[203] lhs[47771]))
    unknown call_tmp[763183] "expr temp" "maybe param" "maybe type" "temp"
    (763186 'move' call_tmp[763183](47792 call eltType _mt[203] rhs[47775]))
    (479171 'move' tmp[479160](47785 call != call_tmp[763176] call_tmp[763183]))
    unknown call_tmp[763188] "expr temp" "maybe param" "maybe type" "temp"
    (763191 'move' call_tmp[763188](479173 call _cond_invalid tmp[479160]))
    if call_tmp[763188]
    {
      (479176 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[667838] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667839] "maybe param" "temp"
    unknown call_tmp[763193] "expr temp" "maybe param" "maybe type" "temp"
    (763196 'move' call_tmp[763193](479161 call isTrue tmp[479160]))
    (667844 'move' tmp[667839](667842 call _cond_test call_tmp[763193]))
    if tmp[667839]
    {
      unknown tmp[667846] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763200] "expr temp" "maybe param" "maybe type" "temp"
      (763203 'move' call_tmp[763200](47798 call eltType _mt[203] lhs[47771]))
      unknown call_tmp[763205] "expr temp" "maybe param" "maybe type" "temp"
      (763208 'move' call_tmp[763205](47795 call != call_tmp[763200] void[4]))
      (667848 'move' tmp[667846](479164 call isTrue call_tmp[763205]))
      (667853 'move' tmp[667838](667850 '_paramFoldLogical' tmp[667839] tmp[667846]))
    }
    {
      (667858 'move' tmp[667838](667855 '_paramFoldLogical' tmp[667839] 0))
    }
    unknown call_tmp[763210] "expr temp" "maybe param" "maybe type" "temp"
    (763213 'move' call_tmp[763210](47802 call _cond_test tmp[667838]))
    if call_tmp[763210]
    {
      (47780 call compilerError "element type mismatch in c_array assignment")
    }
    unknown call_tmp[763215] "expr temp" "maybe param" "maybe type" "temp"
    (763218 'move' call_tmp[763215](47813 call rhs[47775] 0))
    unknown call_tmp[763220] "expr temp" "maybe param" "maybe type" "temp"
    (763223 'move' call_tmp[763220](47811 call c_ptrTo call_tmp[763215]))
    (47807 call = lhs[47771] call_tmp[763220])
    (597533 return _void[46])
  }
  unknown writable_c_ptr_void[47818] "dead at end of block" "insert auto destroy" "type variable"
  function _unknown[42].serialize[47823](arg _mt[47833]:_MT[201], arg this[47826] :
  writable_c_ptr_void[47818], arg writer[47829]:_any[141](?), ref arg serializer[47831]:_any[141](?)) : _unknown[42] throws "inline" "method" "no return value for void"
  {
    unknown call_tmp[763227] "expr temp" "maybe param" "maybe type" "temp"
    (763230 'move' call_tmp[763227](47846 call : this[47826] c_uintptr[602]))
    (47842 call(47839 call (partial) writef _mt[203] writer[47829]) "0x%xu" call_tmp[763227])
    (597535 return _void[46])
  }
  function c_ptr[46891](?).=[47852](arg _mt[47866]:_MT[201], arg this[47855]:c_ptr[46891](?) :
  c_ptr[46891](?), ref arg lhs[47859]:c_ptr[46891](?), arg rhs[47863]:c_ptr[46891](?)) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    unknown tmp[479181] "maybe param" "temp"
    unknown tmp[479202] "maybe param" "temp"
    unknown call_tmp[763234] "expr temp" "maybe param" "maybe type" "temp"
    (763237 'move' call_tmp[763234](47882 call eltType _mt[203] lhs[47859]))
    unknown call_tmp[763241] "expr temp" "maybe param" "maybe type" "temp"
    (763244 'move' call_tmp[763241](47886 call eltType _mt[203] rhs[47863]))
    (479213 'move' tmp[479202](47879 call != call_tmp[763234] call_tmp[763241]))
    unknown call_tmp[763246] "expr temp" "maybe param" "maybe type" "temp"
    (763249 'move' call_tmp[763246](479215 call _cond_invalid tmp[479202]))
    if call_tmp[763246]
    {
      (479218 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[667865] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667866] "maybe param" "temp"
    unknown call_tmp[763251] "expr temp" "maybe param" "maybe type" "temp"
    (763254 'move' call_tmp[763251](479203 call isTrue tmp[479202]))
    (667871 'move' tmp[667866](667869 call _cond_test call_tmp[763251]))
    if tmp[667866]
    {
      unknown tmp[667873] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763258] "expr temp" "maybe param" "maybe type" "temp"
      (763261 'move' call_tmp[763258](47892 call eltType _mt[203] lhs[47859]))
      unknown call_tmp[763263] "expr temp" "maybe param" "maybe type" "temp"
      (763266 'move' call_tmp[763263](47889 call != call_tmp[763258] void[4]))
      (667875 'move' tmp[667873](479206 call isTrue call_tmp[763263]))
      (667880 'move' tmp[667865](667877 '_paramFoldLogical' tmp[667866] tmp[667873]))
    }
    {
      (667885 'move' tmp[667865](667882 '_paramFoldLogical' tmp[667866] 0))
    }
    (479192 'move' tmp[479181] tmp[667865])
    unknown call_tmp[763268] "expr temp" "maybe param" "maybe type" "temp"
    (763271 'move' call_tmp[763268](479194 call _cond_invalid tmp[479181]))
    if call_tmp[763268]
    {
      (479197 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[667892] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667893] "maybe param" "temp"
    unknown call_tmp[763273] "expr temp" "maybe param" "maybe type" "temp"
    (763276 'move' call_tmp[763273](479182 call isTrue tmp[479181]))
    (667898 'move' tmp[667893](667896 call _cond_test call_tmp[763273]))
    if tmp[667893]
    {
      unknown tmp[667900] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763280] "expr temp" "maybe param" "maybe type" "temp"
      (763283 'move' call_tmp[763280](47899 call eltType _mt[203] rhs[47863]))
      unknown call_tmp[763285] "expr temp" "maybe param" "maybe type" "temp"
      (763288 'move' call_tmp[763285](47896 call != call_tmp[763280] void[4]))
      (667902 'move' tmp[667900](479185 call isTrue call_tmp[763285]))
      (667907 'move' tmp[667892](667904 '_paramFoldLogical' tmp[667893] tmp[667900]))
    }
    {
      (667912 'move' tmp[667892](667909 '_paramFoldLogical' tmp[667893] 0))
    }
    unknown call_tmp[763290] "expr temp" "maybe param" "maybe type" "temp"
    (763293 'move' call_tmp[763290](47903 call _cond_test tmp[667892]))
    if call_tmp[763290]
    {
      (47870 call compilerError "element type mismatch in c_ptr assignment")
    }
    (47908 '=' lhs[47859] rhs[47863])
    (597537 return _void[46])
  }
  function c_ptr[46891](?).=[47913](arg _mt[47931]:_MT[201], arg this[47916]:c_ptr[46891](?) :
  c_ptr[46891](?), ref arg lhs[47922] :
  (47920 call c_ptr[46891](?) void[4]), arg rhs[47928] :
  (47926 call c_ptr[46891](?) void[4])) : _unknown[42] "assignop" "inline" "last resort" "method" "operator" "no return value for void"
  {
    (47934 '=' lhs[47922] rhs[47928])
    (597539 return _void[46])
  }
  function c_ptrConst[46990](?).=[47939](arg _mt[47953]:_MT[201], arg this[47942]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), ref arg lhs[47946]:c_ptrConst[46990](?), arg rhs[47950]:c_ptrConst[46990](?)) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    unknown tmp[479223] "maybe param" "temp"
    unknown tmp[479244] "maybe param" "temp"
    unknown call_tmp[763297] "expr temp" "maybe param" "maybe type" "temp"
    (763300 'move' call_tmp[763297](47969 call eltType _mt[203] lhs[47946]))
    unknown call_tmp[763304] "expr temp" "maybe param" "maybe type" "temp"
    (763307 'move' call_tmp[763304](47973 call eltType _mt[203] rhs[47950]))
    (479255 'move' tmp[479244](47966 call != call_tmp[763297] call_tmp[763304]))
    unknown call_tmp[763309] "expr temp" "maybe param" "maybe type" "temp"
    (763312 'move' call_tmp[763309](479257 call _cond_invalid tmp[479244]))
    if call_tmp[763309]
    {
      (479260 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[667919] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667920] "maybe param" "temp"
    unknown call_tmp[763314] "expr temp" "maybe param" "maybe type" "temp"
    (763317 'move' call_tmp[763314](479245 call isTrue tmp[479244]))
    (667925 'move' tmp[667920](667923 call _cond_test call_tmp[763314]))
    if tmp[667920]
    {
      unknown tmp[667927] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763321] "expr temp" "maybe param" "maybe type" "temp"
      (763324 'move' call_tmp[763321](47979 call eltType _mt[203] lhs[47946]))
      unknown call_tmp[763326] "expr temp" "maybe param" "maybe type" "temp"
      (763329 'move' call_tmp[763326](47976 call != call_tmp[763321] void[4]))
      (667929 'move' tmp[667927](479248 call isTrue call_tmp[763326]))
      (667934 'move' tmp[667919](667931 '_paramFoldLogical' tmp[667920] tmp[667927]))
    }
    {
      (667939 'move' tmp[667919](667936 '_paramFoldLogical' tmp[667920] 0))
    }
    (479234 'move' tmp[479223] tmp[667919])
    unknown call_tmp[763331] "expr temp" "maybe param" "maybe type" "temp"
    (763334 'move' call_tmp[763331](479236 call _cond_invalid tmp[479223]))
    if call_tmp[763331]
    {
      (479239 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[667946] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667947] "maybe param" "temp"
    unknown call_tmp[763336] "expr temp" "maybe param" "maybe type" "temp"
    (763339 'move' call_tmp[763336](479224 call isTrue tmp[479223]))
    (667952 'move' tmp[667947](667950 call _cond_test call_tmp[763336]))
    if tmp[667947]
    {
      unknown tmp[667954] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763343] "expr temp" "maybe param" "maybe type" "temp"
      (763346 'move' call_tmp[763343](47986 call eltType _mt[203] rhs[47950]))
      unknown call_tmp[763348] "expr temp" "maybe param" "maybe type" "temp"
      (763351 'move' call_tmp[763348](47983 call != call_tmp[763343] void[4]))
      (667956 'move' tmp[667954](479227 call isTrue call_tmp[763348]))
      (667961 'move' tmp[667946](667958 '_paramFoldLogical' tmp[667947] tmp[667954]))
    }
    {
      (667966 'move' tmp[667946](667963 '_paramFoldLogical' tmp[667947] 0))
    }
    unknown call_tmp[763353] "expr temp" "maybe param" "maybe type" "temp"
    (763356 'move' call_tmp[763353](47990 call _cond_test tmp[667946]))
    if call_tmp[763353]
    {
      (47957 call compilerError "element type mismatch in c_ptrConst assignment")
    }
    (47995 '=' lhs[47946] rhs[47950])
    (597541 return _void[46])
  }
  function c_ptr[46891](?).=[48000](arg _mt[48014]:_MT[201], arg this[48003]:c_ptr[46891](?) :
  c_ptr[46891](?), ref arg lhs[48007]:c_ptr[46891](?), arg rhs[48011]:_nilType[30]) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (48017 '=' lhs[48007] nil[32])
    (597543 return _void[46])
  }
  function c_ptrConst[46990](?).=[48022](arg _mt[48036]:_MT[201], arg this[48025]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), ref arg lhs[48029]:c_ptrConst[46990](?), arg rhs[48033]:_nilType[30]) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (48039 '=' lhs[48029] nil[32])
    (597545 return _void[46])
  }
  function :[48044](arg x[48047] :
  c_fn_ptr[51982], arg t[48053] :
  (48051 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597549] "RVV" "temp"
    unknown call_tmp[763358] "expr temp" "maybe param" "maybe type" "temp"
    (763361 'move' call_tmp[763358](48060 call c_ptr[46891](?) void[4]))
    unknown call_tmp[763363] "expr temp" "maybe param" "maybe type" "temp"
    (763366 'move' call_tmp[763363](48058 'cast' call_tmp[763358] x[48047]))
    (597554 'move' ret[597549](597553 'deref' call_tmp[763363]))
    (597551 return ret[597549])
  }
  function ==[48065](arg a[48068] :
  c_fn_ptr[51982], arg b[48072]:_nilType[30]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597558] "RVV" "temp"
    unknown call_tmp[763368] "expr temp" "maybe param" "maybe type" "temp"
    (763371 'move' call_tmp[763368](48083 call c_ptr[46891](?) void[4]))
    unknown call_tmp[763373] "expr temp" "maybe param" "maybe type" "temp"
    (763376 'move' call_tmp[763373](48079 call : a[48068] call_tmp[763368]))
    unknown call_tmp[763378] "expr temp" "maybe param" "maybe type" "temp"
    (763381 'move' call_tmp[763378](48077 call == call_tmp[763373] b[48072]))
    (597563 'move' ret[597558](597562 'deref' call_tmp[763378]))
    (597560 return ret[597558])
  }
  function ==[48088](arg a[48091]:_nilType[30], arg b[48095] :
  c_fn_ptr[51982]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597567] "RVV" "temp"
    unknown call_tmp[763383] "expr temp" "maybe param" "maybe type" "temp"
    (763386 'move' call_tmp[763383](48100 call == b[48095] a[48091]))
    (597572 'move' ret[597567](597571 'deref' call_tmp[763383]))
    (597569 return ret[597567])
  }
  function !=[48106](arg a[48109] :
  c_fn_ptr[51982], arg b[48113]:_nilType[30]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597576] "RVV" "temp"
    unknown call_tmp[763388] "expr temp" "maybe param" "maybe type" "temp"
    (763391 'move' call_tmp[763388](48120 call == a[48109] b[48113]))
    unknown call_tmp[763393] "expr temp" "maybe param" "maybe type" "temp"
    (763396 'move' call_tmp[763393](48118 call ! call_tmp[763388]))
    (597581 'move' ret[597576](597580 'deref' call_tmp[763393]))
    (597578 return ret[597576])
  }
  function !=[48126](arg a[48129]:_nilType[30], arg b[48133] :
  c_fn_ptr[51982]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597585] "RVV" "temp"
    unknown call_tmp[763398] "expr temp" "maybe param" "maybe type" "temp"
    (763401 'move' call_tmp[763398](48138 call != b[48133] a[48129]))
    (597590 'move' ret[597585](597589 'deref' call_tmp[763398]))
    (597587 return ret[597585])
  }
  function pointeeCastStrictAliasingAllowed[48144](arg from[48146]:_any[141](?), arg to[48148]:_any[141](?)) param : _unknown[42] "inline"
  {
    unknown ret[597594] "RVV" "param" "temp"
    unknown tmp[479286] "maybe param" "temp"
    (479297 'move' tmp[479286](48216 call isAnyCPtr from[48146]))
    unknown call_tmp[763403] "expr temp" "maybe param" "maybe type" "temp"
    (763406 'move' call_tmp[763403](479299 call _cond_invalid tmp[479286]))
    if call_tmp[763403]
    {
      (479302 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[667973] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[667974] "maybe param" "temp"
    unknown call_tmp[763408] "expr temp" "maybe param" "maybe type" "temp"
    (763411 'move' call_tmp[763408](479287 call isTrue tmp[479286]))
    (667979 'move' tmp[667974](667977 call _cond_test call_tmp[763408]))
    if tmp[667974]
    {
      (667984 'move' tmp[667973](667981 '_paramFoldLogical' tmp[667974] 1))
    }
    {
      unknown tmp[667986] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763413] "expr temp" "maybe param" "maybe type" "temp"
      (763416 'move' call_tmp[763413](48219 call isAnyCPtr to[48148]))
      (667988 'move' tmp[667986](479291 call isTrue call_tmp[763413]))
      (667993 'move' tmp[667973](667990 '_paramFoldLogical' tmp[667974] tmp[667986]))
    }
    unknown call_tmp[763418] "expr temp" "maybe param" "maybe type" "temp"
    (763421 'move' call_tmp[763418](48221 call _cond_test tmp[667973]))
    if call_tmp[763418]
    {
      unknown tmp[479265] "maybe param" "temp"
      (479276 'move' tmp[479265](48203 call isAnyCPtr from[48146]))
      unknown call_tmp[763423] "expr temp" "maybe param" "maybe type" "temp"
      (763426 'move' call_tmp[763423](479278 call _cond_invalid tmp[479265]))
      if call_tmp[763423]
      {
        (479281 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[668000] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[668001] "maybe param" "temp"
      unknown call_tmp[763428] "expr temp" "maybe param" "maybe type" "temp"
      (763431 'move' call_tmp[763428](479266 call isTrue tmp[479265]))
      (668006 'move' tmp[668001](668004 call _cond_test call_tmp[763428]))
      if tmp[668001]
      {
        unknown tmp[668008] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[763433] "expr temp" "maybe param" "maybe type" "temp"
        (763436 'move' call_tmp[763433](48206 call isAnyCPtr to[48148]))
        (668010 'move' tmp[668008](479269 call isTrue call_tmp[763433]))
        (668015 'move' tmp[668000](668012 '_paramFoldLogical' tmp[668001] tmp[668008]))
      }
      {
        (668020 'move' tmp[668000](668017 '_paramFoldLogical' tmp[668001] 0))
      }
      unknown call_tmp[763438] "expr temp" "maybe param" "maybe type" "temp"
      (763441 'move' call_tmp[763438](48208 call _cond_test tmp[668000]))
      if call_tmp[763438]
      {
        unknown call_tmp[763445] "expr temp" "maybe param" "maybe type" "temp"
        (763448 'move' call_tmp[763445](48158 call eltType _mt[203] from[48146]))
        unknown call_tmp[763452] "expr temp" "maybe param" "maybe type" "temp"
        (763455 'move' call_tmp[763452](48162 call eltType _mt[203] to[48148]))
        unknown call_tmp[763457] "expr temp" "maybe param" "maybe type" "temp"
        (763460 'move' call_tmp[763457](48156 call pointeeCastStrictAliasingAllowed call_tmp[763445] call_tmp[763452]))
        (597600 'move' ret[597594](597599 'coerce' call_tmp[763457] bool[19]))
        gotoReturn _end_pointeeCastStrictAliasingAllowed[597592] _end_pointeeCastStrictAliasingAllowed[597592]
      }
      {
        unknown call_tmp[763462] "expr temp" "maybe param" "maybe type" "temp"
        (763465 'move' call_tmp[763462](48191 call == from[48146] chpl_c_string[16]))
        unknown call_tmp[763467] "expr temp" "maybe param" "maybe type" "temp"
        (763470 'move' call_tmp[763467](48195 call _cond_test call_tmp[763462]))
        if call_tmp[763467]
        {
          unknown call_tmp[763474] "expr temp" "maybe param" "maybe type" "temp"
          (763477 'move' call_tmp[763474](48171 call eltType _mt[203] to[48148]))
          unknown call_tmp[763479] "expr temp" "maybe param" "maybe type" "temp"
          (763482 'move' call_tmp[763479](48168 call pointeeCastStrictAliasingAllowed c_char[562] call_tmp[763474]))
          (597606 'move' ret[597594](597605 'coerce' call_tmp[763479] bool[19]))
          gotoReturn _end_pointeeCastStrictAliasingAllowed[597592] _end_pointeeCastStrictAliasingAllowed[597592]
        }
        {
          unknown call_tmp[763484] "expr temp" "maybe param" "maybe type" "temp"
          (763487 'move' call_tmp[763484](48183 call == to[48148] chpl_c_string[16]))
          unknown call_tmp[763489] "expr temp" "maybe param" "maybe type" "temp"
          (763492 'move' call_tmp[763489](48187 call _cond_test call_tmp[763484]))
          if call_tmp[763489]
          {
            unknown call_tmp[763496] "expr temp" "maybe param" "maybe type" "temp"
            (763499 'move' call_tmp[763496](48179 call eltType _mt[203] from[48146]))
            unknown call_tmp[763501] "expr temp" "maybe param" "maybe type" "temp"
            (763504 'move' call_tmp[763501](48177 call pointeeCastStrictAliasingAllowed call_tmp[763496] c_char[562]))
            (597612 'move' ret[597594](597611 'coerce' call_tmp[763501] bool[19]))
            gotoReturn _end_pointeeCastStrictAliasingAllowed[597592] _end_pointeeCastStrictAliasingAllowed[597592]
          }
        }
      }
    }
    unknown tmp[479307] "maybe param" "temp"
    (479318 'move' tmp[479307](48230 call == from[48146] void[4]))
    unknown call_tmp[763506] "expr temp" "maybe param" "maybe type" "temp"
    (763509 'move' call_tmp[763506](479320 call _cond_invalid tmp[479307]))
    if call_tmp[763506]
    {
      (479323 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668027] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668028] "maybe param" "temp"
    unknown call_tmp[763511] "expr temp" "maybe param" "maybe type" "temp"
    (763514 'move' call_tmp[763511](479308 call isTrue tmp[479307]))
    (668033 'move' tmp[668028](668031 call _cond_test call_tmp[763511]))
    if tmp[668028]
    {
      (668038 'move' tmp[668027](668035 '_paramFoldLogical' tmp[668028] 1))
    }
    {
      unknown tmp[668040] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763516] "expr temp" "maybe param" "maybe type" "temp"
      (763519 'move' call_tmp[763516](48234 call == to[48148] void[4]))
      (668042 'move' tmp[668040](479312 call isTrue call_tmp[763516]))
      (668047 'move' tmp[668027](668044 '_paramFoldLogical' tmp[668028] tmp[668040]))
    }
    unknown call_tmp[763521] "expr temp" "maybe param" "maybe type" "temp"
    (763524 'move' call_tmp[763521](48238 call _cond_test tmp[668027]))
    if call_tmp[763521]
    {
      (597618 'move' ret[597594](597617 'coerce' 1 bool[19]))
      gotoReturn _end_pointeeCastStrictAliasingAllowed[597592] _end_pointeeCastStrictAliasingAllowed[597592]
    }
    unknown call_tmp[763526] "expr temp" "maybe param" "maybe type" "temp"
    (763529 'move' call_tmp[763526](48245 call == from[48146] to[48148]))
    unknown call_tmp[763531] "expr temp" "maybe param" "maybe type" "temp"
    (763534 'move' call_tmp[763531](48249 call _cond_test call_tmp[763526]))
    if call_tmp[763531]
    {
      (597624 'move' ret[597594](597623 'coerce' 1 bool[19]))
      gotoReturn _end_pointeeCastStrictAliasingAllowed[597592] _end_pointeeCastStrictAliasingAllowed[597592]
    }
    unknown tmp[479328] "maybe param" "temp"
    unknown call_tmp[763536] "expr temp" "maybe param" "maybe type" "temp"
    (763539 'move' call_tmp[763536](48262 call int(64)[10] 8))
    (479339 'move' tmp[479328](48258 call == to[48148] call_tmp[763536]))
    unknown call_tmp[763541] "expr temp" "maybe param" "maybe type" "temp"
    (763544 'move' call_tmp[763541](479341 call _cond_invalid tmp[479328]))
    if call_tmp[763541]
    {
      (479344 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668054] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668055] "maybe param" "temp"
    unknown call_tmp[763546] "expr temp" "maybe param" "maybe type" "temp"
    (763549 'move' call_tmp[763546](479329 call isTrue tmp[479328]))
    (668060 'move' tmp[668055](668058 call _cond_test call_tmp[763546]))
    if tmp[668055]
    {
      (668065 'move' tmp[668054](668062 '_paramFoldLogical' tmp[668055] 1))
    }
    {
      unknown tmp[668067] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763551] "expr temp" "maybe param" "maybe type" "temp"
      (763554 'move' call_tmp[763551](48268 call uint(64)[86] 8))
      unknown call_tmp[763556] "expr temp" "maybe param" "maybe type" "temp"
      (763559 'move' call_tmp[763556](48264 call == to[48148] call_tmp[763551]))
      (668069 'move' tmp[668067](479333 call isTrue call_tmp[763556]))
      (668074 'move' tmp[668054](668071 '_paramFoldLogical' tmp[668055] tmp[668067]))
    }
    unknown call_tmp[763561] "expr temp" "maybe param" "maybe type" "temp"
    (763564 'move' call_tmp[763561](48270 call _cond_test tmp[668054]))
    if call_tmp[763561]
    {
      (597630 'move' ret[597594](597629 'coerce' 1 bool[19]))
      gotoReturn _end_pointeeCastStrictAliasingAllowed[597592] _end_pointeeCastStrictAliasingAllowed[597592]
    }
    unknown tmp[479349] "maybe param" "temp"
    unknown tmp[479370] "maybe param" "temp"
    unknown tmp[479391] "maybe param" "temp"
    (479402 'move' tmp[479391](48284 call isIntegralType from[48146]))
    unknown call_tmp[763566] "expr temp" "maybe param" "maybe type" "temp"
    (763569 'move' call_tmp[763566](479404 call _cond_invalid tmp[479391]))
    if call_tmp[763566]
    {
      (479407 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[668081] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668082] "maybe param" "temp"
    unknown call_tmp[763571] "expr temp" "maybe param" "maybe type" "temp"
    (763574 'move' call_tmp[763571](479392 call isTrue tmp[479391]))
    (668087 'move' tmp[668082](668085 call _cond_test call_tmp[763571]))
    if tmp[668082]
    {
      unknown tmp[668089] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763576] "expr temp" "maybe param" "maybe type" "temp"
      (763579 'move' call_tmp[763576](48287 call isIntegralType to[48148]))
      (668091 'move' tmp[668089](479395 call isTrue call_tmp[763576]))
      (668096 'move' tmp[668081](668093 '_paramFoldLogical' tmp[668082] tmp[668089]))
    }
    {
      (668101 'move' tmp[668081](668098 '_paramFoldLogical' tmp[668082] 0))
    }
    (479381 'move' tmp[479370] tmp[668081])
    unknown call_tmp[763581] "expr temp" "maybe param" "maybe type" "temp"
    (763584 'move' call_tmp[763581](479383 call _cond_invalid tmp[479370]))
    if call_tmp[763581]
    {
      (479386 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668135] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668136] "maybe param" "temp"
    unknown call_tmp[763586] "expr temp" "maybe param" "maybe type" "temp"
    (763589 'move' call_tmp[763586](479371 call isTrue tmp[479370]))
    (668141 'move' tmp[668136](668139 call _cond_test call_tmp[763586]))
    if tmp[668136]
    {
      (668146 'move' tmp[668135](668143 '_paramFoldLogical' tmp[668136] 1))
    }
    {
      unknown tmp[479412] "maybe param" "temp"
      (479423 'move' tmp[479412](48292 call isRealType from[48146]))
      unknown call_tmp[763591] "expr temp" "maybe param" "maybe type" "temp"
      (763594 'move' call_tmp[763591](479425 call _cond_invalid tmp[479412]))
      if call_tmp[763591]
      {
        (479428 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[668108] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[668109] "maybe param" "temp"
      unknown call_tmp[763596] "expr temp" "maybe param" "maybe type" "temp"
      (763599 'move' call_tmp[763596](479413 call isTrue tmp[479412]))
      (668114 'move' tmp[668109](668112 call _cond_test call_tmp[763596]))
      if tmp[668109]
      {
        unknown tmp[668116] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[763601] "expr temp" "maybe param" "maybe type" "temp"
        (763604 'move' call_tmp[763601](48295 call isRealType to[48148]))
        (668118 'move' tmp[668116](479416 call isTrue call_tmp[763601]))
        (668123 'move' tmp[668108](668120 '_paramFoldLogical' tmp[668109] tmp[668116]))
      }
      {
        (668128 'move' tmp[668108](668125 '_paramFoldLogical' tmp[668109] 0))
      }
      unknown tmp[668148] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (668150 'move' tmp[668148](479375 call isTrue tmp[668108]))
      (668155 'move' tmp[668135](668152 '_paramFoldLogical' tmp[668136] tmp[668148]))
    }
    (479360 'move' tmp[479349] tmp[668135])
    unknown call_tmp[763606] "expr temp" "maybe param" "maybe type" "temp"
    (763609 'move' call_tmp[763606](479362 call _cond_invalid tmp[479349]))
    if call_tmp[763606]
    {
      (479365 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[668162] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668163] "maybe param" "temp"
    unknown call_tmp[763611] "expr temp" "maybe param" "maybe type" "temp"
    (763614 'move' call_tmp[763611](479350 call isTrue tmp[479349]))
    (668168 'move' tmp[668163](668166 call _cond_test call_tmp[763611]))
    if tmp[668163]
    {
      unknown tmp[668170] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[763616] "expr temp" "maybe param" "maybe type" "temp"
      (763619 'move' call_tmp[763616](48300 call numBytes from[48146]))
      unknown call_tmp[763621] "expr temp" "maybe param" "maybe type" "temp"
      (763624 'move' call_tmp[763621](48303 call numBytes to[48148]))
      unknown call_tmp[763626] "expr temp" "maybe param" "maybe type" "temp"
      (763629 'move' call_tmp[763626](48297 call == call_tmp[763616] call_tmp[763621]))
      (668172 'move' tmp[668170](479353 call isTrue call_tmp[763626]))
      (668177 'move' tmp[668162](668174 '_paramFoldLogical' tmp[668163] tmp[668170]))
    }
    {
      (668182 'move' tmp[668162](668179 '_paramFoldLogical' tmp[668163] 0))
    }
    unknown call_tmp[763631] "expr temp" "maybe param" "maybe type" "temp"
    (763634 'move' call_tmp[763631](48305 call _cond_test tmp[668162]))
    if call_tmp[763631]
    {
      (597636 'move' ret[597594](597635 'coerce' 1 bool[19]))
      gotoReturn _end_pointeeCastStrictAliasingAllowed[597592] _end_pointeeCastStrictAliasingAllowed[597592]
    }
    (597642 'move' ret[597594](597641 'coerce' 0 bool[19]))
    label _end_pointeeCastStrictAliasingAllowed[597592]
    (597596 return ret[597594])
  }
  { scopeless type
    bool[19]
  }
  function c_ptr[46891](?).:[48314](arg _mt[48328]:_MT[201], arg this[48317]:c_ptr[46891](?) :
  c_ptr[46891](?), arg x[48321]:c_ptr[46891](?), arg t[48325]:c_ptr[46891](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597646] "RVV" "temp"
    unknown call_tmp[763638] "expr temp" "maybe param" "maybe type" "temp"
    (763641 'move' call_tmp[763638](48370 call eltType _mt[203] x[48321]))
    unknown call_tmp[763645] "expr temp" "maybe param" "maybe type" "temp"
    (763648 'move' call_tmp[763645](48374 call eltType _mt[203] t[48325]))
    unknown call_tmp[763650] "expr temp" "maybe param" "maybe type" "temp"
    (763653 'move' call_tmp[763650](48368 call pointeeCastStrictAliasingAllowed call_tmp[763638] call_tmp[763645]))
    unknown call_tmp[763655] "expr temp" "maybe param" "maybe type" "temp"
    (763658 'move' call_tmp[763655](48365 call ! call_tmp[763650]))
    unknown call_tmp[763660] "expr temp" "maybe param" "maybe type" "temp"
    (763663 'move' call_tmp[763660](48377 call _cond_test call_tmp[763655]))
    if call_tmp[763660]
    {
      unknown call_tmp[763665] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (763668 'move' call_tmp[763665](48350 'typeof' x[48321]))
      unknown call_tmp[763670] "expr temp" "maybe param" "maybe type" "temp"
      (763673 'move' call_tmp[763670](48347 call : call_tmp[763665] string[244]))
      unknown call_tmp[763675] "expr temp" "maybe param" "maybe type" "temp"
      (763678 'move' call_tmp[763675](48342 call + "This cast from '" call_tmp[763670]))
      unknown call_tmp[763680] "expr temp" "maybe param" "maybe type" "temp"
      (763683 'move' call_tmp[763680](48340 call + call_tmp[763675] "' to '"))
      unknown call_tmp[763685] "expr temp" "maybe param" "maybe type" "temp"
      (763688 'move' call_tmp[763685](48355 call : t[48325] string[244]))
      unknown call_tmp[763690] "expr temp" "maybe param" "maybe type" "temp"
      (763693 'move' call_tmp[763690](48338 call + call_tmp[763680] call_tmp[763685]))
      unknown call_tmp[763695] "expr temp" "maybe param" "maybe type" "temp"
      (763698 'move' call_tmp[763695](48336 call + call_tmp[763690] "' casts a c_ptr to a pointer of non-equivalent, non-char "))
      unknown call_tmp[763700] "expr temp" "maybe param" "maybe type" "temp"
      (763703 'move' call_tmp[763700](48334 call + call_tmp[763695] "element type, which can cause undefined behavior."))
      (48333 call compilerWarning call_tmp[763700])
    }
    unknown call_tmp[763705] "expr temp" "maybe param" "maybe type" "temp"
    (763708 'move' call_tmp[763705](48382 'cast' t[48325] x[48321]))
    (597651 'move' ret[597646](597650 'deref' call_tmp[763705]))
    (597648 return ret[597646])
  }
  function c_ptrConst[46990](?).:[48387](arg _mt[48401]:_MT[201], arg this[48390]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg x[48394]:c_ptrConst[46990](?), arg t[48398]:c_ptrConst[46990](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597655] "RVV" "temp"
    unknown call_tmp[763710] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763713 'move' call_tmp[763710](48437 'typeof' x[48394]))
    unknown call_tmp[763715] "expr temp" "maybe param" "maybe type" "temp"
    (763718 'move' call_tmp[763715](48435 call pointeeCastStrictAliasingAllowed call_tmp[763710] t[48398]))
    unknown call_tmp[763720] "expr temp" "maybe param" "maybe type" "temp"
    (763723 'move' call_tmp[763720](48432 call ! call_tmp[763715]))
    unknown call_tmp[763725] "expr temp" "maybe param" "maybe type" "temp"
    (763728 'move' call_tmp[763725](48439 call _cond_test call_tmp[763720]))
    if call_tmp[763725]
    {
      unknown call_tmp[763730] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (763733 'move' call_tmp[763730](48421 'typeof' x[48394]))
      unknown call_tmp[763735] "expr temp" "maybe param" "maybe type" "temp"
      (763738 'move' call_tmp[763735](48418 call : call_tmp[763730] string[244]))
      unknown call_tmp[763740] "expr temp" "maybe param" "maybe type" "temp"
      (763743 'move' call_tmp[763740](48415 call + "This cast from '" call_tmp[763735]))
      unknown call_tmp[763745] "expr temp" "maybe param" "maybe type" "temp"
      (763748 'move' call_tmp[763745](48413 call + call_tmp[763740] "' to '"))
      unknown call_tmp[763750] "expr temp" "maybe param" "maybe type" "temp"
      (763753 'move' call_tmp[763750](48424 call : t[48398] string[244]))
      unknown call_tmp[763755] "expr temp" "maybe param" "maybe type" "temp"
      (763758 'move' call_tmp[763755](48411 call + call_tmp[763745] call_tmp[763750]))
      unknown call_tmp[763760] "expr temp" "maybe param" "maybe type" "temp"
      (763763 'move' call_tmp[763760](48409 call + call_tmp[763755] "' casts a c_ptrConst to a pointer of non-equivalent, non-char "))
      unknown call_tmp[763765] "expr temp" "maybe param" "maybe type" "temp"
      (763768 'move' call_tmp[763765](48407 call + call_tmp[763760] "element type, which can cause undefined behavior."))
      (48406 call compilerWarning call_tmp[763765])
    }
    unknown call_tmp[763770] "expr temp" "maybe param" "maybe type" "temp"
    (763773 'move' call_tmp[763770](48444 'cast' t[48398] x[48394]))
    (597660 'move' ret[597655](597659 'deref' call_tmp[763770]))
    (597657 return ret[597655])
  }
  function c_ptrConst[46990](?).:[48449](arg _mt[48463]:_MT[201], arg this[48452]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg x[48456]:c_ptrConst[46990](?), arg t[48460]:c_ptr[46891](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597664] "RVV" "temp"
    unknown call_tmp[763775] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763778 'move' call_tmp[763775](48497 'typeof' x[48456]))
    unknown call_tmp[763780] "expr temp" "maybe param" "maybe type" "temp"
    (763783 'move' call_tmp[763780](48495 call pointeeCastStrictAliasingAllowed call_tmp[763775] t[48460]))
    unknown call_tmp[763785] "expr temp" "maybe param" "maybe type" "temp"
    (763788 'move' call_tmp[763785](48492 call ! call_tmp[763780]))
    unknown call_tmp[763790] "expr temp" "maybe param" "maybe type" "temp"
    (763793 'move' call_tmp[763790](48499 call _cond_test call_tmp[763785]))
    if call_tmp[763790]
    {
      unknown call_tmp[763795] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (763798 'move' call_tmp[763795](48483 'typeof' x[48456]))
      unknown call_tmp[763800] "expr temp" "maybe param" "maybe type" "temp"
      (763803 'move' call_tmp[763800](48480 call : call_tmp[763795] string[244]))
      unknown call_tmp[763805] "expr temp" "maybe param" "maybe type" "temp"
      (763808 'move' call_tmp[763805](48477 call + "This cast from '" call_tmp[763800]))
      unknown call_tmp[763810] "expr temp" "maybe param" "maybe type" "temp"
      (763813 'move' call_tmp[763810](48475 call + call_tmp[763805] "' to '"))
      unknown call_tmp[763815] "expr temp" "maybe param" "maybe type" "temp"
      (763818 'move' call_tmp[763815](48486 call : t[48460] string[244]))
      unknown call_tmp[763820] "expr temp" "maybe param" "maybe type" "temp"
      (763823 'move' call_tmp[763820](48473 call + call_tmp[763810] call_tmp[763815]))
      unknown call_tmp[763825] "expr temp" "maybe param" "maybe type" "temp"
      (763828 'move' call_tmp[763825](48471 call + call_tmp[763820] "' casts a c_ptrConst to a pointer of non-equivalent, non-char "))
      unknown call_tmp[763830] "expr temp" "maybe param" "maybe type" "temp"
      (763833 'move' call_tmp[763830](48469 call + call_tmp[763825] "element type, which can cause undefined behavior."))
      (48468 call compilerWarning call_tmp[763830])
    }
    unknown call_tmp[763835] "expr temp" "maybe param" "maybe type" "temp"
    (763838 'move' call_tmp[763835](48504 'cast' t[48460] x[48456]))
    (597669 'move' ret[597664](597668 'deref' call_tmp[763835]))
    (597666 return ret[597664])
  }
  function c_ptr[46891](?).:[48509](arg _mt[48523]:_MT[201], arg this[48512]:c_ptr[46891](?) :
  c_ptr[46891](?), arg x[48516]:c_ptr[46891](?), arg t[48520]:c_ptrConst[46990](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597673] "RVV" "temp"
    unknown call_tmp[763840] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763843 'move' call_tmp[763840](48557 'typeof' x[48516]))
    unknown call_tmp[763845] "expr temp" "maybe param" "maybe type" "temp"
    (763848 'move' call_tmp[763845](48555 call pointeeCastStrictAliasingAllowed call_tmp[763840] t[48520]))
    unknown call_tmp[763850] "expr temp" "maybe param" "maybe type" "temp"
    (763853 'move' call_tmp[763850](48552 call ! call_tmp[763845]))
    unknown call_tmp[763855] "expr temp" "maybe param" "maybe type" "temp"
    (763858 'move' call_tmp[763855](48559 call _cond_test call_tmp[763850]))
    if call_tmp[763855]
    {
      unknown call_tmp[763860] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (763863 'move' call_tmp[763860](48543 'typeof' x[48516]))
      unknown call_tmp[763865] "expr temp" "maybe param" "maybe type" "temp"
      (763868 'move' call_tmp[763865](48540 call : call_tmp[763860] string[244]))
      unknown call_tmp[763870] "expr temp" "maybe param" "maybe type" "temp"
      (763873 'move' call_tmp[763870](48537 call + "This cast from '" call_tmp[763865]))
      unknown call_tmp[763875] "expr temp" "maybe param" "maybe type" "temp"
      (763878 'move' call_tmp[763875](48535 call + call_tmp[763870] "' to '"))
      unknown call_tmp[763880] "expr temp" "maybe param" "maybe type" "temp"
      (763883 'move' call_tmp[763880](48546 call : t[48520] string[244]))
      unknown call_tmp[763885] "expr temp" "maybe param" "maybe type" "temp"
      (763888 'move' call_tmp[763885](48533 call + call_tmp[763875] call_tmp[763880]))
      unknown call_tmp[763890] "expr temp" "maybe param" "maybe type" "temp"
      (763893 'move' call_tmp[763890](48531 call + call_tmp[763885] "' casts a c_ptr to a pointer of non-equivalent, non-char "))
      unknown call_tmp[763895] "expr temp" "maybe param" "maybe type" "temp"
      (763898 'move' call_tmp[763895](48529 call + call_tmp[763890] "element type, which can cause undefined behavior."))
      (48528 call compilerWarning call_tmp[763895])
    }
    unknown call_tmp[763900] "expr temp" "maybe param" "maybe type" "temp"
    (763903 'move' call_tmp[763900](48564 'cast' t[48520] x[48516]))
    (597678 'move' ret[597673](597677 'deref' call_tmp[763900]))
    (597675 return ret[597673])
  }
  function :[48569](ref arg x[48572]:c_array[47643](?), arg t[48576]:c_ptr[46891](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597682] "RVV" "temp"
    unknown call_tmp[763907] "expr temp" "maybe param" "maybe type" "temp"
    (763910 'move' call_tmp[763907](48621 call eltType _mt[203] t[48576]))
    unknown call_tmp[763912] "expr temp" "maybe param" "maybe type" "temp"
    (763915 'move' call_tmp[763912](48618 call == call_tmp[763907] void[4]))
    unknown call_tmp[763917] "expr temp" "maybe param" "maybe type" "temp"
    (763920 'move' call_tmp[763917](48625 call _cond_test call_tmp[763912]))
    if call_tmp[763917]
    {
      unknown call_tmp[763922] "expr temp" "maybe param" "maybe type" "temp"
      (763925 'move' call_tmp[763922](48586 call x[48572] 0))
      unknown call_tmp[763927] "expr temp" "maybe param" "maybe type" "temp"
      (763930 'move' call_tmp[763927](48584 call c_ptrTo call_tmp[763922]))
      unknown call_tmp[763932] "expr temp" "maybe param" "maybe type" "temp"
      (763935 'move' call_tmp[763932](48581 'cast' t[48576] call_tmp[763927]))
      (597687 'move' ret[597682](597686 'deref' call_tmp[763932]))
      gotoReturn _end_:[597680] _end_:[597680]
    }
    {
      unknown call_tmp[763939] "expr temp" "maybe param" "maybe type" "temp"
      (763942 'move' call_tmp[763939](48605 call eltType _mt[203] x[48572]))
      unknown call_tmp[763946] "expr temp" "maybe param" "maybe type" "temp"
      (763949 'move' call_tmp[763946](48609 call eltType _mt[203] t[48576]))
      unknown call_tmp[763951] "expr temp" "maybe param" "maybe type" "temp"
      (763954 'move' call_tmp[763951](48602 call == call_tmp[763939] call_tmp[763946]))
      unknown call_tmp[763956] "expr temp" "maybe param" "maybe type" "temp"
      (763959 'move' call_tmp[763956](48612 call _cond_test call_tmp[763951]))
      if call_tmp[763956]
      {
        unknown call_tmp[763961] "expr temp" "maybe param" "maybe type" "temp"
        (763964 'move' call_tmp[763961](48593 call x[48572] 0))
        unknown call_tmp[763966] "expr temp" "maybe param" "maybe type" "temp"
        (763969 'move' call_tmp[763966](48591 call c_ptrTo call_tmp[763961]))
        (597692 'move' ret[597682](597691 'deref' call_tmp[763966]))
        gotoReturn _end_:[597680] _end_:[597680]
      }
      {
        (48597 call compilerError "cast of c_array to c_ptr with a different element type")
      }
    }
    label _end_:[597680]
    (597684 return ret[597682])
  }
  function :[48633](const  ref arg x[48636]:c_array[47643](?), arg t[48640]:c_ptrConst[46990](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597698] "RVV" "temp"
    unknown call_tmp[763973] "expr temp" "maybe param" "maybe type" "temp"
    (763976 'move' call_tmp[763973](48683 call eltType _mt[203] t[48640]))
    unknown call_tmp[763978] "expr temp" "maybe param" "maybe type" "temp"
    (763981 'move' call_tmp[763978](48680 call == call_tmp[763973] void[4]))
    unknown call_tmp[763983] "expr temp" "maybe param" "maybe type" "temp"
    (763986 'move' call_tmp[763983](48687 call _cond_test call_tmp[763978]))
    if call_tmp[763983]
    {
      unknown call_tmp[763988] "expr temp" "maybe param" "maybe type" "temp"
      (763991 'move' call_tmp[763988](48650 call x[48636] 0))
      unknown call_tmp[763993] "expr temp" "maybe param" "maybe type" "temp"
      (763996 'move' call_tmp[763993](48648 call c_ptrToConst call_tmp[763988]))
      unknown call_tmp[763998] "expr temp" "maybe param" "maybe type" "temp"
      (764001 'move' call_tmp[763998](48645 'cast' t[48640] call_tmp[763993]))
      (597703 'move' ret[597698](597702 'deref' call_tmp[763998]))
      gotoReturn _end_:[597696] _end_:[597696]
    }
    {
      unknown call_tmp[764005] "expr temp" "maybe param" "maybe type" "temp"
      (764008 'move' call_tmp[764005](48667 call eltType _mt[203] x[48636]))
      unknown call_tmp[764012] "expr temp" "maybe param" "maybe type" "temp"
      (764015 'move' call_tmp[764012](48671 call eltType _mt[203] t[48640]))
      unknown call_tmp[764017] "expr temp" "maybe param" "maybe type" "temp"
      (764020 'move' call_tmp[764017](48664 call == call_tmp[764005] call_tmp[764012]))
      unknown call_tmp[764022] "expr temp" "maybe param" "maybe type" "temp"
      (764025 'move' call_tmp[764022](48674 call _cond_test call_tmp[764017]))
      if call_tmp[764022]
      {
        unknown call_tmp[764027] "expr temp" "maybe param" "maybe type" "temp"
        (764030 'move' call_tmp[764027](48657 call x[48636] 0))
        unknown call_tmp[764032] "expr temp" "maybe param" "maybe type" "temp"
        (764035 'move' call_tmp[764032](48655 call c_ptrToConst call_tmp[764027]))
        (597708 'move' ret[597698](597707 'deref' call_tmp[764032]))
        gotoReturn _end_:[597696] _end_:[597696]
      }
      {
        (48661 call compilerError "cast of c_array to c_ptr with a different element type")
      }
    }
    label _end_:[597696]
    (597700 return ret[597698])
  }
  function :[48695](arg x[48698]:c_ptr[46891](?), arg t[48704] :
  (48702 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597714] "RVV" "temp"
    unknown call_tmp[764037] "expr temp" "maybe param" "maybe type" "temp"
    (764040 'move' call_tmp[764037](48709 'cast' t[48704] x[48698]))
    (597719 'move' ret[597714](597718 'deref' call_tmp[764037]))
    (597716 return ret[597714])
  }
  function :[48714](arg x[48717]:c_ptr[46891](?), arg t[48723] :
  (48721 call c_ptrConst[46990](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597723] "RVV" "temp"
    unknown call_tmp[764042] "expr temp" "maybe param" "maybe type" "temp"
    (764045 'move' call_tmp[764042](48728 'cast' t[48723] x[48717]))
    (597728 'move' ret[597723](597727 'deref' call_tmp[764042]))
    (597725 return ret[597723])
  }
  function :[48733](arg x[48736]:c_ptrConst[46990](?), arg t[48742] :
  (48740 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597732] "RVV" "temp"
    unknown call_tmp[764047] "expr temp" "maybe param" "maybe type" "temp"
    (764050 'move' call_tmp[764047](48747 'cast' t[48742] x[48736]))
    (597737 'move' ret[597732](597736 'deref' call_tmp[764047]))
    (597734 return ret[597732])
  }
  function :[48752](arg x[48755]:c_ptrConst[46990](?), arg t[48761] :
  (48759 call c_ptrConst[46990](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597741] "RVV" "temp"
    unknown call_tmp[764052] "expr temp" "maybe param" "maybe type" "temp"
    (764055 'move' call_tmp[764052](48766 'cast' t[48761] x[48755]))
    (597746 'move' ret[597741](597745 'deref' call_tmp[764052]))
    (597743 return ret[597741])
  }
  function :[48771](arg x[48776] :
  (48774 call c_ptr[46891](?) void[4]), arg t[48780]:c_ptr[46891](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597750] "RVV" "temp"
    unknown call_tmp[764057] "expr temp" "maybe param" "maybe type" "temp"
    (764060 'move' call_tmp[764057](48785 'cast' t[48780] x[48776]))
    (597755 'move' ret[597750](597754 'deref' call_tmp[764057]))
    (597752 return ret[597750])
  }
  function :[48790](arg x[48795] :
  (48793 call c_ptr[46891](?) void[4]), arg t[48799]:c_ptrConst[46990](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597759] "RVV" "temp"
    unknown call_tmp[764062] "expr temp" "maybe param" "maybe type" "temp"
    (764065 'move' call_tmp[764062](48804 'cast' t[48799] x[48795]))
    (597764 'move' ret[597759](597763 'deref' call_tmp[764062]))
    (597761 return ret[597759])
  }
  function :[48809](arg x[48814] :
  (48812 call c_ptrConst[46990](?) void[4]), arg t[48818]:c_ptrConst[46990](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597768] "RVV" "temp"
    unknown call_tmp[764067] "expr temp" "maybe param" "maybe type" "temp"
    (764070 'move' call_tmp[764067](48823 'cast' t[48818] x[48814]))
    (597773 'move' ret[597768](597772 'deref' call_tmp[764067]))
    (597770 return ret[597768])
  }
  function c_ptr[46891](?).:[48828](arg _mt[48842]:_MT[201], arg this[48831]:c_ptr[46891](?) :
  c_ptr[46891](?), arg x[48835]:c_ptr[46891](?), arg t[48839]:string[244]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597777] "RVV" "temp"
    Try!
    {
      {
        unknown call_tmp[764074] "expr temp" "maybe param" "maybe type" "temp"
        (764077 'move' call_tmp[764074](48854 'ref to string' x[48835]))
        unknown call_tmp[764079] "expr temp" "maybe param" "maybe type" "temp"
        (764082 'move' call_tmp[764079](48857 call c_ptrConst[46990](?) c_char[562]))
        unknown call_tmp[764084] "expr temp" "maybe param" "maybe type" "temp"
        (764087 'move' call_tmp[764084](48852 call : call_tmp[764074] call_tmp[764079]))
        unknown call_tmp[764089] "expr temp" "maybe param" "maybe type" "temp"
        (764092 'move' call_tmp[764089](48851 call(48848 call (partial) createAdoptingBuffer _mt[203] string[244]) call_tmp[764084]))
        (597782 'move' ret[597777](597781 'deref' call_tmp[764089]))
        gotoReturn _end_:[597775] _end_:[597775]
      }
    }
    label _end_:[597775]
    (597779 return ret[597777])
  }
  function c_ptrConst[46990](?).:[48864](arg _mt[48878]:_MT[201], arg this[48867]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg x[48871]:c_ptrConst[46990](?), arg t[48875]:string[244]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597788] "RVV" "temp"
    Try!
    {
      {
        unknown call_tmp[764096] "expr temp" "maybe param" "maybe type" "temp"
        (764099 'move' call_tmp[764096](48890 'ref to string' x[48871]))
        unknown call_tmp[764101] "expr temp" "maybe param" "maybe type" "temp"
        (764104 'move' call_tmp[764101](48893 call c_ptrConst[46990](?) c_char[562]))
        unknown call_tmp[764106] "expr temp" "maybe param" "maybe type" "temp"
        (764109 'move' call_tmp[764106](48888 call : call_tmp[764096] call_tmp[764101]))
        unknown call_tmp[764111] "expr temp" "maybe param" "maybe type" "temp"
        (764114 'move' call_tmp[764111](48887 call(48884 call (partial) createAdoptingBuffer _mt[203] string[244]) call_tmp[764106]))
        (597793 'move' ret[597788](597792 'deref' call_tmp[764111]))
        gotoReturn _end_:[597786] _end_:[597786]
      }
    }
    label _end_:[597786]
    (597790 return ret[597788])
  }
  function :[48900](arg x[48905] :
  (48903 call c_ptr[46891](?) void[4]), arg t[48909]:class[195](?)) : _unknown[42] "inline" "last resort" "operator"
  {
    unknown ret[597799] "RVV" "temp"
    unknown tmp[479433] "maybe param" "temp"
    (479444 'move' tmp[479433](48958 call isUnmanagedClass t[48909]))
    unknown call_tmp[764116] "expr temp" "maybe param" "maybe type" "temp"
    (764119 'move' call_tmp[764116](479446 call _cond_invalid tmp[479433]))
    if call_tmp[764116]
    {
      (479449 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668189] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668190] "maybe param" "temp"
    unknown call_tmp[764121] "expr temp" "maybe param" "maybe type" "temp"
    (764124 'move' call_tmp[764121](479434 call isTrue tmp[479433]))
    (668195 'move' tmp[668190](668193 call _cond_test call_tmp[764121]))
    if tmp[668190]
    {
      (668200 'move' tmp[668189](668197 '_paramFoldLogical' tmp[668190] 1))
    }
    {
      unknown tmp[668202] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764126] "expr temp" "maybe param" "maybe type" "temp"
      (764129 'move' call_tmp[764126](48961 call isBorrowedClass t[48909]))
      (668204 'move' tmp[668202](479438 call isTrue call_tmp[764126]))
      (668209 'move' tmp[668189](668206 '_paramFoldLogical' tmp[668190] tmp[668202]))
    }
    unknown call_tmp[764131] "expr temp" "maybe param" "maybe type" "temp"
    (764134 'move' call_tmp[764131](48963 call _cond_test tmp[668189]))
    if call_tmp[764131]
    {
      unknown call_tmp[764136] "expr temp" "maybe param" "maybe type" "temp"
      (764139 'move' call_tmp[764136](48927 call : t[48909] string[244]))
      unknown call_tmp[764141] "expr temp" "maybe param" "maybe type" "temp"
      (764144 'move' call_tmp[764141](48922 call + "invalid cast from c_ptr(void) to " call_tmp[764136]))
      unknown call_tmp[764146] "expr temp" "maybe param" "maybe type" "temp"
      (764149 'move' call_tmp[764146](48920 call + call_tmp[764141] " - cast to "))
      unknown call_tmp[764151] "expr temp" "maybe param" "maybe type" "temp"
      (764154 'move' call_tmp[764151](48937 call _to_nilable t[48909]))
      unknown call_tmp[764156] "expr temp" "maybe param" "maybe type" "temp"
      (764159 'move' call_tmp[764156](48934 call : call_tmp[764151] string[244]))
      unknown call_tmp[764161] "expr temp" "maybe param" "maybe type" "temp"
      (764164 'move' call_tmp[764161](48918 call + call_tmp[764146] call_tmp[764156]))
      unknown call_tmp[764166] "expr temp" "maybe param" "maybe type" "temp"
      (764169 'move' call_tmp[764166](48916 call + call_tmp[764161] " instead"))
      (48915 call compilerError call_tmp[764166])
    }
    {
      unknown call_tmp[764171] "expr temp" "maybe param" "maybe type" "temp"
      (764174 'move' call_tmp[764171](48951 call : t[48909] string[244]))
      unknown call_tmp[764176] "expr temp" "maybe param" "maybe type" "temp"
      (764179 'move' call_tmp[764176](48946 call + "invalid cast from c_ptr(void) to managed type " call_tmp[764171]))
      (48945 call compilerError call_tmp[764176])
    }
    unknown call_tmp[764181] "expr temp" "maybe param" "maybe type" "temp"
    (764184 'move' call_tmp[764181](48968 'cast' t[48909] x[48905]))
    (597804 'move' ret[597799](597803 'deref' call_tmp[764181]))
    (597801 return ret[597799])
  }
  function :[48973](arg x[48978] :
  (48976 call c_ptr[46891](?) void[4]), arg t[48984]:_unmanagedNilable[189](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597808] "RVV" "temp"
    unknown call_tmp[764186] "expr temp" "maybe param" "maybe type" "temp"
    (764189 'move' call_tmp[764186](48989 'cast' t[48984] x[48978]))
    (597813 'move' ret[597808](597812 'deref' call_tmp[764186]))
    (597810 return ret[597808])
  }
  function :[48994](arg x[48999] :
  (48997 call c_ptr[46891](?) void[4]), arg t[49005]:_borrowedNilable[180](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597817] "RVV" "temp"
    unknown call_tmp[764191] "expr temp" "maybe param" "maybe type" "temp"
    (764194 'move' call_tmp[764191](49010 'cast' t[49005] x[48999]))
    (597822 'move' ret[597817](597821 'deref' call_tmp[764191]))
    (597819 return ret[597817])
  }
  function :[49015](arg x[49018]:borrowed[174](?), arg t[49024] :
  (49022 call c_ptr[46891](?) void[4])) : _unknown[42] "deprecated" "inline" "operator"
  {
    unknown ret[597826] "RVV" "temp"
    unknown call_tmp[764196] "expr temp" "maybe param" "maybe type" "temp"
    (764199 'move' call_tmp[764196](49029 'cast' t[49024] x[49018]))
    (597831 'move' ret[597826](597830 'deref' call_tmp[764196]))
    (597828 return ret[597826])
  }
  function :[49034](arg x[49037]:unmanaged[183](?), arg t[49043] :
  (49041 call c_ptr[46891](?) void[4])) : _unknown[42] "deprecated" "inline" "operator"
  {
    unknown ret[597835] "RVV" "temp"
    unknown call_tmp[764201] "expr temp" "maybe param" "maybe type" "temp"
    (764204 'move' call_tmp[764201](49048 'cast' t[49043] x[49037]))
    (597840 'move' ret[597835](597839 'deref' call_tmp[764201]))
    (597837 return ret[597835])
  }
  function :[49053](arg x[49056]:c_ptr[46891](?), arg t[49060]:_ddata[67573](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597844] "RVV" "temp"
    unknown call_tmp[764206] "expr temp" "maybe param" "maybe type" "temp"
    (764209 'move' call_tmp[764206](49084 'cast' t[49060] x[49056]))
    (597849 'move' ret[597844](597848 'deref' call_tmp[764206]))
    (597846 return ret[597844])
  }
  where {
    unknown tmp[479454] "maybe param" "temp"
    unknown call_tmp[764213] "expr temp" "maybe param" "maybe type" "temp"
    (764216 'move' call_tmp[764213](49068 call eltType _mt[203] t[49060]))
    unknown call_tmp[764220] "expr temp" "maybe param" "maybe type" "temp"
    (764223 'move' call_tmp[764220](49072 call eltType _mt[203] x[49056]))
    (479465 'move' tmp[479454](49065 call == call_tmp[764213] call_tmp[764220]))
    unknown call_tmp[764225] "expr temp" "maybe param" "maybe type" "temp"
    (764228 'move' call_tmp[764225](479467 call _cond_invalid tmp[479454]))
    if call_tmp[764225]
    {
      (479470 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668216] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668217] "maybe param" "temp"
    unknown call_tmp[764230] "expr temp" "maybe param" "maybe type" "temp"
    (764233 'move' call_tmp[764230](479455 call isTrue tmp[479454]))
    (668222 'move' tmp[668217](668220 call _cond_test call_tmp[764230]))
    if tmp[668217]
    {
      (668227 'move' tmp[668216](668224 '_paramFoldLogical' tmp[668217] 1))
    }
    {
      unknown tmp[668229] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764237] "expr temp" "maybe param" "maybe type" "temp"
      (764240 'move' call_tmp[764237](49078 call eltType _mt[203] x[49056]))
      unknown call_tmp[764242] "expr temp" "maybe param" "maybe type" "temp"
      (764245 'move' call_tmp[764242](49075 call == call_tmp[764237] void[4]))
      (668231 'move' tmp[668229](479459 call isTrue call_tmp[764242]))
      (668236 'move' tmp[668216](668233 '_paramFoldLogical' tmp[668217] tmp[668229]))
    }
    (1001342 call chpl_statementLevelSymbol tmp[668216])
  }
  function :[49090](arg x[49095] :
  (49093 call c_ptr[46891](?) void[4]), arg t[49099]:_ddata[67573](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597853] "RVV" "temp"
    unknown call_tmp[764247] "expr temp" "maybe param" "maybe type" "temp"
    (764250 'move' call_tmp[764247](49104 'cast' t[49099] x[49095]))
    (597858 'move' ret[597853](597857 'deref' call_tmp[764247]))
    (597855 return ret[597853])
  }
  function :[49109](arg x[49112]:_ddata[67573](?), arg t[49118] :
  (49116 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597862] "RVV" "temp"
    unknown call_tmp[764252] "expr temp" "maybe param" "maybe type" "temp"
    (764255 'move' call_tmp[764252](49123 'cast' t[49118] x[49112]))
    (597867 'move' ret[597862](597866 'deref' call_tmp[764252]))
    (597864 return ret[597862])
  }
  function :[49128](arg x[49133] :
  (49131 call c_ptr[46891](?) void[4]), arg t[49137] :
  c_intptr[596]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597871] "RVV" "temp"
    unknown call_tmp[764257] "expr temp" "maybe param" "maybe type" "temp"
    (764260 'move' call_tmp[764257](49142 'cast' t[49137] x[49133]))
    (597876 'move' ret[597871](597875 'deref' call_tmp[764257]))
    (597873 return ret[597871])
  }
  function :[49147](arg x[49152] :
  (49150 call c_ptr[46891](?) void[4]), arg t[49156] :
  c_uintptr[602]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597880] "RVV" "temp"
    unknown call_tmp[764262] "expr temp" "maybe param" "maybe type" "temp"
    (764265 'move' call_tmp[764262](49161 'cast' t[49156] x[49152]))
    (597885 'move' ret[597880](597884 'deref' call_tmp[764262]))
    (597882 return ret[597880])
  }
  function :[49166](arg x[49171] :
  (49169 call c_ptr[46891](?) void[4]), arg t[49175]:int(64)[10]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597889] "RVV" "temp"
    unknown call_tmp[764267] "expr temp" "maybe param" "maybe type" "temp"
    (764270 'move' call_tmp[764267](49184 'cast' t[49175] x[49171]))
    (597894 'move' ret[597889](597893 'deref' call_tmp[764267]))
    (597891 return ret[597889])
  }
  where {
    (49178 call != c_intptr[596] int(64)[10])
  }
  function :[49190](arg x[49195] :
  (49193 call c_ptr[46891](?) void[4]), arg t[49199]:uint(64)[86]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597898] "RVV" "temp"
    unknown call_tmp[764272] "expr temp" "maybe param" "maybe type" "temp"
    (764275 'move' call_tmp[764272](49208 'cast' t[49199] x[49195]))
    (597903 'move' ret[597898](597902 'deref' call_tmp[764272]))
    (597900 return ret[597898])
  }
  where {
    (49202 call != c_uintptr[602] uint(64)[86])
  }
  function :[49214](arg x[49217] :
  c_intptr[596], arg t[49223] :
  (49221 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597907] "RVV" "temp"
    unknown call_tmp[764277] "expr temp" "maybe param" "maybe type" "temp"
    (764280 'move' call_tmp[764277](49228 'cast' t[49223] x[49217]))
    (597912 'move' ret[597907](597911 'deref' call_tmp[764277]))
    (597909 return ret[597907])
  }
  function :[49233](arg x[49236] :
  c_uintptr[602], arg t[49242] :
  (49240 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597916] "RVV" "temp"
    unknown call_tmp[764282] "expr temp" "maybe param" "maybe type" "temp"
    (764285 'move' call_tmp[764282](49247 'cast' t[49242] x[49236]))
    (597921 'move' ret[597916](597920 'deref' call_tmp[764282]))
    (597918 return ret[597916])
  }
  function :[49252](arg x[49255]:int(64)[10], arg t[49261] :
  (49259 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597925] "RVV" "temp"
    unknown call_tmp[764287] "expr temp" "maybe param" "maybe type" "temp"
    (764290 'move' call_tmp[764287](49270 'cast' t[49261] x[49255]))
    (597930 'move' ret[597925](597929 'deref' call_tmp[764287]))
    (597927 return ret[597925])
  }
  where {
    (49264 call != c_intptr[596] int(64)[10])
  }
  function :[49276](arg x[49279]:uint(64)[86], arg t[49285] :
  (49283 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "operator"
  {
    unknown ret[597934] "RVV" "temp"
    unknown call_tmp[764292] "expr temp" "maybe param" "maybe type" "temp"
    (764295 'move' call_tmp[764292](49294 'cast' t[49285] x[49279]))
    (597939 'move' ret[597934](597938 'deref' call_tmp[764292]))
    (597936 return ret[597934])
  }
  where {
    (49288 call != c_uintptr[602] uint(64)[86])
  }
  function c_ptr[46891](?).==[49300](arg _mt[49314]:_MT[201], arg this[49303]:c_ptr[46891](?) :
  c_ptr[46891](?), arg a[49307]:c_ptr[46891](?), arg b[49311]:c_ptr[46891](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597943] "RVV" "temp"
    unknown call_tmp[764297] "expr temp" "maybe param" "maybe type" "temp"
    (764300 'move' call_tmp[764297](49346 'ptr_eq' a[49307] b[49311]))
    (597948 'move' ret[597943](597947 'deref' call_tmp[764297]))
    (597945 return ret[597943])
  }
  where {
    unknown tmp[479475] "maybe param" "temp"
    unknown tmp[479496] "maybe param" "temp"
    unknown call_tmp[764304] "expr temp" "maybe param" "maybe type" "temp"
    (764307 'move' call_tmp[764304](49323 call eltType _mt[203] a[49307]))
    unknown call_tmp[764311] "expr temp" "maybe param" "maybe type" "temp"
    (764314 'move' call_tmp[764311](49327 call eltType _mt[203] b[49311]))
    (479507 'move' tmp[479496](49320 call == call_tmp[764304] call_tmp[764311]))
    unknown call_tmp[764316] "expr temp" "maybe param" "maybe type" "temp"
    (764319 'move' call_tmp[764316](479509 call _cond_invalid tmp[479496]))
    if call_tmp[764316]
    {
      (479512 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668243] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668244] "maybe param" "temp"
    unknown call_tmp[764321] "expr temp" "maybe param" "maybe type" "temp"
    (764324 'move' call_tmp[764321](479497 call isTrue tmp[479496]))
    (668249 'move' tmp[668244](668247 call _cond_test call_tmp[764321]))
    if tmp[668244]
    {
      (668254 'move' tmp[668243](668251 '_paramFoldLogical' tmp[668244] 1))
    }
    {
      unknown tmp[668256] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764328] "expr temp" "maybe param" "maybe type" "temp"
      (764331 'move' call_tmp[764328](49333 call eltType _mt[203] a[49307]))
      unknown call_tmp[764333] "expr temp" "maybe param" "maybe type" "temp"
      (764336 'move' call_tmp[764333](49330 call == call_tmp[764328] void[4]))
      (668258 'move' tmp[668256](479501 call isTrue call_tmp[764333]))
      (668263 'move' tmp[668243](668260 '_paramFoldLogical' tmp[668244] tmp[668256]))
    }
    (479486 'move' tmp[479475] tmp[668243])
    unknown call_tmp[764338] "expr temp" "maybe param" "maybe type" "temp"
    (764341 'move' call_tmp[764338](479488 call _cond_invalid tmp[479475]))
    if call_tmp[764338]
    {
      (479491 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668270] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668271] "maybe param" "temp"
    unknown call_tmp[764343] "expr temp" "maybe param" "maybe type" "temp"
    (764346 'move' call_tmp[764343](479476 call isTrue tmp[479475]))
    (668276 'move' tmp[668271](668274 call _cond_test call_tmp[764343]))
    if tmp[668271]
    {
      (668281 'move' tmp[668270](668278 '_paramFoldLogical' tmp[668271] 1))
    }
    {
      unknown tmp[668283] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764350] "expr temp" "maybe param" "maybe type" "temp"
      (764353 'move' call_tmp[764350](49340 call eltType _mt[203] b[49311]))
      unknown call_tmp[764355] "expr temp" "maybe param" "maybe type" "temp"
      (764358 'move' call_tmp[764355](49337 call == call_tmp[764350] void[4]))
      (668285 'move' tmp[668283](479480 call isTrue call_tmp[764355]))
      (668290 'move' tmp[668270](668287 '_paramFoldLogical' tmp[668271] tmp[668283]))
    }
    (1001344 call chpl_statementLevelSymbol tmp[668270])
  }
  function ==[49352](arg a[49357] :
  (49355 call c_ptr[46891](?) void[4]), arg b[49363] :
  (49361 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "last resort" "operator"
  {
    unknown ret[597952] "RVV" "temp"
    unknown call_tmp[764360] "expr temp" "maybe param" "maybe type" "temp"
    (764363 'move' call_tmp[764360](49368 'ptr_eq' a[49357] b[49363]))
    (597957 'move' ret[597952](597956 'deref' call_tmp[764360]))
    (597954 return ret[597952])
  }
  function !=[49373](arg a[49378] :
  (49376 call c_ptr[46891](?) void[4]), arg b[49384] :
  (49382 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "last resort" "operator"
  {
    unknown ret[597961] "RVV" "temp"
    unknown call_tmp[764365] "expr temp" "maybe param" "maybe type" "temp"
    (764368 'move' call_tmp[764365](49389 'ptr_neq' a[49378] b[49384]))
    (597966 'move' ret[597961](597965 'deref' call_tmp[764365]))
    (597963 return ret[597961])
  }
  function ==[49394](arg a[49397]:c_ptr[46891](?), arg b[49401]:_nilType[30]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597970] "RVV" "temp"
    unknown call_tmp[764370] "expr temp" "maybe param" "maybe type" "temp"
    (764373 'move' call_tmp[764370](49406 'ptr_eq' a[49397] b[49401]))
    (597975 'move' ret[597970](597974 'deref' call_tmp[764370]))
    (597972 return ret[597970])
  }
  function ==[49411](arg a[49414]:_nilType[30], arg b[49418]:c_ptr[46891](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[597979] "RVV" "temp"
    unknown call_tmp[764375] "expr temp" "maybe param" "maybe type" "temp"
    (764378 'move' call_tmp[764375](49423 'ptr_eq' a[49414] b[49418]))
    (597984 'move' ret[597979](597983 'deref' call_tmp[764375]))
    (597981 return ret[597979])
  }
  function c_ptrConst[46990](?).==[49428](arg _mt[49442]:_MT[201], arg this[49431]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg a[49435]:c_ptrConst[46990](?), arg b[49439]:c_ptrConst[46990](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[597988] "RVV" "temp"
    unknown call_tmp[764380] "expr temp" "maybe param" "maybe type" "temp"
    (764383 'move' call_tmp[764380](49474 'ptr_eq' a[49435] b[49439]))
    (597993 'move' ret[597988](597992 'deref' call_tmp[764380]))
    (597990 return ret[597988])
  }
  where {
    unknown tmp[479517] "maybe param" "temp"
    unknown tmp[479538] "maybe param" "temp"
    unknown call_tmp[764387] "expr temp" "maybe param" "maybe type" "temp"
    (764390 'move' call_tmp[764387](49451 call eltType _mt[203] a[49435]))
    unknown call_tmp[764394] "expr temp" "maybe param" "maybe type" "temp"
    (764397 'move' call_tmp[764394](49455 call eltType _mt[203] b[49439]))
    (479549 'move' tmp[479538](49448 call == call_tmp[764387] call_tmp[764394]))
    unknown call_tmp[764399] "expr temp" "maybe param" "maybe type" "temp"
    (764402 'move' call_tmp[764399](479551 call _cond_invalid tmp[479538]))
    if call_tmp[764399]
    {
      (479554 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668297] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668298] "maybe param" "temp"
    unknown call_tmp[764404] "expr temp" "maybe param" "maybe type" "temp"
    (764407 'move' call_tmp[764404](479539 call isTrue tmp[479538]))
    (668303 'move' tmp[668298](668301 call _cond_test call_tmp[764404]))
    if tmp[668298]
    {
      (668308 'move' tmp[668297](668305 '_paramFoldLogical' tmp[668298] 1))
    }
    {
      unknown tmp[668310] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764411] "expr temp" "maybe param" "maybe type" "temp"
      (764414 'move' call_tmp[764411](49461 call eltType _mt[203] a[49435]))
      unknown call_tmp[764416] "expr temp" "maybe param" "maybe type" "temp"
      (764419 'move' call_tmp[764416](49458 call == call_tmp[764411] void[4]))
      (668312 'move' tmp[668310](479543 call isTrue call_tmp[764416]))
      (668317 'move' tmp[668297](668314 '_paramFoldLogical' tmp[668298] tmp[668310]))
    }
    (479528 'move' tmp[479517] tmp[668297])
    unknown call_tmp[764421] "expr temp" "maybe param" "maybe type" "temp"
    (764424 'move' call_tmp[764421](479530 call _cond_invalid tmp[479517]))
    if call_tmp[764421]
    {
      (479533 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668324] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668325] "maybe param" "temp"
    unknown call_tmp[764426] "expr temp" "maybe param" "maybe type" "temp"
    (764429 'move' call_tmp[764426](479518 call isTrue tmp[479517]))
    (668330 'move' tmp[668325](668328 call _cond_test call_tmp[764426]))
    if tmp[668325]
    {
      (668335 'move' tmp[668324](668332 '_paramFoldLogical' tmp[668325] 1))
    }
    {
      unknown tmp[668337] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764433] "expr temp" "maybe param" "maybe type" "temp"
      (764436 'move' call_tmp[764433](49468 call eltType _mt[203] b[49439]))
      unknown call_tmp[764438] "expr temp" "maybe param" "maybe type" "temp"
      (764441 'move' call_tmp[764438](49465 call == call_tmp[764433] void[4]))
      (668339 'move' tmp[668337](479522 call isTrue call_tmp[764438]))
      (668344 'move' tmp[668324](668341 '_paramFoldLogical' tmp[668325] tmp[668337]))
    }
    (1001346 call chpl_statementLevelSymbol tmp[668324])
  }
  function ==[49480](arg a[49483]:c_ptrConst[46990](?), arg b[49487]:_nilType[30]) : _unknown[42] "inline" "operator"
  {
    unknown ret[597997] "RVV" "temp"
    unknown call_tmp[764443] "expr temp" "maybe param" "maybe type" "temp"
    (764446 'move' call_tmp[764443](49492 'ptr_eq' a[49483] b[49487]))
    (598002 'move' ret[597997](598001 'deref' call_tmp[764443]))
    (597999 return ret[597997])
  }
  function ==[49497](arg a[49500]:_nilType[30], arg b[49504]:c_ptrConst[46990](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[598006] "RVV" "temp"
    unknown call_tmp[764448] "expr temp" "maybe param" "maybe type" "temp"
    (764451 'move' call_tmp[764448](49509 'ptr_eq' a[49500] b[49504]))
    (598011 'move' ret[598006](598010 'deref' call_tmp[764448]))
    (598008 return ret[598006])
  }
  function c_ptr[46891](?).!=[49514](arg _mt[49528]:_MT[201], arg this[49517]:c_ptr[46891](?) :
  c_ptr[46891](?), arg a[49521]:c_ptr[46891](?), arg b[49525]:c_ptr[46891](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598015] "RVV" "temp"
    unknown call_tmp[764453] "expr temp" "maybe param" "maybe type" "temp"
    (764456 'move' call_tmp[764453](49560 'ptr_neq' a[49521] b[49525]))
    (598020 'move' ret[598015](598019 'deref' call_tmp[764453]))
    (598017 return ret[598015])
  }
  where {
    unknown tmp[479559] "maybe param" "temp"
    unknown tmp[479580] "maybe param" "temp"
    unknown call_tmp[764460] "expr temp" "maybe param" "maybe type" "temp"
    (764463 'move' call_tmp[764460](49537 call eltType _mt[203] a[49521]))
    unknown call_tmp[764467] "expr temp" "maybe param" "maybe type" "temp"
    (764470 'move' call_tmp[764467](49541 call eltType _mt[203] b[49525]))
    (479591 'move' tmp[479580](49534 call == call_tmp[764460] call_tmp[764467]))
    unknown call_tmp[764472] "expr temp" "maybe param" "maybe type" "temp"
    (764475 'move' call_tmp[764472](479593 call _cond_invalid tmp[479580]))
    if call_tmp[764472]
    {
      (479596 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668351] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668352] "maybe param" "temp"
    unknown call_tmp[764477] "expr temp" "maybe param" "maybe type" "temp"
    (764480 'move' call_tmp[764477](479581 call isTrue tmp[479580]))
    (668357 'move' tmp[668352](668355 call _cond_test call_tmp[764477]))
    if tmp[668352]
    {
      (668362 'move' tmp[668351](668359 '_paramFoldLogical' tmp[668352] 1))
    }
    {
      unknown tmp[668364] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764484] "expr temp" "maybe param" "maybe type" "temp"
      (764487 'move' call_tmp[764484](49547 call eltType _mt[203] a[49521]))
      unknown call_tmp[764489] "expr temp" "maybe param" "maybe type" "temp"
      (764492 'move' call_tmp[764489](49544 call == call_tmp[764484] void[4]))
      (668366 'move' tmp[668364](479585 call isTrue call_tmp[764489]))
      (668371 'move' tmp[668351](668368 '_paramFoldLogical' tmp[668352] tmp[668364]))
    }
    (479570 'move' tmp[479559] tmp[668351])
    unknown call_tmp[764494] "expr temp" "maybe param" "maybe type" "temp"
    (764497 'move' call_tmp[764494](479572 call _cond_invalid tmp[479559]))
    if call_tmp[764494]
    {
      (479575 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668378] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668379] "maybe param" "temp"
    unknown call_tmp[764499] "expr temp" "maybe param" "maybe type" "temp"
    (764502 'move' call_tmp[764499](479560 call isTrue tmp[479559]))
    (668384 'move' tmp[668379](668382 call _cond_test call_tmp[764499]))
    if tmp[668379]
    {
      (668389 'move' tmp[668378](668386 '_paramFoldLogical' tmp[668379] 1))
    }
    {
      unknown tmp[668391] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764506] "expr temp" "maybe param" "maybe type" "temp"
      (764509 'move' call_tmp[764506](49554 call eltType _mt[203] b[49525]))
      unknown call_tmp[764511] "expr temp" "maybe param" "maybe type" "temp"
      (764514 'move' call_tmp[764511](49551 call == call_tmp[764506] void[4]))
      (668393 'move' tmp[668391](479564 call isTrue call_tmp[764511]))
      (668398 'move' tmp[668378](668395 '_paramFoldLogical' tmp[668379] tmp[668391]))
    }
    (1001348 call chpl_statementLevelSymbol tmp[668378])
  }
  function !=[49566](arg a[49569]:c_ptr[46891](?), arg b[49573]:_nilType[30]) : _unknown[42] "inline" "operator"
  {
    unknown ret[598024] "RVV" "temp"
    unknown call_tmp[764516] "expr temp" "maybe param" "maybe type" "temp"
    (764519 'move' call_tmp[764516](49578 'ptr_neq' a[49569] b[49573]))
    (598029 'move' ret[598024](598028 'deref' call_tmp[764516]))
    (598026 return ret[598024])
  }
  function !=[49583](arg a[49586]:_nilType[30], arg b[49590]:c_ptr[46891](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[598033] "RVV" "temp"
    unknown call_tmp[764521] "expr temp" "maybe param" "maybe type" "temp"
    (764524 'move' call_tmp[764521](49595 'ptr_neq' a[49586] b[49590]))
    (598038 'move' ret[598033](598037 'deref' call_tmp[764521]))
    (598035 return ret[598033])
  }
  function c_ptrConst[46990](?).!=[49600](arg _mt[49614]:_MT[201], arg this[49603]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg a[49607]:c_ptrConst[46990](?), arg b[49611]:c_ptrConst[46990](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598042] "RVV" "temp"
    unknown call_tmp[764526] "expr temp" "maybe param" "maybe type" "temp"
    (764529 'move' call_tmp[764526](49646 'ptr_neq' a[49607] b[49611]))
    (598047 'move' ret[598042](598046 'deref' call_tmp[764526]))
    (598044 return ret[598042])
  }
  where {
    unknown tmp[479601] "maybe param" "temp"
    unknown tmp[479622] "maybe param" "temp"
    unknown call_tmp[764533] "expr temp" "maybe param" "maybe type" "temp"
    (764536 'move' call_tmp[764533](49623 call eltType _mt[203] a[49607]))
    unknown call_tmp[764540] "expr temp" "maybe param" "maybe type" "temp"
    (764543 'move' call_tmp[764540](49627 call eltType _mt[203] b[49611]))
    (479633 'move' tmp[479622](49620 call == call_tmp[764533] call_tmp[764540]))
    unknown call_tmp[764545] "expr temp" "maybe param" "maybe type" "temp"
    (764548 'move' call_tmp[764545](479635 call _cond_invalid tmp[479622]))
    if call_tmp[764545]
    {
      (479638 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668405] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668406] "maybe param" "temp"
    unknown call_tmp[764550] "expr temp" "maybe param" "maybe type" "temp"
    (764553 'move' call_tmp[764550](479623 call isTrue tmp[479622]))
    (668411 'move' tmp[668406](668409 call _cond_test call_tmp[764550]))
    if tmp[668406]
    {
      (668416 'move' tmp[668405](668413 '_paramFoldLogical' tmp[668406] 1))
    }
    {
      unknown tmp[668418] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764557] "expr temp" "maybe param" "maybe type" "temp"
      (764560 'move' call_tmp[764557](49633 call eltType _mt[203] a[49607]))
      unknown call_tmp[764562] "expr temp" "maybe param" "maybe type" "temp"
      (764565 'move' call_tmp[764562](49630 call == call_tmp[764557] void[4]))
      (668420 'move' tmp[668418](479627 call isTrue call_tmp[764562]))
      (668425 'move' tmp[668405](668422 '_paramFoldLogical' tmp[668406] tmp[668418]))
    }
    (479612 'move' tmp[479601] tmp[668405])
    unknown call_tmp[764567] "expr temp" "maybe param" "maybe type" "temp"
    (764570 'move' call_tmp[764567](479614 call _cond_invalid tmp[479601]))
    if call_tmp[764567]
    {
      (479617 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[668432] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668433] "maybe param" "temp"
    unknown call_tmp[764572] "expr temp" "maybe param" "maybe type" "temp"
    (764575 'move' call_tmp[764572](479602 call isTrue tmp[479601]))
    (668438 'move' tmp[668433](668436 call _cond_test call_tmp[764572]))
    if tmp[668433]
    {
      (668443 'move' tmp[668432](668440 '_paramFoldLogical' tmp[668433] 1))
    }
    {
      unknown tmp[668445] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[764579] "expr temp" "maybe param" "maybe type" "temp"
      (764582 'move' call_tmp[764579](49640 call eltType _mt[203] b[49611]))
      unknown call_tmp[764584] "expr temp" "maybe param" "maybe type" "temp"
      (764587 'move' call_tmp[764584](49637 call == call_tmp[764579] void[4]))
      (668447 'move' tmp[668445](479606 call isTrue call_tmp[764584]))
      (668452 'move' tmp[668432](668449 '_paramFoldLogical' tmp[668433] tmp[668445]))
    }
    (1001350 call chpl_statementLevelSymbol tmp[668432])
  }
  function c_ptrConst[46990](?).!=[49652](arg _mt[49666]:_MT[201], arg this[49655]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg a[49659]:c_ptrConst[46990](?), arg b[49663]:_nilType[30]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598051] "RVV" "temp"
    unknown call_tmp[764589] "expr temp" "maybe param" "maybe type" "temp"
    (764592 'move' call_tmp[764589](49670 'ptr_neq' a[49659] b[49663]))
    (598056 'move' ret[598051](598055 'deref' call_tmp[764589]))
    (598053 return ret[598051])
  }
  function !=[49675](arg a[49678]:_nilType[30], arg b[49682]:c_ptrConst[46990](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[598060] "RVV" "temp"
    unknown call_tmp[764594] "expr temp" "maybe param" "maybe type" "temp"
    (764597 'move' call_tmp[764594](49687 'ptr_neq' a[49678] b[49682]))
    (598065 'move' ret[598060](598064 'deref' call_tmp[764594]))
    (598062 return ret[598060])
  }
  function c_ptr[46891](?).![49692](arg _mt[49702]:_MT[201], arg this[49695]:c_ptr[46891](?) :
  c_ptr[46891](?), arg x[49699]:c_ptr[46891](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598069] "RVV" "temp"
    unknown call_tmp[764599] "expr temp" "maybe param" "maybe type" "temp"
    (764602 'move' call_tmp[764599](49706 call == x[49699] nil[32]))
    (598074 'move' ret[598069](598073 'deref' call_tmp[764599]))
    (598071 return ret[598069])
  }
  function c_ptr[46891](?).+[49712](arg _mt[49726]:_MT[201], arg this[49715]:c_ptr[46891](?) :
  c_ptr[46891](?), arg a[49719]:c_ptr[46891](?), arg b[49723]:integral[159](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598078] "RVV" "temp"
    unknown call_tmp[764604] "expr temp" "maybe param" "maybe type" "temp"
    (764607 'move' call_tmp[764604](49730 '+' a[49719] b[49723]))
    (598083 'move' ret[598078](598082 'deref' call_tmp[764604]))
    (598080 return ret[598078])
  }
  function c_ptr[46891](?).-[49735](arg _mt[49749]:_MT[201], arg this[49738]:c_ptr[46891](?) :
  c_ptr[46891](?), arg a[49742]:c_ptr[46891](?), arg b[49746]:integral[159](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598087] "RVV" "temp"
    unknown call_tmp[764609] "expr temp" "maybe param" "maybe type" "temp"
    (764612 'move' call_tmp[764609](49753 '-' a[49742] b[49746]))
    (598092 'move' ret[598087](598091 'deref' call_tmp[764609]))
    (598089 return ret[598087])
  }
  function c_ptrConst[46990](?).![49758](arg _mt[49768]:_MT[201], arg this[49761]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg x[49765]:c_ptrConst[46990](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598096] "RVV" "temp"
    unknown call_tmp[764614] "expr temp" "maybe param" "maybe type" "temp"
    (764617 'move' call_tmp[764614](49772 call == x[49765] nil[32]))
    (598101 'move' ret[598096](598100 'deref' call_tmp[764614]))
    (598098 return ret[598096])
  }
  function c_ptrConst[46990](?).+[49778](arg _mt[49792]:_MT[201], arg this[49781]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg a[49785]:c_ptrConst[46990](?), arg b[49789]:integral[159](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598105] "RVV" "temp"
    unknown call_tmp[764619] "expr temp" "maybe param" "maybe type" "temp"
    (764622 'move' call_tmp[764619](49796 '+' a[49785] b[49789]))
    (598110 'move' ret[598105](598109 'deref' call_tmp[764619]))
    (598107 return ret[598105])
  }
  function c_ptrConst[46990](?).-[49801](arg _mt[49815]:_MT[201], arg this[49804]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg a[49808]:c_ptrConst[46990](?), arg b[49812]:integral[159](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598114] "RVV" "temp"
    unknown call_tmp[764624] "expr temp" "maybe param" "maybe type" "temp"
    (764627 'move' call_tmp[764624](49819 '-' a[49808] b[49812]))
    (598119 'move' ret[598114](598118 'deref' call_tmp[764624]))
    (598116 return ret[598114])
  }
  function c_ptr[46891](?).-[49824](arg _mt[49843]:_MT[201], arg this[49827]:c_ptr[46891](?) :
  c_ptr[46891](?), arg a[49834]:c_ptr[46891](?), arg b[49840] :
  unknown call_tmp[764629] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598123] "RVV" "temp"
    unknown call_tmp[764636] "expr temp" "maybe param" "maybe type" "temp"
    (764639 'move' call_tmp[764636](49857 call eltType _mt[203] a[49834]))
    unknown call_tmp[764641] "expr temp" "maybe param" "maybe type" "temp"
    (764644 'move' call_tmp[764641](49855 call c_sizeof call_tmp[764636]))
    unknown call_tmp[764646] "expr temp" "maybe param" "maybe type" "temp"
    (764649 'move' call_tmp[764646](49852 call : call_tmp[764641] c_ptrdiff[608]))
    unknown call_tmp[764651] "expr temp" "maybe param" "maybe type" "temp"
    (764654 'move' call_tmp[764651](49849 call c_pointer_diff a[49834] b[49840] call_tmp[764646]))
    (598129 'move' ret[598123](598128 'coerce' call_tmp[764651] c_ptrdiff[608]))
    (598125 return ret[598123])
  }
  { scopeless type
    c_ptrdiff[608]
  }
  function c_ptrConst[46990](?).-[49864](arg _mt[49883]:_MT[201], arg this[49867]:c_ptrConst[46990](?) :
  c_ptrConst[46990](?), arg a[49874]:c_ptrConst[46990](?), arg b[49880] :
  unknown call_tmp[764656] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[598133] "RVV" "temp"
    unknown call_tmp[764663] "expr temp" "maybe param" "maybe type" "temp"
    (764666 'move' call_tmp[764663](49897 call eltType _mt[203] a[49874]))
    unknown call_tmp[764668] "expr temp" "maybe param" "maybe type" "temp"
    (764671 'move' call_tmp[764668](49895 call c_sizeof call_tmp[764663]))
    unknown call_tmp[764673] "expr temp" "maybe param" "maybe type" "temp"
    (764676 'move' call_tmp[764673](49892 call : call_tmp[764668] c_ptrdiff[608]))
    unknown call_tmp[764678] "expr temp" "maybe param" "maybe type" "temp"
    (764681 'move' call_tmp[764678](49889 call c_pointer_diff a[49874] b[49880] call_tmp[764673]))
    (598139 'move' ret[598133](598138 'coerce' call_tmp[764678] c_ptrdiff[608]))
    (598135 return ret[598133])
  }
  { scopeless type
    c_ptrdiff[608]
  }
  function c_pointer_return[49904](ref arg x[49908]:_any[141](?)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    unknown call_tmp[764683] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764686 'move' call_tmp[764683](515256 'typeof' x[49908]))
    (49912 call c_ptr[46891](?) call_tmp[764683])
  }
  function c_pointer_return_const[49917](const  ref arg x[49921]:_any[141](?)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    unknown call_tmp[764688] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764691 'move' call_tmp[764688](515258 'typeof' x[49921]))
    (49925 call c_ptrConst[46990](?) call_tmp[764688])
  }
  function c_pointer_diff[49930](arg a[49935] :
  (49933 call c_ptr[46891](?) void[4]), arg b[49941] :
  (49939 call c_ptr[46891](?) void[4]), arg eltSize[49945] :
  c_ptrdiff[608]) : _unknown[42] "extern" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    c_ptrdiff[608]
  }
  unknown cPtrToLogicalValue[49953] "config" "deprecated" "param"
  function c_ptrTo[49957](ref arg x[49961]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[598143] "RVV" "temp"
    unknown call_tmp[764693] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764696 'move' call_tmp[764693](515260 'typeof' x[49961]))
    unknown call_tmp[764698] "expr temp" "maybe param" "maybe type" "temp"
    (764701 'move' call_tmp[764698](49972 call isDomainType call_tmp[764693]))
    unknown call_tmp[764703] "expr temp" "maybe param" "maybe type" "temp"
    (764706 'move' call_tmp[764703](49974 call _cond_test call_tmp[764698]))
    if call_tmp[764703]
    {
      (49966 call compilerError "c_ptrTo domain type not supported")
    }
    unknown call_tmp[764708] "expr temp" "maybe param" "maybe type" "temp"
    (764711 'move' call_tmp[764708](49981 call c_addrOf x[49961]))
    (598148 'move' ret[598143](598147 'deref' call_tmp[764708]))
    (598145 return ret[598143])
  }
  function c_ptrTo[49985](arg x[49988] :
  c_fn_ptr[51982]) : _unknown[42] "inline"
  {
    unknown ret[598152] "RVV" "temp"
    (598157 'move' ret[598152](598156 'deref' x[49988]))
    (598154 return ret[598152])
  }
  function c_ptrTo[49996](ref arg arr[50001]:_array[255540](?)) : _unknown[42] "inline"
  {
    unknown ret[598161] "RVV" "temp"
    unknown call_tmp[764713] "expr temp" "maybe param" "maybe type" "temp"
    (764716 'move' call_tmp[764713](50020 call chpl__isDROrDRView arr[50001]))
    unknown call_tmp[764718] "expr temp" "maybe param" "maybe type" "temp"
    (764721 'move' call_tmp[764718](50017 call ! call_tmp[764713]))
    unknown call_tmp[764723] "expr temp" "maybe param" "maybe type" "temp"
    (764726 'move' call_tmp[764723](50022 call _cond_test call_tmp[764718]))
    if call_tmp[764723]
    {
      (50012 call compilerError "Only single-locale rectangular arrays support c_ptrTo() at present")
    }
    unknown call_tmp[764728] "expr temp" "maybe param" "maybe type" "temp"
    (764731 'move' call_tmp[764728](50107 call _cond_test 1))
    if call_tmp[764728]
    {
      unknown call_tmp[764735] "expr temp" "maybe param" "maybe type" "temp"
      (764738 'move' call_tmp[764735](50076 call _value _mt[203] arr[50001]))
      unknown call_tmp[764740] "expr temp" "maybe param" "maybe type" "temp"
      (764743 'move' call_tmp[764740](50079 '_wide_get_locale' call_tmp[764735]))
      unknown call_tmp[764745] "expr temp" "maybe param" "maybe type" "temp"
      (764748 'move' call_tmp[764745](50080 call chpl_localeID_to_locale call_tmp[764740]))
      unknown call_tmp[764750] "expr temp" "maybe param" "maybe type" "temp"
      (764753 'move' call_tmp[764750](418694 call here[135591]))
      unknown call_tmp[764755] "expr temp" "maybe param" "maybe type" "temp"
      (764758 'move' call_tmp[764755](50073 call != call_tmp[764745] call_tmp[764750]))
      unknown call_tmp[764760] "expr temp" "maybe param" "maybe type" "temp"
      (764763 'move' call_tmp[764760](50083 call _cond_test call_tmp[764755]))
      if call_tmp[764760]
      {
        unknown call_tmp[764765] "expr temp" "maybe param" "maybe type" "temp"
        (764768 'move' call_tmp[764765](50038 call + "c_ptrTo() can only be applied to an array from the locale on " "which it lives (array is on locale "))
        unknown call_tmp[764772] "expr temp" "maybe param" "maybe type" "temp"
        (764775 'move' call_tmp[764772](50051 call _value _mt[203] arr[50001]))
        unknown call_tmp[764777] "expr temp" "maybe param" "maybe type" "temp"
        (764780 'move' call_tmp[764777](50057 '_wide_get_node' call_tmp[764772]))
        unknown call_tmp[764782] "expr temp" "maybe param" "maybe type" "temp"
        (764785 'move' call_tmp[764782](50046 call : call_tmp[764777] string[244]))
        unknown call_tmp[764787] "expr temp" "maybe param" "maybe type" "temp"
        (764790 'move' call_tmp[764787](50036 call + call_tmp[764765] call_tmp[764782]))
        unknown call_tmp[764792] "expr temp" "maybe param" "maybe type" "temp"
        (764795 'move' call_tmp[764792](50034 call + call_tmp[764787] ", call was made on locale "))
        unknown call_tmp[764797] "expr temp" "maybe param" "maybe type" "temp"
        (764800 'move' call_tmp[764797](399953 call here[135591]))
        unknown call_tmp[764804] "expr temp" "maybe param" "maybe type" "temp"
        (764807 'move' call_tmp[764804](50067 call id _mt[203] call_tmp[764797]))
        unknown call_tmp[764809] "expr temp" "maybe param" "maybe type" "temp"
        (764812 'move' call_tmp[764809](50062 call : call_tmp[764804] string[244]))
        unknown call_tmp[764814] "expr temp" "maybe param" "maybe type" "temp"
        (764817 'move' call_tmp[764814](50032 call + call_tmp[764792] call_tmp[764809]))
        unknown call_tmp[764819] "expr temp" "maybe param" "maybe type" "temp"
        (764822 'move' call_tmp[764819](50030 call + call_tmp[764814] ")"))
        (50029 call halt call_tmp[764819])
      }
      unknown call_tmp[764826] "expr temp" "maybe param" "maybe type" "temp"
      (764829 'move' call_tmp[764826](50097 call size _mt[203] arr[50001]))
      unknown call_tmp[764831] "expr temp" "maybe param" "maybe type" "temp"
      (764834 'move' call_tmp[764831](50094 call == call_tmp[764826] 0))
      unknown call_tmp[764836] "expr temp" "maybe param" "maybe type" "temp"
      (764839 'move' call_tmp[764836](50101 call _cond_test call_tmp[764831]))
      if call_tmp[764836]
      {
        (50089 call halt "Can't create a C pointer for an array with 0 elements.")
      }
    }
    unknown call_tmp[764843] "expr temp" "maybe param" "maybe type" "temp"
    (764846 'move' call_tmp[764843](50117 call _dom _mt[203] arr[50001]))
    unknown call_tmp[764850] "expr temp" "maybe param" "maybe type" "temp"
    (764853 'move' call_tmp[764850](50120 call low _mt[203] call_tmp[764843]))
    unknown call_tmp[764855] "expr temp" "maybe param" "maybe type" "temp"
    (764858 'move' call_tmp[764855](50115 call arr[50001] call_tmp[764850]))
    unknown call_tmp[764860] "expr temp" "maybe param" "maybe type" "temp"
    (764863 'move' call_tmp[764860](50113 call c_pointer_return call_tmp[764855]))
    unknown call_tmp[764867] "expr temp" "maybe param" "maybe type" "temp"
    (764870 'move' call_tmp[764867](598168 call eltType _mt[203] arr[50001]))
    unknown call_tmp[764872] "expr temp" "maybe param" "maybe type" "temp"
    (764875 'move' call_tmp[764872](598166 call c_ptr[46891](?) call_tmp[764867]))
    (598172 'move' ret[598161](598171 'coerce' call_tmp[764860] call_tmp[764872]))
    (598163 return ret[598161])
  }
  { scopeless type
    unknown call_tmp[764879] "expr temp" "maybe param" "maybe type" "temp"
    (764882 'move' call_tmp[764879](50007 call eltType _mt[203] arr[50001]))
    (50005 call c_ptr[46891](?) call_tmp[764879])
  }
  function c_ptrTo[50126](ref arg s[50129]:string[244]) : _unknown[42] "inline"
  {
    unknown ret[598176] "RVV" "temp"
    unknown call_tmp[764884] "expr temp" "maybe param" "maybe type" "temp"
    (764887 'move' call_tmp[764884](50156 call _cond_test 1))
    if call_tmp[764884]
    {
      unknown call_tmp[764891] "expr temp" "maybe param" "maybe type" "temp"
      (764894 'move' call_tmp[764891](50146 call buffLen _mt[203] s[50129]))
      unknown call_tmp[764896] "expr temp" "maybe param" "maybe type" "temp"
      (764899 'move' call_tmp[764896](50143 call == call_tmp[764891] 0))
      unknown call_tmp[764901] "expr temp" "maybe param" "maybe type" "temp"
      (764904 'move' call_tmp[764901](50150 call _cond_test call_tmp[764896]))
      if call_tmp[764901]
      {
        (50138 call halt "Can't create a C pointer for an empty string.")
      }
    }
    unknown call_tmp[764908] "expr temp" "maybe param" "maybe type" "temp"
    (764911 'move' call_tmp[764908](50167 call(50164 call (partial) buff _mt[203] s[50129]) 0))
    unknown call_tmp[764913] "expr temp" "maybe param" "maybe type" "temp"
    (764916 'move' call_tmp[764913](50162 call c_pointer_return call_tmp[764908]))
    unknown call_tmp[764918] "expr temp" "maybe param" "maybe type" "temp"
    (764921 'move' call_tmp[764918](598181 call c_ptr[46891](?) c_uchar[576]))
    (598184 'move' ret[598176](598183 'coerce' call_tmp[764913] call_tmp[764918]))
    (598178 return ret[598176])
  }
  { scopeless type
    (50133 call c_ptr[46891](?) c_uchar[576])
  }
  function c_ptrTo[50172](ref arg b[50175]:bytes[232]) : _unknown[42] "inline"
  {
    unknown ret[598188] "RVV" "temp"
    unknown call_tmp[764923] "expr temp" "maybe param" "maybe type" "temp"
    (764926 'move' call_tmp[764923](50202 call _cond_test 1))
    if call_tmp[764923]
    {
      unknown call_tmp[764930] "expr temp" "maybe param" "maybe type" "temp"
      (764933 'move' call_tmp[764930](50192 call buffLen _mt[203] b[50175]))
      unknown call_tmp[764935] "expr temp" "maybe param" "maybe type" "temp"
      (764938 'move' call_tmp[764935](50189 call == call_tmp[764930] 0))
      unknown call_tmp[764940] "expr temp" "maybe param" "maybe type" "temp"
      (764943 'move' call_tmp[764940](50196 call _cond_test call_tmp[764935]))
      if call_tmp[764940]
      {
        (50184 call halt "Can't create a C pointer for an empty bytes.")
      }
    }
    unknown call_tmp[764947] "expr temp" "maybe param" "maybe type" "temp"
    (764950 'move' call_tmp[764947](50213 call(50210 call (partial) buff _mt[203] b[50175]) 0))
    unknown call_tmp[764952] "expr temp" "maybe param" "maybe type" "temp"
    (764955 'move' call_tmp[764952](50208 call c_pointer_return call_tmp[764947]))
    unknown call_tmp[764957] "expr temp" "maybe param" "maybe type" "temp"
    (764960 'move' call_tmp[764957](598193 call c_ptr[46891](?) c_uchar[576]))
    (598196 'move' ret[598188](598195 'coerce' call_tmp[764952] call_tmp[764957]))
    (598190 return ret[598188])
  }
  { scopeless type
    (50179 call c_ptr[46891](?) c_uchar[576])
  }
  function c_ptrTo[50218](arg c[50221]:class[195](?)) : _unknown[42] "inline"
  {
    unknown ret[598200] "RVV" "temp"
    unknown call_tmp[764962] "expr temp" "maybe param" "maybe type" "temp"
    (764965 'move' call_tmp[764962](50231 call c_ptr[46891](?) void[4]))
    unknown call_tmp[764969] "expr temp" "maybe param" "maybe type" "temp"
    (764972 'move' call_tmp[764969](50239 call(50236 call (partial) borrow _mt[203] c[50221])))
    unknown call_tmp[764974] "expr temp" "maybe param" "maybe type" "temp"
    (764977 'move' call_tmp[764974](50229 'cast' call_tmp[764962] call_tmp[764969]))
    unknown call_tmp[764979] "expr temp" "maybe param" "maybe type" "temp"
    (764982 'move' call_tmp[764979](598205 call c_ptr[46891](?) void[4]))
    (598208 'move' ret[598200](598207 'coerce' call_tmp[764974] call_tmp[764979]))
    (598202 return ret[598200])
  }
  { scopeless type
    (50225 call c_ptr[46891](?) void[4])
  }
  function c_ptrTo[50243](arg c[50247]:_anyManagementNilable[198](?)) : _unknown[42] "inline"
  {
    unknown ret[598212] "RVV" "temp"
    unknown call_tmp[764984] "expr temp" "maybe param" "maybe type" "temp"
    (764987 'move' call_tmp[764984](50257 call c_ptr[46891](?) void[4]))
    unknown call_tmp[764991] "expr temp" "maybe param" "maybe type" "temp"
    (764994 'move' call_tmp[764991](50263 call(50260 call (partial) borrow _mt[203] c[50247])))
    unknown call_tmp[764996] "expr temp" "maybe param" "maybe type" "temp"
    (764999 'move' call_tmp[764996](50255 'cast' call_tmp[764984] call_tmp[764991]))
    unknown call_tmp[765001] "expr temp" "maybe param" "maybe type" "temp"
    (765004 'move' call_tmp[765001](598217 call c_ptr[46891](?) void[4]))
    (598220 'move' ret[598212](598219 'coerce' call_tmp[764996] call_tmp[765001]))
    (598214 return ret[598212])
  }
  { scopeless type
    (50251 call c_ptr[46891](?) void[4])
  }
  function c_ptrToConst[50267](const  ref arg x[50271]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[598224] "RVV" "temp"
    unknown call_tmp[765006] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765009 'move' call_tmp[765006](515264 'typeof' x[50271]))
    unknown call_tmp[765011] "expr temp" "maybe param" "maybe type" "temp"
    (765014 'move' call_tmp[765011](50285 call isDomainType call_tmp[765006]))
    unknown call_tmp[765016] "expr temp" "maybe param" "maybe type" "temp"
    (765019 'move' call_tmp[765016](50287 call _cond_test call_tmp[765011]))
    if call_tmp[765016]
    {
      (50279 call compilerError "c_ptrToConst domain type not supported")
    }
    unknown call_tmp[765021] "expr temp" "maybe param" "maybe type" "temp"
    (765024 'move' call_tmp[765021](50294 call c_addrOfConst x[50271]))
    unknown call_tmp[765026] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765029 'move' call_tmp[765026](598230 'typeof' x[50271]))
    unknown call_tmp[765031] "expr temp" "maybe param" "maybe type" "temp"
    (765034 'move' call_tmp[765031](598229 call c_ptrConst[46990](?) call_tmp[765026]))
    (598233 'move' ret[598224](598232 'coerce' call_tmp[765021] call_tmp[765031]))
    (598226 return ret[598224])
  }
  { scopeless type
    unknown call_tmp[765036] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765039 'move' call_tmp[765036](515266 'typeof' x[50271]))
    (50275 call c_ptrConst[46990](?) call_tmp[765036])
  }
  function c_ptrToConst[50299](const arg arr[50304]:_array[255540](?)) : _unknown[42] "inline"
  {
    unknown ret[598237] "RVV" "temp"
    unknown call_tmp[765041] "expr temp" "maybe param" "maybe type" "temp"
    (765044 'move' call_tmp[765041](50323 call chpl__isDROrDRView arr[50304]))
    unknown call_tmp[765046] "expr temp" "maybe param" "maybe type" "temp"
    (765049 'move' call_tmp[765046](50320 call ! call_tmp[765041]))
    unknown call_tmp[765051] "expr temp" "maybe param" "maybe type" "temp"
    (765054 'move' call_tmp[765051](50325 call _cond_test call_tmp[765046]))
    if call_tmp[765051]
    {
      (50315 call compilerError "Only single-locale rectangular arrays support c_ptrToConst() at present")
    }
    unknown call_tmp[765056] "expr temp" "maybe param" "maybe type" "temp"
    (765059 'move' call_tmp[765056](50400 call _cond_test 1))
    if call_tmp[765056]
    {
      unknown call_tmp[765063] "expr temp" "maybe param" "maybe type" "temp"
      (765066 'move' call_tmp[765063](50371 call _value _mt[203] arr[50304]))
      unknown call_tmp[765068] "expr temp" "maybe param" "maybe type" "temp"
      (765071 'move' call_tmp[765068](50374 '_wide_get_locale' call_tmp[765063]))
      unknown call_tmp[765073] "expr temp" "maybe param" "maybe type" "temp"
      (765076 'move' call_tmp[765073](50375 call chpl_localeID_to_locale call_tmp[765068]))
      unknown call_tmp[765078] "expr temp" "maybe param" "maybe type" "temp"
      (765081 'move' call_tmp[765078](418716 call here[135591]))
      unknown call_tmp[765083] "expr temp" "maybe param" "maybe type" "temp"
      (765086 'move' call_tmp[765083](50368 call != call_tmp[765073] call_tmp[765078]))
      unknown call_tmp[765088] "expr temp" "maybe param" "maybe type" "temp"
      (765091 'move' call_tmp[765088](50378 call _cond_test call_tmp[765083]))
      if call_tmp[765088]
      {
        unknown call_tmp[765093] "expr temp" "maybe param" "maybe type" "temp"
        (765096 'move' call_tmp[765093](50341 call + "c_ptrToConst() can only be applied to an array from the locale on " "which it lives (array is on locale "))
        unknown call_tmp[765100] "expr temp" "maybe param" "maybe type" "temp"
        (765103 'move' call_tmp[765100](50350 call _value _mt[203] arr[50304]))
        unknown call_tmp[765105] "expr temp" "maybe param" "maybe type" "temp"
        (765108 'move' call_tmp[765105](50356 '_wide_get_node' call_tmp[765100]))
        unknown call_tmp[765110] "expr temp" "maybe param" "maybe type" "temp"
        (765113 'move' call_tmp[765110](50347 call : call_tmp[765105] string[244]))
        unknown call_tmp[765115] "expr temp" "maybe param" "maybe type" "temp"
        (765118 'move' call_tmp[765115](50339 call + call_tmp[765093] call_tmp[765110]))
        unknown call_tmp[765120] "expr temp" "maybe param" "maybe type" "temp"
        (765123 'move' call_tmp[765120](50337 call + call_tmp[765115] ", call was made on locale "))
        unknown call_tmp[765125] "expr temp" "maybe param" "maybe type" "temp"
        (765128 'move' call_tmp[765125](399966 call here[135591]))
        unknown call_tmp[765132] "expr temp" "maybe param" "maybe type" "temp"
        (765135 'move' call_tmp[765132](50362 call id _mt[203] call_tmp[765125]))
        unknown call_tmp[765137] "expr temp" "maybe param" "maybe type" "temp"
        (765140 'move' call_tmp[765137](50359 call : call_tmp[765132] string[244]))
        unknown call_tmp[765142] "expr temp" "maybe param" "maybe type" "temp"
        (765145 'move' call_tmp[765142](50335 call + call_tmp[765120] call_tmp[765137]))
        unknown call_tmp[765147] "expr temp" "maybe param" "maybe type" "temp"
        (765150 'move' call_tmp[765147](50333 call + call_tmp[765142] ")"))
        (50332 call halt call_tmp[765147])
      }
      unknown call_tmp[765154] "expr temp" "maybe param" "maybe type" "temp"
      (765157 'move' call_tmp[765154](50390 call size _mt[203] arr[50304]))
      unknown call_tmp[765159] "expr temp" "maybe param" "maybe type" "temp"
      (765162 'move' call_tmp[765159](50387 call == call_tmp[765154] 0))
      unknown call_tmp[765164] "expr temp" "maybe param" "maybe type" "temp"
      (765167 'move' call_tmp[765164](50394 call _cond_test call_tmp[765159]))
      if call_tmp[765164]
      {
        (50384 call halt "Can't create a C pointer for an array with 0 elements.")
      }
    }
    unknown call_tmp[765171] "expr temp" "maybe param" "maybe type" "temp"
    (765174 'move' call_tmp[765171](50410 call _dom _mt[203] arr[50304]))
    unknown call_tmp[765178] "expr temp" "maybe param" "maybe type" "temp"
    (765181 'move' call_tmp[765178](50413 call low _mt[203] call_tmp[765171]))
    unknown call_tmp[765183] "expr temp" "maybe param" "maybe type" "temp"
    (765186 'move' call_tmp[765183](50408 call arr[50304] call_tmp[765178]))
    unknown call_tmp[765188] "expr temp" "maybe param" "maybe type" "temp"
    (765191 'move' call_tmp[765188](50406 call c_pointer_return_const call_tmp[765183]))
    unknown call_tmp[765195] "expr temp" "maybe param" "maybe type" "temp"
    (765198 'move' call_tmp[765195](598244 call eltType _mt[203] arr[50304]))
    unknown call_tmp[765200] "expr temp" "maybe param" "maybe type" "temp"
    (765203 'move' call_tmp[765200](598242 call c_ptrConst[46990](?) call_tmp[765195]))
    (598248 'move' ret[598237](598247 'coerce' call_tmp[765188] call_tmp[765200]))
    (598239 return ret[598237])
  }
  { scopeless type
    unknown call_tmp[765207] "expr temp" "maybe param" "maybe type" "temp"
    (765210 'move' call_tmp[765207](50310 call eltType _mt[203] arr[50304]))
    (50308 call c_ptrConst[46990](?) call_tmp[765207])
  }
  function c_ptrToConst[50419](const  ref arg s[50422]:string[244]) : _unknown[42] "inline"
  {
    unknown ret[598252] "RVV" "temp"
    unknown call_tmp[765212] "expr temp" "maybe param" "maybe type" "temp"
    (765215 'move' call_tmp[765212](50447 call _cond_test 1))
    if call_tmp[765212]
    {
      unknown call_tmp[765219] "expr temp" "maybe param" "maybe type" "temp"
      (765222 'move' call_tmp[765219](50437 call buffLen _mt[203] s[50422]))
      unknown call_tmp[765224] "expr temp" "maybe param" "maybe type" "temp"
      (765227 'move' call_tmp[765224](50434 call == call_tmp[765219] 0))
      unknown call_tmp[765229] "expr temp" "maybe param" "maybe type" "temp"
      (765232 'move' call_tmp[765229](50441 call _cond_test call_tmp[765224]))
      if call_tmp[765229]
      {
        (50431 call halt "Can't create a C pointer for an empty string.")
      }
    }
    unknown call_tmp[765236] "expr temp" "maybe param" "maybe type" "temp"
    (765239 'move' call_tmp[765236](50458 call(50455 call (partial) buff _mt[203] s[50422]) 0))
    unknown call_tmp[765241] "expr temp" "maybe param" "maybe type" "temp"
    (765244 'move' call_tmp[765241](50453 call c_pointer_return_const call_tmp[765236]))
    unknown call_tmp[765246] "expr temp" "maybe param" "maybe type" "temp"
    (765249 'move' call_tmp[765246](598257 call c_ptrConst[46990](?) c_uchar[576]))
    (598260 'move' ret[598252](598259 'coerce' call_tmp[765241] call_tmp[765246]))
    (598254 return ret[598252])
  }
  { scopeless type
    (50426 call c_ptrConst[46990](?) c_uchar[576])
  }
  function c_ptrToConst[50463](const  ref arg b[50466]:bytes[232]) : _unknown[42] "inline"
  {
    unknown ret[598264] "RVV" "temp"
    unknown call_tmp[765251] "expr temp" "maybe param" "maybe type" "temp"
    (765254 'move' call_tmp[765251](50491 call _cond_test 1))
    if call_tmp[765251]
    {
      unknown call_tmp[765258] "expr temp" "maybe param" "maybe type" "temp"
      (765261 'move' call_tmp[765258](50481 call buffLen _mt[203] b[50466]))
      unknown call_tmp[765263] "expr temp" "maybe param" "maybe type" "temp"
      (765266 'move' call_tmp[765263](50478 call == call_tmp[765258] 0))
      unknown call_tmp[765268] "expr temp" "maybe param" "maybe type" "temp"
      (765271 'move' call_tmp[765268](50485 call _cond_test call_tmp[765263]))
      if call_tmp[765268]
      {
        (50475 call halt "Can't create a C pointer for an empty bytes.")
      }
    }
    unknown call_tmp[765275] "expr temp" "maybe param" "maybe type" "temp"
    (765278 'move' call_tmp[765275](50502 call(50499 call (partial) buff _mt[203] b[50466]) 0))
    unknown call_tmp[765280] "expr temp" "maybe param" "maybe type" "temp"
    (765283 'move' call_tmp[765280](50497 call c_pointer_return_const call_tmp[765275]))
    unknown call_tmp[765285] "expr temp" "maybe param" "maybe type" "temp"
    (765288 'move' call_tmp[765285](598269 call c_ptrConst[46990](?) c_uchar[576]))
    (598272 'move' ret[598264](598271 'coerce' call_tmp[765280] call_tmp[765285]))
    (598266 return ret[598264])
  }
  { scopeless type
    (50470 call c_ptrConst[46990](?) c_uchar[576])
  }
  function c_ptrToConst[50507](const arg c[50510]:class[195](?)) : _unknown[42] "inline"
  {
    unknown ret[598276] "RVV" "temp"
    unknown call_tmp[765290] "expr temp" "maybe param" "maybe type" "temp"
    (765293 'move' call_tmp[765290](50520 call c_ptrConst[46990](?) void[4]))
    unknown call_tmp[765297] "expr temp" "maybe param" "maybe type" "temp"
    (765300 'move' call_tmp[765297](50526 call(50523 call (partial) borrow _mt[203] c[50510])))
    unknown call_tmp[765302] "expr temp" "maybe param" "maybe type" "temp"
    (765305 'move' call_tmp[765302](50518 'cast' call_tmp[765290] call_tmp[765297]))
    unknown call_tmp[765307] "expr temp" "maybe param" "maybe type" "temp"
    (765310 'move' call_tmp[765307](598281 call c_ptrConst[46990](?) void[4]))
    (598284 'move' ret[598276](598283 'coerce' call_tmp[765302] call_tmp[765307]))
    (598278 return ret[598276])
  }
  { scopeless type
    (50514 call c_ptrConst[46990](?) void[4])
  }
  function c_ptrToConst[50530](const arg c[50534]:_anyManagementNilable[198](?)) : _unknown[42] "inline"
  {
    unknown ret[598288] "RVV" "temp"
    unknown call_tmp[765312] "expr temp" "maybe param" "maybe type" "temp"
    (765315 'move' call_tmp[765312](50544 call c_ptrConst[46990](?) void[4]))
    unknown call_tmp[765319] "expr temp" "maybe param" "maybe type" "temp"
    (765322 'move' call_tmp[765319](50550 call(50547 call (partial) borrow _mt[203] c[50534])))
    unknown call_tmp[765324] "expr temp" "maybe param" "maybe type" "temp"
    (765327 'move' call_tmp[765324](50542 'cast' call_tmp[765312] call_tmp[765319]))
    unknown call_tmp[765329] "expr temp" "maybe param" "maybe type" "temp"
    (765332 'move' call_tmp[765329](598293 call c_ptrConst[46990](?) void[4]))
    (598296 'move' ret[598288](598295 'coerce' call_tmp[765324] call_tmp[765329]))
    (598290 return ret[598288])
  }
  { scopeless type
    (50538 call c_ptrConst[46990](?) void[4])
  }
  function c_addrOf[50554](ref arg arr[50559]:_array[255540](?)) : _unknown[42] "inline"
  {
    unknown ret[598300] "RVV" "temp"
    unknown tmp[479643] "maybe param" "temp"
    (479654 'move' tmp[479643] 1)
    unknown call_tmp[765334] "expr temp" "maybe param" "maybe type" "temp"
    (765337 'move' call_tmp[765334](479656 call _cond_invalid tmp[479643]))
    if call_tmp[765334]
    {
      (479659 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[668459] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668460] "maybe param" "temp"
    unknown call_tmp[765339] "expr temp" "maybe param" "maybe type" "temp"
    (765342 'move' call_tmp[765339](479644 call isTrue tmp[479643]))
    (668465 'move' tmp[668460](668463 call _cond_test call_tmp[765339]))
    if tmp[668460]
    {
      unknown tmp[668467] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[765346] "expr temp" "maybe param" "maybe type" "temp"
      (765349 'move' call_tmp[765346](50606 call _value _mt[203] arr[50559]))
      unknown call_tmp[765351] "expr temp" "maybe param" "maybe type" "temp"
      (765354 'move' call_tmp[765351](50609 '_wide_get_locale' call_tmp[765346]))
      unknown call_tmp[765356] "expr temp" "maybe param" "maybe type" "temp"
      (765359 'move' call_tmp[765356](50610 call chpl_localeID_to_locale call_tmp[765351]))
      unknown call_tmp[765361] "expr temp" "maybe param" "maybe type" "temp"
      (765364 'move' call_tmp[765361](418733 call here[135591]))
      unknown call_tmp[765366] "expr temp" "maybe param" "maybe type" "temp"
      (765369 'move' call_tmp[765366](50603 call != call_tmp[765356] call_tmp[765361]))
      (668469 'move' tmp[668467](479647 call isTrue call_tmp[765366]))
      (668474 'move' tmp[668459](668471 '_paramFoldLogical' tmp[668460] tmp[668467]))
    }
    {
      (668479 'move' tmp[668459](668476 '_paramFoldLogical' tmp[668460] 0))
    }
    unknown call_tmp[765371] "expr temp" "maybe param" "maybe type" "temp"
    (765374 'move' call_tmp[765371](50613 call _cond_test tmp[668459]))
    if call_tmp[765371]
    {
      unknown call_tmp[765376] "expr temp" "maybe param" "maybe type" "temp"
      (765379 'move' call_tmp[765376](50573 call + "c_addrOf() can only be applied to an array from the locale on " "which it lives (array is on locale "))
      unknown call_tmp[765383] "expr temp" "maybe param" "maybe type" "temp"
      (765386 'move' call_tmp[765383](50582 call _value _mt[203] arr[50559]))
      unknown call_tmp[765388] "expr temp" "maybe param" "maybe type" "temp"
      (765391 'move' call_tmp[765388](50588 '_wide_get_node' call_tmp[765383]))
      unknown call_tmp[765393] "expr temp" "maybe param" "maybe type" "temp"
      (765396 'move' call_tmp[765393](50579 call : call_tmp[765388] string[244]))
      unknown call_tmp[765398] "expr temp" "maybe param" "maybe type" "temp"
      (765401 'move' call_tmp[765398](50571 call + call_tmp[765376] call_tmp[765393]))
      unknown call_tmp[765403] "expr temp" "maybe param" "maybe type" "temp"
      (765406 'move' call_tmp[765403](50569 call + call_tmp[765398] ", call was made on locale "))
      unknown call_tmp[765408] "expr temp" "maybe param" "maybe type" "temp"
      (765411 'move' call_tmp[765408](399978 call here[135591]))
      unknown call_tmp[765415] "expr temp" "maybe param" "maybe type" "temp"
      (765418 'move' call_tmp[765415](50594 call id _mt[203] call_tmp[765408]))
      unknown call_tmp[765420] "expr temp" "maybe param" "maybe type" "temp"
      (765423 'move' call_tmp[765420](50591 call : call_tmp[765415] string[244]))
      unknown call_tmp[765425] "expr temp" "maybe param" "maybe type" "temp"
      (765428 'move' call_tmp[765425](50567 call + call_tmp[765403] call_tmp[765420]))
      unknown call_tmp[765430] "expr temp" "maybe param" "maybe type" "temp"
      (765433 'move' call_tmp[765430](50565 call + call_tmp[765425] ")"))
      (50564 call halt call_tmp[765430])
    }
    unknown call_tmp[765435] "expr temp" "maybe param" "maybe type" "temp"
    (765438 'move' call_tmp[765435](50620 call c_pointer_return arr[50559]))
    (598305 'move' ret[598300](598304 'deref' call_tmp[765435]))
    (598302 return ret[598300])
  }
  function c_addrOfConst[50624](const arg arr[50629]:_array[255540](?)) : _unknown[42] "inline"
  {
    unknown ret[598309] "RVV" "temp"
    unknown tmp[479664] "maybe param" "temp"
    (479675 'move' tmp[479664] 1)
    unknown call_tmp[765440] "expr temp" "maybe param" "maybe type" "temp"
    (765443 'move' call_tmp[765440](479677 call _cond_invalid tmp[479664]))
    if call_tmp[765440]
    {
      (479680 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[668486] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[668487] "maybe param" "temp"
    unknown call_tmp[765445] "expr temp" "maybe param" "maybe type" "temp"
    (765448 'move' call_tmp[765445](479665 call isTrue tmp[479664]))
    (668492 'move' tmp[668487](668490 call _cond_test call_tmp[765445]))
    if tmp[668487]
    {
      unknown tmp[668494] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[765452] "expr temp" "maybe param" "maybe type" "temp"
      (765455 'move' call_tmp[765452](50676 call _value _mt[203] arr[50629]))
      unknown call_tmp[765457] "expr temp" "maybe param" "maybe type" "temp"
      (765460 'move' call_tmp[765457](50679 '_wide_get_locale' call_tmp[765452]))
      unknown call_tmp[765462] "expr temp" "maybe param" "maybe type" "temp"
      (765465 'move' call_tmp[765462](50680 call chpl_localeID_to_locale call_tmp[765457]))
      unknown call_tmp[765467] "expr temp" "maybe param" "maybe type" "temp"
      (765470 'move' call_tmp[765467](418737 call here[135591]))
      unknown call_tmp[765472] "expr temp" "maybe param" "maybe type" "temp"
      (765475 'move' call_tmp[765472](50673 call != call_tmp[765462] call_tmp[765467]))
      (668496 'move' tmp[668494](479668 call isTrue call_tmp[765472]))
      (668501 'move' tmp[668486](668498 '_paramFoldLogical' tmp[668487] tmp[668494]))
    }
    {
      (668506 'move' tmp[668486](668503 '_paramFoldLogical' tmp[668487] 0))
    }
    unknown call_tmp[765477] "expr temp" "maybe param" "maybe type" "temp"
    (765480 'move' call_tmp[765477](50683 call _cond_test tmp[668486]))
    if call_tmp[765477]
    {
      unknown call_tmp[765482] "expr temp" "maybe param" "maybe type" "temp"
      (765485 'move' call_tmp[765482](50643 call + "c_addrOfConst() can only be applied to an array from the locale on " "which it lives (array is on locale "))
      unknown call_tmp[765489] "expr temp" "maybe param" "maybe type" "temp"
      (765492 'move' call_tmp[765489](50652 call _value _mt[203] arr[50629]))
      unknown call_tmp[765494] "expr temp" "maybe param" "maybe type" "temp"
      (765497 'move' call_tmp[765494](50658 '_wide_get_node' call_tmp[765489]))
      unknown call_tmp[765499] "expr temp" "maybe param" "maybe type" "temp"
      (765502 'move' call_tmp[765499](50649 call : call_tmp[765494] string[244]))
      unknown call_tmp[765504] "expr temp" "maybe param" "maybe type" "temp"
      (765507 'move' call_tmp[765504](50641 call + call_tmp[765482] call_tmp[765499]))
      unknown call_tmp[765509] "expr temp" "maybe param" "maybe type" "temp"
      (765512 'move' call_tmp[765509](50639 call + call_tmp[765504] ", call was made on locale "))
      unknown call_tmp[765514] "expr temp" "maybe param" "maybe type" "temp"
      (765517 'move' call_tmp[765514](399982 call here[135591]))
      unknown call_tmp[765521] "expr temp" "maybe param" "maybe type" "temp"
      (765524 'move' call_tmp[765521](50664 call id _mt[203] call_tmp[765514]))
      unknown call_tmp[765526] "expr temp" "maybe param" "maybe type" "temp"
      (765529 'move' call_tmp[765526](50661 call : call_tmp[765521] string[244]))
      unknown call_tmp[765531] "expr temp" "maybe param" "maybe type" "temp"
      (765534 'move' call_tmp[765531](50637 call + call_tmp[765509] call_tmp[765526]))
      unknown call_tmp[765536] "expr temp" "maybe param" "maybe type" "temp"
      (765539 'move' call_tmp[765536](50635 call + call_tmp[765531] ")"))
      (50634 call halt call_tmp[765536])
    }
    unknown call_tmp[765541] "expr temp" "maybe param" "maybe type" "temp"
    (765544 'move' call_tmp[765541](50690 call c_pointer_return_const arr[50629]))
    (598314 'move' ret[598309](598313 'deref' call_tmp[765541]))
    (598311 return ret[598309])
  }
  function c_addrOf[50694](ref arg x[50698]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[598318] "RVV" "temp"
    unknown call_tmp[765546] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765549 'move' call_tmp[765546](515274 'typeof' x[50698]))
    unknown call_tmp[765551] "expr temp" "maybe param" "maybe type" "temp"
    (765554 'move' call_tmp[765551](50712 call isDomainType call_tmp[765546]))
    unknown call_tmp[765556] "expr temp" "maybe param" "maybe type" "temp"
    (765559 'move' call_tmp[765556](50714 call _cond_test call_tmp[765551]))
    if call_tmp[765556]
    {
      (50706 call compilerError "c_addrOf domain type not supported")
    }
    unknown call_tmp[765561] "expr temp" "maybe param" "maybe type" "temp"
    (765564 'move' call_tmp[765561](50721 call c_pointer_return x[50698]))
    unknown call_tmp[765566] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765569 'move' call_tmp[765566](598324 'typeof' x[50698]))
    unknown call_tmp[765571] "expr temp" "maybe param" "maybe type" "temp"
    (765574 'move' call_tmp[765571](598323 call c_ptr[46891](?) call_tmp[765566]))
    (598327 'move' ret[598318](598326 'coerce' call_tmp[765561] call_tmp[765571]))
    (598320 return ret[598318])
  }
  { scopeless type
    unknown call_tmp[765576] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765579 'move' call_tmp[765576](515276 'typeof' x[50698]))
    (50702 call c_ptr[46891](?) call_tmp[765576])
  }
  function c_addrOfConst[50726](const  ref arg x[50730]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[598331] "RVV" "temp"
    unknown call_tmp[765581] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765584 'move' call_tmp[765581](515278 'typeof' x[50730]))
    unknown call_tmp[765586] "expr temp" "maybe param" "maybe type" "temp"
    (765589 'move' call_tmp[765586](50744 call isDomainType call_tmp[765581]))
    unknown call_tmp[765591] "expr temp" "maybe param" "maybe type" "temp"
    (765594 'move' call_tmp[765591](50746 call _cond_test call_tmp[765586]))
    if call_tmp[765591]
    {
      (50738 call compilerError "c_addrOfConst domain type not supported")
    }
    unknown call_tmp[765596] "expr temp" "maybe param" "maybe type" "temp"
    (765599 'move' call_tmp[765596](50753 call c_pointer_return_const x[50730]))
    unknown call_tmp[765601] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765604 'move' call_tmp[765601](598337 'typeof' x[50730]))
    unknown call_tmp[765606] "expr temp" "maybe param" "maybe type" "temp"
    (765609 'move' call_tmp[765606](598336 call c_ptrConst[46990](?) call_tmp[765601]))
    (598340 'move' ret[598331](598339 'coerce' call_tmp[765596] call_tmp[765606]))
    (598333 return ret[598331])
  }
  { scopeless type
    unknown call_tmp[765611] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765614 'move' call_tmp[765611](515280 'typeof' x[50730]))
    (50734 call c_ptrConst[46990](?) call_tmp[765611])
  }
  function c_addrOf[50758](arg x[50761] :
  c_fn_ptr[51982]) : _unknown[42] "inline"
  {
    unknown ret[598344] "RVV" "temp"
    (598349 'move' ret[598344](598348 'deref' x[50761]))
    (598346 return ret[598344])
  }
  function offset_ARRAY_ELEMENTS[50769]() : _unknown[42] "no parens" "private"
  {
    unknown ret[598353] "RVV" "temp"
    const CHPL_RT_MD_ARRAY_ELEMENTS[50773] "dead at end of block" "const" "extern" "insert auto destroy"
    { scopeless type extern
      (644273 'default init var' CHPL_RT_MD_ARRAY_ELEMENTS[50773] chpl_mem_descInt_t[67536])
    }
    (50776 'end of statement')
    function chpl_memhook_md_num[50777]() : _unknown[42] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      chpl_mem_descInt_t[67536]
    }
    unknown call_tmp[765616] "expr temp" "maybe param" "maybe type" "temp"
    (765619 'move' call_tmp[765616](50788 call chpl_memhook_md_num))
    unknown call_tmp[765621] "expr temp" "maybe param" "maybe type" "temp"
    (765624 'move' call_tmp[765621](50784 call - CHPL_RT_MD_ARRAY_ELEMENTS[50773] call_tmp[765616]))
    (598358 'move' ret[598353](598357 'deref' call_tmp[765621]))
    gotoReturn _end_offset_ARRAY_ELEMENTS[598351] _end_offset_ARRAY_ELEMENTS[598351]
    (549778 'end of statement' CHPL_RT_MD_ARRAY_ELEMENTS[50773])
    label _end_offset_ARRAY_ELEMENTS[598351]
    (598355 return ret[598353])
  }
  function c_sizeof[50791](arg t[50793]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[598364] "RVV" "temp"
    function sizeof[50797](arg t[50799]:_any[141](?)) : _unknown[42] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_size_t[614]
    }
    unknown call_tmp[765626] "expr temp" "maybe param" "maybe type" "temp"
    (765629 'move' call_tmp[765626](50807 call sizeof t[50793]))
    (598370 'move' ret[598364](598369 'coerce' call_tmp[765626] c_size_t[614]))
    (598366 return ret[598364])
  }
  { scopeless type
    c_size_t[614]
  }
  function c_offsetof[50812](arg t[50814]:_any[141](?), param arg fieldname[50817]:string[244]) : _unknown[42]
  {
    unknown ret[598374] "RVV" "temp"
    unknown x[50829] "dead at end of block" "no auto destroy" "no init"
    (644276 'default init var' x[50829] t[50814])
    (50832 'end of statement')
    unknown call_tmp[765631] "expr temp" "maybe param" "maybe type" "temp"
    (765634 'move' call_tmp[765631](50841 call getFieldRef x[50829] fieldname[50817]))
    unknown call_tmp[765636] "expr temp" "maybe param" "maybe type" "temp"
    (765639 'move' call_tmp[765636](50839 call c_addrOf call_tmp[765631]))
    unknown call_tmp[765641] "expr temp" "maybe param" "maybe type" "temp"
    (765644 'move' call_tmp[765641](50836 call : call_tmp[765636] c_size_t[614]))
    unknown call_tmp[765646] "expr temp" "maybe param" "maybe type" "temp"
    (765649 'move' call_tmp[765646](50848 call c_addrOf x[50829]))
    unknown call_tmp[765651] "expr temp" "maybe param" "maybe type" "temp"
    (765654 'move' call_tmp[765651](50845 call : call_tmp[765646] c_size_t[614]))
    unknown call_tmp[765656] "expr temp" "maybe param" "maybe type" "temp"
    (765659 'move' call_tmp[765656](50834 call - call_tmp[765641] call_tmp[765651]))
    (598380 'move' ret[598374](598379 'coerce' call_tmp[765656] c_size_t[614]))
    gotoReturn _end_c_offsetof[598372] _end_c_offsetof[598372]
    (549781 'end of statement' x[50829])
    label _end_c_offsetof[598372]
    (598376 return ret[598374])
    (396040 'used modules list'(50826 'use' Reflection[1804]))
  }
  where {
    (50822 call isRecordType t[50814])
  }
  { scopeless type
    c_size_t[614]
  }
  function c_offsetof[50855](arg t[50857]:_any[141](?), param arg fieldname[50860]:string[244]) : _unknown[42] "no return value for void"
  {
    (50870 call compilerError "Cannot call c_offsetof on type that is not a record")
    (598384 return _void[46])
  }
  where {
    unknown call_tmp[765661] "expr temp" "maybe param" "maybe type" "temp"
    (765664 'move' call_tmp[765661](50866 call isRecordType t[50857]))
    (50863 call ! call_tmp[765661])
  }
  function allocate[50877](arg eltType[50879]:_any[141](?), arg size[50882] :
  c_size_t[614], arg clear[50887]:bool[19] =
  0, arg alignment[50893] :
  c_size_t[614] =
  0) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[598388] "RVV" "temp"
    unknown call_tmp[765666] "expr temp" "maybe param" "maybe type" "temp"
    (765669 'move' call_tmp[765666](50907 call c_sizeof eltType[50879]))
    unknown call_tmp[765671] "maybe param" "maybe type" "temp"
    (765674 'move' call_tmp[765671](50903 call * size[50882] call_tmp[765666]))
    const alloc_size[50902] "dead at end of block" "const" "insert auto destroy"
    (644278 'init var' alloc_size[50902] call_tmp[765671])
    (50910 'end of statement')
    unknown call_tmp[765676] "maybe param" "maybe type" "temp"
    (765679 'move' call_tmp[765676](50914 call != alignment[50893] 0))
    const aligned[50912] "dead at end of block" "const" "insert auto destroy"
    (644280 'init var' aligned[50912] call_tmp[765676] bool[19])
    (50919 'end of statement')
    unknown call_tmp[765681] "maybe param" "maybe type" "temp"
    (765684 'move' call_tmp[765681](50923 call c_ptr[46891](?) void[4]))
    unknown ptr[50921] "dead at end of block" "insert auto destroy"
    (644282 'init var' ptr[50921] nil[32] call_tmp[765681])
    (50927 'end of statement')
    unknown call_tmp[765686] "expr temp" "maybe param" "maybe type" "temp"
    (765689 'move' call_tmp[765686](51063 call ! aligned[50912]))
    unknown call_tmp[765691] "expr temp" "maybe param" "maybe type" "temp"
    (765694 'move' call_tmp[765691](51066 call _cond_test call_tmp[765686]))
    if call_tmp[765691]
    {
      unknown call_tmp[765696] "expr temp" "maybe param" "maybe type" "temp"
      (765699 'move' call_tmp[765696](50947 call _cond_test clear[50887]))
      if call_tmp[765696]
      {
        unknown call_tmp[765701] "expr temp" "maybe param" "maybe type" "temp"
        (765704 'move' call_tmp[765701](418777 call offset_ARRAY_ELEMENTS[50769]))
        unknown call_tmp[765706] "expr temp" "maybe param" "maybe type" "temp"
        (765709 'move' call_tmp[765706](50934 call chpl_here_calloc alloc_size[50902] 1 call_tmp[765701]))
        (50930 call = ptr[50921] call_tmp[765706])
        (549784 'end of statement' ptr[50921] alloc_size[50902])
      }
      {
        unknown call_tmp[765711] "expr temp" "maybe param" "maybe type" "temp"
        (765714 'move' call_tmp[765711](418781 call offset_ARRAY_ELEMENTS[50769]))
        unknown call_tmp[765716] "expr temp" "maybe param" "maybe type" "temp"
        (765719 'move' call_tmp[765716](50943 call chpl_here_alloc alloc_size[50902] call_tmp[765711]))
        (50939 call = ptr[50921] call_tmp[765716])
        (549787 'end of statement' ptr[50921] alloc_size[50902])
      }
    }
    {
      unknown call_tmp[765721] "expr temp" "maybe param" "maybe type" "temp"
      (765724 'move' call_tmp[765721](51034 call _cond_test 1))
      if call_tmp[765721]
      {
        unknown one[50957] "dead at end of block" "insert auto destroy"
        (644284 'init var' one[50957] 1 c_size_t[614])
        (50961 'end of statement')
        unknown call_tmp[765726] "maybe param" "maybe type" "temp"
        (765729 'move' call_tmp[765726](50965 call log2 alignment[50893]))
        unknown p[50963] "dead at end of block" "insert auto destroy"
        (644286 'init var' p[50963] call_tmp[765726])
        (50968 'end of statement')
        unknown call_tmp[765731] "expr temp" "maybe param" "maybe type" "temp"
        (765734 'move' call_tmp[765731](50976 call << one[50957] p[50963]))
        unknown call_tmp[765736] "expr temp" "maybe param" "maybe type" "temp"
        (765739 'move' call_tmp[765736](50974 call < call_tmp[765731] alignment[50893]))
        unknown call_tmp[765741] "expr temp" "maybe param" "maybe type" "temp"
        (765744 'move' call_tmp[765741](50981 call _cond_test call_tmp[765736]))
        if call_tmp[765741]
        {
          (50969 call += p[50963] 1)
          (549790 'end of statement' p[50963])
        }
        unknown call_tmp[765746] "expr temp" "maybe param" "maybe type" "temp"
        (765749 'move' call_tmp[765746](50991 call << one[50957] p[50963]))
        unknown call_tmp[765751] "expr temp" "maybe param" "maybe type" "temp"
        (765754 'move' call_tmp[765751](50988 call <= alignment[50893] call_tmp[765746]))
        (50987 call assert call_tmp[765751])
        (549792 'end of statement' one[50957] p[50963])
        unknown call_tmp[765756] "expr temp" "maybe param" "maybe type" "temp"
        (765759 'move' call_tmp[765756](51005 call << one[50957] p[50963]))
        unknown call_tmp[765761] "expr temp" "maybe param" "maybe type" "temp"
        (765764 'move' call_tmp[765761](51002 call != alignment[50893] call_tmp[765756]))
        unknown call_tmp[765766] "expr temp" "maybe param" "maybe type" "temp"
        (765769 'move' call_tmp[765766](51009 call _cond_test call_tmp[765761]))
        if call_tmp[765766]
        {
          (50996 call halt "allocate called with non-power-of-2 alignment " alignment[50893])
        }
        unknown call_tmp[765771] "expr temp" "maybe param" "maybe type" "temp"
        (765774 'move' call_tmp[765771](51026 call c_ptr[46891](?) void[4]))
        unknown call_tmp[765776] "expr temp" "maybe param" "maybe type" "temp"
        (765779 'move' call_tmp[765776](51024 call c_sizeof call_tmp[765771]))
        unknown call_tmp[765781] "expr temp" "maybe param" "maybe type" "temp"
        (765784 'move' call_tmp[765781](51020 call < alignment[50893] call_tmp[765776]))
        unknown call_tmp[765786] "expr temp" "maybe param" "maybe type" "temp"
        (765789 'move' call_tmp[765786](51028 call _cond_test call_tmp[765781]))
        if call_tmp[765786]
        {
          (51015 call halt "allocate called with alignment smaller than pointer size")
        }
        (396042 'used modules list'(50954 'use' Math[10521]))
      }
      unknown call_tmp[765791] "expr temp" "maybe param" "maybe type" "temp"
      (765794 'move' call_tmp[765791](418803 call offset_ARRAY_ELEMENTS[50769]))
      unknown call_tmp[765796] "expr temp" "maybe param" "maybe type" "temp"
      (765799 'move' call_tmp[765796](51042 call chpl_here_aligned_alloc alignment[50893] alloc_size[50902] call_tmp[765791]))
      (51038 call = ptr[50921] call_tmp[765796])
      (549797 'end of statement' ptr[50921] alloc_size[50902])
      unknown call_tmp[765801] "expr temp" "maybe param" "maybe type" "temp"
      (765804 'move' call_tmp[765801](51059 call _cond_test clear[50887]))
      if call_tmp[765801]
      {
        (51054 call memset ptr[50921] 0 alloc_size[50902])
        (549800 'end of statement' ptr[50921] alloc_size[50902])
        (396044 'used modules list'(51051 'use' POSIX[12822]))
      }
    }
    unknown call_tmp[765806] "expr temp" "maybe param" "maybe type" "temp"
    (765809 'move' call_tmp[765806](51075 call c_ptr[46891](?) eltType[50879]))
    unknown call_tmp[765811] "expr temp" "maybe param" "maybe type" "temp"
    (765814 'move' call_tmp[765811](51071 call : ptr[50921] call_tmp[765806]))
    unknown call_tmp[765816] "expr temp" "maybe param" "maybe type" "temp"
    (765819 'move' call_tmp[765816](598393 call c_ptr[46891](?) eltType[50879]))
    (598396 'move' ret[598388](598395 'coerce' call_tmp[765811] call_tmp[765816]))
    gotoReturn _end_allocate[598386] _end_allocate[598386]
    (549803 'end of statement' ptr[50921])
    label _end_allocate[598386]
    (598390 return ret[598388])
  }
  { scopeless type
    (50898 call c_ptr[46891](?) eltType[50879])
  }
  function deallocate[51080](arg data[51085] :
  (51083 call c_ptr[46891](?) void[4])) : _unknown[42] "inline" "@unstable" "no return value for void"
  {
    (51090 call chpl_here_free data[51085])
    (598400 return _void[46])
  }
  function isAnyCPtr[51094](arg t[51097]:c_ptr[46891](?)) param : _unknown[42]
  {
    unknown ret[598404] "RVV" "param" "temp"
    (598409 'move' ret[598404](598408 'deref' 1))
    (598406 return ret[598404])
  }
  function isAnyCPtr[51105](arg t[51108]:c_ptrConst[46990](?)) param : _unknown[42]
  {
    unknown ret[598413] "RVV" "param" "temp"
    (598418 'move' ret[598413](598417 'deref' 1))
    (598415 return ret[598413])
  }
  function isAnyCPtr[51116](arg t[51118]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[598422] "RVV" "param" "temp"
    (598427 'move' ret[598422](598426 'deref' 0))
    (598424 return ret[598422])
  }
  function strLen[51125](arg x[51131]:c_ptr[46891](?)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[598431] "RVV" "temp"
    unknown call_tmp[765821] "expr temp" "maybe param" "maybe type" "temp"
    (765824 'move' call_tmp[765821](51137 'string_length_bytes' x[51131]))
    unknown call_tmp[765828] "expr temp" "maybe param" "maybe type" "temp"
    (765831 'move' call_tmp[765828](51142 call(51139 call (partial) safeCast _mt[203] call_tmp[765821]) int(64)[10]))
    (598437 'move' ret[598431](598436 'coerce' call_tmp[765828] int(64)[10]))
    (598433 return ret[598431])
  }
  { scopeless type
    int(64)[10]
  }
  function strLen[51147](arg x[51153]:c_ptrConst[46990](?)) : _unknown[42] "inline" "@unstable"
  {
    unknown ret[598441] "RVV" "temp"
    unknown call_tmp[765833] "expr temp" "maybe param" "maybe type" "temp"
    (765836 'move' call_tmp[765833](51159 'string_length_bytes' x[51153]))
    unknown call_tmp[765840] "expr temp" "maybe param" "maybe type" "temp"
    (765843 'move' call_tmp[765840](51164 call(51161 call (partial) safeCast _mt[203] call_tmp[765833]) int(64)[10]))
    (598447 'move' ret[598441](598446 'coerce' call_tmp[765840] int(64)[10]))
    (598443 return ret[598441])
  }
  { scopeless type
    int(64)[10]
  }
  function string[244].c_str[51169](arg _mt[51175]:_MT[201], arg this[51172]:string[244] :
  string[244]) : _unknown[42] "inline" "method" "@unstable"
  {
    unknown ret[598451] "RVV" "temp"
    unknown call_tmp[765845] "expr temp" "maybe param" "maybe type" "temp"
    (765848 'move' call_tmp[765845](51188 call getCStr this[51172]))
    unknown call_tmp[765850] "expr temp" "maybe param" "maybe type" "temp"
    (765853 'move' call_tmp[765850](598456 call c_ptrConst[46990](?) c_char[562]))
    (598459 'move' ret[598451](598458 'coerce' call_tmp[765845] call_tmp[765850]))
    (598453 return ret[598451])
    (396046 'used modules list'(51184 'use' BytesStringCommon[46748] 'only' getCStr))
  }
  { scopeless type
    (51178 call c_ptrConst[46990](?) c_char[562])
  }
  function bytes[232].c_str[51193](arg _mt[51199]:_MT[201], arg this[51196]:bytes[232] :
  bytes[232]) : _unknown[42] "inline" "method" "@unstable"
  {
    unknown ret[598463] "RVV" "temp"
    unknown call_tmp[765855] "expr temp" "maybe param" "maybe type" "temp"
    (765858 'move' call_tmp[765855](51212 call getCStr this[51196]))
    unknown call_tmp[765860] "expr temp" "maybe param" "maybe type" "temp"
    (765863 'move' call_tmp[765860](598468 call c_ptrConst[46990](?) c_char[562]))
    (598471 'move' ret[598463](598470 'coerce' call_tmp[765855] call_tmp[765860]))
    (598465 return ret[598463])
    (396048 'used modules list'(51208 'use' BytesStringCommon[46748] 'only' getCStr))
  }
  { scopeless type
    (51202 call c_ptrConst[46990](?) c_char[562])
  }
  function |writeSerializable[475162]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] c_ptr[46891](?)
    {
    }
    (598475 return _void[46])
  }
  function |writeSerializable[475167]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] c_ptrConst[46990](?)
    {
    }
    (598479 return _void[46])
  }
  function |writeSerializable[475172]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] c_array[47643](?)
    {
    }
    (598483 return _void[46])
  }
  (396036 'used modules list'(387008 'use' ChapelStandard[315387])(46752 'use' HaltWrappers[518])(46755 'use' ChapelSysCTypes[826]))
}
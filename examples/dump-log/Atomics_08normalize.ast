AST dump for Atomics after pass normalize.
Module use list: ChapelBase MemConsistency ChplConfig currentTask 

{
  function chpl__init_Atomics[468381]() : void[4] "insert line file info" "module init"
  {
    (1000977 'resolution point' |writeSerializable[475187])
    (1000979 'end of statement')
    (1000980 'resolution point' |writeSerializable[475192])
    (1000982 'end of statement')
    (599572 return _void[46])
  }
  function chpl_atomic_thread_fence[81479](arg order[81482]:memory_order[80955]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
  {
  }
  function atomic_fence[81487](arg order[81491]:memory_order[80955] =
  memory_order_seq_cst[81211]) : _unknown[42] "no return value for void"
  {
    (81497 call chpl_atomic_thread_fence order[81491])
    (550118 'end of statement')
    unknown call_tmp[768684] "expr temp" "maybe param" "maybe type" "temp"
    (768687 'move' call_tmp[768684](81504 call _cond_test 1))
    if call_tmp[768684]
    {
      (81500 call chpl_rmem_consist_fence order[81491])
    }
    (598989 return _void[46])
  }
  function atomicFence[81511](param arg order[81518]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "inline" "no return value for void"
  {
    unknown call_tmp[768689] "expr temp" "maybe param" "maybe type" "temp"
    (768692 'move' call_tmp[768689](81526 call c_memory_order order[81518]))
    (81524 call atomic_fence call_tmp[768689])
    (598991 return _void[46])
  }
  function isSupported[81530](arg valType[81532]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[598995] "RVV" "param" "temp"
    unknown tmp[481806] "maybe param" "temp"
    unknown tmp[481827] "maybe param" "temp"
    unknown tmp[481848] "maybe param" "temp"
    (481859 'move' tmp[481848](81542 call == valType[81532] bool[19]))
    unknown call_tmp[768694] "expr temp" "maybe param" "maybe type" "temp"
    (768697 'move' call_tmp[768694](481861 call _cond_invalid tmp[481848]))
    if call_tmp[768694]
    {
      (481864 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[669077] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669078] "maybe param" "temp"
    unknown call_tmp[768699] "expr temp" "maybe param" "maybe type" "temp"
    (768702 'move' call_tmp[768699](481849 call isTrue tmp[481848]))
    (669083 'move' tmp[669078](669081 call _cond_test call_tmp[768699]))
    if tmp[669078]
    {
      (669088 'move' tmp[669077](669085 '_paramFoldLogical' tmp[669078] 1))
    }
    {
      unknown tmp[669090] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[768704] "expr temp" "maybe param" "maybe type" "temp"
      (768707 'move' call_tmp[768704](81547 call isInt valType[81532]))
      (669092 'move' tmp[669090](481853 call isTrue call_tmp[768704]))
      (669097 'move' tmp[669077](669094 '_paramFoldLogical' tmp[669078] tmp[669090]))
    }
    (481838 'move' tmp[481827] tmp[669077])
    unknown call_tmp[768709] "expr temp" "maybe param" "maybe type" "temp"
    (768712 'move' call_tmp[768709](481840 call _cond_invalid tmp[481827]))
    if call_tmp[768709]
    {
      (481843 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[669104] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669105] "maybe param" "temp"
    unknown call_tmp[768714] "expr temp" "maybe param" "maybe type" "temp"
    (768717 'move' call_tmp[768714](481828 call isTrue tmp[481827]))
    (669110 'move' tmp[669105](669108 call _cond_test call_tmp[768714]))
    if tmp[669105]
    {
      (669115 'move' tmp[669104](669112 '_paramFoldLogical' tmp[669105] 1))
    }
    {
      unknown tmp[669117] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[768719] "expr temp" "maybe param" "maybe type" "temp"
      (768722 'move' call_tmp[768719](81550 call isUint valType[81532]))
      (669119 'move' tmp[669117](481832 call isTrue call_tmp[768719]))
      (669124 'move' tmp[669104](669121 '_paramFoldLogical' tmp[669105] tmp[669117]))
    }
    (481817 'move' tmp[481806] tmp[669104])
    unknown call_tmp[768724] "expr temp" "maybe param" "maybe type" "temp"
    (768727 'move' call_tmp[768724](481819 call _cond_invalid tmp[481806]))
    if call_tmp[768724]
    {
      (481822 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[669131] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[669132] "maybe param" "temp"
    unknown call_tmp[768729] "expr temp" "maybe param" "maybe type" "temp"
    (768732 'move' call_tmp[768729](481807 call isTrue tmp[481806]))
    (669137 'move' tmp[669132](669135 call _cond_test call_tmp[768729]))
    if tmp[669132]
    {
      (669142 'move' tmp[669131](669139 '_paramFoldLogical' tmp[669132] 1))
    }
    {
      unknown tmp[669144] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[768734] "expr temp" "maybe param" "maybe type" "temp"
      (768737 'move' call_tmp[768734](81553 call isReal valType[81532]))
      (669146 'move' tmp[669144](481811 call isTrue call_tmp[768734]))
      (669151 'move' tmp[669131](669148 '_paramFoldLogical' tmp[669132] tmp[669144]))
    }
    (599000 'move' ret[598995](598999 'deref' tmp[669131]))
    (598997 return ret[598995])
  }
  function externT[81557](arg valType[81559]:_any[141](?)) type : _unknown[42] "private"
  {
    unknown ret[599004] "RVV" "temp" "type variable"
    type atomic_bool[81566]
    type atomic_int_least8_t[81572]
    type atomic_int_least16_t[81578]
    type atomic_int_least32_t[81584]
    type atomic_int_least64_t[81590]
    type atomic_uint_least8_t[81596]
    type atomic_uint_least16_t[81602]
    type atomic_uint_least32_t[81608]
    type atomic_uint_least64_t[81614]
    type atomic__real64[81620]
    type atomic__real32[81626]
    {
      unknown tmp[81739] "expr temp" "maybe param" "maybe type" "temp"
      (81741 'move' tmp[81739] valType[81559])
      unknown call_tmp[768739] "expr temp" "maybe param" "maybe type" "temp"
      (768742 'move' call_tmp[768739](81743 call == tmp[81739] bool[19]))
      unknown call_tmp[768744] "expr temp" "maybe param" "maybe type" "temp"
      (768747 'move' call_tmp[768744](81746 call _cond_test call_tmp[768739]))
      if call_tmp[768744]
      {
        (599009 'move' ret[599004](599008 'deref' atomic_bool[81566]))
        gotoReturn _end_externT[599002] _end_externT[599002]
      }
      {
        unknown call_tmp[768749] "expr temp" "maybe param" "maybe type" "temp"
        (768752 'move' call_tmp[768749](81640 call int(64)[10] 8))
        unknown call_tmp[768754] "expr temp" "maybe param" "maybe type" "temp"
        (768757 'move' call_tmp[768754](81749 call == tmp[81739] call_tmp[768749]))
        unknown call_tmp[768759] "expr temp" "maybe param" "maybe type" "temp"
        (768762 'move' call_tmp[768759](81752 call _cond_test call_tmp[768754]))
        if call_tmp[768759]
        {
          (599014 'move' ret[599004](599013 'deref' atomic_int_least8_t[81572]))
          gotoReturn _end_externT[599002] _end_externT[599002]
        }
        {
          unknown call_tmp[768764] "expr temp" "maybe param" "maybe type" "temp"
          (768767 'move' call_tmp[768764](81650 call int(64)[10] 16))
          unknown call_tmp[768769] "expr temp" "maybe param" "maybe type" "temp"
          (768772 'move' call_tmp[768769](81756 call == tmp[81739] call_tmp[768764]))
          unknown call_tmp[768774] "expr temp" "maybe param" "maybe type" "temp"
          (768777 'move' call_tmp[768774](81759 call _cond_test call_tmp[768769]))
          if call_tmp[768774]
          {
            (599019 'move' ret[599004](599018 'deref' atomic_int_least16_t[81578]))
            gotoReturn _end_externT[599002] _end_externT[599002]
          }
          {
            unknown call_tmp[768779] "expr temp" "maybe param" "maybe type" "temp"
            (768782 'move' call_tmp[768779](81660 call int(64)[10] 32))
            unknown call_tmp[768784] "expr temp" "maybe param" "maybe type" "temp"
            (768787 'move' call_tmp[768784](81763 call == tmp[81739] call_tmp[768779]))
            unknown call_tmp[768789] "expr temp" "maybe param" "maybe type" "temp"
            (768792 'move' call_tmp[768789](81766 call _cond_test call_tmp[768784]))
            if call_tmp[768789]
            {
              (599024 'move' ret[599004](599023 'deref' atomic_int_least32_t[81584]))
              gotoReturn _end_externT[599002] _end_externT[599002]
            }
            {
              unknown call_tmp[768794] "expr temp" "maybe param" "maybe type" "temp"
              (768797 'move' call_tmp[768794](81670 call int(64)[10] 64))
              unknown call_tmp[768799] "expr temp" "maybe param" "maybe type" "temp"
              (768802 'move' call_tmp[768799](81770 call == tmp[81739] call_tmp[768794]))
              unknown call_tmp[768804] "expr temp" "maybe param" "maybe type" "temp"
              (768807 'move' call_tmp[768804](81773 call _cond_test call_tmp[768799]))
              if call_tmp[768804]
              {
                (599029 'move' ret[599004](599028 'deref' atomic_int_least64_t[81590]))
                gotoReturn _end_externT[599002] _end_externT[599002]
              }
              {
                unknown call_tmp[768809] "expr temp" "maybe param" "maybe type" "temp"
                (768812 'move' call_tmp[768809](81680 call uint(64)[86] 8))
                unknown call_tmp[768814] "expr temp" "maybe param" "maybe type" "temp"
                (768817 'move' call_tmp[768814](81777 call == tmp[81739] call_tmp[768809]))
                unknown call_tmp[768819] "expr temp" "maybe param" "maybe type" "temp"
                (768822 'move' call_tmp[768819](81780 call _cond_test call_tmp[768814]))
                if call_tmp[768819]
                {
                  (599034 'move' ret[599004](599033 'deref' atomic_uint_least8_t[81596]))
                  gotoReturn _end_externT[599002] _end_externT[599002]
                }
                {
                  unknown call_tmp[768824] "expr temp" "maybe param" "maybe type" "temp"
                  (768827 'move' call_tmp[768824](81690 call uint(64)[86] 16))
                  unknown call_tmp[768829] "expr temp" "maybe param" "maybe type" "temp"
                  (768832 'move' call_tmp[768829](81784 call == tmp[81739] call_tmp[768824]))
                  unknown call_tmp[768834] "expr temp" "maybe param" "maybe type" "temp"
                  (768837 'move' call_tmp[768834](81787 call _cond_test call_tmp[768829]))
                  if call_tmp[768834]
                  {
                    (599039 'move' ret[599004](599038 'deref' atomic_uint_least16_t[81602]))
                    gotoReturn _end_externT[599002] _end_externT[599002]
                  }
                  {
                    unknown call_tmp[768839] "expr temp" "maybe param" "maybe type" "temp"
                    (768842 'move' call_tmp[768839](81700 call uint(64)[86] 32))
                    unknown call_tmp[768844] "expr temp" "maybe param" "maybe type" "temp"
                    (768847 'move' call_tmp[768844](81791 call == tmp[81739] call_tmp[768839]))
                    unknown call_tmp[768849] "expr temp" "maybe param" "maybe type" "temp"
                    (768852 'move' call_tmp[768849](81794 call _cond_test call_tmp[768844]))
                    if call_tmp[768849]
                    {
                      (599044 'move' ret[599004](599043 'deref' atomic_uint_least32_t[81608]))
                      gotoReturn _end_externT[599002] _end_externT[599002]
                    }
                    {
                      unknown call_tmp[768854] "expr temp" "maybe param" "maybe type" "temp"
                      (768857 'move' call_tmp[768854](81710 call uint(64)[86] 64))
                      unknown call_tmp[768859] "expr temp" "maybe param" "maybe type" "temp"
                      (768862 'move' call_tmp[768859](81798 call == tmp[81739] call_tmp[768854]))
                      unknown call_tmp[768864] "expr temp" "maybe param" "maybe type" "temp"
                      (768867 'move' call_tmp[768864](81801 call _cond_test call_tmp[768859]))
                      if call_tmp[768864]
                      {
                        (599049 'move' ret[599004](599048 'deref' atomic_uint_least64_t[81614]))
                        gotoReturn _end_externT[599002] _end_externT[599002]
                      }
                      {
                        unknown call_tmp[768869] "expr temp" "maybe param" "maybe type" "temp"
                        (768872 'move' call_tmp[768869](81720 call real(64)[13] 32))
                        unknown call_tmp[768874] "expr temp" "maybe param" "maybe type" "temp"
                        (768877 'move' call_tmp[768874](81805 call == tmp[81739] call_tmp[768869]))
                        unknown call_tmp[768879] "expr temp" "maybe param" "maybe type" "temp"
                        (768882 'move' call_tmp[768879](81808 call _cond_test call_tmp[768874]))
                        if call_tmp[768879]
                        {
                          (599054 'move' ret[599004](599053 'deref' atomic__real32[81626]))
                          gotoReturn _end_externT[599002] _end_externT[599002]
                        }
                        {
                          unknown call_tmp[768884] "expr temp" "maybe param" "maybe type" "temp"
                          (768887 'move' call_tmp[768884](81730 call real(64)[13] 64))
                          unknown call_tmp[768889] "expr temp" "maybe param" "maybe type" "temp"
                          (768892 'move' call_tmp[768889](81812 call == tmp[81739] call_tmp[768884]))
                          unknown call_tmp[768894] "expr temp" "maybe param" "maybe type" "temp"
                          (768897 'move' call_tmp[768894](81815 call _cond_test call_tmp[768889]))
                          if call_tmp[768894]
                          {
                            (599059 'move' ret[599004](599058 'deref' atomic__real64[81620]))
                            gotoReturn _end_externT[599002] _end_externT[599002]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[599002]
    (599006 return ret[599004])
  }
  function externTString[81821](arg valType[81823]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[599065] "RVV" "param" "temp"
    unknown call_tmp[768899] "expr temp" "maybe param" "maybe type" "temp"
    (768902 'move' call_tmp[768899](81831 call == valType[81823] bool[19]))
    unknown call_tmp[768904] "expr temp" "maybe param" "maybe type" "temp"
    (768907 'move' call_tmp[768904](81835 call _cond_test call_tmp[768899]))
    if call_tmp[768904]
    {
      (599070 'move' ret[599065](599069 'deref' "bool"))
      gotoReturn _end_externTString[599063] _end_externTString[599063]
    }
    unknown call_tmp[768909] "expr temp" "maybe param" "maybe type" "temp"
    (768912 'move' call_tmp[768909](81859 call isInt valType[81823]))
    unknown call_tmp[768914] "expr temp" "maybe param" "maybe type" "temp"
    (768917 'move' call_tmp[768914](81861 call _cond_test call_tmp[768909]))
    if call_tmp[768914]
    {
      unknown call_tmp[768919] "expr temp" "maybe param" "maybe type" "temp"
      (768922 'move' call_tmp[768919](81851 call numBits valType[81823]))
      unknown call_tmp[768924] "expr temp" "maybe param" "maybe type" "temp"
      (768927 'move' call_tmp[768924](81848 call : call_tmp[768919] string[244]))
      unknown call_tmp[768929] "expr temp" "maybe param" "maybe type" "temp"
      (768932 'move' call_tmp[768929](81843 call + "int_least" call_tmp[768924]))
      unknown call_tmp[768934] "expr temp" "maybe param" "maybe type" "temp"
      (768937 'move' call_tmp[768934](81841 call + call_tmp[768929] "_t"))
      (599075 'move' ret[599065](599074 'deref' call_tmp[768934]))
      gotoReturn _end_externTString[599063] _end_externTString[599063]
    }
    unknown call_tmp[768939] "expr temp" "maybe param" "maybe type" "temp"
    (768942 'move' call_tmp[768939](81883 call isUint valType[81823]))
    unknown call_tmp[768944] "expr temp" "maybe param" "maybe type" "temp"
    (768947 'move' call_tmp[768944](81885 call _cond_test call_tmp[768939]))
    if call_tmp[768944]
    {
      unknown call_tmp[768949] "expr temp" "maybe param" "maybe type" "temp"
      (768952 'move' call_tmp[768949](81877 call numBits valType[81823]))
      unknown call_tmp[768954] "expr temp" "maybe param" "maybe type" "temp"
      (768957 'move' call_tmp[768954](81874 call : call_tmp[768949] string[244]))
      unknown call_tmp[768959] "expr temp" "maybe param" "maybe type" "temp"
      (768962 'move' call_tmp[768959](81869 call + "uint_least" call_tmp[768954]))
      unknown call_tmp[768964] "expr temp" "maybe param" "maybe type" "temp"
      (768967 'move' call_tmp[768964](81867 call + call_tmp[768959] "_t"))
      (599080 'move' ret[599065](599079 'deref' call_tmp[768964]))
      gotoReturn _end_externTString[599063] _end_externTString[599063]
    }
    unknown call_tmp[768969] "expr temp" "maybe param" "maybe type" "temp"
    (768972 'move' call_tmp[768969](81904 call isReal valType[81823]))
    unknown call_tmp[768974] "expr temp" "maybe param" "maybe type" "temp"
    (768977 'move' call_tmp[768974](81906 call _cond_test call_tmp[768969]))
    if call_tmp[768974]
    {
      unknown call_tmp[768979] "expr temp" "maybe param" "maybe type" "temp"
      (768982 'move' call_tmp[768979](81899 call numBits valType[81823]))
      unknown call_tmp[768984] "expr temp" "maybe param" "maybe type" "temp"
      (768987 'move' call_tmp[768984](81896 call : call_tmp[768979] string[244]))
      unknown call_tmp[768989] "expr temp" "maybe param" "maybe type" "temp"
      (768992 'move' call_tmp[768989](81891 call + "_real" call_tmp[768984]))
      (599085 'move' ret[599065](599084 'deref' call_tmp[768989]))
      gotoReturn _end_externTString[599063] _end_externTString[599063]
    }
    label _end_externTString[599063]
    (599067 return ret[599065])
  }
  function externFunc[81913](param arg s[81916]:string[244], arg valType[81919]:_any[141](?), param arg explicit[81922] :
  1 =
  1) param : _unknown[42] "private"
  {
    unknown ret[599091] "RVV" "param" "temp"
    unknown call_tmp[768994] "expr temp" "maybe param" "maybe type" "temp"
    (768997 'move' call_tmp[768994](81959 call _cond_test explicit[81922]))
    if call_tmp[768994]
    {
      unknown call_tmp[768999] "expr temp" "maybe param" "maybe type" "temp"
      (769002 'move' call_tmp[768999](81931 call + "atomic_" s[81916]))
      unknown call_tmp[769004] "expr temp" "maybe param" "maybe type" "temp"
      (769007 'move' call_tmp[769004](81929 call + call_tmp[768999] "_explicit_"))
      unknown call_tmp[769009] "expr temp" "maybe param" "maybe type" "temp"
      (769012 'move' call_tmp[769009](81941 call externTString valType[81919]))
      unknown call_tmp[769014] "expr temp" "maybe param" "maybe type" "temp"
      (769017 'move' call_tmp[769014](81927 call + call_tmp[769004] call_tmp[769009]))
      (599096 'move' ret[599091](599095 'deref' call_tmp[769014]))
      gotoReturn _end_externFunc[599089] _end_externFunc[599089]
    }
    {
      unknown call_tmp[769019] "expr temp" "maybe param" "maybe type" "temp"
      (769022 'move' call_tmp[769019](81949 call + "atomic_" s[81916]))
      unknown call_tmp[769024] "expr temp" "maybe param" "maybe type" "temp"
      (769027 'move' call_tmp[769024](81947 call + call_tmp[769019] "_"))
      unknown call_tmp[769029] "expr temp" "maybe param" "maybe type" "temp"
      (769032 'move' call_tmp[769029](81955 call externTString valType[81919]))
      unknown call_tmp[769034] "expr temp" "maybe param" "maybe type" "temp"
      (769037 'move' call_tmp[769034](81945 call + call_tmp[769024] call_tmp[769029]))
      (599101 'move' ret[599091](599100 'deref' call_tmp[769034]))
      gotoReturn _end_externFunc[599089] _end_externFunc[599089]
    }
    label _end_externFunc[599089]
    (599093 return ret[599091])
  }
  function chpl__processorAtomicType[81967](arg valType[81969]:_any[141](?)) type : _unknown[42]
  {
    unknown ret[599107] "RVV" "temp" "type variable"
    unknown call_tmp[769039] "expr temp" "maybe param" "maybe type" "temp"
    (769042 'move' call_tmp[769039](82001 call == valType[81969] bool[19]))
    unknown call_tmp[769044] "expr temp" "maybe param" "maybe type" "temp"
    (769047 'move' call_tmp[769044](82005 call _cond_test call_tmp[769039]))
    if call_tmp[769044]
    {
      (599112 'move' ret[599107](599111 'deref' AtomicBool[83090]))
      gotoReturn _end_chpl__processorAtomicType[599105] _end_chpl__processorAtomicType[599105]
    }
    {
      unknown call_tmp[769049] "expr temp" "maybe param" "maybe type" "temp"
      (769052 'move' call_tmp[769049](81993 call isSupported valType[81969]))
      unknown call_tmp[769054] "expr temp" "maybe param" "maybe type" "temp"
      (769057 'move' call_tmp[769054](81995 call _cond_test call_tmp[769049]))
      if call_tmp[769054]
      {
        unknown call_tmp[769059] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (769062 'move' call_tmp[769059](81977 call AtomicT[84982](?) valType[81969]))
        (599117 'move' ret[599107](599116 'deref' call_tmp[769059]))
        gotoReturn _end_chpl__processorAtomicType[599105] _end_chpl__processorAtomicType[599105]
      }
      {
        unknown call_tmp[769064] "expr temp" "maybe param" "maybe type" "temp"
        (769067 'move' call_tmp[769064](81987 call : valType[81969] string[244]))
        unknown call_tmp[769069] "expr temp" "maybe param" "maybe type" "temp"
        (769072 'move' call_tmp[769069](81982 call + "Unsupported atomic type: " call_tmp[769064]))
        (81981 call compilerError call_tmp[769069])
      }
    }
    label _end_chpl__processorAtomicType[599105]
    (599109 return ret[599107])
  }
  function chpl__atomicType[82013](arg valType[82015]:_any[141](?)) type : _unknown[42]
  {
    unknown ret[599123] "RVV" "temp" "type variable"
    unknown call_tmp[769074] "expr temp" "maybe param" "maybe type" "temp"
    (769077 'move' call_tmp[769074](82031 call == CHPL_NETWORK_ATOMICS[29845] "none"))
    unknown call_tmp[769079] "expr temp" "maybe param" "maybe type" "temp"
    (769082 'move' call_tmp[769079](82035 call _cond_test call_tmp[769074]))
    if call_tmp[769079]
    {
      unknown call_tmp[769084] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (769087 'move' call_tmp[769084](82024 call chpl__processorAtomicType valType[82015]))
      (599128 'move' ret[599123](599127 'deref' call_tmp[769084]))
      gotoReturn _end_chpl__atomicType[599121] _end_chpl__atomicType[599121]
    }
    {
      unknown call_tmp[769089] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (769092 'move' call_tmp[769089](82029 call chpl__networkAtomicType valType[82015]))
      (599133 'move' ret[599123](599132 'deref' call_tmp[769089]))
      gotoReturn _end_chpl__atomicType[599121] _end_chpl__atomicType[599121]
    }
    label _end_chpl__atomicType[599121]
    (599125 return ret[599123])
    (396075 'used modules list'(82019 'use' ChplConfig[29952]))
  }
  function chpl_comm_ensure_progress[82041]() : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[83090].valType[82049](arg _mt[82053]:_MT[201], arg this[82051]:AtomicBool[83090]) type : _unknown[42] "atomic type" "method" "primary method" "no parens"
  {
    unknown ret[599139] "RVV" "temp" "type variable"
    (599144 'move' ret[599139](599143 'deref' bool[19]))
    (599141 return ret[599139])
  }
  function AtomicBool[83090].valType[82060](arg _mt[82064]:_MT[201], arg this[82062]:AtomicBool[83090]) type : _unknown[42] "atomic type" "method" "primary method" "no parens"
  {
    unknown ret[599148] "RVV" "temp" "type variable"
    (599153 'move' ret[599148](599152 'deref' bool[19]))
    (599150 return ret[599148])
  }
  function AtomicBool[83090].init_helper[82078](arg _mt[82086]:_MT[201], ref arg this[82080]:AtomicBool[83090], arg val[82083]:bool[19]) : _unknown[42] "atomic type" "method" "primary method" "no return value for void"
  {
    function atomic_init[82089](ref arg obj[82094] :
    (82092 call externT bool[19]), arg val[82098]:bool[19], arg _chpl_cname[82112]:string[244] =
    (82104 call externFunc "init" bool[19](explicit = 0))) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no gpu codegen" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[769096] "expr temp" "maybe param" "maybe type" "temp"
    (769099 'move' call_tmp[769096](422335 call _v _mt[203] this[82080]))
    (82119 call atomic_init call_tmp[769096] val[82083])
    (599155 return _void[46])
  }
  function AtomicBool[83090].init[82124](arg _mt[82128]:_MT[201], ref arg this[82126]:AtomicBool[83090]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown _v[519233] "temp"
    unknown call_tmp[769101] "expr temp" "maybe param" "maybe type" "temp"
    (769104 'move' call_tmp[769101](519236 call externT bool[19]))
    (519238 'default init var' _v[519233] call_tmp[769101])
    (519240 '.=' this[82126] c"_v" _v[519233])
    (550150 'end of statement')
    (519244 'init done')
    (550151 'end of statement')
    const default[82137] "dead at end of block" "const" "insert auto destroy"
    (644477 'default init var' default[82137] bool[19])
    (82140 'end of statement')
    (82142 call(422341 call (partial) init_helper _mt[203] this[82126]) default[82137])
    (550152 'end of statement' default[82137])
    (599157 return _void[46])
  }
  function AtomicBool[83090].init=[82146](arg _mt[82154]:_MT[201], ref arg this[82148]:AtomicBool[83090], arg other[82151]:AtomicBool[83090]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown _v[519245] "temp"
    unknown call_tmp[769108] "expr temp" "maybe param" "maybe type" "temp"
    (769111 'move' call_tmp[769108](519248 call externT bool[19]))
    (519250 'default init var' _v[519245] call_tmp[769108])
    (519252 '.=' this[82148] c"_v" _v[519245])
    (550154 'end of statement')
    (519256 'init done')
    (550155 'end of statement')
    unknown call_tmp[769117] "expr temp" "maybe param" "maybe type" "temp"
    (769120 'move' call_tmp[769117](82168 call(82165 call (partial) read _mt[203] other[82151])))
    (82163 call(422347 call (partial) init_helper _mt[203] this[82148]) call_tmp[769117])
    (599159 return _void[46])
  }
  function AtomicBool[83090].init=[82171](arg _mt[82179]:_MT[201], ref arg this[82173]:AtomicBool[83090], arg other[82176]:bool[19]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown _v[519257] "temp"
    unknown call_tmp[769122] "expr temp" "maybe param" "maybe type" "temp"
    (769125 'move' call_tmp[769122](519260 call externT bool[19]))
    (519262 'default init var' _v[519257] call_tmp[769122])
    (519264 '.=' this[82173] c"_v" _v[519257])
    (550157 'end of statement')
    (519268 'init done')
    (550158 'end of statement')
    (82188 call(422352 call (partial) init_helper _mt[203] this[82173]) other[82176])
    (599161 return _void[46])
  }
  function AtomicBool[83090].deinit[82192](arg _mt[82196]:_MT[201], ref arg this[82194]:AtomicBool[83090]) : _unknown[42] "atomic type" "destructor" "method" "primary method" "no return value for void"
  {
    function atomic_destroy[82199](ref arg obj[82204] :
    (82202 call externT bool[19]), arg _chpl_cname[82218]:string[244] =
    (82210 call externFunc "destroy" bool[19](explicit = 0))) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[82232] "const" "temp"
      unknown call_tmp[769129] "expr temp" "maybe param" "maybe type" "temp"
      (769132 'move' call_tmp[769129](82229 '_wide_get_locale' this[82194]))
      (82233 'move' tmp[82232](82230 'deref' call_tmp[769129]))
      unknown call_tmp[769136] "expr temp" "maybe param" "maybe type" "temp"
      (769139 'move' call_tmp[769136](422361 call _v _mt[203] this[82194]))
      (82226 call atomic_destroy call_tmp[769136])
      (82236 'elided on block' 0 tmp[82232])
    }
    (599163 return _void[46])
  }
  function AtomicBool[83090].read[82242](arg _mt[82255]:_MT[201], const arg this[82244]:AtomicBool[83090], param arg order[82251]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599167] "RVV" "temp"
    function atomic_load[82259](const  ref arg obj[82264] :
    (82262 call externT bool[19]), arg order[82268]:memory_order[80955], arg _chpl_cname[82280]:string[244] =
    (82274 call externFunc "load" bool[19])) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[82287] "dead at end of block" "insert auto destroy"
    (644479 'default init var' ret[82287] bool[19])
    (82290 'end of statement')
    {
      const tmp[82305] "const" "temp"
      unknown call_tmp[769141] "expr temp" "maybe param" "maybe type" "temp"
      (769144 'move' call_tmp[769141](82302 '_wide_get_locale' this[82244]))
      (82306 'move' tmp[82305](82303 'deref' call_tmp[769141]))
      unknown call_tmp[769148] "expr temp" "maybe param" "maybe type" "temp"
      (769151 'move' call_tmp[769148](422375 call _v _mt[203] this[82244]))
      unknown call_tmp[769153] "expr temp" "maybe param" "maybe type" "temp"
      (769156 'move' call_tmp[769153](82299 call c_memory_order order[82251]))
      unknown call_tmp[769158] "expr temp" "maybe param" "maybe type" "temp"
      (769161 'move' call_tmp[769158](82296 call atomic_load call_tmp[769148] call_tmp[769153]))
      (82292 call = ret[82287] call_tmp[769158])
      (550161 'end of statement' ret[82287])
      (82309 'elided on block' 0 tmp[82305])
    }
    (599173 'move' ret[599167](599172 'coerce' ret[82287] bool[19]))
    gotoReturn _end_read[599165] _end_read[599165]
    (550163 'end of statement' ret[82287])
    label _end_read[599165]
    (599169 return ret[599167])
  }
  { scopeless type
    bool[19]
  }
  function AtomicBool[83090].write[82318](arg _mt[82335]:_MT[201], ref arg this[82320]:AtomicBool[83090], arg val[82323]:bool[19], param arg order[82331]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599179] "RVV" "temp"
    function atomic_store[82339](ref arg obj[82344] :
    (82342 call externT bool[19]), arg val[82348]:bool[19], arg order[82352]:memory_order[80955], arg _chpl_cname[82364]:string[244] =
    (82358 call externFunc "store" bool[19])) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[82382] "const" "temp"
      unknown call_tmp[769163] "expr temp" "maybe param" "maybe type" "temp"
      (769166 'move' call_tmp[769163](82379 '_wide_get_locale' this[82320]))
      (82383 'move' tmp[82382](82380 'deref' call_tmp[769163]))
      unknown call_tmp[769170] "expr temp" "maybe param" "maybe type" "temp"
      (769173 'move' call_tmp[769170](422389 call _v _mt[203] this[82320]))
      unknown call_tmp[769175] "expr temp" "maybe param" "maybe type" "temp"
      (769178 'move' call_tmp[769175](82376 call c_memory_order order[82331]))
      (82372 call atomic_store call_tmp[769170] val[82323] call_tmp[769175])
      (82386 'elided on block' 0 tmp[82382])
    }
    (599181 return ret[599179])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[83090].exchange[82393](arg _mt[82410]:_MT[201], ref arg this[82395]:AtomicBool[83090], arg val[82398]:bool[19], param arg order[82406]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599185] "RVV" "temp"
    function atomic_exchange[82414](ref arg obj[82419] :
    (82417 call externT bool[19]), arg val[82423]:bool[19], arg order[82427]:memory_order[80955], arg _chpl_cname[82439]:string[244] =
    (82433 call externFunc "exchange" bool[19])) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[82446] "dead at end of block" "insert auto destroy"
    (644481 'default init var' ret[82446] bool[19])
    (82449 'end of statement')
    {
      const tmp[82465] "const" "temp"
      unknown call_tmp[769180] "expr temp" "maybe param" "maybe type" "temp"
      (769183 'move' call_tmp[769180](82462 '_wide_get_locale' this[82395]))
      (82466 'move' tmp[82465](82463 'deref' call_tmp[769180]))
      unknown call_tmp[769187] "expr temp" "maybe param" "maybe type" "temp"
      (769190 'move' call_tmp[769187](422407 call _v _mt[203] this[82395]))
      unknown call_tmp[769192] "expr temp" "maybe param" "maybe type" "temp"
      (769195 'move' call_tmp[769192](82459 call c_memory_order order[82406]))
      unknown call_tmp[769197] "expr temp" "maybe param" "maybe type" "temp"
      (769200 'move' call_tmp[769197](82455 call atomic_exchange call_tmp[769187] val[82398] call_tmp[769192]))
      (82451 call = ret[82446] call_tmp[769197])
      (550166 'end of statement' ret[82446])
      (82469 'elided on block' 0 tmp[82465])
    }
    (599191 'move' ret[599185](599190 'coerce' ret[82446] bool[19]))
    gotoReturn _end_exchange[599183] _end_exchange[599183]
    (550168 'end of statement' ret[82446])
    label _end_exchange[599183]
    (599187 return ret[599185])
  }
  { scopeless type
    bool[19]
  }
  function AtomicBool[83090].compareExchange[82478](arg _mt[82499]:_MT[201], ref arg this[82480]:AtomicBool[83090], ref arg expected[82483]:bool[19], arg desired[82487]:bool[19], param arg order[82495]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599197] "RVV" "temp"
    unknown call_tmp[769204] "expr temp" "maybe param" "maybe type" "temp"
    (769207 'move' call_tmp[769204](82515 call readableOrder order[82495]))
    unknown call_tmp[769209] "expr temp" "maybe param" "maybe type" "temp"
    (769212 'move' call_tmp[769209](82510 call(82507 call (partial) compareExchange _mt[203] this[82480]) expected[82483] desired[82487] order[82495] call_tmp[769204]))
    (599203 'move' ret[599197](599202 'coerce' call_tmp[769209] bool[19]))
    (599199 return ret[599197])
  }
  { scopeless type
    bool[19]
  }
  function AtomicBool[83090].compareExchange[82520](arg _mt[82540]:_MT[201], ref arg this[82522]:AtomicBool[83090], ref arg expected[82525]:bool[19], arg desired[82529]:bool[19], param arg success[82533]:memoryOrder[81226], param arg failure[82537]:memoryOrder[81226]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599207] "RVV" "temp"
    function atomic_compare_exchange_strong[82544](ref arg obj[82549] :
    (82547 call externT bool[19]), ref arg expected[82553]:bool[19], arg desired[82557]:bool[19], arg succ[82561]:memory_order[80955], arg fail[82565]:memory_order[80955], arg _chpl_cname[82577]:string[244] =
    (82571 call externFunc "compare_exchange_strong" bool[19])) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[82584] "dead at end of block" "insert auto destroy"
    (644483 'default init var' ret[82584] bool[19])
    (82587 'end of statement')
    {
      const tmp[82625] "const" "temp"
      unknown call_tmp[769214] "expr temp" "maybe param" "maybe type" "temp"
      (769217 'move' call_tmp[769214](82622 '_wide_get_locale' this[82522]))
      (82626 'move' tmp[82625](82623 'deref' call_tmp[769214]))
      {
        unknown localizedExpected[82591] "dead at end of block" "insert auto destroy"
        (644485 'init var' localizedExpected[82591] expected[82525])
        (82594 'end of statement')
        unknown call_tmp[769221] "expr temp" "maybe param" "maybe type" "temp"
        (769224 'move' call_tmp[769221](422439 call _v _mt[203] this[82522]))
        unknown call_tmp[769226] "expr temp" "maybe param" "maybe type" "temp"
        (769229 'move' call_tmp[769226](82604 call c_memory_order success[82533]))
        unknown call_tmp[769231] "expr temp" "maybe param" "maybe type" "temp"
        (769234 'move' call_tmp[769231](82607 call c_memory_order failure[82537]))
        unknown call_tmp[769236] "expr temp" "maybe param" "maybe type" "temp"
        (769239 'move' call_tmp[769236](82599 call atomic_compare_exchange_strong call_tmp[769221] localizedExpected[82591] desired[82529] call_tmp[769226] call_tmp[769231]))
        (82595 call = ret[82584] call_tmp[769236])
        (550171 'end of statement' ret[82584] localizedExpected[82591])
        unknown call_tmp[769241] "expr temp" "maybe param" "maybe type" "temp"
        (769244 'move' call_tmp[769241](82614 call ! ret[82584]))
        unknown call_tmp[769246] "expr temp" "maybe param" "maybe type" "temp"
        (769249 'move' call_tmp[769246](82617 call _cond_test call_tmp[769241]))
        if call_tmp[769246]
        {
          (82609 call = expected[82525] localizedExpected[82591])
          (550174 'end of statement' localizedExpected[82591])
        }
      }
      (82629 'elided on block' 0 tmp[82625])
    }
    (599213 'move' ret[599207](599212 'coerce' ret[82584] bool[19]))
    gotoReturn _end_compareExchange[599205] _end_compareExchange[599205]
    (550176 'end of statement' ret[82584])
    label _end_compareExchange[599205]
    (599209 return ret[599207])
  }
  { scopeless type
    bool[19]
  }
  function AtomicBool[83090].compareExchangeWeak[82638](arg _mt[82659]:_MT[201], ref arg this[82640]:AtomicBool[83090], ref arg expected[82643]:bool[19], arg desired[82647]:bool[19], param arg order[82655]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599219] "RVV" "temp"
    unknown call_tmp[769253] "expr temp" "maybe param" "maybe type" "temp"
    (769256 'move' call_tmp[769253](82675 call readableOrder order[82655]))
    unknown call_tmp[769258] "expr temp" "maybe param" "maybe type" "temp"
    (769261 'move' call_tmp[769258](82670 call(82667 call (partial) compareExchangeWeak _mt[203] this[82640]) expected[82643] desired[82647] order[82655] call_tmp[769253]))
    (599225 'move' ret[599219](599224 'coerce' call_tmp[769258] bool[19]))
    (599221 return ret[599219])
  }
  { scopeless type
    bool[19]
  }
  function AtomicBool[83090].compareExchangeWeak[82680](arg _mt[82700]:_MT[201], ref arg this[82682]:AtomicBool[83090], ref arg expected[82685]:bool[19], arg desired[82689]:bool[19], param arg success[82693]:memoryOrder[81226], param arg failure[82697]:memoryOrder[81226]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599229] "RVV" "temp"
    function atomic_compare_exchange_weak[82703](ref arg obj[82708] :
    (82706 call externT bool[19]), ref arg expected[82712]:bool[19], arg desired[82716]:bool[19], arg succ[82720]:memory_order[80955], arg fail[82724]:memory_order[80955], arg _chpl_cname[82736]:string[244] =
    (82730 call externFunc "compare_exchange_weak" bool[19])) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[82743] "dead at end of block" "insert auto destroy"
    (644487 'default init var' ret[82743] bool[19])
    (82746 'end of statement')
    {
      const tmp[82784] "const" "temp"
      unknown call_tmp[769263] "expr temp" "maybe param" "maybe type" "temp"
      (769266 'move' call_tmp[769263](82781 '_wide_get_locale' this[82682]))
      (82785 'move' tmp[82784](82782 'deref' call_tmp[769263]))
      {
        unknown localizedExpected[82750] "dead at end of block" "insert auto destroy"
        (644489 'init var' localizedExpected[82750] expected[82685])
        (82753 'end of statement')
        unknown call_tmp[769270] "expr temp" "maybe param" "maybe type" "temp"
        (769273 'move' call_tmp[769270](422475 call _v _mt[203] this[82682]))
        unknown call_tmp[769275] "expr temp" "maybe param" "maybe type" "temp"
        (769278 'move' call_tmp[769275](82763 call c_memory_order success[82693]))
        unknown call_tmp[769280] "expr temp" "maybe param" "maybe type" "temp"
        (769283 'move' call_tmp[769280](82766 call c_memory_order failure[82697]))
        unknown call_tmp[769285] "expr temp" "maybe param" "maybe type" "temp"
        (769288 'move' call_tmp[769285](82758 call atomic_compare_exchange_weak call_tmp[769270] localizedExpected[82750] desired[82689] call_tmp[769275] call_tmp[769280]))
        (82754 call = ret[82743] call_tmp[769285])
        (550179 'end of statement' ret[82743] localizedExpected[82750])
        unknown call_tmp[769290] "expr temp" "maybe param" "maybe type" "temp"
        (769293 'move' call_tmp[769290](82773 call ! ret[82743]))
        unknown call_tmp[769295] "expr temp" "maybe param" "maybe type" "temp"
        (769298 'move' call_tmp[769295](82776 call _cond_test call_tmp[769290]))
        if call_tmp[769295]
        {
          (82768 call = expected[82685] localizedExpected[82750])
          (550182 'end of statement' localizedExpected[82750])
        }
      }
      (82788 'elided on block' 0 tmp[82784])
    }
    (599234 'move' ret[599229](599233 'deref' ret[82743]))
    gotoReturn _end_compareExchangeWeak[599227] _end_compareExchangeWeak[599227]
    (550184 'end of statement' ret[82743])
    label _end_compareExchangeWeak[599227]
    (599231 return ret[599229])
  }
  function AtomicBool[83090].compareAndSwap[82796](arg _mt[82817]:_MT[201], ref arg this[82798]:AtomicBool[83090], arg expected[82801]:bool[19], arg desired[82805]:bool[19], param arg order[82813]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "@unstable"
  {
    unknown ret[599240] "RVV" "temp"
    function atomic_compare_exchange_strong[82821](ref arg obj[82826] :
    (82824 call externT bool[19]), ref arg expected[82830]:bool[19], arg desired[82834]:bool[19], arg succ[82838]:memory_order[80955], arg fail[82842]:memory_order[80955], arg _chpl_cname[82852]:string[244] =
    (82848 call externFunc "compare_exchange_strong" bool[19])) : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[82859] "dead at end of block" "insert auto destroy"
    (644491 'default init var' ret[82859] bool[19])
    (82862 'end of statement')
    {
      const tmp[82889] "const" "temp"
      unknown call_tmp[769300] "expr temp" "maybe param" "maybe type" "temp"
      (769303 'move' call_tmp[769300](82886 '_wide_get_locale' this[82798]))
      (82890 'move' tmp[82889](82887 'deref' call_tmp[769300]))
      {
        unknown mutableExpected[82866] "dead at end of block" "insert auto destroy"
        (644493 'init var' mutableExpected[82866] expected[82801])
        (82869 'end of statement')
        unknown call_tmp[769307] "expr temp" "maybe param" "maybe type" "temp"
        (769310 'move' call_tmp[769307](422503 call _v _mt[203] this[82798]))
        unknown call_tmp[769312] "expr temp" "maybe param" "maybe type" "temp"
        (769315 'move' call_tmp[769312](82879 call c_memory_order order[82813]))
        unknown call_tmp[769317] "expr temp" "maybe param" "maybe type" "temp"
        (769320 'move' call_tmp[769317](82884 call readableOrder order[82813]))
        unknown call_tmp[769322] "expr temp" "maybe param" "maybe type" "temp"
        (769325 'move' call_tmp[769322](82882 call c_memory_order call_tmp[769317]))
        unknown call_tmp[769327] "expr temp" "maybe param" "maybe type" "temp"
        (769330 'move' call_tmp[769327](82874 call atomic_compare_exchange_strong call_tmp[769307] mutableExpected[82866] desired[82805] call_tmp[769312] call_tmp[769322]))
        (82870 call = ret[82859] call_tmp[769327])
        (550186 'end of statement' ret[82859] mutableExpected[82866])
      }
      (82893 'elided on block' 0 tmp[82889])
    }
    (599246 'move' ret[599240](599245 'coerce' ret[82859] bool[19]))
    gotoReturn _end_compareAndSwap[599238] _end_compareAndSwap[599238]
    (550189 'end of statement' ret[82859])
    label _end_compareAndSwap[599238]
    (599242 return ret[599240])
  }
  { scopeless type
    bool[19]
  }
  function AtomicBool[83090].testAndSet[82902](arg _mt[82915]:_MT[201], ref arg this[82904]:AtomicBool[83090], param arg order[82911]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599252] "RVV" "temp"
    unknown call_tmp[769334] "expr temp" "maybe param" "maybe type" "temp"
    (769337 'move' call_tmp[769334](82926 call(82923 call (partial) exchange _mt[203] this[82904]) 1 order[82911]))
    (599258 'move' ret[599252](599257 'coerce' call_tmp[769334] bool[19]))
    (599254 return ret[599252])
  }
  { scopeless type
    bool[19]
  }
  function AtomicBool[83090].clear[82932](arg _mt[82945]:_MT[201], ref arg this[82934]:AtomicBool[83090], param arg order[82941]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599262] "RVV" "temp"
    (82953 call(82950 call (partial) write _mt[203] this[82934]) 0 order[82941])
    (599264 return ret[599262])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[83090].waitFor[82959](arg _mt[82976]:_MT[201], const arg this[82961]:AtomicBool[83090], arg val[82964]:bool[19], param arg order[82972]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599268] "RVV" "temp"
    {
      const tmp[83058] "const" "temp"
      unknown call_tmp[769341] "expr temp" "maybe param" "maybe type" "temp"
      (769344 'move' call_tmp[769341](83055 '_wide_get_locale' this[82961]))
      (83059 'move' tmp[83058](83056 'deref' call_tmp[769341]))
      {
        {
          unknown tmp[83005] "temp"
          unknown call_tmp[769348] "expr temp" "maybe param" "maybe type" "temp"
          (769351 'move' call_tmp[769348](83040 call(83037 call (partial) read _mt[203] this[82961])(order = relaxed[81224])))
          unknown call_tmp[769353] "expr temp" "maybe param" "maybe type" "temp"
          (769356 'move' call_tmp[769353](83035 call != call_tmp[769348] val[82964]))
          (83047 'move' tmp[83005](83033 call _cond_test call_tmp[769353]))
          WhileDo[83010]
          {
            {
              (82997 call chpl_comm_ensure_progress)
              (550193 'end of statement')
              (83004 call yieldExecution module=[222] currentTask[68749])
              (400334 'referenced modules list' currentTask[68749])
            }
            label _continueLabel[83008]
            unknown call_tmp[769360] "expr temp" "maybe param" "maybe type" "temp"
            (769363 'move' call_tmp[769360](83021 call(83018 call (partial) read _mt[203] this[82961])(order = relaxed[81224])))
            unknown call_tmp[769365] "expr temp" "maybe param" "maybe type" "temp"
            (769368 'move' call_tmp[769365](83016 call != call_tmp[769360] val[82964]))
            (83028 'move' tmp[83005](83014 call _cond_test call_tmp[769365]))
            tmp[83005]
          }
          label _breakLabel[83009]
        }
        unknown call_tmp[769370] "expr temp" "maybe param" "maybe type" "temp"
        (769373 'move' call_tmp[769370](83053 call c_memory_order order[82972]))
        (83051 call chpl_atomic_thread_fence call_tmp[769370])
      }
      (83062 'elided on block' 0 tmp[83058])
    }
    (599270 return ret[599268])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[83090].serialize[83069](arg _mt[83077]:_MT[201], const arg this[83071]:AtomicBool[83090], arg writer[83073]:_any[141](?), ref arg serializer[83075]:_any[141](?)) : _unknown[42] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[769379] "expr temp" "maybe param" "maybe type" "temp"
    (769382 'move' call_tmp[769379](83086 call(422523 call (partial) read _mt[203] this[83071])))
    (83084 call(83081 call (partial) write _mt[203] writer[83073]) call_tmp[769379])
    (599272 return _void[46])
  }
  type AtomicBool[83090] unknown _v[82072](82074 call externT bool[19])
  function :[83092](arg rhs[83095]:bool[19], arg t[83099]:AtomicBool[83090]) : _unknown[42] "operator" "do not resolve unless called"
  {
    unknown ret[599276] "RVV" "temp"
    unknown lhs[83104] "dead at end of block" "insert auto destroy"
    (644495 'init var' lhs[83104] rhs[83095] AtomicBool[83090])
    (83108 'end of statement')
    (599281 'move' ret[599276](599280 'deref' lhs[83104]))
    gotoReturn _end_:[599274] _end_:[599274]
    (550197 'end of statement' lhs[83104])
    label _end_:[599274]
    (599278 return ret[599276])
  }
  function AtomicT[84982](?).init_helper[83125](arg _mt[83133]:_MT[201], ref arg this[83127]:AtomicT[84982](?), arg val[83130] :
  (422534 call valType _mt[203] this[83127])) : _unknown[42] "atomic type" "method" "primary method" "no return value for void"
  {
    function atomic_init[83136](ref arg obj[83141] :
    unknown call_tmp[769388] "expr temp" "maybe param" "maybe type" "temp", arg val[83145] :
    (422544 call valType _mt[203] this[83127]), arg _chpl_cname[83157]:string[244] =
    unknown call_tmp[769397] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no gpu codegen" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[769404] "expr temp" "maybe param" "maybe type" "temp"
    (769407 'move' call_tmp[769404](422554 call _v _mt[203] this[83127]))
    (83164 call atomic_init call_tmp[769404] val[83130])
    (599285 return _void[46])
  }
  function AtomicT[84982](?).init[83169](arg _mt[83175]:_MT[201], ref arg this[83171]:AtomicT[84982](?), arg valType[83173]:_any[141](?)) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown valType[519269] "temp" "type variable"
    (519271 'move' valType[519269] valType[83173])
    (519273 'init field' this[83171] c"valType" valType[519269])
    (550200 'end of statement')
    unknown _v[519277] "temp"
    unknown call_tmp[769409] "expr temp" "maybe param" "maybe type" "temp"
    (769412 'move' call_tmp[769409](519288 '.v' this[83171] c"valType"))
    unknown call_tmp[769414] "expr temp" "maybe param" "maybe type" "temp"
    (769417 'move' call_tmp[769414](519280 call externT call_tmp[769409]))
    (519282 'default init var' _v[519277] call_tmp[769414])
    (519284 '.=' this[83171] c"_v" _v[519277])
    (550201 'end of statement')
    (519291 'init done')
    (550202 'end of statement')
    const default[83193] "dead at end of block" "const" "insert auto destroy"
    (644497 'default init var' default[83193] valType[83173])
    (83196 'end of statement')
    (83198 call(422561 call (partial) init_helper _mt[203] this[83171]) default[83193])
    (550203 'end of statement' default[83193])
    (599287 return _void[46])
  }
  function AtomicT[84982](?).init=[83202](arg _mt[83211]:_MT[201], ref arg this[83204]:AtomicT[84982](?), const  ref arg other[83208]:AtomicT[84982](?)) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown valType[519292] "temp" "type variable"
    (519294 'move' valType[519292](83221 call valType _mt[203] other[83208]))
    (519296 'init field' this[83204] c"valType" valType[519292])
    (550205 'end of statement')
    unknown _v[519300] "temp"
    unknown call_tmp[769423] "expr temp" "maybe param" "maybe type" "temp"
    (769426 'move' call_tmp[769423](519311 '.v' this[83204] c"valType"))
    unknown call_tmp[769428] "expr temp" "maybe param" "maybe type" "temp"
    (769431 'move' call_tmp[769428](519303 call externT call_tmp[769423]))
    (519305 'default init var' _v[519300] call_tmp[769428])
    (519307 '.=' this[83204] c"_v" _v[519300])
    (550206 'end of statement')
    (519314 'init done')
    (550207 'end of statement')
    unknown call_tmp[769437] "expr temp" "maybe param" "maybe type" "temp"
    (769440 'move' call_tmp[769437](83235 call(83232 call (partial) read _mt[203] other[83208])))
    (83230 call(422567 call (partial) init_helper _mt[203] this[83204]) call_tmp[769437])
    (599289 return _void[46])
  }
  function AtomicT[84982](?).init=[83238](arg _mt[83250]:_MT[201], ref arg this[83240]:AtomicT[84982](?), arg other[83247] :
  unknown call_tmp[769442] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown valType[519315] "temp" "type variable"
    (519317 'move' valType[519315](83260 'typeof' other[83247]))
    (519319 'init field' this[83240] c"valType" valType[519315])
    (550209 'end of statement')
    unknown _v[519323] "temp"
    unknown call_tmp[769449] "expr temp" "maybe param" "maybe type" "temp"
    (769452 'move' call_tmp[769449](519334 '.v' this[83240] c"valType"))
    unknown call_tmp[769454] "expr temp" "maybe param" "maybe type" "temp"
    (769457 'move' call_tmp[769454](519326 call externT call_tmp[769449]))
    (519328 'default init var' _v[519323] call_tmp[769454])
    (519330 '.=' this[83240] c"_v" _v[519323])
    (550210 'end of statement')
    (519337 'init done')
    (550211 'end of statement')
    (83267 call(422573 call (partial) init_helper _mt[203] this[83240]) other[83247])
    (599291 return _void[46])
  }
  function AtomicT[84982](?).deinit[83271](arg _mt[83275]:_MT[201], ref arg this[83273]:AtomicT[84982](?)) : _unknown[42] "atomic type" "destructor" "method" "primary method" "no return value for void"
  {
    function atomic_destroy[83278](ref arg obj[83283] :
    unknown call_tmp[769463] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[83295]:string[244] =
    unknown call_tmp[769470] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[83309] "const" "temp"
      unknown call_tmp[769475] "expr temp" "maybe param" "maybe type" "temp"
      (769478 'move' call_tmp[769475](83306 '_wide_get_locale' this[83273]))
      (83310 'move' tmp[83309](83307 'deref' call_tmp[769475]))
      unknown call_tmp[769482] "expr temp" "maybe param" "maybe type" "temp"
      (769485 'move' call_tmp[769482](422590 call _v _mt[203] this[83273]))
      (83303 call atomic_destroy call_tmp[769482])
      (83313 'elided on block' 0 tmp[83309])
    }
    (599293 return _void[46])
  }
  function AtomicT[84982](?).read[83319](arg _mt[83332]:_MT[201], const arg this[83321]:AtomicT[84982](?), param arg order[83328]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599297] "RVV" "temp"
    function atomic_load[83336](const  ref arg obj[83341] :
    unknown call_tmp[769489] "expr temp" "maybe param" "maybe type" "temp", arg order[83345]:memory_order[80955], arg _chpl_cname[83355]:string[244] =
    unknown call_tmp[769496] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (422607 call valType _mt[203] this[83321])
    }
    unknown ret[83362] "dead at end of block" "insert auto destroy"
    unknown call_tmp[769505] "expr temp" "maybe param" "maybe type" "temp"
    (769508 'move' call_tmp[769505](422617 call valType _mt[203] this[83321]))
    (644499 'default init var' ret[83362] call_tmp[769505])
    (83365 'end of statement')
    {
      const tmp[83380] "const" "temp"
      unknown call_tmp[769510] "expr temp" "maybe param" "maybe type" "temp"
      (769513 'move' call_tmp[769510](83377 '_wide_get_locale' this[83321]))
      (83381 'move' tmp[83380](83378 'deref' call_tmp[769510]))
      unknown call_tmp[769517] "expr temp" "maybe param" "maybe type" "temp"
      (769520 'move' call_tmp[769517](422624 call _v _mt[203] this[83321]))
      unknown call_tmp[769522] "expr temp" "maybe param" "maybe type" "temp"
      (769525 'move' call_tmp[769522](83374 call c_memory_order order[83328]))
      unknown call_tmp[769527] "expr temp" "maybe param" "maybe type" "temp"
      (769530 'move' call_tmp[769527](83371 call atomic_load call_tmp[769517] call_tmp[769522]))
      (83367 call = ret[83362] call_tmp[769527])
      (550214 'end of statement' ret[83362])
      (83384 'elided on block' 0 tmp[83380])
    }
    unknown call_tmp[769534] "expr temp" "maybe param" "maybe type" "temp"
    (769537 'move' call_tmp[769534](599302 call valType _mt[203] this[83321]))
    (599306 'move' ret[599297](599305 'coerce' ret[83362] call_tmp[769534]))
    gotoReturn _end_read[599295] _end_read[599295]
    (550216 'end of statement' ret[83362])
    label _end_read[599295]
    (599299 return ret[599297])
  }
  { scopeless type
    (422596 call valType _mt[203] this[83321])
  }
  function AtomicT[84982](?).write[83393](arg _mt[83410]:_MT[201], ref arg this[83395]:AtomicT[84982](?), arg val[83398] :
  (422631 call valType _mt[203] this[83395]), param arg order[83406]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599312] "RVV" "temp"
    function atomic_store[83414](ref arg obj[83419] :
    unknown call_tmp[769545] "expr temp" "maybe param" "maybe type" "temp", arg val[83423] :
    (422642 call valType _mt[203] this[83395]), arg order[83427]:memory_order[80955], arg _chpl_cname[83437]:string[244] =
    unknown call_tmp[769554] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[83455] "const" "temp"
      unknown call_tmp[769559] "expr temp" "maybe param" "maybe type" "temp"
      (769562 'move' call_tmp[769559](83452 '_wide_get_locale' this[83395]))
      (83456 'move' tmp[83455](83453 'deref' call_tmp[769559]))
      unknown call_tmp[769566] "expr temp" "maybe param" "maybe type" "temp"
      (769569 'move' call_tmp[769566](422654 call _v _mt[203] this[83395]))
      unknown call_tmp[769571] "expr temp" "maybe param" "maybe type" "temp"
      (769574 'move' call_tmp[769571](83449 call c_memory_order order[83406]))
      (83445 call atomic_store call_tmp[769566] val[83398] call_tmp[769571])
      (83459 'elided on block' 0 tmp[83455])
    }
    (599314 return ret[599312])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[84982](?).exchange[83466](arg _mt[83483]:_MT[201], ref arg this[83468]:AtomicT[84982](?), arg val[83471] :
  (422661 call valType _mt[203] this[83468]), param arg order[83479]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599318] "RVV" "temp"
    function atomic_exchange[83487](ref arg obj[83492] :
    unknown call_tmp[769580] "expr temp" "maybe param" "maybe type" "temp", arg val[83496] :
    (422677 call valType _mt[203] this[83468]), arg order[83500]:memory_order[80955], arg _chpl_cname[83510]:string[244] =
    unknown call_tmp[769589] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (422683 call valType _mt[203] this[83468])
    }
    unknown ret[83517] "dead at end of block" "insert auto destroy"
    unknown call_tmp[769598] "expr temp" "maybe param" "maybe type" "temp"
    (769601 'move' call_tmp[769598](422693 call valType _mt[203] this[83468]))
    (644501 'default init var' ret[83517] call_tmp[769598])
    (83520 'end of statement')
    {
      const tmp[83536] "const" "temp"
      unknown call_tmp[769603] "expr temp" "maybe param" "maybe type" "temp"
      (769606 'move' call_tmp[769603](83533 '_wide_get_locale' this[83468]))
      (83537 'move' tmp[83536](83534 'deref' call_tmp[769603]))
      unknown call_tmp[769610] "expr temp" "maybe param" "maybe type" "temp"
      (769613 'move' call_tmp[769610](422700 call _v _mt[203] this[83468]))
      unknown call_tmp[769615] "expr temp" "maybe param" "maybe type" "temp"
      (769618 'move' call_tmp[769615](83530 call c_memory_order order[83479]))
      unknown call_tmp[769620] "expr temp" "maybe param" "maybe type" "temp"
      (769623 'move' call_tmp[769620](83526 call atomic_exchange call_tmp[769610] val[83471] call_tmp[769615]))
      (83522 call = ret[83517] call_tmp[769620])
      (550219 'end of statement' ret[83517])
      (83540 'elided on block' 0 tmp[83536])
    }
    unknown call_tmp[769627] "expr temp" "maybe param" "maybe type" "temp"
    (769630 'move' call_tmp[769627](599323 call valType _mt[203] this[83468]))
    (599327 'move' ret[599318](599326 'coerce' ret[83517] call_tmp[769627]))
    gotoReturn _end_exchange[599316] _end_exchange[599316]
    (550221 'end of statement' ret[83517])
    label _end_exchange[599316]
    (599320 return ret[599318])
  }
  { scopeless type
    (422667 call valType _mt[203] this[83468])
  }
  function AtomicT[84982](?).compareExchange[83549](arg _mt[83570]:_MT[201], ref arg this[83551]:AtomicT[84982](?), ref arg expected[83554] :
  (422708 call valType _mt[203] this[83551]), arg desired[83558] :
  (422713 call valType _mt[203] this[83551]), param arg order[83566]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599333] "RVV" "temp"
    unknown call_tmp[769640] "expr temp" "maybe param" "maybe type" "temp"
    (769643 'move' call_tmp[769640](83584 call readableOrder order[83566]))
    unknown call_tmp[769645] "expr temp" "maybe param" "maybe type" "temp"
    (769648 'move' call_tmp[769645](83579 call(83576 call (partial) compareExchange _mt[203] this[83551]) expected[83554] desired[83558] order[83566] call_tmp[769640]))
    (599339 'move' ret[599333](599338 'coerce' call_tmp[769645] bool[19]))
    (599335 return ret[599333])
  }
  { scopeless type
    bool[19]
  }
  function AtomicT[84982](?).compareExchange[83589](arg _mt[83609]:_MT[201], ref arg this[83591]:AtomicT[84982](?), ref arg expected[83594] :
  (422724 call valType _mt[203] this[83591]), arg desired[83598] :
  (422729 call valType _mt[203] this[83591]), param arg success[83602]:memoryOrder[81226], param arg failure[83606]:memoryOrder[81226]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599343] "RVV" "temp"
    function atomic_compare_exchange_strong[83613](ref arg obj[83618] :
    unknown call_tmp[769656] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[83622] :
    (422742 call valType _mt[203] this[83591]), arg desired[83626] :
    (422747 call valType _mt[203] this[83591]), arg succ[83630]:memory_order[80955], arg fail[83634]:memory_order[80955], arg _chpl_cname[83644]:string[244] =
    unknown call_tmp[769667] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[83651] "dead at end of block" "insert auto destroy"
    (644503 'default init var' ret[83651] bool[19])
    (83654 'end of statement')
    {
      const tmp[83692] "const" "temp"
      unknown call_tmp[769672] "expr temp" "maybe param" "maybe type" "temp"
      (769675 'move' call_tmp[769672](83689 '_wide_get_locale' this[83591]))
      (83693 'move' tmp[83692](83690 'deref' call_tmp[769672]))
      {
        unknown localizedExpected[83658] "dead at end of block" "insert auto destroy"
        (644505 'init var' localizedExpected[83658] expected[83594])
        (83661 'end of statement')
        unknown call_tmp[769679] "expr temp" "maybe param" "maybe type" "temp"
        (769682 'move' call_tmp[769679](422764 call _v _mt[203] this[83591]))
        unknown call_tmp[769684] "expr temp" "maybe param" "maybe type" "temp"
        (769687 'move' call_tmp[769684](83671 call c_memory_order success[83602]))
        unknown call_tmp[769689] "expr temp" "maybe param" "maybe type" "temp"
        (769692 'move' call_tmp[769689](83674 call c_memory_order failure[83606]))
        unknown call_tmp[769694] "expr temp" "maybe param" "maybe type" "temp"
        (769697 'move' call_tmp[769694](83666 call atomic_compare_exchange_strong call_tmp[769679] localizedExpected[83658] desired[83598] call_tmp[769684] call_tmp[769689]))
        (83662 call = ret[83651] call_tmp[769694])
        (550224 'end of statement' ret[83651] localizedExpected[83658])
        unknown call_tmp[769699] "expr temp" "maybe param" "maybe type" "temp"
        (769702 'move' call_tmp[769699](83681 call ! ret[83651]))
        unknown call_tmp[769704] "expr temp" "maybe param" "maybe type" "temp"
        (769707 'move' call_tmp[769704](83684 call _cond_test call_tmp[769699]))
        if call_tmp[769704]
        {
          (83676 call = expected[83594] localizedExpected[83658])
          (550227 'end of statement' localizedExpected[83658])
        }
      }
      (83696 'elided on block' 0 tmp[83692])
    }
    (599349 'move' ret[599343](599348 'coerce' ret[83651] bool[19]))
    gotoReturn _end_compareExchange[599341] _end_compareExchange[599341]
    (550229 'end of statement' ret[83651])
    label _end_compareExchange[599341]
    (599345 return ret[599343])
  }
  { scopeless type
    bool[19]
  }
  function AtomicT[84982](?).compareExchangeWeak[83705](arg _mt[83726]:_MT[201], ref arg this[83707]:AtomicT[84982](?), ref arg expected[83710] :
  (422777 call valType _mt[203] this[83707]), arg desired[83714] :
  (422782 call valType _mt[203] this[83707]), param arg order[83722]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599355] "RVV" "temp"
    unknown call_tmp[769715] "expr temp" "maybe param" "maybe type" "temp"
    (769718 'move' call_tmp[769715](83740 call readableOrder order[83722]))
    unknown call_tmp[769720] "expr temp" "maybe param" "maybe type" "temp"
    (769723 'move' call_tmp[769720](83735 call(83732 call (partial) compareExchangeWeak _mt[203] this[83707]) expected[83710] desired[83714] order[83722] call_tmp[769715]))
    (599361 'move' ret[599355](599360 'coerce' call_tmp[769720] bool[19]))
    (599357 return ret[599355])
  }
  { scopeless type
    bool[19]
  }
  function AtomicT[84982](?).compareExchangeWeak[83745](arg _mt[83765]:_MT[201], ref arg this[83747]:AtomicT[84982](?), ref arg expected[83750] :
  (422793 call valType _mt[203] this[83747]), arg desired[83754] :
  (422798 call valType _mt[203] this[83747]), param arg success[83758]:memoryOrder[81226], param arg failure[83762]:memoryOrder[81226]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599365] "RVV" "temp"
    function atomic_compare_exchange_weak[83769](ref arg obj[83774] :
    unknown call_tmp[769731] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[83778] :
    (422811 call valType _mt[203] this[83747]), arg desired[83782] :
    (422816 call valType _mt[203] this[83747]), arg succ[83786]:memory_order[80955], arg fail[83790]:memory_order[80955], arg _chpl_cname[83800]:string[244] =
    unknown call_tmp[769742] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[83807] "dead at end of block" "insert auto destroy"
    (644507 'default init var' ret[83807] bool[19])
    (83810 'end of statement')
    {
      const tmp[83848] "const" "temp"
      unknown call_tmp[769747] "expr temp" "maybe param" "maybe type" "temp"
      (769750 'move' call_tmp[769747](83845 '_wide_get_locale' this[83747]))
      (83849 'move' tmp[83848](83846 'deref' call_tmp[769747]))
      {
        unknown localizedExpected[83814] "dead at end of block" "insert auto destroy"
        (644509 'init var' localizedExpected[83814] expected[83750])
        (83817 'end of statement')
        unknown call_tmp[769754] "expr temp" "maybe param" "maybe type" "temp"
        (769757 'move' call_tmp[769754](422833 call _v _mt[203] this[83747]))
        unknown call_tmp[769759] "expr temp" "maybe param" "maybe type" "temp"
        (769762 'move' call_tmp[769759](83827 call c_memory_order success[83758]))
        unknown call_tmp[769764] "expr temp" "maybe param" "maybe type" "temp"
        (769767 'move' call_tmp[769764](83830 call c_memory_order failure[83762]))
        unknown call_tmp[769769] "expr temp" "maybe param" "maybe type" "temp"
        (769772 'move' call_tmp[769769](83822 call atomic_compare_exchange_weak call_tmp[769754] localizedExpected[83814] desired[83754] call_tmp[769759] call_tmp[769764]))
        (83818 call = ret[83807] call_tmp[769769])
        (550232 'end of statement' ret[83807] localizedExpected[83814])
        unknown call_tmp[769774] "expr temp" "maybe param" "maybe type" "temp"
        (769777 'move' call_tmp[769774](83837 call ! ret[83807]))
        unknown call_tmp[769779] "expr temp" "maybe param" "maybe type" "temp"
        (769782 'move' call_tmp[769779](83840 call _cond_test call_tmp[769774]))
        if call_tmp[769779]
        {
          (83832 call = expected[83750] localizedExpected[83814])
          (550235 'end of statement' localizedExpected[83814])
        }
      }
      (83852 'elided on block' 0 tmp[83848])
    }
    (599371 'move' ret[599365](599370 'coerce' ret[83807] bool[19]))
    gotoReturn _end_compareExchangeWeak[599363] _end_compareExchangeWeak[599363]
    (550237 'end of statement' ret[83807])
    label _end_compareExchangeWeak[599363]
    (599367 return ret[599365])
  }
  { scopeless type
    bool[19]
  }
  function AtomicT[84982](?).compareAndSwap[83861](arg _mt[83882]:_MT[201], ref arg this[83863]:AtomicT[84982](?), arg expected[83866] :
  (422846 call valType _mt[203] this[83863]), arg desired[83870] :
  (422851 call valType _mt[203] this[83863]), param arg order[83878]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "@unstable"
  {
    unknown ret[599377] "RVV" "temp"
    function atomic_compare_exchange_strong[83886](ref arg obj[83891] :
    unknown call_tmp[769790] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[83895] :
    (422863 call valType _mt[203] this[83863]), arg desired[83899] :
    (422868 call valType _mt[203] this[83863]), arg succ[83903]:memory_order[80955], arg fail[83907]:memory_order[80955], arg _chpl_cname[83917]:string[244] =
    unknown call_tmp[769801] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      bool[19]
    }
    unknown ret[83924] "dead at end of block" "insert auto destroy"
    (644511 'default init var' ret[83924] bool[19])
    (83927 'end of statement')
    {
      const tmp[83954] "const" "temp"
      unknown call_tmp[769806] "expr temp" "maybe param" "maybe type" "temp"
      (769809 'move' call_tmp[769806](83951 '_wide_get_locale' this[83863]))
      (83955 'move' tmp[83954](83952 'deref' call_tmp[769806]))
      {
        unknown mutableExpected[83931] "dead at end of block" "insert auto destroy"
        (644513 'init var' mutableExpected[83931] expected[83866])
        (83934 'end of statement')
        unknown call_tmp[769813] "expr temp" "maybe param" "maybe type" "temp"
        (769816 'move' call_tmp[769813](422885 call _v _mt[203] this[83863]))
        unknown call_tmp[769818] "expr temp" "maybe param" "maybe type" "temp"
        (769821 'move' call_tmp[769818](83944 call c_memory_order order[83878]))
        unknown call_tmp[769823] "expr temp" "maybe param" "maybe type" "temp"
        (769826 'move' call_tmp[769823](83949 call readableOrder order[83878]))
        unknown call_tmp[769828] "expr temp" "maybe param" "maybe type" "temp"
        (769831 'move' call_tmp[769828](83947 call c_memory_order call_tmp[769823]))
        unknown call_tmp[769833] "expr temp" "maybe param" "maybe type" "temp"
        (769836 'move' call_tmp[769833](83939 call atomic_compare_exchange_strong call_tmp[769813] mutableExpected[83931] desired[83870] call_tmp[769818] call_tmp[769828]))
        (83935 call = ret[83924] call_tmp[769833])
        (550239 'end of statement' ret[83924] mutableExpected[83931])
      }
      (83958 'elided on block' 0 tmp[83954])
    }
    (599383 'move' ret[599377](599382 'coerce' ret[83924] bool[19]))
    gotoReturn _end_compareAndSwap[599375] _end_compareAndSwap[599375]
    (550242 'end of statement' ret[83924])
    label _end_compareAndSwap[599375]
    (599379 return ret[599377])
  }
  { scopeless type
    bool[19]
  }
  function AtomicT[84982](?).fetchAdd[83967](arg _mt[83984]:_MT[201], ref arg this[83969]:AtomicT[84982](?), arg val[83972] :
  (422895 call valType _mt[203] this[83969]), param arg order[83980]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599389] "RVV" "temp"
    function atomic_fetch_add[83988](ref arg obj[83993] :
    unknown call_tmp[769842] "expr temp" "maybe param" "maybe type" "temp", arg operand[83997] :
    (422911 call valType _mt[203] this[83969]), arg order[84001]:memory_order[80955], arg _chpl_cname[84013]:string[244] =
    unknown call_tmp[769851] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (422917 call valType _mt[203] this[83969])
    }
    unknown ret[84020] "dead at end of block" "insert auto destroy"
    unknown call_tmp[769860] "expr temp" "maybe param" "maybe type" "temp"
    (769863 'move' call_tmp[769860](422927 call valType _mt[203] this[83969]))
    (644515 'default init var' ret[84020] call_tmp[769860])
    (84023 'end of statement')
    {
      const tmp[84039] "const" "temp"
      unknown call_tmp[769865] "expr temp" "maybe param" "maybe type" "temp"
      (769868 'move' call_tmp[769865](84036 '_wide_get_locale' this[83969]))
      (84040 'move' tmp[84039](84037 'deref' call_tmp[769865]))
      unknown call_tmp[769872] "expr temp" "maybe param" "maybe type" "temp"
      (769875 'move' call_tmp[769872](422934 call _v _mt[203] this[83969]))
      unknown call_tmp[769877] "expr temp" "maybe param" "maybe type" "temp"
      (769880 'move' call_tmp[769877](84033 call c_memory_order order[83980]))
      unknown call_tmp[769882] "expr temp" "maybe param" "maybe type" "temp"
      (769885 'move' call_tmp[769882](84029 call atomic_fetch_add call_tmp[769872] val[83972] call_tmp[769877]))
      (84025 call = ret[84020] call_tmp[769882])
      (550244 'end of statement' ret[84020])
      (84043 'elided on block' 0 tmp[84039])
    }
    unknown call_tmp[769889] "expr temp" "maybe param" "maybe type" "temp"
    (769892 'move' call_tmp[769889](599394 call valType _mt[203] this[83969]))
    (599398 'move' ret[599389](599397 'coerce' ret[84020] call_tmp[769889]))
    gotoReturn _end_fetchAdd[599387] _end_fetchAdd[599387]
    (550246 'end of statement' ret[84020])
    label _end_fetchAdd[599387]
    (599391 return ret[599389])
  }
  { scopeless type
    (422901 call valType _mt[203] this[83969])
  }
  function AtomicT[84982](?).add[84052](arg _mt[84069]:_MT[201], ref arg this[84054]:AtomicT[84982](?), arg val[84057] :
  (422942 call valType _mt[203] this[84054]), param arg order[84065]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599404] "RVV" "temp"
    function atomic_fetch_add[84073](ref arg obj[84078] :
    unknown call_tmp[769900] "expr temp" "maybe param" "maybe type" "temp", arg operand[84082] :
    (422953 call valType _mt[203] this[84054]), arg order[84086]:memory_order[80955], arg _chpl_cname[84096]:string[244] =
    unknown call_tmp[769909] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (422959 call valType _mt[203] this[84054])
    }
    {
      const tmp[84114] "const" "temp"
      unknown call_tmp[769916] "expr temp" "maybe param" "maybe type" "temp"
      (769919 'move' call_tmp[769916](84111 '_wide_get_locale' this[84054]))
      (84115 'move' tmp[84114](84112 'deref' call_tmp[769916]))
      unknown call_tmp[769923] "expr temp" "maybe param" "maybe type" "temp"
      (769926 'move' call_tmp[769923](422970 call _v _mt[203] this[84054]))
      unknown call_tmp[769928] "expr temp" "maybe param" "maybe type" "temp"
      (769931 'move' call_tmp[769928](84108 call c_memory_order order[84065]))
      (84104 call atomic_fetch_add call_tmp[769923] val[84057] call_tmp[769928])
      (84118 'elided on block' 0 tmp[84114])
    }
    (599406 return ret[599404])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[84982](?).fetchSub[84125](arg _mt[84142]:_MT[201], ref arg this[84127]:AtomicT[84982](?), arg val[84130] :
  (422977 call valType _mt[203] this[84127]), param arg order[84138]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599410] "RVV" "temp"
    function atomic_fetch_sub[84146](ref arg obj[84151] :
    unknown call_tmp[769937] "expr temp" "maybe param" "maybe type" "temp", arg operand[84155] :
    (422993 call valType _mt[203] this[84127]), arg order[84159]:memory_order[80955], arg _chpl_cname[84171]:string[244] =
    unknown call_tmp[769946] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (422999 call valType _mt[203] this[84127])
    }
    unknown ret[84178] "dead at end of block" "insert auto destroy"
    unknown call_tmp[769955] "expr temp" "maybe param" "maybe type" "temp"
    (769958 'move' call_tmp[769955](423009 call valType _mt[203] this[84127]))
    (644517 'default init var' ret[84178] call_tmp[769955])
    (84181 'end of statement')
    {
      const tmp[84197] "const" "temp"
      unknown call_tmp[769960] "expr temp" "maybe param" "maybe type" "temp"
      (769963 'move' call_tmp[769960](84194 '_wide_get_locale' this[84127]))
      (84198 'move' tmp[84197](84195 'deref' call_tmp[769960]))
      unknown call_tmp[769967] "expr temp" "maybe param" "maybe type" "temp"
      (769970 'move' call_tmp[769967](423016 call _v _mt[203] this[84127]))
      unknown call_tmp[769972] "expr temp" "maybe param" "maybe type" "temp"
      (769975 'move' call_tmp[769972](84191 call c_memory_order order[84138]))
      unknown call_tmp[769977] "expr temp" "maybe param" "maybe type" "temp"
      (769980 'move' call_tmp[769977](84187 call atomic_fetch_sub call_tmp[769967] val[84130] call_tmp[769972]))
      (84183 call = ret[84178] call_tmp[769977])
      (550249 'end of statement' ret[84178])
      (84201 'elided on block' 0 tmp[84197])
    }
    unknown call_tmp[769984] "expr temp" "maybe param" "maybe type" "temp"
    (769987 'move' call_tmp[769984](599415 call valType _mt[203] this[84127]))
    (599419 'move' ret[599410](599418 'coerce' ret[84178] call_tmp[769984]))
    gotoReturn _end_fetchSub[599408] _end_fetchSub[599408]
    (550251 'end of statement' ret[84178])
    label _end_fetchSub[599408]
    (599412 return ret[599410])
  }
  { scopeless type
    (422983 call valType _mt[203] this[84127])
  }
  function AtomicT[84982](?).sub[84210](arg _mt[84227]:_MT[201], ref arg this[84212]:AtomicT[84982](?), arg val[84215] :
  (423024 call valType _mt[203] this[84212]), param arg order[84223]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599425] "RVV" "temp"
    function atomic_fetch_sub[84231](ref arg obj[84236] :
    unknown call_tmp[769995] "expr temp" "maybe param" "maybe type" "temp", arg operand[84240] :
    (423035 call valType _mt[203] this[84212]), arg order[84244]:memory_order[80955], arg _chpl_cname[84254]:string[244] =
    unknown call_tmp[770004] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (423041 call valType _mt[203] this[84212])
    }
    {
      const tmp[84272] "const" "temp"
      unknown call_tmp[770011] "expr temp" "maybe param" "maybe type" "temp"
      (770014 'move' call_tmp[770011](84269 '_wide_get_locale' this[84212]))
      (84273 'move' tmp[84272](84270 'deref' call_tmp[770011]))
      unknown call_tmp[770018] "expr temp" "maybe param" "maybe type" "temp"
      (770021 'move' call_tmp[770018](423052 call _v _mt[203] this[84212]))
      unknown call_tmp[770023] "expr temp" "maybe param" "maybe type" "temp"
      (770026 'move' call_tmp[770023](84266 call c_memory_order order[84223]))
      (84262 call atomic_fetch_sub call_tmp[770018] val[84215] call_tmp[770023])
      (84276 'elided on block' 0 tmp[84272])
    }
    (599427 return ret[599425])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[84982](?).fetchOr[84283](arg _mt[84300]:_MT[201], ref arg this[84285]:AtomicT[84982](?), arg val[84288] :
  (423059 call valType _mt[203] this[84285]), param arg order[84296]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599431] "RVV" "temp"
    unknown call_tmp[770032] "expr temp" "maybe param" "maybe type" "temp"
    (770035 'move' call_tmp[770032](423070 call valType _mt[203] this[84285]))
    unknown call_tmp[770037] "expr temp" "maybe param" "maybe type" "temp"
    (770040 'move' call_tmp[770037](84313 call isIntegral call_tmp[770032]))
    unknown call_tmp[770042] "expr temp" "maybe param" "maybe type" "temp"
    (770045 'move' call_tmp[770042](84310 call ! call_tmp[770037]))
    unknown call_tmp[770047] "expr temp" "maybe param" "maybe type" "temp"
    (770050 'move' call_tmp[770047](84315 call _cond_test call_tmp[770042]))
    if call_tmp[770047]
    {
      (84305 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[84320](ref arg obj[84325] :
    unknown call_tmp[770054] "expr temp" "maybe param" "maybe type" "temp", arg operand[84329] :
    (423080 call valType _mt[203] this[84285]), arg order[84333]:memory_order[80955], arg _chpl_cname[84345]:string[244] =
    unknown call_tmp[770063] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (423086 call valType _mt[203] this[84285])
    }
    unknown ret[84352] "dead at end of block" "insert auto destroy"
    unknown call_tmp[770072] "expr temp" "maybe param" "maybe type" "temp"
    (770075 'move' call_tmp[770072](423096 call valType _mt[203] this[84285]))
    (644519 'default init var' ret[84352] call_tmp[770072])
    (84355 'end of statement')
    {
      const tmp[84371] "const" "temp"
      unknown call_tmp[770077] "expr temp" "maybe param" "maybe type" "temp"
      (770080 'move' call_tmp[770077](84368 '_wide_get_locale' this[84285]))
      (84372 'move' tmp[84371](84369 'deref' call_tmp[770077]))
      unknown call_tmp[770084] "expr temp" "maybe param" "maybe type" "temp"
      (770087 'move' call_tmp[770084](423103 call _v _mt[203] this[84285]))
      unknown call_tmp[770089] "expr temp" "maybe param" "maybe type" "temp"
      (770092 'move' call_tmp[770089](84365 call c_memory_order order[84296]))
      unknown call_tmp[770094] "expr temp" "maybe param" "maybe type" "temp"
      (770097 'move' call_tmp[770094](84361 call atomic_fetch_or call_tmp[770084] val[84288] call_tmp[770089]))
      (84357 call = ret[84352] call_tmp[770094])
      (550255 'end of statement' ret[84352])
      (84375 'elided on block' 0 tmp[84371])
    }
    unknown call_tmp[770101] "expr temp" "maybe param" "maybe type" "temp"
    (770104 'move' call_tmp[770101](599436 call valType _mt[203] this[84285]))
    (599440 'move' ret[599431](599439 'coerce' ret[84352] call_tmp[770101]))
    gotoReturn _end_fetchOr[599429] _end_fetchOr[599429]
    (550257 'end of statement' ret[84352])
    label _end_fetchOr[599429]
    (599433 return ret[599431])
  }
  { scopeless type
    (423065 call valType _mt[203] this[84285])
  }
  function AtomicT[84982](?).or[84384](arg _mt[84401]:_MT[201], ref arg this[84386]:AtomicT[84982](?), arg val[84389] :
  (423111 call valType _mt[203] this[84386]), param arg order[84397]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599446] "RVV" "temp"
    unknown call_tmp[770112] "expr temp" "maybe param" "maybe type" "temp"
    (770115 'move' call_tmp[770112](423117 call valType _mt[203] this[84386]))
    unknown call_tmp[770117] "expr temp" "maybe param" "maybe type" "temp"
    (770120 'move' call_tmp[770117](84414 call isIntegral call_tmp[770112]))
    unknown call_tmp[770122] "expr temp" "maybe param" "maybe type" "temp"
    (770125 'move' call_tmp[770122](84411 call ! call_tmp[770117]))
    unknown call_tmp[770127] "expr temp" "maybe param" "maybe type" "temp"
    (770130 'move' call_tmp[770127](84416 call _cond_test call_tmp[770122]))
    if call_tmp[770127]
    {
      (84406 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[84421](ref arg obj[84426] :
    unknown call_tmp[770134] "expr temp" "maybe param" "maybe type" "temp", arg operand[84430] :
    (423127 call valType _mt[203] this[84386]), arg order[84434]:memory_order[80955], arg _chpl_cname[84444]:string[244] =
    unknown call_tmp[770143] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (423133 call valType _mt[203] this[84386])
    }
    {
      const tmp[84462] "const" "temp"
      unknown call_tmp[770150] "expr temp" "maybe param" "maybe type" "temp"
      (770153 'move' call_tmp[770150](84459 '_wide_get_locale' this[84386]))
      (84463 'move' tmp[84462](84460 'deref' call_tmp[770150]))
      unknown call_tmp[770157] "expr temp" "maybe param" "maybe type" "temp"
      (770160 'move' call_tmp[770157](423144 call _v _mt[203] this[84386]))
      unknown call_tmp[770162] "expr temp" "maybe param" "maybe type" "temp"
      (770165 'move' call_tmp[770162](84456 call c_memory_order order[84397]))
      (84452 call atomic_fetch_or call_tmp[770157] val[84389] call_tmp[770162])
      (84466 'elided on block' 0 tmp[84462])
    }
    (599448 return ret[599446])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[84982](?).fetchAnd[84473](arg _mt[84490]:_MT[201], ref arg this[84475]:AtomicT[84982](?), arg val[84478] :
  (423151 call valType _mt[203] this[84475]), param arg order[84486]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599452] "RVV" "temp"
    unknown call_tmp[770171] "expr temp" "maybe param" "maybe type" "temp"
    (770174 'move' call_tmp[770171](423162 call valType _mt[203] this[84475]))
    unknown call_tmp[770176] "expr temp" "maybe param" "maybe type" "temp"
    (770179 'move' call_tmp[770176](84503 call isIntegral call_tmp[770171]))
    unknown call_tmp[770181] "expr temp" "maybe param" "maybe type" "temp"
    (770184 'move' call_tmp[770181](84500 call ! call_tmp[770176]))
    unknown call_tmp[770186] "expr temp" "maybe param" "maybe type" "temp"
    (770189 'move' call_tmp[770186](84505 call _cond_test call_tmp[770181]))
    if call_tmp[770186]
    {
      (84495 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[84510](ref arg obj[84515] :
    unknown call_tmp[770193] "expr temp" "maybe param" "maybe type" "temp", arg operand[84519] :
    (423172 call valType _mt[203] this[84475]), arg order[84523]:memory_order[80955], arg _chpl_cname[84535]:string[244] =
    unknown call_tmp[770202] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (423178 call valType _mt[203] this[84475])
    }
    unknown ret[84542] "dead at end of block" "insert auto destroy"
    unknown call_tmp[770211] "expr temp" "maybe param" "maybe type" "temp"
    (770214 'move' call_tmp[770211](423188 call valType _mt[203] this[84475]))
    (644521 'default init var' ret[84542] call_tmp[770211])
    (84545 'end of statement')
    {
      const tmp[84561] "const" "temp"
      unknown call_tmp[770216] "expr temp" "maybe param" "maybe type" "temp"
      (770219 'move' call_tmp[770216](84558 '_wide_get_locale' this[84475]))
      (84562 'move' tmp[84561](84559 'deref' call_tmp[770216]))
      unknown call_tmp[770223] "expr temp" "maybe param" "maybe type" "temp"
      (770226 'move' call_tmp[770223](423195 call _v _mt[203] this[84475]))
      unknown call_tmp[770228] "expr temp" "maybe param" "maybe type" "temp"
      (770231 'move' call_tmp[770228](84555 call c_memory_order order[84486]))
      unknown call_tmp[770233] "expr temp" "maybe param" "maybe type" "temp"
      (770236 'move' call_tmp[770233](84551 call atomic_fetch_and call_tmp[770223] val[84478] call_tmp[770228]))
      (84547 call = ret[84542] call_tmp[770233])
      (550262 'end of statement' ret[84542])
      (84565 'elided on block' 0 tmp[84561])
    }
    unknown call_tmp[770240] "expr temp" "maybe param" "maybe type" "temp"
    (770243 'move' call_tmp[770240](599457 call valType _mt[203] this[84475]))
    (599461 'move' ret[599452](599460 'coerce' ret[84542] call_tmp[770240]))
    gotoReturn _end_fetchAnd[599450] _end_fetchAnd[599450]
    (550264 'end of statement' ret[84542])
    label _end_fetchAnd[599450]
    (599454 return ret[599452])
  }
  { scopeless type
    (423157 call valType _mt[203] this[84475])
  }
  function AtomicT[84982](?).and[84574](arg _mt[84591]:_MT[201], ref arg this[84576]:AtomicT[84982](?), arg val[84579] :
  (423203 call valType _mt[203] this[84576]), param arg order[84587]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599467] "RVV" "temp"
    unknown call_tmp[770251] "expr temp" "maybe param" "maybe type" "temp"
    (770254 'move' call_tmp[770251](423209 call valType _mt[203] this[84576]))
    unknown call_tmp[770256] "expr temp" "maybe param" "maybe type" "temp"
    (770259 'move' call_tmp[770256](84604 call isIntegral call_tmp[770251]))
    unknown call_tmp[770261] "expr temp" "maybe param" "maybe type" "temp"
    (770264 'move' call_tmp[770261](84601 call ! call_tmp[770256]))
    unknown call_tmp[770266] "expr temp" "maybe param" "maybe type" "temp"
    (770269 'move' call_tmp[770266](84606 call _cond_test call_tmp[770261]))
    if call_tmp[770266]
    {
      (84596 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[84611](ref arg obj[84616] :
    unknown call_tmp[770273] "expr temp" "maybe param" "maybe type" "temp", arg operand[84620] :
    (423219 call valType _mt[203] this[84576]), arg order[84624]:memory_order[80955], arg _chpl_cname[84634]:string[244] =
    unknown call_tmp[770282] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (423225 call valType _mt[203] this[84576])
    }
    {
      const tmp[84652] "const" "temp"
      unknown call_tmp[770289] "expr temp" "maybe param" "maybe type" "temp"
      (770292 'move' call_tmp[770289](84649 '_wide_get_locale' this[84576]))
      (84653 'move' tmp[84652](84650 'deref' call_tmp[770289]))
      unknown call_tmp[770296] "expr temp" "maybe param" "maybe type" "temp"
      (770299 'move' call_tmp[770296](423236 call _v _mt[203] this[84576]))
      unknown call_tmp[770301] "expr temp" "maybe param" "maybe type" "temp"
      (770304 'move' call_tmp[770301](84646 call c_memory_order order[84587]))
      (84642 call atomic_fetch_and call_tmp[770296] val[84579] call_tmp[770301])
      (84656 'elided on block' 0 tmp[84652])
    }
    (599469 return ret[599467])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[84982](?).fetchXor[84663](arg _mt[84680]:_MT[201], ref arg this[84665]:AtomicT[84982](?), arg val[84668] :
  (423243 call valType _mt[203] this[84665]), param arg order[84676]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[599473] "RVV" "temp"
    unknown call_tmp[770310] "expr temp" "maybe param" "maybe type" "temp"
    (770313 'move' call_tmp[770310](423254 call valType _mt[203] this[84665]))
    unknown call_tmp[770315] "expr temp" "maybe param" "maybe type" "temp"
    (770318 'move' call_tmp[770315](84693 call isIntegral call_tmp[770310]))
    unknown call_tmp[770320] "expr temp" "maybe param" "maybe type" "temp"
    (770323 'move' call_tmp[770320](84690 call ! call_tmp[770315]))
    unknown call_tmp[770325] "expr temp" "maybe param" "maybe type" "temp"
    (770328 'move' call_tmp[770325](84695 call _cond_test call_tmp[770320]))
    if call_tmp[770325]
    {
      (84685 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[84700](ref arg obj[84705] :
    unknown call_tmp[770332] "expr temp" "maybe param" "maybe type" "temp", arg operand[84709] :
    (423264 call valType _mt[203] this[84665]), arg order[84713]:memory_order[80955], arg _chpl_cname[84725]:string[244] =
    unknown call_tmp[770341] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (423270 call valType _mt[203] this[84665])
    }
    unknown ret[84732] "dead at end of block" "insert auto destroy"
    unknown call_tmp[770350] "expr temp" "maybe param" "maybe type" "temp"
    (770353 'move' call_tmp[770350](423280 call valType _mt[203] this[84665]))
    (644523 'default init var' ret[84732] call_tmp[770350])
    (84735 'end of statement')
    {
      const tmp[84751] "const" "temp"
      unknown call_tmp[770355] "expr temp" "maybe param" "maybe type" "temp"
      (770358 'move' call_tmp[770355](84748 '_wide_get_locale' this[84665]))
      (84752 'move' tmp[84751](84749 'deref' call_tmp[770355]))
      unknown call_tmp[770362] "expr temp" "maybe param" "maybe type" "temp"
      (770365 'move' call_tmp[770362](423287 call _v _mt[203] this[84665]))
      unknown call_tmp[770367] "expr temp" "maybe param" "maybe type" "temp"
      (770370 'move' call_tmp[770367](84745 call c_memory_order order[84676]))
      unknown call_tmp[770372] "expr temp" "maybe param" "maybe type" "temp"
      (770375 'move' call_tmp[770372](84741 call atomic_fetch_xor call_tmp[770362] val[84668] call_tmp[770367]))
      (84737 call = ret[84732] call_tmp[770372])
      (550269 'end of statement' ret[84732])
      (84755 'elided on block' 0 tmp[84751])
    }
    unknown call_tmp[770379] "expr temp" "maybe param" "maybe type" "temp"
    (770382 'move' call_tmp[770379](599478 call valType _mt[203] this[84665]))
    (599482 'move' ret[599473](599481 'coerce' ret[84732] call_tmp[770379]))
    gotoReturn _end_fetchXor[599471] _end_fetchXor[599471]
    (550271 'end of statement' ret[84732])
    label _end_fetchXor[599471]
    (599475 return ret[599473])
  }
  { scopeless type
    (423249 call valType _mt[203] this[84665])
  }
  function AtomicT[84982](?).xor[84764](arg _mt[84781]:_MT[201], ref arg this[84766]:AtomicT[84982](?), arg val[84769] :
  (423295 call valType _mt[203] this[84766]), param arg order[84777]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599488] "RVV" "temp"
    unknown call_tmp[770390] "expr temp" "maybe param" "maybe type" "temp"
    (770393 'move' call_tmp[770390](423301 call valType _mt[203] this[84766]))
    unknown call_tmp[770395] "expr temp" "maybe param" "maybe type" "temp"
    (770398 'move' call_tmp[770395](84794 call isIntegral call_tmp[770390]))
    unknown call_tmp[770400] "expr temp" "maybe param" "maybe type" "temp"
    (770403 'move' call_tmp[770400](84791 call ! call_tmp[770395]))
    unknown call_tmp[770405] "expr temp" "maybe param" "maybe type" "temp"
    (770408 'move' call_tmp[770405](84796 call _cond_test call_tmp[770400]))
    if call_tmp[770405]
    {
      (84786 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[84801](ref arg obj[84806] :
    unknown call_tmp[770412] "expr temp" "maybe param" "maybe type" "temp", arg operand[84810] :
    (423311 call valType _mt[203] this[84766]), arg order[84814]:memory_order[80955], arg _chpl_cname[84824]:string[244] =
    unknown call_tmp[770421] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body"
    {
    }
    { scopeless type
      (423317 call valType _mt[203] this[84766])
    }
    {
      const tmp[84842] "const" "temp"
      unknown call_tmp[770428] "expr temp" "maybe param" "maybe type" "temp"
      (770431 'move' call_tmp[770428](84839 '_wide_get_locale' this[84766]))
      (84843 'move' tmp[84842](84840 'deref' call_tmp[770428]))
      unknown call_tmp[770435] "expr temp" "maybe param" "maybe type" "temp"
      (770438 'move' call_tmp[770435](423328 call _v _mt[203] this[84766]))
      unknown call_tmp[770440] "expr temp" "maybe param" "maybe type" "temp"
      (770443 'move' call_tmp[770440](84836 call c_memory_order order[84777]))
      (84832 call atomic_fetch_xor call_tmp[770435] val[84769] call_tmp[770440])
      (84846 'elided on block' 0 tmp[84842])
    }
    (599490 return ret[599488])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[84982](?).waitFor[84853](arg _mt[84870]:_MT[201], const arg this[84855]:AtomicT[84982](?), arg val[84858] :
  (423335 call valType _mt[203] this[84855]), param arg order[84866]:memoryOrder[81226] =
  seqCst[81216]) : _unknown[42] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[599494] "RVV" "temp"
    {
      const tmp[84950] "const" "temp"
      unknown call_tmp[770447] "expr temp" "maybe param" "maybe type" "temp"
      (770450 'move' call_tmp[770447](84947 '_wide_get_locale' this[84855]))
      (84951 'move' tmp[84950](84948 'deref' call_tmp[770447]))
      {
        {
          unknown tmp[84897] "temp"
          unknown call_tmp[770454] "expr temp" "maybe param" "maybe type" "temp"
          (770457 'move' call_tmp[770454](84932 call(84929 call (partial) read _mt[203] this[84855])(order = relaxed[81224])))
          unknown call_tmp[770459] "expr temp" "maybe param" "maybe type" "temp"
          (770462 'move' call_tmp[770459](84927 call != call_tmp[770454] val[84858]))
          (84939 'move' tmp[84897](84925 call _cond_test call_tmp[770459]))
          WhileDo[84902]
          {
            {
              (84891 call chpl_comm_ensure_progress)
              (550275 'end of statement')
              (84896 call yieldExecution module=[222] currentTask[68749])
              (400372 'referenced modules list' currentTask[68749])
            }
            label _continueLabel[84900]
            unknown call_tmp[770466] "expr temp" "maybe param" "maybe type" "temp"
            (770469 'move' call_tmp[770466](84913 call(84910 call (partial) read _mt[203] this[84855])(order = relaxed[81224])))
            unknown call_tmp[770471] "expr temp" "maybe param" "maybe type" "temp"
            (770474 'move' call_tmp[770471](84908 call != call_tmp[770466] val[84858]))
            (84920 'move' tmp[84897](84906 call _cond_test call_tmp[770471]))
            tmp[84897]
          }
          label _breakLabel[84901]
        }
        unknown call_tmp[770476] "expr temp" "maybe param" "maybe type" "temp"
        (770479 'move' call_tmp[770476](84945 call c_memory_order order[84866]))
        (84943 call chpl_atomic_thread_fence call_tmp[770476])
      }
      (84954 'elided on block' 0 tmp[84950])
    }
    (599496 return ret[599494])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[84982](?).serialize[84961](arg _mt[84969]:_MT[201], const arg this[84963]:AtomicT[84982](?), arg writer[84965]:_any[141](?), ref arg serializer[84967]:_any[141](?)) : _unknown[42] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[770485] "expr temp" "maybe param" "maybe type" "temp"
    (770488 'move' call_tmp[770485](84978 call(423344 call (partial) read _mt[203] this[84963])))
    (84976 call(84973 call (partial) write _mt[203] writer[84965]) call_tmp[770485])
    (599498 return _void[46])
  }
  type AtomicT[84982](?) unknown valType[83116] "type variable" unknown _v[83119](83121 call externT valType[83116])
  function :[84984](arg rhs[84986]:_any[141](?), arg t[84989]:AtomicT[84982](?)) : _unknown[42] "operator"
  {
    unknown ret[599502] "RVV" "temp"
    unknown lhs[85002] "dead at end of block" "insert auto destroy"
    (644525 'init var' lhs[85002] rhs[84986] t[84989])
    (85006 'end of statement')
    (599507 'move' ret[599502](599506 'deref' lhs[85002]))
    gotoReturn _end_:[599500] _end_:[599500]
    (550279 'end of statement' lhs[85002])
    label _end_:[599500]
    (599504 return ret[599502])
  }
  where {
    unknown call_tmp[770490] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (770493 'move' call_tmp[770490](84995 'typeof' rhs[84986]))
    unknown call_tmp[770497] "expr temp" "maybe param" "maybe type" "temp"
    (770500 'move' call_tmp[770497](84997 call valType _mt[203] t[84989]))
    (84992 call == call_tmp[770490] call_tmp[770497])
  }
  function AtomicBool[83090].=[85012](arg _mt[85026]:_MT[201], arg this[85015]:AtomicBool[83090] :
  AtomicBool[83090], ref arg a[85019]:AtomicBool[83090], const  ref arg b[85023]:AtomicBool[83090]) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    unknown call_tmp[770506] "expr temp" "maybe param" "maybe type" "temp"
    (770509 'move' call_tmp[770506](85038 call(85035 call (partial) read _mt[203] b[85023])))
    (85033 call(85030 call (partial) write _mt[203] a[85019]) call_tmp[770506])
    (599511 return _void[46])
  }
  function AtomicBool[83090].=[85041](arg _mt[85053]:_MT[201], arg this[85044]:AtomicBool[83090] :
  AtomicBool[83090], ref arg a[85048]:AtomicBool[83090], arg b[85051]:_any[141](?)) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (85057 call compilerError "Cannot directly assign atomic variables")
    (599513 return _void[46])
  }
  function AtomicT[84982](?).=[85063](arg _mt[85077]:_MT[201], arg this[85066]:AtomicT[84982](?) :
  AtomicT[84982](?), ref arg a[85070]:AtomicT[84982](?), const  ref arg b[85074]:AtomicT[84982](?)) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    unknown call_tmp[770515] "expr temp" "maybe param" "maybe type" "temp"
    (770518 'move' call_tmp[770515](85089 call(85086 call (partial) read _mt[203] b[85074])))
    (85084 call(85081 call (partial) write _mt[203] a[85070]) call_tmp[770515])
    (599515 return _void[46])
  }
  function AtomicT[84982](?).=[85092](arg _mt[85104]:_MT[201], arg this[85095]:AtomicT[84982](?) :
  AtomicT[84982](?), ref arg a[85099]:AtomicT[84982](?), arg b[85102]:_any[141](?)) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (85108 call compilerError "Cannot directly assign atomic variables")
    (599517 return _void[46])
  }
  function AtomicT[84982](?).+[85112](arg _mt[85124]:_MT[201], arg this[85115]:AtomicT[84982](?) :
  AtomicT[84982](?), arg a[85119]:AtomicT[84982](?), arg b[85122]:_any[141](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[599521] "RVV" "temp"
    (85128 call compilerError "Cannot directly add atomic variables")
    (550285 'end of statement')
    (599526 'move' ret[599521](599525 'deref' a[85119]))
    (599523 return ret[599521])
  }
  function AtomicT[84982](?).-[85136](arg _mt[85148]:_MT[201], arg this[85139]:AtomicT[84982](?) :
  AtomicT[84982](?), arg a[85143]:AtomicT[84982](?), arg b[85146]:_any[141](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[599530] "RVV" "temp"
    (85152 call compilerError "Cannot directly subtract atomic variables")
    (550287 'end of statement')
    (599535 'move' ret[599530](599534 'deref' a[85143]))
    (599532 return ret[599530])
  }
  function AtomicT[84982](?).*[85160](arg _mt[85172]:_MT[201], arg this[85163]:AtomicT[84982](?) :
  AtomicT[84982](?), arg a[85167]:AtomicT[84982](?), arg b[85170]:_any[141](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[599539] "RVV" "temp"
    (85176 call compilerError "Cannot directly multiply atomic variables")
    (550289 'end of statement')
    (599544 'move' ret[599539](599543 'deref' a[85167]))
    (599541 return ret[599539])
  }
  function AtomicT[84982](?)./[85184](arg _mt[85196]:_MT[201], arg this[85187]:AtomicT[84982](?) :
  AtomicT[84982](?), arg a[85191]:AtomicT[84982](?), arg b[85194]:_any[141](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[599548] "RVV" "temp"
    (85200 call compilerError "Cannot directly divide atomic variables")
    (550291 'end of statement')
    (599553 'move' ret[599548](599552 'deref' a[85191]))
    (599550 return ret[599548])
  }
  function AtomicT[84982](?).%[85208](arg _mt[85220]:_MT[201], arg this[85211]:AtomicT[84982](?) :
  AtomicT[84982](?), arg a[85215]:AtomicT[84982](?), arg b[85218]:_any[141](?)) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[599557] "RVV" "temp"
    (85224 call compilerError "Cannot directly divide atomic variables")
    (550293 'end of statement')
    (599562 'move' ret[599557](599561 'deref' a[85215]))
    (599559 return ret[599557])
  }
  function |writeSerializable[475187]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] AtomicBool[83090]
    {
    }
    (599566 return _void[46])
  }
  function |writeSerializable[475192]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] AtomicT[84982](?)
    {
    }
    (599570 return _void[46])
  }
  (396072 'used modules list'(81474 'use' ChapelBase[77907])(81477 'use' MemConsistency[81470]))
}
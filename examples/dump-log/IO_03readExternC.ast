AST dump for IO after pass readExternC.
Module use list: 

{
  (387028 'use' ChapelStandard)
  (164061 'import'(164052 call . OS c"POSIX").{ENOENT, ENOSYS, EINVAL, EILSEQ, EIO, ERANGE})
  (164068 'import'(164064 call . OS c"POSIX").{EBADF})
  (164072 'import' OS.{errorCode})
  (164074 'use' CTypes)
  (164077 'use' OS)
  (164080 'use' Reflection)
  (164087 'use' ChapelIO 'only' write, writeln, writef)
  (164090 'use' ByteBufferHelpers)
  type ioMode[164108] def r[164094]:ioMode[164108] 1 def cw[164097]:ioMode[164108] 2 def rw[164100]:ioMode[164108] 3 def cwr[164103]:ioMode[164108] 4 def a[164106]:ioMode[164108] 5
  type _iokind[164124] def dynamic[164113]:_iokind[164124] 0 def native[164116]:_iokind[164124] 1 def big[164119]:_iokind[164124] 2 def little[164122]:_iokind[164124] 3
  type endianness[164137] def native[164129]:endianness[164137] 0 def big[164132]:endianness[164137] 1 def little[164135]:endianness[164137] 2
  unknown ioendian[164141] "deprecated" "type variable" endianness
  type iostringstyleInternal[164184] def len1b_data[164148]:iostringstyleInternal[164184](164145 call - 1) def len2b_data[164153]:iostringstyleInternal[164184](164150 call - 2) def len4b_data[164158]:iostringstyleInternal[164184](164155 call - 4) def len8b_data[164163]:iostringstyleInternal[164184](164160 call - 8) def lenVb_data[164168]:iostringstyleInternal[164184](164165 call - 10) def data_toeof[164175]:iostringstyleInternal[164184](164170 call - 65280) def data_null[164182]:iostringstyleInternal[164184](164177 call - 256)
  type iostringformatInternal[164206] def word[164189]:iostringformatInternal[164206] 0 def basic[164192]:iostringformatInternal[164206] 1 def chpl[164195]:iostringformatInternal[164206] 2 def json[164198]:iostringformatInternal[164206] 3 def toend[164201]:iostringformatInternal[164206] 4 def toeof[164204]:iostringformatInternal[164206] 5
  function stringStyleWithVariableLengthInternal[164209]() : _unknown[42]
  {
    (164212 return(164213 call :(164218 call . iostringstyleInternal c"lenVb_data")(164222 call int[10] 64)))
  }
  function stringStyleWithLengthInternal[164226](arg lengthBytes[164229] :
  int[10]) : _unknown[42] throws
  {
    { scopeless
      unknown x[164234](164236 call . iostringstyleInternal c"lenVb_data")
      (164240 'end of statement')
    }
    {
      unknown tmp[164334] "expr temp" "maybe param" "maybe type" "temp"
      (164336 'move' tmp[164334] lengthBytes)
      if(164341 call _cond_test(164338 call == tmp[164334] 0))
      {
        { scopeless
          (164246 call = x(164250 call . iostringstyleInternal c"lenVb_data"))
        }
      }
      {
        if(164347 call _cond_test(164344 call == tmp[164334] 1))
        {
          { scopeless
            (164259 call = x(164265 call . iostringstyleInternal c"len1b_data"))
          }
        }
        {
          if(164354 call _cond_test(164351 call == tmp[164334] 2))
          {
            { scopeless
              (164274 call = x(164280 call . iostringstyleInternal c"len2b_data"))
            }
          }
          {
            if(164361 call _cond_test(164358 call == tmp[164334] 4))
            {
              { scopeless
                (164289 call = x(164295 call . iostringstyleInternal c"len4b_data"))
              }
            }
            {
              if(164368 call _cond_test(164365 call == tmp[164334] 8))
              {
                { scopeless
                  (164304 call = x(164310 call . iostringstyleInternal c"len8b_data"))
                }
              }
              {
                (164319 'throw'(164321 call createSystemError EINVAL(164323 call + "Invalid string length prefix "(164328 call : lengthBytes string[244]))))
              }
            }
          }
        }
      }
    }
    (164372 return x)
  }
  { scopeless
    const QIO_FDFLAG_UNK[164377] "const" "extern" c_int
    (164380 'end of statement')
  }
  { scopeless
    const QIO_FDFLAG_READABLE[164382] "const" "extern" c_int
    (164385 'end of statement')
  }
  { scopeless
    const QIO_FDFLAG_WRITEABLE[164387] "const" "extern" c_int
    (164390 'end of statement')
  }
  { scopeless
    const QIO_FDFLAG_SEEKABLE[164392] "const" "extern" c_int
    (164395 'end of statement')
  }
  { scopeless
    const QIO_METHOD_DEFAULT[164397] "const" "extern" c_int
    (164400 'end of statement')
  }
  { scopeless
    const QIO_METHOD_READWRITE[164402] "const" "extern" c_int
    (164405 'end of statement')
  }
  { scopeless
    const QIO_METHOD_PREADPWRITE[164407] "const" "extern" c_int
    (164410 'end of statement')
  }
  { scopeless
    const QIO_METHOD_FREADFWRITE[164412] "const" "extern" c_int
    (164415 'end of statement')
  }
  { scopeless
    const QIO_METHOD_MMAP[164417] "const" "extern" c_int
    (164420 'end of statement')
  }
  { scopeless
    const QIO_METHODMASK[164422] "const" "extern" c_int
    (164425 'end of statement')
  }
  { scopeless
    const QIO_HINT_RANDOM[164427] "const" "extern" c_int
    (164430 'end of statement')
  }
  { scopeless
    const QIO_HINT_SEQUENTIAL[164432] "const" "extern" c_int
    (164435 'end of statement')
  }
  { scopeless
    const QIO_HINT_LATENCY[164437] "const" "extern" c_int
    (164440 'end of statement')
  }
  { scopeless
    const QIO_HINT_BANDWIDTH[164442] "const" "extern" c_int
    (164445 'end of statement')
  }
  { scopeless
    const QIO_HINT_CACHED[164447] "const" "extern" c_int
    (164450 'end of statement')
  }
  { scopeless
    const QIO_HINT_PARALLEL[164452] "const" "extern" c_int
    (164455 'end of statement')
  }
  { scopeless
    const QIO_HINT_DIRECT[164457] "const" "extern" c_int
    (164460 'end of statement')
  }
  { scopeless
    const QIO_HINT_NOREUSE[164462] "const" "extern" c_int
    (164465 'end of statement')
  }
  { scopeless
    const QIO_HINT_OWNED[164467] "const" "extern" c_int
    (164470 'end of statement')
  }
  type qio_file_t[164473]
  unknown qio_file_ptr_t[164476] "extern" "type variable"(164478 call c_ptr qio_file_t)
  { scopeless
    const QIO_FILE_PTR_NULL[164482] "const" "extern" "private" qio_file_ptr_t
    (164485 'end of statement')
  }
  type qiovec_t[164500] unknown iov_base[164488](164490 call c_ptr void[4]) unknown iov_len[164495] c_size_t
  type qio_channel_t[164504]
  unknown qio_channel_ptr_t[164507] "extern" "type variable"(164509 call c_ptr qio_channel_t)
  { scopeless
    const QIO_CHANNEL_PTR_NULL[164513] "const" "extern" "private" qio_channel_ptr_t
    (164516 'end of statement')
  }
  type qbuffer_ptr_t[164521]
  { scopeless
    const QBUFFER_PTR_NULL[164524] "const" "extern" qbuffer_ptr_t
    (164527 'end of statement')
  }
  unknown style_char_t[164529] "extern" "type variable"(164531 call uint[86] 8)
  { scopeless
    const QIO_STRING_FORMAT_WORD[164535] "const" "extern"(164537 call uint[86] 8)
    (164540 'end of statement')
  }
  { scopeless
    const QIO_STRING_FORMAT_BASIC[164542] "const" "extern"(164544 call uint[86] 8)
    (164547 'end of statement')
  }
  { scopeless
    const QIO_STRING_FORMAT_CHPL[164549] "const" "extern"(164551 call uint[86] 8)
    (164554 'end of statement')
  }
  { scopeless
    const QIO_STRING_FORMAT_JSON[164556] "const" "extern"(164558 call uint[86] 8)
    (164561 'end of statement')
  }
  { scopeless
    const QIO_STRING_FORMAT_TOEND[164563] "const" "extern"(164565 call uint[86] 8)
    (164568 'end of statement')
  }
  { scopeless
    const QIO_STRING_FORMAT_TOEOF[164570] "const" "extern"(164572 call uint[86] 8)
    (164575 'end of statement')
  }
  type iostyleInternal[164872] unknown binary[164578] 0(164580 call uint[86] 8) unknown byteorder[164586](164590 call :(164595 call . _iokind c"native")(164599 call uint[86] 8))(164588 call uint[86] 8) unknown str_style[164604](164608 call :(164613 call . iostringstyleInternal c"data_toeof")(164617 call int[10] 64))(164606 call int[10] 64) unknown min_width_columns[164622] 0(164624 call uint[86] 32) unknown max_width_columns[164630](164635 call max(164637 call uint[86] 32))(164632 call uint[86] 32) unknown max_width_characters[164642](164647 call max(164649 call uint[86] 32))(164644 call uint[86] 32) unknown max_width_bytes[164654](164659 call max(164661 call uint[86] 32))(164656 call uint[86] 32) unknown string_start[164666] 34 style_char_t unknown string_end[164672] 34 style_char_t unknown string_format[164678](164682 call :(164687 call . iostringformatInternal c"word")(164691 call uint[86] 8))(164680 call uint[86] 8) unknown bytes_prefix[164696] 98 style_char_t unknown base[164704] 0(164706 call uint[86] 8) unknown point_char[164712] 46 style_char_t unknown exponent_char[164720] 101 style_char_t unknown other_exponent_char[164728] 112 style_char_t unknown positive_char[164736] 43 style_char_t unknown negative_char[164744] 45 style_char_t unknown i_char[164752] 105 style_char_t unknown prefix_base[164760] 1(164762 call uint[86] 8) unknown pad_char[164768] 32 style_char_t unknown showplus[164774] 0(164776 call uint[86] 8) unknown uppercase[164782] 0(164784 call uint[86] 8) unknown leftjustify[164790] 0(164792 call uint[86] 8) unknown centjustify[164798] 0(164800 call uint[86] 8) unknown showpoint[164806] 0(164808 call uint[86] 8) unknown showpointzero[164814] 1(164816 call uint[86] 8) unknown precision[164822](164826 call - 1)(164824 call int[10] 32) unknown realfmt[164832] 0(164834 call uint[86] 8) unknown complex_style[164840] 0(164842 call uint[86] 8) unknown array_style[164848] 0(164850 call uint[86] 8) unknown aggregate_style[164856] 0(164858 call uint[86] 8) unknown tuple_style[164864] 0(164866 call uint[86] 8)
  type QioPluginFile[165041] function QioPluginFile[165041].setupChannel[164875](arg _mt[164901]:_MT[201], arg this[164877]:QioPluginFile[165041], out arg pluginChannel[164882] :
  (164879 'to unmanaged class from unknown'(164881 'to nilable class from type' QioPluginChannel)), arg start[164888] :
  (164886 call int[10] 64), arg end[164894] :
  (164892 call int[10] 64), arg qioChannelPtr[164898] :
  qio_channel_ptr_t) : _unknown[42] "method" "primary method"
  {
    (164905 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginFile[165041].filelength[164910](arg _mt[164920]:_MT[201], arg this[164912]:QioPluginFile[165041], out arg length[164917] :
  (164915 call int[10] 64)) : _unknown[42] "method" "primary method"
  {
    (164924 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginFile[165041].getpath[164929](arg _mt[164947]:_MT[201], arg this[164931]:QioPluginFile[165041], out arg path[164938] :
  (164934 call c_ptr(164936 call uint[86] 8)), out arg len[164944] :
  (164942 call int[10] 64)) : _unknown[42] "method" "primary method"
  {
    (164951 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginFile[165041].fsync[164956](arg _mt[164960]:_MT[201], arg this[164958]:QioPluginFile[165041]) : _unknown[42] "method" "primary method"
  {
    (164964 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginFile[165041].getChunk[164969](arg _mt[164979]:_MT[201], arg this[164971]:QioPluginFile[165041], out arg length[164976] :
  (164974 call int[10] 64)) : _unknown[42] "method" "primary method"
  {
    (164983 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginFile[165041].getLocalesForRegion[164988](arg _mt[165018]:_MT[201], arg this[164990]:QioPluginFile[165041], arg start[164995] :
  (164993 call int[10] 64), arg end[165001] :
  (164999 call int[10] 64), out arg localeNames[165009] :
  (165005 call c_ptr(165007 call c_ptrConst c_char)), ref arg nLocales[165015] :
  (165013 call int[10] 64)) : _unknown[42] "method" "primary method"
  {
    (165022 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginFile[165041].close[165027](arg _mt[165031]:_MT[201], arg this[165029]:QioPluginFile[165041]) : _unknown[42] "method" "primary method"
  {
    (165035 return ENOSYS)
  }
  { scopeless type
    errorCode
  }
  type QioPluginChannel[165096] function QioPluginChannel[165096].readAtLeast[165044](arg _mt[165054]:_MT[201], arg this[165046]:QioPluginChannel[165096], arg amt[165051] :
  (165049 call int[10] 64)) : _unknown[42] "method" "primary method"
  {
    (165058 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginChannel[165096].write[165063](arg _mt[165073]:_MT[201], arg this[165065]:QioPluginChannel[165096], arg amt[165070] :
  (165068 call int[10] 64)) : _unknown[42] "method" "primary method"
  {
    (165077 return ENOSYS)
  }
  { scopeless type
    errorCode
  } function QioPluginChannel[165096].close[165082](arg _mt[165086]:_MT[201], arg this[165084]:QioPluginChannel[165096]) : _unknown[42] "method" "primary method"
  {
    (165090 return ENOSYS)
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_setup_plugin_channel[165098](arg file[165103] :
  (165101 call c_ptr void[4]), ref arg plugin_ch[165109] :
  (165107 call c_ptr void[4]), arg start[165115] :
  (165113 call int[10] 64), arg end[165121] :
  (165119 call int[10] 64), arg qio_ch[165125] :
  qio_channel_ptr_t) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown f[165131](165132 call postfix!(165134 call : file(165137 'to unmanaged class from unknown'(165139 'to nilable class from type' QioPluginFile))))
      (165141 'end of statement')
    }
    { scopeless
      unknown pluginChannel[165143] nil[32](165144 'to unmanaged class from unknown'(165146 'to nilable class from type' QioPluginChannel))
      (165149 'end of statement')
    }
    { scopeless
      unknown ret[165151](165158 call(165155 call . f c"setupChannel") pluginChannel start end qio_ch)
      (165164 'end of statement')
    }
    (165165 call = plugin_ch(165169 call c_ptrTo pluginChannel))
    (165171 return ret)
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_read_atleast[165176](arg ch_plugin[165181] :
  (165179 call c_ptr void[4]), arg amt[165187] :
  (165185 call int[10] 64)) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown c[165192](165193 call postfix!(165195 call : ch_plugin(165198 'to unmanaged class from unknown'(165200 'to nilable class from type' QioPluginChannel))))
      (165202 'end of statement')
    }
    (165203 return(165210 call(165207 call . c c"readAtLeast") amt))
  }
  function chpl_qio_write[165214](arg ch_plugin[165219] :
  (165217 call c_ptr void[4]), arg amt[165225] :
  (165223 call int[10] 64)) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown c[165230](165231 call postfix!(165233 call : ch_plugin(165236 'to unmanaged class from unknown'(165238 'to nilable class from type' QioPluginChannel))))
      (165240 'end of statement')
    }
    (165241 return(165246 call(165243 call . c c"write") amt))
  }
  function chpl_qio_channel_close[165250](arg ch[165255] :
  (165253 call c_ptr void[4])) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown c[165261](165262 call postfix!(165264 call : ch(165267 'to unmanaged class from unknown'(165269 'to nilable class from type' QioPluginChannel))))
      (165271 'end of statement')
    }
    { scopeless
      unknown err[165273](165280 call(165277 call . c c"close"))
      (165282 'end of statement')
    }
    (165285 call chpl__delete c)
    (165288 return err)
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_filelength[165293](arg file[165298] :
  (165296 call c_ptr void[4]), ref arg length[165304] :
  (165302 call int[10] 64)) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown f[165310](165311 call postfix!(165313 call : file(165316 'to unmanaged class from unknown'(165318 'to nilable class from type' QioPluginFile))))
      (165320 'end of statement')
    }
    (165321 return(165328 call(165325 call . f c"filelength") length))
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_getpath[165333](arg file[165338] :
  (165336 call c_ptr void[4]), ref arg str[165346] :
  (165342 call c_ptr(165344 call uint[86] 8)), ref arg len[165352] :
  (165350 call int[10] 64)) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown f[165358](165359 call postfix!(165361 call : file(165364 'to unmanaged class from unknown'(165366 'to nilable class from type' QioPluginFile))))
      (165368 'end of statement')
    }
    (165369 return(165376 call(165373 call . f c"getpath") str len))
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_fsync[165382](arg file[165387] :
  (165385 call c_ptr void[4])) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown f[165393](165394 call postfix!(165396 call : file(165399 'to unmanaged class from unknown'(165401 'to nilable class from type' QioPluginFile))))
      (165403 'end of statement')
    }
    (165404 return(165411 call(165408 call . f c"fsync")))
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_get_chunk[165415](arg file[165420] :
  (165418 call c_ptr void[4]), ref arg length[165426] :
  (165424 call int[10] 64)) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown f[165432](165433 call postfix!(165435 call : file(165438 'to unmanaged class from unknown'(165440 'to nilable class from type' QioPluginFile))))
      (165442 'end of statement')
    }
    (165443 return(165450 call(165447 call . f c"getChunk") length))
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_get_locales_for_region[165455](arg file[165460] :
  (165458 call c_ptr void[4]), arg start[165466] :
  (165464 call int[10] 64), arg end[165472] :
  (165470 call int[10] 64), ref arg localeNames[165478] :
  (165476 call c_ptr void[4]), ref arg nLocales[165484] :
  (165482 call int[10] 64)) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown strPtr[165490](165492 call c_ptr(165494 call c_ptrConst c_char))
      (165497 'end of statement')
    }
    { scopeless
      unknown f[165499](165500 call postfix!(165502 call : file(165505 'to unmanaged class from unknown'(165507 'to nilable class from type' QioPluginFile))))
      (165509 'end of statement')
    }
    { scopeless
      unknown ret[165511](165518 call(165515 call . f c"getLocalesForRegion") start end strPtr nLocales)
      (165524 'end of statement')
    }
    (165525 call = localeNames(165528 call : strPtr(165532 call c_ptr void[4])))
    (165534 return ret)
  }
  { scopeless type
    errorCode
  }
  function chpl_qio_file_close[165539](arg file[165544] :
  (165542 call c_ptr void[4])) : _unknown[42] "export" "local args"
  {
    { scopeless
      unknown f[165550](165551 call postfix!(165553 call : file(165556 'to unmanaged class from unknown'(165558 'to nilable class from type' QioPluginFile))))
      (165560 'end of statement')
    }
    { scopeless
      unknown err[165562](165567 call(165564 call . f c"close"))
      (165569 'end of statement')
    }
    (165572 call chpl__delete f)
    (165575 return err)
  }
  { scopeless type
    errorCode
  }
  function qio_style_init_default[165580](ref arg s[165583] :
  iostyleInternal) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_file_retain[165588](arg f[165591] :
  qio_file_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_file_release[165596](arg f[165599] :
  qio_file_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_file_init[165604](ref arg file_out[165607] :
  qio_file_ptr_t, arg fp[165613] :
  (165611 call c_ptr c_FILE), arg fd[165617] :
  c_int, arg iohints[165621] :
  c_int, const  ref arg style[165625] :
  iostyleInternal, arg usefilestar[165629] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_open_access[165636](ref arg file_out[165639] :
  qio_file_ptr_t, arg path[165645] :
  (165643 call c_ptrConst c_char), arg access[165651] :
  (165649 call c_ptrConst c_char), arg iohints[165655] :
  c_int, const  ref arg style[165659] :
  iostyleInternal) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_open_tmp[165666](ref arg file_out[165669] :
  qio_file_ptr_t, arg iohints[165673] :
  c_int, const  ref arg style[165677] :
  iostyleInternal) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_open_mem[165684](ref arg file_out[165687] :
  qio_file_ptr_t, arg buf[165691] :
  qbuffer_ptr_t, const  ref arg style[165695] :
  iostyleInternal) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_close[165702](arg f[165705] :
  qio_file_ptr_t) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_lock[165712](arg f[165715] :
  qio_file_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_unlock[165722](arg f[165725] :
  qio_file_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_file_isopen[165730](arg f[165733] :
  qio_file_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    bool
  }
  function qio_file_sync[165740](arg f[165743] :
  qio_file_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_end_offset_unlocked[165750](arg ch[165753] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (165757 call int[10] 64)
  }
  function qio_file_get_style[165762](arg f[165765] :
  qio_file_ptr_t, ref arg style[165769] :
  iostyleInternal) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_file_get_plugin[165774](arg f[165777] :
  qio_file_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (165781 call c_ptr void[4])
  }
  function qio_channel_get_plugin[165786](arg ch[165789] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (165793 call c_ptr void[4])
  }
  function qio_file_length[165798](arg f[165801] :
  qio_file_ptr_t, ref arg len[165807] :
  (165805 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_length_guess[165814](arg f[165817] :
  qio_file_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (165821 call int[10] 64)
  }
  function qio_channel_create[165826](ref arg ch[165829] :
  qio_channel_ptr_t, arg file[165833] :
  qio_file_ptr_t, arg hints[165837] :
  c_int, arg readable[165841] :
  c_int, arg writeable[165845] :
  c_int, arg start[165851] :
  (165849 call int[10] 64), arg end[165857] :
  (165855 call int[10] 64), const  ref arg style[165861] :
  iostyleInternal, arg bufIoMax[165867] :
  (165865 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_path_offset[165874](arg threadsafe[165877] :
  c_int, arg ch[165881] :
  qio_channel_ptr_t, ref arg path[165887] :
  (165885 call c_ptrConst c_char), ref arg offset[165893] :
  (165891 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_retain[165900](arg ch[165903] :
  qio_channel_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_release[165908](arg ch[165911] :
  qio_channel_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_clear_error[165916](arg ch[165919] :
  qio_channel_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function _qio_channel_set_error_unlocked[165924](arg ch[165927] :
  qio_channel_ptr_t, arg err[165931] :
  errorCode) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_error[165936](arg ch[165939] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_lock[165946](arg ch[165949] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_unlock[165956](arg ch[165959] :
  qio_channel_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_get_style[165964](arg ch[165967] :
  qio_channel_ptr_t, ref arg style[165971] :
  iostyleInternal) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_set_style[165976](arg ch[165979] :
  qio_channel_ptr_t, const  ref arg style[165983] :
  iostyleInternal) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_get_size[165988](arg ch[165991] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (165995 call int[10] 64)
  }
  function qio_channel_binary[166000](arg ch[166003] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (166007 call uint[86] 8)
  }
  function qio_channel_byteorder[166012](arg ch[166015] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (166019 call uint[86] 8)
  }
  function qio_channel_str_style[166024](arg ch[166027] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (166031 call int[10] 64)
  }
  function qio_channel_style_element[166036](arg ch[166039] :
  qio_channel_ptr_t, arg element[166045] :
  (166043 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (166049 call int[10] 64)
  }
  function qio_channel_flush[166054](arg threadsafe[166057] :
  c_int, arg ch[166061] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_close[166068](arg threadsafe[166071] :
  c_int, arg ch[166075] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_isclosed[166082](arg threadsafe[166085] :
  c_int, arg ch[166089] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    bool
  }
  function qio_channel_read[166096](arg threadsafe[166099] :
  c_int, arg ch[166103] :
  qio_channel_ptr_t, ref arg ptr[166106]:_any[141](?), arg len[166109] :
  c_ssize_t, ref arg amt_read[166113] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_amt[166120](arg threadsafe[166123] :
  c_int, arg ch[166127] :
  qio_channel_ptr_t, ref arg ptr[166130]:_any[141](?), arg len[166133] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_amt[166140](arg threadsafe[166143] :
  c_int, arg ch[166147] :
  qio_channel_ptr_t, arg ptr[166151] :
  _ddata, arg len[166155] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_amt[166162](arg threadsafe[166165] :
  c_int, arg ch[166169] :
  qio_channel_ptr_t, arg ptr[166173] :
  c_ptr, arg len[166177] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_byte[166184](arg threadsafe[166187] :
  c_int, arg ch[166191] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (166195 call int[10] 32)
  }
  function qio_channel_write[166200](arg threadsafe[166203] :
  c_int, arg ch[166207] :
  qio_channel_ptr_t, const  ref arg ptr[166210]:_any[141](?), arg len[166213] :
  c_ssize_t, ref arg amt_written[166217] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_amt[166224](arg threadsafe[166227] :
  c_int, arg ch[166231] :
  qio_channel_ptr_t, const  ref arg ptr[166234]:_any[141](?), arg len[166237] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_amt[166244](arg threadsafe[166247] :
  c_int, arg ch[166251] :
  qio_channel_ptr_t, const arg ptr[166255] :
  _ddata, arg len[166259] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_byte[166266](arg threadsafe[166269] :
  c_int, arg ch[166273] :
  qio_channel_ptr_t, arg byte[166279] :
  (166277 call uint[86] 8)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_offset_unlocked[166286](arg ch[166289] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (166293 call int[10] 64)
  }
  function qio_channel_advance[166298](arg threadsafe[166301] :
  c_int, arg ch[166305] :
  qio_channel_ptr_t, arg nbytes[166311] :
  (166309 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_advance_past_byte[166318](arg threadsafe[166321] :
  c_int, arg ch[166325] :
  qio_channel_ptr_t, arg byte[166329] :
  c_int, arg max_bytes_to_advance[166335] :
  (166333 call int[10] 64), arg consume[166339] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_mark[166346](arg threadsafe[166349] :
  c_int, arg ch[166353] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_revert_unlocked[166360](arg ch[166363] :
  qio_channel_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_commit_unlocked[166368](arg ch[166371] :
  qio_channel_ptr_t) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_channel_seek[166376](arg ch[166379] :
  qio_channel_ptr_t, arg start[166385] :
  (166383 call int[10] 64), arg end[166391] :
  (166389 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_bits[166398](arg threadsafe[166401] :
  c_int, arg ch[166405] :
  qio_channel_ptr_t, arg v[166411] :
  (166409 call uint[86] 64), arg nbits[166417] :
  (166415 call int[10] 8)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_flush_bits[166424](arg threadsafe[166427] :
  c_int, arg ch[166431] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_bits[166438](arg threadsafe[166441] :
  c_int, arg ch[166445] :
  qio_channel_ptr_t, ref arg v[166451] :
  (166449 call uint[86] 64), arg nbits[166457] :
  (166455 call int[10] 8)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_locales_for_region[166464](arg fl[166467] :
  qio_file_ptr_t, arg start[166473] :
  (166471 call int[10] 64), arg end[166479] :
  (166477 call int[10] 64), arg loc_names_out[166485] :
  (166483 call c_ptr void[4]), ref arg num_locs_out[166489] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_get_chunk[166496](arg fl[166499] :
  qio_file_ptr_t, ref arg len[166505] :
  (166503 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_get_fs_type[166512](arg fl[166515] :
  qio_file_ptr_t, ref arg tp[166519] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_path_for_fd[166526](arg fd[166529] :
  c_int, ref arg path[166535] :
  (166533 call c_ptrConst c_char)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_path_for_fp[166542](arg fp[166547] :
  (166545 call c_ptr c_FILE), ref arg path[166553] :
  (166551 call c_ptrConst c_char)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_file_path[166560](arg f[166563] :
  qio_file_ptr_t, ref arg path[166569] :
  (166567 call c_ptrConst c_char)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_shortest_path[166576](arg fl[166579] :
  qio_file_ptr_t, ref arg path_out[166585] :
  (166583 call c_ptrConst c_char), arg path_in[166591] :
  (166589 call c_ptrConst c_char)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_get_fd[166598](arg fl[166601] :
  qio_file_ptr_t, ref arg fd[166607] :
  (166605 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_get_fp[166614](arg fl[166617] :
  qio_file_ptr_t, ref arg fp[166623] :
  (166621 call c_ptr c_FILE)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_get_file_ptr[166630](arg ch[166633] :
  qio_channel_ptr_t, ref arg file_out[166637] :
  qio_file_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    void[4]
  }
  function qio_channel_read_int8[166644](arg threadsafe[166647] :
  c_int, arg ch[166651] :
  qio_channel_ptr_t, ref arg ptr[166657] :
  (166655 call int[10] 8)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_int8[166664](arg threadsafe[166667] :
  c_int, arg ch[166671] :
  qio_channel_ptr_t, arg x[166677] :
  (166675 call int[10] 8)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_uint8[166684](arg threadsafe[166687] :
  c_int, arg ch[166691] :
  qio_channel_ptr_t, ref arg ptr[166697] :
  (166695 call uint[86] 8)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_uint8[166704](arg threadsafe[166707] :
  c_int, arg ch[166711] :
  qio_channel_ptr_t, arg x[166717] :
  (166715 call uint[86] 8)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_int16[166724](arg threadsafe[166727] :
  c_int, arg byteorder[166731] :
  c_int, arg ch[166735] :
  qio_channel_ptr_t, ref arg ptr[166741] :
  (166739 call int[10] 16)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_int16[166748](arg threadsafe[166751] :
  c_int, arg byteorder[166755] :
  c_int, arg ch[166759] :
  qio_channel_ptr_t, arg x[166765] :
  (166763 call int[10] 16)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_uint16[166772](arg threadsafe[166775] :
  c_int, arg byteorder[166779] :
  c_int, arg ch[166783] :
  qio_channel_ptr_t, ref arg ptr[166789] :
  (166787 call uint[86] 16)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_uint16[166796](arg threadsafe[166799] :
  c_int, arg byteorder[166803] :
  c_int, arg ch[166807] :
  qio_channel_ptr_t, arg x[166813] :
  (166811 call uint[86] 16)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_int32[166820](arg threadsafe[166823] :
  c_int, arg byteorder[166827] :
  c_int, arg ch[166831] :
  qio_channel_ptr_t, ref arg ptr[166837] :
  (166835 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_int32[166844](arg threadsafe[166847] :
  c_int, arg byteorder[166851] :
  c_int, arg ch[166855] :
  qio_channel_ptr_t, arg x[166861] :
  (166859 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_uint32[166868](arg threadsafe[166871] :
  c_int, arg byteorder[166875] :
  c_int, arg ch[166879] :
  qio_channel_ptr_t, ref arg ptr[166885] :
  (166883 call uint[86] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_uint32[166892](arg threadsafe[166895] :
  c_int, arg byteorder[166899] :
  c_int, arg ch[166903] :
  qio_channel_ptr_t, arg x[166909] :
  (166907 call uint[86] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_int64[166916](arg threadsafe[166919] :
  c_int, arg byteorder[166923] :
  c_int, arg ch[166927] :
  qio_channel_ptr_t, ref arg ptr[166933] :
  (166931 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_int64[166940](arg threadsafe[166943] :
  c_int, arg byteorder[166947] :
  c_int, arg ch[166951] :
  qio_channel_ptr_t, arg x[166957] :
  (166955 call int[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_uint64[166964](arg threadsafe[166967] :
  c_int, arg byteorder[166971] :
  c_int, arg ch[166975] :
  qio_channel_ptr_t, ref arg ptr[166981] :
  (166979 call uint[86] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_uint64[166988](arg threadsafe[166991] :
  c_int, arg byteorder[166995] :
  c_int, arg ch[166999] :
  qio_channel_ptr_t, arg x[167005] :
  (167003 call uint[86] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_float32[167012](arg threadsafe[167015] :
  c_int, arg byteorder[167019] :
  c_int, arg ch[167023] :
  qio_channel_ptr_t, ref arg ptr[167029] :
  (167027 call real[13] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_float32[167036](arg threadsafe[167039] :
  c_int, arg byteorder[167043] :
  c_int, arg ch[167047] :
  qio_channel_ptr_t, arg x[167053] :
  (167051 call real[13] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_float32[167060](arg threadsafe[167063] :
  c_int, arg byteorder[167067] :
  c_int, arg ch[167071] :
  qio_channel_ptr_t, ref arg ptr[167077] :
  (167075 call imag 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_float32[167084](arg threadsafe[167087] :
  c_int, arg byteorder[167091] :
  c_int, arg ch[167095] :
  qio_channel_ptr_t, arg x[167101] :
  (167099 call imag 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_float64[167108](arg threadsafe[167111] :
  c_int, arg byteorder[167115] :
  c_int, arg ch[167119] :
  qio_channel_ptr_t, ref arg ptr[167125] :
  (167123 call real[13] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_float64[167132](arg threadsafe[167135] :
  c_int, arg byteorder[167139] :
  c_int, arg ch[167143] :
  qio_channel_ptr_t, arg x[167149] :
  (167147 call real[13] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_float64[167156](arg threadsafe[167159] :
  c_int, arg byteorder[167163] :
  c_int, arg ch[167167] :
  qio_channel_ptr_t, ref arg ptr[167173] :
  (167171 call imag 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_float64[167180](arg threadsafe[167183] :
  c_int, arg byteorder[167187] :
  c_int, arg ch[167191] :
  qio_channel_ptr_t, arg x[167197] :
  (167195 call imag 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_string[167204](arg threadsafe[167207] :
  c_int, arg byteorder[167211] :
  c_int, arg str_style[167217] :
  (167215 call int[10] 64), arg ch[167221] :
  qio_channel_ptr_t, ref arg s[167227] :
  (167225 call c_ptrConst c_char), ref arg len[167233] :
  (167231 call int[10] 64), arg maxlen[167237] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_string[167244](arg threadsafe[167247] :
  c_int, arg byteorder[167251] :
  c_int, arg str_style[167257] :
  (167255 call int[10] 64), arg ch[167261] :
  qio_channel_ptr_t, const arg s[167267] :
  (167265 call c_ptrConst c_char), arg len[167271] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_int[167278](arg threadsafe[167281] :
  c_int, arg ch[167285] :
  qio_channel_ptr_t, ref arg ptr[167288]:_any[141](?), arg len[167291] :
  c_size_t, arg issigned[167295] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_int[167302](arg threadsafe[167305] :
  c_int, arg ch[167309] :
  qio_channel_ptr_t, const  ref arg ptr[167312]:_any[141](?), arg len[167315] :
  c_size_t, arg issigned[167319] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_float[167326](arg threadsafe[167329] :
  c_int, arg ch[167333] :
  qio_channel_ptr_t, ref arg ptr[167336]:_any[141](?), arg len[167339] :
  c_size_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_float[167346](arg threadsafe[167349] :
  c_int, arg ch[167353] :
  qio_channel_ptr_t, const  ref arg ptr[167356]:_any[141](?), arg len[167359] :
  c_size_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_imag[167366](arg threadsafe[167369] :
  c_int, arg ch[167373] :
  qio_channel_ptr_t, ref arg ptr[167376]:_any[141](?), arg len[167379] :
  c_size_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_imag[167386](arg threadsafe[167389] :
  c_int, arg ch[167393] :
  qio_channel_ptr_t, const  ref arg ptr[167396]:_any[141](?), arg len[167399] :
  c_size_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_complex[167406](arg threadsafe[167409] :
  c_int, arg ch[167413] :
  qio_channel_ptr_t, ref arg re_ptr[167416]:_any[141](?), ref arg im_ptr[167418]:_any[141](?), arg len[167421] :
  c_size_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_complex[167428](arg threadsafe[167431] :
  c_int, arg ch[167435] :
  qio_channel_ptr_t, const  ref arg re_ptr[167438]:_any[141](?), const  ref arg im_ptr[167440]:_any[141](?), arg len[167443] :
  c_size_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_char[167450](arg threadsafe[167453] :
  c_int, arg ch[167457] :
  qio_channel_ptr_t, ref arg char[167463] :
  (167461 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_read_chars[167470](arg threadsafe[167473] :
  c_int, arg ch[167477] :
  qio_channel_ptr_t, ref arg ptr[167480]:_any[141](?), arg maxBytes[167483] :
  c_ssize_t, arg maxCodepoints[167487] :
  c_ssize_t, ref arg readBytes[167491] :
  c_ssize_t, ref arg readCodepoints[167495] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_nbytes_char[167502](arg chr[167507] :
  (167505 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int
  }
  function qio_encode_to_string[167514](arg chr[167519] :
  (167517 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (167523 call c_ptrConst c_char)
  }
  function qio_decode_char_buf[167528](ref arg chr[167533] :
  (167531 call int[10] 32), ref arg nbytes[167537] :
  c_int, arg buf[167543] :
  (167541 call c_ptrConst c_char), arg buflen[167547] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_encode_char_buf[167554](arg dst[167559] :
  (167557 call c_ptr void[4]), arg chr[167565] :
  (167563 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function chpl_enc_utf8_decode[167572](ref arg state[167577] :
  (167575 call uint[86] 32), ref arg codep[167583] :
  (167581 call uint[86] 32), arg byte[167589] :
  (167587 call uint[86] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (167593 call uint[86] 32)
  }
  function qio_channel_write_char[167598](arg threadsafe[167601] :
  c_int, arg ch[167605] :
  qio_channel_ptr_t, arg char[167611] :
  (167609 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_skip_past_newline[167618](arg threadsafe[167621] :
  c_int, arg ch[167625] :
  qio_channel_ptr_t, arg skipOnlyWs[167629] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_write_newline[167636](arg threadsafe[167639] :
  c_int, arg ch[167643] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_string[167650](arg threadsafe[167653] :
  c_int, arg ch[167657] :
  qio_channel_ptr_t, ref arg ptr[167663] :
  (167661 call c_ptrConst c_char), ref arg len[167669] :
  (167667 call int[10] 64), arg maxlen[167673] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_bytes[167680](arg threadsafe[167683] :
  c_int, arg ch[167687] :
  qio_channel_ptr_t, ref arg ptr[167693] :
  (167691 call c_ptrConst c_char), ref arg len[167699] :
  (167697 call int[10] 64), arg maxlen[167703] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_bytes[167710](arg threadsafe[167713] :
  c_int, arg ch[167717] :
  qio_channel_ptr_t, const arg ptr[167723] :
  (167721 call c_ptrConst c_char), arg len[167727] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_string[167734](arg threadsafe[167737] :
  c_int, arg ch[167741] :
  qio_channel_ptr_t, const arg ptr[167747] :
  (167745 call c_ptrConst c_char), arg len[167751] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_literal[167758](arg threadsafe[167761] :
  c_int, arg ch[167765] :
  qio_channel_ptr_t, const arg match[167771] :
  (167769 call c_ptrConst c_char), arg len[167775] :
  c_ssize_t, arg skipwsbefore[167779] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_scan_literal_2[167786](arg threadsafe[167789] :
  c_int, arg ch[167793] :
  qio_channel_ptr_t, arg match[167799] :
  (167797 call c_ptr void[4]), arg len[167803] :
  c_ssize_t, arg skipwsbefore[167807] :
  c_int) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_literal[167814](arg threadsafe[167817] :
  c_int, arg ch[167821] :
  qio_channel_ptr_t, const arg match[167827] :
  (167825 call c_ptrConst c_char), arg len[167831] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_print_literal_2[167838](arg threadsafe[167841] :
  c_int, arg ch[167845] :
  qio_channel_ptr_t, arg match[167851] :
  (167849 call c_ptr void[4]), arg len[167855] :
  c_ssize_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_channel_skip_json_field[167862](arg threadsafe[167865] :
  c_int, arg ch[167869] :
  qio_channel_ptr_t) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  type qio_conv_t[167955] unknown preArg1[167878](167880 call uint[86] 8) unknown preArg2[167885](167887 call uint[86] 8) unknown preArg3[167892](167894 call uint[86] 8) unknown argType[167899](167901 call uint[86] 8) unknown literal_is_whitespace[167906](167908 call uint[86] 8) unknown literal_length[167913](167915 call uint[86] 32) unknown literal[167920](167922 call c_ptr void[4]) unknown regex_length[167927](167929 call uint[86] 32) unknown regex[167934](167936 call c_ptr void[4]) unknown regex_flags_length[167941](167943 call uint[86] 32) unknown regex_flags[167948](167950 call c_ptr void[4])
  { scopeless
    const QIO_CONV_UNK[167958] "const" "extern" "private" c_int
    (167961 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_NUMERIC[167963] "const" "extern" "private" c_int
    (167966 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_SIGNED[167968] "const" "extern" "private" c_int
    (167971 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973] "const" "extern" "private" c_int
    (167976 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_UNSIGNED[167978] "const" "extern" "private" c_int
    (167981 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983] "const" "extern" "private" c_int
    (167986 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_REAL[167988] "const" "extern" "private" c_int
    (167991 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_BINARY_REAL[167993] "const" "extern" "private" c_int
    (167996 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_IMAG[167998] "const" "extern" "private" c_int
    (168001 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_BINARY_IMAG[168003] "const" "extern" "private" c_int
    (168006 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_COMPLEX[168008] "const" "extern" "private" c_int
    (168011 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013] "const" "extern" "private" c_int
    (168016 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_CHAR[168018] "const" "extern" "private" c_int
    (168021 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_STRING[168023] "const" "extern" "private" c_int
    (168026 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_BINARY_STRING[168028] "const" "extern" "private" c_int
    (168031 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_SERDE[168033] "const" "extern" "private" c_int
    (168036 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_REGEX[168038] "const" "extern" "private" c_int
    (168041 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_NONE_REGEX_LITERAL[168043] "const" "extern" "private" c_int
    (168046 'end of statement')
  }
  { scopeless
    const QIO_CONV_ARG_TYPE_NONE_LITERAL[168048] "const" "extern" "private" c_int
    (168051 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_MIN_WIDTH_COLS[168053] "const" "extern" "private" c_int
    (168056 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_MAX_WIDTH_COLS[168058] "const" "extern" "private" c_int
    (168061 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_MAX_WIDTH_CHARS[168063] "const" "extern" "private" c_int
    (168066 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_MAX_WIDTH_BYTES[168068] "const" "extern" "private" c_int
    (168071 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_PRECISION[168073] "const" "extern" "private" c_int
    (168076 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_STRINGLEN[168078] "const" "extern" "private" c_int
    (168081 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_TERMINATOR[168083] "const" "extern" "private" c_int
    (168086 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_STRINGSTART[168088] "const" "extern" "private" c_int
    (168091 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_STRINGSTARTEND[168093] "const" "extern" "private" c_int
    (168096 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_STRINGEND[168098] "const" "extern" "private" c_int
    (168101 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_CAPTURE[168103] "const" "extern" "private" c_int
    (168106 'end of statement')
  }
  { scopeless
    const QIO_CONV_SET_DONE[168108] "const" "extern" "private" c_int
    (168111 'end of statement')
  }
  function qio_conv_parse[168112](const arg fmt[168117] :
  (168115 call c_ptrConst c_char), arg start[168121] :
  c_size_t, ref arg end[168127] :
  (168125 call uint[86] 64), arg scanning[168131] :
  c_int, ref arg spec[168135] :
  qio_conv_t, ref arg style[168139] :
  iostyleInternal) : _unknown[42] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_format_error_too_many_args[168146]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_format_error_too_few_args[168152]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_format_error_arg_mismatch[168158](arg arg[168161] :
  int[10]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_format_error_bad_regex[168168]() : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    errorCode
  }
  function qio_format_error_write_regex[168174]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode
  }
  function defaultIOStyleInternal[168180]() : _unknown[42]
  {
    { scopeless
      unknown ret[168185] iostyleInternal
      (168188 'end of statement')
    }
    (168190 call qio_style_init_default ret)
    (168192 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  function _unknown[42].native[168197](arg _mt[168212]:_MT[201], arg this[168200] :
  iostyleInternal, arg str_style[168208] :
  (168204 call int[10] 64) =
  (168207 call stringStyleWithVariableLengthInternal)) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[168217] this
      (168220 'end of statement')
    }
    (168221 call =(168226 call . ret c"binary") 1)
    (168230 call =(168235 call . ret c"byteorder")(168238 call :(168241 call . _iokind c"native")(168245 call uint[86] 8)))
    (168247 call =(168252 call . ret c"str_style") str_style)
    (168256 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  function _unknown[42].big[168261](arg _mt[168276]:_MT[201], arg this[168264] :
  iostyleInternal, arg str_style[168272] :
  (168268 call int[10] 64) =
  (168271 call stringStyleWithVariableLengthInternal)) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[168281] this
      (168284 'end of statement')
    }
    (168285 call =(168288 call . ret c"binary") 1)
    (168292 call =(168295 call . ret c"byteorder")(168298 call :(168303 call . _iokind c"big")(168307 call uint[86] 8)))
    (168309 call =(168312 call . ret c"str_style") str_style)
    (168316 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  function _unknown[42].little[168321](arg _mt[168336]:_MT[201], arg this[168324] :
  iostyleInternal, arg str_style[168332] :
  (168328 call int[10] 64) =
  (168331 call stringStyleWithVariableLengthInternal)) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[168341] this
      (168344 'end of statement')
    }
    (168345 call =(168348 call . ret c"binary") 1)
    (168352 call =(168355 call . ret c"byteorder")(168358 call :(168363 call . _iokind c"little")(168367 call uint[86] 8)))
    (168369 call =(168372 call . ret c"str_style") str_style)
    (168376 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  function _unknown[42].text[168381](arg _mt[168387]:_MT[201], arg this[168384] :
  iostyleInternal) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[168392] this
      (168395 'end of statement')
    }
    (168396 call =(168399 call . ret c"binary") 0)
    (168403 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  unknown fdflag_t[168409] "extern" "type variable" c_int
  { scopeless
    const IOHINTS_NONE[168413] "const" "private" 0 c_int
    (168417 'end of statement')
  }
  { scopeless
    const IOHINTS_SEQUENTIAL[168419] "const" "private" QIO_HINT_SEQUENTIAL c_int
    (168423 'end of statement')
  }
  { scopeless
    const IOHINTS_RANDOM[168425] "const" "private" QIO_HINT_RANDOM c_int
    (168429 'end of statement')
  }
  { scopeless
    const IOHINTS_PREFETCH[168431] "const" "private" QIO_HINT_CACHED c_int
    (168435 'end of statement')
  }
  { scopeless
    const IOHINTS_MMAP[168437] "const" "private" QIO_METHOD_MMAP c_int
    (168441 'end of statement')
  }
  { scopeless
    const IOHINTS_NOMMAP[168443] "const" "private" QIO_METHOD_PREADPWRITE c_int
    (168447 'end of statement')
  }
  type ioHintSet[168555] unknown _internal[168450] c_int function ioHintSet[168555].empty[168454](arg _mt[168458]:_MT[201], arg this[168456]:ioHintSet[168555]) : _unknown[42] "method" "primary method" "no parens"
  {
    (168461 return(168462 'new'(168464 call ioHintSet IOHINTS_NONE)))
  } function ioHintSet[168555].sequential[168468](arg _mt[168472]:_MT[201], arg this[168470]:ioHintSet[168555]) : _unknown[42] "method" "primary method" "no parens"
  {
    (168475 return(168476 'new'(168478 call ioHintSet IOHINTS_SEQUENTIAL)))
  } function ioHintSet[168555].random[168482](arg _mt[168486]:_MT[201], arg this[168484]:ioHintSet[168555]) : _unknown[42] "method" "primary method" "no parens"
  {
    (168489 return(168490 'new'(168492 call ioHintSet IOHINTS_RANDOM)))
  } function ioHintSet[168555].prefetch[168496](arg _mt[168500]:_MT[201], arg this[168498]:ioHintSet[168555]) : _unknown[42] "method" "primary method" "no parens"
  {
    (168503 return(168504 'new'(168506 call ioHintSet IOHINTS_PREFETCH)))
  } function ioHintSet[168555].mmap[168510](arg _mt[168518]:_MT[201], arg this[168512]:ioHintSet[168555], arg useMmap[168515] =
  1) : _unknown[42] "method" "primary method"
  {
    (168521 return(168531 IfExpr  useMmap then
    { scopeless
      (168523 'new'(168525 call ioHintSet IOHINTS_MMAP))
    } else
    { scopeless
      (168527 'new'(168529 call ioHintSet IOHINTS_NOMMAP))
    } ))
  } function ioHintSet[168555].fromFlag[168536](arg _mt[168544]:_MT[201], arg this[168538]:ioHintSet[168555], arg flag[168541] :
  c_int) : _unknown[42] "method" "primary method"
  {
    (168547 return(168548 'new'(168550 call ioHintSet flag)))
  }
  function _unknown[42].|[168557](arg _mt[168571]:_MT[201], arg this[168560] :
  ioHintSet, arg lhs[168564] :
  ioHintSet, arg rhs[168568] :
  ioHintSet) : _unknown[42] "method" "operator"
  {
    (168574 return(168575 'new'(168577 call ioHintSet(168578 call |(168583 call . lhs c"_internal")(168587 call . rhs c"_internal")))))
  }
  function _unknown[42].&[168592](arg _mt[168606]:_MT[201], arg this[168595] :
  ioHintSet, arg lhs[168599] :
  ioHintSet, arg rhs[168603] :
  ioHintSet) : _unknown[42] "method" "operator"
  {
    (168609 return(168610 'new'(168612 call ioHintSet(168613 call &(168616 call . lhs c"_internal")(168620 call . rhs c"_internal")))))
  }
  function _unknown[42].==[168625](arg _mt[168639]:_MT[201], arg this[168628] :
  ioHintSet, arg lhs[168632] :
  ioHintSet, arg rhs[168636] :
  ioHintSet) : _unknown[42] "method" "operator"
  {
    (168642 return(168643 call ==(168646 call . lhs c"_internal")(168650 call . rhs c"_internal")))
  }
  function _unknown[42].!=[168655](arg _mt[168669]:_MT[201], arg this[168658] :
  ioHintSet, arg lhs[168662] :
  ioHintSet, arg rhs[168666] :
  ioHintSet) : _unknown[42] "method" "operator"
  {
    (168672 return(168673 call !(168675 call == lhs rhs)))
  }
  type file[168704] unknown _home[168683] here locale[234] unknown _file_internal[168689] QIO_FILE_PTR_NULL qio_file_ptr_t function file[168704].init[168694](arg _mt[168698]:_MT[201], arg this[168696]:file[168704]) : _unknown[42] "method" "primary method"
  {
  }
  function _unknown[42].init[168706](arg _mt[168716]:_MT[201], arg this[168709] :
  file, arg x[168713] :
  file) : _unknown[42] "method"
  {
    (168719 call =(168722 call . this c"_home")(168726 call . x c"_home"))
    (168729 call =(168734 call . this c"_file_internal")(168738 call . x c"_file_internal"))
    (168745 call(168742 call . this c"chpl__initThisType"))
    {
      const tmp[168757] "const" "temp"
      (168758 'move' tmp[168757](168755 'deref'(168754 '_wide_get_locale'(168747 call . this c"_home"))))
      {
        (168752 call qio_file_retain _file_internal)
      }
      (168761 'elided on block' 0 tmp[168757])
    }
  }
  function _unknown[42].init=[168767](arg _mt[168777]:_MT[201], arg this[168770] :
  file, arg x[168774] :
  file) : _unknown[42] "method"
  {
    (168784 call(168781 call . this c"init") x)
  }
  function _unknown[42].=[168788](arg _mt[168802]:_MT[201], arg this[168791] :
  file, ref arg ret[168795] :
  file, arg x[168799] :
  file) : _unknown[42] "assignop" "method" "operator"
  {
    {
      const tmp[168819] "const" "temp"
      (168820 'move' tmp[168819](168817 'deref'(168816 '_wide_get_locale'(168806 call . x c"_home"))))
      {
        (168811 call qio_file_retain(168813 call . x c"_file_internal"))
      }
      (168823 'elided on block' 0 tmp[168819])
    }
    {
      const tmp[168841] "const" "temp"
      (168842 'move' tmp[168841](168839 'deref'(168838 '_wide_get_locale'(168828 call . ret c"_home"))))
      {
        (168833 call qio_file_release(168835 call . ret c"_file_internal"))
      }
      (168845 'elided on block' 0 tmp[168841])
    }
    (168849 call =(168852 call . ret c"_home")(168856 call . x c"_home"))
    (168859 call =(168862 call . ret c"_file_internal")(168866 call . x c"_file_internal"))
  }
  function _unknown[42].init[168871](arg _mt[168894]:_MT[201], arg this[168874] :
  file, arg fp[168880] :
  (168878 call c_ptr c_FILE), arg hints[168887] =
  (168884 call . ioHintSet c"empty"), arg own[168891] =
  0) : _unknown[42] throws "method"
  {
    (168901 call(168898 call . this c"init"))
    (168903 call initHelper this fp hints(own = own))
  }
  function initHelper[168911](ref arg f[168914] :
  file, arg fp[168920] :
  (168918 call c_ptr c_FILE), arg hints[168927] =
  (168924 call . ioHintSet c"empty"), arg own[168931] =
  0) : _unknown[42] throws "private"
  {
    { scopeless
      unknown local_style[168936](168938 call defaultIOStyleInternal)
      (168940 'end of statement')
    }
    (168941 call =(168944 call . f c"_home") here)
    { scopeless
      unknown internalHints[168949](168951 call . hints c"_internal")
      (168955 'end of statement')
    }
    if(168962 call _cond_test own)
    {
      (168957 call |= internalHints QIO_HINT_OWNED)
    }
    { scopeless
      unknown err[168967](168969 call qio_file_init(168971 call . f c"_file_internal") fp(168975 call - 1) internalHints local_style 1)
      (168982 'end of statement')
    }
    if(169036 call _cond_test err)
    {
      { scopeless
        unknown path_cs[168985](168987 call c_ptrConst c_char)
        (168990 'end of statement')
      }
      { scopeless
        unknown path_err[168992](168994 call qio_file_path_for_fp fp path_cs)
        (168998 'end of statement')
      }
      { scopeless
        unknown path[169000](169016 IfExpr  path_err then
        { scopeless
          "unknown"
        } else
        { scopeless
          (169009 call(169006 call . string[244] c"createCopyingBuffer") path_cs(policy =(169012 call . decodePolicy c"replace")))
        } )
        (169020 'end of statement')
      }
      (169022 call deallocate path_cs)
      Try
      {
        {
          (169026 call ioerror err "in init" path)
        }
      }
    }
  }
  function _unknown[42].init[169042](arg _mt[169063]:_MT[201], arg this[169045] :
  file, arg fileDescriptor[169049] :
  int[10], arg hints[169056] =
  (169053 call . ioHintSet c"empty"), arg own[169060] =
  0) : _unknown[42] throws "method"
  {
    (169070 call(169067 call . this c"init"))
    (169072 call initHelper2 this(169078 call(169075 call . fileDescriptor c"safeCast") c_int) hints(own = own))
  }
  function initHelper2[169085](ref arg f[169088] :
  file, arg fd[169092] :
  c_int, arg hints[169099] =
  (169096 call . ioHintSet c"empty"), arg own[169103] =
  0) : _unknown[42] throws "private"
  {
    { scopeless
      unknown local_style[169108](169110 call defaultIOStyleInternal)
      (169112 'end of statement')
    }
    (169113 call =(169116 call . f c"_home") here)
    function chpl_cnullfile[169120]() : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (169123 call c_ptr c_FILE)
    }
    { scopeless
      unknown internalHints[169129](169131 call . hints c"_internal")
      (169135 'end of statement')
    }
    if(169142 call _cond_test own)
    {
      (169137 call |= internalHints QIO_HINT_OWNED)
    }
    { scopeless
      unknown err[169147](169149 call qio_file_init(169151 call . f c"_file_internal")(169155 call chpl_cnullfile) fd internalHints local_style 0)
      (169161 'end of statement')
    }
    if(169210 call _cond_test err)
    {
      { scopeless
        unknown path_cs[169164](169166 call c_ptrConst c_char)
        (169169 'end of statement')
      }
      { scopeless
        unknown path_err[169171](169173 call qio_file_path_for_fd fd path_cs)
        (169177 'end of statement')
      }
      { scopeless
        unknown path[169179](169193 IfExpr  path_err then
        { scopeless
          "unknown"
        } else
        { scopeless
          (169186 call(169183 call . string[244] c"createCopyingBuffer") path_cs(policy =(169189 call . decodePolicy c"replace")))
        } )
        (169197 'end of statement')
      }
      Try
      {
        {
          (169200 call ioerror err "in file.init" path)
        }
      }
    }
  }
  function _unknown[42].checkAssumingLocal[169216](arg _mt[169222]:_MT[201], arg this[169219] :
  file) : _unknown[42] throws "method"
  {
    if(169237 call _cond_test(169233 call == _file_internal nil[32]))
    {
      { scopeless
        (169225 'throw'(169227 call createSystemError EBADF "Operation attempted on an invalid file"))
      }
    }
    if(169255 call _cond_test(169250 call !(169253 call qio_file_isopen _file_internal)))
    {
      { scopeless
        (169242 'throw'(169244 call createSystemError EBADF "Operation attempted on closed file"))
      }
    }
  }
  function _unknown[42].isOpen[169262](arg _mt[169268]:_MT[201], arg this[169265] :
  file) : _unknown[42] "method"
  {
    if(169284 call _cond_test(169280 call == _file_internal nil[32]))
    {
      (169273 return 0)
    }
    {
      (169276 return(169278 call qio_file_isopen _file_internal))
    }
  }
  { scopeless type
    bool
  }
  function _unknown[42].deinit[169291](arg _mt[169297]:_MT[201], ref arg this[169294] :
  file) : _unknown[42] "destructor" "method"
  {
    {
      const tmp[169318] "const" "temp"
      (169319 'move' tmp[169318](169316 'deref'(169315 '_wide_get_locale'(169301 call . this c"_home"))))
      {
        (169306 call qio_file_release _file_internal)
        (169308 call =(169311 call . this c"_file_internal") QIO_FILE_PTR_NULL)
      }
      (169322 'elided on block' 0 tmp[169318])
    }
  }
  function _unknown[42].filePlugin[169328](arg _mt[169334]:_MT[201], arg this[169331] :
  file) : _unknown[42] "method"
  {
    { scopeless
      unknown vptr[169341](169343 call qio_file_get_plugin(169345 call . this c"_file_internal"))
      (169349 'end of statement')
    }
    (169350 return(169351 call : vptr(169354 'to borrowed class from unknown'(169356 'to nilable class from type' QioPluginFile))))
  }
  { scopeless type
    (169336 'to borrowed class from unknown'(169338 'to nilable class from type' QioPluginFile))
  }
  function _unknown[42]._style[169360](arg _mt[169366]:_MT[201], arg this[169363] :
  file) : _unknown[42] throws "method" "no parens"
  {
    { scopeless
      unknown ret[169371] iostyleInternal
      (169374 'end of statement')
    }
    {
      const tmp[169407] "const" "temp"
      (169408 'move' tmp[169407](169405 'deref'(169404 '_wide_get_locale'(169376 call . this c"_home"))))
      {
        Try
        {
          {
            (169387 call(169384 call . this c"checkAssumingLocal"))
          }
        }
        { scopeless
          unknown local_style[169392] iostyleInternal
          (169395 'end of statement')
        }
        (169397 call qio_file_get_style _file_internal local_style)
        (169400 call = ret local_style)
      }
      (169411 'elided on block' 0 tmp[169407])
    }
    (169415 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  function _unknown[42].close[169420](arg _mt[169426]:_MT[201], arg this[169423] :
  file) : _unknown[42] throws "method"
  {
    if(169439 call _cond_test(169435 call == _file_internal nil[32]))
    {
      { scopeless
        (169429 'throw'(169431 call createSystemError EBADF "Operation attempted on an invalid file"))
      }
    }
    { scopeless
      unknown err[169445] 0 errorCode
      (169449 'end of statement')
    }
    {
      const tmp[169464] "const" "temp"
      (169465 'move' tmp[169464](169462 'deref'(169461 '_wide_get_locale'(169451 call . this c"_home"))))
      {
        (169455 call = err(169459 call qio_file_close _file_internal))
      }
      (169468 'elided on block' 0 tmp[169464])
    }
    if(169490 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (169474 call ioerror err "in file.close"(169485 call(169482 call . this c"_tryGetPath")))
          }
        }
      }
    }
  }
  function _unknown[42].fsync[169497](arg _mt[169503]:_MT[201], arg this[169500] :
  file) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[169507] 0 errorCode
      (169511 'end of statement')
    }
    {
      const tmp[169535] "const" "temp"
      (169536 'move' tmp[169535](169533 'deref'(169532 '_wide_get_locale'(169513 call . this c"_home"))))
      {
        Try
        {
          {
            (169522 call(169519 call . this c"checkAssumingLocal"))
          }
        }
        (169526 call = err(169530 call qio_file_sync _file_internal))
      }
      (169539 'elided on block' 0 tmp[169535])
    }
    if(169559 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (169545 call ioerror err "in file.fsync"(169554 call(169551 call . this c"_tryGetPath")))
          }
        }
      }
    }
  }
  function _unknown[42].path[169566](arg _mt[169572]:_MT[201], arg this[169569] :
  file) : _unknown[42] throws "method" "no parens"
  {
    (169576 return(169580 call . this c"_abspath"))
  }
  { scopeless type
    string[244]
  }
  function _unknown[42]._abspath[169586](arg _mt[169592]:_MT[201], arg this[169589] :
  file) : _unknown[42] throws "method" "no parens"
  {
    { scopeless
      unknown ret[169597] string[244]
      (169600 'end of statement')
    }
    { scopeless
      unknown err[169602] 0 errorCode
      (169606 'end of statement')
    }
    {
      const tmp[169663] "const" "temp"
      (169664 'move' tmp[169663](169661 'deref'(169660 '_wide_get_locale'(169608 call . this c"_home"))))
      {
        Try
        {
          {
            (169617 call(169614 call . this c"checkAssumingLocal"))
          }
        }
        { scopeless
          unknown tmp[169622](169624 call c_ptrConst c_char)
          (169627 'end of statement')
        }
        (169628 call = err(169632 call qio_file_path _file_internal tmp))
        if(169653 call _cond_test(169650 call ! err))
        {
          (169636 call = ret(169643 call(169640 call . string[244] c"createCopyingBuffer") tmp(policy =(169646 call . decodePolicy c"escape"))))
        }
        (169658 call deallocate tmp)
      }
      (169667 'elided on block' 0 tmp[169663])
    }
    if(169682 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (169673 call ioerror err "in file.path")
          }
        }
      }
    }
    (169687 return ret)
  }
  { scopeless type
    string[244]
  }
  function _unknown[42]._tryGetPath[169692](arg _mt[169698]:_MT[201], arg this[169695] :
  file) : _unknown[42] "method"
  {
    Try
    {
      {
        (169703 return(169705 call fileRelPathHelper this))
      }
    }
    Catch
    {
      (169709 return "unknown")
    }
  }
  { scopeless type
    string[244]
  }
  function fileRelPathHelper[169717](arg f[169720] :
  file) : _unknown[42] throws "private"
  {
    { scopeless
      unknown ret[169726] string[244]
      (169729 'end of statement')
    }
    { scopeless
      unknown err[169731] 0 errorCode
      (169735 'end of statement')
    }
    {
      const tmp[169824] "const" "temp"
      (169825 'move' tmp[169824](169822 'deref'(169821 '_wide_get_locale'(169737 call . f c"_home"))))
      {
        Try
        {
          {
            (169746 call(169743 call . f c"checkAssumingLocal"))
          }
        }
        { scopeless
          unknown tmp[169751](169753 call c_ptrConst c_char)
          (169756 'end of statement')
        }
        { scopeless
          unknown tmp2[169758](169760 call c_ptrConst c_char)
          (169763 'end of statement')
        }
        (169764 call = err(169768 call qio_file_path(169770 call . f c"_file_internal") tmp))
        if(169789 call _cond_test(169786 call ! err))
        {
          (169775 call = err(169779 call qio_shortest_path(169781 call . f c"_file_internal") tmp2 tmp))
        }
        (169794 call deallocate tmp)
        if(169814 call _cond_test(169811 call ! err))
        {
          (169797 call = ret(169804 call(169801 call . string[244] c"createCopyingBuffer") tmp2(policy =(169807 call . decodePolicy c"escape"))))
        }
        (169819 call deallocate tmp2)
      }
      (169828 'elided on block' 0 tmp[169824])
    }
    if(169841 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (169834 call ioerror err "in file.path")
          }
        }
      }
    }
    (169846 return ret)
  }
  { scopeless type
    string[244]
  }
  function _unknown[42].size[169851](arg _mt[169857]:_MT[201], arg this[169854] :
  file) : _unknown[42] throws "method" "no parens"
  {
    { scopeless
      unknown err[169862] 0 errorCode
      (169866 'end of statement')
    }
    { scopeless
      unknown len[169868] 0(169870 call int[10] 64)
      (169874 'end of statement')
    }
    {
      const tmp[169893] "const" "temp"
      (169894 'move' tmp[169893](169891 'deref'(169890 '_wide_get_locale'(169876 call . this c"_home"))))
      {
        (169880 call = err(169884 call qio_file_length(169886 call . this c"_file_internal") len))
      }
      (169897 'elided on block' 0 tmp[169893])
    }
    if(169912 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (169903 call ioerror err "in file.size")
          }
        }
      }
    }
    (169917 return len)
  }
  { scopeless type
    int[10]
  }
  { scopeless
    unknown _r[169923] "param" "private" "r"
    (169928 'end of statement')
  }
  { scopeless
    unknown _rw[169930] "param" "private" "r+"
    (169935 'end of statement')
  }
  { scopeless
    unknown _cw[169937] "param" "private" "w"
    (169942 'end of statement')
  }
  { scopeless
    unknown _cwr[169944] "param" "private" "w+"
    (169949 'end of statement')
  }
  { scopeless
    unknown _a[169951] "param" "private" "a"
    (169956 'end of statement')
  }
  function _modestring[169957](arg mode[169960] :
  ioMode) : _unknown[42]
  {
    (169966 'import' HaltWrappers)
    {
      unknown tmp[170048] "expr temp" "maybe param" "maybe type" "temp"
      (170050 'move' tmp[170048] mode)
      if(170055 call _cond_test(170052 call == tmp[170048](169973 call . ioMode c"r")))
      {
        { scopeless
          (169977 return _r)
        }
      }
      {
        if(170061 call _cond_test(170058 call == tmp[170048](169986 call . ioMode c"rw")))
        {
          { scopeless
            (169990 return _rw)
          }
        }
        {
          if(170068 call _cond_test(170065 call == tmp[170048](169999 call . ioMode c"cw")))
          {
            { scopeless
              (170003 return _cw)
            }
          }
          {
            if(170075 call _cond_test(170072 call == tmp[170048](170012 call . ioMode c"cwr")))
            {
              { scopeless
                (170016 return _cwr)
              }
            }
            {
              if(170082 call _cond_test(170079 call == tmp[170048](170025 call . ioMode c"a")))
              {
                { scopeless
                  (170029 return _a)
                }
              }
              {
                { scopeless
                  (170040 call(170037 call . HaltWrappers c"exhaustiveSelectHalt") "Invalid ioMode")
                }
              }
            }
          }
        }
      }
    }
  }
  function open[170088](arg path[170091] :
  string[244], arg mode[170095] :
  ioMode, arg hints[170102] =
  (170099 call . ioHintSet c"empty")) : _unknown[42] throws
  {
    (170107 return(170109 call openHelper path mode hints))
  }
  { scopeless type
    file
  }
  function openHelper[170116](arg path[170119] :
  string[244], arg mode[170123] :
  ioMode, arg hints[170130] =
  (170127 call . ioHintSet c"empty")) : _unknown[42] throws "private"
  {
    { scopeless
      unknown local_style[170136](170138 call defaultIOStyleInternal)
      (170140 'end of statement')
    }
    { scopeless
      unknown error[170142] 0 errorCode
      (170146 'end of statement')
    }
    { scopeless
      unknown ret[170148] file
      (170151 'end of statement')
    }
    (170152 call =(170155 call . ret c"_home") here)
    if(170176 call _cond_test(170172 call == path ""))
    {
      { scopeless
        Try
        {
          {
            (170161 call ioerror(170162 call : ENOENT errorCode) "in open: path is the empty string")
          }
        }
      }
    }
    (170181 call = error(170185 call qio_file_open_access(170187 call . ret c"_file_internal")(170207 call(170204 call .(170196 call(170193 call . path c"encode")(policy =(170200 call . encodePolicy c"unescape"))) c"c_str"))(170214 call(170211 call .(170209 call _modestring mode) c"c_str"))(170216 call . hints c"_internal") local_style))
    if(170232 call _cond_test error)
    {
      { scopeless
        Try
        {
          {
            (170222 call ioerror error "in open" path)
          }
        }
      }
    }
    (170237 return ret)
  }
  { scopeless type
    file
  }
  function openplugin[170242](arg pluginFile[170245] :
  QioPluginFile, arg mode[170249] :
  ioMode, arg seekable[170253] :
  bool, arg style[170257] :
  iostyleInternal) : _unknown[42] throws
  {
    (170263 'import' HaltWrappers)
    function qio_file_init_plugin[170264](ref arg file_out[170267] :
    qio_file_ptr_t, arg file_info[170273] :
    (170271 call c_ptr void[4]), arg flags[170277] :
    c_int, const  ref arg style[170281] :
    iostyleInternal) : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      errorCode
    }
    { scopeless
      unknown local_style[170289] style
      (170292 'end of statement')
    }
    { scopeless
      unknown ret[170294] file
      (170297 'end of statement')
    }
    (170298 call =(170301 call . ret c"_home") here)
    { scopeless
      unknown flags[170306] 0 c_int
      (170310 'end of statement')
    }
    {
      unknown tmp[170381] "expr temp" "maybe param" "maybe type" "temp"
      (170383 'move' tmp[170381] mode)
      if(170388 call _cond_test(170385 call == tmp[170381](170315 call . ioMode c"r")))
      {
        (170320 call |= flags QIO_FDFLAG_READABLE)
      }
      {
        if(170394 call _cond_test(170391 call == tmp[170381](170327 call . ioMode c"rw")))
        {
          (170332 call |= flags QIO_FDFLAG_READABLE)
          (170336 call |= flags QIO_FDFLAG_WRITEABLE)
        }
        {
          if(170401 call _cond_test(170398 call == tmp[170381](170343 call . ioMode c"cw")))
          {
            (170348 call |= flags QIO_FDFLAG_WRITEABLE)
          }
          {
            if(170408 call _cond_test(170405 call == tmp[170381](170355 call . ioMode c"cwr")))
            {
              (170360 call |= flags QIO_FDFLAG_READABLE)
              (170364 call |= flags QIO_FDFLAG_WRITEABLE)
            }
            {
              { scopeless
                (170375 call(170372 call . HaltWrappers c"exhaustiveSelectHalt") "Invalid ioMode")
              }
            }
          }
        }
      }
    }
    if(170418 call _cond_test seekable)
    {
      { scopeless
        (170412 call |= flags QIO_FDFLAG_SEEKABLE)
      }
    }
    { scopeless
      unknown err[170424](170426 call qio_file_init_plugin(170428 call . ret c"_file_internal")(170432 call c_ptrToConst pluginFile) flags style)
      (170437 'end of statement')
    }
    if(170515 call _cond_test err)
    {
      { scopeless
        unknown path[170440] "unknown" string[244]
        (170444 'end of statement')
      }
      if(170499 call _cond_test pluginFile)
      {
        { scopeless
          unknown str[170447] nil[32](170449 call c_ptr(170451 call uint[86] 8))
          (170455 'end of statement')
        }
        { scopeless
          unknown len[170457] int[10]
          (170460 'end of statement')
        }
        { scopeless
          unknown path_err[170462](170467 call(170464 call . pluginFile c"getpath") str len)
          (170471 'end of statement')
        }
        if(170494 call _cond_test path_err)
        {
          (170473 call = path "unknown")
        }
        {
          (170478 call = path(170485 call(170482 call . string[244] c"createCopyingBuffer") str len(policy =(170489 call . decodePolicy c"replace"))))
        }
      }
      Try
      {
        {
          (170505 call ioerror err "in openplugin" path)
        }
      }
    }
    (170519 return ret)
  }
  function openTempFile[170523](arg hints[170529] =
  (170526 call . ioHintSet c"empty")) : _unknown[42] throws
  {
    (170534 return(170536 call opentmpHelper hints))
  }
  { scopeless type
    file
  }
  function opentmpHelper[170541](arg hints[170547] =
  (170544 call . ioHintSet c"empty")) : _unknown[42] throws "private"
  {
    { scopeless
      unknown local_style[170553](170555 call defaultIOStyleInternal)
      (170557 'end of statement')
    }
    { scopeless
      unknown ret[170559] file
      (170562 'end of statement')
    }
    (170563 call =(170566 call . ret c"_home") here)
    { scopeless
      unknown err[170571](170573 call qio_file_open_tmp(170575 call . ret c"_file_internal")(170579 call . hints c"_internal") local_style)
      (170584 'end of statement')
    }
    if(170596 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (170587 call ioerror err "in opentmp")
          }
        }
      }
    }
    (170601 return ret)
  }
  { scopeless type
    file
  }
  function openMemFile[170606]() : _unknown[42] throws
  {
    (170610 return(170612 call openMemFileHelper))
  }
  { scopeless type
    file
  }
  function openMemFileHelper[170616]() : _unknown[42] throws "private"
  {
    { scopeless
      unknown local_style[170621](170623 call defaultIOStyleInternal)
      (170625 'end of statement')
    }
    { scopeless
      unknown ret[170627] file
      (170630 'end of statement')
    }
    (170631 call =(170634 call . ret c"_home") here)
    { scopeless
      unknown err[170639](170641 call qio_file_open_mem(170643 call . ret c"_file_internal") QBUFFER_PTR_NULL local_style)
      (170649 'end of statement')
    }
    if(170661 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (170652 call ioerror err "in openMemFile")
          }
        }
      }
    }
    (170666 return ret)
  }
  { scopeless type
    file
  }
  { scopeless
    unknown useIOSerializers[170672] "config" "param" 1
    (170675 'end of statement')
  }
  function defaultSerializeType[170676](param arg writing[170679] :
  bool) type : _unknown[42] "private"
  {
    if(170689 call _cond_test(170686 call ! useIOSerializers))
    {
      { scopeless
        (170683 return nothing)
      }
    }
    if(170701 call _cond_test writing)
    {
      { scopeless
        (170694 return defaultSerializer)
      }
    }
    {
      { scopeless
        (170697 return defaultDeserializer)
      }
    }
  }
  function isDefaultSerializerType[170709](arg t[170711]:_any[141](?)) param : _unknown[42]
  {
    (170717 'import' PrecisionSerializer)
    (170718 return(170719 call ||(170721 call == t defaultSerializer)(170725 call == t(170731 call . PrecisionSerializer c"precisionSerializer"))))
  }
  { scopeless type
    bool
  }
  function defaultSerializeVal[170737](param arg writing[170740] :
  bool) : _unknown[42] "private"
  {
    if(170750 call _cond_test(170747 call ! useIOSerializers))
    {
      { scopeless
        (170744 return none)
      }
    }
    if(170766 call _cond_test writing)
    {
      { scopeless
        (170755 return(170756 'new'(170758 call defaultSerializer)))
      }
    }
    {
      { scopeless
        (170760 return(170761 'new'(170763 call defaultDeserializer)))
      }
    }
  }
  type _serializeWrapper[170803](?) unknown T[170777] "type variable" unknown member[170780] T unknown __dummy[170785] int[10] function _serializeWrapper[170803](?).serialize[170789](arg _mt[170797]:_MT[201], arg this[170791]:_serializeWrapper[170803](?), arg writer[170793]:_any[141](?), ref arg serializer[170795]:_any[141](?)) : _unknown[42] throws "method" "primary method" "method overrides"
  {
  } writeSerializable
  function chpl_fileFromReaderOrWriter[170805](arg readerOrWriter[170807]:_any[141](?)) : _unknown[42] "inline" "private"
  {
    { scopeless
      unknown fp[170812] qio_file_ptr_t
      (170815 'end of statement')
    }
    (170817 call qio_channel_get_file_ptr(170819 call . readerOrWriter c"_channel_internal") fp)
    (170824 call qio_file_retain fp)
    { scopeless
      unknown ret[170827] file
      (170830 'end of statement')
    }
    (170831 call =(170834 call . ret c"_home")(170838 call . readerOrWriter c"_home"))
    (170841 call =(170844 call . ret c"_file_internal") fp)
    (170848 return ret)
  }
  { scopeless type
    file
  }
  type fileReader[170893](?) unknown locking[170855] "param" bool unknown deserializerType[170860] "type variable"(170862 call defaultSerializeType 0) unknown _home[170866] here locale[234] unknown _channel_internal[170872] QIO_CHANNEL_PTR_NULL qio_channel_ptr_t unknown _deserializer[170878](170880 call _shared(170883 call(170882 'to nilable class from type' _serializeWrapper) deserializerType)) unknown _readWriteThisFromLocale[170888] nilLocale
  function _unknown[42].getFile[170895](arg _mt[170901]:_MT[201], arg this[170898] :
  fileReader) : _unknown[42] "method" "@unstable"
  {
    (170904 return(170906 call chpl_fileFromReaderOrWriter this))
  }
  function _unknown[42]._writing[170910](arg _mt[170916]:_MT[201], arg this[170913] :
  fileReader) param : _unknown[42] "method" "no parens"
  {
    (170920 return 0)
  }
  { scopeless type
    bool
  }
  function _unknown[42].deserializer[170925](arg _mt[170931]:_MT[201], arg this[170928] :
  fileReader) ref : _unknown[42] "method" "no parens"
  {
    (170935 return(170941 call .(170936 call postfix! _deserializer) c"member"))
  }
  { scopeless type
    deserializerType
  }
  type fileWriter[170987](?) unknown locking[170949] "param" bool unknown serializerType[170954] "type variable"(170956 call defaultSerializeType 1) unknown _home[170960] here locale[234] unknown _channel_internal[170966] QIO_CHANNEL_PTR_NULL qio_channel_ptr_t unknown _serializer[170972](170974 call _shared(170977 call(170976 'to nilable class from type' _serializeWrapper) serializerType)) unknown _readWriteThisFromLocale[170982] nilLocale
  function _unknown[42].getFile[170989](arg _mt[170995]:_MT[201], arg this[170992] :
  fileWriter) : _unknown[42] "method" "@unstable"
  {
    (170998 return(171000 call chpl_fileFromReaderOrWriter this))
  }
  function _unknown[42]._writing[171004](arg _mt[171010]:_MT[201], arg this[171007] :
  fileWriter) param : _unknown[42] "method" "no parens"
  {
    (171014 return 1)
  }
  { scopeless type
    bool
  }
  function _unknown[42].serializer[171019](arg _mt[171025]:_MT[201], arg this[171022] :
  fileWriter) ref : _unknown[42] "method" "no parens"
  {
    (171029 return(171033 call .(171030 call postfix! _serializer) c"member"))
  }
  { scopeless type
    serializerType
  }
  type defaultSerializer[171969] function defaultSerializer[171969]._serializeClassOrPtr[171040](arg _mt[171053]:_MT[201], ref arg this[171042]:defaultSerializer[171969], arg writer[171045] :
  fileWriter, arg x[171050] :
  unknown t[171048]) : _unknown[42] throws "method" "primary method"
  {
    if(171097 call _cond_test(171093 call == x nil[32]))
    {
      (171062 call(171059 call . writer c"writeLiteral") "nil")
    }
    {
      { scopeless
        if(171089 call _cond_test(171087 call isClassType t))
        {
          (171071 call(171068 call .(171065 call postfix! x) c"serialize")(writer = writer)(serializer = this))
        }
        {
          (171081 call(171078 call . x c"serialize")(writer = writer)(serializer = this))
        }
      }
    }
  }
  { scopeless type
    void[4]
  } function defaultSerializer[171969].serializeValue[171105](arg _mt[171118]:_MT[201], ref arg this[171107]:defaultSerializer[171969], arg writer[171110] :
  fileWriter, const arg val[171115] :
  unknown t[171113]) : _unknown[42] throws "method" "primary method"
  {
    if(171224 call _cond_test(171199 call ||(171201 call ||(171203 call ||(171205 call ||(171208 call isNumericType t)(171211 call isBoolType t))(171214 call isEnumType t))(171216 call == t string[244]))(171220 call == t bytes[232])))
    {
      (171127 call(171124 call . writer c"_writeOne")(171129 call . _iokind c"dynamic") val(171137 call(171134 call . writer c"getLocaleOfIoRequest")))
    }
    {
      { scopeless
        if(171194 call _cond_test(171190 call == t _nilType))
        {
          (171143 call(171140 call . writer c"writeLiteral") "nil")
        }
        {
          { scopeless
            if(171185 call _cond_test(171172 call ||(171174 call ||(171177 call isClassType t)(171180 call isAnyCPtr t))(171183 call chpl_isDdata t)))
            {
              (171147 call _serializeClassOrPtr writer val)
            }
            {
              { scopeless
                if(171168 call _cond_test(171166 call isUnionType t))
                {
                  (171152 call writeThisDefaultImpl writer val)
                }
                {
                  (171160 call(171157 call . val c"serialize")(writer = writer)(serializer = this))
                }
              }
            }
          }
        }
      }
    }
  }
  { scopeless type
    void[4]
  } function defaultSerializer[171969].startClass[171232](arg _mt[171248]:_MT[201], arg this[171234]:defaultSerializer[171969], arg writer[171237] :
  fileWriter, arg name[171241] :
  string[244], arg size[171245] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171255 call(171252 call . writer c"writeLiteral") "{")
    (171257 return(171258 'new'(171260 call AggregateSerializer writer(_ending = "}"))))
  } function defaultSerializer[171969].startRecord[171266](arg _mt[171282]:_MT[201], arg this[171268]:defaultSerializer[171969], arg writer[171271] :
  fileWriter, arg name[171275] :
  string[244], arg size[171279] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171289 call(171286 call . writer c"writeLiteral") "(")
    (171291 return(171292 'new'(171294 call AggregateSerializer writer(_ending = ")"))))
  } type AggregateSerializer[171476](?) unknown writer[171302] unknown _parent[171306] 0 unknown _first[171311] 1 bool const _ending[171317] "const" string[244] unknown _firstPtr[171322] nil[32](171324 call c_ptr bool) function AggregateSerializer[171476](?).writeField[171329](arg _mt[171341]:_MT[201], ref arg this[171331]:AggregateSerializer[171476](?), arg name[171334] :
  string[244], const arg field[171338] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    if(171359 call _cond_test(171356 call ! _first))
    {
      { scopeless
        (171348 call(171345 call . writer c"writeLiteral") ", ")
      }
    }
    {
      { scopeless
        (171351 call = _first 0)
      }
    }
    (171369 call(171366 call . writer c"writeLiteral") name)
    (171375 call(171372 call . writer c"writeLiteral") " = ")
    (171381 call(171378 call . writer c"write") field)
  } function AggregateSerializer[171476](?).startClass[171385](arg _mt[171401]:_MT[201], ref arg this[171387]:AggregateSerializer[171476](?), arg writer[171390] :
  fileWriter, arg name[171394] :
  string[244], arg size[171398] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171404 return(171405 'new'(171407 call AggregateSerializer writer(_parent = 1)(_firstPtr =(171412 call c_addrOf _first)))))
  } function AggregateSerializer[171476](?).endClass[171417](arg _mt[171421]:_MT[201], arg this[171419]:AggregateSerializer[171476](?)) : _unknown[42] throws "method" "primary method"
  {
    if(171452 call _cond_test(171449 call ! _parent))
    {
      { scopeless
        (171428 call(171425 call . writer c"writeLiteral") _ending)
      }
    }
    {
      { scopeless
        if(171444 call _cond_test(171440 call != _firstPtr nil[32]))
        {
          { scopeless
            (171431 call =(171437 call(171434 call . _firstPtr c"deref")) _first)
          }
        }
      }
    }
  } function AggregateSerializer[171476](?).endRecord[171460](arg _mt[171464]:_MT[201], arg this[171462]:AggregateSerializer[171476](?)) : _unknown[42] throws "method" "primary method"
  {
    (171471 call(171468 call . writer c"writeLiteral") _ending)
  } function defaultSerializer[171969].startTuple[171478](arg _mt[171490]:_MT[201], arg this[171480]:defaultSerializer[171969], arg writer[171483] :
  fileWriter, arg size[171487] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171497 call(171494 call . writer c"writeLiteral") "(")
    (171499 return(171500 'new'(171502 call TupleSerializer writer size)))
  } type TupleSerializer[171597](?) unknown writer[171509] const size[171513] "const" int[10] unknown _first[171518] 1 bool function TupleSerializer[171597](?).writeElement[171523](arg _mt[171531]:_MT[201], ref arg this[171525]:TupleSerializer[171597](?), const arg element[171528] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    if(171549 call _cond_test(171546 call ! _first))
    {
      { scopeless
        (171538 call(171535 call . writer c"writeLiteral") ", ")
      }
    }
    {
      { scopeless
        (171541 call = _first 0)
      }
    }
    (171559 call(171556 call . writer c"write") element)
  } function TupleSerializer[171597](?).endTuple[171563](arg _mt[171567]:_MT[201], arg this[171565]:TupleSerializer[171597](?)) : _unknown[42] throws "method" "primary method"
  {
    if(171588 call _cond_test(171584 call == size 1))
    {
      { scopeless
        (171574 call(171571 call . writer c"writeLiteral") ",)")
      }
    }
    {
      { scopeless
        (171581 call(171578 call . writer c"writeLiteral") ")")
      }
    }
  } function defaultSerializer[171969].startList[171599](arg _mt[171611]:_MT[201], arg this[171601]:defaultSerializer[171969], arg writer[171604] :
  fileWriter, arg size[171608] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171618 call(171615 call . writer c"writeLiteral") "[")
    (171620 return(171621 'new'(171623 call ListSerializer writer)))
  } type ListSerializer[171694](?) unknown writer[171629] unknown _first[171633] 1 bool function ListSerializer[171694](?).writeElement[171638](arg _mt[171646]:_MT[201], ref arg this[171640]:ListSerializer[171694](?), const arg element[171643] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    if(171664 call _cond_test(171661 call ! _first))
    {
      { scopeless
        (171653 call(171650 call . writer c"writeLiteral") ", ")
      }
    }
    {
      { scopeless
        (171656 call = _first 0)
      }
    }
    (171674 call(171671 call . writer c"write") element)
  } function ListSerializer[171694](?).endList[171678](arg _mt[171682]:_MT[201], arg this[171680]:ListSerializer[171694](?)) : _unknown[42] throws "method" "primary method"
  {
    (171689 call(171686 call . writer c"writeLiteral") "]")
  } function defaultSerializer[171969].startArray[171696](arg _mt[171708]:_MT[201], arg this[171698]:defaultSerializer[171969], arg writer[171701] :
  fileWriter, arg size[171705] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171711 return(171712 'new'(171714 call ArraySerializer writer)))
  } type ArraySerializer[171844](?) unknown writer[171720] unknown _arrayDim[171724] int[10] unknown _arrayMax[171729] int[10] unknown _first[171734] 1 bool function ArraySerializer[171844](?).startDim[171739](arg _mt[171747]:_MT[201], ref arg this[171741]:ArraySerializer[171844](?), arg size[171744] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171750 call += _arrayDim 1)
    if(171769 call _cond_test(171765 call >= _arrayMax _arrayDim))
    {
      { scopeless
        (171758 call(171755 call . writer c"writeNewline"))
      }
    }
    {
      { scopeless
        (171760 call = _arrayMax _arrayDim)
      }
    }
  } function ArraySerializer[171844](?).endDim[171777](arg _mt[171781]:_MT[201], ref arg this[171779]:ArraySerializer[171844](?)) : _unknown[42] throws "method" "primary method"
  {
    (171784 call -= _arrayDim 1)
    (171788 call = _first 1)
  } function ArraySerializer[171844](?).writeElement[171794](arg _mt[171802]:_MT[201], ref arg this[171796]:ArraySerializer[171844](?), const arg element[171799] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    if(171820 call _cond_test(171817 call ! _first))
    {
      { scopeless
        (171809 call(171806 call . writer c"writeLiteral") " ")
      }
    }
    {
      { scopeless
        (171812 call = _first 0)
      }
    }
    (171830 call(171827 call . writer c"write") element)
  } function ArraySerializer[171844](?).endArray[171834](arg _mt[171838]:_MT[201], arg this[171836]:ArraySerializer[171844](?)) : _unknown[42] throws "method" "primary method"
  {
  } function defaultSerializer[171969].startMap[171846](arg _mt[171858]:_MT[201], arg this[171848]:defaultSerializer[171969], arg writer[171851] :
  fileWriter, arg size[171855] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (171865 call(171862 call . writer c"writeLiteral") "{")
    (171867 return(171868 'new'(171870 call MapSerializer writer)))
  } type MapSerializer[171966](?) unknown writer[171876] unknown _first[171880] 1 bool function MapSerializer[171966](?).writeKey[171885](arg _mt[171893]:_MT[201], ref arg this[171887]:MapSerializer[171966](?), const arg key[171890] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    if(171911 call _cond_test(171908 call ! _first))
    {
      { scopeless
        (171900 call(171897 call . writer c"writeLiteral") ", ")
      }
    }
    {
      { scopeless
        (171903 call = _first 0)
      }
    }
    (171921 call(171918 call . writer c"write") key)
  } function MapSerializer[171966](?).writeValue[171925](arg _mt[171933]:_MT[201], arg this[171927]:MapSerializer[171966](?), const arg val[171930] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    (171940 call(171937 call . writer c"writeLiteral") ": ")
    (171946 call(171943 call . writer c"write") val)
  } function MapSerializer[171966](?).endMap[171950](arg _mt[171954]:_MT[201], arg this[171952]:MapSerializer[171966](?)) : _unknown[42] throws "method" "primary method"
  {
    (171961 call(171958 call . writer c"writeLiteral") "}")
  }
  type defaultDeserializer[173096] function defaultDeserializer[173096].deserializeType[171972](arg _mt[171982]:_MT[201], ref arg this[171974]:defaultDeserializer[173096], arg reader[171977] :
  fileReader, arg readType[171980]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172006 call _cond_test(172004 call isNilableClassType readType))
    {
      if(171999 call _cond_test(171997 call(171994 call . reader c"matchLiteral") "nil"))
      {
        (171988 return(171989 call : nil[32] readType))
      }
    }
    if(172095 call _cond_test(172070 call ||(172072 call ||(172074 call ||(172076 call ||(172079 call isNumericType readType)(172082 call isBoolType readType))(172085 call isEnumType readType))(172087 call == readType string[244]))(172091 call == readType bytes[232])))
    {
      { scopeless
        unknown x[172012] readType
        (172015 'end of statement')
      }
      (172022 call(172019 call . reader c"_readOne")(172024 call . _iokind c"dynamic") x here)
      (172029 return x)
    }
    {
      { scopeless
        if(172066 call _cond_test(172053 call ||(172056 call canResolveTypeMethod readType "deserializeFrom" reader this)(172064 call isArrayType readType)))
        {
          (172032 return(172039 call(172036 call . readType c"deserializeFrom")(reader = reader)(deserializer = this)))
        }
        {
          (172045 return(172046 'new'(172048 call readType(reader = reader)(deserializer = this))))
        }
      }
    }
  }
  { scopeless type
    readType
  } function defaultDeserializer[173096].deserializeValue[172103](arg _mt[172116]:_MT[201], ref arg this[172105]:defaultDeserializer[173096], arg reader[172108] :
  fileReader, ref arg val[172113] :
  unknown readType[172111]) : _unknown[42] throws "method" "primary method"
  {
    if(172157 call _cond_test(172155 call isNilableClassType readType))
    {
      if(172149 call _cond_test(172147 call(172144 call . reader c"matchLiteral") "nil"))
      {
        (172122 call = val nil[32])
        (172126 return)
      }
      {
        { scopeless
          if(172139 call _cond_test(172135 call == val nil[32]))
          {
            (172128 call = val(172132 call deserializeType reader readType))
          }
        }
      }
    }
    if(172208 call _cond_test(172183 call ||(172185 call ||(172187 call ||(172189 call ||(172192 call isNumericType readType)(172195 call isBoolType readType))(172198 call isEnumType readType))(172200 call == readType string[244]))(172204 call == readType bytes[232])))
    {
      (172166 call(172163 call . reader c"_readOne")(172168 call . _iokind c"dynamic") val here)
    }
    {
      (172178 call(172175 call . val c"deserialize")(reader = reader)(deserializer = this))
    }
  }
  { scopeless type
    void[4]
  } function defaultDeserializer[173096].startClass[172215](arg _mt[172227]:_MT[201], arg this[172217]:defaultDeserializer[173096], arg reader[172220] :
  fileReader, arg name[172224] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    (172234 call(172231 call . reader c"readLiteral") "{")
    (172236 return(172237 'new'(172239 call AggregateDeserializer reader)))
  } function defaultDeserializer[173096].startRecord[172243](arg _mt[172255]:_MT[201], arg this[172245]:defaultDeserializer[173096], arg reader[172248] :
  fileReader, arg name[172252] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    (172262 call(172259 call . reader c"readLiteral") "(")
    (172264 return(172265 'new'(172267 call AggregateDeserializer reader)))
  } type AggregateDeserializer[172432](?) unknown reader[172273] unknown _parent[172277] 0 bool function AggregateDeserializer[172432](?).readField[172282](arg _mt[172292]:_MT[201], arg this[172284]:AggregateDeserializer[172432](?), arg name[172287] :
  string[244], arg fieldType[172290]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (172300 call(172297 call . reader c"readLiteral") name)
    (172306 call(172303 call . reader c"readLiteral") "=")
    { scopeless
      unknown ret[172309](172314 call(172311 call . reader c"read") fieldType)
      (172317 'end of statement')
    }
    (172322 call(172319 call . reader c"matchLiteral") ",")
    (172324 return ret)
  }
  { scopeless type
    fieldType
  } function AggregateDeserializer[172432](?).readField[172329](arg _mt[172339]:_MT[201], arg this[172331]:AggregateDeserializer[172432](?), arg name[172334] :
  string[244], ref arg field[172337]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (172346 call(172343 call . reader c"readLiteral") name)
    (172352 call(172349 call . reader c"readLiteral") "=")
    (172358 call(172355 call . reader c"read") field)
    (172364 call(172361 call . reader c"matchLiteral") ",")
  } function AggregateDeserializer[172432](?).startClass[172368](arg _mt[172380]:_MT[201], arg this[172370]:AggregateDeserializer[172432](?), arg reader[172373] :
  fileReader, arg name[172377] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    (172383 return(172384 'new'(172386 call AggregateDeserializer reader(_parent = 1))))
  } function AggregateDeserializer[172432](?).endClass[172392](arg _mt[172396]:_MT[201], arg this[172394]:AggregateDeserializer[172432](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172409 call _cond_test(172406 call ! _parent))
    {
      { scopeless
        (172403 call(172400 call . reader c"readLiteral") "}")
      }
    }
  } function AggregateDeserializer[172432](?).endRecord[172416](arg _mt[172420]:_MT[201], arg this[172418]:AggregateDeserializer[172432](?)) : _unknown[42] throws "method" "primary method"
  {
    (172427 call(172424 call . reader c"readLiteral") ")")
  } function defaultDeserializer[173096].startTuple[172434](arg _mt[172442]:_MT[201], arg this[172436]:defaultDeserializer[173096], arg reader[172439] :
  fileReader) : _unknown[42] throws "method" "primary method"
  {
    (172449 call(172446 call . reader c"readLiteral") "(")
    (172451 return(172452 'new'(172454 call TupleDeserializer reader)))
  } type TupleDeserializer[172533](?) unknown reader[172460] function TupleDeserializer[172533](?).readElement[172463](arg _mt[172469]:_MT[201], arg this[172465]:TupleDeserializer[172533](?), arg eltType[172467]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    { scopeless
      unknown ret[172474](172479 call(172476 call . reader c"read") eltType)
      (172482 'end of statement')
    }
    (172487 call(172484 call . reader c"matchLiteral") ",")
    (172489 return ret)
  }
  { scopeless type
    eltType
  } function TupleDeserializer[172533](?).readElement[172494](arg _mt[172500]:_MT[201], arg this[172496]:TupleDeserializer[172533](?), ref arg element[172498]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (172507 call(172504 call . reader c"read") element)
    (172513 call(172510 call . reader c"matchLiteral") ",")
  } function TupleDeserializer[172533](?).endTuple[172517](arg _mt[172521]:_MT[201], arg this[172519]:TupleDeserializer[172533](?)) : _unknown[42] throws "method" "primary method"
  {
    (172528 call(172525 call . reader c"readLiteral") ")")
  } function defaultDeserializer[173096].startList[172535](arg _mt[172543]:_MT[201], ref arg this[172537]:defaultDeserializer[173096], arg reader[172540] :
  fileReader) : _unknown[42] throws "method" "primary method"
  {
    (172550 call(172547 call . reader c"readLiteral") "[")
    (172552 return(172553 'new'(172555 call ListDeserializer reader)))
  } type ListDeserializer[172698](?) unknown reader[172561] unknown _first[172565] 1 bool function ListDeserializer[172698](?).readElement[172570](arg _mt[172576]:_MT[201], ref arg this[172572]:ListDeserializer[172698](?), arg eltType[172574]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172595 call _cond_test(172592 call ! _first))
    {
      { scopeless
        (172584 call(172581 call . reader c"readLiteral") ",")
      }
    }
    {
      { scopeless
        (172587 call = _first 0)
      }
    }
    (172601 return(172606 call(172603 call . reader c"read") eltType))
  }
  { scopeless type
    eltType
  } function ListDeserializer[172698](?).readElement[172611](arg _mt[172617]:_MT[201], ref arg this[172613]:ListDeserializer[172698](?), ref arg element[172615]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172635 call _cond_test(172632 call ! _first))
    {
      { scopeless
        (172624 call(172621 call . reader c"readLiteral") ",")
      }
    }
    {
      { scopeless
        (172627 call = _first 0)
      }
    }
    (172645 call(172642 call . reader c"read") element)
  } function ListDeserializer[172698](?).endList[172649](arg _mt[172653]:_MT[201], arg this[172651]:ListDeserializer[172698](?)) : _unknown[42] throws "method" "primary method"
  {
    (172660 call(172657 call . reader c"readLiteral") "]")
  } function ListDeserializer[172698](?).hasMore[172664](arg _mt[172668]:_MT[201], arg this[172666]:ListDeserializer[172698](?)) : _unknown[42] throws "method" "primary method"
  {
    (172676 call(172673 call . reader c"mark"))
    Defer
    {
      { scopeless
        (172681 call(172678 call . reader c"revert"))
      }
    }
    (172685 return(172686 call !(172692 call(172689 call . reader c"matchLiteral") "]")))
  }
  { scopeless type
    bool
  } function defaultDeserializer[173096].startArray[172700](arg _mt[172708]:_MT[201], arg this[172702]:defaultDeserializer[173096], arg reader[172705] :
  fileReader) : _unknown[42] throws "method" "primary method"
  {
    (172711 return(172712 'new'(172714 call ArrayDeserializer reader)))
  } type ArrayDeserializer[172879](?) unknown reader[172720] unknown _first[172724] 1 bool unknown _arrayDim[172730] int[10] unknown _arrayMax[172735] int[10] function ArrayDeserializer[172879](?).startDim[172739](arg _mt[172743]:_MT[201], ref arg this[172741]:ArrayDeserializer[172879](?)) : _unknown[42] throws "method" "primary method"
  {
    (172746 call += _arrayDim 1)
    if(172767 call _cond_test(172763 call >= _arrayMax _arrayDim))
    {
      (172757 call(172754 call . reader c"matchNewline"))
    }
    {
      (172759 call = _arrayMax _arrayDim)
    }
  } function ArrayDeserializer[172879](?).endDim[172773](arg _mt[172777]:_MT[201], ref arg this[172775]:ArrayDeserializer[172879](?)) : _unknown[42] throws "method" "primary method"
  {
    (172780 call -= _arrayDim 1)
    (172784 call = _first 1)
  } function ArrayDeserializer[172879](?).readElement[172790](arg _mt[172796]:_MT[201], ref arg this[172792]:ArrayDeserializer[172879](?), arg eltType[172794]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172815 call _cond_test(172812 call ! _first))
    {
      { scopeless
        (172804 call(172801 call . reader c"readLiteral") " ")
      }
    }
    {
      { scopeless
        (172807 call = _first 0)
      }
    }
    (172821 return(172826 call(172823 call . reader c"read") eltType))
  }
  { scopeless type
    eltType
  } function ArrayDeserializer[172879](?).readElement[172831](arg _mt[172837]:_MT[201], ref arg this[172833]:ArrayDeserializer[172879](?), ref arg element[172835]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172855 call _cond_test(172852 call ! _first))
    {
      { scopeless
        (172844 call(172841 call . reader c"readLiteral") " ")
      }
    }
    {
      { scopeless
        (172847 call = _first 0)
      }
    }
    (172865 call(172862 call . reader c"read") element)
  } function ArrayDeserializer[172879](?).endArray[172869](arg _mt[172873]:_MT[201], arg this[172871]:ArrayDeserializer[172879](?)) : _unknown[42] throws "method" "primary method"
  {
  } function defaultDeserializer[173096].startMap[172881](arg _mt[172889]:_MT[201], arg this[172883]:defaultDeserializer[173096], arg reader[172886] :
  fileReader) : _unknown[42] throws "method" "primary method"
  {
    (172896 call(172893 call . reader c"readLiteral") "{")
    (172898 return(172899 'new'(172901 call MapDeserializer reader)))
  } type MapDeserializer[173093](?) unknown reader[172907] unknown _first[172911] 1 bool function MapDeserializer[173093](?).readKey[172916](arg _mt[172922]:_MT[201], ref arg this[172918]:MapDeserializer[173093](?), arg keyType[172920]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172941 call _cond_test(172938 call ! _first))
    {
      { scopeless
        (172930 call(172927 call . reader c"readLiteral") ", ")
      }
    }
    {
      { scopeless
        (172933 call = _first 0)
      }
    }
    (172947 return(172952 call(172949 call . reader c"read") keyType))
  }
  { scopeless type
    keyType
  } function MapDeserializer[173093](?).readKey[172957](arg _mt[172963]:_MT[201], ref arg this[172959]:MapDeserializer[173093](?), ref arg key[172961]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(172981 call _cond_test(172978 call ! _first))
    {
      { scopeless
        (172970 call(172967 call . reader c"readLiteral") ", ")
      }
    }
    {
      { scopeless
        (172973 call = _first 0)
      }
    }
    (172991 call(172988 call . reader c"read") key)
  } function MapDeserializer[173093](?).readValue[172995](arg _mt[173001]:_MT[201], arg this[172997]:MapDeserializer[173093](?), arg valType[172999]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (173009 call(173006 call . reader c"readLiteral") ": ")
    (173011 return(173016 call(173013 call . reader c"read") valType))
  }
  { scopeless type
    valType
  } function MapDeserializer[173093](?).readValue[173021](arg _mt[173027]:_MT[201], arg this[173023]:MapDeserializer[173093](?), ref arg value[173025]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (173034 call(173031 call . reader c"readLiteral") ": ")
    (173040 call(173037 call . reader c"read") value)
  } function MapDeserializer[173093](?).endMap[173044](arg _mt[173048]:_MT[201], arg this[173046]:MapDeserializer[173093](?)) : _unknown[42] throws "method" "primary method"
  {
    (173055 call(173052 call . reader c"readLiteral") "}")
  } function MapDeserializer[173093](?).hasMore[173059](arg _mt[173063]:_MT[201], arg this[173061]:MapDeserializer[173093](?)) : _unknown[42] throws "method" "primary method"
  {
    (173071 call(173068 call . reader c"mark"))
    Defer
    {
      { scopeless
        (173076 call(173073 call . reader c"revert"))
      }
    }
    (173080 return(173081 call !(173087 call(173084 call . reader c"matchLiteral") "}")))
  }
  { scopeless type
    bool
  }
  { scopeless
    unknown warnBinaryStructured[173099] "config" "param" "@unstable" 1 bool
    (173103 'end of statement')
  }
  function warnBinary[173104](arg t[173106]:_any[141](?), param arg depth[173109] :
  int[10]) : _unknown[42] "private"
  {
    if(173146 call _cond_test warnBinaryStructured)
    {
      if(173141 call _cond_test(173126 call ||(173128 call ||(173130 call == t string[244])(173134 call == t bytes[232]))(173139 call isClassType t)))
      {
        { scopeless
          unknown msg[173116] "param" "binary(De)Serializer's format for strings, bytes, and classes no longer includes length-bytes or nilability-bytes. Recompile w
          (173121 'end of statement')
        }
        (173123 call compilerWarning msg depth)
      }
    }
  }
  function warnBinaryRead[173152](arg t[173154]:_any[141](?), param arg depth[173157] :
  int[10]) : _unknown[42] throws "private"
  {
    if(173182 call _cond_test warnBinaryStructured)
    {
      if(173177 call _cond_test(173175 call isClassType t))
      {
        { scopeless
          unknown msg[173164] "param" "binary(De)Serializer's format for classes no longer includes nilability-bytes. Recompile with ``-swarnBinaryStructured=false``
          (173169 'end of statement')
        }
        (173171 call compilerWarning msg depth)
      }
    }
    if(173204 call _cond_test(173194 call ||(173196 call == t string[244])(173200 call == t bytes[232])))
    {
      (173187 'throw'(173188 'new'(173190 call IllegalArgumentError "binaryDeserializer does not support reading 'string' or 'bytes'. Please use a method like 'fileReader.readBinary' instead.")))
    }
  }
  type binarySerializer[174153] const endian[173212] "const"(173215 call . endianness c"native") endianness const _structured[173221] "const" 0 function binarySerializer[174153]._oldWrite[173225](arg _mt[173240]:_MT[201], arg this[173227]:binarySerializer[174153], arg ch[173232] :
  (173230 call fileWriter ?[227]), const arg val[173237] :
  unknown t[173235]) : _unknown[42] throws "method" "primary method"
  {
    { scopeless
      unknown _def[173244](173245 'new'(173247 call defaultSerializer))
      (173249 'end of statement')
    }
    { scopeless
      unknown dc[173251](173258 call(173255 call . ch c"withSerializer") _def)
      (173261 'end of statement')
    }
    { scopeless
      unknown st[173263](173270 call(173267 call . dc c"_styleInternal"))
      (173272 'end of statement')
    }
    { scopeless
      unknown orig[173274] st
      (173277 'end of statement')
    }
    Defer
    {
      {
        (173285 call(173282 call . dc c"_set_styleInternal") orig)
      }
    }
    (173289 call =(173292 call . st c"binary") 1)
    (173296 call =(173299 call . st c"byteorder")(173302 call + 1(173305 call : endian(173309 call uint[86] 8))))
    if(173344 call _cond_test _structured)
    {
      { scopeless
        (173311 call =(173314 call . st c"str_style")(173317 call :(173320 call . iostringstyleInternal c"lenVb_data")(173324 call int[10] 64)))
      }
    }
    {
      { scopeless
        (173327 call =(173330 call . st c"str_style")(173333 call :(173336 call . iostringstyleInternal c"data_toeof")(173340 call int[10] 64)))
      }
    }
    (173354 call(173351 call . dc c"_set_styleInternal") st)
    (173360 call(173357 call . dc c"_writeOne")(173362 call . _iokind c"dynamic") val here)
  } function binarySerializer[174153].serializeValue[173369](arg _mt[173388]:_MT[201], ref arg this[173371]:binarySerializer[174153], arg writer[173380] :
  (173374 call fileWriter(serializerType = binarySerializer)(locking = 0) ?[227]), const arg val[173385] :
  unknown t[173383]) : _unknown[42] throws "method" "primary method"
  {
    if(173588 call _cond_test(173586 call isNumericType t))
    {
      {
        unknown tmp[173454] "expr temp" "maybe param" "maybe type" "temp"
        (173456 'move' tmp[173454] endian)
        if(173461 call _cond_test(173458 call == tmp[173454](173396 call . endianness c"native")))
        {
          { scopeless
            (173406 call(173403 call . writer c"writeBinary") val(173409 call . endianness c"native"))
          }
        }
        {
          if(173467 call _cond_test(173464 call == tmp[173454](173417 call . endianness c"little")))
          {
            { scopeless
              (173425 call(173422 call . writer c"writeBinary") val(173428 call . endianness c"little"))
            }
          }
          {
            if(173474 call _cond_test(173471 call == tmp[173454](173436 call . endianness c"big")))
            {
              { scopeless
                (173444 call(173441 call . writer c"writeBinary") val(173447 call . endianness c"big"))
              }
            }
          }
        }
      }
    }
    {
      { scopeless
        if(173580 call _cond_test(173560 call ||(173562 call ||(173564 call ||(173566 call == t string[244])(173571 call isEnumType t))(173573 call == t bytes[232]))(173578 call isBoolType t)))
        {
          (173480 call _oldWrite writer val)
        }
        {
          { scopeless
            if(173555 call _cond_test(173551 call == t nothing))
            {
            }
            {
              { scopeless
                if(173547 call _cond_test(173545 call isClassType t))
                {
                  if(173530 call _cond_test(173526 call == val nil[32]))
                  {
                    if(173496 call _cond_test _structured)
                    {
                      { scopeless
                        (173492 call(173489 call . writer c"writeByte") 0)
                      }
                    }
                  }
                  {
                    if(173510 call _cond_test _structured)
                    {
                      { scopeless
                        (173506 call(173503 call . writer c"writeByte") 1)
                      }
                    }
                    (173521 call(173518 call .(173515 call postfix! val) c"serialize")(writer = writer)(serializer = this))
                  }
                }
                {
                  (173539 call(173536 call . val c"serialize")(writer = writer)(serializer = this))
                }
              }
            }
          }
        }
      }
    }
  } function binarySerializer[174153].startClass[173595](arg _mt[173613]:_MT[201], arg this[173597]:binarySerializer[174153], arg writer[173602] :
  (173600 call fileWriter ?[227]), arg name[173606] :
  string[244], arg size[173610] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (173616 return(173617 'new'(173619 call AggregateSerializer writer)))
  } function binarySerializer[174153].startRecord[173623](arg _mt[173641]:_MT[201], arg this[173625]:binarySerializer[174153], arg writer[173630] :
  (173628 call fileWriter ?[227]), arg name[173634] :
  string[244], arg size[173638] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (173644 return(173645 'new'(173647 call AggregateSerializer writer)))
  } type AggregateSerializer[173724] unknown writer[173653](173655 call fileWriter 0 binarySerializer) function AggregateSerializer[173724].writeField[173660](arg _mt[173673]:_MT[201], arg this[173662]:AggregateSerializer[173724], arg name[173665] :
  string[244], const arg field[173670] :
  unknown T[173668]) : _unknown[42] throws "method" "primary method"
  {
    (173680 call(173677 call . writer c"write") field)
  } function AggregateSerializer[173724].startClass[173684](arg _mt[173698]:_MT[201], arg this[173686]:AggregateSerializer[173724], arg writer[173688]:_any[141](?), arg name[173691] :
  string[244], arg size[173695] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (173701 return this)
  } function AggregateSerializer[173724].endClass[173705](arg _mt[173709]:_MT[201], arg this[173707]:AggregateSerializer[173724]) : _unknown[42] throws "method" "primary method"
  {
  } function AggregateSerializer[173724].endRecord[173714](arg _mt[173718]:_MT[201], arg this[173716]:AggregateSerializer[173724]) : _unknown[42] throws "method" "primary method"
  {
  } function binarySerializer[174153].startTuple[173726](arg _mt[173740]:_MT[201], arg this[173728]:binarySerializer[174153], arg writer[173733] :
  (173731 call fileWriter ?[227]), arg size[173737] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (173743 return(173744 'new'(173746 call TupleSerializer writer)))
  } type TupleSerializer[173789] unknown writer[173752](173754 call fileWriter 0 binarySerializer) function TupleSerializer[173789].writeElement[173759](arg _mt[173768]:_MT[201], arg this[173761]:TupleSerializer[173789], const arg element[173765] :
  unknown T[173763]) : _unknown[42] throws "method" "primary method"
  {
    (173775 call(173772 call . writer c"write") element)
  } function TupleSerializer[173789].endTuple[173779](arg _mt[173783]:_MT[201], arg this[173781]:TupleSerializer[173789]) : _unknown[42] throws "method" "primary method"
  {
  } function binarySerializer[174153].startList[173791](arg _mt[173805]:_MT[201], arg this[173793]:binarySerializer[174153], arg writer[173798] :
  (173796 call fileWriter ?[227]), arg size[173802] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (173812 call(173809 call . writer c"write") size)
    (173814 return(173815 'new'(173817 call ListSerializer writer)))
  } type ListSerializer[173859] unknown writer[173823](173825 call fileWriter 0 binarySerializer) function ListSerializer[173859].writeElement[173830](arg _mt[173838]:_MT[201], arg this[173832]:ListSerializer[173859], const arg element[173835] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    (173845 call(173842 call . writer c"write") element)
  } function ListSerializer[173859].endList[173849](arg _mt[173853]:_MT[201], arg this[173851]:ListSerializer[173859]) : _unknown[42] throws "method" "primary method"
  {
  } function binarySerializer[174153].startArray[173861](arg _mt[173875]:_MT[201], arg this[173863]:binarySerializer[174153], arg writer[173868] :
  (173866 call fileWriter ?[227]), arg size[173872] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (173878 return(173879 'new'(173881 call ArraySerializer writer endian)))
  } type ArraySerializer[174061] unknown writer[173888](173890 call fileWriter 0 binarySerializer) const endian[173896] "const" endianness function ArraySerializer[174061].startDim[173900](arg _mt[173908]:_MT[201], arg this[173902]:ArraySerializer[174061], arg size[173905] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
  } function ArraySerializer[174061].endDim[173913](arg _mt[173917]:_MT[201], arg this[173915]:ArraySerializer[174061]) : _unknown[42] throws "method" "primary method"
  {
  } function ArraySerializer[174061].writeElement[173922](arg _mt[173930]:_MT[201], arg this[173924]:ArraySerializer[174061], const arg element[173927] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    (173937 call(173934 call . writer c"write") element)
  } function ArraySerializer[174061].writeBulkElements[173941](arg _mt[173956]:_MT[201], arg this[173943]:ArraySerializer[174061], arg data[173949] :
  (173946 call c_ptr unknown eltType[173947]), arg numElements[173953] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    if(174044 call _cond_test(174042 call isNativeEndianness endian))
    {
      { scopeless
        const n[173964] "const"(173965 call *(173968 call c_sizeof eltType) numElements)
        (173972 'end of statement')
      }
      (173977 call(173974 call . writer c"writeBinary") data(173983 call(173980 call . n c"safeCast") int[10]))
    }
    {
      {
        unknown _indexOfInterest[174003] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[174004] "expr temp" "temp"
        (174013 'move' _iterator[174004](174011 call _getIterator(174019 call chpl_direct_range_iter 0(174017 call chpl__nudgeHighBound numElements))))
        Defer
        {
          {
            (174034 call _freeIterator _iterator[174004])
          }
        }
        { scopeless type
          (174024 'move' _indexOfInterest[174003](174021 call iteratorIndex _iterator[174004]))
        }
        ForLoop[174005]
        {
          unknown i[173986] "index var" "insert auto destroy"
          (174029 'move' i[173986] _indexOfInterest[174003])
          { scopeless
            (173998 call(173995 call . writer c"write")(174000 call data i))
          }
          label _continueLabel[174008]
          _indexOfInterest[174003]
          _iterator[174004]
        }
        label _breakLabel[174009]
      }
    }
  }
  where {
    (173959 call isNumericType eltType)
  } function ArraySerializer[174061].endArray[174051](arg _mt[174055]:_MT[201], arg this[174053]:ArraySerializer[174061]) : _unknown[42] throws "method" "primary method"
  {
  } function binarySerializer[174153].startMap[174063](arg _mt[174077]:_MT[201], arg this[174065]:binarySerializer[174153], arg writer[174070] :
  (174068 call fileWriter ?[227]), arg size[174074] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    (174084 call(174081 call . writer c"write") size)
    (174086 return(174087 'new'(174089 call MapSerializer writer)))
  } type MapSerializer[174150] unknown writer[174095](174097 call fileWriter 0 binarySerializer) function MapSerializer[174150].writeKey[174102](arg _mt[174110]:_MT[201], arg this[174104]:MapSerializer[174150], const arg key[174107] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    (174117 call(174114 call . writer c"write") key)
  } function MapSerializer[174150].writeValue[174121](arg _mt[174129]:_MT[201], arg this[174123]:MapSerializer[174150], const arg val[174126] :
  ?[227]) : _unknown[42] throws "method" "primary method"
  {
    (174136 call(174133 call . writer c"write") val)
  } function MapSerializer[174150].endMap[174140](arg _mt[174144]:_MT[201], arg this[174142]:MapSerializer[174150]) : _unknown[42] throws "method" "primary method"
  {
  }
  type binaryDeserializer[175632] const endian[174157] "const"(174168 call .(174165 call . IO c"endianness") c"native")(174161 call . IO c"endianness") unknown _structured[174174] 0 function binaryDeserializer[175632].init[174178](arg _mt[174203]:_MT[201], arg this[174180]:binaryDeserializer[175632], arg endian[174193] :
  (174183 call . IO c"endianness") =
  (174190 call .(174187 call . IO c"endianness") c"native"), arg _structured[174199] :
  bool =
  0) : _unknown[42] "method" "primary method"
  {
    (174206 call =(174211 call . this c"endian") endian)
    (174215 call =(174220 call . this c"_structured") _structured)
    (174228 call(174225 call . this c"chpl__initThisType"))
  } function binaryDeserializer[175632]._oldRead[174231](arg _mt[174246]:_MT[201], arg this[174233]:binaryDeserializer[175632], arg ch[174238] :
  (174236 call fileReader ?[227]), ref arg val[174243] :
  unknown t[174241]) : _unknown[42] throws "method" "primary method"
  {
    { scopeless
      unknown _def[174250](174251 'new'(174253 call defaultDeserializer))
      (174255 'end of statement')
    }
    { scopeless
      unknown dc[174257](174264 call(174261 call . ch c"withDeserializer") _def)
      (174267 'end of statement')
    }
    { scopeless
      unknown st[174269](174274 call(174271 call . dc c"_styleInternal"))
      (174276 'end of statement')
    }
    { scopeless
      unknown orig[174278] st
      (174281 'end of statement')
    }
    Defer
    {
      {
        (174287 call(174284 call . dc c"_set_styleInternal") orig)
      }
    }
    (174291 call =(174294 call . st c"binary") 1)
    (174298 call =(174301 call . st c"byteorder")(174304 call + 1(174307 call : endian(174311 call uint[86] 8))))
    if(174346 call _cond_test _structured)
    {
      { scopeless
        (174313 call =(174316 call . st c"str_style")(174319 call :(174322 call . iostringstyleInternal c"lenVb_data")(174326 call int[10] 64)))
      }
    }
    {
      { scopeless
        (174329 call =(174332 call . st c"str_style")(174335 call :(174338 call . iostringstyleInternal c"data_toeof")(174342 call int[10] 64)))
      }
    }
    (174356 call(174353 call . dc c"_set_styleInternal") st)
    (174362 call(174359 call . dc c"_readOne")(174364 call . _iokind c"dynamic") val here)
  } function binaryDeserializer[175632]._checkClassNil[174371](arg _mt[174383]:_MT[201], arg this[174373]:binaryDeserializer[175632], arg reader[174378] :
  (174376 call fileReader ?[227]), arg readType[174381]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    { scopeless
      const notNil[174388] "const"(174398 IfExpr  _structured then
      { scopeless
        (174396 call(174393 call . reader c"readByte"))
      } else
      { scopeless
        1
      } )
      (174402 'end of statement')
    }
    if(174444 call _cond_test(174440 call == notNil 0))
    {
      if(174418 call _cond_test(174416 call isNilableClassType readType))
      {
        { scopeless
          (174404 return 1)
        }
      }
      {
        { scopeless
          (174407 'throw'(174408 'new'(174410 call BadFormatError "cannot read nil class into non-nilable class")))
        }
      }
    }
    {
      { scopeless
        if(174436 call _cond_test(174432 call != notNil 1))
        {
          (174425 'throw'(174426 'new'(174428 call BadFormatError "invalid binary format found for class nilability")))
        }
      }
    }
    (174449 return 0)
  }
  { scopeless type
    bool
  } function binaryDeserializer[175632].deserializeType[174454](arg _mt[174466]:_MT[201], ref arg this[174456]:binaryDeserializer[175632], arg reader[174461] :
  (174459 call fileReader ?[227]), arg readType[174464]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(174499 call _cond_test(174497 call isClassType readType))
    {
      { scopeless
        unknown isNil[174472](174474 call _checkClassNil reader readType)
        (174478 'end of statement')
      }
      if(174491 call _cond_test(174485 call &&(174488 call isNilableClassType readType) isNil))
      {
        { scopeless
          (174479 return(174480 call : nil[32] readType))
        }
      }
    }
    if(174709 call _cond_test(174707 call isNumericType readType))
    {
      { scopeless
        unknown x[174505] readType
        (174508 'end of statement')
      }
      { scopeless
        unknown ret[174510] bool
        (174513 'end of statement')
      }
      {
        unknown tmp[174585] "expr temp" "maybe param" "maybe type" "temp"
        (174587 'move' tmp[174585] endian)
        if(174592 call _cond_test(174589 call == tmp[174585](174518 call . endianness c"native")))
        {
          { scopeless
            (174522 call = ret(174531 call(174528 call . reader c"readBinary") x(174534 call . endianness c"native")))
          }
        }
        {
          if(174598 call _cond_test(174595 call == tmp[174585](174542 call . endianness c"little")))
          {
            { scopeless
              (174546 call = ret(174553 call(174550 call . reader c"readBinary") x(174556 call . endianness c"little")))
            }
          }
          {
            if(174605 call _cond_test(174602 call == tmp[174585](174564 call . endianness c"big")))
            {
              { scopeless
                (174568 call = ret(174575 call(174572 call . reader c"readBinary") x(174578 call . endianness c"big")))
              }
            }
          }
        }
      }
      if(174620 call _cond_test(174617 call ! ret))
      {
        { scopeless
          (174609 'throw'(174610 'new'(174612 call EofError)))
        }
      }
      {
        { scopeless
          (174614 return x)
        }
      }
    }
    {
      { scopeless
        if(174701 call _cond_test(174683 call ||(174685 call ||(174687 call ||(174690 call isBoolType readType)(174693 call isEnumType readType))(174696 call isStringType readType))(174699 call isBytesType readType)))
        {
          { scopeless
            unknown x[174628] readType
            (174631 'end of statement')
          }
          (174633 call _oldRead reader x)
          (174636 return x)
        }
        {
          { scopeless
            if(174678 call _cond_test(174674 call == readType nothing))
            {
            }
            {
              { scopeless
                if(174670 call _cond_test(174659 call ||(174662 call canResolveTypeMethod readType "deserializeFrom" reader this)(174668 call isArrayType readType)))
                {
                  (174640 return(174645 call(174642 call . readType c"deserializeFrom")(reader = reader)(deserializer = this)))
                }
                {
                  (174651 return(174652 'new'(174654 call readType(reader = reader)(deserializer = this))))
                }
              }
            }
          }
        }
      }
    }
  }
  { scopeless type
    readType
  } function binaryDeserializer[175632].deserializeValue[174717](arg _mt[174732]:_MT[201], ref arg this[174719]:binaryDeserializer[175632], arg reader[174724] :
  (174722 call fileReader ?[227]), ref arg val[174729] :
  unknown readType[174727]) : _unknown[42] throws "method" "primary method"
  {
    if(174764 call _cond_test(174762 call isClassType readType))
    {
      { scopeless
        unknown isNil[174738](174740 call _checkClassNil reader readType)
        (174744 'end of statement')
      }
      if(174756 call _cond_test(174750 call &&(174753 call isNilableClassType readType) isNil))
      {
        { scopeless
          (174745 call = val nil[32])
        }
      }
    }
    if(174794 call _cond_test(174787 call canResolveMethod val "deserialize" reader this))
    {
      (174773 call(174770 call . val c"deserialize")(reader = reader)(deserializer = this))
    }
    {
      (174779 call = val(174783 call deserializeType reader readType))
    }
  }
  { scopeless type
    void[4]
  } function binaryDeserializer[175632].startClass[174801](arg _mt[174815]:_MT[201], arg this[174803]:binaryDeserializer[175632], arg reader[174808] :
  (174806 call fileReader ?[227]), arg name[174812] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    (174818 return(174819 'new'(174821 call AggregateDeserializer reader)))
  } function binaryDeserializer[175632].startRecord[174825](arg _mt[174839]:_MT[201], arg this[174827]:binaryDeserializer[175632], arg reader[174832] :
  (174830 call fileReader ?[227]), arg name[174836] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    (174842 return(174843 'new'(174845 call AggregateDeserializer reader)))
  } type AggregateDeserializer[174939] unknown reader[174851](174853 call fileReader 0 binaryDeserializer) function AggregateDeserializer[174939].readField[174858](arg _mt[174868]:_MT[201], arg this[174860]:AggregateDeserializer[174939], arg name[174863] :
  string[244], arg fieldType[174866]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (174872 return(174877 call(174874 call . reader c"read") fieldType))
  }
  { scopeless type
    fieldType
  } function AggregateDeserializer[174939].readField[174882](arg _mt[174892]:_MT[201], arg this[174884]:AggregateDeserializer[174939], arg name[174887] :
  string[244], ref arg field[174890]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (174899 call(174896 call . reader c"read") field)
  } function AggregateDeserializer[174939].startClass[174903](arg _mt[174913]:_MT[201], arg this[174905]:AggregateDeserializer[174939], arg reader[174907]:_any[141](?), arg name[174910] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    (174916 return this)
  } function AggregateDeserializer[174939].endClass[174920](arg _mt[174924]:_MT[201], arg this[174922]:AggregateDeserializer[174939]) : _unknown[42] throws "method" "primary method"
  {
  } function AggregateDeserializer[174939].endRecord[174929](arg _mt[174933]:_MT[201], arg this[174931]:AggregateDeserializer[174939]) : _unknown[42] throws "method" "primary method"
  {
  } function binaryDeserializer[175632].startTuple[174941](arg _mt[174951]:_MT[201], arg this[174943]:binaryDeserializer[175632], arg reader[174948] :
  (174946 call fileReader ?[227])) : _unknown[42] throws "method" "primary method"
  {
    (174954 return(174955 'new'(174957 call TupleDeserializer reader)))
  } type TupleDeserializer[175017] unknown reader[174963](174965 call fileReader 0 binaryDeserializer) function TupleDeserializer[175017].readElement[174970](arg _mt[174976]:_MT[201], arg this[174972]:TupleDeserializer[175017], arg eltType[174974]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (174980 return(174985 call(174982 call . reader c"read") eltType))
  }
  { scopeless type
    eltType
  } function TupleDeserializer[175017].readElement[174990](arg _mt[174996]:_MT[201], arg this[174992]:TupleDeserializer[175017], ref arg element[174994]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (175003 call(175000 call . reader c"read") element)
  } function TupleDeserializer[175017].endTuple[175007](arg _mt[175011]:_MT[201], arg this[175009]:TupleDeserializer[175017]) : _unknown[42] throws "method" "primary method"
  {
  } function binaryDeserializer[175632].startList[175019](arg _mt[175029]:_MT[201], arg this[175021]:binaryDeserializer[175632], arg reader[175026] :
  (175024 call fileReader ?[227])) : _unknown[42] throws "method" "primary method"
  {
    (175032 return(175033 'new'(175035 call ListDeserializer reader(175041 call(175038 call . reader c"read") uint[86]))))
  } type ListDeserializer[175179] unknown reader[175047](175049 call fileReader 0 binaryDeserializer) unknown _numElements[175055] uint[86] function ListDeserializer[175179].readElement[175059](arg _mt[175065]:_MT[201], ref arg this[175061]:ListDeserializer[175179], arg eltType[175063]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(175081 call _cond_test(175077 call <= _numElements 0))
    {
      { scopeless
        (175069 'throw'(175070 'new'(175072 call BadFormatError "no more list elements remain")))
      }
    }
    (175086 call -= _numElements 1)
    (175090 return(175095 call(175092 call . reader c"read") eltType))
  }
  { scopeless type
    eltType
  } function ListDeserializer[175179].readElement[175100](arg _mt[175106]:_MT[201], ref arg this[175102]:ListDeserializer[175179], ref arg element[175104]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(175119 call _cond_test(175115 call <= _numElements 0))
    {
      { scopeless
        (175109 'throw'(175110 'new'(175112 call BadFormatError "no more list elements remain")))
      }
    }
    (175124 call -= _numElements 1)
    (175132 call(175129 call . reader c"read") element)
  } function ListDeserializer[175179].endList[175136](arg _mt[175140]:_MT[201], arg this[175138]:ListDeserializer[175179]) : _unknown[42] throws "method" "primary method"
  {
    if(175155 call _cond_test(175151 call != _numElements 0))
    {
      { scopeless
        (175143 'throw'(175144 'new'(175146 call BadFormatError "read too few elements for list")))
      }
    }
  } function ListDeserializer[175179].hasMore[175162](arg _mt[175166]:_MT[201], arg this[175164]:ListDeserializer[175179]) : _unknown[42] throws "method" "primary method"
  {
    (175170 return(175171 call > _numElements 0))
  }
  { scopeless type
    bool
  } function binaryDeserializer[175632].startArray[175181](arg _mt[175191]:_MT[201], arg this[175183]:binaryDeserializer[175632], arg reader[175188] :
  (175186 call fileReader ?[227])) : _unknown[42] throws "method" "primary method"
  {
    (175194 return(175195 'new'(175197 call ArrayDeserializer reader endian)))
  } type ArrayDeserializer[175434] unknown reader[175204](175206 call fileReader 0 binaryDeserializer) const endian[175212] "const" endianness function ArrayDeserializer[175434].startDim[175216](arg _mt[175220]:_MT[201], arg this[175218]:ArrayDeserializer[175434]) : _unknown[42] throws "method" "primary method"
  {
  } function ArrayDeserializer[175434].endDim[175225](arg _mt[175229]:_MT[201], arg this[175227]:ArrayDeserializer[175434]) : _unknown[42] throws "method" "primary method"
  {
  } function ArrayDeserializer[175434].readElement[175234](arg _mt[175240]:_MT[201], arg this[175236]:ArrayDeserializer[175434], arg eltType[175238]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (175244 return(175249 call(175246 call . reader c"read") eltType))
  }
  { scopeless type
    eltType
  } function ArrayDeserializer[175434].readElement[175254](arg _mt[175260]:_MT[201], arg this[175256]:ArrayDeserializer[175434], ref arg element[175258]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (175267 call(175264 call . reader c"read") element)
  } function ArrayDeserializer[175434].readBulkElements[175271](arg _mt[175286]:_MT[201], arg this[175273]:ArrayDeserializer[175434], arg data[175279] :
  (175276 call c_ptr unknown eltType[175277]), arg numElements[175283] :
  int[10]) : _unknown[42] throws "method" "primary method"
  {
    if(175417 call _cond_test(175415 call isNativeEndianness endian))
    {
      { scopeless
        const n[175294] "const"(175295 call *(175298 call c_sizeof eltType) numElements)
        (175302 'end of statement')
      }
      { scopeless
        const got[175304] "const"(175309 call(175306 call . reader c"readBinary") data(175315 call(175312 call . n c"safeCast") int[10]))
        (175318 'end of statement')
      }
      if(175328 call _cond_test(175324 call < got n))
      {
        { scopeless
          (175319 'throw'(175321 call createSystemOrChplError EEOF))
        }
      }
    }
    {
      {
        unknown _indexOfInterest[175376] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[175377] "expr temp" "temp"
        (175386 'move' _iterator[175377](175384 call _getIterator(175392 call chpl_direct_range_iter 0(175390 call chpl__nudgeHighBound numElements))))
        Defer
        {
          {
            (175407 call _freeIterator _iterator[175377])
          }
        }
        { scopeless type
          (175397 'move' _indexOfInterest[175376](175394 call iteratorIndex _iterator[175377]))
        }
        ForLoop[175378]
        {
          unknown i[175334] "index var" "insert auto destroy"
          (175402 'move' i[175334] _indexOfInterest[175376])
          {
            Try
            {
              {
                if(175359 call _cond_test(175349 call !(175355 call(175352 call . reader c"read")(175357 call data i))))
                {
                  { scopeless
                    (175344 'throw'(175346 call createSystemOrChplError EEOF))
                  }
                }
              }
            }
            Catch e : UnexpectedEofError
            {
              unknown e[175372]
              (175367 'throw'(175369 call createSystemOrChplError EEOF))
            }
          }
          label _continueLabel[175381]
          _indexOfInterest[175376]
          _iterator[175377]
        }
        label _breakLabel[175382]
      }
    }
  }
  where {
    (175289 call isNumericType eltType)
  } function ArrayDeserializer[175434].endArray[175424](arg _mt[175428]:_MT[201], arg this[175426]:ArrayDeserializer[175434]) : _unknown[42] throws "method" "primary method"
  {
  } function binaryDeserializer[175632].startMap[175436](arg _mt[175446]:_MT[201], arg this[175438]:binaryDeserializer[175632], arg reader[175443] :
  (175441 call fileReader ?[227])) : _unknown[42] throws "method" "primary method"
  {
    (175449 return(175450 'new'(175452 call MapDeserializer reader(175458 call(175455 call . reader c"read") uint[86]))))
  } type MapDeserializer[175629](?) unknown reader[175464] unknown _numElements[175468] uint[86] function MapDeserializer[175629](?).readKey[175472](arg _mt[175478]:_MT[201], ref arg this[175474]:MapDeserializer[175629](?), arg keyType[175476]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(175494 call _cond_test(175490 call <= _numElements 0))
    {
      { scopeless
        (175482 'throw'(175483 'new'(175485 call BadFormatError "no more map elements remain!")))
      }
    }
    (175499 call -= _numElements 1)
    (175503 return(175508 call(175505 call . reader c"read") keyType))
  }
  { scopeless type
    keyType
  } function MapDeserializer[175629](?).readKey[175513](arg _mt[175519]:_MT[201], ref arg this[175515]:MapDeserializer[175629](?), ref arg key[175517]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(175532 call _cond_test(175528 call <= _numElements 0))
    {
      { scopeless
        (175522 'throw'(175523 'new'(175525 call BadFormatError "no more map elements remain!")))
      }
    }
    (175537 call -= _numElements 1)
    (175545 call(175542 call . reader c"read") key)
  } function MapDeserializer[175629](?).readValue[175549](arg _mt[175555]:_MT[201], arg this[175551]:MapDeserializer[175629](?), arg valType[175553]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (175559 return(175564 call(175561 call . reader c"read") valType))
  }
  { scopeless type
    valType
  } function MapDeserializer[175629](?).readValue[175569](arg _mt[175575]:_MT[201], arg this[175571]:MapDeserializer[175629](?), ref arg value[175573]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (175582 call(175579 call . reader c"read") value)
  } function MapDeserializer[175629](?).endMap[175586](arg _mt[175590]:_MT[201], arg this[175588]:MapDeserializer[175629](?)) : _unknown[42] throws "method" "primary method"
  {
    if(175605 call _cond_test(175601 call != _numElements 0))
    {
      { scopeless
        (175593 'throw'(175594 'new'(175596 call BadFormatError "failed to read all expected elements in map")))
      }
    }
  } function MapDeserializer[175629](?).hasMore[175612](arg _mt[175616]:_MT[201], arg this[175614]:MapDeserializer[175629](?)) : _unknown[42] throws "method" "primary method"
  {
    (175620 return(175621 call > _numElements 0))
  }
  { scopeless type
    bool
  }
  function _unknown[42].=[175634](arg _mt[175648]:_MT[201], arg this[175637] :
  fileReader, ref arg lhs[175641] :
  fileReader, arg rhs[175645] :
  fileReader) : _unknown[42] "assignop" "method" "operator"
  {
    {
      const tmp[175665] "const" "temp"
      (175666 'move' tmp[175665](175663 'deref'(175662 '_wide_get_locale'(175652 call . rhs c"_home"))))
      {
        (175657 call qio_channel_retain(175659 call . rhs c"_channel_internal"))
      }
      (175669 'elided on block' 0 tmp[175665])
    }
    {
      const tmp[175687] "const" "temp"
      (175688 'move' tmp[175687](175685 'deref'(175684 '_wide_get_locale'(175674 call . lhs c"_home"))))
      {
        (175679 call qio_channel_release(175681 call . lhs c"_channel_internal"))
      }
      (175691 'elided on block' 0 tmp[175687])
    }
    (175695 call =(175698 call . lhs c"_home")(175702 call . rhs c"_home"))
    (175705 call =(175708 call . lhs c"_channel_internal")(175712 call . rhs c"_channel_internal"))
    if(175748 call _cond_test(175741 call !=(175744 call . rhs c"_deserializer") nil[32]))
    {
      { scopeless
        (175715 call =(175720 call . lhs c"_deserializer")(175723 'new'(_chpl_manager = _shared[242](?))(175727 call _serializeWrapper(175731 call . rhs c"deserializerType")(175737 call . rhs c"deserializer"))))
      }
    }
  }
  function _unknown[42].=[175755](arg _mt[175769]:_MT[201], arg this[175758] :
  fileWriter, ref arg lhs[175762] :
  fileWriter, arg rhs[175766] :
  fileWriter) : _unknown[42] "assignop" "method" "operator"
  {
    {
      const tmp[175786] "const" "temp"
      (175787 'move' tmp[175786](175784 'deref'(175783 '_wide_get_locale'(175773 call . rhs c"_home"))))
      {
        (175778 call qio_channel_retain(175780 call . rhs c"_channel_internal"))
      }
      (175790 'elided on block' 0 tmp[175786])
    }
    {
      const tmp[175808] "const" "temp"
      (175809 'move' tmp[175808](175806 'deref'(175805 '_wide_get_locale'(175795 call . lhs c"_home"))))
      {
        (175800 call qio_channel_release(175802 call . lhs c"_channel_internal"))
      }
      (175812 'elided on block' 0 tmp[175808])
    }
    (175816 call =(175819 call . lhs c"_home")(175823 call . rhs c"_home"))
    (175826 call =(175829 call . lhs c"_channel_internal")(175833 call . rhs c"_channel_internal"))
    if(175872 call _cond_test(175865 call !=(175868 call . rhs c"_serializer") nil[32]))
    {
      { scopeless
        (175836 call =(175841 call . lhs c"_serializer")(175844 'new'(_chpl_manager = _shared[242](?))(175848 call _serializeWrapper(175852 call . rhs c"serializerType")(175861 call .(175855 call postfix!(175858 call . rhs c"_serializer")) c"member"))))
      }
    }
  }
  function _unknown[42].init[175879](arg _mt[175891]:_MT[201], arg this[175882] :
  fileReader, param arg locking[175886] :
  bool, arg deserializerType[175889]:_any[141](?)) : _unknown[42] "method"
  {
    (175894 call =(175899 call . this c"locking") locking)
    (175903 call =(175906 call . this c"deserializerType") deserializerType)
  }
  function _unknown[42].init[175912](arg _mt[175924]:_MT[201], arg this[175915] :
  fileWriter, param arg locking[175919] :
  bool, arg serializerType[175922]:_any[141](?)) : _unknown[42] "method"
  {
    (175927 call =(175930 call . this c"locking") locking)
    (175934 call =(175937 call . this c"serializerType") serializerType)
  }
  function _unknown[42].init=[175943](arg _mt[175953]:_MT[201], arg this[175946] :
  fileReader, arg x[175950] :
  fileReader) : _unknown[42] "method"
  {
    (175956 call =(175959 call . this c"locking")(175979 IfExpr (175962 call !=(175966 call .(175965 'typeof' this) c"locking") ?[227]) then
    { scopeless
      (175972 call .(175971 'typeof' this) c"locking")
    } else
    { scopeless
      (175976 call . x c"locking")
    } ))
    (175982 call =(175985 call . this c"deserializerType")(175989 call . x c"deserializerType"))
    (175992 call =(175995 call . this c"_home")(175999 call . x c"_home"))
    (176002 call =(176005 call . this c"_channel_internal")(176009 call . x c"_channel_internal"))
    (176012 call =(176015 call . this c"_deserializer")(176018 'new'(_chpl_manager = _shared[242](?))(176022 call _serializeWrapper deserializerType(176030 call .(176024 call postfix!(176027 call . x c"_deserializer")) c"member"))))
    (176033 call =(176038 call . this c"_readWriteThisFromLocale")(176042 call . x c"_readWriteThisFromLocale"))
    (176049 call(176046 call . this c"chpl__initThisType"))
    {
      const tmp[176064] "const" "temp"
      (176065 'move' tmp[176064](176062 'deref'(176061 '_wide_get_locale'(176051 call . x c"_home"))))
      {
        (176056 call qio_channel_retain(176058 call . x c"_channel_internal"))
      }
      (176068 'elided on block' 0 tmp[176064])
    }
  }
  function _unknown[42].init=[176074](arg _mt[176084]:_MT[201], arg this[176077] :
  fileWriter, arg x[176081] :
  fileWriter) : _unknown[42] "method"
  {
    (176087 call =(176090 call . this c"locking")(176110 IfExpr (176093 call !=(176097 call .(176096 'typeof' this) c"locking") ?[227]) then
    { scopeless
      (176103 call .(176102 'typeof' this) c"locking")
    } else
    { scopeless
      (176107 call . x c"locking")
    } ))
    (176113 call =(176116 call . this c"serializerType")(176120 call . x c"serializerType"))
    (176123 call =(176126 call . this c"_home")(176130 call . x c"_home"))
    (176133 call =(176136 call . this c"_channel_internal")(176140 call . x c"_channel_internal"))
    (176143 call =(176146 call . this c"_serializer")(176149 'new'(_chpl_manager = _shared[242](?))(176153 call _serializeWrapper serializerType(176161 call .(176155 call postfix!(176158 call . x c"_serializer")) c"member"))))
    (176164 call =(176167 call . this c"_readWriteThisFromLocale")(176171 call . x c"_readWriteThisFromLocale"))
    (176178 call(176175 call . this c"chpl__initThisType"))
    {
      const tmp[176193] "const" "temp"
      (176194 'move' tmp[176193](176191 'deref'(176190 '_wide_get_locale'(176180 call . x c"_home"))))
      {
        (176185 call qio_channel_retain(176187 call . x c"_channel_internal"))
      }
      (176197 'elided on block' 0 tmp[176193])
    }
  }
  function :[176203](arg rhs[176206] :
  fileReader, arg t[176210] :
  fileReader) : _unknown[42] "operator"
  {
    { scopeless
      unknown tmp[176215] rhs t
      (176219 'end of statement')
    }
    (176220 return tmp)
  }
  function :[176224](arg rhs[176227] :
  fileWriter, arg t[176231] :
  fileWriter) : _unknown[42] "operator"
  {
    { scopeless
      unknown tmp[176236] rhs t
      (176240 'end of statement')
    }
    (176241 return tmp)
  }
  function _unknown[42].init[176245](arg _mt[176277]:_MT[201], arg this[176248] :
  fileReader, param arg locking[176252] :
  bool, arg home[176256] :
  locale[234], arg _channel_internal[176260] :
  qio_channel_ptr_t, arg _readWriteThisFromLocale[176264] :
  locale[234], arg _deserializer[176274] :
  (176268 call _shared(176271 call(176270 'to nilable class from type' _serializeWrapper) unknown dt[176272]))) : _unknown[42] "method"
  {
    (176280 call =(176283 call . this c"locking") locking)
    (176287 call =(176290 call . this c"deserializerType") dt)
    (176294 call =(176297 call . this c"_home") home)
    (176301 call =(176304 call . this c"_channel_internal") _channel_internal)
    (176308 call =(176311 call . this c"_deserializer") _deserializer)
    (176315 call =(176318 call . this c"_readWriteThisFromLocale") _readWriteThisFromLocale)
  }
  function _unknown[42].init[176324](arg _mt[176366]:_MT[201], arg this[176327] :
  fileReader, param arg locking[176331] :
  bool, in arg deserializer[176335] :
  ?[227], arg f[176339] :
  file, out arg error[176343] :
  errorCode, arg hints[176347] :
  ioHintSet, arg start[176353] :
  (176351 call int[10] 64), arg end[176359] :
  (176357 call int[10] 64), in arg local_style[176363] :
  iostyleInternal) : _unknown[42] "method"
  {
    (176373 call(176370 call . this c"init") locking(176376 'typeof' deserializer))
    {
      const tmp[176435] "const" "temp"
      (176436 'move' tmp[176435](176433 'deref'(176432 '_wide_get_locale'(176378 call . f c"_home"))))
      {
        (176382 call =(176385 call . this c"_deserializer")(176388 'new'(_chpl_manager = _shared[242](?))(176392 call _serializeWrapper(176394 'typeof' deserializer) deserializer)))
        (176396 call =(176399 call . this c"_home")(176403 call . f c"_home"))
        (176406 call = error(176410 call qio_channel_create(176412 call . this c"_channel_internal")(176416 call . f c"_file_internal")(176420 call . hints c"_internal") 1 0 start end local_style(176428 call * 64 1024)))
      }
      (176439 'elided on block' 0 tmp[176435])
    }
  }
  function _unknown[42].init[176445](arg _mt[176477]:_MT[201], arg this[176448] :
  fileWriter, param arg locking[176452] :
  bool, arg home[176456] :
  locale[234], arg _channel_internal[176460] :
  qio_channel_ptr_t, arg _readWriteThisFromLocale[176464] :
  locale[234], arg _serializer[176474] :
  (176468 call _shared(176473 'to nilable class from type'(176470 call _serializeWrapper unknown st[176471])))) : _unknown[42] "method"
  {
    (176480 call =(176483 call . this c"locking") locking)
    (176487 call =(176490 call . this c"serializerType") st)
    (176494 call =(176497 call . this c"_home") home)
    (176501 call =(176504 call . this c"_channel_internal") _channel_internal)
    (176508 call =(176511 call . this c"_serializer") _serializer)
    (176515 call =(176518 call . this c"_readWriteThisFromLocale") _readWriteThisFromLocale)
  }
  function _unknown[42].init[176524](arg _mt[176566]:_MT[201], arg this[176527] :
  fileWriter, param arg locking[176531] :
  bool, in arg serializer[176535] :
  ?[227], arg f[176539] :
  file, out arg error[176543] :
  errorCode, arg hints[176547] :
  ioHintSet, arg start[176553] :
  (176551 call int[10] 64), arg end[176559] :
  (176557 call int[10] 64), in arg local_style[176563] :
  iostyleInternal) : _unknown[42] "method"
  {
    (176573 call(176570 call . this c"init") locking(176576 'typeof' serializer))
    {
      const tmp[176635] "const" "temp"
      (176636 'move' tmp[176635](176633 'deref'(176632 '_wide_get_locale'(176578 call . f c"_home"))))
      {
        (176582 call =(176585 call . this c"_serializer")(176588 'new'(_chpl_manager = _shared[242](?))(176592 call _serializeWrapper(176594 'typeof' serializer) serializer)))
        (176596 call =(176599 call . this c"_home")(176603 call . f c"_home"))
        (176606 call = error(176610 call qio_channel_create(176612 call . this c"_channel_internal")(176616 call . f c"_file_internal")(176620 call . hints c"_internal") 0 1 start end local_style(176628 call * 64 1024)))
      }
      (176639 'elided on block' 0 tmp[176635])
    }
  }
  function _unknown[42].deinit[176645](arg _mt[176651]:_MT[201], ref arg this[176648] :
  fileReader) : _unknown[42] "destructor" "method"
  {
    {
      const tmp[176672] "const" "temp"
      (176673 'move' tmp[176672](176670 'deref'(176669 '_wide_get_locale'(176655 call . this c"_home"))))
      {
        (176660 call qio_channel_release _channel_internal)
        (176662 call =(176665 call . this c"_channel_internal") QIO_CHANNEL_PTR_NULL)
      }
      (176676 'elided on block' 0 tmp[176672])
    }
  }
  function _unknown[42].deinit[176682](arg _mt[176688]:_MT[201], ref arg this[176685] :
  fileWriter) : _unknown[42] "destructor" "method"
  {
    {
      const tmp[176709] "const" "temp"
      (176710 'move' tmp[176709](176707 'deref'(176706 '_wide_get_locale'(176692 call . this c"_home"))))
      {
        (176697 call qio_channel_release _channel_internal)
        (176699 call =(176702 call . this c"_channel_internal") QIO_CHANNEL_PTR_NULL)
      }
      (176713 'elided on block' 0 tmp[176709])
    }
  }
  function _unknown[42].withDeserializer[176719](arg _mt[176727]:_MT[201], arg this[176722] :
  fileReader, arg deserializerType[176725]:_any[141](?)) : _unknown[42] "method"
  {
    { scopeless
      unknown des[176738] deserializerType
      (176741 'end of statement')
    }
    (176742 return(176744 call withDeserializer des))
  }
  { scopeless type
    (176730 call fileReader(176732 call . this c"locking") deserializerType)
  }
  function _unknown[42].withDeserializer[176749](arg _mt[176760]:_MT[201], arg this[176752] :
  fileReader, in arg deserializer[176757] :
  unknown dt[176755]) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[176771](176772 'new'(176774 call fileReader(176776 call . this c"locking") dt))
      (176781 'end of statement')
    }
    (176782 call =(176785 call . ret c"_deserializer")(176788 'new'(_chpl_manager = _shared[242](?))(176792 call _serializeWrapper dt deserializer)))
    (176795 call =(176798 call . ret c"_channel_internal")(176802 call . this c"_channel_internal"))
    (176805 call =(176808 call . ret c"_home") _home)
    (176812 call =(176815 call . ret c"_readWriteThisFromLocale") _readWriteThisFromLocale)
    {
      const tmp[176833] "const" "temp"
      (176834 'move' tmp[176833](176831 'deref'(176830 '_wide_get_locale'(176820 call . ret c"_home"))))
      {
        (176825 call qio_channel_retain(176827 call . ret c"_channel_internal"))
      }
      (176837 'elided on block' 0 tmp[176833])
    }
    (176841 return ret)
  }
  { scopeless type
    (176763 call fileReader(176765 call . this c"locking") dt)
  }
  function _unknown[42].withSerializer[176846](arg _mt[176854]:_MT[201], arg this[176849] :
  fileWriter, arg serializerType[176852]:_any[141](?)) : _unknown[42] "method"
  {
    { scopeless
      unknown ser[176865] serializerType
      (176868 'end of statement')
    }
    (176869 return(176871 call withSerializer ser))
  }
  { scopeless type
    (176857 call fileWriter(176859 call . this c"locking") serializerType)
  }
  function _unknown[42].withSerializer[176876](arg _mt[176887]:_MT[201], arg this[176879] :
  fileWriter, in arg serializer[176884] :
  unknown st[176882]) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[176898](176899 'new'(176901 call fileWriter(176903 call . this c"locking") st))
      (176908 'end of statement')
    }
    (176909 call =(176912 call . ret c"_serializer")(176915 'new'(_chpl_manager = _shared[242](?))(176919 call _serializeWrapper st serializer)))
    (176922 call =(176925 call . ret c"_channel_internal")(176929 call . this c"_channel_internal"))
    (176932 call =(176935 call . ret c"_home") _home)
    (176939 call =(176942 call . ret c"_readWriteThisFromLocale") _readWriteThisFromLocale)
    {
      const tmp[176960] "const" "temp"
      (176961 'move' tmp[176960](176958 'deref'(176957 '_wide_get_locale'(176947 call . ret c"_home"))))
      {
        (176952 call qio_channel_retain(176954 call . ret c"_channel_internal"))
      }
      (176964 'elided on block' 0 tmp[176960])
    }
    (176968 return ret)
  }
  { scopeless type
    (176890 call fileWriter(176892 call . this c"locking") st)
  }
  type _internalIoChar[176999] unknown ch[176976](176978 call int[10] 32) function _internalIoChar[176999].serialize[176982](arg _mt[176990]:_MT[201], arg this[176984]:_internalIoChar[176999], arg writer[176986]:_any[141](?), ref arg serializer[176988]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (176994 call assert 0)
  } writeSerializable
  function :[177001](arg x[177004] :
  _internalIoChar, arg t[177008] :
  string[244]) : _unknown[42] "inline" "operator"
  {
    { scopeless
      unknown csc[177013](177018 call qio_encode_to_string(177022 call . x c"ch"))(177015 call c_ptrConst c_char)
      (177026 'end of statement')
    }
    Try!
    {
      {
        (177028 return(177033 call(177030 call . string[244] c"createAdoptingBuffer") csc))
      }
    }
  }
  function _unknown[42]._getFp[177040](arg _mt[177046]:_MT[201], arg this[177043] :
  fileReader) : _unknown[42] "method"
  {
    function fdopen[177056](arg fd[177061] :
    (177059 call int[10] 32), arg mode[177067] :
    (177065 call c_ptrConst c_char)) : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (177071 call c_ptr c_FILE)
    }
    { scopeless
      { scopeless
        unknown f[177088] qio_file_ptr_t
      }
      { scopeless
        unknown fd[177084] c_int
      }
      { scopeless
        unknown fp[177078](177080 call c_ptr c_FILE)
      }
      (177091 'end of statement')
    }
    (177093 call qio_channel_get_file_ptr(177095 call . this c"_channel_internal") f)
    if(177146 call _cond_test(177139 call ==(177142 call qio_get_fp f fp) 0))
    {
      (177100 return(177104 call _build_tuple 1 fp))
    }
    {
      if(177135 call _cond_test(177128 call ==(177131 call qio_get_fd f fd) 0))
      {
        (177108 call = fp(177112 call fdopen fd "r"))
        (177115 return(177119 call _build_tuple 1 fp))
      }
      {
        (177122 return(177126 call _build_tuple 0 fp))
      }
    }
  }
  { scopeless type
    (177053 call _build_tuple bool(177051 call c_ptr c_FILE))
  }
  type chpl_ioNewline[177187] unknown skipWhitespaceOnly[177156] 0 bool function chpl_ioNewline[177187].serialize[177161](arg _mt[177176]:_MT[201], arg this[177163]:chpl_ioNewline[177187], arg writer[177166] :
  fileWriter, ref arg serializer[177173] :
  (177170 call . writer c"serializerType")) : _unknown[42] throws "method" "primary method"
  {
    (177183 call(177180 call . writer c"writeNewline"))
  } writeSerializable
  function :[177189](arg x[177192] :
  chpl_ioNewline, arg t[177196] :
  string[244]) : _unknown[42] "inline" "operator"
  {
    (177200 return "\n")
  }
  type chpl_ioLiteral[177237] unknown val[177207] string[244] unknown ignoreWhiteSpace[177212] 1 bool function chpl_ioLiteral[177237].serialize[177217](arg _mt[177225]:_MT[201], arg this[177219]:chpl_ioLiteral[177237], arg writer[177221]:_any[141](?), ref arg serializer[177223]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (177232 call(177229 call . writer c"write") val)
  } writeSerializable
  function :[177239](arg x[177242] :
  chpl_ioLiteral, arg t[177246] :
  string[244]) : _unknown[42] "inline" "operator"
  {
    (177250 return(177254 call . x c"val"))
  }
  type _internalIoBits[177303] unknown x[177261](177263 call uint[86] 64) unknown numBits[177268](177270 call int[10] 8) function _internalIoBits[177303].v[177274](arg _mt[177278]:_MT[201], arg this[177276]:_internalIoBits[177303]) : _unknown[42] "method" "primary method" "no parens"
  {
    (177283 return x)
  }
  { scopeless type
    (177281 'typeof' x)
  } function _internalIoBits[177303].nbits[177288](arg _mt[177292]:_MT[201], arg this[177290]:_internalIoBits[177303]) : _unknown[42] "method" "primary method" "no parens"
  {
    (177297 return numBits)
  }
  { scopeless type
    (177295 'typeof' numBits)
  }
  function chpl_macro_int_EEOF[177305]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int
  }
  function EEOF[177311]() : _unknown[42] "inline" "no parens" "private"
  {
    (177314 return(177315 call :(177318 call chpl_macro_int_EEOF) c_int))
  }
  function chpl_macro_int_ESHORT[177322]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int
  }
  function ESHORT[177328]() : _unknown[42] "inline" "no parens" "private"
  {
    (177331 return(177332 call :(177335 call chpl_macro_int_ESHORT) c_int))
  }
  function chpl_macro_int_EFORMAT[177339]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int
  }
  function EFORMAT[177345]() : _unknown[42] "inline" "no parens" "private"
  {
    (177348 return(177349 call :(177352 call chpl_macro_int_EFORMAT) c_int))
  }
  function _unknown[42]._ch_ioerror[177356](arg _mt[177370]:_MT[201], arg this[177359] :
  fileReader, arg error[177363] :
  errorCode, arg msg[177367] :
  string[244]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown path[177374] "unknown" string[244]
      (177378 'end of statement')
    }
    { scopeless
      unknown offset[177380](177384 call - 1)(177382 call int[10] 64)
      (177388 'end of statement')
    }
    {
      const tmp[177462] "const" "temp"
      (177463 'move' tmp[177462](177460 'deref'(177459 '_wide_get_locale'(177390 call . this c"_home"))))
      {
        { scopeless
          unknown tmp_path[177395](177397 call c_ptrConst c_char)
          (177400 'end of statement')
        }
        { scopeless
          unknown tmp_offset[177402](177404 call int[10] 64)
          (177407 'end of statement')
        }
        { scopeless
          unknown err[177409] 0 errorCode
          (177413 'end of statement')
        }
        (177414 call = err(177418 call qio_channel_path_offset locking _channel_internal tmp_path tmp_offset))
        if(177451 call _cond_test(177448 call ! err))
        {
          (177424 call = path(177431 call(177428 call . string[244] c"createCopyingBuffer") tmp_path(policy =(177434 call . decodePolicy c"replace"))))
          (177439 call deallocate tmp_path)
        }
        {
          (177442 call = tmp_offset(177446 call qio_channel_offset_unlocked _channel_internal))
        }
        (177455 call = offset tmp_offset)
      }
      (177466 'elided on block' 0 tmp[177462])
    }
    Try
    {
      {
        (177472 call ioerror error msg path offset)
      }
    }
  }
  function _unknown[42]._ch_ioerror[177482](arg _mt[177496]:_MT[201], arg this[177485] :
  fileReader, arg error[177489] :
  c_int, arg msg[177493] :
  string[244]) : _unknown[42] throws "method"
  {
    function qio_int_to_err[177499](arg a[177504] :
    (177502 call int[10] 32)) : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      errorCode
    }
    Try
    {
      {
        (177513 call _ch_ioerror(177515 call qio_int_to_err error) msg)
      }
    }
  }
  function _unknown[42]._ch_ioerror[177523](arg _mt[177537]:_MT[201], arg this[177526] :
  fileReader, arg errstr[177530] :
  string[244], arg msg[177534] :
  string[244]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown path[177541] "unknown" string[244]
      (177545 'end of statement')
    }
    { scopeless
      unknown offset[177547](177551 call - 1)(177549 call int[10] 64)
      (177555 'end of statement')
    }
    {
      const tmp[177629] "const" "temp"
      (177630 'move' tmp[177629](177627 'deref'(177626 '_wide_get_locale'(177557 call . this c"_home"))))
      {
        { scopeless
          unknown tmp_path[177562](177564 call c_ptrConst c_char)
          (177567 'end of statement')
        }
        { scopeless
          unknown tmp_offset[177569](177571 call int[10] 64)
          (177574 'end of statement')
        }
        { scopeless
          unknown err[177576] 0 errorCode
          (177580 'end of statement')
        }
        (177581 call = err(177585 call qio_channel_path_offset locking _channel_internal tmp_path tmp_offset))
        if(177618 call _cond_test(177615 call ! err))
        {
          (177591 call = path(177598 call(177595 call . string[244] c"createCopyingBuffer") tmp_path(policy =(177601 call . decodePolicy c"replace"))))
          (177606 call deallocate tmp_path)
        }
        {
          (177609 call = tmp_offset(177613 call qio_channel_offset_unlocked _channel_internal))
        }
        (177622 call = offset tmp_offset)
      }
      (177633 'elided on block' 0 tmp[177629])
    }
    Try
    {
      {
        (177639 call ioerror errstr msg path offset)
      }
    }
  }
  function _unknown[42]._ch_ioerror[177649](arg _mt[177663]:_MT[201], arg this[177652] :
  fileWriter, arg error[177656] :
  errorCode, arg msg[177660] :
  string[244]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown path[177667] "unknown" string[244]
      (177671 'end of statement')
    }
    { scopeless
      unknown offset[177673](177677 call - 1)(177675 call int[10] 64)
      (177681 'end of statement')
    }
    {
      const tmp[177755] "const" "temp"
      (177756 'move' tmp[177755](177753 'deref'(177752 '_wide_get_locale'(177683 call . this c"_home"))))
      {
        { scopeless
          unknown tmp_path[177688](177690 call c_ptrConst c_char)
          (177693 'end of statement')
        }
        { scopeless
          unknown tmp_offset[177695](177697 call int[10] 64)
          (177700 'end of statement')
        }
        { scopeless
          unknown err[177702] 0 errorCode
          (177706 'end of statement')
        }
        (177707 call = err(177711 call qio_channel_path_offset locking _channel_internal tmp_path tmp_offset))
        if(177744 call _cond_test(177741 call ! err))
        {
          (177717 call = path(177724 call(177721 call . string[244] c"createCopyingBuffer") tmp_path(policy =(177727 call . decodePolicy c"replace"))))
          (177732 call deallocate tmp_path)
        }
        {
          (177735 call = tmp_offset(177739 call qio_channel_offset_unlocked _channel_internal))
        }
        (177748 call = offset tmp_offset)
      }
      (177759 'elided on block' 0 tmp[177755])
    }
    Try
    {
      {
        (177765 call ioerror error msg path offset)
      }
    }
  }
  function _unknown[42]._ch_ioerror[177775](arg _mt[177789]:_MT[201], arg this[177778] :
  fileWriter, arg errstr[177782] :
  string[244], arg msg[177786] :
  string[244]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown path[177793] "unknown" string[244]
      (177797 'end of statement')
    }
    { scopeless
      unknown offset[177799](177803 call - 1)(177801 call int[10] 64)
      (177807 'end of statement')
    }
    {
      const tmp[177881] "const" "temp"
      (177882 'move' tmp[177881](177879 'deref'(177878 '_wide_get_locale'(177809 call . this c"_home"))))
      {
        { scopeless
          unknown tmp_path[177814](177816 call c_ptrConst c_char)
          (177819 'end of statement')
        }
        { scopeless
          unknown tmp_offset[177821](177823 call int[10] 64)
          (177826 'end of statement')
        }
        { scopeless
          unknown err[177828] 0 errorCode
          (177832 'end of statement')
        }
        (177833 call = err(177837 call qio_channel_path_offset locking _channel_internal tmp_path tmp_offset))
        if(177870 call _cond_test(177867 call ! err))
        {
          (177843 call = path(177850 call(177847 call . string[244] c"createCopyingBuffer") tmp_path(policy =(177853 call . decodePolicy c"replace"))))
          (177858 call deallocate tmp_path)
        }
        {
          (177861 call = tmp_offset(177865 call qio_channel_offset_unlocked _channel_internal))
        }
        (177874 call = offset tmp_offset)
      }
      (177885 'elided on block' 0 tmp[177881])
    }
    Try
    {
      {
        (177891 call ioerror errstr msg path offset)
      }
    }
  }
  function _unknown[42].lock[177901](arg _mt[177907]:_MT[201], arg this[177904] :
  fileReader) : _unknown[42] throws "inline" "method"
  {
    { scopeless
      unknown err[177911] 0 errorCode
      (177915 'end of statement')
    }
    if(177928 call _cond_test(177924 call == _channel_internal nil[32]))
    {
      { scopeless
        (177916 'throw'(177918 call createSystemError EINVAL "Operation attempted on an invalid fileReader"))
      }
    }
    if(177957 call _cond_test locking)
    {
      {
        const tmp[177948] "const" "temp"
        (177949 'move' tmp[177948](177946 'deref'(177945 '_wide_get_locale'(177935 call . this c"_home"))))
        {
          (177939 call = err(177943 call qio_channel_lock _channel_internal))
        }
        (177952 'elided on block' 0 tmp[177948])
      }
    }
    if(177975 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (177966 call(177963 call . this c"_ch_ioerror") err "in lock")
          }
        }
      }
    }
  }
  function _unknown[42].lock[177982](arg _mt[177988]:_MT[201], arg this[177985] :
  fileWriter) : _unknown[42] throws "inline" "method"
  {
    { scopeless
      unknown err[177992] 0 errorCode
      (177996 'end of statement')
    }
    if(178009 call _cond_test(178005 call == _channel_internal nil[32]))
    {
      { scopeless
        (177997 'throw'(177999 call createSystemError EINVAL "Operation attempted on an invalid fileWriter"))
      }
    }
    if(178038 call _cond_test locking)
    {
      {
        const tmp[178029] "const" "temp"
        (178030 'move' tmp[178029](178027 'deref'(178026 '_wide_get_locale'(178016 call . this c"_home"))))
        {
          (178020 call = err(178024 call qio_channel_lock _channel_internal))
        }
        (178033 'elided on block' 0 tmp[178029])
      }
    }
    if(178054 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (178047 call(178044 call . this c"_ch_ioerror") err "in lock")
          }
        }
      }
    }
  }
  function _unknown[42].unlock[178061](arg _mt[178067]:_MT[201], arg this[178064] :
  fileReader) : _unknown[42] "inline" "method"
  {
    if(178091 call _cond_test locking)
    {
      {
        const tmp[178082] "const" "temp"
        (178083 'move' tmp[178082](178080 'deref'(178079 '_wide_get_locale'(178072 call . this c"_home"))))
        {
          (178077 call qio_channel_unlock _channel_internal)
        }
        (178086 'elided on block' 0 tmp[178082])
      }
    }
  }
  function _unknown[42].unlock[178097](arg _mt[178103]:_MT[201], arg this[178100] :
  fileWriter) : _unknown[42] "inline" "method"
  {
    if(178127 call _cond_test locking)
    {
      {
        const tmp[178118] "const" "temp"
        (178119 'move' tmp[178118](178116 'deref'(178115 '_wide_get_locale'(178108 call . this c"_home"))))
        {
          (178113 call qio_channel_unlock _channel_internal)
        }
        (178122 'elided on block' 0 tmp[178118])
      }
    }
  }
  { scopeless
    unknown fileOffsetWithoutLocking[178134] "config" "deprecated" "param" 0
    (178137 'end of statement')
  }
  function _unknown[42].offset[178138](arg _mt[178144]:_MT[201], arg this[178141] :
  fileReader) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[178151](178153 call int[10] 64)
      (178156 'end of statement')
    }
    (178157 call = ret(178161 call qio_channel_offset_unlocked(178163 call . this c"_channel_internal")))
    (178166 return ret)
  }
  { scopeless type
    (178147 call int[10] 64)
  }
  function _unknown[42].offset[178171](arg _mt[178177]:_MT[201], arg this[178174] :
  fileWriter) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[178184](178186 call int[10] 64)
      (178189 'end of statement')
    }
    (178190 call = ret(178194 call qio_channel_offset_unlocked(178196 call . this c"_channel_internal")))
    (178199 return ret)
  }
  { scopeless type
    (178180 call int[10] 64)
  }
  function _unknown[42].advance[178204](arg _mt[178216]:_MT[201], arg this[178207] :
  fileReader, arg amount[178213] :
  (178211 call int[10] 64)) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[178220] 0 errorCode
      (178224 'end of statement')
    }
    {
      const tmp[178258] "const" "temp"
      (178259 'move' tmp[178258](178256 'deref'(178255 '_wide_get_locale'(178226 call . this c"_home"))))
      {
        Try
        {
          {
            (178235 call(178232 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (178244 call(178241 call . this c"unlock"))
          }
        }
        (178247 call = err(178251 call qio_channel_advance 0 _channel_internal amount))
      }
      (178262 'elided on block' 0 tmp[178258])
    }
    if(178280 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (178271 call(178268 call . this c"_ch_ioerror") err "in advance")
          }
        }
      }
    }
  }
  function _unknown[42].advance[178287](arg _mt[178299]:_MT[201], arg this[178290] :
  fileWriter, arg amount[178296] :
  (178294 call int[10] 64)) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[178303] 0 errorCode
      (178307 'end of statement')
    }
    {
      const tmp[178341] "const" "temp"
      (178342 'move' tmp[178341](178339 'deref'(178338 '_wide_get_locale'(178309 call . this c"_home"))))
      {
        Try
        {
          {
            (178318 call(178315 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (178327 call(178324 call . this c"unlock"))
          }
        }
        (178330 call = err(178334 call qio_channel_advance 0 _channel_internal amount))
      }
      (178345 'elided on block' 0 tmp[178341])
    }
    if(178361 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (178354 call(178351 call . this c"_ch_ioerror") err "in advance")
          }
        }
      }
    }
  }
  function _unknown[42].advanceThrough[178368](arg _mt[178379]:_MT[201], arg this[178371] :
  fileReader, arg separator[178376] :
  unknown t[178374]) : _unknown[42] throws "method"
  {
    {
      const tmp[178765] "const" "temp"
      (178766 'move' tmp[178765](178763 'deref'(178762 '_wide_get_locale'(178393 call . this c"_home"))))
      {
        Try
        {
          {
            (178402 call(178399 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (178411 call(178408 call . this c"unlock"))
          }
        }
        { scopeless
          unknown err[178415] 0 errorCode
          (178419 'end of statement')
        }
        if(178757 call _cond_test(178750 call ==(178753 call . separator c"numBytes") 1))
        {
          (178421 call = err(178425 call qio_channel_advance_past_byte 0(178428 call . this c"_channel_internal")(178431 call :(178437 call(178434 call . separator c"toByte")) c_int)(178440 call max(178442 call int[10] 64)) 1))
          if(178525 call _cond_test err)
          {
            if(178519 call _cond_test(178515 call == err EEOF))
            {
              Try
              {
                {
                  (178452 call(178449 call . this c"_ch_ioerror") err(178454 call +(178456 call + "in advanceThrough("(178461 call : t string[244])) ")"))
                }
              }
            }
            {
              { scopeless
                if(178511 call _cond_test(178507 call == err ESHORT))
                {
                  (178470 'throw'(178471 'new'(178473 call UnexpectedEofError(178474 call +(178476 call + "separator not found in advanceThrough("(178481 call : t string[244])) ")"))))
                }
                {
                  Try
                  {
                    {
                      (178492 call(178489 call . this c"_ch_ioerror") err(178494 call +(178496 call + "in advanceThrough("(178499 call : t string[244])) ")"))
                    }
                  }
                }
              }
            }
          }
        }
        {
          { scopeless
            if(178746 call _cond_test(178739 call ==(178742 call . separator c"numBytes") 0))
            {
              (178530 'throw'(178531 'new'(178533 call IllegalArgumentError(178534 call +(178536 call + "advanceThrough("(178541 call : t string[244])) ") called with empty separator"))))
            }
            {
              { scopeless
                const tmp[178566] "const" "temp"(178557 call _findSeparator separator(178559 call - 1)(178563 call . this c"_channel_internal"))
                (178576 call _check_tuple_var_decl tmp[178566] 3)
                const readError[178550] "const"(178567 call tmp[178566] 0)
                const found[178552] "const"(178570 call tmp[178566] 1)
                const bytesRead[178554] "const"(178573 call tmp[178566] 2)
                (178581 'end of statement')
              }
              if(178625 call _cond_test(178603 call &&(178605 call &&(178607 call &&(178609 call != readError 0)(178613 call != readError EEOF))(178617 call != readError ESHORT))(178621 call != readError EFORMAT)))
              {
                Try
                {
                  {
                    (178588 call(178585 call . this c"_ch_ioerror") readError(178590 call +(178592 call + "in advanceThrough("(178595 call : t string[244])) ")"))
                  }
                }
              }
              (178629 call = err(178633 call qio_channel_advance 0(178636 call . this c"_channel_internal")(178639 call + bytesRead(178643 call . separator c"numBytes"))))
              if(178676 call _cond_test(178666 call &&(178668 call != err 0)(178672 call != err EEOF)))
              {
                { scopeless
                  Try
                  {
                    {
                      (178651 call(178648 call . this c"_ch_ioerror") err(178653 call +(178655 call + "in advanceThrough("(178658 call : t string[244])) ")"))
                    }
                  }
                }
              }
              if(178734 call _cond_test(178730 call == bytesRead 0))
              {
                Try
                {
                  {
                    (178687 call(178684 call . this c"_ch_ioerror") EEOF(178689 call +(178691 call + "in advanceThrough("(178694 call : t string[244])) ")"))
                  }
                }
              }
              {
                { scopeless
                  if(178726 call _cond_test(178723 call ! found))
                  {
                    Try
                    {
                      {
                        (178708 call(178705 call . this c"_ch_ioerror") ESHORT(178710 call +(178712 call + "separator not found in advanceThrough("(178715 call : t string[244])) ")"))
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      (178769 'elided on block' 0 tmp[178765])
    }
  }
  where {
    (178381 call ||(178383 call == t string[244])(178387 call == t bytes[232]))
  }
  function _unknown[42].advanceThroughNewline[178776](arg _mt[178782]:_MT[201], arg this[178779] :
  fileReader) : _unknown[42] throws "method"
  {
    {
      const tmp[178904] "const" "temp"
      (178905 'move' tmp[178904](178902 'deref'(178901 '_wide_get_locale'(178786 call . this c"_home"))))
      {
        { scopeless
          unknown nl[178791] "param"(178792 call :(178798 call(178795 call . "\n" c"toByte")) c_int)
          (178801 'end of statement')
        }
        Try
        {
          {
            (178807 call(178804 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (178816 call(178813 call . this c"unlock"))
          }
        }
        { scopeless
          unknown err[178820] 0 errorCode
          (178824 'end of statement')
        }
        (178825 call = err(178829 call qio_channel_advance_past_byte 0(178832 call . this c"_channel_internal") nl(178837 call max(178839 call int[10] 64)) 1))
        if(178897 call _cond_test err)
        {
          if(178891 call _cond_test(178887 call == err EEOF))
          {
            Try
            {
              {
                (178849 call(178846 call . this c"_ch_ioerror") err "in advanceThroughNewline)")
              }
            }
          }
          {
            { scopeless
              if(178883 call _cond_test(178879 call == err ESHORT))
              {
                (178858 'throw'(178859 'new'(178861 call UnexpectedEofError "newline not found in advanceThroughNewline")))
              }
              {
                Try
                {
                  {
                    (178871 call(178868 call . this c"_ch_ioerror") err "in advanceThroughNewline")
                  }
                }
              }
            }
          }
        }
      }
      (178908 'elided on block' 0 tmp[178904])
    }
  }
  function _unknown[42].advanceTo[178914](arg _mt[178925]:_MT[201], arg this[178917] :
  fileReader, arg separator[178922] :
  unknown t[178920]) : _unknown[42] throws "method"
  {
    {
      const tmp[179290] "const" "temp"
      (179291 'move' tmp[179290](179288 'deref'(179287 '_wide_get_locale'(178939 call . this c"_home"))))
      {
        Try
        {
          {
            (178948 call(178945 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (178957 call(178954 call . this c"unlock"))
          }
        }
        { scopeless
          unknown err[178961] 0 errorCode
          (178965 'end of statement')
        }
        if(179282 call _cond_test(179275 call ==(179278 call . separator c"numBytes") 1))
        {
          (178967 call = err(178971 call qio_channel_advance_past_byte 0(178974 call . this c"_channel_internal")(178977 call :(178983 call(178980 call . separator c"toByte")) c_int)(178986 call max(178988 call int[10] 64)) 0))
          if(179047 call _cond_test err)
          {
            if(179042 call _cond_test(179032 call ||(179034 call == err ESHORT)(179038 call == err EFORMAT)))
            {
              (178993 'throw'(178994 'new'(178996 call UnexpectedEofError(178997 call +(178999 call + "separator not found in advanceTo("(179004 call : t string[244])) ")"))))
            }
            {
              Try
              {
                {
                  (179015 call(179012 call . this c"_ch_ioerror") err(179017 call +(179019 call + "in advanceTo("(179024 call : t string[244])) ")"))
                }
              }
            }
          }
        }
        {
          { scopeless
            if(179271 call _cond_test(179264 call ==(179267 call . separator c"numBytes") 0))
            {
              (179052 'throw'(179053 'new'(179055 call IllegalArgumentError(179056 call +(179058 call + "advanceTo("(179063 call : t string[244])) ") called with empty separator"))))
            }
            {
              { scopeless
                const tmp[179086] "const" "temp"(179077 call _findSeparator separator(179079 call - 1)(179083 call . this c"_channel_internal"))
                (179096 call _check_tuple_var_decl tmp[179086] 3)
                const readError[179070] "const"(179087 call tmp[179086] 0)
                const found[179072] "const"(179090 call tmp[179086] 1)
                const bytesRead[179074] "const"(179093 call tmp[179086] 2)
                (179101 'end of statement')
              }
              if(179145 call _cond_test(179123 call &&(179125 call &&(179127 call &&(179129 call != readError 0)(179133 call != readError EEOF))(179137 call != readError ESHORT))(179141 call != readError EFORMAT)))
              {
                Try
                {
                  {
                    (179108 call(179105 call . this c"_ch_ioerror") readError(179110 call +(179112 call + "in advanceTo("(179115 call : t string[244])) ")"))
                  }
                }
              }
              (179149 call = err(179153 call qio_channel_advance 0(179156 call . this c"_channel_internal")(179159 call + bytesRead(179168 IfExpr  found then
              { scopeless
                0
              } else
              { scopeless
                (179165 call . separator c"numBytes")
              } ))))
              if(179201 call _cond_test(179191 call &&(179193 call != err 0)(179197 call != err EEOF)))
              {
                { scopeless
                  Try
                  {
                    {
                      (179176 call(179173 call . this c"_ch_ioerror") err(179178 call +(179180 call + "in advanceTo("(179183 call : t string[244])) ")"))
                    }
                  }
                }
              }
              if(179259 call _cond_test(179255 call == bytesRead 0))
              {
                Try
                {
                  {
                    (179212 call(179209 call . this c"_ch_ioerror") EEOF(179214 call +(179216 call + "in advanceTo("(179219 call : t string[244])) ")"))
                  }
                }
              }
              {
                { scopeless
                  if(179251 call _cond_test(179248 call ! found))
                  {
                    Try
                    {
                      {
                        (179233 call(179230 call . this c"_ch_ioerror") ESHORT(179235 call +(179237 call + "separator not found in advanceTo("(179240 call : t string[244])) ")"))
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      (179294 'elided on block' 0 tmp[179290])
    }
  }
  where {
    (178927 call ||(178929 call == t string[244])(178933 call == t bytes[232]))
  }
  function markHelper[179301](arg fileRW[179303]:_any[141](?)) : _unknown[42] throws "inline" "private"
  {
    { scopeless
      const offset[179307] "const"(179312 call(179309 call . fileRW c"offset"))
      (179314 'end of statement')
    }
    { scopeless
      const err[179316] "const"(179318 call qio_channel_mark 0(179321 call . fileRW c"_channel_internal"))
      (179325 'end of statement')
    }
    if(179332 call _cond_test err)
    {
      { scopeless
        (179326 'throw'(179328 call createSystemError err))
      }
    }
    (179337 return offset)
  }
  function _unknown[42].mark[179341](arg _mt[179347]:_MT[201], arg this[179344] :
  fileReader) : _unknown[42] throws "method"
  {
    (179350 return(179352 call markHelper this))
  }
  function _unknown[42].mark[179356](arg _mt[179362]:_MT[201], arg this[179359] :
  fileWriter) : _unknown[42] throws "method"
  {
    (179365 return(179367 call markHelper this))
  }
  function _unknown[42].revert[179371](arg _mt[179377]:_MT[201], arg this[179374] :
  fileReader) : _unknown[42] "inline" "method"
  {
    (179381 call qio_channel_revert_unlocked _channel_internal)
  }
  function _unknown[42].revert[179385](arg _mt[179391]:_MT[201], arg this[179388] :
  fileWriter) : _unknown[42] "inline" "method"
  {
    (179395 call qio_channel_revert_unlocked _channel_internal)
  }
  function _unknown[42].commit[179399](arg _mt[179405]:_MT[201], arg this[179402] :
  fileReader) : _unknown[42] "inline" "method"
  {
    (179409 call qio_channel_commit_unlocked _channel_internal)
  }
  function _unknown[42].commit[179413](arg _mt[179419]:_MT[201], arg this[179416] :
  fileWriter) : _unknown[42] "inline" "method"
  {
    (179423 call qio_channel_commit_unlocked _channel_internal)
  }
  function _unknown[42].seek[179427](arg _mt[179439]:_MT[201], arg this[179430] :
  fileReader, arg region[179436] :
  (179434 call range ?[227])) : _unknown[42] throws "method"
  {
    if(179452 call _cond_test(179449 call . this c"locking"))
    {
      { scopeless
        (179443 call compilerError "Cannot seek on a locking fileReader")
      }
    }
    if(179556 call _cond_test(179549 call !(179555 call(179552 call . region c"hasLowBound"))))
    {
      (179458 'throw'(179459 'new'(179461 call IllegalArgumentError "illegal argument 'region': must have a lower bound")))
    }
    {
      {
        const tmp[179541] "const" "temp"
        (179542 'move' tmp[179541](179539 'deref'(179538 '_wide_get_locale'(179467 call . this c"_home"))))
        {
          if(179534 call _cond_test(179533 call(179530 call . region c"hasHighBound")))
          {
            { scopeless
              const err[179473] "const"(179475 call qio_channel_seek _channel_internal(179478 call . region c"low")(179481 call +(179484 call . region c"high") 1))
              (179489 'end of statement')
            }
            if(179496 call _cond_test err)
            {
              { scopeless
                (179490 'throw'(179492 call createSystemError err))
              }
            }
          }
          {
            { scopeless
              const err[179503] "const"(179505 call qio_channel_seek _channel_internal(179508 call . region c"low")(179512 call max(179514 call int[10] 64)))
              (179517 'end of statement')
            }
            if(179524 call _cond_test err)
            {
              { scopeless
                (179518 'throw'(179520 call createSystemError err))
              }
            }
          }
        }
        (179545 'elided on block' 0 tmp[179541])
      }
    }
  }
  function _unknown[42].seek[179562](arg _mt[179574]:_MT[201], arg this[179565] :
  fileWriter, arg region[179571] :
  (179569 call range ?[227])) : _unknown[42] throws "method"
  {
    if(179587 call _cond_test(179584 call . this c"locking"))
    {
      { scopeless
        (179578 call compilerError "Cannot seek on a locking fileWriter")
      }
    }
    if(179689 call _cond_test(179682 call !(179688 call(179685 call . region c"hasLowBound"))))
    {
      (179593 'throw'(179594 'new'(179596 call IllegalArgumentError "illegal argument 'region': must have a lower bound")))
    }
    {
      {
        const tmp[179674] "const" "temp"
        (179675 'move' tmp[179674](179672 'deref'(179671 '_wide_get_locale'(179600 call . this c"_home"))))
        {
          if(179667 call _cond_test(179666 call(179663 call . region c"hasHighBound")))
          {
            { scopeless
              const err[179606] "const"(179608 call qio_channel_seek _channel_internal(179611 call . region c"low")(179614 call +(179617 call . region c"high") 1))
              (179622 'end of statement')
            }
            if(179629 call _cond_test err)
            {
              { scopeless
                (179623 'throw'(179625 call createSystemError err))
              }
            }
          }
          {
            { scopeless
              const err[179636] "const"(179638 call qio_channel_seek _channel_internal(179641 call . region c"low")(179645 call max(179647 call int[10] 64)))
              (179650 'end of statement')
            }
            if(179657 call _cond_test err)
            {
              { scopeless
                (179651 'throw'(179653 call createSystemError err))
              }
            }
          }
        }
        (179678 'elided on block' 0 tmp[179674])
      }
    }
  }
  function _unknown[42]._styleInternal[179695](arg _mt[179701]:_MT[201], arg this[179698] :
  fileReader) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[179706] iostyleInternal
      (179709 'end of statement')
    }
    {
      const tmp[179731] "const" "temp"
      (179732 'move' tmp[179731](179729 'deref'(179728 '_wide_get_locale'(179711 call . this c"_home"))))
      {
        { scopeless
          unknown local_style[179716] iostyleInternal
          (179719 'end of statement')
        }
        (179721 call qio_channel_get_style _channel_internal local_style)
        (179724 call = ret local_style)
      }
      (179735 'elided on block' 0 tmp[179731])
    }
    (179739 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  function _unknown[42]._styleInternal[179744](arg _mt[179750]:_MT[201], arg this[179747] :
  fileWriter) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[179755] iostyleInternal
      (179758 'end of statement')
    }
    {
      const tmp[179780] "const" "temp"
      (179781 'move' tmp[179780](179778 'deref'(179777 '_wide_get_locale'(179760 call . this c"_home"))))
      {
        { scopeless
          unknown local_style[179765] iostyleInternal
          (179768 'end of statement')
        }
        (179770 call qio_channel_get_style _channel_internal local_style)
        (179773 call = ret local_style)
      }
      (179784 'elided on block' 0 tmp[179780])
    }
    (179788 return ret)
  }
  { scopeless type
    iostyleInternal
  }
  function _unknown[42]._set_styleInternal[179793](arg _mt[179803]:_MT[201], arg this[179796] :
  fileReader, arg style[179800] :
  iostyleInternal) : _unknown[42] "method"
  {
    {
      const tmp[179824] "const" "temp"
      (179825 'move' tmp[179824](179822 'deref'(179821 '_wide_get_locale'(179807 call . this c"_home"))))
      {
        { scopeless
          unknown local_style[179812] style iostyleInternal
          (179816 'end of statement')
        }
        (179818 call qio_channel_set_style _channel_internal local_style)
      }
      (179828 'elided on block' 0 tmp[179824])
    }
  }
  function _unknown[42]._set_styleInternal[179834](arg _mt[179844]:_MT[201], arg this[179837] :
  fileWriter, arg style[179841] :
  iostyleInternal) : _unknown[42] "method"
  {
    {
      const tmp[179865] "const" "temp"
      (179866 'move' tmp[179865](179863 'deref'(179862 '_wide_get_locale'(179848 call . this c"_home"))))
      {
        { scopeless
          unknown local_style[179853] style iostyleInternal
          (179857 'end of statement')
        }
        (179859 call qio_channel_set_style _channel_internal local_style)
      }
      (179869 'elided on block' 0 tmp[179865])
    }
  }
  function _unknown[42].readWriteThisFromLocale[179875](arg _mt[179881]:_MT[201], arg this[179878] :
  fileReader) : _unknown[42] "inline" "method" "@unstable"
  {
    (179884 return _readWriteThisFromLocale)
  }
  function _unknown[42].readWriteThisFromLocale[179888](arg _mt[179894]:_MT[201], arg this[179891] :
  fileWriter) : _unknown[42] "inline" "method" "@unstable"
  {
    (179897 return _readWriteThisFromLocale)
  }
  function _unknown[42].getLocaleOfIoRequest[179901](arg _mt[179907]:_MT[201], arg this[179904] :
  fileReader) : _unknown[42] "inline" "method"
  {
    { scopeless
      unknown ret[179911](179913 call . this c"_readWriteThisFromLocale")
      (179917 'end of statement')
    }
    if(179927 call _cond_test(179923 call == ret nilLocale))
    {
      { scopeless
        (179918 call = ret here)
      }
    }
    (179932 return ret)
  }
  function _unknown[42].getLocaleOfIoRequest[179936](arg _mt[179942]:_MT[201], arg this[179939] :
  fileWriter) : _unknown[42] "inline" "method"
  {
    { scopeless
      unknown ret[179946](179948 call . this c"_readWriteThisFromLocale")
      (179952 'end of statement')
    }
    if(179962 call _cond_test(179958 call == ret nilLocale))
    {
      { scopeless
        (179953 call = ret here)
      }
    }
    (179967 return ret)
  }
  function _unknown[42].channelPlugin[179971](arg _mt[179977]:_MT[201], arg this[179974] :
  fileReader) : _unknown[42] "method"
  {
    { scopeless
      unknown vptr[179984](179986 call qio_channel_get_plugin(179988 call . this c"_channel_internal"))
      (179992 'end of statement')
    }
    (179993 return(179994 call : vptr(179997 'to borrowed class from unknown'(179999 'to nilable class from type' QioPluginChannel))))
  }
  { scopeless type
    (179979 'to borrowed class from unknown'(179981 'to nilable class from type' QioPluginChannel))
  }
  function _unknown[42].channelPlugin[180003](arg _mt[180009]:_MT[201], arg this[180006] :
  fileWriter) : _unknown[42] "method"
  {
    { scopeless
      unknown vptr[180016](180018 call qio_channel_get_plugin(180020 call . this c"_channel_internal"))
      (180024 'end of statement')
    }
    (180025 return(180026 call : vptr(180029 'to borrowed class from unknown'(180031 'to nilable class from type' QioPluginChannel))))
  }
  { scopeless type
    (180011 'to borrowed class from unknown'(180013 'to nilable class from type' QioPluginChannel))
  }
  function _unknown[42].filePlugin[180035](arg _mt[180041]:_MT[201], arg this[180038] :
  fileReader) : _unknown[42] "method"
  {
    { scopeless
      unknown vptr[180048](180050 call qio_file_get_plugin(180052 call qio_channel_get_file(180054 call . this c"_channel_internal")))
      (180058 'end of statement')
    }
    (180059 return(180060 call : vptr(180063 'to borrowed class from unknown'(180065 'to nilable class from type' QioPluginFile))))
  }
  { scopeless type
    (180043 'to borrowed class from unknown'(180045 'to nilable class from type' QioPluginFile))
  }
  function _unknown[42].filePlugin[180069](arg _mt[180075]:_MT[201], arg this[180072] :
  fileWriter) : _unknown[42] "method"
  {
    { scopeless
      unknown vptr[180082](180084 call qio_file_get_plugin(180086 call qio_channel_get_file(180088 call . this c"_channel_internal")))
      (180092 'end of statement')
    }
    (180093 return(180094 call : vptr(180097 'to borrowed class from unknown'(180099 'to nilable class from type' QioPluginFile))))
  }
  { scopeless type
    (180077 'to borrowed class from unknown'(180079 'to nilable class from type' QioPluginFile))
  }
  { scopeless
    unknown OpenReaderLockingDefault[180104] "config" "deprecated" "param" 1
    (180107 'end of statement')
  }
  function openReader[180108](arg path[180111] :
  string[244], param arg locking[180115] =
  0, arg region[180124] :
  (180119 call range ?[227]) =
  (180122 call chpl_build_low_bounded_range 0), arg hints[180132] =
  (180129 call . ioHintSet c"empty"), in arg deserializer[180140] :
  unknown dt[180135] =
  (180138 call defaultSerializeVal 0)) : _unknown[42] throws
  {
    { scopeless
      unknown fl[180150](180159 'try-expr'(180153 call open path(180156 call . ioMode c"r"))) file
      (180161 'end of statement')
    }
    (180162 return(180177 'try-expr'(180169 call(180166 call . fl c"readerHelper") locking region hints(180174 call defaultIOStyleInternal)(deserializer = deserializer))))
  }
  { scopeless type
    (180145 call fileReader locking dt)
  }
  function openStringReader[180181](const arg s[180184] :
  string[244], in arg deserializer[180192] :
  unknown dt[180187] =
  (180190 call defaultSerializeVal 0)) : _unknown[42] throws "@unstable"
  {
    { scopeless
      const slocal[180202] "const"(180207 call(180204 call . s c"localize"))
      (180209 'end of statement')
    }
    { scopeless
      { scopeless
        unknown f[180222](180224 call openMemFile)
      }
      { scopeless
        unknown w[180212](180217 call(180214 call . f c"writer")(locking = 0))
      }
      (180226 'end of statement')
    }
    (180231 call(180228 call . w c"write") slocal)
    (180237 call(180234 call . w c"close"))
    { scopeless
      { scopeless
        unknown err[180261] 0 errorCode
      }
      { scopeless
        unknown fr[180240](180241 'new'(180243 call fileReader 0 deserializer f err(180249 call . ioHintSet c"empty") 0(180254 call . f c"size")(180258 call defaultIOStyleInternal)))
      }
      (180265 'end of statement')
    }
    if(180280 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (180271 call(180268 call . fr c"_ch_ioerror") err "in openStringReader")
          }
        }
      }
    }
    (180285 return fr)
  }
  { scopeless type
    (180197 call fileReader 0 dt)
  }
  function openBytesReader[180290](const arg b[180293] :
  bytes[232], in arg deserializer[180301] :
  unknown dt[180296] =
  (180299 call defaultSerializeVal 0)) : _unknown[42] throws "@unstable"
  {
    { scopeless
      const blocal[180311] "const"(180316 call(180313 call . b c"localize"))
      (180318 'end of statement')
    }
    { scopeless
      { scopeless
        unknown f[180331](180333 call openMemFile)
      }
      { scopeless
        unknown w[180321](180326 call(180323 call . f c"writer")(locking = 0))
      }
      (180335 'end of statement')
    }
    (180340 call(180337 call . w c"write") blocal)
    (180346 call(180343 call . w c"close"))
    { scopeless
      { scopeless
        unknown err[180370] 0 errorCode
      }
      { scopeless
        unknown fr[180349](180350 'new'(180352 call fileReader 0 deserializer f err(180358 call . ioHintSet c"empty") 0(180363 call . f c"size")(180367 call defaultIOStyleInternal)))
      }
      (180374 'end of statement')
    }
    if(180389 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (180380 call(180377 call . fr c"_ch_ioerror") err "in openBytesReader")
          }
        }
      }
    }
    (180394 return fr)
  }
  { scopeless type
    (180306 call fileReader 0 dt)
  }
  { scopeless
    unknown OpenWriterLockingDefault[180400] "config" "deprecated" "param" 1
    (180403 'end of statement')
  }
  function openWriter[180404](arg path[180407] :
  string[244], param arg locking[180411] =
  0, arg hints[180418] =
  (180415 call . ioHintSet c"empty"), in arg serializer[180426] :
  unknown st[180421] =
  (180424 call defaultSerializeVal 1)) : _unknown[42] throws
  {
    { scopeless
      unknown fl[180436](180445 'try-expr'(180439 call open path(180442 call . ioMode c"cw"))) file
      (180447 'end of statement')
    }
    (180448 return(180470 'try-expr'(180455 call(180452 call . fl c"writerHelper") locking(180463 call chpl_build_bounded_range 0(180459 call max(180461 call int[10] 64))) hints(180467 call defaultIOStyleInternal)(serializer = serializer))))
  }
  { scopeless type
    (180431 call fileWriter locking st)
  }
  function _unknown[42].reader[180474](arg _mt[180510]:_MT[201], arg this[180477] :
  file, param arg locking[180481] =
  0, arg region[180490] :
  (180485 call range ?[227]) =
  (180488 call chpl_build_low_bounded_range 0), arg hints[180498] =
  (180495 call . ioHintSet c"empty"), in arg deserializer[180506] :
  unknown dt[180501] =
  (180504 call defaultSerializeVal 0)) : _unknown[42] throws "method"
  {
    (180517 return(180522 call(180519 call . this c"readerHelper") locking region hints(deserializer = deserializer)))
  }
  { scopeless type
    (180513 call fileReader locking dt)
  }
  function _unknown[42].readerHelper[180531](arg _mt[180578]:_MT[201], arg this[180534] :
  file, param arg locking[180538] =
  1, arg region[180547] :
  (180542 call range ?[227]) =
  (180545 call chpl_build_low_bounded_range 0), arg hints[180555] =
  (180552 call . ioHintSet c"empty"), arg style[180565] :
  iostyleInternal =
  (180562 call . this c"_style"), in arg deserializer[180574] :
  unknown dt[180569] =
  (180572 call defaultSerializeVal 0)) : _unknown[42] throws "method"
  {
    if(180607 call _cond_test(180593 call &&(180599 call(180596 call . region c"hasLowBound"))(180600 call <(180603 call . region c"low") 0)))
    {
      (180586 'throw'(180587 'new'(180589 call IllegalArgumentError "illegal argument 'region': file region's lowest accepted bound is 0")))
    }
    { scopeless
      unknown ret[180612](180614 call fileReader locking dt)
      (180618 'end of statement')
    }
    { scopeless
      unknown err[180620] 0 errorCode
      (180624 'end of statement')
    }
    {
      const tmp[180814] "const" "temp"
      (180815 'move' tmp[180814](180812 'deref'(180811 '_wide_get_locale'(180626 call . this c"_home"))))
      {
        { scopeless
          unknown start[180631](180633 call . region c"idxType")
          (180637 'end of statement')
        }
        { scopeless
          unknown end[180639](180641 call . region c"idxType")
          (180645 'end of statement')
        }
        Try
        {
          {
            (180651 call(180648 call . this c"checkAssumingLocal"))
          }
        }
        if(180792 call _cond_test(180780 call &&(180786 call(180783 call . region c"hasLowBound"))(180791 call(180788 call . region c"hasHighBound"))))
        {
          (180656 call = start(180660 call . region c"low"))
          (180663 call = end(180691 IfExpr (180666 call ==(180669 call . region c"high")(180673 call max(180675 call . region c"idxType"))) then
          { scopeless
            (180679 call max(180681 call . region c"idxType"))
          } else
          { scopeless
            (180684 call +(180687 call . region c"high") 1)
          } ))
        }
        {
          { scopeless
            if(180775 call _cond_test(180774 call(180771 call . region c"hasLowBound")))
            {
              (180695 call = start(180699 call . region c"low"))
              (180702 call = end(180706 call max(180708 call . region c"idxType")))
            }
            {
              { scopeless
                if(180766 call _cond_test(180765 call(180762 call . region c"hasHighBound")))
                {
                  (180712 call = start 0)
                  (180716 call = end(180744 IfExpr (180719 call ==(180722 call . region c"high")(180726 call max(180728 call . region c"idxType"))) then
                  { scopeless
                    (180732 call max(180734 call . region c"idxType"))
                  } else
                  { scopeless
                    (180737 call +(180740 call . region c"high") 1)
                  } ))
                }
                {
                  (180748 call = start 0)
                  (180752 call = end(180756 call max(180758 call . region c"idxType")))
                }
              }
            }
          }
        }
        (180797 call = ret(180800 'new'(180802 call fileReader locking deserializer this err hints start end style)))
      }
      (180818 'elided on block' 0 tmp[180814])
    }
    if(180838 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (180824 call ioerror err "in file.reader"(180833 call(180830 call . this c"_tryGetPath")))
          }
        }
      }
    }
    (180843 return ret)
  }
  { scopeless type
    (180581 call fileReader locking dt)
  }
  function _unknown[42].writer[180848](arg _mt[180884]:_MT[201], arg this[180851] :
  file, param arg locking[180855] =
  0, arg region[180864] :
  (180859 call range ?[227]) =
  (180862 call chpl_build_low_bounded_range 0), arg hints[180872] =
  (180869 call . ioHintSet c"empty"), in arg serializer[180880] :
  unknown st[180875] =
  (180878 call defaultSerializeVal 1)) : _unknown[42] throws "method"
  {
    (180891 return(180896 call(180893 call . this c"writerHelper") locking region hints(serializer = serializer)))
  }
  { scopeless type
    (180887 call fileWriter locking st)
  }
  function _unknown[42].writerHelper[180905](arg _mt[180950]:_MT[201], arg this[180908] :
  file, param arg locking[180912] =
  0, arg region[180921] :
  (180916 call range ?[227]) =
  (180919 call chpl_build_low_bounded_range 0), arg hints[180929] =
  (180926 call . ioHintSet c"empty"), arg style[180937] :
  iostyleInternal =
  (180934 call . this c"_style"), in arg serializer[180946] :
  unknown st[180941] =
  (180944 call defaultSerializeVal 1)) : _unknown[42] throws "method"
  {
    if(180977 call _cond_test(180963 call &&(180969 call(180966 call . region c"hasLowBound"))(180970 call <(180973 call . region c"low") 0)))
    {
      (180958 'throw'(180959 'new'(180961 call IllegalArgumentError "illegal argument 'region': file region's lowest accepted bound is 0")))
    }
    { scopeless
      unknown ret[180982](180984 call fileWriter locking st)
      (180988 'end of statement')
    }
    { scopeless
      unknown err[180990] 0 errorCode
      (180994 'end of statement')
    }
    {
      const tmp[181184] "const" "temp"
      (181185 'move' tmp[181184](181182 'deref'(181181 '_wide_get_locale'(180996 call . this c"_home"))))
      {
        { scopeless
          unknown start[181001](181003 call . region c"idxType")
          (181007 'end of statement')
        }
        { scopeless
          unknown end[181009](181011 call . region c"idxType")
          (181015 'end of statement')
        }
        Try
        {
          {
            (181021 call(181018 call . this c"checkAssumingLocal"))
          }
        }
        if(181162 call _cond_test(181150 call &&(181156 call(181153 call . region c"hasLowBound"))(181161 call(181158 call . region c"hasHighBound"))))
        {
          (181026 call = start(181030 call . region c"low"))
          (181033 call = end(181061 IfExpr (181036 call ==(181039 call . region c"high")(181043 call max(181045 call . region c"idxType"))) then
          { scopeless
            (181049 call max(181051 call . region c"idxType"))
          } else
          { scopeless
            (181054 call +(181057 call . region c"high") 1)
          } ))
        }
        {
          { scopeless
            if(181145 call _cond_test(181144 call(181141 call . region c"hasLowBound")))
            {
              (181065 call = start(181069 call . region c"low"))
              (181072 call = end(181076 call max(181078 call . region c"idxType")))
            }
            {
              { scopeless
                if(181136 call _cond_test(181135 call(181132 call . region c"hasHighBound")))
                {
                  (181082 call = start 0)
                  (181086 call = end(181114 IfExpr (181089 call ==(181092 call . region c"high")(181096 call max(181098 call . region c"idxType"))) then
                  { scopeless
                    (181102 call max(181104 call . region c"idxType"))
                  } else
                  { scopeless
                    (181107 call +(181110 call . region c"high") 1)
                  } ))
                }
                {
                  (181118 call = start 0)
                  (181122 call = end(181126 call max(181128 call . region c"idxType")))
                }
              }
            }
          }
        }
        (181167 call = ret(181170 'new'(181172 call fileWriter locking serializer this err hints start end style)))
      }
      (181188 'elided on block' 0 tmp[181184])
    }
    if(181208 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (181194 call ioerror err "in file.writer"(181203 call(181200 call . this c"_tryGetPath")))
          }
        }
      }
    }
    (181213 return ret)
  }
  { scopeless type
    (180953 call fileWriter locking st)
  }
  function _isSimpleIoType[181218](arg t[181220]:_any[141](?)) param : _unknown[42]
  {
    (181223 return(181224 call ||(181226 call ||(181229 call isBoolType t)(181232 call isNumericType t))(181235 call isEnumType t)))
  }
  function _isIoPrimitiveType[181239](arg t[181241]:_any[141](?)) param : _unknown[42]
  {
    (181244 return(181245 call ||(181247 call ||(181250 call _isSimpleIoType t)(181252 call == t string[244]))(181256 call == t bytes[232])))
  }
  function _isIoPrimitiveTypeOrNewline[181262](arg t[181264]:_any[141](?)) param : _unknown[42]
  {
    (181267 return(181268 call ||(181270 call ||(181272 call ||(181274 call ||(181277 call _isIoPrimitiveType t)(181279 call == t chpl_ioNewline))(181283 call == t chpl_ioLiteral))(181287 call == t _internalIoChar))(181291 call == t _internalIoBits)))
  }
  function _read_text_internal[181297](arg _channel_internal[181300] :
  qio_channel_ptr_t, ref arg x[181305] :
  unknown t[181303]) : _unknown[42] "private"
  {
    if(181867 call _cond_test(181865 call isBoolType t))
    {
      { scopeless
        unknown err[181315] 0 errorCode
        (181319 'end of statement')
      }
      { scopeless
        unknown got[181321] 0 bool
        (181325 'end of statement')
      }
      (181326 call = err(181330 call qio_channel_scan_literal 0 _channel_internal "true"(181334 call :(181337 call . "true" c"numBytes") c_ssize_t) 1))
      if(181375 call _cond_test(181372 call ! err))
      {
        (181343 call = got 1)
      }
      {
        { scopeless
          if(181368 call _cond_test(181364 call == err EFORMAT))
          {
            (181348 call = err(181352 call qio_channel_scan_literal 0 _channel_internal "false"(181356 call :(181359 call . "false" c"numBytes") c_ssize_t) 1))
          }
        }
      }
      if(181388 call _cond_test(181385 call ! err))
      {
        { scopeless
          (181380 call = x got)
        }
      }
      (181393 return err)
    }
    {
      { scopeless
        if(181859 call _cond_test(181857 call isIntegralType t))
        {
          (181396 return(181398 call qio_channel_scan_int 0 _channel_internal x(181403 call numBytes t)(181406 call isIntType t)))
        }
        {
          { scopeless
            if(181851 call _cond_test(181849 call isRealType t))
            {
              (181409 return(181411 call qio_channel_scan_float 0 _channel_internal x(181416 call numBytes t)))
            }
            {
              { scopeless
                if(181843 call _cond_test(181841 call isImagType t))
                {
                  (181419 return(181421 call qio_channel_scan_imag 0 _channel_internal x(181426 call numBytes t)))
                }
                {
                  { scopeless
                    if(181835 call _cond_test(181833 call isComplexType t))
                    {
                      { scopeless
                        unknown re[181430](181435 'typeof'(181432 call . x c"re"))
                        (181437 'end of statement')
                      }
                      { scopeless
                        unknown im[181439](181444 'typeof'(181441 call . x c"im"))
                        (181446 'end of statement')
                      }
                      { scopeless
                        unknown err[181448] 0 errorCode
                        (181452 'end of statement')
                      }
                      (181453 call = err(181457 call qio_channel_scan_complex 0 _channel_internal re im(181463 call numBytes(181468 'typeof'(181465 call . x c"re")))))
                      (181469 call = x(181472 call :(181477 call _build_tuple re im) t))
                      (181480 return err)
                    }
                    {
                      { scopeless
                        if(181827 call _cond_test(181823 call == t string[244]))
                        {
                          { scopeless
                            unknown len[181484](181486 call int[10] 64)
                            (181489 'end of statement')
                          }
                          { scopeless
                            unknown tx[181491](181493 call c_ptrConst c_char)
                            (181496 'end of statement')
                          }
                          { scopeless
                            unknown ret[181498](181500 call qio_channel_scan_string 0 _channel_internal tx len(181505 call - 1))
                            (181509 'end of statement')
                          }
                          (181510 call = x(181521 'try!-expr'(181517 call(181514 call . string[244] c"createAdoptingBuffer") tx(length = len))))
                          (181522 return ret)
                        }
                        {
                          { scopeless
                            if(181818 call _cond_test(181814 call == t bytes[232]))
                            {
                              { scopeless
                                unknown len[181526](181528 call int[10] 64)
                                (181531 'end of statement')
                              }
                              { scopeless
                                unknown tx[181533](181535 call c_ptrConst c_char)
                                (181538 'end of statement')
                              }
                              { scopeless
                                unknown ret[181540](181542 call qio_channel_scan_bytes 0 _channel_internal tx len(181547 call - 1))
                                (181551 'end of statement')
                              }
                              (181552 call = x(181559 call(181556 call . bytes[232] c"createAdoptingBuffer") tx(length = len)))
                              (181563 return ret)
                            }
                            {
                              { scopeless
                                if(181810 call _cond_test(181808 call isEnumType t))
                                {
                                  { scopeless
                                    unknown err[181567] 0 errorCode
                                    (181571 'end of statement')
                                  }
                                  { scopeless
                                    unknown st[181573](181575 call qio_channel_style_element _channel_internal QIO_STYLE_ELEMENT_AGGREGATE)
                                    (181579 'end of statement')
                                  }
                                  {
                                    unknown _indexOfInterest[181763] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                    unknown _iterator[181764] "expr temp" "temp"
                                    (181773 'move' _iterator[181764](181771 call _getIterator t))
                                    Defer
                                    {
                                      {
                                        (181788 call _freeIterator _iterator[181764])
                                      }
                                    }
                                    { scopeless type
                                      (181778 'move' _indexOfInterest[181763](181775 call iteratorIndex _iterator[181764]))
                                    }
                                    ForLoop[181765]
                                    {
                                      unknown i[181580] "index var" "insert auto destroy"
                                      (181783 'move' i[181580] _indexOfInterest[181763])
                                      {
                                        {
                                          { scopeless
                                            unknown str[181586](181587 call : i string[244])
                                            (181592 'end of statement')
                                          }
                                          if(181608 call _cond_test(181604 call == st QIO_AGGREGATE_FORMAT_JSON))
                                          {
                                            { scopeless
                                              (181593 call = str(181596 call +(181598 call + "\"" str) "\""))
                                            }
                                          }
                                          { scopeless
                                            unknown slen[181614](181623 call(181620 call .(181617 call . str c"numBytes") c"safeCast") c_ssize_t) c_ssize_t
                                            (181626 'end of statement')
                                          }
                                          (181627 call = err(181631 call qio_channel_scan_literal 0 _channel_internal(181638 call(181635 call . str c"c_str")) slen 1))
                                          if(181664 call _cond_test(181661 call ! err))
                                          {
                                            (181642 call = x i)
                                            break nil[32]
                                          }
                                          {
                                            { scopeless
                                              if(181656 call _cond_test(181652 call != err EFORMAT))
                                              {
                                                { scopeless
                                                  break nil[32]
                                                }
                                              }
                                            }
                                          }
                                        }
                                        {
                                          { scopeless
                                            unknown str[181671](181672 call +(181674 call +(181676 call : t string[244]) ".")(181681 call : i string[244]))
                                            (181686 'end of statement')
                                          }
                                          if(181702 call _cond_test(181698 call == st QIO_AGGREGATE_FORMAT_JSON))
                                          {
                                            { scopeless
                                              (181687 call = str(181690 call +(181692 call + "\"" str) "\""))
                                            }
                                          }
                                          { scopeless
                                            unknown slen[181708](181717 call(181714 call .(181711 call . str c"numBytes") c"safeCast") c_ssize_t) c_ssize_t
                                            (181720 'end of statement')
                                          }
                                          (181721 call = err(181725 call qio_channel_scan_literal 0 _channel_internal(181732 call(181729 call . str c"c_str")) slen 1))
                                          if(181758 call _cond_test(181755 call ! err))
                                          {
                                            (181736 call = x i)
                                            break nil[32]
                                          }
                                          {
                                            { scopeless
                                              if(181750 call _cond_test(181746 call != err EFORMAT))
                                              {
                                                { scopeless
                                                  break nil[32]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      label _continueLabel[181768]
                                      _indexOfInterest[181763]
                                      _iterator[181764]
                                    }
                                    label _breakLabel[181769]
                                  }
                                  (181795 return err)
                                }
                                {
                                  (181799 call compilerError "Unknown primitive type in _read_text_internal "(181803 call : t string[244]))
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (181872 return EINVAL)
  }
  where {
    (181310 call _isIoPrimitiveType t)
  }
  { scopeless type
    errorCode
  }
  function _write_text_internal[181878](arg _channel_internal[181881] :
  qio_channel_ptr_t, arg x[181886] :
  unknown t[181884]) : _unknown[42] "private"
  {
    if(182178 call _cond_test(182176 call isBoolType t))
    {
      if(181924 call _cond_test x)
      {
        (181896 return(181898 call qio_channel_print_literal 0 _channel_internal "true"(181902 call :(181905 call . "true" c"numBytes") c_ssize_t)))
      }
      {
        (181910 return(181912 call qio_channel_print_literal 0 _channel_internal "false"(181916 call :(181919 call . "false" c"numBytes") c_ssize_t)))
      }
    }
    {
      { scopeless
        if(182170 call _cond_test(182168 call isIntegralType t))
        {
          (181929 return(181931 call qio_channel_print_int 0 _channel_internal x(181936 call numBytes t)(181939 call isIntType t)))
        }
        {
          { scopeless
            if(182162 call _cond_test(182160 call isRealType t))
            {
              (181942 return(181944 call qio_channel_print_float 0 _channel_internal x(181949 call numBytes t)))
            }
            {
              { scopeless
                if(182154 call _cond_test(182152 call isImagType t))
                {
                  (181952 return(181954 call qio_channel_print_imag 0 _channel_internal x(181959 call numBytes t)))
                }
                {
                  { scopeless
                    if(182146 call _cond_test(182144 call isComplexType t))
                    {
                      { scopeless
                        unknown re[181963](181965 call . x c"re")
                        (181969 'end of statement')
                      }
                      { scopeless
                        unknown im[181971](181973 call . x c"im")
                        (181977 'end of statement')
                      }
                      (181978 return(181980 call qio_channel_print_complex 0 _channel_internal re im(181986 call numBytes(181988 'typeof' re))))
                    }
                    {
                      { scopeless
                        if(182138 call _cond_test(182134 call == t string[244]))
                        {
                          { scopeless
                            const local_x[181991] "const"(181996 call(181993 call . x c"localize"))
                            (181998 'end of statement')
                          }
                          if(182006 call _cond_test(182003 call . local_x c"hasEscapes"))
                          {
                            (182000 return EILSEQ)
                          }
                          (182010 return(182012 call qio_channel_print_string 0 _channel_internal(182019 call(182016 call . local_x c"c_str"))(182020 call :(182023 call . local_x c"numBytes") c_ssize_t)))
                        }
                        {
                          { scopeless
                            if(182129 call _cond_test(182125 call == t bytes[232]))
                            {
                              { scopeless
                                const local_x[182029] "const"(182034 call(182031 call . x c"localize"))
                                (182036 'end of statement')
                              }
                              (182037 return(182039 call qio_channel_print_bytes 0 _channel_internal(182046 call(182043 call . local_x c"c_str"))(182047 call :(182050 call . local_x c"numBytes") c_ssize_t)))
                            }
                            {
                              { scopeless
                                if(182121 call _cond_test(182119 call isEnumType t))
                                {
                                  { scopeless
                                    unknown st[182056](182058 call qio_channel_style_element _channel_internal QIO_STYLE_ELEMENT_AGGREGATE)
                                    (182062 'end of statement')
                                  }
                                  { scopeless
                                    unknown s[182064](182065 call : x string[244])
                                    (182070 'end of statement')
                                  }
                                  if(182086 call _cond_test(182082 call == st QIO_AGGREGATE_FORMAT_JSON))
                                  {
                                    { scopeless
                                      (182071 call = s(182074 call +(182076 call + "\"" s) "\""))
                                    }
                                  }
                                  (182091 return(182093 call qio_channel_print_literal 0 _channel_internal(182100 call(182097 call . s c"c_str"))(182101 call :(182104 call . s c"numBytes") c_ssize_t)))
                                }
                                {
                                  (182110 call compilerError "Unknown primitive type in _write_text_internal "(182114 call : t string[244]))
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (182183 return EINVAL)
  }
  where {
    (181891 call _isIoPrimitiveType t)
  }
  { scopeless type
    errorCode
  }
  { scopeless
    unknown chpl_testReadBinaryInternalEIO[182190] "config" "param" 0
    (182193 'end of statement')
  }
  function _read_binary_internal[182194](arg _channel_internal[182197] :
  qio_channel_ptr_t, param arg byteorder[182201] :
  _iokind, ref arg x[182206] :
  unknown t[182204]) : _unknown[42] "private"
  {
    if(182218 call _cond_test chpl_testReadBinaryInternalEIO)
    {
      (182215 return EIO)
    }
    if(182864 call _cond_test(182862 call isBoolType t))
    {
      { scopeless
        unknown got[182224](182226 call int[10] 32)
        (182229 'end of statement')
      }
      (182230 call = got(182234 call qio_channel_read_byte 0 _channel_internal))
      if(182259 call _cond_test(182255 call >= got 0))
      {
        (182238 call = x(182241 call != got 0))
        (182245 return 0)
      }
      {
        (182248 return(182249 call :(182251 call - got) errorCode))
      }
    }
    {
      { scopeless
        if(182856 call _cond_test(182854 call isIntegralType t))
        {
          if(182457 call _cond_test(182451 call ==(182454 call numBytes t) 1))
          {
            { scopeless
              unknown got[182266](182268 call int[10] 32)
              (182271 'end of statement')
            }
            (182272 call = got(182276 call qio_channel_read_byte 0 _channel_internal))
            if(182306 call _cond_test(182302 call >= got 0))
            {
              (182280 call = x(182283 call :(182285 call : got(182289 call uint[86] 8)) t))
              (182292 return 0)
            }
            {
              (182295 return(182296 call :(182298 call - got) errorCode))
            }
          }
          {
            { scopeless
              if(182446 call _cond_test(182440 call == t(182444 call int[10] 16)))
              {
                (182311 return(182313 call qio_channel_read_int16 0(182315 call : byteorder c_int) _channel_internal x))
              }
              {
                { scopeless
                  if(182435 call _cond_test(182429 call == t(182433 call uint[86] 16)))
                  {
                    (182322 return(182324 call qio_channel_read_uint16 0(182326 call : byteorder c_int) _channel_internal x))
                  }
                  {
                    { scopeless
                      if(182424 call _cond_test(182418 call == t(182422 call int[10] 32)))
                      {
                        (182333 return(182335 call qio_channel_read_int32 0(182337 call : byteorder c_int) _channel_internal x))
                      }
                      {
                        { scopeless
                          if(182413 call _cond_test(182407 call == t(182411 call uint[86] 32)))
                          {
                            (182344 return(182346 call qio_channel_read_uint32 0(182348 call : byteorder c_int) _channel_internal x))
                          }
                          {
                            { scopeless
                              if(182402 call _cond_test(182396 call == t(182400 call int[10] 64)))
                              {
                                (182355 return(182357 call qio_channel_read_int64 0(182359 call : byteorder c_int) _channel_internal x))
                              }
                              {
                                { scopeless
                                  if(182392 call _cond_test(182386 call == t(182390 call uint[86] 64)))
                                  {
                                    (182366 return(182368 call qio_channel_read_uint64 0(182370 call : byteorder c_int) _channel_internal x))
                                  }
                                  {
                                    (182378 call compilerError "Unknown int type in _read_binary_internal "(182382 call : t string[244]))
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        {
          { scopeless
            if(182848 call _cond_test(182840 call ||(182843 call isRealType t)(182846 call isImagType t)))
            {
              if(182527 call _cond_test(182513 call ||(182515 call == t(182519 call real[13] 32))(182521 call == t(182525 call imag 32))))
              {
                (182464 return(182466 call qio_channel_read_float32 0(182468 call : byteorder c_int) _channel_internal x))
              }
              {
                { scopeless
                  if(182509 call _cond_test(182495 call ||(182497 call == t(182501 call real[13] 64))(182503 call == t(182507 call imag 64))))
                  {
                    (182475 return(182477 call qio_channel_read_float64 0(182479 call : byteorder c_int) _channel_internal x))
                  }
                  {
                    (182487 call compilerError "Unknown float type in _read_binary_internal "(182491 call : t string[244]))
                  }
                }
              }
            }
            {
              { scopeless
                if(182835 call _cond_test(182833 call isComplexType t))
                {
                  { scopeless
                    unknown re[182534](182539 'typeof'(182536 call . x c"re"))
                    (182541 'end of statement')
                  }
                  { scopeless
                    unknown im[182543](182548 'typeof'(182545 call . x c"im"))
                    (182550 'end of statement')
                  }
                  { scopeless
                    unknown err[182552] 0 errorCode
                    (182556 'end of statement')
                  }
                  if(182651 call _cond_test(182644 call ==(182647 'typeof' re)(182649 call real[13] 32)))
                  {
                    (182558 call = err(182562 call qio_channel_read_float32 0(182564 call : byteorder c_int) _channel_internal re))
                    if(182586 call _cond_test(182583 call ! err))
                    {
                      (182571 call = err(182575 call qio_channel_read_float32 0(182577 call : byteorder c_int) _channel_internal im))
                    }
                  }
                  {
                    { scopeless
                      if(182640 call _cond_test(182633 call ==(182636 'typeof' re)(182638 call real[13] 64)))
                      {
                        (182591 call = err(182595 call qio_channel_read_float64 0(182597 call : byteorder c_int) _channel_internal re))
                        if(182619 call _cond_test(182616 call ! err))
                        {
                          (182604 call = err(182608 call qio_channel_read_float64 0(182610 call : byteorder c_int) _channel_internal im))
                        }
                      }
                      {
                        (182625 call compilerError "Unknown complex type in _read_binary_internal "(182629 call : t string[244]))
                      }
                    }
                  }
                  (182656 call = x(182659 call :(182664 call _build_tuple re im) t))
                  (182667 return err)
                }
                {
                  { scopeless
                    if(182827 call _cond_test(182823 call == t string[244]))
                    {
                      { scopeless
                        unknown len[182671](182673 call int[10] 64)
                        (182676 'end of statement')
                      }
                      { scopeless
                        unknown tx[182678](182680 call c_ptrConst c_char)
                        (182683 'end of statement')
                      }
                      { scopeless
                        unknown ret[182685](182687 call qio_channel_read_string 0(182689 call : byteorder c_int)(182694 call qio_channel_str_style _channel_internal) _channel_internal tx len(182699 call - 1))
                        (182703 'end of statement')
                      }
                      (182704 call = x(182715 'try!-expr'(182711 call(182708 call . string[244] c"createAdoptingBuffer") tx(length = len))))
                      (182716 return ret)
                    }
                    {
                      { scopeless
                        if(182818 call _cond_test(182814 call == t bytes[232]))
                        {
                          { scopeless
                            unknown len[182720](182722 call int[10] 64)
                            (182725 'end of statement')
                          }
                          { scopeless
                            unknown tx[182727](182729 call c_ptrConst c_char)
                            (182732 'end of statement')
                          }
                          { scopeless
                            unknown ret[182734](182736 call qio_channel_read_string 0(182738 call : byteorder c_int)(182743 call qio_channel_str_style _channel_internal) _channel_internal tx len(182748 call - 1))
                            (182752 'end of statement')
                          }
                          (182753 call = x(182760 call(182757 call . bytes[232] c"createAdoptingBuffer") tx(length = len)))
                          (182764 return ret)
                        }
                        {
                          { scopeless
                            if(182810 call _cond_test(182808 call isEnumType t))
                            {
                              { scopeless
                                unknown i[182768](182770 call chpl_enum_mintype t)
                                (182773 'end of statement')
                              }
                              { scopeless
                                unknown err[182775] 0 errorCode
                                (182779 'end of statement')
                              }
                              (182780 call = err(182784 call _read_binary_internal _channel_internal byteorder i))
                              (182788 call = x(182792 call chpl__orderToEnum i t))
                              (182795 return err)
                            }
                            {
                              (182799 call compilerError "Unknown primitive type in _read_binary_internal "(182803 call : t string[244]))
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (182869 return EINVAL)
  }
  where {
    (182211 call _isIoPrimitiveType t)
  }
  { scopeless type
    errorCode
  }
  { scopeless
    unknown chpl_testWriteBinaryInternalEIO[182876] "config" "param" 0
    (182879 'end of statement')
  }
  function _write_binary_internal[182880](arg _channel_internal[182883] :
  qio_channel_ptr_t, param arg byteorder[182887] :
  _iokind, arg x[182892] :
  unknown t[182890]) : _unknown[42] "private"
  {
    if(182904 call _cond_test chpl_testWriteBinaryInternalEIO)
    {
      (182901 return EIO)
    }
    if(183462 call _cond_test(183460 call isBoolType t))
    {
      { scopeless
        unknown zero_one[182910](182927 IfExpr  x then
        { scopeless
          (182915 call : 1(182919 call uint[86] 8))
        } else
        { scopeless
          (182921 call : 0(182925 call uint[86] 8))
        } )(182912 call uint[86] 8)
        (182931 'end of statement')
      }
      (182932 return(182934 call qio_channel_write_byte 0 _channel_internal zero_one))
    }
    {
      { scopeless
        if(183454 call _cond_test(183452 call isIntegralType t))
        {
          if(183098 call _cond_test(183092 call ==(183095 call numBytes t) 1))
          {
            (182940 return(182942 call qio_channel_write_byte 0 _channel_internal(182945 call : x(182949 call uint[86] 8))))
          }
          {
            { scopeless
              if(183087 call _cond_test(183081 call == t(183085 call int[10] 16)))
              {
                (182952 return(182954 call qio_channel_write_int16 0(182956 call : byteorder c_int) _channel_internal x))
              }
              {
                { scopeless
                  if(183076 call _cond_test(183070 call == t(183074 call uint[86] 16)))
                  {
                    (182963 return(182965 call qio_channel_write_uint16 0(182967 call : byteorder c_int) _channel_internal x))
                  }
                  {
                    { scopeless
                      if(183065 call _cond_test(183059 call == t(183063 call int[10] 32)))
                      {
                        (182974 return(182976 call qio_channel_write_int32 0(182978 call : byteorder c_int) _channel_internal x))
                      }
                      {
                        { scopeless
                          if(183054 call _cond_test(183048 call == t(183052 call uint[86] 32)))
                          {
                            (182985 return(182987 call qio_channel_write_uint32 0(182989 call : byteorder c_int) _channel_internal x))
                          }
                          {
                            { scopeless
                              if(183043 call _cond_test(183037 call == t(183041 call int[10] 64)))
                              {
                                (182996 return(182998 call qio_channel_write_int64 0(183000 call : byteorder c_int) _channel_internal x))
                              }
                              {
                                { scopeless
                                  if(183033 call _cond_test(183027 call == t(183031 call uint[86] 64)))
                                  {
                                    (183007 return(183009 call qio_channel_write_uint64 0(183011 call : byteorder c_int) _channel_internal x))
                                  }
                                  {
                                    (183019 call compilerError "Unknown int type in _write_binary_internal "(183023 call : t string[244]))
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        {
          { scopeless
            if(183446 call _cond_test(183438 call ||(183441 call isRealType t)(183444 call isImagType t)))
            {
              if(183168 call _cond_test(183154 call ||(183156 call == t(183160 call real[13] 32))(183162 call == t(183166 call imag 32))))
              {
                (183105 return(183107 call qio_channel_write_float32 0(183109 call : byteorder c_int) _channel_internal x))
              }
              {
                { scopeless
                  if(183150 call _cond_test(183136 call ||(183138 call == t(183142 call real[13] 64))(183144 call == t(183148 call imag 64))))
                  {
                    (183116 return(183118 call qio_channel_write_float64 0(183120 call : byteorder c_int) _channel_internal x))
                  }
                  {
                    (183128 call compilerError "Unknown float type in _write_binary_internal "(183132 call : t string[244]))
                  }
                }
              }
            }
            {
              { scopeless
                if(183433 call _cond_test(183431 call isComplexType t))
                {
                  { scopeless
                    unknown re[183175](183177 call . x c"re")
                    (183181 'end of statement')
                  }
                  { scopeless
                    unknown im[183183](183185 call . x c"im")
                    (183189 'end of statement')
                  }
                  { scopeless
                    unknown err[183191] 0 errorCode
                    (183195 'end of statement')
                  }
                  if(183290 call _cond_test(183283 call ==(183286 'typeof' re)(183288 call real[13] 32)))
                  {
                    (183197 call = err(183201 call qio_channel_write_float32 0(183203 call : byteorder c_int) _channel_internal re))
                    if(183225 call _cond_test(183222 call ! err))
                    {
                      (183210 call = err(183214 call qio_channel_write_float32 0(183216 call : byteorder c_int) _channel_internal im))
                    }
                  }
                  {
                    { scopeless
                      if(183279 call _cond_test(183272 call ==(183275 'typeof' re)(183277 call real[13] 64)))
                      {
                        (183230 call = err(183234 call qio_channel_write_float64 0(183236 call : byteorder c_int) _channel_internal re))
                        if(183258 call _cond_test(183255 call ! err))
                        {
                          (183243 call = err(183247 call qio_channel_write_float64 0(183249 call : byteorder c_int) _channel_internal im))
                        }
                      }
                      {
                        (183264 call compilerError "Unknown complex type in _write_binary_internal "(183268 call : t string[244]))
                      }
                    }
                  }
                  (183295 return err)
                }
                {
                  { scopeless
                    if(183425 call _cond_test(183421 call == t string[244]))
                    {
                      { scopeless
                        unknown local_x[183299](183304 call(183301 call . x c"localize"))
                        (183306 'end of statement')
                      }
                      if(183314 call _cond_test(183311 call . local_x c"hasEscapes"))
                      {
                        (183308 return EILSEQ)
                      }
                      (183318 return(183320 call qio_channel_write_string 0(183322 call : byteorder c_int)(183327 call qio_channel_str_style _channel_internal) _channel_internal(183334 call(183331 call . local_x c"c_str"))(183335 call :(183338 call . local_x c"numBytes") c_ssize_t)))
                    }
                    {
                      { scopeless
                        if(183416 call _cond_test(183412 call == t bytes[232]))
                        {
                          { scopeless
                            unknown local_x[183344](183349 call(183346 call . x c"localize"))
                            (183351 'end of statement')
                          }
                          (183352 return(183354 call qio_channel_write_string 0(183356 call : byteorder c_int)(183361 call qio_channel_str_style _channel_internal) _channel_internal(183368 call(183365 call . local_x c"c_str"))(183369 call :(183372 call . local_x c"numBytes") c_ssize_t)))
                        }
                        {
                          { scopeless
                            if(183408 call _cond_test(183406 call isEnumType t))
                            {
                              { scopeless
                                unknown i[183378](183379 call :(183382 call chpl__enumToOrder x)(183385 call chpl_enum_mintype t))
                                (183388 'end of statement')
                              }
                              (183389 return(183391 call _write_binary_internal _channel_internal byteorder i))
                            }
                            {
                              (183397 call compilerError "Unknown primitive type in write_binary_internal "(183401 call : t string[244]))
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (183467 return EINVAL)
  }
  where {
    (182897 call _isIoPrimitiveType t)
  }
  { scopeless type
    errorCode
  }
  function _unknown[42]._constructIoErrorMsg[183473](arg _mt[183484]:_MT[201], arg this[183476] :
  fileReader, const arg x[183481] :
  unknown t[183479]) : _unknown[42] "method"
  {
    { scopeless
      unknown result[183489] "while reading " string[244]
      (183495 'end of statement')
    }
    (183496 call += result(183499 call : t string[244]))
    {
      unknown tmp[183543] "expr temp" "maybe param" "maybe type" "temp"
      (183545 'move' tmp[183543] t)
      if(183550 call _cond_test(183547 call == tmp[183543] chpl_ioNewline))
      {
        { scopeless
          (183508 call += result(183511 call + " " "newline"))
        }
      }
      {
        if(183556 call _cond_test(183553 call == tmp[183543] chpl_ioLiteral))
        {
          { scopeless
            (183523 call += result(183526 call +(183528 call +(183530 call + " " "\"")(183534 call : x string[244])) "\""))
          }
        }
      }
    }
    (183560 return result)
  }
  { scopeless type
    string[244]
  }
  function _unknown[42]._constructIoErrorMsg[183565](arg _mt[183576]:_MT[201], arg this[183568] :
  fileWriter, const arg x[183573] :
  unknown t[183571]) : _unknown[42] "method"
  {
    { scopeless
      unknown result[183581] "while writing " string[244]
      (183587 'end of statement')
    }
    (183588 call += result(183591 call : t string[244]))
    {
      unknown tmp[183633] "expr temp" "maybe param" "maybe type" "temp"
      (183635 'move' tmp[183633] t)
      if(183640 call _cond_test(183637 call == tmp[183633] chpl_ioNewline))
      {
        { scopeless
          (183600 call += result(183603 call + " " "newline"))
        }
      }
      {
        if(183646 call _cond_test(183643 call == tmp[183633] chpl_ioLiteral))
        {
          { scopeless
            (183613 call += result(183616 call +(183618 call +(183620 call + " " "\"")(183624 call : x string[244])) "\""))
          }
        }
      }
    }
    (183650 return result)
  }
  { scopeless type
    string[244]
  }
  function _unknown[42]._deserializeOne[183655](arg _mt[183667]:_MT[201], arg this[183658] :
  fileReader, arg readType[183661]:_any[141](?), arg loc[183664] :
  locale[234]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown reader[183671] "no auto destroy" "no init"(183673 call fileReader(locking = 0) deserializerType)
      (183678 'end of statement')
    }
    (183679 call =(183682 call . reader c"_channel_internal") _channel_internal)
    (183686 '='(183688 call . reader c"_deserializer") _deserializer)
    (183692 call =(183695 call . reader c"_home") _home)
    (183699 call =(183702 call . reader c"_readWriteThisFromLocale") loc)
    (183706 return(183716 call(183713 call .(183708 call . reader c"deserializer") c"deserializeType") reader readType))
  }
  function _unknown[42]._deserializeOne[183721](arg _mt[183736]:_MT[201], arg this[183724] :
  fileReader, ref arg x[183729] :
  unknown t[183727], arg loc[183733] :
  locale[234]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown reader[183740] "no auto destroy" "no init"(183742 call fileReader(locking = 0) deserializerType)
      (183747 'end of statement')
    }
    (183748 call =(183751 call . reader c"_channel_internal") _channel_internal)
    (183755 '='(183757 call . reader c"_deserializer") _deserializer)
    (183761 call =(183764 call . reader c"_home") _home)
    (183768 call =(183771 call . reader c"_readWriteThisFromLocale") loc)
    if(183814 call _cond_test(183792 call ||(183794 call ||(183796 call ||(183798 call == t chpl_ioLiteral)(183802 call == t chpl_ioNewline))(183806 call == t _internalIoBits))(183810 call == t _internalIoChar)))
    {
      (183780 call(183777 call . reader c"_readOne")(183782 call . _iokind c"dynamic") x(183790 call(183787 call . reader c"getLocaleOfIoRequest")))
      (183791 return)
    }
    (183827 call(183824 call .(183819 call . reader c"deserializer") c"deserializeValue") reader x)
  }
  function _unknown[42]._readOne[183832](arg _mt[183851]:_MT[201], arg this[183835] :
  fileReader, param arg kind[183839] :
  _iokind, ref arg x[183844] :
  unknown t[183842], arg loc[183848] :
  locale[234]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[183855](183862 'try-expr'(183857 call _read_one_internal _channel_internal kind x loc))
      (183864 'end of statement')
    }
    if(183885 call _cond_test(183881 call != err 0))
    {
      { scopeless
        const msg[183867] "const"(183869 call _constructIoErrorMsg x)
        (183872 'end of statement')
      }
      Try
      {
        {
          (183875 call _ch_ioerror err msg)
        }
      }
    }
  }
  function escapedNonUTF8ErrorMessage[183891]() : _unknown[42] "private"
  {
    { scopeless
      const ret[183896] "const"(183897 call + "Strings with escaped non-UTF8 bytes cannot be used with I/O. " "Try using string.encode(encodePolicy.unescape) first.\n")
      (183906 'end of statement')
    }
    (183907 return ret)
  }
  { scopeless type
    string[244]
  }
  function _unknown[42]._serializeOne[183912](arg _mt[183927]:_MT[201], arg this[183915] :
  fileWriter, const arg x[183920] :
  unknown t[183918], arg loc[183924] :
  locale[234]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown writer[183931] "no auto destroy" "no init"(183933 call fileWriter(locking = 0) serializerType)
      (183938 'end of statement')
    }
    (183939 call =(183942 call . writer c"_channel_internal") _channel_internal)
    (183946 '='(183948 call . writer c"_serializer") _serializer)
    (183952 call =(183955 call . writer c"_home") _home)
    (183959 call =(183962 call . writer c"_readWriteThisFromLocale") loc)
    if(184005 call _cond_test(183983 call ||(183985 call ||(183987 call ||(183989 call == t chpl_ioLiteral)(183993 call == t chpl_ioNewline))(183997 call == t _internalIoBits))(184001 call == t _internalIoChar)))
    {
      (183971 call(183968 call . writer c"_writeOne")(183973 call . _iokind c"dynamic") x(183981 call(183978 call . writer c"getLocaleOfIoRequest")))
      (183982 return)
    }
    Try
    {
      {
        (184021 call(184018 call .(184013 call . writer c"serializer") c"serializeValue") writer x)
      }
    }
  }
  function _unknown[42]._writeOne[184029](arg _mt[184048]:_MT[201], arg this[184032] :
  fileWriter, param arg kind[184036] :
  _iokind, const arg x[184041] :
  unknown t[184039], arg loc[184045] :
  locale[234]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[184052](184054 call _write_one_internal _channel_internal kind x loc)
      (184060 'end of statement')
    }
    if(184098 call _cond_test(184094 call != err 0))
    {
      { scopeless
        unknown msg[184063](184065 call _constructIoErrorMsg x)
        (184068 'end of statement')
      }
      if(184082 call _cond_test(184078 call == err EILSEQ))
      {
        (184070 call = msg(184073 call +(184076 call escapedNonUTF8ErrorMessage) msg))
      }
      Try
      {
        {
          (184088 call _ch_ioerror err msg)
        }
      }
    }
  }
  function _read_io_type_internal[184104](arg _channel_internal[184107] :
  qio_channel_ptr_t, param arg kind[184111] :
  _iokind, ref arg x[184116] :
  unknown t[184114], arg loc[184120] :
  locale[234]) : _unknown[42] throws "private"
  {
    { scopeless
      unknown e[184126] 0 errorCode
      (184130 'end of statement')
    }
    if(184369 call _cond_test(184365 call == t chpl_ioNewline))
    {
      (184132 return(184134 call qio_channel_skip_past_newline 0 _channel_internal(184140 call . x c"skipWhitespaceOnly")))
    }
    {
      { scopeless
        if(184360 call _cond_test(184356 call == t _internalIoChar))
        {
          (184144 return(184146 call qio_channel_read_char 0 _channel_internal(184150 call . x c"ch")))
        }
        {
          { scopeless
            if(184351 call _cond_test(184347 call == t chpl_ioLiteral))
            {
              (184154 return(184156 call qio_channel_scan_literal 0 _channel_internal(184170 call(184167 call .(184166 call(184163 call .(184160 call . x c"val") c"localize")) c"c_str"))(184171 call :(184177 call .(184174 call . x c"val") c"numBytes") c_ssize_t)(184184 call . x c"ignoreWhiteSpace")))
            }
            {
              { scopeless
                if(184342 call _cond_test(184338 call == t _internalIoBits))
                {
                  (184188 return(184190 call qio_channel_read_bits 0 _channel_internal(184196 call . x c"x")(184202 call . x c"numBits")))
                }
                {
                  { scopeless
                    if(184334 call _cond_test(184327 call == kind(184331 call . _iokind c"dynamic")))
                    {
                      { scopeless
                        unknown binary[184207](184212 call qio_channel_binary _channel_internal)(184209 call uint[86] 8)
                        (184215 'end of statement')
                      }
                      { scopeless
                        unknown byteorder[184217](184222 call qio_channel_byteorder _channel_internal)(184219 call uint[86] 8)
                        (184225 'end of statement')
                      }
                      if(184314 call _cond_test binary)
                      {
                        {
                          unknown tmp[184288] "expr temp" "maybe param" "maybe type" "temp"
                          (184290 'move' tmp[184288](184227 call : byteorder _iokind))
                          if(184295 call _cond_test(184292 call == tmp[184288](184234 call . _iokind c"big")))
                          {
                            { scopeless
                              (184238 call = e(184242 call _read_binary_internal _channel_internal(184245 call . _iokind c"big") x))
                            }
                          }
                          {
                            if(184301 call _cond_test(184298 call == tmp[184288](184254 call . _iokind c"little")))
                            {
                              { scopeless
                                (184258 call = e(184262 call _read_binary_internal _channel_internal(184265 call . _iokind c"little") x))
                              }
                            }
                            {
                              (184275 call = e(184279 call _read_binary_internal _channel_internal(184282 call . _iokind c"native") x))
                            }
                          }
                        }
                      }
                      {
                        (184306 call = e(184310 call _read_text_internal _channel_internal x))
                      }
                    }
                    {
                      (184319 call = e(184323 call _read_binary_internal _channel_internal kind x))
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (184374 return e)
  }
  { scopeless type
    errorCode
  }
  function _read_one_internal[184379](arg _channel_internal[184382] :
  qio_channel_ptr_t, param arg kind[184386] :
  _iokind, ref arg x[184391] :
  unknown t[184389], arg loc[184395] :
  locale[234]) : _unknown[42] throws "private" "fn exempt instantiation limit"
  {
    { scopeless
      unknown e[184404] 0 errorCode
      (184408 'end of statement')
    }
    if(184445 call _cond_test(184438 call ==(184442 call chpl_localeID_to_locale(184441 '_wide_get_locale' x)) here))
    {
      (184410 call = e(184414 call _read_io_type_internal _channel_internal kind x loc))
    }
    {
      { scopeless
        unknown tmp[184421] t
        (184424 'end of statement')
      }
      (184425 call = e(184429 call _read_io_type_internal _channel_internal kind tmp loc))
      (184434 call = x tmp)
    }
    (184449 return e)
  }
  where {
    (184400 call _isIoPrimitiveTypeOrNewline t)
  }
  { scopeless type
    errorCode
  }
  function _write_one_internal[184455](arg _channel_internal[184458] :
  qio_channel_ptr_t, param arg kind[184462] :
  _iokind, const arg x[184467] :
  unknown t[184465], arg loc[184471] :
  locale[234]) : _unknown[42] throws "private" "fn exempt instantiation limit"
  {
    { scopeless
      unknown e[184480] 0 errorCode
      (184484 'end of statement')
    }
    if(184710 call _cond_test(184706 call == t chpl_ioNewline))
    {
      (184486 return(184488 call qio_channel_write_newline 0 _channel_internal))
    }
    {
      { scopeless
        if(184701 call _cond_test(184697 call == t _internalIoChar))
        {
          (184492 return(184494 call qio_channel_write_char 0 _channel_internal(184498 call . x c"ch")))
        }
        {
          { scopeless
            if(184692 call _cond_test(184688 call == t chpl_ioLiteral))
            {
              (184502 return(184504 call qio_channel_print_literal 0 _channel_internal(184518 call(184515 call .(184514 call(184511 call .(184508 call . x c"val") c"localize")) c"c_str"))(184519 call :(184525 call .(184522 call . x c"val") c"numBytes") c_ssize_t)))
            }
            {
              { scopeless
                if(184683 call _cond_test(184679 call == t _internalIoBits))
                {
                  (184530 return(184532 call qio_channel_write_bits 0 _channel_internal(184536 call . x c"x")(184540 call . x c"numBits")))
                }
                {
                  { scopeless
                    if(184675 call _cond_test(184668 call == kind(184672 call . _iokind c"dynamic")))
                    {
                      { scopeless
                        unknown binary[184545](184550 call qio_channel_binary _channel_internal)(184547 call uint[86] 8)
                        (184553 'end of statement')
                      }
                      { scopeless
                        unknown byteorder[184555](184560 call qio_channel_byteorder _channel_internal)(184557 call uint[86] 8)
                        (184563 'end of statement')
                      }
                      if(184655 call _cond_test binary)
                      {
                        {
                          unknown tmp[184629] "expr temp" "maybe param" "maybe type" "temp"
                          (184631 'move' tmp[184629](184565 call : byteorder _iokind))
                          if(184636 call _cond_test(184633 call == tmp[184629](184572 call . _iokind c"big")))
                          {
                            { scopeless
                              (184576 call = e(184587 'try-expr'(184580 call _write_binary_internal _channel_internal(184583 call . _iokind c"big") x)))
                            }
                          }
                          {
                            if(184642 call _cond_test(184639 call == tmp[184629](184593 call . _iokind c"little")))
                            {
                              { scopeless
                                (184597 call = e(184608 'try-expr'(184601 call _write_binary_internal _channel_internal(184604 call . _iokind c"little") x)))
                              }
                            }
                            {
                              (184615 call = e(184626 'try-expr'(184619 call _write_binary_internal _channel_internal(184622 call . _iokind c"native") x)))
                            }
                          }
                        }
                      }
                      {
                        (184647 call = e(184651 call _write_text_internal _channel_internal x))
                      }
                    }
                    {
                      (184660 call = e(184664 call _write_binary_internal _channel_internal kind x))
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (184715 return e)
  }
  where {
    (184476 call _isIoPrimitiveTypeOrNewline t)
  }
  { scopeless type
    errorCode
  }
  function _read_one_internal[184721](arg _channel_internal[184724] :
  qio_channel_ptr_t, param arg kind[184728] :
  _iokind, ref arg x[184733] :
  unknown t[184731], arg loc[184737] :
  locale[234]) : _unknown[42] throws "private" "fn exempt instantiation limit"
  {
    { scopeless
      unknown temp[184743](184745 call _shared(184748 call(184747 'to nilable class from type' _serializeWrapper) nothing))
      (184751 'end of statement')
    }
    { scopeless
      unknown reader[184753](184754 'new'(184756 call fileReader(locking = 0)(_deserializer = temp)(home = here)(_channel_internal = _channel_internal)(_readWriteThisFromLocale = loc)))
      (184768 'end of statement')
    }
    Defer
    {
      {
        (184770 call =(184773 call . reader c"_channel_internal") QIO_CHANNEL_PTR_NULL)
      }
    }
    if(184857 call _cond_test(184855 call isNilableClassType t))
    {
      { scopeless
        unknown st[184781](184786 call(184783 call . reader c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE)
        (184789 'end of statement')
      }
      { scopeless
        unknown iolit[184791] chpl_ioLiteral
        (184794 'end of statement')
      }
      if(184817 call _cond_test(184813 call == st QIO_AGGREGATE_FORMAT_JSON))
      {
        (184796 call = iolit(184799 'new'(184801 call chpl_ioLiteral "null")))
      }
      {
        (184806 call = iolit(184809 'new'(184811 call chpl_ioLiteral "nil")))
      }
      { scopeless
        unknown e[184822] 0 errorCode
        (184826 'end of statement')
      }
      (184827 call = e(184839 'try-expr'(184831 call _read_one_internal _channel_internal(184834 call . _iokind c"dynamic") iolit loc)))
      if(184850 call _cond_test(184847 call ! e))
      {
        (184841 call = x nil[32])
        (184845 return 0)
      }
    }
    if(184929 call _cond_test(184927 call isClassType t))
    {
      if(184874 call _cond_test(184870 call == x nil[32]))
      {
        { scopeless
          (184862 'throw'(184863 'new'(184865 call IllegalArgumentError "cannot read into a nil class")))
        }
      }
      { scopeless
        unknown tmp[184880](184881 call postfix! x)
        (184885 'end of statement')
      }
      Try
      {
        {
          (184893 call(184890 call . tmp c"readThis") reader)
        }
      }
      if(184910 call _cond_test(184904 call != tmp(184907 call postfix! x)))
      {
        { scopeless
          (184899 call halt "internal error - class pointer changed")
        }
      }
    }
    {
      Try
      {
        {
          (184921 call(184918 call . x c"readThis") reader)
        }
      }
    }
    (184933 return 0)
  }
  { scopeless type
    errorCode
  }
  function _write_one_internal[184938](arg _channel_internal[184941] :
  qio_channel_ptr_t, param arg kind[184945] :
  _iokind, const arg x[184950] :
  unknown t[184948], arg loc[184954] :
  locale[234]) : _unknown[42] throws "private" "suppress lvalue error" "fn exempt instantiation limit"
  {
    { scopeless
      unknown temp[184960](184962 call _shared(184965 call(184964 'to nilable class from type' _serializeWrapper) nothing))
      (184968 'end of statement')
    }
    { scopeless
      unknown writer[184970](184971 'new'(184973 call fileWriter(locking = 0)(_serializer = temp)(home = here)(_channel_internal = _channel_internal)(_readWriteThisFromLocale = loc)))
      (184985 'end of statement')
    }
    Defer
    {
      {
        (184987 call =(184990 call . writer c"_channel_internal") QIO_CHANNEL_PTR_NULL)
      }
    }
    { scopeless
      unknown err[184997] 0 errorCode
      (185001 'end of statement')
    }
    if(185127 call _cond_test(185114 call ||(185116 call ||(185119 call isClassType t)(185122 call chpl_isDdata t))(185125 call isAnyCPtr t)))
    {
      if(185098 call _cond_test(185094 call == x nil[32]))
      {
        { scopeless
          unknown st[185005](185010 call(185007 call . writer c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE)
          (185013 'end of statement')
        }
        { scopeless
          unknown iolit[185015] chpl_ioLiteral
          (185018 'end of statement')
        }
        if(185039 call _cond_test(185035 call == st QIO_AGGREGATE_FORMAT_JSON))
        {
          (185020 call = iolit(185023 'new'(185025 call chpl_ioLiteral "null")))
        }
        {
          (185028 call = iolit(185031 'new'(185033 call chpl_ioLiteral "nil")))
        }
        (185043 call = err(185055 'try-expr'(185047 call _write_one_internal _channel_internal(185050 call . _iokind c"dynamic") iolit loc)))
      }
      {
        { scopeless
          if(185090 call _cond_test(185088 call isClassType t))
          {
            { scopeless
              unknown notNilX[185058](185059 call postfix! x)
              (185063 'end of statement')
            }
            Try
            {
              {
                (185071 call(185068 call . notNilX c"writeThis") writer)
              }
            }
          }
          {
            Try
            {
              {
                (185082 call(185079 call . x c"writeThis") writer)
              }
            }
          }
        }
      }
    }
    {
      Try
      {
        {
          (185109 call(185106 call . x c"writeThis") writer)
        }
      }
    }
    (185131 return err)
  }
  { scopeless type
    errorCode
  }
  function _unknown[42].readIt[185136](arg _mt[185144]:_MT[201], arg this[185139] :
  fileReader, ref arg x[185142]:_any[141](?)) : _unknown[42] throws "method"
  {
    { scopeless
      const origLocale[185148] "const"(185153 call(185150 call . this c"getLocaleOfIoRequest"))
      (185155 'end of statement')
    }
    {
      const tmp[185203] "const" "temp"
      (185204 'move' tmp[185203](185201 'deref'(185200 '_wide_get_locale'(185157 call . this c"_home"))))
      {
        Try!
        {
          {
            (185166 call(185163 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (185175 call(185172 call . this c"unlock"))
          }
        }
        if(185196 call _cond_test(185192 call != deserializerType nothing))
        {
          (185180 call _deserializeOne x origLocale)
        }
        {
          (185185 call _readOne(185187 call . _iokind c"dynamic") x origLocale)
        }
      }
      (185207 'elided on block' 0 tmp[185203])
    }
  }
  function _unknown[42].writeIt[185213](arg _mt[185221]:_MT[201], arg this[185216] :
  fileWriter, const arg x[185219]:_any[141](?)) : _unknown[42] throws "method"
  {
    { scopeless
      const origLocale[185225] "const"(185230 call(185227 call . this c"getLocaleOfIoRequest"))
      (185232 'end of statement')
    }
    {
      const tmp[185270] "const" "temp"
      (185271 'move' tmp[185270](185268 'deref'(185267 '_wide_get_locale'(185234 call . this c"_home"))))
      {
        Try!
        {
          {
            (185243 call(185240 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (185252 call(185249 call . this c"unlock"))
          }
        }
        Try
        {
          {
            (185257 call _writeOne(185259 call . _iokind c"dynamic") x origLocale)
          }
        }
      }
      (185274 'elided on block' 0 tmp[185270])
    }
  }
  function literalErrorHelper[185280](arg x[185284] :
  unknown t[185282], arg action[185288] :
  string[244], arg isLiteral[185292] :
  bool) : _unknown[42] "private"
  {
    { scopeless
      unknown msg[185298](185300 call +(185302 call + "while " action) " ") string[244]
      (185310 'end of statement')
    }
    if(185348 call _cond_test isLiteral)
    {
      if(185336 call _cond_test(185332 call == t string[244]))
      {
        { scopeless
          (185312 call += msg(185315 call +(185317 call + "string literal \"" x) "\""))
        }
      }
      {
        { scopeless
          (185325 call += msg "bytes literal")
        }
      }
    }
    {
      (185343 call += msg "newline")
    }
    (185352 return msg)
  }
  { scopeless type
    string[244]
  }
  function _unknown[42]._checkLiteralError[185357](arg _mt[185380]:_MT[201], arg this[185360] :
  fileReader, arg x[185365] :
  unknown t[185363], arg err[185369] :
  errorCode, arg action[185373] :
  string[244], arg isLiteral[185377] :
  bool) : _unknown[42] throws "inline" "method"
  {
    if(185429 call _cond_test(185425 call != err 0))
    {
      { scopeless
        unknown msg[185386](185389 call literalErrorHelper x action isLiteral) string[244]
        (185394 'end of statement')
      }
      if(185413 call _cond_test(185409 call == err EILSEQ))
      {
        (185396 call = msg(185399 call +(185401 call +(185404 call escapedNonUTF8ErrorMessage) "Error: ") msg))
      }
      Try
      {
        {
          (185419 call _ch_ioerror err msg)
        }
      }
    }
  }
  { scopeless type
    void[4]
  }
  function _unknown[42]._checkLiteralError[185436](arg _mt[185459]:_MT[201], arg this[185439] :
  fileWriter, arg x[185444] :
  unknown t[185442], arg err[185448] :
  errorCode, arg action[185452] :
  string[244], arg isLiteral[185456] :
  bool) : _unknown[42] throws "inline" "method"
  {
    if(185506 call _cond_test(185502 call != err 0))
    {
      { scopeless
        unknown msg[185465](185468 call literalErrorHelper x action isLiteral) string[244]
        (185473 'end of statement')
      }
      if(185490 call _cond_test(185486 call == err EILSEQ))
      {
        (185475 call = msg(185478 call +(185480 call +(185483 call escapedNonUTF8ErrorMessage) "Error: ") msg))
      }
      Try
      {
        {
          (185496 call _ch_ioerror err msg)
        }
      }
    }
  }
  { scopeless type
    void[4]
  }
  function _unknown[42]._readLiteralCommon[185513](arg _mt[185532]:_MT[201], arg this[185516] :
  fileReader, arg x[185521] :
  unknown t[185519], arg ignore[185525] :
  bool, param arg isMatch[185529] :
  bool) : _unknown[42] throws "inline" "method"
  {
    if(185551 call _cond_test(185541 call &&(185543 call != t string[244])(185547 call != t bytes[232])))
    {
      { scopeless
        (185536 call compilerError "expecting string or bytes")
      }
    }
    {
      const tmp[185636] "const" "temp"
      (185637 'move' tmp[185636](185634 'deref'(185633 '_wide_get_locale'(185557 call . this c"_home"))))
      {
        Try!
        {
          {
            (185566 call(185563 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (185575 call(185572 call . this c"unlock"))
          }
        }
        { scopeless
          const cstr[185579] "const" "ref var"(185588 call(185585 call .(185584 call(185581 call . x c"localize")) c"c_str"))
          (185590 'end of statement')
        }
        { scopeless
          const err[185592] "const"(185594 call qio_channel_scan_literal 0 _channel_internal cstr(185598 call :(185601 call . x c"numBytes") c_ssize_t) ignore)
          (185607 'end of statement')
        }
        { scopeless
          const action[185609] "const"(185617 IfExpr  isMatch then
          { scopeless
            "matching"
          } else
          { scopeless
            "reading"
          } )
          (185621 'end of statement')
        }
        Try
        {
          {
            (185624 call _checkLiteralError x err action(isLiteral = 1))
          }
        }
      }
      (185640 'elided on block' 0 tmp[185636])
    }
  }
  function _unknown[42].readLiteral[185646](arg _mt[185660]:_MT[201], arg this[185649] :
  fileReader, arg literal[185653] :
  string[244], arg ignoreWhitespace[185657] =
  1) : _unknown[42] throws "inline" "method"
  {
    (185665 call _readLiteralCommon literal ignoreWhitespace(isMatch = 0))
  }
  { scopeless type
    void[4]
  }
  function _unknown[42].readLiteral[185673](arg _mt[185687]:_MT[201], arg this[185676] :
  fileReader, arg literal[185680] :
  bytes[232], arg ignoreWhitespace[185684] =
  1) : _unknown[42] throws "inline" "method"
  {
    (185692 call _readLiteralCommon literal ignoreWhitespace(isMatch = 0))
  }
  { scopeless type
    void[4]
  }
  function _unknown[42]._readNewlineCommon[185700](arg _mt[185710]:_MT[201], arg this[185703] :
  fileReader, param arg isMatch[185707] :
  bool) : _unknown[42] throws "inline" "method"
  {
    {
      const tmp[185768] "const" "temp"
      (185769 'move' tmp[185768](185766 'deref'(185765 '_wide_get_locale'(185714 call . this c"_home"))))
      {
        Try!
        {
          {
            (185723 call(185720 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (185732 call(185729 call . this c"unlock"))
          }
        }
        { scopeless
          const err[185736] "const"(185738 call qio_channel_skip_past_newline 0 _channel_internal 1)
          (185743 'end of statement')
        }
        { scopeless
          const action[185745] "const"(185749 IfExpr  isMatch then
          { scopeless
            "matching"
          } else
          { scopeless
            "reading"
          } )
          (185753 'end of statement')
        }
        Try
        {
          {
            (185756 call _checkLiteralError "" err action(isLiteral = 0))
          }
        }
      }
      (185772 'elided on block' 0 tmp[185768])
    }
  }
  function _unknown[42]._readNewline[185778](arg _mt[185784]:_MT[201], arg this[185781] :
  fileReader) : _unknown[42] throws "inline" "method"
  {
    { scopeless
      unknown ionl[185789](185790 'new'(185792 call chpl_ioNewline 1))
      (185795 'end of statement')
    }
    (185800 call(185797 call . this c"readIt") ionl)
  }
  { scopeless type
    void[4]
  }
  function _unknown[42].readNewline[185805](arg _mt[185811]:_MT[201], arg this[185808] :
  fileReader) : _unknown[42] throws "inline" "method"
  {
    (185816 call _readNewlineCommon(isMatch = 0))
  }
  { scopeless type
    void[4]
  }
  function _unknown[42]._matchLiteralCommon[185822](arg _mt[185834]:_MT[201], arg this[185825] :
  fileReader, arg literal[185828]:_any[141](?), arg ignore[185831] :
  bool) : _unknown[42] throws "inline" "method"
  {
    Try
    {
      {
        (185840 call _readLiteralCommon literal ignore(isMatch = 1))
      }
    }
    Catch e : BadFormatError
    {
      unknown e[185851]
      (185848 return 0)
    }
    Catch e : EofError
    {
      unknown e[185858]
      (185855 return 0)
    }
    (185862 return 1)
  }
  { scopeless type
    bool
  }
  function _unknown[42].matchLiteral[185867](arg _mt[185881]:_MT[201], arg this[185870] :
  fileReader, arg literal[185874] :
  string[244], arg ignoreWhitespace[185878] =
  1) : _unknown[42] throws "inline" "method"
  {
    (185885 return(185887 call _matchLiteralCommon literal ignoreWhitespace))
  }
  { scopeless type
    bool
  }
  function _unknown[42].matchLiteral[185893](arg _mt[185907]:_MT[201], arg this[185896] :
  fileReader, arg literal[185900] :
  bytes[232], arg ignoreWhitespace[185904] =
  1) : _unknown[42] throws "inline" "method"
  {
    (185911 return(185913 call _matchLiteralCommon literal ignoreWhitespace))
  }
  { scopeless type
    bool
  }
  function _unknown[42].matchNewline[185919](arg _mt[185925]:_MT[201], arg this[185922] :
  fileReader) : _unknown[42] throws "inline" "method"
  {
    Try
    {
      {
        (185931 call _readNewlineCommon(isMatch = 1))
      }
    }
    Catch e : BadFormatError
    {
      unknown e[185940]
      (185937 return 0)
    }
    Catch e : EofError
    {
      unknown e[185947]
      (185944 return 0)
    }
    (185951 return 1)
  }
  { scopeless type
    bool
  }
  function _unknown[42]._writeLiteralCommon[185956](arg _mt[185967]:_MT[201], arg this[185959] :
  fileWriter, arg x[185964] :
  unknown t[185962]) : _unknown[42] throws "inline" "method"
  {
    if(185985 call _cond_test(185975 call &&(185977 call != t string[244])(185981 call != t bytes[232])))
    {
      { scopeless
        (185972 call compilerError "expecting string or bytes")
      }
    }
    {
      const tmp[186057] "const" "temp"
      (186058 'move' tmp[186057](186055 'deref'(186054 '_wide_get_locale'(185991 call . this c"_home"))))
      {
        Try!
        {
          {
            (186000 call(185997 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (186009 call(186006 call . this c"unlock"))
          }
        }
        { scopeless
          const cstr[186013] "const" "ref var"(186022 call(186019 call .(186018 call(186015 call . x c"localize")) c"c_str"))
          (186024 'end of statement')
        }
        { scopeless
          const err[186026] "const"(186028 call qio_channel_print_literal 0 _channel_internal cstr(186032 call :(186035 call . x c"numBytes") c_ssize_t))
          (186040 'end of statement')
        }
        Try
        {
          {
            (186043 call _checkLiteralError x err "writing"(isLiteral = 1))
          }
        }
      }
      (186061 'elided on block' 0 tmp[186057])
    }
  }
  { scopeless type
    void[4]
  }
  function _unknown[42].writeLiteral[186068](arg _mt[186078]:_MT[201], arg this[186071] :
  fileWriter, arg literal[186075] :
  string[244]) : _unknown[42] throws "inline" "method"
  {
    (186083 call _writeLiteralCommon literal)
  }
  { scopeless type
    void[4]
  }
  function _unknown[42].writeLiteral[186088](arg _mt[186098]:_MT[201], arg this[186091] :
  fileWriter, arg literal[186095] :
  bytes[232]) : _unknown[42] throws "inline" "method"
  {
    (186103 call _writeLiteralCommon literal)
  }
  { scopeless type
    void[4]
  }
  function _unknown[42].writeNewline[186108](arg _mt[186114]:_MT[201], arg this[186111] :
  fileWriter) : _unknown[42] throws "inline" "method"
  {
    {
      const tmp[186162] "const" "temp"
      (186163 'move' tmp[186162](186160 'deref'(186159 '_wide_get_locale'(186119 call . this c"_home"))))
      {
        Try!
        {
          {
            (186128 call(186125 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (186137 call(186134 call . this c"unlock"))
          }
        }
        { scopeless
          const err[186141] "const"(186143 call qio_channel_write_newline 0 _channel_internal)
          (186147 'end of statement')
        }
        Try
        {
          {
            (186150 call _checkLiteralError "" err "writing"(isLiteral = 0))
          }
        }
      }
      (186166 'elided on block' 0 tmp[186162])
    }
  }
  { scopeless type
    void[4]
  }
  function _unknown[42]._binary[186173](arg _mt[186179]:_MT[201], arg this[186176] :
  fileReader) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[186184](186186 call uint[86] 8)
      (186189 'end of statement')
    }
    {
      const tmp[186204] "const" "temp"
      (186205 'move' tmp[186204](186202 'deref'(186201 '_wide_get_locale'(186191 call . this c"_home"))))
      {
        (186195 call = ret(186199 call qio_channel_binary _channel_internal))
      }
      (186208 'elided on block' 0 tmp[186204])
    }
    (186212 return(186213 call != ret 0))
  }
  { scopeless type
    bool
  }
  function _unknown[42]._binary[186220](arg _mt[186226]:_MT[201], arg this[186223] :
  fileWriter) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[186231](186233 call uint[86] 8)
      (186236 'end of statement')
    }
    {
      const tmp[186251] "const" "temp"
      (186252 'move' tmp[186251](186249 'deref'(186248 '_wide_get_locale'(186238 call . this c"_home"))))
      {
        (186242 call = ret(186246 call qio_channel_binary _channel_internal))
      }
      (186255 'elided on block' 0 tmp[186251])
    }
    (186259 return(186260 call != ret 0))
  }
  { scopeless type
    bool
  }
  function _unknown[42].styleElement[186267](arg _mt[186277]:_MT[201], arg this[186270] :
  fileReader, arg element[186274] :
  int[10]) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[186282] 0 int[10]
      (186286 'end of statement')
    }
    {
      const tmp[186302] "const" "temp"
      (186303 'move' tmp[186302](186300 'deref'(186299 '_wide_get_locale'(186288 call . this c"_home"))))
      {
        (186292 call = ret(186296 call qio_channel_style_element _channel_internal element))
      }
      (186306 'elided on block' 0 tmp[186302])
    }
    (186310 return ret)
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].styleElement[186315](arg _mt[186325]:_MT[201], arg this[186318] :
  fileWriter, arg element[186322] :
  int[10]) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[186330] 0 int[10]
      (186334 'end of statement')
    }
    {
      const tmp[186350] "const" "temp"
      (186351 'move' tmp[186350](186348 'deref'(186347 '_wide_get_locale'(186336 call . this c"_home"))))
      {
        (186340 call = ret(186344 call qio_channel_style_element _channel_internal element))
      }
      (186354 'elided on block' 0 tmp[186350])
    }
    (186358 return ret)
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].lines[186363](arg _mt[186373]:_MT[201], arg this[186366] :
  fileReader, arg stripNewline[186370] =
  0) : _unknown[42] "iterator fn" "method"
  {
    Try!
    {
      {
        (186381 call(186378 call . this c"lock"))
      }
    }
    { scopeless
      const saved_style[186386] "const"(186392 call(186389 call . this c"_styleInternal")) iostyleInternal
      (186394 'end of statement')
    }
    { scopeless
      unknown newline_style[186396](186402 call(186399 call . this c"_styleInternal")) iostyleInternal
      (186404 'end of statement')
    }
    { scopeless
      unknown newlineChar[186406] "param" 10
      (186409 'end of statement')
    }
    (186410 call =(186415 call . newline_style c"string_format") QIO_STRING_FORMAT_TOEND)
    (186419 call =(186424 call . newline_style c"string_end") newlineChar)
    (186432 call(186429 call . this c"_set_styleInternal") newline_style)
    { scopeless
      unknown itemReader[186435](186436 'new'(186438 call itemReaderInternal string[244] locking deserializerType this))
      (186444 'end of statement')
    }
    {
      unknown _indexOfInterest[186508] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[186509] "expr temp" "temp"
      (186518 'move' _iterator[186509](186516 call _getIterator itemReader))
      Defer
      {
        {
          (186533 call _freeIterator _iterator[186509])
        }
      }
      { scopeless type
        (186523 'move' _indexOfInterest[186508](186520 call iteratorIndex _iterator[186509]))
      }
      ForLoop[186510]
      {
        unknown line[186445] "index var" "insert auto destroy"
        (186528 'move' line[186445] _indexOfInterest[186508])
        {
          if(186503 call _cond_test(186500 call ! stripNewline))
          {
            { scopeless
              (186449 yield line)
            }
          }
          {
            { scopeless
              unknown lastCharIdx[186454](186455 call -(186458 call . line c"size") 1)
              (186463 'end of statement')
            }
            if(186494 call _cond_test(186476 call &&(186478 call !(186484 call(186481 call . line c"isEmpty")))(186485 call ==(186491 call(186488 call . line c"byte") lastCharIdx) newlineChar)))
            {
              { scopeless
                (186464 yield(186466 call line(186470 call chpl_build_high_bounded_range(186468 call chpl__nudgeHighBound lastCharIdx))))
              }
            }
            {
              { scopeless
                (186473 yield line)
              }
            }
          }
        }
        label _continueLabel[186513]
        _indexOfInterest[186508]
        _iterator[186509]
      }
      label _breakLabel[186514]
    }
    (186544 call(186541 call . this c"_set_styleInternal") saved_style)
    (186550 call(186547 call . this c"unlock"))
  }
  (186554 'use' ChapelIOStringifyHelper)
  function chpl_stringify[186556](const arg args[186560]:_any[141](?) ...) : _unknown[42]
  {
    if(186723 call _cond_test(186721 call _can_stringify_direct args))
    {
      (186566 return(186568 call stringify_simple(186570 'expand_tuple' args)))
    }
    {
      Try!
      {
        {
          { scopeless
            unknown f[186574](186576 call openMemFile)
            (186578 'end of statement')
          }
          Defer
          {
            { scopeless
              Try!
              {
                {
                  (186584 call(186581 call . f c"close"))
                }
              }
            }
          }
          { scopeless
            unknown w[186591](186596 call(186593 call . f c"writer")(locking = 0))
            (186600 'end of statement')
          }
          Defer
          {
            { scopeless
              Try!
              {
                {
                  (186606 call(186603 call . w c"close"))
                }
              }
            }
          }
          (186616 call(186613 call . w c"write")(186618 'expand_tuple' args))
          Try!
          {
            {
              (186624 call(186621 call . w c"lock"))
            }
          }
          { scopeless
            unknown offset[186629](186634 call(186631 call . w c"offset"))
            (186636 'end of statement')
          }
          (186641 call(186638 call . w c"unlock"))
          { scopeless
            unknown buf[186643](186645 call allocate(186647 call uint[86] 8)(186649 call +(186651 call : offset c_size_t) 1))
            (186657 'end of statement')
          }
          { scopeless
            unknown r[186659](186664 call(186661 call . f c"reader")(locking = 0))
            (186668 'end of statement')
          }
          Defer
          {
            { scopeless
              Try!
              {
                {
                  (186674 call(186671 call . r c"close"))
                }
              }
            }
          }
          (186684 call(186681 call . r c"readBinary") buf offset)
          (186687 call =(186690 call buf offset) 0)
          { scopeless
            const ret[186694] "const"(186699 call(186696 call . string[244] c"createCopyingBuffer") buf offset(186702 call + offset 1)(186707 call . decodePolicy c"replace"))
            (186711 'end of statement')
          }
          (186713 call deallocate buf)
          (186715 return ret)
        }
      }
    }
  }
  { scopeless type
    string[244]
  }
  { scopeless
    unknown _arg_to_proto_names[186731] "private"(186749 call _build_tuple "a" "b" "c" "d" "e" "f")
    (186752 'end of statement')
  }
  function _args_to_proto[186753](const arg args[186757]:_any[141](?) ..., arg preArg[186761] :
  string[244]) : _unknown[42] "private"
  {
    { scopeless
      unknown err_args[186766] string[244]
      (186769 'end of statement')
    }
    {
      unknown i[186770] "index var" 0
      unknown tmp[186854] "maybe param" "temp"
      (186866 'move' tmp[186854](186864 call chpl_compute_low_param_loop_bound 0(186773 call - k 1)))
      unknown tmp[186855] "maybe param" "temp"
      (186876 'move' tmp[186855](186874 call chpl_compute_high_param_loop_bound 0(186871 call - k 1)))
      unknown tmp[186856] "maybe param" "temp"
      (186879 'move' tmp[186856] 1)
      ParamForLoop[186881]
      { i[186770] tmp[186854] tmp[186855] tmp[186856]
        {
          { scopeless
            unknown name[186781] string[244]
            (186784 'end of statement')
          }
          if(186812 call _cond_test(186805 call < i(186809 call . _arg_to_proto_names c"size")))
          {
            { scopeless
              (186785 call = name(186789 call _arg_to_proto_names i))
            }
          }
          {
            { scopeless
              (186792 call = name(186795 call + "x"(186800 call : i string[244])))
            }
          }
          (186818 call += err_args(186821 call +(186823 call +(186825 call + preArg name) ":")(186830 call :(186835 'typeof'(186833 call args i)) string[244])))
          if(186849 call _cond_test(186842 call != i(186845 call - k 1)))
          {
            { scopeless
              (186837 call += err_args ", ")
            }
          }
        }
      }
      label _unused_continueLabel[186858]
      label _breakLabel[186857]
    }
    (186890 return err_args)
  }
  function _unknown[42]._readInner[186894](arg _mt[186905]:_MT[201], arg this[186897] :
  fileReader, ref arg args[186902]:_any[141](?) ...) : _unknown[42] throws "inline" "method"
  {
    { scopeless
      const origLocale[186910] "const"(186915 call(186912 call . this c"getLocaleOfIoRequest"))
      (186917 'end of statement')
    }
    {
      const tmp[187031] "const" "temp"
      (187032 'move' tmp[187031](187029 'deref'(187028 '_wide_get_locale'(186919 call . this c"_home"))))
      {
        Try
        {
          {
            (186928 call(186925 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (186937 call(186934 call . this c"unlock"))
          }
        }
        {
          unknown i[186940] "index var" 0
          unknown tmp[186992] "maybe param" "temp"
          (187004 'move' tmp[186992](187002 call chpl_compute_low_param_loop_bound 0(186943 call - k 1)))
          unknown tmp[186993] "maybe param" "temp"
          (187014 'move' tmp[186993](187012 call chpl_compute_high_param_loop_bound 0(187009 call - k 1)))
          unknown tmp[186994] "maybe param" "temp"
          (187017 'move' tmp[186994] 1)
          ParamForLoop[187019]
          { i[186940] tmp[186992] tmp[186993] tmp[186994]
            {
              if(186988 call _cond_test(186984 call != deserializerType nothing))
              {
                if(186963 call _cond_test(186959 call == deserializerType binaryDeserializer))
                {
                  (186953 call warnBinaryRead(186957 'typeof'(186955 call args i)) 3)
                }
                (186968 call _deserializeOne(186970 call args i) origLocale)
              }
              {
                (186975 call _readOne(186977 call . _iokind c"dynamic")(186981 call args i) origLocale)
              }
            }
          }
          label _unused_continueLabel[186996]
          label _breakLabel[186995]
        }
      }
      (187035 'elided on block' 0 tmp[187031])
    }
  }
  { scopeless type
    void[4]
  }
  function _unknown[42].read[187042](arg _mt[187053]:_MT[201], arg this[187045] :
  fileReader, ref arg args[187050]:_any[141](?) ...) : _unknown[42] throws "inline" "method"
  {
    Try
    {
      {
        (187064 call(187061 call . this c"_readInner")(187066 'expand_tuple' args))
      }
    }
    Catch err : EofError
    {
      unknown err[187073]
      (187070 return 0)
    }
    (187077 return 1)
  }
  { scopeless type
    bool
  }
  function _unknown[42].readLine[187082](arg _mt[187107]:_MT[201], arg this[187085] :
  fileReader, ref arg a[187093] :
  (187091 call chpl__buildArrayRuntimeType nil[32] unknown t[187089]), arg maxSize[187100] =
  (187097 call . a c"size"), arg stripNewline[187104] =
  0) : _unknown[42] throws "method"
  {
    if(187168 call _cond_test(187161 call > maxSize(187165 call . a c"size")))
    {
      { scopeless
        (187153 'throw'(187154 'new'(187156 call IllegalArgumentError "'maxSize' argument exceeds size of array in readLine")))
      }
    }
    if(187180 call _cond_test(187176 call == maxSize 0))
    {
      { scopeless
        (187173 return 0)
      }
    }
    { scopeless
      unknown err[187186] 0 errorCode
      (187190 'end of statement')
    }
    { scopeless
      unknown numRead[187192] int[10]
      (187195 'end of statement')
    }
    {
      const tmp[187488] "const" "temp"
      (187489 'move' tmp[187488](187486 'deref'(187485 '_wide_get_locale'(187197 call . this c"_home"))))
      {
        Try
        {
          {
            (187206 call(187203 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (187215 call(187212 call . this c"unlock"))
          }
        }
        (187222 call(187219 call . this c"mark"))
        { scopeless
          unknown newLineChar[187224] "param" 10
          (187227 'end of statement')
        }
        { scopeless
          unknown got[187229] int[10]
          (187232 'end of statement')
        }
        { scopeless
          unknown i[187234](187239 call .(187236 call . a c"_dom") c"lowBound")
          (187243 'end of statement')
        }
        { scopeless
          const maxIdx[187245] "const"(187246 call -(187248 call +(187254 call .(187251 call . a c"_dom") c"lowBound") maxSize) 1)
          (187260 'end of statement')
        }
        { scopeless
          unknown foundNewline[187262] 0
          (187265 'end of statement')
        }
        {
          unknown tmp[187409] "temp"
          (187431 'move' tmp[187409](187427 call _cond_test(187429 call ! foundNewline)))
          WhileDo[187414]
          {
            {
              (187270 call = got(187274 call qio_channel_read_byte 0(187277 call . this c"_channel_internal")))
              if(187325 call _cond_test(187319 call == got(187322 call - EEOF)))
              {
                break nil[32]
              }
              {
                { scopeless
                  if(187315 call _cond_test(187311 call < got 0))
                  {
                    (187289 call(187286 call . this c"revert"))
                    { scopeless
                      unknown err[187291](187293 call - got) errorCode
                      (187297 'end of statement')
                    }
                    Try
                    {
                      {
                        (187303 call(187300 call . this c"_ch_ioerror") err "in fileReader.readLine(a : [] uint(8))")
                      }
                    }
                  }
                }
              }
              if(187339 call _cond_test(187335 call == got newLineChar))
              {
                (187331 call = foundNewline 1)
              }
              if(187379 call _cond_test(187375 call > i maxIdx))
              {
                if(187371 call _cond_test(187367 call && foundNewline stripNewline))
                {
                }
                {
                  (187350 call(187347 call . this c"revert"))
                  Try
                  {
                    {
                      (187356 call(187353 call . this c"_ch_ioerror")(187357 call : EFORMAT errorCode) "line longer than maxSize in fileReader.readLine(a : [] uint(8))")
                    }
                  }
                }
              }
              if(187405 call _cond_test(187399 call !(187401 call && foundNewline stripNewline)))
              {
                (187384 call =(187387 call a i)(187389 call : got(187393 call uint[86] 8)))
                (187395 call += i 1)
              }
            }
            label _continueLabel[187412]
            (187422 'move' tmp[187409](187418 call _cond_test(187420 call ! foundNewline)))
            tmp[187409]
          }
          label _breakLabel[187413]
        }
        (187434 call = numRead(187437 call - i(187444 call .(187441 call . a c"_dom") c"lowBound")))
        if(187473 call _cond_test(187457 call &&(187459 call == i(187466 call .(187463 call . a c"_dom") c"lowBound"))(187469 call < got 0)))
        {
          { scopeless
            (187447 call = err(187450 call :(187452 call - got) errorCode))
          }
        }
        (187484 call(187481 call . this c"commit"))
      }
      (187492 'elided on block' 0 tmp[187488])
    }
    if(187525 call _cond_test(187522 call ! err))
    {
      (187497 return numRead)
    }
    {
      { scopeless
        if(187518 call _cond_test(187514 call == err EEOF))
        {
          (187500 return 0)
        }
        {
          Try
          {
            {
              (187508 call(187505 call . this c"_ch_ioerror") err "in fileReader.readLine(a : [] uint(8))")
            }
          }
        }
      }
    }
    (187530 return 0)
  }
  where {
    (187110 call &&(187112 call &&(187114 call &&(187116 call ==(187119 call . a c"rank") 1)(187127 call(187124 call . a c"isRectangular")))(187128 call ==(187131 call . a c"strides")(187135 call . strideKind c"one")))(187138 call ||(187140 call == t(187144 call uint[86] 8))(187146 call == t(187150 call int[10] 8))))
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readLine[187536](arg _mt[187561]:_MT[201], arg this[187539] :
  fileReader, ref arg a[187547] :
  (187545 call chpl__buildArrayRuntimeType nil[32] unknown t[187543]), arg maxSize[187554] =
  (187551 call . a c"size"), arg stripNewline[187558] =
  0) : _unknown[42] throws "inline" "last resort" "method"
  {
    (187566 call compilerError "'readLine()' is currently only supported for non-strided 1D rectangular arrays")
  }
  { scopeless type
    int[10]
  }
  function readStringBytesData[187573](ref arg s[187577] :
  unknown t[187575], arg _channel_internal[187581] :
  qio_channel_ptr_t, arg nBytes[187585] :
  int[10], arg nCodepoints[187589] :
  int[10]) : _unknown[42]
  {
    (187596 'import' BytesStringCommon)
    { scopeless
      unknown sLoc[187598] t
      (187601 'end of statement')
    }
    { scopeless
      unknown sLocal[187603] "ref var"(187613 IfExpr (187604 call ==(187608 call chpl_localeID_to_locale(187607 '_wide_get_locale' s)) here) then
      { scopeless
        s
      } else
      { scopeless
        sLoc
      } )
      (187617 'end of statement')
    }
    (187624 call(187621 call . BytesStringCommon c"resizeBuffer") sLocal nBytes)
    { scopeless
      unknown len[187628](187634 call(187631 call . nBytes c"safeCast") c_ssize_t) c_ssize_t
      (187637 'end of statement')
    }
    { scopeless
      unknown err[187639](187641 call qio_channel_read_amt 0 _channel_internal(187645 call . sLocal c"buff") len)
      (187650 'end of statement')
    }
    if(187819 call _cond_test(187816 call ! err))
    {
      (187652 call =(187655 call . sLocal c"buffLen") nBytes)
      if(187673 call _cond_test(187669 call != nBytes 0))
      {
        { scopeless
          (187659 call =(187665 call(187662 call . sLocal c"buff") nBytes) 0)
        }
      }
      if(187812 call _cond_test(187808 call == t string[244]))
      {
        if(187797 call _cond_test(187791 call == nCodepoints(187794 call - 1)))
        {
          { scopeless
            unknown byteI[187681] 0 c_ssize_t
            (187685 'end of statement')
          }
          { scopeless
            unknown codepointI[187687] 0 c_ssize_t
            (187691 'end of statement')
          }
          {
            unknown tmp[187749] "temp"
            (187773 'move' tmp[187749](187768 call _cond_test(187770 call < byteI nBytes)))
            WhileDo[187754]
            {
              {
                { scopeless
                  unknown codepoint[187698](187700 call int[10] 32)
                  (187703 'end of statement')
                }
                { scopeless
                  unknown gotbytes[187705] c_int
                  (187708 'end of statement')
                }
                (187709 call = err(187713 call qio_decode_char_buf codepoint gotbytes(187716 call :(187718 call +(187721 call . sLocal c"buff") byteI)(187726 call c_ptrConst c_char))(187728 call - len byteI)))
                if(187736 call _cond_test err)
                {
                  { scopeless
                    break nil[32]
                  }
                }
                (187741 call += codepointI 1)
                (187745 call += byteI gotbytes)
              }
              label _continueLabel[187752]
              (187763 'move' tmp[187749](187758 call _cond_test(187760 call < byteI nBytes)))
              tmp[187749]
            }
            label _breakLabel[187753]
          }
          (187776 call =(187779 call . sLocal c"cachedNumCodepoints") codepointI)
        }
        {
          (187784 call =(187787 call . sLocal c"cachedNumCodepoints") nCodepoints)
        }
        (187801 call =(187804 call . sLocal c"hasEscapes") 0)
      }
    }
    if(187855 call _cond_test err)
    {
      (187824 call =(187827 call . sLocal c"buffLen") 0)
      if(187850 call _cond_test(187846 call == t string[244]))
      {
        (187832 call =(187835 call . sLocal c"cachedNumCodepoints") 0)
        (187839 call =(187842 call . sLocal c"hasEscapes") 0)
      }
    }
    if(187871 call _cond_test(187864 call !=(187868 call chpl_localeID_to_locale(187867 '_wide_get_locale' s)) here))
    {
      { scopeless
        (187859 call <=> s sLoc)
      }
    }
    (187876 return err)
  }
  { scopeless type
    errorCode
  }
  function _unknown[42].readLine[187881](arg _mt[187901]:_MT[201], arg this[187884] :
  fileReader, ref arg s[187888] :
  string[244], arg maxSize[187894] =
  (187891 call - 1), arg stripNewline[187898] =
  0) : _unknown[42] throws "method"
  {
    { scopeless
      const origLocale[187906] "const"(187911 call(187908 call . this c"getLocaleOfIoRequest"))
      (187913 'end of statement')
    }
    { scopeless
      unknown ret[187915] 0 bool
      (187919 'end of statement')
    }
    {
      const tmp[188245] "const" "temp"
      (188246 'move' tmp[188245](188243 'deref'(188242 '_wide_get_locale'(187921 call . this c"_home"))))
      {
        Try
        {
          {
            (187930 call(187927 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (187939 call(187936 call . this c"unlock"))
          }
        }
        { scopeless
          unknown newLineChar[187943] "param" 10
          (187946 'end of statement')
        }
        { scopeless
          unknown maxCodepoints[187948](187957 IfExpr (187949 call < maxSize 0) then
          { scopeless
            (187954 call max int[10])
          } else
          { scopeless
            maxSize
          } )
          (187961 'end of statement')
        }
        { scopeless
          unknown nCodepoints[187963] 0 int[10]
          (187967 'end of statement')
        }
        { scopeless
          unknown chr[187969](187971 call int[10] 32)
          (187974 'end of statement')
        }
        { scopeless
          unknown err[187976] 0 errorCode
          (187980 'end of statement')
        }
        { scopeless
          unknown foundNewline[187982] 0
          (187985 'end of statement')
        }
        (187990 call(187987 call . this c"mark"))
        {
          unknown tmp[188100] "temp"
          (188122 'move' tmp[188100](188118 call _cond_test(188120 call ! foundNewline)))
          WhileDo[188105]
          {
            {
              (187995 call = err(187999 call qio_channel_read_char 0(188002 call . this c"_channel_internal") chr))
              if(188038 call _cond_test(188034 call == err EEOF))
              {
                break nil[32]
              }
              {
                { scopeless
                  if(188030 call _cond_test err)
                  {
                    (188015 call(188012 call . this c"revert"))
                    Try
                    {
                      {
                        (188021 call(188018 call . this c"_ch_ioerror") err "in fileReader.readLine(ref s: string)")
                      }
                    }
                  }
                }
              }
              (188043 call += nCodepoints 1)
              if(188056 call _cond_test(188052 call == chr newLineChar))
              {
                (188048 call = foundNewline 1)
              }
              if(188096 call _cond_test(188092 call > nCodepoints maxCodepoints))
              {
                if(188088 call _cond_test(188084 call && stripNewline foundNewline))
                {
                }
                {
                  (188067 call(188064 call . this c"revert"))
                  Try
                  {
                    {
                      (188073 call(188070 call . this c"_ch_ioerror")(188074 call : EFORMAT errorCode) "line longer than maxSize in fileReader.readLine(ref s: string)")
                    }
                  }
                }
              }
            }
            label _continueLabel[188103]
            (188113 'move' tmp[188100](188109 call _cond_test(188111 call ! foundNewline)))
            tmp[188100]
          }
          label _breakLabel[188104]
        }
        { scopeless
          unknown endOffset[188126](188131 call(188128 call . this c"offset"))
          (188133 'end of statement')
        }
        (188138 call(188135 call . this c"revert"))
        { scopeless
          unknown nBytes[188140](188142 call - endOffset(188149 call(188146 call . this c"offset"))) int[10]
          (188151 'end of statement')
        }
        if(188165 call _cond_test(188161 call && foundNewline stripNewline))
        {
          (188153 call -= nBytes 1)
          (188157 call -= nCodepoints 1)
        }
        (188169 call = err(188173 call readStringBytesData s(188176 call . this c"_channel_internal") nBytes nCodepoints))
        if(188202 call _cond_test(188193 call &&(188195 call && foundNewline stripNewline)(188199 call ! err)))
        {
          (188182 call = err(188186 call qio_channel_read_char 0(188189 call . this c"_channel_internal") chr))
        }
        if(188228 call _cond_test(188218 call &&(188220 call != err 0)(188224 call != err EEOF)))
        {
          Try
          {
            {
              (188212 call(188209 call . this c"_ch_ioerror") err "in fileReader.readLine(ref s: string)")
            }
          }
        }
        (188232 call = ret(188235 call || foundNewline(188238 call > nBytes 0)))
      }
      (188249 'elided on block' 0 tmp[188245])
    }
    (188253 return ret)
  }
  { scopeless type
    bool
  }
  function _unknown[42].readLine[188258](arg _mt[188278]:_MT[201], arg this[188261] :
  fileReader, ref arg b[188265] :
  bytes[232], arg maxSize[188271] =
  (188268 call - 1), arg stripNewline[188275] =
  0) : _unknown[42] throws "method"
  {
    { scopeless
      const origLocale[188283] "const"(188288 call(188285 call . this c"getLocaleOfIoRequest"))
      (188290 'end of statement')
    }
    { scopeless
      unknown ret[188292] 0 bool
      (188296 'end of statement')
    }
    {
      const tmp[188624] "const" "temp"
      (188625 'move' tmp[188624](188622 'deref'(188621 '_wide_get_locale'(188298 call . this c"_home"))))
      {
        Try
        {
          {
            (188307 call(188304 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (188316 call(188313 call . this c"unlock"))
          }
        }
        { scopeless
          unknown newLineChar[188320] "param" 10
          (188323 'end of statement')
        }
        { scopeless
          unknown maxBytes[188325](188334 IfExpr (188326 call < maxSize 0) then
          { scopeless
            (188331 call max int[10])
          } else
          { scopeless
            maxSize
          } )
          (188338 'end of statement')
        }
        { scopeless
          unknown nBytes[188340] 0 int[10]
          (188344 'end of statement')
        }
        (188349 call(188346 call . this c"mark"))
        { scopeless
          unknown got[188351] int[10]
          (188354 'end of statement')
        }
        { scopeless
          unknown err[188356] 0 errorCode
          (188360 'end of statement')
        }
        { scopeless
          unknown foundNewline[188362] 0
          (188365 'end of statement')
        }
        {
          unknown tmp[188488] "temp"
          (188510 'move' tmp[188488](188506 call _cond_test(188508 call ! foundNewline)))
          WhileDo[188493]
          {
            {
              (188370 call = got(188374 call qio_channel_read_byte 0(188377 call . this c"_channel_internal")))
              if(188426 call _cond_test(188420 call == got(188423 call - EEOF)))
              {
                break nil[32]
              }
              {
                { scopeless
                  if(188416 call _cond_test(188412 call < got 0))
                  {
                    (188389 call(188386 call . this c"revert"))
                    (188390 call = err(188393 call - got))
                    Try
                    {
                      {
                        (188401 call(188398 call . this c"_ch_ioerror") err "in fileReader.readLine(ref b: bytes)")
                      }
                    }
                    break nil[32]
                  }
                }
              }
              (188431 call += nBytes 1)
              if(188444 call _cond_test(188440 call == got newLineChar))
              {
                (188436 call = foundNewline 1)
              }
              if(188484 call _cond_test(188480 call > nBytes maxBytes))
              {
                if(188476 call _cond_test(188472 call && foundNewline stripNewline))
                {
                }
                {
                  (188455 call(188452 call . this c"revert"))
                  Try
                  {
                    {
                      (188461 call(188458 call . this c"_ch_ioerror")(188462 call : EFORMAT errorCode) "line longer than maxSize in fileReader.readLine(ref b: bytes)")
                    }
                  }
                }
              }
            }
            label _continueLabel[188491]
            (188501 'move' tmp[188488](188497 call _cond_test(188499 call ! foundNewline)))
            tmp[188488]
          }
          label _breakLabel[188492]
        }
        (188517 call(188514 call . this c"revert"))
        if(188527 call _cond_test(188523 call && foundNewline stripNewline))
        {
          (188519 call -= nBytes 1)
        }
        (188531 call = err(188535 call readStringBytesData b(188538 call . this c"_channel_internal") nBytes(nCodepoints =(188542 call - 1))))
        if(188581 call _cond_test(188572 call &&(188574 call && foundNewline stripNewline)(188578 call ! err)))
        {
          (188547 call = got(188551 call qio_channel_read_byte 0(188554 call . this c"_channel_internal")))
          if(188568 call _cond_test(188564 call < got 0))
          {
            (188558 call = err(188561 call - got))
          }
        }
        if(188607 call _cond_test(188597 call &&(188599 call != err 0)(188603 call != err EEOF)))
        {
          Try
          {
            {
              (188591 call(188588 call . this c"_ch_ioerror") err "in fileReader.readLine(ref s: string)")
            }
          }
        }
        (188611 call = ret(188614 call || foundNewline(188617 call > nBytes 0)))
      }
      (188628 'elided on block' 0 tmp[188624])
    }
    (188632 return ret)
  }
  { scopeless type
    bool
  }
  function _unknown[42].readLine[188637](arg _mt[188657]:_MT[201], arg this[188640] :
  fileReader, arg t[188644]:_any[141](?) =
  string[244], arg maxSize[188650] =
  (188647 call - 1), arg stripNewline[188654] =
  0) : _unknown[42] throws "method"
  {
    { scopeless
      unknown retval[188672] t
      (188675 'end of statement')
    }
    if(188696 call _cond_test(188684 call !(188692 call(188689 call . this c"readLine") retval maxSize stripNewline)))
    {
      { scopeless
        (188676 'throw'(188677 'new'(188679 call EofError "Encountered EOF in readLine")))
      }
    }
    (188701 return retval)
  }
  where {
    (188660 call ||(188662 call == t string[244])(188666 call == t bytes[232]))
  }
  { scopeless type
    t
  }
  function _unknown[42].readThrough[188707](arg _mt[188728]:_MT[201], arg this[188710] :
  fileReader, arg separator[188715] :
  unknown t[188713], arg maxSize[188721] =
  (188718 call - 1), arg stripSeparator[188725] =
  0) : _unknown[42] throws "method"
  {
    { scopeless
      unknown ret[188743] t
      (188746 'end of statement')
    }
    if(188775 call _cond_test(188764 call !(188770 call(188767 call . this c"readThrough") separator ret maxSize stripSeparator)))
    {
      { scopeless
        (188747 'throw'(188748 'new'(188750 call EofError(188751 call +(188753 call + "Encountered EOF in readThrough("(188758 call : t string[244])) ")"))))
      }
    }
    (188780 return ret)
  }
  where {
    (188731 call ||(188733 call == t string[244])(188737 call == t bytes[232]))
  }
  { scopeless type
    t
  }
  function _unknown[42].readThrough[188786](arg _mt[188810]:_MT[201], arg this[188789] :
  fileReader, arg separator[188793] :
  string[244], ref arg s[188797] :
  string[244], arg maxSize[188803] =
  (188800 call - 1), arg stripSeparator[188807] =
  0) : _unknown[42] throws "method"
  {
    {
      const tmp[189063] "const" "temp"
      (189064 'move' tmp[189063](189061 'deref'(189060 '_wide_get_locale'(188815 call . this c"_home"))))
      {
        Try
        {
          {
            (188824 call(188821 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (188833 call(188830 call . this c"unlock"))
          }
        }
        if(188851 call _cond_test(188844 call ==(188847 call . separator c"numBytes") 0))
        {
          (188837 'throw'(188838 'new'(188840 call IllegalArgumentError "readThrough(string) called with empty separator")))
        }
        { scopeless
          const tmp[188873] "const" "temp"(188863 call _findSeparator separator(188865 call * 4 maxSize)(188870 call . this c"_channel_internal"))
          (188883 call _check_tuple_var_decl tmp[188873] 3)
          const searchErr[188856] "const"(188874 call tmp[188873] 0)
          const found[188858] "const"(188877 call tmp[188873] 1)
          const bytesRead[188860] "const"(188880 call tmp[188873] 2)
          (188888 'end of statement')
        }
        if(188919 call _cond_test(188903 call &&(188905 call &&(188907 call != searchErr 0)(188911 call != searchErr EEOF))(188915 call != searchErr ESHORT)))
        {
          Try
          {
            {
              (188895 call(188892 call . this c"_ch_ioerror") searchErr "in readThrough(string)")
            }
          }
        }
        { scopeless
          const bytesToRead[188924] "const"(188934 IfExpr  found then
          { scopeless
            (188926 call + bytesRead(188930 call . separator c"numBytes"))
          } else
          { scopeless
            bytesRead
          } )
          (188938 'end of statement')
        }
        (188940 call qio_channel_mark 0(188943 call . this c"_channel_internal"))
        { scopeless
          const err[188947] "const"(188949 call readStringBytesData s(188952 call . this c"_channel_internal") bytesToRead(188956 call - 1))
          (188960 'end of statement')
        }
        if(189026 call _cond_test err)
        {
          (188963 call qio_channel_revert_unlocked(188965 call . this c"_channel_internal"))
          Try
          {
            {
              (188973 call(188970 call . this c"_ch_ioerror") err "in readThrough(string)")
            }
          }
        }
        {
          if(189021 call _cond_test(189008 call &&(189010 call >= maxSize 0)(189014 call >(189017 call . s c"numCodepoints") maxSize)))
          {
            (188982 call qio_channel_revert_unlocked(188984 call . this c"_channel_internal"))
            Try
            {
              {
                (188992 call(188989 call . this c"_ch_ioerror")(188993 call : EFORMAT errorCode) "in readThrough(string)")
              }
            }
          }
          {
            (189003 call qio_channel_commit_unlocked(189005 call . this c"_channel_internal"))
          }
        }
        if(189055 call _cond_test(189051 call && found stripSeparator))
        {
          { scopeless
            (189030 call = s(189034 call s(189048 call chpl_build_bounded_range 0(189046 call chpl__nudgeHighBound(189036 call -(189039 call . s c"numCodepoints")(189043 call . separator c"numCodepoints"))))))
          }
        }
      }
      (189067 'elided on block' 0 tmp[189063])
    }
    (189071 return(189072 call >(189075 call . s c"size") 0))
  }
  { scopeless type
    bool
  }
  function _unknown[42].readThrough[189082](arg _mt[189106]:_MT[201], arg this[189085] :
  fileReader, arg separator[189089] :
  bytes[232], ref arg b[189093] :
  bytes[232], arg maxSize[189099] =
  (189096 call - 1), arg stripSeparator[189103] =
  0) : _unknown[42] throws "method"
  {
    {
      const tmp[189295] "const" "temp"
      (189296 'move' tmp[189295](189293 'deref'(189292 '_wide_get_locale'(189111 call . this c"_home"))))
      {
        Try
        {
          {
            (189120 call(189117 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (189129 call(189126 call . this c"unlock"))
          }
        }
        if(189147 call _cond_test(189140 call ==(189143 call . separator c"numBytes") 0))
        {
          (189133 'throw'(189134 'new'(189136 call IllegalArgumentError "readThrough(bytes) called with empty separator")))
        }
        { scopeless
          const tmp[189166] "const" "temp"(189159 call _findSeparator separator maxSize(189163 call . this c"_channel_internal"))
          (189176 call _check_tuple_var_decl tmp[189166] 3)
          const searchErr[189152] "const"(189167 call tmp[189166] 0)
          const found[189154] "const"(189170 call tmp[189166] 1)
          const bytesRead[189156] "const"(189173 call tmp[189166] 2)
          (189181 'end of statement')
        }
        if(189212 call _cond_test(189196 call &&(189198 call &&(189200 call != searchErr 0)(189204 call != searchErr EEOF))(189208 call != searchErr ESHORT)))
        {
          Try
          {
            {
              (189188 call(189185 call . this c"_ch_ioerror") searchErr "in readThrough(bytes)")
            }
          }
        }
        { scopeless
          const bytesToRead[189217] "const"(189227 IfExpr  found then
          { scopeless
            (189219 call + bytesRead(189223 call . separator c"numBytes"))
          } else
          { scopeless
            bytesRead
          } )
          (189231 'end of statement')
        }
        { scopeless
          const err[189233] "const"(189235 call readStringBytesData b(189238 call . this c"_channel_internal") bytesToRead 0)
          (189244 'end of statement')
        }
        if(189257 call _cond_test err)
        {
          { scopeless
            Try
            {
              {
                (189250 call(189247 call . this c"_ch_ioerror") err "in readThrough(bytes)")
              }
            }
          }
        }
        if(189287 call _cond_test(189283 call && found stripSeparator))
        {
          { scopeless
            (189262 call = b(189266 call b(189280 call chpl_build_bounded_range 0(189278 call chpl__nudgeHighBound(189268 call -(189271 call . b c"numBytes")(189275 call . separator c"numBytes"))))))
          }
        }
      }
      (189299 'elided on block' 0 tmp[189295])
    }
    (189303 return(189304 call >(189307 call . b c"size") 0))
  }
  { scopeless type
    bool
  }
  function _unknown[42].readTo[189314](arg _mt[189331]:_MT[201], arg this[189317] :
  fileReader, arg separator[189322] :
  unknown t[189320], arg maxSize[189328] =
  (189325 call - 1)) : _unknown[42] throws "method"
  {
    { scopeless
      unknown ret[189346] t
      (189349 'end of statement')
    }
    if(189377 call _cond_test(189367 call !(189373 call(189370 call . this c"readTo") separator ret maxSize)))
    {
      { scopeless
        (189350 'throw'(189351 'new'(189353 call EofError(189354 call +(189356 call + "Encountered EOF in readTo("(189361 call : t string[244])) ")"))))
      }
    }
    (189382 return ret)
  }
  where {
    (189334 call ||(189336 call == t string[244])(189340 call == t bytes[232]))
  }
  { scopeless type
    t
  }
  function _unknown[42].readTo[189388](arg _mt[189408]:_MT[201], arg this[189391] :
  fileReader, arg separator[189395] :
  string[244], ref arg s[189399] :
  string[244], arg maxSize[189405] =
  (189402 call - 1)) : _unknown[42] throws "method"
  {
    { scopeless
      unknown atEof[189413] 0
      (189416 'end of statement')
    }
    {
      const tmp[189630] "const" "temp"
      (189631 'move' tmp[189630](189628 'deref'(189627 '_wide_get_locale'(189418 call . this c"_home"))))
      {
        Try
        {
          {
            (189427 call(189424 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (189436 call(189433 call . this c"unlock"))
          }
        }
        if(189454 call _cond_test(189447 call ==(189450 call . separator c"numBytes") 0))
        {
          (189440 'throw'(189441 'new'(189443 call IllegalArgumentError "readTo(string) called with empty separator")))
        }
        { scopeless
          const tmp[189476] "const" "temp"(189466 call _findSeparator separator(189468 call * 4 maxSize)(189473 call . this c"_channel_internal"))
          (189483 call _check_tuple_var_decl tmp[189476] 3)
          const searchErr[189459] "const"(189477 call tmp[189476] 0)
          const bytesRead[189463] "const"(189480 call tmp[189476] 2)
          (189488 'end of statement')
        }
        if(189519 call _cond_test(189503 call &&(189505 call &&(189507 call != searchErr 0)(189511 call != searchErr EEOF))(189515 call != searchErr ESHORT)))
        {
          Try
          {
            {
              (189495 call(189492 call . this c"_ch_ioerror") searchErr "in fileReader.readTo(string)")
            }
          }
        }
        (189523 call = atEof(189526 call &&(189528 call == searchErr EEOF)(189532 call == bytesRead 0)))
        (189537 call qio_channel_mark 0(189540 call . this c"_channel_internal"))
        { scopeless
          const err[189544] "const"(189546 call readStringBytesData s(189549 call . this c"_channel_internal") bytesRead(189553 call - 1))
          (189557 'end of statement')
        }
        if(189623 call _cond_test err)
        {
          (189560 call qio_channel_revert_unlocked(189562 call . this c"_channel_internal"))
          Try
          {
            {
              (189570 call(189567 call . this c"_ch_ioerror") err "in fileReader.readTo(string)")
            }
          }
        }
        {
          if(189618 call _cond_test(189605 call &&(189607 call >= maxSize 0)(189611 call >=(189614 call . s c"numCodepoints") maxSize)))
          {
            (189579 call qio_channel_revert_unlocked(189581 call . this c"_channel_internal"))
            Try
            {
              {
                (189589 call(189586 call . this c"_ch_ioerror")(189590 call : EFORMAT errorCode) "in fileReader.readTo(string)")
              }
            }
          }
          {
            (189600 call qio_channel_commit_unlocked(189602 call . this c"_channel_internal"))
          }
        }
      }
      (189634 'elided on block' 0 tmp[189630])
    }
    (189638 return(189639 call ! atEof))
  }
  { scopeless type
    bool
  }
  function _unknown[42].readTo[189645](arg _mt[189665]:_MT[201], arg this[189648] :
  fileReader, arg separator[189652] :
  bytes[232], ref arg b[189656] :
  bytes[232], arg maxSize[189662] =
  (189659 call - 1)) : _unknown[42] throws "method"
  {
    { scopeless
      unknown atEof[189670] 0
      (189673 'end of statement')
    }
    {
      const tmp[189823] "const" "temp"
      (189824 'move' tmp[189823](189821 'deref'(189820 '_wide_get_locale'(189675 call . this c"_home"))))
      {
        Try
        {
          {
            (189684 call(189681 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (189693 call(189690 call . this c"unlock"))
          }
        }
        if(189711 call _cond_test(189704 call ==(189707 call . separator c"numBytes") 0))
        {
          (189697 'throw'(189698 'new'(189700 call IllegalArgumentError "readTo(bytes) called with empty separator")))
        }
        { scopeless
          const tmp[189730] "const" "temp"(189723 call _findSeparator separator maxSize(189727 call . this c"_channel_internal"))
          (189737 call _check_tuple_var_decl tmp[189730] 3)
          const searchErr[189716] "const"(189731 call tmp[189730] 0)
          const bytesRead[189720] "const"(189734 call tmp[189730] 2)
          (189742 'end of statement')
        }
        if(189773 call _cond_test(189757 call &&(189759 call &&(189761 call != searchErr 0)(189765 call != searchErr EEOF))(189769 call != searchErr ESHORT)))
        {
          Try
          {
            {
              (189749 call(189746 call . this c"_ch_ioerror") searchErr "in fileReader.readTo(bytes)")
            }
          }
        }
        (189777 call = atEof(189780 call &&(189782 call == searchErr EEOF)(189786 call == bytesRead 0)))
        { scopeless
          const err[189791] "const"(189793 call readStringBytesData b(189796 call . this c"_channel_internal") bytesRead 0)
          (189802 'end of statement')
        }
        if(189815 call _cond_test err)
        {
          { scopeless
            Try
            {
              {
                (189808 call(189805 call . this c"_ch_ioerror") err "in fileReader.readTo(bytes)")
              }
            }
          }
        }
      }
      (189827 'elided on block' 0 tmp[189823])
    }
    (189831 return(189832 call ! atEof))
  }
  { scopeless type
    bool
  }
  function _findSeparator[189838](arg separator[189842] :
  unknown t[189840], arg maxBytes[189848] =
  (189845 call - 1), arg ch_internal[189851]:_any[141](?)) : _unknown[42] "private"
  {
    if(189886 call _cond_test(189885 call(189882 call . separator c"isEmpty")))
    {
      { scopeless
        (189870 return(189878 call _build_tuple(189872 call : EFORMAT errorCode) 0 0))
      }
    }
    { scopeless
      { scopeless
        const maxToRead[189917] "const"(189926 IfExpr (189918 call < maxBytes 0) then
        { scopeless
          (189923 call max int[10])
        } else
        { scopeless
          maxBytes
        } )
      }
      { scopeless
        const sepLocal[189909] "const"(189914 call(189911 call . separator c"localize"))
      }
      { scopeless
        const numSepBytes[189902] "const"(189904 call . sepLocal c"numBytes")
      }
      { scopeless
        const firstByte[189893] "const"(189898 call(189895 call . sepLocal c"byte") 0)
      }
      (189930 'end of statement')
    }
    { scopeless
      { scopeless
        unknown nextByte[189946] int[10]
      }
      { scopeless
        unknown err[189941] 0 errorCode
      }
      { scopeless
        unknown foundSeparator[189937] 0
      }
      { scopeless
        unknown numMatched[189933] 0
      }
      (189949 'end of statement')
    }
    (189951 call qio_channel_mark 0 ch_internal)
    {
      unknown tmp[190220] "temp"
      (190238 'move' tmp[190220](190236 call _cond_test 1))
      WhileDo[190225]
      {
        {
          (189956 call = err(189960 call qio_channel_advance_past_byte 0 ch_internal firstByte maxToRead 0))
          if(190016 call _cond_test(190006 call ||(190008 call == err EEOF)(190012 call == err ESHORT)))
          {
            break nil[32]
          }
          {
            { scopeless
              if(190001 call _cond_test(189997 call == err EFORMAT))
              {
                (189972 call qio_channel_revert_unlocked ch_internal)
                (189974 return(189979 call _build_tuple err 0 maxBytes))
              }
              {
                { scopeless
                  if(189993 call _cond_test err)
                  {
                    (189983 call qio_channel_revert_unlocked ch_internal)
                    (189985 return(189990 call _build_tuple err 0 0))
                  }
                }
              }
            }
          }
          if(190216 call _cond_test(190212 call == err 0))
          {
            (190023 call qio_channel_mark 0 ch_internal)
            (190026 call = numMatched 0)
            {
              unknown _indexOfInterest[190110] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[190111] "expr temp" "temp"
              (190120 'move' _iterator[190111](190118 call _getIterator(190126 call chpl_direct_range_iter 0(190124 call chpl__nudgeHighBound numSepBytes))))
              Defer
              {
                {
                  (190141 call _freeIterator _iterator[190111])
                }
              }
              { scopeless type
                (190131 'move' _indexOfInterest[190110](190128 call iteratorIndex _iterator[190111]))
              }
              ForLoop[190112]
              {
                unknown i[190030] "index var" "insert auto destroy"
                (190136 'move' i[190030] _indexOfInterest[190110])
                {
                  (190039 call = nextByte(190043 call qio_channel_read_byte 0 ch_internal))
                  if(190083 call _cond_test(190079 call < nextByte 0))
                  {
                    (190047 call = err(190050 call - nextByte))
                    if(190075 call _cond_test(190071 call == err EEOF))
                    {
                      break nil[32]
                    }
                    {
                      (190059 call qio_channel_revert_unlocked ch_internal)
                      (190062 call qio_channel_revert_unlocked ch_internal)
                      (190064 return(190069 call _build_tuple err 0 0))
                    }
                  }
                  if(190104 call _cond_test(190095 call == nextByte(190102 call(190099 call . sepLocal c"byte") i)))
                  {
                    { scopeless
                      (190087 call += numMatched 1)
                    }
                  }
                  {
                    { scopeless
                      break nil[32]
                    }
                  }
                }
                label _continueLabel[190115]
                _indexOfInterest[190110]
                _iterator[190111]
              }
              label _breakLabel[190116]
            }
            (190149 call qio_channel_revert_unlocked ch_internal)
            if(190163 call _cond_test(190159 call == numMatched numSepBytes))
            {
              (190152 call = foundSeparator 1)
              break nil[32]
            }
            (190167 call = nextByte(190171 call qio_channel_read_byte 0 ch_internal))
            if(190208 call _cond_test(190204 call < nextByte 0))
            {
              (190175 call = err(190178 call - nextByte))
              if(190200 call _cond_test(190196 call == err EEOF))
              {
                break nil[32]
              }
              {
                (190187 call qio_channel_revert_unlocked ch_internal)
                (190189 return(190194 call _build_tuple err 0 0))
              }
            }
          }
        }
        label _continueLabel[190223]
        (190231 'move' tmp[190220](190229 call _cond_test 1))
        tmp[190220]
      }
      label _breakLabel[190224]
    }
    { scopeless
      const endOffset[190242] "const"(190244 call qio_channel_offset_unlocked ch_internal)
      (190247 'end of statement')
    }
    (190249 call qio_channel_revert_unlocked ch_internal)
    { scopeless
      const numBytesRead[190252] "const"(190254 call - endOffset(190258 call qio_channel_offset_unlocked ch_internal)) int[10]
      (190261 'end of statement')
    }
    if(190329 call _cond_test(190326 call ! foundSeparator))
    {
      if(190316 call _cond_test(190312 call >= numBytesRead maxToRead))
      {
        (190264 call = err(190267 call : EFORMAT errorCode))
      }
      {
        { scopeless
          if(190308 call _cond_test(190298 call ||(190300 call == err EEOF)(190304 call == err ESHORT)))
          {
            if(190292 call _cond_test(190288 call > numBytesRead 0))
            {
              { scopeless
                (190272 call = err(190275 call : ESHORT errorCode))
              }
            }
            {
              { scopeless
                (190280 call = err(190283 call : EEOF errorCode))
              }
            }
          }
        }
      }
    }
    {
      { scopeless
        (190321 call = err 0)
      }
    }
    (190334 return(190339 call _build_tuple err foundSeparator numBytesRead))
  }
  where {
    (189859 call ||(189861 call == t string[244])(189865 call == t bytes[232]))
  }
  { scopeless type
    (189857 call _build_tuple errorCode bool int[10])
  }
  function _unknown[42].readAll[190345](arg _mt[190355]:_MT[201], arg this[190348] :
  fileReader, arg t[190352]:_any[141](?) =
  bytes[232]) : _unknown[42] throws "method"
  {
    { scopeless
      { scopeless
        unknown out_var[190375] t
      }
      { scopeless
        unknown num_read[190371] 0
      }
      (190378 'end of statement')
    }
    if(190413 call _cond_test(190409 call == t bytes[232]))
    {
      (190380 call = out_var b"")
      (190384 call = num_read(190393 call(190390 call . this c"readAll") out_var))
    }
    {
      (190396 call = out_var "")
      (190400 call = num_read(190407 call(190404 call . this c"readAll") out_var))
    }
    if(190429 call _cond_test(190425 call == num_read 0))
    {
      { scopeless
        (190417 'throw'(190418 'new'(190420 call EofError "EOF encountered in readAll")))
      }
    }
    (190434 return out_var)
  }
  where {
    (190358 call ||(190360 call == t string[244])(190364 call == t bytes[232]))
  }
  { scopeless type
    t
  }
  function _unknown[42].readAll[190440](arg _mt[190450]:_MT[201], arg this[190443] :
  fileReader, ref arg s[190447] :
  string[244]) : _unknown[42] throws "method"
  {
    { scopeless
      const tmp[190466] "const" "temp"(190460 call readStringImpl this s(190463 call - 1))
      (190473 call _check_tuple_var_decl tmp[190466] 2)
      const err[190455] "const"(190467 call tmp[190466] 0)
      const lenread[190457] "const"(190470 call tmp[190466] 1)
      (190478 'end of statement')
    }
    if(190503 call _cond_test(190493 call &&(190495 call != err 0)(190499 call != err EEOF)))
    {
      Try
      {
        {
          (190485 call(190482 call . this c"_ch_ioerror") err "in fileReader.readAll(ref s: string)")
        }
      }
    }
    (190507 return lenread)
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readAll[190512](arg _mt[190522]:_MT[201], arg this[190515] :
  fileReader, ref arg b[190519] :
  bytes[232]) : _unknown[42] throws "method"
  {
    { scopeless
      const tmp[190538] "const" "temp"(190532 call readBytesImpl this b(190535 call - 1))
      (190545 call _check_tuple_var_decl tmp[190538] 2)
      const err[190527] "const"(190539 call tmp[190538] 0)
      const lenread[190529] "const"(190542 call tmp[190538] 1)
      (190550 'end of statement')
    }
    if(190575 call _cond_test(190565 call &&(190567 call != err 0)(190571 call != err EEOF)))
    {
      Try
      {
        {
          (190557 call(190554 call . this c"_ch_ioerror") err "in fileReader.readAll(ref b: bytes)")
        }
      }
    }
    (190579 return lenread)
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readAll[190584](arg _mt[190599]:_MT[201], arg this[190587] :
  fileReader, ref arg a[190596] :
  (190594 call chpl__buildArrayRuntimeType unknown d[190590] unknown t[190592])) : _unknown[42] throws "method"
  {
    { scopeless
      unknown i[190646](190648 call . d c"low")
      (190652 'end of statement')
    }
    {
      const tmp[190907] "const" "temp"
      (190908 'move' tmp[190907](190905 'deref'(190904 '_wide_get_locale'(190654 call . this c"_home"))))
      {
        Try
        {
          {
            (190663 call(190660 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (190672 call(190669 call . this c"unlock"))
          }
        }
        { scopeless
          unknown got[190676] int[10]
          (190679 'end of statement')
        }
        {
          unknown tmp[190753] "temp"
          (190781 'move' tmp[190753](190774 call _cond_test(190779 call(190776 call . d c"contains") i)))
          WhileDo[190758]
          {
            {
              (190687 call = got(190691 call qio_channel_read_byte 0(190694 call . this c"_channel_internal")))
              if(190748 call _cond_test(190742 call == got(190745 call - EEOF)))
              {
                break nil[32]
              }
              {
                { scopeless
                  if(190738 call _cond_test(190734 call < got 0))
                  {
                    Try
                    {
                      {
                        (190707 call(190704 call . this c"_ch_ioerror")(190708 call :(190710 call - got) errorCode) "in fileReader.readAll(ref a: [])")
                      }
                    }
                  }
                  {
                    (190721 call =(190724 call a i)(190726 call : got t))
                    (190730 call += i 1)
                  }
                }
              }
            }
            label _continueLabel[190756]
            (190769 'move' tmp[190753](190762 call _cond_test(190767 call(190764 call . d c"contains") i)))
            tmp[190753]
          }
          label _breakLabel[190757]
        }
        if(190900 call _cond_test(190890 call ==(190892 call - i 1)(190897 call . d c"high")))
        {
          { scopeless
            unknown has_more[190786] 0
            (190789 'end of statement')
          }
          (190794 call(190791 call . this c"mark"))
          (190795 call = got(190799 call qio_channel_read_byte 0(190802 call . this c"_channel_internal")))
          (190805 call = has_more(190808 call >= got 0))
          (190816 call(190813 call . this c"revert"))
          if(190886 call _cond_test has_more)
          {
            { scopeless
              const sz[190819] "const"(190821 call qio_channel_get_size(190823 call . this c"_channel_internal"))
              (190827 'end of statement')
            }
            { scopeless
              const err_msg[190829] "const"(190830 call +(190832 call +(190834 call +(190836 call + "FileReader's contents"(190860 IfExpr (190841 call == sz(190844 call - 1)) then
              { scopeless
                " "
              } else
              { scopeless
                (190848 call +(190850 call + " ("(190853 call : sz string[244])) " bytes) ")
              } )) "exceeded capacity of array argument (")(190866 call :(190869 call . a c"size") string[244])) " bytes) in 'readAll'")
              (190877 'end of statement')
            }
            (190878 'throw'(190879 'new'(_chpl_manager = _owned[238](?))(190883 call InsufficientCapacityError err_msg)))
          }
        }
      }
      (190911 'elided on block' 0 tmp[190907])
    }
    (190915 return(190916 call - i(190920 call . d c"low")))
  }
  where {
    (190602 call &&(190604 call &&(190606 call &&(190608 call ==(190611 call . a c"rank") 1)(190619 call(190616 call . a c"isRectangular")))(190620 call ==(190623 call . a c"strides")(190627 call . strideKind c"one")))(190630 call ||(190632 call == t(190636 call uint[86] 8))(190638 call == t(190642 call int[10] 8))))
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readString[190927](arg _mt[190937]:_MT[201], arg this[190930] :
  fileReader, arg maxSize[190934] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown ret[190942] "" string[244]
      (190946 'end of statement')
    }
    { scopeless
      unknown tmp[190957] "temp"(190953 call readStringImpl this ret maxSize)
      (190964 call _check_tuple_var_decl tmp[190957] 2)
      unknown e[190948](190958 call tmp[190957] 0)
      unknown numRead[190950](190961 call tmp[190957] 1)
      (190969 'end of statement')
    }
    if(191008 call _cond_test(190998 call &&(191000 call != e 0)(191004 call != e EEOF)))
    {
      { scopeless
        (190970 'throw'(190972 call createSystemError e))
      }
    }
    {
      { scopeless
        if(190993 call _cond_test(190983 call &&(190985 call == e EEOF)(190989 call == numRead 0)))
        {
          { scopeless
            (190975 'throw'(190976 'new'(190978 call EofError "EOF encountered in readString")))
          }
        }
      }
    }
    (191014 return ret)
  }
  { scopeless type
    string[244]
  }
  function _unknown[42].readString[191019](arg _mt[191033]:_MT[201], arg this[191022] :
  fileReader, ref arg s[191026] :
  string[244], arg maxSize[191030] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[191047] "temp"(191043 call readStringImpl this s maxSize)
      (191054 call _check_tuple_var_decl tmp[191047] 2)
      unknown e[191038](191048 call tmp[191047] 0)
      unknown lenRead[191040](191051 call tmp[191047] 1)
      (191059 'end of statement')
    }
    if(191075 call _cond_test(191065 call &&(191067 call != e 0)(191071 call != e EEOF)))
    {
      { scopeless
        (191060 'throw'(191062 call createSystemError e))
      }
    }
    (191080 return(191081 call > lenRead 0))
  }
  { scopeless type
    bool
  }
  function _unknown[42].readBytes[191088](arg _mt[191098]:_MT[201], arg this[191091] :
  fileReader, arg maxSize[191095] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown ret[191103] b"" bytes[232]
      (191107 'end of statement')
    }
    { scopeless
      unknown tmp[191118] "temp"(191114 call readBytesImpl this ret maxSize)
      (191125 call _check_tuple_var_decl tmp[191118] 2)
      unknown e[191109](191119 call tmp[191118] 0)
      unknown numRead[191111](191122 call tmp[191118] 1)
      (191130 'end of statement')
    }
    if(191169 call _cond_test(191159 call &&(191161 call != e 0)(191165 call != e EEOF)))
    {
      { scopeless
        (191131 'throw'(191133 call createSystemError e))
      }
    }
    {
      { scopeless
        if(191154 call _cond_test(191144 call &&(191146 call == e EEOF)(191150 call == numRead 0)))
        {
          { scopeless
            (191136 'throw'(191137 'new'(191139 call EofError "EOF encountered in readBytes")))
          }
        }
      }
    }
    (191175 return ret)
  }
  { scopeless type
    bytes[232]
  }
  function _unknown[42].readBytes[191180](arg _mt[191194]:_MT[201], arg this[191183] :
  fileReader, ref arg b[191187] :
  bytes[232], arg maxSize[191191] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[191208] "temp"(191204 call readBytesImpl this b maxSize)
      (191215 call _check_tuple_var_decl tmp[191208] 2)
      unknown e[191199](191209 call tmp[191208] 0)
      unknown lenRead[191201](191212 call tmp[191208] 1)
      (191220 'end of statement')
    }
    if(191236 call _cond_test(191226 call &&(191228 call != e 0)(191232 call != e EEOF)))
    {
      { scopeless
        (191221 'throw'(191223 call createSystemError e))
      }
    }
    (191241 return(191242 call > lenRead 0))
  }
  { scopeless type
    bool
  }
  function computeMaxBytesToRead[191249](arg ch[191252] :
  fileReader, arg len[191256] :
  int[10], arg pos[191260] :
  int[10], arg t[191263]:_any[141](?)) : _unknown[42] "private"
  {
    { scopeless
      unknown uselen[191268] c_ssize_t
      (191271 'end of statement')
    }
    if(191324 call _cond_test(191320 call < len 0))
    {
      (191273 call = uselen(191277 call max c_ssize_t))
    }
    {
      (191280 call = uselen(191283 call : len c_ssize_t))
      if(191300 call _cond_test(191294 call != c_ssize_t(191298 call int[10] 64)))
      {
        (191289 call assert(191290 call == len uselen))
      }
      if(191316 call _cond_test(191312 call == t string[244]))
      {
        (191305 call = uselen(191308 call * 4 uselen))
      }
    }
    { scopeless
      unknown end[191329](191331 call qio_channel_end_offset_unlocked(191333 call . ch c"_channel_internal"))
      (191337 'end of statement')
    }
    if(191374 call _cond_test(191366 call != end(191370 call max(191372 call int[10] 64))))
    {
      { scopeless
        unknown channelLen[191340](191341 call :(191343 call - end pos) c_ssize_t)
        (191349 'end of statement')
      }
      if(191362 call _cond_test(191358 call < channelLen uselen))
      {
        (191351 call = uselen(191354 call + channelLen 1))
      }
    }
    (191379 call assert(191380 call >= uselen 0))
    (191384 return uselen)
  }
  { scopeless type
    c_ssize_t
  }
  function computeGuessReadSize[191389](arg ch[191392] :
  fileReader, arg maxChars[191396] :
  c_ssize_t, arg pos[191400] :
  int[10]) : _unknown[42] "private"
  {
    { scopeless
      unknown guessReadSize[191406] 0 c_ssize_t
      (191410 'end of statement')
    }
    { scopeless
      unknown fp[191412] nil[32] qio_file_ptr_t
      (191416 'end of statement')
    }
    (191418 call qio_channel_get_file_ptr(191420 call . ch c"_channel_internal") fp)
    { scopeless
      unknown fileLen[191425](191429 call - 1)(191427 call int[10] 64)
      (191433 'end of statement')
    }
    if(191474 call _cond_test fp)
    {
      if(191469 call _cond_test(191463 call == maxChars(191467 call max c_ssize_t)))
      {
        { scopeless
          unknown err[191437](191440 call qio_file_length fp fileLen) errorCode
          (191444 'end of statement')
        }
        if(191451 call _cond_test err)
        {
          { scopeless
            (191445 call = fileLen 0)
          }
        }
      }
      {
        (191457 call = fileLen(191461 call qio_file_length_guess fp))
      }
    }
    if(191505 call _cond_test(191489 call &&(191491 call &&(191493 call >= pos 0)(191497 call >= fileLen 1))(191501 call > fileLen pos)))
    {
      (191479 call = guessReadSize(191482 call :(191484 call - fileLen pos) c_ssize_t))
    }
    if(191518 call _cond_test(191514 call > guessReadSize maxChars))
    {
      (191510 call = guessReadSize maxChars)
    }
    (191523 call assert(191524 call >= guessReadSize 0))
    (191528 return guessReadSize)
  }
  { scopeless type
    c_ssize_t
  }
  function readBytesImpl[191533](arg ch[191536] :
  fileReader, ref arg out_var[191540] :
  bytes[232], arg len[191546] :
  (191544 call int[10] 64)) : _unknown[42] throws "private"
  {
    { scopeless
      unknown err[191558] 0 errorCode
      (191562 'end of statement')
    }
    { scopeless
      unknown lenread[191564](191566 call int[10] 64)
      (191569 'end of statement')
    }
    {
      const tmp[191876] "const" "temp"
      (191877 'move' tmp[191876](191874 'deref'(191873 '_wide_get_locale'(191571 call . ch c"_home"))))
      {
        Try
        {
          {
            (191580 call(191577 call . ch c"lock"))
          }
        }
        Defer
        {
          {
            (191589 call(191586 call . ch c"unlock"))
          }
        }
        { scopeless
          unknown pos[191593](191595 call qio_channel_offset_unlocked(191597 call . ch c"_channel_internal"))
          (191601 'end of statement')
        }
        { scopeless
          const maxBytes[191603] "const"(191606 call computeMaxBytesToRead ch len pos bytes[232]) c_ssize_t
          (191612 'end of statement')
        }
        { scopeless
          const guessReadSize[191614] "const"(191616 call +(191619 call computeGuessReadSize ch maxBytes pos) 1) c_ssize_t
          (191625 'end of statement')
        }
        { scopeless
          unknown buff[191627] nil[32] bufferType
          (191631 'end of statement')
        }
        { scopeless
          unknown buffSz[191633] 0
          (191636 'end of statement')
        }
        { scopeless
          unknown n[191638] 0 c_ssize_t
          (191642 'end of statement')
        }
        (191651 call =(191646 call _build_tuple buff buffSz)(191649 call bufferAlloc guessReadSize))
        {
          unknown tmp[191802] "temp"
          (191826 'move' tmp[191802](191821 call _cond_test(191823 call < n maxBytes)))
          WhileDo[191807]
          {
            {
              { scopeless
                unknown locErr[191659] 0 errorCode
                (191663 'end of statement')
              }
              { scopeless
                unknown amtRead[191665] 0 c_ssize_t
                (191669 'end of statement')
              }
              if(191749 call _cond_test(191745 call >= n buffSz))
              {
                { scopeless
                  unknown requestSz[191672](191673 call * 2 buffSz)
                  (191678 'end of statement')
                }
                if(191694 call _cond_test(191687 call < requestSz(191690 call + n 16)))
                {
                  { scopeless
                    (191679 call = requestSz(191682 call + n 16))
                  }
                }
                if(191722 call _cond_test(191707 call &&(191709 call < maxBytes(191713 call max c_ssize_t))(191715 call > requestSz(191718 call + maxBytes 1))))
                {
                  { scopeless
                    (191699 call = requestSz(191702 call + maxBytes 1))
                  }
                }
                (191737 call =(191730 call _build_tuple buff buffSz)(191733 call bufferEnsureSize buff buffSz requestSz))
                (191740 call assert(191741 call < n buffSz))
              }
              { scopeless
                const readN[191754] "const"(191756 call min(191757 call - maxBytes n)(191761 call -(191763 call : buffSz c_ssize_t) n))
                (191769 'end of statement')
              }
              (191770 call = locErr(191774 call qio_channel_read 0(191777 call . ch c"_channel_internal")(191781 call buff n) readN amtRead))
              (191785 call += n amtRead)
              if(191798 call _cond_test locErr)
              {
                (191790 call = err locErr)
                break nil[32]
              }
            }
            label _continueLabel[191805]
            (191816 'move' tmp[191802](191811 call _cond_test(191813 call < n maxBytes)))
            tmp[191802]
          }
          label _breakLabel[191806]
        }
        (191842 call =(191832 call _build_tuple buff buffSz)(191835 call bufferEnsureSize buff buffSz(191838 call + n 1)))
        (191844 call =(191847 call buff n) 0)
        { scopeless
          unknown tmp[191851](191857 call(191854 call . bytes[232] c"createAdoptingBuffer") buff(length = n)(size = buffSz)) bytes[232]
          (191864 'end of statement')
        }
        (191865 call <=> out_var tmp)
        (191869 call = lenread n)
      }
      (191880 'elided on block' 0 tmp[191876])
    }
    (191884 return(191888 call _build_tuple err lenread))
  }
  { scopeless type
    (191554 call _build_tuple errorCode(191552 call int[10] 64))
  }
  function readStringImpl[191893](arg ch[191896] :
  fileReader, ref arg out_var[191900] :
  string[244], arg len[191906] :
  (191904 call int[10] 64)) : _unknown[42] throws "private"
  {
    { scopeless
      unknown err[191918] 0 errorCode
      (191922 'end of statement')
    }
    { scopeless
      unknown lenread[191924](191926 call int[10] 64)
      (191929 'end of statement')
    }
    {
      const tmp[192303] "const" "temp"
      (192304 'move' tmp[192303](192301 'deref'(192300 '_wide_get_locale'(191931 call . ch c"_home"))))
      {
        Try
        {
          {
            (191940 call(191937 call . ch c"lock"))
          }
        }
        Defer
        {
          {
            (191949 call(191946 call . ch c"unlock"))
          }
        }
        { scopeless
          unknown pos[191953](191955 call qio_channel_offset_unlocked(191957 call . ch c"_channel_internal"))
          (191961 'end of statement')
        }
        { scopeless
          const maxBytes[191963] "const"(191966 call computeMaxBytesToRead ch len pos string[244]) c_ssize_t
          (191972 'end of statement')
        }
        { scopeless
          const maxChars[191974] "const"(191987 IfExpr (191976 call < len 0) then
          { scopeless
            (191981 call max c_ssize_t)
          } else
          { scopeless
            (191983 call : len c_ssize_t)
          } ) c_ssize_t
          (191991 'end of statement')
        }
        { scopeless
          const guessReadSize[191993] "const"(191995 call +(191998 call computeGuessReadSize ch maxChars pos) 5) c_ssize_t
          (192004 'end of statement')
        }
        { scopeless
          unknown buff[192006] nil[32] bufferType
          (192010 'end of statement')
        }
        { scopeless
          unknown buffSz[192012] 0
          (192015 'end of statement')
        }
        { scopeless
          unknown n[192017] 0 c_ssize_t
          (192021 'end of statement')
        }
        { scopeless
          unknown nChars[192023] 0 c_ssize_t
          (192027 'end of statement')
        }
        (192036 call =(192031 call _build_tuple buff buffSz)(192034 call bufferAlloc guessReadSize))
        {
          unknown tmp[192225] "temp"
          (192249 'move' tmp[192225](192244 call _cond_test(192246 call < nChars maxChars)))
          WhileDo[192230]
          {
            {
              { scopeless
                unknown locErr[192044] 0 errorCode
                (192048 'end of statement')
              }
              if(192134 call _cond_test(192127 call >(192129 call + n 5) buffSz))
              {
                { scopeless
                  unknown requestSz[192051](192052 call * 2 buffSz)
                  (192057 'end of statement')
                }
                if(192073 call _cond_test(192066 call < requestSz(192069 call + n 16)))
                {
                  { scopeless
                    (192058 call = requestSz(192061 call + n 16))
                  }
                }
                if(192101 call _cond_test(192086 call &&(192088 call < maxBytes(192092 call max c_ssize_t))(192094 call > requestSz(192097 call + maxBytes 5))))
                {
                  { scopeless
                    (192078 call = requestSz(192081 call + maxBytes 5))
                  }
                }
                (192116 call =(192109 call _build_tuple buff buffSz)(192112 call bufferEnsureSize buff buffSz requestSz))
                (192119 call assert(192120 call <(192122 call + n 5) buffSz))
              }
              { scopeless
                const bytesRemaining[192139] "const"(192140 call -(192142 call : buffSz c_ssize_t) n)
                (192148 'end of statement')
              }
              { scopeless
                const charsRemaining[192150] "const"(192164 IfExpr (192151 call < maxChars(192155 call max c_ssize_t)) then
                { scopeless
                  (192157 call - maxChars nChars)
                } else
                { scopeless
                  (192162 call max c_ssize_t)
                } )
                (192168 'end of statement')
              }
              { scopeless
                unknown readCodepoints[192170] 0 c_ssize_t
                (192174 'end of statement')
              }
              { scopeless
                unknown readBytes[192176] 0 c_ssize_t
                (192180 'end of statement')
              }
              (192181 call = locErr(192185 call qio_channel_read_chars 0(192188 call . ch c"_channel_internal")(192192 call buff n) bytesRemaining charsRemaining readBytes readCodepoints))
              (192198 call += nChars readCodepoints)
              (192202 call += n readBytes)
              if(192215 call _cond_test locErr)
              {
                (192207 call = err locErr)
                break nil[32]
              }
              (192220 call assert(192221 call > readBytes 0))
            }
            label _continueLabel[192228]
            (192239 'move' tmp[192225](192234 call _cond_test(192236 call < nChars maxChars)))
            tmp[192225]
          }
          label _breakLabel[192229]
        }
        (192265 call =(192255 call _build_tuple buff buffSz)(192258 call bufferEnsureSize buff buffSz(192261 call + n 1)))
        (192267 call =(192270 call buff n) 0)
        { scopeless
          unknown tmp[192274](192282 call(192279 call . NVStringFactory c"chpl_createStringWithOwnedBufferNV") buff(length = n)(size = buffSz)(numCodepoints = nChars)) string[244]
          (192291 'end of statement')
        }
        (192292 call <=> out_var tmp)
        (192296 call = lenread n)
      }
      (192307 'elided on block' 0 tmp[192303])
    }
    (192311 return(192315 call _build_tuple err lenread))
  }
  { scopeless type
    (191914 call _build_tuple errorCode(191912 call int[10] 64))
  }
  function _unknown[42].readBits[192320](arg _mt[192334]:_MT[201], arg this[192323] :
  fileReader, ref arg x[192327] :
  integral, arg numBits[192331] :
  int[10]) : _unknown[42] throws "method"
  {
    if(192417 call _cond_test castChecking)
    {
      if(192377 call _cond_test(192367 call <(192373 call(192370 call . Types c"numBits")(192375 'typeof' x)) numBits))
      {
        { scopeless
          (192339 'throw'(192340 'new'(_chpl_manager = _owned[238](?))(192344 call IllegalArgumentError(192345 call +(192347 call +(192349 call + "readBits numBits="(192354 call : numBits string[244])) " > bits in x:")(192361 call :(192364 'typeof' x) string[244])))))
        }
      }
      if(192411 call _cond_test(192401 call &&(192404 call isIntType(192406 'typeof' numBits))(192407 call < numBits 0)))
      {
        { scopeless
          (192382 'throw'(192383 'new'(_chpl_manager = _owned[238](?))(192387 call IllegalArgumentError(192388 call +(192390 call + "readBits numBits="(192393 call : numBits string[244])) " < 0"))))
        }
      }
    }
    { scopeless
      unknown tmp[192422] _internalIoBits
      (192425 'end of statement')
    }
    (192426 call =(192429 call . tmp c"numBits")(192432 call : numBits(192436 call int[10] 8)))
    { scopeless
      unknown ret[192439](192446 'try-expr'(192444 call(192441 call . this c"read") tmp))
      (192448 'end of statement')
    }
    (192449 call = x(192452 call :(192455 call . tmp c"x")(192459 'typeof' x)))
    (192460 return ret)
  }
  { scopeless type
    bool
  }
  function _unknown[42].readBits[192465](arg _mt[192477]:_MT[201], arg this[192468] :
  fileReader, arg resultType[192471]:_any[141](?), arg numBits[192474] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[192482] resultType
      (192485 'end of statement')
    }
    { scopeless
      unknown ret[192487](192497 'try-expr'(192494 call(192491 call . this c"readBits") tmp numBits))
      (192499 'end of statement')
    }
    if(192511 call _cond_test(192508 call ! ret))
    {
      { scopeless
        (192500 'throw'(192501 'new'(192503 call EofError "EOF Encountered in readBits")))
      }
    }
    (192516 return tmp)
  }
  { scopeless type
    resultType
  }
  function _unknown[42].writeBits[192521](arg _mt[192535]:_MT[201], arg this[192524] :
  fileWriter, arg x[192528] :
  integral, arg numBits[192532] :
  int[10]) : _unknown[42] throws "method"
  {
    if(192614 call _cond_test castChecking)
    {
      if(192576 call _cond_test(192566 call <(192572 call(192569 call . Types c"numBits")(192574 'typeof' x)) numBits))
      {
        { scopeless
          (192540 'throw'(192541 'new'(_chpl_manager = _owned[238](?))(192545 call IllegalArgumentError(192546 call +(192548 call +(192550 call + "writeBits numBits="(192555 call : numBits string[244])) " > bits in x:")(192560 call :(192563 'typeof' x) string[244])))))
        }
      }
      if(192608 call _cond_test(192598 call &&(192601 call isIntType(192603 'typeof' numBits))(192604 call < numBits 0)))
      {
        { scopeless
          (192581 'throw'(192582 'new'(_chpl_manager = _owned[238](?))(192586 call IllegalArgumentError(192587 call +(192589 call + "writeBits numBits="(192592 call : numBits string[244])) " < 0"))))
        }
      }
    }
    Try
    {
      {
        (192623 call(192620 call . this c"write")(192624 'new'(192626 call _internalIoBits(192627 call : x(192631 call uint[86] 64))(192633 call : numBits(192637 call int[10] 8)))))
      }
    }
  }
  { scopeless type
    void[4]
  }
  function _unknown[42].writeCodepoint[192645](arg _mt[192655]:_MT[201], arg this[192648] :
  fileWriter, arg codepoint[192652] :
  int[10]) : _unknown[42] throws "method"
  {
    Try
    {
      {
        (192663 call(192660 call . this c"write")(192664 'new'(192666 call _internalIoChar(192671 call(192668 call . codepoint c"safeCast")(192673 call int[10] 32)))))
      }
    }
  }
  function _unknown[42].readCodepoint[192680](arg _mt[192686]:_MT[201], arg this[192683] :
  fileReader) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[192691] int[10]
      (192694 'end of statement')
    }
    { scopeless
      unknown ret[192696](192705 'try-expr'(192703 call(192700 call . this c"readCodepoint") tmp))
      (192707 'end of statement')
    }
    if(192719 call _cond_test(192716 call ! ret))
    {
      { scopeless
        (192708 'throw'(192709 'new'(192711 call EofError "Encountered EOF in readCodepoint")))
      }
    }
    (192724 return tmp)
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readCodepoint[192729](arg _mt[192739]:_MT[201], arg this[192732] :
  fileReader, ref arg codepoint[192736] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[192744] _internalIoChar
      (192747 'end of statement')
    }
    { scopeless
      unknown ret[192749](192756 'try-expr'(192754 call(192751 call . this c"read") tmp))
      (192758 'end of statement')
    }
    (192759 call = codepoint(192769 call(192766 call .(192763 call . tmp c"ch") c"safeCast")(192771 'typeof' codepoint)))
    (192772 return ret)
  }
  { scopeless type
    bool
  }
  function _unknown[42].writeByte[192777](arg _mt[192789]:_MT[201], arg this[192780] :
  fileWriter, arg byte[192786] :
  (192784 call uint[86] 8)) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[192793] 0 errorCode
      (192797 'end of statement')
    }
    {
      const tmp[192834] "const" "temp"
      (192835 'move' tmp[192834](192832 'deref'(192831 '_wide_get_locale'(192799 call . this c"_home"))))
      {
        Try
        {
          {
            (192808 call(192805 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (192817 call(192814 call . this c"unlock"))
          }
        }
        (192820 call = err(192824 call qio_channel_write_uint8 0(192827 call . this c"_channel_internal") byte))
      }
      (192838 'elided on block' 0 tmp[192834])
    }
    if(192873 call _cond_test(192869 call == err EEOF))
    {
      (192843 'throw'(192844 'new'(192846 call UnexpectedEofError "Encountered EOF in writeByte")))
    }
    {
      { scopeless
        if(192865 call _cond_test err)
        {
          Try
          {
            {
              (192856 call(192853 call . this c"_ch_ioerror") err "in fileWriter.writeByte")
            }
          }
        }
      }
    }
  }
  function _unknown[42].readByte[192880](arg _mt[192886]:_MT[201], arg this[192883] :
  fileReader) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[192893](192895 call uint[86] 8)
      (192898 'end of statement')
    }
    { scopeless
      unknown ret[192900](192907 'try-expr'(192905 call(192902 call . this c"readByte") tmp))
      (192909 'end of statement')
    }
    if(192921 call _cond_test(192918 call ! ret))
    {
      { scopeless
        (192910 'throw'(192911 'new'(192913 call EofError "Encountered EOF in readByte")))
      }
    }
    (192926 return tmp)
  }
  { scopeless type
    (192889 call uint[86] 8)
  }
  function _unknown[42].readByte[192931](arg _mt[192943]:_MT[201], arg this[192934] :
  fileReader, ref arg byte[192940] :
  (192938 call uint[86] 8)) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[192948] 0 errorCode
      (192952 'end of statement')
    }
    { scopeless
      unknown x[192954](192956 call uint[86] 8)
      (192959 'end of statement')
    }
    {
      const tmp[192996] "const" "temp"
      (192997 'move' tmp[192996](192994 'deref'(192993 '_wide_get_locale'(192961 call . this c"_home"))))
      {
        Try
        {
          {
            (192970 call(192967 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (192979 call(192976 call . this c"unlock"))
          }
        }
        (192982 call = err(192986 call qio_channel_read_uint8 0(192989 call . this c"_channel_internal") x))
      }
      (193000 'elided on block' 0 tmp[192996])
    }
    (193004 call = byte x)
    if(193039 call _cond_test(193036 call ! err))
    {
      (193009 return 1)
    }
    {
      { scopeless
        if(193032 call _cond_test(193028 call == err EEOF))
        {
          (193012 return 0)
        }
        {
          Try
          {
            {
              (193020 call(193017 call . this c"_ch_ioerror") err "in fileReader.readByte")
            }
          }
        }
      }
    }
    (193044 return 0)
  }
  { scopeless type
    bool
  }
  { scopeless
    unknown IOSkipBufferingForLargeOps[193050] "config" "param" "@unstable" 1
    (193053 'end of statement')
  }
  { scopeless
    unknown qio_write_unbuffered_threshold[193055] "extern" "private" c_ssize_t
    (193058 'end of statement')
  }
  { scopeless
    unknown qio_read_unbuffered_threshold[193060] "extern" "private" c_ssize_t
    (193063 'end of statement')
  }
  if(193080 call _cond_test(193077 call ! IOSkipBufferingForLargeOps))
  {
    (193065 call = qio_write_unbuffered_threshold(193069 call max c_ssize_t))
    (193071 call = qio_read_unbuffered_threshold(193075 call max c_ssize_t))
  }
  function _unknown[42].writeString[193084](arg _mt[193101]:_MT[201], arg this[193087] :
  fileWriter, arg s[193091] :
  string[244], arg size[193098] =
  (193095 call . s c"size")) : _unknown[42] throws "method"
  {
    Try
    {
      {
        (193109 call(193106 call . this c"writeBinary") s size)
      }
    }
  }
  function _unknown[42].writeBytes[193117](arg _mt[193134]:_MT[201], arg this[193120] :
  fileWriter, arg b[193124] :
  bytes[232], arg size[193131] =
  (193128 call . b c"size")) : _unknown[42] throws "method"
  {
    Try
    {
      {
        (193142 call(193139 call . this c"writeBinary") b size)
      }
    }
  }
  function sysEndianness[193150]() : _unknown[42] "private"
  {
    { scopeless
      unknown x[193154] 1(193156 call int[10] 16)
      (193160 'end of statement')
    }
    if(193195 call _cond_test(193173 call ==(193193 call(193190 call .(193175 call :(193177 call :(193180 call c_addrOf x)(193183 call c_ptr void[4]))(193186 call c_ptr(193188 call uint[86] 8))) c"deref")) 0))
    {
      { scopeless
        (193161 return(193163 call . endianness c"big"))
      }
    }
    {
      { scopeless
        (193167 return(193169 call . endianness c"little"))
      }
    }
  }
  function isNativeEndianness[193203](arg endian[193205]:_any[141](?)) : _unknown[42] "private"
  {
    (193208 return(193209 call ||(193211 call == endian(193215 call . endianness c"native"))(193218 call == endian(193222 call sysEndianness))))
  }
  function endianToIoKind[193225](param arg e[193228] :
  endianness) param : _unknown[42] "private"
  {
    if(193290 call _cond_test(193283 call == e(193287 call . endianness c"native")))
    {
      { scopeless
        (193232 return(193234 call . _iokind c"native"))
      }
    }
    {
      { scopeless
        if(193277 call _cond_test(193270 call == e(193274 call . endianness c"big")))
        {
          { scopeless
            (193238 return(193240 call . _iokind c"big"))
          }
        }
        {
          { scopeless
            if(193264 call _cond_test(193257 call == e(193261 call . endianness c"little")))
            {
              { scopeless
                (193244 return(193246 call . _iokind c"little"))
              }
            }
            {
              { scopeless
                (193251 call compilerError "Unexpected value in chpl_endianToIoKind(): " e)
              }
            }
          }
        }
      }
    }
  }
  function _unknown[42].writeBinary[193298](arg _mt[193315]:_MT[201], arg this[193301] :
  fileWriter, arg ptr[193308] :
  (193305 call c_ptr unknown t[193306]), arg numBytes[193312] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown e[193319] 0 errorCode
      (193323 'end of statement')
    }
    { scopeless
      { scopeless
        const t_size[193336] "const"(193338 call c_sizeof t)
      }
      { scopeless
        const numBytesToWrite[193326] "const"(193327 call *(193329 call / numBytes t_size) t_size)
      }
      (193341 'end of statement')
    }
    (193342 call = e(193359 'try-expr'(193346 call qio_channel_write_amt 0(193349 call . this c"_channel_internal")(193353 call ptr 0)(193355 call : numBytesToWrite c_ssize_t))))
    if(193369 call _cond_test(193365 call != e 0))
    {
      (193361 'throw'(193363 call createSystemOrChplError e))
    }
  }
  function _unknown[42].writeBinary[193375](arg _mt[193391]:_MT[201], arg this[193378] :
  fileWriter, arg ptr[193384] :
  (193382 call c_ptr void[4]), arg numBytes[193388] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown e[193395] 0 errorCode
      (193399 'end of statement')
    }
    { scopeless
      unknown byte_ptr[193401](193402 call : ptr(193406 call c_ptr(193408 call uint[86] 8)))
      (193411 'end of statement')
    }
    (193412 call = e(193429 'try-expr'(193416 call qio_channel_write_amt 0(193419 call . this c"_channel_internal")(193423 call byte_ptr 0)(193425 call : numBytes c_ssize_t))))
    if(193439 call _cond_test(193435 call != e 0))
    {
      { scopeless
        (193430 'throw'(193432 call createSystemOrChplError e))
      }
    }
  }
  function _unknown[42].writeBinary[193446](arg _mt[193465]:_MT[201], arg this[193449] :
  fileWriter, arg arg[193453] :
  numeric, param arg endian[193461] :
  endianness =
  (193458 call . endianness c"native")) : _unknown[42] throws "method"
  {
    { scopeless
      const e[193469] "const"(193478 'try-expr'(193472 call _write_binary_internal _channel_internal(193475 call endianToIoKind endian) arg)) errorCode
      (193480 'end of statement')
    }
    if(193490 call _cond_test(193486 call != e 0))
    {
      (193482 'throw'(193484 call createSystemOrChplError e))
    }
  }
  function _unknown[42].writeBinary[193496](arg _mt[193510]:_MT[201], arg this[193499] :
  fileWriter, arg arg[193503] :
  numeric, arg endian[193507] :
  endianness) : _unknown[42] throws "method"
  {
    {
      unknown tmp[193570] "expr temp" "maybe param" "maybe type" "temp"
      (193572 'move' tmp[193570] endian)
      if(193577 call _cond_test(193574 call == tmp[193570](193517 call . endianness c"native")))
      {
        (193526 call(193523 call . this c"writeBinary") arg(193529 call . endianness c"native"))
      }
      {
        if(193583 call _cond_test(193580 call == tmp[193570](193535 call . endianness c"big")))
        {
          (193544 call(193541 call . this c"writeBinary") arg(193547 call . endianness c"big"))
        }
        {
          if(193590 call _cond_test(193587 call == tmp[193570](193553 call . endianness c"little")))
          {
            (193562 call(193559 call . this c"writeBinary") arg(193565 call . endianness c"little"))
          }
        }
      }
    }
  }
  function _unknown[42].writeBinary[193596](arg _mt[193615]:_MT[201], arg this[193599] :
  fileWriter, arg s[193603] :
  string[244], arg size[193611] :
  int[10] =
  (193608 call . s c"size")) : _unknown[42] throws "method"
  {
    if(193635 call _cond_test(193628 call > size(193632 call . s c"size")))
    {
      { scopeless
        (193618 'throw'(193619 'new'(_chpl_manager = _owned[238](?))(193623 call IllegalArgumentError "illegal argument 'size': cannot exceed length of provided string")))
      }
    }
    if(193652 call _cond_test(193649 call . s c"hasEscapes"))
    {
      { scopeless
        (193640 'throw'(193642 call createSystemOrChplError EILSEQ "illegal use of escaped string characters in 'writeBinary'"))
      }
    }
    {
      const tmp[193852] "const" "temp"
      (193853 'move' tmp[193852](193850 'deref'(193849 '_wide_get_locale'(193658 call . this c"_home"))))
      {
        { scopeless
          unknown sLocal[193663](193668 call(193665 call . s c"localize"))
          (193670 'end of statement')
        }
        { scopeless
          unknown bytesLen[193672] 0
          (193675 'end of statement')
        }
        if(193797 call _cond_test(193790 call == size(193794 call . sLocal c"size")))
        {
          (193677 call = bytesLen(193681 call . s c"numBytes"))
        }
        {
          {
            unknown _indexOfInterest[193723] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[193724] "expr temp" "temp"
            (193744 'move' _iterator[193724](193705 call _build_tuple(193737 call _getIterator(193736 call(193733 call . sLocal c"_indexLen")))(193742 call _getIterator(193740 call chpl_build_low_bounded_range 0))))
            Defer
            {
              {
                (193783 call _freeIterator _iterator[193724])
              }
            }
            { scopeless type
              (193749 'move' _indexOfInterest[193723](193746 call iteratorIndex _iterator[193724]))
            }
            ForLoop[193725]
            {
              (193754 call _check_tuple_var_decl _indexOfInterest[193723] 2)
              (193763 call _check_tuple_var_decl(193761 call _indexOfInterest[193723] 0) 2)
              unknown cp_byte_len[193688] "index var" "insert auto destroy"
              (193772 'move' cp_byte_len[193688](193769 call(193767 call _indexOfInterest[193723] 0) 1))
              unknown i[193692] "index var" "insert auto destroy"
              (193778 'move' i[193692](193775 call _indexOfInterest[193723] 1))
              {
                if(193714 call _cond_test(193710 call == i size))
                {
                  { scopeless
                    break nil[32]
                  }
                }
                (193719 call += bytesLen cp_byte_len)
              }
              label _continueLabel[193728]
              _indexOfInterest[193723]
              _iterator[193724]
            }
            label _breakLabel[193729]
          }
        }
        { scopeless
          unknown e[193802](193805 call qio_channel_write_string 0(193807 call :(193810 call . _iokind c"native") c_int)(193815 call qio_channel_str_style(193817 call . this c"_channel_internal"))(193821 call . this c"_channel_internal")(193828 call(193825 call . sLocal c"c_str"))(193829 call : bytesLen c_ssize_t)) errorCode
          (193834 'end of statement')
        }
        if(193844 call _cond_test(193840 call != e 0))
        {
          { scopeless
            (193835 'throw'(193837 call createSystemOrChplError e))
          }
        }
      }
      (193856 'elided on block' 0 tmp[193852])
    }
  }
  function _unknown[42].writeBinary[193862](arg _mt[193881]:_MT[201], arg this[193865] :
  fileWriter, arg b[193869] :
  bytes[232], arg size[193877] :
  int[10] =
  (193874 call . b c"size")) : _unknown[42] throws "method"
  {
    if(193901 call _cond_test(193894 call > size(193898 call . b c"size")))
    {
      { scopeless
        (193884 'throw'(193885 'new'(_chpl_manager = _owned[238](?))(193889 call IllegalArgumentError "illegal argument 'size': cannot exceed length of provided bytes")))
      }
    }
    {
      const tmp[193971] "const" "temp"
      (193972 'move' tmp[193971](193969 'deref'(193968 '_wide_get_locale'(193907 call . this c"_home"))))
      {
        { scopeless
          unknown bLocal[193912](193917 call(193914 call . b c"localize"))
          (193919 'end of statement')
        }
        { scopeless
          unknown e[193921](193924 call qio_channel_write_string 0(193926 call :(193929 call . _iokind c"native") c_int)(193934 call qio_channel_str_style(193936 call . this c"_channel_internal"))(193940 call . this c"_channel_internal")(193947 call(193944 call . bLocal c"c_str"))(193948 call : size c_ssize_t)) errorCode
          (193953 'end of statement')
        }
        if(193963 call _cond_test(193959 call != e 0))
        {
          { scopeless
            (193954 'throw'(193956 call createSystemOrChplError e))
          }
        }
      }
      (193975 'elided on block' 0 tmp[193971])
    }
  }
  function isSuitableForBinaryReadWrite[193981](arg arr[193984] :
  _array) param : _unknown[42] "private"
  {
    (193988 return(193990 call chpl__isDROrDRView arr))
  }
  function _unknown[42].writeBinary[193994](arg _mt[194018]:_MT[201], arg this[193997] :
  fileWriter, const  ref arg data[194006] :
  (194004 call chpl__buildArrayRuntimeType unknown d[194000] unknown t[194002]), param arg endian[194014] :
  endianness =
  (194011 call . endianness c"native")) : _unknown[42] throws "method"
  {
    { scopeless
      { scopeless
        unknown err[194063] string[244]
      }
      { scopeless
        unknown e[194058] 0 errorCode
      }
      (194066 'end of statement')
    }
    {
      const tmp[194266] "const" "temp"
      (194267 'move' tmp[194266](194264 'deref'(194263 '_wide_get_locale'(194068 call . this c"_home"))))
      {
        Try
        {
          {
            (194077 call(194074 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (194086 call(194083 call . this c"unlock"))
          }
        }
        { scopeless
          const tSize[194090] "const"(194091 call :(194094 call c_sizeof t) c_ssize_t)
          (194098 'end of statement')
        }
        if(194258 call _cond_test(194242 call !(194253 call(194250 call .(194245 call . data c"_value") c"isDataContiguous")(194255 call . d c"_value"))))
        {
          (194100 call = err "writeBinary() array data must be contiguous")
        }
        {
          { scopeless
            if(194237 call _cond_test(194223 call !=(194229 '_wide_get_node' data)(194234 call .(194231 call . this c"_home") c"id")))
            {
              (194107 call = err "writeBinary() array data must be on same locale as 'fileWriter'")
            }
            {
              { scopeless
                if(194219 call _cond_test(194217 call isNativeEndianness endian))
                {
                  if(194149 call _cond_test(194142 call >(194145 call . data c"size") 0))
                  {
                    (194115 call = e(194141 'try-expr'(194119 call qio_channel_write_amt 0(194122 call . this c"_channel_internal")(194126 call data(194128 call . d c"low"))(194131 call *(194133 call :(194136 call . data c"size") c_ssize_t) tSize))))
                  }
                }
                {
                  {
                    unknown _indexOfInterest[194184] "an _indexOfInterest or chpl__followIdx variable" "temp"
                    unknown _iterator[194185] "expr temp" "temp"
                    (194194 'move' _iterator[194185](194192 call _getIterator data))
                    Defer
                    {
                      {
                        (194209 call _freeIterator _iterator[194185])
                      }
                    }
                    { scopeless type
                      (194199 'move' _indexOfInterest[194184](194196 call iteratorIndex _iterator[194185]))
                    }
                    ForLoop[194186]
                    {
                      unknown b[194154] "index var" "insert auto destroy"
                      (194204 'move' b[194154] _indexOfInterest[194184])
                      {
                        (194158 call = e(194171 'try-expr'(194162 call _write_binary_internal(194164 call . this c"_channel_internal")(194168 call endianToIoKind endian) b)))
                        if(194179 call _cond_test(194175 call != e 0))
                        {
                          { scopeless
                            break nil[32]
                          }
                        }
                      }
                      label _continueLabel[194189]
                      _indexOfInterest[194184]
                      _iterator[194185]
                    }
                    label _breakLabel[194190]
                  }
                }
              }
            }
          }
        }
      }
      (194270 'elided on block' 0 tmp[194266])
    }
    if(194287 call _cond_test(194280 call !(194286 call(194283 call . err c"isEmpty"))))
    {
      { scopeless
        (194274 'throw'(194275 'new'(194277 call IllegalArgumentError err)))
      }
    }
    if(194301 call _cond_test(194297 call != e 0))
    {
      { scopeless
        (194292 'throw'(194294 call createSystemOrChplError e))
      }
    }
  }
  where {
    (194020 call &&(194022 call &&(194025 call isSuitableForBinaryReadWrite data)(194027 call ==(194030 call . data c"strides")(194034 call . strideKind c"one")))(194037 call ||(194039 call ||(194041 call ||(194044 call isIntegralType t)(194047 call isRealType t))(194050 call isImagType t))(194053 call isComplexType t)))
  }
  function _unknown[42].writeBinary[194309](arg _mt[194333]:_MT[201], arg this[194312] :
  fileWriter, const  ref arg data[194321] :
  (194319 call chpl__buildArrayRuntimeType unknown d[194315] unknown t[194317]), param arg endian[194329] :
  endianness =
  (194326 call . endianness c"native")) : _unknown[42] throws "method"
  {
    (194337 call compilerError "writeBinary() only supports local, rectangular, non-strided arrays of simple types")
  }
  function _unknown[42].writeBinary[194343](arg _mt[194361]:_MT[201], arg this[194346] :
  fileWriter, const  ref arg data[194354] :
  (194352 call chpl__buildArrayRuntimeType nil[32] unknown t[194350]), arg endian[194358] :
  endianness) : _unknown[42] throws "method"
  {
    {
      unknown tmp[194456] "expr temp" "maybe param" "maybe type" "temp"
      (194458 'move' tmp[194456] endian)
      if(194463 call _cond_test(194460 call == tmp[194456](194403 call . endianness c"native")))
      {
        (194412 call(194409 call . this c"writeBinary") data(194415 call . endianness c"native"))
      }
      {
        if(194469 call _cond_test(194466 call == tmp[194456](194421 call . endianness c"big")))
        {
          (194430 call(194427 call . this c"writeBinary") data(194433 call . endianness c"big"))
        }
        {
          if(194476 call _cond_test(194473 call == tmp[194456](194439 call . endianness c"little")))
          {
            (194448 call(194445 call . this c"writeBinary") data(194451 call . endianness c"little"))
          }
        }
      }
    }
  }
  where {
    (194363 call &&(194365 call &&(194368 call isSuitableForBinaryReadWrite data)(194370 call ==(194373 call . data c"strides")(194377 call . strideKind c"one")))(194380 call ||(194382 call ||(194384 call ||(194387 call isIntegralType t)(194390 call isRealType t))(194393 call isImagType t))(194396 call isComplexType t)))
  }
  function _unknown[42].writeBinary[194483](arg _mt[194501]:_MT[201], arg this[194486] :
  fileWriter, const  ref arg data[194494] :
  (194492 call chpl__buildArrayRuntimeType nil[32] unknown t[194490]), arg endian[194498] :
  endianness) : _unknown[42] throws "method"
  {
    (194505 call compilerError "writeBinary() only supports local, rectangular, non-strided arrays of simple types")
  }
  function _unknown[42].readBinary[194509](arg _mt[194528]:_MT[201], arg this[194512] :
  fileReader, ref arg arg[194516] :
  numeric, param arg endian[194524] :
  endianness =
  (194521 call . endianness c"native")) : _unknown[42] throws "method"
  {
    { scopeless
      const e[194533] "const"(194542 'try-expr'(194536 call _read_binary_internal _channel_internal(194539 call endianToIoKind endian) arg)) errorCode
      (194544 'end of statement')
    }
    if(194565 call _cond_test(194561 call == e EEOF))
    {
      (194546 return 0)
    }
    {
      { scopeless
        if(194557 call _cond_test(194553 call != e 0))
        {
          (194549 'throw'(194551 call createSystemOrChplError e))
        }
      }
    }
    (194570 return 1)
  }
  { scopeless type
    bool
  }
  function _unknown[42].readBinary[194575](arg _mt[194589]:_MT[201], arg this[194578] :
  fileReader, ref arg arg[194582] :
  numeric, arg endian[194586] :
  endianness) : _unknown[42] throws "method"
  {
    { scopeless
      unknown rv[194594] 0 bool
      (194598 'end of statement')
    }
    {
      unknown tmp[194665] "expr temp" "maybe param" "maybe type" "temp"
      (194667 'move' tmp[194665] endian)
      if(194672 call _cond_test(194669 call == tmp[194665](194603 call . endianness c"native")))
      {
        (194608 call = rv(194615 call(194612 call . this c"readBinary") arg(194618 call . endianness c"native")))
      }
      {
        if(194678 call _cond_test(194675 call == tmp[194665](194624 call . endianness c"big")))
        {
          (194629 call = rv(194636 call(194633 call . this c"readBinary") arg(194639 call . endianness c"big")))
        }
        {
          if(194685 call _cond_test(194682 call == tmp[194665](194645 call . endianness c"little")))
          {
            (194650 call = rv(194657 call(194654 call . this c"readBinary") arg(194660 call . endianness c"little")))
          }
        }
      }
    }
    (194689 return rv)
  }
  { scopeless type
    bool
  }
  function _unknown[42].readBinary[194694](arg _mt[194708]:_MT[201], arg this[194697] :
  fileReader, ref arg s[194701] :
  string[244], arg maxSize[194705] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[194722] "temp"(194718 call readStringImpl this s maxSize)
      (194729 call _check_tuple_var_decl tmp[194722] 2)
      unknown e[194713](194723 call tmp[194722] 0)
      unknown lenRead[194715](194726 call tmp[194722] 1)
      (194734 'end of statement')
    }
    if(194750 call _cond_test(194740 call &&(194742 call != e 0)(194746 call != e EEOF)))
    {
      { scopeless
        (194735 'throw'(194737 call createSystemError e))
      }
    }
    (194755 return(194756 call > lenRead 0))
  }
  { scopeless type
    bool
  }
  function _unknown[42].readBinary[194763](arg _mt[194777]:_MT[201], arg this[194766] :
  fileReader, ref arg b[194770] :
  bytes[232], arg maxSize[194774] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[194791] "temp"(194787 call readBytesImpl this b maxSize)
      (194798 call _check_tuple_var_decl tmp[194791] 2)
      unknown e[194782](194792 call tmp[194791] 0)
      unknown lenRead[194784](194795 call tmp[194791] 1)
      (194803 'end of statement')
    }
    if(194819 call _cond_test(194809 call &&(194811 call != e 0)(194815 call != e EEOF)))
    {
      { scopeless
        (194804 'throw'(194806 call createSystemError e))
      }
    }
    (194824 return(194825 call > lenRead 0))
  }
  { scopeless type
    bool
  }
  { scopeless
    unknown ReadBinaryArrayReturnInt[194833] "config" "deprecated" "param" 1
    (194836 'end of statement')
  }
  function _unknown[42].readBinary[194837](arg _mt[194859]:_MT[201], arg this[194840] :
  fileReader, ref arg data[194849] :
  (194847 call chpl__buildArrayRuntimeType unknown d[194843] unknown t[194845]), param arg endian[194856] =
  (194853 call . endianness c"native")) : _unknown[42] throws "method"
  {
    { scopeless
      { scopeless
        unknown err[194910] string[244]
      }
      { scopeless
        unknown e[194905] 0 errorCode
      }
      { scopeless
        unknown numRead[194900] 0 c_ssize_t
      }
      (194913 'end of statement')
    }
    {
      const tmp[195156] "const" "temp"
      (195157 'move' tmp[195156](195154 'deref'(195153 '_wide_get_locale'(194915 call . this c"_home"))))
      {
        Try
        {
          {
            (194924 call(194921 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (194933 call(194930 call . this c"unlock"))
          }
        }
        if(195148 call _cond_test(195134 call !(195143 call(195140 call .(195137 call . data c"_value") c"isDataContiguous")(195145 call . d c"_value"))))
        {
          (194937 call = err "readBinary() array data must be contiguous")
        }
        {
          { scopeless
            if(195129 call _cond_test(195115 call !=(195121 '_wide_get_node' data)(195126 call .(195123 call . this c"_home") c"id")))
            {
              (194944 call = err "readBinary() array data must be on same locale as 'fileReader'")
            }
            {
              { scopeless
                if(195111 call _cond_test(195109 call isNativeEndianness endian))
                {
                  if(194998 call _cond_test(194991 call >(194994 call . data c"size") 0))
                  {
                    (194952 call = e(194956 call qio_channel_read 0(194959 call . this c"_channel_internal")(194963 call data(194965 call . d c"low"))(194968 call :(194970 call *(194973 call . data c"size")(194977 call c_sizeof t)) c_ssize_t) numRead))
                    (194981 call /= numRead(194984 call :(194987 call c_sizeof t)(194990 'typeof' numRead)))
                  }
                }
                {
                  {
                    unknown _indexOfInterest[195061] "an _indexOfInterest or chpl__followIdx variable" "temp"
                    unknown _iterator[195062] "expr temp" "temp"
                    (195079 'move' _iterator[195062](195015 call _build_tuple(195074 call _getIterator(195071 call . data c"_dom"))(195077 call _getIterator data)))
                    Defer
                    {
                      {
                        (195101 call _freeIterator _iterator[195062])
                      }
                    }
                    { scopeless type
                      (195084 'move' _indexOfInterest[195061](195081 call iteratorIndex _iterator[195062]))
                    }
                    ForLoop[195063]
                    {
                      (195089 call _check_tuple_var_decl _indexOfInterest[195061] 2)
                      unknown b[195005] "index var" "insert auto destroy"
                      (195096 'move' b[195005](195093 call _indexOfInterest[195061] 1))
                      {
                        (195017 call = e(195030 'try-expr'(195021 call _read_binary_internal(195023 call . this c"_channel_internal")(195027 call endianToIoKind endian) b)))
                        if(195056 call _cond_test(195052 call == e EEOF))
                        {
                          break nil[32]
                        }
                        {
                          { scopeless
                            if(195048 call _cond_test(195044 call != e 0))
                            {
                              break nil[32]
                            }
                            {
                              (195040 call += numRead 1)
                            }
                          }
                        }
                      }
                      label _continueLabel[195066]
                      _indexOfInterest[195061]
                      _iterator[195062]
                    }
                    label _breakLabel[195067]
                  }
                }
              }
            }
          }
        }
      }
      (195160 'elided on block' 0 tmp[195156])
    }
    if(195177 call _cond_test(195170 call !(195176 call(195173 call . err c"isEmpty"))))
    {
      { scopeless
        (195164 'throw'(195165 'new'(195167 call IllegalArgumentError err)))
      }
    }
    if(195203 call _cond_test(195187 call &&(195189 call &&(195191 call != e 0)(195195 call != e EEOF))(195199 call != e ESHORT)))
    {
      { scopeless
        (195182 'throw'(195184 call createSystemOrChplError e))
      }
    }
    (195208 return(195209 call : numRead int[10]))
  }
  where {
    (194862 call &&(194864 call &&(194867 call isSuitableForBinaryReadWrite data)(194869 call ==(194872 call . data c"strides")(194876 call . strideKind c"one")))(194879 call ||(194881 call ||(194883 call ||(194886 call isIntegralType t)(194889 call isRealType t))(194892 call isImagType t))(194895 call isComplexType t)))
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readBinary[195217](arg _mt[195235]:_MT[201], arg this[195220] :
  fileReader, ref arg data[195228] :
  (195226 call chpl__buildArrayRuntimeType nil[32] unknown t[195224]), arg endian[195232] :
  endianness) : _unknown[42] throws "method"
  {
    { scopeless
      unknown nr[195275] 0 int[10]
      (195279 'end of statement')
    }
    {
      unknown tmp[195346] "expr temp" "maybe param" "maybe type" "temp"
      (195348 'move' tmp[195346] endian)
      if(195353 call _cond_test(195350 call == tmp[195346](195284 call . endianness c"native")))
      {
        (195289 call = nr(195296 call(195293 call . this c"readBinary") data(195299 call . endianness c"native")))
      }
      {
        if(195359 call _cond_test(195356 call == tmp[195346](195305 call . endianness c"big")))
        {
          (195310 call = nr(195317 call(195314 call . this c"readBinary") data(195320 call . endianness c"big")))
        }
        {
          if(195366 call _cond_test(195363 call == tmp[195346](195326 call . endianness c"little")))
          {
            (195331 call = nr(195338 call(195335 call . this c"readBinary") data(195341 call . endianness c"little")))
          }
        }
      }
    }
    (195370 return nr)
  }
  where {
    (195238 call &&(195240 call &&(195243 call isSuitableForBinaryReadWrite data)(195245 call ==(195248 call . data c"strides")(195252 call . strideKind c"one")))(195255 call ||(195257 call ||(195259 call ||(195262 call isIntegralType t)(195265 call isRealType t))(195268 call isImagType t))(195271 call isComplexType t)))
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readBinary[195376](arg _mt[195394]:_MT[201], arg this[195379] :
  fileReader, ref arg data[195387] :
  (195385 call chpl__buildArrayRuntimeType nil[32] unknown t[195383]), arg endian[195391] :
  endianness) : _unknown[42] throws "method"
  {
    (195399 call compilerError "readBinary() only supports local, rectangular, non-strided " "arrays of simple types")
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readBinary[195409](arg _mt[195430]:_MT[201], arg this[195412] :
  fileReader, ref arg data[195420] :
  (195418 call chpl__buildArrayRuntimeType nil[32] unknown t[195416]), param arg endian[195427] =
  (195424 call . endianness c"native")) : _unknown[42] throws "method"
  {
    (195435 call compilerError "readBinary() only supports local, rectangular, non-strided " "arrays of simple types")
  }
  { scopeless type
    bool
  }
  function _unknown[42].readBinary[195441](arg _mt[195458]:_MT[201], arg this[195444] :
  fileReader, arg ptr[195451] :
  (195448 call c_ptr unknown t[195449]), arg maxBytes[195455] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      { scopeless
        unknown e[195469] 0 errorCode
      }
      { scopeless
        unknown numRead[195464] 0 c_ssize_t
      }
      (195473 'end of statement')
    }
    { scopeless
      { scopeless
        const t_size[195489] "const"(195491 call c_sizeof t)
      }
      { scopeless
        const numBytesToRead[195476] "const"(195477 call *(195479 call /(195481 call : maxBytes uint[86]) t_size) t_size)
      }
      (195494 'end of statement')
    }
    (195495 call = e(195499 call qio_channel_read 0(195502 call . this c"_channel_internal")(195506 call ptr 0)(195508 call : numBytesToRead c_ssize_t) numRead))
    if(195528 call _cond_test(195518 call &&(195520 call != e 0)(195524 call != e EEOF)))
    {
      { scopeless
        (195513 'throw'(195515 call createSystemOrChplError e))
      }
    }
    (195533 return numRead)
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readBinary[195538](arg _mt[195554]:_MT[201], arg this[195541] :
  fileReader, arg ptr[195547] :
  (195545 call c_ptr void[4]), arg maxBytes[195551] :
  int[10]) : _unknown[42] throws "method"
  {
    { scopeless
      { scopeless
        unknown e[195565] 0 errorCode
      }
      { scopeless
        unknown numRead[195560] 0 c_ssize_t
      }
      (195569 'end of statement')
    }
    { scopeless
      unknown bytes_ptr[195571](195572 call : ptr(195576 call c_ptr(195578 call uint[86] 8)))
      (195581 'end of statement')
    }
    (195582 call = e(195586 call qio_channel_read 0(195589 call . this c"_channel_internal")(195593 call bytes_ptr 0)(195595 call : maxBytes c_ssize_t) numRead))
    if(195615 call _cond_test(195605 call &&(195607 call != e 0)(195611 call != e EEOF)))
    {
      { scopeless
        (195600 'throw'(195602 call createSystemOrChplError e))
      }
    }
    (195620 return numRead)
  }
  { scopeless type
    int[10]
  }
  function _unknown[42].readln[195625](arg _mt[195631]:_MT[201], arg this[195628] :
  fileReader) : _unknown[42] throws "method" "@unstable"
  {
    { scopeless
      unknown nl[195636](195637 'new'(195639 call chpl_ioNewline))
      (195641 'end of statement')
    }
    (195642 return(195649 'try-expr'(195647 call(195644 call . this c"read") nl)))
  }
  { scopeless type
    bool
  }
  function _unknown[42].readln[195653](arg _mt[195664]:_MT[201], arg this[195656] :
  fileReader, ref arg args[195661]:_any[141](?) ...) : _unknown[42] throws "method" "@unstable"
  {
    { scopeless
      unknown nl[195669](195670 'new'(195672 call chpl_ioNewline))
      (195674 'end of statement')
    }
    (195675 return(195684 'try-expr'(195680 call(195677 call . this c"read")(195682 'expand_tuple' args) nl)))
  }
  { scopeless type
    bool
  }
  function _unknown[42].read[195688](arg _mt[195696]:_MT[201], arg this[195691] :
  fileReader, arg t[195694]:_any[141](?)) : _unknown[42] throws "method"
  {
    { scopeless
      const origLocale[195700] "const"(195705 call(195702 call . this c"getLocaleOfIoRequest"))
      (195707 'end of statement')
    }
    if(195726 call _cond_test(195724 call isGenericType t))
    {
      { scopeless
        (195709 call compilerError(195710 call +(195712 call + "reading generic types is not supported: '"(195717 call : t string[244])) "'"))
      }
    }
    if(195749 call _cond_test(195747 call isBorrowedClass t))
    {
      { scopeless
        (195732 call compilerError(195733 call +(195735 call + "reading borrowed class types is not supported: '"(195740 call : t string[244])) "'"))
      }
    }
    { scopeless
      unknown specialUnmanaged[195755] "param"(195756 call &&(195759 call isUnmanagedClassType t)(195762 call isNonNilableClassType t))
      (195765 'end of statement')
    }
    unknown retType[195767] "type variable"(195773 IfExpr  specialUnmanaged then
    { scopeless
      (195770 call _to_nilable t)
    } else
    { scopeless
      t
    } )
    { scopeless
      unknown ret[195778] "no init" "do not RVF" retType
      (195781 'end of statement')
    }
    {
      const tmp[195852] "const" "temp"
      (195853 'move' tmp[195852](195850 'deref'(195849 '_wide_get_locale'(195783 call . this c"_home"))))
      {
        Try
        {
          {
            (195792 call(195789 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (195801 call(195798 call . this c"unlock"))
          }
        }
        if(195845 call _cond_test(195841 call != deserializerType nothing))
        {
          if(195814 call _cond_test(195810 call == deserializerType binaryDeserializer))
          {
            (195807 call warnBinaryRead t 2)
          }
          (195818 'move' ret(195821 call _deserializeOne t origLocale))
        }
        {
          { scopeless
            unknown tmp[195826] "no auto destroy" t
            (195829 'end of statement')
          }
          (195831 call _readOne(195833 call . _iokind c"dynamic") tmp origLocale)
          (195838 '=' ret tmp)
        }
      }
      (195856 'elided on block' 0 tmp[195852])
    }
    if(195869 call _cond_test specialUnmanaged)
    {
      { scopeless
        (195860 return(195861 call postfix! ret))
      }
    }
    {
      { scopeless
        (195865 return ret)
      }
    }
  }
  function _unknown[42].readln[195877](arg _mt[195885]:_MT[201], arg this[195880] :
  fileReader, arg t[195883]:_any[141](?)) : _unknown[42] throws "method" "@unstable"
  {
    { scopeless
      unknown tmp[195889] t
      (195892 'end of statement')
    }
    { scopeless
      unknown nl[195894](195895 'new'(195897 call chpl_ioNewline))
      (195899 'end of statement')
    }
    (195904 call(195901 call . this c"_readInner") tmp nl)
    (195907 return tmp)
  }
  function _unknown[42].readln[195911](arg _mt[195922]:_MT[201], arg this[195914] :
  fileReader, arg t[195919]:_any[141](?) ...) : _unknown[42] throws "method" "@unstable"
  {
    { scopeless
      unknown tupleVal[195930] t
      (195933 'end of statement')
    }
    { scopeless
      unknown nl[195935](195936 'new'(195938 call chpl_ioNewline))
      (195940 'end of statement')
    }
    (195945 call(195942 call . this c"_readInner")(195947 'expand_tuple' tupleVal) nl)
    (195949 return tupleVal)
  }
  where {
    (195924 call > numTypes 1)
  }
  function _unknown[42].read[195954](arg _mt[195965]:_MT[201], arg this[195957] :
  fileReader, arg t[195962]:_any[141](?) ...) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tupleVal[195973] t
      (195976 'end of statement')
    }
    (195981 call(195978 call . this c"_readInner")(195983 'expand_tuple' tupleVal))
    (195984 return tupleVal)
  }
  where {
    (195967 call > numTypes 1)
  }
  function _unknown[42].write[195989](arg _mt[196000]:_MT[201], arg this[195992] :
  fileWriter, const arg args[195997]:_any[141](?) ...) : _unknown[42] throws "inline" "method" "fn exempt instantiation limit"
  {
    { scopeless
      const origLocale[196004] "const"(196009 call(196006 call . this c"getLocaleOfIoRequest"))
      (196011 'end of statement')
    }
    {
      const tmp[196134] "const" "temp"
      (196135 'move' tmp[196134](196132 'deref'(196131 '_wide_get_locale'(196013 call . this c"_home"))))
      {
        Try
        {
          {
            (196022 call(196019 call . this c"lock"))
          }
        }
        Defer
        {
          {
            (196031 call(196028 call . this c"unlock"))
          }
        }
        {
          unknown i[196034] "index var" 0
          unknown tmp[196095] "maybe param" "temp"
          (196107 'move' tmp[196095](196105 call chpl_compute_low_param_loop_bound 0(196037 call - k 1)))
          unknown tmp[196096] "maybe param" "temp"
          (196117 'move' tmp[196096](196115 call chpl_compute_high_param_loop_bound 0(196112 call - k 1)))
          unknown tmp[196097] "maybe param" "temp"
          (196120 'move' tmp[196097] 1)
          ParamForLoop[196122]
          { i[196034] tmp[196095] tmp[196096] tmp[196097]
            {
              if(196091 call _cond_test(196087 call != serializerType nothing))
              {
                if(196057 call _cond_test(196053 call == serializerType binarySerializer))
                {
                  (196047 call warnBinary(196051 'typeof'(196049 call args i)) 2)
                }
                (196067 call(196064 call . this c"_serializeOne")(196069 call args i) origLocale)
              }
              {
                Try
                {
                  {
                    (196075 call _writeOne(196077 call . _iokind c"dynamic")(196081 call args i) origLocale)
                  }
                }
              }
            }
          }
          label _unused_continueLabel[196099]
          label _breakLabel[196098]
        }
      }
      (196138 'elided on block' 0 tmp[196134])
    }
  }
  function _unknown[42].writeln[196144](arg _mt[196150]:_MT[201], arg this[196147] :
  fileWriter) : _unknown[42] throws "method"
  {
    Try
    {
      {
        (196158 call(196155 call . this c"write")(196159 'new'(196161 call chpl_ioNewline)))
      }
    }
  }
  function _unknown[42].writeln[196167](arg _mt[196178]:_MT[201], arg this[196170] :
  fileWriter, const arg args[196175]:_any[141](?) ...) : _unknown[42] throws "method"
  {
    Try
    {
      {
        (196186 call(196183 call . this c"write")(196188 'expand_tuple' args)(196189 'new'(196191 call chpl_ioNewline)))
      }
    }
  }
  function _unknown[42].flush[196197](arg _mt[196203]:_MT[201], arg this[196200] :
  fileWriter) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[196207] 0 errorCode
      (196211 'end of statement')
    }
    {
      const tmp[196227] "const" "temp"
      (196228 'move' tmp[196227](196225 'deref'(196224 '_wide_get_locale'(196213 call . this c"_home"))))
      {
        (196217 call = err(196221 call qio_channel_flush locking _channel_internal))
      }
      (196231 'elided on block' 0 tmp[196227])
    }
    if(196249 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (196240 call(196237 call . this c"_ch_ioerror") err "in fileWriter.flush")
          }
        }
      }
    }
  }
  function _unknown[42].flush[196256](arg _mt[196266]:_MT[201], arg this[196259] :
  fileWriter, out arg error[196263] :
  errorCode) : _unknown[42] "method"
  {
    (196269 call = error 0)
    Try
    {
      {
        (196280 call(196277 call . this c"flush"))
      }
    }
    Catch e : SystemError
    {
      unknown e[196292]
      (196284 call = error(196288 call . e c"err"))
    }
    Catch
    {
      (196295 call = error EINVAL)
    }
  }
  function _unknown[42].assertEOF[196304](arg _mt[196318]:_MT[201], arg this[196307] :
  fileReader, arg errStr[196314] :
  string[244] =
  "- Not at EOF") : _unknown[42] "method" "@unstable"
  {
    { scopeless
      unknown isEOF[196322](196330 'try!-expr'(196329 call(196326 call . this c"atEOF")))
      (196332 'end of statement')
    }
    if(196347 call _cond_test(196344 call ! isEOF))
    {
      { scopeless
        Try!
        {
          {
            (196338 call(196335 call . this c"_ch_ioerror") "assert failed" errStr)
          }
        }
      }
    }
  }
  function _unknown[42].atEOF[196354](arg _mt[196360]:_MT[201], arg this[196357] :
  fileReader) : _unknown[42] throws "method"
  {
    { scopeless
      unknown tmp[196365](196367 call uint[86] 8)
      (196370 'end of statement')
    }
    (196371 return(196372 call !(196380 'try-expr'(196378 call(196375 call . this c"readByte") tmp))))
  }
  { scopeless type
    bool
  }
  function _unknown[42].close[196384](arg _mt[196390]:_MT[201], arg this[196387] :
  fileReader) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[196394] 0 errorCode
      (196398 'end of statement')
    }
    if(196411 call _cond_test(196407 call == _channel_internal nil[32]))
    {
      { scopeless
        (196399 'throw'(196401 call createSystemOrChplError EINVAL "cannot close invalid fileReader"))
      }
    }
    {
      const tmp[196431] "const" "temp"
      (196432 'move' tmp[196431](196429 'deref'(196428 '_wide_get_locale'(196417 call . this c"_home"))))
      {
        (196421 call = err(196425 call qio_channel_close locking _channel_internal))
      }
      (196435 'elided on block' 0 tmp[196431])
    }
    if(196453 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (196444 call(196441 call . this c"_ch_ioerror") err "in fileReader.close")
          }
        }
      }
    }
  }
  function _unknown[42].close[196460](arg _mt[196466]:_MT[201], arg this[196463] :
  fileWriter) : _unknown[42] throws "method"
  {
    { scopeless
      unknown err[196470] 0 errorCode
      (196474 'end of statement')
    }
    if(196487 call _cond_test(196483 call == _channel_internal nil[32]))
    {
      { scopeless
        (196475 'throw'(196477 call createSystemOrChplError EINVAL "cannot close invalid fileWriter"))
      }
    }
    {
      const tmp[196507] "const" "temp"
      (196508 'move' tmp[196507](196505 'deref'(196504 '_wide_get_locale'(196493 call . this c"_home"))))
      {
        (196497 call = err(196501 call qio_channel_close locking _channel_internal))
      }
      (196511 'elided on block' 0 tmp[196507])
    }
    if(196529 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (196520 call(196517 call . this c"_ch_ioerror") err "in fileWriter.close")
          }
        }
      }
    }
  }
  function _unknown[42].isClosed[196536](arg _mt[196542]:_MT[201], arg this[196539] :
  fileReader) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[196547] bool
      (196550 'end of statement')
    }
    {
      const tmp[196566] "const" "temp"
      (196567 'move' tmp[196566](196564 'deref'(196563 '_wide_get_locale'(196552 call . this c"_home"))))
      {
        (196556 call = ret(196560 call qio_channel_isclosed locking _channel_internal))
      }
      (196570 'elided on block' 0 tmp[196566])
    }
    (196574 return ret)
  }
  { scopeless type
    bool
  }
  function _unknown[42].isClosed[196579](arg _mt[196585]:_MT[201], arg this[196582] :
  fileWriter) : _unknown[42] "method"
  {
    { scopeless
      unknown ret[196590] bool
      (196593 'end of statement')
    }
    {
      const tmp[196609] "const" "temp"
      (196610 'move' tmp[196609](196607 'deref'(196606 '_wide_get_locale'(196595 call . this c"_home"))))
      {
        (196599 call = ret(196603 call qio_channel_isclosed locking _channel_internal))
      }
      (196613 'elided on block' 0 tmp[196609])
    }
    (196617 return ret)
  }
  { scopeless type
    bool
  }
  type itemReaderInternal[196733](?) unknown ItemType[196624] "type variable" unknown locking[196627] "param" bool unknown deserializerType[196632] "type variable" unknown ch[196635](196637 call fileReader locking deserializerType) function itemReaderInternal[196733](?).read[196642](arg _mt[196650]:_MT[201], arg this[196644]:itemReaderInternal[196733](?), out arg arg[196647] :
  ItemType) : _unknown[42] throws "method" "primary method"
  {
    (196654 return(196659 call(196656 call . ch c"read") arg))
  }
  { scopeless type
    bool
  } function itemReaderInternal[196733](?).these[196664](arg _mt[196668]:_MT[201], arg this[196666]:itemReaderInternal[196733](?)) : _unknown[42] "iterator fn" "method" "primary method"
  {
    {
      unknown tmp[196709] "temp"
      (196727 'move' tmp[196709](196725 call _cond_test 1))
      WhileDo[196714]
      {
        {
          { scopeless
            unknown x[196674] ItemType
            (196677 'end of statement')
          }
          { scopeless
            unknown gotany[196679] bool
            (196682 'end of statement')
          }
          Try!
          {
            {
              (196684 call = gotany(196691 call(196688 call . ch c"read") x))
            }
          }
          if(196702 call _cond_test(196699 call ! gotany))
          {
            { scopeless
              break nil[32]
            }
          }
          (196707 yield x)
        }
        label _continueLabel[196712]
        (196720 'move' tmp[196709](196718 call _cond_test 1))
        tmp[196709]
      }
      label _breakLabel[196713]
    }
  }
  { scopeless
    const stdin[196736] "const"(196738 call fileReader 1)
    (196741 'end of statement')
  }
  (196742 call = stdin(196755 'try!-expr'(196752 call(196749 call .(196745 'new'(196747 call file 0)) c"reader")(locking = 1))))
  function chpl_cstdout[196756]() : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    (196759 call c_ptr c_FILE)
  }
  { scopeless
    const stdout[196765] "const"(196767 call fileWriter 1)
    (196770 'end of statement')
  }
  (196771 call = stdout(196785 'try!-expr'(196782 call(196779 call .(196774 'new'(196776 call file(196778 call chpl_cstdout))) c"writer")(locking = 1))))
  function chpl_cstderr[196786]() : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    (196789 call c_ptr c_FILE)
  }
  { scopeless
    const stderr[196795] "const"(196797 call fileWriter 1)
    (196800 'end of statement')
  }
  (196801 call = stderr(196815 'try!-expr'(196812 call(196809 call .(196804 'new'(196806 call file(196808 call chpl_cstderr))) c"writer")(locking = 1))))
  function read[196816](ref arg args[196820]:_any[141](?) ...) : _unknown[42] throws
  {
    (196825 return(196830 call(196827 call . stdin c"read")(196832 'expand_tuple' args)))
  }
  { scopeless type
    bool
  }
  function read[196836](arg t[196840]:_any[141](?) ...) : _unknown[42] throws
  {
    (196844 return(196849 call(196846 call . stdin c"read")(196851 'expand_tuple' t)))
  }
  function readLine[196854](ref arg a[196861] :
  (196859 call chpl__buildArrayRuntimeType nil[32] unknown t[196857]), arg maxSize[196868] =
  (196865 call . a c"size"), arg stripNewline[196872] =
  0) : _unknown[42] throws
  {
    (196919 return(196924 call(196921 call . stdin c"readLine") a maxSize stripNewline))
  }
  where {
    (196876 call &&(196878 call &&(196880 call &&(196882 call ==(196885 call . a c"rank") 1)(196893 call(196890 call . a c"isRectangular")))(196894 call ==(196897 call . a c"strides")(196901 call . strideKind c"one")))(196904 call ||(196906 call == t(196910 call uint[86] 8))(196912 call == t(196916 call int[10] 8))))
  }
  { scopeless type
    int[10]
  }
  function readLine[196932](ref arg a[196939] :
  (196937 call chpl__buildArrayRuntimeType nil[32] unknown t[196935]), arg maxSize[196946] =
  (196943 call . a c"size"), arg stripNewline[196950] =
  0) : _unknown[42] throws "last resort"
  {
    (196970 call compilerError "'readLine()' is currently only supported for non-strided 1D rectangular arrays")
  }
  where {
    (196954 call ||(196956 call == t(196960 call uint[86] 8))(196962 call == t(196966 call int[10] 8)))
  }
  { scopeless type
    int[10]
  }
  function readLine[196976](ref arg s[196979] :
  string[244], arg maxSize[196985] =
  (196982 call - 1), arg stripNewline[196989] =
  0) : _unknown[42] throws
  {
    (196994 return(196999 call(196996 call . stdin c"readLine") s maxSize stripNewline))
  }
  { scopeless type
    bool
  }
  function readLine[197006](ref arg b[197009] :
  bytes[232], arg maxSize[197015] =
  (197012 call - 1), arg stripNewline[197019] =
  0) : _unknown[42] throws
  {
    (197024 return(197029 call(197026 call . stdin c"readLine") b maxSize stripNewline))
  }
  { scopeless type
    bool
  }
  function readLine[197036](arg t[197039]:_any[141](?) =
  string[244], arg maxSize[197045] =
  (197042 call - 1), arg stripNewline[197049] =
  0) : _unknown[42] throws
  {
    (197064 return(197069 call(197066 call . stdin c"readLine") t maxSize stripNewline))
  }
  where {
    (197053 call ||(197055 call == t string[244])(197059 call == t bytes[232]))
  }
  { scopeless type
    t
  }
  function readln[197077](ref arg args[197081]:_any[141](?) ...) : _unknown[42] throws "@unstable"
  {
    (197086 return(197093 call(197090 call . stdin c"readln")(197095 'expand_tuple' args)))
  }
  { scopeless type
    bool
  }
  function readln[197099]() : _unknown[42] throws "@unstable"
  {
    (197103 return(197108 call(197105 call . stdin c"readln")))
  }
  { scopeless type
    bool
  }
  function readln[197112](arg t[197116]:_any[141](?) ...) : _unknown[42] throws "@unstable"
  {
    (197120 return(197125 call(197122 call . stdin c"readln")(197127 'expand_tuple' t)))
  }
  { scopeless
    const FTYPE_NONE[197131] "const" "extern" "private" c_int
    (197134 'end of statement')
  }
  { scopeless
    const FTYPE_LUSTRE[197136] "const" "extern" "private" c_int
    (197139 'end of statement')
  }
  function _unknown[42].fstype[197140](arg _mt[197146]:_MT[201], arg this[197143] :
  file) : _unknown[42] throws "method"
  {
    { scopeless
      unknown t[197151] c_int
      (197154 'end of statement')
    }
    { scopeless
      unknown err[197156] 0 errorCode
      (197160 'end of statement')
    }
    {
      const tmp[197179] "const" "temp"
      (197180 'move' tmp[197179](197177 'deref'(197176 '_wide_get_locale'(197162 call . this c"_home"))))
      {
        (197166 call = err(197170 call qio_get_fs_type(197172 call . this c"_file_internal") t))
      }
      (197183 'elided on block' 0 tmp[197179])
    }
    if(197198 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (197189 call ioerror err "in file.fstype()")
          }
        }
      }
    }
    (197203 return(197204 call : t int[10]))
  }
  { scopeless type
    int[10]
  }
  def module FormattedIO[208298]  
  (208301 'use' FormattedIO)
}
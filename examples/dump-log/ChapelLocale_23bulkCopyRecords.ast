AST dump for ChapelLocale after pass bulkCopyRecords.
Module use list: LocaleModel HaltWrappers CTypes 

{
  type _class_localscoforall_fn[7251904] val _runtime_hdr[7251905]:chpl_task_bundle_t[306459] val _0_i[7251907]:int(64)[10] val _1__coforallCount[7251909]:_EndCount(atomic int(64),int(64))[1525461]
  function chpl__init_ChapelLocale[468438]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    val tmp[487770]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[808122]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[679743]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[679744]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[808127]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[679751]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[808132]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[808137]:string[244] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (135167 call compilerAssert[1530591])
    {
    }
    const-val call_tmp[808172]:locale[234] "dead after last mention" "maybe param" "temp"
    const-val initTemp[1530658]:locale[234] "dead after last mention" "temp"
    (1530661 call init[1530666] initTemp[1530658])
    (808175 'move' call_tmp[808172] initTemp[1530658])
    (645913 'move' nilLocale[135253] call_tmp[808172])
    const-val call_tmp[808177]:locale[234] "dead after last mention" "maybe param" "temp"
    const-val initTemp[1531046]:locale[234] "dead after last mention" "temp"
    (1531049 call init[1531054] initTemp[1531046])
    (808180 'move' call_tmp[808177] initTemp[1531046])
    (645915 'move' defaultLocale[135266] call_tmp[808177])
    const-val call_tmp[808182]:locale[234] "dead after last mention" "maybe param" "temp"
    const-val initTemp[1531362]:locale[234] "dead after last mention" "temp"
    (1531365 call init[1531370] initTemp[1531362])
    (808185 'move' call_tmp[808182] initTemp[1531362])
    (645917 'move' dummyLocale[135279] call_tmp[808182])
    (645935 call init=[135460] rootLocale[136464] nilLocale[135253])
    (645939 call init=[135460] origRootLocale[136474] nilLocale[135253])
    (608462 return _void[46])
  }
  function chpl__deinit_ChapelLocale[137367]() : void[4] "resolved" "no return value for void"
  {
    const-ref call_tmp[809342]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (809345 'move' call_tmp[809342](137372 call _instance[1003250] origRootLocale[136474]))
    val coerce_tmp[1532152]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1532156 'move' coerce_tmp[1532152](1532154 'deref' call_tmp[809342]))
    (137375 call chpl__delete[1531880] coerce_tmp[1532152])
    const-ref call_tmp[809349]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (809352 'move' call_tmp[809349](137380 call _instance[1003250] dummyLocale[135279]))
    val coerce_tmp[1533301]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1533305 'move' coerce_tmp[1533301](1533303 'deref' call_tmp[809349]))
    (137383 call chpl__delete[1531880] coerce_tmp[1533301])
    label _endchpl__deinit_ChapelLocale[5658755]
    (5658769 call chpl__autoDestroy[3885511] origRootLocale[136474])
    (5658766 call chpl__autoDestroy[3885511] rootLocale[136464])
    (5658763 call chpl__autoDestroy[3885511] dummyLocale[135279])
    (5658760 call chpl__autoDestroy[3885511] defaultLocale[135266])
    (5658757 call chpl__autoDestroy[3885511] nilLocale[135253])
    (608464 return _void[46])
  }
  val chpl_nodeID_t[135185]:int(32)[66] "dead at end of block" "insert auto destroy" "type variable"
  val chpl_sublocID_t[135191]:int(32)[66] "dead at end of block" "insert auto destroy" "type variable"
  const-val c_sublocid_none[135197]:int(32)[66] "dead at end of block" "const" "extern" "insert auto destroy"
  const-val c_sublocid_any[135202]:int(32)[66] "dead at end of block" "const" "extern" "insert auto destroy"
  const c_sublocid_all[135207]:int(32)[66] "dead at end of block" "const" "extern" "insert auto destroy"
  type localeKind[135248] def regular[135238]:localeKind[135248] def any[135240]:localeKind[135248] def nilLocale[135242]:localeKind[135248] def dummy[135244]:localeKind[135248] def default[135246]:localeKind[135248]
  const-val nilLocale[135253]:locale[234] "dead at end of block" "const" "insert auto destroy" "locale private"
  val defaultLocale[135266]:locale[234] "dead at end of block" "insert auto destroy" "locale private"
  val dummyLocale[135279]:locale[234] "dead at end of block" "insert auto destroy"
  function _ref(locale)[1467958]._value[135299](const  ref arg this[135301]:_ref(locale)[1467958]) : BaseLocale[136243] "inline" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[608003]:BaseLocale[136243] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[808189]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (808192 'move' call_tmp[808189](430787 call _instance[1003250] this[135301]))
    val call_tmp[808194]:BaseLocale[136243] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1534442]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1534446 'move' coerce_tmp[1534442](1534444 'deref' call_tmp[808189]))
    (808197 'move' call_tmp[808194](135307 call postfix![1532957] coerce_tmp[1534442]))
    (608008 'move' ret[608003] call_tmp[808194])
    (608005 return ret[608003])
  }
  function _ref(locale)[1467958].chpl_forwarding_expr1[135313](const  ref arg this[135316]:_ref(locale)[1467958]) : BaseLocale[136243] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free"
  {
    val ret[608012]:BaseLocale[136243] "dead after last mention" "RVV" "temp"
    (608016 'move' ret[608012](430791 call _value[135299] this[135316]))
    (608014 return ret[608012])
  }
  function _ref(locale)[1467958].init[135325](ref arg this[135327]:_ref(locale)[1467958]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[808201]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (808204 'move' call_tmp[808201] rootLocaleInitialized[52042])
    if call_tmp[808201]
    {
      const-ref call_tmp[808208]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
      (808211 'move' call_tmp[808208](135340 call _instance[1003250] defaultLocale[135266]))
      val _instance[525258]:BaseLocale[136243] "dead after last mention" "temp"
      val coerce_tmp[1875885]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1875889 'move' coerce_tmp[1875885](1875887 'deref' call_tmp[808208]))
      (5610779 '=' _instance[525258] coerce_tmp[1875885])
      (525261 'noop')
      (525263 '.=' this[135327] _instance[135293] _instance[525258])
    }
    {
      val _instance[525267]:BaseLocale[136243] "dead after last mention" "temp"
      val init_coerce_tmp[1875893]:BaseLocale[136243] "dead after last mention" "temp"
      (1875904 '=' init_coerce_tmp[1875893](1875900 'cast' BaseLocale[136243] nil[32]))
      (525270 'move' _instance[525267] init_coerce_tmp[1875893])
      (525272 '.=' this[135327] _instance[135293] _instance[525267])
    }
    (608018 return _void[46])
  }
  function _ref(locale)[1467958].init[1914636](ref arg this[1914640]:_ref(locale)[1467958], const in arg _instance[1914642]:BaseLocale[136243]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1914648]:BaseLocale[136243] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (1914650 'move' call_tmp[1914648](1914653 call _to_unmanaged[1914669] _instance[1914642]))
    val _instance[1914655]:BaseLocale[136243] "dead after last mention" "temp"
    val init_coerce_tmp[1914712]:BaseLocale[136243] "dead after last mention" "temp"
    (1914723 '=' init_coerce_tmp[1914712] call_tmp[1914648])
    (1914657 'move' _instance[1914655] init_coerce_tmp[1914712])
    (1914661 '.=' this[1914640] _instance[135293] _instance[1914655])
    (1914666 return _void[46])
  }
  function _ref(locale)[1467958].init[1915427](ref arg this[1915431]:_ref(locale)[1467958], const in arg _instance[1915433]:BaseLocale[136243]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1915439]:BaseLocale[136243] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (1915441 'move' call_tmp[1915439](1915444 call _to_unmanaged[1915460] _instance[1915433]))
    val _instance[1915446]:BaseLocale[136243] "dead after last mention" "temp"
    val init_coerce_tmp[1915503]:BaseLocale[136243] "dead after last mention" "temp"
    (1915514 '=' init_coerce_tmp[1915503] call_tmp[1915439])
    (1915448 'move' _instance[1915446] init_coerce_tmp[1915503])
    (1915452 '.=' this[1915431] _instance[135293] _instance[1915446])
    (1915457 return _void[46])
  }
  function _ref(locale)[1467958].init[1530666](ref arg this[1530670]:_ref(locale)[1467958]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1530678]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1530686]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[1530711]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[1530719]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[1530748]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[1530756]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val _instance[1530777]:BaseLocale[136243] "dead after last mention" "temp"
          (1531035 'move' _instance[1530777](1531033 'cast' BaseLocale[136243] nil[32]))
          (1530782 '.=' this[1530670] _instance[135293] _instance[1530777])
        }
      }
    }
    (1530790 return _void[46])
  }
  function _ref(locale)[1467958].init[1531054](ref arg this[1531058]:_ref(locale)[1467958]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1531066]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1531074]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[1531099]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[1531107]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[1531136]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[1531144]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val _instance[1531153]:BaseLocale[136243] "dead after last mention" "temp"
          val init_coerce_tmp[1531340]:BaseLocale[136243] "dead after last mention" "temp"
          (1531351 '=' init_coerce_tmp[1531340](1531347 'cast' BaseLocale[136243] nil[32]))
          (1531155 'move' _instance[1531153] init_coerce_tmp[1531340])
          (1531159 '.=' this[1531058] _instance[135293] _instance[1531153])
        }
      }
    }
    (1531178 return _void[46])
  }
  function _ref(locale)[1467958].init[1531370](ref arg this[1531374]:_ref(locale)[1467958]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1531382]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1531390]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[1531415]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[1531423]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[1531432]:DummyLocale[136365] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
        { scopeless
          val new_temp[1531813]:DummyLocale[136365] "dead after last mention" "temp"
          (1531815 'move' new_temp[1531813](1531642 call _new[1531764]))
        }
        (1531434 'move' call_tmp[1531432] new_temp[1531813])
        val _instance[1531440]:BaseLocale[136243] "dead after last mention" "temp"
        val init_coerce_tmp[1531840]:BaseLocale[136243] "dead after last mention" "temp"
        (1531851 '=' init_coerce_tmp[1531840](1531847 'cast' BaseLocale[136243] call_tmp[1531432]))
        (1531442 'move' _instance[1531440] init_coerce_tmp[1531840])
        (1531446 '.=' this[1531374] _instance[135293] _instance[1531440])
      }
    }
    (1531494 return _void[46])
  }
  function _ref(locale)[1467958].init=[135460](ref arg this[135462]:_ref(locale)[1467958], const  ref arg other[135465]:locale[234]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-ref call_tmp[808255]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "reference to a const" "temp"
    (808258 'move' call_tmp[808255](135478 call _instance[1003250] other[135465]))
    val _instance[525324]:BaseLocale[136243] "dead after last mention" "temp"
    val coerce_tmp[1531687]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1531691 'move' coerce_tmp[1531687](1531689 'deref' call_tmp[808255]))
    (5610782 '=' _instance[525324] coerce_tmp[1531687])
    (525327 'noop')
    (525329 '.=' this[135462] _instance[135293] _instance[525324])
    (608024 return _void[46])
  }
  function _ref(locale)[1467958].deinit[135483](const  ref arg this[135485]:_ref(locale)[1467958]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (608026 return _void[46])
  }
  function _ref(locale)[1467958]._getChildCount[135571](const  ref arg this[135573]:_ref(locale)[1467958]) : int(64)[10] "inline" "method" "primary method" "resolved"
  {
    val ret[608066]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[808318]:BaseLocale[136243] "dead after last mention" "expr temp" "maybe param" "temp"
    (808321 'move' call_tmp[808318](135580 call _value[135299] this[135573]))
    const-val call_tmp[808325]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1909255]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1909260 'move' coerce_tmp[1909255] call_tmp[808318])
    const-val _virtual_method_tmp_[5469184]:int(32)[66] "temp"
    (5469188 'move' _virtual_method_tmp_[5469184](5469186 'getcid' coerce_tmp[1909255]))
    (808328 'move' call_tmp[808325](135586 'virtual method call' _getChildCount[136152] _virtual_method_tmp_[5469184] coerce_tmp[1909255]))
    (608071 'move' ret[608066] call_tmp[808325])
    (608068 return ret[608066])
  }
  function _ref(locale)[1467958]._instance[1003250](ref arg this[1003254]:_ref(locale)[1467958]) ref : _ref(BaseLocale)[1531014] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1003264]:_ref(BaseLocale)[1531014] "dead after last mention" "RVV" "temp"
    ref call_tmp[1003271]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (1003274 'move' call_tmp[1003271](1003258 '.' this[1003254] _instance[135293]))
    (1003269 'move' ret[1003264] call_tmp[1003271])
    (1003266 return ret[1003264])
  }
  function ==[1003295](const  ref arg _arg1[1003301]:locale[234], const  ref arg _arg2[1003302]:locale[234]) : bool[19] "compiler generated" "last resort" "method" "operator" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[5477930]:locale[234] "temp"
    val ret[1003383]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[1003395]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1003398 'move' call_tmp[1003395](1003362 call _instance[1003250] _arg1[1003301]))
    const-ref call_tmp[1003400]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1003403 'move' call_tmp[1003400](1003366 call _instance[1003250] _arg2[1003302]))
    const-val call_tmp[1003405]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1843164]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1843168 'move' coerce_tmp[1843164](1843166 'deref' call_tmp[1003395]))
    val coerce_tmp[1843170]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1843174 'move' coerce_tmp[1843170](1843172 'deref' call_tmp[1003400]))
    (1003408 'move' call_tmp[1003405](1003370 call chpl_field_neq[1843086] coerce_tmp[1843164] coerce_tmp[1843170]))
    if call_tmp[1003405]
    {
      (1003388 'move' ret[1003383] 0)
      gotoReturn _end_==[1003381] _end_==[1003381]
    }
    (1003393 'move' ret[1003383] 1)
    label _end_==[1003381]
    (1003385 return ret[1003383])
  }
  function !=[1003430](const  ref arg _arg1[1003436]:locale[234], const  ref arg _arg2[1003437]:locale[234]) : bool[19] "compiler generated" "last resort" "method" "operator" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[5477932]:locale[234] "temp"
    val ret[1003518]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[1003530]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1003533 'move' call_tmp[1003530](1003497 call _instance[1003250] _arg1[1003436]))
    const-ref call_tmp[1003535]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1003538 'move' call_tmp[1003535](1003501 call _instance[1003250] _arg2[1003437]))
    const-val call_tmp[1003540]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2224828]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2224832 'move' coerce_tmp[2224828](2224830 'deref' call_tmp[1003530]))
    val coerce_tmp[2224834]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2224838 'move' coerce_tmp[2224834](2224836 'deref' call_tmp[1003535]))
    (1003543 'move' call_tmp[1003540](1003505 call chpl_field_neq[1843086] coerce_tmp[2224828] coerce_tmp[2224834]))
    if call_tmp[1003540]
    {
      (1003523 'move' ret[1003518] 1)
      gotoReturn _end_!=[1003516] _end_!=[1003516]
    }
    (1003528 'move' ret[1003518] 0)
    label _end_!=[1003516]
    (1003520 return ret[1003518])
  }
  type locale[234] val _instance[135293]:BaseLocale[136243] forwarding ( )
  function here[135591](ref arg _retArg[5544300]:_ref(locale)[1467958]) : void[4] "fn returns via _retArg" "inline" "no parens" "resolved"
  {
    const-val ret[608075]:locale[234] "dead after last mention" "RVV" "temp"
    const-val call_tmp[808330]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (808333 'move' call_tmp[808330](430804 call here_id[137226]))
    const-val call_tmp[808335]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5544330]:locale[234] "temp"
    (135596 call chpl_localeID_to_locale[137251] call_tmp[808330] ret_tmp[5544330])
    (5544333 'move' call_tmp[808335] ret_tmp[5544330])
    (608080 'move' ret[608075] call_tmp[808335])
    (5544302 '=' _retArg[5544300] ret[608075])
    (5544304 return _void[46])
  }
  function _ref(locale)[1467958].id[135646](const  ref arg this[135649]:_ref(locale)[1467958]) : int(64)[10] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[608104]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[808370]:BaseLocale[136243] "dead after last mention" "expr temp" "maybe param" "temp"
    (808373 'move' call_tmp[808370](135658 call _value[135299] this[135649]))
    const-val call_tmp[808377]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1809251]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1809256 'move' coerce_tmp[1809251] call_tmp[808370])
    (808380 'move' call_tmp[808377](135661 call id[135878] coerce_tmp[1809251]))
    (1809268 '=' ret[608104] call_tmp[808377])
    (608106 return ret[608104])
  }
  function _ref(locale)[1467958].maxTaskPar[135667](const  ref arg this[135670]:_ref(locale)[1467958]) : int(64)[10] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[608114]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[808384]:BaseLocale[136243] "dead after last mention" "expr temp" "maybe param" "temp"
    (808387 'move' call_tmp[808384](135679 call _value[135299] this[135670]))
    const-ref call_tmp[808391]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1796282]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1796287 'move' coerce_tmp[1796282] call_tmp[808384])
    (808394 'move' call_tmp[808391](135682 call maxTaskPar[1083840] coerce_tmp[1796282]))
    (1796292 '=' ret[608114](1796290 'deref' call_tmp[808391]))
    (608116 return ret[608114])
  }
  function _ref(locale)[1467958].runningTasks[135726](const  ref arg this[135729]:_ref(locale)[1467958]) : int(64)[10] "method" "resolved" "fn synchronization free"
  {
    val ret[608134]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[808412]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val _chpl_forward_tgt[1796783]:BaseLocale[136243] "dead after last mention" "maybe ref" "maybe type" "temp"
    (1796789 'move' _chpl_forward_tgt[1796783](1796786 call chpl_forwarding_expr1[135313] this[135729]))
    val coerce_tmp[1796792]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1796797 'move' coerce_tmp[1796792] _chpl_forward_tgt[1796783])
    (808415 'move' call_tmp[808412](135743 call runningTaskCnt[136072] coerce_tmp[1796792]))
    (1797432 '=' ret[608134] call_tmp[808412])
    (608136 return ret[608134])
  }
  function =[135747](ref arg l1[135754]:_ref(locale)[1467958], const  ref arg l2[135758]:_ref(locale)[1467958]) : void[4] "assignop" "method" "operator" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5477924]:locale[234] "temp"
    ref call_tmp[808419]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (808422 'move' call_tmp[808419](135767 call _instance[1003250] l1[135754]))
    const-ref call_tmp[808426]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "reference to a const" "temp"
    (808429 'move' call_tmp[808426](135771 call _instance[1003250] l2[135758]))
    val coerce_tmp[1539012]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1539016 'move' coerce_tmp[1539012](1539014 'deref' call_tmp[808426]))
    (135764 call =[1538978] call_tmp[808419] coerce_tmp[1539012])
    (608142 return _void[46])
  }
  function BaseLocale[136243].init[135787](const in arg this[135789]:BaseLocale[136243], const  ref arg parent[135792]:locale[234]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[525519]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (525527 'move' super_tmp[525519](525520 '.v' this[135789] super[397513]))
    (525523 call init[1004245] super_tmp[525519])
    val tmp[525437]:RootClass[236] "dead after last mention" "temp" "type variable"
    val call_tmp[808451]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (808454 'move' call_tmp[808451](525448 'cast' RootClass[236] this[135789]))
    val chpl__thisAsParent[525445]:RootClass[236] "dead at end of block" "insert auto destroy" "temp"
    (645921 'move' chpl__thisAsParent[525445](1531656 call chpl__initCopy[1473184] call_tmp[808451] 0))
    (525451 'setcid' chpl__thisAsParent[525445])
    val parent[525453]:locale[234] "dead after last mention" "temp"
    (525456 call init=[135460] parent[525453] parent[135792])
    (525458 '.=' this[135789] parent[135810] parent[525453])
    val nPUsLogAcc[525463]:int(64)[10] "dead after last mention" "temp"
    (1531710 'move' nPUsLogAcc[525463] 0)
    (525468 '.=' this[135789] nPUsLogAcc[135816] nPUsLogAcc[525463])
    val nPUsLogAll[525472]:int(64)[10] "dead after last mention" "temp"
    (1531713 'move' nPUsLogAll[525472] 0)
    (525477 '.=' this[135789] nPUsLogAll[135821] nPUsLogAll[525472])
    val nPUsPhysAcc[525481]:int(64)[10] "dead after last mention" "temp"
    (1531716 'move' nPUsPhysAcc[525481] 0)
    (525486 '.=' this[135789] nPUsPhysAcc[135826] nPUsPhysAcc[525481])
    val nPUsPhysAll[525490]:int(64)[10] "dead after last mention" "temp"
    (1531719 'move' nPUsPhysAll[525490] 0)
    (525495 '.=' this[135789] nPUsPhysAll[135831] nPUsPhysAll[525490])
    val maxTaskPar[525499]:int(64)[10] "dead after last mention" "temp"
    (1531722 'move' maxTaskPar[525499] 0)
    (525504 '.=' this[135789] maxTaskPar[135874] maxTaskPar[525499])
    val runningTaskCounter[525508]:atomic int(64)[1523042] "dead after last mention" "temp"
    val call_tmp[808456]:atomic int(64)[1523042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1531726 call init[1525492] runningTaskCounter[525508])
    (525515 '.=' this[135789] runningTaskCounter[135997] runningTaskCounter[525508])
    (525530 'setcid' this[135789])
    (608146 return _void[46])
  }
  function BaseLocale[136243].id[135878](const in arg this[135880]:BaseLocale[136243]) : int(64)[10] "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[608159]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[808469]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
    (808472 'move' call_tmp[808469](135889 '_wide_get_locale' this[135880]))
    const-val call_tmp[808474]:int(32)[66] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (808477 'move' call_tmp[808474](135888 call chpl_nodeFromLocaleID[306536] call_tmp[808469]))
    (1809265 '=' ret[608159](1809261 'cast' int(64)[10] call_tmp[808474]))
    (608161 return ret[608159])
  }
  function BaseLocale[136243].runningTaskCntSet[136003](const in arg this[136005]:BaseLocale[136243], const in arg val[136008]:int(64)[10]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[808515]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (808518 'move' call_tmp[808515](402450 call runningTaskCounter[1083866] this[136005]))
    (136018 call write[3877977] call_tmp[808515] val[136008])
    (608200 return _void[46])
  }
  function BaseLocale[136243].runningTaskCntAdd[136026](const in arg this[136028]:BaseLocale[136243], const in arg val[136031]:int(64)[10]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[808524]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (808527 'move' call_tmp[808524](402456 call runningTaskCounter[1083866] this[136028]))
    (136041 call add[1801215] call_tmp[808524] val[136031])
    (608202 return _void[46])
  }
  function BaseLocale[136243].runningTaskCntSub[136049](const in arg this[136051]:BaseLocale[136243], const in arg val[136054]:int(64)[10]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[808533]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (808536 'move' call_tmp[808533](402462 call runningTaskCounter[1083866] this[136051]))
    (136064 call sub[1805391] call_tmp[808533] val[136054])
    (608204 return _void[46])
  }
  function BaseLocale[136243].runningTaskCnt[136072](const in arg this[136074]:BaseLocale[136243]) : int(64)[10] "inline" "method" "primary method" "resolved"
  {
    val ret[608208]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[808542]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (808545 'move' call_tmp[808542](402468 call runningTaskCounter[1083866] this[136074]))
    const-val call_tmp[808549]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (808552 'move' call_tmp[808549](136085 call read[1796801] call_tmp[808542]))
    val rtc[136080]:int(64)[10] "dead at end of block" "insert auto destroy"
    (645925 'move' rtc[136080] call_tmp[808549])
    val tmp[679909]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[679910]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[808554]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (808557 'move' call_tmp[808554](136093 call <=[54364] rtc[136080] 0))
    (679915 'move' tmp[679910] call_tmp[808554])
    if tmp[679910]
    {
      (679920 'move' tmp[679909] 1)
    }
    {
      const-ref _fold_tmp[1797421]:_ref(int(64))[1465689] "dead after last mention" "temp"
      (1797424 'move' _fold_tmp[1797421](1797423 'addr of' rtc[136080]))
      (1797429 '=' tmp[679909](1797427 'deref' _fold_tmp[1797421]))
    }
    (608213 'move' ret[608208] tmp[679909])
    gotoReturn _end_runningTaskCnt[608206] _end_runningTaskCnt[608206]
    label _end_runningTaskCnt[608206]
    (608210 return ret[608208])
  }
  function BaseLocale[136243]._getChildCount[136152](const in arg this[136154]:BaseLocale[136243]) : int(64)[10] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    val ret[608237]:int(64)[10] "dead after last mention" "RVV" "temp"
    (136164 call pureVirtualMethodHalt[315])
    (608239 return ret[608237])
  }
  function BaseLocale[136243]._getChild[136186](const in arg this[136188]:BaseLocale[136243], const in arg idx[136191]:int(64)[10], ref arg _retArg[5544312]:_ref(locale)[1467958]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val ret[608245]:locale[234] "dead after last mention" "RVV" "temp"
    (136202 call pureVirtualMethodHalt[315])
    (5544314 '=' _retArg[5544312] ret[608245])
    (5544316 return _void[46])
  }
  function BaseLocale[136243].gpus[136206](const in arg this[136208]:BaseLocale[136243]) const ref : _ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[608251]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "RVV" "temp"
    ref call_tmp[808561]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (808564 'move' call_tmp[808561](136215 call gpusImpl[136218] this[136208]))
    (608256 'move' ret[608251] call_tmp[808561])
    (608253 return ret[608251])
  }
  function BaseLocale[136243].gpusImpl[136218](const in arg this[136220]:BaseLocale[136243]) const ref : _ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[608260]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "RVV" "temp"
    (608265 'move' ret[608260](608264 'addr of' chpl_emptyLocales[308774]))
    (608262 return ret[608260])
  }
  function BaseLocale[136243].nPUsLogAcc[1083736](const in arg this[1083740]:BaseLocale[136243]) ref : _ref(int(64))[1465689] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1083750]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1083757]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1083760 'move' call_tmp[1083757](1083744 '.' this[1083740] nPUsLogAcc[135816]))
    (1083755 'move' ret[1083750] call_tmp[1083757])
    (1083752 return ret[1083750])
  }
  function BaseLocale[136243].nPUsLogAll[1083762](const in arg this[1083766]:BaseLocale[136243]) ref : _ref(int(64))[1465689] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1083776]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1083783]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1083786 'move' call_tmp[1083783](1083770 '.' this[1083766] nPUsLogAll[135821]))
    (1083781 'move' ret[1083776] call_tmp[1083783])
    (1083778 return ret[1083776])
  }
  function BaseLocale[136243].nPUsPhysAcc[1083788](const in arg this[1083792]:BaseLocale[136243]) ref : _ref(int(64))[1465689] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1083802]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1083809]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1083812 'move' call_tmp[1083809](1083796 '.' this[1083792] nPUsPhysAcc[135826]))
    (1083807 'move' ret[1083802] call_tmp[1083809])
    (1083804 return ret[1083802])
  }
  function BaseLocale[136243].nPUsPhysAll[1083814](const in arg this[1083818]:BaseLocale[136243]) ref : _ref(int(64))[1465689] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1083828]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1083835]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1083838 'move' call_tmp[1083835](1083822 '.' this[1083818] nPUsPhysAll[135831]))
    (1083833 'move' ret[1083828] call_tmp[1083835])
    (1083830 return ret[1083828])
  }
  function BaseLocale[136243].maxTaskPar[1083840](const in arg this[1083844]:BaseLocale[136243]) ref : _ref(int(64))[1465689] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1083854]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1083861]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1083864 'move' call_tmp[1083861](1083848 '.' this[1083844] maxTaskPar[135874]))
    (1083859 'move' ret[1083854] call_tmp[1083861])
    (1083856 return ret[1083854])
  }
  function BaseLocale[136243].runningTaskCounter[1083866](const in arg this[1083870]:BaseLocale[136243]) ref : _ref(atomic int(64))[1523051] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1083880]:_ref(atomic int(64))[1523051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1083887]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (1083890 'move' call_tmp[1083887](1083874 '.' this[1083870] runningTaskCounter[135997]))
    (1083885 'move' ret[1083880] call_tmp[1083887])
    (1083882 return ret[1083880])
  }
  function BaseLocale[136243].deinit[1083892](const in arg this[1083896]:BaseLocale[136243]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[5526222]
    ref _field_destructor_tmp_[5526220]:_ref(atomic int(64))[1523051] "temp"
    (5526227 'move' _field_destructor_tmp_[5526220](5526224 '.' this[1083896] runningTaskCounter[135997]))
    (5526229 call deinit[3933904] _field_destructor_tmp_[5526220])
    const-ref _field_destructor_tmp_[5526232]:_ref(locale)[1467958] "temp"
    (5526237 'move' _field_destructor_tmp_[5526232](5526234 '.' this[1083896] parent[135810]))
    (5526239 call deinit[135483] _field_destructor_tmp_[5526232])
    val _parent_destructor_tmp_[5526242]:RootClass[236] "temp"
    (5526247 'move' _parent_destructor_tmp_[5526242](5526243 'cast' RootClass[236] this[1083896]))
    (5526249 call deinit[1004261] _parent_destructor_tmp_[5526242])
    (1083904 return _void[46])
  }
  type BaseLocale[136243] val super[397513]:RootClass[236] "super class" const-val parent[135810]:locale[234] "const" val nPUsLogAcc[135816]:int(64)[10] val nPUsLogAll[135821]:int(64)[10] val nPUsPhysAcc[135826]:int(64)[10] val nPUsPhysAll[135831]:int(64)[10] val maxTaskPar[135874]:int(64)[10] val runningTaskCounter[135997]:atomic int(64)[1523042]
  function DummyLocale[136365].init[136247](const in arg this[136249]:DummyLocale[136365]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[525533]:BaseLocale[136243] "dead after last mention" "temporary of super field" "temp"
    (525535 'move' super_tmp[525533](525532 '.v' this[136249] super[397515]))
    (136258 call init[135787] super_tmp[525533] nilLocale[135253])
    val tmp[525538]:BaseLocale[136243] "dead after last mention" "temp" "type variable"
    val call_tmp[808573]:BaseLocale[136243] "dead after last mention" "maybe param" "temp"
    (808576 'move' call_tmp[808573](525549 'cast' BaseLocale[136243] this[136249]))
    val chpl__thisAsParent[525546]:BaseLocale[136243] "dead at end of block" "insert auto destroy" "temp"
    (645927 'move' chpl__thisAsParent[525546](1531734 call chpl__initCopy[1531737] call_tmp[808573] 0))
    (525552 'setcid' chpl__thisAsParent[525546])
    (525554 'setcid' this[136249])
    (608277 return _void[46])
  }
  function DummyLocale[136365]._getChildCount[136313](const in arg this[136315]:DummyLocale[136365]) : int(64)[10] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[608311]:int(64)[10] "dead after last mention" "RVV" "temp"
    (608317 'move' ret[608311] 0)
    (608313 return ret[608311])
  }
  function DummyLocale[136365]._getChild[136326](const in arg this[136328]:DummyLocale[136365], const in arg idx[136331]:int(64)[10], ref arg _retArg[5609351]:_ref(locale)[1467958]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[608321]:locale[234] "dead after last mention" "RVV" "temp"
    const-val call_tmp[808598]:locale[234] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4347805]:locale[234] "dead after last mention" "temp"
    val coerce_tmp[4347821]:BaseLocale[136243] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (4347827 'move' coerce_tmp[4347821](4347823 'cast' BaseLocale[136243] this[136328]))
    (4347808 call init[1914636] initTemp[4347805] coerce_tmp[4347821])
    (808601 'move' call_tmp[808598] initTemp[4347805])
    (4347831 '=' ret[608321] call_tmp[808598])
    (5609353 '=' _retArg[5609351] ret[608321])
    (5609355 return _void[46])
  }
  function DummyLocale[136365].deinit[1083949](const in arg this[1083953]:DummyLocale[136365]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[5526257]
    val _parent_destructor_tmp_[5526252]:BaseLocale[136243] "temp"
    (5526259 'move' _parent_destructor_tmp_[5526252](5526253 'cast' BaseLocale[136243] this[1083953]))
    (5526261 call deinit[1083892] _parent_destructor_tmp_[5526252])
    (1083961 return _void[46])
  }
  function _new[1531764]() : DummyLocale[136365] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5478054]:DummyLocale[136365] "temp"
    val ret[1531800]:DummyLocale[136365] "dead after last mention" "RVV" "temp"
    val initTemp[1531766]:DummyLocale[136365] "dead after last mention" "temp"
    const-val call_tmp[1531807]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1531810 'move' call_tmp[1531807](1531819 'sizeof_bundle' DummyLocale[136365]))
    val cast_tmp[1531822]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1531824 'move' cast_tmp[1531822](1531778 call chpl_here_alloc[308303] call_tmp[1531807] 7))
    (1531781 'move' initTemp[1531766](1531826 'cast' DummyLocale[136365] cast_tmp[1531822]))
    (1531767 call init[136247] initTemp[1531766])
    val tmp[1531783]:DummyLocale[136365] "dead after last mention" "temp"
    (1531790 'move' tmp[1531783] initTemp[1531766])
    (1531805 'move' ret[1531800] tmp[1531783])
    (1531802 return ret[1531800])
  }
  type DummyLocale[136365] val super[397515]:BaseLocale[136243] "super class"
  function AbstractLocaleModel[136461].init[136432](const in arg this[136434]:AbstractLocaleModel[136461], const  ref arg parent_loc[136437]:locale[234]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[525557]:BaseLocale[136243] "dead after last mention" "temporary of super field" "temp"
    (525559 'move' super_tmp[525557](525556 '.v' this[136434] super[397517]))
    (136447 call init[135787] super_tmp[525557] parent_loc[136437])
    val tmp[525562]:BaseLocale[136243] "dead after last mention" "temp" "type variable"
    val call_tmp[808644]:BaseLocale[136243] "dead after last mention" "maybe param" "temp"
    (808647 'move' call_tmp[808644](525573 'cast' BaseLocale[136243] this[136434]))
    val chpl__thisAsParent[525570]:BaseLocale[136243] "dead at end of block" "insert auto destroy" "temp"
    (645931 'move' chpl__thisAsParent[525570](1914802 call chpl__initCopy[1531737] call_tmp[808644] 0))
    (525576 'setcid' chpl__thisAsParent[525570])
    val chpl_singletonThisLocaleArray[525579]:[domain(1,int(64),one)] locale[1780406] "dead after last mention" "temp"
    const-val call_tmp[808649]:range(int(64),both,one)[1610039] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "used in type" "temp"
    const-val ret_tmp[5547346]:range(int(64),both,one)[1610039] "temp"
    (525586 call chpl_build_bounded_range[1509041] ret_tmp[5547346])
    (5547349 'move' call_tmp[808649] ret_tmp[5547346])
    const-val call_tmp[808654]:domain(1,int(64),one)[1765496] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "used in type" "temp"
    const-val ret_tmp[5557163]:domain(1,int(64),one)[1765496] "temp"
    (525584 call chpl__ensureDomainExpr[1907906] call_tmp[808649] ret_tmp[5557163])
    (5557166 'move' call_tmp[808654] ret_tmp[5557163])
    const-val call_tmp[808659]:_RuntimeTypeInfo[1780641] "dead after last mention" "expr temp" "maybe param" "temp"
    (808662 'move' call_tmp[808659](525582 call chpl__buildArrayRuntimeType[1766993] call_tmp[808654]))
    const-val _runtime_type_tmp_[1914812]:domain(1,int(64),one)[1765496] "dead after last mention" "temp"
    (1914817 'move' _runtime_type_tmp_[1914812](5470645 '.v' call_tmp[808659] dom[1780642]))
    const-val ret_tmp[5554911]:[domain(1,int(64),one)] locale[1780406] "temp"
    (1914810 call chpl__convertRuntimeTypeToValue[1791617] _runtime_type_tmp_[1914812] 0 ret_tmp[5554911])
    (5554914 'move' chpl_singletonThisLocaleArray[525579] ret_tmp[5554911])
    (525592 '.=' this[136434] chpl_singletonThisLocaleArray[136420] chpl_singletonThisLocaleArray[525579])
    (525596 'setcid' this[136434])
    (5610785 call chpl__autoDestroy[3989014] call_tmp[808654])
    (5610788 call chpl__autoDestroy[1802624] call_tmp[808649])
    (608342 return _void[46])
  }
  function AbstractLocaleModel[136461].chpl_singletonThisLocaleArray[1084032](const in arg this[1084036]:AbstractLocaleModel[136461]) ref : _ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1084046]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "RVV" "temp"
    ref call_tmp[1084053]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "maybe param" "temp"
    (1084056 'move' call_tmp[1084053](1084040 '.' this[1084036] chpl_singletonThisLocaleArray[136420]))
    (1084051 'move' ret[1084046] call_tmp[1084053])
    (1084048 return ret[1084046])
  }
  function AbstractLocaleModel[136461].deinit[1084058](const in arg this[1084062]:AbstractLocaleModel[136461]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[5526266]
    const-val _field_destructor_tmp_[5526264]:[domain(1,int(64),one)] locale[1780406] "temp"
    (5526271 'move' _field_destructor_tmp_[5526264](5526268 '.v' this[1084062] chpl_singletonThisLocaleArray[136420]))
    (5526273 call chpl__autoDestroy[4018667] _field_destructor_tmp_[5526264])
    val _parent_destructor_tmp_[5526276]:BaseLocale[136243] "temp"
    (5526281 'move' _parent_destructor_tmp_[5526276](5526277 'cast' BaseLocale[136243] this[1084062]))
    (5526283 call deinit[1083892] _parent_destructor_tmp_[5526276])
    (1084070 return _void[46])
  }
  type AbstractLocaleModel[136461] val super[397517]:BaseLocale[136243] "super class" val chpl_singletonThisLocaleArray[136420]:[domain(1,int(64),one)] locale[1780406]
  val rootLocale[136464]:locale[234] "dead at end of block" "insert auto destroy" "locale private"
  val origRootLocale[136474]:locale[234] "dead at end of block" "insert auto destroy"
  function AbstractRootLocale[136746].init[136489](const in arg this[136491]:AbstractRootLocale[136746], const  ref arg parent_loc[136494]:locale[234]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[525683]:BaseLocale[136243] "dead after last mention" "temporary of super field" "temp"
    (525685 'move' super_tmp[525683](525682 '.v' this[136491] super[397519]))
    (136504 call init[135787] super_tmp[525683] parent_loc[136494])
    val tmp[525688]:BaseLocale[136243] "dead after last mention" "temp" "type variable"
    val call_tmp[808706]:BaseLocale[136243] "dead after last mention" "maybe param" "temp"
    (808709 'move' call_tmp[808706](525699 'cast' BaseLocale[136243] this[136491]))
    val chpl__thisAsParent[525696]:BaseLocale[136243] "dead at end of block" "insert auto destroy" "temp"
    (645943 'move' chpl__thisAsParent[525696](1883588 call chpl__initCopy[1531737] call_tmp[808706] 0))
    (525702 'setcid' chpl__thisAsParent[525696])
    (525704 'setcid' this[136491])
    (608348 return _void[46])
  }
  function AbstractRootLocale[136746].localeIDtoLocale[136546](const in arg this[136548]:AbstractRootLocale[136746], const  ref arg id[136551]:chpl_localeID_t[306449], ref arg _retArg[5544324]:_ref(locale)[1467958]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val ret[608370]:locale[234] "dead after last mention" "RVV" "temp"
    (136562 call pureVirtualMethodHalt[315])
    (5544326 '=' _retArg[5544324] ret[608370])
    (5544328 return _void[46])
  }
  function AbstractRootLocale[136746].deinit[1084141](const in arg this[1084145]:AbstractRootLocale[136746]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[5526291]
    val _parent_destructor_tmp_[5526286]:BaseLocale[136243] "temp"
    (5526293 'move' _parent_destructor_tmp_[5526286](5526287 'cast' BaseLocale[136243] this[1084145]))
    (5526295 call deinit[1083892] _parent_destructor_tmp_[5526286])
    (1084153 return _void[46])
  }
  type AbstractRootLocale[136746] val super[397519]:BaseLocale[136243] "super class"
  function warmupRuntime[136748]() : void[4] "private" "resolved" "no return value for void"
  {
    {
      const-val tmpIter[388957]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
      const-val call_tmp[808815]:range(int(64),low,one)[1576928] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5548037]:range(int(64),low,one)[1576928] "temp"
      (136764 call chpl_build_low_bounded_range[1576395] 0 ret_tmp[5548037])
      (5548040 'move' call_tmp[808815] ret_tmp[5548037])
      const-val call_tmp[808820]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (808823 'move' call_tmp[808820](136767 call chpl_task_getFixedNumThreads[136751]))
      const-val ret_tmp[5557280]:range(int(64),both,one)[1610039] "temp"
      (136761 call #[1909365] call_tmp[808815] call_tmp[808820] ret_tmp[5557280])
      (5557283 'move' tmpIter[388957] ret_tmp[5557280])
      val isBounded[389116]:bool[19] "dead after last mention" "maybe param" "temp"
      {
        const _coforallCount[388985]:_EndCount(atomic int(64),int(64))[1525461] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (389053 'move' _coforallCount[388985](389050 call _endCountAlloc[1798297]))
        const-val numTasks[388986]:int(64)[10] "dead after last mention" "temp"
        (389037 'move' numTasks[388986](389033 call chpl_boundedCoforallSize[1798510] tmpIter[388957]))
        (389028 call _upEndCount[1798802] _coforallCount[388985] numTasks[388986])
        (389025 call chpl_resetTaskSpawn[1801388] numTasks[388986])
        val _indexOfInterest[388993]:int(64)[10] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[388994]:_ic_these_range_int64_t_both_one[1615692] "dead at end of block" "expr temp" "temp"
        (389003 'move' _iterator[388994](389001 call _getIterator[1610553] tmpIter[388957]))
        {
          val ret[5957256]:_ir_these_range_int64_t_both_one[1615698] "dead after last mention" "RVV" "temp"
          val call_tmp[5957258]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[5957260]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[5957262]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[5957264]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[5957266]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val default_arg_shouldHalt[5957268]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
          const-val _return_tmp_[5957270]:bool[19] "dead after last mention" "temp"
          const-val this[5957387]:range(int(64),both,one)[1610039] "temp"
          (5957392 'move' this[5957387](5957389 '.v' _iterator[388994] F0_this[6836143]))
          (5957272 'move' _return_tmp_[5957270](5957275 call checkIfIterWillOverflow[1612304] this[5957387] 1))
          val i[5957278]:int(64)[10] "dead at end of block" "insert auto destroy"
          val call_tmp[5957280]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (5957282 'move' i[5957278] 0)
          const-val call_tmp[5957285]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[5957394]:range(int(64),both,one)[1610039] "temp"
          (5957399 'move' this[5957394](5957396 '.v' _iterator[388994] F0_this[6836143]))
          (5957287 'move' call_tmp[5957285](5957290 call lowBoundForIter[1614907] this[5957394]))
          const-val call_tmp[5957292]:int(64)[10] "dead at end of block" "maybe param" "temp"
          (5957294 'move' call_tmp[5957292](5957297 call chpl__idxToInt[1577032] call_tmp[5957285]))
          const-val start[5957299]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
          (5957301 'move' start[5957299] call_tmp[5957292])
          const-val call_tmp[5957304]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[5957401]:range(int(64),both,one)[1610039] "temp"
          (5957406 'move' this[5957401](5957403 '.v' _iterator[388994] F0_this[6836143]))
          (5957306 'move' call_tmp[5957304](5957309 call highBoundForIter[1615150] this[5957401]))
          const-val call_tmp[5957311]:int(64)[10] "dead at end of block" "maybe param" "temp"
          (5957313 'move' call_tmp[5957311](5957316 call chpl__idxToInt[1577032] call_tmp[5957304]))
          const end[5957318]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
          (5957320 'move' end[5957318] call_tmp[5957311])
          val call_tmp[5957323]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[5957325]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[5957327]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          CForLoop[5957329] hazard
          {
            const-val yret[5957346]:int(64)[10] "dead after last mention" "YVV" "temp"
            const-val call_tmp[5957348]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val this[5957408]:range(int(64),both,one)[1610039] "temp"
            (5957413 'move' this[5957408](5957410 '.v' _iterator[388994] F0_this[6836143]))
            (5957350 'move' call_tmp[5957348](5957353 call chpl_intToIdx[1615092] this[5957408] i[5957278]))
            (5957356 'move' yret[5957346] call_tmp[5957348])
            const-val _yieldedIndex[5957370]:int(64)[10] "coforall index var" "temp"
            (5957385 'move' _yieldedIndex[5957370] call_tmp[5957348])
            {
              const-val i[5957372]:int(64)[10] "coforall index var" "const" "index var" "insert auto destroy"
              (5957374 'move' i[5957372] _yieldedIndex[5957370])
              val _args_forcoforall_fn[7251912]:_class_localscoforall_fn[7251904] "temp"
              (7251916 'move' _args_forcoforall_fn[7251912](7251914 'stack allocate class' _class_localscoforall_fn[7251904]))
              (7251918 '.=' _args_forcoforall_fn[7251912] _0_i[7251907] i[5957372])
              (7251922 '.=' _args_forcoforall_fn[7251912] _1__coforallCount[7251909] _coforallCount[388985])
              val _args_vforcoforall_fn[7251926]:chpl__c_void_ptr[120] "temp"
              (7251930 'move' _args_vforcoforall_fn[7251926](7251928 'cast_to_void_star' _args_forcoforall_fn[7251912]))
              val _args_sizecoforall_fn[7251932]:int(64)[10] "temp"
              (7251936 'move' _args_sizecoforall_fn[7251932](7251934 'sizeof_bundle' _class_localscoforall_fn[7251904]))
              (7251979 call wrapcoforall_fn[7251938] _args_vforcoforall_fn[7251926] _args_sizecoforall_fn[7251932] _args_forcoforall_fn[7251912])
              {
              }
              label _continueLabel[5957382]
            }
            {
              (5957331 '=' i[5957278] call_tmp[5957292])
            }
            {
              (5957335 '<=' i[5957278] end[5957318])
            }
            {
              val call_tmp[5957339]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[5957341]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              (5957343 '+=' i[5957278] 1)
            }
          }
          label _end_these[5957366]
        }
        label _breakLabel[388999]
        val error[5497796]:Error[85511] "error variable" "temp"
        (5497798 'move' error[5497796] nil[32])
        (389045 call _waitEndCount[1804599] _coforallCount[388985] numTasks[388986] error[5497796])
        val errorExists[7297064]:bool[19] "temp"
        (7297069 'move' errorExists[7297064](7297066 '!=' error[5497796] nil[32]))
        if errorExists[7297064]
        {
          (5497801 call chpl_uncaught_error[87456] error[5497796])
        }
        (5610803 call _endCountFree[1803483] _coforallCount[388985])
        (5610807 call _freeIterator[1622361] _iterator[388994])
      }
      (5610810 call chpl__autoDestroy[1802624] tmpIter[388957])
      (5610813 call chpl__autoDestroy[3968601] call_tmp[808815])
    }
    (608404 return _void[46])
  }
  function chpl_init_rootLocale[136789]() : void[4] "resolved" "no return value for void"
  {
    const-val tmp[487833]:bool[19] "dead after last mention" "maybe param" "temp"
    (487844 'move' tmp[487833](136800 call >[55238] numLocales[305007] 1))
    val call_tmp[808845]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[679932]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[679933]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[808850]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (808853 'move' call_tmp[808850] tmp[487833])
    (679938 'move' tmp[679933] call_tmp[808850])
    if tmp[679933]
    {
      val tmp[679940]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (679947 'move' tmp[679932] 1)
    }
    {
      (679952 'move' tmp[679932] 0)
    }
    const-val call_tmp[808855]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (808858 'move' call_tmp[808855] tmp[679932])
    if call_tmp[808855]
    {
      (136793 call halt[88131] "Cannot run a program compiled with --local in more than 1 locale")
    }
    ref call_tmp[808862]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (808865 'move' call_tmp[808862](136813 call _instance[1003250] origRootLocale[136474]))
    val call_tmp[808867]:RootLocale[309500] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    { scopeless
      val new_temp[1883742]:RootLocale[309500] "dead after last mention" "temp"
      (1883744 'move' new_temp[1883742](1883574 call _new[1883693]))
    }
    (808870 'move' call_tmp[808867] new_temp[1883742])
    val coerce_tmp[1883843]:RootLocale[309500] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1883849 'move' coerce_tmp[1883843] call_tmp[808867])
    (136810 call =[1883799] call_tmp[808862] coerce_tmp[1883843])
    const-ref call_tmp[808874]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (808877 'move' call_tmp[808874](136826 call _instance[1003250] origRootLocale[136474]))
    val call_tmp[808879]:RootLocale[309500] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1883960]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1883964 'move' coerce_tmp[1883960](1883962 'deref' call_tmp[808874]))
    val coerce_tmp[1883966]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1883971 'move' coerce_tmp[1883966] coerce_tmp[1883960])
    (808882 'move' call_tmp[808879](136823 call :[1883870] coerce_tmp[1883966]))
    val call_tmp[808884]:RootLocale[309500] "dead after last mention" "expr temp" "maybe param" "temp"
    (808887 'move' call_tmp[808884](136821 call postfix![1884099] call_tmp[808879]))
    (136837 call setup[309144] call_tmp[808884])
    (608406 return _void[46])
  }
  function chpl_rootLocaleInitPrivate[1894059](const in arg locIdx[1894061]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    (1894068 call =[135747] rootLocale[136464] origRootLocale[136474])
    val tmp[1894072]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1894077]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[1894090]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1894092]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1894094]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[1894108]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1894110]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1894112 'move' call_tmp[1894110](1894115 call !=[53220] locIdx[1894061] 0))
    (1894118 'move' tmp[1894108] call_tmp[1894110])
    (1894123 'move' tmp[1894090] tmp[1894108])
    const-val call_tmp[1894135]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1894137 'move' call_tmp[1894135] tmp[1894090])
    if call_tmp[1894135]
    {
      val call_tmp[1894144]:RootLocale[309500] "dead after last mention" "insert auto destroy for explicit new" "maybe copy elided" "maybe param" "temp"
      { scopeless
        val new_temp[1894399]:RootLocale[309500] "dead after last mention" "temp"
        (1894401 'move' new_temp[1894399](1894387 call _new[1883693]))
      }
      (1894146 'move' call_tmp[1894144] new_temp[1894399])
      val newRootLocale[1894152]:RootLocale[309500] "dead at end of block" "insert auto destroy"
      (5614667 '=' newRootLocale[1894152] call_tmp[1894144])
      (1894154 'noop')
      const-ref origLocales[1894158]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "const" "no auto destroy" "no copy" "reference to a const" "ref var"
      const-ref call_tmp[1894162]:_ref(BaseLocale)[1531014] "dead at end of block" "maybe param" "temp"
      (1894164 'move' call_tmp[1894162](1894167 call _instance[1003250] origRootLocale[136474]))
      val call_tmp[1894170]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[1894430]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1894434 'move' coerce_tmp[1894430](1894432 'deref' call_tmp[1894162]))
      val coerce_tmp[1894436]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1894441 'move' coerce_tmp[1894436] coerce_tmp[1894430])
      (1894172 'move' call_tmp[1894170](1894175 call :[1883870] coerce_tmp[1894436]))
      val call_tmp[1894178]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
      (1894180 'move' call_tmp[1894178](1894183 call postfix![1884099] call_tmp[1894170]))
      const-ref call_tmp[1894185]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1894187 'move' call_tmp[1894185](1894193 call getDefaultLocaleArray[309399] call_tmp[1894178]))
      (1894194 'move' origLocales[1894158] call_tmp[1894185])
      val call_tmp[1894199]:[domain(1,int(64),one)] locale[1769942] "dead after last mention" "expr temp" "maybe param" "temp"
      (1894201 'move' call_tmp[1894199](1894204 call _value[1780461] origLocales[1894158]))
      const-ref call_tmp[1894207]:_ref(_ddata(locale))[1768685] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1894798]:[domain(1,int(64),one)] locale[1769942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1894803 'move' coerce_tmp[1894798] call_tmp[1894199])
      (1894209 'move' call_tmp[1894207](1894212 call theData[1881346] coerce_tmp[1894798]))
      val origRL[1894215]:_ddata(locale)[1768676] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1894809]:_ddata(locale)[1768676] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1894813 'move' coerce_tmp[1894809](1894811 'deref' call_tmp[1894207]))
      (5614670 '=' origRL[1894215] coerce_tmp[1894809])
      (1894217 'noop')
      const-ref call_tmp[1894221]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "maybe param" "reference to a const" "temp"
      val coerce_tmp[1894816]:RootLocale[309500] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1894821 'move' coerce_tmp[1894816] newRootLocale[1894152])
      (1894223 'move' call_tmp[1894221](1894229 call getDefaultLocaleArray[309399] coerce_tmp[1894816]))
      val call_tmp[1894230]:[domain(1,int(64),one)] locale[1769942] "dead after last mention" "expr temp" "maybe param" "temp"
      (1894232 'move' call_tmp[1894230](1894235 call _value[1780461] call_tmp[1894221]))
      const-ref call_tmp[1894238]:_ref(_ddata(locale))[1768685] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1894825]:[domain(1,int(64),one)] locale[1769942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1894830 'move' coerce_tmp[1894825] call_tmp[1894230])
      (1894240 'move' call_tmp[1894238](1894243 call theData[1881346] coerce_tmp[1894825]))
      val newRL[1894246]:_ddata(locale)[1768676] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1894836]:_ddata(locale)[1768676] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1894840 'move' coerce_tmp[1894836](1894838 'deref' call_tmp[1894238]))
      (5614673 '=' newRL[1894246] coerce_tmp[1894836])
      (1894248 'noop')
      ref call_tmp[1894254]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
      (1894256 'move' call_tmp[1894254](1894258 'array_get' newRL[1894246] 0))
      ref call_tmp[1894261]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
      (1894263 'move' call_tmp[1894261](1894265 'array_get' origRL[1894215] 0))
      val call_tmp[1894268]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (1894270 'move' call_tmp[1894268](1894273 'cast' uint(64)[86] numLocales[305007]))
      (1894276 'chpl_comm_array_get' call_tmp[1894254] 0 call_tmp[1894261] call_tmp[1894268])
      ref call_tmp[1894284]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
      (1894286 'move' call_tmp[1894284](1894289 call _instance[1003250] rootLocale[136464]))
      val coerce_tmp[1894845]:RootLocale[309500] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1894851 'move' coerce_tmp[1894845] newRootLocale[1894152])
      (1894293 call =[1883799] call_tmp[1894284] coerce_tmp[1894845])
    }
    const-val call_tmp[1894299]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1894301 'move' call_tmp[1894299](1894304 call !=[53220] locIdx[1894061] 0))
    const-val call_tmp[1894307]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1894309 'move' call_tmp[1894307] call_tmp[1894299])
    if call_tmp[1894307]
    {
      const-ref tmp[1894316]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "const" "no auto destroy" "reference to a const" "ref var"
      const-ref call_tmp[1894320]:_ref(BaseLocale)[1531014] "dead at end of block" "maybe param" "temp"
      (1894322 'move' call_tmp[1894320](1894325 call _instance[1003250] rootLocale[136464]))
      val call_tmp[1894328]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[1894856]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1894860 'move' coerce_tmp[1894856](1894858 'deref' call_tmp[1894320]))
      val coerce_tmp[1894862]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1894867 'move' coerce_tmp[1894862] coerce_tmp[1894856])
      (1894330 'move' call_tmp[1894328](1894333 call :[1883870] coerce_tmp[1894862]))
      val call_tmp[1894336]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
      (1894338 'move' call_tmp[1894336](1894341 call postfix![1884099] call_tmp[1894328]))
      const-ref call_tmp[1894343]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1894345 'move' call_tmp[1894343](1894351 call getDefaultLocaleArray[309399] call_tmp[1894336]))
      (1894352 'move' tmp[1894316] call_tmp[1894343])
      (1894357 'move' Locales[309572] tmp[1894316])
    }
    (1894364 call =[52153] rootLocaleInitialized[52042] 1)
    (1894367 return _void[46])
  }
  function chpl_defaultLocaleInitPrivate[136975]() : void[4] "resolved" "no return value for void"
  {
    const-ref rl[136979]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "const" "no auto destroy" "no copy" "reference to a const" "ref var"
    const-ref call_tmp[809033]:_ref(BaseLocale)[1531014] "dead at end of block" "maybe param" "temp"
    (809036 'move' call_tmp[809033](136985 call _instance[1003250] rootLocale[136464]))
    val call_tmp[809038]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1894875]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1894879 'move' coerce_tmp[1894875](1894877 'deref' call_tmp[809033]))
    val coerce_tmp[1894881]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1894886 'move' coerce_tmp[1894881] coerce_tmp[1894875])
    (809041 'move' call_tmp[809038](136982 call :[1883870] coerce_tmp[1894881]))
    val call_tmp[809043]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
    (809046 'move' call_tmp[809043](136980 call postfix![1884099] call_tmp[809038]))
    const-ref call_tmp[809050]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "maybe param" "reference to a const" "temp"
    (809053 'move' call_tmp[809050](136994 call getDefaultLocaleArray[309399] call_tmp[809043]))
    (645966 'move' rl[136979] call_tmp[809050])
    ref call_tmp[809057]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (809060 'move' call_tmp[809057](137000 call _instance[1003250] defaultLocale[135266]))
    ref call_tmp[809062]:_ref(locale)[1467958] "dead after last mention" "maybe param" "reference to a const" "temp"
    (809065 'move' call_tmp[809062](137004 call this[1895191] rl[136979] 0))
    const-ref call_tmp[809069]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "reference to a const" "temp"
    (809072 'move' call_tmp[809069](137006 call _instance[1003250] call_tmp[809062]))
    val coerce_tmp[1907577]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1907581 'move' coerce_tmp[1907577](1907579 'deref' call_tmp[809069]))
    (136997 call =[1538978] call_tmp[809057] coerce_tmp[1907577])
    (608410 return _void[46])
  }
  function chpl_singletonCurrentLocaleInitPrivateSublocs[137011](const  ref arg arg[137014]:locale[234]) : void[4] "resolved" "no return value for void"
  {
    {
      val _indexOfInterest[137086]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[137087]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[809076]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "temp"
      (809079 'move' call_tmp[809076](137105 call _getChildCount[135571] arg[137014]))
      const-val call_tmp[809081]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[5545874]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
      (137107 call chpl_direct_counted_range_iter[1468903] 0 call_tmp[809076] ret_tmp[5545874])
      (5545877 'move' call_tmp[809081] ret_tmp[5545874])
      (137096 'move' _iterator[137087](137094 call _getIterator[1520079] call_tmp[809081]))
      {
        val ret[5955393]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
        val tmp[5955395]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[5955397]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[5955399]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[5955401]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
        val tmp[5955403]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[5955405]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[5955407]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val _indexOfInterest[5955409]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[5955411]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[5955413]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[5955415]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
        const-val low[5955612]:int(64)[10] "temp"
        (5955617 'move' low[5955612](5955614 '.v' _iterator[137087] F0_low[6832410]))
        const-val count[5955619]:int(64)[10] "temp"
        (5955624 'move' count[5955619](5955621 '.v' _iterator[137087] F1_count[6832414]))
        (5955418 call chpl_direct_counted_range_iter_helper[1469227] low[5955612] count[5955619] ret_tmp[5955415])
        (5955422 'move' call_tmp[5955413] ret_tmp[5955415])
        (5955425 'move' _iterator[5955411](5955428 call _getIterator[1519812] call_tmp[5955413]))
        {
          val ret[6279218]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
          val tmp[6279220]:bool[19] "dead after last mention" "maybe param" "temp"
          val tmp[6279222]:bool[19] "dead after last mention" "maybe param" "temp"
          val call_tmp[6279224]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[6279226]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
          val tmp[6279228]:bool[19] "dead after last mention" "maybe param" "temp"
          val call_tmp[6279230]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[6279232]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          val call_tmp[6279234]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[6279236]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[6279238]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          const-val tmp[6279240]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val tmp[6279242]:bool[19] "dead after last mention" "maybe param" "temp"
          val call_tmp[6279244]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          const-val tmp[6279246]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[6279248]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val count[6279707]:int(64)[10] "temp"
          (6279712 'move' count[6279707](6279709 '.v' _iterator[5955411] F1_count[6834178]))
          (6279250 'move' call_tmp[6279248](6279253 call <[1469576] count[6279707] 0))
          (6279256 'move' tmp[6279246] call_tmp[6279248])
          (6279259 'move' tmp[6279240] call_tmp[6279248])
          const-val call_tmp[6279262]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (6279264 'move' call_tmp[6279262] call_tmp[6279248])
          if call_tmp[6279248]
          {
            (6279270 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
          }
          const-val start[6279273]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
          const-val low[6279714]:int(64)[10] "temp"
          (6279719 'move' low[6279714](6279716 '.v' _iterator[5955411] F0_low[6834174]))
          (6279275 'move' start[6279273] low[6279714])
          const-val end[6279278]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
          val tmp[6279280]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[6279282]:bool[19] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[6279284]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val count[6279721]:int(64)[10] "temp"
          (6279726 'move' count[6279721](6279723 '.v' _iterator[5955411] F1_count[6834178]))
          (6279286 'move' call_tmp[6279284](6279289 call ==[52746] count[6279721] 0))
          (6279292 'move' tmp[6279282] call_tmp[6279284])
          if call_tmp[6279284]
          {
            const-val tmp[6279297]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6279299]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val low[6279728]:int(64)[10] "temp"
            (6279733 'move' low[6279728](6279730 '.v' _iterator[5955411] F0_low[6834174]))
            (6279301 'move' call_tmp[6279299](6279303 'cast' uint(64)[86] low[6279728]))
            const-val call_tmp[6279306]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[6279308]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (6279310 'move' coerce_tmp[6279308](6279312 'cast' uint(64)[86] 1))
            (6279315 'move' call_tmp[6279306](6279318 call -[1487313] call_tmp[6279299]))
            val call_tmp[6279320]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (6279322 'move' tmp[6279297](6279325 call :[1482043] call_tmp[6279306]))
            (6279327 'move' tmp[6279280] tmp[6279297])
          }
          {
            const-val tmp[6279331]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            val call_tmp[6279333]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[6279335]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6279735]:int(64)[10] "temp"
            (6279740 'move' count[6279735](6279737 '.v' _iterator[5955411] F1_count[6834178]))
            (6279337 'move' call_tmp[6279335] count[6279735])
            const-val call_tmp[6279340]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6279742]:int(64)[10] "temp"
            (6279747 'move' count[6279742](6279744 '.v' _iterator[5955411] F1_count[6834178]))
            (6279342 'move' call_tmp[6279340](6279345 call -[1487343] count[6279742]))
            const-val call_tmp[6279347]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val low[6279749]:int(64)[10] "temp"
            (6279754 'move' low[6279749](6279751 '.v' _iterator[5955411] F0_low[6834174]))
            (6279349 'move' call_tmp[6279347](6279352 call +[56587] low[6279749] call_tmp[6279340]))
            val call_tmp[6279355]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (6279357 'move' tmp[6279331] call_tmp[6279347])
            (6279360 'move' tmp[6279280] call_tmp[6279347])
          }
          (6279364 'move' end[6279278] tmp[6279280])
          val _indexOfInterest[6279367]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[6279369]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[6279371]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[6279373]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
          (6279376 call chpl_direct_param_stride_range_iter[1517410] start[6279273] tmp[6279280] ret_tmp[6279373])
          (6279380 'move' call_tmp[6279371] ret_tmp[6279373])
          (6279383 'move' _iterator[6279369](6279386 call _getIterator[1519541] call_tmp[6279371]))
          {
            val ret[6279389]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
            val call_tmp[6279391]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6279393]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (6279396 call chpl_range_check_stride[1517730])
            val i[6279397]:int(64)[10] "dead at end of block" "insert auto destroy"
            val call_tmp[6279399]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (6279401 'move' i[6279397] 0)
            val call_tmp[6279404]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6279406]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6279408]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6279410]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val default_arg_first[6279412]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            const-val low[6279414]:int(64)[10] "temp"
            (6279416 'move' low[6279414](6279418 '.v' _iterator[6279369] F0_low[6835591]))
            (6279421 'move' default_arg_first[6279412](6279424 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6279414]))
            const-val default_arg_last[6279426]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            const-val high[6279428]:int(64)[10] "temp"
            (6279430 'move' high[6279428](6279432 '.v' _iterator[6279369] F1_high[6835595]))
            (6279435 'move' default_arg_last[6279426](6279438 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6279428]))
            val default_arg_shouldHalt[6279440]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            const-val _return_tmp_[6279442]:bool[19] "dead after last mention" "temp"
            const-val low[6279444]:int(64)[10] "temp"
            (6279446 'move' low[6279444](6279448 '.v' _iterator[6279369] F0_low[6835591]))
            const-val high[6279451]:int(64)[10] "temp"
            (6279453 'move' high[6279451](6279455 '.v' _iterator[6279369] F1_high[6835595]))
            (6279458 'move' _return_tmp_[6279442](6279461 call chpl_checkIfRangeIterWillOverflow[1518856] low[6279444] high[6279451] 1 default_arg_first[6279412] default_arg_last[6279426] 1))
            CForLoop[6279468] hazard
            {
              const-val yret[6279499]:int(64)[10] "dead after last mention" "YVV" "temp"
              (6279501 'move' yret[6279499] i[6279397])
              const-val _yieldedIndex[6279504]:int(64)[10] "temp"
              (6279506 'move' _yieldedIndex[6279504] i[6279397])
              {
                const-val i[6279510]:int(64)[10] "const" "index var" "insert auto destroy"
                (6279512 'move' i[6279510] _yieldedIndex[6279504])
                const-val yret[6279515]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6279517 'move' yret[6279515] _yieldedIndex[6279504])
                const-val _yieldedIndex[6279539]:int(64)[10] "temp"
                (6279705 'move' _yieldedIndex[6279539] _yieldedIndex[6279504])
                {
                  const-val i[6279541]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6279543 'move' i[6279541] _yieldedIndex[6279539])
                  const-val yret[6279546]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6279548 'move' yret[6279546] _yieldedIndex[6279539])
                  const-val _yieldedIndex[6279551]:int(64)[10] "temp"
                  (6279553 'move' _yieldedIndex[6279551] _yieldedIndex[6279539])
                  {
                    const i[6279557]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6279559 'move' i[6279557] _yieldedIndex[6279551])
                    {
                      const-val call_tmp[6279563]:locale[234] "dead at end of block" "maybe param" "temp"
                      const _chpl_forward_tgt[6279565]:BaseLocale[136243] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
                      (6279567 'move' _chpl_forward_tgt[6279565](6279570 call chpl_forwarding_expr1[135313] arg[137014]))
                      val coerce_tmp[6279572]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6279574 'move' coerce_tmp[6279572] _chpl_forward_tgt[6279565])
                      val _virtual_method_tmp_[6279577]:int(32)[66] "temp"
                      (6279579 'move' _virtual_method_tmp_[6279577](6279581 'getcid' coerce_tmp[6279572]))
                      val ret_tmp[6279583]:locale[234] "temp"
                      (6279585 'virtual method call' _getChild[136186] _virtual_method_tmp_[6279577] coerce_tmp[6279572] i[6279557] ret_tmp[6279583])
                      (6279591 'move' call_tmp[6279563] ret_tmp[6279583])
                      val subloc[6279594]:locale[234] "dead at end of block" "insert auto destroy"
                      (6279596 'move' subloc[6279594] call_tmp[6279563])
                      const-ref call_tmp[6279599]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
                      (6279601 'move' call_tmp[6279599](6279604 call _instance[1003250] subloc[6279594]))
                      val call_tmp[6279606]:AbstractLocaleModel[136461] "dead after last mention" "maybe param" "temp"
                      val coerce_tmp[6279608]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6279610 'move' coerce_tmp[6279608](6279612 'deref' call_tmp[6279599]))
                      val coerce_tmp[6279614]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6279616 'move' coerce_tmp[6279614] coerce_tmp[6279608])
                      (6279619 'move' call_tmp[6279606](6279622 call :[1908578] coerce_tmp[6279614]))
                      val val[6279624]:AbstractLocaleModel[136461] "dead at end of block" "insert auto destroy"
                      (6279626 'move' val[6279624](6279629 call chpl__initCopy[1908703] call_tmp[6279606] 0))
                      const-val call_tmp[6279632]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[6279634]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6279636 'move' coerce_tmp[6279634](6279638 'cast' RootClass[236] val[6279624]))
                      (6279641 'move' call_tmp[6279632](6279644 call ==[53036] coerce_tmp[6279634] nil[32]))
                      const-val call_tmp[6279647]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (6279649 'move' call_tmp[6279647] call_tmp[6279632])
                      if call_tmp[6279647]
                      {
                        (6279655 call halt[88131] "error in locale initialization")
                      }
                      val call_tmp[6279658]:AbstractLocaleModel[136461] "dead after last mention" "expr temp" "maybe param" "temp"
                      (6279660 'move' call_tmp[6279658](6279663 call postfix![1908829] val[6279624]))
                      ref call_tmp[6279665]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
                      val coerce_tmp[6279667]:AbstractLocaleModel[136461] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6279669 'move' coerce_tmp[6279667] call_tmp[6279658])
                      const-ref _this_tmp_[6279672]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "temp"
                      (6279674 'move' _this_tmp_[6279672](6279677 call chpl_singletonThisLocaleArray[1084032] coerce_tmp[6279667]))
                      (6279679 'move' call_tmp[6279665](6279682 call this[1895191] _this_tmp_[6279672] 0))
                      ref call_tmp[6279685]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
                      (6279687 'move' call_tmp[6279685](6279690 call _instance[1003250] call_tmp[6279665]))
                      (6279693 call =[1909196] call_tmp[6279685] val[6279624])
                      (6279697 call chpl_singletonCurrentLocaleInitPrivateSublocs[137011] subloc[6279594])
                      (6279700 call chpl__autoDestroy[3885511] subloc[6279594])
                    }
                    label _continueLabel[6279702]
                  }
                }
              }
              {
                const-val low[6279470]:int(64)[10] "temp"
                (6279472 'move' low[6279470](6279474 '.v' _iterator[6279369] F0_low[6835591]))
                (6279477 '=' i[6279397] low[6279470])
              }
              {
                const-val high[6279481]:int(64)[10] "temp"
                (6279483 'move' high[6279481](6279485 '.v' _iterator[6279369] F1_high[6835595]))
                (6279488 '<=' i[6279397] high[6279481])
              }
              {
                val call_tmp[6279492]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[6279494]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                (6279496 '+=' i[6279397] 1)
              }
            }
            label _endchpl_direct_param_stride_range_iter[6279530]
          }
          (6279533 call _freeIterator[1519714] _iterator[6279369])
          label _endchpl_direct_counted_range_iter_helper[6279535]
        }
        (5955454 call _freeIterator[1519981] _iterator[5955411])
        label _endchpl_direct_counted_range_iter[5955456]
      }
      label _breakLabel[137092]
      (5610823 call _freeIterator[1520248] _iterator[137087])
    }
    (608412 return _void[46])
  }
  function chpl_singletonCurrentLocaleInitPrivate[1907584](const in arg locIdx[1907586]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-ref rl[1907592]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "const" "no auto destroy" "no copy" "reference to a const" "ref var"
    const-ref call_tmp[1907596]:_ref(BaseLocale)[1531014] "dead at end of block" "maybe param" "temp"
    (1907598 'move' call_tmp[1907596](1907601 call _instance[1003250] rootLocale[136464]))
    val call_tmp[1907604]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1907731]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1907735 'move' coerce_tmp[1907731](1907733 'deref' call_tmp[1907596]))
    val coerce_tmp[1907737]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1907742 'move' coerce_tmp[1907737] coerce_tmp[1907731])
    (1907606 'move' call_tmp[1907604](1907609 call :[1883870] coerce_tmp[1907737]))
    val call_tmp[1907612]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
    (1907614 'move' call_tmp[1907612](1907617 call postfix![1884099] call_tmp[1907604]))
    const-ref call_tmp[1907619]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1907621 'move' call_tmp[1907619](1907627 call getDefaultLocaleArray[309399] call_tmp[1907612]))
    (1907628 'move' rl[1907592] call_tmp[1907619])
    const-ref call_tmp[1907633]:_ref(locale)[1467958] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (1907635 'move' call_tmp[1907633](1907750 call this[1895603] rl[1907592] locIdx[1907586]))
    val loc[1907640]:locale[234] "dead at end of block" "insert auto destroy"
    (1907642 call init=[135460] loc[1907640] call_tmp[1907633])
    const-ref call_tmp[1907646]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (1907648 'move' call_tmp[1907646](1907651 call _instance[1003250] loc[1907640]))
    val call_tmp[1907654]:AbstractLocaleModel[136461] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1908677]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1908681 'move' coerce_tmp[1908677](1908679 'deref' call_tmp[1907646]))
    val coerce_tmp[1908683]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1908688 'move' coerce_tmp[1908683] coerce_tmp[1908677])
    (1907656 'move' call_tmp[1907654](1907659 call :[1908578] coerce_tmp[1908683]))
    val val[1907662]:AbstractLocaleModel[136461] "dead at end of block" "insert auto destroy"
    (1907664 'move' val[1907662](1908816 call chpl__initCopy[1908703] call_tmp[1907654] 0))
    const-val call_tmp[1907670]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1908820]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1908825 'move' coerce_tmp[1908820](1908822 'cast' RootClass[236] val[1907662]))
    (1907672 'move' call_tmp[1907670](1907675 call ==[53036] coerce_tmp[1908820] nil[32]))
    const-val call_tmp[1907678]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1907680 'move' call_tmp[1907678] call_tmp[1907670])
    if call_tmp[1907678]
    {
      (1907688 call halt[88131] "error in locale initialization")
    }
    val call_tmp[1907691]:AbstractLocaleModel[136461] "dead after last mention" "expr temp" "maybe param" "temp"
    (1907693 'move' call_tmp[1907691](1907696 call postfix![1908829] val[1907662]))
    ref call_tmp[1907698]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1909145]:AbstractLocaleModel[136461] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1909150 'move' coerce_tmp[1909145] call_tmp[1907691])
    const-ref _this_tmp_[1909153]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "temp"
    (1909155 'move' _this_tmp_[1909153](1907703 call chpl_singletonThisLocaleArray[1084032] coerce_tmp[1909145]))
    (1907700 'move' call_tmp[1907698](1907706 call this[1895191] _this_tmp_[1909153] 0))
    ref call_tmp[1907708]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (1907710 'move' call_tmp[1907708](1907713 call _instance[1003250] call_tmp[1907698]))
    (1907717 call =[1909196] call_tmp[1907708] val[1907662])
    (1907723 call chpl_singletonCurrentLocaleInitPrivateSublocs[137011] loc[1907640])
    (5614755 call chpl__autoDestroy[3885511] loc[1907640])
    (1907727 return _void[46])
  }
  function chpl_getLocaleID[137213](ref arg localeID[137216]:_ref(chpl_localeID_t)[1466597]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[809204]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (809207 'move' call_tmp[809204](430945 call here_id[137226]))
    (137220 call =[1296253] localeID[137216] call_tmp[809204])
    (608416 return _void[46])
  }
  function here_id[137226]() : chpl_localeID_t[306449] "inline" "no parens" "resolved" "fn synchronization free"
  {
    val ret[608420]:chpl_localeID_t[306449] "dead after last mention" "RVV" "temp"
    val call_tmp[809209]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[809229]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (809232 'move' call_tmp[809229](430949 call chpl_nodeID[305038]))
      const-val call_tmp[809234]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (809237 'move' call_tmp[809234](137238 call chpl_rt_buildLocaleID[306484] call_tmp[809229] c_sublocid_any[135202]))
      (608430 'move' ret[608420] call_tmp[809234])
      gotoReturn _end_here_id[608418] _end_here_id[608418]
    }
    label _end_here_id[608418]
    (608422 return ret[608420])
  }
  function chpl_localeID_to_locale[137251](const  ref arg id[137254]:chpl_localeID_t[306449], ref arg _retArg[5544984]:_ref(locale)[1467958]) : void[4] "fn returns via _retArg" "resolved" "fn returns infinite lifetime"
  {
    val ret[608436]:locale[234] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[809241]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
    (809244 'move' call_tmp[809241](137308 call _instance[1003250] rootLocale[136464]))
    const-val call_tmp[809246]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1534832]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1534836 'move' coerce_tmp[1534832](1534834 'deref' call_tmp[809241]))
    val coerce_tmp[1534838]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1534843 'move' coerce_tmp[1534838](1534840 'cast' RootClass[236] coerce_tmp[1534832]))
    (809249 'move' call_tmp[809246](137305 call !=[53510] coerce_tmp[1534838] nil[32]))
    const-val call_tmp[809251]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (809254 'move' call_tmp[809251] call_tmp[809246])
    if call_tmp[809251]
    {
      const-ref call_tmp[809258]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
      (809261 'move' call_tmp[809258](137265 call _instance[1003250] rootLocale[136464]))
      val call_tmp[809263]:AbstractRootLocale[136746] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1534982]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1534986 'move' coerce_tmp[1534982](1534984 'deref' call_tmp[809258]))
      val coerce_tmp[1534988]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1534993 'move' coerce_tmp[1534988] coerce_tmp[1534982])
      (809266 'move' call_tmp[809263](137262 call :[1534892] coerce_tmp[1534988]))
      val call_tmp[809268]:AbstractRootLocale[136746] "dead after last mention" "expr temp" "maybe param" "temp"
      (809271 'move' call_tmp[809268](137260 call postfix![1535121] call_tmp[809263]))
      const-val call_tmp[809275]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val _virtual_method_tmp_[5469198]:int(32)[66] "temp"
      (5469202 'move' _virtual_method_tmp_[5469198](5469200 'getcid' call_tmp[809268]))
      val ret_tmp[5544318]:locale[234] "temp"
      (137276 'virtual method call' localeIDtoLocale[136546] _virtual_method_tmp_[5469198] call_tmp[809268] id[137254] ret_tmp[5544318])
      (5544321 'move' call_tmp[809275] ret_tmp[5544318])
      (1535470 '=' ret[608436] call_tmp[809275])
      gotoReturn _end_chpl_localeID_to_locale[608434] _end_chpl_localeID_to_locale[608434]
    }
    {
      const-ref call_tmp[809282]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
      (809285 'move' call_tmp[809282](137295 call _instance[1003250] dummyLocale[135279]))
      const-val call_tmp[809287]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1535339]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1535343 'move' coerce_tmp[1535339](1535341 'deref' call_tmp[809282]))
      val coerce_tmp[1535345]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1535350 'move' coerce_tmp[1535345](1535347 'cast' RootClass[236] coerce_tmp[1535339]))
      (809290 'move' call_tmp[809287](137292 call ==[53036] coerce_tmp[1535345] nil[32]))
      const-val call_tmp[809292]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (809295 'move' call_tmp[809292] call_tmp[809287])
      if call_tmp[809292]
      {
        ref call_tmp[809299]:_ref(BaseLocale)[1531014] "dead after last mention" "maybe param" "temp"
        (809302 'move' call_tmp[809299](137284 call _instance[1003250] dummyLocale[135279]))
        val call_tmp[809304]:DummyLocale[136365] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
        { scopeless
          val new_temp[1535370]:DummyLocale[136365] "dead after last mention" "temp"
          (1535372 'move' new_temp[1535370](1535358 call _new[1531764]))
        }
        (809307 'move' call_tmp[809304] new_temp[1535370])
        val coerce_tmp[1535453]:DummyLocale[136365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1535459 'move' coerce_tmp[1535453] call_tmp[809304])
        (137281 call =[1535409] call_tmp[809299] coerce_tmp[1535453])
      }
      (1535473 '=' ret[608436](5544989 call chpl__initCopy[2134904] dummyLocale[135279] 0))
      gotoReturn _end_chpl_localeID_to_locale[608434] _end_chpl_localeID_to_locale[608434]
    }
    label _end_chpl_localeID_to_locale[608434]
    (5544986 '=' _retArg[5544984] ret[608436])
    (5544991 return _void[46])
  }
  function chpl_taskRunningCntInc[137320]() : void[4] "export" "insert line file info" "inc running task" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[809309]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (809312 'move' call_tmp[809309] rootLocaleInitialized[52042])
    if call_tmp[809309]
    {
      const-val call_tmp[809314]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5543058]:locale[234] "temp"
      (402562 call here[135591] ret_tmp[5543058])
      (5543061 'move' call_tmp[809314] ret_tmp[5543058])
      val _chpl_forward_tgt[3877883]:BaseLocale[136243] "dead after last mention" "maybe ref" "maybe type" "temp"
      (3877889 'move' _chpl_forward_tgt[3877883](3877886 call chpl_forwarding_expr1[135313] call_tmp[809314]))
      val coerce_tmp[3877892]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3877897 'move' coerce_tmp[3877892] _chpl_forward_tgt[3877883])
      (137328 call runningTaskCntAdd[136026] coerce_tmp[3877892] 1)
      (5610826 call chpl__autoDestroy[3885511] call_tmp[809314])
    }
    (608452 return _void[46])
  }
  function chpl_taskRunningCntDec[137337]() : void[4] "export" "insert line file info" "dec running task" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[809321]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (809324 'move' call_tmp[809321] rootLocaleInitialized[52042])
    if call_tmp[809321]
    {
      const-val call_tmp[809326]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5543064]:locale[234] "temp"
      (402564 call here[135591] ret_tmp[5543064])
      (5543067 'move' call_tmp[809326] ret_tmp[5543064])
      val _chpl_forward_tgt[3877921]:BaseLocale[136243] "dead after last mention" "maybe ref" "maybe type" "temp"
      (3877927 'move' _chpl_forward_tgt[3877921](3877924 call chpl_forwarding_expr1[135313] call_tmp[809326]))
      val coerce_tmp[3877930]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3877935 'move' coerce_tmp[3877930] _chpl_forward_tgt[3877921])
      (137345 call runningTaskCntSub[136049] coerce_tmp[3877930] 1)
      (5610830 call chpl__autoDestroy[3885511] call_tmp[809326])
    }
    (608454 return _void[46])
  }
  function chpl_taskRunningCntReset[137354]() : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[809333]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5543070]:locale[234] "temp"
    (402566 call here[135591] ret_tmp[5543070])
    (5543073 'move' call_tmp[809333] ret_tmp[5543070])
    val _chpl_forward_tgt[3877959]:BaseLocale[136243] "dead after last mention" "maybe ref" "maybe type" "temp"
    (3877965 'move' _chpl_forward_tgt[3877959](3877962 call chpl_forwarding_expr1[135313] call_tmp[809333]))
    val coerce_tmp[3877968]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3877973 'move' coerce_tmp[3877968] _chpl_forward_tgt[3877959])
    (137363 call runningTaskCntSet[136003] coerce_tmp[3877968] 0)
    (5610833 call chpl__autoDestroy[3885511] call_tmp[809333])
    (608456 return _void[46])
  }
  function chpl_task_getFixedNumThreads[136751]() : uint(32)[81] "extern" "local args" "no fn body" "resolved"
  {
  }
  function coforall_fn[1464762](const in arg i[5491294]:int(64)[10], const in arg _coforallCount[5491296]:_EndCount(atomic int(64),int(64))[1525461]) : void[4] "cobegin or coforall" "outside try" "resolved" "wrapper needs start fence"
  {
    {
      val call_tmp[808825]:c_ptr(int(64))[1828691] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[1913978]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1913984 'move' coerce_tmp[1913978](1913980 'cast' uint(64)[86] 1))
      val default_arg_clear[1914005]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      const-val default_arg_alignment[1914053]:uint(64)[86] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1914057 'move' default_arg_alignment[1914053](1914055 call allocate_default_alignment[1914014]))
      (808828 'move' call_tmp[808825](388970 call allocate[1913584] coerce_tmp[1913978] 0 default_arg_alignment[1914053]))
      val p[388968]:c_ptr(int(64))[1828691] "dead at end of block" "insert auto destroy"
      (645945 'move' p[388968](1914270 call chpl__initCopy[1828813] call_tmp[808825] 0))
      ref call_tmp[808830]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (808833 'move' call_tmp[808830](388978 call this[1914276] p[388968] 0))
      (388976 call =[52229] call_tmp[808830] i[5491294])
      val coerce_tmp[1914351]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1914357 'move' coerce_tmp[1914351](1914353 'cast' c_ptr(void)[1465614] p[388968]))
      (388982 call deallocate[51080] coerce_tmp[1914351])
    }
    (1464767 return _void[46])
  }
  function wrapcoforall_fn[7251938](in arg buf[7251940]:chpl__c_void_ptr[120], in arg buf_size[7251942]:int(64)[10], in arg c[7251944]:_class_localscoforall_fn[7251904]) : void[4] "cobegin or coforall block" "wrapper needs start fence"
  {
    (7251947 'chpl_rmem_consist_acquire')
    val _0_i[7251950]:int(64)[10] "temp"
    (7251955 'move' _0_i[7251950](7251952 '.v' c[7251944] _0_i[7251907]))
    val _1__coforallCount[7251958]:_EndCount(atomic int(64),int(64))[1525461] "temp"
    (7251963 'move' _1__coforallCount[7251958](7251960 '.v' c[7251944] _1__coforallCount[7251909]))
    (7251948 call coforall_fn[1464762] _0_i[7251950] _1__coforallCount[7251958])
    val endcount[7251966]:_EndCount(atomic int(64),int(64))[1525461] "temp"
    (7251971 'move' endcount[7251966](7251968 '.v' c[7251944] _1__coforallCount[7251909]))
    (7251973 call _downEndCount[1802638] endcount[7251966] nil[32])
    (7251977 return _void[46])
  }
}
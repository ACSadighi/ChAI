AST dump for Time after pass bulkCopyRecords.
Module use list: ChapelStandard HaltWrappers CTypes ChplConfig IO JSON Math 

{
  function chpl__init_Time[468675]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    {
    }
    {
    }
    val call_tmp[982207]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[982212]:13*int(64)[1922385] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5557625]:13*int(64)[1922385] "temp"
    (365482 call _build_tuple[1922255] -1 31 28 31 30 31 30 31 31 30 31 30 31 ret_tmp[5557625])
    (5557628 'move' call_tmp[982212] ret_tmp[5557625])
    (657008 'move' DAYS_IN_MONTH[365463] call_tmp[982212])
    const-val call_tmp[982217]:13*int(64)[1922385] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5545814]:13*int(64)[1922385] "temp"
    (365489 call init_days_before_month[365825] ret_tmp[5545814])
    (5545817 'move' call_tmp[982217] ret_tmp[5545814])
    (657010 'move' DAYS_BEFORE_MONTH[365487] call_tmp[982217])
    const-val call_tmp[982222]:dateTime[371188] "dead after last mention" "maybe param" "temp"
    const-val initTemp[1930126]:dateTime[371188] "dead after last mention" "temp"
    val default_arg_hour[1932563]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val default_arg_minute[1932590]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val default_arg_second[1932617]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val default_arg_microsecond[1932644]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (1930129 call init[371270] initTemp[1930126] 1970 1 1 0 0 0 0)
    (982225 'move' call_tmp[982222] initTemp[1930126])
    (657012 'move' unixEpoch[365493] call_tmp[982222])
    const-val call_tmp[982227]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (982230 'move' call_tmp[982227](365507 call daysBeforeYear[365906] 401))
    (657014 'move' DI400Y[365505] call_tmp[982227])
    const-val call_tmp[982232]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (982235 'move' call_tmp[982232](365516 call daysBeforeYear[365906] 101))
    (657016 'move' DI100Y[365514] call_tmp[982232])
    const-val call_tmp[982237]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (982240 'move' call_tmp[982237](365523 call daysBeforeYear[365906] 5))
    (657018 'move' DI4Y[365521] call_tmp[982237])
    (640923 return _void[46])
  }
  function =[1441151](ref arg _arg1[1441153]:_ref(_timevalue)[3813123], const in arg _arg2[1441154]:_timevalue[365350]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved" "fn synchronization free"
  {
    (7314459 '=' _arg1[1441153] _arg2[1441154])
    (7314460 return _void[46])
  }
  type _timevalue[365350]
  function chpl_null_timevalue[365352]() : _timevalue[365350] "extern" "local args" "no fn body" "private" "resolved"
  {
  }
  function chpl_now_timevalue[365358]() : _timevalue[365350] "extern" "local args" "no fn body" "private" "resolved"
  {
  }
  type dayOfWeek[365447] def Monday[365433]:dayOfWeek[365447] 1 def Tuesday[365435]:dayOfWeek[365447] 2 def Wednesday[365437]:dayOfWeek[365447] 3 def Thursday[365439]:dayOfWeek[365447] 4 def Friday[365441]:dayOfWeek[365447] 5 def Saturday[365443]:dayOfWeek[365447] 6 def Sunday[365445]:dayOfWeek[365447] 7
  const DAYS_IN_MONTH[365463]:13*int(64)[1922385] "dead at end of block" "const" "insert auto destroy" "private"
  const-val DAYS_BEFORE_MONTH[365487]:13*int(64)[1922385] "dead at end of block" "const" "insert auto destroy" "private"
  const-val unixEpoch[365493]:dateTime[371188] "dead at end of block" "const" "insert auto destroy"
  const-val DI400Y[365505]:int(64)[10] "dead at end of block" "const" "insert auto destroy" "private"
  const-val DI100Y[365514]:int(64)[10] "dead at end of block" "const" "insert auto destroy" "private"
  const-val DI4Y[365521]:int(64)[10] "dead at end of block" "const" "insert auto destroy" "private"
  function init_days_before_month[365825](ref arg _retArg[5545820]:_ref(13*int(64))[1922660]) : void[4] "fn returns via _retArg" "private" "resolved"
  {
    const-val ret[639193]:13*int(64)[1922385] "dead after last mention" "RVV" "temp"
    val DBM[365829]:13*int(64)[1922385] "dead at end of block" "insert auto destroy"
    val call_tmp[982366]:13*int(64)[1922385] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[5557722]:13*int(64)[1922385] "temp"
    (1929861 call _defaultOf[1929866] ret_tmp[5557722])
    (5557725 'move' DBM[365829] ret_tmp[5557722])
    {
      val _indexOfInterest[365866]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[365867]:_ic_chpl_direct_range_iter[1924407] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[982371]:_ir_chpl_direct_range_iter[1924413] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[5557649]:_ir_chpl_direct_range_iter[1924413] "temp"
      (365880 call chpl_direct_range_iter[1923202] ret_tmp[5557649])
      (5557652 'move' call_tmp[982371] ret_tmp[5557649])
      (365876 'move' _iterator[365867](365874 call _getIterator[1924422] call_tmp[982371]))
      {
        val ret[5956008]:_ir_chpl_direct_range_iter[1924413] "dead after last mention" "RVV" "temp"
        val idxType[5956010]:int(64)[10] "dead at end of block" "insert auto destroy" "type variable"
        val _indexOfInterest[5956012]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[5956014]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
        val call_tmp[5956016]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[5956018]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[5956020]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
        const-val call_tmp[5956022]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[5956024]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
        (5956027 call chpl_direct_param_stride_range_iter[1517410] 2 12 ret_tmp[5956024])
        (5956031 'move' call_tmp[5956022] ret_tmp[5956024])
        (5956034 'move' _iterator[5956014](5956037 call _getIterator[1519541] call_tmp[5956022]))
        {
          val ret[6280744]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
          val call_tmp[6280746]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[6280748]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (6280751 call chpl_range_check_stride[1517730])
          val i[6280752]:int(64)[10] "dead at end of block" "insert auto destroy"
          val call_tmp[6280754]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (6280756 'move' i[6280752] 0)
          val call_tmp[6280759]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[6280761]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[6280763]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[6280765]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val default_arg_first[6280767]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val low[6280919]:int(64)[10] "temp"
          (6280924 'move' low[6280919](6280921 '.v' _iterator[5956014] F0_low[6835591]))
          (6280769 'move' default_arg_first[6280767](6280772 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6280919]))
          const-val default_arg_last[6280774]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val high[6280926]:int(64)[10] "temp"
          (6280931 'move' high[6280926](6280928 '.v' _iterator[5956014] F1_high[6835595]))
          (6280776 'move' default_arg_last[6280774](6280779 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6280926]))
          val default_arg_shouldHalt[6280781]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
          const-val _return_tmp_[6280783]:bool[19] "dead after last mention" "temp"
          const-val low[6280933]:int(64)[10] "temp"
          (6280938 'move' low[6280933](6280935 '.v' _iterator[5956014] F0_low[6835591]))
          const-val high[6280940]:int(64)[10] "temp"
          (6280945 'move' high[6280940](6280942 '.v' _iterator[5956014] F1_high[6835595]))
          (6280785 'move' _return_tmp_[6280783](6280788 call chpl_checkIfRangeIterWillOverflow[1518856] low[6280933] high[6280940] 1 default_arg_first[6280767] default_arg_last[6280774] 1))
          CForLoop[6280795]
          {
            const-val yret[6280812]:int(64)[10] "dead after last mention" "YVV" "temp"
            (6280814 'move' yret[6280812] i[6280752])
            const-val _yieldedIndex[6280828]:int(64)[10] "temp"
            (6280917 'move' _yieldedIndex[6280828] i[6280752])
            {
              const-val i[6280830]:int(64)[10] "const" "index var" "insert auto destroy"
              (6280832 'move' i[6280830] _yieldedIndex[6280828])
              const-val yret[6280835]:int(64)[10] "dead after last mention" "YVV" "temp"
              (6280837 'move' yret[6280835] _yieldedIndex[6280828])
              const-val _yieldedIndex[6280840]:int(64)[10] "temp"
              (6280842 'move' _yieldedIndex[6280840] _yieldedIndex[6280828])
              {
                const-val i[6280846]:int(64)[10] "const" "index var" "insert auto destroy"
                (6280848 'move' i[6280846] _yieldedIndex[6280840])
                {
                  ref call_tmp[6280852]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                  (6280854 'move' call_tmp[6280852](6280857 call this[1924675] DBM[365829] i[6280846]))
                  const-val call_tmp[6280860]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (6280862 'move' call_tmp[6280860](6280865 call -[1487343] i[6280846]))
                  const-ref call_tmp[6280867]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                  (6280869 'move' call_tmp[6280867](6280872 call this[1924675] DBM[365829] call_tmp[6280860]))
                  const-val call_tmp[6280875]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (6280877 'move' call_tmp[6280875](6280880 call -[1487343] i[6280846]))
                  const-ref call_tmp[6280882]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                  (6280884 'move' call_tmp[6280882](6280887 call this[1924675] DAYS_IN_MONTH[365463] call_tmp[6280875]))
                  const-val call_tmp[6280890]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6280892]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (6280894 'move' coerce_tmp[6280892](6280896 'deref' call_tmp[6280867]))
                  const-val coerce_tmp[6280898]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (6280900 'move' coerce_tmp[6280898](6280902 'deref' call_tmp[6280882]))
                  (6280904 'move' call_tmp[6280890](6280907 call +[56587] coerce_tmp[6280892] coerce_tmp[6280898]))
                  (6280911 call =[52229] call_tmp[6280852] call_tmp[6280890])
                }
                label _continueLabel[6280914]
              }
            }
            {
              const-val low[6280947]:int(64)[10] "temp"
              (6280952 'move' low[6280947](6280949 '.v' _iterator[5956014] F0_low[6835591]))
              (6280797 '=' i[6280752] low[6280947])
            }
            {
              const-val high[6280954]:int(64)[10] "temp"
              (6280959 'move' high[6280954](6280956 '.v' _iterator[5956014] F1_high[6835595]))
              (6280801 '<=' i[6280752] high[6280954])
            }
            {
              val call_tmp[6280805]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6280807]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              (6280809 '+=' i[6280752] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[6280824]
        }
        (5956063 call _freeIterator[1519714] _iterator[5956014])
        label _endchpl_direct_range_iter[5956065]
      }
      label _breakLabel[365872]
      (5611053 call _freeIterator[1924591] _iterator[365867])
    }
    (639198 'move' ret[639193] DBM[365829])
    gotoReturn _end_init_days_before_month[639191] _end_init_days_before_month[639191]
    label _end_init_days_before_month[639191]
    (5545822 '=' _retArg[5545820] ret[639193])
    (5545824 return _void[46])
  }
  function daysBeforeYear[365906](const in arg year[365909]:int(64)[10]) : int(64)[10] "private" "resolved"
  {
    val ret[639204]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[982406]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (982409 'move' call_tmp[982406](365915 call -[1487343] year[365909]))
    const-val y[365914]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (657036 'move' y[365914] call_tmp[982406])
    const-val call_tmp[982411]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982414 'move' call_tmp[982411](365928 call *[1932670] y[365914]))
    const-val call_tmp[982416]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982419 'move' call_tmp[982416](365934 call /[1932702] y[365914]))
    const-val call_tmp[982421]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982424 'move' call_tmp[982421](365926 call +[56587] call_tmp[982411] call_tmp[982416]))
    const-val call_tmp[982426]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982429 'move' call_tmp[982426](365938 call /[1932775] y[365914]))
    const-val call_tmp[982431]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982434 'move' call_tmp[982431](365924 call -[57305] call_tmp[982421] call_tmp[982426]))
    const-val call_tmp[982436]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982439 'move' call_tmp[982436](365942 call /[1932848] y[365914]))
    const-val call_tmp[982441]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982444 'move' call_tmp[982441](365922 call +[56587] call_tmp[982431] call_tmp[982436]))
    (639209 'move' ret[639204] call_tmp[982441])
    gotoReturn _end_daysBeforeYear[639202] _end_daysBeforeYear[639202]
    label _end_daysBeforeYear[639202]
    (639206 return ret[639204])
  }
  function isLeapYear[366291](const in arg year[366294]:int(64)[10]) : bool[19] "resolved"
  {
    val ret[639249]:bool[19] "dead after last mention" "RVV" "temp"
    const-val tmp[506229]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[982696]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (982699 'move' call_tmp[982696](366304 call %[1930831] year[366294]))
    (506240 'move' tmp[506229](366302 call ==[52746] call_tmp[982696] 0))
    val call_tmp[982701]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[712802]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[712803]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[982706]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982709 'move' call_tmp[982706] tmp[506229])
    (712808 'move' tmp[712803] call_tmp[982706])
    if tmp[712803]
    {
      const-val tmp[506250]:bool[19] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[982711]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (982714 'move' call_tmp[982711](366313 call %[1931131] year[366294]))
      (506261 'move' tmp[506250](366311 call !=[53220] call_tmp[982711] 0))
      val call_tmp[982716]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[712775]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[712776]:bool[19] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[982721]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (982724 'move' call_tmp[982721] tmp[506250])
      (712781 'move' tmp[712776] call_tmp[982721])
      if tmp[712776]
      {
        (712786 'move' tmp[712775] 1)
      }
      {
        const-val tmp[712788]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[982726]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (982729 'move' call_tmp[982726](366320 call %[1931429] year[366294]))
        const-val call_tmp[982731]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (982734 'move' call_tmp[982731](366318 call ==[52746] call_tmp[982726] 0))
        (712790 'move' tmp[712788] call_tmp[982731])
        (712795 'move' tmp[712775] tmp[712788])
      }
      const-val tmp[712810]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (712812 'move' tmp[712810] tmp[712775])
      (712817 'move' tmp[712802] tmp[712810])
    }
    {
      (712822 'move' tmp[712802] 0)
    }
    (1931676 '=' ret[639249] tmp[712802])
    (639251 return ret[639249])
  }
  function daysInMonth[366328](const in arg year[366331]:int(64)[10], const in arg month[366335]:int(64)[10], ref arg error_out[5498530]:Error[85511]) : int(64)[10] throws "resolved"
  {
    val ret[639259]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val tmp[506271]:bool[19] "dead after last mention" "maybe param" "temp"
    (506282 'move' tmp[506271](366352 call <[1469576] month[366335] 1))
    val call_tmp[982736]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[712829]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[712830]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[982741]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982744 'move' call_tmp[982741] tmp[506271])
    (712835 'move' tmp[712830] call_tmp[982741])
    if tmp[712830]
    {
      (712840 'move' tmp[712829] 1)
    }
    {
      const-val tmp[712842]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[982746]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (982749 'move' call_tmp[982746](366356 call >[55238] month[366335] 12))
      (712844 'move' tmp[712842] call_tmp[982746])
      (712849 'move' tmp[712829] tmp[712842])
    }
    const-val call_tmp[982751]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982754 'move' call_tmp[982751] tmp[712829])
    if call_tmp[982751]
    {
      const-val call_tmp[982756]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[1930518]:IllegalArgumentError[85616] "dead after last mention" "temp"
        (1930520 'move' new_temp[1930518](1930505 call _new[1475209] "month must be between 1 and 12"))
      }
      const-val initTemp[1930527]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
      (1930530 call init[1475364] initTemp[1930527] new_temp[1930518])
      (982759 'move' call_tmp[982756] initTemp[1930527])
      val call_tmp[982761]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1930544]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5547097]:owned Error[1498203] "temp"
      (1930546 call :[1498308] call_tmp[982756] ret_tmp[5547097])
      (5547100 'move' coerce_tmp[1930544] ret_tmp[5547097])
      const-val _formal_tmp_in_err[1930763]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1930768 'move' _formal_tmp_in_err[1930763] coerce_tmp[1930544])
      (982764 'move' call_tmp[982761](542501 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[1930763]))
      {
        val castedError[5498533]:Error[85511] "temp"
        (5498539 'move' castedError[5498533] call_tmp[982761])
        (5498541 '=' error_out[5498530] castedError[5498533])
        gotoErrorHandlingReturn _end_daysInMonth[639257] _end_daysInMonth[639257]
      }
    }
    const-val tmp[506292]:bool[19] "dead after last mention" "maybe param" "temp"
    (506303 'move' tmp[506292](366377 call ==[52746] month[366335] 2))
    val call_tmp[982766]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[712856]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[712857]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[982771]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982774 'move' call_tmp[982771] tmp[506292])
    (712862 'move' tmp[712857] call_tmp[982771])
    if tmp[712857]
    {
      const-val tmp[712864]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[982776]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (982779 'move' call_tmp[982776](366382 call isLeapYear[366291] year[366331]))
      (712866 'move' tmp[712864] call_tmp[982776])
      (712871 'move' tmp[712856] tmp[712864])
    }
    {
      (712876 'move' tmp[712856] 0)
    }
    const-val call_tmp[982781]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982784 'move' call_tmp[982781] tmp[712856])
    if call_tmp[982781]
    {
      (639265 'move' ret[639259] 29)
      gotoReturn _end_daysInMonth[639257] _end_daysInMonth[639257]
    }
    {
      const-ref call_tmp[982786]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
      (982789 'move' call_tmp[982786](366372 call this[1924675] DAYS_IN_MONTH[365463] month[366335]))
      (1931685 '=' ret[639259](1931683 'deref' call_tmp[982786]))
      gotoReturn _end_daysInMonth[639257] _end_daysInMonth[639257]
    }
    label _end_daysInMonth[639257]
    (639261 return ret[639259])
  }
  function _ref(date)[1930144].deinit[1452853](const  ref arg this[1452857]:_ref(date)[1930144]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (1452865 return _void[46])
  }
  type date[366497] val chpl_year[366401]:int(64)[10] val chpl_month[366399]:int(64)[10] val chpl_day[366396]:int(64)[10]
  function _ref(date)[1930144].init[366514](ref arg this[366517]:_ref(date)[1930144], const in arg year[366521]:int(64)[10], const in arg month[366525]:int(64)[10], const in arg day[366529]:int(64)[10]) : void[4] "method" "resolved" "no return value for void"
  {
    const-val tmp[506313]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[982837]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (506324 'move' tmp[506313](366548 call <[1469576] year[366521] 0))
    val call_tmp[982842]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[712883]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[712884]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[982847]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982850 'move' call_tmp[982847] tmp[506313])
    (712889 'move' tmp[712884] call_tmp[982847])
    if tmp[712884]
    {
      (712894 'move' tmp[712883] 1)
    }
    {
      const-val tmp[712896]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[982852]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      const-val call_tmp[982857]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (982860 'move' call_tmp[982857](366555 call >[55238] year[366521] 10000))
      (712898 'move' tmp[712896] call_tmp[982857])
      (712903 'move' tmp[712883] tmp[712896])
    }
    const-val call_tmp[982862]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982865 'move' call_tmp[982862] tmp[712883])
    if call_tmp[982862]
    {
      (366541 call initHalt[291] "year is out of the valid range")
    }
    const-val tmp[506334]:bool[19] "dead after last mention" "maybe param" "temp"
    (506345 'move' tmp[506334](366578 call <[1469576] month[366525] 1))
    val call_tmp[982867]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[712910]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[712911]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[982872]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982875 'move' call_tmp[982872] tmp[506334])
    (712916 'move' tmp[712911] call_tmp[982872])
    if tmp[712911]
    {
      (712921 'move' tmp[712910] 1)
    }
    {
      const-val tmp[712923]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[982877]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (982880 'move' call_tmp[982877](366582 call >[55238] month[366525] 12))
      (712925 'move' tmp[712923] call_tmp[982877])
      (712930 'move' tmp[712910] tmp[712923])
    }
    const-val call_tmp[982882]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982885 'move' call_tmp[982882] tmp[712910])
    if call_tmp[982882]
    {
      (366571 call initHalt[291] "month is out of the valid range")
    }
    const-val call_tmp[982887]:int(64)[10] "dead at end of block" "maybe param" "temp"
    val error[5498546]:Error[85511] "error variable" "temp"
    (5498548 'move' error[5498546] nil[32])
    (982890 'move' call_tmp[982887](366594 call daysInMonth[366328] year[366521] month[366525] error[5498546]))
    val errorExists[7297432]:bool[19] "temp"
    (7297437 'move' errorExists[7297432](7297434 '!=' error[5498546] nil[32]))
    if errorExists[7297432]
    {
      (5498551 call chpl_uncaught_error[87456] error[5498546])
    }
    const-val dim[366592]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (657060 'move' dim[366592] call_tmp[982887])
    const-val tmp[506355]:bool[19] "dead after last mention" "maybe param" "temp"
    (506366 'move' tmp[506355](366611 call <[1469576] day[366529] 1))
    val call_tmp[982892]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[712937]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[712938]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[982897]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982900 'move' call_tmp[982897] tmp[506355])
    (712943 'move' tmp[712938] call_tmp[982897])
    if tmp[712938]
    {
      (712948 'move' tmp[712937] 1)
    }
    {
      const-val tmp[712950]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[982902]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (982905 'move' call_tmp[982902](366615 call >[55238] day[366529] dim[366592]))
      (712952 'move' tmp[712950] call_tmp[982902])
      (712957 'move' tmp[712937] tmp[712950])
    }
    const-val call_tmp[982907]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (982910 'move' call_tmp[982907] tmp[712937])
    if call_tmp[982907]
    {
      (366604 call initHalt[291] "day is out of the valid range")
    }
    val chpl_year[539304]:int(64)[10] "dead after last mention" "temp"
    (539307 'move' chpl_year[539304] year[366521])
    (539309 '.=' this[366517] chpl_year[366401] chpl_year[539304])
    val chpl_month[539313]:int(64)[10] "dead after last mention" "temp"
    (539317 'move' chpl_month[539313] month[366525])
    (539319 '.=' this[366517] chpl_month[366399] chpl_month[539313])
    val chpl_day[539326]:int(64)[10] "dead after last mention" "temp"
    (539330 'move' chpl_day[539326] day[366529])
    (539332 '.=' this[366517] chpl_day[366396] chpl_day[539326])
    (639337 return _void[46])
  }
  type time[368470] val chpl_hour[368335]:int(64)[10] val chpl_minute[368333]:int(64)[10] val chpl_second[368331]:int(64)[10] val chpl_microsecond[368328]:int(64)[10] val chpl_tz[368339]:shared Timezone?[1931771]
  function _ref(time)[1931712].init[368663](ref arg this[368666]:_ref(time)[1931712], const in arg hour[368671]:int(64)[10], const in arg minute[368677]:int(64)[10], const in arg second[368683]:int(64)[10], const in arg microsecond[368689]:int(64)[10]) : void[4] "method" "resolved" "no return value for void"
  {
    const-val tmp[506523]:bool[19] "dead after last mention" "maybe param" "temp"
    (506534 'move' tmp[506523](368705 call <[1469576] hour[368671] 0))
    val call_tmp[984399]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[713257]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[713258]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[984404]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984407 'move' call_tmp[984404] tmp[506523])
    (713263 'move' tmp[713258] call_tmp[984404])
    if tmp[713258]
    {
      (713268 'move' tmp[713257] 1)
    }
    {
      const-val tmp[713270]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[984409]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (984412 'move' call_tmp[984409](368709 call >=[1931851] hour[368671]))
      (713272 'move' tmp[713270] call_tmp[984409])
      (713277 'move' tmp[713257] tmp[713270])
    }
    const-val call_tmp[984414]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984417 'move' call_tmp[984414] tmp[713257])
    if call_tmp[984414]
    {
      (368700 call initHalt[291] "hour out of range")
    }
    const-val tmp[506544]:bool[19] "dead after last mention" "maybe param" "temp"
    (506555 'move' tmp[506544](368727 call <[1469576] minute[368677] 0))
    val call_tmp[984419]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[713284]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[713285]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[984424]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984427 'move' call_tmp[984424] tmp[506544])
    (713290 'move' tmp[713285] call_tmp[984424])
    if tmp[713285]
    {
      (713295 'move' tmp[713284] 1)
    }
    {
      const-val tmp[713297]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[984429]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (984432 'move' call_tmp[984429](368731 call >=[1931903] minute[368677]))
      (713299 'move' tmp[713297] call_tmp[984429])
      (713304 'move' tmp[713284] tmp[713297])
    }
    const-val call_tmp[984434]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984437 'move' call_tmp[984434] tmp[713284])
    if call_tmp[984434]
    {
      (368722 call initHalt[291] "minute out of range")
    }
    const-val tmp[506565]:bool[19] "dead after last mention" "maybe param" "temp"
    (506576 'move' tmp[506565](368749 call <[1469576] second[368683] 0))
    val call_tmp[984439]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[713311]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[713312]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[984444]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984447 'move' call_tmp[984444] tmp[506565])
    (713317 'move' tmp[713312] call_tmp[984444])
    if tmp[713312]
    {
      (713322 'move' tmp[713311] 1)
    }
    {
      const-val tmp[713324]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[984449]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (984452 'move' call_tmp[984449](368753 call >=[1931903] second[368683]))
      (713326 'move' tmp[713324] call_tmp[984449])
      (713331 'move' tmp[713311] tmp[713324])
    }
    const-val call_tmp[984454]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984457 'move' call_tmp[984454] tmp[713311])
    if call_tmp[984454]
    {
      (368744 call initHalt[291] "second out of range")
    }
    const-val tmp[506586]:bool[19] "dead after last mention" "maybe param" "temp"
    (506597 'move' tmp[506586](368771 call <[1469576] microsecond[368689] 0))
    val call_tmp[984459]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[713338]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[713339]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[984464]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984467 'move' call_tmp[984464] tmp[506586])
    (713344 'move' tmp[713339] call_tmp[984464])
    if tmp[713339]
    {
      (713349 'move' tmp[713338] 1)
    }
    {
      const-val tmp[713351]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[984469]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (984472 'move' call_tmp[984469](368775 call >=[1931961] microsecond[368689]))
      (713353 'move' tmp[713351] call_tmp[984469])
      (713358 'move' tmp[713338] tmp[713351])
    }
    const-val call_tmp[984474]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (984477 'move' call_tmp[984474] tmp[713338])
    if call_tmp[984474]
    {
      (368766 call initHalt[291] "microsecond out of range")
    }
    val chpl_hour[539398]:int(64)[10] "dead after last mention" "temp"
    (539401 'move' chpl_hour[539398] hour[368671])
    (539403 '.=' this[368666] chpl_hour[368335] chpl_hour[539398])
    val chpl_minute[539407]:int(64)[10] "dead after last mention" "temp"
    (539411 'move' chpl_minute[539407] minute[368677])
    (539413 '.=' this[368666] chpl_minute[368333] chpl_minute[539407])
    val chpl_second[539420]:int(64)[10] "dead after last mention" "temp"
    (539424 'move' chpl_second[539420] second[368683])
    (539426 '.=' this[368666] chpl_second[368331] chpl_second[539420])
    val chpl_microsecond[539433]:int(64)[10] "dead after last mention" "temp"
    (539437 'move' chpl_microsecond[539433] microsecond[368689])
    (539439 '.=' this[368666] chpl_microsecond[368328] chpl_microsecond[539433])
    val call_tmp[984494]:shared Timezone?[1931771] "dead after last mention" "maybe param" "temp" "type variable"
    val chpl_tz[539446]:shared Timezone?[1931771] "dead after last mention" "temp"
    (539451 call init=[1932008] chpl_tz[539446] nil[32])
    (539453 '.=' this[368666] chpl_tz[368339] chpl_tz[539446])
    (639680 return _void[46])
  }
  function _ref(time)[1931712].deinit[368821](const  ref arg this[368824]:_ref(time)[1931712]) : void[4] "destructor" "method" "resolved" "no return value for void"
  {
    label _enddeinit[5525700]
    ref _field_destructor_tmp_[5525698]:_ref(shared Timezone?)[1931780] "temp"
    (5525705 'move' _field_destructor_tmp_[5525698](5525702 '.' this[368824] chpl_tz[368339]))
    (5525707 call deinit[4025394] _field_destructor_tmp_[5525698])
    (639682 return _void[46])
  }
  function _ref(dateTime)[1930109].deinit[1454174](const  ref arg this[1454178]:_ref(dateTime)[1930109]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5526770]
    const-ref _field_destructor_tmp_[5526768]:_ref(time)[1931712] "temp"
    (5526775 'move' _field_destructor_tmp_[5526768](5526772 '.' this[1454178] chpl_time[370987]))
    (5526777 call deinit[368821] _field_destructor_tmp_[5526768])
    const-ref _field_destructor_tmp_[5526780]:_ref(date)[1930144] "temp"
    (5526785 'move' _field_destructor_tmp_[5526780](5526782 '.' this[1454178] chpl_date[370982]))
    (5526787 call deinit[1452853] _field_destructor_tmp_[5526780])
    (1454186 return _void[46])
  }
  type dateTime[371188] val chpl_date[370982]:date[366497] val chpl_time[370987]:time[368470]
  function _ref(dateTime)[1930109].init[371270](ref arg this[371273]:_ref(dateTime)[1930109], const in arg year[371277]:int(64)[10], const in arg month[371281]:int(64)[10], const in arg day[371285]:int(64)[10], const in arg hour[371290]:int(64)[10], const in arg minute[371296]:int(64)[10], const in arg second[371302]:int(64)[10], const in arg microsecond[371308]:int(64)[10]) : void[4] "method" "resolved" "no return value for void"
  {
    const-val call_tmp[986778]:date[366497] "dead after last mention" "maybe param" "temp"
    const-val initTemp[1930161]:date[366497] "dead after last mention" "temp"
    (1930164 call init[366514] initTemp[1930161] year[371277] month[371281] day[371285])
    (986781 'move' call_tmp[986778] initTemp[1930161])
    val chpl_date[539494]:date[366497] "dead after last mention" "temp"
    (539497 'move' chpl_date[539494] call_tmp[986778])
    (539499 '.=' this[371273] chpl_date[370982] chpl_date[539494])
    const-val call_tmp[986783]:time[368470] "dead after last mention" "maybe param" "temp"
    const-val initTemp[1931812]:time[368470] "dead after last mention" "temp"
    (1931815 call init[368663] initTemp[1931812] hour[371290] minute[371296] second[371302] microsecond[371308])
    (986786 'move' call_tmp[986783] initTemp[1931812])
    val chpl_time[539503]:time[368470] "dead after last mention" "temp"
    (539506 'move' chpl_time[539503] call_tmp[986783])
    (539508 '.=' this[371273] chpl_time[370987] chpl_time[539503])
    (640062 return _void[46])
  }
  function Timezone[376793].deinit[1455400](const in arg this[1455404]:Timezone[376793]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[5526795]
    val _parent_destructor_tmp_[5526790]:RootClass[236] "temp"
    (5526797 'move' _parent_destructor_tmp_[5526790](5526791 'cast' RootClass[236] this[1455404]))
    (5526799 call deinit[1004261] _parent_destructor_tmp_[5526790])
    (1455412 return _void[46])
  }
  type Timezone[376793] val super[397978]:RootClass[236] "super class"
  function _ref(stopwatch)[3813091].start[376888](ref arg this[376890]:_ref(stopwatch)[3813091]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val ret[640860]:void[4] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[991948]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (991951 'move' call_tmp[991948](464996 call running[1455509] this[376890]))
    const-val call_tmp[991953]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3813275]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3813279 'move' coerce_tmp[3813275](3813277 'deref' call_tmp[991948]))
    (991956 'move' call_tmp[991953](376912 call ![63126] coerce_tmp[3813275]))
    const-val call_tmp[991958]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (991961 'move' call_tmp[991958] call_tmp[991953])
    if call_tmp[991958]
    {
      ref call_tmp[991965]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (991968 'move' call_tmp[991965](464986 call running[1455509] this[376890]))
      (376897 call =[52153] call_tmp[991965] 1)
      ref call_tmp[991972]:_ref(_timevalue)[3813123] "dead after last mention" "maybe param" "temp"
      (991975 'move' call_tmp[991972](464991 call time[1455457] this[376890]))
      const-val call_tmp[991977]:_timevalue[365350] "dead after last mention" "expr temp" "maybe param" "temp"
      (991980 'move' call_tmp[991977](376905 call chpl_now_timevalue[365358]))
      (376901 call =[1441151] call_tmp[991972] call_tmp[991977])
    }
    {
      (376908 call warning[88179] "start called on a timer that has not been stopped")
    }
    (640862 return ret[640860])
  }
  function _ref(stopwatch)[3813091].stop[376922](ref arg this[376924]:_ref(stopwatch)[3813091]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val ret[640866]:void[4] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[991984]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (991987 'move' call_tmp[991984](465018 call running[1455509] this[376924]))
    const-val call_tmp[991989]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3823780]:bool[19] "dead after last mention" "const" "temp"
    (3823782 'move' tmp[3823780](3823784 'deref' call_tmp[991984]))
    (991992 'move' call_tmp[991989] tmp[3823780])
    if call_tmp[991989]
    {
      const-val call_tmp[991994]:_timevalue[365350] "dead after last mention" "maybe param" "temp"
      (991997 'move' call_tmp[991994](376935 call chpl_now_timevalue[365358]))
      const-val time2[376932]:_timevalue[365350] "dead at end of block" "insert auto destroy"
      (657458 'move' time2[376932](3823787 call chpl__initCopy[3823683] call_tmp[991994] 0))
      ref call_tmp[992001]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
      (992004 'move' call_tmp[992001](465002 call accumulated[1455483] this[376924]))
      const-ref call_tmp[992008]:_ref(_timevalue)[3813123] "dead after last mention" "maybe param" "temp"
      (992011 'move' call_tmp[992008](465008 call time[1455457] this[376924]))
      const-val call_tmp[992013]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3823793]:_timevalue[365350] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3823797 'move' coerce_tmp[3823793](3823795 'deref' call_tmp[992008]))
      (992016 'move' call_tmp[992013](376942 call _diff_time[377051] time2[376932] coerce_tmp[3823793]))
      (376938 call +=[72310] call_tmp[992001] call_tmp[992013])
      ref call_tmp[992020]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (992023 'move' call_tmp[992020](465013 call running[1455509] this[376924]))
      (376945 call =[52153] call_tmp[992020] 0)
    }
    {
      (376951 call warning[88179] "stop called on a timer that has not been started")
    }
    (640868 return ret[640866])
  }
  function _ref(stopwatch)[3813091].elapsed[377007](const  ref arg this[377009]:_ref(stopwatch)[3813091]) : real(64)[13] "method" "primary method" "resolved"
  {
    val ret[640884]:real(64)[13] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[992064]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (992067 'move' call_tmp[992064](465066 call running[1455509] this[377009]))
    const-val call_tmp[992069]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3823673]:bool[19] "dead after last mention" "const" "temp"
    (3823675 'move' tmp[3823673](3823677 'deref' call_tmp[992064]))
    (992072 'move' call_tmp[992069] tmp[3823673])
    if call_tmp[992069]
    {
      const-val call_tmp[992074]:_timevalue[365350] "dead after last mention" "maybe param" "temp"
      (992077 'move' call_tmp[992074](377020 call chpl_now_timevalue[365358]))
      const-val time2[377017]:_timevalue[365350] "dead at end of block" "insert auto destroy"
      (657460 'move' time2[377017](3823680 call chpl__initCopy[3823683] call_tmp[992074] 0))
      const-ref call_tmp[992081]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
      (992084 'move' call_tmp[992081](465050 call accumulated[1455483] this[377009]))
      const-ref call_tmp[992088]:_ref(_timevalue)[3813123] "dead after last mention" "maybe param" "temp"
      (992091 'move' call_tmp[992088](465056 call time[1455457] this[377009]))
      const-val call_tmp[992093]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3823706]:_timevalue[365350] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3823710 'move' coerce_tmp[3823706](3823708 'deref' call_tmp[992088]))
      (992096 'move' call_tmp[992093](377030 call _diff_time[377051] time2[377017] coerce_tmp[3823706]))
      const-val call_tmp[992098]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3823756]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3823760 'move' coerce_tmp[3823756](3823758 'deref' call_tmp[992081]))
      (992101 'move' call_tmp[992098](377026 call +[56713] coerce_tmp[3823756] call_tmp[992093]))
      const-val call_tmp[992103]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (992106 'move' call_tmp[992103](377024 call /[59825] call_tmp[992098] 1e+06))
      (3823773 '=' ret[640884] call_tmp[992103])
      gotoReturn _end_elapsed[640882] _end_elapsed[640882]
    }
    {
      const-ref call_tmp[992110]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
      (992113 'move' call_tmp[992110](465061 call accumulated[1455483] this[377009]))
      const-val call_tmp[992115]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3823765]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3823769 'move' coerce_tmp[3823765](3823767 'deref' call_tmp[992110]))
      (992118 'move' call_tmp[992115](377036 call /[59825] coerce_tmp[3823765] 1e+06))
      (3823776 '=' ret[640884] call_tmp[992115])
      gotoReturn _end_elapsed[640882] _end_elapsed[640882]
    }
    label _end_elapsed[640882]
    (640886 return ret[640884])
  }
  function _ref(stopwatch)[3813091].time[1455457](ref arg this[1455461]:_ref(stopwatch)[3813091]) ref : _ref(_timevalue)[3813123] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1455471]:_ref(_timevalue)[3813123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1455478]:_ref(_timevalue)[3813123] "dead after last mention" "maybe param" "temp"
    (1455481 'move' call_tmp[1455478](1455465 '.' this[1455461] time[376844]))
    (1455476 'move' ret[1455471] call_tmp[1455478])
    (1455473 return ret[1455471])
  }
  function _ref(stopwatch)[3813091].accumulated[1455483](ref arg this[1455487]:_ref(stopwatch)[3813091]) ref : _ref(real(64))[1465874] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1455497]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    ref call_tmp[1455504]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (1455507 'move' call_tmp[1455504](1455491 '.' this[1455487] accumulated[376851]))
    (1455502 'move' ret[1455497] call_tmp[1455504])
    (1455499 return ret[1455497])
  }
  function _ref(stopwatch)[3813091].running[1455509](ref arg this[1455513]:_ref(stopwatch)[3813091]) ref : _ref(bool)[1466299] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1455523]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[1455530]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (1455533 'move' call_tmp[1455530](1455517 '.' this[1455513] running[376857]))
    (1455528 'move' ret[1455523] call_tmp[1455530])
    (1455525 return ret[1455523])
  }
  function _ref(stopwatch)[3813091].init[1455535](ref arg this[1455538]:_ref(stopwatch)[3813091], in arg time[1455541]:_timevalue[365350], in arg accumulated[1455555]:real(64)[13], in arg running[1455568]:bool[19]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    (1455582 '.=' this[1455538] time[376844] time[1455541])
    (1455585 '.=' this[1455538] accumulated[376851] accumulated[1455555])
    (1455588 '.=' this[1455538] running[376857] running[1455568])
    (1455593 return _void[46])
  }
  function init_default_running[3813233]() : bool[19] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free" "was compiler generated"
  {
    val ret[3813235]:bool[19] "dead after last mention" "RVV" "maybe param" "temp"
    const-val running[3813240]:bool[19] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[3813244]:bool[19] "dead after last mention" "temp"
    val _formal_type[3813246]:bool[19] "dead after last mention" "temp" "type variable"
    (3813254 'move' tmp[3813244] 0)
    (3813257 'move' running[3813240] tmp[3813244])
    (3813262 'move' ret[3813235] running[3813240])
    (3813238 return ret[3813235])
  }
  function init_default_accumulated[3813193]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free" "was compiler generated"
  {
    val ret[3813195]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val accumulated[3813200]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[3813204]:real(64)[13] "dead after last mention" "temp"
    val _formal_type[3813206]:real(64)[13] "dead after last mention" "temp" "type variable"
    (3813214 'move' tmp[3813204] 0.0)
    (3813217 'move' accumulated[3813200] tmp[3813204])
    (3813222 'move' ret[3813195] accumulated[3813200])
    (3813198 return ret[3813195])
  }
  function init_default_time[3813144]() : _timevalue[365350] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[3813146]:_timevalue[365350] "dead after last mention" "RVV" "maybe param" "temp"
    const-val time[3813151]:_timevalue[365350] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[3813156]:_timevalue[365350] "dead after last mention" "temp"
    val _formal_type[3813158]:_timevalue[365350] "dead after last mention" "temp" "type variable"
    const-val call_tmp[3813172]:_timevalue[365350] "dead after last mention" "expr temp" "maybe param" "temp"
    (3813175 'move' call_tmp[3813172](3813155 call chpl_null_timevalue[365352]))
    (3813183 '=' tmp[3813156] call_tmp[3813172])
    (3813169 'move' time[3813151] tmp[3813156])
    (3813178 'move' ret[3813146] time[3813151])
    (3813149 return ret[3813146])
  }
  function _ref(stopwatch)[3813091].deinit[1455861](const  ref arg this[1455865]:_ref(stopwatch)[3813091]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (1455873 return _void[46])
  }
  type stopwatch[377049] val time[376844]:_timevalue[365350] val accumulated[376851]:real(64)[13] val running[376857]:bool[19]
  function _diff_time[377051](const in arg t1[377054]:_timevalue[365350], const in arg t2[377058]:_timevalue[365350]) : real(64)[13] "inline" "private" "resolved"
  {
    val ret[640902]:real(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[992120]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (992123 'move' call_tmp[992120](377089 call chpl_timevalue_seconds[377062] t1[377054]))
    const-val s1[377087]:int(64)[10] "dead at end of block" "insert auto destroy"
    (657462 'move' s1[377087] call_tmp[992120])
    const-val call_tmp[992125]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (992128 'move' call_tmp[992125](377096 call chpl_timevalue_microseconds[377074] t1[377054]))
    const-val us1[377094]:int(64)[10] "dead at end of block" "insert auto destroy"
    (657464 'move' us1[377094] call_tmp[992125])
    const-val call_tmp[992130]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (992133 'move' call_tmp[992130](377103 call chpl_timevalue_seconds[377062] t2[377058]))
    const-val s2[377101]:int(64)[10] "dead at end of block" "insert auto destroy"
    (657466 'move' s2[377101] call_tmp[992130])
    const-val call_tmp[992135]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (992138 'move' call_tmp[992135](377110 call chpl_timevalue_microseconds[377074] t2[377058]))
    const-val us2[377108]:int(64)[10] "dead at end of block" "insert auto destroy"
    (657468 'move' us2[377108] call_tmp[992135])
    const-val call_tmp[992140]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3823719]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3823725 'move' coerce_tmp[3823719](3823721 'cast' real(64)[13] s1[377087]))
    (992143 'move' call_tmp[992140](377119 call *[58921] coerce_tmp[3823719] 1e+06))
    const-val call_tmp[992145]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3823728]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3823734 'move' coerce_tmp[3823728](3823730 'cast' real(64)[13] us1[377094]))
    (992148 'move' call_tmp[992145](377117 call +[56713] call_tmp[992140] coerce_tmp[3823728]))
    const-val call_tmp[992150]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3823737]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3823743 'move' coerce_tmp[3823737](3823739 'cast' real(64)[13] s2[377101]))
    (992153 'move' call_tmp[992150](377126 call *[58921] coerce_tmp[3823737] 1e+06))
    const-val call_tmp[992155]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3823746]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3823752 'move' coerce_tmp[3823746](3823748 'cast' real(64)[13] us2[377108]))
    (992158 'move' call_tmp[992155](377124 call +[56713] call_tmp[992150] coerce_tmp[3823746]))
    const-val call_tmp[992160]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (992163 'move' call_tmp[992160](377115 call -[57431] call_tmp[992145] call_tmp[992155]))
    (640907 'move' ret[640902] call_tmp[992160])
    gotoReturn _end__diff_time[640900] _end__diff_time[640900]
    label _end__diff_time[640900]
    (640904 return ret[640902])
  }
  function chpl_timevalue_seconds[377062](const in arg t[377065]:_timevalue[365350]) : int(64)[10] "extern" "local args" "no fn body" "resolved"
  {
  }
  function chpl_timevalue_microseconds[377074](const in arg t[377077]:_timevalue[365350]) : int(64)[10] "extern" "local args" "no fn body" "resolved"
  {
  }
  function chpl__deinit_Time[5658859]() : void[4] "resolved"
  {
    label _endchpl__deinit_Time[5658865]
    (5658873 call chpl__autoDestroy[3927079] unixEpoch[365493])
    (5658870 call chpl__autoDestroy[4025029] DAYS_BEFORE_MONTH[365487])
    (5658867 call chpl__autoDestroy[4025029] DAYS_IN_MONTH[365463])
    (5658862 return _void[46])
  }
}
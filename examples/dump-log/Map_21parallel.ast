AST dump for Map after pass parallel.
Module use list: ChapelStandard ChapelLocks ChapelHashtable HaltWrappers IO FormattedIO Reflection 

{
  function chpl__init_Map[468660]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (637521 return _void[46])
  }
  function _checkKeyAndValType[1935939]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5478499]:Module(real(32))[1935500] "temp"
    val _formal_type_tmp_[5478497]:string[244] "temp"
    val call_tmp[1935951]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1935958]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1936080]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1936087]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1936209 return _void[46])
  }
  function _checkKeyAndValType[3312968]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5479845]:int(64)[10] "temp"
    val _formal_type_tmp_[5479843]:string[244] "temp"
    val call_tmp[3312980]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3312987]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3313109]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3313116]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3313238 return _void[46])
  }
  function _checkKeyAndValType[3339425]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5479889]:string[244] "temp"
    val _formal_type_tmp_[5479887]:string[244] "temp"
    val call_tmp[3339437]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3339444]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3339566]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3339573]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3339695 return _void[46])
  }
  function _checkKeyAndValType[3354484]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5479932]:owned ModuleSpecification?[3283604] "temp"
    val _formal_type_tmp_[5479930]:string[244] "temp"
    val call_tmp[3354496]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3354503]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3354625]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3354632]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3354754 return _void[46])
  }
  function _checkKeyAndValType[3391494]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5480027]:shared Module(real(32))[1955038] "temp"
    val _formal_type_tmp_[5480025]:string[244] "temp"
    val call_tmp[3391506]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3391513]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3391635]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3391642]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3391764 return _void[46])
  }
  function _checkKeyAndValType[3828211]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480524]:Module(real(64))[3405063] "temp"
    val _formal_type_tmp_[5480522]:string[244] "temp"
    val call_tmp[3828223]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3828230]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3828352]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3828359]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3828481 return _void[46])
  }
  function _ref(map(string,Module(real(32)),false))[1941017]._enter[3256798](const  ref arg this[3256802]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3256808]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3256816]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3256839 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803]._enter[3301095](const  ref arg this[3301099]:_ref(map(string,int(64),false))[3288803]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3301105]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3301113]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3301136 return _void[46])
  }
  function _ref(map(string,string,false))[3283395]._enter[3344461](const  ref arg this[3344465]:_ref(map(string,string,false))[3283395]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3344471]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3344479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3344502 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._enter[3359546](const  ref arg this[3359550]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3359556]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3359564]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3359587 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869]._enter[3400638](const  ref arg this[3400642]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3400648]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3400656]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3400679 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193]._enter[3860187](const  ref arg this[3860191]:_ref(map(string,Module(real(64)),false))[3405193]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[3860197]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3860205]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3860228 return _void[46])
  }
  function _ref(map(string,Module(real(32)),false))[1941017]._leave[3256899](const  ref arg this[3256903]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3256909]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3256917]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3256940 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803]._leave[3301196](const  ref arg this[3301200]:_ref(map(string,int(64),false))[3288803]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3301206]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3301214]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3301237 return _void[46])
  }
  function _ref(map(string,string,false))[3283395]._leave[3344562](const  ref arg this[3344566]:_ref(map(string,string,false))[3283395]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3344572]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3344580]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3344603 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._leave[3359647](const  ref arg this[3359651]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3359657]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3359665]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3359688 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869]._leave[3400739](const  ref arg this[3400743]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3400749]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3400757]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3400780 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193]._leave[3860288](const  ref arg this[3860292]:_ref(map(string,Module(real(64)),false))[3405193]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[3860298]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3860306]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3860329 return _void[46])
  }
  function map(string,Module(real(32)),false)[1936356].init[1935675](ref arg this[1935679]:map(string,Module(real(32)),false)[1936356], const in arg resizeThreshold[1935689]:real(64)[13], const in arg initialCapacity[1935695]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5478495]:Module(real(32))[1935500] "temp"
    val _formal_type_tmp_[5478493]:string[244] "temp"
    (1935704 call _checkKeyAndValType[1935939])
    val keyType[1935708]:string[244] "dead after last mention" "temp" "type variable"
    val valType[1935718]:Module(real(32))[1935500] "dead after last mention" "temp" "type variable"
    val parSafe[1935728]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[1935738]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[1936365]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1936371 'move' coerce_tmp[1936365](1936367 'cast' real(64)[13] 0))
    (1935740 'move' tmp[1935738](1935743 call <=[54490] resizeThreshold[1935689] coerce_tmp[1936365]))
    val call_tmp[1935746]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1935759]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1935761]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1935763]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1935765 'move' call_tmp[1935763] tmp[1935738])
    (1935770 'move' tmp[1935761] call_tmp[1935763])
    if tmp[1935761]
    {
      (1935777 'move' tmp[1935759] 1)
    }
    {
      const-val tmp[1935783]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1935785]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1936377]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1936383 'move' coerce_tmp[1936377](1936379 'cast' real(64)[13] 1))
      (1935787 'move' call_tmp[1935785](1935790 call >=[54753] resizeThreshold[1935689] coerce_tmp[1936377]))
      (1935793 'move' tmp[1935783] call_tmp[1935785])
      (1935798 'move' tmp[1935759] tmp[1935783])
    }
    const-val call_tmp[1935804]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1935806 'move' call_tmp[1935804] tmp[1935759])
    if call_tmp[1935804]
    {
      (1935814 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[1935818]:real(64)[13] "dead after last mention" "temp"
      (1935820 'move' resizeThreshold[1935818] 0.5)
      (1935823 '.=' this[1935679] resizeThreshold[1936338] resizeThreshold[1935818])
    }
    {
      val resizeThreshold[1935829]:real(64)[13] "dead after last mention" "temp"
      (1935831 'move' resizeThreshold[1935829] resizeThreshold[1935689])
      (1935834 '.=' this[1935679] resizeThreshold[1936338] resizeThreshold[1935829])
    }
    const-ref call_tmp[1935840]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (1935842 'move' call_tmp[1935840](1935844 '.' this[1935679] resizeThreshold[1936338]))
    const-val call_tmp[1935847]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1941023]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[1949594]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1949598 'move' coerce_tmp[1949594](1949596 'deref' call_tmp[1935840]))
    const-val default_arg_rehashHelpers[1950019]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5557827]:owned chpl__rehashHelpers?[1941081] "temp"
    (1950021 call init_default_rehashHelpers[1949601] ret_tmp[5557827])
    (5557830 'move' default_arg_rehashHelpers[1950019] ret_tmp[5557827])
    (1941026 call init[1941108] initTemp[1941023] coerce_tmp[1949594] initialCapacity[1935695] default_arg_rehashHelpers[1950019])
    (1935849 'move' call_tmp[1935847] initTemp[1941023])
    val call_tmp[1935857]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1935864]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1935871]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "maybe param" "temp" "type variable"
    val table[1935879]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    (1935881 'move' table[1935879] call_tmp[1935847])
    (1935885 '.=' this[1935679] table[1936341] table[1935879])
    val tmp[1935894]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1935896]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1935936 return _void[46])
  }
  function init_default_resizeThreshold[1950079]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1950081]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[1950086]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1950090 'move' resizeThreshold[1950086] defaultHashTableResizeThreshold[209951])
    (1950093 'move' ret[1950081] resizeThreshold[1950086])
    (1950084 return ret[1950081])
  }
  function map(string,int(64),false)[3288794].init[3312704](ref arg this[3312708]:map(string,int(64),false)[3288794], const in arg resizeThreshold[3312718]:real(64)[13], const in arg initialCapacity[3312724]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5479841]:int(64)[10] "temp"
    val _formal_type_tmp_[5479839]:string[244] "temp"
    (3312733 call _checkKeyAndValType[3312968])
    val keyType[3312737]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3312747]:int(64)[10] "dead after last mention" "temp" "type variable"
    val parSafe[3312757]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3312767]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3313258]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3313264 'move' coerce_tmp[3313258](3313260 'cast' real(64)[13] 0))
    (3312769 'move' tmp[3312767](3312772 call <=[54490] resizeThreshold[3312718] coerce_tmp[3313258]))
    val call_tmp[3312775]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3312788]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3312790]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3312792]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312794 'move' call_tmp[3312792] tmp[3312767])
    (3312799 'move' tmp[3312790] call_tmp[3312792])
    if tmp[3312790]
    {
      (3312806 'move' tmp[3312788] 1)
    }
    {
      const-val tmp[3312812]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3312814]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3313270]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3313276 'move' coerce_tmp[3313270](3313272 'cast' real(64)[13] 1))
      (3312816 'move' call_tmp[3312814](3312819 call >=[54753] resizeThreshold[3312718] coerce_tmp[3313270]))
      (3312822 'move' tmp[3312812] call_tmp[3312814])
      (3312827 'move' tmp[3312788] tmp[3312812])
    }
    const-val call_tmp[3312833]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312835 'move' call_tmp[3312833] tmp[3312788])
    if call_tmp[3312833]
    {
      (3312843 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3312847]:real(64)[13] "dead after last mention" "temp"
      (3312849 'move' resizeThreshold[3312847] 0.5)
      (3312852 '.=' this[3312708] resizeThreshold[3288776] resizeThreshold[3312847])
    }
    {
      val resizeThreshold[3312858]:real(64)[13] "dead after last mention" "temp"
      (3312860 'move' resizeThreshold[3312858] resizeThreshold[3312718])
      (3312863 '.=' this[3312708] resizeThreshold[3288776] resizeThreshold[3312858])
    }
    const-ref call_tmp[3312869]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3312871 'move' call_tmp[3312869](3312873 '.' this[3312708] resizeThreshold[3288776]))
    const-val call_tmp[3312876]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3313283]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3313309]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3313313 'move' coerce_tmp[3313309](3313311 'deref' call_tmp[3312869]))
    const-val default_arg_rehashHelpers[3313316]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5588829]:owned chpl__rehashHelpers?[1941081] "temp"
    (3313318 call init_default_rehashHelpers[3310958] ret_tmp[5588829])
    (5588832 'move' default_arg_rehashHelpers[3313316] ret_tmp[5588829])
    (3313286 call init[3310554] initTemp[3313283] coerce_tmp[3313309] initialCapacity[3312724] default_arg_rehashHelpers[3313316])
    (3312878 'move' call_tmp[3312876] initTemp[3313283])
    val call_tmp[3312886]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3312893]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3312900]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3312908]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    (3312910 'move' table[3312908] call_tmp[3312876])
    (3312914 '.=' this[3312708] table[3288779] table[3312908])
    val tmp[3312923]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3312925]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3312965 return _void[46])
  }
  function init_default_resizeThreshold[3313349]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3313351]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3313356]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3313360 'move' resizeThreshold[3313356] defaultHashTableResizeThreshold[209951])
    (3313363 'move' ret[3313351] resizeThreshold[3313356])
    (3313354 return ret[3313351])
  }
  function map(string,shared Module(real(32)),false)[3391831].init[3391230](ref arg this[3391234]:map(string,shared Module(real(32)),false)[3391831], const in arg resizeThreshold[3391244]:real(64)[13], const in arg initialCapacity[3391250]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480023]:shared Module(real(32))[1955038] "temp"
    val _formal_type_tmp_[5480021]:string[244] "temp"
    (3391259 call _checkKeyAndValType[3391494])
    val keyType[3391263]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3391273]:shared Module(real(32))[1955038] "dead after last mention" "temp" "type variable"
    val parSafe[3391283]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3391293]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3391840]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3391846 'move' coerce_tmp[3391840](3391842 'cast' real(64)[13] 0))
    (3391295 'move' tmp[3391293](3391298 call <=[54490] resizeThreshold[3391244] coerce_tmp[3391840]))
    val call_tmp[3391301]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3391314]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3391316]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3391318]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3391320 'move' call_tmp[3391318] tmp[3391293])
    (3391325 'move' tmp[3391316] call_tmp[3391318])
    if tmp[3391316]
    {
      (3391332 'move' tmp[3391314] 1)
    }
    {
      const-val tmp[3391338]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3391340]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3391852]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3391858 'move' coerce_tmp[3391852](3391854 'cast' real(64)[13] 1))
      (3391342 'move' call_tmp[3391340](3391345 call >=[54753] resizeThreshold[3391244] coerce_tmp[3391852]))
      (3391348 'move' tmp[3391338] call_tmp[3391340])
      (3391353 'move' tmp[3391314] tmp[3391338])
    }
    const-val call_tmp[3391359]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3391361 'move' call_tmp[3391359] tmp[3391314])
    if call_tmp[3391359]
    {
      (3391369 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3391373]:real(64)[13] "dead after last mention" "temp"
      (3391375 'move' resizeThreshold[3391373] 0.5)
      (3391378 '.=' this[3391234] resizeThreshold[3391813] resizeThreshold[3391373])
    }
    {
      val resizeThreshold[3391384]:real(64)[13] "dead after last mention" "temp"
      (3391386 'move' resizeThreshold[3391384] resizeThreshold[3391244])
      (3391389 '.=' this[3391234] resizeThreshold[3391813] resizeThreshold[3391384])
    }
    const-ref call_tmp[3391395]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3391397 'move' call_tmp[3391395](3391399 '.' this[3391234] resizeThreshold[3391813]))
    const-val call_tmp[3391402]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3391875]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3395921]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3395925 'move' coerce_tmp[3395921](3395923 'deref' call_tmp[3391395]))
    const-val default_arg_rehashHelpers[3395965]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589746]:owned chpl__rehashHelpers?[1941081] "temp"
    (3395967 call init_default_rehashHelpers[3395928] ret_tmp[5589746])
    (5589749 'move' default_arg_rehashHelpers[3395965] ret_tmp[5589746])
    (3391878 call init[3391886] initTemp[3391875] coerce_tmp[3395921] initialCapacity[3391250] default_arg_rehashHelpers[3395965])
    (3391404 'move' call_tmp[3391402] initTemp[3391875])
    val call_tmp[3391412]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3391419]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3391426]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3391434]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    (3391436 'move' table[3391434] call_tmp[3391402])
    (3391440 '.=' this[3391234] table[3391816] table[3391434])
    val tmp[3391449]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3391451]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3391491 return _void[46])
  }
  function init_default_resizeThreshold[3396005]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3396007]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3396012]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3396016 'move' resizeThreshold[3396012] defaultHashTableResizeThreshold[209951])
    (3396019 'move' ret[3396007] resizeThreshold[3396012])
    (3396010 return ret[3396007])
  }
  function map(string,Module(real(64)),false)[3405184].init[3827947](ref arg this[3827951]:map(string,Module(real(64)),false)[3405184], const in arg resizeThreshold[3827961]:real(64)[13], const in arg initialCapacity[3827967]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480520]:Module(real(64))[3405063] "temp"
    val _formal_type_tmp_[5480518]:string[244] "temp"
    (3827976 call _checkKeyAndValType[3828211])
    val keyType[3827980]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3827990]:Module(real(64))[3405063] "dead after last mention" "temp" "type variable"
    val parSafe[3828000]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3828010]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3828527]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3828533 'move' coerce_tmp[3828527](3828529 'cast' real(64)[13] 0))
    (3828012 'move' tmp[3828010](3828015 call <=[54490] resizeThreshold[3827961] coerce_tmp[3828527]))
    val call_tmp[3828018]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3828031]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3828033]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3828035]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828037 'move' call_tmp[3828035] tmp[3828010])
    (3828042 'move' tmp[3828033] call_tmp[3828035])
    if tmp[3828033]
    {
      (3828049 'move' tmp[3828031] 1)
    }
    {
      const-val tmp[3828055]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3828057]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3828539]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3828545 'move' coerce_tmp[3828539](3828541 'cast' real(64)[13] 1))
      (3828059 'move' call_tmp[3828057](3828062 call >=[54753] resizeThreshold[3827961] coerce_tmp[3828539]))
      (3828065 'move' tmp[3828055] call_tmp[3828057])
      (3828070 'move' tmp[3828031] tmp[3828055])
    }
    const-val call_tmp[3828076]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828078 'move' call_tmp[3828076] tmp[3828031])
    if call_tmp[3828076]
    {
      (3828086 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3828090]:real(64)[13] "dead after last mention" "temp"
      (3828092 'move' resizeThreshold[3828090] 0.5)
      (3828095 '.=' this[3827951] resizeThreshold[3405166] resizeThreshold[3828090])
    }
    {
      val resizeThreshold[3828101]:real(64)[13] "dead after last mention" "temp"
      (3828103 'move' resizeThreshold[3828101] resizeThreshold[3827961])
      (3828106 '.=' this[3827951] resizeThreshold[3405166] resizeThreshold[3828101])
    }
    const-ref call_tmp[3828112]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3828114 'move' call_tmp[3828112](3828116 '.' this[3827951] resizeThreshold[3405166]))
    const-val call_tmp[3828119]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3828552]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3832514]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3832518 'move' coerce_tmp[3832514](3832516 'deref' call_tmp[3828112]))
    const-val default_arg_rehashHelpers[3832558]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5595767]:owned chpl__rehashHelpers?[1941081] "temp"
    (3832560 call init_default_rehashHelpers[3832521] ret_tmp[5595767])
    (5595770 'move' default_arg_rehashHelpers[3832558] ret_tmp[5595767])
    (3828555 call init[3828563] initTemp[3828552] coerce_tmp[3832514] initialCapacity[3827967] default_arg_rehashHelpers[3832558])
    (3828121 'move' call_tmp[3828119] initTemp[3828552])
    val call_tmp[3828129]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3828136]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3828143]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3828151]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    (3828153 'move' table[3828151] call_tmp[3828119])
    (3828157 '.=' this[3827951] table[3405169] table[3828151])
    val tmp[3828166]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3828168]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3828208 return _void[46])
  }
  function init_default_resizeThreshold[3832598]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3832600]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3832605]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3832609 'move' resizeThreshold[3832605] defaultHashTableResizeThreshold[209951])
    (3832612 'move' ret[3832600] resizeThreshold[3832605])
    (3832603 return ret[3832600])
  }
  function map(string,string,false)[3283386].init[3339157](ref arg this[3339161]:map(string,string,false)[3283386], const in arg resizeThreshold[3339173]:real(64)[13], const in arg initialCapacity[3339179]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479885]:string[244] "temp"
    val _formal_type_tmp_[5479883]:string[244] "temp"
    (3339190 call _checkKeyAndValType[3339425])
    val keyType[3339194]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3339204]:string[244] "dead after last mention" "temp" "type variable"
    val parSafe[3339214]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3339224]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3339715]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3339721 'move' coerce_tmp[3339715](3339717 'cast' real(64)[13] 0))
    (3339226 'move' tmp[3339224](3339229 call <=[54490] resizeThreshold[3339173] coerce_tmp[3339715]))
    val call_tmp[3339232]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3339245]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3339247]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3339249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339251 'move' call_tmp[3339249] tmp[3339224])
    (3339256 'move' tmp[3339247] call_tmp[3339249])
    if tmp[3339247]
    {
      (3339263 'move' tmp[3339245] 1)
    }
    {
      const-val tmp[3339269]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3339271]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3339727]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3339733 'move' coerce_tmp[3339727](3339729 'cast' real(64)[13] 1))
      (3339273 'move' call_tmp[3339271](3339276 call >=[54753] resizeThreshold[3339173] coerce_tmp[3339727]))
      (3339279 'move' tmp[3339269] call_tmp[3339271])
      (3339284 'move' tmp[3339245] tmp[3339269])
    }
    const-val call_tmp[3339290]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339292 'move' call_tmp[3339290] tmp[3339245])
    if call_tmp[3339290]
    {
      (3339300 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3339304]:real(64)[13] "dead after last mention" "temp"
      (3339306 'move' resizeThreshold[3339304] 0.5)
      (3339309 '.=' this[3339161] resizeThreshold[3283368] resizeThreshold[3339304])
    }
    {
      val resizeThreshold[3339315]:real(64)[13] "dead after last mention" "temp"
      (3339317 'move' resizeThreshold[3339315] resizeThreshold[3339173])
      (3339320 '.=' this[3339161] resizeThreshold[3283368] resizeThreshold[3339315])
    }
    const-ref call_tmp[3339326]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3339328 'move' call_tmp[3339326](3339330 '.' this[3339161] resizeThreshold[3283368]))
    const-val call_tmp[3339333]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3339740]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3343702]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3343706 'move' coerce_tmp[3343702](3343704 'deref' call_tmp[3339326]))
    const-val default_arg_rehashHelpers[3343746]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589230]:owned chpl__rehashHelpers?[1941081] "temp"
    (3343748 call init_default_rehashHelpers[3343709] ret_tmp[5589230])
    (5589233 'move' default_arg_rehashHelpers[3343746] ret_tmp[5589230])
    (3339743 call init[3339751] initTemp[3339740] coerce_tmp[3343702] initialCapacity[3339179] default_arg_rehashHelpers[3343746])
    (3339335 'move' call_tmp[3339333] initTemp[3339740])
    val call_tmp[3339343]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3339350]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3339357]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3339365]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    (3339367 'move' table[3339365] call_tmp[3339333])
    (3339371 '.=' this[3339161] table[3283371] table[3339365])
    val tmp[3339380]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3339382]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3339422 return _void[46])
  }
  function init_default_resizeThreshold[3343780]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3343782]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3343787]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3343791 'move' resizeThreshold[3343787] defaultHashTableResizeThreshold[209951])
    (3343794 'move' ret[3343782] resizeThreshold[3343787])
    (3343785 return ret[3343782])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].init[3354216](ref arg this[3354220]:map(string,owned ModuleSpecification?,false)[3283686], const in arg resizeThreshold[3354232]:real(64)[13], const in arg initialCapacity[3354238]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479928]:owned ModuleSpecification?[3283604] "temp"
    val _formal_type_tmp_[5479926]:string[244] "temp"
    (3354249 call _checkKeyAndValType[3354484])
    val keyType[3354253]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3354263]:owned ModuleSpecification?[3283604] "dead after last mention" "temp" "type variable"
    val parSafe[3354273]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3354283]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3354800]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3354806 'move' coerce_tmp[3354800](3354802 'cast' real(64)[13] 0))
    (3354285 'move' tmp[3354283](3354288 call <=[54490] resizeThreshold[3354232] coerce_tmp[3354800]))
    val call_tmp[3354291]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3354304]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3354306]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3354308]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3354310 'move' call_tmp[3354308] tmp[3354283])
    (3354315 'move' tmp[3354306] call_tmp[3354308])
    if tmp[3354306]
    {
      (3354322 'move' tmp[3354304] 1)
    }
    {
      const-val tmp[3354328]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3354330]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3354812]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3354818 'move' coerce_tmp[3354812](3354814 'cast' real(64)[13] 1))
      (3354332 'move' call_tmp[3354330](3354335 call >=[54753] resizeThreshold[3354232] coerce_tmp[3354812]))
      (3354338 'move' tmp[3354328] call_tmp[3354330])
      (3354343 'move' tmp[3354304] tmp[3354328])
    }
    const-val call_tmp[3354349]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3354351 'move' call_tmp[3354349] tmp[3354304])
    if call_tmp[3354349]
    {
      (3354359 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3354363]:real(64)[13] "dead after last mention" "temp"
      (3354365 'move' resizeThreshold[3354363] 0.5)
      (3354368 '.=' this[3354220] resizeThreshold[3283668] resizeThreshold[3354363])
    }
    {
      val resizeThreshold[3354374]:real(64)[13] "dead after last mention" "temp"
      (3354376 'move' resizeThreshold[3354374] resizeThreshold[3354232])
      (3354379 '.=' this[3354220] resizeThreshold[3283668] resizeThreshold[3354374])
    }
    const-ref call_tmp[3354385]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3354387 'move' call_tmp[3354385](3354389 '.' this[3354220] resizeThreshold[3283668]))
    const-val call_tmp[3354392]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3354825]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3358787]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3358791 'move' coerce_tmp[3358787](3358789 'deref' call_tmp[3354385]))
    const-val default_arg_rehashHelpers[3358831]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589424]:owned chpl__rehashHelpers?[1941081] "temp"
    (3358833 call init_default_rehashHelpers[3358794] ret_tmp[5589424])
    (5589427 'move' default_arg_rehashHelpers[3358831] ret_tmp[5589424])
    (3354828 call init[3354836] initTemp[3354825] coerce_tmp[3358787] initialCapacity[3354238] default_arg_rehashHelpers[3358831])
    (3354394 'move' call_tmp[3354392] initTemp[3354825])
    val call_tmp[3354402]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3354409]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3354416]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3354424]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    (3354426 'move' table[3354424] call_tmp[3354392])
    (3354430 '.=' this[3354220] table[3283671] table[3354424])
    val tmp[3354439]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3354441]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3354481 return _void[46])
  }
  function init_default_resizeThreshold[3358865]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3358867]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3358872]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3358876 'move' resizeThreshold[3358872] defaultHashTableResizeThreshold[209951])
    (3358879 'move' ret[3358867] resizeThreshold[3358872])
    (3358870 return ret[3358867])
  }
  function _ref(map(string,int(64),false))[3288803].init=[3309171](ref arg this[3309175]:_ref(map(string,int(64),false))[3288803], ref arg other[3309177]:_ref(map(string,int(64),false))[3288803]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[3309192]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[3309194]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3309196]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309198]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309204]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309212]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3309227]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3309229]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[3309268]:int(64)[10] "dead after last mention" "temp" "type variable"
    val tmp[3309270]:int(64)[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3309272]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309274]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309280]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309288]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3309303]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3309305]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[3309344]:bool[19] "dead after last mention" "param" "temp"
    val tmp[3309346]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3309348]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309350]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309356]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309364]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3309379]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3309381]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[3309420]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309422]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309429]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309443]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3309456]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3309458]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309460]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309493]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[3309530]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (3309532 'move' call_tmp[3309530](3309535 call resizeThreshold[3310502] other[3309177]))
    val resizeThreshold[3309538]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[3310533]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3310537 'move' coerce_tmp[3310533](3310535 'deref' call_tmp[3309530]))
    (5632648 '=' resizeThreshold[3309538] coerce_tmp[3310533])
    (3309540 'noop')
    (3309543 '.=' this[3309175] resizeThreshold[3288776] resizeThreshold[3309538])
    val call_tmp[3309548]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309555]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[3309562]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3309564 'move' call_tmp[3309562](3309566 '.' this[3309175] resizeThreshold[3288776]))
    const-val call_tmp[3309569]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3310544]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3310924]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3310928 'move' coerce_tmp[3310924](3310926 'deref' call_tmp[3309562]))
    val default_arg_initialCapacity[3310949]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[3310995]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5588823]:owned chpl__rehashHelpers?[1941081] "temp"
    (3310997 call init_default_rehashHelpers[3310958] ret_tmp[5588823])
    (5588826 'move' default_arg_rehashHelpers[3310995] ret_tmp[5588823])
    (3310547 call init[3310554] initTemp[3310544] coerce_tmp[3310924] 16 default_arg_rehashHelpers[3310995])
    (3309571 'move' call_tmp[3309569] initTemp[3310544])
    val call_tmp[3309578]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309585]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309592]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3309600]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    (3309602 'move' table[3309600] call_tmp[3309569])
    (3309606 '.=' this[3309175] table[3288779] table[3309600])
    val tmp[3309615]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309617]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309659]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309667]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309674]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309682]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3309727]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3309735]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3309742]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3309750]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[3309795]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[3309803]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3309810]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3309817]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[3309880]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[3309888]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3309895]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3309902]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[3309966]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[3309968]:_ic_keys__ref_map_string_int64_t_F[3311955] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[3309970]:_ir_keys__ref_map_string_int64_t_F[3311961] "dead at end of block" "expr temp" "maybe param" "reference to a const" "temp"
              const-val ret_tmp[5588841]:_ir_keys__ref_map_string_int64_t_F[3311961] "temp"
              (3309978 call keys[3311117] other[3309177] ret_tmp[5588841])
              (5588844 'move' call_tmp[3309970] ret_tmp[5588841])
              (3309979 'move' _iterator[3309968](3309982 call _getIterator[3311970] call_tmp[3309970]))
              {
                val ret[6055239]:_ir_keys__ref_map_string_int64_t_F[3311961] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6055241]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6055243]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6055245]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead at end of block" "maybe param" "temp"
                const-ref this[6055533]:_ref(map(string,int(64),false))[3288803] "temp"
                (6055538 'move' this[6055533](6055535 '.v' _iterator[3309968] F0_this[7079744]))
                (6055247 'move' call_tmp[6055245](6055250 call table[3301244] this[6055533]))
                const-val call_tmp[6055252]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6055254]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "temp"
                (6055257 call allSlots[3311253] call_tmp[6055245] ret_tmp[6055254])
                (6055260 'move' call_tmp[6055252] ret_tmp[6055254])
                (6055263 'move' _iterator[6055243](6055266 call _getIterator[3311359] call_tmp[6055252]))
                const-ref table_ref[6055268]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "temp"
                const-ref this[6055540]:_ref(map(string,int(64),false))[3288803] "temp"
                (6055545 'move' this[6055540](6055542 '.v' _iterator[3309968] F0_this[7079744]))
                (6055270 'move' table_ref[6055268](6055273 call table[3301244] this[6055540]))
                {
                  val ret[6384803]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6384805]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6384807]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6384809]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6385235]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
                  (6385240 'move' this[6385235](6385237 '.v' _iterator[6055243] F0_this[7080176]))
                  (6384811 'move' call_tmp[6384809](6384814 call tableSize[3301883] this[6385235]))
                  const-val call_tmp[6384816]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6384818]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6384820 'move' coerce_tmp[6384818](6384822 'deref' call_tmp[6384809]))
                  const-val ret_tmp[6384824]:_ir__allSlots[1946137] "temp"
                  (6384827 call _allSlots[265237] coerce_tmp[6384818] ret_tmp[6384824])
                  (6384830 'move' call_tmp[6384816] ret_tmp[6384824])
                  (6384833 'move' _iterator[6384807](6384836 call _getIterator[1946146] call_tmp[6384816]))
                  {
                    val ret[6384839]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6384841]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6384843]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6384845]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6384847]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6384849]:int(64)[10] "temp"
                    (6384851 'move' size[6384849](6384853 '.v' _iterator[6384807] F0_size[6829964]))
                    (6384857 call chpl_direct_counted_range_iter[1468903] 0 size[6384849] ret_tmp[6384847])
                    (6384861 'move' call_tmp[6384845] ret_tmp[6384847])
                    (6384864 'move' _iterator[6384843](6384867 call _getIterator[1520079] call_tmp[6384845]))
                    {
                      val ret[6384870]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6384872]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6384874]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6384876]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6384878]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6384880]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6384882]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6384884]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6384886]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6384888]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6384890]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6384892]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6384894]:int(64)[10] "temp"
                      (6384896 'move' low[6384894](6384898 '.v' _iterator[6384843] F0_low[6832410]))
                      const-val count[6384901]:int(64)[10] "temp"
                      (6384903 'move' count[6384901](6384905 '.v' _iterator[6384843] F1_count[6832414]))
                      (6384909 call chpl_direct_counted_range_iter_helper[1469227] low[6384894] count[6384901] ret_tmp[6384892])
                      (6384913 'move' call_tmp[6384890] ret_tmp[6384892])
                      (6384916 'move' _iterator[6384888](6384919 call _getIterator[1519812] call_tmp[6384890]))
                      {
                        val ret[6653885]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6653887]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6653889]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6653891]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6653893]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6653895]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6653897]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6653899]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6653901]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6653903]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6653905]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6653907]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6653909]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6653911]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6653913]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6653915]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6654490]:int(64)[10] "temp"
                        (6654495 'move' count[6654490](6654492 '.v' _iterator[6384888] F1_count[6834178]))
                        (6653917 'move' call_tmp[6653915](6653920 call <[1469576] count[6654490] 0))
                        (6653923 'move' tmp[6653913] call_tmp[6653915])
                        (6653926 'move' tmp[6653907] call_tmp[6653915])
                        const-val call_tmp[6653929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6653931 'move' call_tmp[6653929] call_tmp[6653915])
                        if call_tmp[6653915]
                        {
                          (6653937 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6653940]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6654497]:int(64)[10] "temp"
                        (6654502 'move' low[6654497](6654499 '.v' _iterator[6384888] F0_low[6834174]))
                        (6653942 'move' start[6653940] low[6654497])
                        const-val end[6653945]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6653947]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6653949]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6653951]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6654504]:int(64)[10] "temp"
                        (6654509 'move' count[6654504](6654506 '.v' _iterator[6384888] F1_count[6834178]))
                        (6653953 'move' call_tmp[6653951](6653956 call ==[52746] count[6654504] 0))
                        (6653959 'move' tmp[6653949] call_tmp[6653951])
                        if call_tmp[6653951]
                        {
                          const-val tmp[6653964]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6653966]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6654511]:int(64)[10] "temp"
                          (6654516 'move' low[6654511](6654513 '.v' _iterator[6384888] F0_low[6834174]))
                          (6653968 'move' call_tmp[6653966](6653970 'cast' uint(64)[86] low[6654511]))
                          const-val call_tmp[6653973]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6653975]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6653977 'move' coerce_tmp[6653975](6653979 'cast' uint(64)[86] 1))
                          (6653982 'move' call_tmp[6653973](6653985 call -[1487313] call_tmp[6653966]))
                          val call_tmp[6653987]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6653989 'move' tmp[6653964](6653992 call :[1482043] call_tmp[6653973]))
                          (6653994 'move' tmp[6653947] tmp[6653964])
                        }
                        {
                          const-val tmp[6653998]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6654000]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6654002]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6654518]:int(64)[10] "temp"
                          (6654523 'move' count[6654518](6654520 '.v' _iterator[6384888] F1_count[6834178]))
                          (6654004 'move' call_tmp[6654002] count[6654518])
                          const-val call_tmp[6654007]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6654525]:int(64)[10] "temp"
                          (6654530 'move' count[6654525](6654527 '.v' _iterator[6384888] F1_count[6834178]))
                          (6654009 'move' call_tmp[6654007](6654012 call -[1487343] count[6654525]))
                          const-val call_tmp[6654014]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6654532]:int(64)[10] "temp"
                          (6654537 'move' low[6654532](6654534 '.v' _iterator[6384888] F0_low[6834174]))
                          (6654016 'move' call_tmp[6654014](6654019 call +[56587] low[6654532] call_tmp[6654007]))
                          val call_tmp[6654022]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6654024 'move' tmp[6653998] call_tmp[6654014])
                          (6654027 'move' tmp[6653947] call_tmp[6654014])
                        }
                        (6654031 'move' end[6653945] tmp[6653947])
                        val _indexOfInterest[6654034]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6654036]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6654038]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6654040]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6654043 call chpl_direct_param_stride_range_iter[1517410] start[6653940] tmp[6653947] ret_tmp[6654040])
                        (6654047 'move' call_tmp[6654038] ret_tmp[6654040])
                        (6654050 'move' _iterator[6654036](6654053 call _getIterator[1519541] call_tmp[6654038]))
                        {
                          val ret[6654056]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6654058]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654060]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6654063 call chpl_range_check_stride[1517730])
                          val i[6654064]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6654066]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6654068 'move' i[6654064] 0)
                          val call_tmp[6654071]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654073]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654075]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654077]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6654079]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6654081]:int(64)[10] "temp"
                          (6654083 'move' low[6654081](6654085 '.v' _iterator[6654036] F0_low[6835591]))
                          (6654088 'move' default_arg_first[6654079](6654091 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6654081]))
                          const-val default_arg_last[6654093]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6654095]:int(64)[10] "temp"
                          (6654097 'move' high[6654095](6654099 '.v' _iterator[6654036] F1_high[6835595]))
                          (6654102 'move' default_arg_last[6654093](6654105 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6654095]))
                          val default_arg_shouldHalt[6654107]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6654109]:bool[19] "dead after last mention" "temp"
                          const-val low[6654111]:int(64)[10] "temp"
                          (6654113 'move' low[6654111](6654115 '.v' _iterator[6654036] F0_low[6835591]))
                          const-val high[6654118]:int(64)[10] "temp"
                          (6654120 'move' high[6654118](6654122 '.v' _iterator[6654036] F1_high[6835595]))
                          (6654125 'move' _return_tmp_[6654109](6654128 call chpl_checkIfRangeIterWillOverflow[1518856] low[6654111] high[6654118] 1 default_arg_first[6654079] default_arg_last[6654093] 1))
                          CForLoop[6654135] hazard
                          {
                            const-val yret[6654166]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6654168 'move' yret[6654166] i[6654064])
                            const-val _yieldedIndex[6654171]:int(64)[10] "temp"
                            (6654173 'move' _yieldedIndex[6654171] i[6654064])
                            {
                              const-val i[6654177]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6654179 'move' i[6654177] _yieldedIndex[6654171])
                              const-val yret[6654182]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6654184 'move' yret[6654182] _yieldedIndex[6654171])
                              const-val _yieldedIndex[6654206]:int(64)[10] "temp"
                              (6654488 'move' _yieldedIndex[6654206] _yieldedIndex[6654171])
                              {
                                const-val i[6654208]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6654210 'move' i[6654208] _yieldedIndex[6654206])
                                const-val yret[6654213]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6654215 'move' yret[6654213] _yieldedIndex[6654206])
                                const-val _yieldedIndex[6654218]:int(64)[10] "temp"
                                (6654220 'move' _yieldedIndex[6654218] _yieldedIndex[6654206])
                                {
                                  const-val slot[6654224]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6654226 'move' slot[6654224] _yieldedIndex[6654218])
                                  const-val yret[6654229]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6654231 'move' yret[6654229] _yieldedIndex[6654218])
                                  const-val _yieldedIndex[6654234]:int(64)[10] "temp"
                                  (6654236 'move' _yieldedIndex[6654234] _yieldedIndex[6654218])
                                  {
                                    const-val slot[6654240]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6654242 'move' slot[6654240] _yieldedIndex[6654234])
                                    const-val yret[6654245]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6654247 'move' yret[6654245] _yieldedIndex[6654234])
                                    const-val _yieldedIndex[6654250]:int(64)[10] "temp"
                                    (6654252 'move' _yieldedIndex[6654250] _yieldedIndex[6654234])
                                    {
                                      const-val slot[6654256]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6654258 'move' slot[6654256] _yieldedIndex[6654250])
                                      const-val call_tmp[6654261]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6654263 'move' call_tmp[6654261] table_ref[6055268])
                                      const-val call_tmp[6654266]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6654268 'move' call_tmp[6654266](6654271 call isSlotFull[3311860] call_tmp[6654261] _yieldedIndex[6654250]))
                                      const-val call_tmp[6654274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6654276 'move' call_tmp[6654274] call_tmp[6654266])
                                      if call_tmp[6654266]
                                      {
                                        const-ref yret[6654281]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6654283]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6654285 'move' call_tmp[6654283] table_ref[6055268])
                                        ref call_tmp[6654288]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6654290]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
                                        (6654292 'move' _this_tmp_[6654290](6654295 call table[3303003] call_tmp[6654283]))
                                        val coerce_tmp[6654297]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6654299 'move' coerce_tmp[6654297](6654301 'deref' _this_tmp_[6654290]))
                                        (6654303 'move' call_tmp[6654288](6654306 call this[3306115] coerce_tmp[6654297] slot[6654256]))
                                        const-ref call_tmp[6654309]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6654311 'move' call_tmp[6654309](6654314 call key[3306645] call_tmp[6654288]))
                                        const-ref _yieldedIndex[6654316]:_ref(string)[1466327] "temp"
                                        (6654318 'move' _yieldedIndex[6654316] call_tmp[6654309])
                                        {
                                          const-ref key[6654322]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6654324 'move' key[6654322] _yieldedIndex[6654316])
                                          {
                                            ref call_tmp[6654328]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654330 'move' call_tmp[6654328](6654333 call table[3301244] this[3309175]))
                                            const-val call_tmp[6654335]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6654337]:(bool,int(64))[3257010] "temp"
                                            (6654340 call findAvailableSlot[3301272] call_tmp[6654328] key[6654322] ret_tmp[6654337])
                                            (6654344 'move' call_tmp[6654335] ret_tmp[6654337])
                                            const-val tmp[6654347]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6654349 'move' tmp[6654347] call_tmp[6654335])
                                            1
                                            const-ref call_tmp[6654353]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6654355 'move' call_tmp[6654353](6654357 '.' tmp[6654347] x1[3257008]))
                                            const-val slot[6654360]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6654362]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6654364 'move' coerce_tmp[6654362](6654366 'deref' call_tmp[6654353]))
                                            (6654368 '=' slot[6654360] coerce_tmp[6654362])
                                            (6654371 'noop')
                                            const-ref call_tmp[6654372]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654374 'move' call_tmp[6654372](6654377 call table[3301244] other[3309177]))
                                            const-val call_tmp[6654379]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6654381]:(bool,int(64))[3257010] "temp"
                                            (6654384 call findFullSlot[3312245] call_tmp[6654372] key[6654322] ret_tmp[6654381])
                                            (6654388 'move' call_tmp[6654379] ret_tmp[6654381])
                                            const-val tmp[6654391]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6654393 'move' tmp[6654391] call_tmp[6654379])
                                            1
                                            const-ref call_tmp[6654397]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6654399 'move' call_tmp[6654397](6654401 '.' tmp[6654391] x1[3257008]))
                                            const-val slot2[6654404]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6654406]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6654408 'move' coerce_tmp[6654406](6654410 'deref' call_tmp[6654397]))
                                            (6654412 '=' slot2[6654404] coerce_tmp[6654406])
                                            (6654415 'noop')
                                            ref call_tmp[6654416]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654418 'move' call_tmp[6654416](6654421 call table[3301244] this[3309175]))
                                            ref call_tmp[6654423]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654425 'move' call_tmp[6654423](6654428 call table[3301244] other[3309177]))
                                            ref call_tmp[6654430]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6654432]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
                                            (6654434 'move' _this_tmp_[6654432](6654437 call table[3303003] call_tmp[6654423]))
                                            val coerce_tmp[6654439]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6654441 'move' coerce_tmp[6654439](6654443 'deref' _this_tmp_[6654432]))
                                            (6654445 'move' call_tmp[6654430](6654448 call this[3306115] coerce_tmp[6654439] slot2[6654404]))
                                            const-ref call_tmp[6654451]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                                            (6654453 'move' call_tmp[6654451](6654456 call val[3307792] call_tmp[6654430]))
                                            const-val _formal_tmp_in_key[6654458]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6654460 'move' _formal_tmp_in_key[6654458](6654463 call chpl__initCopy[1480493] key[6654322] 0))
                                            const-val coerce_tmp[6654466]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6654468 'move' coerce_tmp[6654466](6654470 'deref' call_tmp[6654451]))
                                            (6654473 call fillSlot[3308541] call_tmp[6654416] slot[6654360] _formal_tmp_in_key[6654458] coerce_tmp[6654466])
                                            (6654479 call chpl__autoDestroy[4207177] tmp[6654391])
                                            (6654482 call chpl__autoDestroy[4207177] tmp[6654347])
                                          }
                                          label _continueLabel[6654484]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6654137]:int(64)[10] "temp"
                              (6654139 'move' low[6654137](6654141 '.v' _iterator[6654036] F0_low[6835591]))
                              (6654144 '=' i[6654064] low[6654137])
                            }
                            {
                              const-val high[6654148]:int(64)[10] "temp"
                              (6654150 'move' high[6654148](6654152 '.v' _iterator[6654036] F1_high[6835595]))
                              (6654155 '<=' i[6654064] high[6654148])
                            }
                            {
                              val call_tmp[6654159]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6654161]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6654163 '+=' i[6654064] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6654197]
                        }
                        (6654200 call _freeIterator[1519714] _iterator[6654036])
                        label _endchpl_direct_counted_range_iter_helper[6654202]
                      }
                      (6384983 call _freeIterator[1519981] _iterator[6384888])
                      label _endchpl_direct_counted_range_iter[6384985]
                    }
                    (6384988 call _freeIterator[1520248] _iterator[6384843])
                    label _end_allSlots[6384990]
                  }
                  (6384993 call _freeIterator[1947321] _iterator[6384807])
                  label _endallSlots[6384995]
                }
                (6055360 call _freeIterator[3311756] _iterator[6055243])
                label _endkeys[6055362]
              }
              label _breakLabel[3310137]
              (5632667 call _freeIterator[3312139] _iterator[3309968])
            }
          }
        }
      }
    }
    (3310143 return _void[46])
  }
  function _ref(map(string,string,false))[3283395].init=[3381988](ref arg this[3381992]:_ref(map(string,string,false))[3283395], ref arg other[3381994]:_ref(map(string,string,false))[3283395]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[3382009]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[3382011]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3382013]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382015]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382021]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382029]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3382044]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3382046]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[3382085]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[3382087]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3382089]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382091]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382097]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382105]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3382120]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3382122]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[3382161]:bool[19] "dead after last mention" "param" "temp"
    val tmp[3382163]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3382165]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382167]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382173]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382181]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3382196]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3382198]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[3382237]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382239]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382246]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382260]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3382273]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3382275]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382277]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382310]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[3382347]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (3382349 'move' call_tmp[3382347](3382352 call resizeThreshold[3383152] other[3381994]))
    val resizeThreshold[3382355]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[3383183]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3383187 'move' coerce_tmp[3383183](3383185 'deref' call_tmp[3382347]))
    (5635511 '=' resizeThreshold[3382355] coerce_tmp[3383183])
    (3382357 'noop')
    (3382360 '.=' this[3381992] resizeThreshold[3283368] resizeThreshold[3382355])
    val call_tmp[3382365]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382372]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[3382379]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3382381 'move' call_tmp[3382379](3382383 '.' this[3381992] resizeThreshold[3283368]))
    const-val call_tmp[3382386]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3383194]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3383219]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3383223 'move' coerce_tmp[3383219](3383221 'deref' call_tmp[3382379]))
    val default_arg_initialCapacity[3383244]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[3383253]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589236]:owned chpl__rehashHelpers?[1941081] "temp"
    (3383255 call init_default_rehashHelpers[3343709] ret_tmp[5589236])
    (5589239 'move' default_arg_rehashHelpers[3383253] ret_tmp[5589236])
    (3383197 call init[3339751] initTemp[3383194] coerce_tmp[3383219] 16 default_arg_rehashHelpers[3383253])
    (3382388 'move' call_tmp[3382386] initTemp[3383194])
    val call_tmp[3382395]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382402]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382409]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3382417]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    (3382419 'move' table[3382417] call_tmp[3382386])
    (3382423 '.=' this[3381992] table[3283371] table[3382417])
    val tmp[3382432]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382434]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382476]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382484]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382491]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382499]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3382544]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3382552]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3382559]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3382567]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[3382612]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[3382620]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3382627]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3382634]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[3382697]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[3382705]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3382712]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3382719]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[3382783]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[3382785]:_ic_keys__ref_map_string_string_F[3381529] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[3382787]:_ir_keys__ref_map_string_string_F[3381535] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[5589708]:_ir_keys__ref_map_string_string_F[3381535] "temp"
              (3382795 call keys[3381349] other[3381994] ret_tmp[5589708])
              (5589711 'move' call_tmp[3382787] ret_tmp[5589708])
              (3382796 'move' _iterator[3382785](3382799 call _getIterator[3381544] call_tmp[3382787]))
              {
                val ret[6060792]:_ir_keys__ref_map_string_string_F[3381535] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6060794]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6060796]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6060798]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "temp"
                const-ref this[6061279]:_ref(map(string,string,false))[3283395] "temp"
                (6061284 'move' this[6061279](6061281 '.v' _iterator[3382785] F0_this[7087442]))
                (6060800 'move' call_tmp[6060798](6060803 call table[3344610] this[6061279]))
                const-val call_tmp[6060805]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6060807]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "temp"
                (6060810 call allSlots[3344638] call_tmp[6060798] ret_tmp[6060807])
                (6060813 'move' call_tmp[6060805] ret_tmp[6060807])
                (6060816 'move' _iterator[6060796](6060819 call _getIterator[3344744] call_tmp[6060805]))
                const-ref table_ref[6060821]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "temp"
                const-ref this[6061286]:_ref(map(string,string,false))[3283395] "temp"
                (6061291 'move' this[6061286](6061288 '.v' _iterator[3382785] F0_this[7087442]))
                (6060823 'move' table_ref[6060821](6060826 call table[3344610] this[6061286]))
                {
                  val ret[6060829]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6060831]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6060833]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6060835]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6060837]:_ref(chpl__hashtable(string,string))[3283450] "temp"
                  (6060839 'move' this[6060837](6060841 '.v' _iterator[6060796] F0_this[7082328]))
                  (6060844 'move' call_tmp[6060835](6060847 call tableSize[3340120] this[6060837]))
                  const-val call_tmp[6060849]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6060851]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6060853 'move' coerce_tmp[6060851](6060855 'deref' call_tmp[6060835]))
                  const-val ret_tmp[6060857]:_ir__allSlots[1946137] "temp"
                  (6060860 call _allSlots[265237] coerce_tmp[6060851] ret_tmp[6060857])
                  (6060863 'move' call_tmp[6060849] ret_tmp[6060857])
                  (6060866 'move' _iterator[6060833](6060869 call _getIterator[1946146] call_tmp[6060849]))
                  {
                    val ret[6060872]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6060874]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6060876]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6060878]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6060880]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6060882]:int(64)[10] "temp"
                    (6060884 'move' size[6060882](6060886 '.v' _iterator[6060833] F0_size[6829964]))
                    (6060890 call chpl_direct_counted_range_iter[1468903] 0 size[6060882] ret_tmp[6060880])
                    (6060894 'move' call_tmp[6060878] ret_tmp[6060880])
                    (6060897 'move' _iterator[6060876](6060900 call _getIterator[1520079] call_tmp[6060878]))
                    {
                      val ret[6060903]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6060905]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6060907]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6060909]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6060911]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6060913]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6060915]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6060917]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6060919]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6060921]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6060923]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6060925]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6060927]:int(64)[10] "temp"
                      (6060929 'move' low[6060927](6060931 '.v' _iterator[6060876] F0_low[6832410]))
                      const-val count[6060934]:int(64)[10] "temp"
                      (6060936 'move' count[6060934](6060938 '.v' _iterator[6060876] F1_count[6832414]))
                      (6060942 call chpl_direct_counted_range_iter_helper[1469227] low[6060927] count[6060934] ret_tmp[6060925])
                      (6060946 'move' call_tmp[6060923] ret_tmp[6060925])
                      (6060949 'move' _iterator[6060921](6060952 call _getIterator[1519812] call_tmp[6060923]))
                      {
                        val ret[6393850]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6393852]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6393854]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6393856]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6393858]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6393860]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6393862]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6393864]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6393866]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6393868]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6393870]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6393872]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6393874]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6393876]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6393878]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6393880]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6394457]:int(64)[10] "temp"
                        (6394462 'move' count[6394457](6394459 '.v' _iterator[6060921] F1_count[6834178]))
                        (6393882 'move' call_tmp[6393880](6393885 call <[1469576] count[6394457] 0))
                        (6393888 'move' tmp[6393878] call_tmp[6393880])
                        (6393891 'move' tmp[6393872] call_tmp[6393880])
                        const-val call_tmp[6393894]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6393896 'move' call_tmp[6393894] call_tmp[6393880])
                        if call_tmp[6393880]
                        {
                          (6393902 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6393905]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6394464]:int(64)[10] "temp"
                        (6394469 'move' low[6394464](6394466 '.v' _iterator[6060921] F0_low[6834174]))
                        (6393907 'move' start[6393905] low[6394464])
                        const-val end[6393910]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6393912]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6393914]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6393916]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6394471]:int(64)[10] "temp"
                        (6394476 'move' count[6394471](6394473 '.v' _iterator[6060921] F1_count[6834178]))
                        (6393918 'move' call_tmp[6393916](6393921 call ==[52746] count[6394471] 0))
                        (6393924 'move' tmp[6393914] call_tmp[6393916])
                        if call_tmp[6393916]
                        {
                          const-val tmp[6393929]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6393931]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6394478]:int(64)[10] "temp"
                          (6394483 'move' low[6394478](6394480 '.v' _iterator[6060921] F0_low[6834174]))
                          (6393933 'move' call_tmp[6393931](6393935 'cast' uint(64)[86] low[6394478]))
                          const-val call_tmp[6393938]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6393940]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6393942 'move' coerce_tmp[6393940](6393944 'cast' uint(64)[86] 1))
                          (6393947 'move' call_tmp[6393938](6393950 call -[1487313] call_tmp[6393931]))
                          val call_tmp[6393952]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6393954 'move' tmp[6393929](6393957 call :[1482043] call_tmp[6393938]))
                          (6393959 'move' tmp[6393912] tmp[6393929])
                        }
                        {
                          const-val tmp[6393963]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6393965]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6393967]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6394485]:int(64)[10] "temp"
                          (6394490 'move' count[6394485](6394487 '.v' _iterator[6060921] F1_count[6834178]))
                          (6393969 'move' call_tmp[6393967] count[6394485])
                          const-val call_tmp[6393972]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6394492]:int(64)[10] "temp"
                          (6394497 'move' count[6394492](6394494 '.v' _iterator[6060921] F1_count[6834178]))
                          (6393974 'move' call_tmp[6393972](6393977 call -[1487343] count[6394492]))
                          const-val call_tmp[6393979]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6394499]:int(64)[10] "temp"
                          (6394504 'move' low[6394499](6394501 '.v' _iterator[6060921] F0_low[6834174]))
                          (6393981 'move' call_tmp[6393979](6393984 call +[56587] low[6394499] call_tmp[6393972]))
                          val call_tmp[6393987]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6393989 'move' tmp[6393963] call_tmp[6393979])
                          (6393992 'move' tmp[6393912] call_tmp[6393979])
                        }
                        (6393996 'move' end[6393910] tmp[6393912])
                        val _indexOfInterest[6393999]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6394001]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6394003]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6394005]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6394008 call chpl_direct_param_stride_range_iter[1517410] start[6393905] tmp[6393912] ret_tmp[6394005])
                        (6394012 'move' call_tmp[6394003] ret_tmp[6394005])
                        (6394015 'move' _iterator[6394001](6394018 call _getIterator[1519541] call_tmp[6394003]))
                        {
                          val ret[6394021]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6394023]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394025]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6394028 call chpl_range_check_stride[1517730])
                          val i[6394029]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6394031]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6394033 'move' i[6394029] 0)
                          val call_tmp[6394036]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394038]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394040]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394042]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6394044]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6394046]:int(64)[10] "temp"
                          (6394048 'move' low[6394046](6394050 '.v' _iterator[6394001] F0_low[6835591]))
                          (6394053 'move' default_arg_first[6394044](6394056 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6394046]))
                          const-val default_arg_last[6394058]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6394060]:int(64)[10] "temp"
                          (6394062 'move' high[6394060](6394064 '.v' _iterator[6394001] F1_high[6835595]))
                          (6394067 'move' default_arg_last[6394058](6394070 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6394060]))
                          val default_arg_shouldHalt[6394072]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6394074]:bool[19] "dead after last mention" "temp"
                          const-val low[6394076]:int(64)[10] "temp"
                          (6394078 'move' low[6394076](6394080 '.v' _iterator[6394001] F0_low[6835591]))
                          const-val high[6394083]:int(64)[10] "temp"
                          (6394085 'move' high[6394083](6394087 '.v' _iterator[6394001] F1_high[6835595]))
                          (6394090 'move' _return_tmp_[6394074](6394093 call chpl_checkIfRangeIterWillOverflow[1518856] low[6394076] high[6394083] 1 default_arg_first[6394044] default_arg_last[6394058] 1))
                          CForLoop[6394100] hazard
                          {
                            const-val yret[6394131]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6394133 'move' yret[6394131] i[6394029])
                            const-val _yieldedIndex[6394136]:int(64)[10] "temp"
                            (6394138 'move' _yieldedIndex[6394136] i[6394029])
                            {
                              const-val i[6394142]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6394144 'move' i[6394142] _yieldedIndex[6394136])
                              const-val yret[6394147]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6394149 'move' yret[6394147] _yieldedIndex[6394136])
                              const-val _yieldedIndex[6394171]:int(64)[10] "temp"
                              (6394455 'move' _yieldedIndex[6394171] _yieldedIndex[6394136])
                              {
                                const-val i[6394173]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6394175 'move' i[6394173] _yieldedIndex[6394171])
                                const-val yret[6394178]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6394180 'move' yret[6394178] _yieldedIndex[6394171])
                                const-val _yieldedIndex[6394183]:int(64)[10] "temp"
                                (6394185 'move' _yieldedIndex[6394183] _yieldedIndex[6394171])
                                {
                                  const-val slot[6394189]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6394191 'move' slot[6394189] _yieldedIndex[6394183])
                                  const-val yret[6394194]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6394196 'move' yret[6394194] _yieldedIndex[6394183])
                                  const-val _yieldedIndex[6394199]:int(64)[10] "temp"
                                  (6394201 'move' _yieldedIndex[6394199] _yieldedIndex[6394183])
                                  {
                                    const-val slot[6394205]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6394207 'move' slot[6394205] _yieldedIndex[6394199])
                                    const-val yret[6394210]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6394212 'move' yret[6394210] _yieldedIndex[6394199])
                                    const-val _yieldedIndex[6394215]:int(64)[10] "temp"
                                    (6394217 'move' _yieldedIndex[6394215] _yieldedIndex[6394199])
                                    {
                                      const-val slot[6394221]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6394223 'move' slot[6394221] _yieldedIndex[6394215])
                                      const-val call_tmp[6394226]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6394228 'move' call_tmp[6394226] table_ref[6060821])
                                      const-val call_tmp[6394231]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6394233 'move' call_tmp[6394231](6394236 call isSlotFull[3345224] call_tmp[6394226] _yieldedIndex[6394215]))
                                      const-val call_tmp[6394239]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6394241 'move' call_tmp[6394239] call_tmp[6394231])
                                      if call_tmp[6394231]
                                      {
                                        const-ref yret[6394246]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6394248]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6394250 'move' call_tmp[6394248] table_ref[6060821])
                                        ref call_tmp[6394253]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6394255]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
                                        (6394257 'move' _this_tmp_[6394255](6394260 call table[3340092] call_tmp[6394248]))
                                        val coerce_tmp[6394262]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6394264 'move' coerce_tmp[6394262](6394266 'deref' _this_tmp_[6394255]))
                                        (6394268 'move' call_tmp[6394253](6394271 call this[3343256] coerce_tmp[6394262] slot[6394221]))
                                        const-ref call_tmp[6394274]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6394276 'move' call_tmp[6394274](6394279 call key[3345732] call_tmp[6394253]))
                                        const-ref _yieldedIndex[6394281]:_ref(string)[1466327] "temp"
                                        (6394283 'move' _yieldedIndex[6394281] call_tmp[6394274])
                                        {
                                          const-ref key[6394287]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6394289 'move' key[6394287] _yieldedIndex[6394281])
                                          {
                                            ref call_tmp[6394293]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394295 'move' call_tmp[6394293](6394298 call table[3344610] this[3381992]))
                                            const-val call_tmp[6394300]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6394302]:(bool,int(64))[3257010] "temp"
                                            (6394305 call findAvailableSlot[3349576] call_tmp[6394293] key[6394287] ret_tmp[6394302])
                                            (6394309 'move' call_tmp[6394300] ret_tmp[6394302])
                                            const-val tmp[6394312]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6394314 'move' tmp[6394312] call_tmp[6394300])
                                            1
                                            const-ref call_tmp[6394318]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6394320 'move' call_tmp[6394318](6394322 '.' tmp[6394312] x1[3257008]))
                                            const-val slot[6394325]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6394327]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6394329 'move' coerce_tmp[6394327](6394331 'deref' call_tmp[6394318]))
                                            (6394333 '=' slot[6394325] coerce_tmp[6394327])
                                            (6394336 'noop')
                                            const-ref call_tmp[6394337]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394339 'move' call_tmp[6394337](6394342 call table[3344610] other[3381994]))
                                            const-val call_tmp[6394344]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6394346]:(bool,int(64))[3257010] "temp"
                                            (6394349 call findFullSlot[3383343] call_tmp[6394337] key[6394287] ret_tmp[6394346])
                                            (6394353 'move' call_tmp[6394344] ret_tmp[6394346])
                                            const-val tmp[6394356]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6394358 'move' tmp[6394356] call_tmp[6394344])
                                            1
                                            const-ref call_tmp[6394362]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6394364 'move' call_tmp[6394362](6394366 '.' tmp[6394356] x1[3257008]))
                                            const-val slot2[6394369]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6394371]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6394373 'move' coerce_tmp[6394371](6394375 'deref' call_tmp[6394362]))
                                            (6394377 '=' slot2[6394369] coerce_tmp[6394371])
                                            (6394380 'noop')
                                            ref call_tmp[6394381]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394383 'move' call_tmp[6394381](6394386 call table[3344610] this[3381992]))
                                            ref call_tmp[6394388]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394390 'move' call_tmp[6394388](6394393 call table[3344610] other[3381994]))
                                            ref call_tmp[6394395]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6394397]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
                                            (6394399 'move' _this_tmp_[6394397](6394402 call table[3340092] call_tmp[6394388]))
                                            val coerce_tmp[6394404]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6394406 'move' coerce_tmp[6394404](6394408 'deref' _this_tmp_[6394397]))
                                            (6394410 'move' call_tmp[6394395](6394413 call this[3343256] coerce_tmp[6394404] slot2[6394369]))
                                            const-ref call_tmp[6394416]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                            (6394418 'move' call_tmp[6394416](6394421 call val[3345762] call_tmp[6394395]))
                                            const-val _formal_tmp_in_key[6394423]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6394425 'move' _formal_tmp_in_key[6394423](6394428 call chpl__initCopy[1480493] key[6394287] 0))
                                            const-val _formal_tmp_in_val[6394431]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6394433 'move' _formal_tmp_in_val[6394431](6394436 call chpl__initCopy[1480493] call_tmp[6394416] 0))
                                            (6394440 call fillSlot[3350263] call_tmp[6394381] slot[6394325] _formal_tmp_in_key[6394423] _formal_tmp_in_val[6394431])
                                            (6394446 call chpl__autoDestroy[4207177] tmp[6394356])
                                            (6394449 call chpl__autoDestroy[4207177] tmp[6394312])
                                          }
                                          label _continueLabel[6394451]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6394102]:int(64)[10] "temp"
                              (6394104 'move' low[6394102](6394106 '.v' _iterator[6394001] F0_low[6835591]))
                              (6394109 '=' i[6394029] low[6394102])
                            }
                            {
                              const-val high[6394113]:int(64)[10] "temp"
                              (6394115 'move' high[6394113](6394117 '.v' _iterator[6394001] F1_high[6835595]))
                              (6394120 '<=' i[6394029] high[6394113])
                            }
                            {
                              val call_tmp[6394124]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6394126]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6394128 '+=' i[6394029] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6394162]
                        }
                        (6394165 call _freeIterator[1519714] _iterator[6394001])
                        label _endchpl_direct_counted_range_iter_helper[6394167]
                      }
                      (6061089 call _freeIterator[1519981] _iterator[6060921])
                      label _endchpl_direct_counted_range_iter[6061091]
                    }
                    (6061094 call _freeIterator[1520248] _iterator[6060876])
                    label _end_allSlots[6061096]
                  }
                  (6061099 call _freeIterator[1947321] _iterator[6060833])
                  label _endallSlots[6061101]
                }
                (6061104 call _freeIterator[3345141] _iterator[6060796])
                label _endkeys[6061106]
              }
              label _breakLabel[3382954]
              (5635530 call _freeIterator[3381713] _iterator[3382785])
            }
          }
        }
      }
    }
    (3382960 return _void[46])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].init=[4027528](ref arg this[4027532]:_ref(map(string,Module(real(32)),false))[1941017], ref arg other[4027534]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[4027549]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[4027551]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4027553]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4027555]:map(string,Module(real(32)),false)[1936356] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027561]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027569]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4027584]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4027586]:map(string,Module(real(32)),false)[1936356] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[4027625]:Module(real(32))[1935500] "dead after last mention" "temp" "type variable"
    val tmp[4027627]:Module(real(32))[1935500] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4027629]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4027631]:map(string,Module(real(32)),false)[1936356] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027637]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027645]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4027660]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4027662]:map(string,Module(real(32)),false)[1936356] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[4027701]:bool[19] "dead after last mention" "param" "temp"
    val tmp[4027703]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4027705]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4027707]:map(string,Module(real(32)),false)[1936356] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027713]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4027721]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4027736]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[4027738]:map(string,Module(real(32)),false)[1936356] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[4027777]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4027779]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4027786]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4027800]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[4027813]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4027815]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4027817]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4027850]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[4027887]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4027889 'move' call_tmp[4027887](4027892 call resizeThreshold[4028692] other[4027534]))
    val resizeThreshold[4027895]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[4028723]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (4028727 'move' coerce_tmp[4028723](4028725 'deref' call_tmp[4027887]))
    (5643399 '=' resizeThreshold[4027895] coerce_tmp[4028723])
    (4027897 'noop')
    (4027900 '.=' this[4027532] resizeThreshold[1936338] resizeThreshold[4027895])
    val call_tmp[4027905]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027912]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[4027919]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4027921 'move' call_tmp[4027919](4027923 '.' this[4027532] resizeThreshold[1936338]))
    const-val call_tmp[4027926]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[4028734]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[4028759]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4028763 'move' coerce_tmp[4028759](4028761 'deref' call_tmp[4027919]))
    val default_arg_initialCapacity[4028784]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[4028793]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5557833]:owned chpl__rehashHelpers?[1941081] "temp"
    (4028795 call init_default_rehashHelpers[1949601] ret_tmp[5557833])
    (5557836 'move' default_arg_rehashHelpers[4028793] ret_tmp[5557833])
    (4028737 call init[1941108] initTemp[4028734] coerce_tmp[4028759] 16 default_arg_rehashHelpers[4028793])
    (4027928 'move' call_tmp[4027926] initTemp[4028734])
    val call_tmp[4027935]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027942]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4027949]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4027957]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    (4027959 'move' table[4027957] call_tmp[4027926])
    (4027963 '.=' this[4027532] table[1936341] table[4027957])
    val tmp[4027972]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4027974]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4028016]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4028024]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4028031]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4028039]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[4028084]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4028092]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4028099]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4028107]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[4028152]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4028160]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4028167]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4028174]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[4028237]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[4028245]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4028252]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4028259]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[4028323]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[4028325]:_ic_keys__ref_map_string_Module__real32_F[4029642] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[4028327]:_ir_keys__ref_map_string_Module__real32_F[4029648] "dead at end of block" "expr temp" "maybe param" "reference to a const" "temp"
              const-val ret_tmp[5596889]:_ir_keys__ref_map_string_Module__real32_F[4029648] "temp"
              (4028335 call keys[4028881] other[4027534] ret_tmp[5596889])
              (5596892 'move' call_tmp[4028327] ret_tmp[5596889])
              (4028336 'move' _iterator[4028325](4028339 call _getIterator[4029657] call_tmp[4028327]))
              {
                val ret[6098973]:_ir_keys__ref_map_string_Module__real32_F[4029648] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6098975]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6098977]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6098979]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead at end of block" "maybe param" "temp"
                const-ref this[6099267]:_ref(map(string,Module(real(32)),false))[1941017] "temp"
                (6099272 'move' this[6099267](6099269 '.v' _iterator[4028325] F0_this[7187222]))
                (6098981 'move' call_tmp[6098979](6098984 call table[3256947] this[6099267]))
                const-val call_tmp[6098986]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6098988]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "temp"
                (6098991 call allSlots[4029017] call_tmp[6098979] ret_tmp[6098988])
                (6098994 'move' call_tmp[6098986] ret_tmp[6098988])
                (6098997 'move' _iterator[6098977](6099000 call _getIterator[4029123] call_tmp[6098986]))
                const-ref table_ref[6099002]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "temp"
                const-ref this[6099274]:_ref(map(string,Module(real(32)),false))[1941017] "temp"
                (6099279 'move' this[6099274](6099276 '.v' _iterator[4028325] F0_this[7187222]))
                (6099004 'move' table_ref[6099002](6099007 call table[3256947] this[6099274]))
                {
                  val ret[6440488]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6440490]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6440492]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6440494]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6440920]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "temp"
                  (6440925 'move' this[6440920](6440922 '.v' _iterator[6098977] F0_this[7187654]))
                  (6440496 'move' call_tmp[6440494](6440499 call tableSize[1942995] this[6440920]))
                  const-val call_tmp[6440501]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6440503]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6440505 'move' coerce_tmp[6440503](6440507 'deref' call_tmp[6440494]))
                  const-val ret_tmp[6440509]:_ir__allSlots[1946137] "temp"
                  (6440512 call _allSlots[265237] coerce_tmp[6440503] ret_tmp[6440509])
                  (6440515 'move' call_tmp[6440501] ret_tmp[6440509])
                  (6440518 'move' _iterator[6440492](6440521 call _getIterator[1946146] call_tmp[6440501]))
                  {
                    val ret[6440524]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6440526]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6440528]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6440530]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6440532]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6440534]:int(64)[10] "temp"
                    (6440536 'move' size[6440534](6440538 '.v' _iterator[6440492] F0_size[6829964]))
                    (6440542 call chpl_direct_counted_range_iter[1468903] 0 size[6440534] ret_tmp[6440532])
                    (6440546 'move' call_tmp[6440530] ret_tmp[6440532])
                    (6440549 'move' _iterator[6440528](6440552 call _getIterator[1520079] call_tmp[6440530]))
                    {
                      val ret[6440555]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6440557]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6440559]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6440561]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6440563]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6440565]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6440567]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6440569]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6440571]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6440573]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6440575]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6440577]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6440579]:int(64)[10] "temp"
                      (6440581 'move' low[6440579](6440583 '.v' _iterator[6440528] F0_low[6832410]))
                      const-val count[6440586]:int(64)[10] "temp"
                      (6440588 'move' count[6440586](6440590 '.v' _iterator[6440528] F1_count[6832414]))
                      (6440594 call chpl_direct_counted_range_iter_helper[1469227] low[6440579] count[6440586] ret_tmp[6440577])
                      (6440598 'move' call_tmp[6440575] ret_tmp[6440577])
                      (6440601 'move' _iterator[6440573](6440604 call _getIterator[1519812] call_tmp[6440575]))
                      {
                        val ret[6675052]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6675054]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6675056]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6675058]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6675060]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6675062]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6675064]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6675066]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6675068]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6675070]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6675072]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6675074]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6675076]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6675078]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6675080]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6675082]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6675657]:int(64)[10] "temp"
                        (6675662 'move' count[6675657](6675659 '.v' _iterator[6440573] F1_count[6834178]))
                        (6675084 'move' call_tmp[6675082](6675087 call <[1469576] count[6675657] 0))
                        (6675090 'move' tmp[6675080] call_tmp[6675082])
                        (6675093 'move' tmp[6675074] call_tmp[6675082])
                        const-val call_tmp[6675096]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6675098 'move' call_tmp[6675096] call_tmp[6675082])
                        if call_tmp[6675082]
                        {
                          (6675104 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6675107]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6675664]:int(64)[10] "temp"
                        (6675669 'move' low[6675664](6675666 '.v' _iterator[6440573] F0_low[6834174]))
                        (6675109 'move' start[6675107] low[6675664])
                        const-val end[6675112]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6675114]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6675116]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6675118]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6675671]:int(64)[10] "temp"
                        (6675676 'move' count[6675671](6675673 '.v' _iterator[6440573] F1_count[6834178]))
                        (6675120 'move' call_tmp[6675118](6675123 call ==[52746] count[6675671] 0))
                        (6675126 'move' tmp[6675116] call_tmp[6675118])
                        if call_tmp[6675118]
                        {
                          const-val tmp[6675131]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6675133]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6675678]:int(64)[10] "temp"
                          (6675683 'move' low[6675678](6675680 '.v' _iterator[6440573] F0_low[6834174]))
                          (6675135 'move' call_tmp[6675133](6675137 'cast' uint(64)[86] low[6675678]))
                          const-val call_tmp[6675140]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6675142]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6675144 'move' coerce_tmp[6675142](6675146 'cast' uint(64)[86] 1))
                          (6675149 'move' call_tmp[6675140](6675152 call -[1487313] call_tmp[6675133]))
                          val call_tmp[6675154]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675156 'move' tmp[6675131](6675159 call :[1482043] call_tmp[6675140]))
                          (6675161 'move' tmp[6675114] tmp[6675131])
                        }
                        {
                          const-val tmp[6675165]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6675167]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6675169]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6675685]:int(64)[10] "temp"
                          (6675690 'move' count[6675685](6675687 '.v' _iterator[6440573] F1_count[6834178]))
                          (6675171 'move' call_tmp[6675169] count[6675685])
                          const-val call_tmp[6675174]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6675692]:int(64)[10] "temp"
                          (6675697 'move' count[6675692](6675694 '.v' _iterator[6440573] F1_count[6834178]))
                          (6675176 'move' call_tmp[6675174](6675179 call -[1487343] count[6675692]))
                          const-val call_tmp[6675181]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6675699]:int(64)[10] "temp"
                          (6675704 'move' low[6675699](6675701 '.v' _iterator[6440573] F0_low[6834174]))
                          (6675183 'move' call_tmp[6675181](6675186 call +[56587] low[6675699] call_tmp[6675174]))
                          val call_tmp[6675189]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675191 'move' tmp[6675165] call_tmp[6675181])
                          (6675194 'move' tmp[6675114] call_tmp[6675181])
                        }
                        (6675198 'move' end[6675112] tmp[6675114])
                        val _indexOfInterest[6675201]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6675203]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6675205]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6675207]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6675210 call chpl_direct_param_stride_range_iter[1517410] start[6675107] tmp[6675114] ret_tmp[6675207])
                        (6675214 'move' call_tmp[6675205] ret_tmp[6675207])
                        (6675217 'move' _iterator[6675203](6675220 call _getIterator[1519541] call_tmp[6675205]))
                        {
                          val ret[6675223]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6675225]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675227]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675230 call chpl_range_check_stride[1517730])
                          val i[6675231]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6675233]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675235 'move' i[6675231] 0)
                          val call_tmp[6675238]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675240]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675242]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675244]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6675246]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6675248]:int(64)[10] "temp"
                          (6675250 'move' low[6675248](6675252 '.v' _iterator[6675203] F0_low[6835591]))
                          (6675255 'move' default_arg_first[6675246](6675258 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6675248]))
                          const-val default_arg_last[6675260]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6675262]:int(64)[10] "temp"
                          (6675264 'move' high[6675262](6675266 '.v' _iterator[6675203] F1_high[6835595]))
                          (6675269 'move' default_arg_last[6675260](6675272 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6675262]))
                          val default_arg_shouldHalt[6675274]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6675276]:bool[19] "dead after last mention" "temp"
                          const-val low[6675278]:int(64)[10] "temp"
                          (6675280 'move' low[6675278](6675282 '.v' _iterator[6675203] F0_low[6835591]))
                          const-val high[6675285]:int(64)[10] "temp"
                          (6675287 'move' high[6675285](6675289 '.v' _iterator[6675203] F1_high[6835595]))
                          (6675292 'move' _return_tmp_[6675276](6675295 call chpl_checkIfRangeIterWillOverflow[1518856] low[6675278] high[6675285] 1 default_arg_first[6675246] default_arg_last[6675260] 1))
                          CForLoop[6675302] hazard
                          {
                            const-val yret[6675333]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6675335 'move' yret[6675333] i[6675231])
                            const-val _yieldedIndex[6675338]:int(64)[10] "temp"
                            (6675340 'move' _yieldedIndex[6675338] i[6675231])
                            {
                              const-val i[6675344]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6675346 'move' i[6675344] _yieldedIndex[6675338])
                              const-val yret[6675349]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6675351 'move' yret[6675349] _yieldedIndex[6675338])
                              const-val _yieldedIndex[6675373]:int(64)[10] "temp"
                              (6675655 'move' _yieldedIndex[6675373] _yieldedIndex[6675338])
                              {
                                const-val i[6675375]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6675377 'move' i[6675375] _yieldedIndex[6675373])
                                const-val yret[6675380]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6675382 'move' yret[6675380] _yieldedIndex[6675373])
                                const-val _yieldedIndex[6675385]:int(64)[10] "temp"
                                (6675387 'move' _yieldedIndex[6675385] _yieldedIndex[6675373])
                                {
                                  const-val slot[6675391]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6675393 'move' slot[6675391] _yieldedIndex[6675385])
                                  const-val yret[6675396]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6675398 'move' yret[6675396] _yieldedIndex[6675385])
                                  const-val _yieldedIndex[6675401]:int(64)[10] "temp"
                                  (6675403 'move' _yieldedIndex[6675401] _yieldedIndex[6675385])
                                  {
                                    const-val slot[6675407]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6675409 'move' slot[6675407] _yieldedIndex[6675401])
                                    const-val yret[6675412]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6675414 'move' yret[6675412] _yieldedIndex[6675401])
                                    const-val _yieldedIndex[6675417]:int(64)[10] "temp"
                                    (6675419 'move' _yieldedIndex[6675417] _yieldedIndex[6675401])
                                    {
                                      const-val slot[6675423]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6675425 'move' slot[6675423] _yieldedIndex[6675417])
                                      const-val call_tmp[6675428]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6675430 'move' call_tmp[6675428] table_ref[6099002])
                                      const-val call_tmp[6675433]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6675435 'move' call_tmp[6675433](6675438 call isSlotFull[3421926] call_tmp[6675428] _yieldedIndex[6675417]))
                                      const-val call_tmp[6675441]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6675443 'move' call_tmp[6675441] call_tmp[6675433])
                                      if call_tmp[6675433]
                                      {
                                        const-ref yret[6675448]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6675450]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6675452 'move' call_tmp[6675450] table_ref[6099002])
                                        ref call_tmp[6675455]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6675457]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "temp"
                                        (6675459 'move' _this_tmp_[6675457](6675462 call table[1942967] call_tmp[6675450]))
                                        val coerce_tmp[6675464]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6675466 'move' coerce_tmp[6675464](6675468 'deref' _this_tmp_[6675457]))
                                        (6675470 'move' call_tmp[6675455](6675473 call this[1947405] coerce_tmp[6675464] slot[6675423]))
                                        const-ref call_tmp[6675476]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6675478 'move' call_tmp[6675476](6675481 call key[3259256] call_tmp[6675455]))
                                        const-ref _yieldedIndex[6675483]:_ref(string)[1466327] "temp"
                                        (6675485 'move' _yieldedIndex[6675483] call_tmp[6675476])
                                        {
                                          const-ref key[6675489]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6675491 'move' key[6675489] _yieldedIndex[6675483])
                                          {
                                            ref call_tmp[6675495]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
                                            (6675497 'move' call_tmp[6675495](6675500 call table[3256947] this[4027532]))
                                            const-val call_tmp[6675502]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6675504]:(bool,int(64))[3257010] "temp"
                                            (6675507 call findAvailableSlot[3256975] call_tmp[6675495] key[6675489] ret_tmp[6675504])
                                            (6675511 'move' call_tmp[6675502] ret_tmp[6675504])
                                            const-val tmp[6675514]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6675516 'move' tmp[6675514] call_tmp[6675502])
                                            1
                                            const-ref call_tmp[6675520]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6675522 'move' call_tmp[6675520](6675524 '.' tmp[6675514] x1[3257008]))
                                            const-val slot[6675527]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6675529]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6675531 'move' coerce_tmp[6675529](6675533 'deref' call_tmp[6675520]))
                                            (6675535 '=' slot[6675527] coerce_tmp[6675529])
                                            (6675538 'noop')
                                            const-ref call_tmp[6675539]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
                                            (6675541 'move' call_tmp[6675539](6675544 call table[3256947] other[4027534]))
                                            const-val call_tmp[6675546]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6675548]:(bool,int(64))[3257010] "temp"
                                            (6675551 call findFullSlot[3421376] call_tmp[6675539] key[6675489] ret_tmp[6675548])
                                            (6675555 'move' call_tmp[6675546] ret_tmp[6675548])
                                            const-val tmp[6675558]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6675560 'move' tmp[6675558] call_tmp[6675546])
                                            1
                                            const-ref call_tmp[6675564]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6675566 'move' call_tmp[6675564](6675568 '.' tmp[6675558] x1[3257008]))
                                            const-val slot2[6675571]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6675573]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6675575 'move' coerce_tmp[6675573](6675577 'deref' call_tmp[6675564]))
                                            (6675579 '=' slot2[6675571] coerce_tmp[6675573])
                                            (6675582 'noop')
                                            ref call_tmp[6675583]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
                                            (6675585 'move' call_tmp[6675583](6675588 call table[3256947] this[4027532]))
                                            ref call_tmp[6675590]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
                                            (6675592 'move' call_tmp[6675590](6675595 call table[3256947] other[4027534]))
                                            ref call_tmp[6675597]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6675599]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "temp"
                                            (6675601 'move' _this_tmp_[6675599](6675604 call table[1942967] call_tmp[6675590]))
                                            val coerce_tmp[6675606]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6675608 'move' coerce_tmp[6675606](6675610 'deref' _this_tmp_[6675599]))
                                            (6675612 'move' call_tmp[6675597](6675615 call this[1947405] coerce_tmp[6675606] slot2[6675571]))
                                            const-ref call_tmp[6675618]:_ref(Module(real(32)))[1935660] "dead after last mention" "maybe param" "temp"
                                            (6675620 'move' call_tmp[6675618](6675623 call val[3261562] call_tmp[6675597]))
                                            const-val _formal_tmp_in_key[6675625]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6675627 'move' _formal_tmp_in_key[6675625](6675630 call chpl__initCopy[1480493] key[6675489] 0))
                                            val coerce_tmp[6675633]:Module(real(32))[1935500] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6675635 'move' coerce_tmp[6675633](6675637 'deref' call_tmp[6675618]))
                                            (6675640 call fillSlot[3262311] call_tmp[6675583] slot[6675527] _formal_tmp_in_key[6675625] coerce_tmp[6675633])
                                            (6675646 call chpl__autoDestroy[4207177] tmp[6675558])
                                            (6675649 call chpl__autoDestroy[4207177] tmp[6675514])
                                          }
                                          label _continueLabel[6675651]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6675304]:int(64)[10] "temp"
                              (6675306 'move' low[6675304](6675308 '.v' _iterator[6675203] F0_low[6835591]))
                              (6675311 '=' i[6675231] low[6675304])
                            }
                            {
                              const-val high[6675315]:int(64)[10] "temp"
                              (6675317 'move' high[6675315](6675319 '.v' _iterator[6675203] F1_high[6835595]))
                              (6675322 '<=' i[6675231] high[6675315])
                            }
                            {
                              val call_tmp[6675326]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6675328]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6675330 '+=' i[6675231] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6675364]
                        }
                        (6675367 call _freeIterator[1519714] _iterator[6675203])
                        label _endchpl_direct_counted_range_iter_helper[6675369]
                      }
                      (6440668 call _freeIterator[1519981] _iterator[6440573])
                      label _endchpl_direct_counted_range_iter[6440670]
                    }
                    (6440673 call _freeIterator[1520248] _iterator[6440528])
                    label _end_allSlots[6440675]
                  }
                  (6440678 call _freeIterator[1947321] _iterator[6440492])
                  label _endallSlots[6440680]
                }
                (6099094 call _freeIterator[4029520] _iterator[6098977])
                label _endkeys[6099096]
              }
              label _breakLabel[4028494]
              (5643418 call _freeIterator[4029826] _iterator[4028325])
            }
          }
        }
      }
    }
    (4028500 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].init=[4213251](ref arg this[4213255]:_ref(map(string,owned ModuleSpecification?,false))[3283695], ref arg other[4213257]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[4213272]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[4213274]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4213276]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4213278]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213284]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213292]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4213307]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4213309]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[4213348]:owned ModuleSpecification?[3283604] "dead after last mention" "temp" "type variable"
    val tmp[4213350]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4213352]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4213354]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213360]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213368]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4213383]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4213385]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[4213424]:bool[19] "dead after last mention" "param" "temp"
    val tmp[4213426]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4213428]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4213430]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213436]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4213444]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4213459]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[4213461]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[4213500]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4213502]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4213509]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4213523]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[4213536]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4213538]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4213540]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4213573]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[4213610]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4213612 'move' call_tmp[4213610](4213615 call resizeThreshold[4214415] other[4213257]))
    val resizeThreshold[4213618]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[4214446]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (4214450 'move' coerce_tmp[4214446](4214448 'deref' call_tmp[4213610]))
    (5644521 '=' resizeThreshold[4213618] coerce_tmp[4214446])
    (4213620 'noop')
    (4213623 '.=' this[4213255] resizeThreshold[3283668] resizeThreshold[4213618])
    val call_tmp[4213628]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213635]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[4213642]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4213644 'move' call_tmp[4213642](4213646 '.' this[4213255] resizeThreshold[3283668]))
    const-val call_tmp[4213649]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[4214457]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[4214482]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4214486 'move' coerce_tmp[4214482](4214484 'deref' call_tmp[4213642]))
    val default_arg_initialCapacity[4214507]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[4214516]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589430]:owned chpl__rehashHelpers?[1941081] "temp"
    (4214518 call init_default_rehashHelpers[3358794] ret_tmp[5589430])
    (5589433 'move' default_arg_rehashHelpers[4214516] ret_tmp[5589430])
    (4214460 call init[3354836] initTemp[4214457] coerce_tmp[4214482] 16 default_arg_rehashHelpers[4214516])
    (4213651 'move' call_tmp[4213649] initTemp[4214457])
    val call_tmp[4213658]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213665]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213672]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4213680]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    (4213682 'move' table[4213680] call_tmp[4213649])
    (4213686 '.=' this[4213255] table[3283671] table[4213680])
    val tmp[4213695]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4213697]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4213739]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213747]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4213754]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4213762]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[4213807]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4213815]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4213822]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4213830]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[4213875]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4213883]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4213890]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4213897]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[4213960]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[4213968]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4213975]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4213982]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[4214046]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[4214048]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[4214050]:_ir_keys__ref_map_string__owned_ModuleSpecification_F[4214798] "dead at end of block" "expr temp" "maybe param" "reference to a const" "temp"
              const-val ret_tmp[5597161]:_ir_keys__ref_map_string__owned_ModuleSpecification_F[4214798] "temp"
              (4214058 call keys[4214612] other[4213257] ret_tmp[5597161])
              (5597164 'move' call_tmp[4214050] ret_tmp[5597161])
              (4214059 'move' _iterator[4214048](4214062 call _getIterator[4214807] call_tmp[4214050]))
              {
                val ret[6104119]:_ir_keys__ref_map_string__owned_ModuleSpecification_F[4214798] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6104121]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6104123]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6104125]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead at end of block" "maybe param" "temp"
                const-ref this[6104415]:_ref(map(string,owned ModuleSpecification?,false))[3283695] "temp"
                (6104420 'move' this[6104415](6104417 '.v' _iterator[4214048] F0_this[7198202]))
                (6104127 'move' call_tmp[6104125](6104130 call table[3359695] this[6104415]))
                const-val call_tmp[6104132]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6104134]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "temp"
                (6104137 call allSlots[3359723] call_tmp[6104125] ret_tmp[6104134])
                (6104140 'move' call_tmp[6104132] ret_tmp[6104134])
                (6104143 'move' _iterator[6104123](6104146 call _getIterator[3359829] call_tmp[6104132]))
                const-ref table_ref[6104148]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "temp"
                const-ref this[6104422]:_ref(map(string,owned ModuleSpecification?,false))[3283695] "temp"
                (6104427 'move' this[6104422](6104424 '.v' _iterator[4214048] F0_this[7198202]))
                (6104150 'move' table_ref[6104148](6104153 call table[3359695] this[6104422]))
                {
                  val ret[6445641]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6445643]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6445645]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6445647]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6446440]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
                  (6446445 'move' this[6446440](6446442 '.v' _iterator[6104123] F0_this[7084885]))
                  (6445649 'move' call_tmp[6445647](6445652 call tableSize[3355205] this[6446440]))
                  const-val call_tmp[6445654]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6445656]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6445658 'move' coerce_tmp[6445656](6445660 'deref' call_tmp[6445647]))
                  const-val ret_tmp[6445662]:_ir__allSlots[1946137] "temp"
                  (6445665 call _allSlots[265237] coerce_tmp[6445656] ret_tmp[6445662])
                  (6445668 'move' call_tmp[6445654] ret_tmp[6445662])
                  (6445671 'move' _iterator[6445645](6445674 call _getIterator[1946146] call_tmp[6445654]))
                  {
                    val ret[6445677]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6445679]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6445681]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6445683]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6445685]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6445687]:int(64)[10] "temp"
                    (6445689 'move' size[6445687](6445691 '.v' _iterator[6445645] F0_size[6829964]))
                    (6445695 call chpl_direct_counted_range_iter[1468903] 0 size[6445687] ret_tmp[6445685])
                    (6445699 'move' call_tmp[6445683] ret_tmp[6445685])
                    (6445702 'move' _iterator[6445681](6445705 call _getIterator[1520079] call_tmp[6445683]))
                    {
                      val ret[6445708]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6445710]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6445712]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6445714]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6445716]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6445718]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6445720]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6445722]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6445724]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6445726]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6445728]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6445730]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6445732]:int(64)[10] "temp"
                      (6445734 'move' low[6445732](6445736 '.v' _iterator[6445681] F0_low[6832410]))
                      const-val count[6445739]:int(64)[10] "temp"
                      (6445741 'move' count[6445739](6445743 '.v' _iterator[6445681] F1_count[6832414]))
                      (6445747 call chpl_direct_counted_range_iter_helper[1469227] low[6445732] count[6445739] ret_tmp[6445730])
                      (6445751 'move' call_tmp[6445728] ret_tmp[6445730])
                      (6445754 'move' _iterator[6445726](6445757 call _getIterator[1519812] call_tmp[6445728]))
                      {
                        val ret[6445760]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6445762]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6445764]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6445766]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6445768]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6445770]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6445772]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6445774]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6445776]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6445778]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6445780]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6445782]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6445784]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6445786]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6445788]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6445790]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6445792]:int(64)[10] "temp"
                        (6445794 'move' count[6445792](6445796 '.v' _iterator[6445726] F1_count[6834178]))
                        (6445799 'move' call_tmp[6445790](6445802 call <[1469576] count[6445792] 0))
                        (6445805 'move' tmp[6445788] call_tmp[6445790])
                        (6445808 'move' tmp[6445782] call_tmp[6445790])
                        const-val call_tmp[6445811]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6445813 'move' call_tmp[6445811] call_tmp[6445790])
                        if call_tmp[6445790]
                        {
                          (6445819 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6445822]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6445824]:int(64)[10] "temp"
                        (6445826 'move' low[6445824](6445828 '.v' _iterator[6445726] F0_low[6834174]))
                        (6445831 'move' start[6445822] low[6445824])
                        const-val end[6445834]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6445836]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6445838]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6445840]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6445842]:int(64)[10] "temp"
                        (6445844 'move' count[6445842](6445846 '.v' _iterator[6445726] F1_count[6834178]))
                        (6445849 'move' call_tmp[6445840](6445852 call ==[52746] count[6445842] 0))
                        (6445855 'move' tmp[6445838] call_tmp[6445840])
                        if call_tmp[6445840]
                        {
                          const-val tmp[6445860]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6445862]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6445864]:int(64)[10] "temp"
                          (6445866 'move' low[6445864](6445868 '.v' _iterator[6445726] F0_low[6834174]))
                          (6445871 'move' call_tmp[6445862](6445873 'cast' uint(64)[86] low[6445864]))
                          const-val call_tmp[6445876]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6445878]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6445880 'move' coerce_tmp[6445878](6445882 'cast' uint(64)[86] 1))
                          (6445885 'move' call_tmp[6445876](6445888 call -[1487313] call_tmp[6445862]))
                          val call_tmp[6445890]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6445892 'move' tmp[6445860](6445895 call :[1482043] call_tmp[6445876]))
                          (6445897 'move' tmp[6445836] tmp[6445860])
                        }
                        {
                          const-val tmp[6445901]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6445903]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6445905]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6445907]:int(64)[10] "temp"
                          (6445909 'move' count[6445907](6445911 '.v' _iterator[6445726] F1_count[6834178]))
                          (6445914 'move' call_tmp[6445905] count[6445907])
                          const-val call_tmp[6445917]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6445919]:int(64)[10] "temp"
                          (6445921 'move' count[6445919](6445923 '.v' _iterator[6445726] F1_count[6834178]))
                          (6445926 'move' call_tmp[6445917](6445929 call -[1487343] count[6445919]))
                          const-val call_tmp[6445931]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6445933]:int(64)[10] "temp"
                          (6445935 'move' low[6445933](6445937 '.v' _iterator[6445726] F0_low[6834174]))
                          (6445940 'move' call_tmp[6445931](6445943 call +[56587] low[6445933] call_tmp[6445917]))
                          val call_tmp[6445946]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6445948 'move' tmp[6445901] call_tmp[6445931])
                          (6445951 'move' tmp[6445836] call_tmp[6445931])
                        }
                        (6445955 'move' end[6445834] tmp[6445836])
                        val _indexOfInterest[6445958]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6445960]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6445962]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6445964]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6445967 call chpl_direct_param_stride_range_iter[1517410] start[6445822] tmp[6445836] ret_tmp[6445964])
                        (6445971 'move' call_tmp[6445962] ret_tmp[6445964])
                        (6445974 'move' _iterator[6445960](6445977 call _getIterator[1519541] call_tmp[6445962]))
                        {
                          val ret[6445980]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6445982]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6445984]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6445987 call chpl_range_check_stride[1517730])
                          val i[6445988]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6445990]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6445992 'move' i[6445988] 0)
                          val call_tmp[6445995]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6445997]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6445999]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6446001]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6446003]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6446005]:int(64)[10] "temp"
                          (6446007 'move' low[6446005](6446009 '.v' _iterator[6445960] F0_low[6835591]))
                          (6446012 'move' default_arg_first[6446003](6446015 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6446005]))
                          const-val default_arg_last[6446017]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6446019]:int(64)[10] "temp"
                          (6446021 'move' high[6446019](6446023 '.v' _iterator[6445960] F1_high[6835595]))
                          (6446026 'move' default_arg_last[6446017](6446029 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6446019]))
                          val default_arg_shouldHalt[6446031]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6446033]:bool[19] "dead after last mention" "temp"
                          const-val low[6446035]:int(64)[10] "temp"
                          (6446037 'move' low[6446035](6446039 '.v' _iterator[6445960] F0_low[6835591]))
                          const-val high[6446042]:int(64)[10] "temp"
                          (6446044 'move' high[6446042](6446046 '.v' _iterator[6445960] F1_high[6835595]))
                          (6446049 'move' _return_tmp_[6446033](6446052 call chpl_checkIfRangeIterWillOverflow[1518856] low[6446035] high[6446042] 1 default_arg_first[6446003] default_arg_last[6446017] 1))
                          CForLoop[6446059] hazard
                          {
                            const-val yret[6446090]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6446092 'move' yret[6446090] i[6445988])
                            const-val _yieldedIndex[6446095]:int(64)[10] "temp"
                            (6446097 'move' _yieldedIndex[6446095] i[6445988])
                            {
                              const-val i[6446101]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6446103 'move' i[6446101] _yieldedIndex[6446095])
                              const-val yret[6446106]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6446108 'move' yret[6446106] _yieldedIndex[6446095])
                              const-val _yieldedIndex[6446111]:int(64)[10] "temp"
                              (6446113 'move' _yieldedIndex[6446111] _yieldedIndex[6446095])
                              {
                                const-val i[6446117]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6446119 'move' i[6446117] _yieldedIndex[6446111])
                                const-val yret[6446122]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6446124 'move' yret[6446122] _yieldedIndex[6446111])
                                const-val _yieldedIndex[6446127]:int(64)[10] "temp"
                                (6446129 'move' _yieldedIndex[6446127] _yieldedIndex[6446111])
                                {
                                  const-val slot[6446133]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6446135 'move' slot[6446133] _yieldedIndex[6446127])
                                  const-val yret[6446138]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6446140 'move' yret[6446138] _yieldedIndex[6446127])
                                  const-val _yieldedIndex[6446143]:int(64)[10] "temp"
                                  (6446145 'move' _yieldedIndex[6446143] _yieldedIndex[6446127])
                                  {
                                    const-val slot[6446149]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6446151 'move' slot[6446149] _yieldedIndex[6446143])
                                    const-val yret[6446154]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6446156 'move' yret[6446154] _yieldedIndex[6446143])
                                    const-val _yieldedIndex[6446202]:int(64)[10] "temp"
                                    (6446438 'move' _yieldedIndex[6446202] _yieldedIndex[6446143])
                                    {
                                      const-val slot[6446204]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6446206 'move' slot[6446204] _yieldedIndex[6446202])
                                      const-val call_tmp[6446209]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6446211 'move' call_tmp[6446209] table_ref[6104148])
                                      const-val call_tmp[6446214]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6446216 'move' call_tmp[6446214](6446219 call isSlotFull[3360309] call_tmp[6446209] _yieldedIndex[6446202]))
                                      const-val call_tmp[6446222]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6446224 'move' call_tmp[6446222] call_tmp[6446214])
                                      if call_tmp[6446214]
                                      {
                                        const-ref yret[6446229]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6446231]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6446233 'move' call_tmp[6446231] table_ref[6104148])
                                        ref call_tmp[6446236]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6446238]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
                                        (6446240 'move' _this_tmp_[6446238](6446243 call table[3355177] call_tmp[6446231]))
                                        val coerce_tmp[6446245]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6446247 'move' coerce_tmp[6446245](6446249 'deref' _this_tmp_[6446238]))
                                        (6446251 'move' call_tmp[6446236](6446254 call this[3358341] coerce_tmp[6446245] slot[6446204]))
                                        const-ref call_tmp[6446257]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6446259 'move' call_tmp[6446257](6446262 call key[3360817] call_tmp[6446236]))
                                        const-ref _yieldedIndex[6446264]:_ref(string)[1466327] "temp"
                                        (6446266 'move' _yieldedIndex[6446264] call_tmp[6446257])
                                        {
                                          const-ref key[6446270]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6446272 'move' key[6446270] _yieldedIndex[6446264])
                                          {
                                            ref call_tmp[6446276]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                                            (6446278 'move' call_tmp[6446276](6446281 call table[3359695] this[4213255]))
                                            const-val call_tmp[6446283]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6446285]:(bool,int(64))[3257010] "temp"
                                            (6446288 call findAvailableSlot[3372171] call_tmp[6446276] key[6446270] ret_tmp[6446285])
                                            (6446292 'move' call_tmp[6446283] ret_tmp[6446285])
                                            const-val tmp[6446295]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6446297 'move' tmp[6446295] call_tmp[6446283])
                                            1
                                            const-ref call_tmp[6446301]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6446303 'move' call_tmp[6446301](6446305 '.' tmp[6446295] x1[3257008]))
                                            const-val slot[6446308]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6446310]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6446312 'move' coerce_tmp[6446310](6446314 'deref' call_tmp[6446301]))
                                            (6446316 '=' slot[6446308] coerce_tmp[6446310])
                                            (6446319 'noop')
                                            const-ref call_tmp[6446320]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                                            (6446322 'move' call_tmp[6446320](6446325 call table[3359695] other[4213257]))
                                            const-val call_tmp[6446327]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6446329]:(bool,int(64))[3257010] "temp"
                                            (6446332 call findFullSlot[3396652] call_tmp[6446320] key[6446270] ret_tmp[6446329])
                                            (6446336 'move' call_tmp[6446327] ret_tmp[6446329])
                                            const-val tmp[6446339]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6446341 'move' tmp[6446339] call_tmp[6446327])
                                            1
                                            const-ref call_tmp[6446345]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6446347 'move' call_tmp[6446345](6446349 '.' tmp[6446339] x1[3257008]))
                                            const-val slot2[6446352]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6446354]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6446356 'move' coerce_tmp[6446354](6446358 'deref' call_tmp[6446345]))
                                            (6446360 '=' slot2[6446352] coerce_tmp[6446354])
                                            (6446363 'noop')
                                            ref call_tmp[6446364]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                                            (6446366 'move' call_tmp[6446364](6446369 call table[3359695] this[4213255]))
                                            ref call_tmp[6446371]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                                            (6446373 'move' call_tmp[6446371](6446376 call table[3359695] other[4213257]))
                                            ref call_tmp[6446378]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6446380]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
                                            (6446382 'move' _this_tmp_[6446380](6446385 call table[3355177] call_tmp[6446371]))
                                            val coerce_tmp[6446387]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6446389 'move' coerce_tmp[6446387](6446391 'deref' _this_tmp_[6446380]))
                                            (6446393 'move' call_tmp[6446378](6446396 call this[3358341] coerce_tmp[6446387] slot2[6446352]))
                                            ref call_tmp[6446399]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
                                            (6446401 'move' call_tmp[6446399](6446404 call val[3360847] call_tmp[6446378]))
                                            const-val _formal_tmp_in_key[6446406]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6446408 'move' _formal_tmp_in_key[6446406](6446411 call chpl__initCopy[1480493] key[6446270] 0))
                                            const-val _formal_tmp_in_val[6446414]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6446416 'move' _formal_tmp_in_val[6446414](6446419 call chpl__initCopy[3372936] call_tmp[6446399] 0))
                                            (6446423 call fillSlot[3372858] call_tmp[6446364] slot[6446308] _formal_tmp_in_key[6446406] _formal_tmp_in_val[6446414])
                                            (6446429 call chpl__autoDestroy[4207177] tmp[6446339])
                                            (6446432 call chpl__autoDestroy[4207177] tmp[6446295])
                                          }
                                          label _continueLabel[6446434]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6446061]:int(64)[10] "temp"
                              (6446063 'move' low[6446061](6446065 '.v' _iterator[6445960] F0_low[6835591]))
                              (6446068 '=' i[6445988] low[6446061])
                            }
                            {
                              const-val high[6446072]:int(64)[10] "temp"
                              (6446074 'move' high[6446072](6446076 '.v' _iterator[6445960] F1_high[6835595]))
                              (6446079 '<=' i[6445988] high[6446072])
                            }
                            {
                              val call_tmp[6446083]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6446085]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6446087 '+=' i[6445988] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6446178]
                        }
                        (6446181 call _freeIterator[1519714] _iterator[6445960])
                        label _endchpl_direct_counted_range_iter_helper[6446183]
                      }
                      (6446186 call _freeIterator[1519981] _iterator[6445726])
                      label _endchpl_direct_counted_range_iter[6446188]
                    }
                    (6446191 call _freeIterator[1520248] _iterator[6445681])
                    label _end_allSlots[6446193]
                  }
                  (6446196 call _freeIterator[1947321] _iterator[6445645])
                  label _endallSlots[6446198]
                }
                (6104240 call _freeIterator[3360226] _iterator[6104123])
                label _endkeys[6104242]
              }
              label _breakLabel[4214217]
              (5644540 call _freeIterator[4214976] _iterator[4214048])
            }
          }
        }
      }
    }
    (4214223 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].init=[4230673](ref arg this[4230677]:_ref(map(string,shared Module(real(32)),false))[3391869], ref arg other[4230679]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[4230694]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[4230696]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4230698]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4230700]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4230706]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4230714]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4230729]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4230731]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[4230770]:shared Module(real(32))[1955038] "dead after last mention" "temp" "type variable"
    val tmp[4230772]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4230774]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4230776]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4230782]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4230790]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4230805]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4230807]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[4230846]:bool[19] "dead after last mention" "param" "temp"
    val tmp[4230848]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4230850]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4230852]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4230858]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4230866]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4230881]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[4230883]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[4230922]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4230924]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4230931]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4230945]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[4230958]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4230960]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4230962]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4230995]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[4231032]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4231034 'move' call_tmp[4231032](4231037 call resizeThreshold[4231837] other[4230679]))
    val resizeThreshold[4231040]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[4231868]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (4231872 'move' coerce_tmp[4231868](4231870 'deref' call_tmp[4231032]))
    (5644594 '=' resizeThreshold[4231040] coerce_tmp[4231868])
    (4231042 'noop')
    (4231045 '.=' this[4230677] resizeThreshold[3391813] resizeThreshold[4231040])
    val call_tmp[4231050]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4231057]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[4231064]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4231066 'move' call_tmp[4231064](4231068 '.' this[4230677] resizeThreshold[3391813]))
    const-val call_tmp[4231071]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[4231879]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[4231904]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4231908 'move' coerce_tmp[4231904](4231906 'deref' call_tmp[4231064]))
    val default_arg_initialCapacity[4231929]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[4231938]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589752]:owned chpl__rehashHelpers?[1941081] "temp"
    (4231940 call init_default_rehashHelpers[3395928] ret_tmp[5589752])
    (5589755 'move' default_arg_rehashHelpers[4231938] ret_tmp[5589752])
    (4231882 call init[3391886] initTemp[4231879] coerce_tmp[4231904] 16 default_arg_rehashHelpers[4231938])
    (4231073 'move' call_tmp[4231071] initTemp[4231879])
    val call_tmp[4231080]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4231087]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4231094]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4231102]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    (4231104 'move' table[4231102] call_tmp[4231071])
    (4231108 '.=' this[4230677] table[3391816] table[4231102])
    val tmp[4231117]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4231119]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4231161]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4231169]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4231176]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4231184]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[4231229]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4231237]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4231244]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4231252]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[4231297]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4231305]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4231312]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4231319]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[4231382]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[4231390]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4231397]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4231404]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[4231468]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[4231470]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[4231472]:_ir_keys__ref_map_string__shared_Module__real32_F[4232767] "dead at end of block" "expr temp" "maybe param" "reference to a const" "temp"
              const-val ret_tmp[5597171]:_ir_keys__ref_map_string__shared_Module__real32_F[4232767] "temp"
              (4231480 call keys[4232000] other[4230679] ret_tmp[5597171])
              (5597174 'move' call_tmp[4231472] ret_tmp[5597171])
              (4231481 'move' _iterator[4231470](4231484 call _getIterator[4232776] call_tmp[4231472]))
              {
                val ret[6105111]:_ir_keys__ref_map_string__shared_Module__real32_F[4232767] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6105113]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6105115]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6105117]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead at end of block" "maybe param" "temp"
                const-ref this[6105407]:_ref(map(string,shared Module(real(32)),false))[3391869] "temp"
                (6105412 'move' this[6105407](6105409 '.v' _iterator[4231470] F0_this[7198634]))
                (6105119 'move' call_tmp[6105117](6105122 call table[3400787] this[6105407]))
                const-val call_tmp[6105124]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6105126]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "temp"
                (6105129 call allSlots[4232136] call_tmp[6105117] ret_tmp[6105126])
                (6105132 'move' call_tmp[6105124] ret_tmp[6105126])
                (6105135 'move' _iterator[6105115](6105138 call _getIterator[4232242] call_tmp[6105124]))
                const-ref table_ref[6105140]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "temp"
                const-ref this[6105414]:_ref(map(string,shared Module(real(32)),false))[3391869] "temp"
                (6105419 'move' this[6105414](6105416 '.v' _iterator[4231470] F0_this[7198634]))
                (6105142 'move' table_ref[6105140](6105145 call table[3400787] this[6105414]))
                {
                  val ret[6447879]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6447881]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6447883]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6447885]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6448313]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "temp"
                  (6448318 'move' this[6448313](6448315 '.v' _iterator[6105115] F0_this[7199066]))
                  (6447887 'move' call_tmp[6447885](6447890 call tableSize[3392339] this[6448313]))
                  const-val call_tmp[6447892]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6447894]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6447896 'move' coerce_tmp[6447894](6447898 'deref' call_tmp[6447885]))
                  const-val ret_tmp[6447900]:_ir__allSlots[1946137] "temp"
                  (6447903 call _allSlots[265237] coerce_tmp[6447894] ret_tmp[6447900])
                  (6447906 'move' call_tmp[6447892] ret_tmp[6447900])
                  (6447909 'move' _iterator[6447883](6447912 call _getIterator[1946146] call_tmp[6447892]))
                  {
                    val ret[6447915]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6447917]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6447919]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6447921]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6447923]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6447925]:int(64)[10] "temp"
                    (6447927 'move' size[6447925](6447929 '.v' _iterator[6447883] F0_size[6829964]))
                    (6447933 call chpl_direct_counted_range_iter[1468903] 0 size[6447925] ret_tmp[6447923])
                    (6447937 'move' call_tmp[6447921] ret_tmp[6447923])
                    (6447940 'move' _iterator[6447919](6447943 call _getIterator[1520079] call_tmp[6447921]))
                    {
                      val ret[6447946]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6447948]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6447950]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6447952]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6447954]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6447956]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6447958]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6447960]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6447962]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6447964]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6447966]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6447968]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6447970]:int(64)[10] "temp"
                      (6447972 'move' low[6447970](6447974 '.v' _iterator[6447919] F0_low[6832410]))
                      const-val count[6447977]:int(64)[10] "temp"
                      (6447979 'move' count[6447977](6447981 '.v' _iterator[6447919] F1_count[6832414]))
                      (6447985 call chpl_direct_counted_range_iter_helper[1469227] low[6447970] count[6447977] ret_tmp[6447968])
                      (6447989 'move' call_tmp[6447966] ret_tmp[6447968])
                      (6447992 'move' _iterator[6447964](6447995 call _getIterator[1519812] call_tmp[6447966]))
                      {
                        val ret[6675707]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6675709]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6675711]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6675713]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6675715]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6675717]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6675719]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6675721]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6675723]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6675725]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6675727]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6675729]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6675731]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6675733]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6675735]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6675737]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6676314]:int(64)[10] "temp"
                        (6676319 'move' count[6676314](6676316 '.v' _iterator[6447964] F1_count[6834178]))
                        (6675739 'move' call_tmp[6675737](6675742 call <[1469576] count[6676314] 0))
                        (6675745 'move' tmp[6675735] call_tmp[6675737])
                        (6675748 'move' tmp[6675729] call_tmp[6675737])
                        const-val call_tmp[6675751]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6675753 'move' call_tmp[6675751] call_tmp[6675737])
                        if call_tmp[6675737]
                        {
                          (6675759 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6675762]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6676321]:int(64)[10] "temp"
                        (6676326 'move' low[6676321](6676323 '.v' _iterator[6447964] F0_low[6834174]))
                        (6675764 'move' start[6675762] low[6676321])
                        const-val end[6675767]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6675769]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6675771]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6675773]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6676328]:int(64)[10] "temp"
                        (6676333 'move' count[6676328](6676330 '.v' _iterator[6447964] F1_count[6834178]))
                        (6675775 'move' call_tmp[6675773](6675778 call ==[52746] count[6676328] 0))
                        (6675781 'move' tmp[6675771] call_tmp[6675773])
                        if call_tmp[6675773]
                        {
                          const-val tmp[6675786]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6675788]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6676335]:int(64)[10] "temp"
                          (6676340 'move' low[6676335](6676337 '.v' _iterator[6447964] F0_low[6834174]))
                          (6675790 'move' call_tmp[6675788](6675792 'cast' uint(64)[86] low[6676335]))
                          const-val call_tmp[6675795]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6675797]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6675799 'move' coerce_tmp[6675797](6675801 'cast' uint(64)[86] 1))
                          (6675804 'move' call_tmp[6675795](6675807 call -[1487313] call_tmp[6675788]))
                          val call_tmp[6675809]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675811 'move' tmp[6675786](6675814 call :[1482043] call_tmp[6675795]))
                          (6675816 'move' tmp[6675769] tmp[6675786])
                        }
                        {
                          const-val tmp[6675820]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6675822]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6675824]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6676342]:int(64)[10] "temp"
                          (6676347 'move' count[6676342](6676344 '.v' _iterator[6447964] F1_count[6834178]))
                          (6675826 'move' call_tmp[6675824] count[6676342])
                          const-val call_tmp[6675829]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6676349]:int(64)[10] "temp"
                          (6676354 'move' count[6676349](6676351 '.v' _iterator[6447964] F1_count[6834178]))
                          (6675831 'move' call_tmp[6675829](6675834 call -[1487343] count[6676349]))
                          const-val call_tmp[6675836]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6676356]:int(64)[10] "temp"
                          (6676361 'move' low[6676356](6676358 '.v' _iterator[6447964] F0_low[6834174]))
                          (6675838 'move' call_tmp[6675836](6675841 call +[56587] low[6676356] call_tmp[6675829]))
                          val call_tmp[6675844]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675846 'move' tmp[6675820] call_tmp[6675836])
                          (6675849 'move' tmp[6675769] call_tmp[6675836])
                        }
                        (6675853 'move' end[6675767] tmp[6675769])
                        val _indexOfInterest[6675856]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6675858]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6675860]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6675862]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6675865 call chpl_direct_param_stride_range_iter[1517410] start[6675762] tmp[6675769] ret_tmp[6675862])
                        (6675869 'move' call_tmp[6675860] ret_tmp[6675862])
                        (6675872 'move' _iterator[6675858](6675875 call _getIterator[1519541] call_tmp[6675860]))
                        {
                          val ret[6675878]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6675880]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675882]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675885 call chpl_range_check_stride[1517730])
                          val i[6675886]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6675888]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6675890 'move' i[6675886] 0)
                          val call_tmp[6675893]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675895]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675897]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6675899]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6675901]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6675903]:int(64)[10] "temp"
                          (6675905 'move' low[6675903](6675907 '.v' _iterator[6675858] F0_low[6835591]))
                          (6675910 'move' default_arg_first[6675901](6675913 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6675903]))
                          const-val default_arg_last[6675915]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6675917]:int(64)[10] "temp"
                          (6675919 'move' high[6675917](6675921 '.v' _iterator[6675858] F1_high[6835595]))
                          (6675924 'move' default_arg_last[6675915](6675927 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6675917]))
                          val default_arg_shouldHalt[6675929]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6675931]:bool[19] "dead after last mention" "temp"
                          const-val low[6675933]:int(64)[10] "temp"
                          (6675935 'move' low[6675933](6675937 '.v' _iterator[6675858] F0_low[6835591]))
                          const-val high[6675940]:int(64)[10] "temp"
                          (6675942 'move' high[6675940](6675944 '.v' _iterator[6675858] F1_high[6835595]))
                          (6675947 'move' _return_tmp_[6675931](6675950 call chpl_checkIfRangeIterWillOverflow[1518856] low[6675933] high[6675940] 1 default_arg_first[6675901] default_arg_last[6675915] 1))
                          CForLoop[6675957] hazard
                          {
                            const-val yret[6675988]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6675990 'move' yret[6675988] i[6675886])
                            const-val _yieldedIndex[6675993]:int(64)[10] "temp"
                            (6675995 'move' _yieldedIndex[6675993] i[6675886])
                            {
                              const-val i[6675999]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6676001 'move' i[6675999] _yieldedIndex[6675993])
                              const-val yret[6676004]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6676006 'move' yret[6676004] _yieldedIndex[6675993])
                              const-val _yieldedIndex[6676028]:int(64)[10] "temp"
                              (6676312 'move' _yieldedIndex[6676028] _yieldedIndex[6675993])
                              {
                                const-val i[6676030]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6676032 'move' i[6676030] _yieldedIndex[6676028])
                                const-val yret[6676035]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6676037 'move' yret[6676035] _yieldedIndex[6676028])
                                const-val _yieldedIndex[6676040]:int(64)[10] "temp"
                                (6676042 'move' _yieldedIndex[6676040] _yieldedIndex[6676028])
                                {
                                  const-val slot[6676046]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6676048 'move' slot[6676046] _yieldedIndex[6676040])
                                  const-val yret[6676051]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6676053 'move' yret[6676051] _yieldedIndex[6676040])
                                  const-val _yieldedIndex[6676056]:int(64)[10] "temp"
                                  (6676058 'move' _yieldedIndex[6676056] _yieldedIndex[6676040])
                                  {
                                    const-val slot[6676062]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6676064 'move' slot[6676062] _yieldedIndex[6676056])
                                    const-val yret[6676067]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6676069 'move' yret[6676067] _yieldedIndex[6676056])
                                    const-val _yieldedIndex[6676072]:int(64)[10] "temp"
                                    (6676074 'move' _yieldedIndex[6676072] _yieldedIndex[6676056])
                                    {
                                      const-val slot[6676078]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6676080 'move' slot[6676078] _yieldedIndex[6676072])
                                      const-val call_tmp[6676083]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6676085 'move' call_tmp[6676083] table_ref[6105140])
                                      const-val call_tmp[6676088]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6676090 'move' call_tmp[6676088](6676093 call isSlotFull[3407477] call_tmp[6676083] _yieldedIndex[6676072]))
                                      const-val call_tmp[6676096]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6676098 'move' call_tmp[6676096] call_tmp[6676088])
                                      if call_tmp[6676088]
                                      {
                                        const-ref yret[6676103]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6676105]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6676107 'move' call_tmp[6676105] table_ref[6105140])
                                        ref call_tmp[6676110]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6676112]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "temp"
                                        (6676114 'move' _this_tmp_[6676112](6676117 call table[3392311] call_tmp[6676105]))
                                        val coerce_tmp[6676119]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6676121 'move' coerce_tmp[6676119](6676123 'deref' _this_tmp_[6676112]))
                                        (6676125 'move' call_tmp[6676110](6676128 call this[3395475] coerce_tmp[6676119] slot[6676078]))
                                        const-ref call_tmp[6676131]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6676133 'move' call_tmp[6676131](6676136 call key[3402607] call_tmp[6676110]))
                                        const-ref _yieldedIndex[6676138]:_ref(string)[1466327] "temp"
                                        (6676140 'move' _yieldedIndex[6676138] call_tmp[6676131])
                                        {
                                          const-ref key[6676144]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6676146 'move' key[6676144] _yieldedIndex[6676138])
                                          {
                                            ref call_tmp[6676150]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
                                            (6676152 'move' call_tmp[6676150](6676155 call table[3400787] this[4230677]))
                                            const-val call_tmp[6676157]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6676159]:(bool,int(64))[3257010] "temp"
                                            (6676162 call findAvailableSlot[3400815] call_tmp[6676150] key[6676144] ret_tmp[6676159])
                                            (6676166 'move' call_tmp[6676157] ret_tmp[6676159])
                                            const-val tmp[6676169]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6676171 'move' tmp[6676169] call_tmp[6676157])
                                            1
                                            const-ref call_tmp[6676175]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6676177 'move' call_tmp[6676175](6676179 '.' tmp[6676169] x1[3257008]))
                                            const-val slot[6676182]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6676184]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6676186 'move' coerce_tmp[6676184](6676188 'deref' call_tmp[6676175]))
                                            (6676190 '=' slot[6676182] coerce_tmp[6676184])
                                            (6676193 'noop')
                                            const-ref call_tmp[6676194]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
                                            (6676196 'move' call_tmp[6676194](6676199 call table[3400787] other[4230679]))
                                            const-val call_tmp[6676201]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6676203]:(bool,int(64))[3257010] "temp"
                                            (6676206 call findFullSlot[3406927] call_tmp[6676194] key[6676144] ret_tmp[6676203])
                                            (6676210 'move' call_tmp[6676201] ret_tmp[6676203])
                                            const-val tmp[6676213]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6676215 'move' tmp[6676213] call_tmp[6676201])
                                            1
                                            const-ref call_tmp[6676219]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6676221 'move' call_tmp[6676219](6676223 '.' tmp[6676213] x1[3257008]))
                                            const-val slot2[6676226]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6676228]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6676230 'move' coerce_tmp[6676228](6676232 'deref' call_tmp[6676219]))
                                            (6676234 '=' slot2[6676226] coerce_tmp[6676228])
                                            (6676237 'noop')
                                            ref call_tmp[6676238]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
                                            (6676240 'move' call_tmp[6676238](6676243 call table[3400787] this[4230677]))
                                            ref call_tmp[6676245]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
                                            (6676247 'move' call_tmp[6676245](6676250 call table[3400787] other[4230679]))
                                            ref call_tmp[6676252]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6676254]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "temp"
                                            (6676256 'move' _this_tmp_[6676254](6676259 call table[3392311] call_tmp[6676245]))
                                            val coerce_tmp[6676261]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6676263 'move' coerce_tmp[6676261](6676265 'deref' _this_tmp_[6676254]))
                                            (6676267 'move' call_tmp[6676252](6676270 call this[3395475] coerce_tmp[6676261] slot2[6676226]))
                                            const-ref call_tmp[6676273]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
                                            (6676275 'move' call_tmp[6676273](6676278 call val[3403754] call_tmp[6676252]))
                                            const-val _formal_tmp_in_key[6676280]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6676282 'move' _formal_tmp_in_key[6676280](6676285 call chpl__initCopy[1480493] key[6676144] 0))
                                            const-val _formal_tmp_in_val[6676288]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6676290 'move' _formal_tmp_in_val[6676288](6676293 call chpl__initCopy[3399328] call_tmp[6676273] 0))
                                            (6676297 call fillSlot[3404503] call_tmp[6676238] slot[6676182] _formal_tmp_in_key[6676280] _formal_tmp_in_val[6676288])
                                            (6676303 call chpl__autoDestroy[4207177] tmp[6676213])
                                            (6676306 call chpl__autoDestroy[4207177] tmp[6676169])
                                          }
                                          label _continueLabel[6676308]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6675959]:int(64)[10] "temp"
                              (6675961 'move' low[6675959](6675963 '.v' _iterator[6675858] F0_low[6835591]))
                              (6675966 '=' i[6675886] low[6675959])
                            }
                            {
                              const-val high[6675970]:int(64)[10] "temp"
                              (6675972 'move' high[6675970](6675974 '.v' _iterator[6675858] F1_high[6835595]))
                              (6675977 '<=' i[6675886] high[6675970])
                            }
                            {
                              val call_tmp[6675981]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6675983]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6675985 '+=' i[6675886] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6676019]
                        }
                        (6676022 call _freeIterator[1519714] _iterator[6675858])
                        label _endchpl_direct_counted_range_iter_helper[6676024]
                      }
                      (6448059 call _freeIterator[1519981] _iterator[6447964])
                      label _endchpl_direct_counted_range_iter[6448061]
                    }
                    (6448064 call _freeIterator[1520248] _iterator[6447919])
                    label _end_allSlots[6448066]
                  }
                  (6448069 call _freeIterator[1947321] _iterator[6447883])
                  label _endallSlots[6448071]
                }
                (6105232 call _freeIterator[4232639] _iterator[6105115])
                label _endkeys[6105234]
              }
              label _breakLabel[4231639]
              (5644613 call _freeIterator[4232945] _iterator[4231470])
            }
          }
        }
      }
    }
    (4231645 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].init=[4236395](ref arg this[4236399]:_ref(map(string,Module(real(64)),false))[3405193], ref arg other[4236401]:_ref(map(string,Module(real(64)),false))[3405193]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[4236416]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[4236418]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4236420]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4236422]:map(string,Module(real(64)),false)[3405184] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236428]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236436]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4236451]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4236453]:map(string,Module(real(64)),false)[3405184] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[4236492]:Module(real(64))[3405063] "dead after last mention" "temp" "type variable"
    val tmp[4236494]:Module(real(64))[3405063] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4236496]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4236498]:map(string,Module(real(64)),false)[3405184] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236504]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236512]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4236527]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4236529]:map(string,Module(real(64)),false)[3405184] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[4236568]:bool[19] "dead after last mention" "param" "temp"
    val tmp[4236570]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4236572]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4236574]:map(string,Module(real(64)),false)[3405184] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236580]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4236588]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4236603]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[4236605]:map(string,Module(real(64)),false)[3405184] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[4236644]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4236646]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4236653]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4236667]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[4236680]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4236682]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4236684]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4236717]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[4236754]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4236756 'move' call_tmp[4236754](4236759 call resizeThreshold[4237559] other[4236401]))
    val resizeThreshold[4236762]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[4237590]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (4237594 'move' coerce_tmp[4237590](4237592 'deref' call_tmp[4236754]))
    (5644641 '=' resizeThreshold[4236762] coerce_tmp[4237590])
    (4236764 'noop')
    (4236767 '.=' this[4236399] resizeThreshold[3405166] resizeThreshold[4236762])
    val call_tmp[4236772]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236779]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[4236786]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4236788 'move' call_tmp[4236786](4236790 '.' this[4236399] resizeThreshold[3405166]))
    const-val call_tmp[4236793]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[4237601]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[4237626]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4237630 'move' coerce_tmp[4237626](4237628 'deref' call_tmp[4236786]))
    val default_arg_initialCapacity[4237651]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[4237660]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5595773]:owned chpl__rehashHelpers?[1941081] "temp"
    (4237662 call init_default_rehashHelpers[3832521] ret_tmp[5595773])
    (5595776 'move' default_arg_rehashHelpers[4237660] ret_tmp[5595773])
    (4237604 call init[3828563] initTemp[4237601] coerce_tmp[4237626] 16 default_arg_rehashHelpers[4237660])
    (4236795 'move' call_tmp[4236793] initTemp[4237601])
    val call_tmp[4236802]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236809]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236816]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4236824]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    (4236826 'move' table[4236824] call_tmp[4236793])
    (4236830 '.=' this[4236399] table[3405169] table[4236824])
    val tmp[4236839]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4236841]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4236883]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236891]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4236898]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4236906]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[4236951]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4236959]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4236966]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4236974]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[4237019]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4237027]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4237034]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4237041]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[4237104]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[4237112]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4237119]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4237126]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[4237190]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[4237192]:_ic_keys__ref_map_string_Module__real64_F[4238586] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[4237194]:_ir_keys__ref_map_string_Module__real64_F[4238592] "dead at end of block" "expr temp" "maybe param" "reference to a const" "temp"
              const-val ret_tmp[5597191]:_ir_keys__ref_map_string_Module__real64_F[4238592] "temp"
              (4237202 call keys[4237748] other[4236401] ret_tmp[5597191])
              (5597194 'move' call_tmp[4237194] ret_tmp[5597191])
              (4237203 'move' _iterator[4237192](4237206 call _getIterator[4238601] call_tmp[4237194]))
              {
                val ret[6105941]:_ir_keys__ref_map_string_Module__real64_F[4238592] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6105943]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6105945]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6105947]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead at end of block" "maybe param" "temp"
                const-ref this[6106235]:_ref(map(string,Module(real(64)),false))[3405193] "temp"
                (6106240 'move' this[6106235](6106237 '.v' _iterator[4237192] F0_this[7201218]))
                (6105949 'move' call_tmp[6105947](6105952 call table[3860336] this[6106235]))
                const-val call_tmp[6105954]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6105956]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "temp"
                (6105959 call allSlots[4237884] call_tmp[6105947] ret_tmp[6105956])
                (6105962 'move' call_tmp[6105954] ret_tmp[6105956])
                (6105965 'move' _iterator[6105945](6105968 call _getIterator[4237990] call_tmp[6105954]))
                const-ref table_ref[6105970]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "temp"
                const-ref this[6106242]:_ref(map(string,Module(real(64)),false))[3405193] "temp"
                (6106247 'move' this[6106242](6106244 '.v' _iterator[4237192] F0_this[7201218]))
                (6105972 'move' table_ref[6105970](6105975 call table[3860336] this[6106242]))
                {
                  val ret[6449829]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6449831]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6449833]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6449835]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6450261]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "temp"
                  (6450266 'move' this[6450261](6450263 '.v' _iterator[6105945] F0_this[7201650]))
                  (6449837 'move' call_tmp[6449835](6449840 call tableSize[3828932] this[6450261]))
                  const-val call_tmp[6449842]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6449844]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6449846 'move' coerce_tmp[6449844](6449848 'deref' call_tmp[6449835]))
                  const-val ret_tmp[6449850]:_ir__allSlots[1946137] "temp"
                  (6449853 call _allSlots[265237] coerce_tmp[6449844] ret_tmp[6449850])
                  (6449856 'move' call_tmp[6449842] ret_tmp[6449850])
                  (6449859 'move' _iterator[6449833](6449862 call _getIterator[1946146] call_tmp[6449842]))
                  {
                    val ret[6449865]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6449867]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6449869]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6449871]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6449873]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6449875]:int(64)[10] "temp"
                    (6449877 'move' size[6449875](6449879 '.v' _iterator[6449833] F0_size[6829964]))
                    (6449883 call chpl_direct_counted_range_iter[1468903] 0 size[6449875] ret_tmp[6449873])
                    (6449887 'move' call_tmp[6449871] ret_tmp[6449873])
                    (6449890 'move' _iterator[6449869](6449893 call _getIterator[1520079] call_tmp[6449871]))
                    {
                      val ret[6449896]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6449898]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6449900]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6449902]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6449904]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6449906]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6449908]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6449910]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6449912]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6449914]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6449916]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6449918]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6449920]:int(64)[10] "temp"
                      (6449922 'move' low[6449920](6449924 '.v' _iterator[6449869] F0_low[6832410]))
                      const-val count[6449927]:int(64)[10] "temp"
                      (6449929 'move' count[6449927](6449931 '.v' _iterator[6449869] F1_count[6832414]))
                      (6449935 call chpl_direct_counted_range_iter_helper[1469227] low[6449920] count[6449927] ret_tmp[6449918])
                      (6449939 'move' call_tmp[6449916] ret_tmp[6449918])
                      (6449942 'move' _iterator[6449914](6449945 call _getIterator[1519812] call_tmp[6449916]))
                      {
                        val ret[6676364]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6676366]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6676368]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6676370]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6676372]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6676374]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6676376]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6676378]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6676380]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6676382]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6676384]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6676386]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6676388]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6676390]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6676392]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6676394]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6676969]:int(64)[10] "temp"
                        (6676974 'move' count[6676969](6676971 '.v' _iterator[6449914] F1_count[6834178]))
                        (6676396 'move' call_tmp[6676394](6676399 call <[1469576] count[6676969] 0))
                        (6676402 'move' tmp[6676392] call_tmp[6676394])
                        (6676405 'move' tmp[6676386] call_tmp[6676394])
                        const-val call_tmp[6676408]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6676410 'move' call_tmp[6676408] call_tmp[6676394])
                        if call_tmp[6676394]
                        {
                          (6676416 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6676419]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6676976]:int(64)[10] "temp"
                        (6676981 'move' low[6676976](6676978 '.v' _iterator[6449914] F0_low[6834174]))
                        (6676421 'move' start[6676419] low[6676976])
                        const-val end[6676424]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6676426]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6676428]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6676430]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6676983]:int(64)[10] "temp"
                        (6676988 'move' count[6676983](6676985 '.v' _iterator[6449914] F1_count[6834178]))
                        (6676432 'move' call_tmp[6676430](6676435 call ==[52746] count[6676983] 0))
                        (6676438 'move' tmp[6676428] call_tmp[6676430])
                        if call_tmp[6676430]
                        {
                          const-val tmp[6676443]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6676445]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6676990]:int(64)[10] "temp"
                          (6676995 'move' low[6676990](6676992 '.v' _iterator[6449914] F0_low[6834174]))
                          (6676447 'move' call_tmp[6676445](6676449 'cast' uint(64)[86] low[6676990]))
                          const-val call_tmp[6676452]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6676454]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6676456 'move' coerce_tmp[6676454](6676458 'cast' uint(64)[86] 1))
                          (6676461 'move' call_tmp[6676452](6676464 call -[1487313] call_tmp[6676445]))
                          val call_tmp[6676466]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6676468 'move' tmp[6676443](6676471 call :[1482043] call_tmp[6676452]))
                          (6676473 'move' tmp[6676426] tmp[6676443])
                        }
                        {
                          const-val tmp[6676477]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6676479]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6676481]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6676997]:int(64)[10] "temp"
                          (6677002 'move' count[6676997](6676999 '.v' _iterator[6449914] F1_count[6834178]))
                          (6676483 'move' call_tmp[6676481] count[6676997])
                          const-val call_tmp[6676486]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6677004]:int(64)[10] "temp"
                          (6677009 'move' count[6677004](6677006 '.v' _iterator[6449914] F1_count[6834178]))
                          (6676488 'move' call_tmp[6676486](6676491 call -[1487343] count[6677004]))
                          const-val call_tmp[6676493]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6677011]:int(64)[10] "temp"
                          (6677016 'move' low[6677011](6677013 '.v' _iterator[6449914] F0_low[6834174]))
                          (6676495 'move' call_tmp[6676493](6676498 call +[56587] low[6677011] call_tmp[6676486]))
                          val call_tmp[6676501]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6676503 'move' tmp[6676477] call_tmp[6676493])
                          (6676506 'move' tmp[6676426] call_tmp[6676493])
                        }
                        (6676510 'move' end[6676424] tmp[6676426])
                        val _indexOfInterest[6676513]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6676515]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6676517]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6676519]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6676522 call chpl_direct_param_stride_range_iter[1517410] start[6676419] tmp[6676426] ret_tmp[6676519])
                        (6676526 'move' call_tmp[6676517] ret_tmp[6676519])
                        (6676529 'move' _iterator[6676515](6676532 call _getIterator[1519541] call_tmp[6676517]))
                        {
                          val ret[6676535]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6676537]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6676539]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6676542 call chpl_range_check_stride[1517730])
                          val i[6676543]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6676545]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6676547 'move' i[6676543] 0)
                          val call_tmp[6676550]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6676552]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6676554]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6676556]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6676558]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6676560]:int(64)[10] "temp"
                          (6676562 'move' low[6676560](6676564 '.v' _iterator[6676515] F0_low[6835591]))
                          (6676567 'move' default_arg_first[6676558](6676570 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6676560]))
                          const-val default_arg_last[6676572]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6676574]:int(64)[10] "temp"
                          (6676576 'move' high[6676574](6676578 '.v' _iterator[6676515] F1_high[6835595]))
                          (6676581 'move' default_arg_last[6676572](6676584 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6676574]))
                          val default_arg_shouldHalt[6676586]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6676588]:bool[19] "dead after last mention" "temp"
                          const-val low[6676590]:int(64)[10] "temp"
                          (6676592 'move' low[6676590](6676594 '.v' _iterator[6676515] F0_low[6835591]))
                          const-val high[6676597]:int(64)[10] "temp"
                          (6676599 'move' high[6676597](6676601 '.v' _iterator[6676515] F1_high[6835595]))
                          (6676604 'move' _return_tmp_[6676588](6676607 call chpl_checkIfRangeIterWillOverflow[1518856] low[6676590] high[6676597] 1 default_arg_first[6676558] default_arg_last[6676572] 1))
                          CForLoop[6676614] hazard
                          {
                            const-val yret[6676645]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6676647 'move' yret[6676645] i[6676543])
                            const-val _yieldedIndex[6676650]:int(64)[10] "temp"
                            (6676652 'move' _yieldedIndex[6676650] i[6676543])
                            {
                              const-val i[6676656]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6676658 'move' i[6676656] _yieldedIndex[6676650])
                              const-val yret[6676661]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6676663 'move' yret[6676661] _yieldedIndex[6676650])
                              const-val _yieldedIndex[6676685]:int(64)[10] "temp"
                              (6676967 'move' _yieldedIndex[6676685] _yieldedIndex[6676650])
                              {
                                const-val i[6676687]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6676689 'move' i[6676687] _yieldedIndex[6676685])
                                const-val yret[6676692]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6676694 'move' yret[6676692] _yieldedIndex[6676685])
                                const-val _yieldedIndex[6676697]:int(64)[10] "temp"
                                (6676699 'move' _yieldedIndex[6676697] _yieldedIndex[6676685])
                                {
                                  const-val slot[6676703]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6676705 'move' slot[6676703] _yieldedIndex[6676697])
                                  const-val yret[6676708]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6676710 'move' yret[6676708] _yieldedIndex[6676697])
                                  const-val _yieldedIndex[6676713]:int(64)[10] "temp"
                                  (6676715 'move' _yieldedIndex[6676713] _yieldedIndex[6676697])
                                  {
                                    const-val slot[6676719]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6676721 'move' slot[6676719] _yieldedIndex[6676713])
                                    const-val yret[6676724]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6676726 'move' yret[6676724] _yieldedIndex[6676713])
                                    const-val _yieldedIndex[6676729]:int(64)[10] "temp"
                                    (6676731 'move' _yieldedIndex[6676729] _yieldedIndex[6676713])
                                    {
                                      const-val slot[6676735]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6676737 'move' slot[6676735] _yieldedIndex[6676729])
                                      const-val call_tmp[6676740]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6676742 'move' call_tmp[6676740] table_ref[6105970])
                                      const-val call_tmp[6676745]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6676747 'move' call_tmp[6676745](6676750 call isSlotFull[4238491] call_tmp[6676740] _yieldedIndex[6676729]))
                                      const-val call_tmp[6676753]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6676755 'move' call_tmp[6676753] call_tmp[6676745])
                                      if call_tmp[6676745]
                                      {
                                        const-ref yret[6676760]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6676762]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6676764 'move' call_tmp[6676762] table_ref[6105970])
                                        ref call_tmp[6676767]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6676769]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "temp"
                                        (6676771 'move' _this_tmp_[6676769](6676774 call table[3828904] call_tmp[6676762]))
                                        val coerce_tmp[6676776]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6676778 'move' coerce_tmp[6676776](6676780 'deref' _this_tmp_[6676769]))
                                        (6676782 'move' call_tmp[6676767](6676785 call this[3832068] coerce_tmp[6676776] slot[6676735]))
                                        const-ref call_tmp[6676788]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6676790 'move' call_tmp[6676788](6676793 call key[3862156] call_tmp[6676767]))
                                        const-ref _yieldedIndex[6676795]:_ref(string)[1466327] "temp"
                                        (6676797 'move' _yieldedIndex[6676795] call_tmp[6676788])
                                        {
                                          const-ref key[6676801]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6676803 'move' key[6676801] _yieldedIndex[6676795])
                                          {
                                            ref call_tmp[6676807]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
                                            (6676809 'move' call_tmp[6676807](6676812 call table[3860336] this[4236399]))
                                            const-val call_tmp[6676814]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6676816]:(bool,int(64))[3257010] "temp"
                                            (6676819 call findAvailableSlot[3860364] call_tmp[6676807] key[6676801] ret_tmp[6676816])
                                            (6676823 'move' call_tmp[6676814] ret_tmp[6676816])
                                            const-val tmp[6676826]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6676828 'move' tmp[6676826] call_tmp[6676814])
                                            1
                                            const-ref call_tmp[6676832]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6676834 'move' call_tmp[6676832](6676836 '.' tmp[6676826] x1[3257008]))
                                            const-val slot[6676839]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6676841]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6676843 'move' coerce_tmp[6676841](6676845 'deref' call_tmp[6676832]))
                                            (6676847 '=' slot[6676839] coerce_tmp[6676841])
                                            (6676850 'noop')
                                            const-ref call_tmp[6676851]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
                                            (6676853 'move' call_tmp[6676851](6676856 call table[3860336] other[4236401]))
                                            const-val call_tmp[6676858]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6676860]:(bool,int(64))[3257010] "temp"
                                            (6676863 call findFullSlot[4238876] call_tmp[6676851] key[6676801] ret_tmp[6676860])
                                            (6676867 'move' call_tmp[6676858] ret_tmp[6676860])
                                            const-val tmp[6676870]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6676872 'move' tmp[6676870] call_tmp[6676858])
                                            1
                                            const-ref call_tmp[6676876]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6676878 'move' call_tmp[6676876](6676880 '.' tmp[6676870] x1[3257008]))
                                            const-val slot2[6676883]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6676885]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6676887 'move' coerce_tmp[6676885](6676889 'deref' call_tmp[6676876]))
                                            (6676891 '=' slot2[6676883] coerce_tmp[6676885])
                                            (6676894 'noop')
                                            ref call_tmp[6676895]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
                                            (6676897 'move' call_tmp[6676895](6676900 call table[3860336] this[4236399]))
                                            ref call_tmp[6676902]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
                                            (6676904 'move' call_tmp[6676902](6676907 call table[3860336] other[4236401]))
                                            ref call_tmp[6676909]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6676911]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "temp"
                                            (6676913 'move' _this_tmp_[6676911](6676916 call table[3828904] call_tmp[6676902]))
                                            val coerce_tmp[6676918]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6676920 'move' coerce_tmp[6676918](6676922 'deref' _this_tmp_[6676911]))
                                            (6676924 'move' call_tmp[6676909](6676927 call this[3832068] coerce_tmp[6676918] slot2[6676883]))
                                            const-ref call_tmp[6676930]:_ref(Module(real(64)))[3405072] "dead after last mention" "maybe param" "temp"
                                            (6676932 'move' call_tmp[6676930](6676935 call val[3863303] call_tmp[6676909]))
                                            const-val _formal_tmp_in_key[6676937]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6676939 'move' _formal_tmp_in_key[6676937](6676942 call chpl__initCopy[1480493] key[6676801] 0))
                                            val coerce_tmp[6676945]:Module(real(64))[3405063] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6676947 'move' coerce_tmp[6676945](6676949 'deref' call_tmp[6676930]))
                                            (6676952 call fillSlot[3864052] call_tmp[6676895] slot[6676839] _formal_tmp_in_key[6676937] coerce_tmp[6676945])
                                            (6676958 call chpl__autoDestroy[4207177] tmp[6676870])
                                            (6676961 call chpl__autoDestroy[4207177] tmp[6676826])
                                          }
                                          label _continueLabel[6676963]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6676616]:int(64)[10] "temp"
                              (6676618 'move' low[6676616](6676620 '.v' _iterator[6676515] F0_low[6835591]))
                              (6676623 '=' i[6676543] low[6676616])
                            }
                            {
                              const-val high[6676627]:int(64)[10] "temp"
                              (6676629 'move' high[6676627](6676631 '.v' _iterator[6676515] F1_high[6835595]))
                              (6676634 '<=' i[6676543] high[6676627])
                            }
                            {
                              val call_tmp[6676638]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6676640]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6676642 '+=' i[6676543] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6676676]
                        }
                        (6676679 call _freeIterator[1519714] _iterator[6676515])
                        label _endchpl_direct_counted_range_iter_helper[6676681]
                      }
                      (6450009 call _freeIterator[1519981] _iterator[6449914])
                      label _endchpl_direct_counted_range_iter[6450011]
                    }
                    (6450014 call _freeIterator[1520248] _iterator[6449869])
                    label _end_allSlots[6450016]
                  }
                  (6450019 call _freeIterator[1947321] _iterator[6449833])
                  label _endallSlots[6450021]
                }
                (6106062 call _freeIterator[4238387] _iterator[6105945])
                label _endkeys[6106064]
              }
              label _breakLabel[4237361]
              (5644660 call _freeIterator[4238770] _iterator[4237192])
            }
          }
        }
      }
    }
    (4237367 return _void[46])
  }
  function _ref(map(string,shared Module(real(64)),false))[3855346].init=[4303854](ref arg this[4303858]:_ref(map(string,shared Module(real(64)),false))[3855346], ref arg other[4303860]:_ref(map(string,shared Module(real(64)),false))[3855346]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[4303875]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[4303877]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4303879]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4303881]:map(string,shared Module(real(64)),false)[3855337] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4303887]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4303895]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4303910]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4303912]:map(string,shared Module(real(64)),false)[3855337] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[4303951]:shared Module(real(64))[3405428] "dead after last mention" "temp" "type variable"
    val tmp[4303953]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[4303955]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4303957]:map(string,shared Module(real(64)),false)[3855337] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4303963]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4303971]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4303986]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[4303988]:map(string,shared Module(real(64)),false)[3855337] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[4304027]:bool[19] "dead after last mention" "param" "temp"
    val tmp[4304029]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4304031]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4304033]:map(string,shared Module(real(64)),false)[3855337] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4304039]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4304047]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[4304062]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[4304064]:map(string,shared Module(real(64)),false)[3855337] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[4304103]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4304105]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4304112]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4304126]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[4304139]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4304141]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4304143]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4304176]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[4304213]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4304215 'move' call_tmp[4304213](4304218 call resizeThreshold[4305071] other[4303860]))
    val resizeThreshold[4304221]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[4305102]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (4305106 'move' coerce_tmp[4305102](4305104 'deref' call_tmp[4304213]))
    (5645271 '=' resizeThreshold[4304221] coerce_tmp[4305102])
    (4304223 'noop')
    (4304226 '.=' this[4303858] resizeThreshold[3855319] resizeThreshold[4304221])
    val call_tmp[4304231]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4304238]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[4304245]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4304247 'move' call_tmp[4304245](4304249 '.' this[4303858] resizeThreshold[3855319]))
    const-val call_tmp[4304252]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[4305113]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[4309074]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4309078 'move' coerce_tmp[4309074](4309076 'deref' call_tmp[4304245]))
    val default_arg_initialCapacity[4309099]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[4309145]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5597401]:owned chpl__rehashHelpers?[1941081] "temp"
    (4309147 call init_default_rehashHelpers[4309108] ret_tmp[5597401])
    (5597404 'move' default_arg_rehashHelpers[4309145] ret_tmp[5597401])
    (4305116 call init[4305123] initTemp[4305113] coerce_tmp[4309074] 16 default_arg_rehashHelpers[4309145])
    (4304254 'move' call_tmp[4304252] initTemp[4305113])
    val call_tmp[4304261]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4304268]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4304275]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4304283]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "delay instantiation" "temp"
    (4304285 'move' table[4304283] call_tmp[4304252])
    (4304289 '.=' this[4303858] table[3855322] table[4304283])
    val tmp[4304298]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4304300]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4304342]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4304350]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4304357]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4304365]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[4304410]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4304418]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4304425]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4304433]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[4304478]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4304486]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4304493]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4304500]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[4304563]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[4304571]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4304578]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[4304585]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[4304649]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[4304651]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[4304653]:_ir_keys__ref_map_string__shared_Module__real64_F[4310236] "dead at end of block" "expr temp" "maybe param" "reference to a const" "temp"
              const-val ret_tmp[5597413]:_ir_keys__ref_map_string__shared_Module__real64_F[4310236] "temp"
              (4304661 call keys[4309311] other[4303860] ret_tmp[5597413])
              (5597416 'move' call_tmp[4304653] ret_tmp[5597413])
              (4304662 'move' _iterator[4304651](4304665 call _getIterator[4310245] call_tmp[4304653]))
              {
                val ret[6109548]:_ir_keys__ref_map_string__shared_Module__real64_F[4310236] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6109550]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6109552]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6109554]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead at end of block" "maybe param" "temp"
                const-ref this[6109844]:_ref(map(string,shared Module(real(64)),false))[3855346] "temp"
                (6109849 'move' this[6109844](6109846 '.v' _iterator[4304651] F0_this[7205764]))
                (6109556 'move' call_tmp[6109554](6109559 call table[4309446] this[6109844]))
                const-val call_tmp[6109561]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6109563]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "temp"
                (6109566 call allSlots[4309474] call_tmp[6109554] ret_tmp[6109563])
                (6109569 'move' call_tmp[6109561] ret_tmp[6109563])
                (6109572 'move' _iterator[6109552](6109575 call _getIterator[4309580] call_tmp[6109561]))
                const-ref table_ref[6109577]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead after last mention" "temp"
                const-ref this[6109851]:_ref(map(string,shared Module(real(64)),false))[3855346] "temp"
                (6109856 'move' this[6109851](6109853 '.v' _iterator[4304651] F0_this[7205764]))
                (6109579 'move' table_ref[6109577](6109582 call table[4309446] this[6109851]))
                {
                  val ret[6453558]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6453560]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6453562]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6453564]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6453992]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "temp"
                  (6453997 'move' this[6453992](6453994 '.v' _iterator[6109552] F0_this[7206196]))
                  (6453566 'move' call_tmp[6453564](6453569 call tableSize[4305492] this[6453992]))
                  const-val call_tmp[6453571]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6453573]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6453575 'move' coerce_tmp[6453573](6453577 'deref' call_tmp[6453564]))
                  const-val ret_tmp[6453579]:_ir__allSlots[1946137] "temp"
                  (6453582 call _allSlots[265237] coerce_tmp[6453573] ret_tmp[6453579])
                  (6453585 'move' call_tmp[6453571] ret_tmp[6453579])
                  (6453588 'move' _iterator[6453562](6453591 call _getIterator[1946146] call_tmp[6453571]))
                  {
                    val ret[6453594]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6453596]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6453598]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6453600]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6453602]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6453604]:int(64)[10] "temp"
                    (6453606 'move' size[6453604](6453608 '.v' _iterator[6453562] F0_size[6829964]))
                    (6453612 call chpl_direct_counted_range_iter[1468903] 0 size[6453604] ret_tmp[6453602])
                    (6453616 'move' call_tmp[6453600] ret_tmp[6453602])
                    (6453619 'move' _iterator[6453598](6453622 call _getIterator[1520079] call_tmp[6453600]))
                    {
                      val ret[6453625]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6453627]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6453629]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6453631]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6453633]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6453635]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6453637]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6453639]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6453641]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6453643]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6453645]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6453647]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6453649]:int(64)[10] "temp"
                      (6453651 'move' low[6453649](6453653 '.v' _iterator[6453598] F0_low[6832410]))
                      const-val count[6453656]:int(64)[10] "temp"
                      (6453658 'move' count[6453656](6453660 '.v' _iterator[6453598] F1_count[6832414]))
                      (6453664 call chpl_direct_counted_range_iter_helper[1469227] low[6453649] count[6453656] ret_tmp[6453647])
                      (6453668 'move' call_tmp[6453645] ret_tmp[6453647])
                      (6453671 'move' _iterator[6453643](6453674 call _getIterator[1519812] call_tmp[6453645]))
                      {
                        val ret[6677019]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6677021]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6677023]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6677025]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6677027]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6677029]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6677031]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6677033]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6677035]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6677037]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6677039]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6677041]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6677043]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6677045]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6677047]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6677049]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6677626]:int(64)[10] "temp"
                        (6677631 'move' count[6677626](6677628 '.v' _iterator[6453643] F1_count[6834178]))
                        (6677051 'move' call_tmp[6677049](6677054 call <[1469576] count[6677626] 0))
                        (6677057 'move' tmp[6677047] call_tmp[6677049])
                        (6677060 'move' tmp[6677041] call_tmp[6677049])
                        const-val call_tmp[6677063]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6677065 'move' call_tmp[6677063] call_tmp[6677049])
                        if call_tmp[6677049]
                        {
                          (6677071 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6677074]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6677633]:int(64)[10] "temp"
                        (6677638 'move' low[6677633](6677635 '.v' _iterator[6453643] F0_low[6834174]))
                        (6677076 'move' start[6677074] low[6677633])
                        const-val end[6677079]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6677081]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6677083]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6677085]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6677640]:int(64)[10] "temp"
                        (6677645 'move' count[6677640](6677642 '.v' _iterator[6453643] F1_count[6834178]))
                        (6677087 'move' call_tmp[6677085](6677090 call ==[52746] count[6677640] 0))
                        (6677093 'move' tmp[6677083] call_tmp[6677085])
                        if call_tmp[6677085]
                        {
                          const-val tmp[6677098]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6677100]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6677647]:int(64)[10] "temp"
                          (6677652 'move' low[6677647](6677649 '.v' _iterator[6453643] F0_low[6834174]))
                          (6677102 'move' call_tmp[6677100](6677104 'cast' uint(64)[86] low[6677647]))
                          const-val call_tmp[6677107]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6677109]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6677111 'move' coerce_tmp[6677109](6677113 'cast' uint(64)[86] 1))
                          (6677116 'move' call_tmp[6677107](6677119 call -[1487313] call_tmp[6677100]))
                          val call_tmp[6677121]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6677123 'move' tmp[6677098](6677126 call :[1482043] call_tmp[6677107]))
                          (6677128 'move' tmp[6677081] tmp[6677098])
                        }
                        {
                          const-val tmp[6677132]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6677134]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6677136]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6677654]:int(64)[10] "temp"
                          (6677659 'move' count[6677654](6677656 '.v' _iterator[6453643] F1_count[6834178]))
                          (6677138 'move' call_tmp[6677136] count[6677654])
                          const-val call_tmp[6677141]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6677661]:int(64)[10] "temp"
                          (6677666 'move' count[6677661](6677663 '.v' _iterator[6453643] F1_count[6834178]))
                          (6677143 'move' call_tmp[6677141](6677146 call -[1487343] count[6677661]))
                          const-val call_tmp[6677148]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6677668]:int(64)[10] "temp"
                          (6677673 'move' low[6677668](6677670 '.v' _iterator[6453643] F0_low[6834174]))
                          (6677150 'move' call_tmp[6677148](6677153 call +[56587] low[6677668] call_tmp[6677141]))
                          val call_tmp[6677156]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6677158 'move' tmp[6677132] call_tmp[6677148])
                          (6677161 'move' tmp[6677081] call_tmp[6677148])
                        }
                        (6677165 'move' end[6677079] tmp[6677081])
                        val _indexOfInterest[6677168]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6677170]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6677172]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6677174]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6677177 call chpl_direct_param_stride_range_iter[1517410] start[6677074] tmp[6677081] ret_tmp[6677174])
                        (6677181 'move' call_tmp[6677172] ret_tmp[6677174])
                        (6677184 'move' _iterator[6677170](6677187 call _getIterator[1519541] call_tmp[6677172]))
                        {
                          val ret[6677190]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6677192]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6677194]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6677197 call chpl_range_check_stride[1517730])
                          val i[6677198]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6677200]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6677202 'move' i[6677198] 0)
                          val call_tmp[6677205]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6677207]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6677209]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6677211]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6677213]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6677215]:int(64)[10] "temp"
                          (6677217 'move' low[6677215](6677219 '.v' _iterator[6677170] F0_low[6835591]))
                          (6677222 'move' default_arg_first[6677213](6677225 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6677215]))
                          const-val default_arg_last[6677227]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6677229]:int(64)[10] "temp"
                          (6677231 'move' high[6677229](6677233 '.v' _iterator[6677170] F1_high[6835595]))
                          (6677236 'move' default_arg_last[6677227](6677239 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6677229]))
                          val default_arg_shouldHalt[6677241]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6677243]:bool[19] "dead after last mention" "temp"
                          const-val low[6677245]:int(64)[10] "temp"
                          (6677247 'move' low[6677245](6677249 '.v' _iterator[6677170] F0_low[6835591]))
                          const-val high[6677252]:int(64)[10] "temp"
                          (6677254 'move' high[6677252](6677256 '.v' _iterator[6677170] F1_high[6835595]))
                          (6677259 'move' _return_tmp_[6677243](6677262 call chpl_checkIfRangeIterWillOverflow[1518856] low[6677245] high[6677252] 1 default_arg_first[6677213] default_arg_last[6677227] 1))
                          CForLoop[6677269] hazard
                          {
                            const-val yret[6677300]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6677302 'move' yret[6677300] i[6677198])
                            const-val _yieldedIndex[6677305]:int(64)[10] "temp"
                            (6677307 'move' _yieldedIndex[6677305] i[6677198])
                            {
                              const-val i[6677311]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6677313 'move' i[6677311] _yieldedIndex[6677305])
                              const-val yret[6677316]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6677318 'move' yret[6677316] _yieldedIndex[6677305])
                              const-val _yieldedIndex[6677340]:int(64)[10] "temp"
                              (6677624 'move' _yieldedIndex[6677340] _yieldedIndex[6677305])
                              {
                                const-val i[6677342]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6677344 'move' i[6677342] _yieldedIndex[6677340])
                                const-val yret[6677347]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6677349 'move' yret[6677347] _yieldedIndex[6677340])
                                const-val _yieldedIndex[6677352]:int(64)[10] "temp"
                                (6677354 'move' _yieldedIndex[6677352] _yieldedIndex[6677340])
                                {
                                  const-val slot[6677358]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6677360 'move' slot[6677358] _yieldedIndex[6677352])
                                  const-val yret[6677363]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6677365 'move' yret[6677363] _yieldedIndex[6677352])
                                  const-val _yieldedIndex[6677368]:int(64)[10] "temp"
                                  (6677370 'move' _yieldedIndex[6677368] _yieldedIndex[6677352])
                                  {
                                    const-val slot[6677374]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6677376 'move' slot[6677374] _yieldedIndex[6677368])
                                    const-val yret[6677379]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6677381 'move' yret[6677379] _yieldedIndex[6677368])
                                    const-val _yieldedIndex[6677384]:int(64)[10] "temp"
                                    (6677386 'move' _yieldedIndex[6677384] _yieldedIndex[6677368])
                                    {
                                      const-val slot[6677390]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6677392 'move' slot[6677390] _yieldedIndex[6677384])
                                      const-val call_tmp[6677395]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6677397 'move' call_tmp[6677395] table_ref[6109577])
                                      const-val call_tmp[6677400]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6677402 'move' call_tmp[6677400](6677405 call isSlotFull[4310081] call_tmp[6677395] _yieldedIndex[6677384]))
                                      const-val call_tmp[6677408]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6677410 'move' call_tmp[6677408] call_tmp[6677400])
                                      if call_tmp[6677400]
                                      {
                                        const-ref yret[6677415]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6677417]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6677419 'move' call_tmp[6677417] table_ref[6109577])
                                        ref call_tmp[6677422]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6677424]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "temp"
                                        (6677426 'move' _this_tmp_[6677424](6677429 call table[4305464] call_tmp[6677417]))
                                        val coerce_tmp[6677431]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6677433 'move' coerce_tmp[6677431](6677435 'deref' _this_tmp_[6677424]))
                                        (6677437 'move' call_tmp[6677422](6677440 call this[4308628] coerce_tmp[6677431] slot[6677390]))
                                        const-ref call_tmp[6677443]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6677445 'move' call_tmp[6677443](6677448 call key[4310201] call_tmp[6677422]))
                                        const-ref _yieldedIndex[6677450]:_ref(string)[1466327] "temp"
                                        (6677452 'move' _yieldedIndex[6677450] call_tmp[6677443])
                                        {
                                          const-ref key[6677456]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6677458 'move' key[6677456] _yieldedIndex[6677450])
                                          {
                                            ref call_tmp[6677462]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead after last mention" "maybe param" "temp"
                                            (6677464 'move' call_tmp[6677462](6677467 call table[4309446] this[4303858]))
                                            const-val call_tmp[6677469]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6677471]:(bool,int(64))[3257010] "temp"
                                            (6677474 call findAvailableSlot[4310497] call_tmp[6677462] key[6677456] ret_tmp[6677471])
                                            (6677478 'move' call_tmp[6677469] ret_tmp[6677471])
                                            const-val tmp[6677481]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6677483 'move' tmp[6677481] call_tmp[6677469])
                                            1
                                            const-ref call_tmp[6677487]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6677489 'move' call_tmp[6677487](6677491 '.' tmp[6677481] x1[3257008]))
                                            const-val slot[6677494]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6677496]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6677498 'move' coerce_tmp[6677496](6677500 'deref' call_tmp[6677487]))
                                            (6677502 '=' slot[6677494] coerce_tmp[6677496])
                                            (6677505 'noop')
                                            const-ref call_tmp[6677506]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead after last mention" "maybe param" "temp"
                                            (6677508 'move' call_tmp[6677506](6677511 call table[4309446] other[4303860]))
                                            const-val call_tmp[6677513]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6677515]:(bool,int(64))[3257010] "temp"
                                            (6677518 call findFullSlot[4314054] call_tmp[6677506] key[6677456] ret_tmp[6677515])
                                            (6677522 'move' call_tmp[6677513] ret_tmp[6677515])
                                            const-val tmp[6677525]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6677527 'move' tmp[6677525] call_tmp[6677513])
                                            1
                                            const-ref call_tmp[6677531]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6677533 'move' call_tmp[6677531](6677535 '.' tmp[6677525] x1[3257008]))
                                            const-val slot2[6677538]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6677540]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6677542 'move' coerce_tmp[6677540](6677544 'deref' call_tmp[6677531]))
                                            (6677546 '=' slot2[6677538] coerce_tmp[6677540])
                                            (6677549 'noop')
                                            ref call_tmp[6677550]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead after last mention" "maybe param" "temp"
                                            (6677552 'move' call_tmp[6677550](6677555 call table[4309446] this[4303858]))
                                            ref call_tmp[6677557]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead after last mention" "maybe param" "temp"
                                            (6677559 'move' call_tmp[6677557](6677562 call table[4309446] other[4303860]))
                                            ref call_tmp[6677564]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6677566]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "temp"
                                            (6677568 'move' _this_tmp_[6677566](6677571 call table[4305464] call_tmp[6677557]))
                                            val coerce_tmp[6677573]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6677575 'move' coerce_tmp[6677573](6677577 'deref' _this_tmp_[6677566]))
                                            (6677579 'move' call_tmp[6677564](6677582 call this[4308628] coerce_tmp[6677573] slot2[6677538]))
                                            const-ref call_tmp[6677585]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
                                            (6677587 'move' call_tmp[6677585](6677590 call val[4313382] call_tmp[6677564]))
                                            const-val _formal_tmp_in_key[6677592]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6677594 'move' _formal_tmp_in_key[6677592](6677597 call chpl__initCopy[1480493] key[6677456] 0))
                                            const-val _formal_tmp_in_val[6677600]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6677602 'move' _formal_tmp_in_val[6677600](6677605 call chpl__initCopy[3864576] call_tmp[6677585] 0))
                                            (6677609 call fillSlot[4314352] call_tmp[6677550] slot[6677494] _formal_tmp_in_key[6677592] _formal_tmp_in_val[6677600])
                                            (6677615 call chpl__autoDestroy[4207177] tmp[6677525])
                                            (6677618 call chpl__autoDestroy[4207177] tmp[6677481])
                                          }
                                          label _continueLabel[6677620]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6677271]:int(64)[10] "temp"
                              (6677273 'move' low[6677271](6677275 '.v' _iterator[6677170] F0_low[6835591]))
                              (6677278 '=' i[6677198] low[6677271])
                            }
                            {
                              const-val high[6677282]:int(64)[10] "temp"
                              (6677284 'move' high[6677282](6677286 '.v' _iterator[6677170] F1_high[6835595]))
                              (6677289 '<=' i[6677198] high[6677282])
                            }
                            {
                              val call_tmp[6677293]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6677295]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6677297 '+=' i[6677198] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6677331]
                        }
                        (6677334 call _freeIterator[1519714] _iterator[6677170])
                        label _endchpl_direct_counted_range_iter_helper[6677336]
                      }
                      (6453738 call _freeIterator[1519981] _iterator[6453643])
                      label _endchpl_direct_counted_range_iter[6453740]
                    }
                    (6453743 call _freeIterator[1520248] _iterator[6453598])
                    label _end_allSlots[6453745]
                  }
                  (6453748 call _freeIterator[1947321] _iterator[6453562])
                  label _endallSlots[6453750]
                }
                (6109669 call _freeIterator[4309977] _iterator[6109552])
                label _endkeys[6109671]
              }
              label _breakLabel[4304820]
              (5645290 call _freeIterator[4310414] _iterator[4304651])
            }
          }
        }
      }
    }
    (4304826 return _void[46])
  }
  function _ref(map(string,string,false))[3283395].clear[3344292](ref arg this[3344296]:_ref(map(string,string,false))[3283395]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3344306 call _enter[3344461] this[3344296])
    {
      val _indexOfInterest[3344316]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3344318]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[3344320]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "temp"
      (3344322 'move' call_tmp[3344320](3344325 call table[3344610] this[3344296]))
      const-val call_tmp[3344328]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[5589248]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "temp"
      (3344336 call allSlots[3344638] call_tmp[3344320] ret_tmp[5589248])
      (5589251 'move' call_tmp[3344328] ret_tmp[5589248])
      (3344337 'move' _iterator[3344318](3344340 call _getIterator[3344744] call_tmp[3344328]))
      {
        val ret[6056273]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[6056275]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[6056277]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        const-ref call_tmp[6056279]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
        const-ref this[6056411]:_ref(chpl__hashtable(string,string))[3283450] "temp"
        (6056416 'move' this[6056411](6056413 '.v' _iterator[3344318] F0_this[7082328]))
        (6056281 'move' call_tmp[6056279](6056284 call tableSize[3340120] this[6056411]))
        const-val call_tmp[6056286]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[6056288]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (6056290 'move' coerce_tmp[6056288](6056292 'deref' call_tmp[6056279]))
        const-val ret_tmp[6056294]:_ir__allSlots[1946137] "temp"
        (6056297 call _allSlots[265237] coerce_tmp[6056288] ret_tmp[6056294])
        (6056300 'move' call_tmp[6056286] ret_tmp[6056294])
        (6056303 'move' _iterator[6056277](6056306 call _getIterator[1946146] call_tmp[6056286]))
        {
          val ret[6386749]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[6386751]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[6386753]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[6386755]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[6386757]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          const-val size[6387332]:int(64)[10] "temp"
          (6387337 'move' size[6387332](6387334 '.v' _iterator[6056277] F0_size[6829964]))
          (6386760 call chpl_direct_counted_range_iter[1468903] 0 size[6387332] ret_tmp[6386757])
          (6386764 'move' call_tmp[6386755] ret_tmp[6386757])
          (6386767 'move' _iterator[6386753](6386770 call _getIterator[1520079] call_tmp[6386755]))
          {
            val ret[6386773]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6386775]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6386777]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6386779]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6386781]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6386783]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6386785]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6386787]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6386789]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6386791]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6386793]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6386795]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6386797]:int(64)[10] "temp"
            (6386799 'move' low[6386797](6386801 '.v' _iterator[6386753] F0_low[6832410]))
            const-val count[6386804]:int(64)[10] "temp"
            (6386806 'move' count[6386804](6386808 '.v' _iterator[6386753] F1_count[6832414]))
            (6386812 call chpl_direct_counted_range_iter_helper[1469227] low[6386797] count[6386804] ret_tmp[6386795])
            (6386816 'move' call_tmp[6386793] ret_tmp[6386795])
            (6386819 'move' _iterator[6386791](6386822 call _getIterator[1519812] call_tmp[6386793]))
            {
              val ret[6386825]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
              val tmp[6386827]:bool[19] "dead after last mention" "maybe param" "temp"
              val tmp[6386829]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6386831]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6386833]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6386835]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6386837]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6386839]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              val call_tmp[6386841]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6386843]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6386845]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6386847]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val tmp[6386849]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6386851]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6386853]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6386855]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6386857]:int(64)[10] "temp"
              (6386859 'move' count[6386857](6386861 '.v' _iterator[6386791] F1_count[6834178]))
              (6386864 'move' call_tmp[6386855](6386867 call <[1469576] count[6386857] 0))
              (6386870 'move' tmp[6386853] call_tmp[6386855])
              (6386873 'move' tmp[6386847] call_tmp[6386855])
              const-val call_tmp[6386876]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (6386878 'move' call_tmp[6386876] call_tmp[6386855])
              if call_tmp[6386855]
              {
                (6386884 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
              }
              const-val start[6386887]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              const-val low[6386889]:int(64)[10] "temp"
              (6386891 'move' low[6386889](6386893 '.v' _iterator[6386791] F0_low[6834174]))
              (6386896 'move' start[6386887] low[6386889])
              const-val end[6386899]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              val tmp[6386901]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[6386903]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[6386905]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6386907]:int(64)[10] "temp"
              (6386909 'move' count[6386907](6386911 '.v' _iterator[6386791] F1_count[6834178]))
              (6386914 'move' call_tmp[6386905](6386917 call ==[52746] count[6386907] 0))
              (6386920 'move' tmp[6386903] call_tmp[6386905])
              if call_tmp[6386905]
              {
                const-val tmp[6386925]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6386927]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6386929]:int(64)[10] "temp"
                (6386931 'move' low[6386929](6386933 '.v' _iterator[6386791] F0_low[6834174]))
                (6386936 'move' call_tmp[6386927](6386938 'cast' uint(64)[86] low[6386929]))
                const-val call_tmp[6386941]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[6386943]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (6386945 'move' coerce_tmp[6386943](6386947 'cast' uint(64)[86] 1))
                (6386950 'move' call_tmp[6386941](6386953 call -[1487313] call_tmp[6386927]))
                val call_tmp[6386955]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6386957 'move' tmp[6386925](6386960 call :[1482043] call_tmp[6386941]))
                (6386962 'move' tmp[6386901] tmp[6386925])
              }
              {
                const-val tmp[6386966]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[6386968]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[6386970]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6386972]:int(64)[10] "temp"
                (6386974 'move' count[6386972](6386976 '.v' _iterator[6386791] F1_count[6834178]))
                (6386979 'move' call_tmp[6386970] count[6386972])
                const-val call_tmp[6386982]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6386984]:int(64)[10] "temp"
                (6386986 'move' count[6386984](6386988 '.v' _iterator[6386791] F1_count[6834178]))
                (6386991 'move' call_tmp[6386982](6386994 call -[1487343] count[6386984]))
                const-val call_tmp[6386996]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6386998]:int(64)[10] "temp"
                (6387000 'move' low[6386998](6387002 '.v' _iterator[6386791] F0_low[6834174]))
                (6387005 'move' call_tmp[6386996](6387008 call +[56587] low[6386998] call_tmp[6386982]))
                val call_tmp[6387011]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6387013 'move' tmp[6386966] call_tmp[6386996])
                (6387016 'move' tmp[6386901] call_tmp[6386996])
              }
              (6387020 'move' end[6386899] tmp[6386901])
              val _indexOfInterest[6387023]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6387025]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6387027]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6387029]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
              (6387032 call chpl_direct_param_stride_range_iter[1517410] start[6386887] tmp[6386901] ret_tmp[6387029])
              (6387036 'move' call_tmp[6387027] ret_tmp[6387029])
              (6387039 'move' _iterator[6387025](6387042 call _getIterator[1519541] call_tmp[6387027]))
              {
                val ret[6387045]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                val call_tmp[6387047]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387049]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6387052 call chpl_range_check_stride[1517730])
                val i[6387053]:int(64)[10] "dead at end of block" "insert auto destroy"
                val call_tmp[6387055]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6387057 'move' i[6387053] 0)
                val call_tmp[6387060]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387062]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387064]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387066]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[6387068]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[6387070]:int(64)[10] "temp"
                (6387072 'move' low[6387070](6387074 '.v' _iterator[6387025] F0_low[6835591]))
                (6387077 'move' default_arg_first[6387068](6387080 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6387070]))
                const-val default_arg_last[6387082]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[6387084]:int(64)[10] "temp"
                (6387086 'move' high[6387084](6387088 '.v' _iterator[6387025] F1_high[6835595]))
                (6387091 'move' default_arg_last[6387082](6387094 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6387084]))
                val default_arg_shouldHalt[6387096]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                const-val _return_tmp_[6387098]:bool[19] "dead after last mention" "temp"
                const-val low[6387100]:int(64)[10] "temp"
                (6387102 'move' low[6387100](6387104 '.v' _iterator[6387025] F0_low[6835591]))
                const-val high[6387107]:int(64)[10] "temp"
                (6387109 'move' high[6387107](6387111 '.v' _iterator[6387025] F1_high[6835595]))
                (6387114 'move' _return_tmp_[6387098](6387117 call chpl_checkIfRangeIterWillOverflow[1518856] low[6387100] high[6387107] 1 default_arg_first[6387068] default_arg_last[6387082] 1))
                CForLoop[6387124]
                {
                  const-val yret[6387155]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6387157 'move' yret[6387155] i[6387053])
                  const-val _yieldedIndex[6387160]:int(64)[10] "temp"
                  (6387162 'move' _yieldedIndex[6387160] i[6387053])
                  {
                    const-val i[6387166]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6387168 'move' i[6387166] _yieldedIndex[6387160])
                    const-val yret[6387171]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6387173 'move' yret[6387171] _yieldedIndex[6387160])
                    const-val _yieldedIndex[6387176]:int(64)[10] "temp"
                    (6387178 'move' _yieldedIndex[6387176] _yieldedIndex[6387160])
                    {
                      const-val i[6387182]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6387184 'move' i[6387182] _yieldedIndex[6387176])
                      const-val yret[6387187]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6387189 'move' yret[6387187] _yieldedIndex[6387176])
                      const-val _yieldedIndex[6387192]:int(64)[10] "temp"
                      (6387194 'move' _yieldedIndex[6387192] _yieldedIndex[6387176])
                      {
                        const-val slot[6387198]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6387200 'move' slot[6387198] _yieldedIndex[6387192])
                        const-val yret[6387203]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6387205 'move' yret[6387203] _yieldedIndex[6387192])
                        const-val _yieldedIndex[6387243]:int(64)[10] "temp"
                        (6387330 'move' _yieldedIndex[6387243] _yieldedIndex[6387192])
                        {
                          const-val slot[6387245]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6387247 'move' slot[6387245] _yieldedIndex[6387243])
                          const-val yret[6387250]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6387252 'move' yret[6387250] _yieldedIndex[6387243])
                          const-val _yieldedIndex[6387255]:int(64)[10] "temp"
                          (6387257 'move' _yieldedIndex[6387255] _yieldedIndex[6387243])
                          {
                            const-val slot[6387261]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6387263 'move' slot[6387261] _yieldedIndex[6387255])
                            {
                              const-ref call_tmp[6387267]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                              (6387269 'move' call_tmp[6387267](6387272 call table[3344610] this[3344296]))
                              const-val call_tmp[6387274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6387276 'move' call_tmp[6387274](6387279 call isSlotFull[3345224] call_tmp[6387267] slot[6387261]))
                              const-val call_tmp[6387282]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6387284 'move' call_tmp[6387282] call_tmp[6387274])
                              if call_tmp[6387282]
                              {
                                const-val key[6387289]:string[244] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6387291]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val val[6387293]:string[244] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6387295]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                ref call_tmp[6387297]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                (6387299 'move' call_tmp[6387297](6387302 call table[3344610] this[3344296]))
                                val _formal_tmp_out_key[6387304]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                val _formal_tmp_out_val[6387306]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                (6387309 call clearSlot[3345500] call_tmp[6387297] slot[6387261] _formal_tmp_out_key[6387304] _formal_tmp_out_val[6387306])
                                (6387314 'move' key[6387289] _formal_tmp_out_key[6387304])
                                (6387317 'move' val[6387293] _formal_tmp_out_val[6387306])
                                (6387321 call chpl__autoDestroy[3262688] val[6387293])
                                (6387324 call chpl__autoDestroy[3262688] key[6387289])
                              }
                            }
                            label _continueLabel[6387327]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[6387126]:int(64)[10] "temp"
                    (6387128 'move' low[6387126](6387130 '.v' _iterator[6387025] F0_low[6835591]))
                    (6387133 '=' i[6387053] low[6387126])
                  }
                  {
                    const-val high[6387137]:int(64)[10] "temp"
                    (6387139 'move' high[6387137](6387141 '.v' _iterator[6387025] F1_high[6835595]))
                    (6387144 '<=' i[6387053] high[6387137])
                  }
                  {
                    val call_tmp[6387148]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6387150]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    (6387152 '+=' i[6387053] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[6387224]
              }
              (6387227 call _freeIterator[1519714] _iterator[6387025])
              label _endchpl_direct_counted_range_iter_helper[6387229]
            }
            (6387232 call _freeIterator[1519981] _iterator[6386791])
            label _endchpl_direct_counted_range_iter[6387234]
          }
          (6387237 call _freeIterator[1520248] _iterator[6386753])
          label _end_allSlots[6387239]
        }
        (6056332 call _freeIterator[1947321] _iterator[6056277])
        label _endallSlots[6056334]
      }
      label _breakLabel[3344443]
      (5634955 call _freeIterator[3345141] _iterator[3344318])
    }
    ref call_tmp[3344445]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3344447 'move' call_tmp[3344445](3344450 call table[3344610] this[3344296]))
    (3344457 call maybeShrinkAfterRemove[3345869] call_tmp[3344445])
    (5634959 call _leave[3344562] this[3344296])
    (3344458 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].clear[3359377](ref arg this[3359381]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3359391 call _enter[3359546] this[3359381])
    {
      val _indexOfInterest[3359401]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3359403]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[3359405]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead at end of block" "maybe param" "temp"
      (3359407 'move' call_tmp[3359405](3359410 call table[3359695] this[3359381]))
      const-val call_tmp[3359413]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[5589442]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "temp"
      (3359421 call allSlots[3359723] call_tmp[3359405] ret_tmp[5589442])
      (5589445 'move' call_tmp[3359413] ret_tmp[5589442])
      (3359422 'move' _iterator[3359403](3359425 call _getIterator[3359829] call_tmp[3359413]))
      {
        val ret[6057918]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[6057920]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[6057922]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        const-ref call_tmp[6057924]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
        const-ref this[6058056]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
        (6058061 'move' this[6058056](6058058 '.v' _iterator[3359403] F0_this[7084885]))
        (6057926 'move' call_tmp[6057924](6057929 call tableSize[3355205] this[6058056]))
        const-val call_tmp[6057931]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[6057933]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (6057935 'move' coerce_tmp[6057933](6057937 'deref' call_tmp[6057924]))
        const-val ret_tmp[6057939]:_ir__allSlots[1946137] "temp"
        (6057942 call _allSlots[265237] coerce_tmp[6057933] ret_tmp[6057939])
        (6057945 'move' call_tmp[6057931] ret_tmp[6057939])
        (6057948 'move' _iterator[6057922](6057951 call _getIterator[1946146] call_tmp[6057931]))
        {
          val ret[6389441]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[6389443]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[6389445]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[6389447]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[6389449]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          const-val size[6390024]:int(64)[10] "temp"
          (6390029 'move' size[6390024](6390026 '.v' _iterator[6057922] F0_size[6829964]))
          (6389452 call chpl_direct_counted_range_iter[1468903] 0 size[6390024] ret_tmp[6389449])
          (6389456 'move' call_tmp[6389447] ret_tmp[6389449])
          (6389459 'move' _iterator[6389445](6389462 call _getIterator[1520079] call_tmp[6389447]))
          {
            val ret[6389465]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6389467]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6389469]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6389471]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6389473]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6389475]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6389477]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6389479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6389481]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6389483]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6389485]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6389487]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6389489]:int(64)[10] "temp"
            (6389491 'move' low[6389489](6389493 '.v' _iterator[6389445] F0_low[6832410]))
            const-val count[6389496]:int(64)[10] "temp"
            (6389498 'move' count[6389496](6389500 '.v' _iterator[6389445] F1_count[6832414]))
            (6389504 call chpl_direct_counted_range_iter_helper[1469227] low[6389489] count[6389496] ret_tmp[6389487])
            (6389508 'move' call_tmp[6389485] ret_tmp[6389487])
            (6389511 'move' _iterator[6389483](6389514 call _getIterator[1519812] call_tmp[6389485]))
            {
              val ret[6389517]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
              val tmp[6389519]:bool[19] "dead after last mention" "maybe param" "temp"
              val tmp[6389521]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6389523]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6389525]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6389527]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6389529]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6389531]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              val call_tmp[6389533]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6389535]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6389537]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6389539]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val tmp[6389541]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6389543]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6389545]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6389547]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6389549]:int(64)[10] "temp"
              (6389551 'move' count[6389549](6389553 '.v' _iterator[6389483] F1_count[6834178]))
              (6389556 'move' call_tmp[6389547](6389559 call <[1469576] count[6389549] 0))
              (6389562 'move' tmp[6389545] call_tmp[6389547])
              (6389565 'move' tmp[6389539] call_tmp[6389547])
              const-val call_tmp[6389568]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (6389570 'move' call_tmp[6389568] call_tmp[6389547])
              if call_tmp[6389547]
              {
                (6389576 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
              }
              const-val start[6389579]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              const-val low[6389581]:int(64)[10] "temp"
              (6389583 'move' low[6389581](6389585 '.v' _iterator[6389483] F0_low[6834174]))
              (6389588 'move' start[6389579] low[6389581])
              const-val end[6389591]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              val tmp[6389593]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[6389595]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[6389597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6389599]:int(64)[10] "temp"
              (6389601 'move' count[6389599](6389603 '.v' _iterator[6389483] F1_count[6834178]))
              (6389606 'move' call_tmp[6389597](6389609 call ==[52746] count[6389599] 0))
              (6389612 'move' tmp[6389595] call_tmp[6389597])
              if call_tmp[6389597]
              {
                const-val tmp[6389617]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6389619]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6389621]:int(64)[10] "temp"
                (6389623 'move' low[6389621](6389625 '.v' _iterator[6389483] F0_low[6834174]))
                (6389628 'move' call_tmp[6389619](6389630 'cast' uint(64)[86] low[6389621]))
                const-val call_tmp[6389633]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[6389635]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (6389637 'move' coerce_tmp[6389635](6389639 'cast' uint(64)[86] 1))
                (6389642 'move' call_tmp[6389633](6389645 call -[1487313] call_tmp[6389619]))
                val call_tmp[6389647]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389649 'move' tmp[6389617](6389652 call :[1482043] call_tmp[6389633]))
                (6389654 'move' tmp[6389593] tmp[6389617])
              }
              {
                const-val tmp[6389658]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[6389660]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[6389662]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6389664]:int(64)[10] "temp"
                (6389666 'move' count[6389664](6389668 '.v' _iterator[6389483] F1_count[6834178]))
                (6389671 'move' call_tmp[6389662] count[6389664])
                const-val call_tmp[6389674]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6389676]:int(64)[10] "temp"
                (6389678 'move' count[6389676](6389680 '.v' _iterator[6389483] F1_count[6834178]))
                (6389683 'move' call_tmp[6389674](6389686 call -[1487343] count[6389676]))
                const-val call_tmp[6389688]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6389690]:int(64)[10] "temp"
                (6389692 'move' low[6389690](6389694 '.v' _iterator[6389483] F0_low[6834174]))
                (6389697 'move' call_tmp[6389688](6389700 call +[56587] low[6389690] call_tmp[6389674]))
                val call_tmp[6389703]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389705 'move' tmp[6389658] call_tmp[6389688])
                (6389708 'move' tmp[6389593] call_tmp[6389688])
              }
              (6389712 'move' end[6389591] tmp[6389593])
              val _indexOfInterest[6389715]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6389717]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6389719]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6389721]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
              (6389724 call chpl_direct_param_stride_range_iter[1517410] start[6389579] tmp[6389593] ret_tmp[6389721])
              (6389728 'move' call_tmp[6389719] ret_tmp[6389721])
              (6389731 'move' _iterator[6389717](6389734 call _getIterator[1519541] call_tmp[6389719]))
              {
                val ret[6389737]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                val call_tmp[6389739]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389741]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389744 call chpl_range_check_stride[1517730])
                val i[6389745]:int(64)[10] "dead at end of block" "insert auto destroy"
                val call_tmp[6389747]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389749 'move' i[6389745] 0)
                val call_tmp[6389752]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389754]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389756]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389758]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[6389760]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[6389762]:int(64)[10] "temp"
                (6389764 'move' low[6389762](6389766 '.v' _iterator[6389717] F0_low[6835591]))
                (6389769 'move' default_arg_first[6389760](6389772 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6389762]))
                const-val default_arg_last[6389774]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[6389776]:int(64)[10] "temp"
                (6389778 'move' high[6389776](6389780 '.v' _iterator[6389717] F1_high[6835595]))
                (6389783 'move' default_arg_last[6389774](6389786 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6389776]))
                val default_arg_shouldHalt[6389788]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                const-val _return_tmp_[6389790]:bool[19] "dead after last mention" "temp"
                const-val low[6389792]:int(64)[10] "temp"
                (6389794 'move' low[6389792](6389796 '.v' _iterator[6389717] F0_low[6835591]))
                const-val high[6389799]:int(64)[10] "temp"
                (6389801 'move' high[6389799](6389803 '.v' _iterator[6389717] F1_high[6835595]))
                (6389806 'move' _return_tmp_[6389790](6389809 call chpl_checkIfRangeIterWillOverflow[1518856] low[6389792] high[6389799] 1 default_arg_first[6389760] default_arg_last[6389774] 1))
                CForLoop[6389816] hazard
                {
                  const-val yret[6389847]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6389849 'move' yret[6389847] i[6389745])
                  const-val _yieldedIndex[6389852]:int(64)[10] "temp"
                  (6389854 'move' _yieldedIndex[6389852] i[6389745])
                  {
                    const-val i[6389858]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6389860 'move' i[6389858] _yieldedIndex[6389852])
                    const-val yret[6389863]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6389865 'move' yret[6389863] _yieldedIndex[6389852])
                    const-val _yieldedIndex[6389868]:int(64)[10] "temp"
                    (6389870 'move' _yieldedIndex[6389868] _yieldedIndex[6389852])
                    {
                      const-val i[6389874]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6389876 'move' i[6389874] _yieldedIndex[6389868])
                      const-val yret[6389879]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6389881 'move' yret[6389879] _yieldedIndex[6389868])
                      const-val _yieldedIndex[6389884]:int(64)[10] "temp"
                      (6389886 'move' _yieldedIndex[6389884] _yieldedIndex[6389868])
                      {
                        const-val slot[6389890]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6389892 'move' slot[6389890] _yieldedIndex[6389884])
                        const-val yret[6389895]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6389897 'move' yret[6389895] _yieldedIndex[6389884])
                        const-val _yieldedIndex[6389935]:int(64)[10] "temp"
                        (6390022 'move' _yieldedIndex[6389935] _yieldedIndex[6389884])
                        {
                          const-val slot[6389937]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6389939 'move' slot[6389937] _yieldedIndex[6389935])
                          const-val yret[6389942]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6389944 'move' yret[6389942] _yieldedIndex[6389935])
                          const-val _yieldedIndex[6389947]:int(64)[10] "temp"
                          (6389949 'move' _yieldedIndex[6389947] _yieldedIndex[6389935])
                          {
                            const-val slot[6389953]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6389955 'move' slot[6389953] _yieldedIndex[6389947])
                            {
                              const-ref call_tmp[6389959]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                              (6389961 'move' call_tmp[6389959](6389964 call table[3359695] this[3359381]))
                              const-val call_tmp[6389966]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6389968 'move' call_tmp[6389966](6389971 call isSlotFull[3360309] call_tmp[6389959] slot[6389953]))
                              const-val call_tmp[6389974]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6389976 'move' call_tmp[6389974] call_tmp[6389966])
                              if call_tmp[6389974]
                              {
                                const-val key[6389981]:string[244] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6389983]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val val[6389985]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6389987]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                ref call_tmp[6389989]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                                (6389991 'move' call_tmp[6389989](6389994 call table[3359695] this[3359381]))
                                val _formal_tmp_out_key[6389996]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                val _formal_tmp_out_val[6389998]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                (6390001 call clearSlot[3360585] call_tmp[6389989] slot[6389953] _formal_tmp_out_key[6389996] _formal_tmp_out_val[6389998])
                                (6390006 'move' key[6389981] _formal_tmp_out_key[6389996])
                                (6390009 'move' val[6389985] _formal_tmp_out_val[6389998])
                                (6390013 call chpl__autoDestroy[3373663] val[6389985])
                                (6390016 call chpl__autoDestroy[3262688] key[6389981])
                              }
                            }
                            label _continueLabel[6390019]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[6389818]:int(64)[10] "temp"
                    (6389820 'move' low[6389818](6389822 '.v' _iterator[6389717] F0_low[6835591]))
                    (6389825 '=' i[6389745] low[6389818])
                  }
                  {
                    const-val high[6389829]:int(64)[10] "temp"
                    (6389831 'move' high[6389829](6389833 '.v' _iterator[6389717] F1_high[6835595]))
                    (6389836 '<=' i[6389745] high[6389829])
                  }
                  {
                    val call_tmp[6389840]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6389842]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    (6389844 '+=' i[6389745] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[6389916]
              }
              (6389919 call _freeIterator[1519714] _iterator[6389717])
              label _endchpl_direct_counted_range_iter_helper[6389921]
            }
            (6389924 call _freeIterator[1519981] _iterator[6389483])
            label _endchpl_direct_counted_range_iter[6389926]
          }
          (6389929 call _freeIterator[1520248] _iterator[6389445])
          label _end_allSlots[6389931]
        }
        (6057977 call _freeIterator[1947321] _iterator[6057922])
        label _endallSlots[6057979]
      }
      label _breakLabel[3359528]
      (5635207 call _freeIterator[3360226] _iterator[3359403])
    }
    ref call_tmp[3359530]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3359532 'move' call_tmp[3359530](3359535 call table[3359695] this[3359381]))
    (3359542 call maybeShrinkAfterRemove[3363395] call_tmp[3359530])
    (5635211 call _leave[3359647] this[3359381])
    (3359543 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].contains[3315108](const  ref arg this[3315112]:_ref(map(string,int(64),false))[3288803], const  ref arg k[3315119]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3315123]:bool[19] "dead after last mention" "RVV" "temp"
    (3315137 call _enter[3301095] this[3315112])
    const-ref call_tmp[3315146]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3315148 'move' call_tmp[3315146](3315151 call table[3301244] this[3315112]))
    const-val call_tmp[3315154]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588867]:(bool,int(64))[3257010] "temp"
    (3315162 call findFullSlot[3312245] call_tmp[3315146] k[3315119] ret_tmp[5588867])
    (5588870 'move' call_tmp[3315154] ret_tmp[5588867])
    const-val tmp[3315164]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3315166 'move' tmp[3315164] call_tmp[3315154])
    1
    const-ref call_tmp[3315174]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3315176 'move' call_tmp[3315174](3315213 '.' tmp[3315164] x0[3257006]))
    const-val result[3315181]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315219]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315223 'move' coerce_tmp[3315219](3315221 'deref' call_tmp[3315174]))
    (5632718 '=' result[3315181] coerce_tmp[3315219])
    (3315183 'noop')
    (3315227 '=' ret[3315123] result[3315181])
    (5632721 call chpl__autoDestroy[4207177] tmp[3315164])
    (5632726 call _leave[3301196] this[3315112])
    gotoReturn _end_contains[3315196] _end_contains[3315196]
    label _end_contains[3315196]
    (3315198 return ret[3315123])
  }
  function _ref(map(string,int(64),false))[3288803]._warnForParSafeIndexing[3315729](const  ref arg this[3315733]:_ref(map(string,int(64),false))[3288803]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3315739]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3315747]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3315762 return _void[46])
  }
  function _ref(map(string,string,false))[3283395]._warnForParSafeIndexing[3386782](const  ref arg this[3386786]:_ref(map(string,string,false))[3283395]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3386792]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3386800]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3386815 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._warnForParSafeIndexing[3396609](const  ref arg this[3396613]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3396619]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3396627]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3396642 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869]._warnForParSafeIndexing[3406884](const  ref arg this[3406888]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3406894]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3406902]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3406917 return _void[46])
  }
  function _ref(map(string,Module(real(32)),false))[1941017]._warnForParSafeIndexing[3421333](const  ref arg this[3421337]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3421343]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3421351]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3421366 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].this[3315266](ref arg this[3315270]:_ref(map(string,int(64),false))[3288803], const  ref arg k[3315277]:string[244]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3315291]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    (3315403 call _warnForParSafeIndexing[3315729] this[3315270])
    (3315409 call _enter[3301095] this[3315270])
    ref call_tmp[3315418]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3315420 'move' call_tmp[3315418](3315423 call table[3301244] this[3315270]))
    const-val call_tmp[3315426]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588747]:(bool,int(64))[3257010] "temp"
    (3315434 call findAvailableSlot[3301272] call_tmp[3315418] k[3315277] ret_tmp[5588747])
    (5588750 'move' call_tmp[3315426] ret_tmp[5588747])
    const-val tmp[3315436]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3315438 'move' tmp[3315436] call_tmp[3315426])
    1
    const-ref call_tmp[3315446]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3315448 'move' call_tmp[3315446](3335186 '.' tmp[3315436] x1[3257008]))
    const-val slot[3315453]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3335192]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3335196 'move' coerce_tmp[3335192](3335194 'deref' call_tmp[3315446]))
    (5632728 '=' slot[3315453] coerce_tmp[3335192])
    (3315455 'noop')
    const-ref call_tmp[3315459]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3315461 'move' call_tmp[3315459](3315464 call table[3301244] this[3315270]))
    const-val call_tmp[3315467]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315469 'move' call_tmp[3315467](3315475 call isSlotFull[3311860] call_tmp[3315459] slot[3315453]))
    const-val call_tmp[3315477]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315479 'move' call_tmp[3315477](3315482 call ![63126] call_tmp[3315467]))
    const-val call_tmp[3315484]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315486 'move' call_tmp[3315484] call_tmp[3315477])
    if call_tmp[3315484]
    {
      const-val val[3315493]:int(64)[10] "dead at end of block" "insert auto destroy"
      val call_tmp[3315495]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3335234 'move' val[3315493] 0)
      ref call_tmp[3315507]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
      (3315509 'move' call_tmp[3315507](3315512 call table[3301244] this[3315270]))
      const-val _formal_tmp_in_key[3335206]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3335211 'move' _formal_tmp_in_key[3335206](3335207 call chpl__initCopy[1480493] k[3315277] 0))
      (3315519 call fillSlot[3308541] call_tmp[3315507] slot[3315453] _formal_tmp_in_key[3335206] val[3315493])
    }
    ref call_tmp[3315527]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3315529 'move' call_tmp[3315527](3315532 call table[3301244] this[3315270]))
    ref call_tmp[3315535]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3335218]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
    (3335220 'move' _this_tmp_[3335218](3315540 call table[3303003] call_tmp[3315527]))
    val coerce_tmp[3335225]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3335229 'move' coerce_tmp[3335225](3335227 'deref' _this_tmp_[3335218]))
    (3315537 'move' call_tmp[3315535](3315543 call this[3306115] coerce_tmp[3335225] slot[3315453]))
    ref call_tmp[3315545]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3315547 'move' call_tmp[3315545](3315550 call val[3307792] call_tmp[3315535]))
    (3315553 'move' ret[3315291] call_tmp[3315545])
    (5632731 call chpl__autoDestroy[4207177] tmp[3315436])
    (5632736 call _leave[3301196] this[3315270])
    gotoReturn _end_this[3315561] _end_this[3315561]
    label _end_this[3315561]
    (3315563 return ret[3315291])
  }
  function _ref(map(string,string,false))[3283395].this[3386295](ref arg this[3386299]:_ref(map(string,string,false))[3283395], const  ref arg k[3386306]:string[244]) ref : _ref(string)[1466327] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3386320]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    (3386439 call _warnForParSafeIndexing[3386782] this[3386299])
    (3386445 call _enter[3344461] this[3386299])
    ref call_tmp[3386454]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3386456 'move' call_tmp[3386454](3386459 call table[3344610] this[3386299]))
    const-val call_tmp[3386462]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589364]:(bool,int(64))[3257010] "temp"
    (3386470 call findAvailableSlot[3349576] call_tmp[3386454] k[3386306] ret_tmp[5589364])
    (5589367 'move' call_tmp[3386462] ret_tmp[5589364])
    const-val tmp[3386472]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3386474 'move' tmp[3386472] call_tmp[3386462])
    1
    const-ref call_tmp[3386482]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3386484 'move' call_tmp[3386482](3387165 '.' tmp[3386472] x1[3257008]))
    const-val slot[3386489]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3387171]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3387175 'move' coerce_tmp[3387171](3387173 'deref' call_tmp[3386482]))
    (5635552 '=' slot[3386489] coerce_tmp[3387171])
    (3386491 'noop')
    const-ref call_tmp[3386495]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3386497 'move' call_tmp[3386495](3386500 call table[3344610] this[3386299]))
    const-val call_tmp[3386503]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386505 'move' call_tmp[3386503](3386511 call isSlotFull[3345224] call_tmp[3386495] slot[3386489]))
    const-val call_tmp[3386513]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386515 'move' call_tmp[3386513](3386518 call ![63126] call_tmp[3386503]))
    const-val call_tmp[3386520]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386522 'move' call_tmp[3386520] call_tmp[3386513])
    if call_tmp[3386520]
    {
      const-val val[3386529]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided"
      val call_tmp[3386531]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3387220 call init[21321] val[3386529])
      ref call_tmp[3386543]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
      (3386545 'move' call_tmp[3386543](3386548 call table[3344610] this[3386299]))
      const-val _formal_tmp_in_key[3387184]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3387189 'move' _formal_tmp_in_key[3387184](3387185 call chpl__initCopy[1480493] k[3386306] 0))
      const-val _formal_tmp_in_val[3387193]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (5635549 '=' _formal_tmp_in_val[3387193] val[3386529])
      (3387198 'noop')
      (3386555 call fillSlot[3350263] call_tmp[3386543] slot[3386489] _formal_tmp_in_key[3387184] _formal_tmp_in_val[3387193])
    }
    ref call_tmp[3386563]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3386565 'move' call_tmp[3386563](3386568 call table[3344610] this[3386299]))
    ref call_tmp[3386571]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3387205]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
    (3387207 'move' _this_tmp_[3387205](3386576 call table[3340092] call_tmp[3386563]))
    val coerce_tmp[3387212]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3387216 'move' coerce_tmp[3387212](3387214 'deref' _this_tmp_[3387205]))
    (3386573 'move' call_tmp[3386571](3386579 call this[3343256] coerce_tmp[3387212] slot[3386489]))
    ref call_tmp[3386581]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3386583 'move' call_tmp[3386581](3386586 call val[3345762] call_tmp[3386571]))
    (3386589 'move' ret[3386320] call_tmp[3386581])
    (5635556 call chpl__autoDestroy[4207177] tmp[3386472])
    (5635561 call _leave[3344562] this[3386299])
    gotoReturn _end_this[3386597] _end_this[3386597]
    label _end_this[3386597]
    (3386599 return ret[3386320])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].this[3396146](ref arg this[3396150]:_ref(map(string,owned ModuleSpecification?,false))[3283695], const  ref arg k[3396157]:string[244]) ref : _ref(owned ModuleSpecification?)[3283613] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3396171]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "RVV" "temp"
    (3396283 call _warnForParSafeIndexing[3396609] this[3396150])
    (3396289 call _enter[3359546] this[3396150])
    ref call_tmp[3396298]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3396300 'move' call_tmp[3396298](3396303 call table[3359695] this[3396150]))
    const-val call_tmp[3396306]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589594]:(bool,int(64))[3257010] "temp"
    (3396314 call findAvailableSlot[3372171] call_tmp[3396298] k[3396157] ret_tmp[5589594])
    (5589597 'move' call_tmp[3396306] ret_tmp[5589594])
    const-val tmp[3396316]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3396318 'move' tmp[3396316] call_tmp[3396306])
    1
    const-ref call_tmp[3396326]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3396328 'move' call_tmp[3396326](3397188 '.' tmp[3396316] x1[3257008]))
    const-val slot[3396333]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3397194]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3397198 'move' coerce_tmp[3397194](3397196 'deref' call_tmp[3396326]))
    (5635631 '=' slot[3396333] coerce_tmp[3397194])
    (3396335 'noop')
    const-ref call_tmp[3396339]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3396341 'move' call_tmp[3396339](3396344 call table[3359695] this[3396150]))
    const-val call_tmp[3396347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396349 'move' call_tmp[3396347](3396355 call isSlotFull[3360309] call_tmp[3396339] slot[3396333]))
    const-val call_tmp[3396357]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396359 'move' call_tmp[3396357](3396362 call ![63126] call_tmp[3396347]))
    const-val call_tmp[3396364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396366 'move' call_tmp[3396364] call_tmp[3396357])
    if call_tmp[3396364]
    {
      const-val val[3396373]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "maybe copy elided"
      val call_tmp[3396375]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3397245 call init[3367941] val[3396373])
      ref call_tmp[3396387]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
      (3396389 'move' call_tmp[3396387](3396392 call table[3359695] this[3396150]))
      const-val _formal_tmp_in_key[3397207]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3397212 'move' _formal_tmp_in_key[3397207](3397208 call chpl__initCopy[1480493] k[3396157] 0))
      const-val _formal_tmp_in_val[3397216]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (5635628 '=' _formal_tmp_in_val[3397216] val[3396373])
      (3397221 'noop')
      (3396399 call fillSlot[3372858] call_tmp[3396387] slot[3396333] _formal_tmp_in_key[3397207] _formal_tmp_in_val[3397216])
    }
    ref call_tmp[3396407]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3396409 'move' call_tmp[3396407](3396412 call table[3359695] this[3396150]))
    ref call_tmp[3396415]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3397228]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
    (3397230 'move' _this_tmp_[3397228](3396420 call table[3355177] call_tmp[3396407]))
    val coerce_tmp[3397235]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3397239 'move' coerce_tmp[3397235](3397237 'deref' _this_tmp_[3397228]))
    (3396417 'move' call_tmp[3396415](3396423 call this[3358341] coerce_tmp[3397235] slot[3396333]))
    ref call_tmp[3396425]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
    (3396427 'move' call_tmp[3396425](3396430 call val[3360847] call_tmp[3396415]))
    (3396433 'move' ret[3396171] call_tmp[3396425])
    (5635635 call chpl__autoDestroy[4207177] tmp[3396316])
    (5635640 call _leave[3359647] this[3396150])
    gotoReturn _end_this[3396441] _end_this[3396441]
    label _end_this[3396441]
    (3396443 return ret[3396171])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].this[3406518](ref arg this[3406522]:_ref(map(string,shared Module(real(32)),false))[3391869], const  ref arg k[3406529]:string[244], ref arg error_out[5510739]:Error[85511]) ref : _ref(shared Module(real(32)))[1955047] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3406531]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "RVV" "temp"
    (3406565 call _warnForParSafeIndexing[3406884] this[3406522])
    (3406571 call _enter[3400638] this[3406522])
    ref call_tmp[3406580]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3406582 'move' call_tmp[3406580](3406585 call table[3400787] this[3406522]))
    const-val call_tmp[3406588]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589812]:(bool,int(64))[3257010] "temp"
    (3406596 call findAvailableSlot[3400815] call_tmp[3406580] k[3406529] ret_tmp[5589812])
    (5589815 'move' call_tmp[3406588] ret_tmp[5589812])
    const-val tmp[3406598]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3406600 'move' tmp[3406598] call_tmp[3406588])
    1
    const-ref call_tmp[3406608]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3406610 'move' call_tmp[3406608](3407463 '.' tmp[3406598] x1[3257008]))
    const-val slot[3406615]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3407469]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3407473 'move' coerce_tmp[3407469](3407471 'deref' call_tmp[3406608]))
    (5635799 '=' slot[3406615] coerce_tmp[3407469])
    (3406617 'noop')
    const-ref call_tmp[3406621]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3406623 'move' call_tmp[3406621](3406626 call table[3400787] this[3406522]))
    const-val call_tmp[3406629]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406631 'move' call_tmp[3406629](3406637 call isSlotFull[3407477] call_tmp[3406621] slot[3406615]))
    const-val call_tmp[3406639]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406641 'move' call_tmp[3406639](3406644 call ![63126] call_tmp[3406629]))
    const-val call_tmp[3406646]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406648 'move' call_tmp[3406646] call_tmp[3406639])
    if call_tmp[3406646]
    {
      const-val call_tmp[3406655]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3407573]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3407575 'move' new_temp[3407573](3407560 call _new[3333701] k[3406529]))
      }
      const-val initTemp[3407582]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3407585 call init[3333806] initTemp[3407582] new_temp[3407573])
      (3406657 'move' call_tmp[3406655] initTemp[3407582])
      val call_tmp[3406662]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3407599]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589158]:owned Error[1498203] "temp"
      (3407601 call :[3334380] call_tmp[3406655] ret_tmp[5589158])
      (5589161 'move' coerce_tmp[3407599] ret_tmp[5589158])
      const-val _formal_tmp_in_err[3407818]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3407823 'move' _formal_tmp_in_err[3407818] coerce_tmp[3407599])
      (3406664 'move' call_tmp[3406662](3406667 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3407818]))
      {
        val castedError[5510742]:Error[85511] "temp"
        (5510748 'move' castedError[5510742] call_tmp[3406662])
        (5510750 '=' error_out[5510739] castedError[5510742])
        (5635802 call chpl__autoDestroy[4207177] tmp[3406598])
        (5635807 call _leave[3400739] this[3406522])
        gotoErrorHandlingReturn _end_this[3406716] _end_this[3406716]
      }
    }
    ref result[3406672]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "ref var"
    ref call_tmp[3406676]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead at end of block" "maybe param" "temp"
    (3406678 'move' call_tmp[3406676](3406681 call table[3400787] this[3406522]))
    ref call_tmp[3406684]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3407830]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead at end of block" "temp"
    (3407832 'move' _this_tmp_[3407830](3406689 call table[3392311] call_tmp[3406676]))
    val coerce_tmp[3407837]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3407841 'move' coerce_tmp[3407837](3407839 'deref' _this_tmp_[3407830]))
    (3406686 'move' call_tmp[3406684](3406692 call this[3395475] coerce_tmp[3407837] slot[3406615]))
    ref call_tmp[3406694]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "maybe param" "temp"
    (3406696 'move' call_tmp[3406694](3406699 call val[3403754] call_tmp[3406684]))
    (3406702 'move' result[3406672] call_tmp[3406694])
    (3406708 'move' ret[3406531] result[3406672])
    (5635809 call chpl__autoDestroy[4207177] tmp[3406598])
    (5635814 call _leave[3400739] this[3406522])
    gotoReturn _end_this[3406716] _end_this[3406716]
    label _end_this[3406716]
    (3406718 return ret[3406531])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].this[3420967](ref arg this[3420971]:_ref(map(string,Module(real(32)),false))[1941017], const  ref arg k[3420978]:string[244], ref arg error_out[5510782]:Error[85511]) ref : _ref(Module(real(32)))[1935660] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3420980]:_ref(Module(real(32)))[1935660] "dead after last mention" "RVV" "temp"
    (3421014 call _warnForParSafeIndexing[3421333] this[3420971])
    (3421020 call _enter[3256798] this[3420971])
    ref call_tmp[3421029]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3421031 'move' call_tmp[3421029](3421034 call table[3256947] this[3420971]))
    const-val call_tmp[3421037]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5587919]:(bool,int(64))[3257010] "temp"
    (3421045 call findAvailableSlot[3256975] call_tmp[3421029] k[3420978] ret_tmp[5587919])
    (5587922 'move' call_tmp[3421037] ret_tmp[5587919])
    const-val tmp[3421047]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3421049 'move' tmp[3421047] call_tmp[3421037])
    1
    const-ref call_tmp[3421057]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3421059 'move' call_tmp[3421057](3421912 '.' tmp[3421047] x1[3257008]))
    const-val slot[3421064]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3421918]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3421922 'move' coerce_tmp[3421918](3421920 'deref' call_tmp[3421057]))
    (5635986 '=' slot[3421064] coerce_tmp[3421918])
    (3421066 'noop')
    const-ref call_tmp[3421070]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3421072 'move' call_tmp[3421070](3421075 call table[3256947] this[3420971]))
    const-val call_tmp[3421078]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421080 'move' call_tmp[3421078](3421086 call isSlotFull[3421926] call_tmp[3421070] slot[3421064]))
    const-val call_tmp[3421088]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421090 'move' call_tmp[3421088](3421093 call ![63126] call_tmp[3421078]))
    const-val call_tmp[3421095]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421097 'move' call_tmp[3421095] call_tmp[3421088])
    if call_tmp[3421095]
    {
      const-val call_tmp[3421104]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3422022]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3422024 'move' new_temp[3422022](3422009 call _new[3333701] k[3420978]))
      }
      const-val initTemp[3422031]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3422034 call init[3333806] initTemp[3422031] new_temp[3422022])
      (3421106 'move' call_tmp[3421104] initTemp[3422031])
      val call_tmp[3421111]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3422048]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589170]:owned Error[1498203] "temp"
      (3422050 call :[3334380] call_tmp[3421104] ret_tmp[5589170])
      (5589173 'move' coerce_tmp[3422048] ret_tmp[5589170])
      const-val _formal_tmp_in_err[3422267]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3422272 'move' _formal_tmp_in_err[3422267] coerce_tmp[3422048])
      (3421113 'move' call_tmp[3421111](3421116 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3422267]))
      {
        val castedError[5510785]:Error[85511] "temp"
        (5510791 'move' castedError[5510785] call_tmp[3421111])
        (5510793 '=' error_out[5510782] castedError[5510785])
        (5635989 call chpl__autoDestroy[4207177] tmp[3421047])
        (5635994 call _leave[3256899] this[3420971])
        gotoErrorHandlingReturn _end_this[3421165] _end_this[3421165]
      }
    }
    ref result[3421121]:_ref(Module(real(32)))[1935660] "dead at end of block" "ref var"
    ref call_tmp[3421125]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead at end of block" "maybe param" "temp"
    (3421127 'move' call_tmp[3421125](3421130 call table[3256947] this[3420971]))
    ref call_tmp[3421133]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3422279]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead at end of block" "temp"
    (3422281 'move' _this_tmp_[3422279](3421138 call table[1942967] call_tmp[3421125]))
    val coerce_tmp[3422286]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3422290 'move' coerce_tmp[3422286](3422288 'deref' _this_tmp_[3422279]))
    (3421135 'move' call_tmp[3421133](3421141 call this[1947405] coerce_tmp[3422286] slot[3421064]))
    ref call_tmp[3421143]:_ref(Module(real(32)))[1935660] "dead at end of block" "maybe param" "temp"
    (3421145 'move' call_tmp[3421143](3421148 call val[3261562] call_tmp[3421133]))
    (3421151 'move' result[3421121] call_tmp[3421143])
    (3421157 'move' ret[3420980] result[3421121])
    (5635996 call chpl__autoDestroy[4207177] tmp[3421047])
    (5636001 call _leave[3256899] this[3420971])
    gotoReturn _end_this[3421165] _end_this[3421165]
    label _end_this[3421165]
    (3421167 return ret[3420980])
  }
  function _ref(map(string,int(64),false))[3288803].this[3315376](const  ref arg this[3315380]:_ref(map(string,int(64),false))[3288803], const  ref arg k[3315387]:string[244], ref arg error_out[5508019]:Error[85511]) const ref : _ref(int(64))[1465689] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3315389]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    (3315577 call _warnForParSafeIndexing[3315729] this[3315380])
    (3315583 call _enter[3301095] this[3315380])
    const-ref call_tmp[3315592]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3315594 'move' call_tmp[3315592](3315597 call table[3301244] this[3315380]))
    const-val call_tmp[3315600]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588873]:(bool,int(64))[3257010] "temp"
    (3315608 call findFullSlot[3312245] call_tmp[3315592] k[3315387] ret_tmp[5588873])
    (5588876 'move' call_tmp[3315600] ret_tmp[5588873])
    const-val tmp[3315610]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3315612 'move' tmp[3315610] call_tmp[3315600])
    1
    const-ref call_tmp[3315620]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3315622 'move' call_tmp[3315620](3315781 '.' tmp[3315610] x0[3257006]))
    const-val found[3315627]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315787]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315791 'move' coerce_tmp[3315787](3315789 'deref' call_tmp[3315620]))
    (5632738 '=' found[3315627] coerce_tmp[3315787])
    (3315629 'noop')
    const-ref call_tmp[3315632]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3315634 'move' call_tmp[3315632](3315796 '.' tmp[3315610] x1[3257008]))
    const-val slot[3315639]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315802]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315806 'move' coerce_tmp[3315802](3315804 'deref' call_tmp[3315632]))
    (5632741 '=' slot[3315639] coerce_tmp[3315802])
    (3315641 'noop')
    const-val call_tmp[3315645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315647 'move' call_tmp[3315645](3315650 call ![63126] found[3315627]))
    const-val call_tmp[3315652]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315654 'move' call_tmp[3315652] call_tmp[3315645])
    if call_tmp[3315652]
    {
      const-val call_tmp[3315661]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3333755]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3333757 'move' new_temp[3333755](3315849 call _new[3333701] k[3315387]))
      }
      const-val initTemp[3333785]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3333788 call init[3333806] initTemp[3333785] new_temp[3333755])
      (3315663 'move' call_tmp[3315661] initTemp[3333785])
      val call_tmp[3315668]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3334275]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589134]:owned Error[1498203] "temp"
      (3334277 call :[3334380] call_tmp[3315661] ret_tmp[5589134])
      (5589137 'move' coerce_tmp[3334275] ret_tmp[5589134])
      const-val _formal_tmp_in_err[3335146]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3335151 'move' _formal_tmp_in_err[3335146] coerce_tmp[3334275])
      (3315670 'move' call_tmp[3315668](3315673 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3335146]))
      {
        val castedError[5508022]:Error[85511] "temp"
        (5508028 'move' castedError[5508022] call_tmp[3315668])
        (5508030 '=' error_out[5508019] castedError[5508022])
        (5632744 call chpl__autoDestroy[4207177] tmp[3315610])
        (5632749 call _leave[3301196] this[3315380])
        gotoErrorHandlingReturn _end_this[3315722] _end_this[3315722]
      }
    }
    const-ref result[3315678]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3315682]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3315684 'move' call_tmp[3315682](3315687 call table[3301244] this[3315380]))
    ref call_tmp[3315690]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3335158]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3335160 'move' _this_tmp_[3335158](3315695 call table[3303003] call_tmp[3315682]))
    val coerce_tmp[3335165]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3335169 'move' coerce_tmp[3335165](3335167 'deref' _this_tmp_[3335158]))
    (3315692 'move' call_tmp[3315690](3315698 call this[3306115] coerce_tmp[3335165] slot[3315639]))
    ref call_tmp[3315700]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    (3315702 'move' call_tmp[3315700](3315705 call val[3307792] call_tmp[3315690]))
    (3315708 'move' result[3315678] call_tmp[3315700])
    (3315714 'move' ret[3315389] result[3315678])
    (5632751 call chpl__autoDestroy[4207177] tmp[3315610])
    (5632756 call _leave[3301196] this[3315380])
    gotoReturn _end_this[3315722] _end_this[3315722]
    label _end_this[3315722]
    (3315724 return ret[3315389])
  }
  function _ref(map(string,string,false))[3283395].this[3386412](const  ref arg this[3386416]:_ref(map(string,string,false))[3283395], const  ref arg k[3386423]:string[244], ref arg error_out[5510668]:Error[85511]) const ref : _ref(string)[1466327] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3386425]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    (3386613 call _warnForParSafeIndexing[3386782] this[3386416])
    (3386619 call _enter[3344461] this[3386416])
    const-ref call_tmp[3386628]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3386630 'move' call_tmp[3386628](3386633 call table[3344610] this[3386416]))
    const-val call_tmp[3386636]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589724]:(bool,int(64))[3257010] "temp"
    (3386644 call findFullSlot[3383343] call_tmp[3386628] k[3386423] ret_tmp[5589724])
    (5589727 'move' call_tmp[3386636] ret_tmp[5589724])
    const-val tmp[3386646]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3386648 'move' tmp[3386646] call_tmp[3386636])
    1
    const-ref call_tmp[3386656]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3386658 'move' call_tmp[3386656](3386834 '.' tmp[3386646] x0[3257006]))
    const-val found[3386663]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3386840]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3386844 'move' coerce_tmp[3386840](3386842 'deref' call_tmp[3386656]))
    (5635563 '=' found[3386663] coerce_tmp[3386840])
    (3386665 'noop')
    const-ref call_tmp[3386668]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3386670 'move' call_tmp[3386668](3386849 '.' tmp[3386646] x1[3257008]))
    const-val slot[3386675]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3386855]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3386859 'move' coerce_tmp[3386855](3386857 'deref' call_tmp[3386668]))
    (5635566 '=' slot[3386675] coerce_tmp[3386855])
    (3386677 'noop')
    const-val call_tmp[3386681]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386683 'move' call_tmp[3386681](3386686 call ![63126] found[3386663]))
    const-val call_tmp[3386688]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386690 'move' call_tmp[3386688] call_tmp[3386681])
    if call_tmp[3386688]
    {
      const-val call_tmp[3386697]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3386880]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3386882 'move' new_temp[3386880](3386867 call _new[3333701] k[3386423]))
      }
      const-val initTemp[3386889]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3386892 call init[3333806] initTemp[3386889] new_temp[3386880])
      (3386699 'move' call_tmp[3386697] initTemp[3386889])
      val call_tmp[3386704]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3386906]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589140]:owned Error[1498203] "temp"
      (3386908 call :[3334380] call_tmp[3386697] ret_tmp[5589140])
      (5589143 'move' coerce_tmp[3386906] ret_tmp[5589140])
      const-val _formal_tmp_in_err[3387125]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3387130 'move' _formal_tmp_in_err[3387125] coerce_tmp[3386906])
      (3386706 'move' call_tmp[3386704](3386709 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3387125]))
      {
        val castedError[5510671]:Error[85511] "temp"
        (5510677 'move' castedError[5510671] call_tmp[3386704])
        (5510679 '=' error_out[5510668] castedError[5510671])
        (5635569 call chpl__autoDestroy[4207177] tmp[3386646])
        (5635574 call _leave[3344562] this[3386416])
        gotoErrorHandlingReturn _end_this[3386758] _end_this[3386758]
      }
    }
    const-ref result[3386714]:_ref(string)[1466327] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3386718]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3386720 'move' call_tmp[3386718](3386723 call table[3344610] this[3386416]))
    ref call_tmp[3386726]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3387137]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3387139 'move' _this_tmp_[3387137](3386731 call table[3340092] call_tmp[3386718]))
    val coerce_tmp[3387144]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3387148 'move' coerce_tmp[3387144](3387146 'deref' _this_tmp_[3387137]))
    (3386728 'move' call_tmp[3386726](3386734 call this[3343256] coerce_tmp[3387144] slot[3386675]))
    ref call_tmp[3386736]:_ref(string)[1466327] "dead at end of block" "maybe param" "temp"
    (3386738 'move' call_tmp[3386736](3386741 call val[3345762] call_tmp[3386726]))
    (3386744 'move' result[3386714] call_tmp[3386736])
    (3386750 'move' ret[3386425] result[3386714])
    (5635576 call chpl__autoDestroy[4207177] tmp[3386646])
    (5635581 call _leave[3344562] this[3386416])
    gotoReturn _end_this[3386758] _end_this[3386758]
    label _end_this[3386758]
    (3386760 return ret[3386425])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].this[3396256](const  ref arg this[3396260]:_ref(map(string,owned ModuleSpecification?,false))[3283695], const  ref arg k[3396267]:string[244], ref arg error_out[5510711]:Error[85511]) const ref : _ref(owned ModuleSpecification?)[3283613] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3396269]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "RVV" "temp"
    (3396457 call _warnForParSafeIndexing[3396609] this[3396260])
    (3396463 call _enter[3359546] this[3396260])
    const-ref call_tmp[3396472]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3396474 'move' call_tmp[3396472](3396477 call table[3359695] this[3396260]))
    const-val call_tmp[3396480]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589764]:(bool,int(64))[3257010] "temp"
    (3396488 call findFullSlot[3396652] call_tmp[3396472] k[3396267] ret_tmp[5589764])
    (5589767 'move' call_tmp[3396480] ret_tmp[5589764])
    const-val tmp[3396490]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3396492 'move' tmp[3396490] call_tmp[3396480])
    1
    const-ref call_tmp[3396500]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3396502 'move' call_tmp[3396500](3396857 '.' tmp[3396490] x0[3257006]))
    const-val found[3396507]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3396863]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3396867 'move' coerce_tmp[3396863](3396865 'deref' call_tmp[3396500]))
    (5635642 '=' found[3396507] coerce_tmp[3396863])
    (3396509 'noop')
    const-ref call_tmp[3396512]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3396514 'move' call_tmp[3396512](3396872 '.' tmp[3396490] x1[3257008]))
    const-val slot[3396519]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3396878]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3396882 'move' coerce_tmp[3396878](3396880 'deref' call_tmp[3396512]))
    (5635645 '=' slot[3396519] coerce_tmp[3396878])
    (3396521 'noop')
    const-val call_tmp[3396525]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396527 'move' call_tmp[3396525](3396530 call ![63126] found[3396507]))
    const-val call_tmp[3396532]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396534 'move' call_tmp[3396532] call_tmp[3396525])
    if call_tmp[3396532]
    {
      const-val call_tmp[3396541]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3396903]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3396905 'move' new_temp[3396903](3396890 call _new[3333701] k[3396267]))
      }
      const-val initTemp[3396912]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3396915 call init[3333806] initTemp[3396912] new_temp[3396903])
      (3396543 'move' call_tmp[3396541] initTemp[3396912])
      val call_tmp[3396548]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3396929]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589146]:owned Error[1498203] "temp"
      (3396931 call :[3334380] call_tmp[3396541] ret_tmp[5589146])
      (5589149 'move' coerce_tmp[3396929] ret_tmp[5589146])
      const-val _formal_tmp_in_err[3397148]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3397153 'move' _formal_tmp_in_err[3397148] coerce_tmp[3396929])
      (3396550 'move' call_tmp[3396548](3396553 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3397148]))
      {
        val castedError[5510714]:Error[85511] "temp"
        (5510720 'move' castedError[5510714] call_tmp[3396548])
        (5510722 '=' error_out[5510711] castedError[5510714])
        (5635648 call chpl__autoDestroy[4207177] tmp[3396490])
        (5635653 call _leave[3359647] this[3396260])
        gotoErrorHandlingReturn _end_this[3396602] _end_this[3396602]
      }
    }
    const-ref result[3396558]:_ref(owned ModuleSpecification?)[3283613] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3396562]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3396564 'move' call_tmp[3396562](3396567 call table[3359695] this[3396260]))
    ref call_tmp[3396570]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3397160]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3397162 'move' _this_tmp_[3397160](3396575 call table[3355177] call_tmp[3396562]))
    val coerce_tmp[3397167]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3397171 'move' coerce_tmp[3397167](3397169 'deref' _this_tmp_[3397160]))
    (3396572 'move' call_tmp[3396570](3396578 call this[3358341] coerce_tmp[3397167] slot[3396519]))
    ref call_tmp[3396580]:_ref(owned ModuleSpecification?)[3283613] "dead at end of block" "maybe param" "temp"
    (3396582 'move' call_tmp[3396580](3396585 call val[3360847] call_tmp[3396570]))
    (3396588 'move' result[3396558] call_tmp[3396580])
    (3396594 'move' ret[3396269] result[3396558])
    (5635655 call chpl__autoDestroy[4207177] tmp[3396490])
    (5635660 call _leave[3359647] this[3396260])
    gotoReturn _end_this[3396602] _end_this[3396602]
    label _end_this[3396602]
    (3396604 return ret[3396269])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].this[3406538](const  ref arg this[3406542]:_ref(map(string,shared Module(real(32)),false))[3391869], const  ref arg k[3406549]:string[244], ref arg error_out[5510754]:Error[85511]) const ref : _ref(shared Module(real(32)))[1955047] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3406551]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "RVV" "temp"
    (3406732 call _warnForParSafeIndexing[3406884] this[3406542])
    (3406738 call _enter[3400638] this[3406542])
    const-ref call_tmp[3406747]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3406749 'move' call_tmp[3406747](3406752 call table[3400787] this[3406542]))
    const-val call_tmp[3406755]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589892]:(bool,int(64))[3257010] "temp"
    (3406763 call findFullSlot[3406927] call_tmp[3406747] k[3406549] ret_tmp[5589892])
    (5589895 'move' call_tmp[3406755] ret_tmp[5589892])
    const-val tmp[3406765]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3406767 'move' tmp[3406765] call_tmp[3406755])
    1
    const-ref call_tmp[3406775]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3406777 'move' call_tmp[3406775](3407132 '.' tmp[3406765] x0[3257006]))
    const-val found[3406782]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3407138]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3407142 'move' coerce_tmp[3407138](3407140 'deref' call_tmp[3406775]))
    (5635816 '=' found[3406782] coerce_tmp[3407138])
    (3406784 'noop')
    const-ref call_tmp[3406787]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3406789 'move' call_tmp[3406787](3407147 '.' tmp[3406765] x1[3257008]))
    const-val slot[3406794]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3407153]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3407157 'move' coerce_tmp[3407153](3407155 'deref' call_tmp[3406787]))
    (5635819 '=' slot[3406794] coerce_tmp[3407153])
    (3406796 'noop')
    const-val call_tmp[3406800]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406802 'move' call_tmp[3406800](3406805 call ![63126] found[3406782]))
    const-val call_tmp[3406807]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406809 'move' call_tmp[3406807] call_tmp[3406800])
    if call_tmp[3406807]
    {
      const-val call_tmp[3406816]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3407178]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3407180 'move' new_temp[3407178](3407165 call _new[3333701] k[3406549]))
      }
      const-val initTemp[3407187]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3407190 call init[3333806] initTemp[3407187] new_temp[3407178])
      (3406818 'move' call_tmp[3406816] initTemp[3407187])
      val call_tmp[3406823]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3407204]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589152]:owned Error[1498203] "temp"
      (3407206 call :[3334380] call_tmp[3406816] ret_tmp[5589152])
      (5589155 'move' coerce_tmp[3407204] ret_tmp[5589152])
      const-val _formal_tmp_in_err[3407423]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3407428 'move' _formal_tmp_in_err[3407423] coerce_tmp[3407204])
      (3406825 'move' call_tmp[3406823](3406828 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3407423]))
      {
        val castedError[5510757]:Error[85511] "temp"
        (5510763 'move' castedError[5510757] call_tmp[3406823])
        (5510765 '=' error_out[5510754] castedError[5510757])
        (5635822 call chpl__autoDestroy[4207177] tmp[3406765])
        (5635827 call _leave[3400739] this[3406542])
        gotoErrorHandlingReturn _end_this[3406877] _end_this[3406877]
      }
    }
    const-ref result[3406833]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3406837]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3406839 'move' call_tmp[3406837](3406842 call table[3400787] this[3406542]))
    ref call_tmp[3406845]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3407435]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3407437 'move' _this_tmp_[3407435](3406850 call table[3392311] call_tmp[3406837]))
    val coerce_tmp[3407442]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3407446 'move' coerce_tmp[3407442](3407444 'deref' _this_tmp_[3407435]))
    (3406847 'move' call_tmp[3406845](3406853 call this[3395475] coerce_tmp[3407442] slot[3406794]))
    ref call_tmp[3406855]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "maybe param" "temp"
    (3406857 'move' call_tmp[3406855](3406860 call val[3403754] call_tmp[3406845]))
    (3406863 'move' result[3406833] call_tmp[3406855])
    (3406869 'move' ret[3406551] result[3406833])
    (5635829 call chpl__autoDestroy[4207177] tmp[3406765])
    (5635834 call _leave[3400739] this[3406542])
    gotoReturn _end_this[3406877] _end_this[3406877]
    label _end_this[3406877]
    (3406879 return ret[3406551])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].this[3420987](const  ref arg this[3420991]:_ref(map(string,Module(real(32)),false))[1941017], const  ref arg k[3420998]:string[244], ref arg error_out[5510797]:Error[85511]) const ref : _ref(Module(real(32)))[1935660] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3421000]:_ref(Module(real(32)))[1935660] "dead after last mention" "RVV" "temp"
    (3421181 call _warnForParSafeIndexing[3421333] this[3420991])
    (3421187 call _enter[3256798] this[3420991])
    const-ref call_tmp[3421196]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3421198 'move' call_tmp[3421196](3421201 call table[3256947] this[3420991]))
    const-val call_tmp[3421204]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589960]:(bool,int(64))[3257010] "temp"
    (3421212 call findFullSlot[3421376] call_tmp[3421196] k[3420998] ret_tmp[5589960])
    (5589963 'move' call_tmp[3421204] ret_tmp[5589960])
    const-val tmp[3421214]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3421216 'move' tmp[3421214] call_tmp[3421204])
    1
    const-ref call_tmp[3421224]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3421226 'move' call_tmp[3421224](3421581 '.' tmp[3421214] x0[3257006]))
    const-val found[3421231]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3421587]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3421591 'move' coerce_tmp[3421587](3421589 'deref' call_tmp[3421224]))
    (5636003 '=' found[3421231] coerce_tmp[3421587])
    (3421233 'noop')
    const-ref call_tmp[3421236]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3421238 'move' call_tmp[3421236](3421596 '.' tmp[3421214] x1[3257008]))
    const-val slot[3421243]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3421602]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3421606 'move' coerce_tmp[3421602](3421604 'deref' call_tmp[3421236]))
    (5636006 '=' slot[3421243] coerce_tmp[3421602])
    (3421245 'noop')
    const-val call_tmp[3421249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421251 'move' call_tmp[3421249](3421254 call ![63126] found[3421231]))
    const-val call_tmp[3421256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421258 'move' call_tmp[3421256] call_tmp[3421249])
    if call_tmp[3421256]
    {
      const-val call_tmp[3421265]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3421627]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3421629 'move' new_temp[3421627](3421614 call _new[3333701] k[3420998]))
      }
      const-val initTemp[3421636]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3421639 call init[3333806] initTemp[3421636] new_temp[3421627])
      (3421267 'move' call_tmp[3421265] initTemp[3421636])
      val call_tmp[3421272]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3421653]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589164]:owned Error[1498203] "temp"
      (3421655 call :[3334380] call_tmp[3421265] ret_tmp[5589164])
      (5589167 'move' coerce_tmp[3421653] ret_tmp[5589164])
      const-val _formal_tmp_in_err[3421872]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3421877 'move' _formal_tmp_in_err[3421872] coerce_tmp[3421653])
      (3421274 'move' call_tmp[3421272](3421277 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3421872]))
      {
        val castedError[5510800]:Error[85511] "temp"
        (5510806 'move' castedError[5510800] call_tmp[3421272])
        (5510808 '=' error_out[5510797] castedError[5510800])
        (5636009 call chpl__autoDestroy[4207177] tmp[3421214])
        (5636014 call _leave[3256899] this[3420991])
        gotoErrorHandlingReturn _end_this[3421326] _end_this[3421326]
      }
    }
    const-ref result[3421282]:_ref(Module(real(32)))[1935660] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3421286]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3421288 'move' call_tmp[3421286](3421291 call table[3256947] this[3420991]))
    ref call_tmp[3421294]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3421884]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3421886 'move' _this_tmp_[3421884](3421299 call table[1942967] call_tmp[3421286]))
    val coerce_tmp[3421891]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3421895 'move' coerce_tmp[3421891](3421893 'deref' _this_tmp_[3421884]))
    (3421296 'move' call_tmp[3421294](3421302 call this[1947405] coerce_tmp[3421891] slot[3421243]))
    ref call_tmp[3421304]:_ref(Module(real(32)))[1935660] "dead at end of block" "maybe param" "temp"
    (3421306 'move' call_tmp[3421304](3421309 call val[3261562] call_tmp[3421294]))
    (3421312 'move' result[3421282] call_tmp[3421304])
    (3421318 'move' ret[3421000] result[3421282])
    (5636016 call chpl__autoDestroy[4207177] tmp[3421214])
    (5636021 call _leave[3256899] this[3420991])
    gotoReturn _end_this[3421326] _end_this[3421326]
    label _end_this[3421326]
    (3421328 return ret[3421000])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].advance[3311981](const in arg this[3311983]:_ic_keys__ref_map_string_int64_t_F[3311955]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[7080090]:int(64)[10]
    (7080118 'move' more[7080090](7080115 '.v' this[3311983] more[3311958]))
    const-val tmp[7080093]:bool[19] "temp"
    (7080100 'move' tmp[7080093](7080097 '==' more[7080090] 2))
    if tmp[7080093]
    {
      gotoIterResume _jump_2[7080082] _jump_2[7080082]
    }
    const-val tmp[7080105]:bool[19] "temp"
    (7080110 'move' tmp[7080105](7080107 '==' more[7080090] -2))
    if tmp[7080105]
    {
      gotoIterResume _jump_break_2[7080084] _jump_break_2[7080084]
    }
    val ret[3311123]:_ir_keys__ref_map_string_int64_t_F[3311961] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[3311132]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[3311136]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead at end of block" "maybe param" "temp"
    const-ref tmp[7079764]:_ref(map(string,int(64),false))[3288803] "temp"
    (7079769 'move' tmp[7079764](7079766 '.v' this[3311983] F0_this[7079744]))
    (3311138 'move' call_tmp[3311136](3311141 call table[3301244] tmp[7079764]))
    const-val call_tmp[3311144]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[5588851]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "temp"
    (3311152 call allSlots[3311253] call_tmp[3311136] ret_tmp[5588851])
    (5588854 'move' call_tmp[3311144] ret_tmp[5588851])
    val tmp[7079771]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "temp"
    (3311153 'move' tmp[7079771](3311156 call _getIterator[3311359] call_tmp[3311144]))
    (7079773 '.=' this[3311983] F1__iterator[7079748] tmp[7079771])
    const-ref tmp[7079777]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
    const-ref tmp[7079783]:_ref(map(string,int(64),false))[3288803] "temp"
    (7079788 'move' tmp[7079783](7079785 '.v' this[3311983] F0_this[7079744]))
    (3311850 'move' tmp[7079777](3311846 call table[3301244] tmp[7079783]))
    (7079779 '.=' this[3311983] F2_table_ref[7079750] tmp[7079777])
    val ret[6055548]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6055550]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[6055554]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    const-ref this[6055696]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
    const-ref tmp[7079790]:_ref(_ic_allSlots__ref_chpl__hashtable_string_int64_t)[3311487] "temp"
    (7079795 'move' tmp[7079790](7079792 '.' this[3311983] F1__iterator[7079748]))
    (6055701 'move' this[6055696](6055698 '.v' tmp[7079790] F0_this[7080176]))
    (6055556 'move' call_tmp[6055554](6055559 call tableSize[3301883] this[6055696]))
    const-val call_tmp[6055561]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[6055563]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6055565 'move' coerce_tmp[6055563](6055567 'deref' call_tmp[6055554]))
    const-val ret_tmp[6055569]:_ir__allSlots[1946137] "temp"
    (6055572 call _allSlots[265237] coerce_tmp[6055563] ret_tmp[6055569])
    (6055575 'move' call_tmp[6055561] ret_tmp[6055569])
    val tmp[7079797]:_ic__allSlots[1946131] "temp"
    (6055578 'move' tmp[7079797](6055581 call _getIterator[1946146] call_tmp[6055561]))
    (7079799 '.=' this[3311983] F3__iterator[7079752] tmp[7079797])
    val ret[6385243]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6385245]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6385249]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6385251]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    const-val size[6385845]:int(64)[10] "temp"
    const-ref tmp[7079803]:_ref(_ic__allSlots)[1946274] "temp"
    (7079808 'move' tmp[7079803](7079805 '.' this[3311983] F3__iterator[7079752]))
    (6385850 'move' size[6385845](6385847 '.v' tmp[7079803] F0_size[6829964]))
    (6385254 call chpl_direct_counted_range_iter[1468903] 0 size[6385845] ret_tmp[6385251])
    (6385258 'move' call_tmp[6385249] ret_tmp[6385251])
    val tmp[7079810]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (6385261 'move' tmp[7079810](6385264 call _getIterator[1520079] call_tmp[6385249]))
    (7079812 '.=' this[3311983] F4__iterator[7079754] tmp[7079810])
    val ret[6385267]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
    val tmp[6385269]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6385271]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6385273]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6385275]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6385277]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6385279]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6385281]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val _indexOfInterest[6385283]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6385287]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6385289]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    const-val low[6385291]:int(64)[10] "temp"
    const-ref tmp[7079816]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7079821 'move' tmp[7079816](7079818 '.' this[3311983] F4__iterator[7079754]))
    (6385293 'move' low[6385291](6385295 '.v' tmp[7079816] F0_low[6832410]))
    const-val count[6385298]:int(64)[10] "temp"
    const-ref tmp[7079823]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7079828 'move' tmp[7079823](7079825 '.' this[3311983] F4__iterator[7079754]))
    (6385300 'move' count[6385298](6385302 '.v' tmp[7079823] F1_count[6832414]))
    (6385306 call chpl_direct_counted_range_iter_helper[1469227] low[6385291] count[6385298] ret_tmp[6385289])
    (6385310 'move' call_tmp[6385287] ret_tmp[6385289])
    val tmp[7079830]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (6385313 'move' tmp[7079830](6385316 call _getIterator[1519812] call_tmp[6385287]))
    (7079832 '.=' this[3311983] F5__iterator[7079756] tmp[7079830])
    val ret[6385319]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
    val tmp[6385321]:bool[19] "dead after last mention" "maybe param" "temp"
    val tmp[6385323]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6385325]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6385327]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6385329]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6385331]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6385333]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[6385335]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[6385337]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6385339]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6385341]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[6385343]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6385345]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6385347]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[6385349]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6385351]:int(64)[10] "temp"
    const-ref tmp[7079836]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7079841 'move' tmp[7079836](7079838 '.' this[3311983] F5__iterator[7079756]))
    (6385353 'move' count[6385351](6385355 '.v' tmp[7079836] F1_count[6834178]))
    (6385358 'move' call_tmp[6385349](6385361 call <[1469576] count[6385351] 0))
    (6385364 'move' tmp[6385347] call_tmp[6385349])
    (6385367 'move' tmp[6385341] call_tmp[6385349])
    const-val call_tmp[6385370]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (6385372 'move' call_tmp[6385370] call_tmp[6385349])
    if call_tmp[6385349]
    {
      (6385378 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6385381]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6385383]:int(64)[10] "temp"
    const-ref tmp[7079843]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7079848 'move' tmp[7079843](7079845 '.' this[3311983] F5__iterator[7079756]))
    (6385385 'move' low[6385383](6385387 '.v' tmp[7079843] F0_low[6834174]))
    (6385390 'move' start[6385381] low[6385383])
    const-val end[6385393]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[6385395]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[6385397]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[6385399]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6385401]:int(64)[10] "temp"
    const-ref tmp[7079850]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7079855 'move' tmp[7079850](7079852 '.' this[3311983] F5__iterator[7079756]))
    (6385403 'move' count[6385401](6385405 '.v' tmp[7079850] F1_count[6834178]))
    (6385408 'move' call_tmp[6385399](6385411 call ==[52746] count[6385401] 0))
    (6385414 'move' tmp[6385397] call_tmp[6385399])
    if call_tmp[6385399]
    {
      const-val tmp[6385419]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6385421]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6385423]:int(64)[10] "temp"
      const-ref tmp[7079857]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7079862 'move' tmp[7079857](7079859 '.' this[3311983] F5__iterator[7079756]))
      (6385425 'move' low[6385423](6385427 '.v' tmp[7079857] F0_low[6834174]))
      (6385430 'move' call_tmp[6385421](6385432 'cast' uint(64)[86] low[6385423]))
      const-val call_tmp[6385435]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[6385437]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6385439 'move' coerce_tmp[6385437](6385441 'cast' uint(64)[86] 1))
      (6385444 'move' call_tmp[6385435](6385447 call -[1487313] call_tmp[6385421]))
      val call_tmp[6385449]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6385451 'move' tmp[6385419](6385454 call :[1482043] call_tmp[6385435]))
      (6385456 'move' tmp[6385395] tmp[6385419])
    }
    {
      const-val tmp[6385460]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[6385462]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[6385464]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6385466]:int(64)[10] "temp"
      const-ref tmp[7079864]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7079869 'move' tmp[7079864](7079866 '.' this[3311983] F5__iterator[7079756]))
      (6385468 'move' count[6385466](6385470 '.v' tmp[7079864] F1_count[6834178]))
      (6385473 'move' call_tmp[6385464] count[6385466])
      const-val call_tmp[6385476]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6385478]:int(64)[10] "temp"
      const-ref tmp[7079871]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7079876 'move' tmp[7079871](7079873 '.' this[3311983] F5__iterator[7079756]))
      (6385480 'move' count[6385478](6385482 '.v' tmp[7079871] F1_count[6834178]))
      (6385485 'move' call_tmp[6385476](6385488 call -[1487343] count[6385478]))
      const-val call_tmp[6385490]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6385492]:int(64)[10] "temp"
      const-ref tmp[7079878]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7079883 'move' tmp[7079878](7079880 '.' this[3311983] F5__iterator[7079756]))
      (6385494 'move' low[6385492](6385496 '.v' tmp[7079878] F0_low[6834174]))
      (6385499 'move' call_tmp[6385490](6385502 call +[56587] low[6385492] call_tmp[6385476]))
      val call_tmp[6385505]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6385507 'move' tmp[6385460] call_tmp[6385490])
      (6385510 'move' tmp[6385395] call_tmp[6385490])
    }
    (6385514 'move' end[6385393] tmp[6385395])
    val _indexOfInterest[6385517]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6385521]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6385523]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (6385526 call chpl_direct_param_stride_range_iter[1517410] start[6385381] tmp[6385395] ret_tmp[6385523])
    (6385530 'move' call_tmp[6385521] ret_tmp[6385523])
    val tmp[7079885]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (6385533 'move' tmp[7079885](6385536 call _getIterator[1519541] call_tmp[6385521]))
    (7079887 '.=' this[3311983] F6__iterator[7079758] tmp[7079885])
    val ret[6385539]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
    val call_tmp[6385541]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6385543]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (6385546 call chpl_range_check_stride[1517730])
    val call_tmp[6385549]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[7079891]:int(64)[10] "temp"
    (6385551 'move' tmp[7079891] 0)
    (7079893 '.=' this[3311983] F7_i[7079760] tmp[7079891])
    val call_tmp[6385554]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6385556]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6385558]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6385560]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[6385562]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6385564]:int(64)[10] "temp"
    const-ref tmp[7079897]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7079902 'move' tmp[7079897](7079899 '.' this[3311983] F6__iterator[7079758]))
    (6385566 'move' low[6385564](6385568 '.v' tmp[7079897] F0_low[6835591]))
    (6385571 'move' default_arg_first[6385562](6385574 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6385564]))
    const-val default_arg_last[6385576]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6385578]:int(64)[10] "temp"
    const-ref tmp[7079904]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7079909 'move' tmp[7079904](7079906 '.' this[3311983] F6__iterator[7079758]))
    (6385580 'move' high[6385578](6385582 '.v' tmp[7079904] F1_high[6835595]))
    (6385585 'move' default_arg_last[6385576](6385588 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6385578]))
    val default_arg_shouldHalt[6385590]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[6385592]:bool[19] "dead after last mention" "temp"
    const-val low[6385594]:int(64)[10] "temp"
    const-ref tmp[7079911]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7079916 'move' tmp[7079911](7079913 '.' this[3311983] F6__iterator[7079758]))
    (6385596 'move' low[6385594](6385598 '.v' tmp[7079911] F0_low[6835591]))
    const-val high[6385601]:int(64)[10] "temp"
    const-ref tmp[7079918]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7079923 'move' tmp[7079918](7079920 '.' this[3311983] F6__iterator[7079758]))
    (6385603 'move' high[6385601](6385605 '.v' tmp[7079918] F1_high[6835595]))
    (6385608 'move' _return_tmp_[6385592](6385611 call chpl_checkIfRangeIterWillOverflow[1518856] low[6385594] high[6385601] 1 default_arg_first[6385562] default_arg_last[6385576] 1))
    CForLoop[6385618]
    {
      const-val yret[6385649]:int(64)[10] "dead after last mention" "YVV" "temp"
      const-val tmp[7079925]:int(64)[10] "temp"
      (7079930 'move' tmp[7079925](7079927 '.v' this[3311983] F7_i[7079760]))
      (6385651 'move' yret[6385649] tmp[7079925])
      const-val _yieldedIndex[6385654]:int(64)[10] "temp"
      const-val tmp[7079932]:int(64)[10] "temp"
      (7079937 'move' tmp[7079932](7079934 '.v' this[3311983] F7_i[7079760]))
      (6385656 'move' _yieldedIndex[6385654] tmp[7079932])
      const-val i[6385660]:int(64)[10] "const" "index var" "insert auto destroy"
      (6385662 'move' i[6385660] _yieldedIndex[6385654])
      const-val yret[6385665]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6385667 'move' yret[6385665] _yieldedIndex[6385654])
      const-val _yieldedIndex[6385670]:int(64)[10] "temp"
      (6385672 'move' _yieldedIndex[6385670] _yieldedIndex[6385654])
      const-val i[6385676]:int(64)[10] "const" "index var" "insert auto destroy"
      (6385678 'move' i[6385676] _yieldedIndex[6385670])
      const-val yret[6385681]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6385683 'move' yret[6385681] _yieldedIndex[6385670])
      const-val _yieldedIndex[6385686]:int(64)[10] "temp"
      (6385688 'move' _yieldedIndex[6385686] _yieldedIndex[6385670])
      const-val slot[6385692]:int(64)[10] "const" "index var" "insert auto destroy"
      (6385694 'move' slot[6385692] _yieldedIndex[6385686])
      const-val yret[6385697]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6385699 'move' yret[6385697] _yieldedIndex[6385686])
      const-val _yieldedIndex[6385737]:int(64)[10] "temp"
      (6385843 'move' _yieldedIndex[6385737] _yieldedIndex[6385686])
      const-val slot[6385739]:int(64)[10] "const" "index var" "insert auto destroy"
      (6385741 'move' slot[6385739] _yieldedIndex[6385737])
      const-val yret[6385744]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6385746 'move' yret[6385744] _yieldedIndex[6385737])
      const-val _yieldedIndex[6385749]:int(64)[10] "temp"
      (6385751 'move' _yieldedIndex[6385749] _yieldedIndex[6385737])
      const-val slot[6385755]:int(64)[10] "const" "index var" "insert auto destroy"
      (6385757 'move' slot[6385755] _yieldedIndex[6385749])
      const-val call_tmp[6385760]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
      const-ref tmp[7079939]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
      (7079944 'move' tmp[7079939](7079941 '.v' this[3311983] F2_table_ref[7079750]))
      (6385762 'move' call_tmp[6385760] tmp[7079939])
      const-val call_tmp[6385765]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6385767 'move' call_tmp[6385765](6385770 call isSlotFull[3311860] call_tmp[6385760] _yieldedIndex[6385749]))
      const-val call_tmp[6385773]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6385775 'move' call_tmp[6385773] call_tmp[6385765])
      if call_tmp[6385765]
      {
        val call_tmp[6385782]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
        const-ref tmp[7079946]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
        (7079951 'move' tmp[7079946](7079948 '.v' this[3311983] F2_table_ref[7079750]))
        (6385784 'move' call_tmp[6385782] tmp[7079946])
        ref call_tmp[6385787]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
        const-ref _this_tmp_[6385789]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
        (6385791 'move' _this_tmp_[6385789](6385794 call table[3303003] call_tmp[6385782]))
        val coerce_tmp[6385796]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6385798 'move' coerce_tmp[6385796](6385800 'deref' _this_tmp_[6385789]))
        (6385802 'move' call_tmp[6385787](6385805 call this[3306115] coerce_tmp[6385796] slot[6385755]))
        const-ref call_tmp[6385808]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
        (6385810 'move' call_tmp[6385808](6385813 call key[3306645] call_tmp[6385787]))
        const-ref tmp[7079953]:_ref(string)[1466327] "temp"
        (6385815 'move' tmp[7079953] call_tmp[6385808])
        (7079955 '.=' this[3311983] value[7079762] tmp[7079953])
        (7080076 '.=' this[3311983] more[3311958] 2)
        gotoIterEnd _end[7080074] _end[7080074]
        label _jump_break_2[7080084]
        val tmp[7079959]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
        (7079964 'move' tmp[7079959](7079961 '.v' this[3311983] F6__iterator[7079758]))
        (6385834 call _freeIterator[1519714] tmp[7079959])
        val tmp[7079966]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
        (7079971 'move' tmp[7079966](7079968 '.v' this[3311983] F5__iterator[7079756]))
        (6385837 call _freeIterator[1519981] tmp[7079966])
        val tmp[7079973]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
        (7079978 'move' tmp[7079973](7079975 '.v' this[3311983] F4__iterator[7079754]))
        (6385840 call _freeIterator[1520248] tmp[7079973])
        val tmp[7079980]:_ic__allSlots[1946131] "temp"
        (7079985 'move' tmp[7079980](7079982 '.v' this[3311983] F3__iterator[7079752]))
        (6385823 call _freeIterator[1947321] tmp[7079980])
        val tmp[7079987]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "temp"
        (7079992 'move' tmp[7079987](7079989 '.v' this[3311983] F1__iterator[7079748]))
        (6385826 call _freeIterator[3311756] tmp[7079987])
        gotoReturn _endkeys[5524530] _endkeys[5524530]
        label _jump_2[7080082]
      }
      {
        const-val low[6385620]:int(64)[10] "temp"
        const-ref tmp[7079994]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7079999 'move' tmp[7079994](7079996 '.' this[3311983] F6__iterator[7079758]))
        (6385622 'move' low[6385620](6385624 '.v' tmp[7079994] F0_low[6835591]))
        val tmp[7080001]:int(64)[10] "temp"
        (6385627 '=' tmp[7080001] low[6385620])
        (7080003 '.=' this[3311983] F7_i[7079760] tmp[7080001])
      }
      {
        const-val high[6385631]:int(64)[10] "temp"
        const-ref tmp[7080007]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7080012 'move' tmp[7080007](7080009 '.' this[3311983] F6__iterator[7079758]))
        (6385633 'move' high[6385631](6385635 '.v' tmp[7080007] F1_high[6835595]))
        val tmp[7080014]:int(64)[10] "temp"
        (7080019 'move' tmp[7080014](7080016 '.v' this[3311983] F7_i[7079760]))
        (6385638 '<=' tmp[7080014] high[6385631])
      }
      {
        val call_tmp[6385642]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[6385644]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[7080021]:int(64)[10] "temp"
        (7080026 'move' tmp[7080021](7080023 '.v' this[3311983] F7_i[7079760]))
        (6385646 '+=' tmp[7080021] 1)
        (7080028 '.=' this[3311983] F7_i[7079760] tmp[7080021])
      }
    }
    label _endchpl_direct_param_stride_range_iter[6385718]
    val tmp[7080032]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (7080037 'move' tmp[7080032](7080034 '.v' this[3311983] F6__iterator[7079758]))
    (6385721 call _freeIterator[1519714] tmp[7080032])
    label _endchpl_direct_counted_range_iter_helper[6385723]
    val tmp[7080039]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (7080044 'move' tmp[7080039](7080041 '.v' this[3311983] F5__iterator[7079756]))
    (6385726 call _freeIterator[1519981] tmp[7080039])
    label _endchpl_direct_counted_range_iter[6385728]
    val tmp[7080046]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (7080051 'move' tmp[7080046](7080048 '.v' this[3311983] F4__iterator[7079754]))
    (6385731 call _freeIterator[1520248] tmp[7080046])
    label _end_allSlots[6385733]
    val tmp[7080053]:_ic__allSlots[1946131] "temp"
    (7080058 'move' tmp[7080053](7080055 '.v' this[3311983] F3__iterator[7079752]))
    (6055607 call _freeIterator[1947321] tmp[7080053])
    label _endallSlots[6055609]
    val tmp[7080060]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "temp"
    (7080065 'move' tmp[7080060](7080062 '.v' this[3311983] F1__iterator[7079748]))
    (5632679 call _freeIterator[3311756] tmp[7080060])
    label _endkeys[5524530]
    (7080086 '.=' this[3311983] more[3311958] 0)
    label _end[7080074]
    (7080121 return _void[46])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].zip1[3311990](const in arg this[3311992]:_ic_keys__ref_map_string_int64_t_F[3311955]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7080067 call advance[3311981] this[3311992])
    (3311997 return _void[46])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].zip2[3311999](const in arg this[3312001]:_ic_keys__ref_map_string_int64_t_F[3311955]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3312006 return _void[46])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].zip3[3312008](const in arg this[3312010]:_ic_keys__ref_map_string_int64_t_F[3311955]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7080070 call advance[3311981] this[3312010])
    (3312015 return _void[46])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].zip4[3312017](const in arg this[3312019]:_ic_keys__ref_map_string_int64_t_F[3311955]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3312024 return _void[46])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].hasMore[3312026](const in arg this[3312028]:_ic_keys__ref_map_string_int64_t_F[3311955]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    val tmp[7080124]:int(64)[10] "temp"
    (7080129 'move' tmp[7080124](7080126 '.v' this[3312028] more[3311958]))
    (7080131 return tmp[7080124])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].getValue[3312035](const in arg this[3312037]:_ic_keys__ref_map_string_int64_t_F[3311955]) : _ref(string)[1466327] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[7080134]:_ref(string)[1466327] "temp"
    (7080139 'move' tmp[7080134](7080136 '.v' this[3312037] value[7079762]))
    (7080141 return tmp[7080134])
  }
  function _ref(map(string,int(64),false))[3288803].keys[3311117](const  ref arg this[3311121]:_ref(map(string,int(64),false))[3288803], ref arg _retArg[5588847]:_ref(_ir_keys__ref_map_string_int64_t_F)[3312072]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[7080149]:_ir_keys__ref_map_string_int64_t_F[3311961] "temp"
    (7080151 '.=' _ir[7080149] F0_this[7079746] this[3311121])
    (7080155 '=' _retArg[5588847] _ir[7080149])
    (7080158 return _void[46])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].init[3312044](const in arg this[3312046]:_ic_keys__ref_map_string_int64_t_F[3311955]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7080144 return _void[46])
  }
  function _ic_keys__ref_map_string_int64_t_F[3311955].incr[3312053](const in arg this[3312055]:_ic_keys__ref_map_string_int64_t_F[3311955]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7080147 return _void[46])
  }
  type _ic_keys__ref_map_string_int64_t_F[3311955] val super[3311956]:RootClass[236] "super class" val more[3311958]:int(64)[10] const-ref F0_this[7079744]:_ref(map(string,int(64),false))[3288803] val F1__iterator[7079748]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] const-ref F2_table_ref[7079750]:_ref(chpl__hashtable(string,int(64)))[3288858] val F3__iterator[7079752]:_ic__allSlots[1946131] val F4__iterator[7079754]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7079756]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7079758]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7079760]:int(64)[10] const-ref value[7079762]:_ref(string)[1466327]
  type _ir_keys__ref_map_string_int64_t_F[3311961] const-ref F0_this[7079746]:_ref(map(string,int(64),false))[3288803]
  function _getIterator[3311970](const  ref arg ir[3311972]:_ir_keys__ref_map_string_int64_t_F[3311961]) : _ic_keys__ref_map_string_int64_t_F[3311955] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[3312079]:_ic_keys__ref_map_string_int64_t_F[3311955] "dead after last mention" "RVV" "temp"
    val _ic_[3311962]:_ic_keys__ref_map_string_int64_t_F[3311955] "dead after last mention" "temp"
    const-val call_tmp[3312086]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312089 'move' call_tmp[3312086](3312101 'sizeof_bundle' _ic_keys__ref_map_string_int64_t_F[3311955]))
    val cast_tmp[3312104]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3312106 'move' cast_tmp[3312104](3311967 call chpl_here_alloc[308303] call_tmp[3312086] 326))
    (3311975 'move' _ic_[3311962](3312108 'cast' _ic_keys__ref_map_string_int64_t_F[3311955] cast_tmp[3312104]))
    (3311977 'setcid' _ic_[3311962])
    (3312084 'move' ret[3312079] _ic_[3311962])
    (7080161 '.=' ret[3312079] more[3311958] 1)
    const-ref tmp[7080165]:_ref(map(string,int(64),false))[3288803] "temp"
    (7080170 'move' tmp[7080165](7080166 '.v' ir[3311972] F0_this[7079746]))
    (7080172 '.=' ret[3312079] F0_this[7079744] tmp[7080165])
    (3312081 return ret[3312079])
  }
  function _ic_keys__ref_map_string_string_F[3381529].advance[3381555](const in arg this[3381557]:_ic_keys__ref_map_string_string_F[3381529]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[7087788]:int(64)[10]
    (7087816 'move' more[7087788](7087813 '.v' this[3381557] more[3381532]))
    const-val tmp[7087791]:bool[19] "temp"
    (7087798 'move' tmp[7087791](7087795 '==' more[7087788] 2))
    if tmp[7087791]
    {
      gotoIterResume _jump_2[7087780] _jump_2[7087780]
    }
    const-val tmp[7087803]:bool[19] "temp"
    (7087808 'move' tmp[7087803](7087805 '==' more[7087788] -2))
    if tmp[7087803]
    {
      gotoIterResume _jump_break_2[7087782] _jump_break_2[7087782]
    }
    val ret[3381355]:_ir_keys__ref_map_string_string_F[3381535] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[3381364]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[3381368]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "temp"
    const-ref tmp[7087462]:_ref(map(string,string,false))[3283395] "temp"
    (7087467 'move' tmp[7087462](7087464 '.v' this[3381557] F0_this[7087442]))
    (3381370 'move' call_tmp[3381368](3381373 call table[3344610] tmp[7087462]))
    const-val call_tmp[3381376]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[5589254]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "temp"
    (3381384 call allSlots[3344638] call_tmp[3381368] ret_tmp[5589254])
    (5589257 'move' call_tmp[3381376] ret_tmp[5589254])
    val tmp[7087469]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "temp"
    (3381385 'move' tmp[7087469](3381388 call _getIterator[3344744] call_tmp[3381376]))
    (7087471 '.=' this[3381557] F1__iterator[7087446] tmp[7087469])
    const-ref tmp[7087475]:_ref(chpl__hashtable(string,string))[3283450] "temp"
    const-ref tmp[7087481]:_ref(map(string,string,false))[3283395] "temp"
    (7087486 'move' tmp[7087481](7087483 '.v' this[3381557] F0_this[7087442]))
    (3381501 'move' tmp[7087475](3381497 call table[3344610] tmp[7087481]))
    (7087477 '.=' this[3381557] F2_table_ref[7087448] tmp[7087475])
    val ret[6060499]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6060501]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[6060505]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    const-ref this[6060784]:_ref(chpl__hashtable(string,string))[3283450] "temp"
    const-ref tmp[7087488]:_ref(_ic_allSlots__ref_chpl__hashtable_string_string)[3344872] "temp"
    (7087493 'move' tmp[7087488](7087490 '.' this[3381557] F1__iterator[7087446]))
    (6060789 'move' this[6060784](6060786 '.v' tmp[7087488] F0_this[7082328]))
    (6060507 'move' call_tmp[6060505](6060510 call tableSize[3340120] this[6060784]))
    const-val call_tmp[6060512]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[6060514]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6060516 'move' coerce_tmp[6060514](6060518 'deref' call_tmp[6060505]))
    const-val ret_tmp[6060520]:_ir__allSlots[1946137] "temp"
    (6060523 call _allSlots[265237] coerce_tmp[6060514] ret_tmp[6060520])
    (6060526 'move' call_tmp[6060512] ret_tmp[6060520])
    val tmp[7087495]:_ic__allSlots[1946131] "temp"
    (6060529 'move' tmp[7087495](6060532 call _getIterator[1946146] call_tmp[6060512]))
    (7087497 '.=' this[3381557] F3__iterator[7087450] tmp[7087495])
    val ret[6060535]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6060537]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6060541]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6060543]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    const-val size[6060545]:int(64)[10] "temp"
    const-ref tmp[7087501]:_ref(_ic__allSlots)[1946274] "temp"
    (7087506 'move' tmp[7087501](7087503 '.' this[3381557] F3__iterator[7087450]))
    (6060547 'move' size[6060545](6060549 '.v' tmp[7087501] F0_size[6829964]))
    (6060553 call chpl_direct_counted_range_iter[1468903] 0 size[6060545] ret_tmp[6060543])
    (6060557 'move' call_tmp[6060541] ret_tmp[6060543])
    val tmp[7087508]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (6060560 'move' tmp[7087508](6060563 call _getIterator[1520079] call_tmp[6060541]))
    (7087510 '.=' this[3381557] F4__iterator[7087452] tmp[7087508])
    val ret[6060566]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
    val tmp[6060568]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6060570]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6060572]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6060574]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6060576]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6060578]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6060580]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val _indexOfInterest[6060582]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6060586]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6060588]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    const-val low[6060590]:int(64)[10] "temp"
    const-ref tmp[7087514]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7087519 'move' tmp[7087514](7087516 '.' this[3381557] F4__iterator[7087452]))
    (6060592 'move' low[6060590](6060594 '.v' tmp[7087514] F0_low[6832410]))
    const-val count[6060597]:int(64)[10] "temp"
    const-ref tmp[7087521]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7087526 'move' tmp[7087521](7087523 '.' this[3381557] F4__iterator[7087452]))
    (6060599 'move' count[6060597](6060601 '.v' tmp[7087521] F1_count[6832414]))
    (6060605 call chpl_direct_counted_range_iter_helper[1469227] low[6060590] count[6060597] ret_tmp[6060588])
    (6060609 'move' call_tmp[6060586] ret_tmp[6060588])
    val tmp[7087528]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (6060612 'move' tmp[7087528](6060615 call _getIterator[1519812] call_tmp[6060586]))
    (7087530 '.=' this[3381557] F5__iterator[7087454] tmp[7087528])
    val ret[6393339]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
    val tmp[6393341]:bool[19] "dead after last mention" "maybe param" "temp"
    val tmp[6393343]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6393345]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6393347]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6393349]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6393351]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6393353]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[6393355]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[6393357]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6393359]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6393361]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[6393363]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6393365]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6393367]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[6393369]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6393800]:int(64)[10] "temp"
    const-ref tmp[7087534]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7087539 'move' tmp[7087534](7087536 '.' this[3381557] F5__iterator[7087454]))
    (6393805 'move' count[6393800](6393802 '.v' tmp[7087534] F1_count[6834178]))
    (6393371 'move' call_tmp[6393369](6393374 call <[1469576] count[6393800] 0))
    (6393377 'move' tmp[6393367] call_tmp[6393369])
    (6393380 'move' tmp[6393361] call_tmp[6393369])
    const-val call_tmp[6393383]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (6393385 'move' call_tmp[6393383] call_tmp[6393369])
    if call_tmp[6393369]
    {
      (6393391 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6393394]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6393807]:int(64)[10] "temp"
    const-ref tmp[7087541]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7087546 'move' tmp[7087541](7087543 '.' this[3381557] F5__iterator[7087454]))
    (6393812 'move' low[6393807](6393809 '.v' tmp[7087541] F0_low[6834174]))
    (6393396 'move' start[6393394] low[6393807])
    const-val end[6393399]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[6393401]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[6393403]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[6393405]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6393814]:int(64)[10] "temp"
    const-ref tmp[7087548]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7087553 'move' tmp[7087548](7087550 '.' this[3381557] F5__iterator[7087454]))
    (6393819 'move' count[6393814](6393816 '.v' tmp[7087548] F1_count[6834178]))
    (6393407 'move' call_tmp[6393405](6393410 call ==[52746] count[6393814] 0))
    (6393413 'move' tmp[6393403] call_tmp[6393405])
    if call_tmp[6393405]
    {
      const-val tmp[6393418]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6393420]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6393821]:int(64)[10] "temp"
      const-ref tmp[7087555]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7087560 'move' tmp[7087555](7087557 '.' this[3381557] F5__iterator[7087454]))
      (6393826 'move' low[6393821](6393823 '.v' tmp[7087555] F0_low[6834174]))
      (6393422 'move' call_tmp[6393420](6393424 'cast' uint(64)[86] low[6393821]))
      const-val call_tmp[6393427]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[6393429]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6393431 'move' coerce_tmp[6393429](6393433 'cast' uint(64)[86] 1))
      (6393436 'move' call_tmp[6393427](6393439 call -[1487313] call_tmp[6393420]))
      val call_tmp[6393441]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6393443 'move' tmp[6393418](6393446 call :[1482043] call_tmp[6393427]))
      (6393448 'move' tmp[6393401] tmp[6393418])
    }
    {
      const-val tmp[6393452]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[6393454]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[6393456]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6393828]:int(64)[10] "temp"
      const-ref tmp[7087562]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7087567 'move' tmp[7087562](7087564 '.' this[3381557] F5__iterator[7087454]))
      (6393833 'move' count[6393828](6393830 '.v' tmp[7087562] F1_count[6834178]))
      (6393458 'move' call_tmp[6393456] count[6393828])
      const-val call_tmp[6393461]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6393835]:int(64)[10] "temp"
      const-ref tmp[7087569]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7087574 'move' tmp[7087569](7087571 '.' this[3381557] F5__iterator[7087454]))
      (6393840 'move' count[6393835](6393837 '.v' tmp[7087569] F1_count[6834178]))
      (6393463 'move' call_tmp[6393461](6393466 call -[1487343] count[6393835]))
      const-val call_tmp[6393468]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6393842]:int(64)[10] "temp"
      const-ref tmp[7087576]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7087581 'move' tmp[7087576](7087578 '.' this[3381557] F5__iterator[7087454]))
      (6393847 'move' low[6393842](6393844 '.v' tmp[7087576] F0_low[6834174]))
      (6393470 'move' call_tmp[6393468](6393473 call +[56587] low[6393842] call_tmp[6393461]))
      val call_tmp[6393476]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6393478 'move' tmp[6393452] call_tmp[6393468])
      (6393481 'move' tmp[6393401] call_tmp[6393468])
    }
    (6393485 'move' end[6393399] tmp[6393401])
    val _indexOfInterest[6393488]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6393492]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6393494]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (6393497 call chpl_direct_param_stride_range_iter[1517410] start[6393394] tmp[6393401] ret_tmp[6393494])
    (6393501 'move' call_tmp[6393492] ret_tmp[6393494])
    val tmp[7087583]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (6393504 'move' tmp[7087583](6393507 call _getIterator[1519541] call_tmp[6393492]))
    (7087585 '.=' this[3381557] F6__iterator[7087456] tmp[7087583])
    val ret[6393510]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
    val call_tmp[6393512]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6393514]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (6393517 call chpl_range_check_stride[1517730])
    val call_tmp[6393520]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[7087589]:int(64)[10] "temp"
    (6393522 'move' tmp[7087589] 0)
    (7087591 '.=' this[3381557] F7_i[7087458] tmp[7087589])
    val call_tmp[6393525]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6393527]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6393529]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6393531]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[6393533]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6393535]:int(64)[10] "temp"
    const-ref tmp[7087595]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7087600 'move' tmp[7087595](7087597 '.' this[3381557] F6__iterator[7087456]))
    (6393537 'move' low[6393535](6393539 '.v' tmp[7087595] F0_low[6835591]))
    (6393542 'move' default_arg_first[6393533](6393545 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6393535]))
    const-val default_arg_last[6393547]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6393549]:int(64)[10] "temp"
    const-ref tmp[7087602]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7087607 'move' tmp[7087602](7087604 '.' this[3381557] F6__iterator[7087456]))
    (6393551 'move' high[6393549](6393553 '.v' tmp[7087602] F1_high[6835595]))
    (6393556 'move' default_arg_last[6393547](6393559 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6393549]))
    val default_arg_shouldHalt[6393561]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[6393563]:bool[19] "dead after last mention" "temp"
    const-val low[6393565]:int(64)[10] "temp"
    const-ref tmp[7087609]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7087614 'move' tmp[7087609](7087611 '.' this[3381557] F6__iterator[7087456]))
    (6393567 'move' low[6393565](6393569 '.v' tmp[7087609] F0_low[6835591]))
    const-val high[6393572]:int(64)[10] "temp"
    const-ref tmp[7087616]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7087621 'move' tmp[7087616](7087618 '.' this[3381557] F6__iterator[7087456]))
    (6393574 'move' high[6393572](6393576 '.v' tmp[7087616] F1_high[6835595]))
    (6393579 'move' _return_tmp_[6393563](6393582 call chpl_checkIfRangeIterWillOverflow[1518856] low[6393565] high[6393572] 1 default_arg_first[6393533] default_arg_last[6393547] 1))
    CForLoop[6393589]
    {
      const-val yret[6393620]:int(64)[10] "dead after last mention" "YVV" "temp"
      const-val tmp[7087623]:int(64)[10] "temp"
      (7087628 'move' tmp[7087623](7087625 '.v' this[3381557] F7_i[7087458]))
      (6393622 'move' yret[6393620] tmp[7087623])
      const-val _yieldedIndex[6393625]:int(64)[10] "temp"
      const-val tmp[7087630]:int(64)[10] "temp"
      (7087635 'move' tmp[7087630](7087632 '.v' this[3381557] F7_i[7087458]))
      (6393627 'move' _yieldedIndex[6393625] tmp[7087630])
      const-val i[6393631]:int(64)[10] "const" "index var" "insert auto destroy"
      (6393633 'move' i[6393631] _yieldedIndex[6393625])
      const-val yret[6393636]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6393638 'move' yret[6393636] _yieldedIndex[6393625])
      const-val _yieldedIndex[6393660]:int(64)[10] "temp"
      (6393798 'move' _yieldedIndex[6393660] _yieldedIndex[6393625])
      const-val i[6393662]:int(64)[10] "const" "index var" "insert auto destroy"
      (6393664 'move' i[6393662] _yieldedIndex[6393660])
      const-val yret[6393667]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6393669 'move' yret[6393667] _yieldedIndex[6393660])
      const-val _yieldedIndex[6393672]:int(64)[10] "temp"
      (6393674 'move' _yieldedIndex[6393672] _yieldedIndex[6393660])
      const-val slot[6393678]:int(64)[10] "const" "index var" "insert auto destroy"
      (6393680 'move' slot[6393678] _yieldedIndex[6393672])
      const-val yret[6393683]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6393685 'move' yret[6393683] _yieldedIndex[6393672])
      const-val _yieldedIndex[6393688]:int(64)[10] "temp"
      (6393690 'move' _yieldedIndex[6393688] _yieldedIndex[6393672])
      const-val slot[6393694]:int(64)[10] "const" "index var" "insert auto destroy"
      (6393696 'move' slot[6393694] _yieldedIndex[6393688])
      const-val yret[6393699]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6393701 'move' yret[6393699] _yieldedIndex[6393688])
      const-val _yieldedIndex[6393704]:int(64)[10] "temp"
      (6393706 'move' _yieldedIndex[6393704] _yieldedIndex[6393688])
      const-val slot[6393710]:int(64)[10] "const" "index var" "insert auto destroy"
      (6393712 'move' slot[6393710] _yieldedIndex[6393704])
      const-val call_tmp[6393715]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
      const-ref tmp[7087637]:_ref(chpl__hashtable(string,string))[3283450] "temp"
      (7087642 'move' tmp[7087637](7087639 '.v' this[3381557] F2_table_ref[7087448]))
      (6393717 'move' call_tmp[6393715] tmp[7087637])
      const-val call_tmp[6393720]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6393722 'move' call_tmp[6393720](6393725 call isSlotFull[3345224] call_tmp[6393715] _yieldedIndex[6393704]))
      const-val call_tmp[6393728]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6393730 'move' call_tmp[6393728] call_tmp[6393720])
      if call_tmp[6393720]
      {
        val call_tmp[6393737]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
        const-ref tmp[7087644]:_ref(chpl__hashtable(string,string))[3283450] "temp"
        (7087649 'move' tmp[7087644](7087646 '.v' this[3381557] F2_table_ref[7087448]))
        (6393739 'move' call_tmp[6393737] tmp[7087644])
        ref call_tmp[6393742]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
        const-ref _this_tmp_[6393744]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
        (6393746 'move' _this_tmp_[6393744](6393749 call table[3340092] call_tmp[6393737]))
        val coerce_tmp[6393751]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6393753 'move' coerce_tmp[6393751](6393755 'deref' _this_tmp_[6393744]))
        (6393757 'move' call_tmp[6393742](6393760 call this[3343256] coerce_tmp[6393751] slot[6393710]))
        const-ref call_tmp[6393763]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
        (6393765 'move' call_tmp[6393763](6393768 call key[3345732] call_tmp[6393742]))
        const-ref tmp[7087651]:_ref(string)[1466327] "temp"
        (6393770 'move' tmp[7087651] call_tmp[6393763])
        (7087653 '.=' this[3381557] value[7087460] tmp[7087651])
        (7087774 '.=' this[3381557] more[3381532] 2)
        gotoIterEnd _end[7087772] _end[7087772]
        label _jump_break_2[7087782]
        val tmp[7087657]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
        (7087662 'move' tmp[7087657](7087659 '.v' this[3381557] F6__iterator[7087456]))
        (6393795 call _freeIterator[1519714] tmp[7087657])
        val tmp[7087664]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
        (7087669 'move' tmp[7087664](7087666 '.v' this[3381557] F5__iterator[7087454]))
        (6393778 call _freeIterator[1519981] tmp[7087664])
        val tmp[7087671]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
        (7087676 'move' tmp[7087671](7087673 '.v' this[3381557] F4__iterator[7087452]))
        (6393781 call _freeIterator[1520248] tmp[7087671])
        val tmp[7087678]:_ic__allSlots[1946131] "temp"
        (7087683 'move' tmp[7087678](7087680 '.v' this[3381557] F3__iterator[7087450]))
        (6393784 call _freeIterator[1947321] tmp[7087678])
        val tmp[7087685]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "temp"
        (7087690 'move' tmp[7087685](7087687 '.v' this[3381557] F1__iterator[7087446]))
        (6393787 call _freeIterator[3345141] tmp[7087685])
        gotoReturn _endkeys[5524568] _endkeys[5524568]
        label _jump_2[7087780]
      }
      {
        const-val low[6393591]:int(64)[10] "temp"
        const-ref tmp[7087692]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7087697 'move' tmp[7087692](7087694 '.' this[3381557] F6__iterator[7087456]))
        (6393593 'move' low[6393591](6393595 '.v' tmp[7087692] F0_low[6835591]))
        val tmp[7087699]:int(64)[10] "temp"
        (6393598 '=' tmp[7087699] low[6393591])
        (7087701 '.=' this[3381557] F7_i[7087458] tmp[7087699])
      }
      {
        const-val high[6393602]:int(64)[10] "temp"
        const-ref tmp[7087705]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7087710 'move' tmp[7087705](7087707 '.' this[3381557] F6__iterator[7087456]))
        (6393604 'move' high[6393602](6393606 '.v' tmp[7087705] F1_high[6835595]))
        val tmp[7087712]:int(64)[10] "temp"
        (7087717 'move' tmp[7087712](7087714 '.v' this[3381557] F7_i[7087458]))
        (6393609 '<=' tmp[7087712] high[6393602])
      }
      {
        val call_tmp[6393613]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[6393615]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[7087719]:int(64)[10] "temp"
        (7087724 'move' tmp[7087719](7087721 '.v' this[3381557] F7_i[7087458]))
        (6393617 '+=' tmp[7087719] 1)
        (7087726 '.=' this[3381557] F7_i[7087458] tmp[7087719])
      }
    }
    label _endchpl_direct_param_stride_range_iter[6393651]
    val tmp[7087730]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (7087735 'move' tmp[7087730](7087732 '.v' this[3381557] F6__iterator[7087456]))
    (6393654 call _freeIterator[1519714] tmp[7087730])
    label _endchpl_direct_counted_range_iter_helper[6393656]
    val tmp[7087737]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (7087742 'move' tmp[7087737](7087739 '.v' this[3381557] F5__iterator[7087454]))
    (6060679 call _freeIterator[1519981] tmp[7087737])
    label _endchpl_direct_counted_range_iter[6060681]
    val tmp[7087744]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (7087749 'move' tmp[7087744](7087746 '.v' this[3381557] F4__iterator[7087452]))
    (6060684 call _freeIterator[1520248] tmp[7087744])
    label _end_allSlots[6060686]
    val tmp[7087751]:_ic__allSlots[1946131] "temp"
    (7087756 'move' tmp[7087751](7087753 '.v' this[3381557] F3__iterator[7087450]))
    (6060689 call _freeIterator[1947321] tmp[7087751])
    label _endallSlots[6060691]
    val tmp[7087758]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "temp"
    (7087763 'move' tmp[7087758](7087760 '.v' this[3381557] F1__iterator[7087446]))
    (5635503 call _freeIterator[3345141] tmp[7087758])
    label _endkeys[5524568]
    (7087784 '.=' this[3381557] more[3381532] 0)
    label _end[7087772]
    (7087819 return _void[46])
  }
  function _ic_keys__ref_map_string_string_F[3381529].zip1[3381564](const in arg this[3381566]:_ic_keys__ref_map_string_string_F[3381529]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7087765 call advance[3381555] this[3381566])
    (3381571 return _void[46])
  }
  function _ic_keys__ref_map_string_string_F[3381529].zip2[3381573](const in arg this[3381575]:_ic_keys__ref_map_string_string_F[3381529]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3381580 return _void[46])
  }
  function _ic_keys__ref_map_string_string_F[3381529].zip3[3381582](const in arg this[3381584]:_ic_keys__ref_map_string_string_F[3381529]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7087768 call advance[3381555] this[3381584])
    (3381589 return _void[46])
  }
  function _ic_keys__ref_map_string_string_F[3381529].zip4[3381591](const in arg this[3381593]:_ic_keys__ref_map_string_string_F[3381529]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3381598 return _void[46])
  }
  function _ic_keys__ref_map_string_string_F[3381529].hasMore[3381600](const in arg this[3381602]:_ic_keys__ref_map_string_string_F[3381529]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    val tmp[7087822]:int(64)[10] "temp"
    (7087827 'move' tmp[7087822](7087824 '.v' this[3381602] more[3381532]))
    (7087829 return tmp[7087822])
  }
  function _ic_keys__ref_map_string_string_F[3381529].getValue[3381609](const in arg this[3381611]:_ic_keys__ref_map_string_string_F[3381529]) : _ref(string)[1466327] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[7087832]:_ref(string)[1466327] "temp"
    (7087837 'move' tmp[7087832](7087834 '.v' this[3381611] value[7087460]))
    (7087839 return tmp[7087832])
  }
  function _ref(map(string,string,false))[3283395].keys[3381349](const  ref arg this[3381353]:_ref(map(string,string,false))[3283395], ref arg _retArg[5589714]:_ref(_ir_keys__ref_map_string_string_F)[3381646]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[7087847]:_ir_keys__ref_map_string_string_F[3381535] "temp"
    (7087849 '.=' _ir[7087847] F0_this[7087444] this[3381353])
    (7087853 '=' _retArg[5589714] _ir[7087847])
    (7087856 return _void[46])
  }
  function _ic_keys__ref_map_string_string_F[3381529].init[3381618](const in arg this[3381620]:_ic_keys__ref_map_string_string_F[3381529]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7087842 return _void[46])
  }
  function _ic_keys__ref_map_string_string_F[3381529].incr[3381627](const in arg this[3381629]:_ic_keys__ref_map_string_string_F[3381529]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7087845 return _void[46])
  }
  type _ic_keys__ref_map_string_string_F[3381529] val super[3381530]:RootClass[236] "super class" val more[3381532]:int(64)[10] const-ref F0_this[7087442]:_ref(map(string,string,false))[3283395] val F1__iterator[7087446]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] const-ref F2_table_ref[7087448]:_ref(chpl__hashtable(string,string))[3283450] val F3__iterator[7087450]:_ic__allSlots[1946131] val F4__iterator[7087452]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7087454]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7087456]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7087458]:int(64)[10] const-ref value[7087460]:_ref(string)[1466327]
  type _ir_keys__ref_map_string_string_F[3381535] const-ref F0_this[7087444]:_ref(map(string,string,false))[3283395]
  function _getIterator[3381544](const  ref arg ir[3381546]:_ir_keys__ref_map_string_string_F[3381535]) : _ic_keys__ref_map_string_string_F[3381529] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[3381653]:_ic_keys__ref_map_string_string_F[3381529] "dead after last mention" "RVV" "temp"
    val _ic_[3381536]:_ic_keys__ref_map_string_string_F[3381529] "dead after last mention" "temp"
    const-val call_tmp[3381660]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3381663 'move' call_tmp[3381660](3381675 'sizeof_bundle' _ic_keys__ref_map_string_string_F[3381529]))
    val cast_tmp[3381678]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3381680 'move' cast_tmp[3381678](3381541 call chpl_here_alloc[308303] call_tmp[3381660] 333))
    (3381549 'move' _ic_[3381536](3381682 'cast' _ic_keys__ref_map_string_string_F[3381529] cast_tmp[3381678]))
    (3381551 'setcid' _ic_[3381536])
    (3381658 'move' ret[3381653] _ic_[3381536])
    (7087859 '.=' ret[3381653] more[3381532] 1)
    const-ref tmp[7087863]:_ref(map(string,string,false))[3283395] "temp"
    (7087868 'move' tmp[7087863](7087864 '.v' ir[3381546] F0_this[7087444]))
    (7087870 '.=' ret[3381653] F0_this[7087442] tmp[7087863])
    (3381655 return ret[3381653])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].advance[4029668](const in arg this[4029670]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[7187568]:int(64)[10]
    (7187596 'move' more[7187568](7187593 '.v' this[4029670] more[4029645]))
    const-val tmp[7187571]:bool[19] "temp"
    (7187578 'move' tmp[7187571](7187575 '==' more[7187568] 2))
    if tmp[7187571]
    {
      gotoIterResume _jump_2[7187560] _jump_2[7187560]
    }
    const-val tmp[7187583]:bool[19] "temp"
    (7187588 'move' tmp[7187583](7187585 '==' more[7187568] -2))
    if tmp[7187583]
    {
      gotoIterResume _jump_break_2[7187562] _jump_break_2[7187562]
    }
    val ret[4028887]:_ir_keys__ref_map_string_Module__real32_F[4029648] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[4028896]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[4028900]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead at end of block" "maybe param" "temp"
    const-ref tmp[7187242]:_ref(map(string,Module(real(32)),false))[1941017] "temp"
    (7187247 'move' tmp[7187242](7187244 '.v' this[4029670] F0_this[7187222]))
    (4028902 'move' call_tmp[4028900](4028905 call table[3256947] tmp[7187242]))
    const-val call_tmp[4028908]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[5596899]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "temp"
    (4028916 call allSlots[4029017] call_tmp[4028900] ret_tmp[5596899])
    (5596902 'move' call_tmp[4028908] ret_tmp[5596899])
    val tmp[7187249]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] "temp"
    (4028917 'move' tmp[7187249](4028920 call _getIterator[4029123] call_tmp[4028908]))
    (7187251 '.=' this[4029670] F1__iterator[7187226] tmp[7187249])
    const-ref tmp[7187255]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "temp"
    const-ref tmp[7187261]:_ref(map(string,Module(real(32)),false))[1941017] "temp"
    (7187266 'move' tmp[7187261](7187263 '.v' this[4029670] F0_this[7187222]))
    (4029614 'move' tmp[7187255](4029610 call table[3256947] tmp[7187261]))
    (7187257 '.=' this[4029670] F2_table_ref[7187228] tmp[7187255])
    val ret[6099282]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6099284]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[6099288]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    const-ref this[6099430]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "temp"
    const-ref tmp[7187268]:_ref(_ic_allSlots__ref_chpl__hashtable_string_Module__real32)[4029251] "temp"
    (7187273 'move' tmp[7187268](7187270 '.' this[4029670] F1__iterator[7187226]))
    (6099435 'move' this[6099430](6099432 '.v' tmp[7187268] F0_this[7187654]))
    (6099290 'move' call_tmp[6099288](6099293 call tableSize[1942995] this[6099430]))
    const-val call_tmp[6099295]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[6099297]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6099299 'move' coerce_tmp[6099297](6099301 'deref' call_tmp[6099288]))
    const-val ret_tmp[6099303]:_ir__allSlots[1946137] "temp"
    (6099306 call _allSlots[265237] coerce_tmp[6099297] ret_tmp[6099303])
    (6099309 'move' call_tmp[6099295] ret_tmp[6099303])
    val tmp[7187275]:_ic__allSlots[1946131] "temp"
    (6099312 'move' tmp[7187275](6099315 call _getIterator[1946146] call_tmp[6099295]))
    (7187277 '.=' this[4029670] F3__iterator[7187230] tmp[7187275])
    val ret[6440928]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6440930]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6440934]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6440936]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    const-val size[6441530]:int(64)[10] "temp"
    const-ref tmp[7187281]:_ref(_ic__allSlots)[1946274] "temp"
    (7187286 'move' tmp[7187281](7187283 '.' this[4029670] F3__iterator[7187230]))
    (6441535 'move' size[6441530](6441532 '.v' tmp[7187281] F0_size[6829964]))
    (6440939 call chpl_direct_counted_range_iter[1468903] 0 size[6441530] ret_tmp[6440936])
    (6440943 'move' call_tmp[6440934] ret_tmp[6440936])
    val tmp[7187288]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (6440946 'move' tmp[7187288](6440949 call _getIterator[1520079] call_tmp[6440934]))
    (7187290 '.=' this[4029670] F4__iterator[7187232] tmp[7187288])
    val ret[6440952]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
    val tmp[6440954]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6440956]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6440958]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6440960]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6440962]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6440964]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6440966]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val _indexOfInterest[6440968]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6440972]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6440974]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    const-val low[6440976]:int(64)[10] "temp"
    const-ref tmp[7187294]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7187299 'move' tmp[7187294](7187296 '.' this[4029670] F4__iterator[7187232]))
    (6440978 'move' low[6440976](6440980 '.v' tmp[7187294] F0_low[6832410]))
    const-val count[6440983]:int(64)[10] "temp"
    const-ref tmp[7187301]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7187306 'move' tmp[7187301](7187303 '.' this[4029670] F4__iterator[7187232]))
    (6440985 'move' count[6440983](6440987 '.v' tmp[7187301] F1_count[6832414]))
    (6440991 call chpl_direct_counted_range_iter_helper[1469227] low[6440976] count[6440983] ret_tmp[6440974])
    (6440995 'move' call_tmp[6440972] ret_tmp[6440974])
    val tmp[7187308]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (6440998 'move' tmp[7187308](6441001 call _getIterator[1519812] call_tmp[6440972]))
    (7187310 '.=' this[4029670] F5__iterator[7187234] tmp[7187308])
    val ret[6441004]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
    val tmp[6441006]:bool[19] "dead after last mention" "maybe param" "temp"
    val tmp[6441008]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6441010]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6441012]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6441014]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6441016]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6441018]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[6441020]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[6441022]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6441024]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6441026]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[6441028]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6441030]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6441032]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[6441034]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6441036]:int(64)[10] "temp"
    const-ref tmp[7187314]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7187319 'move' tmp[7187314](7187316 '.' this[4029670] F5__iterator[7187234]))
    (6441038 'move' count[6441036](6441040 '.v' tmp[7187314] F1_count[6834178]))
    (6441043 'move' call_tmp[6441034](6441046 call <[1469576] count[6441036] 0))
    (6441049 'move' tmp[6441032] call_tmp[6441034])
    (6441052 'move' tmp[6441026] call_tmp[6441034])
    const-val call_tmp[6441055]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (6441057 'move' call_tmp[6441055] call_tmp[6441034])
    if call_tmp[6441034]
    {
      (6441063 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6441066]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6441068]:int(64)[10] "temp"
    const-ref tmp[7187321]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7187326 'move' tmp[7187321](7187323 '.' this[4029670] F5__iterator[7187234]))
    (6441070 'move' low[6441068](6441072 '.v' tmp[7187321] F0_low[6834174]))
    (6441075 'move' start[6441066] low[6441068])
    const-val end[6441078]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[6441080]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[6441082]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[6441084]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6441086]:int(64)[10] "temp"
    const-ref tmp[7187328]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7187333 'move' tmp[7187328](7187330 '.' this[4029670] F5__iterator[7187234]))
    (6441088 'move' count[6441086](6441090 '.v' tmp[7187328] F1_count[6834178]))
    (6441093 'move' call_tmp[6441084](6441096 call ==[52746] count[6441086] 0))
    (6441099 'move' tmp[6441082] call_tmp[6441084])
    if call_tmp[6441084]
    {
      const-val tmp[6441104]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6441106]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6441108]:int(64)[10] "temp"
      const-ref tmp[7187335]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7187340 'move' tmp[7187335](7187337 '.' this[4029670] F5__iterator[7187234]))
      (6441110 'move' low[6441108](6441112 '.v' tmp[7187335] F0_low[6834174]))
      (6441115 'move' call_tmp[6441106](6441117 'cast' uint(64)[86] low[6441108]))
      const-val call_tmp[6441120]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[6441122]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6441124 'move' coerce_tmp[6441122](6441126 'cast' uint(64)[86] 1))
      (6441129 'move' call_tmp[6441120](6441132 call -[1487313] call_tmp[6441106]))
      val call_tmp[6441134]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6441136 'move' tmp[6441104](6441139 call :[1482043] call_tmp[6441120]))
      (6441141 'move' tmp[6441080] tmp[6441104])
    }
    {
      const-val tmp[6441145]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[6441147]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[6441149]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6441151]:int(64)[10] "temp"
      const-ref tmp[7187342]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7187347 'move' tmp[7187342](7187344 '.' this[4029670] F5__iterator[7187234]))
      (6441153 'move' count[6441151](6441155 '.v' tmp[7187342] F1_count[6834178]))
      (6441158 'move' call_tmp[6441149] count[6441151])
      const-val call_tmp[6441161]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6441163]:int(64)[10] "temp"
      const-ref tmp[7187349]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7187354 'move' tmp[7187349](7187351 '.' this[4029670] F5__iterator[7187234]))
      (6441165 'move' count[6441163](6441167 '.v' tmp[7187349] F1_count[6834178]))
      (6441170 'move' call_tmp[6441161](6441173 call -[1487343] count[6441163]))
      const-val call_tmp[6441175]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6441177]:int(64)[10] "temp"
      const-ref tmp[7187356]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7187361 'move' tmp[7187356](7187358 '.' this[4029670] F5__iterator[7187234]))
      (6441179 'move' low[6441177](6441181 '.v' tmp[7187356] F0_low[6834174]))
      (6441184 'move' call_tmp[6441175](6441187 call +[56587] low[6441177] call_tmp[6441161]))
      val call_tmp[6441190]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6441192 'move' tmp[6441145] call_tmp[6441175])
      (6441195 'move' tmp[6441080] call_tmp[6441175])
    }
    (6441199 'move' end[6441078] tmp[6441080])
    val _indexOfInterest[6441202]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6441206]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6441208]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (6441211 call chpl_direct_param_stride_range_iter[1517410] start[6441066] tmp[6441080] ret_tmp[6441208])
    (6441215 'move' call_tmp[6441206] ret_tmp[6441208])
    val tmp[7187363]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (6441218 'move' tmp[7187363](6441221 call _getIterator[1519541] call_tmp[6441206]))
    (7187365 '.=' this[4029670] F6__iterator[7187236] tmp[7187363])
    val ret[6441224]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
    val call_tmp[6441226]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6441228]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (6441231 call chpl_range_check_stride[1517730])
    val call_tmp[6441234]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[7187369]:int(64)[10] "temp"
    (6441236 'move' tmp[7187369] 0)
    (7187371 '.=' this[4029670] F7_i[7187238] tmp[7187369])
    val call_tmp[6441239]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6441241]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6441243]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6441245]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[6441247]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6441249]:int(64)[10] "temp"
    const-ref tmp[7187375]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7187380 'move' tmp[7187375](7187377 '.' this[4029670] F6__iterator[7187236]))
    (6441251 'move' low[6441249](6441253 '.v' tmp[7187375] F0_low[6835591]))
    (6441256 'move' default_arg_first[6441247](6441259 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6441249]))
    const-val default_arg_last[6441261]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6441263]:int(64)[10] "temp"
    const-ref tmp[7187382]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7187387 'move' tmp[7187382](7187384 '.' this[4029670] F6__iterator[7187236]))
    (6441265 'move' high[6441263](6441267 '.v' tmp[7187382] F1_high[6835595]))
    (6441270 'move' default_arg_last[6441261](6441273 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6441263]))
    val default_arg_shouldHalt[6441275]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[6441277]:bool[19] "dead after last mention" "temp"
    const-val low[6441279]:int(64)[10] "temp"
    const-ref tmp[7187389]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7187394 'move' tmp[7187389](7187391 '.' this[4029670] F6__iterator[7187236]))
    (6441281 'move' low[6441279](6441283 '.v' tmp[7187389] F0_low[6835591]))
    const-val high[6441286]:int(64)[10] "temp"
    const-ref tmp[7187396]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7187401 'move' tmp[7187396](7187398 '.' this[4029670] F6__iterator[7187236]))
    (6441288 'move' high[6441286](6441290 '.v' tmp[7187396] F1_high[6835595]))
    (6441293 'move' _return_tmp_[6441277](6441296 call chpl_checkIfRangeIterWillOverflow[1518856] low[6441279] high[6441286] 1 default_arg_first[6441247] default_arg_last[6441261] 1))
    CForLoop[6441303]
    {
      const-val yret[6441334]:int(64)[10] "dead after last mention" "YVV" "temp"
      const-val tmp[7187403]:int(64)[10] "temp"
      (7187408 'move' tmp[7187403](7187405 '.v' this[4029670] F7_i[7187238]))
      (6441336 'move' yret[6441334] tmp[7187403])
      const-val _yieldedIndex[6441339]:int(64)[10] "temp"
      const-val tmp[7187410]:int(64)[10] "temp"
      (7187415 'move' tmp[7187410](7187412 '.v' this[4029670] F7_i[7187238]))
      (6441341 'move' _yieldedIndex[6441339] tmp[7187410])
      const-val i[6441345]:int(64)[10] "const" "index var" "insert auto destroy"
      (6441347 'move' i[6441345] _yieldedIndex[6441339])
      const-val yret[6441350]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6441352 'move' yret[6441350] _yieldedIndex[6441339])
      const-val _yieldedIndex[6441355]:int(64)[10] "temp"
      (6441357 'move' _yieldedIndex[6441355] _yieldedIndex[6441339])
      const-val i[6441361]:int(64)[10] "const" "index var" "insert auto destroy"
      (6441363 'move' i[6441361] _yieldedIndex[6441355])
      const-val yret[6441366]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6441368 'move' yret[6441366] _yieldedIndex[6441355])
      const-val _yieldedIndex[6441371]:int(64)[10] "temp"
      (6441373 'move' _yieldedIndex[6441371] _yieldedIndex[6441355])
      const-val slot[6441377]:int(64)[10] "const" "index var" "insert auto destroy"
      (6441379 'move' slot[6441377] _yieldedIndex[6441371])
      const-val yret[6441382]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6441384 'move' yret[6441382] _yieldedIndex[6441371])
      const-val _yieldedIndex[6441422]:int(64)[10] "temp"
      (6441528 'move' _yieldedIndex[6441422] _yieldedIndex[6441371])
      const-val slot[6441424]:int(64)[10] "const" "index var" "insert auto destroy"
      (6441426 'move' slot[6441424] _yieldedIndex[6441422])
      const-val yret[6441429]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6441431 'move' yret[6441429] _yieldedIndex[6441422])
      const-val _yieldedIndex[6441434]:int(64)[10] "temp"
      (6441436 'move' _yieldedIndex[6441434] _yieldedIndex[6441422])
      const-val slot[6441440]:int(64)[10] "const" "index var" "insert auto destroy"
      (6441442 'move' slot[6441440] _yieldedIndex[6441434])
      const-val call_tmp[6441445]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "expr temp" "maybe param" "temp"
      const-ref tmp[7187417]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "temp"
      (7187422 'move' tmp[7187417](7187419 '.v' this[4029670] F2_table_ref[7187228]))
      (6441447 'move' call_tmp[6441445] tmp[7187417])
      const-val call_tmp[6441450]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6441452 'move' call_tmp[6441450](6441455 call isSlotFull[3421926] call_tmp[6441445] _yieldedIndex[6441434]))
      const-val call_tmp[6441458]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6441460 'move' call_tmp[6441458] call_tmp[6441450])
      if call_tmp[6441450]
      {
        val call_tmp[6441467]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "expr temp" "maybe param" "temp"
        const-ref tmp[7187424]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "temp"
        (7187429 'move' tmp[7187424](7187426 '.v' this[4029670] F2_table_ref[7187228]))
        (6441469 'move' call_tmp[6441467] tmp[7187424])
        ref call_tmp[6441472]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
        const-ref _this_tmp_[6441474]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "temp"
        (6441476 'move' _this_tmp_[6441474](6441479 call table[1942967] call_tmp[6441467]))
        val coerce_tmp[6441481]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6441483 'move' coerce_tmp[6441481](6441485 'deref' _this_tmp_[6441474]))
        (6441487 'move' call_tmp[6441472](6441490 call this[1947405] coerce_tmp[6441481] slot[6441440]))
        const-ref call_tmp[6441493]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
        (6441495 'move' call_tmp[6441493](6441498 call key[3259256] call_tmp[6441472]))
        const-ref tmp[7187431]:_ref(string)[1466327] "temp"
        (6441500 'move' tmp[7187431] call_tmp[6441493])
        (7187433 '.=' this[4029670] value[7187240] tmp[7187431])
        (7187554 '.=' this[4029670] more[4029645] 2)
        gotoIterEnd _end[7187552] _end[7187552]
        label _jump_break_2[7187562]
        val tmp[7187437]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
        (7187442 'move' tmp[7187437](7187439 '.v' this[4029670] F6__iterator[7187236]))
        (6441519 call _freeIterator[1519714] tmp[7187437])
        val tmp[7187444]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
        (7187449 'move' tmp[7187444](7187446 '.v' this[4029670] F5__iterator[7187234]))
        (6441522 call _freeIterator[1519981] tmp[7187444])
        val tmp[7187451]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
        (7187456 'move' tmp[7187451](7187453 '.v' this[4029670] F4__iterator[7187232]))
        (6441525 call _freeIterator[1520248] tmp[7187451])
        val tmp[7187458]:_ic__allSlots[1946131] "temp"
        (7187463 'move' tmp[7187458](7187460 '.v' this[4029670] F3__iterator[7187230]))
        (6441508 call _freeIterator[1947321] tmp[7187458])
        val tmp[7187465]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] "temp"
        (7187470 'move' tmp[7187465](7187467 '.v' this[4029670] F1__iterator[7187226]))
        (6441511 call _freeIterator[4029520] tmp[7187465])
        gotoReturn _endkeys[5525085] _endkeys[5525085]
        label _jump_2[7187560]
      }
      {
        const-val low[6441305]:int(64)[10] "temp"
        const-ref tmp[7187472]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7187477 'move' tmp[7187472](7187474 '.' this[4029670] F6__iterator[7187236]))
        (6441307 'move' low[6441305](6441309 '.v' tmp[7187472] F0_low[6835591]))
        val tmp[7187479]:int(64)[10] "temp"
        (6441312 '=' tmp[7187479] low[6441305])
        (7187481 '.=' this[4029670] F7_i[7187238] tmp[7187479])
      }
      {
        const-val high[6441316]:int(64)[10] "temp"
        const-ref tmp[7187485]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7187490 'move' tmp[7187485](7187487 '.' this[4029670] F6__iterator[7187236]))
        (6441318 'move' high[6441316](6441320 '.v' tmp[7187485] F1_high[6835595]))
        val tmp[7187492]:int(64)[10] "temp"
        (7187497 'move' tmp[7187492](7187494 '.v' this[4029670] F7_i[7187238]))
        (6441323 '<=' tmp[7187492] high[6441316])
      }
      {
        val call_tmp[6441327]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[6441329]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[7187499]:int(64)[10] "temp"
        (7187504 'move' tmp[7187499](7187501 '.v' this[4029670] F7_i[7187238]))
        (6441331 '+=' tmp[7187499] 1)
        (7187506 '.=' this[4029670] F7_i[7187238] tmp[7187499])
      }
    }
    label _endchpl_direct_param_stride_range_iter[6441403]
    val tmp[7187510]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (7187515 'move' tmp[7187510](7187512 '.v' this[4029670] F6__iterator[7187236]))
    (6441406 call _freeIterator[1519714] tmp[7187510])
    label _endchpl_direct_counted_range_iter_helper[6441408]
    val tmp[7187517]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (7187522 'move' tmp[7187517](7187519 '.v' this[4029670] F5__iterator[7187234]))
    (6441411 call _freeIterator[1519981] tmp[7187517])
    label _endchpl_direct_counted_range_iter[6441413]
    val tmp[7187524]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (7187529 'move' tmp[7187524](7187526 '.v' this[4029670] F4__iterator[7187232]))
    (6441416 call _freeIterator[1520248] tmp[7187524])
    label _end_allSlots[6441418]
    val tmp[7187531]:_ic__allSlots[1946131] "temp"
    (7187536 'move' tmp[7187531](7187533 '.v' this[4029670] F3__iterator[7187230]))
    (6099341 call _freeIterator[1947321] tmp[7187531])
    label _endallSlots[6099343]
    val tmp[7187538]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] "temp"
    (7187543 'move' tmp[7187538](7187540 '.v' this[4029670] F1__iterator[7187226]))
    (5643427 call _freeIterator[4029520] tmp[7187538])
    label _endkeys[5525085]
    (7187564 '.=' this[4029670] more[4029645] 0)
    label _end[7187552]
    (7187599 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].zip1[4029677](const in arg this[4029679]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7187545 call advance[4029668] this[4029679])
    (4029684 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].zip2[4029686](const in arg this[4029688]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029693 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].zip3[4029695](const in arg this[4029697]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7187548 call advance[4029668] this[4029697])
    (4029702 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].zip4[4029704](const in arg this[4029706]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029711 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].hasMore[4029713](const in arg this[4029715]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    val tmp[7187602]:int(64)[10] "temp"
    (7187607 'move' tmp[7187602](7187604 '.v' this[4029715] more[4029645]))
    (7187609 return tmp[7187602])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].getValue[4029722](const in arg this[4029724]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : _ref(string)[1466327] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[7187612]:_ref(string)[1466327] "temp"
    (7187617 'move' tmp[7187612](7187614 '.v' this[4029724] value[7187240]))
    (7187619 return tmp[7187612])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].keys[4028881](const  ref arg this[4028885]:_ref(map(string,Module(real(32)),false))[1941017], ref arg _retArg[5596895]:_ref(_ir_keys__ref_map_string_Module__real32_F)[4029759]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[7187627]:_ir_keys__ref_map_string_Module__real32_F[4029648] "temp"
    (7187629 '.=' _ir[7187627] F0_this[7187224] this[4028885])
    (7187633 '=' _retArg[5596895] _ir[7187627])
    (7187636 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].init[4029731](const in arg this[4029733]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7187622 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real32_F[4029642].incr[4029740](const in arg this[4029742]:_ic_keys__ref_map_string_Module__real32_F[4029642]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7187625 return _void[46])
  }
  type _ic_keys__ref_map_string_Module__real32_F[4029642] val super[4029643]:RootClass[236] "super class" val more[4029645]:int(64)[10] const-ref F0_this[7187222]:_ref(map(string,Module(real(32)),false))[1941017] val F1__iterator[7187226]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] const-ref F2_table_ref[7187228]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] val F3__iterator[7187230]:_ic__allSlots[1946131] val F4__iterator[7187232]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7187234]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7187236]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7187238]:int(64)[10] const-ref value[7187240]:_ref(string)[1466327]
  type _ir_keys__ref_map_string_Module__real32_F[4029648] const-ref F0_this[7187224]:_ref(map(string,Module(real(32)),false))[1941017]
  function _getIterator[4029657](const  ref arg ir[4029659]:_ir_keys__ref_map_string_Module__real32_F[4029648]) : _ic_keys__ref_map_string_Module__real32_F[4029642] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4029766]:_ic_keys__ref_map_string_Module__real32_F[4029642] "dead after last mention" "RVV" "temp"
    val _ic_[4029649]:_ic_keys__ref_map_string_Module__real32_F[4029642] "dead after last mention" "temp"
    const-val call_tmp[4029773]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4029776 'move' call_tmp[4029773](4029788 'sizeof_bundle' _ic_keys__ref_map_string_Module__real32_F[4029642]))
    val cast_tmp[4029791]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4029793 'move' cast_tmp[4029791](4029654 call chpl_here_alloc[308303] call_tmp[4029773] 415))
    (4029662 'move' _ic_[4029649](4029795 'cast' _ic_keys__ref_map_string_Module__real32_F[4029642] cast_tmp[4029791]))
    (4029664 'setcid' _ic_[4029649])
    (4029771 'move' ret[4029766] _ic_[4029649])
    (7187639 '.=' ret[4029766] more[4029645] 1)
    const-ref tmp[7187643]:_ref(map(string,Module(real(32)),false))[1941017] "temp"
    (7187648 'move' tmp[7187643](7187644 '.v' ir[4029659] F0_this[7187224]))
    (7187650 '.=' ret[4029766] F0_this[7187222] tmp[7187643])
    (4029768 return ret[4029766])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].advance[4214818](const in arg this[4214820]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[7198548]:int(64)[10]
    (7198576 'move' more[7198548](7198573 '.v' this[4214820] more[4214795]))
    const-val tmp[7198551]:bool[19] "temp"
    (7198558 'move' tmp[7198551](7198555 '==' more[7198548] 2))
    if tmp[7198551]
    {
      gotoIterResume _jump_2[7198540] _jump_2[7198540]
    }
    const-val tmp[7198563]:bool[19] "temp"
    (7198568 'move' tmp[7198563](7198565 '==' more[7198548] -2))
    if tmp[7198563]
    {
      gotoIterResume _jump_break_2[7198542] _jump_break_2[7198542]
    }
    val ret[4214618]:_ir_keys__ref_map_string__owned_ModuleSpecification_F[4214798] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[4214627]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[4214631]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead at end of block" "maybe param" "temp"
    const-ref tmp[7198222]:_ref(map(string,owned ModuleSpecification?,false))[3283695] "temp"
    (7198227 'move' tmp[7198222](7198224 '.v' this[4214820] F0_this[7198202]))
    (4214633 'move' call_tmp[4214631](4214636 call table[3359695] tmp[7198222]))
    const-val call_tmp[4214639]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[5589448]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "temp"
    (4214647 call allSlots[3359723] call_tmp[4214631] ret_tmp[5589448])
    (5589451 'move' call_tmp[4214639] ret_tmp[5589448])
    val tmp[7198229]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "temp"
    (4214648 'move' tmp[7198229](4214651 call _getIterator[3359829] call_tmp[4214639]))
    (7198231 '.=' this[4214820] F1__iterator[7198206] tmp[7198229])
    const-ref tmp[7198235]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
    const-ref tmp[7198241]:_ref(map(string,owned ModuleSpecification?,false))[3283695] "temp"
    (7198246 'move' tmp[7198241](7198243 '.v' this[4214820] F0_this[7198202]))
    (4214764 'move' tmp[7198235](4214760 call table[3359695] tmp[7198241]))
    (7198237 '.=' this[4214820] F2_table_ref[7198208] tmp[7198235])
    val ret[6104430]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6104432]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[6104436]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    const-ref this[6104715]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
    const-ref tmp[7198248]:_ref(_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification)[3359957] "temp"
    (7198253 'move' tmp[7198248](7198250 '.' this[4214820] F1__iterator[7198206]))
    (6104720 'move' this[6104715](6104717 '.v' tmp[7198248] F0_this[7084885]))
    (6104438 'move' call_tmp[6104436](6104441 call tableSize[3355205] this[6104715]))
    const-val call_tmp[6104443]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[6104445]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6104447 'move' coerce_tmp[6104445](6104449 'deref' call_tmp[6104436]))
    const-val ret_tmp[6104451]:_ir__allSlots[1946137] "temp"
    (6104454 call _allSlots[265237] coerce_tmp[6104445] ret_tmp[6104451])
    (6104457 'move' call_tmp[6104443] ret_tmp[6104451])
    val tmp[7198255]:_ic__allSlots[1946131] "temp"
    (6104460 'move' tmp[7198255](6104463 call _getIterator[1946146] call_tmp[6104443]))
    (7198257 '.=' this[4214820] F3__iterator[7198210] tmp[7198255])
    val ret[6104466]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6104468]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6104472]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6104474]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    const-val size[6104476]:int(64)[10] "temp"
    const-ref tmp[7198261]:_ref(_ic__allSlots)[1946274] "temp"
    (7198266 'move' tmp[7198261](7198263 '.' this[4214820] F3__iterator[7198210]))
    (6104478 'move' size[6104476](6104480 '.v' tmp[7198261] F0_size[6829964]))
    (6104484 call chpl_direct_counted_range_iter[1468903] 0 size[6104476] ret_tmp[6104474])
    (6104488 'move' call_tmp[6104472] ret_tmp[6104474])
    val tmp[7198268]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (6104491 'move' tmp[7198268](6104494 call _getIterator[1520079] call_tmp[6104472]))
    (7198270 '.=' this[4214820] F4__iterator[7198212] tmp[7198268])
    val ret[6104497]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
    val tmp[6104499]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6104501]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6104503]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6104505]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6104507]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6104509]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6104511]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val _indexOfInterest[6104513]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6104517]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6104519]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    const-val low[6104521]:int(64)[10] "temp"
    const-ref tmp[7198274]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7198279 'move' tmp[7198274](7198276 '.' this[4214820] F4__iterator[7198212]))
    (6104523 'move' low[6104521](6104525 '.v' tmp[7198274] F0_low[6832410]))
    const-val count[6104528]:int(64)[10] "temp"
    const-ref tmp[7198281]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7198286 'move' tmp[7198281](7198283 '.' this[4214820] F4__iterator[7198212]))
    (6104530 'move' count[6104528](6104532 '.v' tmp[7198281] F1_count[6832414]))
    (6104536 call chpl_direct_counted_range_iter_helper[1469227] low[6104521] count[6104528] ret_tmp[6104519])
    (6104540 'move' call_tmp[6104517] ret_tmp[6104519])
    val tmp[7198288]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (6104543 'move' tmp[7198288](6104546 call _getIterator[1519812] call_tmp[6104517]))
    (7198290 '.=' this[4214820] F5__iterator[7198214] tmp[7198288])
    val ret[6446448]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
    val tmp[6446450]:bool[19] "dead after last mention" "maybe param" "temp"
    val tmp[6446452]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6446454]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6446456]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6446458]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6446460]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6446462]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[6446464]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[6446466]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6446468]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6446470]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[6446472]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6446474]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6446476]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[6446478]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6446909]:int(64)[10] "temp"
    const-ref tmp[7198294]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7198299 'move' tmp[7198294](7198296 '.' this[4214820] F5__iterator[7198214]))
    (6446914 'move' count[6446909](6446911 '.v' tmp[7198294] F1_count[6834178]))
    (6446480 'move' call_tmp[6446478](6446483 call <[1469576] count[6446909] 0))
    (6446486 'move' tmp[6446476] call_tmp[6446478])
    (6446489 'move' tmp[6446470] call_tmp[6446478])
    const-val call_tmp[6446492]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (6446494 'move' call_tmp[6446492] call_tmp[6446478])
    if call_tmp[6446478]
    {
      (6446500 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6446503]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6446916]:int(64)[10] "temp"
    const-ref tmp[7198301]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7198306 'move' tmp[7198301](7198303 '.' this[4214820] F5__iterator[7198214]))
    (6446921 'move' low[6446916](6446918 '.v' tmp[7198301] F0_low[6834174]))
    (6446505 'move' start[6446503] low[6446916])
    const-val end[6446508]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[6446510]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[6446512]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[6446514]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6446923]:int(64)[10] "temp"
    const-ref tmp[7198308]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7198313 'move' tmp[7198308](7198310 '.' this[4214820] F5__iterator[7198214]))
    (6446928 'move' count[6446923](6446925 '.v' tmp[7198308] F1_count[6834178]))
    (6446516 'move' call_tmp[6446514](6446519 call ==[52746] count[6446923] 0))
    (6446522 'move' tmp[6446512] call_tmp[6446514])
    if call_tmp[6446514]
    {
      const-val tmp[6446527]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6446529]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6446930]:int(64)[10] "temp"
      const-ref tmp[7198315]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198320 'move' tmp[7198315](7198317 '.' this[4214820] F5__iterator[7198214]))
      (6446935 'move' low[6446930](6446932 '.v' tmp[7198315] F0_low[6834174]))
      (6446531 'move' call_tmp[6446529](6446533 'cast' uint(64)[86] low[6446930]))
      const-val call_tmp[6446536]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[6446538]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6446540 'move' coerce_tmp[6446538](6446542 'cast' uint(64)[86] 1))
      (6446545 'move' call_tmp[6446536](6446548 call -[1487313] call_tmp[6446529]))
      val call_tmp[6446550]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6446552 'move' tmp[6446527](6446555 call :[1482043] call_tmp[6446536]))
      (6446557 'move' tmp[6446510] tmp[6446527])
    }
    {
      const-val tmp[6446561]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[6446563]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[6446565]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6446937]:int(64)[10] "temp"
      const-ref tmp[7198322]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198327 'move' tmp[7198322](7198324 '.' this[4214820] F5__iterator[7198214]))
      (6446942 'move' count[6446937](6446939 '.v' tmp[7198322] F1_count[6834178]))
      (6446567 'move' call_tmp[6446565] count[6446937])
      const-val call_tmp[6446570]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6446944]:int(64)[10] "temp"
      const-ref tmp[7198329]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198334 'move' tmp[7198329](7198331 '.' this[4214820] F5__iterator[7198214]))
      (6446949 'move' count[6446944](6446946 '.v' tmp[7198329] F1_count[6834178]))
      (6446572 'move' call_tmp[6446570](6446575 call -[1487343] count[6446944]))
      const-val call_tmp[6446577]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6446951]:int(64)[10] "temp"
      const-ref tmp[7198336]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198341 'move' tmp[7198336](7198338 '.' this[4214820] F5__iterator[7198214]))
      (6446956 'move' low[6446951](6446953 '.v' tmp[7198336] F0_low[6834174]))
      (6446579 'move' call_tmp[6446577](6446582 call +[56587] low[6446951] call_tmp[6446570]))
      val call_tmp[6446585]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6446587 'move' tmp[6446561] call_tmp[6446577])
      (6446590 'move' tmp[6446510] call_tmp[6446577])
    }
    (6446594 'move' end[6446508] tmp[6446510])
    val _indexOfInterest[6446597]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6446601]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6446603]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (6446606 call chpl_direct_param_stride_range_iter[1517410] start[6446503] tmp[6446510] ret_tmp[6446603])
    (6446610 'move' call_tmp[6446601] ret_tmp[6446603])
    val tmp[7198343]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (6446613 'move' tmp[7198343](6446616 call _getIterator[1519541] call_tmp[6446601]))
    (7198345 '.=' this[4214820] F6__iterator[7198216] tmp[7198343])
    val ret[6446619]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
    val call_tmp[6446621]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6446623]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (6446626 call chpl_range_check_stride[1517730])
    val call_tmp[6446629]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[7198349]:int(64)[10] "temp"
    (6446631 'move' tmp[7198349] 0)
    (7198351 '.=' this[4214820] F7_i[7198218] tmp[7198349])
    val call_tmp[6446634]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6446636]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6446638]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6446640]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[6446642]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6446644]:int(64)[10] "temp"
    const-ref tmp[7198355]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198360 'move' tmp[7198355](7198357 '.' this[4214820] F6__iterator[7198216]))
    (6446646 'move' low[6446644](6446648 '.v' tmp[7198355] F0_low[6835591]))
    (6446651 'move' default_arg_first[6446642](6446654 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6446644]))
    const-val default_arg_last[6446656]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6446658]:int(64)[10] "temp"
    const-ref tmp[7198362]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198367 'move' tmp[7198362](7198364 '.' this[4214820] F6__iterator[7198216]))
    (6446660 'move' high[6446658](6446662 '.v' tmp[7198362] F1_high[6835595]))
    (6446665 'move' default_arg_last[6446656](6446668 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6446658]))
    val default_arg_shouldHalt[6446670]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[6446672]:bool[19] "dead after last mention" "temp"
    const-val low[6446674]:int(64)[10] "temp"
    const-ref tmp[7198369]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198374 'move' tmp[7198369](7198371 '.' this[4214820] F6__iterator[7198216]))
    (6446676 'move' low[6446674](6446678 '.v' tmp[7198369] F0_low[6835591]))
    const-val high[6446681]:int(64)[10] "temp"
    const-ref tmp[7198376]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198381 'move' tmp[7198376](7198378 '.' this[4214820] F6__iterator[7198216]))
    (6446683 'move' high[6446681](6446685 '.v' tmp[7198376] F1_high[6835595]))
    (6446688 'move' _return_tmp_[6446672](6446691 call chpl_checkIfRangeIterWillOverflow[1518856] low[6446674] high[6446681] 1 default_arg_first[6446642] default_arg_last[6446656] 1))
    CForLoop[6446698]
    {
      const-val yret[6446729]:int(64)[10] "dead after last mention" "YVV" "temp"
      const-val tmp[7198383]:int(64)[10] "temp"
      (7198388 'move' tmp[7198383](7198385 '.v' this[4214820] F7_i[7198218]))
      (6446731 'move' yret[6446729] tmp[7198383])
      const-val _yieldedIndex[6446734]:int(64)[10] "temp"
      const-val tmp[7198390]:int(64)[10] "temp"
      (7198395 'move' tmp[7198390](7198392 '.v' this[4214820] F7_i[7198218]))
      (6446736 'move' _yieldedIndex[6446734] tmp[7198390])
      const-val i[6446740]:int(64)[10] "const" "index var" "insert auto destroy"
      (6446742 'move' i[6446740] _yieldedIndex[6446734])
      const-val yret[6446745]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6446747 'move' yret[6446745] _yieldedIndex[6446734])
      const-val _yieldedIndex[6446769]:int(64)[10] "temp"
      (6446907 'move' _yieldedIndex[6446769] _yieldedIndex[6446734])
      const-val i[6446771]:int(64)[10] "const" "index var" "insert auto destroy"
      (6446773 'move' i[6446771] _yieldedIndex[6446769])
      const-val yret[6446776]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6446778 'move' yret[6446776] _yieldedIndex[6446769])
      const-val _yieldedIndex[6446781]:int(64)[10] "temp"
      (6446783 'move' _yieldedIndex[6446781] _yieldedIndex[6446769])
      const-val slot[6446787]:int(64)[10] "const" "index var" "insert auto destroy"
      (6446789 'move' slot[6446787] _yieldedIndex[6446781])
      const-val yret[6446792]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6446794 'move' yret[6446792] _yieldedIndex[6446781])
      const-val _yieldedIndex[6446797]:int(64)[10] "temp"
      (6446799 'move' _yieldedIndex[6446797] _yieldedIndex[6446781])
      const-val slot[6446803]:int(64)[10] "const" "index var" "insert auto destroy"
      (6446805 'move' slot[6446803] _yieldedIndex[6446797])
      const-val yret[6446808]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6446810 'move' yret[6446808] _yieldedIndex[6446797])
      const-val _yieldedIndex[6446813]:int(64)[10] "temp"
      (6446815 'move' _yieldedIndex[6446813] _yieldedIndex[6446797])
      const-val slot[6446819]:int(64)[10] "const" "index var" "insert auto destroy"
      (6446821 'move' slot[6446819] _yieldedIndex[6446813])
      const-val call_tmp[6446824]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "expr temp" "maybe param" "temp"
      const-ref tmp[7198397]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
      (7198402 'move' tmp[7198397](7198399 '.v' this[4214820] F2_table_ref[7198208]))
      (6446826 'move' call_tmp[6446824] tmp[7198397])
      const-val call_tmp[6446829]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6446831 'move' call_tmp[6446829](6446834 call isSlotFull[3360309] call_tmp[6446824] _yieldedIndex[6446813]))
      const-val call_tmp[6446837]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6446839 'move' call_tmp[6446837] call_tmp[6446829])
      if call_tmp[6446829]
      {
        val call_tmp[6446846]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "expr temp" "maybe param" "temp"
        const-ref tmp[7198404]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
        (7198409 'move' tmp[7198404](7198406 '.v' this[4214820] F2_table_ref[7198208]))
        (6446848 'move' call_tmp[6446846] tmp[7198404])
        ref call_tmp[6446851]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
        const-ref _this_tmp_[6446853]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
        (6446855 'move' _this_tmp_[6446853](6446858 call table[3355177] call_tmp[6446846]))
        val coerce_tmp[6446860]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6446862 'move' coerce_tmp[6446860](6446864 'deref' _this_tmp_[6446853]))
        (6446866 'move' call_tmp[6446851](6446869 call this[3358341] coerce_tmp[6446860] slot[6446819]))
        const-ref call_tmp[6446872]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
        (6446874 'move' call_tmp[6446872](6446877 call key[3360817] call_tmp[6446851]))
        const-ref tmp[7198411]:_ref(string)[1466327] "temp"
        (6446879 'move' tmp[7198411] call_tmp[6446872])
        (7198413 '.=' this[4214820] value[7198220] tmp[7198411])
        (7198534 '.=' this[4214820] more[4214795] 2)
        gotoIterEnd _end[7198532] _end[7198532]
        label _jump_break_2[7198542]
        val tmp[7198417]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
        (7198422 'move' tmp[7198417](7198419 '.v' this[4214820] F6__iterator[7198216]))
        (6446904 call _freeIterator[1519714] tmp[7198417])
        val tmp[7198424]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
        (7198429 'move' tmp[7198424](7198426 '.v' this[4214820] F5__iterator[7198214]))
        (6446887 call _freeIterator[1519981] tmp[7198424])
        val tmp[7198431]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
        (7198436 'move' tmp[7198431](7198433 '.v' this[4214820] F4__iterator[7198212]))
        (6446890 call _freeIterator[1520248] tmp[7198431])
        val tmp[7198438]:_ic__allSlots[1946131] "temp"
        (7198443 'move' tmp[7198438](7198440 '.v' this[4214820] F3__iterator[7198210]))
        (6446893 call _freeIterator[1947321] tmp[7198438])
        val tmp[7198445]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "temp"
        (7198450 'move' tmp[7198445](7198447 '.v' this[4214820] F1__iterator[7198206]))
        (6446896 call _freeIterator[3360226] tmp[7198445])
        gotoReturn _endkeys[5525120] _endkeys[5525120]
        label _jump_2[7198540]
      }
      {
        const-val low[6446700]:int(64)[10] "temp"
        const-ref tmp[7198452]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7198457 'move' tmp[7198452](7198454 '.' this[4214820] F6__iterator[7198216]))
        (6446702 'move' low[6446700](6446704 '.v' tmp[7198452] F0_low[6835591]))
        val tmp[7198459]:int(64)[10] "temp"
        (6446707 '=' tmp[7198459] low[6446700])
        (7198461 '.=' this[4214820] F7_i[7198218] tmp[7198459])
      }
      {
        const-val high[6446711]:int(64)[10] "temp"
        const-ref tmp[7198465]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7198470 'move' tmp[7198465](7198467 '.' this[4214820] F6__iterator[7198216]))
        (6446713 'move' high[6446711](6446715 '.v' tmp[7198465] F1_high[6835595]))
        val tmp[7198472]:int(64)[10] "temp"
        (7198477 'move' tmp[7198472](7198474 '.v' this[4214820] F7_i[7198218]))
        (6446718 '<=' tmp[7198472] high[6446711])
      }
      {
        val call_tmp[6446722]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[6446724]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[7198479]:int(64)[10] "temp"
        (7198484 'move' tmp[7198479](7198481 '.v' this[4214820] F7_i[7198218]))
        (6446726 '+=' tmp[7198479] 1)
        (7198486 '.=' this[4214820] F7_i[7198218] tmp[7198479])
      }
    }
    label _endchpl_direct_param_stride_range_iter[6446760]
    val tmp[7198490]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (7198495 'move' tmp[7198490](7198492 '.v' this[4214820] F6__iterator[7198216]))
    (6446763 call _freeIterator[1519714] tmp[7198490])
    label _endchpl_direct_counted_range_iter_helper[6446765]
    val tmp[7198497]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (7198502 'move' tmp[7198497](7198499 '.v' this[4214820] F5__iterator[7198214]))
    (6104610 call _freeIterator[1519981] tmp[7198497])
    label _endchpl_direct_counted_range_iter[6104612]
    val tmp[7198504]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (7198509 'move' tmp[7198504](7198506 '.v' this[4214820] F4__iterator[7198212]))
    (6104615 call _freeIterator[1520248] tmp[7198504])
    label _end_allSlots[6104617]
    val tmp[7198511]:_ic__allSlots[1946131] "temp"
    (7198516 'move' tmp[7198511](7198513 '.v' this[4214820] F3__iterator[7198210]))
    (6104620 call _freeIterator[1947321] tmp[7198511])
    label _endallSlots[6104622]
    val tmp[7198518]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "temp"
    (7198523 'move' tmp[7198518](7198520 '.v' this[4214820] F1__iterator[7198206]))
    (5644549 call _freeIterator[3360226] tmp[7198518])
    label _endkeys[5525120]
    (7198544 '.=' this[4214820] more[4214795] 0)
    label _end[7198532]
    (7198579 return _void[46])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].zip1[4214827](const in arg this[4214829]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7198525 call advance[4214818] this[4214829])
    (4214834 return _void[46])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].zip2[4214836](const in arg this[4214838]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4214843 return _void[46])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].zip3[4214845](const in arg this[4214847]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7198528 call advance[4214818] this[4214847])
    (4214852 return _void[46])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].zip4[4214854](const in arg this[4214856]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4214861 return _void[46])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].hasMore[4214863](const in arg this[4214865]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    val tmp[7198582]:int(64)[10] "temp"
    (7198587 'move' tmp[7198582](7198584 '.v' this[4214865] more[4214795]))
    (7198589 return tmp[7198582])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].getValue[4214872](const in arg this[4214874]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : _ref(string)[1466327] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[7198592]:_ref(string)[1466327] "temp"
    (7198597 'move' tmp[7198592](7198594 '.v' this[4214874] value[7198220]))
    (7198599 return tmp[7198592])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].keys[4214612](const  ref arg this[4214616]:_ref(map(string,owned ModuleSpecification?,false))[3283695], ref arg _retArg[5597167]:_ref(_ir_keys__ref_map_string__owned_ModuleSpecification_F)[4214909]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[7198607]:_ir_keys__ref_map_string__owned_ModuleSpecification_F[4214798] "temp"
    (7198609 '.=' _ir[7198607] F0_this[7198204] this[4214616])
    (7198613 '=' _retArg[5597167] _ir[7198607])
    (7198616 return _void[46])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].init[4214881](const in arg this[4214883]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7198602 return _void[46])
  }
  function _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792].incr[4214890](const in arg this[4214892]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7198605 return _void[46])
  }
  type _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792] val super[4214793]:RootClass[236] "super class" val more[4214795]:int(64)[10] const-ref F0_this[7198202]:_ref(map(string,owned ModuleSpecification?,false))[3283695] val F1__iterator[7198206]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] const-ref F2_table_ref[7198208]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] val F3__iterator[7198210]:_ic__allSlots[1946131] val F4__iterator[7198212]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7198214]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7198216]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7198218]:int(64)[10] const-ref value[7198220]:_ref(string)[1466327]
  type _ir_keys__ref_map_string__owned_ModuleSpecification_F[4214798] const-ref F0_this[7198204]:_ref(map(string,owned ModuleSpecification?,false))[3283695]
  function _getIterator[4214807](const  ref arg ir[4214809]:_ir_keys__ref_map_string__owned_ModuleSpecification_F[4214798]) : _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4214916]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792] "dead after last mention" "RVV" "temp"
    val _ic_[4214799]:_ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792] "dead after last mention" "temp"
    const-val call_tmp[4214923]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4214926 'move' call_tmp[4214923](4214938 'sizeof_bundle' _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792]))
    val cast_tmp[4214941]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4214943 'move' cast_tmp[4214941](4214804 call chpl_here_alloc[308303] call_tmp[4214923] 421))
    (4214812 'move' _ic_[4214799](4214945 'cast' _ic_keys__ref_map_string__owned_ModuleSpecification_F[4214792] cast_tmp[4214941]))
    (4214814 'setcid' _ic_[4214799])
    (4214921 'move' ret[4214916] _ic_[4214799])
    (7198619 '.=' ret[4214916] more[4214795] 1)
    const-ref tmp[7198623]:_ref(map(string,owned ModuleSpecification?,false))[3283695] "temp"
    (7198628 'move' tmp[7198623](7198624 '.v' ir[4214809] F0_this[7198204]))
    (7198630 '.=' ret[4214916] F0_this[7198202] tmp[7198623])
    (4214918 return ret[4214916])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].advance[4232787](const in arg this[4232789]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[7198980]:int(64)[10]
    (7199008 'move' more[7198980](7199005 '.v' this[4232789] more[4232764]))
    const-val tmp[7198983]:bool[19] "temp"
    (7198990 'move' tmp[7198983](7198987 '==' more[7198980] 2))
    if tmp[7198983]
    {
      gotoIterResume _jump_2[7198972] _jump_2[7198972]
    }
    const-val tmp[7198995]:bool[19] "temp"
    (7199000 'move' tmp[7198995](7198997 '==' more[7198980] -2))
    if tmp[7198995]
    {
      gotoIterResume _jump_break_2[7198974] _jump_break_2[7198974]
    }
    val ret[4232006]:_ir_keys__ref_map_string__shared_Module__real32_F[4232767] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[4232015]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[4232019]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead at end of block" "maybe param" "temp"
    const-ref tmp[7198654]:_ref(map(string,shared Module(real(32)),false))[3391869] "temp"
    (7198659 'move' tmp[7198654](7198656 '.v' this[4232789] F0_this[7198634]))
    (4232021 'move' call_tmp[4232019](4232024 call table[3400787] tmp[7198654]))
    const-val call_tmp[4232027]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[5597181]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "temp"
    (4232035 call allSlots[4232136] call_tmp[4232019] ret_tmp[5597181])
    (5597184 'move' call_tmp[4232027] ret_tmp[5597181])
    val tmp[7198661]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] "temp"
    (4232036 'move' tmp[7198661](4232039 call _getIterator[4232242] call_tmp[4232027]))
    (7198663 '.=' this[4232789] F1__iterator[7198638] tmp[7198661])
    const-ref tmp[7198667]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "temp"
    const-ref tmp[7198673]:_ref(map(string,shared Module(real(32)),false))[3391869] "temp"
    (7198678 'move' tmp[7198673](7198675 '.v' this[4232789] F0_this[7198634]))
    (4232733 'move' tmp[7198667](4232729 call table[3400787] tmp[7198673]))
    (7198669 '.=' this[4232789] F2_table_ref[7198640] tmp[7198667])
    val ret[6105422]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6105424]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[6105428]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    const-ref this[6105570]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "temp"
    const-ref tmp[7198680]:_ref(_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32)[4232370] "temp"
    (7198685 'move' tmp[7198680](7198682 '.' this[4232789] F1__iterator[7198638]))
    (6105575 'move' this[6105570](6105572 '.v' tmp[7198680] F0_this[7199066]))
    (6105430 'move' call_tmp[6105428](6105433 call tableSize[3392339] this[6105570]))
    const-val call_tmp[6105435]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[6105437]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6105439 'move' coerce_tmp[6105437](6105441 'deref' call_tmp[6105428]))
    const-val ret_tmp[6105443]:_ir__allSlots[1946137] "temp"
    (6105446 call _allSlots[265237] coerce_tmp[6105437] ret_tmp[6105443])
    (6105449 'move' call_tmp[6105435] ret_tmp[6105443])
    val tmp[7198687]:_ic__allSlots[1946131] "temp"
    (6105452 'move' tmp[7198687](6105455 call _getIterator[1946146] call_tmp[6105435]))
    (7198689 '.=' this[4232789] F3__iterator[7198642] tmp[7198687])
    val ret[6448321]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6448323]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6448327]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6448329]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    const-val size[6448923]:int(64)[10] "temp"
    const-ref tmp[7198693]:_ref(_ic__allSlots)[1946274] "temp"
    (7198698 'move' tmp[7198693](7198695 '.' this[4232789] F3__iterator[7198642]))
    (6448928 'move' size[6448923](6448925 '.v' tmp[7198693] F0_size[6829964]))
    (6448332 call chpl_direct_counted_range_iter[1468903] 0 size[6448923] ret_tmp[6448329])
    (6448336 'move' call_tmp[6448327] ret_tmp[6448329])
    val tmp[7198700]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (6448339 'move' tmp[7198700](6448342 call _getIterator[1520079] call_tmp[6448327]))
    (7198702 '.=' this[4232789] F4__iterator[7198644] tmp[7198700])
    val ret[6448345]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
    val tmp[6448347]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6448349]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6448351]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6448353]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6448355]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6448357]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6448359]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val _indexOfInterest[6448361]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6448365]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6448367]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    const-val low[6448369]:int(64)[10] "temp"
    const-ref tmp[7198706]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7198711 'move' tmp[7198706](7198708 '.' this[4232789] F4__iterator[7198644]))
    (6448371 'move' low[6448369](6448373 '.v' tmp[7198706] F0_low[6832410]))
    const-val count[6448376]:int(64)[10] "temp"
    const-ref tmp[7198713]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7198718 'move' tmp[7198713](7198715 '.' this[4232789] F4__iterator[7198644]))
    (6448378 'move' count[6448376](6448380 '.v' tmp[7198713] F1_count[6832414]))
    (6448384 call chpl_direct_counted_range_iter_helper[1469227] low[6448369] count[6448376] ret_tmp[6448367])
    (6448388 'move' call_tmp[6448365] ret_tmp[6448367])
    val tmp[7198720]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (6448391 'move' tmp[7198720](6448394 call _getIterator[1519812] call_tmp[6448365]))
    (7198722 '.=' this[4232789] F5__iterator[7198646] tmp[7198720])
    val ret[6448397]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
    val tmp[6448399]:bool[19] "dead after last mention" "maybe param" "temp"
    val tmp[6448401]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6448403]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6448405]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6448407]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6448409]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6448411]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[6448413]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[6448415]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6448417]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6448419]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[6448421]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6448423]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6448425]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[6448427]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6448429]:int(64)[10] "temp"
    const-ref tmp[7198726]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7198731 'move' tmp[7198726](7198728 '.' this[4232789] F5__iterator[7198646]))
    (6448431 'move' count[6448429](6448433 '.v' tmp[7198726] F1_count[6834178]))
    (6448436 'move' call_tmp[6448427](6448439 call <[1469576] count[6448429] 0))
    (6448442 'move' tmp[6448425] call_tmp[6448427])
    (6448445 'move' tmp[6448419] call_tmp[6448427])
    const-val call_tmp[6448448]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (6448450 'move' call_tmp[6448448] call_tmp[6448427])
    if call_tmp[6448427]
    {
      (6448456 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6448459]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6448461]:int(64)[10] "temp"
    const-ref tmp[7198733]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7198738 'move' tmp[7198733](7198735 '.' this[4232789] F5__iterator[7198646]))
    (6448463 'move' low[6448461](6448465 '.v' tmp[7198733] F0_low[6834174]))
    (6448468 'move' start[6448459] low[6448461])
    const-val end[6448471]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[6448473]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[6448475]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[6448477]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6448479]:int(64)[10] "temp"
    const-ref tmp[7198740]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7198745 'move' tmp[7198740](7198742 '.' this[4232789] F5__iterator[7198646]))
    (6448481 'move' count[6448479](6448483 '.v' tmp[7198740] F1_count[6834178]))
    (6448486 'move' call_tmp[6448477](6448489 call ==[52746] count[6448479] 0))
    (6448492 'move' tmp[6448475] call_tmp[6448477])
    if call_tmp[6448477]
    {
      const-val tmp[6448497]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6448499]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6448501]:int(64)[10] "temp"
      const-ref tmp[7198747]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198752 'move' tmp[7198747](7198749 '.' this[4232789] F5__iterator[7198646]))
      (6448503 'move' low[6448501](6448505 '.v' tmp[7198747] F0_low[6834174]))
      (6448508 'move' call_tmp[6448499](6448510 'cast' uint(64)[86] low[6448501]))
      const-val call_tmp[6448513]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[6448515]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6448517 'move' coerce_tmp[6448515](6448519 'cast' uint(64)[86] 1))
      (6448522 'move' call_tmp[6448513](6448525 call -[1487313] call_tmp[6448499]))
      val call_tmp[6448527]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6448529 'move' tmp[6448497](6448532 call :[1482043] call_tmp[6448513]))
      (6448534 'move' tmp[6448473] tmp[6448497])
    }
    {
      const-val tmp[6448538]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[6448540]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[6448542]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6448544]:int(64)[10] "temp"
      const-ref tmp[7198754]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198759 'move' tmp[7198754](7198756 '.' this[4232789] F5__iterator[7198646]))
      (6448546 'move' count[6448544](6448548 '.v' tmp[7198754] F1_count[6834178]))
      (6448551 'move' call_tmp[6448542] count[6448544])
      const-val call_tmp[6448554]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6448556]:int(64)[10] "temp"
      const-ref tmp[7198761]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198766 'move' tmp[7198761](7198763 '.' this[4232789] F5__iterator[7198646]))
      (6448558 'move' count[6448556](6448560 '.v' tmp[7198761] F1_count[6834178]))
      (6448563 'move' call_tmp[6448554](6448566 call -[1487343] count[6448556]))
      const-val call_tmp[6448568]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6448570]:int(64)[10] "temp"
      const-ref tmp[7198768]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7198773 'move' tmp[7198768](7198770 '.' this[4232789] F5__iterator[7198646]))
      (6448572 'move' low[6448570](6448574 '.v' tmp[7198768] F0_low[6834174]))
      (6448577 'move' call_tmp[6448568](6448580 call +[56587] low[6448570] call_tmp[6448554]))
      val call_tmp[6448583]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6448585 'move' tmp[6448538] call_tmp[6448568])
      (6448588 'move' tmp[6448473] call_tmp[6448568])
    }
    (6448592 'move' end[6448471] tmp[6448473])
    val _indexOfInterest[6448595]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6448599]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6448601]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (6448604 call chpl_direct_param_stride_range_iter[1517410] start[6448459] tmp[6448473] ret_tmp[6448601])
    (6448608 'move' call_tmp[6448599] ret_tmp[6448601])
    val tmp[7198775]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (6448611 'move' tmp[7198775](6448614 call _getIterator[1519541] call_tmp[6448599]))
    (7198777 '.=' this[4232789] F6__iterator[7198648] tmp[7198775])
    val ret[6448617]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
    val call_tmp[6448619]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6448621]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (6448624 call chpl_range_check_stride[1517730])
    val call_tmp[6448627]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[7198781]:int(64)[10] "temp"
    (6448629 'move' tmp[7198781] 0)
    (7198783 '.=' this[4232789] F7_i[7198650] tmp[7198781])
    val call_tmp[6448632]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6448634]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6448636]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6448638]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[6448640]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6448642]:int(64)[10] "temp"
    const-ref tmp[7198787]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198792 'move' tmp[7198787](7198789 '.' this[4232789] F6__iterator[7198648]))
    (6448644 'move' low[6448642](6448646 '.v' tmp[7198787] F0_low[6835591]))
    (6448649 'move' default_arg_first[6448640](6448652 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6448642]))
    const-val default_arg_last[6448654]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6448656]:int(64)[10] "temp"
    const-ref tmp[7198794]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198799 'move' tmp[7198794](7198796 '.' this[4232789] F6__iterator[7198648]))
    (6448658 'move' high[6448656](6448660 '.v' tmp[7198794] F1_high[6835595]))
    (6448663 'move' default_arg_last[6448654](6448666 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6448656]))
    val default_arg_shouldHalt[6448668]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[6448670]:bool[19] "dead after last mention" "temp"
    const-val low[6448672]:int(64)[10] "temp"
    const-ref tmp[7198801]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198806 'move' tmp[7198801](7198803 '.' this[4232789] F6__iterator[7198648]))
    (6448674 'move' low[6448672](6448676 '.v' tmp[7198801] F0_low[6835591]))
    const-val high[6448679]:int(64)[10] "temp"
    const-ref tmp[7198808]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7198813 'move' tmp[7198808](7198810 '.' this[4232789] F6__iterator[7198648]))
    (6448681 'move' high[6448679](6448683 '.v' tmp[7198808] F1_high[6835595]))
    (6448686 'move' _return_tmp_[6448670](6448689 call chpl_checkIfRangeIterWillOverflow[1518856] low[6448672] high[6448679] 1 default_arg_first[6448640] default_arg_last[6448654] 1))
    CForLoop[6448696]
    {
      const-val yret[6448727]:int(64)[10] "dead after last mention" "YVV" "temp"
      const-val tmp[7198815]:int(64)[10] "temp"
      (7198820 'move' tmp[7198815](7198817 '.v' this[4232789] F7_i[7198650]))
      (6448729 'move' yret[6448727] tmp[7198815])
      const-val _yieldedIndex[6448732]:int(64)[10] "temp"
      const-val tmp[7198822]:int(64)[10] "temp"
      (7198827 'move' tmp[7198822](7198824 '.v' this[4232789] F7_i[7198650]))
      (6448734 'move' _yieldedIndex[6448732] tmp[7198822])
      const-val i[6448738]:int(64)[10] "const" "index var" "insert auto destroy"
      (6448740 'move' i[6448738] _yieldedIndex[6448732])
      const-val yret[6448743]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6448745 'move' yret[6448743] _yieldedIndex[6448732])
      const-val _yieldedIndex[6448748]:int(64)[10] "temp"
      (6448750 'move' _yieldedIndex[6448748] _yieldedIndex[6448732])
      const-val i[6448754]:int(64)[10] "const" "index var" "insert auto destroy"
      (6448756 'move' i[6448754] _yieldedIndex[6448748])
      const-val yret[6448759]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6448761 'move' yret[6448759] _yieldedIndex[6448748])
      const-val _yieldedIndex[6448764]:int(64)[10] "temp"
      (6448766 'move' _yieldedIndex[6448764] _yieldedIndex[6448748])
      const-val slot[6448770]:int(64)[10] "const" "index var" "insert auto destroy"
      (6448772 'move' slot[6448770] _yieldedIndex[6448764])
      const-val yret[6448775]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6448777 'move' yret[6448775] _yieldedIndex[6448764])
      const-val _yieldedIndex[6448815]:int(64)[10] "temp"
      (6448921 'move' _yieldedIndex[6448815] _yieldedIndex[6448764])
      const-val slot[6448817]:int(64)[10] "const" "index var" "insert auto destroy"
      (6448819 'move' slot[6448817] _yieldedIndex[6448815])
      const-val yret[6448822]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6448824 'move' yret[6448822] _yieldedIndex[6448815])
      const-val _yieldedIndex[6448827]:int(64)[10] "temp"
      (6448829 'move' _yieldedIndex[6448827] _yieldedIndex[6448815])
      const-val slot[6448833]:int(64)[10] "const" "index var" "insert auto destroy"
      (6448835 'move' slot[6448833] _yieldedIndex[6448827])
      const-val call_tmp[6448838]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "expr temp" "maybe param" "temp"
      const-ref tmp[7198829]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "temp"
      (7198834 'move' tmp[7198829](7198831 '.v' this[4232789] F2_table_ref[7198640]))
      (6448840 'move' call_tmp[6448838] tmp[7198829])
      const-val call_tmp[6448843]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6448845 'move' call_tmp[6448843](6448848 call isSlotFull[3407477] call_tmp[6448838] _yieldedIndex[6448827]))
      const-val call_tmp[6448851]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6448853 'move' call_tmp[6448851] call_tmp[6448843])
      if call_tmp[6448843]
      {
        val call_tmp[6448860]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "expr temp" "maybe param" "temp"
        const-ref tmp[7198836]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "temp"
        (7198841 'move' tmp[7198836](7198838 '.v' this[4232789] F2_table_ref[7198640]))
        (6448862 'move' call_tmp[6448860] tmp[7198836])
        ref call_tmp[6448865]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
        const-ref _this_tmp_[6448867]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "temp"
        (6448869 'move' _this_tmp_[6448867](6448872 call table[3392311] call_tmp[6448860]))
        val coerce_tmp[6448874]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6448876 'move' coerce_tmp[6448874](6448878 'deref' _this_tmp_[6448867]))
        (6448880 'move' call_tmp[6448865](6448883 call this[3395475] coerce_tmp[6448874] slot[6448833]))
        const-ref call_tmp[6448886]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
        (6448888 'move' call_tmp[6448886](6448891 call key[3402607] call_tmp[6448865]))
        const-ref tmp[7198843]:_ref(string)[1466327] "temp"
        (6448893 'move' tmp[7198843] call_tmp[6448886])
        (7198845 '.=' this[4232789] value[7198652] tmp[7198843])
        (7198966 '.=' this[4232789] more[4232764] 2)
        gotoIterEnd _end[7198964] _end[7198964]
        label _jump_break_2[7198974]
        val tmp[7198849]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
        (7198854 'move' tmp[7198849](7198851 '.v' this[4232789] F6__iterator[7198648]))
        (6448912 call _freeIterator[1519714] tmp[7198849])
        val tmp[7198856]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
        (7198861 'move' tmp[7198856](7198858 '.v' this[4232789] F5__iterator[7198646]))
        (6448915 call _freeIterator[1519981] tmp[7198856])
        val tmp[7198863]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
        (7198868 'move' tmp[7198863](7198865 '.v' this[4232789] F4__iterator[7198644]))
        (6448918 call _freeIterator[1520248] tmp[7198863])
        val tmp[7198870]:_ic__allSlots[1946131] "temp"
        (7198875 'move' tmp[7198870](7198872 '.v' this[4232789] F3__iterator[7198642]))
        (6448901 call _freeIterator[1947321] tmp[7198870])
        val tmp[7198877]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] "temp"
        (7198882 'move' tmp[7198877](7198879 '.v' this[4232789] F1__iterator[7198638]))
        (6448904 call _freeIterator[4232639] tmp[7198877])
        gotoReturn _endkeys[5525127] _endkeys[5525127]
        label _jump_2[7198972]
      }
      {
        const-val low[6448698]:int(64)[10] "temp"
        const-ref tmp[7198884]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7198889 'move' tmp[7198884](7198886 '.' this[4232789] F6__iterator[7198648]))
        (6448700 'move' low[6448698](6448702 '.v' tmp[7198884] F0_low[6835591]))
        val tmp[7198891]:int(64)[10] "temp"
        (6448705 '=' tmp[7198891] low[6448698])
        (7198893 '.=' this[4232789] F7_i[7198650] tmp[7198891])
      }
      {
        const-val high[6448709]:int(64)[10] "temp"
        const-ref tmp[7198897]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7198902 'move' tmp[7198897](7198899 '.' this[4232789] F6__iterator[7198648]))
        (6448711 'move' high[6448709](6448713 '.v' tmp[7198897] F1_high[6835595]))
        val tmp[7198904]:int(64)[10] "temp"
        (7198909 'move' tmp[7198904](7198906 '.v' this[4232789] F7_i[7198650]))
        (6448716 '<=' tmp[7198904] high[6448709])
      }
      {
        val call_tmp[6448720]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[6448722]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[7198911]:int(64)[10] "temp"
        (7198916 'move' tmp[7198911](7198913 '.v' this[4232789] F7_i[7198650]))
        (6448724 '+=' tmp[7198911] 1)
        (7198918 '.=' this[4232789] F7_i[7198650] tmp[7198911])
      }
    }
    label _endchpl_direct_param_stride_range_iter[6448796]
    val tmp[7198922]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (7198927 'move' tmp[7198922](7198924 '.v' this[4232789] F6__iterator[7198648]))
    (6448799 call _freeIterator[1519714] tmp[7198922])
    label _endchpl_direct_counted_range_iter_helper[6448801]
    val tmp[7198929]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (7198934 'move' tmp[7198929](7198931 '.v' this[4232789] F5__iterator[7198646]))
    (6448804 call _freeIterator[1519981] tmp[7198929])
    label _endchpl_direct_counted_range_iter[6448806]
    val tmp[7198936]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (7198941 'move' tmp[7198936](7198938 '.v' this[4232789] F4__iterator[7198644]))
    (6448809 call _freeIterator[1520248] tmp[7198936])
    label _end_allSlots[6448811]
    val tmp[7198943]:_ic__allSlots[1946131] "temp"
    (7198948 'move' tmp[7198943](7198945 '.v' this[4232789] F3__iterator[7198642]))
    (6105481 call _freeIterator[1947321] tmp[7198943])
    label _endallSlots[6105483]
    val tmp[7198950]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] "temp"
    (7198955 'move' tmp[7198950](7198952 '.v' this[4232789] F1__iterator[7198638]))
    (5644622 call _freeIterator[4232639] tmp[7198950])
    label _endkeys[5525127]
    (7198976 '.=' this[4232789] more[4232764] 0)
    label _end[7198964]
    (7199011 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].zip1[4232796](const in arg this[4232798]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7198957 call advance[4232787] this[4232798])
    (4232803 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].zip2[4232805](const in arg this[4232807]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232812 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].zip3[4232814](const in arg this[4232816]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7198960 call advance[4232787] this[4232816])
    (4232821 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].zip4[4232823](const in arg this[4232825]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232830 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].hasMore[4232832](const in arg this[4232834]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    val tmp[7199014]:int(64)[10] "temp"
    (7199019 'move' tmp[7199014](7199016 '.v' this[4232834] more[4232764]))
    (7199021 return tmp[7199014])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].getValue[4232841](const in arg this[4232843]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : _ref(string)[1466327] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[7199024]:_ref(string)[1466327] "temp"
    (7199029 'move' tmp[7199024](7199026 '.v' this[4232843] value[7198652]))
    (7199031 return tmp[7199024])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].keys[4232000](const  ref arg this[4232004]:_ref(map(string,shared Module(real(32)),false))[3391869], ref arg _retArg[5597177]:_ref(_ir_keys__ref_map_string__shared_Module__real32_F)[4232878]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[7199039]:_ir_keys__ref_map_string__shared_Module__real32_F[4232767] "temp"
    (7199041 '.=' _ir[7199039] F0_this[7198636] this[4232004])
    (7199045 '=' _retArg[5597177] _ir[7199039])
    (7199048 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].init[4232850](const in arg this[4232852]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7199034 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real32_F[4232761].incr[4232859](const in arg this[4232861]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7199037 return _void[46])
  }
  type _ic_keys__ref_map_string__shared_Module__real32_F[4232761] val super[4232762]:RootClass[236] "super class" val more[4232764]:int(64)[10] const-ref F0_this[7198634]:_ref(map(string,shared Module(real(32)),false))[3391869] val F1__iterator[7198638]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] const-ref F2_table_ref[7198640]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] val F3__iterator[7198642]:_ic__allSlots[1946131] val F4__iterator[7198644]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7198646]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7198648]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7198650]:int(64)[10] const-ref value[7198652]:_ref(string)[1466327]
  type _ir_keys__ref_map_string__shared_Module__real32_F[4232767] const-ref F0_this[7198636]:_ref(map(string,shared Module(real(32)),false))[3391869]
  function _getIterator[4232776](const  ref arg ir[4232778]:_ir_keys__ref_map_string__shared_Module__real32_F[4232767]) : _ic_keys__ref_map_string__shared_Module__real32_F[4232761] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4232885]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761] "dead after last mention" "RVV" "temp"
    val _ic_[4232768]:_ic_keys__ref_map_string__shared_Module__real32_F[4232761] "dead after last mention" "temp"
    const-val call_tmp[4232892]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4232895 'move' call_tmp[4232892](4232907 'sizeof_bundle' _ic_keys__ref_map_string__shared_Module__real32_F[4232761]))
    val cast_tmp[4232910]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4232912 'move' cast_tmp[4232910](4232773 call chpl_here_alloc[308303] call_tmp[4232892] 423))
    (4232781 'move' _ic_[4232768](4232914 'cast' _ic_keys__ref_map_string__shared_Module__real32_F[4232761] cast_tmp[4232910]))
    (4232783 'setcid' _ic_[4232768])
    (4232890 'move' ret[4232885] _ic_[4232768])
    (7199051 '.=' ret[4232885] more[4232764] 1)
    const-ref tmp[7199055]:_ref(map(string,shared Module(real(32)),false))[3391869] "temp"
    (7199060 'move' tmp[7199055](7199056 '.v' ir[4232778] F0_this[7198636]))
    (7199062 '.=' ret[4232885] F0_this[7198634] tmp[7199055])
    (4232887 return ret[4232885])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].advance[4238612](const in arg this[4238614]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[7201564]:int(64)[10]
    (7201592 'move' more[7201564](7201589 '.v' this[4238614] more[4238589]))
    const-val tmp[7201567]:bool[19] "temp"
    (7201574 'move' tmp[7201567](7201571 '==' more[7201564] 2))
    if tmp[7201567]
    {
      gotoIterResume _jump_2[7201556] _jump_2[7201556]
    }
    const-val tmp[7201579]:bool[19] "temp"
    (7201584 'move' tmp[7201579](7201581 '==' more[7201564] -2))
    if tmp[7201579]
    {
      gotoIterResume _jump_break_2[7201558] _jump_break_2[7201558]
    }
    val ret[4237754]:_ir_keys__ref_map_string_Module__real64_F[4238592] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[4237763]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[4237767]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead at end of block" "maybe param" "temp"
    const-ref tmp[7201238]:_ref(map(string,Module(real(64)),false))[3405193] "temp"
    (7201243 'move' tmp[7201238](7201240 '.v' this[4238614] F0_this[7201218]))
    (4237769 'move' call_tmp[4237767](4237772 call table[3860336] tmp[7201238]))
    const-val call_tmp[4237775]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[5597201]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "temp"
    (4237783 call allSlots[4237884] call_tmp[4237767] ret_tmp[5597201])
    (5597204 'move' call_tmp[4237775] ret_tmp[5597201])
    val tmp[7201245]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] "temp"
    (4237784 'move' tmp[7201245](4237787 call _getIterator[4237990] call_tmp[4237775]))
    (7201247 '.=' this[4238614] F1__iterator[7201222] tmp[7201245])
    const-ref tmp[7201251]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "temp"
    const-ref tmp[7201257]:_ref(map(string,Module(real(64)),false))[3405193] "temp"
    (7201262 'move' tmp[7201257](7201259 '.v' this[4238614] F0_this[7201218]))
    (4238481 'move' tmp[7201251](4238477 call table[3860336] tmp[7201257]))
    (7201253 '.=' this[4238614] F2_table_ref[7201224] tmp[7201251])
    val ret[6106250]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6106252]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[6106256]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    const-ref this[6106398]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "temp"
    const-ref tmp[7201264]:_ref(_ic_allSlots__ref_chpl__hashtable_string_Module__real64)[4238118] "temp"
    (7201269 'move' tmp[7201264](7201266 '.' this[4238614] F1__iterator[7201222]))
    (6106403 'move' this[6106398](6106400 '.v' tmp[7201264] F0_this[7201650]))
    (6106258 'move' call_tmp[6106256](6106261 call tableSize[3828932] this[6106398]))
    const-val call_tmp[6106263]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[6106265]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6106267 'move' coerce_tmp[6106265](6106269 'deref' call_tmp[6106256]))
    const-val ret_tmp[6106271]:_ir__allSlots[1946137] "temp"
    (6106274 call _allSlots[265237] coerce_tmp[6106265] ret_tmp[6106271])
    (6106277 'move' call_tmp[6106263] ret_tmp[6106271])
    val tmp[7201271]:_ic__allSlots[1946131] "temp"
    (6106280 'move' tmp[7201271](6106283 call _getIterator[1946146] call_tmp[6106263]))
    (7201273 '.=' this[4238614] F3__iterator[7201226] tmp[7201271])
    val ret[6450269]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6450271]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6450275]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6450277]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    const-val size[6450871]:int(64)[10] "temp"
    const-ref tmp[7201277]:_ref(_ic__allSlots)[1946274] "temp"
    (7201282 'move' tmp[7201277](7201279 '.' this[4238614] F3__iterator[7201226]))
    (6450876 'move' size[6450871](6450873 '.v' tmp[7201277] F0_size[6829964]))
    (6450280 call chpl_direct_counted_range_iter[1468903] 0 size[6450871] ret_tmp[6450277])
    (6450284 'move' call_tmp[6450275] ret_tmp[6450277])
    val tmp[7201284]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (6450287 'move' tmp[7201284](6450290 call _getIterator[1520079] call_tmp[6450275]))
    (7201286 '.=' this[4238614] F4__iterator[7201228] tmp[7201284])
    val ret[6450293]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
    val tmp[6450295]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6450297]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6450299]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6450301]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6450303]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6450305]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6450307]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val _indexOfInterest[6450309]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6450313]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6450315]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    const-val low[6450317]:int(64)[10] "temp"
    const-ref tmp[7201290]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7201295 'move' tmp[7201290](7201292 '.' this[4238614] F4__iterator[7201228]))
    (6450319 'move' low[6450317](6450321 '.v' tmp[7201290] F0_low[6832410]))
    const-val count[6450324]:int(64)[10] "temp"
    const-ref tmp[7201297]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7201302 'move' tmp[7201297](7201299 '.' this[4238614] F4__iterator[7201228]))
    (6450326 'move' count[6450324](6450328 '.v' tmp[7201297] F1_count[6832414]))
    (6450332 call chpl_direct_counted_range_iter_helper[1469227] low[6450317] count[6450324] ret_tmp[6450315])
    (6450336 'move' call_tmp[6450313] ret_tmp[6450315])
    val tmp[7201304]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (6450339 'move' tmp[7201304](6450342 call _getIterator[1519812] call_tmp[6450313]))
    (7201306 '.=' this[4238614] F5__iterator[7201230] tmp[7201304])
    val ret[6450345]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
    val tmp[6450347]:bool[19] "dead after last mention" "maybe param" "temp"
    val tmp[6450349]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6450351]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6450353]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6450355]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6450357]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6450359]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[6450361]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[6450363]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6450365]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6450367]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[6450369]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6450371]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6450373]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[6450375]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6450377]:int(64)[10] "temp"
    const-ref tmp[7201310]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7201315 'move' tmp[7201310](7201312 '.' this[4238614] F5__iterator[7201230]))
    (6450379 'move' count[6450377](6450381 '.v' tmp[7201310] F1_count[6834178]))
    (6450384 'move' call_tmp[6450375](6450387 call <[1469576] count[6450377] 0))
    (6450390 'move' tmp[6450373] call_tmp[6450375])
    (6450393 'move' tmp[6450367] call_tmp[6450375])
    const-val call_tmp[6450396]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (6450398 'move' call_tmp[6450396] call_tmp[6450375])
    if call_tmp[6450375]
    {
      (6450404 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6450407]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6450409]:int(64)[10] "temp"
    const-ref tmp[7201317]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7201322 'move' tmp[7201317](7201319 '.' this[4238614] F5__iterator[7201230]))
    (6450411 'move' low[6450409](6450413 '.v' tmp[7201317] F0_low[6834174]))
    (6450416 'move' start[6450407] low[6450409])
    const-val end[6450419]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[6450421]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[6450423]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[6450425]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6450427]:int(64)[10] "temp"
    const-ref tmp[7201324]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7201329 'move' tmp[7201324](7201326 '.' this[4238614] F5__iterator[7201230]))
    (6450429 'move' count[6450427](6450431 '.v' tmp[7201324] F1_count[6834178]))
    (6450434 'move' call_tmp[6450425](6450437 call ==[52746] count[6450427] 0))
    (6450440 'move' tmp[6450423] call_tmp[6450425])
    if call_tmp[6450425]
    {
      const-val tmp[6450445]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6450447]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6450449]:int(64)[10] "temp"
      const-ref tmp[7201331]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7201336 'move' tmp[7201331](7201333 '.' this[4238614] F5__iterator[7201230]))
      (6450451 'move' low[6450449](6450453 '.v' tmp[7201331] F0_low[6834174]))
      (6450456 'move' call_tmp[6450447](6450458 'cast' uint(64)[86] low[6450449]))
      const-val call_tmp[6450461]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[6450463]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6450465 'move' coerce_tmp[6450463](6450467 'cast' uint(64)[86] 1))
      (6450470 'move' call_tmp[6450461](6450473 call -[1487313] call_tmp[6450447]))
      val call_tmp[6450475]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6450477 'move' tmp[6450445](6450480 call :[1482043] call_tmp[6450461]))
      (6450482 'move' tmp[6450421] tmp[6450445])
    }
    {
      const-val tmp[6450486]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[6450488]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[6450490]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6450492]:int(64)[10] "temp"
      const-ref tmp[7201338]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7201343 'move' tmp[7201338](7201340 '.' this[4238614] F5__iterator[7201230]))
      (6450494 'move' count[6450492](6450496 '.v' tmp[7201338] F1_count[6834178]))
      (6450499 'move' call_tmp[6450490] count[6450492])
      const-val call_tmp[6450502]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6450504]:int(64)[10] "temp"
      const-ref tmp[7201345]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7201350 'move' tmp[7201345](7201347 '.' this[4238614] F5__iterator[7201230]))
      (6450506 'move' count[6450504](6450508 '.v' tmp[7201345] F1_count[6834178]))
      (6450511 'move' call_tmp[6450502](6450514 call -[1487343] count[6450504]))
      const-val call_tmp[6450516]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6450518]:int(64)[10] "temp"
      const-ref tmp[7201352]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7201357 'move' tmp[7201352](7201354 '.' this[4238614] F5__iterator[7201230]))
      (6450520 'move' low[6450518](6450522 '.v' tmp[7201352] F0_low[6834174]))
      (6450525 'move' call_tmp[6450516](6450528 call +[56587] low[6450518] call_tmp[6450502]))
      val call_tmp[6450531]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6450533 'move' tmp[6450486] call_tmp[6450516])
      (6450536 'move' tmp[6450421] call_tmp[6450516])
    }
    (6450540 'move' end[6450419] tmp[6450421])
    val _indexOfInterest[6450543]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6450547]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6450549]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (6450552 call chpl_direct_param_stride_range_iter[1517410] start[6450407] tmp[6450421] ret_tmp[6450549])
    (6450556 'move' call_tmp[6450547] ret_tmp[6450549])
    val tmp[7201359]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (6450559 'move' tmp[7201359](6450562 call _getIterator[1519541] call_tmp[6450547]))
    (7201361 '.=' this[4238614] F6__iterator[7201232] tmp[7201359])
    val ret[6450565]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
    val call_tmp[6450567]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6450569]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (6450572 call chpl_range_check_stride[1517730])
    val call_tmp[6450575]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[7201365]:int(64)[10] "temp"
    (6450577 'move' tmp[7201365] 0)
    (7201367 '.=' this[4238614] F7_i[7201234] tmp[7201365])
    val call_tmp[6450580]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6450582]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6450584]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6450586]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[6450588]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6450590]:int(64)[10] "temp"
    const-ref tmp[7201371]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7201376 'move' tmp[7201371](7201373 '.' this[4238614] F6__iterator[7201232]))
    (6450592 'move' low[6450590](6450594 '.v' tmp[7201371] F0_low[6835591]))
    (6450597 'move' default_arg_first[6450588](6450600 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6450590]))
    const-val default_arg_last[6450602]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6450604]:int(64)[10] "temp"
    const-ref tmp[7201378]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7201383 'move' tmp[7201378](7201380 '.' this[4238614] F6__iterator[7201232]))
    (6450606 'move' high[6450604](6450608 '.v' tmp[7201378] F1_high[6835595]))
    (6450611 'move' default_arg_last[6450602](6450614 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6450604]))
    val default_arg_shouldHalt[6450616]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[6450618]:bool[19] "dead after last mention" "temp"
    const-val low[6450620]:int(64)[10] "temp"
    const-ref tmp[7201385]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7201390 'move' tmp[7201385](7201387 '.' this[4238614] F6__iterator[7201232]))
    (6450622 'move' low[6450620](6450624 '.v' tmp[7201385] F0_low[6835591]))
    const-val high[6450627]:int(64)[10] "temp"
    const-ref tmp[7201392]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7201397 'move' tmp[7201392](7201394 '.' this[4238614] F6__iterator[7201232]))
    (6450629 'move' high[6450627](6450631 '.v' tmp[7201392] F1_high[6835595]))
    (6450634 'move' _return_tmp_[6450618](6450637 call chpl_checkIfRangeIterWillOverflow[1518856] low[6450620] high[6450627] 1 default_arg_first[6450588] default_arg_last[6450602] 1))
    CForLoop[6450644]
    {
      const-val yret[6450675]:int(64)[10] "dead after last mention" "YVV" "temp"
      const-val tmp[7201399]:int(64)[10] "temp"
      (7201404 'move' tmp[7201399](7201401 '.v' this[4238614] F7_i[7201234]))
      (6450677 'move' yret[6450675] tmp[7201399])
      const-val _yieldedIndex[6450680]:int(64)[10] "temp"
      const-val tmp[7201406]:int(64)[10] "temp"
      (7201411 'move' tmp[7201406](7201408 '.v' this[4238614] F7_i[7201234]))
      (6450682 'move' _yieldedIndex[6450680] tmp[7201406])
      const-val i[6450686]:int(64)[10] "const" "index var" "insert auto destroy"
      (6450688 'move' i[6450686] _yieldedIndex[6450680])
      const-val yret[6450691]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6450693 'move' yret[6450691] _yieldedIndex[6450680])
      const-val _yieldedIndex[6450696]:int(64)[10] "temp"
      (6450698 'move' _yieldedIndex[6450696] _yieldedIndex[6450680])
      const-val i[6450702]:int(64)[10] "const" "index var" "insert auto destroy"
      (6450704 'move' i[6450702] _yieldedIndex[6450696])
      const-val yret[6450707]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6450709 'move' yret[6450707] _yieldedIndex[6450696])
      const-val _yieldedIndex[6450712]:int(64)[10] "temp"
      (6450714 'move' _yieldedIndex[6450712] _yieldedIndex[6450696])
      const-val slot[6450718]:int(64)[10] "const" "index var" "insert auto destroy"
      (6450720 'move' slot[6450718] _yieldedIndex[6450712])
      const-val yret[6450723]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6450725 'move' yret[6450723] _yieldedIndex[6450712])
      const-val _yieldedIndex[6450763]:int(64)[10] "temp"
      (6450869 'move' _yieldedIndex[6450763] _yieldedIndex[6450712])
      const-val slot[6450765]:int(64)[10] "const" "index var" "insert auto destroy"
      (6450767 'move' slot[6450765] _yieldedIndex[6450763])
      const-val yret[6450770]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6450772 'move' yret[6450770] _yieldedIndex[6450763])
      const-val _yieldedIndex[6450775]:int(64)[10] "temp"
      (6450777 'move' _yieldedIndex[6450775] _yieldedIndex[6450763])
      const-val slot[6450781]:int(64)[10] "const" "index var" "insert auto destroy"
      (6450783 'move' slot[6450781] _yieldedIndex[6450775])
      const-val call_tmp[6450786]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "expr temp" "maybe param" "temp"
      const-ref tmp[7201413]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "temp"
      (7201418 'move' tmp[7201413](7201415 '.v' this[4238614] F2_table_ref[7201224]))
      (6450788 'move' call_tmp[6450786] tmp[7201413])
      const-val call_tmp[6450791]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6450793 'move' call_tmp[6450791](6450796 call isSlotFull[4238491] call_tmp[6450786] _yieldedIndex[6450775]))
      const-val call_tmp[6450799]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6450801 'move' call_tmp[6450799] call_tmp[6450791])
      if call_tmp[6450791]
      {
        val call_tmp[6450808]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "expr temp" "maybe param" "temp"
        const-ref tmp[7201420]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "temp"
        (7201425 'move' tmp[7201420](7201422 '.v' this[4238614] F2_table_ref[7201224]))
        (6450810 'move' call_tmp[6450808] tmp[7201420])
        ref call_tmp[6450813]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
        const-ref _this_tmp_[6450815]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "temp"
        (6450817 'move' _this_tmp_[6450815](6450820 call table[3828904] call_tmp[6450808]))
        val coerce_tmp[6450822]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6450824 'move' coerce_tmp[6450822](6450826 'deref' _this_tmp_[6450815]))
        (6450828 'move' call_tmp[6450813](6450831 call this[3832068] coerce_tmp[6450822] slot[6450781]))
        const-ref call_tmp[6450834]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
        (6450836 'move' call_tmp[6450834](6450839 call key[3862156] call_tmp[6450813]))
        const-ref tmp[7201427]:_ref(string)[1466327] "temp"
        (6450841 'move' tmp[7201427] call_tmp[6450834])
        (7201429 '.=' this[4238614] value[7201236] tmp[7201427])
        (7201550 '.=' this[4238614] more[4238589] 2)
        gotoIterEnd _end[7201548] _end[7201548]
        label _jump_break_2[7201558]
        val tmp[7201433]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
        (7201438 'move' tmp[7201433](7201435 '.v' this[4238614] F6__iterator[7201232]))
        (6450860 call _freeIterator[1519714] tmp[7201433])
        val tmp[7201440]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
        (7201445 'move' tmp[7201440](7201442 '.v' this[4238614] F5__iterator[7201230]))
        (6450863 call _freeIterator[1519981] tmp[7201440])
        val tmp[7201447]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
        (7201452 'move' tmp[7201447](7201449 '.v' this[4238614] F4__iterator[7201228]))
        (6450866 call _freeIterator[1520248] tmp[7201447])
        val tmp[7201454]:_ic__allSlots[1946131] "temp"
        (7201459 'move' tmp[7201454](7201456 '.v' this[4238614] F3__iterator[7201226]))
        (6450849 call _freeIterator[1947321] tmp[7201454])
        val tmp[7201461]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] "temp"
        (7201466 'move' tmp[7201461](7201463 '.v' this[4238614] F1__iterator[7201222]))
        (6450852 call _freeIterator[4238387] tmp[7201461])
        gotoReturn _endkeys[5525141] _endkeys[5525141]
        label _jump_2[7201556]
      }
      {
        const-val low[6450646]:int(64)[10] "temp"
        const-ref tmp[7201468]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7201473 'move' tmp[7201468](7201470 '.' this[4238614] F6__iterator[7201232]))
        (6450648 'move' low[6450646](6450650 '.v' tmp[7201468] F0_low[6835591]))
        val tmp[7201475]:int(64)[10] "temp"
        (6450653 '=' tmp[7201475] low[6450646])
        (7201477 '.=' this[4238614] F7_i[7201234] tmp[7201475])
      }
      {
        const-val high[6450657]:int(64)[10] "temp"
        const-ref tmp[7201481]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7201486 'move' tmp[7201481](7201483 '.' this[4238614] F6__iterator[7201232]))
        (6450659 'move' high[6450657](6450661 '.v' tmp[7201481] F1_high[6835595]))
        val tmp[7201488]:int(64)[10] "temp"
        (7201493 'move' tmp[7201488](7201490 '.v' this[4238614] F7_i[7201234]))
        (6450664 '<=' tmp[7201488] high[6450657])
      }
      {
        val call_tmp[6450668]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[6450670]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[7201495]:int(64)[10] "temp"
        (7201500 'move' tmp[7201495](7201497 '.v' this[4238614] F7_i[7201234]))
        (6450672 '+=' tmp[7201495] 1)
        (7201502 '.=' this[4238614] F7_i[7201234] tmp[7201495])
      }
    }
    label _endchpl_direct_param_stride_range_iter[6450744]
    val tmp[7201506]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (7201511 'move' tmp[7201506](7201508 '.v' this[4238614] F6__iterator[7201232]))
    (6450747 call _freeIterator[1519714] tmp[7201506])
    label _endchpl_direct_counted_range_iter_helper[6450749]
    val tmp[7201513]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (7201518 'move' tmp[7201513](7201515 '.v' this[4238614] F5__iterator[7201230]))
    (6450752 call _freeIterator[1519981] tmp[7201513])
    label _endchpl_direct_counted_range_iter[6450754]
    val tmp[7201520]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (7201525 'move' tmp[7201520](7201522 '.v' this[4238614] F4__iterator[7201228]))
    (6450757 call _freeIterator[1520248] tmp[7201520])
    label _end_allSlots[6450759]
    val tmp[7201527]:_ic__allSlots[1946131] "temp"
    (7201532 'move' tmp[7201527](7201529 '.v' this[4238614] F3__iterator[7201226]))
    (6106309 call _freeIterator[1947321] tmp[7201527])
    label _endallSlots[6106311]
    val tmp[7201534]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] "temp"
    (7201539 'move' tmp[7201534](7201536 '.v' this[4238614] F1__iterator[7201222]))
    (5644669 call _freeIterator[4238387] tmp[7201534])
    label _endkeys[5525141]
    (7201560 '.=' this[4238614] more[4238589] 0)
    label _end[7201548]
    (7201595 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].zip1[4238621](const in arg this[4238623]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7201541 call advance[4238612] this[4238623])
    (4238628 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].zip2[4238630](const in arg this[4238632]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238637 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].zip3[4238639](const in arg this[4238641]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7201544 call advance[4238612] this[4238641])
    (4238646 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].zip4[4238648](const in arg this[4238650]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238655 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].hasMore[4238657](const in arg this[4238659]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    val tmp[7201598]:int(64)[10] "temp"
    (7201603 'move' tmp[7201598](7201600 '.v' this[4238659] more[4238589]))
    (7201605 return tmp[7201598])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].getValue[4238666](const in arg this[4238668]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : _ref(string)[1466327] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[7201608]:_ref(string)[1466327] "temp"
    (7201613 'move' tmp[7201608](7201610 '.v' this[4238668] value[7201236]))
    (7201615 return tmp[7201608])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].keys[4237748](const  ref arg this[4237752]:_ref(map(string,Module(real(64)),false))[3405193], ref arg _retArg[5597197]:_ref(_ir_keys__ref_map_string_Module__real64_F)[4238703]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[7201623]:_ir_keys__ref_map_string_Module__real64_F[4238592] "temp"
    (7201625 '.=' _ir[7201623] F0_this[7201220] this[4237752])
    (7201629 '=' _retArg[5597197] _ir[7201623])
    (7201632 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].init[4238675](const in arg this[4238677]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7201618 return _void[46])
  }
  function _ic_keys__ref_map_string_Module__real64_F[4238586].incr[4238684](const in arg this[4238686]:_ic_keys__ref_map_string_Module__real64_F[4238586]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7201621 return _void[46])
  }
  type _ic_keys__ref_map_string_Module__real64_F[4238586] val super[4238587]:RootClass[236] "super class" val more[4238589]:int(64)[10] const-ref F0_this[7201218]:_ref(map(string,Module(real(64)),false))[3405193] val F1__iterator[7201222]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] const-ref F2_table_ref[7201224]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] val F3__iterator[7201226]:_ic__allSlots[1946131] val F4__iterator[7201228]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7201230]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7201232]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7201234]:int(64)[10] const-ref value[7201236]:_ref(string)[1466327]
  type _ir_keys__ref_map_string_Module__real64_F[4238592] const-ref F0_this[7201220]:_ref(map(string,Module(real(64)),false))[3405193]
  function _getIterator[4238601](const  ref arg ir[4238603]:_ir_keys__ref_map_string_Module__real64_F[4238592]) : _ic_keys__ref_map_string_Module__real64_F[4238586] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4238710]:_ic_keys__ref_map_string_Module__real64_F[4238586] "dead after last mention" "RVV" "temp"
    val _ic_[4238593]:_ic_keys__ref_map_string_Module__real64_F[4238586] "dead after last mention" "temp"
    const-val call_tmp[4238717]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4238720 'move' call_tmp[4238717](4238732 'sizeof_bundle' _ic_keys__ref_map_string_Module__real64_F[4238586]))
    val cast_tmp[4238735]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4238737 'move' cast_tmp[4238735](4238598 call chpl_here_alloc[308303] call_tmp[4238717] 425))
    (4238606 'move' _ic_[4238593](4238739 'cast' _ic_keys__ref_map_string_Module__real64_F[4238586] cast_tmp[4238735]))
    (4238608 'setcid' _ic_[4238593])
    (4238715 'move' ret[4238710] _ic_[4238593])
    (7201635 '.=' ret[4238710] more[4238589] 1)
    const-ref tmp[7201639]:_ref(map(string,Module(real(64)),false))[3405193] "temp"
    (7201644 'move' tmp[7201639](7201640 '.v' ir[4238603] F0_this[7201220]))
    (7201646 '.=' ret[4238710] F0_this[7201218] tmp[7201639])
    (4238712 return ret[4238710])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].advance[4310256](const in arg this[4310258]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[7206110]:int(64)[10]
    (7206138 'move' more[7206110](7206135 '.v' this[4310258] more[4310233]))
    const-val tmp[7206113]:bool[19] "temp"
    (7206120 'move' tmp[7206113](7206117 '==' more[7206110] 2))
    if tmp[7206113]
    {
      gotoIterResume _jump_2[7206102] _jump_2[7206102]
    }
    const-val tmp[7206125]:bool[19] "temp"
    (7206130 'move' tmp[7206125](7206127 '==' more[7206110] -2))
    if tmp[7206125]
    {
      gotoIterResume _jump_break_2[7206104] _jump_break_2[7206104]
    }
    val ret[4309317]:_ir_keys__ref_map_string__shared_Module__real64_F[4310236] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[4309326]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[4309330]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead at end of block" "maybe param" "temp"
    const-ref tmp[7205784]:_ref(map(string,shared Module(real(64)),false))[3855346] "temp"
    (7205789 'move' tmp[7205784](7205786 '.v' this[4310258] F0_this[7205764]))
    (4309332 'move' call_tmp[4309330](4309335 call table[4309446] tmp[7205784]))
    const-val call_tmp[4309338]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[5597423]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "temp"
    (4309346 call allSlots[4309474] call_tmp[4309330] ret_tmp[5597423])
    (5597426 'move' call_tmp[4309338] ret_tmp[5597423])
    val tmp[7205791]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] "temp"
    (4309347 'move' tmp[7205791](4309350 call _getIterator[4309580] call_tmp[4309338]))
    (7205793 '.=' this[4310258] F1__iterator[7205768] tmp[7205791])
    const-ref tmp[7205797]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "temp"
    const-ref tmp[7205803]:_ref(map(string,shared Module(real(64)),false))[3855346] "temp"
    (7205808 'move' tmp[7205803](7205805 '.v' this[4310258] F0_this[7205764]))
    (4310071 'move' tmp[7205797](4310067 call table[4309446] tmp[7205803]))
    (7205799 '.=' this[4310258] F2_table_ref[7205770] tmp[7205797])
    val ret[6110051]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6110053]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-ref call_tmp[6110057]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    const-ref this[6110199]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "temp"
    const-ref tmp[7205810]:_ref(_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64)[4309708] "temp"
    (7205815 'move' tmp[7205810](7205812 '.' this[4310258] F1__iterator[7205768]))
    (6110204 'move' this[6110199](6110201 '.v' tmp[7205810] F0_this[7206196]))
    (6110059 'move' call_tmp[6110057](6110062 call tableSize[4305492] this[6110199]))
    const-val call_tmp[6110064]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[6110066]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6110068 'move' coerce_tmp[6110066](6110070 'deref' call_tmp[6110057]))
    const-val ret_tmp[6110072]:_ir__allSlots[1946137] "temp"
    (6110075 call _allSlots[265237] coerce_tmp[6110066] ret_tmp[6110072])
    (6110078 'move' call_tmp[6110064] ret_tmp[6110072])
    val tmp[7205817]:_ic__allSlots[1946131] "temp"
    (6110081 'move' tmp[7205817](6110084 call _getIterator[1946146] call_tmp[6110064]))
    (7205819 '.=' this[4310258] F3__iterator[7205772] tmp[7205817])
    val ret[6454458]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[6454460]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6454464]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6454466]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    const-val size[6455060]:int(64)[10] "temp"
    const-ref tmp[7205823]:_ref(_ic__allSlots)[1946274] "temp"
    (7205828 'move' tmp[7205823](7205825 '.' this[4310258] F3__iterator[7205772]))
    (6455065 'move' size[6455060](6455062 '.v' tmp[7205823] F0_size[6829964]))
    (6454469 call chpl_direct_counted_range_iter[1468903] 0 size[6455060] ret_tmp[6454466])
    (6454473 'move' call_tmp[6454464] ret_tmp[6454466])
    val tmp[7205830]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (6454476 'move' tmp[7205830](6454479 call _getIterator[1520079] call_tmp[6454464]))
    (7205832 '.=' this[4310258] F4__iterator[7205774] tmp[7205830])
    val ret[6454482]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
    val tmp[6454484]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6454486]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6454488]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6454490]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6454492]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6454494]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6454496]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val _indexOfInterest[6454498]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6454502]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6454504]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    const-val low[6454506]:int(64)[10] "temp"
    const-ref tmp[7205836]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7205841 'move' tmp[7205836](7205838 '.' this[4310258] F4__iterator[7205774]))
    (6454508 'move' low[6454506](6454510 '.v' tmp[7205836] F0_low[6832410]))
    const-val count[6454513]:int(64)[10] "temp"
    const-ref tmp[7205843]:_ref(_ic_chpl_direct_counted_range_iter)[1520207] "temp"
    (7205848 'move' tmp[7205843](7205845 '.' this[4310258] F4__iterator[7205774]))
    (6454515 'move' count[6454513](6454517 '.v' tmp[7205843] F1_count[6832414]))
    (6454521 call chpl_direct_counted_range_iter_helper[1469227] low[6454506] count[6454513] ret_tmp[6454504])
    (6454525 'move' call_tmp[6454502] ret_tmp[6454504])
    val tmp[7205850]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (6454528 'move' tmp[7205850](6454531 call _getIterator[1519812] call_tmp[6454502]))
    (7205852 '.=' this[4310258] F5__iterator[7205776] tmp[7205850])
    val ret[6454534]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
    val tmp[6454536]:bool[19] "dead after last mention" "maybe param" "temp"
    val tmp[6454538]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6454540]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6454542]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[6454544]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6454546]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[6454548]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[6454550]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[6454552]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6454554]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6454556]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[6454558]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[6454560]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[6454562]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[6454564]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6454566]:int(64)[10] "temp"
    const-ref tmp[7205856]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7205861 'move' tmp[7205856](7205858 '.' this[4310258] F5__iterator[7205776]))
    (6454568 'move' count[6454566](6454570 '.v' tmp[7205856] F1_count[6834178]))
    (6454573 'move' call_tmp[6454564](6454576 call <[1469576] count[6454566] 0))
    (6454579 'move' tmp[6454562] call_tmp[6454564])
    (6454582 'move' tmp[6454556] call_tmp[6454564])
    const-val call_tmp[6454585]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (6454587 'move' call_tmp[6454585] call_tmp[6454564])
    if call_tmp[6454564]
    {
      (6454593 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6454596]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6454598]:int(64)[10] "temp"
    const-ref tmp[7205863]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7205868 'move' tmp[7205863](7205865 '.' this[4310258] F5__iterator[7205776]))
    (6454600 'move' low[6454598](6454602 '.v' tmp[7205863] F0_low[6834174]))
    (6454605 'move' start[6454596] low[6454598])
    const-val end[6454608]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[6454610]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[6454612]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[6454614]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6454616]:int(64)[10] "temp"
    const-ref tmp[7205870]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
    (7205875 'move' tmp[7205870](7205872 '.' this[4310258] F5__iterator[7205776]))
    (6454618 'move' count[6454616](6454620 '.v' tmp[7205870] F1_count[6834178]))
    (6454623 'move' call_tmp[6454614](6454626 call ==[52746] count[6454616] 0))
    (6454629 'move' tmp[6454612] call_tmp[6454614])
    if call_tmp[6454614]
    {
      const-val tmp[6454634]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6454636]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6454638]:int(64)[10] "temp"
      const-ref tmp[7205877]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7205882 'move' tmp[7205877](7205879 '.' this[4310258] F5__iterator[7205776]))
      (6454640 'move' low[6454638](6454642 '.v' tmp[7205877] F0_low[6834174]))
      (6454645 'move' call_tmp[6454636](6454647 'cast' uint(64)[86] low[6454638]))
      const-val call_tmp[6454650]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[6454652]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6454654 'move' coerce_tmp[6454652](6454656 'cast' uint(64)[86] 1))
      (6454659 'move' call_tmp[6454650](6454662 call -[1487313] call_tmp[6454636]))
      val call_tmp[6454664]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6454666 'move' tmp[6454634](6454669 call :[1482043] call_tmp[6454650]))
      (6454671 'move' tmp[6454610] tmp[6454634])
    }
    {
      const-val tmp[6454675]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[6454677]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[6454679]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6454681]:int(64)[10] "temp"
      const-ref tmp[7205884]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7205889 'move' tmp[7205884](7205886 '.' this[4310258] F5__iterator[7205776]))
      (6454683 'move' count[6454681](6454685 '.v' tmp[7205884] F1_count[6834178]))
      (6454688 'move' call_tmp[6454679] count[6454681])
      const-val call_tmp[6454691]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6454693]:int(64)[10] "temp"
      const-ref tmp[7205891]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7205896 'move' tmp[7205891](7205893 '.' this[4310258] F5__iterator[7205776]))
      (6454695 'move' count[6454693](6454697 '.v' tmp[7205891] F1_count[6834178]))
      (6454700 'move' call_tmp[6454691](6454703 call -[1487343] count[6454693]))
      const-val call_tmp[6454705]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6454707]:int(64)[10] "temp"
      const-ref tmp[7205898]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1519940] "temp"
      (7205903 'move' tmp[7205898](7205900 '.' this[4310258] F5__iterator[7205776]))
      (6454709 'move' low[6454707](6454711 '.v' tmp[7205898] F0_low[6834174]))
      (6454714 'move' call_tmp[6454705](6454717 call +[56587] low[6454707] call_tmp[6454691]))
      val call_tmp[6454720]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (6454722 'move' tmp[6454675] call_tmp[6454705])
      (6454725 'move' tmp[6454610] call_tmp[6454705])
    }
    (6454729 'move' end[6454608] tmp[6454610])
    val _indexOfInterest[6454732]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[6454736]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[6454738]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (6454741 call chpl_direct_param_stride_range_iter[1517410] start[6454596] tmp[6454610] ret_tmp[6454738])
    (6454745 'move' call_tmp[6454736] ret_tmp[6454738])
    val tmp[7205905]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (6454748 'move' tmp[7205905](6454751 call _getIterator[1519541] call_tmp[6454736]))
    (7205907 '.=' this[4310258] F6__iterator[7205778] tmp[7205905])
    val ret[6454754]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
    val call_tmp[6454756]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6454758]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (6454761 call chpl_range_check_stride[1517730])
    val call_tmp[6454764]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[7205911]:int(64)[10] "temp"
    (6454766 'move' tmp[7205911] 0)
    (7205913 '.=' this[4310258] F7_i[7205780] tmp[7205911])
    val call_tmp[6454769]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6454771]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6454773]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[6454775]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[6454777]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6454779]:int(64)[10] "temp"
    const-ref tmp[7205917]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7205922 'move' tmp[7205917](7205919 '.' this[4310258] F6__iterator[7205778]))
    (6454781 'move' low[6454779](6454783 '.v' tmp[7205917] F0_low[6835591]))
    (6454786 'move' default_arg_first[6454777](6454789 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6454779]))
    const-val default_arg_last[6454791]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6454793]:int(64)[10] "temp"
    const-ref tmp[7205924]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7205929 'move' tmp[7205924](7205926 '.' this[4310258] F6__iterator[7205778]))
    (6454795 'move' high[6454793](6454797 '.v' tmp[7205924] F1_high[6835595]))
    (6454800 'move' default_arg_last[6454791](6454803 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6454793]))
    val default_arg_shouldHalt[6454805]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[6454807]:bool[19] "dead after last mention" "temp"
    const-val low[6454809]:int(64)[10] "temp"
    const-ref tmp[7205931]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7205936 'move' tmp[7205931](7205933 '.' this[4310258] F6__iterator[7205778]))
    (6454811 'move' low[6454809](6454813 '.v' tmp[7205931] F0_low[6835591]))
    const-val high[6454816]:int(64)[10] "temp"
    const-ref tmp[7205938]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
    (7205943 'move' tmp[7205938](7205940 '.' this[4310258] F6__iterator[7205778]))
    (6454818 'move' high[6454816](6454820 '.v' tmp[7205938] F1_high[6835595]))
    (6454823 'move' _return_tmp_[6454807](6454826 call chpl_checkIfRangeIterWillOverflow[1518856] low[6454809] high[6454816] 1 default_arg_first[6454777] default_arg_last[6454791] 1))
    CForLoop[6454833]
    {
      const-val yret[6454864]:int(64)[10] "dead after last mention" "YVV" "temp"
      const-val tmp[7205945]:int(64)[10] "temp"
      (7205950 'move' tmp[7205945](7205947 '.v' this[4310258] F7_i[7205780]))
      (6454866 'move' yret[6454864] tmp[7205945])
      const-val _yieldedIndex[6454869]:int(64)[10] "temp"
      const-val tmp[7205952]:int(64)[10] "temp"
      (7205957 'move' tmp[7205952](7205954 '.v' this[4310258] F7_i[7205780]))
      (6454871 'move' _yieldedIndex[6454869] tmp[7205952])
      const-val i[6454875]:int(64)[10] "const" "index var" "insert auto destroy"
      (6454877 'move' i[6454875] _yieldedIndex[6454869])
      const-val yret[6454880]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6454882 'move' yret[6454880] _yieldedIndex[6454869])
      const-val _yieldedIndex[6454885]:int(64)[10] "temp"
      (6454887 'move' _yieldedIndex[6454885] _yieldedIndex[6454869])
      const-val i[6454891]:int(64)[10] "const" "index var" "insert auto destroy"
      (6454893 'move' i[6454891] _yieldedIndex[6454885])
      const-val yret[6454896]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6454898 'move' yret[6454896] _yieldedIndex[6454885])
      const-val _yieldedIndex[6454901]:int(64)[10] "temp"
      (6454903 'move' _yieldedIndex[6454901] _yieldedIndex[6454885])
      const-val slot[6454907]:int(64)[10] "const" "index var" "insert auto destroy"
      (6454909 'move' slot[6454907] _yieldedIndex[6454901])
      const-val yret[6454912]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6454914 'move' yret[6454912] _yieldedIndex[6454901])
      const-val _yieldedIndex[6454952]:int(64)[10] "temp"
      (6455058 'move' _yieldedIndex[6454952] _yieldedIndex[6454901])
      const-val slot[6454954]:int(64)[10] "const" "index var" "insert auto destroy"
      (6454956 'move' slot[6454954] _yieldedIndex[6454952])
      const-val yret[6454959]:int(64)[10] "dead after last mention" "YVV" "temp"
      (6454961 'move' yret[6454959] _yieldedIndex[6454952])
      const-val _yieldedIndex[6454964]:int(64)[10] "temp"
      (6454966 'move' _yieldedIndex[6454964] _yieldedIndex[6454952])
      const-val slot[6454970]:int(64)[10] "const" "index var" "insert auto destroy"
      (6454972 'move' slot[6454970] _yieldedIndex[6454964])
      const-val call_tmp[6454975]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "expr temp" "maybe param" "temp"
      const-ref tmp[7205959]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "temp"
      (7205964 'move' tmp[7205959](7205961 '.v' this[4310258] F2_table_ref[7205770]))
      (6454977 'move' call_tmp[6454975] tmp[7205959])
      const-val call_tmp[6454980]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6454982 'move' call_tmp[6454980](6454985 call isSlotFull[4310081] call_tmp[6454975] _yieldedIndex[6454964]))
      const-val call_tmp[6454988]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6454990 'move' call_tmp[6454988] call_tmp[6454980])
      if call_tmp[6454980]
      {
        val call_tmp[6454997]:chpl__hashtable(string,shared Module(real(64)))[3855392] "dead after last mention" "expr temp" "maybe param" "temp"
        const-ref tmp[7205966]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "temp"
        (7205971 'move' tmp[7205966](7205968 '.v' this[4310258] F2_table_ref[7205770]))
        (6454999 'move' call_tmp[6454997] tmp[7205966])
        ref call_tmp[6455002]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
        const-ref _this_tmp_[6455004]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "temp"
        (6455006 'move' _this_tmp_[6455004](6455009 call table[4305464] call_tmp[6454997]))
        val coerce_tmp[6455011]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6455013 'move' coerce_tmp[6455011](6455015 'deref' _this_tmp_[6455004]))
        (6455017 'move' call_tmp[6455002](6455020 call this[4308628] coerce_tmp[6455011] slot[6454970]))
        const-ref call_tmp[6455023]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
        (6455025 'move' call_tmp[6455023](6455028 call key[4310201] call_tmp[6455002]))
        const-ref tmp[7205973]:_ref(string)[1466327] "temp"
        (6455030 'move' tmp[7205973] call_tmp[6455023])
        (7205975 '.=' this[4310258] value[7205782] tmp[7205973])
        (7206096 '.=' this[4310258] more[4310233] 2)
        gotoIterEnd _end[7206094] _end[7206094]
        label _jump_break_2[7206104]
        val tmp[7205979]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
        (7205984 'move' tmp[7205979](7205981 '.v' this[4310258] F6__iterator[7205778]))
        (6455049 call _freeIterator[1519714] tmp[7205979])
        val tmp[7205986]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
        (7205991 'move' tmp[7205986](7205988 '.v' this[4310258] F5__iterator[7205776]))
        (6455052 call _freeIterator[1519981] tmp[7205986])
        val tmp[7205993]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
        (7205998 'move' tmp[7205993](7205995 '.v' this[4310258] F4__iterator[7205774]))
        (6455055 call _freeIterator[1520248] tmp[7205993])
        val tmp[7206000]:_ic__allSlots[1946131] "temp"
        (7206005 'move' tmp[7206000](7206002 '.v' this[4310258] F3__iterator[7205772]))
        (6455038 call _freeIterator[1947321] tmp[7206000])
        val tmp[7206007]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] "temp"
        (7206012 'move' tmp[7206007](7206009 '.v' this[4310258] F1__iterator[7205768]))
        (6455041 call _freeIterator[4309977] tmp[7206007])
        gotoReturn _endkeys[5525162] _endkeys[5525162]
        label _jump_2[7206102]
      }
      {
        const-val low[6454835]:int(64)[10] "temp"
        const-ref tmp[7206014]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7206019 'move' tmp[7206014](7206016 '.' this[4310258] F6__iterator[7205778]))
        (6454837 'move' low[6454835](6454839 '.v' tmp[7206014] F0_low[6835591]))
        val tmp[7206021]:int(64)[10] "temp"
        (6454842 '=' tmp[7206021] low[6454835])
        (7206023 '.=' this[4310258] F7_i[7205780] tmp[7206021])
      }
      {
        const-val high[6454846]:int(64)[10] "temp"
        const-ref tmp[7206027]:_ref(_ic_chpl_direct_param_stride_range_iter)[1519669] "temp"
        (7206032 'move' tmp[7206027](7206029 '.' this[4310258] F6__iterator[7205778]))
        (6454848 'move' high[6454846](6454850 '.v' tmp[7206027] F1_high[6835595]))
        val tmp[7206034]:int(64)[10] "temp"
        (7206039 'move' tmp[7206034](7206036 '.v' this[4310258] F7_i[7205780]))
        (6454853 '<=' tmp[7206034] high[6454846])
      }
      {
        val call_tmp[6454857]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[6454859]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[7206041]:int(64)[10] "temp"
        (7206046 'move' tmp[7206041](7206043 '.v' this[4310258] F7_i[7205780]))
        (6454861 '+=' tmp[7206041] 1)
        (7206048 '.=' this[4310258] F7_i[7205780] tmp[7206041])
      }
    }
    label _endchpl_direct_param_stride_range_iter[6454933]
    val tmp[7206052]:_ic_chpl_direct_param_stride_range_iter[1519526] "temp"
    (7206057 'move' tmp[7206052](7206054 '.v' this[4310258] F6__iterator[7205778]))
    (6454936 call _freeIterator[1519714] tmp[7206052])
    label _endchpl_direct_counted_range_iter_helper[6454938]
    val tmp[7206059]:_ic_chpl_direct_counted_range_iter_helper[1519797] "temp"
    (7206064 'move' tmp[7206059](7206061 '.v' this[4310258] F5__iterator[7205776]))
    (6454941 call _freeIterator[1519981] tmp[7206059])
    label _endchpl_direct_counted_range_iter[6454943]
    val tmp[7206066]:_ic_chpl_direct_counted_range_iter[1520064] "temp"
    (7206071 'move' tmp[7206066](7206068 '.v' this[4310258] F4__iterator[7205774]))
    (6454946 call _freeIterator[1520248] tmp[7206066])
    label _end_allSlots[6454948]
    val tmp[7206073]:_ic__allSlots[1946131] "temp"
    (7206078 'move' tmp[7206073](7206075 '.v' this[4310258] F3__iterator[7205772]))
    (6110110 call _freeIterator[1947321] tmp[7206073])
    label _endallSlots[6110112]
    val tmp[7206080]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] "temp"
    (7206085 'move' tmp[7206080](7206082 '.v' this[4310258] F1__iterator[7205768]))
    (5645310 call _freeIterator[4309977] tmp[7206080])
    label _endkeys[5525162]
    (7206106 '.=' this[4310258] more[4310233] 0)
    label _end[7206094]
    (7206141 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].zip1[4310265](const in arg this[4310267]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7206087 call advance[4310256] this[4310267])
    (4310272 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].zip2[4310274](const in arg this[4310276]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4310281 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].zip3[4310283](const in arg this[4310285]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7206090 call advance[4310256] this[4310285])
    (4310290 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].zip4[4310292](const in arg this[4310294]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4310299 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].hasMore[4310301](const in arg this[4310303]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    val tmp[7206144]:int(64)[10] "temp"
    (7206149 'move' tmp[7206144](7206146 '.v' this[4310303] more[4310233]))
    (7206151 return tmp[7206144])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].getValue[4310310](const in arg this[4310312]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : _ref(string)[1466327] "auto ii" "inline" "method" "resolved"
  {
    ref tmp[7206154]:_ref(string)[1466327] "temp"
    (7206159 'move' tmp[7206154](7206156 '.v' this[4310312] value[7205782]))
    (7206161 return tmp[7206154])
  }
  function _ref(map(string,shared Module(real(64)),false))[3855346].keys[4309311](const  ref arg this[4309315]:_ref(map(string,shared Module(real(64)),false))[3855346], ref arg _retArg[5597419]:_ref(_ir_keys__ref_map_string__shared_Module__real64_F)[4310347]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[7206169]:_ir_keys__ref_map_string__shared_Module__real64_F[4310236] "temp"
    (7206171 '.=' _ir[7206169] F0_this[7205766] this[4309315])
    (7206175 '=' _retArg[5597419] _ir[7206169])
    (7206178 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].init[4310319](const in arg this[4310321]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7206164 return _void[46])
  }
  function _ic_keys__ref_map_string__shared_Module__real64_F[4310230].incr[4310328](const in arg this[4310330]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (7206167 return _void[46])
  }
  type _ic_keys__ref_map_string__shared_Module__real64_F[4310230] val super[4310231]:RootClass[236] "super class" val more[4310233]:int(64)[10] const-ref F0_this[7205764]:_ref(map(string,shared Module(real(64)),false))[3855346] val F1__iterator[7205768]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] const-ref F2_table_ref[7205770]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] val F3__iterator[7205772]:_ic__allSlots[1946131] val F4__iterator[7205774]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7205776]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7205778]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7205780]:int(64)[10] const-ref value[7205782]:_ref(string)[1466327]
  type _ir_keys__ref_map_string__shared_Module__real64_F[4310236] const-ref F0_this[7205766]:_ref(map(string,shared Module(real(64)),false))[3855346]
  function _getIterator[4310245](const  ref arg ir[4310247]:_ir_keys__ref_map_string__shared_Module__real64_F[4310236]) : _ic_keys__ref_map_string__shared_Module__real64_F[4310230] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4310354]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230] "dead after last mention" "RVV" "temp"
    val _ic_[4310237]:_ic_keys__ref_map_string__shared_Module__real64_F[4310230] "dead after last mention" "temp"
    const-val call_tmp[4310361]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4310364 'move' call_tmp[4310361](4310376 'sizeof_bundle' _ic_keys__ref_map_string__shared_Module__real64_F[4310230]))
    val cast_tmp[4310379]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4310381 'move' cast_tmp[4310379](4310242 call chpl_here_alloc[308303] call_tmp[4310361] 430))
    (4310250 'move' _ic_[4310237](4310383 'cast' _ic_keys__ref_map_string__shared_Module__real64_F[4310230] cast_tmp[4310379]))
    (4310252 'setcid' _ic_[4310237])
    (4310359 'move' ret[4310354] _ic_[4310237])
    (7206181 '.=' ret[4310354] more[4310233] 1)
    const-ref tmp[7206185]:_ref(map(string,shared Module(real(64)),false))[3855346] "temp"
    (7206190 'move' tmp[7206185](7206186 '.v' ir[4310247] F0_this[7205766]))
    (7206192 '.=' ret[4310354] F0_this[7205764] tmp[7206185])
    (4310356 return ret[4310354])
  }
  function _ref(map(string,string,false))[3283395]._readHelper[3343832](ref arg this[3343836]:_ref(map(string,string,false))[3283395], const  ref arg r[3343838]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3343840]:_ref(jsonDeserializer)[1922054], ref arg error_out[5509584]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[3343850]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3343852]:jsonDeserializer[356412] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3343864]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3343877]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3343879]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3343881]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3344138]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3344155 call clear[3344292] this[3343836])
    (3344161 call _enter[3344461] this[3343836])
    const-val call_tmp[3344170]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "maybe param" "temp"
    val error[5509589]:Error[85511] "error variable" "temp"
    (5509591 'move' error[5509589] nil[32])
    const-val ret_tmp[5589304]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "temp"
    (3344178 call startMap[3348715] deserializer[3343840] r[3343838] error[5509589] ret_tmp[5589304])
    (5589307 'move' call_tmp[3344170] ret_tmp[5589304])
    val errorExists[7302568]:bool[19] "temp"
    (7302573 'move' errorExists[7302568](7302570 '!=' error[5509589] nil[32]))
    if errorExists[7302568]
    {
      (5509595 '=' error_out[5509584] error[5509589])
      (5634901 call _leave[3344562] this[3343836])
      gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
    }
    val des[3344180]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "insert auto destroy"
    (3344182 'move' des[3344180] call_tmp[3344170])
    const-val done[3344186]:bool[19] "dead at end of block" "insert auto destroy"
    (3344188 'move' done[3344186] 0)
    {
      val tmp[3344193]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3344195]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509604]:Error[85511] "error variable" "temp"
      (5509606 'move' error[5509604] nil[32])
      (3344197 'move' call_tmp[3344195](3344203 call hasMore[3348903] des[3344180] error[5509604]))
      val errorExists[7302576]:bool[19] "temp"
      (7302581 'move' errorExists[7302576](7302578 '!=' error[5509604] nil[32]))
      if errorExists[7302576]
      {
        (5509610 '=' error_out[5509584] error[5509604])
        (5634903 call chpl__autoDestroy[4224735] des[3344180])
        (5634908 call _leave[3344562] this[3343836])
        gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
      }
      (3344204 'move' tmp[3344193] call_tmp[3344195])
      WhileDo[3344209] hazard
      {
        {
          val call_tmp[3344212]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3344220]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5509619]:Error[85511] "error variable" "temp"
          (5509621 'move' error[5509619] nil[32])
          const-val ret_tmp[5589322]:string[244] "temp"
          (3344228 call readKey[3349035] des[3344180] error[5509619] ret_tmp[5589322])
          (5589325 'move' call_tmp[3344220] ret_tmp[5589322])
          val errorExists[7302584]:bool[19] "temp"
          (7302589 'move' errorExists[7302584](7302586 '!=' error[5509619] nil[32]))
          if errorExists[7302584]
          {
            (5509625 '=' error_out[5509584] error[5509619])
            (5634910 call chpl__autoDestroy[4224735] des[3344180])
            (5634915 call _leave[3344562] this[3343836])
            gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
          }
          val call_tmp[3344230]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3344238]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5509634]:Error[85511] "error variable" "temp"
          (5509636 'move' error[5509634] nil[32])
          const-val ret_tmp[5589340]:string[244] "temp"
          (3344246 call readValue[3349327] des[3344180] error[5509634] ret_tmp[5589340])
          (5589343 'move' call_tmp[3344238] ret_tmp[5589340])
          val errorExists[7302592]:bool[19] "temp"
          (7302597 'move' errorExists[7302592](7302594 '!=' error[5509634] nil[32]))
          if errorExists[7302592]
          {
            (5509640 '=' error_out[5509584] error[5509634])
            (5634917 call chpl__autoDestroy[4224735] des[3344180])
            (5634922 call _leave[3344562] this[3343836])
            gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
          }
          const-val _return_tmp_[5468827]:bool[19] "dead after last mention" "temp"
          (5468829 'move' _return_tmp_[5468827](3344252 call add[3349410] this[3343836] call_tmp[3344220] call_tmp[3344238]))
        }
        label _continueLabel[3344257]
        const-val call_tmp[3344259]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val error[5509649]:Error[85511] "error variable" "temp"
        (5509651 'move' error[5509649] nil[32])
        (3344261 'move' call_tmp[3344259](3344267 call hasMore[3348903] des[3344180] error[5509649]))
        val errorExists[7302600]:bool[19] "temp"
        (7302605 'move' errorExists[7302600](7302602 '!=' error[5509649] nil[32]))
        if errorExists[7302600]
        {
          (5509655 '=' error_out[5509584] error[5509649])
          (5634924 call chpl__autoDestroy[4224735] des[3344180])
          (5634929 call _leave[3344562] this[3343836])
          gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
        }
        (3344268 'move' tmp[3344193] call_tmp[3344259])
        tmp[3344193]
      }
      label _breakLabel[3344273]
    }
    val error[5509664]:Error[85511] "error variable" "temp"
    (5509666 'move' error[5509664] nil[32])
    (3344279 call endMap[3350681] des[3344180] error[5509664])
    val errorExists[7302608]:bool[19] "temp"
    (7302613 'move' errorExists[7302608](7302610 '!=' error[5509664] nil[32]))
    if errorExists[7302608]
    {
      (5509670 '=' error_out[5509584] error[5509664])
      (5634931 call chpl__autoDestroy[4224735] des[3344180])
      (5634936 call _leave[3344562] this[3343836])
      gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
    }
    (5634938 call chpl__autoDestroy[4224735] des[3344180])
    (5634943 call _leave[3344562] this[3343836])
    label _end_readHelper[5509586]
    (3344282 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._readHelper[3358917](ref arg this[3358921]:_ref(map(string,owned ModuleSpecification?,false))[3283695], const  ref arg r[3358923]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3358925]:_ref(jsonDeserializer)[1922054], ref arg error_out[5510004]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[3358935]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3358937]:jsonDeserializer[356412] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3358949]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3358962]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3358964]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3358966]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3359223]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3359240 call clear[3359377] this[3358921])
    (3359246 call _enter[3359546] this[3358921])
    const-val call_tmp[3359255]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "maybe param" "temp"
    val error[5510009]:Error[85511] "error variable" "temp"
    (5510011 'move' error[5510009] nil[32])
    const-val ret_tmp[5589310]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "temp"
    (3359263 call startMap[3348715] deserializer[3358925] r[3358923] error[5510009] ret_tmp[5589310])
    (5589313 'move' call_tmp[3359255] ret_tmp[5589310])
    val errorExists[7302768]:bool[19] "temp"
    (7302773 'move' errorExists[7302768](7302770 '!=' error[5510009] nil[32]))
    if errorExists[7302768]
    {
      (5510015 '=' error_out[5510004] error[5510009])
      (5635153 call _leave[3359647] this[3358921])
      gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
    }
    val des[3359265]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "insert auto destroy"
    (3359267 'move' des[3359265] call_tmp[3359255])
    const-val done[3359271]:bool[19] "dead at end of block" "insert auto destroy"
    (3359273 'move' done[3359271] 0)
    {
      val tmp[3359278]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3359280]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5510024]:Error[85511] "error variable" "temp"
      (5510026 'move' error[5510024] nil[32])
      (3359282 'move' call_tmp[3359280](3359288 call hasMore[3348903] des[3359265] error[5510024]))
      val errorExists[7302776]:bool[19] "temp"
      (7302781 'move' errorExists[7302776](7302778 '!=' error[5510024] nil[32]))
      if errorExists[7302776]
      {
        (5510030 '=' error_out[5510004] error[5510024])
        (5635155 call chpl__autoDestroy[4224735] des[3359265])
        (5635160 call _leave[3359647] this[3358921])
        gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
      }
      (3359289 'move' tmp[3359278] call_tmp[3359280])
      WhileDo[3359294] hazard
      {
        {
          val call_tmp[3359297]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3359305]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5510039]:Error[85511] "error variable" "temp"
          (5510041 'move' error[5510039] nil[32])
          const-val ret_tmp[5589328]:string[244] "temp"
          (3359313 call readKey[3349035] des[3359265] error[5510039] ret_tmp[5589328])
          (5589331 'move' call_tmp[3359305] ret_tmp[5589328])
          val errorExists[7302784]:bool[19] "temp"
          (7302789 'move' errorExists[7302784](7302786 '!=' error[5510039] nil[32]))
          if errorExists[7302784]
          {
            (5510045 '=' error_out[5510004] error[5510039])
            (5635162 call chpl__autoDestroy[4224735] des[3359265])
            (5635167 call _leave[3359647] this[3358921])
            gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
          }
          val call_tmp[3359315]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3359323]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5510054]:Error[85511] "error variable" "temp"
          (5510056 'move' error[5510054] nil[32])
          const-val ret_tmp[5589516]:owned ModuleSpecification?[3283604] "temp"
          (3359331 call readValue[3366403] des[3359265] error[5510054] ret_tmp[5589516])
          (5589519 'move' call_tmp[3359323] ret_tmp[5589516])
          val errorExists[7302792]:bool[19] "temp"
          (7302797 'move' errorExists[7302792](7302794 '!=' error[5510054] nil[32]))
          if errorExists[7302792]
          {
            (5510060 '=' error_out[5510004] error[5510054])
            (5635169 call chpl__autoDestroy[4224735] des[3359265])
            (5635174 call _leave[3359647] this[3358921])
            gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
          }
          const-val _return_tmp_[5468855]:bool[19] "dead after last mention" "temp"
          (5468857 'move' _return_tmp_[5468855](3359337 call add[3372005] this[3358921] call_tmp[3359305] call_tmp[3359323]))
        }
        label _continueLabel[3359342]
        const-val call_tmp[3359344]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val error[5510069]:Error[85511] "error variable" "temp"
        (5510071 'move' error[5510069] nil[32])
        (3359346 'move' call_tmp[3359344](3359352 call hasMore[3348903] des[3359265] error[5510069]))
        val errorExists[7302800]:bool[19] "temp"
        (7302805 'move' errorExists[7302800](7302802 '!=' error[5510069] nil[32]))
        if errorExists[7302800]
        {
          (5510075 '=' error_out[5510004] error[5510069])
          (5635176 call chpl__autoDestroy[4224735] des[3359265])
          (5635181 call _leave[3359647] this[3358921])
          gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
        }
        (3359353 'move' tmp[3359278] call_tmp[3359344])
        tmp[3359278]
      }
      label _breakLabel[3359358]
    }
    val error[5510084]:Error[85511] "error variable" "temp"
    (5510086 'move' error[5510084] nil[32])
    (3359364 call endMap[3350681] des[3359265] error[5510084])
    val errorExists[7302808]:bool[19] "temp"
    (7302813 'move' errorExists[7302808](7302810 '!=' error[5510084] nil[32]))
    if errorExists[7302808]
    {
      (5510090 '=' error_out[5510004] error[5510084])
      (5635183 call chpl__autoDestroy[4224735] des[3359265])
      (5635188 call _leave[3359647] this[3358921])
      gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
    }
    (5635190 call chpl__autoDestroy[4224735] des[3359265])
    (5635195 call _leave[3359647] this[3358921])
    label _end_readHelper[5510006]
    (3359367 return _void[46])
  }
  function map(string,string,false)[3283386].init[3339110](ref arg this[3339114]:map(string,string,false)[3283386], const  ref arg reader[3339122]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3339124]:_ref(jsonDeserializer)[1922054], ref arg error_out[5509565]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479881]:string[244] "temp"
    val _formal_type_tmp_[5479879]:string[244] "temp"
    const-val default_arg_resizeThreshold[3343797]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3343801 'move' default_arg_resizeThreshold[3343797](3343799 call init_default_resizeThreshold[3343780]))
    val default_arg_initialCapacity[3343823]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (3339142 call init[3339157] this[3339114] default_arg_resizeThreshold[3343797] 16)
    val error[5509570]:Error[85511] "error variable" "temp"
    (5509572 'move' error[5509570] nil[32])
    (3339151 call _readHelper[3343832] this[3339114] reader[3339122] deserializer[3339124] error[5509570])
    val errorExists[7302560]:bool[19] "temp"
    (7302565 'move' errorExists[7302560](7302562 '!=' error[5509570] nil[32]))
    if errorExists[7302560]
    {
      (5509576 '=' error_out[5509565] error[5509570])
      gotoErrorHandlingReturn _endinit[5509567] _endinit[5509567]
    }
    label _endinit[5509567]
    (3339154 return _void[46])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].init[3354169](ref arg this[3354173]:map(string,owned ModuleSpecification?,false)[3283686], const  ref arg reader[3354181]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3354183]:_ref(jsonDeserializer)[1922054], ref arg error_out[5509985]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479924]:owned ModuleSpecification?[3283604] "temp"
    val _formal_type_tmp_[5479922]:string[244] "temp"
    const-val default_arg_resizeThreshold[3358882]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3358886 'move' default_arg_resizeThreshold[3358882](3358884 call init_default_resizeThreshold[3358865]))
    val default_arg_initialCapacity[3358908]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (3354201 call init[3354216] this[3354173] default_arg_resizeThreshold[3358882] 16)
    val error[5509990]:Error[85511] "error variable" "temp"
    (5509992 'move' error[5509990] nil[32])
    (3354210 call _readHelper[3358917] this[3354173] reader[3354181] deserializer[3354183] error[5509990])
    val errorExists[7302760]:bool[19] "temp"
    (7302765 'move' errorExists[7302760](7302762 '!=' error[5509990] nil[32]))
    if errorExists[7302760]
    {
      (5509996 '=' error_out[5509985] error[5509990])
      gotoErrorHandlingReturn _endinit[5509987] _endinit[5509987]
    }
    label _endinit[5509987]
    (3354213 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].add[3300824](ref arg this[3300828]:_ref(map(string,int(64),false))[3288803], const  ref arg k[3300835]:string[244], const in arg v[3300842]:int(64)[10]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3301089]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3301092 'move' _formal_tmp_k[3301089] k[3300835])
    val ret[3300853]:bool[19] "dead after last mention" "RVV" "temp"
    (3300973 call _enter[3301095] this[3300828])
    ref call_tmp[3300982]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3300984 'move' call_tmp[3300982](3300987 call table[3301244] this[3300828]))
    const-val call_tmp[3300990]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588735]:(bool,int(64))[3257010] "temp"
    (3300998 call findAvailableSlot[3301272] call_tmp[3300982] _formal_tmp_k[3301089] ret_tmp[5588735])
    (5588738 'move' call_tmp[3300990] ret_tmp[5588735])
    const-val tmp[3301000]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3301002 'move' tmp[3301000] call_tmp[3300990])
    1
    const-ref call_tmp[3301010]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3301012 'move' call_tmp[3301010](3308448 '.' tmp[3301000] x0[3257006]))
    const-val found[3301017]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3308454]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3308458 'move' coerce_tmp[3308454](3308456 'deref' call_tmp[3301010]))
    (5632556 '=' found[3301017] coerce_tmp[3308454])
    (3301019 'noop')
    const-ref call_tmp[3301022]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301024 'move' call_tmp[3301022](3308463 '.' tmp[3301000] x1[3257008]))
    const-val slot[3301029]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3308469]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3308473 'move' coerce_tmp[3308469](3308471 'deref' call_tmp[3301022]))
    (5632559 '=' slot[3301029] coerce_tmp[3308469])
    (3301031 'noop')
    const-val call_tmp[3301035]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301037 'move' call_tmp[3301035] found[3301017])
    if call_tmp[3301035]
    {
      (3301044 'move' ret[3300853] 0)
      (5632562 call chpl__autoDestroy[4207177] tmp[3301000])
      (5632567 call _leave[3301196] this[3300828])
      (5632569 call chpl__autoDestroy[3262688] _formal_tmp_k[3301089])
      gotoReturn _end_add[3301075] _end_add[3301075]
    }
    ref call_tmp[3301052]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3301054 'move' call_tmp[3301052](3301057 call table[3301244] this[3300828]))
    const-val _formal_tmp_in_key[3308602]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632553 '=' _formal_tmp_in_key[3308602] _formal_tmp_k[3301089])
    (3308607 'noop')
    (3301064 call fillSlot[3308541] call_tmp[3301052] slot[3301029] _formal_tmp_in_key[3308602] v[3300842])
    (3301070 'move' ret[3300853] 1)
    (5632572 call chpl__autoDestroy[4207177] tmp[3301000])
    (5632577 call _leave[3301196] this[3300828])
    label _end_add[3301075]
    (3301077 return ret[3300853])
  }
  function _ref(map(string,string,false))[3283395].add[3349410](ref arg this[3349414]:_ref(map(string,string,false))[3283395], const  ref arg k[3349421]:string[244], const  ref arg v[3349428]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3349562]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3349566 'move' _formal_tmp_k[3349562] k[3349421])
    const-val _formal_tmp_v[3349563]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3349570 'move' _formal_tmp_v[3349563] v[3349428])
    val ret[3349439]:bool[19] "dead after last mention" "RVV" "temp"
    (3349455 call _enter[3344461] this[3349414])
    ref call_tmp[3349464]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3349466 'move' call_tmp[3349464](3349469 call table[3344610] this[3349414]))
    const-val call_tmp[3349472]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589352]:(bool,int(64))[3257010] "temp"
    (3349480 call findAvailableSlot[3349576] call_tmp[3349464] _formal_tmp_k[3349562] ret_tmp[5589352])
    (5589355 'move' call_tmp[3349472] ret_tmp[5589352])
    const-val tmp[3349482]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3349484 'move' tmp[3349482] call_tmp[3349472])
    1
    const-ref call_tmp[3349492]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3349494 'move' call_tmp[3349492](3350170 '.' tmp[3349482] x0[3257006]))
    const-val found[3349499]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3350176]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3350180 'move' coerce_tmp[3350176](3350178 'deref' call_tmp[3349492]))
    (5635056 '=' found[3349499] coerce_tmp[3350176])
    (3349501 'noop')
    const-ref call_tmp[3349504]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3349506 'move' call_tmp[3349504](3350185 '.' tmp[3349482] x1[3257008]))
    const-val slot[3349511]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3350191]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3350195 'move' coerce_tmp[3350191](3350193 'deref' call_tmp[3349504]))
    (5635059 '=' slot[3349511] coerce_tmp[3350191])
    (3349513 'noop')
    const-val call_tmp[3349517]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349519 'move' call_tmp[3349517] found[3349499])
    if call_tmp[3349517]
    {
      (3349526 'move' ret[3349439] 0)
      (5635062 call chpl__autoDestroy[4207177] tmp[3349482])
      (5635067 call _leave[3344562] this[3349414])
      (5635069 call chpl__autoDestroy[3262688] _formal_tmp_v[3349563])
      (5635072 call chpl__autoDestroy[3262688] _formal_tmp_k[3349562])
      gotoReturn _end_add[3349557] _end_add[3349557]
    }
    ref call_tmp[3349534]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3349536 'move' call_tmp[3349534](3349539 call table[3344610] this[3349414]))
    const-val _formal_tmp_in_key[3350324]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635050 '=' _formal_tmp_in_key[3350324] _formal_tmp_k[3349562])
    (3350329 'noop')
    const-val _formal_tmp_in_val[3350333]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635053 '=' _formal_tmp_in_val[3350333] _formal_tmp_v[3349563])
    (3350338 'noop')
    (3349546 call fillSlot[3350263] call_tmp[3349534] slot[3349511] _formal_tmp_in_key[3350324] _formal_tmp_in_val[3350333])
    (3349552 'move' ret[3349439] 1)
    (5635075 call chpl__autoDestroy[4207177] tmp[3349482])
    (5635080 call _leave[3344562] this[3349414])
    label _end_add[3349557]
    (3349559 return ret[3349439])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].add[3372005](ref arg this[3372009]:_ref(map(string,owned ModuleSpecification?,false))[3283695], const  ref arg k[3372016]:string[244], const  ref arg v[3372023]:owned ModuleSpecification?[3283604]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3372157]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3372161 'move' _formal_tmp_k[3372157] k[3372016])
    const-val _formal_tmp_v[3372158]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3372165 'move' _formal_tmp_v[3372158] v[3372023])
    val ret[3372034]:bool[19] "dead after last mention" "RVV" "temp"
    (3372050 call _enter[3359546] this[3372009])
    ref call_tmp[3372059]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3372061 'move' call_tmp[3372059](3372064 call table[3359695] this[3372009]))
    const-val call_tmp[3372067]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589588]:(bool,int(64))[3257010] "temp"
    (3372075 call findAvailableSlot[3372171] call_tmp[3372059] _formal_tmp_k[3372157] ret_tmp[5589588])
    (5589591 'move' call_tmp[3372067] ret_tmp[5589588])
    const-val tmp[3372077]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3372079 'move' tmp[3372077] call_tmp[3372067])
    1
    const-ref call_tmp[3372087]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3372089 'move' call_tmp[3372087](3372765 '.' tmp[3372077] x0[3257006]))
    const-val found[3372094]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3372771]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3372775 'move' coerce_tmp[3372771](3372773 'deref' call_tmp[3372087]))
    (5635322 '=' found[3372094] coerce_tmp[3372771])
    (3372096 'noop')
    const-ref call_tmp[3372099]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3372101 'move' call_tmp[3372099](3372780 '.' tmp[3372077] x1[3257008]))
    const-val slot[3372106]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3372786]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3372790 'move' coerce_tmp[3372786](3372788 'deref' call_tmp[3372099]))
    (5635325 '=' slot[3372106] coerce_tmp[3372786])
    (3372108 'noop')
    const-val call_tmp[3372112]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372114 'move' call_tmp[3372112] found[3372094])
    if call_tmp[3372112]
    {
      (3372121 'move' ret[3372034] 0)
      (5635328 call chpl__autoDestroy[4207177] tmp[3372077])
      (5635333 call _leave[3359647] this[3372009])
      (5635335 call chpl__autoDestroy[3373663] _formal_tmp_v[3372158])
      (5635338 call chpl__autoDestroy[3262688] _formal_tmp_k[3372157])
      gotoReturn _end_add[3372152] _end_add[3372152]
    }
    ref call_tmp[3372129]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3372131 'move' call_tmp[3372129](3372134 call table[3359695] this[3372009]))
    const-val _formal_tmp_in_key[3372919]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635316 '=' _formal_tmp_in_key[3372919] _formal_tmp_k[3372157])
    (3372924 'noop')
    const-val _formal_tmp_in_val[3372928]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635319 '=' _formal_tmp_in_val[3372928] _formal_tmp_v[3372158])
    (3372933 'noop')
    (3372141 call fillSlot[3372858] call_tmp[3372129] slot[3372106] _formal_tmp_in_key[3372919] _formal_tmp_in_val[3372928])
    (3372147 'move' ret[3372034] 1)
    (5635341 call chpl__autoDestroy[4207177] tmp[3372077])
    (5635346 call _leave[3359647] this[3372009])
    label _end_add[3372152]
    (3372154 return ret[3372034])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].addOrReplace[3256564](ref arg this[3256568]:_ref(map(string,Module(real(32)),false))[1941017], const  ref arg k[3256575]:string[244], in arg v[3256582]:Module(real(32))[1935500]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3256792]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3256795 'move' _formal_tmp_k[3256792] k[3256575])
    (3256700 call _enter[3256798] this[3256568])
    ref call_tmp[3256709]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3256711 'move' call_tmp[3256709](3256714 call table[3256947] this[3256568]))
    const-val call_tmp[3256717]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5587913]:(bool,int(64))[3257010] "temp"
    (3256725 call findAvailableSlot[3256975] call_tmp[3256709] _formal_tmp_k[3256792] ret_tmp[5587913])
    (5587916 'move' call_tmp[3256717] ret_tmp[5587913])
    const-val tmp[3256727]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3256729 'move' tmp[3256727] call_tmp[3256717])
    1
    const-ref call_tmp[3256737]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3256739 'move' call_tmp[3256737](3262220 '.' tmp[3256727] x0[3257006]))
    const-val found[3256744]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3262226]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3262230 'move' coerce_tmp[3262226](3262228 'deref' call_tmp[3256737]))
    (5632016 '=' found[3256744] coerce_tmp[3262226])
    (3256746 'noop')
    const-ref call_tmp[3256749]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3256751 'move' call_tmp[3256749](3262235 '.' tmp[3256727] x1[3257008]))
    const-val slot[3256756]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3262241]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3262245 'move' coerce_tmp[3262241](3262243 'deref' call_tmp[3256749]))
    (5632019 '=' slot[3256756] coerce_tmp[3262241])
    (3256758 'noop')
    ref call_tmp[3256762]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3256764 'move' call_tmp[3256762](3256767 call table[3256947] this[3256568]))
    const-val _formal_tmp_in_key[3262372]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632013 '=' _formal_tmp_in_key[3262372] _formal_tmp_k[3256792])
    (3262377 'noop')
    (3256774 call fillSlot[3262311] call_tmp[3256762] slot[3256756] _formal_tmp_in_key[3262372] v[3256582])
    (5632022 call chpl__autoDestroy[4207177] tmp[3256727])
    (5632027 call _leave[3256899] this[3256568])
    (3256780 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].addOrReplace[3400390](ref arg this[3400394]:_ref(map(string,shared Module(real(32)),false))[3391869], const  ref arg k[3400401]:string[244], const  ref arg v[3400408]:shared Module(real(32))[1955038]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3400627]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400631 'move' _formal_tmp_k[3400627] k[3400401])
    const-val _formal_tmp_v[3400628]:shared Module(real(32))[1955038] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400635 'move' _formal_tmp_v[3400628] v[3400408])
    (3400526 call _enter[3400638] this[3400394])
    ref call_tmp[3400535]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3400537 'move' call_tmp[3400535](3400540 call table[3400787] this[3400394]))
    const-val call_tmp[3400543]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589806]:(bool,int(64))[3257010] "temp"
    (3400551 call findAvailableSlot[3400815] call_tmp[3400535] _formal_tmp_k[3400627] ret_tmp[5589806])
    (5589809 'move' call_tmp[3400543] ret_tmp[5589806])
    const-val tmp[3400553]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3400555 'move' tmp[3400553] call_tmp[3400543])
    1
    const-ref call_tmp[3400563]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3400565 'move' call_tmp[3400563](3404412 '.' tmp[3400553] x0[3257006]))
    const-val found[3400570]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3404418]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3404422 'move' coerce_tmp[3404418](3404420 'deref' call_tmp[3400563]))
    (5635694 '=' found[3400570] coerce_tmp[3404418])
    (3400572 'noop')
    const-ref call_tmp[3400575]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3400577 'move' call_tmp[3400575](3404427 '.' tmp[3400553] x1[3257008]))
    const-val slot[3400582]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3404433]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3404437 'move' coerce_tmp[3404433](3404435 'deref' call_tmp[3400575]))
    (5635697 '=' slot[3400582] coerce_tmp[3404433])
    (3400584 'noop')
    ref call_tmp[3400588]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3400590 'move' call_tmp[3400588](3400593 call table[3400787] this[3400394]))
    const-val _formal_tmp_in_key[3404564]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635688 '=' _formal_tmp_in_key[3404564] _formal_tmp_k[3400627])
    (3404569 'noop')
    const-val _formal_tmp_in_val[3404573]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635691 '=' _formal_tmp_in_val[3404573] _formal_tmp_v[3400628])
    (3404578 'noop')
    (3400600 call fillSlot[3404503] call_tmp[3400588] slot[3400582] _formal_tmp_in_key[3404564] _formal_tmp_in_val[3404573])
    (5635700 call chpl__autoDestroy[4207177] tmp[3400553])
    (5635705 call _leave[3400739] this[3400394])
    (3400606 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].addOrReplace[3859953](ref arg this[3859957]:_ref(map(string,Module(real(64)),false))[3405193], const  ref arg k[3859964]:string[244], in arg v[3859971]:Module(real(64))[3405063]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3860181]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3860184 'move' _formal_tmp_k[3860181] k[3859964])
    (3860089 call _enter[3860187] this[3859957])
    ref call_tmp[3860098]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
    (3860100 'move' call_tmp[3860098](3860103 call table[3860336] this[3859957]))
    const-val call_tmp[3860106]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5596133]:(bool,int(64))[3257010] "temp"
    (3860114 call findAvailableSlot[3860364] call_tmp[3860098] _formal_tmp_k[3860181] ret_tmp[5596133])
    (5596136 'move' call_tmp[3860106] ret_tmp[5596133])
    const-val tmp[3860116]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3860118 'move' tmp[3860116] call_tmp[3860106])
    1
    const-ref call_tmp[3860126]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3860128 'move' call_tmp[3860126](3863961 '.' tmp[3860116] x0[3257006]))
    const-val found[3860133]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3863967]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3863971 'move' coerce_tmp[3863967](3863969 'deref' call_tmp[3860126]))
    (5642101 '=' found[3860133] coerce_tmp[3863967])
    (3860135 'noop')
    const-ref call_tmp[3860138]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860140 'move' call_tmp[3860138](3863976 '.' tmp[3860116] x1[3257008]))
    const-val slot[3860145]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3863982]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3863986 'move' coerce_tmp[3863982](3863984 'deref' call_tmp[3860138]))
    (5642104 '=' slot[3860145] coerce_tmp[3863982])
    (3860147 'noop')
    ref call_tmp[3860151]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
    (3860153 'move' call_tmp[3860151](3860156 call table[3860336] this[3859957]))
    const-val _formal_tmp_in_key[3864113]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5642098 '=' _formal_tmp_in_key[3864113] _formal_tmp_k[3860181])
    (3864118 'noop')
    (3860163 call fillSlot[3864052] call_tmp[3860151] slot[3860145] _formal_tmp_in_key[3864113] v[3859971])
    (5642107 call chpl__autoDestroy[4207177] tmp[3860116])
    (5642112 call _leave[3860288] this[3859957])
    (3860169 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].resizeThreshold[3310502](const  ref arg this[3310506]:_ref(map(string,int(64),false))[3288803]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved" "fn synchronization free"
  {
    const-ref ret[3310508]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3310516]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3310518 'move' call_tmp[3310516](3310520 '.' this[3310506] resizeThreshold[3288776]))
    (3310523 'move' ret[3310508] call_tmp[3310516])
    (3310527 return ret[3310508])
  }
  function _ref(map(string,string,false))[3283395].resizeThreshold[3383152](const  ref arg this[3383156]:_ref(map(string,string,false))[3283395]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved" "fn synchronization free"
  {
    const-ref ret[3383158]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3383166]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3383168 'move' call_tmp[3383166](3383170 '.' this[3383156] resizeThreshold[3283368]))
    (3383173 'move' ret[3383158] call_tmp[3383166])
    (3383177 return ret[3383158])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].resizeThreshold[4028692](const  ref arg this[4028696]:_ref(map(string,Module(real(32)),false))[1941017]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[4028698]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4028706]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4028708 'move' call_tmp[4028706](4028710 '.' this[4028696] resizeThreshold[1936338]))
    (4028713 'move' ret[4028698] call_tmp[4028706])
    (4028717 return ret[4028698])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].resizeThreshold[4214415](const  ref arg this[4214419]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[4214421]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4214429]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4214431 'move' call_tmp[4214429](4214433 '.' this[4214419] resizeThreshold[3283668]))
    (4214436 'move' ret[4214421] call_tmp[4214429])
    (4214440 return ret[4214421])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].resizeThreshold[4231837](const  ref arg this[4231841]:_ref(map(string,shared Module(real(32)),false))[3391869]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[4231843]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4231851]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4231853 'move' call_tmp[4231851](4231855 '.' this[4231841] resizeThreshold[3391813]))
    (4231858 'move' ret[4231843] call_tmp[4231851])
    (4231862 return ret[4231843])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].resizeThreshold[4237559](const  ref arg this[4237563]:_ref(map(string,Module(real(64)),false))[3405193]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[4237565]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4237573]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4237575 'move' call_tmp[4237573](4237577 '.' this[4237563] resizeThreshold[3405166]))
    (4237580 'move' ret[4237565] call_tmp[4237573])
    (4237584 return ret[4237565])
  }
  function _ref(map(string,shared Module(real(64)),false))[3855346].resizeThreshold[4305071](const  ref arg this[4305075]:_ref(map(string,shared Module(real(64)),false))[3855346]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[4305077]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4305085]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4305087 'move' call_tmp[4305085](4305089 '.' this[4305075] resizeThreshold[3855319]))
    (4305092 'move' ret[4305077] call_tmp[4305085])
    (4305096 return ret[4305077])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].table[3256947](ref arg this[3256951]:_ref(map(string,Module(real(32)),false))[1941017]) ref : _ref(chpl__hashtable(string,Module(real(32))))[1941508] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3256953]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "RVV" "temp"
    ref call_tmp[3256961]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3256963 'move' call_tmp[3256961](3256965 '.' this[3256951] table[1936341]))
    (3256968 'move' ret[3256953] call_tmp[3256961])
    (3256972 return ret[3256953])
  }
  function _ref(map(string,int(64),false))[3288803].table[3301244](ref arg this[3301248]:_ref(map(string,int(64),false))[3288803]) ref : _ref(chpl__hashtable(string,int(64)))[3288858] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3301250]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "RVV" "temp"
    ref call_tmp[3301258]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3301260 'move' call_tmp[3301258](3301262 '.' this[3301248] table[3288779]))
    (3301265 'move' ret[3301250] call_tmp[3301258])
    (3301269 return ret[3301250])
  }
  function _ref(map(string,string,false))[3283395].table[3344610](ref arg this[3344614]:_ref(map(string,string,false))[3283395]) ref : _ref(chpl__hashtable(string,string))[3283450] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3344616]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "RVV" "temp"
    ref call_tmp[3344624]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3344626 'move' call_tmp[3344624](3344628 '.' this[3344614] table[3283371]))
    (3344631 'move' ret[3344616] call_tmp[3344624])
    (3344635 return ret[3344616])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].table[3359695](ref arg this[3359699]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) ref : _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3359701]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "RVV" "temp"
    ref call_tmp[3359709]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3359711 'move' call_tmp[3359709](3359713 '.' this[3359699] table[3283671]))
    (3359716 'move' ret[3359701] call_tmp[3359709])
    (3359720 return ret[3359701])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].table[3400787](ref arg this[3400791]:_ref(map(string,shared Module(real(32)),false))[3391869]) ref : _ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3400793]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "RVV" "temp"
    ref call_tmp[3400801]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3400803 'move' call_tmp[3400801](3400805 '.' this[3400791] table[3391816]))
    (3400808 'move' ret[3400793] call_tmp[3400801])
    (3400812 return ret[3400793])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].table[3860336](ref arg this[3860340]:_ref(map(string,Module(real(64)),false))[3405193]) ref : _ref(chpl__hashtable(string,Module(real(64))))[3405248] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3860342]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "RVV" "temp"
    ref call_tmp[3860350]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
    (3860352 'move' call_tmp[3860350](3860354 '.' this[3860340] table[3405169]))
    (3860357 'move' ret[3860342] call_tmp[3860350])
    (3860361 return ret[3860342])
  }
  function _ref(map(string,shared Module(real(64)),false))[3855346].table[4309446](ref arg this[4309450]:_ref(map(string,shared Module(real(64)),false))[3855346]) ref : _ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[4309452]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead after last mention" "RVV" "temp"
    ref call_tmp[4309460]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "dead after last mention" "maybe param" "temp"
    (4309462 'move' call_tmp[4309460](4309464 '.' this[4309450] table[3855322]))
    (4309467 'move' ret[4309452] call_tmp[4309460])
    (4309471 return ret[4309452])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].deinit[4030137](const  ref arg this[4030141]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5528758]
    const-ref _field_destructor_tmp_[5528756]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "temp"
    (5528763 'move' _field_destructor_tmp_[5528756](5528760 '.' this[4030141] table[1936341]))
    (5528765 call deinit[4032607] _field_destructor_tmp_[5528756])
    (4030147 return _void[46])
  }
  function _ref(map(string,string,false))[3283395].deinit[4211586](const  ref arg this[4211590]:_ref(map(string,string,false))[3283395]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5530948]
    const-ref _field_destructor_tmp_[5530946]:_ref(chpl__hashtable(string,string))[3283450] "temp"
    (5530953 'move' _field_destructor_tmp_[5530946](5530950 '.' this[4211590] table[3283371]))
    (5530955 call deinit[4211999] _field_destructor_tmp_[5530946])
    (4211596 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].deinit[4215160](const  ref arg this[4215164]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5530994]
    const-ref _field_destructor_tmp_[5530992]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
    (5530999 'move' _field_destructor_tmp_[5530992](5530996 '.' this[4215164] table[3283671]))
    (5531001 call deinit[4215573] _field_destructor_tmp_[5530992])
    (4215170 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].deinit[4217177](const  ref arg this[4217181]:_ref(map(string,int(64),false))[3288803]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531040]
    const-ref _field_destructor_tmp_[5531038]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
    (5531045 'move' _field_destructor_tmp_[5531038](5531042 '.' this[4217181] table[3288779]))
    (5531047 call deinit[4217590] _field_destructor_tmp_[5531038])
    (4217187 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].deinit[4233260](const  ref arg this[4233264]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531202]
    const-ref _field_destructor_tmp_[5531200]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "temp"
    (5531207 'move' _field_destructor_tmp_[5531200](5531204 '.' this[4233264] table[3391816]))
    (5531209 call deinit[4233673] _field_destructor_tmp_[5531200])
    (4233270 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].deinit[4239277](const  ref arg this[4239281]:_ref(map(string,Module(real(64)),false))[3405193]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531270]
    const-ref _field_destructor_tmp_[5531268]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "temp"
    (5531275 'move' _field_destructor_tmp_[5531268](5531272 '.' this[4239281] table[3405169]))
    (5531277 call deinit[4239690] _field_destructor_tmp_[5531268])
    (4239287 return _void[46])
  }
  function _ref(map(string,shared Module(real(64)),false))[3855346].deinit[4314970](const  ref arg this[4314974]:_ref(map(string,shared Module(real(64)),false))[3855346]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531990]
    const-ref _field_destructor_tmp_[5531988]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401] "temp"
    (5531995 'move' _field_destructor_tmp_[5531988](5531992 '.' this[4314974] table[3855322]))
    (5531997 call deinit[4315383] _field_destructor_tmp_[5531988])
    (4314980 return _void[46])
  }
  type map(string,Module(real(32)),false)[1936356] const resizeThreshold[1936338]:real(64)[13] "const" val table[1936341]:chpl__hashtable(string,Module(real(32)))[1941492]
  type map(string,string,false)[3283386] const resizeThreshold[3283368]:real(64)[13] "const" val table[3283371]:chpl__hashtable(string,string)[3283441]
  type map(string,owned ModuleSpecification?,false)[3283686] const resizeThreshold[3283668]:real(64)[13] "const" val table[3283671]:chpl__hashtable(string,owned ModuleSpecification?)[3283741]
  type map(string,int(64),false)[3288794] const resizeThreshold[3288776]:real(64)[13] "const" val table[3288779]:chpl__hashtable(string,int(64))[3288849]
  type map(string,shared Module(real(32)),false)[3391831] const resizeThreshold[3391813]:real(64)[13] "const" val table[3391816]:chpl__hashtable(string,shared Module(real(32)))[3392205]
  type map(string,Module(real(64)),false)[3405184] const resizeThreshold[3405166]:real(64)[13] "const" val table[3405169]:chpl__hashtable(string,Module(real(64)))[3405239]
  type map(string,shared Module(real(64)),false)[3855337] const resizeThreshold[3855319]:real(64)[13] "const" val table[3855322]:chpl__hashtable(string,shared Module(real(64)))[3855392]
  function KeyNotFoundError[352856].init[3315854](const in arg this[3315858]:KeyNotFoundError[352856], const  ref arg k[3315860]:string[244]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[3315866]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (3315868 'move' super_tmp[3315866](3315870 '.v' this[3315858] super[397916]))
    const-val call_tmp[3315873]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[5508035]:Error[85511] "error variable" "temp"
    (5508037 'move' error[5508035] nil[32])
    const-val ret_tmp[5588897]:string[244] "temp"
    (3315881 call format[3316409] "key '%\?' not found" k[3315860] error[5508035] ret_tmp[5588897])
    (5588900 'move' call_tmp[3315873] ret_tmp[5588897])
    val errorExists[7301848]:bool[19] "temp"
    (7301853 'move' errorExists[7301848](7301850 '!=' error[5508035] nil[32]))
    if errorExists[7301848]
    {
      (5508040 call chpl_uncaught_error[87456] error[5508035])
    }
    (3315887 call init[85477] super_tmp[3315866] call_tmp[3315873])
    (5632758 call chpl__autoDestroy[3262688] call_tmp[3315873])
    val tmp[3315890]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[3315909]:Error[85511] "dead after last mention" "maybe param" "temp"
    (3315911 'move' call_tmp[3315909](3315913 'cast' Error[85511] this[3315858]))
    val chpl__thisAsParent[3315916]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (3315918 'move' chpl__thisAsParent[3315916](3333691 call chpl__initCopy[1475182] call_tmp[3315909] 0))
    (3315922 'setcid' chpl__thisAsParent[3315916])
    (3315925 'setcid' this[3315858])
    (3315927 return _void[46])
  }
  function KeyNotFoundError[352856].deinit[1390661](const in arg this[1390665]:KeyNotFoundError[352856]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526569]
    val _parent_destructor_tmp_[5526564]:Error[85511] "temp"
    (5526571 'move' _parent_destructor_tmp_[5526564](5526565 'cast' Error[85511] this[1390665]))
    (5526573 call deinit[1061344] _parent_destructor_tmp_[5526564])
    (1390673 return _void[46])
  }
  function _new[3333701](const  ref arg k[3333712]:string[244]) : KeyNotFoundError[352856] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5479865]:KeyNotFoundError[352856] "temp"
    val ret[3333742]:KeyNotFoundError[352856] "dead after last mention" "RVV" "temp"
    val initTemp[3333703]:KeyNotFoundError[352856] "dead after last mention" "temp"
    const-val call_tmp[3333749]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3333752 'move' call_tmp[3333749](3333763 'sizeof_bundle' KeyNotFoundError[352856]))
    val cast_tmp[3333766]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3333768 'move' cast_tmp[3333766](3333720 call chpl_here_alloc[308303] call_tmp[3333749] 327))
    (3333723 'move' initTemp[3333703](3333770 'cast' KeyNotFoundError[352856] cast_tmp[3333766]))
    (3333704 call init[3315854] initTemp[3333703] k[3333712])
    val tmp[3333725]:KeyNotFoundError[352856] "dead after last mention" "temp"
    (3333732 'move' tmp[3333725] initTemp[3333703])
    (3333747 'move' ret[3333742] tmp[3333725])
    (3333744 return ret[3333742])
  }
  type KeyNotFoundError[352856] val super[397916]:Error[85511] "super class"
}
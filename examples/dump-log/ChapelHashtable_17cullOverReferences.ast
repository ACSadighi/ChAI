AST dump for ChapelHashtable after pass cullOverReferences.
Module use list: ChapelBase DSIUtil CTypes Math POSIX ChplConfig MemMove 

{
  function chpl__init_ChapelHashtable[468522]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (626225 return _void[46])
  }
  type chpl__hash_status[264678] def empty[264672]:chpl__hash_status[264678] 0 def full[264674]:chpl__hash_status[264678] 1 def deleted[264676]:chpl__hash_status[264678] 2
  function _ref(chpl_TableEntry(string,Module(real(32))))[1941545].status[3259161](ref arg this[3259165]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545]) ref : _ref(chpl__hash_status)[3259196] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3259167]:_ref(chpl__hash_status)[3259196] "dead after last mention" "RVV" "temp"
    ref call_tmp[3259175]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3259177 'move' call_tmp[3259175](3259179 '.' this[3259165] status[1941528]))
    (3259182 'move' ret[3259167] call_tmp[3259175])
    (3259186 return ret[3259167])
  }
  function _ref(chpl_TableEntry(string,int(64)))[3288890].status[3306607](ref arg this[3306611]:_ref(chpl_TableEntry(string,int(64)))[3288890]) ref : _ref(chpl__hash_status)[3259196] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3306613]:_ref(chpl__hash_status)[3259196] "dead after last mention" "RVV" "temp"
    ref call_tmp[3306621]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3306623 'move' call_tmp[3306621](3306625 '.' this[3306611] status[3288873]))
    (3306628 'move' ret[3306613] call_tmp[3306621])
    (3306632 return ret[3306613])
  }
  function _ref(chpl_TableEntry(string,string))[3283482].status[3345291](ref arg this[3345295]:_ref(chpl_TableEntry(string,string))[3283482]) ref : _ref(chpl__hash_status)[3259196] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3345297]:_ref(chpl__hash_status)[3259196] "dead after last mention" "RVV" "temp"
    ref call_tmp[3345305]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3345307 'move' call_tmp[3345305](3345309 '.' this[3345295] status[3283465]))
    (3345312 'move' ret[3345297] call_tmp[3345305])
    (3345316 return ret[3345297])
  }
  function _ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782].status[3360376](ref arg this[3360380]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) ref : _ref(chpl__hash_status)[3259196] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3360382]:_ref(chpl__hash_status)[3259196] "dead after last mention" "RVV" "temp"
    ref call_tmp[3360390]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3360392 'move' call_tmp[3360390](3360394 '.' this[3360380] status[3283765]))
    (3360397 'move' ret[3360382] call_tmp[3360390])
    (3360401 return ret[3360382])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(32))))[3392247].status[3402569](ref arg this[3402573]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247]) ref : _ref(chpl__hash_status)[3259196] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3402575]:_ref(chpl__hash_status)[3259196] "dead after last mention" "RVV" "temp"
    ref call_tmp[3402583]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3402585 'move' call_tmp[3402583](3402587 '.' this[3402573] status[3392230]))
    (3402590 'move' ret[3402575] call_tmp[3402583])
    (3402594 return ret[3402575])
  }
  function _ref(chpl_TableEntry(string,Module(real(64))))[3405280].status[3862118](ref arg this[3862122]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280]) ref : _ref(chpl__hash_status)[3259196] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3862124]:_ref(chpl__hash_status)[3259196] "dead after last mention" "RVV" "temp"
    ref call_tmp[3862132]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3862134 'move' call_tmp[3862132](3862136 '.' this[3862122] status[3405263]))
    (3862139 'move' ret[3862124] call_tmp[3862132])
    (3862143 return ret[3862124])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(64))))[3855433].status[4310148](ref arg this[4310152]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433]) ref : _ref(chpl__hash_status)[3259196] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4310154]:_ref(chpl__hash_status)[3259196] "dead after last mention" "RVV" "temp"
    ref call_tmp[4310162]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (4310164 'move' call_tmp[4310162](4310166 '.' this[4310152] status[3855416]))
    (4310169 'move' ret[4310154] call_tmp[4310162])
    (4310173 return ret[4310154])
  }
  function _ref(chpl_TableEntry(string,Module(real(32))))[1941545].key[3259256](ref arg this[3259260]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3259262]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[3259270]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3259272 'move' call_tmp[3259270](3259274 '.' this[3259260] key[1941532]))
    (3259277 'move' ret[3259262] call_tmp[3259270])
    (3259281 return ret[3259262])
  }
  function _ref(chpl_TableEntry(string,int(64)))[3288890].key[3306645](ref arg this[3306649]:_ref(chpl_TableEntry(string,int(64)))[3288890]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3306651]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[3306659]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3306661 'move' call_tmp[3306659](3306663 '.' this[3306649] key[3288877]))
    (3306666 'move' ret[3306651] call_tmp[3306659])
    (3306670 return ret[3306651])
  }
  function _ref(chpl_TableEntry(string,string))[3283482].key[3345732](ref arg this[3345736]:_ref(chpl_TableEntry(string,string))[3283482]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3345738]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[3345746]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3345748 'move' call_tmp[3345746](3345750 '.' this[3345736] key[3283469]))
    (3345753 'move' ret[3345738] call_tmp[3345746])
    (3345757 return ret[3345738])
  }
  function _ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782].key[3360817](ref arg this[3360821]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3360823]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[3360831]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3360833 'move' call_tmp[3360831](3360835 '.' this[3360821] key[3283769]))
    (3360838 'move' ret[3360823] call_tmp[3360831])
    (3360842 return ret[3360823])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(32))))[3392247].key[3402607](ref arg this[3402611]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3402613]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[3402621]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3402623 'move' call_tmp[3402621](3402625 '.' this[3402611] key[3392234]))
    (3402628 'move' ret[3402613] call_tmp[3402621])
    (3402632 return ret[3402613])
  }
  function _ref(chpl_TableEntry(string,Module(real(64))))[3405280].key[3862156](ref arg this[3862160]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3862162]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[3862170]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3862172 'move' call_tmp[3862170](3862174 '.' this[3862160] key[3405267]))
    (3862177 'move' ret[3862162] call_tmp[3862170])
    (3862181 return ret[3862162])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(64))))[3855433].key[4310201](ref arg this[4310205]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4310207]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[4310215]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (4310217 'move' call_tmp[4310215](4310219 '.' this[4310205] key[3855420]))
    (4310222 'move' ret[4310207] call_tmp[4310215])
    (4310226 return ret[4310207])
  }
  function _ref(chpl_TableEntry(string,Module(real(32))))[1941545].val[3261562](ref arg this[3261566]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545]) ref : _ref(Module(real(32)))[1935660] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3261568]:_ref(Module(real(32)))[1935660] "dead after last mention" "RVV" "temp"
    ref call_tmp[3261576]:_ref(Module(real(32)))[1935660] "dead after last mention" "maybe param" "temp"
    (3261578 'move' call_tmp[3261576](3261580 '.' this[3261566] val[1941534]))
    (3261583 'move' ret[3261568] call_tmp[3261576])
    (3261587 return ret[3261568])
  }
  function _ref(chpl_TableEntry(string,int(64)))[3288890].val[3307792](ref arg this[3307796]:_ref(chpl_TableEntry(string,int(64)))[3288890]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3307798]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3307806]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3307808 'move' call_tmp[3307806](3307810 '.' this[3307796] val[3288879]))
    (3307813 'move' ret[3307798] call_tmp[3307806])
    (3307817 return ret[3307798])
  }
  function _ref(chpl_TableEntry(string,string))[3283482].val[3345762](ref arg this[3345766]:_ref(chpl_TableEntry(string,string))[3283482]) ref : _ref(string)[1466327] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3345768]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[3345776]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3345778 'move' call_tmp[3345776](3345780 '.' this[3345766] val[3283471]))
    (3345783 'move' ret[3345768] call_tmp[3345776])
    (3345787 return ret[3345768])
  }
  function _ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782].val[3360847](ref arg this[3360851]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) ref : _ref(owned ModuleSpecification?)[3283613] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3360853]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "RVV" "temp"
    ref call_tmp[3360861]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
    (3360863 'move' call_tmp[3360861](3360865 '.' this[3360851] val[3283771]))
    (3360868 'move' ret[3360853] call_tmp[3360861])
    (3360872 return ret[3360853])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(32))))[3392247].val[3403754](ref arg this[3403758]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247]) ref : _ref(shared Module(real(32)))[1955047] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3403760]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "RVV" "temp"
    ref call_tmp[3403768]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
    (3403770 'move' call_tmp[3403768](3403772 '.' this[3403758] val[3392236]))
    (3403775 'move' ret[3403760] call_tmp[3403768])
    (3403779 return ret[3403760])
  }
  function _ref(chpl_TableEntry(string,Module(real(64))))[3405280].val[3863303](ref arg this[3863307]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280]) ref : _ref(Module(real(64)))[3405072] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3863309]:_ref(Module(real(64)))[3405072] "dead after last mention" "RVV" "temp"
    ref call_tmp[3863317]:_ref(Module(real(64)))[3405072] "dead after last mention" "maybe param" "temp"
    (3863319 'move' call_tmp[3863317](3863321 '.' this[3863307] val[3405269]))
    (3863324 'move' ret[3863309] call_tmp[3863317])
    (3863328 return ret[3863309])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(64))))[3855433].val[4313382](ref arg this[4313386]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433]) ref : _ref(shared Module(real(64)))[3405437] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4313388]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "RVV" "temp"
    ref call_tmp[4313396]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
    (4313398 'move' call_tmp[4313396](4313400 '.' this[4313386] val[3855422]))
    (4313403 'move' ret[4313388] call_tmp[4313396])
    (4313407 return ret[4313388])
  }
  function _ref(chpl_TableEntry(string,Module(real(32))))[1941545].init=[4033811](ref arg this[4033815]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545], const  ref arg other[4033820]:chpl_TableEntry(string,Module(real(32)))[1941536]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    const-ref call_tmp[4033826]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4033828 'move' call_tmp[4033826](4033831 call status[3259161] other[4033820]))
    val status[4033834]:chpl__hash_status[264678] "dead after last mention" "temp"
    (4033836 'move' status[4033834](4033885 'deref' call_tmp[4033826]))
    (4033840 '.=' this[4033815] status[1941528] status[4033834])
    (4033844 'end of statement')
    const-ref call_tmp[4033845]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4033847 'move' call_tmp[4033845](4033850 call key[3259256] other[4033820]))
    val key[4033853]:string[244] "dead after last mention" "temp"
    (4033855 call init=[21330] key[4033853] call_tmp[4033845])
    (4033858 '.=' this[4033815] key[1941532] key[4033853])
    (4033862 'end of statement')
    const-ref call_tmp[4033863]:_ref(Module(real(32)))[1935660] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4033865 'move' call_tmp[4033863](4033868 call val[3261562] other[4033820]))
    val val[4033871]:Module(real(32))[1935500] "dead after last mention" "temp"
    val coerce_tmp[4033896]:Module(real(32))[1935500] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4033900 'move' coerce_tmp[4033896](4033898 'deref' call_tmp[4033863]))
    (4033873 'move' val[4033871](4033893 call chpl__initCopy[1960042] coerce_tmp[4033896] 0))
    (4033876 '.=' this[4033815] val[1941534] val[4033871])
    (4033880 'end of statement')
    (4033881 return _void[46])
  }
  function _ref(chpl_TableEntry(string,string))[3283482].init=[4212826](ref arg this[4212830]:_ref(chpl_TableEntry(string,string))[3283482], const  ref arg other[4212835]:chpl_TableEntry(string,string)[3283473]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    const-ref call_tmp[4212841]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4212843 'move' call_tmp[4212841](4212846 call status[3345291] other[4212835]))
    val status[4212849]:chpl__hash_status[264678] "dead after last mention" "temp"
    (4212851 'move' status[4212849](4212900 'deref' call_tmp[4212841]))
    (4212855 '.=' this[4212830] status[3283465] status[4212849])
    (4212859 'end of statement')
    const-ref call_tmp[4212860]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4212862 'move' call_tmp[4212860](4212865 call key[3345732] other[4212835]))
    val key[4212868]:string[244] "dead after last mention" "temp"
    (4212870 call init=[21330] key[4212868] call_tmp[4212860])
    (4212873 '.=' this[4212830] key[3283469] key[4212868])
    (4212877 'end of statement')
    const-ref call_tmp[4212878]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4212880 'move' call_tmp[4212878](4212883 call val[3345762] other[4212835]))
    val val[4212886]:string[244] "dead after last mention" "temp"
    (4212888 call init=[21330] val[4212886] call_tmp[4212878])
    (4212891 '.=' this[4212830] val[3283471] val[4212886])
    (4212895 'end of statement')
    (4212896 return _void[46])
  }
  function _ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782].init=[4216787](ref arg this[4216791]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782], ref arg other[4216796]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    ref call_tmp[4216802]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (4216804 'move' call_tmp[4216802](4216807 call status[3360376] other[4216796]))
    val status[4216810]:chpl__hash_status[264678] "dead after last mention" "temp"
    (4216812 'move' status[4216810](4216861 'deref' call_tmp[4216802]))
    (4216816 '.=' this[4216791] status[3283765] status[4216810])
    (4216820 'end of statement')
    ref call_tmp[4216821]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4216823 'move' call_tmp[4216821](4216826 call key[3360817] other[4216796]))
    val key[4216829]:string[244] "dead after last mention" "temp"
    (4216831 call init=[21330] key[4216829] call_tmp[4216821])
    (4216834 '.=' this[4216791] key[3283769] key[4216829])
    (4216838 'end of statement')
    ref call_tmp[4216839]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4216841 'move' call_tmp[4216839](4216844 call val[3360847] other[4216796]))
    val val[4216847]:owned ModuleSpecification?[3283604] "dead after last mention" "temp"
    (4216849 call init=[3397254] val[4216847] call_tmp[4216839])
    (4216852 '.=' this[4216791] val[3283771] val[4216847])
    (4216856 'end of statement')
    (4216857 return _void[46])
  }
  function _ref(chpl_TableEntry(string,int(64)))[3288890].init=[4218407](ref arg this[4218411]:_ref(chpl_TableEntry(string,int(64)))[3288890], const  ref arg other[4218416]:chpl_TableEntry(string,int(64))[3288881]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    const-ref call_tmp[4218422]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4218424 'move' call_tmp[4218422](4218427 call status[3306607] other[4218416]))
    val status[4218430]:chpl__hash_status[264678] "dead after last mention" "temp"
    (4218432 'move' status[4218430](4218481 'deref' call_tmp[4218422]))
    (4218436 '.=' this[4218411] status[3288873] status[4218430])
    (4218440 'end of statement')
    const-ref call_tmp[4218441]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4218443 'move' call_tmp[4218441](4218446 call key[3306645] other[4218416]))
    val key[4218449]:string[244] "dead after last mention" "temp"
    (4218451 call init=[21330] key[4218449] call_tmp[4218441])
    (4218454 '.=' this[4218411] key[3288877] key[4218449])
    (4218458 'end of statement')
    const-ref call_tmp[4218459]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4218461 'move' call_tmp[4218459](4218464 call val[3307792] other[4218416]))
    val val[4218467]:int(64)[10] "dead after last mention" "temp"
    val coerce_tmp[4218492]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4218496 'move' coerce_tmp[4218492](4218494 'deref' call_tmp[4218459]))
    (4218469 'move' val[4218467](4218489 call chpl__initCopy[1473915] coerce_tmp[4218492] 0))
    (4218472 '.=' this[4218411] val[3288879] val[4218467])
    (4218476 'end of statement')
    (4218477 return _void[46])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(32))))[3392247].init=[4236057](ref arg this[4236061]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247], const  ref arg other[4236066]:chpl_TableEntry(string,shared Module(real(32)))[3392238]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    const-ref call_tmp[4236072]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4236074 'move' call_tmp[4236072](4236077 call status[3402569] other[4236066]))
    val status[4236080]:chpl__hash_status[264678] "dead after last mention" "temp"
    (4236082 'move' status[4236080](4236131 'deref' call_tmp[4236072]))
    (4236086 '.=' this[4236061] status[3392230] status[4236080])
    (4236090 'end of statement')
    const-ref call_tmp[4236091]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4236093 'move' call_tmp[4236091](4236096 call key[3402607] other[4236066]))
    val key[4236099]:string[244] "dead after last mention" "temp"
    (4236101 call init=[21330] key[4236099] call_tmp[4236091])
    (4236104 '.=' this[4236061] key[3392234] key[4236099])
    (4236108 'end of statement')
    const-ref call_tmp[4236109]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4236111 'move' call_tmp[4236109](4236114 call val[3403754] other[4236066]))
    val val[4236117]:shared Module(real(32))[1955038] "dead after last mention" "temp"
    (4236119 call init=[3399355] val[4236117] call_tmp[4236109])
    (4236122 '.=' this[4236061] val[3392236] val[4236117])
    (4236126 'end of statement')
    (4236127 return _void[46])
  }
  function _ref(chpl_TableEntry(string,Module(real(64))))[3405280].init=[4240507](ref arg this[4240511]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280], const  ref arg other[4240516]:chpl_TableEntry(string,Module(real(64)))[3405271]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    const-ref call_tmp[4240522]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4240524 'move' call_tmp[4240522](4240527 call status[3862118] other[4240516]))
    val status[4240530]:chpl__hash_status[264678] "dead after last mention" "temp"
    (4240532 'move' status[4240530](4240581 'deref' call_tmp[4240522]))
    (4240536 '.=' this[4240511] status[3405263] status[4240530])
    (4240540 'end of statement')
    const-ref call_tmp[4240541]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4240543 'move' call_tmp[4240541](4240546 call key[3862156] other[4240516]))
    val key[4240549]:string[244] "dead after last mention" "temp"
    (4240551 call init=[21330] key[4240549] call_tmp[4240541])
    (4240554 '.=' this[4240511] key[3405267] key[4240549])
    (4240558 'end of statement')
    const-ref call_tmp[4240559]:_ref(Module(real(64)))[3405072] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4240561 'move' call_tmp[4240559](4240564 call val[3863303] other[4240516]))
    val val[4240567]:Module(real(64))[3405063] "dead after last mention" "temp"
    val coerce_tmp[4240592]:Module(real(64))[3405063] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4240596 'move' coerce_tmp[4240592](4240594 'deref' call_tmp[4240559]))
    (4240569 'move' val[4240567](4240589 call chpl__initCopy[3837425] coerce_tmp[4240592] 0))
    (4240572 '.=' this[4240511] val[3405269] val[4240567])
    (4240576 'end of statement')
    (4240577 return _void[46])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(64))))[3855433].init=[4317767](ref arg this[4317771]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433], const  ref arg other[4317776]:chpl_TableEntry(string,shared Module(real(64)))[3855424]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    const-ref call_tmp[4317782]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4317784 'move' call_tmp[4317782](4317787 call status[4310148] other[4317776]))
    val status[4317790]:chpl__hash_status[264678] "dead after last mention" "temp"
    (4317792 'move' status[4317790](4317841 'deref' call_tmp[4317782]))
    (4317796 '.=' this[4317771] status[3855416] status[4317790])
    (4317800 'end of statement')
    const-ref call_tmp[4317801]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4317803 'move' call_tmp[4317801](4317806 call key[4310201] other[4317776]))
    val key[4317809]:string[244] "dead after last mention" "temp"
    (4317811 call init=[21330] key[4317809] call_tmp[4317801])
    (4317814 '.=' this[4317771] key[3855420] key[4317809])
    (4317818 'end of statement')
    const-ref call_tmp[4317819]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (4317821 'move' call_tmp[4317819](4317824 call val[4313382] other[4317776]))
    val val[4317827]:shared Module(real(64))[3405428] "dead after last mention" "temp"
    (4317829 call init=[3864603] val[4317827] call_tmp[4317819])
    (4317832 '.=' this[4317771] val[3855422] val[4317827])
    (4317836 'end of statement')
    (4317837 return _void[46])
  }
  function _ref(chpl_TableEntry(string,Module(real(32))))[1941545].deinit[4033923](const  ref arg this[4033927]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    (4033933 return _void[46])
  }
  function _ref(chpl_TableEntry(string,string))[3283482].deinit[4212931](const  ref arg this[4212935]:_ref(chpl_TableEntry(string,string))[3283482]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    (4212941 return _void[46])
  }
  function _ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782].deinit[4216892](const  ref arg this[4216896]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    (4216902 return _void[46])
  }
  function _ref(chpl_TableEntry(string,int(64)))[3288890].deinit[4218519](const  ref arg this[4218523]:_ref(chpl_TableEntry(string,int(64)))[3288890]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    (4218529 return _void[46])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(32))))[3392247].deinit[4236162](const  ref arg this[4236166]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    (4236172 return _void[46])
  }
  function _ref(chpl_TableEntry(string,Module(real(64))))[3405280].deinit[4240619](const  ref arg this[4240623]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    (4240629 return _void[46])
  }
  function _ref(chpl_TableEntry(string,shared Module(real(64))))[3855433].deinit[4317872](const  ref arg this[4317876]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    (4317882 return _void[46])
  }
  type chpl_TableEntry(string,Module(real(32)))[1941536] val status[1941528]:chpl__hash_status[264678] val key[1941532]:string[244] val val[1941534]:Module(real(32))[1935500]
  type chpl_TableEntry(string,string)[3283473] val status[3283465]:chpl__hash_status[264678] val key[3283469]:string[244] val val[3283471]:string[244]
  type chpl_TableEntry(string,owned ModuleSpecification?)[3283773] val status[3283765]:chpl__hash_status[264678] val key[3283769]:string[244] val val[3283771]:owned ModuleSpecification?[3283604]
  type chpl_TableEntry(string,int(64))[3288881] val status[3288873]:chpl__hash_status[264678] val key[3288877]:string[244] val val[3288879]:int(64)[10]
  type chpl_TableEntry(string,shared Module(real(32)))[3392238] val status[3392230]:chpl__hash_status[264678] val key[3392234]:string[244] val val[3392236]:shared Module(real(32))[1955038]
  type chpl_TableEntry(string,Module(real(64)))[3405271] val status[3405263]:chpl__hash_status[264678] val key[3405267]:string[244] val val[3405269]:Module(real(64))[3405063]
  type chpl_TableEntry(string,shared Module(real(64)))[3855424] val status[3855416]:chpl__hash_status[264678] val key[3855420]:string[244] val val[3855422]:shared Module(real(64))[3405428]
  function _allocateData[1943230](const in arg size[1943232]:int(64)[10]) : _ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[5478507]:chpl_TableEntry(string,Module(real(32)))[1941536] "temp"
    val ret[1943236]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "RVV" "temp"
    val call_tmp[1943244]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1943246 'move' call_tmp[1943244](1943249 call ==[52746] size[1943232] 0))
    val call_tmp[1943252]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1943254 'move' call_tmp[1943252] call_tmp[1943244])
    if call_tmp[1943252]
    {
      (1943262 call halt[88131] "attempt to allocate hashtable with size 0")
    }
    val callPostAlloc[1943265]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    (1943270 'end of statement')
    val call_tmp[1943271]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "maybe param" "temp"
    val default_arg_subloc[1944120]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1944124 'move' default_arg_subloc[1944120](1944122 call _ddata_allocate_noinit_default_subloc[1944103]))
    val default_arg_haltOnOom[1944146]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[1944154]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (1943273 'move' call_tmp[1943271](1943276 call _ddata_allocate_noinit[1943974] size[1943232] _formal_tmp_out_callPostAlloc[1944154] default_arg_subloc[1944120] 1))
    (1949565 'move' callPostAlloc[1943265] _formal_tmp_out_callPostAlloc[1944154])
    val ret[1943280]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "insert auto destroy"
    (1943282 'move' ret[1943280](1944580 call chpl__initCopy[1944583] call_tmp[1943271] 0))
    (1943285 'end of statement')
    val call_tmp[1943286]:ArrayInit[66987] "dead at end of block" "maybe param" "temp"
    (1943288 'move' call_tmp[1943286](1943291 call init_elts_method[1944604] size[1943232]))
    val initMethod[1943294]:ArrayInit[66987] "dead at end of block" "insert auto destroy"
    (1943296 'move' initMethod[1943294] call_tmp[1943286])
    (1943299 'end of statement')
    val call_tmp[1943300]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (1943302 'move' call_tmp[1943300](1943305 call _ddata_sizeof_element[1944183] ret[1943280]))
    const sizeofElement[1943307]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (1943309 'move' sizeofElement[1943307] call_tmp[1943300])
    (1943312 'end of statement' callPostAlloc[1943265] ret[1943280])
    {
      val tmp[1943337]:ArrayInit[66987] "dead after last mention" "expr temp" "maybe param" "temp"
      (1943339 'move' tmp[1943337] initMethod[1943294])
      val call_tmp[1943342]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1943344 'move' call_tmp[1943342](1943347 call ==[1794690] tmp[1943337] noInit[66979]))
      val call_tmp[1943350]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1943352 'move' call_tmp[1943350] call_tmp[1943342])
      if call_tmp[1943350]
      {
      }
      {
        val call_tmp[1943360]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (1943362 'move' call_tmp[1943360](1943365 call ==[1794690] tmp[1943337] serialInit[66981]))
        val call_tmp[1943368]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (1943370 'move' call_tmp[1943368] call_tmp[1943360])
        if call_tmp[1943368]
        {
          {
            val _indexOfInterest[1943378]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1943380]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
            val call_tmp[1943382]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
            (1943384 'move' call_tmp[1943382](1943387 call _allSlots[265237] size[1943232]))
            (1943389 'move' _iterator[1943380](1943392 call _getIterator[1946146] call_tmp[1943382]))
            Defer
            {
              {
                (1943396 call _freeIterator[1947321] _iterator[1943380])
              }
            }
            ForLoop[1943405]
            {
              const slot[1943408]:int(64)[10] "const" "index var" "insert auto destroy"
              (1943410 'end of statement')
              (1943411 'move' slot[1943408] _indexOfInterest[1943378])
              (1943414 'end of statement' slot[1943408])
              {
                ref call_tmp[1943417]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
                (1943419 'move' call_tmp[1943417](1943422 call this[1947405] ret[1943280] slot[1943408]))
                val call_tmp[1943424]:c_ptr(chpl_TableEntry(string,Module(real(32))))[1947483] "dead after last mention" "expr temp" "maybe param" "temp"
                (1943426 'move' call_tmp[1943424](1943429 call ptrTo[1947437] call_tmp[1943417]))
                val call_tmp[1943431]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1943438]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[1943446]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (1943448 'move' call_tmp[1943446](1943454 call safeCast[1818482] sizeofElement[1943307]))
                val coerce_tmp[1947572]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1947578 'move' coerce_tmp[1947572](1947574 'cast' c_ptr(void)[1465614] call_tmp[1943424]))
                val _return_tmp_[5468471]:c_ptr(void)[1465614] "dead after last mention" "temp"
                (5468473 'move' _return_tmp_[5468471](1943457 call memset[1947508] coerce_tmp[1947572] 0 call_tmp[1943446]))
                (1943461 'end of statement' ret[1943280] slot[1943408] sizeofElement[1943307])
              }
              label _continueLabel[1943465]
              _indexOfInterest[1943378]
              _iterator[1943380]
            }
            label _breakLabel[1943467]
          }
        }
        {
          val call_tmp[1943470]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (1943472 'move' call_tmp[1943470](1943475 call ==[1794690] tmp[1943337] parallelInit[66983]))
          val call_tmp[1943478]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (1943480 'move' call_tmp[1943478] call_tmp[1943470])
          if call_tmp[1943478]
          {
            val call_tmp[1943494]:bool[19] "dead after last mention" "maybe param" "maybe type" "temp"
            val default_arg_hasOffsets[1948932]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            val chpl__staticAutoLocalCheckSym[1943502]:bool[19] "dead at end of block" "param" "temp"
            {
              Forall[1943790] {
                induction variables:
                  
                  const slot[1943791]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                iterated expressions:
                  (1948948 call _allSlots[1946294] size[1943232])
                shadow variables:
                  INP_ret[1949282]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] parent-in intent outer var ret[1943280]
                    init block
                    {
                      (1949286 'move' INP_ret[1949282] ret[1943280])
                    }
                    deinit block
                    {
                    }
                  ret[1949278]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] 'const in' intent outer var ret[1943280]
                    init block
                    {
                      (1949290 'move' ret[1949278](1949296 call chpl__initCopy[1944583] INP_ret[1949282] 1))
                    }
                    deinit block
                    {
                      (1949294 call chpl__autoDestroy[1949300] ret[1949278])
                    }
                  INP_sizeofElement[1949318]:uint(64)[86] parent-in intent outer var sizeofElement[1943307]
                    init block
                    {
                      (1949322 'move' INP_sizeofElement[1949318] sizeofElement[1943307])
                    }
                    deinit block
                    {
                    }
                  sizeofElement[1949314]:uint(64)[86] 'const in' intent outer var sizeofElement[1943307]
                    init block
                    {
                      (1949326 'move' sizeofElement[1949314] INP_sizeofElement[1949318])
                    }
                    deinit block
                    {
                      (1949330 call chpl__autoDestroy[1949332] sizeofElement[1949314])
                    }
                other variables
                  val chpl__iterPAR[1949345]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
                  val chpl__parIter[1949346]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(1949350 call _getIterator[1949136] chpl__iterPAR[1949345])(1949353 call _freeIterator[1949375] chpl__parIter[1949346])
                  forall body
                {
                  ref call_tmp[1943742]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
                  (1943744 'move' call_tmp[1943742](1943747 call this[1947405] ret[1949278] slot[1943791]))
                  val call_tmp[1943749]:c_ptr(chpl_TableEntry(string,Module(real(32))))[1947483] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1943751 'move' call_tmp[1943749](1943754 call ptrTo[1947437] call_tmp[1943742]))
                  val call_tmp[1943756]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1943763]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[1943771]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1943773 'move' call_tmp[1943771](1943779 call safeCast[1818482] sizeofElement[1949314]))
                  val coerce_tmp[1949423]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1949429 'move' coerce_tmp[1949423](1949425 'cast' c_ptr(void)[1465614] call_tmp[1943749]))
                  val _return_tmp_[5468475]:c_ptr(void)[1465614] "dead after last mention" "temp"
                  (5468477 'move' _return_tmp_[5468475](1943782 call memset[1947508] coerce_tmp[1949423] 0 call_tmp[1943771]))
                  (1943786 'end of statement' ret[1949278] slot[1943791] sizeofElement[1949314])
                }
              }
            }
            (1948944 'end of statement' ret[1943280] sizeofElement[1943307])
          }
          {
            val call_tmp[1943796]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (1943798 'move' call_tmp[1943796](1943801 call ==[1794690] tmp[1943337] gpuInit[66985]))
            val call_tmp[1943804]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (1943806 'move' call_tmp[1943804] call_tmp[1943796])
            if call_tmp[1943804]
            {
              val call_tmp[1943816]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[1943824]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              {
                (1943927 call halt[88131] "ArrayInit.gpuInit should not have been selected")
              }
              (1949442 'end of statement' ret[1943280] sizeofElement[1943307])
            }
            {
              (1943932 call halt[1832970] "ArrayInit." initMethod[1943294] " should have been implemented")
              (1943936 'end of statement' initMethod[1943294])
            }
          }
        }
      }
    }
    val call_tmp[1943942]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1943944 'move' call_tmp[1943942] callPostAlloc[1943265])
    if call_tmp[1943942]
    {
      (1943952 call _ddata_allocate_postalloc[1949447] ret[1943280] size[1943232])
      (1943955 'end of statement' ret[1943280])
    }
    (1943958 'move' ret[1943236] ret[1943280])
    gotoReturn _end__allocateData[1943966] _end__allocateData[1943966]
    label _end__allocateData[1943966]
    (1943968 return ret[1943236])
  }
  function _allocateData[3303234](const in arg size[3303236]:int(64)[10]) : _ddata(chpl_TableEntry(string,int(64)))[3288904] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[5479820]:chpl_TableEntry(string,int(64))[3288881] "temp"
    val ret[3303240]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "RVV" "temp"
    val call_tmp[3303248]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3303250 'move' call_tmp[3303248](3303253 call ==[52746] size[3303236] 0))
    val call_tmp[3303256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3303258 'move' call_tmp[3303256] call_tmp[3303248])
    if call_tmp[3303256]
    {
      (3303266 call halt[88131] "attempt to allocate hashtable with size 0")
    }
    val callPostAlloc[3303269]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    (3303274 'end of statement')
    val call_tmp[3303275]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "maybe param" "temp"
    val default_arg_subloc[3304124]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3304128 'move' default_arg_subloc[3304124](3304126 call _ddata_allocate_noinit_default_subloc[3304107]))
    val default_arg_haltOnOom[3304150]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[3304158]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (3303277 'move' call_tmp[3303275](3303280 call _ddata_allocate_noinit[3303978] size[3303236] _formal_tmp_out_callPostAlloc[3304158] default_arg_subloc[3304124] 1))
    (3306532 'move' callPostAlloc[3303269] _formal_tmp_out_callPostAlloc[3304158])
    val ret[3303284]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "insert auto destroy"
    (3303286 'move' ret[3303284](3304584 call chpl__initCopy[3303034] call_tmp[3303275] 0))
    (3303289 'end of statement')
    val call_tmp[3303290]:ArrayInit[66987] "dead at end of block" "maybe param" "temp"
    (3303292 'move' call_tmp[3303290](3303295 call init_elts_method[3304588] size[3303236]))
    val initMethod[3303298]:ArrayInit[66987] "dead at end of block" "insert auto destroy"
    (3303300 'move' initMethod[3303298] call_tmp[3303290])
    (3303303 'end of statement')
    val call_tmp[3303304]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3303306 'move' call_tmp[3303304](3303309 call _ddata_sizeof_element[3304187] ret[3303284]))
    const sizeofElement[3303311]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (3303313 'move' sizeofElement[3303311] call_tmp[3303304])
    (3303316 'end of statement' callPostAlloc[3303269] ret[3303284])
    {
      val tmp[3303341]:ArrayInit[66987] "dead after last mention" "expr temp" "maybe param" "temp"
      (3303343 'move' tmp[3303341] initMethod[3303298])
      val call_tmp[3303346]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3303348 'move' call_tmp[3303346](3303351 call ==[1794690] tmp[3303341] noInit[66979]))
      val call_tmp[3303354]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3303356 'move' call_tmp[3303354] call_tmp[3303346])
      if call_tmp[3303354]
      {
      }
      {
        val call_tmp[3303364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3303366 'move' call_tmp[3303364](3303369 call ==[1794690] tmp[3303341] serialInit[66981]))
        val call_tmp[3303372]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3303374 'move' call_tmp[3303372] call_tmp[3303364])
        if call_tmp[3303372]
        {
          {
            val _indexOfInterest[3303382]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[3303384]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
            val call_tmp[3303386]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
            (3303388 'move' call_tmp[3303386](3303391 call _allSlots[265237] size[3303236]))
            (3303393 'move' _iterator[3303384](3303396 call _getIterator[1946146] call_tmp[3303386]))
            Defer
            {
              {
                (3303400 call _freeIterator[1947321] _iterator[3303384])
              }
            }
            ForLoop[3303409]
            {
              const slot[3303412]:int(64)[10] "const" "index var" "insert auto destroy"
              (3303414 'end of statement')
              (3303415 'move' slot[3303412] _indexOfInterest[3303382])
              (3303418 'end of statement' slot[3303412])
              {
                ref call_tmp[3303421]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
                (3303423 'move' call_tmp[3303421](3303426 call this[3306115] ret[3303284] slot[3303412]))
                val call_tmp[3303428]:c_ptr(chpl_TableEntry(string,int(64)))[3306193] "dead after last mention" "expr temp" "maybe param" "temp"
                (3303430 'move' call_tmp[3303428](3303433 call ptrTo[3306147] call_tmp[3303421]))
                val call_tmp[3303435]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[3303442]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[3303450]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (3303452 'move' call_tmp[3303450](3303458 call safeCast[1818482] sizeofElement[3303311]))
                val coerce_tmp[3306218]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3306224 'move' coerce_tmp[3306218](3306220 'cast' c_ptr(void)[1465614] call_tmp[3303428]))
                val _return_tmp_[5468783]:c_ptr(void)[1465614] "dead after last mention" "temp"
                (5468785 'move' _return_tmp_[5468783](3303461 call memset[1947508] coerce_tmp[3306218] 0 call_tmp[3303450]))
                (3303465 'end of statement' ret[3303284] slot[3303412] sizeofElement[3303311])
              }
              label _continueLabel[3303469]
              _indexOfInterest[3303382]
              _iterator[3303384]
            }
            label _breakLabel[3303471]
          }
        }
        {
          val call_tmp[3303474]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3303476 'move' call_tmp[3303474](3303479 call ==[1794690] tmp[3303341] parallelInit[66983]))
          val call_tmp[3303482]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3303484 'move' call_tmp[3303482] call_tmp[3303474])
          if call_tmp[3303482]
          {
            val call_tmp[3303498]:bool[19] "dead after last mention" "maybe param" "maybe type" "temp"
            val default_arg_hasOffsets[3306279]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            val chpl__staticAutoLocalCheckSym[3303506]:bool[19] "dead at end of block" "param" "temp"
            {
              Forall[3303794] {
                induction variables:
                  
                  const slot[3303795]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                iterated expressions:
                  (3306295 call _allSlots[1946294] size[3303236])
                shadow variables:
                  INP_ret[3306307]:_ddata(chpl_TableEntry(string,int(64)))[3288904] parent-in intent outer var ret[3303284]
                    init block
                    {
                      (3306311 'move' INP_ret[3306307] ret[3303284])
                    }
                    deinit block
                    {
                    }
                  ret[3306303]:_ddata(chpl_TableEntry(string,int(64)))[3288904] 'const in' intent outer var ret[3303284]
                    init block
                    {
                      (3306315 'move' ret[3306303](3306321 call chpl__initCopy[3303034] INP_ret[3306307] 1))
                    }
                    deinit block
                    {
                      (3306319 call chpl__autoDestroy[3306325] ret[3306303])
                    }
                  INP_sizeofElement[3306343]:uint(64)[86] parent-in intent outer var sizeofElement[3303311]
                    init block
                    {
                      (3306347 'move' INP_sizeofElement[3306343] sizeofElement[3303311])
                    }
                    deinit block
                    {
                    }
                  sizeofElement[3306339]:uint(64)[86] 'const in' intent outer var sizeofElement[3303311]
                    init block
                    {
                      (3306351 'move' sizeofElement[3306339] INP_sizeofElement[3306343])
                    }
                    deinit block
                    {
                      (3306355 call chpl__autoDestroy[1949332] sizeofElement[3306339])
                    }
                other variables
                  val chpl__iterPAR[3306358]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
                  val chpl__parIter[3306359]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(3306363 call _getIterator[1949136] chpl__iterPAR[3306358])(3306366 call _freeIterator[1949375] chpl__parIter[3306359])
                  forall body
                {
                  ref call_tmp[3303746]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
                  (3303748 'move' call_tmp[3303746](3303751 call this[3306115] ret[3306303] slot[3303795]))
                  val call_tmp[3303753]:c_ptr(chpl_TableEntry(string,int(64)))[3306193] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3303755 'move' call_tmp[3303753](3303758 call ptrTo[3306147] call_tmp[3303746]))
                  val call_tmp[3303760]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[3303767]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[3303775]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3303777 'move' call_tmp[3303775](3303783 call safeCast[1818482] sizeofElement[3306339]))
                  val coerce_tmp[3306390]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3306396 'move' coerce_tmp[3306390](3306392 'cast' c_ptr(void)[1465614] call_tmp[3303753]))
                  val _return_tmp_[5468787]:c_ptr(void)[1465614] "dead after last mention" "temp"
                  (5468789 'move' _return_tmp_[5468787](3303786 call memset[1947508] coerce_tmp[3306390] 0 call_tmp[3303775]))
                  (3303790 'end of statement' ret[3306303] slot[3303795] sizeofElement[3306339])
                }
              }
            }
            (3306291 'end of statement' ret[3303284] sizeofElement[3303311])
          }
          {
            val call_tmp[3303800]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3303802 'move' call_tmp[3303800](3303805 call ==[1794690] tmp[3303341] gpuInit[66985]))
            val call_tmp[3303808]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3303810 'move' call_tmp[3303808] call_tmp[3303800])
            if call_tmp[3303808]
            {
              val call_tmp[3303820]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3303828]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              {
                (3303931 call halt[88131] "ArrayInit.gpuInit should not have been selected")
              }
              (3306409 'end of statement' ret[3303284] sizeofElement[3303311])
            }
            {
              (3303936 call halt[1832970] "ArrayInit." initMethod[3303298] " should have been implemented")
              (3303940 'end of statement' initMethod[3303298])
            }
          }
        }
      }
    }
    val call_tmp[3303946]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3303948 'move' call_tmp[3303946] callPostAlloc[3303269])
    if call_tmp[3303946]
    {
      (3303956 call _ddata_allocate_postalloc[3306414] ret[3303284] size[3303236])
      (3303959 'end of statement' ret[3303284])
    }
    (3303962 'move' ret[3303240] ret[3303284])
    gotoReturn _end__allocateData[3303970] _end__allocateData[3303970]
    label _end__allocateData[3303970]
    (3303972 return ret[3303240])
  }
  function _allocateData[3340355](const in arg size[3340357]:int(64)[10]) : _ddata(chpl_TableEntry(string,string))[3283496] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[5479895]:chpl_TableEntry(string,string)[3283473] "temp"
    val ret[3340361]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "RVV" "temp"
    val call_tmp[3340369]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3340371 'move' call_tmp[3340369](3340374 call ==[52746] size[3340357] 0))
    val call_tmp[3340377]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3340379 'move' call_tmp[3340377] call_tmp[3340369])
    if call_tmp[3340377]
    {
      (3340387 call halt[88131] "attempt to allocate hashtable with size 0")
    }
    val callPostAlloc[3340390]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    (3340395 'end of statement')
    val call_tmp[3340396]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "maybe param" "temp"
    val default_arg_subloc[3341245]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3341249 'move' default_arg_subloc[3341245](3341247 call _ddata_allocate_noinit_default_subloc[3341228]))
    val default_arg_haltOnOom[3341271]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[3341279]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (3340398 'move' call_tmp[3340396](3340401 call _ddata_allocate_noinit[3341099] size[3340357] _formal_tmp_out_callPostAlloc[3341279] default_arg_subloc[3341245] 1))
    (3343673 'move' callPostAlloc[3340390] _formal_tmp_out_callPostAlloc[3341279])
    val ret[3340405]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "insert auto destroy"
    (3340407 'move' ret[3340405](3341705 call chpl__initCopy[3341708] call_tmp[3340396] 0))
    (3340410 'end of statement')
    val call_tmp[3340411]:ArrayInit[66987] "dead at end of block" "maybe param" "temp"
    (3340413 'move' call_tmp[3340411](3340416 call init_elts_method[3341729] size[3340357]))
    val initMethod[3340419]:ArrayInit[66987] "dead at end of block" "insert auto destroy"
    (3340421 'move' initMethod[3340419] call_tmp[3340411])
    (3340424 'end of statement')
    val call_tmp[3340425]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3340427 'move' call_tmp[3340425](3340430 call _ddata_sizeof_element[3341308] ret[3340405]))
    const sizeofElement[3340432]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (3340434 'move' sizeofElement[3340432] call_tmp[3340425])
    (3340437 'end of statement' callPostAlloc[3340390] ret[3340405])
    {
      val tmp[3340462]:ArrayInit[66987] "dead after last mention" "expr temp" "maybe param" "temp"
      (3340464 'move' tmp[3340462] initMethod[3340419])
      val call_tmp[3340467]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3340469 'move' call_tmp[3340467](3340472 call ==[1794690] tmp[3340462] noInit[66979]))
      val call_tmp[3340475]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3340477 'move' call_tmp[3340475] call_tmp[3340467])
      if call_tmp[3340475]
      {
      }
      {
        val call_tmp[3340485]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3340487 'move' call_tmp[3340485](3340490 call ==[1794690] tmp[3340462] serialInit[66981]))
        val call_tmp[3340493]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3340495 'move' call_tmp[3340493] call_tmp[3340485])
        if call_tmp[3340493]
        {
          {
            val _indexOfInterest[3340503]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[3340505]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
            val call_tmp[3340507]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
            (3340509 'move' call_tmp[3340507](3340512 call _allSlots[265237] size[3340357]))
            (3340514 'move' _iterator[3340505](3340517 call _getIterator[1946146] call_tmp[3340507]))
            Defer
            {
              {
                (3340521 call _freeIterator[1947321] _iterator[3340505])
              }
            }
            ForLoop[3340530]
            {
              const slot[3340533]:int(64)[10] "const" "index var" "insert auto destroy"
              (3340535 'end of statement')
              (3340536 'move' slot[3340533] _indexOfInterest[3340503])
              (3340539 'end of statement' slot[3340533])
              {
                ref call_tmp[3340542]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
                (3340544 'move' call_tmp[3340542](3340547 call this[3343256] ret[3340405] slot[3340533]))
                val call_tmp[3340549]:c_ptr(chpl_TableEntry(string,string))[3343334] "dead after last mention" "expr temp" "maybe param" "temp"
                (3340551 'move' call_tmp[3340549](3340554 call ptrTo[3343288] call_tmp[3340542]))
                val call_tmp[3340556]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[3340563]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[3340571]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (3340573 'move' call_tmp[3340571](3340579 call safeCast[1818482] sizeofElement[3340432]))
                val coerce_tmp[3343359]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3343365 'move' coerce_tmp[3343359](3343361 'cast' c_ptr(void)[1465614] call_tmp[3340549]))
                val _return_tmp_[5468819]:c_ptr(void)[1465614] "dead after last mention" "temp"
                (5468821 'move' _return_tmp_[5468819](3340582 call memset[1947508] coerce_tmp[3343359] 0 call_tmp[3340571]))
                (3340586 'end of statement' ret[3340405] slot[3340533] sizeofElement[3340432])
              }
              label _continueLabel[3340590]
              _indexOfInterest[3340503]
              _iterator[3340505]
            }
            label _breakLabel[3340592]
          }
        }
        {
          val call_tmp[3340595]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3340597 'move' call_tmp[3340595](3340600 call ==[1794690] tmp[3340462] parallelInit[66983]))
          val call_tmp[3340603]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3340605 'move' call_tmp[3340603] call_tmp[3340595])
          if call_tmp[3340603]
          {
            val call_tmp[3340619]:bool[19] "dead after last mention" "maybe param" "maybe type" "temp"
            val default_arg_hasOffsets[3343420]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            val chpl__staticAutoLocalCheckSym[3340627]:bool[19] "dead at end of block" "param" "temp"
            {
              Forall[3340915] {
                induction variables:
                  
                  const slot[3340916]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                iterated expressions:
                  (3343436 call _allSlots[1946294] size[3340357])
                shadow variables:
                  INP_ret[3343448]:_ddata(chpl_TableEntry(string,string))[3283496] parent-in intent outer var ret[3340405]
                    init block
                    {
                      (3343452 'move' INP_ret[3343448] ret[3340405])
                    }
                    deinit block
                    {
                    }
                  ret[3343444]:_ddata(chpl_TableEntry(string,string))[3283496] 'const in' intent outer var ret[3340405]
                    init block
                    {
                      (3343456 'move' ret[3343444](3343462 call chpl__initCopy[3341708] INP_ret[3343448] 1))
                    }
                    deinit block
                    {
                      (3343460 call chpl__autoDestroy[3343466] ret[3343444])
                    }
                  INP_sizeofElement[3343484]:uint(64)[86] parent-in intent outer var sizeofElement[3340432]
                    init block
                    {
                      (3343488 'move' INP_sizeofElement[3343484] sizeofElement[3340432])
                    }
                    deinit block
                    {
                    }
                  sizeofElement[3343480]:uint(64)[86] 'const in' intent outer var sizeofElement[3340432]
                    init block
                    {
                      (3343492 'move' sizeofElement[3343480] INP_sizeofElement[3343484])
                    }
                    deinit block
                    {
                      (3343496 call chpl__autoDestroy[1949332] sizeofElement[3343480])
                    }
                other variables
                  val chpl__iterPAR[3343499]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
                  val chpl__parIter[3343500]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(3343504 call _getIterator[1949136] chpl__iterPAR[3343499])(3343507 call _freeIterator[1949375] chpl__parIter[3343500])
                  forall body
                {
                  ref call_tmp[3340867]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
                  (3340869 'move' call_tmp[3340867](3340872 call this[3343256] ret[3343444] slot[3340916]))
                  val call_tmp[3340874]:c_ptr(chpl_TableEntry(string,string))[3343334] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3340876 'move' call_tmp[3340874](3340879 call ptrTo[3343288] call_tmp[3340867]))
                  val call_tmp[3340881]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[3340888]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[3340896]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3340898 'move' call_tmp[3340896](3340904 call safeCast[1818482] sizeofElement[3343480]))
                  val coerce_tmp[3343531]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3343537 'move' coerce_tmp[3343531](3343533 'cast' c_ptr(void)[1465614] call_tmp[3340874]))
                  val _return_tmp_[5468823]:c_ptr(void)[1465614] "dead after last mention" "temp"
                  (5468825 'move' _return_tmp_[5468823](3340907 call memset[1947508] coerce_tmp[3343531] 0 call_tmp[3340896]))
                  (3340911 'end of statement' ret[3343444] slot[3340916] sizeofElement[3343480])
                }
              }
            }
            (3343432 'end of statement' ret[3340405] sizeofElement[3340432])
          }
          {
            val call_tmp[3340921]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3340923 'move' call_tmp[3340921](3340926 call ==[1794690] tmp[3340462] gpuInit[66985]))
            val call_tmp[3340929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3340931 'move' call_tmp[3340929] call_tmp[3340921])
            if call_tmp[3340929]
            {
              val call_tmp[3340941]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3340949]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              {
                (3341052 call halt[88131] "ArrayInit.gpuInit should not have been selected")
              }
              (3343550 'end of statement' ret[3340405] sizeofElement[3340432])
            }
            {
              (3341057 call halt[1832970] "ArrayInit." initMethod[3340419] " should have been implemented")
              (3341061 'end of statement' initMethod[3340419])
            }
          }
        }
      }
    }
    val call_tmp[3341067]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3341069 'move' call_tmp[3341067] callPostAlloc[3340390])
    if call_tmp[3341067]
    {
      (3341077 call _ddata_allocate_postalloc[3343555] ret[3340405] size[3340357])
      (3341080 'end of statement' ret[3340405])
    }
    (3341083 'move' ret[3340361] ret[3340405])
    gotoReturn _end__allocateData[3341091] _end__allocateData[3341091]
    label _end__allocateData[3341091]
    (3341093 return ret[3340361])
  }
  function _allocateData[3355440](const in arg size[3355442]:int(64)[10]) : _ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[5479938]:chpl_TableEntry(string,owned ModuleSpecification?)[3283773] "temp"
    val ret[3355446]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "RVV" "temp"
    val call_tmp[3355454]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3355456 'move' call_tmp[3355454](3355459 call ==[52746] size[3355442] 0))
    val call_tmp[3355462]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3355464 'move' call_tmp[3355462] call_tmp[3355454])
    if call_tmp[3355462]
    {
      (3355472 call halt[88131] "attempt to allocate hashtable with size 0")
    }
    val callPostAlloc[3355475]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    (3355480 'end of statement')
    val call_tmp[3355481]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "maybe param" "temp"
    val default_arg_subloc[3356330]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3356334 'move' default_arg_subloc[3356330](3356332 call _ddata_allocate_noinit_default_subloc[3356313]))
    val default_arg_haltOnOom[3356356]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[3356364]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (3355483 'move' call_tmp[3355481](3355486 call _ddata_allocate_noinit[3356184] size[3355442] _formal_tmp_out_callPostAlloc[3356364] default_arg_subloc[3356330] 1))
    (3358758 'move' callPostAlloc[3355475] _formal_tmp_out_callPostAlloc[3356364])
    val ret[3355490]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead at end of block" "insert auto destroy"
    (3355492 'move' ret[3355490](3356790 call chpl__initCopy[3356793] call_tmp[3355481] 0))
    (3355495 'end of statement')
    val call_tmp[3355496]:ArrayInit[66987] "dead at end of block" "maybe param" "temp"
    (3355498 'move' call_tmp[3355496](3355501 call init_elts_method[3356814] size[3355442]))
    val initMethod[3355504]:ArrayInit[66987] "dead at end of block" "insert auto destroy"
    (3355506 'move' initMethod[3355504] call_tmp[3355496])
    (3355509 'end of statement')
    val call_tmp[3355510]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3355512 'move' call_tmp[3355510](3355515 call _ddata_sizeof_element[3356393] ret[3355490]))
    const sizeofElement[3355517]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (3355519 'move' sizeofElement[3355517] call_tmp[3355510])
    (3355522 'end of statement' callPostAlloc[3355475] ret[3355490])
    {
      val tmp[3355547]:ArrayInit[66987] "dead after last mention" "expr temp" "maybe param" "temp"
      (3355549 'move' tmp[3355547] initMethod[3355504])
      val call_tmp[3355552]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3355554 'move' call_tmp[3355552](3355557 call ==[1794690] tmp[3355547] noInit[66979]))
      val call_tmp[3355560]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3355562 'move' call_tmp[3355560] call_tmp[3355552])
      if call_tmp[3355560]
      {
      }
      {
        val call_tmp[3355570]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3355572 'move' call_tmp[3355570](3355575 call ==[1794690] tmp[3355547] serialInit[66981]))
        val call_tmp[3355578]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3355580 'move' call_tmp[3355578] call_tmp[3355570])
        if call_tmp[3355578]
        {
          {
            val _indexOfInterest[3355588]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[3355590]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
            val call_tmp[3355592]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
            (3355594 'move' call_tmp[3355592](3355597 call _allSlots[265237] size[3355442]))
            (3355599 'move' _iterator[3355590](3355602 call _getIterator[1946146] call_tmp[3355592]))
            Defer
            {
              {
                (3355606 call _freeIterator[1947321] _iterator[3355590])
              }
            }
            ForLoop[3355615]
            {
              const slot[3355618]:int(64)[10] "const" "index var" "insert auto destroy"
              (3355620 'end of statement')
              (3355621 'move' slot[3355618] _indexOfInterest[3355588])
              (3355624 'end of statement' slot[3355618])
              {
                ref call_tmp[3355627]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
                (3355629 'move' call_tmp[3355627](3355632 call this[3358341] ret[3355490] slot[3355618]))
                val call_tmp[3355634]:c_ptr(chpl_TableEntry(string,owned ModuleSpecification?))[3358419] "dead after last mention" "expr temp" "maybe param" "temp"
                (3355636 'move' call_tmp[3355634](3355639 call ptrTo[3358373] call_tmp[3355627]))
                val call_tmp[3355641]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[3355648]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[3355656]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (3355658 'move' call_tmp[3355656](3355664 call safeCast[1818482] sizeofElement[3355517]))
                val coerce_tmp[3358444]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3358450 'move' coerce_tmp[3358444](3358446 'cast' c_ptr(void)[1465614] call_tmp[3355634]))
                val _return_tmp_[5468847]:c_ptr(void)[1465614] "dead after last mention" "temp"
                (5468849 'move' _return_tmp_[5468847](3355667 call memset[1947508] coerce_tmp[3358444] 0 call_tmp[3355656]))
                (3355671 'end of statement' ret[3355490] slot[3355618] sizeofElement[3355517])
              }
              label _continueLabel[3355675]
              _indexOfInterest[3355588]
              _iterator[3355590]
            }
            label _breakLabel[3355677]
          }
        }
        {
          val call_tmp[3355680]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3355682 'move' call_tmp[3355680](3355685 call ==[1794690] tmp[3355547] parallelInit[66983]))
          val call_tmp[3355688]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3355690 'move' call_tmp[3355688] call_tmp[3355680])
          if call_tmp[3355688]
          {
            val call_tmp[3355704]:bool[19] "dead after last mention" "maybe param" "maybe type" "temp"
            val default_arg_hasOffsets[3358505]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            val chpl__staticAutoLocalCheckSym[3355712]:bool[19] "dead at end of block" "param" "temp"
            {
              Forall[3356000] {
                induction variables:
                  
                  const slot[3356001]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                iterated expressions:
                  (3358521 call _allSlots[1946294] size[3355442])
                shadow variables:
                  INP_ret[3358533]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] parent-in intent outer var ret[3355490]
                    init block
                    {
                      (3358537 'move' INP_ret[3358533] ret[3355490])
                    }
                    deinit block
                    {
                    }
                  ret[3358529]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] 'const in' intent outer var ret[3355490]
                    init block
                    {
                      (3358541 'move' ret[3358529](3358547 call chpl__initCopy[3356793] INP_ret[3358533] 1))
                    }
                    deinit block
                    {
                      (3358545 call chpl__autoDestroy[3358551] ret[3358529])
                    }
                  INP_sizeofElement[3358569]:uint(64)[86] parent-in intent outer var sizeofElement[3355517]
                    init block
                    {
                      (3358573 'move' INP_sizeofElement[3358569] sizeofElement[3355517])
                    }
                    deinit block
                    {
                    }
                  sizeofElement[3358565]:uint(64)[86] 'const in' intent outer var sizeofElement[3355517]
                    init block
                    {
                      (3358577 'move' sizeofElement[3358565] INP_sizeofElement[3358569])
                    }
                    deinit block
                    {
                      (3358581 call chpl__autoDestroy[1949332] sizeofElement[3358565])
                    }
                other variables
                  val chpl__iterPAR[3358584]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
                  val chpl__parIter[3358585]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(3358589 call _getIterator[1949136] chpl__iterPAR[3358584])(3358592 call _freeIterator[1949375] chpl__parIter[3358585])
                  forall body
                {
                  ref call_tmp[3355952]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
                  (3355954 'move' call_tmp[3355952](3355957 call this[3358341] ret[3358529] slot[3356001]))
                  val call_tmp[3355959]:c_ptr(chpl_TableEntry(string,owned ModuleSpecification?))[3358419] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3355961 'move' call_tmp[3355959](3355964 call ptrTo[3358373] call_tmp[3355952]))
                  val call_tmp[3355966]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[3355973]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[3355981]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3355983 'move' call_tmp[3355981](3355989 call safeCast[1818482] sizeofElement[3358565]))
                  val coerce_tmp[3358616]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3358622 'move' coerce_tmp[3358616](3358618 'cast' c_ptr(void)[1465614] call_tmp[3355959]))
                  val _return_tmp_[5468851]:c_ptr(void)[1465614] "dead after last mention" "temp"
                  (5468853 'move' _return_tmp_[5468851](3355992 call memset[1947508] coerce_tmp[3358616] 0 call_tmp[3355981]))
                  (3355996 'end of statement' ret[3358529] slot[3356001] sizeofElement[3358565])
                }
              }
            }
            (3358517 'end of statement' ret[3355490] sizeofElement[3355517])
          }
          {
            val call_tmp[3356006]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3356008 'move' call_tmp[3356006](3356011 call ==[1794690] tmp[3355547] gpuInit[66985]))
            val call_tmp[3356014]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3356016 'move' call_tmp[3356014] call_tmp[3356006])
            if call_tmp[3356014]
            {
              val call_tmp[3356026]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3356034]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              {
                (3356137 call halt[88131] "ArrayInit.gpuInit should not have been selected")
              }
              (3358635 'end of statement' ret[3355490] sizeofElement[3355517])
            }
            {
              (3356142 call halt[1832970] "ArrayInit." initMethod[3355504] " should have been implemented")
              (3356146 'end of statement' initMethod[3355504])
            }
          }
        }
      }
    }
    val call_tmp[3356152]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3356154 'move' call_tmp[3356152] callPostAlloc[3355475])
    if call_tmp[3356152]
    {
      (3356162 call _ddata_allocate_postalloc[3358640] ret[3355490] size[3355442])
      (3356165 'end of statement' ret[3355490])
    }
    (3356168 'move' ret[3355446] ret[3355490])
    gotoReturn _end__allocateData[3356176] _end__allocateData[3356176]
    label _end__allocateData[3356176]
    (3356178 return ret[3355446])
  }
  function _allocateData[3392574](const in arg size[3392576]:int(64)[10]) : _ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[5480033]:chpl_TableEntry(string,shared Module(real(32)))[3392238] "temp"
    val ret[3392580]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "RVV" "temp"
    val call_tmp[3392588]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3392590 'move' call_tmp[3392588](3392593 call ==[52746] size[3392576] 0))
    val call_tmp[3392596]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3392598 'move' call_tmp[3392596] call_tmp[3392588])
    if call_tmp[3392596]
    {
      (3392606 call halt[88131] "attempt to allocate hashtable with size 0")
    }
    val callPostAlloc[3392609]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    (3392614 'end of statement')
    val call_tmp[3392615]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "maybe param" "temp"
    val default_arg_subloc[3393464]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3393468 'move' default_arg_subloc[3393464](3393466 call _ddata_allocate_noinit_default_subloc[3393447]))
    val default_arg_haltOnOom[3393490]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[3393498]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (3392617 'move' call_tmp[3392615](3392620 call _ddata_allocate_noinit[3393318] size[3392576] _formal_tmp_out_callPostAlloc[3393498] default_arg_subloc[3393464] 1))
    (3395892 'move' callPostAlloc[3392609] _formal_tmp_out_callPostAlloc[3393498])
    val ret[3392624]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "insert auto destroy"
    (3392626 'move' ret[3392624](3393924 call chpl__initCopy[3393927] call_tmp[3392615] 0))
    (3392629 'end of statement')
    val call_tmp[3392630]:ArrayInit[66987] "dead at end of block" "maybe param" "temp"
    (3392632 'move' call_tmp[3392630](3392635 call init_elts_method[3393948] size[3392576]))
    val initMethod[3392638]:ArrayInit[66987] "dead at end of block" "insert auto destroy"
    (3392640 'move' initMethod[3392638] call_tmp[3392630])
    (3392643 'end of statement')
    val call_tmp[3392644]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3392646 'move' call_tmp[3392644](3392649 call _ddata_sizeof_element[3393527] ret[3392624]))
    const sizeofElement[3392651]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (3392653 'move' sizeofElement[3392651] call_tmp[3392644])
    (3392656 'end of statement' callPostAlloc[3392609] ret[3392624])
    {
      val tmp[3392681]:ArrayInit[66987] "dead after last mention" "expr temp" "maybe param" "temp"
      (3392683 'move' tmp[3392681] initMethod[3392638])
      val call_tmp[3392686]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3392688 'move' call_tmp[3392686](3392691 call ==[1794690] tmp[3392681] noInit[66979]))
      val call_tmp[3392694]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3392696 'move' call_tmp[3392694] call_tmp[3392686])
      if call_tmp[3392694]
      {
      }
      {
        val call_tmp[3392704]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3392706 'move' call_tmp[3392704](3392709 call ==[1794690] tmp[3392681] serialInit[66981]))
        val call_tmp[3392712]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3392714 'move' call_tmp[3392712] call_tmp[3392704])
        if call_tmp[3392712]
        {
          {
            val _indexOfInterest[3392722]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[3392724]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
            val call_tmp[3392726]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
            (3392728 'move' call_tmp[3392726](3392731 call _allSlots[265237] size[3392576]))
            (3392733 'move' _iterator[3392724](3392736 call _getIterator[1946146] call_tmp[3392726]))
            Defer
            {
              {
                (3392740 call _freeIterator[1947321] _iterator[3392724])
              }
            }
            ForLoop[3392749]
            {
              const slot[3392752]:int(64)[10] "const" "index var" "insert auto destroy"
              (3392754 'end of statement')
              (3392755 'move' slot[3392752] _indexOfInterest[3392722])
              (3392758 'end of statement' slot[3392752])
              {
                ref call_tmp[3392761]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
                (3392763 'move' call_tmp[3392761](3392766 call this[3395475] ret[3392624] slot[3392752]))
                val call_tmp[3392768]:c_ptr(chpl_TableEntry(string,shared Module(real(32))))[3395553] "dead after last mention" "expr temp" "maybe param" "temp"
                (3392770 'move' call_tmp[3392768](3392773 call ptrTo[3395507] call_tmp[3392761]))
                val call_tmp[3392775]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[3392782]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[3392790]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (3392792 'move' call_tmp[3392790](3392798 call safeCast[1818482] sizeofElement[3392651]))
                val coerce_tmp[3395578]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3395584 'move' coerce_tmp[3395578](3395580 'cast' c_ptr(void)[1465614] call_tmp[3392768]))
                val _return_tmp_[5468883]:c_ptr(void)[1465614] "dead after last mention" "temp"
                (5468885 'move' _return_tmp_[5468883](3392801 call memset[1947508] coerce_tmp[3395578] 0 call_tmp[3392790]))
                (3392805 'end of statement' ret[3392624] slot[3392752] sizeofElement[3392651])
              }
              label _continueLabel[3392809]
              _indexOfInterest[3392722]
              _iterator[3392724]
            }
            label _breakLabel[3392811]
          }
        }
        {
          val call_tmp[3392814]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3392816 'move' call_tmp[3392814](3392819 call ==[1794690] tmp[3392681] parallelInit[66983]))
          val call_tmp[3392822]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3392824 'move' call_tmp[3392822] call_tmp[3392814])
          if call_tmp[3392822]
          {
            val call_tmp[3392838]:bool[19] "dead after last mention" "maybe param" "maybe type" "temp"
            val default_arg_hasOffsets[3395639]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            val chpl__staticAutoLocalCheckSym[3392846]:bool[19] "dead at end of block" "param" "temp"
            {
              Forall[3393134] {
                induction variables:
                  
                  const slot[3393135]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                iterated expressions:
                  (3395655 call _allSlots[1946294] size[3392576])
                shadow variables:
                  INP_ret[3395667]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] parent-in intent outer var ret[3392624]
                    init block
                    {
                      (3395671 'move' INP_ret[3395667] ret[3392624])
                    }
                    deinit block
                    {
                    }
                  ret[3395663]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] 'const in' intent outer var ret[3392624]
                    init block
                    {
                      (3395675 'move' ret[3395663](3395681 call chpl__initCopy[3393927] INP_ret[3395667] 1))
                    }
                    deinit block
                    {
                      (3395679 call chpl__autoDestroy[3395685] ret[3395663])
                    }
                  INP_sizeofElement[3395703]:uint(64)[86] parent-in intent outer var sizeofElement[3392651]
                    init block
                    {
                      (3395707 'move' INP_sizeofElement[3395703] sizeofElement[3392651])
                    }
                    deinit block
                    {
                    }
                  sizeofElement[3395699]:uint(64)[86] 'const in' intent outer var sizeofElement[3392651]
                    init block
                    {
                      (3395711 'move' sizeofElement[3395699] INP_sizeofElement[3395703])
                    }
                    deinit block
                    {
                      (3395715 call chpl__autoDestroy[1949332] sizeofElement[3395699])
                    }
                other variables
                  val chpl__iterPAR[3395718]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
                  val chpl__parIter[3395719]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(3395723 call _getIterator[1949136] chpl__iterPAR[3395718])(3395726 call _freeIterator[1949375] chpl__parIter[3395719])
                  forall body
                {
                  ref call_tmp[3393086]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
                  (3393088 'move' call_tmp[3393086](3393091 call this[3395475] ret[3395663] slot[3393135]))
                  val call_tmp[3393093]:c_ptr(chpl_TableEntry(string,shared Module(real(32))))[3395553] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3393095 'move' call_tmp[3393093](3393098 call ptrTo[3395507] call_tmp[3393086]))
                  val call_tmp[3393100]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[3393107]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[3393115]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3393117 'move' call_tmp[3393115](3393123 call safeCast[1818482] sizeofElement[3395699]))
                  val coerce_tmp[3395750]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3395756 'move' coerce_tmp[3395750](3395752 'cast' c_ptr(void)[1465614] call_tmp[3393093]))
                  val _return_tmp_[5468887]:c_ptr(void)[1465614] "dead after last mention" "temp"
                  (5468889 'move' _return_tmp_[5468887](3393126 call memset[1947508] coerce_tmp[3395750] 0 call_tmp[3393115]))
                  (3393130 'end of statement' ret[3395663] slot[3393135] sizeofElement[3395699])
                }
              }
            }
            (3395651 'end of statement' ret[3392624] sizeofElement[3392651])
          }
          {
            val call_tmp[3393140]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3393142 'move' call_tmp[3393140](3393145 call ==[1794690] tmp[3392681] gpuInit[66985]))
            val call_tmp[3393148]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3393150 'move' call_tmp[3393148] call_tmp[3393140])
            if call_tmp[3393148]
            {
              val call_tmp[3393160]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3393168]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              {
                (3393271 call halt[88131] "ArrayInit.gpuInit should not have been selected")
              }
              (3395769 'end of statement' ret[3392624] sizeofElement[3392651])
            }
            {
              (3393276 call halt[1832970] "ArrayInit." initMethod[3392638] " should have been implemented")
              (3393280 'end of statement' initMethod[3392638])
            }
          }
        }
      }
    }
    val call_tmp[3393286]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3393288 'move' call_tmp[3393286] callPostAlloc[3392609])
    if call_tmp[3393286]
    {
      (3393296 call _ddata_allocate_postalloc[3395774] ret[3392624] size[3392576])
      (3393299 'end of statement' ret[3392624])
    }
    (3393302 'move' ret[3392580] ret[3392624])
    gotoReturn _end__allocateData[3393310] _end__allocateData[3393310]
    label _end__allocateData[3393310]
    (3393312 return ret[3392580])
  }
  function _allocateData[3829167](const in arg size[3829169]:int(64)[10]) : _ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[5480530]:chpl_TableEntry(string,Module(real(64)))[3405271] "temp"
    val ret[3829173]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "RVV" "temp"
    val call_tmp[3829181]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3829183 'move' call_tmp[3829181](3829186 call ==[52746] size[3829169] 0))
    val call_tmp[3829189]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3829191 'move' call_tmp[3829189] call_tmp[3829181])
    if call_tmp[3829189]
    {
      (3829199 call halt[88131] "attempt to allocate hashtable with size 0")
    }
    val callPostAlloc[3829202]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    (3829207 'end of statement')
    val call_tmp[3829208]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "maybe param" "temp"
    val default_arg_subloc[3830057]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3830061 'move' default_arg_subloc[3830057](3830059 call _ddata_allocate_noinit_default_subloc[3830040]))
    val default_arg_haltOnOom[3830083]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[3830091]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (3829210 'move' call_tmp[3829208](3829213 call _ddata_allocate_noinit[3829911] size[3829169] _formal_tmp_out_callPostAlloc[3830091] default_arg_subloc[3830057] 1))
    (3832485 'move' callPostAlloc[3829202] _formal_tmp_out_callPostAlloc[3830091])
    val ret[3829217]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead at end of block" "insert auto destroy"
    (3829219 'move' ret[3829217](3830517 call chpl__initCopy[3830520] call_tmp[3829208] 0))
    (3829222 'end of statement')
    val call_tmp[3829223]:ArrayInit[66987] "dead at end of block" "maybe param" "temp"
    (3829225 'move' call_tmp[3829223](3829228 call init_elts_method[3830541] size[3829169]))
    val initMethod[3829231]:ArrayInit[66987] "dead at end of block" "insert auto destroy"
    (3829233 'move' initMethod[3829231] call_tmp[3829223])
    (3829236 'end of statement')
    val call_tmp[3829237]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3829239 'move' call_tmp[3829237](3829242 call _ddata_sizeof_element[3830120] ret[3829217]))
    const sizeofElement[3829244]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (3829246 'move' sizeofElement[3829244] call_tmp[3829237])
    (3829249 'end of statement' callPostAlloc[3829202] ret[3829217])
    {
      val tmp[3829274]:ArrayInit[66987] "dead after last mention" "expr temp" "maybe param" "temp"
      (3829276 'move' tmp[3829274] initMethod[3829231])
      val call_tmp[3829279]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3829281 'move' call_tmp[3829279](3829284 call ==[1794690] tmp[3829274] noInit[66979]))
      val call_tmp[3829287]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3829289 'move' call_tmp[3829287] call_tmp[3829279])
      if call_tmp[3829287]
      {
      }
      {
        val call_tmp[3829297]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3829299 'move' call_tmp[3829297](3829302 call ==[1794690] tmp[3829274] serialInit[66981]))
        val call_tmp[3829305]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3829307 'move' call_tmp[3829305] call_tmp[3829297])
        if call_tmp[3829305]
        {
          {
            val _indexOfInterest[3829315]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[3829317]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
            val call_tmp[3829319]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
            (3829321 'move' call_tmp[3829319](3829324 call _allSlots[265237] size[3829169]))
            (3829326 'move' _iterator[3829317](3829329 call _getIterator[1946146] call_tmp[3829319]))
            Defer
            {
              {
                (3829333 call _freeIterator[1947321] _iterator[3829317])
              }
            }
            ForLoop[3829342]
            {
              const slot[3829345]:int(64)[10] "const" "index var" "insert auto destroy"
              (3829347 'end of statement')
              (3829348 'move' slot[3829345] _indexOfInterest[3829315])
              (3829351 'end of statement' slot[3829345])
              {
                ref call_tmp[3829354]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
                (3829356 'move' call_tmp[3829354](3829359 call this[3832068] ret[3829217] slot[3829345]))
                val call_tmp[3829361]:c_ptr(chpl_TableEntry(string,Module(real(64))))[3832146] "dead after last mention" "expr temp" "maybe param" "temp"
                (3829363 'move' call_tmp[3829361](3829366 call ptrTo[3832100] call_tmp[3829354]))
                val call_tmp[3829368]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[3829375]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[3829383]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (3829385 'move' call_tmp[3829383](3829391 call safeCast[1818482] sizeofElement[3829244]))
                val coerce_tmp[3832171]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3832177 'move' coerce_tmp[3832171](3832173 'cast' c_ptr(void)[1465614] call_tmp[3829361]))
                val _return_tmp_[5468975]:c_ptr(void)[1465614] "dead after last mention" "temp"
                (5468977 'move' _return_tmp_[5468975](3829394 call memset[1947508] coerce_tmp[3832171] 0 call_tmp[3829383]))
                (3829398 'end of statement' ret[3829217] slot[3829345] sizeofElement[3829244])
              }
              label _continueLabel[3829402]
              _indexOfInterest[3829315]
              _iterator[3829317]
            }
            label _breakLabel[3829404]
          }
        }
        {
          val call_tmp[3829407]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3829409 'move' call_tmp[3829407](3829412 call ==[1794690] tmp[3829274] parallelInit[66983]))
          val call_tmp[3829415]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3829417 'move' call_tmp[3829415] call_tmp[3829407])
          if call_tmp[3829415]
          {
            val call_tmp[3829431]:bool[19] "dead after last mention" "maybe param" "maybe type" "temp"
            val default_arg_hasOffsets[3832232]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            val chpl__staticAutoLocalCheckSym[3829439]:bool[19] "dead at end of block" "param" "temp"
            {
              Forall[3829727] {
                induction variables:
                  
                  const slot[3829728]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                iterated expressions:
                  (3832248 call _allSlots[1946294] size[3829169])
                shadow variables:
                  INP_ret[3832260]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] parent-in intent outer var ret[3829217]
                    init block
                    {
                      (3832264 'move' INP_ret[3832260] ret[3829217])
                    }
                    deinit block
                    {
                    }
                  ret[3832256]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] 'const in' intent outer var ret[3829217]
                    init block
                    {
                      (3832268 'move' ret[3832256](3832274 call chpl__initCopy[3830520] INP_ret[3832260] 1))
                    }
                    deinit block
                    {
                      (3832272 call chpl__autoDestroy[3832278] ret[3832256])
                    }
                  INP_sizeofElement[3832296]:uint(64)[86] parent-in intent outer var sizeofElement[3829244]
                    init block
                    {
                      (3832300 'move' INP_sizeofElement[3832296] sizeofElement[3829244])
                    }
                    deinit block
                    {
                    }
                  sizeofElement[3832292]:uint(64)[86] 'const in' intent outer var sizeofElement[3829244]
                    init block
                    {
                      (3832304 'move' sizeofElement[3832292] INP_sizeofElement[3832296])
                    }
                    deinit block
                    {
                      (3832308 call chpl__autoDestroy[1949332] sizeofElement[3832292])
                    }
                other variables
                  val chpl__iterPAR[3832311]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
                  val chpl__parIter[3832312]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(3832316 call _getIterator[1949136] chpl__iterPAR[3832311])(3832319 call _freeIterator[1949375] chpl__parIter[3832312])
                  forall body
                {
                  ref call_tmp[3829679]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
                  (3829681 'move' call_tmp[3829679](3829684 call this[3832068] ret[3832256] slot[3829728]))
                  val call_tmp[3829686]:c_ptr(chpl_TableEntry(string,Module(real(64))))[3832146] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3829688 'move' call_tmp[3829686](3829691 call ptrTo[3832100] call_tmp[3829679]))
                  val call_tmp[3829693]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[3829700]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[3829708]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3829710 'move' call_tmp[3829708](3829716 call safeCast[1818482] sizeofElement[3832292]))
                  val coerce_tmp[3832343]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3832349 'move' coerce_tmp[3832343](3832345 'cast' c_ptr(void)[1465614] call_tmp[3829686]))
                  val _return_tmp_[5468979]:c_ptr(void)[1465614] "dead after last mention" "temp"
                  (5468981 'move' _return_tmp_[5468979](3829719 call memset[1947508] coerce_tmp[3832343] 0 call_tmp[3829708]))
                  (3829723 'end of statement' ret[3832256] slot[3829728] sizeofElement[3832292])
                }
              }
            }
            (3832244 'end of statement' ret[3829217] sizeofElement[3829244])
          }
          {
            val call_tmp[3829733]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3829735 'move' call_tmp[3829733](3829738 call ==[1794690] tmp[3829274] gpuInit[66985]))
            val call_tmp[3829741]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3829743 'move' call_tmp[3829741] call_tmp[3829733])
            if call_tmp[3829741]
            {
              val call_tmp[3829753]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3829761]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              {
                (3829864 call halt[88131] "ArrayInit.gpuInit should not have been selected")
              }
              (3832362 'end of statement' ret[3829217] sizeofElement[3829244])
            }
            {
              (3829869 call halt[1832970] "ArrayInit." initMethod[3829231] " should have been implemented")
              (3829873 'end of statement' initMethod[3829231])
            }
          }
        }
      }
    }
    val call_tmp[3829879]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3829881 'move' call_tmp[3829879] callPostAlloc[3829202])
    if call_tmp[3829879]
    {
      (3829889 call _ddata_allocate_postalloc[3832367] ret[3829217] size[3829169])
      (3829892 'end of statement' ret[3829217])
    }
    (3829895 'move' ret[3829173] ret[3829217])
    gotoReturn _end__allocateData[3829903] _end__allocateData[3829903]
    label _end__allocateData[3829903]
    (3829905 return ret[3829173])
  }
  function _allocateData[4305727](const in arg size[4305729]:int(64)[10]) : _ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[5480808]:chpl_TableEntry(string,shared Module(real(64)))[3855424] "temp"
    val ret[4305733]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "RVV" "temp"
    val call_tmp[4305741]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4305743 'move' call_tmp[4305741](4305746 call ==[52746] size[4305729] 0))
    val call_tmp[4305749]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4305751 'move' call_tmp[4305749] call_tmp[4305741])
    if call_tmp[4305749]
    {
      (4305759 call halt[88131] "attempt to allocate hashtable with size 0")
    }
    val callPostAlloc[4305762]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    (4305767 'end of statement')
    val call_tmp[4305768]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "maybe param" "temp"
    val default_arg_subloc[4306617]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (4306621 'move' default_arg_subloc[4306617](4306619 call _ddata_allocate_noinit_default_subloc[4306600]))
    val default_arg_haltOnOom[4306643]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[4306651]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (4305770 'move' call_tmp[4305768](4305773 call _ddata_allocate_noinit[4306471] size[4305729] _formal_tmp_out_callPostAlloc[4306651] default_arg_subloc[4306617] 1))
    (4309045 'move' callPostAlloc[4305762] _formal_tmp_out_callPostAlloc[4306651])
    val ret[4305777]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead at end of block" "insert auto destroy"
    (4305779 'move' ret[4305777](4307077 call chpl__initCopy[4307080] call_tmp[4305768] 0))
    (4305782 'end of statement')
    val call_tmp[4305783]:ArrayInit[66987] "dead at end of block" "maybe param" "temp"
    (4305785 'move' call_tmp[4305783](4305788 call init_elts_method[4307101] size[4305729]))
    val initMethod[4305791]:ArrayInit[66987] "dead at end of block" "insert auto destroy"
    (4305793 'move' initMethod[4305791] call_tmp[4305783])
    (4305796 'end of statement')
    val call_tmp[4305797]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (4305799 'move' call_tmp[4305797](4305802 call _ddata_sizeof_element[4306680] ret[4305777]))
    const sizeofElement[4305804]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (4305806 'move' sizeofElement[4305804] call_tmp[4305797])
    (4305809 'end of statement' callPostAlloc[4305762] ret[4305777])
    {
      val tmp[4305834]:ArrayInit[66987] "dead after last mention" "expr temp" "maybe param" "temp"
      (4305836 'move' tmp[4305834] initMethod[4305791])
      val call_tmp[4305839]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4305841 'move' call_tmp[4305839](4305844 call ==[1794690] tmp[4305834] noInit[66979]))
      val call_tmp[4305847]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4305849 'move' call_tmp[4305847] call_tmp[4305839])
      if call_tmp[4305847]
      {
      }
      {
        val call_tmp[4305857]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (4305859 'move' call_tmp[4305857](4305862 call ==[1794690] tmp[4305834] serialInit[66981]))
        val call_tmp[4305865]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (4305867 'move' call_tmp[4305865] call_tmp[4305857])
        if call_tmp[4305865]
        {
          {
            val _indexOfInterest[4305875]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[4305877]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
            val call_tmp[4305879]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
            (4305881 'move' call_tmp[4305879](4305884 call _allSlots[265237] size[4305729]))
            (4305886 'move' _iterator[4305877](4305889 call _getIterator[1946146] call_tmp[4305879]))
            Defer
            {
              {
                (4305893 call _freeIterator[1947321] _iterator[4305877])
              }
            }
            ForLoop[4305902]
            {
              const slot[4305905]:int(64)[10] "const" "index var" "insert auto destroy"
              (4305907 'end of statement')
              (4305908 'move' slot[4305905] _indexOfInterest[4305875])
              (4305911 'end of statement' slot[4305905])
              {
                ref call_tmp[4305914]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
                (4305916 'move' call_tmp[4305914](4305919 call this[4308628] ret[4305777] slot[4305905]))
                val call_tmp[4305921]:c_ptr(chpl_TableEntry(string,shared Module(real(64))))[4308706] "dead after last mention" "expr temp" "maybe param" "temp"
                (4305923 'move' call_tmp[4305921](4305926 call ptrTo[4308660] call_tmp[4305914]))
                val call_tmp[4305928]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[4305935]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[4305943]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (4305945 'move' call_tmp[4305943](4305951 call safeCast[1818482] sizeofElement[4305804]))
                val coerce_tmp[4308731]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (4308737 'move' coerce_tmp[4308731](4308733 'cast' c_ptr(void)[1465614] call_tmp[4305921]))
                val _return_tmp_[5469039]:c_ptr(void)[1465614] "dead after last mention" "temp"
                (5469041 'move' _return_tmp_[5469039](4305954 call memset[1947508] coerce_tmp[4308731] 0 call_tmp[4305943]))
                (4305958 'end of statement' ret[4305777] slot[4305905] sizeofElement[4305804])
              }
              label _continueLabel[4305962]
              _indexOfInterest[4305875]
              _iterator[4305877]
            }
            label _breakLabel[4305964]
          }
        }
        {
          val call_tmp[4305967]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (4305969 'move' call_tmp[4305967](4305972 call ==[1794690] tmp[4305834] parallelInit[66983]))
          val call_tmp[4305975]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (4305977 'move' call_tmp[4305975] call_tmp[4305967])
          if call_tmp[4305975]
          {
            val call_tmp[4305991]:bool[19] "dead after last mention" "maybe param" "maybe type" "temp"
            val default_arg_hasOffsets[4308792]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
            val chpl__staticAutoLocalCheckSym[4305999]:bool[19] "dead at end of block" "param" "temp"
            {
              Forall[4306287] {
                induction variables:
                  
                  const slot[4306288]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                iterated expressions:
                  (4308808 call _allSlots[1946294] size[4305729])
                shadow variables:
                  INP_ret[4308820]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] parent-in intent outer var ret[4305777]
                    init block
                    {
                      (4308824 'move' INP_ret[4308820] ret[4305777])
                    }
                    deinit block
                    {
                    }
                  ret[4308816]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] 'const in' intent outer var ret[4305777]
                    init block
                    {
                      (4308828 'move' ret[4308816](4308834 call chpl__initCopy[4307080] INP_ret[4308820] 1))
                    }
                    deinit block
                    {
                      (4308832 call chpl__autoDestroy[4308838] ret[4308816])
                    }
                  INP_sizeofElement[4308856]:uint(64)[86] parent-in intent outer var sizeofElement[4305804]
                    init block
                    {
                      (4308860 'move' INP_sizeofElement[4308856] sizeofElement[4305804])
                    }
                    deinit block
                    {
                    }
                  sizeofElement[4308852]:uint(64)[86] 'const in' intent outer var sizeofElement[4305804]
                    init block
                    {
                      (4308864 'move' sizeofElement[4308852] INP_sizeofElement[4308856])
                    }
                    deinit block
                    {
                      (4308868 call chpl__autoDestroy[1949332] sizeofElement[4308852])
                    }
                other variables
                  val chpl__iterPAR[4308871]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
                  val chpl__parIter[4308872]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4308876 call _getIterator[1949136] chpl__iterPAR[4308871])(4308879 call _freeIterator[1949375] chpl__parIter[4308872])
                  forall body
                {
                  ref call_tmp[4306239]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
                  (4306241 'move' call_tmp[4306239](4306244 call this[4308628] ret[4308816] slot[4306288]))
                  val call_tmp[4306246]:c_ptr(chpl_TableEntry(string,shared Module(real(64))))[4308706] "dead after last mention" "expr temp" "maybe param" "temp"
                  (4306248 'move' call_tmp[4306246](4306251 call ptrTo[4308660] call_tmp[4306239]))
                  val call_tmp[4306253]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[4306260]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[4306268]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  (4306270 'move' call_tmp[4306268](4306276 call safeCast[1818482] sizeofElement[4308852]))
                  val coerce_tmp[4308903]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (4308909 'move' coerce_tmp[4308903](4308905 'cast' c_ptr(void)[1465614] call_tmp[4306246]))
                  val _return_tmp_[5469043]:c_ptr(void)[1465614] "dead after last mention" "temp"
                  (5469045 'move' _return_tmp_[5469043](4306279 call memset[1947508] coerce_tmp[4308903] 0 call_tmp[4306268]))
                  (4306283 'end of statement' ret[4308816] slot[4306288] sizeofElement[4308852])
                }
              }
            }
            (4308804 'end of statement' ret[4305777] sizeofElement[4305804])
          }
          {
            val call_tmp[4306293]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4306295 'move' call_tmp[4306293](4306298 call ==[1794690] tmp[4305834] gpuInit[66985]))
            val call_tmp[4306301]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4306303 'move' call_tmp[4306301] call_tmp[4306293])
            if call_tmp[4306301]
            {
              val call_tmp[4306313]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[4306321]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              {
                (4306424 call halt[88131] "ArrayInit.gpuInit should not have been selected")
              }
              (4308922 'end of statement' ret[4305777] sizeofElement[4305804])
            }
            {
              (4306429 call halt[1832970] "ArrayInit." initMethod[4305791] " should have been implemented")
              (4306433 'end of statement' initMethod[4305791])
            }
          }
        }
      }
    }
    val call_tmp[4306439]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4306441 'move' call_tmp[4306439] callPostAlloc[4305762])
    if call_tmp[4306439]
    {
      (4306449 call _ddata_allocate_postalloc[4308927] ret[4305777] size[4305729])
      (4306452 'end of statement' ret[4305777])
    }
    (4306455 'move' ret[4305733] ret[4305777])
    gotoReturn _end__allocateData[4306463] _end__allocateData[4306463]
    label _end__allocateData[4306463]
    (4306465 return ret[4305733])
  }
  function _freeData[3261886](const in arg data[3261888]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559], const in arg size[3261890]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3261896]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3261898 'move' call_tmp[3261896](3261901 call !=[3261921] data[3261888] nil[32]))
    val call_tmp[3261904]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3261906 'move' call_tmp[3261904] call_tmp[3261896])
    if call_tmp[3261904]
    {
      (3261914 call _ddata_free[3261949] data[3261888] size[3261890])
    }
    (3261918 return _void[46])
  }
  function _freeData[3308114](const in arg data[3308116]:_ddata(chpl_TableEntry(string,int(64)))[3288904], const in arg size[3308118]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3308124]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3308126 'move' call_tmp[3308124](3308129 call !=[3308149] data[3308116] nil[32]))
    val call_tmp[3308132]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3308134 'move' call_tmp[3308132] call_tmp[3308124])
    if call_tmp[3308132]
    {
      (3308142 call _ddata_free[3308177] data[3308116] size[3308118])
    }
    (3308146 return _void[46])
  }
  function _freeData[3348480](const in arg data[3348482]:_ddata(chpl_TableEntry(string,string))[3283496], const in arg size[3348484]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3348490]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3348492 'move' call_tmp[3348490](3348495 call !=[3348515] data[3348482] nil[32]))
    val call_tmp[3348498]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3348500 'move' call_tmp[3348498] call_tmp[3348490])
    if call_tmp[3348498]
    {
      (3348508 call _ddata_free[3348543] data[3348482] size[3348484])
    }
    (3348512 return _void[46])
  }
  function _freeData[3366161](const in arg data[3366163]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796], const in arg size[3366165]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3366171]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3366173 'move' call_tmp[3366171](3366176 call !=[3366196] data[3366163] nil[32]))
    val call_tmp[3366179]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3366181 'move' call_tmp[3366179] call_tmp[3366171])
    if call_tmp[3366179]
    {
      (3366189 call _ddata_free[3366224] data[3366163] size[3366165])
    }
    (3366193 return _void[46])
  }
  function _freeData[3404078](const in arg data[3404080]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261], const in arg size[3404082]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3404088]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3404090 'move' call_tmp[3404088](3404093 call !=[3404113] data[3404080] nil[32]))
    val call_tmp[3404096]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3404098 'move' call_tmp[3404096] call_tmp[3404088])
    if call_tmp[3404096]
    {
      (3404106 call _ddata_free[3404141] data[3404080] size[3404082])
    }
    (3404110 return _void[46])
  }
  function _freeData[3863627](const in arg data[3863629]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294], const in arg size[3863631]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3863637]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3863639 'move' call_tmp[3863637](3863642 call !=[3863662] data[3863629] nil[32]))
    val call_tmp[3863645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3863647 'move' call_tmp[3863645] call_tmp[3863637])
    if call_tmp[3863645]
    {
      (3863655 call _ddata_free[3863690] data[3863629] size[3863631])
    }
    (3863659 return _void[46])
  }
  function _freeData[4313706](const in arg data[4313708]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447], const in arg size[4313710]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[4313716]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4313718 'move' call_tmp[4313716](4313721 call !=[4313741] data[4313708] nil[32]))
    val call_tmp[4313724]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4313726 'move' call_tmp[4313724] call_tmp[4313716])
    if call_tmp[4313724]
    {
      (4313734 call _ddata_free[4313769] data[4313708] size[4313710])
    }
    (4313738 return _void[46])
  }
  function _deinitSlot[3262551](ref arg aSlot[3262553]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3262574]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3262581]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3262590]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (3262592 'move' call_tmp[3262590](3262595 call key[3259256] aSlot[3262553]))
      (3262599 call chpl__autoDestroy[3262688] call_tmp[3262590])
    }
    (3262705 'end of statement')
    val call_tmp[3262617]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3262624]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3262738 'end of statement')
    (3262645 return _void[46])
  }
  function _deinitSlot[3308781](ref arg aSlot[3308783]:_ref(chpl_TableEntry(string,int(64)))[3288890]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3308804]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3308811]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3308820]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (3308822 'move' call_tmp[3308820](3308825 call key[3306645] aSlot[3308783]))
      (3308829 call chpl__autoDestroy[3262688] call_tmp[3308820])
    }
    (3308882 'end of statement')
    val call_tmp[3308847]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3308854]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3308915 'end of statement')
    (3308875 return _void[46])
  }
  function _deinitSlot[3350531](ref arg aSlot[3350533]:_ref(chpl_TableEntry(string,string))[3283482]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3350554]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3350561]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3350570]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (3350572 'move' call_tmp[3350570](3350575 call key[3345732] aSlot[3350533]))
      (3350579 call chpl__autoDestroy[3262688] call_tmp[3350570])
    }
    (3350632 'end of statement')
    val call_tmp[3350597]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3350604]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3350613]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (3350615 'move' call_tmp[3350613](3350618 call val[3345762] aSlot[3350533]))
      (3350622 call chpl__autoDestroy[3262688] call_tmp[3350613])
    }
    (3350639 'end of statement')
    (3350625 return _void[46])
  }
  function _deinitSlot[3373527](ref arg aSlot[3373529]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3373550]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3373557]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3373566]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (3373568 'move' call_tmp[3373566](3373571 call key[3360817] aSlot[3373529]))
      (3373575 call chpl__autoDestroy[3262688] call_tmp[3373566])
    }
    (3373628 'end of statement')
    val call_tmp[3373593]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3373600]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3373609]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
      (3373611 'move' call_tmp[3373609](3373614 call val[3360847] aSlot[3373529]))
      (3373618 call chpl__autoDestroy[3373663] call_tmp[3373609])
    }
    (3373661 'end of statement')
    (3373621 return _void[46])
  }
  function _deinitSlot[3404771](ref arg aSlot[3404773]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3404794]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3404801]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3404810]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (3404812 'move' call_tmp[3404810](3404815 call key[3402607] aSlot[3404773]))
      (3404819 call chpl__autoDestroy[3262688] call_tmp[3404810])
    }
    (3404872 'end of statement')
    val call_tmp[3404837]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3404844]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3404853]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
      (3404855 'move' call_tmp[3404853](3404858 call val[3403754] aSlot[3404773]))
      (3404862 call chpl__autoDestroy[3404907] call_tmp[3404853])
    }
    (3404905 'end of statement')
    (3404865 return _void[46])
  }
  function _deinitSlot[3864292](ref arg aSlot[3864294]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[3864315]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3864322]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[3864331]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (3864333 'move' call_tmp[3864331](3864336 call key[3862156] aSlot[3864294]))
      (3864340 call chpl__autoDestroy[3262688] call_tmp[3864331])
    }
    (3864393 'end of statement')
    val call_tmp[3864358]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3864365]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3864426 'end of statement')
    (3864386 return _void[46])
  }
  function _deinitSlot[4314620](ref arg aSlot[4314622]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val call_tmp[4314643]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4314650]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[4314659]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (4314661 'move' call_tmp[4314659](4314664 call key[4310201] aSlot[4314622]))
      (4314668 call chpl__autoDestroy[3262688] call_tmp[4314659])
    }
    (4314721 'end of statement')
    val call_tmp[4314686]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4314693]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      ref call_tmp[4314702]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
      (4314704 'move' call_tmp[4314702](4314707 call val[4313382] aSlot[4314622]))
      (4314711 call chpl__autoDestroy[4242370] call_tmp[4314702])
    }
    (4314754 'end of statement')
    (4314714 return _void[46])
  }
  function _isSlotFull[4033661](const  ref arg aSlot[4033663]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545]) : bool[19] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[4033667]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4033675]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4033677 'move' call_tmp[4033675](4033680 call status[3259161] aSlot[4033663]))
    val call_tmp[4033683]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4033700]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4033704 'move' coerce_tmp[4033700](4033702 'deref' call_tmp[4033675]))
    (4033685 'move' call_tmp[4033683](4033688 call ==[3259199] coerce_tmp[4033700] full[264674]))
    (4033708 '=' ret[4033667] call_tmp[4033683])
    (4033696 return ret[4033667])
  }
  function _isSlotFull[4212676](const  ref arg aSlot[4212678]:_ref(chpl_TableEntry(string,string))[3283482]) : bool[19] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[4212682]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4212690]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4212692 'move' call_tmp[4212690](4212695 call status[3345291] aSlot[4212678]))
    val call_tmp[4212698]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4212715]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4212719 'move' coerce_tmp[4212715](4212717 'deref' call_tmp[4212690]))
    (4212700 'move' call_tmp[4212698](4212703 call ==[3259199] coerce_tmp[4212715] full[264674]))
    (4212723 '=' ret[4212682] call_tmp[4212698])
    (4212711 return ret[4212682])
  }
  function _isSlotFull[4216637](const  ref arg aSlot[4216639]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) : bool[19] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[4216643]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4216651]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4216653 'move' call_tmp[4216651](4216656 call status[3360376] aSlot[4216639]))
    val call_tmp[4216659]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4216676]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4216680 'move' coerce_tmp[4216676](4216678 'deref' call_tmp[4216651]))
    (4216661 'move' call_tmp[4216659](4216664 call ==[3259199] coerce_tmp[4216676] full[264674]))
    (4216684 '=' ret[4216643] call_tmp[4216659])
    (4216672 return ret[4216643])
  }
  function _isSlotFull[4218257](const  ref arg aSlot[4218259]:_ref(chpl_TableEntry(string,int(64)))[3288890]) : bool[19] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[4218263]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4218271]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4218273 'move' call_tmp[4218271](4218276 call status[3306607] aSlot[4218259]))
    val call_tmp[4218279]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4218296]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4218300 'move' coerce_tmp[4218296](4218298 'deref' call_tmp[4218271]))
    (4218281 'move' call_tmp[4218279](4218284 call ==[3259199] coerce_tmp[4218296] full[264674]))
    (4218304 '=' ret[4218263] call_tmp[4218279])
    (4218292 return ret[4218263])
  }
  function _isSlotFull[4235907](const  ref arg aSlot[4235909]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247]) : bool[19] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[4235913]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4235921]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4235923 'move' call_tmp[4235921](4235926 call status[3402569] aSlot[4235909]))
    val call_tmp[4235929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4235946]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4235950 'move' coerce_tmp[4235946](4235948 'deref' call_tmp[4235921]))
    (4235931 'move' call_tmp[4235929](4235934 call ==[3259199] coerce_tmp[4235946] full[264674]))
    (4235954 '=' ret[4235913] call_tmp[4235929])
    (4235942 return ret[4235913])
  }
  function _isSlotFull[4240357](const  ref arg aSlot[4240359]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280]) : bool[19] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[4240363]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4240371]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4240373 'move' call_tmp[4240371](4240376 call status[3862118] aSlot[4240359]))
    val call_tmp[4240379]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4240396]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4240400 'move' coerce_tmp[4240396](4240398 'deref' call_tmp[4240371]))
    (4240381 'move' call_tmp[4240379](4240384 call ==[3259199] coerce_tmp[4240396] full[264674]))
    (4240404 '=' ret[4240363] call_tmp[4240379])
    (4240392 return ret[4240363])
  }
  function _isSlotFull[4317617](const  ref arg aSlot[4317619]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433]) : bool[19] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[4317623]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4317631]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4317633 'move' call_tmp[4317631](4317636 call status[4310148] aSlot[4317619]))
    val call_tmp[4317639]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4317656]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4317660 'move' coerce_tmp[4317656](4317658 'deref' call_tmp[4317631]))
    (4317641 'move' call_tmp[4317639](4317644 call ==[3259199] coerce_tmp[4317656] full[264674]))
    (4317664 '=' ret[4317623] call_tmp[4317639])
    (4317652 return ret[4317623])
  }
  function _allSlotsNumChunks[265152](const in arg size[265155]:int(64)[10]) : int(64)[10] "private" "resolved"
  {
    val ret[625923]:int(64)[10] "dead after last mention" "RVV" "temp"
    const numTasks[265160]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    val tmp[702138]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[702139]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[904722]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (904725 'move' call_tmp[904722](265161 call ==[52746] dataParTasksPerLocale[287582] 0))
    (702144 'move' tmp[702139] call_tmp[904722])
    if tmp[702139]
    {
      val tmp[702146]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[904727]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (904730 'move' call_tmp[904727](408431 call here[135591]))
      (702148 'move' tmp[702146](265166 call maxTaskPar[135667] call_tmp[904727]))
      (702153 'move' tmp[702138] tmp[702146])
    }
    {
      (702158 'move' tmp[702138] dataParTasksPerLocale[287582])
    }
    (651885 'move' numTasks[265160] tmp[702138])
    (265174 'end of statement')
    const ignoreRunning[265176]:bool[19] "dead at end of block" "const" "insert auto destroy"
    (651887 'move' ignoreRunning[265176] dataParIgnoreRunningTasks[287587])
    (265179 'end of statement')
    const minSizePerTask[265181]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (651889 'move' minSizePerTask[265181] dataParMinGranularity[287592])
    (265184 'end of statement')
    val call_tmp[904734]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1948962 'end of statement' numTasks[265160] ignoreRunning[265176] minSizePerTask[265181])
    val call_tmp[904739]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (904742 'move' call_tmp[904739](265210 call _computeNumChunks[1796294] numTasks[265160] ignoreRunning[265176] minSizePerTask[265181] size[265155]))
    val numChunks[265208]:int(64)[10] "dead at end of block" "insert auto destroy"
    (651891 'move' numChunks[265208] call_tmp[904739])
    (265216 'end of statement' numTasks[265160] ignoreRunning[265176] minSizePerTask[265181])
    val call_tmp[904744]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1948968 'end of statement' numChunks[265208])
    (625928 'move' ret[625923] numChunks[265208])
    gotoReturn _end__allSlotsNumChunks[625921] _end__allSlotsNumChunks[625921]
    label _end__allSlotsNumChunks[625921]
    (625925 return ret[625923])
  }
  function _ic__allSlots[1946131].advance[1946157](const in arg this[1946159]:_ic__allSlots[1946131]) : void[4] "auto ii" "method" "resolved"
  {
    (1946164 return _void[46])
  }
  function _ic__allSlots[1946131].zip1[1946166](const in arg this[1946168]:_ic__allSlots[1946131]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1946173 return _void[46])
  }
  function _ic__allSlots[1946131].zip2[1946175](const in arg this[1946177]:_ic__allSlots[1946131]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1946182 return _void[46])
  }
  function _ic__allSlots[1946131].zip3[1946184](const in arg this[1946186]:_ic__allSlots[1946131]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1946191 return _void[46])
  }
  function _ic__allSlots[1946131].zip4[1946193](const in arg this[1946195]:_ic__allSlots[1946131]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1946200 return _void[46])
  }
  function _ic__allSlots[1946131].hasMore[1946202](const in arg this[1946204]:_ic__allSlots[1946131]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (1946209 return _void[46])
  }
  function _ic__allSlots[1946131].getValue[1946211](const in arg this[1946213]:_ic__allSlots[1946131]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (1946218 return _void[46])
  }
  function _ic__allSlots[1946131].init[1946220](const in arg this[1946222]:_ic__allSlots[1946131]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1946227 return _void[46])
  }
  function _ic__allSlots[1946131].incr[1946229](const in arg this[1946231]:_ic__allSlots[1946131]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1946236 return _void[46])
  }
  type _ic__allSlots[1946131] val super[1946132]:RootClass[236] "super class" val more[1946134]:int(64)[10]
  type _ic__allSlots?[5483813]
  type _ic__allSlots[5483810]
  type _ic__allSlots[5483807]
  type unmanaged _ic__allSlots?[5483804]
  type unmanaged _ic__allSlots[5483801]
  type borrowed _ic__allSlots?[5483798]
  type _ir__allSlots[1946137]
  function _getIterator[1946146](const  ref arg ir[1946148]:_ir__allSlots[1946137]) : _ic__allSlots[1946131] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1946255]:_ic__allSlots[1946131] "dead after last mention" "RVV" "temp"
    val _ic_[1946138]:_ic__allSlots[1946131] "dead after last mention" "temp"
    val call_tmp[1946262]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1946265 'move' call_tmp[1946262](1946277 'sizeof_bundle' _ic__allSlots[1946131]))
    val cast_tmp[1946280]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1946282 'move' cast_tmp[1946280](1946143 call chpl_here_alloc[308303] call_tmp[1946262] 57))
    (1946151 'move' _ic_[1946138](1946284 'cast' _ic__allSlots[1946131] cast_tmp[1946280]))
    (1946153 'setcid' _ic_[1946138])
    (1946251 'end of statement')
    (1946260 'move' ret[1946255] _ic_[1946138])
    (1946257 return ret[1946255])
  }
  function _allSlots[265237](const in arg size[265240]:int(64)[10]) : _ir__allSlots[1946137] "iterator fn" "resolved" "no return value for void"
  {
    val ret[625934]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[265255]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[265256]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
      val call_tmp[904749]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
      (904752 'move' call_tmp[904749](265272 call chpl_direct_counted_range_iter[1468903] 0 size[265240]))
      (265265 'move' _iterator[265256](265263 call _getIterator[1520079] call_tmp[904749]))
      Defer
      {
        {
          (265287 call _freeIterator[1520248] _iterator[265256])
        }
      }
      ForLoop[265257] order-independent
      {
        const slot[265244]:int(64)[10] "const" "index var" "insert auto destroy"
        (564719 'end of statement')
        (265282 'move' slot[265244] _indexOfInterest[265255])
        (564720 'end of statement' slot[265244])
        {
          val yret[625938]:int(64)[10] "dead after last mention" "YVV" "temp"
          (625941 'move' yret[625938] slot[265244])
          (265253 yield yret[625938])
          (564722 'end of statement' slot[265244])
        }
        label _continueLabel[265260]
        _indexOfInterest[265255]
        _iterator[265256]
      }
      label _breakLabel[265261]
    }
    (625936 return ret[625934])
  }
  function _ic__allSlots[1949121].advance[1949147](const in arg this[1949149]:_ic__allSlots[1949121]) : void[4] "auto ii" "method" "resolved"
  {
    (1949154 return _void[46])
  }
  function _ic__allSlots[1949121].zip1[1949156](const in arg this[1949158]:_ic__allSlots[1949121]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1949163 return _void[46])
  }
  function _ic__allSlots[1949121].zip2[1949165](const in arg this[1949167]:_ic__allSlots[1949121]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1949172 return _void[46])
  }
  function _ic__allSlots[1949121].zip3[1949174](const in arg this[1949176]:_ic__allSlots[1949121]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1949181 return _void[46])
  }
  function _ic__allSlots[1949121].zip4[1949183](const in arg this[1949185]:_ic__allSlots[1949121]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1949190 return _void[46])
  }
  function _ic__allSlots[1949121].hasMore[1949192](const in arg this[1949194]:_ic__allSlots[1949121]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (1949199 return _void[46])
  }
  function _ic__allSlots[1949121].getValue[1949201](const in arg this[1949203]:_ic__allSlots[1949121]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (1949208 return _void[46])
  }
  function _ic__allSlots[1949121].init[1949210](const in arg this[1949212]:_ic__allSlots[1949121]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1949217 return _void[46])
  }
  function _ic__allSlots[1949121].incr[1949219](const in arg this[1949221]:_ic__allSlots[1949121]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1949226 return _void[46])
  }
  type _ic__allSlots[1949121] val super[1949122]:RootClass[236] "super class" val more[1949124]:int(64)[10]
  type _ic__allSlots?[5483831]
  type _ic__allSlots[5483828]
  type _ic__allSlots[5483825]
  type unmanaged _ic__allSlots?[5483822]
  type unmanaged _ic__allSlots[5483819]
  type borrowed _ic__allSlots?[5483816]
  type _ir__allSlots[1949127]
  function _getIterator[1949136](const  ref arg ir[1949138]:_ir__allSlots[1949127]) : _ic__allSlots[1949121] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1949245]:_ic__allSlots[1949121] "dead after last mention" "RVV" "temp"
    val _ic_[1949128]:_ic__allSlots[1949121] "dead after last mention" "temp"
    val call_tmp[1949252]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1949255 'move' call_tmp[1949252](1949267 'sizeof_bundle' _ic__allSlots[1949121]))
    val cast_tmp[1949270]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1949272 'move' cast_tmp[1949270](1949133 call chpl_here_alloc[308303] call_tmp[1949252] 58))
    (1949141 'move' _ic_[1949128](1949274 'cast' _ic__allSlots[1949121] cast_tmp[1949270]))
    (1949143 'setcid' _ic_[1949128])
    (1949241 'end of statement')
    (1949250 'move' ret[1949245] _ic_[1949128])
    (1949247 return ret[1949245])
  }
  function _allSlots[1946294](const in arg size[1946296]:int(64)[10]) : _ir__allSlots[1949127] "inline iterator" "instantiated generic" "invisible fn" "iterator fn" "private" "resolved" "no return value for void"
  {
    val ret[1946305]:_ir__allSlots[1949127] "dead after last mention" "RVV" "temp"
    val call_tmp[1946333]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1948956 'end of statement')
    val call_tmp[1946346]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (1946348 'move' call_tmp[1946346](1946351 call _allSlotsNumChunks[265152] size[1946296]))
    const numChunks[1946353]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (1946355 'move' numChunks[1946353] call_tmp[1946346])
    (1946358 'end of statement')
    {
      val tmpIter[1946360]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
      val call_tmp[1946362]:range(int(64),low,one)[1576928] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1946364 'move' call_tmp[1946362](1946367 call chpl_build_low_bounded_range[1576395] 0))
      (1946369 'move' tmpIter[1946360](1946372 call #[1714265] call_tmp[1946362] numChunks[1946353]))
      val isBounded[1946375]:bool[19] "dead after last mention" "maybe param" "temp"
      {
        const _coforallCount[1946385]:unmanaged _EndCount(atomic int(64),int(64))[1526264] "dead after last mention" "const" "end count" "temp"
        (1946387 'move' _coforallCount[1946385](1946390 call _endCountAlloc[1798297]))
        val numTasks[1946392]:int(64)[10] "dead after last mention" "temp"
        (1946394 'move' numTasks[1946392](1946397 call chpl_boundedCoforallSize[1798510] tmpIter[1946360]))
        (1946401 call _upEndCount[1798802] _coforallCount[1946385] numTasks[1946392])
        (1946405 'end of statement')
        (1946407 call chpl_resetTaskSpawn[1801388] numTasks[1946392])
        (1946409 'end of statement')
        val _indexOfInterest[1946410]:int(64)[10] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1946412]:_ic_these_range_int64_t_both_one[1615692] "dead at end of block" "expr temp" "temp"
        (1946414 'move' _iterator[1946412](1946417 call _getIterator[1610553] tmpIter[1946360]))
        Defer
        {
          {
            (1946421 call _freeIterator[1622361] _iterator[1946412])
          }
        }
        ForLoop[1946430]
        {
          const chunk[1946433]:int(64)[10] "coforall index var" "const" "index var" "insert auto destroy"
          (1946435 'end of statement')
          (1946436 'move' chunk[1946433] _indexOfInterest[1946410])
          (1946439 'end of statement' chunk[1946433])
          (1946442 call coforall_fn[1946445] size[1946296] numChunks[1946353] _coforallCount[1946385] chunk[1946433])
          {
          }
          label _continueLabel[1946597]
          _indexOfInterest[1946410]
          _iterator[1946412]
        }
        label _breakLabel[1946599]
        Defer
        {
          {
            (1946603 call _endCountFree[1803483] _coforallCount[1946385])
          }
        }
        (1946607 call _waitEndCount[1804599] _coforallCount[1946385] numTasks[1946392])
      }
      (1948975 'end of statement' numChunks[1946353])
    }
    (1946825 return ret[1946305])
  }
  function chpl__rehashHelpers[265685].startRehash[265641](const in arg this[265643]:chpl__rehashHelpers[265685], const in arg newSize[265646]:int(64)[10]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (625992 return _void[46])
  }
  function chpl__rehashHelpers[265685].moveElementDuringRehash[265654](const in arg this[265656]:chpl__rehashHelpers[265685], const in arg oldSlot[265659]:int(64)[10], const in arg newSlot[265663]:int(64)[10]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (625994 return _void[46])
  }
  function chpl__rehashHelpers[265685].finishRehash[265671](const in arg this[265673]:chpl__rehashHelpers[265685], const in arg oldSize[265676]:int(64)[10]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (625996 return _void[46])
  }
  function chpl__rehashHelpers[265685].deinit[1260148](const in arg this[1260152]:chpl__rehashHelpers[265685]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    (1260160 return _void[46])
  }
  type chpl__rehashHelpers[265685] val super[397647]:RootClass[236] "super class"
  type chpl__rehashHelpers[5482748]
  type unmanaged chpl__rehashHelpers[4032146]
  type unmanaged chpl__rehashHelpers?[1942399]
  type borrowed chpl__rehashHelpers?[468163]
  type chpl__rehashHelpers?[468160]
  type chpl__rehashHelpers[451244]
  function chpl__hashtable(string,Module(real(32)))[1941492].init[1941108](ref arg this[1941112]:chpl__hashtable(string,Module(real(32)))[1941492], const in arg resizeThreshold[1941122]:real(64)[13], const in arg initialCapacity[1941128]:int(64)[10], ref arg rehashHelpers[1941134]:owned chpl__rehashHelpers?[1941081]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5478503]:Module(real(32))[1935500] "temp"
    val _formal_type_tmp_[5478501]:string[244] "temp"
    val _formal_tmp_rehashHelpers[1941380]:owned chpl__rehashHelpers?[1941081] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (1941383 'move' _formal_tmp_rehashHelpers[1941380] rehashHelpers[1941134])
    val call_tmp[1941142]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1941149]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1941416 'end of statement')
    val keyType[1941163]:string[244] "dead after last mention" "temp" "type variable"
    (1941172 'end of statement')
    val valType[1941173]:Module(real(32))[1935500] "dead after last mention" "temp" "type variable"
    (1941182 'end of statement')
    val tableNumFullSlots[1941183]:int(64)[10] "dead after last mention" "temp"
    (1941185 'move' tableNumFullSlots[1941183] 0)
    (1941189 '.=' this[1941112] tableNumFullSlots[1941461] tableNumFullSlots[1941183])
    (1941193 'end of statement')
    val tableNumDeletedSlots[1941194]:int(64)[10] "dead after last mention" "temp"
    (1941196 'move' tableNumDeletedSlots[1941194] 0)
    (1941200 '.=' this[1941112] tableNumDeletedSlots[1941464] tableNumDeletedSlots[1941194])
    (1941204 'end of statement')
    val tableSize[1941205]:int(64)[10] "dead after last mention" "temp"
    (1941207 'move' tableSize[1941205] 0)
    (1941211 '.=' this[1941112] tableSize[1941467] tableSize[1941205])
    (1941215 'end of statement')
    val table[1941216]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "temp"
    val call_tmp[1941218]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941225]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941232]:chpl_TableEntry(string,Module(real(32)))[1941536] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941240]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1949578 'move' table[1941216](1949576 'cast' _ddata(chpl_TableEntry(string,Module(real(32))))[1941559] nil[32]))
    (1941250 '.=' this[1941112] table[1941470] table[1941216])
    (1941254 'end of statement')
    val call_tmp[1941255]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[1941262]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (1941264 call init=[1941591] rehashHelpers[1941262] _formal_tmp_rehashHelpers[1941380])
    (1941268 '.=' this[1941112] rehashHelpers[1941478] rehashHelpers[1941262])
    (1941272 'end of statement')
    val postponeResize[1941273]:bool[19] "dead after last mention" "temp"
    (1941275 'move' postponeResize[1941273] 0)
    (1941279 '.=' this[1941112] postponeResize[1941483] postponeResize[1941273])
    (1941283 'end of statement')
    val resizeThreshold[1941284]:real(64)[13] "dead after last mention" "temp"
    (1941286 'move' resizeThreshold[1941284] resizeThreshold[1941122])
    (1941290 '.=' this[1941112] resizeThreshold[1941486] resizeThreshold[1941284])
    (1941294 'end of statement')
    val call_tmp[1941295]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1942518]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1942524 'move' coerce_tmp[1942518](1942520 'cast' real(64)[13] initialCapacity[1941128]))
    (1941297 'move' call_tmp[1941295](1941300 call /[59825] coerce_tmp[1942518] resizeThreshold[1941122]))
    val call_tmp[1941303]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1941305 'move' call_tmp[1941303](1941308 call :[1496113] call_tmp[1941295]))
    val call_tmp[1941311]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1941313 'move' call_tmp[1941311](1941316 call -[1487343] call_tmp[1941303]))
    val call_tmp[1941319]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1941321 'move' call_tmp[1941319](1941324 call log2[513013] call_tmp[1941311]))
    val call_tmp[1941326]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (1941328 'move' call_tmp[1941326](1941331 call <<[1520334] 2 call_tmp[1941319]))
    val startingSize[1941334]:int(64)[10] "dead after last mention" "temp"
    (1941336 'move' startingSize[1941334] call_tmp[1941326])
    (1941340 '.=' this[1941112] startingSize[1941489] startingSize[1941334])
    (1941344 'end of statement')
    (1941345 'init done')
    (1941346 'end of statement')
    ref call_tmp[1941347]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "maybe param" "temp"
    (1941349 'move' call_tmp[1941347](1941352 call table[1942967] this[1941112]))
    ref call_tmp[1941355]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1941357 'move' call_tmp[1941355](1941360 call tableSize[1942995] this[1941112]))
    val call_tmp[1941363]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1943106]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1943110 'move' coerce_tmp[1943106](1943108 'deref' call_tmp[1941355]))
    (1941365 'move' call_tmp[1941363](1941371 call allocateTable[1943023] this[1941112] coerce_tmp[1943106]))
    (1941374 call =[1944473] call_tmp[1941347] call_tmp[1941363])
    (1941377 return _void[46])
  }
  function init_default_rehashHelpers[1949601]() : owned chpl__rehashHelpers?[1941081] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1949603]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    val rehashHelpers[1949608]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1949612]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    val _formal_type[1949614]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp" "type variable"
    (1949631 call init=[1949636] tmp[1949612] nil[32])
    (1949625 'move' rehashHelpers[1949608] tmp[1949612])
    (1949628 'move' ret[1949603] rehashHelpers[1949608])
    (1949606 return ret[1949603])
  }
  function chpl__hashtable(string,int(64))[3288849].init[3310554](ref arg this[3310558]:chpl__hashtable(string,int(64))[3288849], const in arg resizeThreshold[3310568]:real(64)[13], const in arg initialCapacity[3310574]:int(64)[10], ref arg rehashHelpers[3310580]:owned chpl__rehashHelpers?[1941081]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5479837]:int(64)[10] "temp"
    val _formal_type_tmp_[5479835]:string[244] "temp"
    val _formal_tmp_rehashHelpers[3310826]:owned chpl__rehashHelpers?[1941081] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3310829 'move' _formal_tmp_rehashHelpers[3310826] rehashHelpers[3310580])
    val call_tmp[3310588]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3310595]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3310835 'end of statement')
    val keyType[3310609]:string[244] "dead after last mention" "temp" "type variable"
    (3310618 'end of statement')
    val valType[3310619]:int(64)[10] "dead after last mention" "temp" "type variable"
    (3310628 'end of statement')
    val tableNumFullSlots[3310629]:int(64)[10] "dead after last mention" "temp"
    (3310631 'move' tableNumFullSlots[3310629] 0)
    (3310635 '.=' this[3310558] tableNumFullSlots[3288818] tableNumFullSlots[3310629])
    (3310639 'end of statement')
    val tableNumDeletedSlots[3310640]:int(64)[10] "dead after last mention" "temp"
    (3310642 'move' tableNumDeletedSlots[3310640] 0)
    (3310646 '.=' this[3310558] tableNumDeletedSlots[3288821] tableNumDeletedSlots[3310640])
    (3310650 'end of statement')
    val tableSize[3310651]:int(64)[10] "dead after last mention" "temp"
    (3310653 'move' tableSize[3310651] 0)
    (3310657 '.=' this[3310558] tableSize[3288824] tableSize[3310651])
    (3310661 'end of statement')
    val table[3310662]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "temp"
    val call_tmp[3310664]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3310671]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3310678]:chpl_TableEntry(string,int(64))[3288881] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3310686]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3310908 'move' table[3310662](3310906 'cast' _ddata(chpl_TableEntry(string,int(64)))[3288904] nil[32]))
    (3310696 '.=' this[3310558] table[3288827] table[3310662])
    (3310700 'end of statement')
    val call_tmp[3310701]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[3310708]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (3310710 call init=[1941591] rehashHelpers[3310708] _formal_tmp_rehashHelpers[3310826])
    (3310714 '.=' this[3310558] rehashHelpers[3288835] rehashHelpers[3310708])
    (3310718 'end of statement')
    val postponeResize[3310719]:bool[19] "dead after last mention" "temp"
    (3310721 'move' postponeResize[3310719] 0)
    (3310725 '.=' this[3310558] postponeResize[3288840] postponeResize[3310719])
    (3310729 'end of statement')
    val resizeThreshold[3310730]:real(64)[13] "dead after last mention" "temp"
    (3310732 'move' resizeThreshold[3310730] resizeThreshold[3310568])
    (3310736 '.=' this[3310558] resizeThreshold[3288843] resizeThreshold[3310730])
    (3310740 'end of statement')
    val call_tmp[3310741]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3310881]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3310887 'move' coerce_tmp[3310881](3310883 'cast' real(64)[13] initialCapacity[3310574]))
    (3310743 'move' call_tmp[3310741](3310746 call /[59825] coerce_tmp[3310881] resizeThreshold[3310568]))
    val call_tmp[3310749]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3310751 'move' call_tmp[3310749](3310754 call :[1496113] call_tmp[3310741]))
    val call_tmp[3310757]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3310759 'move' call_tmp[3310757](3310762 call -[1487343] call_tmp[3310749]))
    val call_tmp[3310765]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3310767 'move' call_tmp[3310765](3310770 call log2[513013] call_tmp[3310757]))
    val call_tmp[3310772]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (3310774 'move' call_tmp[3310772](3310777 call <<[1520334] 2 call_tmp[3310765]))
    val startingSize[3310780]:int(64)[10] "dead after last mention" "temp"
    (3310782 'move' startingSize[3310780] call_tmp[3310772])
    (3310786 '.=' this[3310558] startingSize[3288846] startingSize[3310780])
    (3310790 'end of statement')
    (3310791 'init done')
    (3310792 'end of statement')
    ref call_tmp[3310793]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "maybe param" "temp"
    (3310795 'move' call_tmp[3310793](3310798 call table[3303003] this[3310558]))
    ref call_tmp[3310801]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3310803 'move' call_tmp[3310801](3310806 call tableSize[3301883] this[3310558]))
    val call_tmp[3310809]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3310897]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3310901 'move' coerce_tmp[3310897](3310899 'deref' call_tmp[3310801]))
    (3310811 'move' call_tmp[3310809](3310817 call allocateTable[3303079] this[3310558] coerce_tmp[3310897]))
    (3310820 call =[3304477] call_tmp[3310793] call_tmp[3310809])
    (3310823 return _void[46])
  }
  function init_default_rehashHelpers[3310958]() : owned chpl__rehashHelpers?[1941081] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3310960]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    val rehashHelpers[3310965]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[3310969]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    val _formal_type[3310971]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp" "type variable"
    (3310988 call init=[1949636] tmp[3310969] nil[32])
    (3310982 'move' rehashHelpers[3310965] tmp[3310969])
    (3310985 'move' ret[3310960] rehashHelpers[3310965])
    (3310963 return ret[3310960])
  }
  function chpl__hashtable(string,string)[3283441].init[3339751](ref arg this[3339755]:chpl__hashtable(string,string)[3283441], const in arg resizeThreshold[3339765]:real(64)[13], const in arg initialCapacity[3339771]:int(64)[10], ref arg rehashHelpers[3339777]:owned chpl__rehashHelpers?[1941081]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5479893]:string[244] "temp"
    val _formal_type_tmp_[5479891]:string[244] "temp"
    val _formal_tmp_rehashHelpers[3340023]:owned chpl__rehashHelpers?[1941081] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3340026 'move' _formal_tmp_rehashHelpers[3340023] rehashHelpers[3339777])
    val call_tmp[3339785]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3339792]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3340032 'end of statement')
    val keyType[3339806]:string[244] "dead after last mention" "temp" "type variable"
    (3339815 'end of statement')
    val valType[3339816]:string[244] "dead after last mention" "temp" "type variable"
    (3339825 'end of statement')
    val tableNumFullSlots[3339826]:int(64)[10] "dead after last mention" "temp"
    (3339828 'move' tableNumFullSlots[3339826] 0)
    (3339832 '.=' this[3339755] tableNumFullSlots[3283410] tableNumFullSlots[3339826])
    (3339836 'end of statement')
    val tableNumDeletedSlots[3339837]:int(64)[10] "dead after last mention" "temp"
    (3339839 'move' tableNumDeletedSlots[3339837] 0)
    (3339843 '.=' this[3339755] tableNumDeletedSlots[3283413] tableNumDeletedSlots[3339837])
    (3339847 'end of statement')
    val tableSize[3339848]:int(64)[10] "dead after last mention" "temp"
    (3339850 'move' tableSize[3339848] 0)
    (3339854 '.=' this[3339755] tableSize[3283416] tableSize[3339848])
    (3339858 'end of statement')
    val table[3339859]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "temp"
    val call_tmp[3339861]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3339868]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3339875]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3339883]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3343686 'move' table[3339859](3343684 'cast' _ddata(chpl_TableEntry(string,string))[3283496] nil[32]))
    (3339893 '.=' this[3339755] table[3283419] table[3339859])
    (3339897 'end of statement')
    val call_tmp[3339898]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[3339905]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (3339907 call init=[1941591] rehashHelpers[3339905] _formal_tmp_rehashHelpers[3340023])
    (3339911 '.=' this[3339755] rehashHelpers[3283427] rehashHelpers[3339905])
    (3339915 'end of statement')
    val postponeResize[3339916]:bool[19] "dead after last mention" "temp"
    (3339918 'move' postponeResize[3339916] 0)
    (3339922 '.=' this[3339755] postponeResize[3283432] postponeResize[3339916])
    (3339926 'end of statement')
    val resizeThreshold[3339927]:real(64)[13] "dead after last mention" "temp"
    (3339929 'move' resizeThreshold[3339927] resizeThreshold[3339765])
    (3339933 '.=' this[3339755] resizeThreshold[3283435] resizeThreshold[3339927])
    (3339937 'end of statement')
    val call_tmp[3339938]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3340078]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3340084 'move' coerce_tmp[3340078](3340080 'cast' real(64)[13] initialCapacity[3339771]))
    (3339940 'move' call_tmp[3339938](3339943 call /[59825] coerce_tmp[3340078] resizeThreshold[3339765]))
    val call_tmp[3339946]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339948 'move' call_tmp[3339946](3339951 call :[1496113] call_tmp[3339938]))
    val call_tmp[3339954]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339956 'move' call_tmp[3339954](3339959 call -[1487343] call_tmp[3339946]))
    val call_tmp[3339962]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339964 'move' call_tmp[3339962](3339967 call log2[513013] call_tmp[3339954]))
    val call_tmp[3339969]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (3339971 'move' call_tmp[3339969](3339974 call <<[1520334] 2 call_tmp[3339962]))
    val startingSize[3339977]:int(64)[10] "dead after last mention" "temp"
    (3339979 'move' startingSize[3339977] call_tmp[3339969])
    (3339983 '.=' this[3339755] startingSize[3283438] startingSize[3339977])
    (3339987 'end of statement')
    (3339988 'init done')
    (3339989 'end of statement')
    ref call_tmp[3339990]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "maybe param" "temp"
    (3339992 'move' call_tmp[3339990](3339995 call table[3340092] this[3339755]))
    ref call_tmp[3339998]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3340000 'move' call_tmp[3339998](3340003 call tableSize[3340120] this[3339755]))
    val call_tmp[3340006]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3340231]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3340235 'move' coerce_tmp[3340231](3340233 'deref' call_tmp[3339998]))
    (3340008 'move' call_tmp[3340006](3340014 call allocateTable[3340148] this[3339755] coerce_tmp[3340231]))
    (3340017 call =[3341598] call_tmp[3339990] call_tmp[3340006])
    (3340020 return _void[46])
  }
  function init_default_rehashHelpers[3343709]() : owned chpl__rehashHelpers?[1941081] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3343711]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    val rehashHelpers[3343716]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[3343720]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    val _formal_type[3343722]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp" "type variable"
    (3343739 call init=[1949636] tmp[3343720] nil[32])
    (3343733 'move' rehashHelpers[3343716] tmp[3343720])
    (3343736 'move' ret[3343711] rehashHelpers[3343716])
    (3343714 return ret[3343711])
  }
  function chpl__hashtable(string,owned ModuleSpecification?)[3283741].init[3354836](ref arg this[3354840]:chpl__hashtable(string,owned ModuleSpecification?)[3283741], const in arg resizeThreshold[3354850]:real(64)[13], const in arg initialCapacity[3354856]:int(64)[10], ref arg rehashHelpers[3354862]:owned chpl__rehashHelpers?[1941081]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5479936]:owned ModuleSpecification?[3283604] "temp"
    val _formal_type_tmp_[5479934]:string[244] "temp"
    val _formal_tmp_rehashHelpers[3355108]:owned chpl__rehashHelpers?[1941081] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3355111 'move' _formal_tmp_rehashHelpers[3355108] rehashHelpers[3354862])
    val call_tmp[3354870]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3354877]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3355117 'end of statement')
    val keyType[3354891]:string[244] "dead after last mention" "temp" "type variable"
    (3354900 'end of statement')
    val valType[3354901]:owned ModuleSpecification?[3283604] "dead after last mention" "temp" "type variable"
    (3354910 'end of statement')
    val tableNumFullSlots[3354911]:int(64)[10] "dead after last mention" "temp"
    (3354913 'move' tableNumFullSlots[3354911] 0)
    (3354917 '.=' this[3354840] tableNumFullSlots[3283710] tableNumFullSlots[3354911])
    (3354921 'end of statement')
    val tableNumDeletedSlots[3354922]:int(64)[10] "dead after last mention" "temp"
    (3354924 'move' tableNumDeletedSlots[3354922] 0)
    (3354928 '.=' this[3354840] tableNumDeletedSlots[3283713] tableNumDeletedSlots[3354922])
    (3354932 'end of statement')
    val tableSize[3354933]:int(64)[10] "dead after last mention" "temp"
    (3354935 'move' tableSize[3354933] 0)
    (3354939 '.=' this[3354840] tableSize[3283716] tableSize[3354933])
    (3354943 'end of statement')
    val table[3354944]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "temp"
    val call_tmp[3354946]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3354953]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3354960]:chpl_TableEntry(string,owned ModuleSpecification?)[3283773] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3354968]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3358771 'move' table[3354944](3358769 'cast' _ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] nil[32]))
    (3354978 '.=' this[3354840] table[3283719] table[3354944])
    (3354982 'end of statement')
    val call_tmp[3354983]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[3354990]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (3354992 call init=[1941591] rehashHelpers[3354990] _formal_tmp_rehashHelpers[3355108])
    (3354996 '.=' this[3354840] rehashHelpers[3283727] rehashHelpers[3354990])
    (3355000 'end of statement')
    val postponeResize[3355001]:bool[19] "dead after last mention" "temp"
    (3355003 'move' postponeResize[3355001] 0)
    (3355007 '.=' this[3354840] postponeResize[3283732] postponeResize[3355001])
    (3355011 'end of statement')
    val resizeThreshold[3355012]:real(64)[13] "dead after last mention" "temp"
    (3355014 'move' resizeThreshold[3355012] resizeThreshold[3354850])
    (3355018 '.=' this[3354840] resizeThreshold[3283735] resizeThreshold[3355012])
    (3355022 'end of statement')
    val call_tmp[3355023]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3355163]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3355169 'move' coerce_tmp[3355163](3355165 'cast' real(64)[13] initialCapacity[3354856]))
    (3355025 'move' call_tmp[3355023](3355028 call /[59825] coerce_tmp[3355163] resizeThreshold[3354850]))
    val call_tmp[3355031]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3355033 'move' call_tmp[3355031](3355036 call :[1496113] call_tmp[3355023]))
    val call_tmp[3355039]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3355041 'move' call_tmp[3355039](3355044 call -[1487343] call_tmp[3355031]))
    val call_tmp[3355047]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3355049 'move' call_tmp[3355047](3355052 call log2[513013] call_tmp[3355039]))
    val call_tmp[3355054]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (3355056 'move' call_tmp[3355054](3355059 call <<[1520334] 2 call_tmp[3355047]))
    val startingSize[3355062]:int(64)[10] "dead after last mention" "temp"
    (3355064 'move' startingSize[3355062] call_tmp[3355054])
    (3355068 '.=' this[3354840] startingSize[3283738] startingSize[3355062])
    (3355072 'end of statement')
    (3355073 'init done')
    (3355074 'end of statement')
    ref call_tmp[3355075]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "maybe param" "temp"
    (3355077 'move' call_tmp[3355075](3355080 call table[3355177] this[3354840]))
    ref call_tmp[3355083]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3355085 'move' call_tmp[3355083](3355088 call tableSize[3355205] this[3354840]))
    val call_tmp[3355091]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3355316]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3355320 'move' coerce_tmp[3355316](3355318 'deref' call_tmp[3355083]))
    (3355093 'move' call_tmp[3355091](3355099 call allocateTable[3355233] this[3354840] coerce_tmp[3355316]))
    (3355102 call =[3356683] call_tmp[3355075] call_tmp[3355091])
    (3355105 return _void[46])
  }
  function init_default_rehashHelpers[3358794]() : owned chpl__rehashHelpers?[1941081] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3358796]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    val rehashHelpers[3358801]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[3358805]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    val _formal_type[3358807]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp" "type variable"
    (3358824 call init=[1949636] tmp[3358805] nil[32])
    (3358818 'move' rehashHelpers[3358801] tmp[3358805])
    (3358821 'move' ret[3358796] rehashHelpers[3358801])
    (3358799 return ret[3358796])
  }
  function chpl__hashtable(string,shared Module(real(32)))[3392205].init[3391886](ref arg this[3391890]:chpl__hashtable(string,shared Module(real(32)))[3392205], const in arg resizeThreshold[3391900]:real(64)[13], const in arg initialCapacity[3391906]:int(64)[10], ref arg rehashHelpers[3391912]:owned chpl__rehashHelpers?[1941081]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480031]:shared Module(real(32))[1955038] "temp"
    val _formal_type_tmp_[5480029]:string[244] "temp"
    val _formal_tmp_rehashHelpers[3392158]:owned chpl__rehashHelpers?[1941081] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3392161 'move' _formal_tmp_rehashHelpers[3392158] rehashHelpers[3391912])
    val call_tmp[3391920]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3391927]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3392167 'end of statement')
    val keyType[3391941]:string[244] "dead after last mention" "temp" "type variable"
    (3391950 'end of statement')
    val valType[3391951]:shared Module(real(32))[1955038] "dead after last mention" "temp" "type variable"
    (3391960 'end of statement')
    val tableNumFullSlots[3391961]:int(64)[10] "dead after last mention" "temp"
    (3391963 'move' tableNumFullSlots[3391961] 0)
    (3391967 '.=' this[3391890] tableNumFullSlots[3392174] tableNumFullSlots[3391961])
    (3391971 'end of statement')
    val tableNumDeletedSlots[3391972]:int(64)[10] "dead after last mention" "temp"
    (3391974 'move' tableNumDeletedSlots[3391972] 0)
    (3391978 '.=' this[3391890] tableNumDeletedSlots[3392177] tableNumDeletedSlots[3391972])
    (3391982 'end of statement')
    val tableSize[3391983]:int(64)[10] "dead after last mention" "temp"
    (3391985 'move' tableSize[3391983] 0)
    (3391989 '.=' this[3391890] tableSize[3392180] tableSize[3391983])
    (3391993 'end of statement')
    val table[3391994]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "temp"
    val call_tmp[3391996]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3392003]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3392010]:chpl_TableEntry(string,shared Module(real(32)))[3392238] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3392018]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3395905 'move' table[3391994](3395903 'cast' _ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] nil[32]))
    (3392028 '.=' this[3391890] table[3392183] table[3391994])
    (3392032 'end of statement')
    val call_tmp[3392033]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[3392040]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (3392042 call init=[1941591] rehashHelpers[3392040] _formal_tmp_rehashHelpers[3392158])
    (3392046 '.=' this[3391890] rehashHelpers[3392191] rehashHelpers[3392040])
    (3392050 'end of statement')
    val postponeResize[3392051]:bool[19] "dead after last mention" "temp"
    (3392053 'move' postponeResize[3392051] 0)
    (3392057 '.=' this[3391890] postponeResize[3392196] postponeResize[3392051])
    (3392061 'end of statement')
    val resizeThreshold[3392062]:real(64)[13] "dead after last mention" "temp"
    (3392064 'move' resizeThreshold[3392062] resizeThreshold[3391900])
    (3392068 '.=' this[3391890] resizeThreshold[3392199] resizeThreshold[3392062])
    (3392072 'end of statement')
    val call_tmp[3392073]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3392297]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3392303 'move' coerce_tmp[3392297](3392299 'cast' real(64)[13] initialCapacity[3391906]))
    (3392075 'move' call_tmp[3392073](3392078 call /[59825] coerce_tmp[3392297] resizeThreshold[3391900]))
    val call_tmp[3392081]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3392083 'move' call_tmp[3392081](3392086 call :[1496113] call_tmp[3392073]))
    val call_tmp[3392089]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3392091 'move' call_tmp[3392089](3392094 call -[1487343] call_tmp[3392081]))
    val call_tmp[3392097]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3392099 'move' call_tmp[3392097](3392102 call log2[513013] call_tmp[3392089]))
    val call_tmp[3392104]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (3392106 'move' call_tmp[3392104](3392109 call <<[1520334] 2 call_tmp[3392097]))
    val startingSize[3392112]:int(64)[10] "dead after last mention" "temp"
    (3392114 'move' startingSize[3392112] call_tmp[3392104])
    (3392118 '.=' this[3391890] startingSize[3392202] startingSize[3392112])
    (3392122 'end of statement')
    (3392123 'init done')
    (3392124 'end of statement')
    ref call_tmp[3392125]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "maybe param" "temp"
    (3392127 'move' call_tmp[3392125](3392130 call table[3392311] this[3391890]))
    ref call_tmp[3392133]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3392135 'move' call_tmp[3392133](3392138 call tableSize[3392339] this[3391890]))
    val call_tmp[3392141]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3392450]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3392454 'move' coerce_tmp[3392450](3392452 'deref' call_tmp[3392133]))
    (3392143 'move' call_tmp[3392141](3392149 call allocateTable[3392367] this[3391890] coerce_tmp[3392450]))
    (3392152 call =[3393817] call_tmp[3392125] call_tmp[3392141])
    (3392155 return _void[46])
  }
  function init_default_rehashHelpers[3395928]() : owned chpl__rehashHelpers?[1941081] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3395930]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    val rehashHelpers[3395935]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[3395939]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    val _formal_type[3395941]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp" "type variable"
    (3395958 call init=[1949636] tmp[3395939] nil[32])
    (3395952 'move' rehashHelpers[3395935] tmp[3395939])
    (3395955 'move' ret[3395930] rehashHelpers[3395935])
    (3395933 return ret[3395930])
  }
  function chpl__hashtable(string,Module(real(64)))[3405239].init[3828563](ref arg this[3828567]:chpl__hashtable(string,Module(real(64)))[3405239], const in arg resizeThreshold[3828577]:real(64)[13], const in arg initialCapacity[3828583]:int(64)[10], ref arg rehashHelpers[3828589]:owned chpl__rehashHelpers?[1941081]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480528]:Module(real(64))[3405063] "temp"
    val _formal_type_tmp_[5480526]:string[244] "temp"
    val _formal_tmp_rehashHelpers[3828835]:owned chpl__rehashHelpers?[1941081] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3828838 'move' _formal_tmp_rehashHelpers[3828835] rehashHelpers[3828589])
    val call_tmp[3828597]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3828604]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3828844 'end of statement')
    val keyType[3828618]:string[244] "dead after last mention" "temp" "type variable"
    (3828627 'end of statement')
    val valType[3828628]:Module(real(64))[3405063] "dead after last mention" "temp" "type variable"
    (3828637 'end of statement')
    val tableNumFullSlots[3828638]:int(64)[10] "dead after last mention" "temp"
    (3828640 'move' tableNumFullSlots[3828638] 0)
    (3828644 '.=' this[3828567] tableNumFullSlots[3405208] tableNumFullSlots[3828638])
    (3828648 'end of statement')
    val tableNumDeletedSlots[3828649]:int(64)[10] "dead after last mention" "temp"
    (3828651 'move' tableNumDeletedSlots[3828649] 0)
    (3828655 '.=' this[3828567] tableNumDeletedSlots[3405211] tableNumDeletedSlots[3828649])
    (3828659 'end of statement')
    val tableSize[3828660]:int(64)[10] "dead after last mention" "temp"
    (3828662 'move' tableSize[3828660] 0)
    (3828666 '.=' this[3828567] tableSize[3405214] tableSize[3828660])
    (3828670 'end of statement')
    val table[3828671]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "temp"
    val call_tmp[3828673]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3828680]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3828687]:chpl_TableEntry(string,Module(real(64)))[3405271] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3828695]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3832498 'move' table[3828671](3832496 'cast' _ddata(chpl_TableEntry(string,Module(real(64))))[3405294] nil[32]))
    (3828705 '.=' this[3828567] table[3405217] table[3828671])
    (3828709 'end of statement')
    val call_tmp[3828710]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[3828717]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (3828719 call init=[1941591] rehashHelpers[3828717] _formal_tmp_rehashHelpers[3828835])
    (3828723 '.=' this[3828567] rehashHelpers[3405225] rehashHelpers[3828717])
    (3828727 'end of statement')
    val postponeResize[3828728]:bool[19] "dead after last mention" "temp"
    (3828730 'move' postponeResize[3828728] 0)
    (3828734 '.=' this[3828567] postponeResize[3405230] postponeResize[3828728])
    (3828738 'end of statement')
    val resizeThreshold[3828739]:real(64)[13] "dead after last mention" "temp"
    (3828741 'move' resizeThreshold[3828739] resizeThreshold[3828577])
    (3828745 '.=' this[3828567] resizeThreshold[3405233] resizeThreshold[3828739])
    (3828749 'end of statement')
    val call_tmp[3828750]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3828890]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3828896 'move' coerce_tmp[3828890](3828892 'cast' real(64)[13] initialCapacity[3828583]))
    (3828752 'move' call_tmp[3828750](3828755 call /[59825] coerce_tmp[3828890] resizeThreshold[3828577]))
    val call_tmp[3828758]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828760 'move' call_tmp[3828758](3828763 call :[1496113] call_tmp[3828750]))
    val call_tmp[3828766]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828768 'move' call_tmp[3828766](3828771 call -[1487343] call_tmp[3828758]))
    val call_tmp[3828774]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828776 'move' call_tmp[3828774](3828779 call log2[513013] call_tmp[3828766]))
    val call_tmp[3828781]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (3828783 'move' call_tmp[3828781](3828786 call <<[1520334] 2 call_tmp[3828774]))
    val startingSize[3828789]:int(64)[10] "dead after last mention" "temp"
    (3828791 'move' startingSize[3828789] call_tmp[3828781])
    (3828795 '.=' this[3828567] startingSize[3405236] startingSize[3828789])
    (3828799 'end of statement')
    (3828800 'init done')
    (3828801 'end of statement')
    ref call_tmp[3828802]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "maybe param" "temp"
    (3828804 'move' call_tmp[3828802](3828807 call table[3828904] this[3828567]))
    ref call_tmp[3828810]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3828812 'move' call_tmp[3828810](3828815 call tableSize[3828932] this[3828567]))
    val call_tmp[3828818]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3829043]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3829047 'move' coerce_tmp[3829043](3829045 'deref' call_tmp[3828810]))
    (3828820 'move' call_tmp[3828818](3828826 call allocateTable[3828960] this[3828567] coerce_tmp[3829043]))
    (3828829 call =[3830410] call_tmp[3828802] call_tmp[3828818])
    (3828832 return _void[46])
  }
  function init_default_rehashHelpers[3832521]() : owned chpl__rehashHelpers?[1941081] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3832523]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    val rehashHelpers[3832528]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[3832532]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    val _formal_type[3832534]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp" "type variable"
    (3832551 call init=[1949636] tmp[3832532] nil[32])
    (3832545 'move' rehashHelpers[3832528] tmp[3832532])
    (3832548 'move' ret[3832523] rehashHelpers[3832528])
    (3832526 return ret[3832523])
  }
  function chpl__hashtable(string,shared Module(real(64)))[3855392].init[4305123](ref arg this[4305127]:chpl__hashtable(string,shared Module(real(64)))[3855392], const in arg resizeThreshold[4305137]:real(64)[13], const in arg initialCapacity[4305143]:int(64)[10], ref arg rehashHelpers[4305149]:owned chpl__rehashHelpers?[1941081]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480806]:shared Module(real(64))[3405428] "temp"
    val _formal_type_tmp_[5480804]:string[244] "temp"
    val _formal_tmp_rehashHelpers[4305395]:owned chpl__rehashHelpers?[1941081] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (4305398 'move' _formal_tmp_rehashHelpers[4305395] rehashHelpers[4305149])
    val call_tmp[4305157]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4305164]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4305404 'end of statement')
    val keyType[4305178]:string[244] "dead after last mention" "temp" "type variable"
    (4305187 'end of statement')
    val valType[4305188]:shared Module(real(64))[3405428] "dead after last mention" "temp" "type variable"
    (4305197 'end of statement')
    val tableNumFullSlots[4305198]:int(64)[10] "dead after last mention" "temp"
    (4305200 'move' tableNumFullSlots[4305198] 0)
    (4305204 '.=' this[4305127] tableNumFullSlots[3855361] tableNumFullSlots[4305198])
    (4305208 'end of statement')
    val tableNumDeletedSlots[4305209]:int(64)[10] "dead after last mention" "temp"
    (4305211 'move' tableNumDeletedSlots[4305209] 0)
    (4305215 '.=' this[4305127] tableNumDeletedSlots[3855364] tableNumDeletedSlots[4305209])
    (4305219 'end of statement')
    val tableSize[4305220]:int(64)[10] "dead after last mention" "temp"
    (4305222 'move' tableSize[4305220] 0)
    (4305226 '.=' this[4305127] tableSize[3855367] tableSize[4305220])
    (4305230 'end of statement')
    val table[4305231]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "temp"
    val call_tmp[4305233]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4305240]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4305247]:chpl_TableEntry(string,shared Module(real(64)))[3855424] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4305255]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (4309058 'move' table[4305231](4309056 'cast' _ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] nil[32]))
    (4305265 '.=' this[4305127] table[3855370] table[4305231])
    (4305269 'end of statement')
    val call_tmp[4305270]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4305277]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4305279 call init=[1941591] rehashHelpers[4305277] _formal_tmp_rehashHelpers[4305395])
    (4305283 '.=' this[4305127] rehashHelpers[3855378] rehashHelpers[4305277])
    (4305287 'end of statement')
    val postponeResize[4305288]:bool[19] "dead after last mention" "temp"
    (4305290 'move' postponeResize[4305288] 0)
    (4305294 '.=' this[4305127] postponeResize[3855383] postponeResize[4305288])
    (4305298 'end of statement')
    val resizeThreshold[4305299]:real(64)[13] "dead after last mention" "temp"
    (4305301 'move' resizeThreshold[4305299] resizeThreshold[4305137])
    (4305305 '.=' this[4305127] resizeThreshold[3855386] resizeThreshold[4305299])
    (4305309 'end of statement')
    val call_tmp[4305310]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4305450]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4305456 'move' coerce_tmp[4305450](4305452 'cast' real(64)[13] initialCapacity[4305143]))
    (4305312 'move' call_tmp[4305310](4305315 call /[59825] coerce_tmp[4305450] resizeThreshold[4305137]))
    val call_tmp[4305318]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4305320 'move' call_tmp[4305318](4305323 call :[1496113] call_tmp[4305310]))
    val call_tmp[4305326]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4305328 'move' call_tmp[4305326](4305331 call -[1487343] call_tmp[4305318]))
    val call_tmp[4305334]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4305336 'move' call_tmp[4305334](4305339 call log2[513013] call_tmp[4305326]))
    val call_tmp[4305341]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (4305343 'move' call_tmp[4305341](4305346 call <<[1520334] 2 call_tmp[4305334]))
    val startingSize[4305349]:int(64)[10] "dead after last mention" "temp"
    (4305351 'move' startingSize[4305349] call_tmp[4305341])
    (4305355 '.=' this[4305127] startingSize[3855389] startingSize[4305349])
    (4305359 'end of statement')
    (4305360 'init done')
    (4305361 'end of statement')
    ref call_tmp[4305362]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "maybe param" "temp"
    (4305364 'move' call_tmp[4305362](4305367 call table[4305464] this[4305127]))
    ref call_tmp[4305370]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4305372 'move' call_tmp[4305370](4305375 call tableSize[4305492] this[4305127]))
    val call_tmp[4305378]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4305603]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4305607 'move' coerce_tmp[4305603](4305605 'deref' call_tmp[4305370]))
    (4305380 'move' call_tmp[4305378](4305386 call allocateTable[4305520] this[4305127] coerce_tmp[4305603]))
    (4305389 call =[4306970] call_tmp[4305362] call_tmp[4305378])
    (4305392 return _void[46])
  }
  function init_default_rehashHelpers[4309108]() : owned chpl__rehashHelpers?[1941081] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[4309110]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    val rehashHelpers[4309115]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[4309119]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    val _formal_type[4309121]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp" "type variable"
    (4309138 call init=[1949636] tmp[4309119] nil[32])
    (4309132 'move' rehashHelpers[4309115] tmp[4309119])
    (4309135 'move' ret[4309110] rehashHelpers[4309115])
    (4309113 return ret[4309110])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].deinit[4032607](const  ref arg this[4032611]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[4032617]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4032619]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4032632]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4033150 'end of statement')
    val tmp[4032645]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4032647]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4032649]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4033152 'end of statement')
    val call_tmp[4032697]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val tmp[4032706]:bool[19] "dead after last mention" "maybe param" "temp"
      val tmp[4032708]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4032710]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4032718]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4032730]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4033163 'end of statement')
      val tmp[4032743]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val tmp[4032745]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4032747]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[4032767]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[4032769]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-ref call_tmp[4032777]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4032779 'move' call_tmp[4032777](4032782 call tableSize[1942995] this[4032611]))
      val call_tmp[4032785]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4033207]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4033211 'move' coerce_tmp[4033207](4033209 'deref' call_tmp[4032777]))
      (4032787 'move' call_tmp[4032785](4032790 call _deinitElementsIsParallel[4033169] coerce_tmp[4033207]))
      (4032793 'move' tmp[4032767] call_tmp[4032785])
      (4032798 'move' tmp[4032743] tmp[4032767])
      (4033165 'end of statement')
      (4032804 'move' tmp[4032706] tmp[4032743])
      val call_tmp[4032807]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4033565 'end of statement')
      val tmp[4032820]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[4032822]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4032824]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4032826 'move' call_tmp[4032824] tmp[4032706])
      (4032831 'move' tmp[4032822] call_tmp[4032824])
      if tmp[4032822]
      {
        val tmp[4032838]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4032840]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4032848]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4032860]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4033574 'end of statement')
        val tmp[4032873]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
        val tmp[4032875]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4032877]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4033576 'end of statement')
        val tmp[4032934]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (4032941 'move' tmp[4032820] 1)
      }
      {
        (4032947 'move' tmp[4032820] 0)
      }
      val call_tmp[4032953]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4032955 'move' call_tmp[4032953] tmp[4032820])
      if call_tmp[4032953]
      {
        const-ref call_tmp[4032964]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4032966 'move' call_tmp[4032964](4032969 call tableSize[1942995] this[4032611]))
        val coerce_tmp[4033578]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4033582 'move' coerce_tmp[4033578](4033580 'deref' call_tmp[4032964]))
        const-ref table_ref[4033598]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "temp"
        (4033605 'move' table_ref[4033598](4033601 call table[1942967] this[4032611]))
        Forall[4033020] {
          induction variables:
            
            const slot[4033021]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
          iterated expressions:
            (4033586 call _allSlots[1946294] coerce_tmp[4033578])
          shadow variables:
            INP_table_svar[4033613]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] parent-in intent outer var table_ref[4033598]
              init block
              {
                (4033756 '=' INP_table_svar[4033613](4033754 'deref' table_ref[4033598]))
              }
              deinit block
              {
              }
            table_svar[4033609]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] 'const in' intent outer var table_ref[4033598]
              init block
              {
                (4033621 'move' table_svar[4033609](4033627 call chpl__initCopy[1944583] INP_table_svar[4033613] 1))
              }
              deinit block
              {
                (4033625 call chpl__autoDestroy[1949300] table_svar[4033609])
              }
          other variables
            val chpl__iterPAR[4033633]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
            val chpl__parIter[4033634]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4033638 call _getIterator[1949136] chpl__iterPAR[4033633])(4033641 call _freeIterator[1949375] chpl__parIter[4033634])
            forall body
          {
            ref aSlot[4032978]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "ref var"
            ref call_tmp[4032982]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
            (4032984 'move' call_tmp[4032982](4032990 call this[1947405] table_svar[4033609] slot[4033021]))
            (4032992 'move' aSlot[4032978] call_tmp[4032982])
            (4032996 'end of statement' slot[4033021])
            val call_tmp[4032998]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4033000 'move' call_tmp[4032998](4033003 call _isSlotFull[4033661] aSlot[4032978]))
            val call_tmp[4033005]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4033007 'move' call_tmp[4033005] call_tmp[4032998])
            if call_tmp[4033005]
            {
              (4033015 call _deinitSlot[3262551] aSlot[4032978])
              (4033017 'end of statement' aSlot[4032978])
            }
          }
        }
      }
      {
        {
          val _indexOfInterest[4033026]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4033028]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4033030]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4033032 'move' call_tmp[4033030](4033035 call tableSize[1942995] this[4032611]))
          val call_tmp[4033038]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[4033712]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4033716 'move' coerce_tmp[4033712](4033714 'deref' call_tmp[4033030]))
          (4033040 'move' call_tmp[4033038](4033043 call _allSlots[265237] coerce_tmp[4033712]))
          (4033045 'move' _iterator[4033028](4033048 call _getIterator[1946146] call_tmp[4033038]))
          Defer
          {
            {
              (4033052 call _freeIterator[1947321] _iterator[4033028])
            }
          }
          ForLoop[4033061]
          {
            const slot[4033064]:int(64)[10] "const" "index var" "insert auto destroy"
            (4033066 'end of statement')
            (4033067 'move' slot[4033064] _indexOfInterest[4033026])
            (4033070 'end of statement' slot[4033064])
            {
              ref aSlot[4033073]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "ref var"
              ref call_tmp[4033077]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[4033723]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead at end of block" "temp"
              (4033725 'move' _this_tmp_[4033723](4033082 call table[1942967] this[4032611]))
              val coerce_tmp[4033730]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4033734 'move' coerce_tmp[4033730](4033732 'deref' _this_tmp_[4033723]))
              (4033079 'move' call_tmp[4033077](4033085 call this[1947405] coerce_tmp[4033730] slot[4033064]))
              (4033087 'move' aSlot[4033073] call_tmp[4033077])
              (4033091 'end of statement' slot[4033064])
              val call_tmp[4033093]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4033095 'move' call_tmp[4033093](4033098 call _isSlotFull[4033661] aSlot[4033073]))
              val call_tmp[4033100]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4033102 'move' call_tmp[4033100] call_tmp[4033093])
              if call_tmp[4033100]
              {
                (4033110 call _deinitSlot[3262551] aSlot[4033073])
                (4033112 'end of statement' aSlot[4033073])
              }
            }
            label _continueLabel[4033115]
            _indexOfInterest[4033026]
            _iterator[4033028]
          }
          label _breakLabel[4033117]
        }
      }
    }
    (4033154 'end of statement')
    const-ref call_tmp[4033121]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "maybe param" "temp"
    (4033123 'move' call_tmp[4033121](4033126 call table[1942967] this[4032611]))
    const-ref call_tmp[4033129]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4033131 'move' call_tmp[4033129](4033134 call tableSize[1942995] this[4032611]))
    val coerce_tmp[4033741]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4033745 'move' coerce_tmp[4033741](4033743 'deref' call_tmp[4033121]))
    val coerce_tmp[4033747]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4033751 'move' coerce_tmp[4033747](4033749 'deref' call_tmp[4033129]))
    (4033138 call _freeData[3261886] coerce_tmp[4033741] coerce_tmp[4033747])
    (4033141 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].deinit[4211999](const  ref arg this[4212003]:_ref(chpl__hashtable(string,string))[3283450]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[4212009]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4212011]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4212024]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4212542 'end of statement')
    val tmp[4212037]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4212039]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4212041]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4212544 'end of statement')
    val call_tmp[4212089]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val tmp[4212098]:bool[19] "dead after last mention" "maybe param" "temp"
      val tmp[4212100]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4212102]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4212110]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4212122]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4212555 'end of statement')
      val tmp[4212135]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val tmp[4212137]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4212139]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[4212159]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[4212161]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-ref call_tmp[4212169]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4212171 'move' call_tmp[4212169](4212174 call tableSize[3340120] this[4212003]))
      val call_tmp[4212177]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4212561]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4212565 'move' coerce_tmp[4212561](4212563 'deref' call_tmp[4212169]))
      (4212179 'move' call_tmp[4212177](4212182 call _deinitElementsIsParallel[4033169] coerce_tmp[4212561]))
      (4212185 'move' tmp[4212159] call_tmp[4212177])
      (4212190 'move' tmp[4212135] tmp[4212159])
      (4212557 'end of statement')
      (4212196 'move' tmp[4212098] tmp[4212135])
      val call_tmp[4212199]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4212570 'end of statement')
      val tmp[4212212]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[4212214]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4212216]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4212218 'move' call_tmp[4212216] tmp[4212098])
      (4212223 'move' tmp[4212214] call_tmp[4212216])
      if tmp[4212214]
      {
        val tmp[4212230]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4212232]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4212240]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4212252]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4212579 'end of statement')
        val tmp[4212265]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val tmp[4212267]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4212269]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[4212289]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[4212291]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-ref call_tmp[4212299]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4212301 'move' call_tmp[4212299](4212304 call tableSize[3340120] this[4212003]))
        val call_tmp[4212307]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[4212585]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4212589 'move' coerce_tmp[4212585](4212587 'deref' call_tmp[4212299]))
        (4212309 'move' call_tmp[4212307](4212312 call _deinitElementsIsParallel[4033169] coerce_tmp[4212585]))
        (4212315 'move' tmp[4212289] call_tmp[4212307])
        (4212320 'move' tmp[4212265] tmp[4212289])
        (4212581 'end of statement')
        val tmp[4212326]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (4212328 'move' tmp[4212326] tmp[4212265])
        (4212333 'move' tmp[4212212] tmp[4212326])
      }
      {
        (4212339 'move' tmp[4212212] 0)
      }
      val call_tmp[4212345]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4212347 'move' call_tmp[4212345] tmp[4212212])
      if call_tmp[4212345]
      {
        const-ref call_tmp[4212356]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4212358 'move' call_tmp[4212356](4212361 call tableSize[3340120] this[4212003]))
        val coerce_tmp[4212593]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4212597 'move' coerce_tmp[4212593](4212595 'deref' call_tmp[4212356]))
        const-ref table_ref[4212613]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
        (4212620 'move' table_ref[4212613](4212616 call table[3340092] this[4212003]))
        Forall[4212412] {
          induction variables:
            
            const slot[4212413]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
          iterated expressions:
            (4212601 call _allSlots[1946294] coerce_tmp[4212593])
          shadow variables:
            INP_table_svar[4212628]:_ddata(chpl_TableEntry(string,string))[3283496] parent-in intent outer var table_ref[4212613]
              init block
              {
                (4212771 '=' INP_table_svar[4212628](4212769 'deref' table_ref[4212613]))
              }
              deinit block
              {
              }
            table_svar[4212624]:_ddata(chpl_TableEntry(string,string))[3283496] 'const in' intent outer var table_ref[4212613]
              init block
              {
                (4212636 'move' table_svar[4212624](4212642 call chpl__initCopy[3341708] INP_table_svar[4212628] 1))
              }
              deinit block
              {
                (4212640 call chpl__autoDestroy[3343466] table_svar[4212624])
              }
          other variables
            val chpl__iterPAR[4212648]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
            val chpl__parIter[4212649]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4212653 call _getIterator[1949136] chpl__iterPAR[4212648])(4212656 call _freeIterator[1949375] chpl__parIter[4212649])
            forall body
          {
            ref aSlot[4212370]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "ref var"
            ref call_tmp[4212374]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
            (4212376 'move' call_tmp[4212374](4212382 call this[3343256] table_svar[4212624] slot[4212413]))
            (4212384 'move' aSlot[4212370] call_tmp[4212374])
            (4212388 'end of statement' slot[4212413])
            val call_tmp[4212390]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4212392 'move' call_tmp[4212390](4212395 call _isSlotFull[4212676] aSlot[4212370]))
            val call_tmp[4212397]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4212399 'move' call_tmp[4212397] call_tmp[4212390])
            if call_tmp[4212397]
            {
              (4212407 call _deinitSlot[3350531] aSlot[4212370])
              (4212409 'end of statement' aSlot[4212370])
            }
          }
        }
      }
      {
        {
          val _indexOfInterest[4212418]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4212420]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4212422]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4212424 'move' call_tmp[4212422](4212427 call tableSize[3340120] this[4212003]))
          val call_tmp[4212430]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[4212727]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4212731 'move' coerce_tmp[4212727](4212729 'deref' call_tmp[4212422]))
          (4212432 'move' call_tmp[4212430](4212435 call _allSlots[265237] coerce_tmp[4212727]))
          (4212437 'move' _iterator[4212420](4212440 call _getIterator[1946146] call_tmp[4212430]))
          Defer
          {
            {
              (4212444 call _freeIterator[1947321] _iterator[4212420])
            }
          }
          ForLoop[4212453]
          {
            const slot[4212456]:int(64)[10] "const" "index var" "insert auto destroy"
            (4212458 'end of statement')
            (4212459 'move' slot[4212456] _indexOfInterest[4212418])
            (4212462 'end of statement' slot[4212456])
            {
              ref aSlot[4212465]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "ref var"
              ref call_tmp[4212469]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[4212738]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead at end of block" "temp"
              (4212740 'move' _this_tmp_[4212738](4212474 call table[3340092] this[4212003]))
              val coerce_tmp[4212745]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4212749 'move' coerce_tmp[4212745](4212747 'deref' _this_tmp_[4212738]))
              (4212471 'move' call_tmp[4212469](4212477 call this[3343256] coerce_tmp[4212745] slot[4212456]))
              (4212479 'move' aSlot[4212465] call_tmp[4212469])
              (4212483 'end of statement' slot[4212456])
              val call_tmp[4212485]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4212487 'move' call_tmp[4212485](4212490 call _isSlotFull[4212676] aSlot[4212465]))
              val call_tmp[4212492]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4212494 'move' call_tmp[4212492] call_tmp[4212485])
              if call_tmp[4212492]
              {
                (4212502 call _deinitSlot[3350531] aSlot[4212465])
                (4212504 'end of statement' aSlot[4212465])
              }
            }
            label _continueLabel[4212507]
            _indexOfInterest[4212418]
            _iterator[4212420]
          }
          label _breakLabel[4212509]
        }
      }
    }
    (4212546 'end of statement')
    const-ref call_tmp[4212513]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "maybe param" "temp"
    (4212515 'move' call_tmp[4212513](4212518 call table[3340092] this[4212003]))
    const-ref call_tmp[4212521]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4212523 'move' call_tmp[4212521](4212526 call tableSize[3340120] this[4212003]))
    val coerce_tmp[4212756]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4212760 'move' coerce_tmp[4212756](4212758 'deref' call_tmp[4212513]))
    val coerce_tmp[4212762]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4212766 'move' coerce_tmp[4212762](4212764 'deref' call_tmp[4212521]))
    (4212530 call _freeData[3348480] coerce_tmp[4212756] coerce_tmp[4212762])
    (4212533 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].deinit[4215573](const  ref arg this[4215577]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[4215583]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4215585]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4215598]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4216116 'end of statement')
    val tmp[4215611]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4215613]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4215615]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4216118 'end of statement')
    val call_tmp[4215663]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val tmp[4215672]:bool[19] "dead after last mention" "maybe param" "temp"
      val tmp[4215674]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4215676]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4215684]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4215696]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4216129 'end of statement')
      val tmp[4215709]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val tmp[4215711]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4215713]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[4215733]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[4215735]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-ref call_tmp[4215743]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4215745 'move' call_tmp[4215743](4215748 call tableSize[3355205] this[4215577]))
      val call_tmp[4215751]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4216135]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4216139 'move' coerce_tmp[4216135](4216137 'deref' call_tmp[4215743]))
      (4215753 'move' call_tmp[4215751](4215756 call _deinitElementsIsParallel[4033169] coerce_tmp[4216135]))
      (4215759 'move' tmp[4215733] call_tmp[4215751])
      (4215764 'move' tmp[4215709] tmp[4215733])
      (4216131 'end of statement')
      (4215770 'move' tmp[4215672] tmp[4215709])
      val call_tmp[4215773]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4216144 'end of statement')
      val tmp[4215786]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[4215788]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4215790]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4215792 'move' call_tmp[4215790] tmp[4215672])
      (4215797 'move' tmp[4215788] call_tmp[4215790])
      if tmp[4215788]
      {
        val tmp[4215804]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4215806]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4215814]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4215826]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4216153 'end of statement')
        val tmp[4215839]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val tmp[4215841]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4215843]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[4215863]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[4215865]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-ref call_tmp[4215873]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4215875 'move' call_tmp[4215873](4215878 call tableSize[3355205] this[4215577]))
        val call_tmp[4215881]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[4216197]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4216201 'move' coerce_tmp[4216197](4216199 'deref' call_tmp[4215873]))
        (4215883 'move' call_tmp[4215881](4215886 call _deinitElementsIsParallel[4216159] coerce_tmp[4216197]))
        (4215889 'move' tmp[4215863] call_tmp[4215881])
        (4215894 'move' tmp[4215839] tmp[4215863])
        (4216155 'end of statement')
        val tmp[4215900]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (4215902 'move' tmp[4215900] tmp[4215839])
        (4215907 'move' tmp[4215786] tmp[4215900])
      }
      {
        (4215913 'move' tmp[4215786] 0)
      }
      val call_tmp[4215919]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4215921 'move' call_tmp[4215919] tmp[4215786])
      if call_tmp[4215919]
      {
        const-ref call_tmp[4215930]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4215932 'move' call_tmp[4215930](4215935 call tableSize[3355205] this[4215577]))
        val coerce_tmp[4216554]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4216558 'move' coerce_tmp[4216554](4216556 'deref' call_tmp[4215930]))
        const-ref table_ref[4216574]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
        (4216581 'move' table_ref[4216574](4216577 call table[3355177] this[4215577]))
        Forall[4215986] {
          induction variables:
            
            const slot[4215987]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
          iterated expressions:
            (4216562 call _allSlots[1946294] coerce_tmp[4216554])
          shadow variables:
            INP_table_svar[4216589]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] parent-in intent outer var table_ref[4216574]
              init block
              {
                (4216732 '=' INP_table_svar[4216589](4216730 'deref' table_ref[4216574]))
              }
              deinit block
              {
              }
            table_svar[4216585]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] 'const in' intent outer var table_ref[4216574]
              init block
              {
                (4216597 'move' table_svar[4216585](4216603 call chpl__initCopy[3356793] INP_table_svar[4216589] 1))
              }
              deinit block
              {
                (4216601 call chpl__autoDestroy[3358551] table_svar[4216585])
              }
          other variables
            val chpl__iterPAR[4216609]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
            val chpl__parIter[4216610]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4216614 call _getIterator[1949136] chpl__iterPAR[4216609])(4216617 call _freeIterator[1949375] chpl__parIter[4216610])
            forall body
          {
            ref aSlot[4215944]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "ref var"
            ref call_tmp[4215948]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "maybe param" "temp"
            (4215950 'move' call_tmp[4215948](4215956 call this[3358341] table_svar[4216585] slot[4215987]))
            (4215958 'move' aSlot[4215944] call_tmp[4215948])
            (4215962 'end of statement' slot[4215987])
            val call_tmp[4215964]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4215966 'move' call_tmp[4215964](4215969 call _isSlotFull[4216637] aSlot[4215944]))
            val call_tmp[4215971]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4215973 'move' call_tmp[4215971] call_tmp[4215964])
            if call_tmp[4215971]
            {
              (4215981 call _deinitSlot[3373527] aSlot[4215944])
              (4215983 'end of statement' aSlot[4215944])
            }
          }
        }
      }
      {
        {
          val _indexOfInterest[4215992]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4215994]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4215996]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4215998 'move' call_tmp[4215996](4216001 call tableSize[3355205] this[4215577]))
          val call_tmp[4216004]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[4216688]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4216692 'move' coerce_tmp[4216688](4216690 'deref' call_tmp[4215996]))
          (4216006 'move' call_tmp[4216004](4216009 call _allSlots[265237] coerce_tmp[4216688]))
          (4216011 'move' _iterator[4215994](4216014 call _getIterator[1946146] call_tmp[4216004]))
          Defer
          {
            {
              (4216018 call _freeIterator[1947321] _iterator[4215994])
            }
          }
          ForLoop[4216027]
          {
            const slot[4216030]:int(64)[10] "const" "index var" "insert auto destroy"
            (4216032 'end of statement')
            (4216033 'move' slot[4216030] _indexOfInterest[4215992])
            (4216036 'end of statement' slot[4216030])
            {
              ref aSlot[4216039]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "ref var"
              ref call_tmp[4216043]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[4216699]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead at end of block" "temp"
              (4216701 'move' _this_tmp_[4216699](4216048 call table[3355177] this[4215577]))
              val coerce_tmp[4216706]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4216710 'move' coerce_tmp[4216706](4216708 'deref' _this_tmp_[4216699]))
              (4216045 'move' call_tmp[4216043](4216051 call this[3358341] coerce_tmp[4216706] slot[4216030]))
              (4216053 'move' aSlot[4216039] call_tmp[4216043])
              (4216057 'end of statement' slot[4216030])
              val call_tmp[4216059]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4216061 'move' call_tmp[4216059](4216064 call _isSlotFull[4216637] aSlot[4216039]))
              val call_tmp[4216066]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4216068 'move' call_tmp[4216066] call_tmp[4216059])
              if call_tmp[4216066]
              {
                (4216076 call _deinitSlot[3373527] aSlot[4216039])
                (4216078 'end of statement' aSlot[4216039])
              }
            }
            label _continueLabel[4216081]
            _indexOfInterest[4215992]
            _iterator[4215994]
          }
          label _breakLabel[4216083]
        }
      }
    }
    (4216120 'end of statement')
    const-ref call_tmp[4216087]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "maybe param" "temp"
    (4216089 'move' call_tmp[4216087](4216092 call table[3355177] this[4215577]))
    const-ref call_tmp[4216095]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4216097 'move' call_tmp[4216095](4216100 call tableSize[3355205] this[4215577]))
    val coerce_tmp[4216717]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4216721 'move' coerce_tmp[4216717](4216719 'deref' call_tmp[4216087]))
    val coerce_tmp[4216723]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4216727 'move' coerce_tmp[4216723](4216725 'deref' call_tmp[4216095]))
    (4216104 call _freeData[3366161] coerce_tmp[4216717] coerce_tmp[4216723])
    (4216107 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].deinit[4217590](const  ref arg this[4217594]:_ref(chpl__hashtable(string,int(64)))[3288858]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[4217600]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4217602]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4217615]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4218133 'end of statement')
    val tmp[4217628]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4217630]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4217632]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4218135 'end of statement')
    val call_tmp[4217680]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val tmp[4217689]:bool[19] "dead after last mention" "maybe param" "temp"
      val tmp[4217691]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4217693]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4217701]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4217713]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4218146 'end of statement')
      val tmp[4217726]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val tmp[4217728]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4217730]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[4217750]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[4217752]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-ref call_tmp[4217760]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4217762 'move' call_tmp[4217760](4217765 call tableSize[3301883] this[4217594]))
      val call_tmp[4217768]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4218152]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4218156 'move' coerce_tmp[4218152](4218154 'deref' call_tmp[4217760]))
      (4217770 'move' call_tmp[4217768](4217773 call _deinitElementsIsParallel[4033169] coerce_tmp[4218152]))
      (4217776 'move' tmp[4217750] call_tmp[4217768])
      (4217781 'move' tmp[4217726] tmp[4217750])
      (4218148 'end of statement')
      (4217787 'move' tmp[4217689] tmp[4217726])
      val call_tmp[4217790]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4218161 'end of statement')
      val tmp[4217803]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[4217805]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4217807]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4217809 'move' call_tmp[4217807] tmp[4217689])
      (4217814 'move' tmp[4217805] call_tmp[4217807])
      if tmp[4217805]
      {
        val tmp[4217821]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4217823]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4217831]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4217843]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4218170 'end of statement')
        val tmp[4217856]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
        val tmp[4217858]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4217860]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4218172 'end of statement')
        val tmp[4217917]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (4217924 'move' tmp[4217803] 1)
      }
      {
        (4217930 'move' tmp[4217803] 0)
      }
      val call_tmp[4217936]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4217938 'move' call_tmp[4217936] tmp[4217803])
      if call_tmp[4217936]
      {
        const-ref call_tmp[4217947]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4217949 'move' call_tmp[4217947](4217952 call tableSize[3301883] this[4217594]))
        val coerce_tmp[4218174]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4218178 'move' coerce_tmp[4218174](4218176 'deref' call_tmp[4217947]))
        const-ref table_ref[4218194]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
        (4218201 'move' table_ref[4218194](4218197 call table[3303003] this[4217594]))
        Forall[4218003] {
          induction variables:
            
            const slot[4218004]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
          iterated expressions:
            (4218182 call _allSlots[1946294] coerce_tmp[4218174])
          shadow variables:
            INP_table_svar[4218209]:_ddata(chpl_TableEntry(string,int(64)))[3288904] parent-in intent outer var table_ref[4218194]
              init block
              {
                (4218352 '=' INP_table_svar[4218209](4218350 'deref' table_ref[4218194]))
              }
              deinit block
              {
              }
            table_svar[4218205]:_ddata(chpl_TableEntry(string,int(64)))[3288904] 'const in' intent outer var table_ref[4218194]
              init block
              {
                (4218217 'move' table_svar[4218205](4218223 call chpl__initCopy[3303034] INP_table_svar[4218209] 1))
              }
              deinit block
              {
                (4218221 call chpl__autoDestroy[3306325] table_svar[4218205])
              }
          other variables
            val chpl__iterPAR[4218229]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
            val chpl__parIter[4218230]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4218234 call _getIterator[1949136] chpl__iterPAR[4218229])(4218237 call _freeIterator[1949375] chpl__parIter[4218230])
            forall body
          {
            ref aSlot[4217961]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "ref var"
            ref call_tmp[4217965]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "maybe param" "temp"
            (4217967 'move' call_tmp[4217965](4217973 call this[3306115] table_svar[4218205] slot[4218004]))
            (4217975 'move' aSlot[4217961] call_tmp[4217965])
            (4217979 'end of statement' slot[4218004])
            val call_tmp[4217981]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4217983 'move' call_tmp[4217981](4217986 call _isSlotFull[4218257] aSlot[4217961]))
            val call_tmp[4217988]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4217990 'move' call_tmp[4217988] call_tmp[4217981])
            if call_tmp[4217988]
            {
              (4217998 call _deinitSlot[3308781] aSlot[4217961])
              (4218000 'end of statement' aSlot[4217961])
            }
          }
        }
      }
      {
        {
          val _indexOfInterest[4218009]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4218011]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4218013]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4218015 'move' call_tmp[4218013](4218018 call tableSize[3301883] this[4217594]))
          val call_tmp[4218021]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[4218308]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4218312 'move' coerce_tmp[4218308](4218310 'deref' call_tmp[4218013]))
          (4218023 'move' call_tmp[4218021](4218026 call _allSlots[265237] coerce_tmp[4218308]))
          (4218028 'move' _iterator[4218011](4218031 call _getIterator[1946146] call_tmp[4218021]))
          Defer
          {
            {
              (4218035 call _freeIterator[1947321] _iterator[4218011])
            }
          }
          ForLoop[4218044]
          {
            const slot[4218047]:int(64)[10] "const" "index var" "insert auto destroy"
            (4218049 'end of statement')
            (4218050 'move' slot[4218047] _indexOfInterest[4218009])
            (4218053 'end of statement' slot[4218047])
            {
              ref aSlot[4218056]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "ref var"
              ref call_tmp[4218060]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[4218319]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead at end of block" "temp"
              (4218321 'move' _this_tmp_[4218319](4218065 call table[3303003] this[4217594]))
              val coerce_tmp[4218326]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4218330 'move' coerce_tmp[4218326](4218328 'deref' _this_tmp_[4218319]))
              (4218062 'move' call_tmp[4218060](4218068 call this[3306115] coerce_tmp[4218326] slot[4218047]))
              (4218070 'move' aSlot[4218056] call_tmp[4218060])
              (4218074 'end of statement' slot[4218047])
              val call_tmp[4218076]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4218078 'move' call_tmp[4218076](4218081 call _isSlotFull[4218257] aSlot[4218056]))
              val call_tmp[4218083]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4218085 'move' call_tmp[4218083] call_tmp[4218076])
              if call_tmp[4218083]
              {
                (4218093 call _deinitSlot[3308781] aSlot[4218056])
                (4218095 'end of statement' aSlot[4218056])
              }
            }
            label _continueLabel[4218098]
            _indexOfInterest[4218009]
            _iterator[4218011]
          }
          label _breakLabel[4218100]
        }
      }
    }
    (4218137 'end of statement')
    const-ref call_tmp[4218104]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "maybe param" "temp"
    (4218106 'move' call_tmp[4218104](4218109 call table[3303003] this[4217594]))
    const-ref call_tmp[4218112]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4218114 'move' call_tmp[4218112](4218117 call tableSize[3301883] this[4217594]))
    val coerce_tmp[4218337]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4218341 'move' coerce_tmp[4218337](4218339 'deref' call_tmp[4218104]))
    val coerce_tmp[4218343]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4218347 'move' coerce_tmp[4218343](4218345 'deref' call_tmp[4218112]))
    (4218121 call _freeData[3308114] coerce_tmp[4218337] coerce_tmp[4218343])
    (4218124 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].deinit[4233673](const  ref arg this[4233677]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[4233683]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4233685]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4233698]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4234216 'end of statement')
    val tmp[4233711]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4233713]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4233715]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4234218 'end of statement')
    val call_tmp[4233763]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val tmp[4233772]:bool[19] "dead after last mention" "maybe param" "temp"
      val tmp[4233774]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4233776]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4233784]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4233796]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4234229 'end of statement')
      val tmp[4233809]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val tmp[4233811]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4233813]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[4233833]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[4233835]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-ref call_tmp[4233843]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4233845 'move' call_tmp[4233843](4233848 call tableSize[3392339] this[4233677]))
      val call_tmp[4233851]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4234235]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4234239 'move' coerce_tmp[4234235](4234237 'deref' call_tmp[4233843]))
      (4233853 'move' call_tmp[4233851](4233856 call _deinitElementsIsParallel[4033169] coerce_tmp[4234235]))
      (4233859 'move' tmp[4233833] call_tmp[4233851])
      (4233864 'move' tmp[4233809] tmp[4233833])
      (4234231 'end of statement')
      (4233870 'move' tmp[4233772] tmp[4233809])
      val call_tmp[4233873]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4234244 'end of statement')
      val tmp[4233886]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[4233888]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4233890]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4233892 'move' call_tmp[4233890] tmp[4233772])
      (4233897 'move' tmp[4233888] call_tmp[4233890])
      if tmp[4233888]
      {
        val tmp[4233904]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4233906]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4233914]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4233926]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4234253 'end of statement')
        val tmp[4233939]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val tmp[4233941]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4233943]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[4233963]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[4233965]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-ref call_tmp[4233973]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4233975 'move' call_tmp[4233973](4233978 call tableSize[3392339] this[4233677]))
        val call_tmp[4233981]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[4234297]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4234301 'move' coerce_tmp[4234297](4234299 'deref' call_tmp[4233973]))
        (4233983 'move' call_tmp[4233981](4233986 call _deinitElementsIsParallel[4234259] coerce_tmp[4234297]))
        (4233989 'move' tmp[4233963] call_tmp[4233981])
        (4233994 'move' tmp[4233939] tmp[4233963])
        (4234255 'end of statement')
        val tmp[4234000]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (4234002 'move' tmp[4234000] tmp[4233939])
        (4234007 'move' tmp[4233886] tmp[4234000])
      }
      {
        (4234013 'move' tmp[4233886] 0)
      }
      val call_tmp[4234019]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4234021 'move' call_tmp[4234019] tmp[4233886])
      if call_tmp[4234019]
      {
        const-ref call_tmp[4234030]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4234032 'move' call_tmp[4234030](4234035 call tableSize[3392339] this[4233677]))
        val coerce_tmp[4235824]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4235828 'move' coerce_tmp[4235824](4235826 'deref' call_tmp[4234030]))
        const-ref table_ref[4235844]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "temp"
        (4235851 'move' table_ref[4235844](4235847 call table[3392311] this[4233677]))
        Forall[4234086] {
          induction variables:
            
            const slot[4234087]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
          iterated expressions:
            (4235832 call _allSlots[1946294] coerce_tmp[4235824])
          shadow variables:
            INP_table_svar[4235859]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] parent-in intent outer var table_ref[4235844]
              init block
              {
                (4236002 '=' INP_table_svar[4235859](4236000 'deref' table_ref[4235844]))
              }
              deinit block
              {
              }
            table_svar[4235855]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] 'const in' intent outer var table_ref[4235844]
              init block
              {
                (4235867 'move' table_svar[4235855](4235873 call chpl__initCopy[3393927] INP_table_svar[4235859] 1))
              }
              deinit block
              {
                (4235871 call chpl__autoDestroy[3395685] table_svar[4235855])
              }
          other variables
            val chpl__iterPAR[4235879]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
            val chpl__parIter[4235880]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4235884 call _getIterator[1949136] chpl__iterPAR[4235879])(4235887 call _freeIterator[1949375] chpl__parIter[4235880])
            forall body
          {
            ref aSlot[4234044]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "ref var"
            ref call_tmp[4234048]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
            (4234050 'move' call_tmp[4234048](4234056 call this[3395475] table_svar[4235855] slot[4234087]))
            (4234058 'move' aSlot[4234044] call_tmp[4234048])
            (4234062 'end of statement' slot[4234087])
            val call_tmp[4234064]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4234066 'move' call_tmp[4234064](4234069 call _isSlotFull[4235907] aSlot[4234044]))
            val call_tmp[4234071]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4234073 'move' call_tmp[4234071] call_tmp[4234064])
            if call_tmp[4234071]
            {
              (4234081 call _deinitSlot[3404771] aSlot[4234044])
              (4234083 'end of statement' aSlot[4234044])
            }
          }
        }
      }
      {
        {
          val _indexOfInterest[4234092]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4234094]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4234096]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4234098 'move' call_tmp[4234096](4234101 call tableSize[3392339] this[4233677]))
          val call_tmp[4234104]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[4235958]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4235962 'move' coerce_tmp[4235958](4235960 'deref' call_tmp[4234096]))
          (4234106 'move' call_tmp[4234104](4234109 call _allSlots[265237] coerce_tmp[4235958]))
          (4234111 'move' _iterator[4234094](4234114 call _getIterator[1946146] call_tmp[4234104]))
          Defer
          {
            {
              (4234118 call _freeIterator[1947321] _iterator[4234094])
            }
          }
          ForLoop[4234127]
          {
            const slot[4234130]:int(64)[10] "const" "index var" "insert auto destroy"
            (4234132 'end of statement')
            (4234133 'move' slot[4234130] _indexOfInterest[4234092])
            (4234136 'end of statement' slot[4234130])
            {
              ref aSlot[4234139]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "ref var"
              ref call_tmp[4234143]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[4235969]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead at end of block" "temp"
              (4235971 'move' _this_tmp_[4235969](4234148 call table[3392311] this[4233677]))
              val coerce_tmp[4235976]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4235980 'move' coerce_tmp[4235976](4235978 'deref' _this_tmp_[4235969]))
              (4234145 'move' call_tmp[4234143](4234151 call this[3395475] coerce_tmp[4235976] slot[4234130]))
              (4234153 'move' aSlot[4234139] call_tmp[4234143])
              (4234157 'end of statement' slot[4234130])
              val call_tmp[4234159]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4234161 'move' call_tmp[4234159](4234164 call _isSlotFull[4235907] aSlot[4234139]))
              val call_tmp[4234166]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4234168 'move' call_tmp[4234166] call_tmp[4234159])
              if call_tmp[4234166]
              {
                (4234176 call _deinitSlot[3404771] aSlot[4234139])
                (4234178 'end of statement' aSlot[4234139])
              }
            }
            label _continueLabel[4234181]
            _indexOfInterest[4234092]
            _iterator[4234094]
          }
          label _breakLabel[4234183]
        }
      }
    }
    (4234220 'end of statement')
    const-ref call_tmp[4234187]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "maybe param" "temp"
    (4234189 'move' call_tmp[4234187](4234192 call table[3392311] this[4233677]))
    const-ref call_tmp[4234195]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4234197 'move' call_tmp[4234195](4234200 call tableSize[3392339] this[4233677]))
    val coerce_tmp[4235987]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4235991 'move' coerce_tmp[4235987](4235989 'deref' call_tmp[4234187]))
    val coerce_tmp[4235993]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4235997 'move' coerce_tmp[4235993](4235995 'deref' call_tmp[4234195]))
    (4234204 call _freeData[3404078] coerce_tmp[4235987] coerce_tmp[4235993])
    (4234207 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].deinit[4239690](const  ref arg this[4239694]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[4239700]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4239702]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4239715]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4240233 'end of statement')
    val tmp[4239728]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4239730]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4239732]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4240235 'end of statement')
    val call_tmp[4239780]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val tmp[4239789]:bool[19] "dead after last mention" "maybe param" "temp"
      val tmp[4239791]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4239793]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4239801]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4239813]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4240246 'end of statement')
      val tmp[4239826]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val tmp[4239828]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4239830]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[4239850]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[4239852]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-ref call_tmp[4239860]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4239862 'move' call_tmp[4239860](4239865 call tableSize[3828932] this[4239694]))
      val call_tmp[4239868]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4240252]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4240256 'move' coerce_tmp[4240252](4240254 'deref' call_tmp[4239860]))
      (4239870 'move' call_tmp[4239868](4239873 call _deinitElementsIsParallel[4033169] coerce_tmp[4240252]))
      (4239876 'move' tmp[4239850] call_tmp[4239868])
      (4239881 'move' tmp[4239826] tmp[4239850])
      (4240248 'end of statement')
      (4239887 'move' tmp[4239789] tmp[4239826])
      val call_tmp[4239890]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4240261 'end of statement')
      val tmp[4239903]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[4239905]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4239907]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4239909 'move' call_tmp[4239907] tmp[4239789])
      (4239914 'move' tmp[4239905] call_tmp[4239907])
      if tmp[4239905]
      {
        val tmp[4239921]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4239923]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4239931]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4239943]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4240270 'end of statement')
        val tmp[4239956]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
        val tmp[4239958]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4239960]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4240272 'end of statement')
        val tmp[4240017]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (4240024 'move' tmp[4239903] 1)
      }
      {
        (4240030 'move' tmp[4239903] 0)
      }
      val call_tmp[4240036]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4240038 'move' call_tmp[4240036] tmp[4239903])
      if call_tmp[4240036]
      {
        const-ref call_tmp[4240047]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4240049 'move' call_tmp[4240047](4240052 call tableSize[3828932] this[4239694]))
        val coerce_tmp[4240274]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4240278 'move' coerce_tmp[4240274](4240276 'deref' call_tmp[4240047]))
        const-ref table_ref[4240294]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "temp"
        (4240301 'move' table_ref[4240294](4240297 call table[3828904] this[4239694]))
        Forall[4240103] {
          induction variables:
            
            const slot[4240104]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
          iterated expressions:
            (4240282 call _allSlots[1946294] coerce_tmp[4240274])
          shadow variables:
            INP_table_svar[4240309]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] parent-in intent outer var table_ref[4240294]
              init block
              {
                (4240452 '=' INP_table_svar[4240309](4240450 'deref' table_ref[4240294]))
              }
              deinit block
              {
              }
            table_svar[4240305]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] 'const in' intent outer var table_ref[4240294]
              init block
              {
                (4240317 'move' table_svar[4240305](4240323 call chpl__initCopy[3830520] INP_table_svar[4240309] 1))
              }
              deinit block
              {
                (4240321 call chpl__autoDestroy[3832278] table_svar[4240305])
              }
          other variables
            val chpl__iterPAR[4240329]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
            val chpl__parIter[4240330]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4240334 call _getIterator[1949136] chpl__iterPAR[4240329])(4240337 call _freeIterator[1949375] chpl__parIter[4240330])
            forall body
          {
            ref aSlot[4240061]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "ref var"
            ref call_tmp[4240065]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "maybe param" "temp"
            (4240067 'move' call_tmp[4240065](4240073 call this[3832068] table_svar[4240305] slot[4240104]))
            (4240075 'move' aSlot[4240061] call_tmp[4240065])
            (4240079 'end of statement' slot[4240104])
            val call_tmp[4240081]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4240083 'move' call_tmp[4240081](4240086 call _isSlotFull[4240357] aSlot[4240061]))
            val call_tmp[4240088]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4240090 'move' call_tmp[4240088] call_tmp[4240081])
            if call_tmp[4240088]
            {
              (4240098 call _deinitSlot[3864292] aSlot[4240061])
              (4240100 'end of statement' aSlot[4240061])
            }
          }
        }
      }
      {
        {
          val _indexOfInterest[4240109]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4240111]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4240113]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4240115 'move' call_tmp[4240113](4240118 call tableSize[3828932] this[4239694]))
          val call_tmp[4240121]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[4240408]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4240412 'move' coerce_tmp[4240408](4240410 'deref' call_tmp[4240113]))
          (4240123 'move' call_tmp[4240121](4240126 call _allSlots[265237] coerce_tmp[4240408]))
          (4240128 'move' _iterator[4240111](4240131 call _getIterator[1946146] call_tmp[4240121]))
          Defer
          {
            {
              (4240135 call _freeIterator[1947321] _iterator[4240111])
            }
          }
          ForLoop[4240144]
          {
            const slot[4240147]:int(64)[10] "const" "index var" "insert auto destroy"
            (4240149 'end of statement')
            (4240150 'move' slot[4240147] _indexOfInterest[4240109])
            (4240153 'end of statement' slot[4240147])
            {
              ref aSlot[4240156]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "ref var"
              ref call_tmp[4240160]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[4240419]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead at end of block" "temp"
              (4240421 'move' _this_tmp_[4240419](4240165 call table[3828904] this[4239694]))
              val coerce_tmp[4240426]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4240430 'move' coerce_tmp[4240426](4240428 'deref' _this_tmp_[4240419]))
              (4240162 'move' call_tmp[4240160](4240168 call this[3832068] coerce_tmp[4240426] slot[4240147]))
              (4240170 'move' aSlot[4240156] call_tmp[4240160])
              (4240174 'end of statement' slot[4240147])
              val call_tmp[4240176]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4240178 'move' call_tmp[4240176](4240181 call _isSlotFull[4240357] aSlot[4240156]))
              val call_tmp[4240183]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4240185 'move' call_tmp[4240183] call_tmp[4240176])
              if call_tmp[4240183]
              {
                (4240193 call _deinitSlot[3864292] aSlot[4240156])
                (4240195 'end of statement' aSlot[4240156])
              }
            }
            label _continueLabel[4240198]
            _indexOfInterest[4240109]
            _iterator[4240111]
          }
          label _breakLabel[4240200]
        }
      }
    }
    (4240237 'end of statement')
    const-ref call_tmp[4240204]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "maybe param" "temp"
    (4240206 'move' call_tmp[4240204](4240209 call table[3828904] this[4239694]))
    const-ref call_tmp[4240212]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4240214 'move' call_tmp[4240212](4240217 call tableSize[3828932] this[4239694]))
    val coerce_tmp[4240437]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4240441 'move' coerce_tmp[4240437](4240439 'deref' call_tmp[4240204]))
    val coerce_tmp[4240443]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4240447 'move' coerce_tmp[4240443](4240445 'deref' call_tmp[4240212]))
    (4240221 call _freeData[3863627] coerce_tmp[4240437] coerce_tmp[4240443])
    (4240224 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].deinit[4315383](const  ref arg this[4315387]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[4315393]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4315395]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4315408]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4315926 'end of statement')
    val tmp[4315421]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[4315423]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4315425]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4315928 'end of statement')
    val call_tmp[4315473]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val tmp[4315482]:bool[19] "dead after last mention" "maybe param" "temp"
      val tmp[4315484]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4315486]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4315494]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4315506]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4315939 'end of statement')
      val tmp[4315519]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val tmp[4315521]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4315523]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val tmp[4315543]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[4315545]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-ref call_tmp[4315553]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4315555 'move' call_tmp[4315553](4315558 call tableSize[4305492] this[4315387]))
      val call_tmp[4315561]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4315945]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4315949 'move' coerce_tmp[4315945](4315947 'deref' call_tmp[4315553]))
      (4315563 'move' call_tmp[4315561](4315566 call _deinitElementsIsParallel[4033169] coerce_tmp[4315945]))
      (4315569 'move' tmp[4315543] call_tmp[4315561])
      (4315574 'move' tmp[4315519] tmp[4315543])
      (4315941 'end of statement')
      (4315580 'move' tmp[4315482] tmp[4315519])
      val call_tmp[4315583]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (4315954 'end of statement')
      val tmp[4315596]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      val tmp[4315598]:bool[19] "dead after last mention" "maybe param" "temp"
      val call_tmp[4315600]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4315602 'move' call_tmp[4315600] tmp[4315482])
      (4315607 'move' tmp[4315598] call_tmp[4315600])
      if tmp[4315598]
      {
        val tmp[4315614]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4315616]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[4315624]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4315636]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        (4315963 'end of statement')
        val tmp[4315649]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val tmp[4315651]:bool[19] "dead after last mention" "maybe param" "temp"
        val call_tmp[4315653]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[4315673]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[4315675]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-ref call_tmp[4315683]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4315685 'move' call_tmp[4315683](4315688 call tableSize[4305492] this[4315387]))
        val call_tmp[4315691]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[4316007]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4316011 'move' coerce_tmp[4316007](4316009 'deref' call_tmp[4315683]))
        (4315693 'move' call_tmp[4315691](4315696 call _deinitElementsIsParallel[4315969] coerce_tmp[4316007]))
        (4315699 'move' tmp[4315673] call_tmp[4315691])
        (4315704 'move' tmp[4315649] tmp[4315673])
        (4315965 'end of statement')
        val tmp[4315710]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (4315712 'move' tmp[4315710] tmp[4315649])
        (4315717 'move' tmp[4315596] tmp[4315710])
      }
      {
        (4315723 'move' tmp[4315596] 0)
      }
      val call_tmp[4315729]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4315731 'move' call_tmp[4315729] tmp[4315596])
      if call_tmp[4315729]
      {
        const-ref call_tmp[4315740]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4315742 'move' call_tmp[4315740](4315745 call tableSize[4305492] this[4315387]))
        val coerce_tmp[4317534]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4317538 'move' coerce_tmp[4317534](4317536 'deref' call_tmp[4315740]))
        const-ref table_ref[4317554]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "temp"
        (4317561 'move' table_ref[4317554](4317557 call table[4305464] this[4315387]))
        Forall[4315796] {
          induction variables:
            
            const slot[4315797]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
          iterated expressions:
            (4317542 call _allSlots[1946294] coerce_tmp[4317534])
          shadow variables:
            INP_table_svar[4317569]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] parent-in intent outer var table_ref[4317554]
              init block
              {
                (4317712 '=' INP_table_svar[4317569](4317710 'deref' table_ref[4317554]))
              }
              deinit block
              {
              }
            table_svar[4317565]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] 'const in' intent outer var table_ref[4317554]
              init block
              {
                (4317577 'move' table_svar[4317565](4317583 call chpl__initCopy[4307080] INP_table_svar[4317569] 1))
              }
              deinit block
              {
                (4317581 call chpl__autoDestroy[4308838] table_svar[4317565])
              }
          other variables
            val chpl__iterPAR[4317589]:_ir__allSlots[1949127] "dead at end of block" "chpl__iter" "chpl__iter_newstyle" "expr temp" "maybe ref" "no copy" "temp"
            val chpl__parIter[4317590]:_ic__allSlots[1949121] "dead at end of block" "expr temp" "temp"(4317594 call _getIterator[1949136] chpl__iterPAR[4317589])(4317597 call _freeIterator[1949375] chpl__parIter[4317590])
            forall body
          {
            ref aSlot[4315754]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "ref var"
            ref call_tmp[4315758]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "maybe param" "temp"
            (4315760 'move' call_tmp[4315758](4315766 call this[4308628] table_svar[4317565] slot[4315797]))
            (4315768 'move' aSlot[4315754] call_tmp[4315758])
            (4315772 'end of statement' slot[4315797])
            val call_tmp[4315774]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4315776 'move' call_tmp[4315774](4315779 call _isSlotFull[4317617] aSlot[4315754]))
            val call_tmp[4315781]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4315783 'move' call_tmp[4315781] call_tmp[4315774])
            if call_tmp[4315781]
            {
              (4315791 call _deinitSlot[4314620] aSlot[4315754])
              (4315793 'end of statement' aSlot[4315754])
            }
          }
        }
      }
      {
        {
          val _indexOfInterest[4315802]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4315804]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4315806]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4315808 'move' call_tmp[4315806](4315811 call tableSize[4305492] this[4315387]))
          val call_tmp[4315814]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[4317668]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4317672 'move' coerce_tmp[4317668](4317670 'deref' call_tmp[4315806]))
          (4315816 'move' call_tmp[4315814](4315819 call _allSlots[265237] coerce_tmp[4317668]))
          (4315821 'move' _iterator[4315804](4315824 call _getIterator[1946146] call_tmp[4315814]))
          Defer
          {
            {
              (4315828 call _freeIterator[1947321] _iterator[4315804])
            }
          }
          ForLoop[4315837]
          {
            const slot[4315840]:int(64)[10] "const" "index var" "insert auto destroy"
            (4315842 'end of statement')
            (4315843 'move' slot[4315840] _indexOfInterest[4315802])
            (4315846 'end of statement' slot[4315840])
            {
              ref aSlot[4315849]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "ref var"
              ref call_tmp[4315853]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[4317679]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead at end of block" "temp"
              (4317681 'move' _this_tmp_[4317679](4315858 call table[4305464] this[4315387]))
              val coerce_tmp[4317686]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4317690 'move' coerce_tmp[4317686](4317688 'deref' _this_tmp_[4317679]))
              (4315855 'move' call_tmp[4315853](4315861 call this[4308628] coerce_tmp[4317686] slot[4315840]))
              (4315863 'move' aSlot[4315849] call_tmp[4315853])
              (4315867 'end of statement' slot[4315840])
              val call_tmp[4315869]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4315871 'move' call_tmp[4315869](4315874 call _isSlotFull[4317617] aSlot[4315849]))
              val call_tmp[4315876]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4315878 'move' call_tmp[4315876] call_tmp[4315869])
              if call_tmp[4315876]
              {
                (4315886 call _deinitSlot[4314620] aSlot[4315849])
                (4315888 'end of statement' aSlot[4315849])
              }
            }
            label _continueLabel[4315891]
            _indexOfInterest[4315802]
            _iterator[4315804]
          }
          label _breakLabel[4315893]
        }
      }
    }
    (4315930 'end of statement')
    const-ref call_tmp[4315897]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "maybe param" "temp"
    (4315899 'move' call_tmp[4315897](4315902 call table[4305464] this[4315387]))
    const-ref call_tmp[4315905]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4315907 'move' call_tmp[4315905](4315910 call tableSize[4305492] this[4315387]))
    val coerce_tmp[4317697]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4317701 'move' coerce_tmp[4317697](4317699 'deref' call_tmp[4315897]))
    val coerce_tmp[4317703]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4317707 'move' coerce_tmp[4317703](4317705 'deref' call_tmp[4315905]))
    (4315914 call _freeData[4313706] coerce_tmp[4317697] coerce_tmp[4317703])
    (4315917 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].isSlotFull[3311860](const  ref arg this[3311864]:_ref(chpl__hashtable(string,int(64)))[3288858], const in arg slot[3311866]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3311870]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[3311878]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3311913]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
    (3311915 'move' _this_tmp_[3311913](3311883 call table[3303003] this[3311864]))
    val coerce_tmp[3311920]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3311924 'move' coerce_tmp[3311920](3311922 'deref' _this_tmp_[3311913]))
    (3311880 'move' call_tmp[3311878](3311886 call this[3306115] coerce_tmp[3311920] slot[3311866]))
    ref call_tmp[3311888]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3311890 'move' call_tmp[3311888](3311893 call status[3306607] call_tmp[3311878]))
    val call_tmp[3311896]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3311928]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3311932 'move' coerce_tmp[3311928](3311930 'deref' call_tmp[3311888]))
    (3311898 'move' call_tmp[3311896](3311901 call ==[3259199] coerce_tmp[3311928] full[264674]))
    (3311936 '=' ret[3311870] call_tmp[3311896])
    (3311909 return ret[3311870])
  }
  function _ref(chpl__hashtable(string,string))[3283450].isSlotFull[3345224](const  ref arg this[3345228]:_ref(chpl__hashtable(string,string))[3283450], const in arg slot[3345230]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3345234]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[3345242]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3345277]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
    (3345279 'move' _this_tmp_[3345277](3345247 call table[3340092] this[3345228]))
    val coerce_tmp[3345284]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3345288 'move' coerce_tmp[3345284](3345286 'deref' _this_tmp_[3345277]))
    (3345244 'move' call_tmp[3345242](3345250 call this[3343256] coerce_tmp[3345284] slot[3345230]))
    ref call_tmp[3345252]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3345254 'move' call_tmp[3345252](3345257 call status[3345291] call_tmp[3345242]))
    val call_tmp[3345260]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3345319]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3345323 'move' coerce_tmp[3345319](3345321 'deref' call_tmp[3345252]))
    (3345262 'move' call_tmp[3345260](3345265 call ==[3259199] coerce_tmp[3345319] full[264674]))
    (3345327 '=' ret[3345234] call_tmp[3345260])
    (3345273 return ret[3345234])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].isSlotFull[3360309](const  ref arg this[3360313]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const in arg slot[3360315]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3360319]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[3360327]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3360362]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
    (3360364 'move' _this_tmp_[3360362](3360332 call table[3355177] this[3360313]))
    val coerce_tmp[3360369]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3360373 'move' coerce_tmp[3360369](3360371 'deref' _this_tmp_[3360362]))
    (3360329 'move' call_tmp[3360327](3360335 call this[3358341] coerce_tmp[3360369] slot[3360315]))
    ref call_tmp[3360337]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3360339 'move' call_tmp[3360337](3360342 call status[3360376] call_tmp[3360327]))
    val call_tmp[3360345]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3360404]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3360408 'move' coerce_tmp[3360404](3360406 'deref' call_tmp[3360337]))
    (3360347 'move' call_tmp[3360345](3360350 call ==[3259199] coerce_tmp[3360404] full[264674]))
    (3360412 '=' ret[3360319] call_tmp[3360345])
    (3360358 return ret[3360319])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].isSlotFull[3407477](const  ref arg this[3407481]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const in arg slot[3407483]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3407487]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[3407495]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3407530]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "temp"
    (3407532 'move' _this_tmp_[3407530](3407500 call table[3392311] this[3407481]))
    val coerce_tmp[3407537]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3407541 'move' coerce_tmp[3407537](3407539 'deref' _this_tmp_[3407530]))
    (3407497 'move' call_tmp[3407495](3407503 call this[3395475] coerce_tmp[3407537] slot[3407483]))
    ref call_tmp[3407505]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3407507 'move' call_tmp[3407505](3407510 call status[3402569] call_tmp[3407495]))
    val call_tmp[3407513]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3407545]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3407549 'move' coerce_tmp[3407545](3407547 'deref' call_tmp[3407505]))
    (3407515 'move' call_tmp[3407513](3407518 call ==[3259199] coerce_tmp[3407545] full[264674]))
    (3407553 '=' ret[3407487] call_tmp[3407513])
    (3407526 return ret[3407487])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].isSlotFull[3421926](const  ref arg this[3421930]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const in arg slot[3421932]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3421936]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[3421944]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3421979]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "temp"
    (3421981 'move' _this_tmp_[3421979](3421949 call table[1942967] this[3421930]))
    val coerce_tmp[3421986]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3421990 'move' coerce_tmp[3421986](3421988 'deref' _this_tmp_[3421979]))
    (3421946 'move' call_tmp[3421944](3421952 call this[1947405] coerce_tmp[3421986] slot[3421932]))
    ref call_tmp[3421954]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3421956 'move' call_tmp[3421954](3421959 call status[3259161] call_tmp[3421944]))
    val call_tmp[3421962]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3421994]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3421998 'move' coerce_tmp[3421994](3421996 'deref' call_tmp[3421954]))
    (3421964 'move' call_tmp[3421962](3421967 call ==[3259199] coerce_tmp[3421994] full[264674]))
    (3422002 '=' ret[3421936] call_tmp[3421962])
    (3421975 return ret[3421936])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].isSlotFull[4238491](const  ref arg this[4238495]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const in arg slot[4238497]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4238501]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[4238509]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[4238544]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "temp"
    (4238546 'move' _this_tmp_[4238544](4238514 call table[3828904] this[4238495]))
    val coerce_tmp[4238551]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4238555 'move' coerce_tmp[4238551](4238553 'deref' _this_tmp_[4238544]))
    (4238511 'move' call_tmp[4238509](4238517 call this[3832068] coerce_tmp[4238551] slot[4238497]))
    ref call_tmp[4238519]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (4238521 'move' call_tmp[4238519](4238524 call status[3862118] call_tmp[4238509]))
    val call_tmp[4238527]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4238559]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4238563 'move' coerce_tmp[4238559](4238561 'deref' call_tmp[4238519]))
    (4238529 'move' call_tmp[4238527](4238532 call ==[3259199] coerce_tmp[4238559] full[264674]))
    (4238567 '=' ret[4238501] call_tmp[4238527])
    (4238540 return ret[4238501])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].isSlotFull[4310081](const  ref arg this[4310085]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const in arg slot[4310087]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4310091]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[4310099]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[4310134]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "temp"
    (4310136 'move' _this_tmp_[4310134](4310104 call table[4305464] this[4310085]))
    val coerce_tmp[4310141]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4310145 'move' coerce_tmp[4310141](4310143 'deref' _this_tmp_[4310134]))
    (4310101 'move' call_tmp[4310099](4310107 call this[4308628] coerce_tmp[4310141] slot[4310087]))
    ref call_tmp[4310109]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (4310111 'move' call_tmp[4310109](4310114 call status[4310148] call_tmp[4310099]))
    val call_tmp[4310117]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4310176]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4310180 'move' coerce_tmp[4310176](4310178 'deref' call_tmp[4310109]))
    (4310119 'move' call_tmp[4310117](4310122 call ==[3259199] coerce_tmp[4310176] full[264674]))
    (4310184 '=' ret[4310091] call_tmp[4310117])
    (4310130 return ret[4310091])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].advance[3311370](const in arg this[3311372]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : void[4] "auto ii" "method" "resolved"
  {
    (3311377 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].zip1[3311379](const in arg this[3311381]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3311386 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].zip2[3311388](const in arg this[3311390]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3311395 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].zip3[3311397](const in arg this[3311399]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3311404 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].zip4[3311406](const in arg this[3311408]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3311413 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].hasMore[3311415](const in arg this[3311417]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3311422 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].getValue[3311424](const in arg this[3311426]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3311431 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].init[3311433](const in arg this[3311435]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3311440 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344].incr[3311442](const in arg this[3311444]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3311449 return _void[46])
  }
  type _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] val super[3311345]:RootClass[236] "super class" val more[3311347]:int(64)[10]
  type _ic_allSlots__ref_chpl__hashtable_string_int64_t?[5488400]
  type _ic_allSlots__ref_chpl__hashtable_string_int64_t[5488397]
  type _ic_allSlots__ref_chpl__hashtable_string_int64_t[5488394]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_int64_t?[5488391]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_int64_t[5488388]
  type borrowed _ic_allSlots__ref_chpl__hashtable_string_int64_t?[5488385]
  type _ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350]
  function _getIterator[3311359](const  ref arg ir[3311361]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350]) : _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3311468]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "dead after last mention" "RVV" "temp"
    val _ic_[3311351]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "dead after last mention" "temp"
    val call_tmp[3311475]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3311478 'move' call_tmp[3311475](3311490 'sizeof_bundle' _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344]))
    val cast_tmp[3311493]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3311495 'move' cast_tmp[3311493](3311356 call chpl_here_alloc[308303] call_tmp[3311475] 325))
    (3311364 'move' _ic_[3311351](3311497 'cast' _ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] cast_tmp[3311493]))
    (3311366 'setcid' _ic_[3311351])
    (3311464 'end of statement')
    (3311473 'move' ret[3311468] _ic_[3311351])
    (3311470 return ret[3311468])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].allSlots[3311253](const  ref arg this[3311257]:_ref(chpl__hashtable(string,int(64)))[3288858]) : _ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3311259]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[3311268]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3311270]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[3311272]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
      (3311274 'move' call_tmp[3311272](3311277 call tableSize[3301883] this[3311257]))
      val call_tmp[3311280]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[3311333]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (3311337 'move' coerce_tmp[3311333](3311335 'deref' call_tmp[3311272]))
      (3311282 'move' call_tmp[3311280](3311285 call _allSlots[265237] coerce_tmp[3311333]))
      (3311287 'move' _iterator[3311270](3311290 call _getIterator[1946146] call_tmp[3311280]))
      Defer
      {
        {
          (3311294 call _freeIterator[1947321] _iterator[3311270])
        }
      }
      ForLoop[3311303] order-independent
      {
        const slot[3311306]:int(64)[10] "const" "index var" "insert auto destroy"
        (3311308 'end of statement')
        (3311309 'move' slot[3311306] _indexOfInterest[3311268])
        (3311312 'end of statement' slot[3311306])
        {
          val yret[3311315]:int(64)[10] "dead after last mention" "YVV" "temp"
          (3311317 'move' yret[3311315] slot[3311306])
          (3311321 yield yret[3311315])
          (3311323 'end of statement' slot[3311306])
        }
        label _continueLabel[3311325]
        _indexOfInterest[3311268]
        _iterator[3311270]
      }
      label _breakLabel[3311327]
    }
    (3311329 return ret[3311259])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].advance[3344755](const in arg this[3344757]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : void[4] "auto ii" "method" "resolved"
  {
    (3344762 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].zip1[3344764](const in arg this[3344766]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3344771 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].zip2[3344773](const in arg this[3344775]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3344780 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].zip3[3344782](const in arg this[3344784]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3344789 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].zip4[3344791](const in arg this[3344793]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3344798 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].hasMore[3344800](const in arg this[3344802]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3344807 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].getValue[3344809](const in arg this[3344811]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3344816 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].init[3344818](const in arg this[3344820]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3344825 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_string[3344729].incr[3344827](const in arg this[3344829]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3344834 return _void[46])
  }
  type _ic_allSlots__ref_chpl__hashtable_string_string[3344729] val super[3344730]:RootClass[236] "super class" val more[3344732]:int(64)[10]
  type _ic_allSlots__ref_chpl__hashtable_string_string?[5488436]
  type _ic_allSlots__ref_chpl__hashtable_string_string[5488433]
  type _ic_allSlots__ref_chpl__hashtable_string_string[5488430]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_string?[5488427]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_string[5488424]
  type borrowed _ic_allSlots__ref_chpl__hashtable_string_string?[5488421]
  type _ir_allSlots__ref_chpl__hashtable_string_string[3344735]
  function _getIterator[3344744](const  ref arg ir[3344746]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735]) : _ic_allSlots__ref_chpl__hashtable_string_string[3344729] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3344853]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "dead after last mention" "RVV" "temp"
    val _ic_[3344736]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "dead after last mention" "temp"
    val call_tmp[3344860]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3344863 'move' call_tmp[3344860](3344875 'sizeof_bundle' _ic_allSlots__ref_chpl__hashtable_string_string[3344729]))
    val cast_tmp[3344878]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3344880 'move' cast_tmp[3344878](3344741 call chpl_here_alloc[308303] call_tmp[3344860] 328))
    (3344749 'move' _ic_[3344736](3344882 'cast' _ic_allSlots__ref_chpl__hashtable_string_string[3344729] cast_tmp[3344878]))
    (3344751 'setcid' _ic_[3344736])
    (3344849 'end of statement')
    (3344858 'move' ret[3344853] _ic_[3344736])
    (3344855 return ret[3344853])
  }
  function _ref(chpl__hashtable(string,string))[3283450].allSlots[3344638](const  ref arg this[3344642]:_ref(chpl__hashtable(string,string))[3283450]) : _ir_allSlots__ref_chpl__hashtable_string_string[3344735] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3344644]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[3344653]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3344655]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[3344657]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
      (3344659 'move' call_tmp[3344657](3344662 call tableSize[3340120] this[3344642]))
      val call_tmp[3344665]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[3344718]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (3344722 'move' coerce_tmp[3344718](3344720 'deref' call_tmp[3344657]))
      (3344667 'move' call_tmp[3344665](3344670 call _allSlots[265237] coerce_tmp[3344718]))
      (3344672 'move' _iterator[3344655](3344675 call _getIterator[1946146] call_tmp[3344665]))
      Defer
      {
        {
          (3344679 call _freeIterator[1947321] _iterator[3344655])
        }
      }
      ForLoop[3344688] order-independent
      {
        const slot[3344691]:int(64)[10] "const" "index var" "insert auto destroy"
        (3344693 'end of statement')
        (3344694 'move' slot[3344691] _indexOfInterest[3344653])
        (3344697 'end of statement' slot[3344691])
        {
          val yret[3344700]:int(64)[10] "dead after last mention" "YVV" "temp"
          (3344702 'move' yret[3344700] slot[3344691])
          (3344706 yield yret[3344700])
          (3344708 'end of statement' slot[3344691])
        }
        label _continueLabel[3344710]
        _indexOfInterest[3344653]
        _iterator[3344655]
      }
      label _breakLabel[3344712]
    }
    (3344714 return ret[3344644])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].advance[3359840](const in arg this[3359842]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : void[4] "auto ii" "method" "resolved"
  {
    (3359847 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].zip1[3359849](const in arg this[3359851]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3359856 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].zip2[3359858](const in arg this[3359860]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3359865 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].zip3[3359867](const in arg this[3359869]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3359874 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].zip4[3359876](const in arg this[3359878]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3359883 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].hasMore[3359885](const in arg this[3359887]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3359892 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].getValue[3359894](const in arg this[3359896]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3359901 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].init[3359903](const in arg this[3359905]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3359910 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814].incr[3359912](const in arg this[3359914]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3359919 return _void[46])
  }
  type _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] val super[3359815]:RootClass[236] "super class" val more[3359817]:int(64)[10]
  type _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification?[5488472]
  type _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[5488469]
  type _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[5488466]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification?[5488463]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[5488460]
  type borrowed _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification?[5488457]
  type _ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820]
  function _getIterator[3359829](const  ref arg ir[3359831]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820]) : _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3359938]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "dead after last mention" "RVV" "temp"
    val _ic_[3359821]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "dead after last mention" "temp"
    val call_tmp[3359945]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3359948 'move' call_tmp[3359945](3359960 'sizeof_bundle' _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814]))
    val cast_tmp[3359963]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3359965 'move' cast_tmp[3359963](3359826 call chpl_here_alloc[308303] call_tmp[3359945] 330))
    (3359834 'move' _ic_[3359821](3359967 'cast' _ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] cast_tmp[3359963]))
    (3359836 'setcid' _ic_[3359821])
    (3359934 'end of statement')
    (3359943 'move' ret[3359938] _ic_[3359821])
    (3359940 return ret[3359938])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].allSlots[3359723](const  ref arg this[3359727]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) : _ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3359729]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[3359738]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3359740]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[3359742]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
      (3359744 'move' call_tmp[3359742](3359747 call tableSize[3355205] this[3359727]))
      val call_tmp[3359750]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[3359803]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (3359807 'move' coerce_tmp[3359803](3359805 'deref' call_tmp[3359742]))
      (3359752 'move' call_tmp[3359750](3359755 call _allSlots[265237] coerce_tmp[3359803]))
      (3359757 'move' _iterator[3359740](3359760 call _getIterator[1946146] call_tmp[3359750]))
      Defer
      {
        {
          (3359764 call _freeIterator[1947321] _iterator[3359740])
        }
      }
      ForLoop[3359773] order-independent
      {
        const slot[3359776]:int(64)[10] "const" "index var" "insert auto destroy"
        (3359778 'end of statement')
        (3359779 'move' slot[3359776] _indexOfInterest[3359738])
        (3359782 'end of statement' slot[3359776])
        {
          val yret[3359785]:int(64)[10] "dead after last mention" "YVV" "temp"
          (3359787 'move' yret[3359785] slot[3359776])
          (3359791 yield yret[3359785])
          (3359793 'end of statement' slot[3359776])
        }
        label _continueLabel[3359795]
        _indexOfInterest[3359738]
        _iterator[3359740]
      }
      label _breakLabel[3359797]
    }
    (3359799 return ret[3359729])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].advance[4029134](const in arg this[4029136]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : void[4] "auto ii" "method" "resolved"
  {
    (4029141 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].zip1[4029143](const in arg this[4029145]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029150 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].zip2[4029152](const in arg this[4029154]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029159 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].zip3[4029161](const in arg this[4029163]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029168 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].zip4[4029170](const in arg this[4029172]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029177 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].hasMore[4029179](const in arg this[4029181]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4029186 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].getValue[4029188](const in arg this[4029190]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4029195 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].init[4029197](const in arg this[4029199]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029204 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108].incr[4029206](const in arg this[4029208]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4029213 return _void[46])
  }
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] val super[4029109]:RootClass[236] "super class" val more[4029111]:int(64)[10]
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real32?[5489642]
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real32[5489639]
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real32[5489636]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_Module__real32?[5489633]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_Module__real32[5489630]
  type borrowed _ic_allSlots__ref_chpl__hashtable_string_Module__real32?[5489627]
  type _ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114]
  function _getIterator[4029123](const  ref arg ir[4029125]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114]) : _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4029232]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] "dead after last mention" "RVV" "temp"
    val _ic_[4029115]:_ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] "dead after last mention" "temp"
    val call_tmp[4029239]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4029242 'move' call_tmp[4029239](4029254 'sizeof_bundle' _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108]))
    val cast_tmp[4029257]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4029259 'move' cast_tmp[4029257](4029120 call chpl_here_alloc[308303] call_tmp[4029239] 414))
    (4029128 'move' _ic_[4029115](4029261 'cast' _ic_allSlots__ref_chpl__hashtable_string_Module__real32[4029108] cast_tmp[4029257]))
    (4029130 'setcid' _ic_[4029115])
    (4029228 'end of statement')
    (4029237 'move' ret[4029232] _ic_[4029115])
    (4029234 return ret[4029232])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].allSlots[4029017](const  ref arg this[4029021]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) : _ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[4029023]:_ir_allSlots__ref_chpl__hashtable_string_Module__real32[4029114] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[4029032]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[4029034]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[4029036]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
      (4029038 'move' call_tmp[4029036](4029041 call tableSize[1942995] this[4029021]))
      val call_tmp[4029044]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[4029097]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (4029101 'move' coerce_tmp[4029097](4029099 'deref' call_tmp[4029036]))
      (4029046 'move' call_tmp[4029044](4029049 call _allSlots[265237] coerce_tmp[4029097]))
      (4029051 'move' _iterator[4029034](4029054 call _getIterator[1946146] call_tmp[4029044]))
      Defer
      {
        {
          (4029058 call _freeIterator[1947321] _iterator[4029034])
        }
      }
      ForLoop[4029067] order-independent
      {
        const slot[4029070]:int(64)[10] "const" "index var" "insert auto destroy"
        (4029072 'end of statement')
        (4029073 'move' slot[4029070] _indexOfInterest[4029032])
        (4029076 'end of statement' slot[4029070])
        {
          val yret[4029079]:int(64)[10] "dead after last mention" "YVV" "temp"
          (4029081 'move' yret[4029079] slot[4029070])
          (4029085 yield yret[4029079])
          (4029087 'end of statement' slot[4029070])
        }
        label _continueLabel[4029089]
        _indexOfInterest[4029032]
        _iterator[4029034]
      }
      label _breakLabel[4029091]
    }
    (4029093 return ret[4029023])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].advance[4232253](const in arg this[4232255]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : void[4] "auto ii" "method" "resolved"
  {
    (4232260 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].zip1[4232262](const in arg this[4232264]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232269 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].zip2[4232271](const in arg this[4232273]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232278 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].zip3[4232280](const in arg this[4232282]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232287 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].zip4[4232289](const in arg this[4232291]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232296 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].hasMore[4232298](const in arg this[4232300]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4232305 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].getValue[4232307](const in arg this[4232309]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4232314 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].init[4232316](const in arg this[4232318]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232323 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227].incr[4232325](const in arg this[4232327]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4232332 return _void[46])
  }
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] val super[4232228]:RootClass[236] "super class" val more[4232230]:int(64)[10]
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32?[5489786]
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[5489783]
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[5489780]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32?[5489777]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[5489774]
  type borrowed _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32?[5489771]
  type _ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233]
  function _getIterator[4232242](const  ref arg ir[4232244]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233]) : _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4232351]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] "dead after last mention" "RVV" "temp"
    val _ic_[4232234]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] "dead after last mention" "temp"
    val call_tmp[4232358]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4232361 'move' call_tmp[4232358](4232373 'sizeof_bundle' _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227]))
    val cast_tmp[4232376]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4232378 'move' cast_tmp[4232376](4232239 call chpl_here_alloc[308303] call_tmp[4232358] 422))
    (4232247 'move' _ic_[4232234](4232380 'cast' _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232227] cast_tmp[4232376]))
    (4232249 'setcid' _ic_[4232234])
    (4232347 'end of statement')
    (4232356 'move' ret[4232351] _ic_[4232234])
    (4232353 return ret[4232351])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].allSlots[4232136](const  ref arg this[4232140]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) : _ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[4232142]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real32[4232233] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[4232151]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[4232153]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[4232155]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
      (4232157 'move' call_tmp[4232155](4232160 call tableSize[3392339] this[4232140]))
      val call_tmp[4232163]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[4232216]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (4232220 'move' coerce_tmp[4232216](4232218 'deref' call_tmp[4232155]))
      (4232165 'move' call_tmp[4232163](4232168 call _allSlots[265237] coerce_tmp[4232216]))
      (4232170 'move' _iterator[4232153](4232173 call _getIterator[1946146] call_tmp[4232163]))
      Defer
      {
        {
          (4232177 call _freeIterator[1947321] _iterator[4232153])
        }
      }
      ForLoop[4232186] order-independent
      {
        const slot[4232189]:int(64)[10] "const" "index var" "insert auto destroy"
        (4232191 'end of statement')
        (4232192 'move' slot[4232189] _indexOfInterest[4232151])
        (4232195 'end of statement' slot[4232189])
        {
          val yret[4232198]:int(64)[10] "dead after last mention" "YVV" "temp"
          (4232200 'move' yret[4232198] slot[4232189])
          (4232204 yield yret[4232198])
          (4232206 'end of statement' slot[4232189])
        }
        label _continueLabel[4232208]
        _indexOfInterest[4232151]
        _iterator[4232153]
      }
      label _breakLabel[4232210]
    }
    (4232212 return ret[4232142])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].advance[4238001](const in arg this[4238003]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : void[4] "auto ii" "method" "resolved"
  {
    (4238008 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].zip1[4238010](const in arg this[4238012]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238017 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].zip2[4238019](const in arg this[4238021]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238026 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].zip3[4238028](const in arg this[4238030]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238035 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].zip4[4238037](const in arg this[4238039]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238044 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].hasMore[4238046](const in arg this[4238048]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4238053 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].getValue[4238055](const in arg this[4238057]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4238062 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].init[4238064](const in arg this[4238066]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238071 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975].incr[4238073](const in arg this[4238075]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4238080 return _void[46])
  }
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] val super[4237976]:RootClass[236] "super class" val more[4237978]:int(64)[10]
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real64?[5489822]
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real64[5489819]
  type _ic_allSlots__ref_chpl__hashtable_string_Module__real64[5489816]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_Module__real64?[5489813]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string_Module__real64[5489810]
  type borrowed _ic_allSlots__ref_chpl__hashtable_string_Module__real64?[5489807]
  type _ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981]
  function _getIterator[4237990](const  ref arg ir[4237992]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981]) : _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4238099]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] "dead after last mention" "RVV" "temp"
    val _ic_[4237982]:_ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] "dead after last mention" "temp"
    val call_tmp[4238106]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4238109 'move' call_tmp[4238106](4238121 'sizeof_bundle' _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975]))
    val cast_tmp[4238124]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4238126 'move' cast_tmp[4238124](4237987 call chpl_here_alloc[308303] call_tmp[4238106] 424))
    (4237995 'move' _ic_[4237982](4238128 'cast' _ic_allSlots__ref_chpl__hashtable_string_Module__real64[4237975] cast_tmp[4238124]))
    (4237997 'setcid' _ic_[4237982])
    (4238095 'end of statement')
    (4238104 'move' ret[4238099] _ic_[4237982])
    (4238101 return ret[4238099])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].allSlots[4237884](const  ref arg this[4237888]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) : _ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[4237890]:_ir_allSlots__ref_chpl__hashtable_string_Module__real64[4237981] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[4237899]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[4237901]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[4237903]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
      (4237905 'move' call_tmp[4237903](4237908 call tableSize[3828932] this[4237888]))
      val call_tmp[4237911]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[4237964]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (4237968 'move' coerce_tmp[4237964](4237966 'deref' call_tmp[4237903]))
      (4237913 'move' call_tmp[4237911](4237916 call _allSlots[265237] coerce_tmp[4237964]))
      (4237918 'move' _iterator[4237901](4237921 call _getIterator[1946146] call_tmp[4237911]))
      Defer
      {
        {
          (4237925 call _freeIterator[1947321] _iterator[4237901])
        }
      }
      ForLoop[4237934] order-independent
      {
        const slot[4237937]:int(64)[10] "const" "index var" "insert auto destroy"
        (4237939 'end of statement')
        (4237940 'move' slot[4237937] _indexOfInterest[4237899])
        (4237943 'end of statement' slot[4237937])
        {
          val yret[4237946]:int(64)[10] "dead after last mention" "YVV" "temp"
          (4237948 'move' yret[4237946] slot[4237937])
          (4237952 yield yret[4237946])
          (4237954 'end of statement' slot[4237937])
        }
        label _continueLabel[4237956]
        _indexOfInterest[4237899]
        _iterator[4237901]
      }
      label _breakLabel[4237958]
    }
    (4237960 return ret[4237890])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].advance[4309591](const in arg this[4309593]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : void[4] "auto ii" "method" "resolved"
  {
    (4309598 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].zip1[4309600](const in arg this[4309602]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4309607 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].zip2[4309609](const in arg this[4309611]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4309616 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].zip3[4309618](const in arg this[4309620]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4309625 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].zip4[4309627](const in arg this[4309629]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4309634 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].hasMore[4309636](const in arg this[4309638]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4309643 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].getValue[4309645](const in arg this[4309647]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4309652 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].init[4309654](const in arg this[4309656]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4309661 return _void[46])
  }
  function _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565].incr[4309663](const in arg this[4309665]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4309670 return _void[46])
  }
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] val super[4309566]:RootClass[236] "super class" val more[4309568]:int(64)[10]
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64?[5489912]
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[5489909]
  type _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[5489906]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64?[5489903]
  type unmanaged _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[5489900]
  type borrowed _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64?[5489897]
  type _ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571]
  function _getIterator[4309580](const  ref arg ir[4309582]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571]) : _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4309689]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] "dead after last mention" "RVV" "temp"
    val _ic_[4309572]:_ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] "dead after last mention" "temp"
    val call_tmp[4309696]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4309699 'move' call_tmp[4309696](4309711 'sizeof_bundle' _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565]))
    val cast_tmp[4309714]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4309716 'move' cast_tmp[4309714](4309577 call chpl_here_alloc[308303] call_tmp[4309696] 429))
    (4309585 'move' _ic_[4309572](4309718 'cast' _ic_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309565] cast_tmp[4309714]))
    (4309587 'setcid' _ic_[4309572])
    (4309685 'end of statement')
    (4309694 'move' ret[4309689] _ic_[4309572])
    (4309691 return ret[4309689])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].allSlots[4309474](const  ref arg this[4309478]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) : _ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[4309480]:_ir_allSlots__ref_chpl__hashtable_string__shared_Module__real64[4309571] "dead after last mention" "RVV" "temp"
    {
      val _indexOfInterest[4309489]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[4309491]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[4309493]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
      (4309495 'move' call_tmp[4309493](4309498 call tableSize[4305492] this[4309478]))
      val call_tmp[4309501]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[4309554]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (4309558 'move' coerce_tmp[4309554](4309556 'deref' call_tmp[4309493]))
      (4309503 'move' call_tmp[4309501](4309506 call _allSlots[265237] coerce_tmp[4309554]))
      (4309508 'move' _iterator[4309491](4309511 call _getIterator[1946146] call_tmp[4309501]))
      Defer
      {
        {
          (4309515 call _freeIterator[1947321] _iterator[4309491])
        }
      }
      ForLoop[4309524] order-independent
      {
        const slot[4309527]:int(64)[10] "const" "index var" "insert auto destroy"
        (4309529 'end of statement')
        (4309530 'move' slot[4309527] _indexOfInterest[4309489])
        (4309533 'end of statement' slot[4309527])
        {
          val yret[4309536]:int(64)[10] "dead after last mention" "YVV" "temp"
          (4309538 'move' yret[4309536] slot[4309527])
          (4309542 yield yret[4309536])
          (4309544 'end of statement' slot[4309527])
        }
        label _continueLabel[4309546]
        _indexOfInterest[4309489]
        _iterator[4309491]
      }
      label _breakLabel[4309548]
    }
    (4309550 return ret[4309480])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].keysMatch[3260776](const  ref arg this[3260780]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const  ref arg key1[3260782]:string[244], const  ref arg key2[3260787]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3260789]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3260799]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3260805]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3260812]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3260838]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3260840 'move' call_tmp[3260838](3260843 call ==[28803] key1[3260782] key2[3260787]))
      (3260846 'move' ret[3260789] call_tmp[3260838])
      gotoReturn _end_keysMatch[3260853] _end_keysMatch[3260853]
    }
    label _end_keysMatch[3260853]
    (3260855 return ret[3260789])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].keysMatch[3307618](const  ref arg this[3307622]:_ref(chpl__hashtable(string,int(64)))[3288858], const  ref arg key1[3307624]:string[244], const  ref arg key2[3307629]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3307631]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3307641]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3307647]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3307654]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3307680]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3307682 'move' call_tmp[3307680](3307685 call ==[28803] key1[3307624] key2[3307629]))
      (3307688 'move' ret[3307631] call_tmp[3307680])
      gotoReturn _end_keysMatch[3307695] _end_keysMatch[3307695]
    }
    label _end_keysMatch[3307695]
    (3307697 return ret[3307631])
  }
  function _ref(chpl__hashtable(string,string))[3283450].keysMatch[3348258](const  ref arg this[3348262]:_ref(chpl__hashtable(string,string))[3283450], const  ref arg key1[3348264]:string[244], const  ref arg key2[3348269]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3348271]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3348281]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3348287]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3348294]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3348320]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3348322 'move' call_tmp[3348320](3348325 call ==[28803] key1[3348264] key2[3348269]))
      (3348328 'move' ret[3348271] call_tmp[3348320])
      gotoReturn _end_keysMatch[3348335] _end_keysMatch[3348335]
    }
    label _end_keysMatch[3348335]
    (3348337 return ret[3348271])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].keysMatch[3365784](const  ref arg this[3365788]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const  ref arg key1[3365790]:string[244], const  ref arg key2[3365795]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3365797]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3365807]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3365813]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3365820]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3365846]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3365848 'move' call_tmp[3365846](3365851 call ==[28803] key1[3365790] key2[3365795]))
      (3365854 'move' ret[3365797] call_tmp[3365846])
      gotoReturn _end_keysMatch[3365861] _end_keysMatch[3365861]
    }
    label _end_keysMatch[3365861]
    (3365863 return ret[3365797])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].keysMatch[3403580](const  ref arg this[3403584]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const  ref arg key1[3403586]:string[244], const  ref arg key2[3403591]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3403593]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3403603]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3403609]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3403616]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3403642]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3403644 'move' call_tmp[3403642](3403647 call ==[28803] key1[3403586] key2[3403591]))
      (3403650 'move' ret[3403593] call_tmp[3403642])
      gotoReturn _end_keysMatch[3403657] _end_keysMatch[3403657]
    }
    label _end_keysMatch[3403657]
    (3403659 return ret[3403593])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].keysMatch[3863129](const  ref arg this[3863133]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const  ref arg key1[3863135]:string[244], const  ref arg key2[3863140]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3863142]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[3863152]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3863158]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3863165]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3863191]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3863193 'move' call_tmp[3863191](3863196 call ==[28803] key1[3863135] key2[3863140]))
      (3863199 'move' ret[3863142] call_tmp[3863191])
      gotoReturn _end_keysMatch[3863206] _end_keysMatch[3863206]
    }
    label _end_keysMatch[3863206]
    (3863208 return ret[3863142])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].keysMatch[4313208](const  ref arg this[4313212]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const  ref arg key1[4313214]:string[244], const  ref arg key2[4313219]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4313221]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[4313231]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4313237]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4313244]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[4313270]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4313272 'move' call_tmp[4313270](4313275 call ==[28803] key1[4313214] key2[4313219]))
      (4313278 'move' ret[4313221] call_tmp[4313270])
      gotoReturn _end_keysMatch[4313285] _end_keysMatch[4313285]
    }
    label _end_keysMatch[4313285]
    (4313287 return ret[4313221])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508]._findSlot[3259284](const  ref arg this[3259288]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const  ref arg key[3259295]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3259302]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3259314]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val firstOpen[3259321]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3259323 'move' firstOpen[3259321] -1)
    (3259326 'end of statement')
    {
      val _indexOfInterest[3259328]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3259330]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395] "dead at end of block" "expr temp" "temp"
      val call_tmp[3259332]:_ir__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260401] "dead at end of block" "expr temp" "maybe param" "temp"
      val default_arg_numSlots[3259863]:int(64)[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (3259869 'move' default_arg_numSlots[3259863](3259865 call _lookForSlots_default_numSlots[3259826] this[3259288]))
      (3259334 'move' call_tmp[3259332](3259340 call _lookForSlots[3259625] this[3259288] key[3259295] default_arg_numSlots[3259863]))
      (3259342 'move' _iterator[3259330](3259345 call _getIterator[3260410] call_tmp[3259332]))
      Defer
      {
        {
          (3259349 call _freeIterator[3260587] _iterator[3259330])
        }
      }
      ForLoop[3259358]
      {
        const slotNum[3259361]:int(64)[10] "const" "index var" "insert auto destroy"
        (3259363 'end of statement')
        (3259364 'move' slotNum[3259361] _indexOfInterest[3259328])
        (3259367 'end of statement' slotNum[3259361])
        {
          ref call_tmp[3259370]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[3260670]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "temp"
          (3260672 'move' _this_tmp_[3260670](3259375 call table[1942967] this[3259288]))
          val coerce_tmp[3260677]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3260681 'move' coerce_tmp[3260677](3260679 'deref' _this_tmp_[3260670]))
          (3259372 'move' call_tmp[3259370](3259378 call this[1947405] coerce_tmp[3260677] slotNum[3259361]))
          ref call_tmp[3259380]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
          (3259382 'move' call_tmp[3259380](3259385 call status[3259161] call_tmp[3259370]))
          const slotStatus[3259388]:chpl__hash_status[264678] "dead at end of block" "const" "insert auto destroy"
          val coerce_tmp[3260708]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3260712 'move' coerce_tmp[3260708](3260710 'deref' call_tmp[3259380]))
          (3259390 'move' slotStatus[3259388](3260685 call chpl__initCopy[3260688] coerce_tmp[3260708] 1))
          (3259393 'end of statement' slotNum[3259361])
          val call_tmp[3259395]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3259397 'move' call_tmp[3259395](3259400 call ==[3259199] slotStatus[3259388] empty[264672]))
          val call_tmp[3259403]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3259405 'move' call_tmp[3259403] call_tmp[3259395])
          if call_tmp[3259403]
          {
            val call_tmp[3259412]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[3259419]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3259421 'move' call_tmp[3259419](3259424 call ==[52746] firstOpen[3259321] -1))
            val call_tmp[3259427]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3259429 'move' call_tmp[3259427] call_tmp[3259419])
            if call_tmp[3259427]
            {
              (3259437 call =[52229] firstOpen[3259321] slotNum[3259361])
              (3259440 'end of statement' firstOpen[3259321] slotNum[3259361])
            }
            val call_tmp[3259444]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            (3259446 'move' call_tmp[3259444](3259449 call _build_tuple[3260720] 0 firstOpen[3259321]))
            val call_tmp[3259452]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (3260909 '=' ret[3259302] call_tmp[3259444])
            gotoReturn _end__findSlot[3259618] _end__findSlot[3259618]
          }
          {
            val call_tmp[3259470]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3259472 'move' call_tmp[3259470](3259475 call ==[3259199] slotStatus[3259388] full[264674]))
            val call_tmp[3259478]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3259480 'move' call_tmp[3259478] call_tmp[3259470])
            if call_tmp[3259478]
            {
              ref call_tmp[3259487]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3260761]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "temp"
              (3260763 'move' _this_tmp_[3260761](3259492 call table[1942967] this[3259288]))
              val coerce_tmp[3260768]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3260772 'move' coerce_tmp[3260768](3260770 'deref' _this_tmp_[3260761]))
              (3259489 'move' call_tmp[3259487](3259495 call this[1947405] coerce_tmp[3260768] slotNum[3259361]))
              ref call_tmp[3259497]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3259499 'move' call_tmp[3259497](3259502 call key[3259256] call_tmp[3259487]))
              val call_tmp[3259505]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3259507 'move' call_tmp[3259505](3259513 call keysMatch[3260776] this[3259288] call_tmp[3259497] key[3259295]))
              val call_tmp[3259516]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3259518 'move' call_tmp[3259516] call_tmp[3259505])
              if call_tmp[3259516]
              {
                val call_tmp[3259525]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (3259527 'move' call_tmp[3259525](3259530 call _build_tuple[3260720] 1 slotNum[3259361]))
                val call_tmp[3259533]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (3260912 '=' ret[3259302] call_tmp[3259525])
                gotoReturn _end__findSlot[3259618] _end__findSlot[3259618]
              }
            }
            {
              val call_tmp[3259552]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3259559]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3259561 'move' call_tmp[3259559](3259564 call ==[52746] firstOpen[3259321] -1))
              val call_tmp[3259567]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3259569 'move' call_tmp[3259567] call_tmp[3259559])
              if call_tmp[3259567]
              {
                (3259577 call =[52229] firstOpen[3259321] slotNum[3259361])
                (3259580 'end of statement' firstOpen[3259321] slotNum[3259361])
              }
            }
          }
        }
        label _continueLabel[3259586]
        _indexOfInterest[3259328]
        _iterator[3259330]
      }
      label _breakLabel[3259588]
    }
    val call_tmp[3259590]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3259597]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3259599 'move' call_tmp[3259597](3259602 call _build_tuple[3260720] 0 -1))
    val call_tmp[3259605]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3260915 '=' ret[3259302] call_tmp[3259597])
    label _end__findSlot[3259618]
    (3259620 return ret[3259302])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858]._findSlot[3306673](const  ref arg this[3306677]:_ref(chpl__hashtable(string,int(64)))[3288858], const  ref arg key[3306684]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3306691]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3306703]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val firstOpen[3306710]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3306712 'move' firstOpen[3306710] -1)
    (3306715 'end of statement')
    {
      val _indexOfInterest[3306717]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3306719]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293] "dead at end of block" "expr temp" "temp"
      val call_tmp[3306721]:_ir__lookForSlots__ref_chpl__hashtable_string_int64_t[3307299] "dead at end of block" "expr temp" "maybe param" "temp"
      val default_arg_numSlots[3307252]:int(64)[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (3307258 'move' default_arg_numSlots[3307252](3307254 call _lookForSlots_default_numSlots[3307215] this[3306677]))
      (3306723 'move' call_tmp[3306721](3306729 call _lookForSlots[3307014] this[3306677] key[3306684] default_arg_numSlots[3307252]))
      (3306731 'move' _iterator[3306719](3306734 call _getIterator[3307308] call_tmp[3306721]))
      Defer
      {
        {
          (3306738 call _freeIterator[3307485] _iterator[3306719])
        }
      }
      ForLoop[3306747]
      {
        const slotNum[3306750]:int(64)[10] "const" "index var" "insert auto destroy"
        (3306752 'end of statement')
        (3306753 'move' slotNum[3306750] _indexOfInterest[3306717])
        (3306756 'end of statement' slotNum[3306750])
        {
          ref call_tmp[3306759]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[3307568]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
          (3307570 'move' _this_tmp_[3307568](3306764 call table[3303003] this[3306677]))
          val coerce_tmp[3307575]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3307579 'move' coerce_tmp[3307575](3307577 'deref' _this_tmp_[3307568]))
          (3306761 'move' call_tmp[3306759](3306767 call this[3306115] coerce_tmp[3307575] slotNum[3306750]))
          ref call_tmp[3306769]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
          (3306771 'move' call_tmp[3306769](3306774 call status[3306607] call_tmp[3306759]))
          const slotStatus[3306777]:chpl__hash_status[264678] "dead at end of block" "const" "insert auto destroy"
          val coerce_tmp[3307586]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3307590 'move' coerce_tmp[3307586](3307588 'deref' call_tmp[3306769]))
          (3306779 'move' slotStatus[3306777](3307583 call chpl__initCopy[3260688] coerce_tmp[3307586] 1))
          (3306782 'end of statement' slotNum[3306750])
          val call_tmp[3306784]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3306786 'move' call_tmp[3306784](3306789 call ==[3259199] slotStatus[3306777] empty[264672]))
          val call_tmp[3306792]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3306794 'move' call_tmp[3306792] call_tmp[3306784])
          if call_tmp[3306792]
          {
            val call_tmp[3306801]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[3306808]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3306810 'move' call_tmp[3306808](3306813 call ==[52746] firstOpen[3306710] -1))
            val call_tmp[3306816]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3306818 'move' call_tmp[3306816] call_tmp[3306808])
            if call_tmp[3306816]
            {
              (3306826 call =[52229] firstOpen[3306710] slotNum[3306750])
              (3306829 'end of statement' firstOpen[3306710] slotNum[3306750])
            }
            val call_tmp[3306833]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            (3306835 'move' call_tmp[3306833](3306838 call _build_tuple[3260720] 0 firstOpen[3306710]))
            val call_tmp[3306841]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (3307724 '=' ret[3306691] call_tmp[3306833])
            gotoReturn _end__findSlot[3307007] _end__findSlot[3307007]
          }
          {
            val call_tmp[3306859]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3306861 'move' call_tmp[3306859](3306864 call ==[3259199] slotStatus[3306777] full[264674]))
            val call_tmp[3306867]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3306869 'move' call_tmp[3306867] call_tmp[3306859])
            if call_tmp[3306867]
            {
              ref call_tmp[3306876]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3307603]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
              (3307605 'move' _this_tmp_[3307603](3306881 call table[3303003] this[3306677]))
              val coerce_tmp[3307610]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3307614 'move' coerce_tmp[3307610](3307612 'deref' _this_tmp_[3307603]))
              (3306878 'move' call_tmp[3306876](3306884 call this[3306115] coerce_tmp[3307610] slotNum[3306750]))
              ref call_tmp[3306886]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3306888 'move' call_tmp[3306886](3306891 call key[3306645] call_tmp[3306876]))
              val call_tmp[3306894]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3306896 'move' call_tmp[3306894](3306902 call keysMatch[3307618] this[3306677] call_tmp[3306886] key[3306684]))
              val call_tmp[3306905]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3306907 'move' call_tmp[3306905] call_tmp[3306894])
              if call_tmp[3306905]
              {
                val call_tmp[3306914]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (3306916 'move' call_tmp[3306914](3306919 call _build_tuple[3260720] 1 slotNum[3306750]))
                val call_tmp[3306922]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (3307727 '=' ret[3306691] call_tmp[3306914])
                gotoReturn _end__findSlot[3307007] _end__findSlot[3307007]
              }
            }
            {
              val call_tmp[3306941]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3306948]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3306950 'move' call_tmp[3306948](3306953 call ==[52746] firstOpen[3306710] -1))
              val call_tmp[3306956]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3306958 'move' call_tmp[3306956] call_tmp[3306948])
              if call_tmp[3306956]
              {
                (3306966 call =[52229] firstOpen[3306710] slotNum[3306750])
                (3306969 'end of statement' firstOpen[3306710] slotNum[3306750])
              }
            }
          }
        }
        label _continueLabel[3306975]
        _indexOfInterest[3306717]
        _iterator[3306719]
      }
      label _breakLabel[3306977]
    }
    val call_tmp[3306979]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3306986]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3306988 'move' call_tmp[3306986](3306991 call _build_tuple[3260720] 0 -1))
    val call_tmp[3306994]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3307730 '=' ret[3306691] call_tmp[3306986])
    label _end__findSlot[3307007]
    (3307009 return ret[3306691])
  }
  function _ref(chpl__hashtable(string,string))[3283450]._findSlot[3347313](const  ref arg this[3347317]:_ref(chpl__hashtable(string,string))[3283450], const  ref arg key[3347324]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3347331]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3347343]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val firstOpen[3347350]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3347352 'move' firstOpen[3347350] -1)
    (3347355 'end of statement')
    {
      val _indexOfInterest[3347357]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3347359]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933] "dead at end of block" "expr temp" "temp"
      val call_tmp[3347361]:_ir__lookForSlots__ref_chpl__hashtable_string_string[3347939] "dead at end of block" "expr temp" "maybe param" "temp"
      val default_arg_numSlots[3347892]:int(64)[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (3347898 'move' default_arg_numSlots[3347892](3347894 call _lookForSlots_default_numSlots[3347855] this[3347317]))
      (3347363 'move' call_tmp[3347361](3347369 call _lookForSlots[3347654] this[3347317] key[3347324] default_arg_numSlots[3347892]))
      (3347371 'move' _iterator[3347359](3347374 call _getIterator[3347948] call_tmp[3347361]))
      Defer
      {
        {
          (3347378 call _freeIterator[3348125] _iterator[3347359])
        }
      }
      ForLoop[3347387]
      {
        const slotNum[3347390]:int(64)[10] "const" "index var" "insert auto destroy"
        (3347392 'end of statement')
        (3347393 'move' slotNum[3347390] _indexOfInterest[3347357])
        (3347396 'end of statement' slotNum[3347390])
        {
          ref call_tmp[3347399]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[3348208]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
          (3348210 'move' _this_tmp_[3348208](3347404 call table[3340092] this[3347317]))
          val coerce_tmp[3348215]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3348219 'move' coerce_tmp[3348215](3348217 'deref' _this_tmp_[3348208]))
          (3347401 'move' call_tmp[3347399](3347407 call this[3343256] coerce_tmp[3348215] slotNum[3347390]))
          ref call_tmp[3347409]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
          (3347411 'move' call_tmp[3347409](3347414 call status[3345291] call_tmp[3347399]))
          const slotStatus[3347417]:chpl__hash_status[264678] "dead at end of block" "const" "insert auto destroy"
          val coerce_tmp[3348226]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3348230 'move' coerce_tmp[3348226](3348228 'deref' call_tmp[3347409]))
          (3347419 'move' slotStatus[3347417](3348223 call chpl__initCopy[3260688] coerce_tmp[3348226] 1))
          (3347422 'end of statement' slotNum[3347390])
          val call_tmp[3347424]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3347426 'move' call_tmp[3347424](3347429 call ==[3259199] slotStatus[3347417] empty[264672]))
          val call_tmp[3347432]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3347434 'move' call_tmp[3347432] call_tmp[3347424])
          if call_tmp[3347432]
          {
            val call_tmp[3347441]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[3347448]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3347450 'move' call_tmp[3347448](3347453 call ==[52746] firstOpen[3347350] -1))
            val call_tmp[3347456]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3347458 'move' call_tmp[3347456] call_tmp[3347448])
            if call_tmp[3347456]
            {
              (3347466 call =[52229] firstOpen[3347350] slotNum[3347390])
              (3347469 'end of statement' firstOpen[3347350] slotNum[3347390])
            }
            val call_tmp[3347473]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            (3347475 'move' call_tmp[3347473](3347478 call _build_tuple[3260720] 0 firstOpen[3347350]))
            val call_tmp[3347481]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (3348364 '=' ret[3347331] call_tmp[3347473])
            gotoReturn _end__findSlot[3347647] _end__findSlot[3347647]
          }
          {
            val call_tmp[3347499]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3347501 'move' call_tmp[3347499](3347504 call ==[3259199] slotStatus[3347417] full[264674]))
            val call_tmp[3347507]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3347509 'move' call_tmp[3347507] call_tmp[3347499])
            if call_tmp[3347507]
            {
              ref call_tmp[3347516]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3348243]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
              (3348245 'move' _this_tmp_[3348243](3347521 call table[3340092] this[3347317]))
              val coerce_tmp[3348250]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3348254 'move' coerce_tmp[3348250](3348252 'deref' _this_tmp_[3348243]))
              (3347518 'move' call_tmp[3347516](3347524 call this[3343256] coerce_tmp[3348250] slotNum[3347390]))
              ref call_tmp[3347526]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3347528 'move' call_tmp[3347526](3347531 call key[3345732] call_tmp[3347516]))
              val call_tmp[3347534]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3347536 'move' call_tmp[3347534](3347542 call keysMatch[3348258] this[3347317] call_tmp[3347526] key[3347324]))
              val call_tmp[3347545]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3347547 'move' call_tmp[3347545] call_tmp[3347534])
              if call_tmp[3347545]
              {
                val call_tmp[3347554]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (3347556 'move' call_tmp[3347554](3347559 call _build_tuple[3260720] 1 slotNum[3347390]))
                val call_tmp[3347562]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (3348367 '=' ret[3347331] call_tmp[3347554])
                gotoReturn _end__findSlot[3347647] _end__findSlot[3347647]
              }
            }
            {
              val call_tmp[3347581]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3347588]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3347590 'move' call_tmp[3347588](3347593 call ==[52746] firstOpen[3347350] -1))
              val call_tmp[3347596]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3347598 'move' call_tmp[3347596] call_tmp[3347588])
              if call_tmp[3347596]
              {
                (3347606 call =[52229] firstOpen[3347350] slotNum[3347390])
                (3347609 'end of statement' firstOpen[3347350] slotNum[3347390])
              }
            }
          }
        }
        label _continueLabel[3347615]
        _indexOfInterest[3347357]
        _iterator[3347359]
      }
      label _breakLabel[3347617]
    }
    val call_tmp[3347619]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3347626]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3347628 'move' call_tmp[3347626](3347631 call _build_tuple[3260720] 0 -1))
    val call_tmp[3347634]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3348370 '=' ret[3347331] call_tmp[3347626])
    label _end__findSlot[3347647]
    (3347649 return ret[3347331])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]._findSlot[3364839](const  ref arg this[3364843]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const  ref arg key[3364850]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3364857]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3364869]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val firstOpen[3364876]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3364878 'move' firstOpen[3364876] -1)
    (3364881 'end of statement')
    {
      val _indexOfInterest[3364883]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3364885]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459] "dead at end of block" "expr temp" "temp"
      val call_tmp[3364887]:_ir__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365465] "dead at end of block" "expr temp" "maybe param" "temp"
      val default_arg_numSlots[3365418]:int(64)[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (3365424 'move' default_arg_numSlots[3365418](3365420 call _lookForSlots_default_numSlots[3365381] this[3364843]))
      (3364889 'move' call_tmp[3364887](3364895 call _lookForSlots[3365180] this[3364843] key[3364850] default_arg_numSlots[3365418]))
      (3364897 'move' _iterator[3364885](3364900 call _getIterator[3365474] call_tmp[3364887]))
      Defer
      {
        {
          (3364904 call _freeIterator[3365651] _iterator[3364885])
        }
      }
      ForLoop[3364913]
      {
        const slotNum[3364916]:int(64)[10] "const" "index var" "insert auto destroy"
        (3364918 'end of statement')
        (3364919 'move' slotNum[3364916] _indexOfInterest[3364883])
        (3364922 'end of statement' slotNum[3364916])
        {
          ref call_tmp[3364925]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[3365734]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
          (3365736 'move' _this_tmp_[3365734](3364930 call table[3355177] this[3364843]))
          val coerce_tmp[3365741]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3365745 'move' coerce_tmp[3365741](3365743 'deref' _this_tmp_[3365734]))
          (3364927 'move' call_tmp[3364925](3364933 call this[3358341] coerce_tmp[3365741] slotNum[3364916]))
          ref call_tmp[3364935]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
          (3364937 'move' call_tmp[3364935](3364940 call status[3360376] call_tmp[3364925]))
          const slotStatus[3364943]:chpl__hash_status[264678] "dead at end of block" "const" "insert auto destroy"
          val coerce_tmp[3365752]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3365756 'move' coerce_tmp[3365752](3365754 'deref' call_tmp[3364935]))
          (3364945 'move' slotStatus[3364943](3365749 call chpl__initCopy[3260688] coerce_tmp[3365752] 1))
          (3364948 'end of statement' slotNum[3364916])
          val call_tmp[3364950]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3364952 'move' call_tmp[3364950](3364955 call ==[3259199] slotStatus[3364943] empty[264672]))
          val call_tmp[3364958]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3364960 'move' call_tmp[3364958] call_tmp[3364950])
          if call_tmp[3364958]
          {
            val call_tmp[3364967]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[3364974]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3364976 'move' call_tmp[3364974](3364979 call ==[52746] firstOpen[3364876] -1))
            val call_tmp[3364982]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3364984 'move' call_tmp[3364982] call_tmp[3364974])
            if call_tmp[3364982]
            {
              (3364992 call =[52229] firstOpen[3364876] slotNum[3364916])
              (3364995 'end of statement' firstOpen[3364876] slotNum[3364916])
            }
            val call_tmp[3364999]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            (3365001 'move' call_tmp[3364999](3365004 call _build_tuple[3260720] 0 firstOpen[3364876]))
            val call_tmp[3365007]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (3365890 '=' ret[3364857] call_tmp[3364999])
            gotoReturn _end__findSlot[3365173] _end__findSlot[3365173]
          }
          {
            val call_tmp[3365025]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3365027 'move' call_tmp[3365025](3365030 call ==[3259199] slotStatus[3364943] full[264674]))
            val call_tmp[3365033]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3365035 'move' call_tmp[3365033] call_tmp[3365025])
            if call_tmp[3365033]
            {
              ref call_tmp[3365042]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3365769]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
              (3365771 'move' _this_tmp_[3365769](3365047 call table[3355177] this[3364843]))
              val coerce_tmp[3365776]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3365780 'move' coerce_tmp[3365776](3365778 'deref' _this_tmp_[3365769]))
              (3365044 'move' call_tmp[3365042](3365050 call this[3358341] coerce_tmp[3365776] slotNum[3364916]))
              ref call_tmp[3365052]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3365054 'move' call_tmp[3365052](3365057 call key[3360817] call_tmp[3365042]))
              val call_tmp[3365060]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3365062 'move' call_tmp[3365060](3365068 call keysMatch[3365784] this[3364843] call_tmp[3365052] key[3364850]))
              val call_tmp[3365071]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3365073 'move' call_tmp[3365071] call_tmp[3365060])
              if call_tmp[3365071]
              {
                val call_tmp[3365080]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (3365082 'move' call_tmp[3365080](3365085 call _build_tuple[3260720] 1 slotNum[3364916]))
                val call_tmp[3365088]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (3365893 '=' ret[3364857] call_tmp[3365080])
                gotoReturn _end__findSlot[3365173] _end__findSlot[3365173]
              }
            }
            {
              val call_tmp[3365107]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3365114]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3365116 'move' call_tmp[3365114](3365119 call ==[52746] firstOpen[3364876] -1))
              val call_tmp[3365122]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3365124 'move' call_tmp[3365122] call_tmp[3365114])
              if call_tmp[3365122]
              {
                (3365132 call =[52229] firstOpen[3364876] slotNum[3364916])
                (3365135 'end of statement' firstOpen[3364876] slotNum[3364916])
              }
            }
          }
        }
        label _continueLabel[3365141]
        _indexOfInterest[3364883]
        _iterator[3364885]
      }
      label _breakLabel[3365143]
    }
    val call_tmp[3365145]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3365152]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3365154 'move' call_tmp[3365152](3365157 call _build_tuple[3260720] 0 -1))
    val call_tmp[3365160]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3365896 '=' ret[3364857] call_tmp[3365152])
    label _end__findSlot[3365173]
    (3365175 return ret[3364857])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221]._findSlot[3402635](const  ref arg this[3402639]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const  ref arg key[3402646]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3402653]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3402665]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val firstOpen[3402672]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3402674 'move' firstOpen[3402672] -1)
    (3402677 'end of statement')
    {
      val _indexOfInterest[3402679]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3402681]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255] "dead at end of block" "expr temp" "temp"
      val call_tmp[3402683]:_ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403261] "dead at end of block" "expr temp" "maybe param" "temp"
      val default_arg_numSlots[3403214]:int(64)[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (3403220 'move' default_arg_numSlots[3403214](3403216 call _lookForSlots_default_numSlots[3403177] this[3402639]))
      (3402685 'move' call_tmp[3402683](3402691 call _lookForSlots[3402976] this[3402639] key[3402646] default_arg_numSlots[3403214]))
      (3402693 'move' _iterator[3402681](3402696 call _getIterator[3403270] call_tmp[3402683]))
      Defer
      {
        {
          (3402700 call _freeIterator[3403447] _iterator[3402681])
        }
      }
      ForLoop[3402709]
      {
        const slotNum[3402712]:int(64)[10] "const" "index var" "insert auto destroy"
        (3402714 'end of statement')
        (3402715 'move' slotNum[3402712] _indexOfInterest[3402679])
        (3402718 'end of statement' slotNum[3402712])
        {
          ref call_tmp[3402721]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[3403530]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "temp"
          (3403532 'move' _this_tmp_[3403530](3402726 call table[3392311] this[3402639]))
          val coerce_tmp[3403537]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3403541 'move' coerce_tmp[3403537](3403539 'deref' _this_tmp_[3403530]))
          (3402723 'move' call_tmp[3402721](3402729 call this[3395475] coerce_tmp[3403537] slotNum[3402712]))
          ref call_tmp[3402731]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
          (3402733 'move' call_tmp[3402731](3402736 call status[3402569] call_tmp[3402721]))
          const slotStatus[3402739]:chpl__hash_status[264678] "dead at end of block" "const" "insert auto destroy"
          val coerce_tmp[3403548]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3403552 'move' coerce_tmp[3403548](3403550 'deref' call_tmp[3402731]))
          (3402741 'move' slotStatus[3402739](3403545 call chpl__initCopy[3260688] coerce_tmp[3403548] 1))
          (3402744 'end of statement' slotNum[3402712])
          val call_tmp[3402746]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3402748 'move' call_tmp[3402746](3402751 call ==[3259199] slotStatus[3402739] empty[264672]))
          val call_tmp[3402754]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3402756 'move' call_tmp[3402754] call_tmp[3402746])
          if call_tmp[3402754]
          {
            val call_tmp[3402763]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[3402770]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3402772 'move' call_tmp[3402770](3402775 call ==[52746] firstOpen[3402672] -1))
            val call_tmp[3402778]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3402780 'move' call_tmp[3402778] call_tmp[3402770])
            if call_tmp[3402778]
            {
              (3402788 call =[52229] firstOpen[3402672] slotNum[3402712])
              (3402791 'end of statement' firstOpen[3402672] slotNum[3402712])
            }
            val call_tmp[3402795]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            (3402797 'move' call_tmp[3402795](3402800 call _build_tuple[3260720] 0 firstOpen[3402672]))
            val call_tmp[3402803]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (3403686 '=' ret[3402653] call_tmp[3402795])
            gotoReturn _end__findSlot[3402969] _end__findSlot[3402969]
          }
          {
            val call_tmp[3402821]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3402823 'move' call_tmp[3402821](3402826 call ==[3259199] slotStatus[3402739] full[264674]))
            val call_tmp[3402829]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3402831 'move' call_tmp[3402829] call_tmp[3402821])
            if call_tmp[3402829]
            {
              ref call_tmp[3402838]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3403565]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "temp"
              (3403567 'move' _this_tmp_[3403565](3402843 call table[3392311] this[3402639]))
              val coerce_tmp[3403572]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3403576 'move' coerce_tmp[3403572](3403574 'deref' _this_tmp_[3403565]))
              (3402840 'move' call_tmp[3402838](3402846 call this[3395475] coerce_tmp[3403572] slotNum[3402712]))
              ref call_tmp[3402848]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3402850 'move' call_tmp[3402848](3402853 call key[3402607] call_tmp[3402838]))
              val call_tmp[3402856]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402858 'move' call_tmp[3402856](3402864 call keysMatch[3403580] this[3402639] call_tmp[3402848] key[3402646]))
              val call_tmp[3402867]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402869 'move' call_tmp[3402867] call_tmp[3402856])
              if call_tmp[3402867]
              {
                val call_tmp[3402876]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (3402878 'move' call_tmp[3402876](3402881 call _build_tuple[3260720] 1 slotNum[3402712]))
                val call_tmp[3402884]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (3403689 '=' ret[3402653] call_tmp[3402876])
                gotoReturn _end__findSlot[3402969] _end__findSlot[3402969]
              }
            }
            {
              val call_tmp[3402903]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3402910]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402912 'move' call_tmp[3402910](3402915 call ==[52746] firstOpen[3402672] -1))
              val call_tmp[3402918]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402920 'move' call_tmp[3402918] call_tmp[3402910])
              if call_tmp[3402918]
              {
                (3402928 call =[52229] firstOpen[3402672] slotNum[3402712])
                (3402931 'end of statement' firstOpen[3402672] slotNum[3402712])
              }
            }
          }
        }
        label _continueLabel[3402937]
        _indexOfInterest[3402679]
        _iterator[3402681]
      }
      label _breakLabel[3402939]
    }
    val call_tmp[3402941]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3402948]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3402950 'move' call_tmp[3402948](3402953 call _build_tuple[3260720] 0 -1))
    val call_tmp[3402956]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3403692 '=' ret[3402653] call_tmp[3402948])
    label _end__findSlot[3402969]
    (3402971 return ret[3402653])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248]._findSlot[3862184](const  ref arg this[3862188]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const  ref arg key[3862195]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3862202]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3862214]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val firstOpen[3862221]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3862223 'move' firstOpen[3862221] -1)
    (3862226 'end of statement')
    {
      val _indexOfInterest[3862228]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3862230]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804] "dead at end of block" "expr temp" "temp"
      val call_tmp[3862232]:_ir__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862810] "dead at end of block" "expr temp" "maybe param" "temp"
      val default_arg_numSlots[3862763]:int(64)[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (3862769 'move' default_arg_numSlots[3862763](3862765 call _lookForSlots_default_numSlots[3862726] this[3862188]))
      (3862234 'move' call_tmp[3862232](3862240 call _lookForSlots[3862525] this[3862188] key[3862195] default_arg_numSlots[3862763]))
      (3862242 'move' _iterator[3862230](3862245 call _getIterator[3862819] call_tmp[3862232]))
      Defer
      {
        {
          (3862249 call _freeIterator[3862996] _iterator[3862230])
        }
      }
      ForLoop[3862258]
      {
        const slotNum[3862261]:int(64)[10] "const" "index var" "insert auto destroy"
        (3862263 'end of statement')
        (3862264 'move' slotNum[3862261] _indexOfInterest[3862228])
        (3862267 'end of statement' slotNum[3862261])
        {
          ref call_tmp[3862270]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[3863079]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "temp"
          (3863081 'move' _this_tmp_[3863079](3862275 call table[3828904] this[3862188]))
          val coerce_tmp[3863086]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3863090 'move' coerce_tmp[3863086](3863088 'deref' _this_tmp_[3863079]))
          (3862272 'move' call_tmp[3862270](3862278 call this[3832068] coerce_tmp[3863086] slotNum[3862261]))
          ref call_tmp[3862280]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
          (3862282 'move' call_tmp[3862280](3862285 call status[3862118] call_tmp[3862270]))
          const slotStatus[3862288]:chpl__hash_status[264678] "dead at end of block" "const" "insert auto destroy"
          val coerce_tmp[3863097]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3863101 'move' coerce_tmp[3863097](3863099 'deref' call_tmp[3862280]))
          (3862290 'move' slotStatus[3862288](3863094 call chpl__initCopy[3260688] coerce_tmp[3863097] 1))
          (3862293 'end of statement' slotNum[3862261])
          val call_tmp[3862295]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3862297 'move' call_tmp[3862295](3862300 call ==[3259199] slotStatus[3862288] empty[264672]))
          val call_tmp[3862303]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3862305 'move' call_tmp[3862303] call_tmp[3862295])
          if call_tmp[3862303]
          {
            val call_tmp[3862312]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[3862319]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3862321 'move' call_tmp[3862319](3862324 call ==[52746] firstOpen[3862221] -1))
            val call_tmp[3862327]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3862329 'move' call_tmp[3862327] call_tmp[3862319])
            if call_tmp[3862327]
            {
              (3862337 call =[52229] firstOpen[3862221] slotNum[3862261])
              (3862340 'end of statement' firstOpen[3862221] slotNum[3862261])
            }
            val call_tmp[3862344]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            (3862346 'move' call_tmp[3862344](3862349 call _build_tuple[3260720] 0 firstOpen[3862221]))
            val call_tmp[3862352]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (3863235 '=' ret[3862202] call_tmp[3862344])
            gotoReturn _end__findSlot[3862518] _end__findSlot[3862518]
          }
          {
            val call_tmp[3862370]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3862372 'move' call_tmp[3862370](3862375 call ==[3259199] slotStatus[3862288] full[264674]))
            val call_tmp[3862378]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3862380 'move' call_tmp[3862378] call_tmp[3862370])
            if call_tmp[3862378]
            {
              ref call_tmp[3862387]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3863114]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "temp"
              (3863116 'move' _this_tmp_[3863114](3862392 call table[3828904] this[3862188]))
              val coerce_tmp[3863121]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3863125 'move' coerce_tmp[3863121](3863123 'deref' _this_tmp_[3863114]))
              (3862389 'move' call_tmp[3862387](3862395 call this[3832068] coerce_tmp[3863121] slotNum[3862261]))
              ref call_tmp[3862397]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3862399 'move' call_tmp[3862397](3862402 call key[3862156] call_tmp[3862387]))
              val call_tmp[3862405]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3862407 'move' call_tmp[3862405](3862413 call keysMatch[3863129] this[3862188] call_tmp[3862397] key[3862195]))
              val call_tmp[3862416]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3862418 'move' call_tmp[3862416] call_tmp[3862405])
              if call_tmp[3862416]
              {
                val call_tmp[3862425]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (3862427 'move' call_tmp[3862425](3862430 call _build_tuple[3260720] 1 slotNum[3862261]))
                val call_tmp[3862433]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (3863238 '=' ret[3862202] call_tmp[3862425])
                gotoReturn _end__findSlot[3862518] _end__findSlot[3862518]
              }
            }
            {
              val call_tmp[3862452]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[3862459]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3862461 'move' call_tmp[3862459](3862464 call ==[52746] firstOpen[3862221] -1))
              val call_tmp[3862467]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3862469 'move' call_tmp[3862467] call_tmp[3862459])
              if call_tmp[3862467]
              {
                (3862477 call =[52229] firstOpen[3862221] slotNum[3862261])
                (3862480 'end of statement' firstOpen[3862221] slotNum[3862261])
              }
            }
          }
        }
        label _continueLabel[3862486]
        _indexOfInterest[3862228]
        _iterator[3862230]
      }
      label _breakLabel[3862488]
    }
    val call_tmp[3862490]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3862497]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3862499 'move' call_tmp[3862497](3862502 call _build_tuple[3260720] 0 -1))
    val call_tmp[3862505]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3863241 '=' ret[3862202] call_tmp[3862497])
    label _end__findSlot[3862518]
    (3862520 return ret[3862202])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401]._findSlot[4312263](const  ref arg this[4312267]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const  ref arg key[4312274]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4312281]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[4312293]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val firstOpen[4312300]:int(64)[10] "dead at end of block" "insert auto destroy"
    (4312302 'move' firstOpen[4312300] -1)
    (4312305 'end of statement')
    {
      val _indexOfInterest[4312307]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[4312309]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883] "dead at end of block" "expr temp" "temp"
      val call_tmp[4312311]:_ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312889] "dead at end of block" "expr temp" "maybe param" "temp"
      val default_arg_numSlots[4312842]:int(64)[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (4312848 'move' default_arg_numSlots[4312842](4312844 call _lookForSlots_default_numSlots[4312805] this[4312267]))
      (4312313 'move' call_tmp[4312311](4312319 call _lookForSlots[4312604] this[4312267] key[4312274] default_arg_numSlots[4312842]))
      (4312321 'move' _iterator[4312309](4312324 call _getIterator[4312898] call_tmp[4312311]))
      Defer
      {
        {
          (4312328 call _freeIterator[4313075] _iterator[4312309])
        }
      }
      ForLoop[4312337]
      {
        const slotNum[4312340]:int(64)[10] "const" "index var" "insert auto destroy"
        (4312342 'end of statement')
        (4312343 'move' slotNum[4312340] _indexOfInterest[4312307])
        (4312346 'end of statement' slotNum[4312340])
        {
          ref call_tmp[4312349]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[4313158]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "temp"
          (4313160 'move' _this_tmp_[4313158](4312354 call table[4305464] this[4312267]))
          val coerce_tmp[4313165]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (4313169 'move' coerce_tmp[4313165](4313167 'deref' _this_tmp_[4313158]))
          (4312351 'move' call_tmp[4312349](4312357 call this[4308628] coerce_tmp[4313165] slotNum[4312340]))
          ref call_tmp[4312359]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
          (4312361 'move' call_tmp[4312359](4312364 call status[4310148] call_tmp[4312349]))
          const slotStatus[4312367]:chpl__hash_status[264678] "dead at end of block" "const" "insert auto destroy"
          val coerce_tmp[4313176]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (4313180 'move' coerce_tmp[4313176](4313178 'deref' call_tmp[4312359]))
          (4312369 'move' slotStatus[4312367](4313173 call chpl__initCopy[3260688] coerce_tmp[4313176] 1))
          (4312372 'end of statement' slotNum[4312340])
          val call_tmp[4312374]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (4312376 'move' call_tmp[4312374](4312379 call ==[3259199] slotStatus[4312367] empty[264672]))
          val call_tmp[4312382]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (4312384 'move' call_tmp[4312382] call_tmp[4312374])
          if call_tmp[4312382]
          {
            val call_tmp[4312391]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[4312398]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4312400 'move' call_tmp[4312398](4312403 call ==[52746] firstOpen[4312300] -1))
            val call_tmp[4312406]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4312408 'move' call_tmp[4312406] call_tmp[4312398])
            if call_tmp[4312406]
            {
              (4312416 call =[52229] firstOpen[4312300] slotNum[4312340])
              (4312419 'end of statement' firstOpen[4312300] slotNum[4312340])
            }
            val call_tmp[4312423]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            (4312425 'move' call_tmp[4312423](4312428 call _build_tuple[3260720] 0 firstOpen[4312300]))
            val call_tmp[4312431]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (4313314 '=' ret[4312281] call_tmp[4312423])
            gotoReturn _end__findSlot[4312597] _end__findSlot[4312597]
          }
          {
            val call_tmp[4312449]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4312451 'move' call_tmp[4312449](4312454 call ==[3259199] slotStatus[4312367] full[264674]))
            val call_tmp[4312457]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4312459 'move' call_tmp[4312457] call_tmp[4312449])
            if call_tmp[4312457]
            {
              ref call_tmp[4312466]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[4313193]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "temp"
              (4313195 'move' _this_tmp_[4313193](4312471 call table[4305464] this[4312267]))
              val coerce_tmp[4313200]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (4313204 'move' coerce_tmp[4313200](4313202 'deref' _this_tmp_[4313193]))
              (4312468 'move' call_tmp[4312466](4312474 call this[4308628] coerce_tmp[4313200] slotNum[4312340]))
              ref call_tmp[4312476]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (4312478 'move' call_tmp[4312476](4312481 call key[4310201] call_tmp[4312466]))
              val call_tmp[4312484]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4312486 'move' call_tmp[4312484](4312492 call keysMatch[4313208] this[4312267] call_tmp[4312476] key[4312274]))
              val call_tmp[4312495]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4312497 'move' call_tmp[4312495] call_tmp[4312484])
              if call_tmp[4312495]
              {
                val call_tmp[4312504]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (4312506 'move' call_tmp[4312504](4312509 call _build_tuple[3260720] 1 slotNum[4312340]))
                val call_tmp[4312512]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (4313317 '=' ret[4312281] call_tmp[4312504])
                gotoReturn _end__findSlot[4312597] _end__findSlot[4312597]
              }
            }
            {
              val call_tmp[4312531]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[4312538]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4312540 'move' call_tmp[4312538](4312543 call ==[52746] firstOpen[4312300] -1))
              val call_tmp[4312546]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4312548 'move' call_tmp[4312546] call_tmp[4312538])
              if call_tmp[4312546]
              {
                (4312556 call =[52229] firstOpen[4312300] slotNum[4312340])
                (4312559 'end of statement' firstOpen[4312300] slotNum[4312340])
              }
            }
          }
        }
        label _continueLabel[4312565]
        _indexOfInterest[4312307]
        _iterator[4312309]
      }
      label _breakLabel[4312567]
    }
    val call_tmp[4312569]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[4312576]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (4312578 'move' call_tmp[4312576](4312581 call _build_tuple[3260720] 0 -1))
    val call_tmp[4312584]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (4313320 '=' ret[4312281] call_tmp[4312576])
    label _end__findSlot[4312597]
    (4312599 return ret[4312281])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].advance[3260421](const in arg this[3260423]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : void[4] "auto ii" "method" "resolved"
  {
    (3260428 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].zip1[3260430](const in arg this[3260432]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3260437 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].zip2[3260439](const in arg this[3260441]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3260446 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].zip3[3260448](const in arg this[3260450]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3260455 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].zip4[3260457](const in arg this[3260459]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3260464 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].hasMore[3260466](const in arg this[3260468]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3260473 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].getValue[3260475](const in arg this[3260477]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3260482 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].init[3260484](const in arg this[3260486]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3260491 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395].incr[3260493](const in arg this[3260495]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3260500 return _void[46])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395] val super[3260396]:RootClass[236] "super class" val more[3260398]:int(64)[10]
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32?[5488328]
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[5488325]
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[5488322]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32?[5488319]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[5488316]
  type borrowed _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32?[5488313]
  type _ir__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260401]
  function _getIterator[3260410](const  ref arg ir[3260412]:_ir__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260401]) : _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3260519]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395] "dead after last mention" "RVV" "temp"
    val _ic_[3260402]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395] "dead after last mention" "temp"
    val call_tmp[3260526]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3260529 'move' call_tmp[3260526](3260541 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395]))
    val cast_tmp[3260544]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3260546 'move' cast_tmp[3260544](3260407 call chpl_here_alloc[308303] call_tmp[3260526] 319))
    (3260415 'move' _ic_[3260402](3260548 'cast' _ic__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260395] cast_tmp[3260544]))
    (3260417 'setcid' _ic_[3260402])
    (3260515 'end of statement')
    (3260524 'move' ret[3260519] _ic_[3260402])
    (3260521 return ret[3260519])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508]._lookForSlots[3259625](const  ref arg this[3259629]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const  ref arg key[3259636]:string[244], const in arg numSlots[3259648]:int(64)[10]) : _ir__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260401] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3259650]:_ir__lookForSlots__ref_chpl__hashtable_string_Module__real32[3260401] "dead after last mention" "RVV" "temp"
    val call_tmp[3259661]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3259663 'move' call_tmp[3259661](3259666 call ==[52746] numSlots[3259648] 0))
    val call_tmp[3259669]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3259671 'move' call_tmp[3259669] call_tmp[3259661])
    if call_tmp[3259669]
    {
      gotoReturn _end__lookForSlots[3259817] _end__lookForSlots[3259817]
    }
    val call_tmp[3259681]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3259683 'move' call_tmp[3259681](3259686 call chpl__defaultHashWrapper[3259874] key[3259636]))
    val call_tmp[3259688]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3259690 'move' call_tmp[3259688](3259693 'cast' uint(64)[86] call_tmp[3259681]))
    val currentSlot[3259696]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3259698 'move' currentSlot[3259696] call_tmp[3259688])
    (3259701 'end of statement')
    val call_tmp[3259702]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3259704 'move' call_tmp[3259702](3259707 call -[1487343] numSlots[3259648]))
    const mask[3259710]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3259712 'move' mask[3259710] call_tmp[3259702])
    (3259715 'end of statement')
    {
      val _indexOfInterest[3259717]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3259719]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
      val call_tmp[3259721]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
      (3259723 'move' call_tmp[3259721](3259726 call chpl_direct_range_iter[122109] 1 numSlots[3259648]))
      (3259729 'move' _iterator[3259719](3259732 call _getIterator[1600129] call_tmp[3259721]))
      Defer
      {
        {
          (3259736 call _freeIterator[1600298] _iterator[3259719])
        }
      }
      ForLoop[3259745] order-independent
      {
        const probe[3259755]:int(64)[10] "const" "index var" "insert auto destroy"
        (3259757 'end of statement')
        (3259758 'move' probe[3259755] _indexOfInterest[3259717])
        (3259761 'end of statement' probe[3259755])
        {
          val call_tmp[3259764]:uint(64)[86] "dead at end of block" "maybe param" "temp"
          (3259766 'move' call_tmp[3259764](3259769 'cast' uint(64)[86] probe[3259755]))
          val uprobe[3259772]:uint(64)[86] "dead at end of block" "insert auto destroy"
          (3259774 'move' uprobe[3259772] call_tmp[3259764])
          (3259777 'end of statement' probe[3259755])
          val yret[3259779]:int(64)[10] "dead after last mention" "YVV" "temp"
          val call_tmp[3259781]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (3259783 'move' call_tmp[3259781](3259786 call &[63561] currentSlot[3259747] mask[3260272]))
          val call_tmp[3259789]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (3259791 'move' call_tmp[3259789](3259794 call :[1482043] call_tmp[3259781]))
          (3259797 'move' yret[3259779] call_tmp[3259789])
          (3259801 yield yret[3259779])
          (3259803 'end of statement' currentSlot[3259747] mask[3260272])
          (3259807 call +=[72270] currentSlot[3259747] uprobe[3259772])
          (3259810 'end of statement' currentSlot[3259747] uprobe[3259772])
        }
        label _continueLabel[3259813]
        _indexOfInterest[3259717]
        _iterator[3259719]
      }
      label _breakLabel[3259815]
    }
    label _end__lookForSlots[3259817]
    (3259819 return ret[3259650])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508]._lookForSlots_default_numSlots[3259826](const  ref arg this[3259829]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) ref : int(64)[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3259832]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-ref numSlots[3259837]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3259844 'move' numSlots[3259837](3259841 call tableSize[1942995] this[3259829]))
    val coerce_tmp[3259854]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3259858 'move' coerce_tmp[3259854](3259856 'deref' numSlots[3259837]))
    (3259852 'move' ret[3259832](3259848 call chpl__initCopy[1473915] coerce_tmp[3259854] 0))
    (3259835 return ret[3259832])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].advance[3307319](const in arg this[3307321]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : void[4] "auto ii" "method" "resolved"
  {
    (3307326 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].zip1[3307328](const in arg this[3307330]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3307335 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].zip2[3307337](const in arg this[3307339]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3307344 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].zip3[3307346](const in arg this[3307348]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3307353 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].zip4[3307355](const in arg this[3307357]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3307362 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].hasMore[3307364](const in arg this[3307366]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3307371 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].getValue[3307373](const in arg this[3307375]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3307380 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].init[3307382](const in arg this[3307384]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3307389 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293].incr[3307391](const in arg this[3307393]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3307398 return _void[46])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293] val super[3307294]:RootClass[236] "super class" val more[3307296]:int(64)[10]
  type _ic__lookForSlots__ref_chpl__hashtable_string_int64_t?[5488382]
  type _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[5488379]
  type _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[5488376]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_int64_t?[5488373]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[5488370]
  type borrowed _ic__lookForSlots__ref_chpl__hashtable_string_int64_t?[5488367]
  type _ir__lookForSlots__ref_chpl__hashtable_string_int64_t[3307299]
  function _getIterator[3307308](const  ref arg ir[3307310]:_ir__lookForSlots__ref_chpl__hashtable_string_int64_t[3307299]) : _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3307417]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293] "dead after last mention" "RVV" "temp"
    val _ic_[3307300]:_ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293] "dead after last mention" "temp"
    val call_tmp[3307424]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3307427 'move' call_tmp[3307424](3307439 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293]))
    val cast_tmp[3307442]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3307444 'move' cast_tmp[3307442](3307305 call chpl_here_alloc[308303] call_tmp[3307424] 324))
    (3307313 'move' _ic_[3307300](3307446 'cast' _ic__lookForSlots__ref_chpl__hashtable_string_int64_t[3307293] cast_tmp[3307442]))
    (3307315 'setcid' _ic_[3307300])
    (3307413 'end of statement')
    (3307422 'move' ret[3307417] _ic_[3307300])
    (3307419 return ret[3307417])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858]._lookForSlots[3307014](const  ref arg this[3307018]:_ref(chpl__hashtable(string,int(64)))[3288858], const  ref arg key[3307025]:string[244], const in arg numSlots[3307037]:int(64)[10]) : _ir__lookForSlots__ref_chpl__hashtable_string_int64_t[3307299] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3307039]:_ir__lookForSlots__ref_chpl__hashtable_string_int64_t[3307299] "dead after last mention" "RVV" "temp"
    val call_tmp[3307050]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3307052 'move' call_tmp[3307050](3307055 call ==[52746] numSlots[3307037] 0))
    val call_tmp[3307058]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3307060 'move' call_tmp[3307058] call_tmp[3307050])
    if call_tmp[3307058]
    {
      gotoReturn _end__lookForSlots[3307206] _end__lookForSlots[3307206]
    }
    val call_tmp[3307070]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3307072 'move' call_tmp[3307070](3307075 call chpl__defaultHashWrapper[3259874] key[3307025]))
    val call_tmp[3307077]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3307079 'move' call_tmp[3307077](3307082 'cast' uint(64)[86] call_tmp[3307070]))
    val currentSlot[3307085]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3307087 'move' currentSlot[3307085] call_tmp[3307077])
    (3307090 'end of statement')
    val call_tmp[3307091]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3307093 'move' call_tmp[3307091](3307096 call -[1487343] numSlots[3307037]))
    const mask[3307099]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3307101 'move' mask[3307099] call_tmp[3307091])
    (3307104 'end of statement')
    {
      val _indexOfInterest[3307106]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3307108]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
      val call_tmp[3307110]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
      (3307112 'move' call_tmp[3307110](3307115 call chpl_direct_range_iter[122109] 1 numSlots[3307037]))
      (3307118 'move' _iterator[3307108](3307121 call _getIterator[1600129] call_tmp[3307110]))
      Defer
      {
        {
          (3307125 call _freeIterator[1600298] _iterator[3307108])
        }
      }
      ForLoop[3307134] order-independent
      {
        const probe[3307144]:int(64)[10] "const" "index var" "insert auto destroy"
        (3307146 'end of statement')
        (3307147 'move' probe[3307144] _indexOfInterest[3307106])
        (3307150 'end of statement' probe[3307144])
        {
          val call_tmp[3307153]:uint(64)[86] "dead at end of block" "maybe param" "temp"
          (3307155 'move' call_tmp[3307153](3307158 'cast' uint(64)[86] probe[3307144]))
          val uprobe[3307161]:uint(64)[86] "dead at end of block" "insert auto destroy"
          (3307163 'move' uprobe[3307161] call_tmp[3307153])
          (3307166 'end of statement' probe[3307144])
          val yret[3307168]:int(64)[10] "dead after last mention" "YVV" "temp"
          val call_tmp[3307170]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (3307172 'move' call_tmp[3307170](3307175 call &[63561] currentSlot[3307136] mask[3307270]))
          val call_tmp[3307178]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (3307180 'move' call_tmp[3307178](3307183 call :[1482043] call_tmp[3307170]))
          (3307186 'move' yret[3307168] call_tmp[3307178])
          (3307190 yield yret[3307168])
          (3307192 'end of statement' currentSlot[3307136] mask[3307270])
          (3307196 call +=[72270] currentSlot[3307136] uprobe[3307161])
          (3307199 'end of statement' currentSlot[3307136] uprobe[3307161])
        }
        label _continueLabel[3307202]
        _indexOfInterest[3307106]
        _iterator[3307108]
      }
      label _breakLabel[3307204]
    }
    label _end__lookForSlots[3307206]
    (3307208 return ret[3307039])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858]._lookForSlots_default_numSlots[3307215](const  ref arg this[3307218]:_ref(chpl__hashtable(string,int(64)))[3288858]) ref : int(64)[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3307221]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-ref numSlots[3307226]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3307233 'move' numSlots[3307226](3307230 call tableSize[3301883] this[3307218]))
    val coerce_tmp[3307243]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3307247 'move' coerce_tmp[3307243](3307245 'deref' numSlots[3307226]))
    (3307241 'move' ret[3307221](3307237 call chpl__initCopy[1473915] coerce_tmp[3307243] 0))
    (3307224 return ret[3307221])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].advance[3347959](const in arg this[3347961]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : void[4] "auto ii" "method" "resolved"
  {
    (3347966 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].zip1[3347968](const in arg this[3347970]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3347975 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].zip2[3347977](const in arg this[3347979]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3347984 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].zip3[3347986](const in arg this[3347988]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3347993 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].zip4[3347995](const in arg this[3347997]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3348002 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].hasMore[3348004](const in arg this[3348006]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3348011 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].getValue[3348013](const in arg this[3348015]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3348020 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].init[3348022](const in arg this[3348024]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3348029 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933].incr[3348031](const in arg this[3348033]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3348038 return _void[46])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933] val super[3347934]:RootClass[236] "super class" val more[3347936]:int(64)[10]
  type _ic__lookForSlots__ref_chpl__hashtable_string_string?[5488454]
  type _ic__lookForSlots__ref_chpl__hashtable_string_string[5488451]
  type _ic__lookForSlots__ref_chpl__hashtable_string_string[5488448]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_string?[5488445]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_string[5488442]
  type borrowed _ic__lookForSlots__ref_chpl__hashtable_string_string?[5488439]
  type _ir__lookForSlots__ref_chpl__hashtable_string_string[3347939]
  function _getIterator[3347948](const  ref arg ir[3347950]:_ir__lookForSlots__ref_chpl__hashtable_string_string[3347939]) : _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3348057]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933] "dead after last mention" "RVV" "temp"
    val _ic_[3347940]:_ic__lookForSlots__ref_chpl__hashtable_string_string[3347933] "dead after last mention" "temp"
    val call_tmp[3348064]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3348067 'move' call_tmp[3348064](3348079 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933]))
    val cast_tmp[3348082]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3348084 'move' cast_tmp[3348082](3347945 call chpl_here_alloc[308303] call_tmp[3348064] 329))
    (3347953 'move' _ic_[3347940](3348086 'cast' _ic__lookForSlots__ref_chpl__hashtable_string_string[3347933] cast_tmp[3348082]))
    (3347955 'setcid' _ic_[3347940])
    (3348053 'end of statement')
    (3348062 'move' ret[3348057] _ic_[3347940])
    (3348059 return ret[3348057])
  }
  function _ref(chpl__hashtable(string,string))[3283450]._lookForSlots[3347654](const  ref arg this[3347658]:_ref(chpl__hashtable(string,string))[3283450], const  ref arg key[3347665]:string[244], const in arg numSlots[3347677]:int(64)[10]) : _ir__lookForSlots__ref_chpl__hashtable_string_string[3347939] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3347679]:_ir__lookForSlots__ref_chpl__hashtable_string_string[3347939] "dead after last mention" "RVV" "temp"
    val call_tmp[3347690]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3347692 'move' call_tmp[3347690](3347695 call ==[52746] numSlots[3347677] 0))
    val call_tmp[3347698]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3347700 'move' call_tmp[3347698] call_tmp[3347690])
    if call_tmp[3347698]
    {
      gotoReturn _end__lookForSlots[3347846] _end__lookForSlots[3347846]
    }
    val call_tmp[3347710]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3347712 'move' call_tmp[3347710](3347715 call chpl__defaultHashWrapper[3259874] key[3347665]))
    val call_tmp[3347717]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3347719 'move' call_tmp[3347717](3347722 'cast' uint(64)[86] call_tmp[3347710]))
    val currentSlot[3347725]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3347727 'move' currentSlot[3347725] call_tmp[3347717])
    (3347730 'end of statement')
    val call_tmp[3347731]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3347733 'move' call_tmp[3347731](3347736 call -[1487343] numSlots[3347677]))
    const mask[3347739]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3347741 'move' mask[3347739] call_tmp[3347731])
    (3347744 'end of statement')
    {
      val _indexOfInterest[3347746]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3347748]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
      val call_tmp[3347750]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
      (3347752 'move' call_tmp[3347750](3347755 call chpl_direct_range_iter[122109] 1 numSlots[3347677]))
      (3347758 'move' _iterator[3347748](3347761 call _getIterator[1600129] call_tmp[3347750]))
      Defer
      {
        {
          (3347765 call _freeIterator[1600298] _iterator[3347748])
        }
      }
      ForLoop[3347774] order-independent
      {
        const probe[3347784]:int(64)[10] "const" "index var" "insert auto destroy"
        (3347786 'end of statement')
        (3347787 'move' probe[3347784] _indexOfInterest[3347746])
        (3347790 'end of statement' probe[3347784])
        {
          val call_tmp[3347793]:uint(64)[86] "dead at end of block" "maybe param" "temp"
          (3347795 'move' call_tmp[3347793](3347798 'cast' uint(64)[86] probe[3347784]))
          val uprobe[3347801]:uint(64)[86] "dead at end of block" "insert auto destroy"
          (3347803 'move' uprobe[3347801] call_tmp[3347793])
          (3347806 'end of statement' probe[3347784])
          val yret[3347808]:int(64)[10] "dead after last mention" "YVV" "temp"
          val call_tmp[3347810]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (3347812 'move' call_tmp[3347810](3347815 call &[63561] currentSlot[3347776] mask[3347910]))
          val call_tmp[3347818]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (3347820 'move' call_tmp[3347818](3347823 call :[1482043] call_tmp[3347810]))
          (3347826 'move' yret[3347808] call_tmp[3347818])
          (3347830 yield yret[3347808])
          (3347832 'end of statement' currentSlot[3347776] mask[3347910])
          (3347836 call +=[72270] currentSlot[3347776] uprobe[3347801])
          (3347839 'end of statement' currentSlot[3347776] uprobe[3347801])
        }
        label _continueLabel[3347842]
        _indexOfInterest[3347746]
        _iterator[3347748]
      }
      label _breakLabel[3347844]
    }
    label _end__lookForSlots[3347846]
    (3347848 return ret[3347679])
  }
  function _ref(chpl__hashtable(string,string))[3283450]._lookForSlots_default_numSlots[3347855](const  ref arg this[3347858]:_ref(chpl__hashtable(string,string))[3283450]) ref : int(64)[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3347861]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-ref numSlots[3347866]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3347873 'move' numSlots[3347866](3347870 call tableSize[3340120] this[3347858]))
    val coerce_tmp[3347883]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3347887 'move' coerce_tmp[3347883](3347885 'deref' numSlots[3347866]))
    (3347881 'move' ret[3347861](3347877 call chpl__initCopy[1473915] coerce_tmp[3347883] 0))
    (3347864 return ret[3347861])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].advance[3365485](const in arg this[3365487]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : void[4] "auto ii" "method" "resolved"
  {
    (3365492 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].zip1[3365494](const in arg this[3365496]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3365501 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].zip2[3365503](const in arg this[3365505]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3365510 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].zip3[3365512](const in arg this[3365514]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3365519 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].zip4[3365521](const in arg this[3365523]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3365528 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].hasMore[3365530](const in arg this[3365532]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3365537 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].getValue[3365539](const in arg this[3365541]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3365546 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].init[3365548](const in arg this[3365550]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3365555 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459].incr[3365557](const in arg this[3365559]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3365564 return _void[46])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459] val super[3365460]:RootClass[236] "super class" val more[3365462]:int(64)[10]
  type _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification?[5488490]
  type _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[5488487]
  type _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[5488484]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification?[5488481]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[5488478]
  type borrowed _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification?[5488475]
  type _ir__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365465]
  function _getIterator[3365474](const  ref arg ir[3365476]:_ir__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365465]) : _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3365583]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459] "dead after last mention" "RVV" "temp"
    val _ic_[3365466]:_ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459] "dead after last mention" "temp"
    val call_tmp[3365590]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3365593 'move' call_tmp[3365590](3365605 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459]))
    val cast_tmp[3365608]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3365610 'move' cast_tmp[3365608](3365471 call chpl_here_alloc[308303] call_tmp[3365590] 331))
    (3365479 'move' _ic_[3365466](3365612 'cast' _ic__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365459] cast_tmp[3365608]))
    (3365481 'setcid' _ic_[3365466])
    (3365579 'end of statement')
    (3365588 'move' ret[3365583] _ic_[3365466])
    (3365585 return ret[3365583])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]._lookForSlots[3365180](const  ref arg this[3365184]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const  ref arg key[3365191]:string[244], const in arg numSlots[3365203]:int(64)[10]) : _ir__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365465] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3365205]:_ir__lookForSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3365465] "dead after last mention" "RVV" "temp"
    val call_tmp[3365216]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3365218 'move' call_tmp[3365216](3365221 call ==[52746] numSlots[3365203] 0))
    val call_tmp[3365224]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3365226 'move' call_tmp[3365224] call_tmp[3365216])
    if call_tmp[3365224]
    {
      gotoReturn _end__lookForSlots[3365372] _end__lookForSlots[3365372]
    }
    val call_tmp[3365236]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3365238 'move' call_tmp[3365236](3365241 call chpl__defaultHashWrapper[3259874] key[3365191]))
    val call_tmp[3365243]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3365245 'move' call_tmp[3365243](3365248 'cast' uint(64)[86] call_tmp[3365236]))
    val currentSlot[3365251]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3365253 'move' currentSlot[3365251] call_tmp[3365243])
    (3365256 'end of statement')
    val call_tmp[3365257]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3365259 'move' call_tmp[3365257](3365262 call -[1487343] numSlots[3365203]))
    const mask[3365265]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3365267 'move' mask[3365265] call_tmp[3365257])
    (3365270 'end of statement')
    {
      val _indexOfInterest[3365272]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3365274]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
      val call_tmp[3365276]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
      (3365278 'move' call_tmp[3365276](3365281 call chpl_direct_range_iter[122109] 1 numSlots[3365203]))
      (3365284 'move' _iterator[3365274](3365287 call _getIterator[1600129] call_tmp[3365276]))
      Defer
      {
        {
          (3365291 call _freeIterator[1600298] _iterator[3365274])
        }
      }
      ForLoop[3365300] order-independent
      {
        const probe[3365310]:int(64)[10] "const" "index var" "insert auto destroy"
        (3365312 'end of statement')
        (3365313 'move' probe[3365310] _indexOfInterest[3365272])
        (3365316 'end of statement' probe[3365310])
        {
          val call_tmp[3365319]:uint(64)[86] "dead at end of block" "maybe param" "temp"
          (3365321 'move' call_tmp[3365319](3365324 'cast' uint(64)[86] probe[3365310]))
          val uprobe[3365327]:uint(64)[86] "dead at end of block" "insert auto destroy"
          (3365329 'move' uprobe[3365327] call_tmp[3365319])
          (3365332 'end of statement' probe[3365310])
          val yret[3365334]:int(64)[10] "dead after last mention" "YVV" "temp"
          val call_tmp[3365336]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (3365338 'move' call_tmp[3365336](3365341 call &[63561] currentSlot[3365302] mask[3365436]))
          val call_tmp[3365344]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (3365346 'move' call_tmp[3365344](3365349 call :[1482043] call_tmp[3365336]))
          (3365352 'move' yret[3365334] call_tmp[3365344])
          (3365356 yield yret[3365334])
          (3365358 'end of statement' currentSlot[3365302] mask[3365436])
          (3365362 call +=[72270] currentSlot[3365302] uprobe[3365327])
          (3365365 'end of statement' currentSlot[3365302] uprobe[3365327])
        }
        label _continueLabel[3365368]
        _indexOfInterest[3365272]
        _iterator[3365274]
      }
      label _breakLabel[3365370]
    }
    label _end__lookForSlots[3365372]
    (3365374 return ret[3365205])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]._lookForSlots_default_numSlots[3365381](const  ref arg this[3365384]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) ref : int(64)[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3365387]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-ref numSlots[3365392]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3365399 'move' numSlots[3365392](3365396 call tableSize[3355205] this[3365384]))
    val coerce_tmp[3365409]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3365413 'move' coerce_tmp[3365409](3365411 'deref' numSlots[3365392]))
    (3365407 'move' ret[3365387](3365403 call chpl__initCopy[1473915] coerce_tmp[3365409] 0))
    (3365390 return ret[3365387])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].advance[3403281](const in arg this[3403283]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : void[4] "auto ii" "method" "resolved"
  {
    (3403288 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].zip1[3403290](const in arg this[3403292]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3403297 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].zip2[3403299](const in arg this[3403301]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3403306 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].zip3[3403308](const in arg this[3403310]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3403315 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].zip4[3403317](const in arg this[3403319]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3403324 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].hasMore[3403326](const in arg this[3403328]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3403333 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].getValue[3403335](const in arg this[3403337]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3403342 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].init[3403344](const in arg this[3403346]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3403351 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255].incr[3403353](const in arg this[3403355]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3403360 return _void[46])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255] val super[3403256]:RootClass[236] "super class" val more[3403258]:int(64)[10]
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32?[5488544]
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[5488541]
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[5488538]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32?[5488535]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[5488532]
  type borrowed _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32?[5488529]
  type _ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403261]
  function _getIterator[3403270](const  ref arg ir[3403272]:_ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403261]) : _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3403379]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255] "dead after last mention" "RVV" "temp"
    val _ic_[3403262]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255] "dead after last mention" "temp"
    val call_tmp[3403386]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3403389 'move' call_tmp[3403386](3403401 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255]))
    val cast_tmp[3403404]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3403406 'move' cast_tmp[3403404](3403267 call chpl_here_alloc[308303] call_tmp[3403386] 338))
    (3403275 'move' _ic_[3403262](3403408 'cast' _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403255] cast_tmp[3403404]))
    (3403277 'setcid' _ic_[3403262])
    (3403375 'end of statement')
    (3403384 'move' ret[3403379] _ic_[3403262])
    (3403381 return ret[3403379])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221]._lookForSlots[3402976](const  ref arg this[3402980]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const  ref arg key[3402987]:string[244], const in arg numSlots[3402999]:int(64)[10]) : _ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403261] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3403001]:_ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real32[3403261] "dead after last mention" "RVV" "temp"
    val call_tmp[3403012]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3403014 'move' call_tmp[3403012](3403017 call ==[52746] numSlots[3402999] 0))
    val call_tmp[3403020]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3403022 'move' call_tmp[3403020] call_tmp[3403012])
    if call_tmp[3403020]
    {
      gotoReturn _end__lookForSlots[3403168] _end__lookForSlots[3403168]
    }
    val call_tmp[3403032]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3403034 'move' call_tmp[3403032](3403037 call chpl__defaultHashWrapper[3259874] key[3402987]))
    val call_tmp[3403039]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3403041 'move' call_tmp[3403039](3403044 'cast' uint(64)[86] call_tmp[3403032]))
    val currentSlot[3403047]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3403049 'move' currentSlot[3403047] call_tmp[3403039])
    (3403052 'end of statement')
    val call_tmp[3403053]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3403055 'move' call_tmp[3403053](3403058 call -[1487343] numSlots[3402999]))
    const mask[3403061]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3403063 'move' mask[3403061] call_tmp[3403053])
    (3403066 'end of statement')
    {
      val _indexOfInterest[3403068]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3403070]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
      val call_tmp[3403072]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
      (3403074 'move' call_tmp[3403072](3403077 call chpl_direct_range_iter[122109] 1 numSlots[3402999]))
      (3403080 'move' _iterator[3403070](3403083 call _getIterator[1600129] call_tmp[3403072]))
      Defer
      {
        {
          (3403087 call _freeIterator[1600298] _iterator[3403070])
        }
      }
      ForLoop[3403096] order-independent
      {
        const probe[3403106]:int(64)[10] "const" "index var" "insert auto destroy"
        (3403108 'end of statement')
        (3403109 'move' probe[3403106] _indexOfInterest[3403068])
        (3403112 'end of statement' probe[3403106])
        {
          val call_tmp[3403115]:uint(64)[86] "dead at end of block" "maybe param" "temp"
          (3403117 'move' call_tmp[3403115](3403120 'cast' uint(64)[86] probe[3403106]))
          val uprobe[3403123]:uint(64)[86] "dead at end of block" "insert auto destroy"
          (3403125 'move' uprobe[3403123] call_tmp[3403115])
          (3403128 'end of statement' probe[3403106])
          val yret[3403130]:int(64)[10] "dead after last mention" "YVV" "temp"
          val call_tmp[3403132]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (3403134 'move' call_tmp[3403132](3403137 call &[63561] currentSlot[3403098] mask[3403232]))
          val call_tmp[3403140]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (3403142 'move' call_tmp[3403140](3403145 call :[1482043] call_tmp[3403132]))
          (3403148 'move' yret[3403130] call_tmp[3403140])
          (3403152 yield yret[3403130])
          (3403154 'end of statement' currentSlot[3403098] mask[3403232])
          (3403158 call +=[72270] currentSlot[3403098] uprobe[3403123])
          (3403161 'end of statement' currentSlot[3403098] uprobe[3403123])
        }
        label _continueLabel[3403164]
        _indexOfInterest[3403068]
        _iterator[3403070]
      }
      label _breakLabel[3403166]
    }
    label _end__lookForSlots[3403168]
    (3403170 return ret[3403001])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221]._lookForSlots_default_numSlots[3403177](const  ref arg this[3403180]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) ref : int(64)[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3403183]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-ref numSlots[3403188]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3403195 'move' numSlots[3403188](3403192 call tableSize[3392339] this[3403180]))
    val coerce_tmp[3403205]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3403209 'move' coerce_tmp[3403205](3403207 'deref' numSlots[3403188]))
    (3403203 'move' ret[3403183](3403199 call chpl__initCopy[1473915] coerce_tmp[3403205] 0))
    (3403186 return ret[3403183])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].advance[3862830](const in arg this[3862832]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : void[4] "auto ii" "method" "resolved"
  {
    (3862837 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].zip1[3862839](const in arg this[3862841]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3862846 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].zip2[3862848](const in arg this[3862850]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3862855 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].zip3[3862857](const in arg this[3862859]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3862864 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].zip4[3862866](const in arg this[3862868]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3862873 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].hasMore[3862875](const in arg this[3862877]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3862882 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].getValue[3862884](const in arg this[3862886]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (3862891 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].init[3862893](const in arg this[3862895]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3862900 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804].incr[3862902](const in arg this[3862904]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (3862909 return _void[46])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804] val super[3862805]:RootClass[236] "super class" val more[3862807]:int(64)[10]
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64?[5489408]
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[5489405]
  type _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[5489402]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64?[5489399]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[5489396]
  type borrowed _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64?[5489393]
  type _ir__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862810]
  function _getIterator[3862819](const  ref arg ir[3862821]:_ir__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862810]) : _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[3862928]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804] "dead after last mention" "RVV" "temp"
    val _ic_[3862811]:_ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804] "dead after last mention" "temp"
    val call_tmp[3862935]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3862938 'move' call_tmp[3862935](3862950 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804]))
    val cast_tmp[3862953]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3862955 'move' cast_tmp[3862953](3862816 call chpl_here_alloc[308303] call_tmp[3862935] 396))
    (3862824 'move' _ic_[3862811](3862957 'cast' _ic__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862804] cast_tmp[3862953]))
    (3862826 'setcid' _ic_[3862811])
    (3862924 'end of statement')
    (3862933 'move' ret[3862928] _ic_[3862811])
    (3862930 return ret[3862928])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248]._lookForSlots[3862525](const  ref arg this[3862529]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const  ref arg key[3862536]:string[244], const in arg numSlots[3862548]:int(64)[10]) : _ir__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862810] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[3862550]:_ir__lookForSlots__ref_chpl__hashtable_string_Module__real64[3862810] "dead after last mention" "RVV" "temp"
    val call_tmp[3862561]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3862563 'move' call_tmp[3862561](3862566 call ==[52746] numSlots[3862548] 0))
    val call_tmp[3862569]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3862571 'move' call_tmp[3862569] call_tmp[3862561])
    if call_tmp[3862569]
    {
      gotoReturn _end__lookForSlots[3862717] _end__lookForSlots[3862717]
    }
    val call_tmp[3862581]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3862583 'move' call_tmp[3862581](3862586 call chpl__defaultHashWrapper[3259874] key[3862536]))
    val call_tmp[3862588]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3862590 'move' call_tmp[3862588](3862593 'cast' uint(64)[86] call_tmp[3862581]))
    val currentSlot[3862596]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3862598 'move' currentSlot[3862596] call_tmp[3862588])
    (3862601 'end of statement')
    val call_tmp[3862602]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3862604 'move' call_tmp[3862602](3862607 call -[1487343] numSlots[3862548]))
    const mask[3862610]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3862612 'move' mask[3862610] call_tmp[3862602])
    (3862615 'end of statement')
    {
      val _indexOfInterest[3862617]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3862619]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
      val call_tmp[3862621]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
      (3862623 'move' call_tmp[3862621](3862626 call chpl_direct_range_iter[122109] 1 numSlots[3862548]))
      (3862629 'move' _iterator[3862619](3862632 call _getIterator[1600129] call_tmp[3862621]))
      Defer
      {
        {
          (3862636 call _freeIterator[1600298] _iterator[3862619])
        }
      }
      ForLoop[3862645] order-independent
      {
        const probe[3862655]:int(64)[10] "const" "index var" "insert auto destroy"
        (3862657 'end of statement')
        (3862658 'move' probe[3862655] _indexOfInterest[3862617])
        (3862661 'end of statement' probe[3862655])
        {
          val call_tmp[3862664]:uint(64)[86] "dead at end of block" "maybe param" "temp"
          (3862666 'move' call_tmp[3862664](3862669 'cast' uint(64)[86] probe[3862655]))
          val uprobe[3862672]:uint(64)[86] "dead at end of block" "insert auto destroy"
          (3862674 'move' uprobe[3862672] call_tmp[3862664])
          (3862677 'end of statement' probe[3862655])
          val yret[3862679]:int(64)[10] "dead after last mention" "YVV" "temp"
          val call_tmp[3862681]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (3862683 'move' call_tmp[3862681](3862686 call &[63561] currentSlot[3862647] mask[3862781]))
          val call_tmp[3862689]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (3862691 'move' call_tmp[3862689](3862694 call :[1482043] call_tmp[3862681]))
          (3862697 'move' yret[3862679] call_tmp[3862689])
          (3862701 yield yret[3862679])
          (3862703 'end of statement' currentSlot[3862647] mask[3862781])
          (3862707 call +=[72270] currentSlot[3862647] uprobe[3862672])
          (3862710 'end of statement' currentSlot[3862647] uprobe[3862672])
        }
        label _continueLabel[3862713]
        _indexOfInterest[3862617]
        _iterator[3862619]
      }
      label _breakLabel[3862715]
    }
    label _end__lookForSlots[3862717]
    (3862719 return ret[3862550])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248]._lookForSlots_default_numSlots[3862726](const  ref arg this[3862729]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) ref : int(64)[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3862732]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-ref numSlots[3862737]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3862744 'move' numSlots[3862737](3862741 call tableSize[3828932] this[3862729]))
    val coerce_tmp[3862754]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3862758 'move' coerce_tmp[3862754](3862756 'deref' numSlots[3862737]))
    (3862752 'move' ret[3862732](3862748 call chpl__initCopy[1473915] coerce_tmp[3862754] 0))
    (3862735 return ret[3862732])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].advance[4312909](const in arg this[4312911]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : void[4] "auto ii" "method" "resolved"
  {
    (4312916 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].zip1[4312918](const in arg this[4312920]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4312925 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].zip2[4312927](const in arg this[4312929]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4312934 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].zip3[4312936](const in arg this[4312938]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4312943 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].zip4[4312945](const in arg this[4312947]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4312952 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].hasMore[4312954](const in arg this[4312956]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4312961 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].getValue[4312963](const in arg this[4312965]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : int(64)[10] "auto ii" "inline" "method" "resolved"
  {
    (4312970 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].init[4312972](const in arg this[4312974]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4312979 return _void[46])
  }
  function _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883].incr[4312981](const in arg this[4312983]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (4312988 return _void[46])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883] val super[4312884]:RootClass[236] "super class" val more[4312886]:int(64)[10]
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64?[5489948]
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[5489945]
  type _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[5489942]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64?[5489939]
  type unmanaged _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[5489936]
  type borrowed _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64?[5489933]
  type _ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312889]
  function _getIterator[4312898](const  ref arg ir[4312900]:_ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312889]) : _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[4313007]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883] "dead after last mention" "RVV" "temp"
    val _ic_[4312890]:_ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883] "dead after last mention" "temp"
    val call_tmp[4313014]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4313017 'move' call_tmp[4313014](4313029 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883]))
    val cast_tmp[4313032]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4313034 'move' cast_tmp[4313032](4312895 call chpl_here_alloc[308303] call_tmp[4313014] 431))
    (4312903 'move' _ic_[4312890](4313036 'cast' _ic__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312883] cast_tmp[4313032]))
    (4312905 'setcid' _ic_[4312890])
    (4313003 'end of statement')
    (4313012 'move' ret[4313007] _ic_[4312890])
    (4313009 return ret[4313007])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401]._lookForSlots[4312604](const  ref arg this[4312608]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const  ref arg key[4312615]:string[244], const in arg numSlots[4312627]:int(64)[10]) : _ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312889] "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val ret[4312629]:_ir__lookForSlots__ref_chpl__hashtable_string__shared_Module__real64[4312889] "dead after last mention" "RVV" "temp"
    val call_tmp[4312640]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4312642 'move' call_tmp[4312640](4312645 call ==[52746] numSlots[4312627] 0))
    val call_tmp[4312648]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4312650 'move' call_tmp[4312648] call_tmp[4312640])
    if call_tmp[4312648]
    {
      gotoReturn _end__lookForSlots[4312796] _end__lookForSlots[4312796]
    }
    val call_tmp[4312660]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4312662 'move' call_tmp[4312660](4312665 call chpl__defaultHashWrapper[3259874] key[4312615]))
    val call_tmp[4312667]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (4312669 'move' call_tmp[4312667](4312672 'cast' uint(64)[86] call_tmp[4312660]))
    val currentSlot[4312675]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (4312677 'move' currentSlot[4312675] call_tmp[4312667])
    (4312680 'end of statement')
    val call_tmp[4312681]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (4312683 'move' call_tmp[4312681](4312686 call -[1487343] numSlots[4312627]))
    const mask[4312689]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (4312691 'move' mask[4312689] call_tmp[4312681])
    (4312694 'end of statement')
    {
      val _indexOfInterest[4312696]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[4312698]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
      val call_tmp[4312700]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
      (4312702 'move' call_tmp[4312700](4312705 call chpl_direct_range_iter[122109] 1 numSlots[4312627]))
      (4312708 'move' _iterator[4312698](4312711 call _getIterator[1600129] call_tmp[4312700]))
      Defer
      {
        {
          (4312715 call _freeIterator[1600298] _iterator[4312698])
        }
      }
      ForLoop[4312724] order-independent
      {
        const probe[4312734]:int(64)[10] "const" "index var" "insert auto destroy"
        (4312736 'end of statement')
        (4312737 'move' probe[4312734] _indexOfInterest[4312696])
        (4312740 'end of statement' probe[4312734])
        {
          val call_tmp[4312743]:uint(64)[86] "dead at end of block" "maybe param" "temp"
          (4312745 'move' call_tmp[4312743](4312748 'cast' uint(64)[86] probe[4312734]))
          val uprobe[4312751]:uint(64)[86] "dead at end of block" "insert auto destroy"
          (4312753 'move' uprobe[4312751] call_tmp[4312743])
          (4312756 'end of statement' probe[4312734])
          val yret[4312758]:int(64)[10] "dead after last mention" "YVV" "temp"
          val call_tmp[4312760]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (4312762 'move' call_tmp[4312760](4312765 call &[63561] currentSlot[4312726] mask[4312860]))
          val call_tmp[4312768]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (4312770 'move' call_tmp[4312768](4312773 call :[1482043] call_tmp[4312760]))
          (4312776 'move' yret[4312758] call_tmp[4312768])
          (4312780 yield yret[4312758])
          (4312782 'end of statement' currentSlot[4312726] mask[4312860])
          (4312786 call +=[72270] currentSlot[4312726] uprobe[4312751])
          (4312789 'end of statement' currentSlot[4312726] uprobe[4312751])
        }
        label _continueLabel[4312792]
        _indexOfInterest[4312696]
        _iterator[4312698]
      }
      label _breakLabel[4312794]
    }
    label _end__lookForSlots[4312796]
    (4312798 return ret[4312629])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401]._lookForSlots_default_numSlots[4312805](const  ref arg this[4312808]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) ref : int(64)[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[4312811]:int(64)[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-ref numSlots[4312816]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (4312823 'move' numSlots[4312816](4312820 call tableSize[4305492] this[4312808]))
    val coerce_tmp[4312833]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4312837 'move' coerce_tmp[4312833](4312835 'deref' numSlots[4312816]))
    (4312831 'move' ret[4312811](4312827 call chpl__initCopy[1473915] coerce_tmp[4312833] 0))
    (4312814 return ret[4312811])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].findAvailableSlot[3256975](ref arg this[3256979]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const  ref arg key[3256986]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3256993]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3257087]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3257094]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3257096 'move' slotNum[3257094] -1)
    (3257099 'end of statement')
    val foundSlot[3257100]:bool[19] "dead at end of block" "insert auto destroy"
    (3257102 'move' foundSlot[3257100] 0)
    (3257105 'end of statement')
    ref call_tmp[3257106]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257108 'move' call_tmp[3257106](3257111 call tableNumFullSlots[3257493] this[3256979]))
    ref call_tmp[3257114]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257116 'move' call_tmp[3257114](3257119 call tableNumDeletedSlots[3257521] this[3256979]))
    val call_tmp[3257122]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3257549]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3257553 'move' coerce_tmp[3257549](3257551 'deref' call_tmp[3257106]))
    val coerce_tmp[3257555]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3257559 'move' coerce_tmp[3257555](3257557 'deref' call_tmp[3257114]))
    (3257124 'move' call_tmp[3257122](3257127 call +[56587] coerce_tmp[3257549] coerce_tmp[3257555]))
    val call_tmp[3257130]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3257132 'move' call_tmp[3257130](3257135 call +[1471222] call_tmp[3257122]))
    ref call_tmp[3257138]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3257140 'move' call_tmp[3257138](3257143 call resizeThreshold[3257563] this[3256979]))
    val call_tmp[3257146]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3257591]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3257597 'move' coerce_tmp[3257591](3257593 'cast' real(64)[13] 1))
    val coerce_tmp[3257599]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3257603 'move' coerce_tmp[3257599](3257601 'deref' call_tmp[3257138]))
    (3257148 'move' call_tmp[3257146](3257151 call /[59825] coerce_tmp[3257591] coerce_tmp[3257599]))
    val call_tmp[3257154]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3257606]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3257612 'move' coerce_tmp[3257606](3257608 'cast' real(64)[13] call_tmp[3257130]))
    (3257156 'move' call_tmp[3257154](3257159 call *[58921] coerce_tmp[3257606] call_tmp[3257146]))
    val call_tmp[3257162]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3257164 'move' call_tmp[3257162](3257167 call :[1496113] call_tmp[3257154]))
    ref call_tmp[3257170]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257172 'move' call_tmp[3257170](3257175 call tableSize[1942995] this[3256979]))
    val call_tmp[3257178]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3257617]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3257621 'move' coerce_tmp[3257617](3257619 'deref' call_tmp[3257170]))
    (3257180 'move' call_tmp[3257178](3257183 call >[55238] call_tmp[3257162] coerce_tmp[3257617]))
    val call_tmp[3257186]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3257188 'move' call_tmp[3257186] call_tmp[3257178])
    if call_tmp[3257186]
    {
      (3257199 call resize[3257624] this[3256979] 1)
    }
    val tmp[3257203]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3257205]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3257207 'move' tmp[3257205](3257209 'addr of' foundSlot[3257100]))
    ref tmp[3257211]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257213 'move' tmp[3257211](3257215 'addr of' slotNum[3257094]))
    (3257217 'move' tmp[3257203](3257223 call _findSlot[3259284] this[3256979] key[3256986]))
    { scopeless
      val call_tmp[3257226]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3257234]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3257242]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3257256]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3257258 'move' call_tmp[3257256](3262122 '.' tmp[3257203] x0[3257006]))
    val coerce_tmp[3262125]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3262129 'move' coerce_tmp[3262125](3262127 'deref' call_tmp[3257256]))
    (3257264 call =[52153] tmp[3257205] coerce_tmp[3262125])
    ref call_tmp[3257267]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257269 'move' call_tmp[3257267](3262134 '.' tmp[3257203] x1[3257008]))
    val coerce_tmp[3262137]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3262141 'move' coerce_tmp[3262137](3262139 'deref' call_tmp[3257267]))
    (3257275 call =[52229] tmp[3257211] coerce_tmp[3262137])
    (3257278 'end of statement' foundSlot[3257100] slotNum[3257094])
    val call_tmp[3257281]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3257283 'move' call_tmp[3257281](3257286 call >=[1495853] slotNum[3257094]))
    val call_tmp[3257289]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3257291 'move' call_tmp[3257289] call_tmp[3257281])
    if call_tmp[3257289]
    {
      val call_tmp[3257298]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3257300 'move' call_tmp[3257298](3257303 call _build_tuple[3260720] foundSlot[3257100] slotNum[3257094]))
      val call_tmp[3257306]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3262207 '=' ret[3256993] call_tmp[3257298])
      gotoReturn _end_findAvailableSlot[3257486] _end_findAvailableSlot[3257486]
    }
    {
      ref call_tmp[3257325]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3257327 'move' call_tmp[3257325](3257330 call tableSize[1942995] this[3256979]))
      val coerce_tmp[3262149]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3262153 'move' coerce_tmp[3262149](3262151 'deref' call_tmp[3257325]))
      (3257337 call rehash[3257986] this[3256979] coerce_tmp[3262149])
      (3257339 'end of statement')
      val tmp[3257340]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[3257342]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3257344 'move' tmp[3257342](3257346 'addr of' foundSlot[3257100]))
      ref tmp[3257348]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3257350 'move' tmp[3257348](3257352 'addr of' slotNum[3257094]))
      (3257354 'move' tmp[3257340](3257360 call _findSlot[3259284] this[3256979] key[3256986]))
      { scopeless
        val call_tmp[3257363]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3257371]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3257379]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      }
      ref call_tmp[3257393]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3257395 'move' call_tmp[3257393](3262165 '.' tmp[3257340] x0[3257006]))
      val coerce_tmp[3262168]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3262172 'move' coerce_tmp[3262168](3262170 'deref' call_tmp[3257393]))
      (3257401 call =[52153] tmp[3257342] coerce_tmp[3262168])
      ref call_tmp[3257404]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3257406 'move' call_tmp[3257404](3262177 '.' tmp[3257340] x1[3257008]))
      val coerce_tmp[3262180]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3262184 'move' coerce_tmp[3262180](3262182 'deref' call_tmp[3257404]))
      (3257412 call =[52229] tmp[3257348] coerce_tmp[3262180])
      (3257415 'end of statement' foundSlot[3257100] slotNum[3257094])
      val call_tmp[3257418]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3257420 'move' call_tmp[3257418](3257423 call <[1469576] slotNum[3257094] 0))
      val call_tmp[3257426]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3257428 'move' call_tmp[3257426] call_tmp[3257418])
      if call_tmp[3257426]
      {
        ref call_tmp[3257435]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3257437 'move' call_tmp[3257435](3257440 call tableNumFullSlots[3257493] this[3256979]))
        ref call_tmp[3257443]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3257445 'move' call_tmp[3257443](3257448 call tableSize[1942995] this[3256979]))
        val coerce_tmp[3262190]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3262194 'move' coerce_tmp[3262190](3262192 'deref' call_tmp[3257435]))
        val coerce_tmp[3262196]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3262200 'move' coerce_tmp[3262196](3262198 'deref' call_tmp[3257443]))
        (3257452 call halt[1600471] "couldn't add key -- " coerce_tmp[3262190] " / " coerce_tmp[3262196] " taken")
      }
      val call_tmp[3257459]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3257461 'move' call_tmp[3257459](3257464 call _build_tuple[3260720] foundSlot[3257100] slotNum[3257094]))
      val call_tmp[3257467]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3262210 '=' ret[3256993] call_tmp[3257459])
      gotoReturn _end_findAvailableSlot[3257486] _end_findAvailableSlot[3257486]
    }
    label _end_findAvailableSlot[3257486]
    (3257488 return ret[3256993])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].findAvailableSlot[3301272](ref arg this[3301276]:_ref(chpl__hashtable(string,int(64)))[3288858], const  ref arg key[3301283]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3301290]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3301354]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3301361]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3301363 'move' slotNum[3301361] -1)
    (3301366 'end of statement')
    val foundSlot[3301367]:bool[19] "dead at end of block" "insert auto destroy"
    (3301369 'move' foundSlot[3301367] 0)
    (3301372 'end of statement')
    ref call_tmp[3301373]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301375 'move' call_tmp[3301373](3301378 call tableNumFullSlots[3301760] this[3301276]))
    ref call_tmp[3301381]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301383 'move' call_tmp[3301381](3301386 call tableNumDeletedSlots[3301788] this[3301276]))
    val call_tmp[3301389]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3301816]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3301820 'move' coerce_tmp[3301816](3301818 'deref' call_tmp[3301373]))
    val coerce_tmp[3301822]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3301826 'move' coerce_tmp[3301822](3301824 'deref' call_tmp[3301381]))
    (3301391 'move' call_tmp[3301389](3301394 call +[56587] coerce_tmp[3301816] coerce_tmp[3301822]))
    val call_tmp[3301397]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301399 'move' call_tmp[3301397](3301402 call +[1471222] call_tmp[3301389]))
    ref call_tmp[3301405]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3301407 'move' call_tmp[3301405](3301410 call resizeThreshold[3301830] this[3301276]))
    val call_tmp[3301413]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3301858]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3301864 'move' coerce_tmp[3301858](3301860 'cast' real(64)[13] 1))
    val coerce_tmp[3301866]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3301870 'move' coerce_tmp[3301866](3301868 'deref' call_tmp[3301405]))
    (3301415 'move' call_tmp[3301413](3301418 call /[59825] coerce_tmp[3301858] coerce_tmp[3301866]))
    val call_tmp[3301421]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3301873]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3301879 'move' coerce_tmp[3301873](3301875 'cast' real(64)[13] call_tmp[3301397]))
    (3301423 'move' call_tmp[3301421](3301426 call *[58921] coerce_tmp[3301873] call_tmp[3301413]))
    val call_tmp[3301429]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301431 'move' call_tmp[3301429](3301434 call :[1496113] call_tmp[3301421]))
    ref call_tmp[3301437]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301439 'move' call_tmp[3301437](3301442 call tableSize[3301883] this[3301276]))
    val call_tmp[3301445]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3301911]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3301915 'move' coerce_tmp[3301911](3301913 'deref' call_tmp[3301437]))
    (3301447 'move' call_tmp[3301445](3301450 call >[55238] call_tmp[3301429] coerce_tmp[3301911]))
    val call_tmp[3301453]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301455 'move' call_tmp[3301453] call_tmp[3301445])
    if call_tmp[3301453]
    {
      (3301466 call resize[3301918] this[3301276] 1)
    }
    val tmp[3301470]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3301472]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3301474 'move' tmp[3301472](3301476 'addr of' foundSlot[3301367]))
    ref tmp[3301478]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301480 'move' tmp[3301478](3301482 'addr of' slotNum[3301361]))
    (3301484 'move' tmp[3301470](3301490 call _findSlot[3306673] this[3301276] key[3301283]))
    { scopeless
      val call_tmp[3301493]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3301501]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3301509]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3301523]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3301525 'move' call_tmp[3301523](3308350 '.' tmp[3301470] x0[3257006]))
    val coerce_tmp[3308353]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3308357 'move' coerce_tmp[3308353](3308355 'deref' call_tmp[3301523]))
    (3301531 call =[52153] tmp[3301472] coerce_tmp[3308353])
    ref call_tmp[3301534]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301536 'move' call_tmp[3301534](3308362 '.' tmp[3301470] x1[3257008]))
    val coerce_tmp[3308365]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3308369 'move' coerce_tmp[3308365](3308367 'deref' call_tmp[3301534]))
    (3301542 call =[52229] tmp[3301478] coerce_tmp[3308365])
    (3301545 'end of statement' foundSlot[3301367] slotNum[3301361])
    val call_tmp[3301548]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301550 'move' call_tmp[3301548](3301553 call >=[1495853] slotNum[3301361]))
    val call_tmp[3301556]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301558 'move' call_tmp[3301556] call_tmp[3301548])
    if call_tmp[3301556]
    {
      val call_tmp[3301565]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3301567 'move' call_tmp[3301565](3301570 call _build_tuple[3260720] foundSlot[3301367] slotNum[3301361]))
      val call_tmp[3301573]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3308435 '=' ret[3301290] call_tmp[3301565])
      gotoReturn _end_findAvailableSlot[3301753] _end_findAvailableSlot[3301753]
    }
    {
      ref call_tmp[3301592]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3301594 'move' call_tmp[3301592](3301597 call tableSize[3301883] this[3301276]))
      val coerce_tmp[3308377]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308381 'move' coerce_tmp[3308377](3308379 'deref' call_tmp[3301592]))
      (3301604 call rehash[3302264] this[3301276] coerce_tmp[3308377])
      (3301606 'end of statement')
      val tmp[3301607]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[3301609]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3301611 'move' tmp[3301609](3301613 'addr of' foundSlot[3301367]))
      ref tmp[3301615]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3301617 'move' tmp[3301615](3301619 'addr of' slotNum[3301361]))
      (3301621 'move' tmp[3301607](3301627 call _findSlot[3306673] this[3301276] key[3301283]))
      { scopeless
        val call_tmp[3301630]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3301638]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3301646]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      }
      ref call_tmp[3301660]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3301662 'move' call_tmp[3301660](3308393 '.' tmp[3301607] x0[3257006]))
      val coerce_tmp[3308396]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308400 'move' coerce_tmp[3308396](3308398 'deref' call_tmp[3301660]))
      (3301668 call =[52153] tmp[3301609] coerce_tmp[3308396])
      ref call_tmp[3301671]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3301673 'move' call_tmp[3301671](3308405 '.' tmp[3301607] x1[3257008]))
      val coerce_tmp[3308408]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308412 'move' coerce_tmp[3308408](3308410 'deref' call_tmp[3301671]))
      (3301679 call =[52229] tmp[3301615] coerce_tmp[3308408])
      (3301682 'end of statement' foundSlot[3301367] slotNum[3301361])
      val call_tmp[3301685]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3301687 'move' call_tmp[3301685](3301690 call <[1469576] slotNum[3301361] 0))
      val call_tmp[3301693]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3301695 'move' call_tmp[3301693] call_tmp[3301685])
      if call_tmp[3301693]
      {
        ref call_tmp[3301702]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3301704 'move' call_tmp[3301702](3301707 call tableNumFullSlots[3301760] this[3301276]))
        ref call_tmp[3301710]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3301712 'move' call_tmp[3301710](3301715 call tableSize[3301883] this[3301276]))
        val coerce_tmp[3308418]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3308422 'move' coerce_tmp[3308418](3308420 'deref' call_tmp[3301702]))
        val coerce_tmp[3308424]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3308428 'move' coerce_tmp[3308424](3308426 'deref' call_tmp[3301710]))
        (3301719 call halt[1600471] "couldn't add key -- " coerce_tmp[3308418] " / " coerce_tmp[3308424] " taken")
      }
      val call_tmp[3301726]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3301728 'move' call_tmp[3301726](3301731 call _build_tuple[3260720] foundSlot[3301367] slotNum[3301361]))
      val call_tmp[3301734]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3308438 '=' ret[3301290] call_tmp[3301726])
      gotoReturn _end_findAvailableSlot[3301753] _end_findAvailableSlot[3301753]
    }
    label _end_findAvailableSlot[3301753]
    (3301755 return ret[3301290])
  }
  function _ref(chpl__hashtable(string,string))[3283450].findAvailableSlot[3349576](ref arg this[3349580]:_ref(chpl__hashtable(string,string))[3283450], const  ref arg key[3349587]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3349594]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3349606]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3349613]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3349615 'move' slotNum[3349613] -1)
    (3349618 'end of statement')
    val foundSlot[3349619]:bool[19] "dead at end of block" "insert auto destroy"
    (3349621 'move' foundSlot[3349619] 0)
    (3349624 'end of statement')
    ref call_tmp[3349625]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3349627 'move' call_tmp[3349625](3349630 call tableNumFullSlots[3345794] this[3349580]))
    ref call_tmp[3349633]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3349635 'move' call_tmp[3349633](3349638 call tableNumDeletedSlots[3345823] this[3349580]))
    val call_tmp[3349641]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3350014]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350018 'move' coerce_tmp[3350014](3350016 'deref' call_tmp[3349625]))
    val coerce_tmp[3350020]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350024 'move' coerce_tmp[3350020](3350022 'deref' call_tmp[3349633]))
    (3349643 'move' call_tmp[3349641](3349646 call +[56587] coerce_tmp[3350014] coerce_tmp[3350020]))
    val call_tmp[3349649]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349651 'move' call_tmp[3349649](3349654 call +[1471222] call_tmp[3349641]))
    ref call_tmp[3349657]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3349659 'move' call_tmp[3349657](3349662 call resizeThreshold[3346097] this[3349580]))
    val call_tmp[3349665]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3350029]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350035 'move' coerce_tmp[3350029](3350031 'cast' real(64)[13] 1))
    val coerce_tmp[3350037]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350041 'move' coerce_tmp[3350037](3350039 'deref' call_tmp[3349657]))
    (3349667 'move' call_tmp[3349665](3349670 call /[59825] coerce_tmp[3350029] coerce_tmp[3350037]))
    val call_tmp[3349673]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3350044]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350050 'move' coerce_tmp[3350044](3350046 'cast' real(64)[13] call_tmp[3349649]))
    (3349675 'move' call_tmp[3349673](3349678 call *[58921] coerce_tmp[3350044] call_tmp[3349665]))
    val call_tmp[3349681]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349683 'move' call_tmp[3349681](3349686 call :[1496113] call_tmp[3349673]))
    ref call_tmp[3349689]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3349691 'move' call_tmp[3349689](3349694 call tableSize[3340120] this[3349580]))
    val call_tmp[3349697]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3350055]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350059 'move' coerce_tmp[3350055](3350057 'deref' call_tmp[3349689]))
    (3349699 'move' call_tmp[3349697](3349702 call >[55238] call_tmp[3349681] coerce_tmp[3350055]))
    val call_tmp[3349705]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349707 'move' call_tmp[3349705] call_tmp[3349697])
    if call_tmp[3349705]
    {
      (3349718 call resize[3346141] this[3349580] 1)
    }
    val tmp[3349722]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3349724]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3349726 'move' tmp[3349724](3349728 'addr of' foundSlot[3349619]))
    ref tmp[3349730]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3349732 'move' tmp[3349730](3349734 'addr of' slotNum[3349613]))
    (3349736 'move' tmp[3349722](3349742 call _findSlot[3347313] this[3349580] key[3349587]))
    { scopeless
      val call_tmp[3349745]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3349753]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3349761]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3349775]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3349777 'move' call_tmp[3349775](3350072 '.' tmp[3349722] x0[3257006]))
    val coerce_tmp[3350075]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350079 'move' coerce_tmp[3350075](3350077 'deref' call_tmp[3349775]))
    (3349783 call =[52153] tmp[3349724] coerce_tmp[3350075])
    ref call_tmp[3349786]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3349788 'move' call_tmp[3349786](3350084 '.' tmp[3349722] x1[3257008]))
    val coerce_tmp[3350087]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350091 'move' coerce_tmp[3350087](3350089 'deref' call_tmp[3349786]))
    (3349794 call =[52229] tmp[3349730] coerce_tmp[3350087])
    (3349797 'end of statement' foundSlot[3349619] slotNum[3349613])
    val call_tmp[3349800]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349802 'move' call_tmp[3349800](3349805 call >=[1495853] slotNum[3349613]))
    val call_tmp[3349808]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349810 'move' call_tmp[3349808] call_tmp[3349800])
    if call_tmp[3349808]
    {
      val call_tmp[3349817]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3349819 'move' call_tmp[3349817](3349822 call _build_tuple[3260720] foundSlot[3349619] slotNum[3349613]))
      val call_tmp[3349825]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3350157 '=' ret[3349594] call_tmp[3349817])
      gotoReturn _end_findAvailableSlot[3350005] _end_findAvailableSlot[3350005]
    }
    {
      ref call_tmp[3349844]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3349846 'move' call_tmp[3349844](3349849 call tableSize[3340120] this[3349580]))
      val coerce_tmp[3350099]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3350103 'move' coerce_tmp[3350099](3350101 'deref' call_tmp[3349844]))
      (3349856 call rehash[3346460] this[3349580] coerce_tmp[3350099])
      (3349858 'end of statement')
      val tmp[3349859]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[3349861]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3349863 'move' tmp[3349861](3349865 'addr of' foundSlot[3349619]))
      ref tmp[3349867]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3349869 'move' tmp[3349867](3349871 'addr of' slotNum[3349613]))
      (3349873 'move' tmp[3349859](3349879 call _findSlot[3347313] this[3349580] key[3349587]))
      { scopeless
        val call_tmp[3349882]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3349890]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3349898]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      }
      ref call_tmp[3349912]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3349914 'move' call_tmp[3349912](3350115 '.' tmp[3349859] x0[3257006]))
      val coerce_tmp[3350118]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3350122 'move' coerce_tmp[3350118](3350120 'deref' call_tmp[3349912]))
      (3349920 call =[52153] tmp[3349861] coerce_tmp[3350118])
      ref call_tmp[3349923]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3349925 'move' call_tmp[3349923](3350127 '.' tmp[3349859] x1[3257008]))
      val coerce_tmp[3350130]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3350134 'move' coerce_tmp[3350130](3350132 'deref' call_tmp[3349923]))
      (3349931 call =[52229] tmp[3349867] coerce_tmp[3350130])
      (3349934 'end of statement' foundSlot[3349619] slotNum[3349613])
      val call_tmp[3349937]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3349939 'move' call_tmp[3349937](3349942 call <[1469576] slotNum[3349613] 0))
      val call_tmp[3349945]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3349947 'move' call_tmp[3349945] call_tmp[3349937])
      if call_tmp[3349945]
      {
        ref call_tmp[3349954]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3349956 'move' call_tmp[3349954](3349959 call tableNumFullSlots[3345794] this[3349580]))
        ref call_tmp[3349962]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3349964 'move' call_tmp[3349962](3349967 call tableSize[3340120] this[3349580]))
        val coerce_tmp[3350140]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3350144 'move' coerce_tmp[3350140](3350142 'deref' call_tmp[3349954]))
        val coerce_tmp[3350146]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3350150 'move' coerce_tmp[3350146](3350148 'deref' call_tmp[3349962]))
        (3349971 call halt[1600471] "couldn't add key -- " coerce_tmp[3350140] " / " coerce_tmp[3350146] " taken")
      }
      val call_tmp[3349978]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3349980 'move' call_tmp[3349978](3349983 call _build_tuple[3260720] foundSlot[3349619] slotNum[3349613]))
      val call_tmp[3349986]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3350160 '=' ret[3349594] call_tmp[3349978])
      gotoReturn _end_findAvailableSlot[3350005] _end_findAvailableSlot[3350005]
    }
    label _end_findAvailableSlot[3350005]
    (3350007 return ret[3349594])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].findAvailableSlot[3372171](ref arg this[3372175]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const  ref arg key[3372182]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3372189]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3372201]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3372208]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3372210 'move' slotNum[3372208] -1)
    (3372213 'end of statement')
    val foundSlot[3372214]:bool[19] "dead at end of block" "insert auto destroy"
    (3372216 'move' foundSlot[3372214] 0)
    (3372219 'end of statement')
    ref call_tmp[3372220]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3372222 'move' call_tmp[3372220](3372225 call tableNumFullSlots[3363320] this[3372175]))
    ref call_tmp[3372228]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3372230 'move' call_tmp[3372228](3372233 call tableNumDeletedSlots[3363349] this[3372175]))
    val call_tmp[3372236]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3372609]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372613 'move' coerce_tmp[3372609](3372611 'deref' call_tmp[3372220]))
    val coerce_tmp[3372615]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372619 'move' coerce_tmp[3372615](3372617 'deref' call_tmp[3372228]))
    (3372238 'move' call_tmp[3372236](3372241 call +[56587] coerce_tmp[3372609] coerce_tmp[3372615]))
    val call_tmp[3372244]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372246 'move' call_tmp[3372244](3372249 call +[1471222] call_tmp[3372236]))
    ref call_tmp[3372252]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3372254 'move' call_tmp[3372252](3372257 call resizeThreshold[3363623] this[3372175]))
    val call_tmp[3372260]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3372624]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372630 'move' coerce_tmp[3372624](3372626 'cast' real(64)[13] 1))
    val coerce_tmp[3372632]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372636 'move' coerce_tmp[3372632](3372634 'deref' call_tmp[3372252]))
    (3372262 'move' call_tmp[3372260](3372265 call /[59825] coerce_tmp[3372624] coerce_tmp[3372632]))
    val call_tmp[3372268]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3372639]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372645 'move' coerce_tmp[3372639](3372641 'cast' real(64)[13] call_tmp[3372244]))
    (3372270 'move' call_tmp[3372268](3372273 call *[58921] coerce_tmp[3372639] call_tmp[3372260]))
    val call_tmp[3372276]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372278 'move' call_tmp[3372276](3372281 call :[1496113] call_tmp[3372268]))
    ref call_tmp[3372284]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3372286 'move' call_tmp[3372284](3372289 call tableSize[3355205] this[3372175]))
    val call_tmp[3372292]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3372650]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372654 'move' coerce_tmp[3372650](3372652 'deref' call_tmp[3372284]))
    (3372294 'move' call_tmp[3372292](3372297 call >[55238] call_tmp[3372276] coerce_tmp[3372650]))
    val call_tmp[3372300]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372302 'move' call_tmp[3372300] call_tmp[3372292])
    if call_tmp[3372300]
    {
      (3372313 call resize[3363667] this[3372175] 1)
    }
    val tmp[3372317]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3372319]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3372321 'move' tmp[3372319](3372323 'addr of' foundSlot[3372214]))
    ref tmp[3372325]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3372327 'move' tmp[3372325](3372329 'addr of' slotNum[3372208]))
    (3372331 'move' tmp[3372317](3372337 call _findSlot[3364839] this[3372175] key[3372182]))
    { scopeless
      val call_tmp[3372340]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3372348]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3372356]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3372370]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3372372 'move' call_tmp[3372370](3372667 '.' tmp[3372317] x0[3257006]))
    val coerce_tmp[3372670]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372674 'move' coerce_tmp[3372670](3372672 'deref' call_tmp[3372370]))
    (3372378 call =[52153] tmp[3372319] coerce_tmp[3372670])
    ref call_tmp[3372381]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3372383 'move' call_tmp[3372381](3372679 '.' tmp[3372317] x1[3257008]))
    val coerce_tmp[3372682]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3372686 'move' coerce_tmp[3372682](3372684 'deref' call_tmp[3372381]))
    (3372389 call =[52229] tmp[3372325] coerce_tmp[3372682])
    (3372392 'end of statement' foundSlot[3372214] slotNum[3372208])
    val call_tmp[3372395]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372397 'move' call_tmp[3372395](3372400 call >=[1495853] slotNum[3372208]))
    val call_tmp[3372403]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372405 'move' call_tmp[3372403] call_tmp[3372395])
    if call_tmp[3372403]
    {
      val call_tmp[3372412]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3372414 'move' call_tmp[3372412](3372417 call _build_tuple[3260720] foundSlot[3372214] slotNum[3372208]))
      val call_tmp[3372420]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3372752 '=' ret[3372189] call_tmp[3372412])
      gotoReturn _end_findAvailableSlot[3372600] _end_findAvailableSlot[3372600]
    }
    {
      ref call_tmp[3372439]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3372441 'move' call_tmp[3372439](3372444 call tableSize[3355205] this[3372175]))
      val coerce_tmp[3372694]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3372698 'move' coerce_tmp[3372694](3372696 'deref' call_tmp[3372439]))
      (3372451 call rehash[3363986] this[3372175] coerce_tmp[3372694])
      (3372453 'end of statement')
      val tmp[3372454]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[3372456]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3372458 'move' tmp[3372456](3372460 'addr of' foundSlot[3372214]))
      ref tmp[3372462]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3372464 'move' tmp[3372462](3372466 'addr of' slotNum[3372208]))
      (3372468 'move' tmp[3372454](3372474 call _findSlot[3364839] this[3372175] key[3372182]))
      { scopeless
        val call_tmp[3372477]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3372485]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3372493]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      }
      ref call_tmp[3372507]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3372509 'move' call_tmp[3372507](3372710 '.' tmp[3372454] x0[3257006]))
      val coerce_tmp[3372713]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3372717 'move' coerce_tmp[3372713](3372715 'deref' call_tmp[3372507]))
      (3372515 call =[52153] tmp[3372456] coerce_tmp[3372713])
      ref call_tmp[3372518]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3372520 'move' call_tmp[3372518](3372722 '.' tmp[3372454] x1[3257008]))
      val coerce_tmp[3372725]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3372729 'move' coerce_tmp[3372725](3372727 'deref' call_tmp[3372518]))
      (3372526 call =[52229] tmp[3372462] coerce_tmp[3372725])
      (3372529 'end of statement' foundSlot[3372214] slotNum[3372208])
      val call_tmp[3372532]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3372534 'move' call_tmp[3372532](3372537 call <[1469576] slotNum[3372208] 0))
      val call_tmp[3372540]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3372542 'move' call_tmp[3372540] call_tmp[3372532])
      if call_tmp[3372540]
      {
        ref call_tmp[3372549]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3372551 'move' call_tmp[3372549](3372554 call tableNumFullSlots[3363320] this[3372175]))
        ref call_tmp[3372557]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3372559 'move' call_tmp[3372557](3372562 call tableSize[3355205] this[3372175]))
        val coerce_tmp[3372735]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3372739 'move' coerce_tmp[3372735](3372737 'deref' call_tmp[3372549]))
        val coerce_tmp[3372741]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3372745 'move' coerce_tmp[3372741](3372743 'deref' call_tmp[3372557]))
        (3372566 call halt[1600471] "couldn't add key -- " coerce_tmp[3372735] " / " coerce_tmp[3372741] " taken")
      }
      val call_tmp[3372573]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3372575 'move' call_tmp[3372573](3372578 call _build_tuple[3260720] foundSlot[3372214] slotNum[3372208]))
      val call_tmp[3372581]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3372755 '=' ret[3372189] call_tmp[3372573])
      gotoReturn _end_findAvailableSlot[3372600] _end_findAvailableSlot[3372600]
    }
    label _end_findAvailableSlot[3372600]
    (3372602 return ret[3372189])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].findAvailableSlot[3400815](ref arg this[3400819]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const  ref arg key[3400826]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3400833]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3400845]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3400852]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3400854 'move' slotNum[3400852] -1)
    (3400857 'end of statement')
    val foundSlot[3400858]:bool[19] "dead at end of block" "insert auto destroy"
    (3400860 'move' foundSlot[3400858] 0)
    (3400863 'end of statement')
    ref call_tmp[3400864]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3400866 'move' call_tmp[3400864](3400869 call tableNumFullSlots[3401251] this[3400819]))
    ref call_tmp[3400872]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3400874 'move' call_tmp[3400872](3400877 call tableNumDeletedSlots[3401279] this[3400819]))
    val call_tmp[3400880]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3401307]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3401311 'move' coerce_tmp[3401307](3401309 'deref' call_tmp[3400864]))
    val coerce_tmp[3401313]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3401317 'move' coerce_tmp[3401313](3401315 'deref' call_tmp[3400872]))
    (3400882 'move' call_tmp[3400880](3400885 call +[56587] coerce_tmp[3401307] coerce_tmp[3401313]))
    val call_tmp[3400888]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3400890 'move' call_tmp[3400888](3400893 call +[1471222] call_tmp[3400880]))
    ref call_tmp[3400896]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3400898 'move' call_tmp[3400896](3400901 call resizeThreshold[3401321] this[3400819]))
    val call_tmp[3400904]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3401349]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3401355 'move' coerce_tmp[3401349](3401351 'cast' real(64)[13] 1))
    val coerce_tmp[3401357]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3401361 'move' coerce_tmp[3401357](3401359 'deref' call_tmp[3400896]))
    (3400906 'move' call_tmp[3400904](3400909 call /[59825] coerce_tmp[3401349] coerce_tmp[3401357]))
    val call_tmp[3400912]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3401364]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3401370 'move' coerce_tmp[3401364](3401366 'cast' real(64)[13] call_tmp[3400888]))
    (3400914 'move' call_tmp[3400912](3400917 call *[58921] coerce_tmp[3401364] call_tmp[3400904]))
    val call_tmp[3400920]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3400922 'move' call_tmp[3400920](3400925 call :[1496113] call_tmp[3400912]))
    ref call_tmp[3400928]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3400930 'move' call_tmp[3400928](3400933 call tableSize[3392339] this[3400819]))
    val call_tmp[3400936]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3401375]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3401379 'move' coerce_tmp[3401375](3401377 'deref' call_tmp[3400928]))
    (3400938 'move' call_tmp[3400936](3400941 call >[55238] call_tmp[3400920] coerce_tmp[3401375]))
    val call_tmp[3400944]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3400946 'move' call_tmp[3400944] call_tmp[3400936])
    if call_tmp[3400944]
    {
      (3400957 call resize[3401382] this[3400819] 1)
    }
    val tmp[3400961]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3400963]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3400965 'move' tmp[3400963](3400967 'addr of' foundSlot[3400858]))
    ref tmp[3400969]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3400971 'move' tmp[3400969](3400973 'addr of' slotNum[3400852]))
    (3400975 'move' tmp[3400961](3400981 call _findSlot[3402635] this[3400819] key[3400826]))
    { scopeless
      val call_tmp[3400984]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3400992]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3401000]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3401014]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3401016 'move' call_tmp[3401014](3404314 '.' tmp[3400961] x0[3257006]))
    val coerce_tmp[3404317]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3404321 'move' coerce_tmp[3404317](3404319 'deref' call_tmp[3401014]))
    (3401022 call =[52153] tmp[3400963] coerce_tmp[3404317])
    ref call_tmp[3401025]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401027 'move' call_tmp[3401025](3404326 '.' tmp[3400961] x1[3257008]))
    val coerce_tmp[3404329]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3404333 'move' coerce_tmp[3404329](3404331 'deref' call_tmp[3401025]))
    (3401033 call =[52229] tmp[3400969] coerce_tmp[3404329])
    (3401036 'end of statement' foundSlot[3400858] slotNum[3400852])
    val call_tmp[3401039]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3401041 'move' call_tmp[3401039](3401044 call >=[1495853] slotNum[3400852]))
    val call_tmp[3401047]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3401049 'move' call_tmp[3401047] call_tmp[3401039])
    if call_tmp[3401047]
    {
      val call_tmp[3401056]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3401058 'move' call_tmp[3401056](3401061 call _build_tuple[3260720] foundSlot[3400858] slotNum[3400852]))
      val call_tmp[3401064]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3404399 '=' ret[3400833] call_tmp[3401056])
      gotoReturn _end_findAvailableSlot[3401244] _end_findAvailableSlot[3401244]
    }
    {
      ref call_tmp[3401083]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3401085 'move' call_tmp[3401083](3401088 call tableSize[3392339] this[3400819]))
      val coerce_tmp[3404341]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404345 'move' coerce_tmp[3404341](3404343 'deref' call_tmp[3401083]))
      (3401095 call rehash[3401728] this[3400819] coerce_tmp[3404341])
      (3401097 'end of statement')
      val tmp[3401098]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[3401100]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3401102 'move' tmp[3401100](3401104 'addr of' foundSlot[3400858]))
      ref tmp[3401106]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3401108 'move' tmp[3401106](3401110 'addr of' slotNum[3400852]))
      (3401112 'move' tmp[3401098](3401118 call _findSlot[3402635] this[3400819] key[3400826]))
      { scopeless
        val call_tmp[3401121]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3401129]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3401137]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      }
      ref call_tmp[3401151]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3401153 'move' call_tmp[3401151](3404357 '.' tmp[3401098] x0[3257006]))
      val coerce_tmp[3404360]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404364 'move' coerce_tmp[3404360](3404362 'deref' call_tmp[3401151]))
      (3401159 call =[52153] tmp[3401100] coerce_tmp[3404360])
      ref call_tmp[3401162]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3401164 'move' call_tmp[3401162](3404369 '.' tmp[3401098] x1[3257008]))
      val coerce_tmp[3404372]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404376 'move' coerce_tmp[3404372](3404374 'deref' call_tmp[3401162]))
      (3401170 call =[52229] tmp[3401106] coerce_tmp[3404372])
      (3401173 'end of statement' foundSlot[3400858] slotNum[3400852])
      val call_tmp[3401176]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3401178 'move' call_tmp[3401176](3401181 call <[1469576] slotNum[3400852] 0))
      val call_tmp[3401184]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3401186 'move' call_tmp[3401184] call_tmp[3401176])
      if call_tmp[3401184]
      {
        ref call_tmp[3401193]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3401195 'move' call_tmp[3401193](3401198 call tableNumFullSlots[3401251] this[3400819]))
        ref call_tmp[3401201]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3401203 'move' call_tmp[3401201](3401206 call tableSize[3392339] this[3400819]))
        val coerce_tmp[3404382]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3404386 'move' coerce_tmp[3404382](3404384 'deref' call_tmp[3401193]))
        val coerce_tmp[3404388]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3404392 'move' coerce_tmp[3404388](3404390 'deref' call_tmp[3401201]))
        (3401210 call halt[1600471] "couldn't add key -- " coerce_tmp[3404382] " / " coerce_tmp[3404388] " taken")
      }
      val call_tmp[3401217]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3401219 'move' call_tmp[3401217](3401222 call _build_tuple[3260720] foundSlot[3400858] slotNum[3400852]))
      val call_tmp[3401225]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3404402 '=' ret[3400833] call_tmp[3401217])
      gotoReturn _end_findAvailableSlot[3401244] _end_findAvailableSlot[3401244]
    }
    label _end_findAvailableSlot[3401244]
    (3401246 return ret[3400833])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].findAvailableSlot[3860364](ref arg this[3860368]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const  ref arg key[3860375]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3860382]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3860394]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3860401]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3860403 'move' slotNum[3860401] -1)
    (3860406 'end of statement')
    val foundSlot[3860407]:bool[19] "dead at end of block" "insert auto destroy"
    (3860409 'move' foundSlot[3860407] 0)
    (3860412 'end of statement')
    ref call_tmp[3860413]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860415 'move' call_tmp[3860413](3860418 call tableNumFullSlots[3860800] this[3860368]))
    ref call_tmp[3860421]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860423 'move' call_tmp[3860421](3860426 call tableNumDeletedSlots[3860828] this[3860368]))
    val call_tmp[3860429]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3860856]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3860860 'move' coerce_tmp[3860856](3860858 'deref' call_tmp[3860413]))
    val coerce_tmp[3860862]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3860866 'move' coerce_tmp[3860862](3860864 'deref' call_tmp[3860421]))
    (3860431 'move' call_tmp[3860429](3860434 call +[56587] coerce_tmp[3860856] coerce_tmp[3860862]))
    val call_tmp[3860437]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3860439 'move' call_tmp[3860437](3860442 call +[1471222] call_tmp[3860429]))
    ref call_tmp[3860445]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3860447 'move' call_tmp[3860445](3860450 call resizeThreshold[3860870] this[3860368]))
    val call_tmp[3860453]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3860898]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3860904 'move' coerce_tmp[3860898](3860900 'cast' real(64)[13] 1))
    val coerce_tmp[3860906]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3860910 'move' coerce_tmp[3860906](3860908 'deref' call_tmp[3860445]))
    (3860455 'move' call_tmp[3860453](3860458 call /[59825] coerce_tmp[3860898] coerce_tmp[3860906]))
    val call_tmp[3860461]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3860913]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3860919 'move' coerce_tmp[3860913](3860915 'cast' real(64)[13] call_tmp[3860437]))
    (3860463 'move' call_tmp[3860461](3860466 call *[58921] coerce_tmp[3860913] call_tmp[3860453]))
    val call_tmp[3860469]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3860471 'move' call_tmp[3860469](3860474 call :[1496113] call_tmp[3860461]))
    ref call_tmp[3860477]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860479 'move' call_tmp[3860477](3860482 call tableSize[3828932] this[3860368]))
    val call_tmp[3860485]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3860924]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3860928 'move' coerce_tmp[3860924](3860926 'deref' call_tmp[3860477]))
    (3860487 'move' call_tmp[3860485](3860490 call >[55238] call_tmp[3860469] coerce_tmp[3860924]))
    val call_tmp[3860493]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3860495 'move' call_tmp[3860493] call_tmp[3860485])
    if call_tmp[3860493]
    {
      (3860506 call resize[3860931] this[3860368] 1)
    }
    val tmp[3860510]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3860512]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3860514 'move' tmp[3860512](3860516 'addr of' foundSlot[3860407]))
    ref tmp[3860518]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860520 'move' tmp[3860518](3860522 'addr of' slotNum[3860401]))
    (3860524 'move' tmp[3860510](3860530 call _findSlot[3862184] this[3860368] key[3860375]))
    { scopeless
      val call_tmp[3860533]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3860541]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3860549]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3860563]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3860565 'move' call_tmp[3860563](3863863 '.' tmp[3860510] x0[3257006]))
    val coerce_tmp[3863866]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3863870 'move' coerce_tmp[3863866](3863868 'deref' call_tmp[3860563]))
    (3860571 call =[52153] tmp[3860512] coerce_tmp[3863866])
    ref call_tmp[3860574]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860576 'move' call_tmp[3860574](3863875 '.' tmp[3860510] x1[3257008]))
    val coerce_tmp[3863878]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3863882 'move' coerce_tmp[3863878](3863880 'deref' call_tmp[3860574]))
    (3860582 call =[52229] tmp[3860518] coerce_tmp[3863878])
    (3860585 'end of statement' foundSlot[3860407] slotNum[3860401])
    val call_tmp[3860588]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3860590 'move' call_tmp[3860588](3860593 call >=[1495853] slotNum[3860401]))
    val call_tmp[3860596]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3860598 'move' call_tmp[3860596] call_tmp[3860588])
    if call_tmp[3860596]
    {
      val call_tmp[3860605]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3860607 'move' call_tmp[3860605](3860610 call _build_tuple[3260720] foundSlot[3860407] slotNum[3860401]))
      val call_tmp[3860613]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3863948 '=' ret[3860382] call_tmp[3860605])
      gotoReturn _end_findAvailableSlot[3860793] _end_findAvailableSlot[3860793]
    }
    {
      ref call_tmp[3860632]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3860634 'move' call_tmp[3860632](3860637 call tableSize[3828932] this[3860368]))
      val coerce_tmp[3863890]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863894 'move' coerce_tmp[3863890](3863892 'deref' call_tmp[3860632]))
      (3860644 call rehash[3861277] this[3860368] coerce_tmp[3863890])
      (3860646 'end of statement')
      val tmp[3860647]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[3860649]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3860651 'move' tmp[3860649](3860653 'addr of' foundSlot[3860407]))
      ref tmp[3860655]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3860657 'move' tmp[3860655](3860659 'addr of' slotNum[3860401]))
      (3860661 'move' tmp[3860647](3860667 call _findSlot[3862184] this[3860368] key[3860375]))
      { scopeless
        val call_tmp[3860670]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3860678]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3860686]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      }
      ref call_tmp[3860700]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (3860702 'move' call_tmp[3860700](3863906 '.' tmp[3860647] x0[3257006]))
      val coerce_tmp[3863909]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863913 'move' coerce_tmp[3863909](3863911 'deref' call_tmp[3860700]))
      (3860708 call =[52153] tmp[3860649] coerce_tmp[3863909])
      ref call_tmp[3860711]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3860713 'move' call_tmp[3860711](3863918 '.' tmp[3860647] x1[3257008]))
      val coerce_tmp[3863921]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863925 'move' coerce_tmp[3863921](3863923 'deref' call_tmp[3860711]))
      (3860719 call =[52229] tmp[3860655] coerce_tmp[3863921])
      (3860722 'end of statement' foundSlot[3860407] slotNum[3860401])
      val call_tmp[3860725]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3860727 'move' call_tmp[3860725](3860730 call <[1469576] slotNum[3860401] 0))
      val call_tmp[3860733]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3860735 'move' call_tmp[3860733] call_tmp[3860725])
      if call_tmp[3860733]
      {
        ref call_tmp[3860742]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3860744 'move' call_tmp[3860742](3860747 call tableNumFullSlots[3860800] this[3860368]))
        ref call_tmp[3860750]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3860752 'move' call_tmp[3860750](3860755 call tableSize[3828932] this[3860368]))
        val coerce_tmp[3863931]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3863935 'move' coerce_tmp[3863931](3863933 'deref' call_tmp[3860742]))
        val coerce_tmp[3863937]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3863941 'move' coerce_tmp[3863937](3863939 'deref' call_tmp[3860750]))
        (3860759 call halt[1600471] "couldn't add key -- " coerce_tmp[3863931] " / " coerce_tmp[3863937] " taken")
      }
      val call_tmp[3860766]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (3860768 'move' call_tmp[3860766](3860771 call _build_tuple[3260720] foundSlot[3860407] slotNum[3860401]))
      val call_tmp[3860774]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3863951 '=' ret[3860382] call_tmp[3860766])
      gotoReturn _end_findAvailableSlot[3860793] _end_findAvailableSlot[3860793]
    }
    label _end_findAvailableSlot[3860793]
    (3860795 return ret[3860382])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].findAvailableSlot[4310497](ref arg this[4310501]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const  ref arg key[4310508]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4310515]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[4310527]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[4310534]:int(64)[10] "dead at end of block" "insert auto destroy"
    (4310536 'move' slotNum[4310534] -1)
    (4310539 'end of statement')
    val foundSlot[4310540]:bool[19] "dead at end of block" "insert auto destroy"
    (4310542 'move' foundSlot[4310540] 0)
    (4310545 'end of statement')
    ref call_tmp[4310546]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4310548 'move' call_tmp[4310546](4310551 call tableNumFullSlots[4310933] this[4310501]))
    ref call_tmp[4310554]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4310556 'move' call_tmp[4310554](4310559 call tableNumDeletedSlots[4310961] this[4310501]))
    val call_tmp[4310562]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4310989]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4310993 'move' coerce_tmp[4310989](4310991 'deref' call_tmp[4310546]))
    val coerce_tmp[4310995]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4310999 'move' coerce_tmp[4310995](4310997 'deref' call_tmp[4310554]))
    (4310564 'move' call_tmp[4310562](4310567 call +[56587] coerce_tmp[4310989] coerce_tmp[4310995]))
    val call_tmp[4310570]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4310572 'move' call_tmp[4310570](4310575 call +[1471222] call_tmp[4310562]))
    ref call_tmp[4310578]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (4310580 'move' call_tmp[4310578](4310583 call resizeThreshold[4311003] this[4310501]))
    val call_tmp[4310586]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4311031]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4311037 'move' coerce_tmp[4311031](4311033 'cast' real(64)[13] 1))
    val coerce_tmp[4311039]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4311043 'move' coerce_tmp[4311039](4311041 'deref' call_tmp[4310578]))
    (4310588 'move' call_tmp[4310586](4310591 call /[59825] coerce_tmp[4311031] coerce_tmp[4311039]))
    val call_tmp[4310594]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4311046]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4311052 'move' coerce_tmp[4311046](4311048 'cast' real(64)[13] call_tmp[4310570]))
    (4310596 'move' call_tmp[4310594](4310599 call *[58921] coerce_tmp[4311046] call_tmp[4310586]))
    val call_tmp[4310602]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4310604 'move' call_tmp[4310602](4310607 call :[1496113] call_tmp[4310594]))
    ref call_tmp[4310610]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4310612 'move' call_tmp[4310610](4310615 call tableSize[4305492] this[4310501]))
    val call_tmp[4310618]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4311057]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4311061 'move' coerce_tmp[4311057](4311059 'deref' call_tmp[4310610]))
    (4310620 'move' call_tmp[4310618](4310623 call >[55238] call_tmp[4310602] coerce_tmp[4311057]))
    val call_tmp[4310626]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4310628 'move' call_tmp[4310626] call_tmp[4310618])
    if call_tmp[4310626]
    {
      (4310639 call resize[4311064] this[4310501] 1)
    }
    val tmp[4310643]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[4310645]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4310647 'move' tmp[4310645](4310649 'addr of' foundSlot[4310540]))
    ref tmp[4310651]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4310653 'move' tmp[4310651](4310655 'addr of' slotNum[4310534]))
    (4310657 'move' tmp[4310643](4310663 call _findSlot[4312263] this[4310501] key[4310508]))
    { scopeless
      val call_tmp[4310666]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4310674]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4310682]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[4310696]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4310698 'move' call_tmp[4310696](4313942 '.' tmp[4310643] x0[3257006]))
    val coerce_tmp[4313945]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4313949 'move' coerce_tmp[4313945](4313947 'deref' call_tmp[4310696]))
    (4310704 call =[52153] tmp[4310645] coerce_tmp[4313945])
    ref call_tmp[4310707]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4310709 'move' call_tmp[4310707](4313954 '.' tmp[4310643] x1[3257008]))
    val coerce_tmp[4313957]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4313961 'move' coerce_tmp[4313957](4313959 'deref' call_tmp[4310707]))
    (4310715 call =[52229] tmp[4310651] coerce_tmp[4313957])
    (4310718 'end of statement' foundSlot[4310540] slotNum[4310534])
    val call_tmp[4310721]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4310723 'move' call_tmp[4310721](4310726 call >=[1495853] slotNum[4310534]))
    val call_tmp[4310729]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4310731 'move' call_tmp[4310729] call_tmp[4310721])
    if call_tmp[4310729]
    {
      val call_tmp[4310738]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (4310740 'move' call_tmp[4310738](4310743 call _build_tuple[3260720] foundSlot[4310540] slotNum[4310534]))
      val call_tmp[4310746]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (4314027 '=' ret[4310515] call_tmp[4310738])
      gotoReturn _end_findAvailableSlot[4310926] _end_findAvailableSlot[4310926]
    }
    {
      ref call_tmp[4310765]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4310767 'move' call_tmp[4310765](4310770 call tableSize[4305492] this[4310501]))
      val coerce_tmp[4313969]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4313973 'move' coerce_tmp[4313969](4313971 'deref' call_tmp[4310765]))
      (4310777 call rehash[4311410] this[4310501] coerce_tmp[4313969])
      (4310779 'end of statement')
      val tmp[4310780]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[4310782]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (4310784 'move' tmp[4310782](4310786 'addr of' foundSlot[4310540]))
      ref tmp[4310788]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4310790 'move' tmp[4310788](4310792 'addr of' slotNum[4310534]))
      (4310794 'move' tmp[4310780](4310800 call _findSlot[4312263] this[4310501] key[4310508]))
      { scopeless
        val call_tmp[4310803]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4310811]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[4310819]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      }
      ref call_tmp[4310833]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      (4310835 'move' call_tmp[4310833](4313985 '.' tmp[4310780] x0[3257006]))
      val coerce_tmp[4313988]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4313992 'move' coerce_tmp[4313988](4313990 'deref' call_tmp[4310833]))
      (4310841 call =[52153] tmp[4310782] coerce_tmp[4313988])
      ref call_tmp[4310844]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4310846 'move' call_tmp[4310844](4313997 '.' tmp[4310780] x1[3257008]))
      val coerce_tmp[4314000]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4314004 'move' coerce_tmp[4314000](4314002 'deref' call_tmp[4310844]))
      (4310852 call =[52229] tmp[4310788] coerce_tmp[4314000])
      (4310855 'end of statement' foundSlot[4310540] slotNum[4310534])
      val call_tmp[4310858]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4310860 'move' call_tmp[4310858](4310863 call <[1469576] slotNum[4310534] 0))
      val call_tmp[4310866]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4310868 'move' call_tmp[4310866] call_tmp[4310858])
      if call_tmp[4310866]
      {
        ref call_tmp[4310875]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4310877 'move' call_tmp[4310875](4310880 call tableNumFullSlots[4310933] this[4310501]))
        ref call_tmp[4310883]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4310885 'move' call_tmp[4310883](4310888 call tableSize[4305492] this[4310501]))
        val coerce_tmp[4314010]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4314014 'move' coerce_tmp[4314010](4314012 'deref' call_tmp[4310875]))
        val coerce_tmp[4314016]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4314020 'move' coerce_tmp[4314016](4314018 'deref' call_tmp[4310883]))
        (4310892 call halt[1600471] "couldn't add key -- " coerce_tmp[4314010] " / " coerce_tmp[4314016] " taken")
      }
      val call_tmp[4310899]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (4310901 'move' call_tmp[4310899](4310904 call _build_tuple[3260720] foundSlot[4310540] slotNum[4310534]))
      val call_tmp[4310907]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (4314030 '=' ret[4310515] call_tmp[4310899])
      gotoReturn _end_findAvailableSlot[4310926] _end_findAvailableSlot[4310926]
    }
    label _end_findAvailableSlot[4310926]
    (4310928 return ret[4310515])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].fillSlot[3262249](ref arg this[3262253]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], ref arg tableEntry[3262276]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545], ref arg key[3262283]:string[244], in arg val[3262290]:Module(real(32))[1935500]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3262537]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3262540 'move' _formal_tmp_key[3262537] key[3262283])
    ref call_tmp[3262407]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3262409 'move' call_tmp[3262407](3262412 call status[3259161] tableEntry[3262276]))
    val call_tmp[3262415]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3262544]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3262548 'move' coerce_tmp[3262544](3262546 'deref' call_tmp[3262407]))
    (3262417 'move' call_tmp[3262415](3262420 call ==[3259199] coerce_tmp[3262544] full[264674]))
    val call_tmp[3262423]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3262425 'move' call_tmp[3262423] call_tmp[3262415])
    if call_tmp[3262423]
    {
      (3262433 call _deinitSlot[3262551] tableEntry[3262276])
    }
    {
      ref call_tmp[3262436]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
      (3262438 'move' call_tmp[3262436](3262441 call status[3259161] tableEntry[3262276]))
      val call_tmp[3262444]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3262740]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3262744 'move' coerce_tmp[3262740](3262742 'deref' call_tmp[3262436]))
      (3262446 'move' call_tmp[3262444](3262449 call ==[3259199] coerce_tmp[3262740] deleted[264676]))
      val call_tmp[3262452]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3262454 'move' call_tmp[3262452] call_tmp[3262444])
      if call_tmp[3262452]
      {
        ref call_tmp[3262461]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3262463 'move' call_tmp[3262461](3262466 call tableNumDeletedSlots[3257521] this[3262253]))
        (3262470 call -=[72507] call_tmp[3262461] 1)
      }
      ref call_tmp[3262474]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3262476 'move' call_tmp[3262474](3262479 call tableNumFullSlots[3257493] this[3262253]))
      (3262483 call +=[72190] call_tmp[3262474] 1)
    }
    ref call_tmp[3262487]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3262489 'move' call_tmp[3262487](3262492 call status[3259161] tableEntry[3262276]))
    (3262496 call =[3261273] call_tmp[3262487] full[264674])
    (3262499 'end of statement')
    ref call_tmp[3262500]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3262502 'move' call_tmp[3262500](3262505 call key[3259256] tableEntry[3262276]))
    val _formal_tmp_in_src[3262754]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3262759 'move' _formal_tmp_in_src[3262754](3262755 call chpl__initCopy[1480493] _formal_tmp_key[3262537] 0))
    (3262509 call moveInitialize[3261406] call_tmp[3262500] _formal_tmp_in_src[3262754])
    (3262512 'end of statement')
    ref call_tmp[3262513]:_ref(Module(real(32)))[1935660] "dead after last mention" "maybe param" "temp"
    (3262515 'move' call_tmp[3262513](3262518 call val[3261562] tableEntry[3262276]))
    (3262522 call moveInitialize[3261692] call_tmp[3262513] val[3262290])
    (3262525 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].fillSlot[3308479](ref arg this[3308483]:_ref(chpl__hashtable(string,int(64)))[3288858], ref arg tableEntry[3308506]:_ref(chpl_TableEntry(string,int(64)))[3288890], ref arg key[3308513]:string[244], in arg val[3308520]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3308767]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3308770 'move' _formal_tmp_key[3308767] key[3308513])
    ref call_tmp[3308637]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3308639 'move' call_tmp[3308637](3308642 call status[3306607] tableEntry[3308506]))
    val call_tmp[3308645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3308774]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3308778 'move' coerce_tmp[3308774](3308776 'deref' call_tmp[3308637]))
    (3308647 'move' call_tmp[3308645](3308650 call ==[3259199] coerce_tmp[3308774] full[264674]))
    val call_tmp[3308653]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3308655 'move' call_tmp[3308653] call_tmp[3308645])
    if call_tmp[3308653]
    {
      (3308663 call _deinitSlot[3308781] tableEntry[3308506])
    }
    {
      ref call_tmp[3308666]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
      (3308668 'move' call_tmp[3308666](3308671 call status[3306607] tableEntry[3308506]))
      val call_tmp[3308674]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3308917]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308921 'move' coerce_tmp[3308917](3308919 'deref' call_tmp[3308666]))
      (3308676 'move' call_tmp[3308674](3308679 call ==[3259199] coerce_tmp[3308917] deleted[264676]))
      val call_tmp[3308682]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3308684 'move' call_tmp[3308682] call_tmp[3308674])
      if call_tmp[3308682]
      {
        ref call_tmp[3308691]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3308693 'move' call_tmp[3308691](3308696 call tableNumDeletedSlots[3301788] this[3308483]))
        (3308700 call -=[72507] call_tmp[3308691] 1)
      }
      ref call_tmp[3308704]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3308706 'move' call_tmp[3308704](3308709 call tableNumFullSlots[3301760] this[3308483]))
      (3308713 call +=[72190] call_tmp[3308704] 1)
    }
    ref call_tmp[3308717]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3308719 'move' call_tmp[3308717](3308722 call status[3306607] tableEntry[3308506]))
    (3308726 call =[3261273] call_tmp[3308717] full[264674])
    (3308729 'end of statement')
    ref call_tmp[3308730]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3308732 'move' call_tmp[3308730](3308735 call key[3306645] tableEntry[3308506]))
    val _formal_tmp_in_src[3308931]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3308936 'move' _formal_tmp_in_src[3308931](3308932 call chpl__initCopy[1480493] _formal_tmp_key[3308767] 0))
    (3308739 call moveInitialize[3261406] call_tmp[3308730] _formal_tmp_in_src[3308931])
    (3308742 'end of statement')
    ref call_tmp[3308743]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3308745 'move' call_tmp[3308743](3308748 call val[3307792] tableEntry[3308506]))
    (3308752 call moveInitialize[3307920] call_tmp[3308743] val[3308520])
    (3308755 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].fillSlot[3350201](ref arg this[3350205]:_ref(chpl__hashtable(string,string))[3283450], ref arg tableEntry[3350228]:_ref(chpl_TableEntry(string,string))[3283482], ref arg key[3350235]:string[244], ref arg val[3350242]:string[244]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3350512]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3350516 'move' _formal_tmp_key[3350512] key[3350235])
    val _formal_tmp_val[3350513]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3350520 'move' _formal_tmp_val[3350513] val[3350242])
    ref call_tmp[3350373]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3350375 'move' call_tmp[3350373](3350378 call status[3345291] tableEntry[3350228]))
    val call_tmp[3350381]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3350524]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3350528 'move' coerce_tmp[3350524](3350526 'deref' call_tmp[3350373]))
    (3350383 'move' call_tmp[3350381](3350386 call ==[3259199] coerce_tmp[3350524] full[264674]))
    val call_tmp[3350389]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3350391 'move' call_tmp[3350389] call_tmp[3350381])
    if call_tmp[3350389]
    {
      (3350399 call _deinitSlot[3350531] tableEntry[3350228])
    }
    {
      ref call_tmp[3350402]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
      (3350404 'move' call_tmp[3350402](3350407 call status[3345291] tableEntry[3350228]))
      val call_tmp[3350410]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3350643]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3350647 'move' coerce_tmp[3350643](3350645 'deref' call_tmp[3350402]))
      (3350412 'move' call_tmp[3350410](3350415 call ==[3259199] coerce_tmp[3350643] deleted[264676]))
      val call_tmp[3350418]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3350420 'move' call_tmp[3350418] call_tmp[3350410])
      if call_tmp[3350418]
      {
        ref call_tmp[3350427]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3350429 'move' call_tmp[3350427](3350432 call tableNumDeletedSlots[3345823] this[3350205]))
        (3350436 call -=[72507] call_tmp[3350427] 1)
      }
      ref call_tmp[3350440]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3350442 'move' call_tmp[3350440](3350445 call tableNumFullSlots[3345794] this[3350205]))
      (3350449 call +=[72190] call_tmp[3350440] 1)
    }
    ref call_tmp[3350453]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3350455 'move' call_tmp[3350453](3350458 call status[3345291] tableEntry[3350228]))
    (3350462 call =[3261273] call_tmp[3350453] full[264674])
    (3350465 'end of statement')
    ref call_tmp[3350466]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3350468 'move' call_tmp[3350466](3350471 call key[3345732] tableEntry[3350228]))
    val _formal_tmp_in_src[3350657]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3350662 'move' _formal_tmp_in_src[3350657](3350658 call chpl__initCopy[1480493] _formal_tmp_key[3350512] 0))
    (3350475 call moveInitialize[3261406] call_tmp[3350466] _formal_tmp_in_src[3350657])
    (3350478 'end of statement')
    ref call_tmp[3350479]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3350481 'move' call_tmp[3350479](3350484 call val[3345762] tableEntry[3350228]))
    val _formal_tmp_in_src[3350668]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3350673 'move' _formal_tmp_in_src[3350668](3350669 call chpl__initCopy[1480493] _formal_tmp_val[3350513] 0))
    (3350488 call moveInitialize[3261406] call_tmp[3350479] _formal_tmp_in_src[3350668])
    (3350491 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].fillSlot[3372796](ref arg this[3372800]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], ref arg tableEntry[3372823]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782], ref arg key[3372830]:string[244], ref arg val[3372837]:owned ModuleSpecification?[3283604]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3373508]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3373512 'move' _formal_tmp_key[3373508] key[3372830])
    val _formal_tmp_val[3373509]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3373516 'move' _formal_tmp_val[3373509] val[3372837])
    ref call_tmp[3373369]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3373371 'move' call_tmp[3373369](3373374 call status[3360376] tableEntry[3372823]))
    val call_tmp[3373377]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3373520]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3373524 'move' coerce_tmp[3373520](3373522 'deref' call_tmp[3373369]))
    (3373379 'move' call_tmp[3373377](3373382 call ==[3259199] coerce_tmp[3373520] full[264674]))
    val call_tmp[3373385]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3373387 'move' call_tmp[3373385] call_tmp[3373377])
    if call_tmp[3373385]
    {
      (3373395 call _deinitSlot[3373527] tableEntry[3372823])
    }
    {
      ref call_tmp[3373398]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
      (3373400 'move' call_tmp[3373398](3373403 call status[3360376] tableEntry[3372823]))
      val call_tmp[3373406]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3373683]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3373687 'move' coerce_tmp[3373683](3373685 'deref' call_tmp[3373398]))
      (3373408 'move' call_tmp[3373406](3373411 call ==[3259199] coerce_tmp[3373683] deleted[264676]))
      val call_tmp[3373414]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3373416 'move' call_tmp[3373414] call_tmp[3373406])
      if call_tmp[3373414]
      {
        ref call_tmp[3373423]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3373425 'move' call_tmp[3373423](3373428 call tableNumDeletedSlots[3363349] this[3372800]))
        (3373432 call -=[72507] call_tmp[3373423] 1)
      }
      ref call_tmp[3373436]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3373438 'move' call_tmp[3373436](3373441 call tableNumFullSlots[3363320] this[3372800]))
      (3373445 call +=[72190] call_tmp[3373436] 1)
    }
    ref call_tmp[3373449]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3373451 'move' call_tmp[3373449](3373454 call status[3360376] tableEntry[3372823]))
    (3373458 call =[3261273] call_tmp[3373449] full[264674])
    (3373461 'end of statement')
    ref call_tmp[3373462]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3373464 'move' call_tmp[3373462](3373467 call key[3360817] tableEntry[3372823]))
    val _formal_tmp_in_src[3373697]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3373702 'move' _formal_tmp_in_src[3373697](3373698 call chpl__initCopy[1480493] _formal_tmp_key[3373508] 0))
    (3373471 call moveInitialize[3261406] call_tmp[3373462] _formal_tmp_in_src[3373697])
    (3373474 'end of statement')
    ref call_tmp[3373475]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
    (3373477 'move' call_tmp[3373475](3373480 call val[3360847] tableEntry[3372823]))
    val _formal_tmp_in_src[3373708]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3373713 'move' _formal_tmp_in_src[3373708](3373709 call chpl__initCopy[3372936] _formal_tmp_val[3373509] 0))
    (3373484 call moveInitialize[3365961] call_tmp[3373475] _formal_tmp_in_src[3373708])
    (3373487 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].fillSlot[3404441](ref arg this[3404445]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], ref arg tableEntry[3404468]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247], ref arg key[3404475]:string[244], ref arg val[3404482]:shared Module(real(32))[1955038]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3404752]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3404756 'move' _formal_tmp_key[3404752] key[3404475])
    val _formal_tmp_val[3404753]:shared Module(real(32))[1955038] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3404760 'move' _formal_tmp_val[3404753] val[3404482])
    ref call_tmp[3404613]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3404615 'move' call_tmp[3404613](3404618 call status[3402569] tableEntry[3404468]))
    val call_tmp[3404621]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3404764]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3404768 'move' coerce_tmp[3404764](3404766 'deref' call_tmp[3404613]))
    (3404623 'move' call_tmp[3404621](3404626 call ==[3259199] coerce_tmp[3404764] full[264674]))
    val call_tmp[3404629]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3404631 'move' call_tmp[3404629] call_tmp[3404621])
    if call_tmp[3404629]
    {
      (3404639 call _deinitSlot[3404771] tableEntry[3404468])
    }
    {
      ref call_tmp[3404642]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
      (3404644 'move' call_tmp[3404642](3404647 call status[3402569] tableEntry[3404468]))
      val call_tmp[3404650]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3404927]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404931 'move' coerce_tmp[3404927](3404929 'deref' call_tmp[3404642]))
      (3404652 'move' call_tmp[3404650](3404655 call ==[3259199] coerce_tmp[3404927] deleted[264676]))
      val call_tmp[3404658]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3404660 'move' call_tmp[3404658] call_tmp[3404650])
      if call_tmp[3404658]
      {
        ref call_tmp[3404667]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3404669 'move' call_tmp[3404667](3404672 call tableNumDeletedSlots[3401279] this[3404445]))
        (3404676 call -=[72507] call_tmp[3404667] 1)
      }
      ref call_tmp[3404680]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3404682 'move' call_tmp[3404680](3404685 call tableNumFullSlots[3401251] this[3404445]))
      (3404689 call +=[72190] call_tmp[3404680] 1)
    }
    ref call_tmp[3404693]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3404695 'move' call_tmp[3404693](3404698 call status[3402569] tableEntry[3404468]))
    (3404702 call =[3261273] call_tmp[3404693] full[264674])
    (3404705 'end of statement')
    ref call_tmp[3404706]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3404708 'move' call_tmp[3404706](3404711 call key[3402607] tableEntry[3404468]))
    val _formal_tmp_in_src[3404941]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3404946 'move' _formal_tmp_in_src[3404941](3404942 call chpl__initCopy[1480493] _formal_tmp_key[3404752] 0))
    (3404715 call moveInitialize[3261406] call_tmp[3404706] _formal_tmp_in_src[3404941])
    (3404718 'end of statement')
    ref call_tmp[3404719]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
    (3404721 'move' call_tmp[3404719](3404724 call val[3403754] tableEntry[3404468]))
    val _formal_tmp_in_src[3404952]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3404957 'move' _formal_tmp_in_src[3404952](3404953 call chpl__initCopy[3399328] _formal_tmp_val[3404753] 0))
    (3404728 call moveInitialize[3403878] call_tmp[3404719] _formal_tmp_in_src[3404952])
    (3404731 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].fillSlot[3863990](ref arg this[3863994]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], ref arg tableEntry[3864017]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280], ref arg key[3864024]:string[244], in arg val[3864031]:Module(real(64))[3405063]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3864278]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3864281 'move' _formal_tmp_key[3864278] key[3864024])
    ref call_tmp[3864148]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3864150 'move' call_tmp[3864148](3864153 call status[3862118] tableEntry[3864017]))
    val call_tmp[3864156]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3864285]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3864289 'move' coerce_tmp[3864285](3864287 'deref' call_tmp[3864148]))
    (3864158 'move' call_tmp[3864156](3864161 call ==[3259199] coerce_tmp[3864285] full[264674]))
    val call_tmp[3864164]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3864166 'move' call_tmp[3864164] call_tmp[3864156])
    if call_tmp[3864164]
    {
      (3864174 call _deinitSlot[3864292] tableEntry[3864017])
    }
    {
      ref call_tmp[3864177]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
      (3864179 'move' call_tmp[3864177](3864182 call status[3862118] tableEntry[3864017]))
      val call_tmp[3864185]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3864428]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3864432 'move' coerce_tmp[3864428](3864430 'deref' call_tmp[3864177]))
      (3864187 'move' call_tmp[3864185](3864190 call ==[3259199] coerce_tmp[3864428] deleted[264676]))
      val call_tmp[3864193]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3864195 'move' call_tmp[3864193] call_tmp[3864185])
      if call_tmp[3864193]
      {
        ref call_tmp[3864202]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3864204 'move' call_tmp[3864202](3864207 call tableNumDeletedSlots[3860828] this[3863994]))
        (3864211 call -=[72507] call_tmp[3864202] 1)
      }
      ref call_tmp[3864215]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3864217 'move' call_tmp[3864215](3864220 call tableNumFullSlots[3860800] this[3863994]))
      (3864224 call +=[72190] call_tmp[3864215] 1)
    }
    ref call_tmp[3864228]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3864230 'move' call_tmp[3864228](3864233 call status[3862118] tableEntry[3864017]))
    (3864237 call =[3261273] call_tmp[3864228] full[264674])
    (3864240 'end of statement')
    ref call_tmp[3864241]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3864243 'move' call_tmp[3864241](3864246 call key[3862156] tableEntry[3864017]))
    val _formal_tmp_in_src[3864442]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3864447 'move' _formal_tmp_in_src[3864442](3864443 call chpl__initCopy[1480493] _formal_tmp_key[3864278] 0))
    (3864250 call moveInitialize[3261406] call_tmp[3864241] _formal_tmp_in_src[3864442])
    (3864253 'end of statement')
    ref call_tmp[3864254]:_ref(Module(real(64)))[3405072] "dead after last mention" "maybe param" "temp"
    (3864256 'move' call_tmp[3864254](3864259 call val[3863303] tableEntry[3864017]))
    (3864263 call moveInitialize[3863433] call_tmp[3864254] val[3864031])
    (3864266 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].fillSlot[4314290](ref arg this[4314294]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], ref arg tableEntry[4314317]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433], ref arg key[4314324]:string[244], ref arg val[4314331]:shared Module(real(64))[3405428]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[4314601]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (4314605 'move' _formal_tmp_key[4314601] key[4314324])
    val _formal_tmp_val[4314602]:shared Module(real(64))[3405428] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (4314609 'move' _formal_tmp_val[4314602] val[4314331])
    ref call_tmp[4314462]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (4314464 'move' call_tmp[4314462](4314467 call status[4310148] tableEntry[4314317]))
    val call_tmp[4314470]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4314613]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4314617 'move' coerce_tmp[4314613](4314615 'deref' call_tmp[4314462]))
    (4314472 'move' call_tmp[4314470](4314475 call ==[3259199] coerce_tmp[4314613] full[264674]))
    val call_tmp[4314478]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4314480 'move' call_tmp[4314478] call_tmp[4314470])
    if call_tmp[4314478]
    {
      (4314488 call _deinitSlot[4314620] tableEntry[4314317])
    }
    {
      ref call_tmp[4314491]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
      (4314493 'move' call_tmp[4314491](4314496 call status[4310148] tableEntry[4314317]))
      val call_tmp[4314499]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4314758]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4314762 'move' coerce_tmp[4314758](4314760 'deref' call_tmp[4314491]))
      (4314501 'move' call_tmp[4314499](4314504 call ==[3259199] coerce_tmp[4314758] deleted[264676]))
      val call_tmp[4314507]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4314509 'move' call_tmp[4314507] call_tmp[4314499])
      if call_tmp[4314507]
      {
        ref call_tmp[4314516]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4314518 'move' call_tmp[4314516](4314521 call tableNumDeletedSlots[4310961] this[4314294]))
        (4314525 call -=[72507] call_tmp[4314516] 1)
      }
      ref call_tmp[4314529]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4314531 'move' call_tmp[4314529](4314534 call tableNumFullSlots[4310933] this[4314294]))
      (4314538 call +=[72190] call_tmp[4314529] 1)
    }
    ref call_tmp[4314542]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (4314544 'move' call_tmp[4314542](4314547 call status[4310148] tableEntry[4314317]))
    (4314551 call =[3261273] call_tmp[4314542] full[264674])
    (4314554 'end of statement')
    ref call_tmp[4314555]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (4314557 'move' call_tmp[4314555](4314560 call key[4310201] tableEntry[4314317]))
    val _formal_tmp_in_src[4314772]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (4314777 'move' _formal_tmp_in_src[4314772](4314773 call chpl__initCopy[1480493] _formal_tmp_key[4314601] 0))
    (4314564 call moveInitialize[3261406] call_tmp[4314555] _formal_tmp_in_src[4314772])
    (4314567 'end of statement')
    ref call_tmp[4314568]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
    (4314570 'move' call_tmp[4314568](4314573 call val[4313382] tableEntry[4314317]))
    val _formal_tmp_in_src[4314783]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (4314788 'move' _formal_tmp_in_src[4314783](4314784 call chpl__initCopy[3864576] _formal_tmp_val[4314602] 0))
    (4314577 call moveInitialize[4313506] call_tmp[4314568] _formal_tmp_in_src[4314783])
    (4314580 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].fillSlot[3262311](ref arg this[3262315]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const in arg slotNum[3262317]:int(64)[10], ref arg key[3262324]:string[244], in arg val[3262331]:Module(real(32))[1935500]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3262382]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3262385 'move' _formal_tmp_key[3262382] key[3262324])
    ref tableEntry[3262341]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "ref var"
    ref call_tmp[3262345]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3262389]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead at end of block" "temp"
    (3262391 'move' _this_tmp_[3262389](3262350 call table[1942967] this[3262315]))
    val coerce_tmp[3262396]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3262400 'move' coerce_tmp[3262396](3262398 'deref' _this_tmp_[3262389]))
    (3262347 'move' call_tmp[3262345](3262353 call this[1947405] coerce_tmp[3262396] slotNum[3262317]))
    (3262355 'move' tableEntry[3262341] call_tmp[3262345])
    (3262359 'end of statement')
    val _formal_tmp_in_key[3262527]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3262532 'move' _formal_tmp_in_key[3262527](3262528 call chpl__initCopy[1480493] _formal_tmp_key[3262382] 0))
    (3262364 call fillSlot[3262249] this[3262315] tableEntry[3262341] _formal_tmp_in_key[3262527] val[3262331])
    (3262368 'end of statement' tableEntry[3262341])
    (3262370 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].fillSlot[3308541](ref arg this[3308545]:_ref(chpl__hashtable(string,int(64)))[3288858], const in arg slotNum[3308547]:int(64)[10], ref arg key[3308554]:string[244], in arg val[3308561]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3308612]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3308615 'move' _formal_tmp_key[3308612] key[3308554])
    ref tableEntry[3308571]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "ref var"
    ref call_tmp[3308575]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3308619]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead at end of block" "temp"
    (3308621 'move' _this_tmp_[3308619](3308580 call table[3303003] this[3308545]))
    val coerce_tmp[3308626]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3308630 'move' coerce_tmp[3308626](3308628 'deref' _this_tmp_[3308619]))
    (3308577 'move' call_tmp[3308575](3308583 call this[3306115] coerce_tmp[3308626] slotNum[3308547]))
    (3308585 'move' tableEntry[3308571] call_tmp[3308575])
    (3308589 'end of statement')
    val _formal_tmp_in_key[3308757]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3308762 'move' _formal_tmp_in_key[3308757](3308758 call chpl__initCopy[1480493] _formal_tmp_key[3308612] 0))
    (3308594 call fillSlot[3308479] this[3308545] tableEntry[3308571] _formal_tmp_in_key[3308757] val[3308561])
    (3308598 'end of statement' tableEntry[3308571])
    (3308600 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].fillSlot[3350263](ref arg this[3350267]:_ref(chpl__hashtable(string,string))[3283450], const in arg slotNum[3350269]:int(64)[10], ref arg key[3350276]:string[244], ref arg val[3350283]:string[244]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3350343]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3350347 'move' _formal_tmp_key[3350343] key[3350276])
    val _formal_tmp_val[3350344]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3350351 'move' _formal_tmp_val[3350344] val[3350283])
    ref tableEntry[3350293]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "ref var"
    ref call_tmp[3350297]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3350355]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead at end of block" "temp"
    (3350357 'move' _this_tmp_[3350355](3350302 call table[3340092] this[3350267]))
    val coerce_tmp[3350362]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3350366 'move' coerce_tmp[3350362](3350364 'deref' _this_tmp_[3350355]))
    (3350299 'move' call_tmp[3350297](3350305 call this[3343256] coerce_tmp[3350362] slotNum[3350269]))
    (3350307 'move' tableEntry[3350293] call_tmp[3350297])
    (3350311 'end of statement')
    val _formal_tmp_in_key[3350493]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3350498 'move' _formal_tmp_in_key[3350493](3350494 call chpl__initCopy[1480493] _formal_tmp_key[3350343] 0))
    val _formal_tmp_in_val[3350502]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3350507 'move' _formal_tmp_in_val[3350502](3350503 call chpl__initCopy[1480493] _formal_tmp_val[3350344] 0))
    (3350316 call fillSlot[3350201] this[3350267] tableEntry[3350293] _formal_tmp_in_key[3350493] _formal_tmp_in_val[3350502])
    (3350320 'end of statement' tableEntry[3350293])
    (3350322 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].fillSlot[3372858](ref arg this[3372862]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const in arg slotNum[3372864]:int(64)[10], ref arg key[3372871]:string[244], ref arg val[3372878]:owned ModuleSpecification?[3283604]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3373339]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3373343 'move' _formal_tmp_key[3373339] key[3372871])
    val _formal_tmp_val[3373340]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3373347 'move' _formal_tmp_val[3373340] val[3372878])
    ref tableEntry[3372888]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "ref var"
    ref call_tmp[3372892]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3373351]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead at end of block" "temp"
    (3373353 'move' _this_tmp_[3373351](3372897 call table[3355177] this[3372862]))
    val coerce_tmp[3373358]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3373362 'move' coerce_tmp[3373358](3373360 'deref' _this_tmp_[3373351]))
    (3372894 'move' call_tmp[3372892](3372900 call this[3358341] coerce_tmp[3373358] slotNum[3372864]))
    (3372902 'move' tableEntry[3372888] call_tmp[3372892])
    (3372906 'end of statement')
    val _formal_tmp_in_key[3373489]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3373494 'move' _formal_tmp_in_key[3373489](3373490 call chpl__initCopy[1480493] _formal_tmp_key[3373339] 0))
    val _formal_tmp_in_val[3373498]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3373503 'move' _formal_tmp_in_val[3373498](3373499 call chpl__initCopy[3372936] _formal_tmp_val[3373340] 0))
    (3372911 call fillSlot[3372796] this[3372862] tableEntry[3372888] _formal_tmp_in_key[3373489] _formal_tmp_in_val[3373498])
    (3372915 'end of statement' tableEntry[3372888])
    (3372917 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].fillSlot[3404503](ref arg this[3404507]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const in arg slotNum[3404509]:int(64)[10], ref arg key[3404516]:string[244], ref arg val[3404523]:shared Module(real(32))[1955038]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3404583]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3404587 'move' _formal_tmp_key[3404583] key[3404516])
    val _formal_tmp_val[3404584]:shared Module(real(32))[1955038] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3404591 'move' _formal_tmp_val[3404584] val[3404523])
    ref tableEntry[3404533]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "ref var"
    ref call_tmp[3404537]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3404595]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead at end of block" "temp"
    (3404597 'move' _this_tmp_[3404595](3404542 call table[3392311] this[3404507]))
    val coerce_tmp[3404602]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3404606 'move' coerce_tmp[3404602](3404604 'deref' _this_tmp_[3404595]))
    (3404539 'move' call_tmp[3404537](3404545 call this[3395475] coerce_tmp[3404602] slotNum[3404509]))
    (3404547 'move' tableEntry[3404533] call_tmp[3404537])
    (3404551 'end of statement')
    val _formal_tmp_in_key[3404733]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3404738 'move' _formal_tmp_in_key[3404733](3404734 call chpl__initCopy[1480493] _formal_tmp_key[3404583] 0))
    val _formal_tmp_in_val[3404742]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3404747 'move' _formal_tmp_in_val[3404742](3404743 call chpl__initCopy[3399328] _formal_tmp_val[3404584] 0))
    (3404556 call fillSlot[3404441] this[3404507] tableEntry[3404533] _formal_tmp_in_key[3404733] _formal_tmp_in_val[3404742])
    (3404560 'end of statement' tableEntry[3404533])
    (3404562 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].fillSlot[3864052](ref arg this[3864056]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const in arg slotNum[3864058]:int(64)[10], ref arg key[3864065]:string[244], in arg val[3864072]:Module(real(64))[3405063]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3864123]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (3864126 'move' _formal_tmp_key[3864123] key[3864065])
    ref tableEntry[3864082]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "ref var"
    ref call_tmp[3864086]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3864130]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead at end of block" "temp"
    (3864132 'move' _this_tmp_[3864130](3864091 call table[3828904] this[3864056]))
    val coerce_tmp[3864137]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3864141 'move' coerce_tmp[3864137](3864139 'deref' _this_tmp_[3864130]))
    (3864088 'move' call_tmp[3864086](3864094 call this[3832068] coerce_tmp[3864137] slotNum[3864058]))
    (3864096 'move' tableEntry[3864082] call_tmp[3864086])
    (3864100 'end of statement')
    val _formal_tmp_in_key[3864268]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (3864273 'move' _formal_tmp_in_key[3864268](3864269 call chpl__initCopy[1480493] _formal_tmp_key[3864123] 0))
    (3864105 call fillSlot[3863990] this[3864056] tableEntry[3864082] _formal_tmp_in_key[3864268] val[3864072])
    (3864109 'end of statement' tableEntry[3864082])
    (3864111 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].fillSlot[4314352](ref arg this[4314356]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const in arg slotNum[4314358]:int(64)[10], ref arg key[4314365]:string[244], ref arg val[4314372]:shared Module(real(64))[3405428]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[4314432]:string[244] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (4314436 'move' _formal_tmp_key[4314432] key[4314365])
    val _formal_tmp_val[4314433]:shared Module(real(64))[3405428] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (4314440 'move' _formal_tmp_val[4314433] val[4314372])
    ref tableEntry[4314382]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "ref var"
    ref call_tmp[4314386]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[4314444]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead at end of block" "temp"
    (4314446 'move' _this_tmp_[4314444](4314391 call table[4305464] this[4314356]))
    val coerce_tmp[4314451]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (4314455 'move' coerce_tmp[4314451](4314453 'deref' _this_tmp_[4314444]))
    (4314388 'move' call_tmp[4314386](4314394 call this[4308628] coerce_tmp[4314451] slotNum[4314358]))
    (4314396 'move' tableEntry[4314382] call_tmp[4314386])
    (4314400 'end of statement')
    val _formal_tmp_in_key[4314582]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (4314587 'move' _formal_tmp_in_key[4314582](4314583 call chpl__initCopy[1480493] _formal_tmp_key[4314432] 0))
    val _formal_tmp_in_val[4314591]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (4314596 'move' _formal_tmp_in_val[4314591](4314592 call chpl__initCopy[3864576] _formal_tmp_val[4314433] 0))
    (4314405 call fillSlot[4314290] this[4314356] tableEntry[4314382] _formal_tmp_in_key[4314582] _formal_tmp_in_val[4314591])
    (4314409 'end of statement' tableEntry[4314382])
    (4314411 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].findFullSlot[3312245](const  ref arg this[3312249]:_ref(chpl__hashtable(string,int(64)))[3288858], const  ref arg key[3312256]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3312263]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3312275]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3312282]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3312284 'move' slotNum[3312282] -1)
    (3312287 'end of statement')
    val foundSlot[3312288]:bool[19] "dead at end of block" "insert auto destroy"
    (3312290 'move' foundSlot[3312288] 0)
    (3312293 'end of statement')
    val tmp[3312294]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3312296]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3312298 'move' tmp[3312296](3312300 'addr of' foundSlot[3312288]))
    ref tmp[3312302]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3312304 'move' tmp[3312302](3312306 'addr of' slotNum[3312282]))
    (3312308 'move' tmp[3312294](3312314 call _findSlot[3306673] this[3312249] key[3312256]))
    { scopeless
      val call_tmp[3312317]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3312325]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3312333]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3312347]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3312349 'move' call_tmp[3312347](3312414 '.' tmp[3312294] x0[3257006]))
    val coerce_tmp[3312417]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3312421 'move' coerce_tmp[3312417](3312419 'deref' call_tmp[3312347]))
    (3312355 call =[52153] tmp[3312296] coerce_tmp[3312417])
    ref call_tmp[3312358]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3312360 'move' call_tmp[3312358](3312426 '.' tmp[3312294] x1[3257008]))
    val coerce_tmp[3312429]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3312433 'move' coerce_tmp[3312429](3312431 'deref' call_tmp[3312358]))
    (3312366 call =[52229] tmp[3312302] coerce_tmp[3312429])
    (3312369 'end of statement' foundSlot[3312288] slotNum[3312282])
    val call_tmp[3312372]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3312374 'move' call_tmp[3312372](3312377 call _build_tuple[3260720] foundSlot[3312288] slotNum[3312282]))
    val call_tmp[3312380]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3312440 '=' ret[3312263] call_tmp[3312372])
    gotoReturn _end_findFullSlot[3312398] _end_findFullSlot[3312398]
    label _end_findFullSlot[3312398]
    (3312400 return ret[3312263])
  }
  function _ref(chpl__hashtable(string,string))[3283450].findFullSlot[3383343](const  ref arg this[3383347]:_ref(chpl__hashtable(string,string))[3283450], const  ref arg key[3383354]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3383361]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3383373]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3383380]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3383382 'move' slotNum[3383380] -1)
    (3383385 'end of statement')
    val foundSlot[3383386]:bool[19] "dead at end of block" "insert auto destroy"
    (3383388 'move' foundSlot[3383386] 0)
    (3383391 'end of statement')
    val tmp[3383392]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3383394]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3383396 'move' tmp[3383394](3383398 'addr of' foundSlot[3383386]))
    ref tmp[3383400]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3383402 'move' tmp[3383400](3383404 'addr of' slotNum[3383380]))
    (3383406 'move' tmp[3383392](3383412 call _findSlot[3347313] this[3383347] key[3383354]))
    { scopeless
      val call_tmp[3383415]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3383423]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3383431]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3383445]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3383447 'move' call_tmp[3383445](3383512 '.' tmp[3383392] x0[3257006]))
    val coerce_tmp[3383515]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3383519 'move' coerce_tmp[3383515](3383517 'deref' call_tmp[3383445]))
    (3383453 call =[52153] tmp[3383394] coerce_tmp[3383515])
    ref call_tmp[3383456]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3383458 'move' call_tmp[3383456](3383524 '.' tmp[3383392] x1[3257008]))
    val coerce_tmp[3383527]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3383531 'move' coerce_tmp[3383527](3383529 'deref' call_tmp[3383456]))
    (3383464 call =[52229] tmp[3383400] coerce_tmp[3383527])
    (3383467 'end of statement' foundSlot[3383386] slotNum[3383380])
    val call_tmp[3383470]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3383472 'move' call_tmp[3383470](3383475 call _build_tuple[3260720] foundSlot[3383386] slotNum[3383380]))
    val call_tmp[3383478]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3383538 '=' ret[3383361] call_tmp[3383470])
    gotoReturn _end_findFullSlot[3383496] _end_findFullSlot[3383496]
    label _end_findFullSlot[3383496]
    (3383498 return ret[3383361])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].findFullSlot[3396652](const  ref arg this[3396656]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const  ref arg key[3396663]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3396670]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3396682]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3396689]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3396691 'move' slotNum[3396689] -1)
    (3396694 'end of statement')
    val foundSlot[3396695]:bool[19] "dead at end of block" "insert auto destroy"
    (3396697 'move' foundSlot[3396695] 0)
    (3396700 'end of statement')
    val tmp[3396701]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3396703]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3396705 'move' tmp[3396703](3396707 'addr of' foundSlot[3396695]))
    ref tmp[3396709]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3396711 'move' tmp[3396709](3396713 'addr of' slotNum[3396689]))
    (3396715 'move' tmp[3396701](3396721 call _findSlot[3364839] this[3396656] key[3396663]))
    { scopeless
      val call_tmp[3396724]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3396732]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3396740]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3396754]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3396756 'move' call_tmp[3396754](3396821 '.' tmp[3396701] x0[3257006]))
    val coerce_tmp[3396824]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3396828 'move' coerce_tmp[3396824](3396826 'deref' call_tmp[3396754]))
    (3396762 call =[52153] tmp[3396703] coerce_tmp[3396824])
    ref call_tmp[3396765]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3396767 'move' call_tmp[3396765](3396833 '.' tmp[3396701] x1[3257008]))
    val coerce_tmp[3396836]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3396840 'move' coerce_tmp[3396836](3396838 'deref' call_tmp[3396765]))
    (3396773 call =[52229] tmp[3396709] coerce_tmp[3396836])
    (3396776 'end of statement' foundSlot[3396695] slotNum[3396689])
    val call_tmp[3396779]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3396781 'move' call_tmp[3396779](3396784 call _build_tuple[3260720] foundSlot[3396695] slotNum[3396689]))
    val call_tmp[3396787]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3396847 '=' ret[3396670] call_tmp[3396779])
    gotoReturn _end_findFullSlot[3396805] _end_findFullSlot[3396805]
    label _end_findFullSlot[3396805]
    (3396807 return ret[3396670])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].findFullSlot[3406927](const  ref arg this[3406931]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const  ref arg key[3406938]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3406945]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3406957]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3406964]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3406966 'move' slotNum[3406964] -1)
    (3406969 'end of statement')
    val foundSlot[3406970]:bool[19] "dead at end of block" "insert auto destroy"
    (3406972 'move' foundSlot[3406970] 0)
    (3406975 'end of statement')
    val tmp[3406976]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3406978]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3406980 'move' tmp[3406978](3406982 'addr of' foundSlot[3406970]))
    ref tmp[3406984]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3406986 'move' tmp[3406984](3406988 'addr of' slotNum[3406964]))
    (3406990 'move' tmp[3406976](3406996 call _findSlot[3402635] this[3406931] key[3406938]))
    { scopeless
      val call_tmp[3406999]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3407007]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3407015]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3407029]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3407031 'move' call_tmp[3407029](3407096 '.' tmp[3406976] x0[3257006]))
    val coerce_tmp[3407099]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3407103 'move' coerce_tmp[3407099](3407101 'deref' call_tmp[3407029]))
    (3407037 call =[52153] tmp[3406978] coerce_tmp[3407099])
    ref call_tmp[3407040]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3407042 'move' call_tmp[3407040](3407108 '.' tmp[3406976] x1[3257008]))
    val coerce_tmp[3407111]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3407115 'move' coerce_tmp[3407111](3407113 'deref' call_tmp[3407040]))
    (3407048 call =[52229] tmp[3406984] coerce_tmp[3407111])
    (3407051 'end of statement' foundSlot[3406970] slotNum[3406964])
    val call_tmp[3407054]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3407056 'move' call_tmp[3407054](3407059 call _build_tuple[3260720] foundSlot[3406970] slotNum[3406964]))
    val call_tmp[3407062]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3407122 '=' ret[3406945] call_tmp[3407054])
    gotoReturn _end_findFullSlot[3407080] _end_findFullSlot[3407080]
    label _end_findFullSlot[3407080]
    (3407082 return ret[3406945])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].findFullSlot[3421376](const  ref arg this[3421380]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const  ref arg key[3421387]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3421394]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[3421406]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[3421413]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3421415 'move' slotNum[3421413] -1)
    (3421418 'end of statement')
    val foundSlot[3421419]:bool[19] "dead at end of block" "insert auto destroy"
    (3421421 'move' foundSlot[3421419] 0)
    (3421424 'end of statement')
    val tmp[3421425]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[3421427]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3421429 'move' tmp[3421427](3421431 'addr of' foundSlot[3421419]))
    ref tmp[3421433]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3421435 'move' tmp[3421433](3421437 'addr of' slotNum[3421413]))
    (3421439 'move' tmp[3421425](3421445 call _findSlot[3259284] this[3421380] key[3421387]))
    { scopeless
      val call_tmp[3421448]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3421456]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3421464]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[3421478]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3421480 'move' call_tmp[3421478](3421545 '.' tmp[3421425] x0[3257006]))
    val coerce_tmp[3421548]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3421552 'move' coerce_tmp[3421548](3421550 'deref' call_tmp[3421478]))
    (3421486 call =[52153] tmp[3421427] coerce_tmp[3421548])
    ref call_tmp[3421489]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3421491 'move' call_tmp[3421489](3421557 '.' tmp[3421425] x1[3257008]))
    val coerce_tmp[3421560]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3421564 'move' coerce_tmp[3421560](3421562 'deref' call_tmp[3421489]))
    (3421497 call =[52229] tmp[3421433] coerce_tmp[3421560])
    (3421500 'end of statement' foundSlot[3421419] slotNum[3421413])
    val call_tmp[3421503]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (3421505 'move' call_tmp[3421503](3421508 call _build_tuple[3260720] foundSlot[3421419] slotNum[3421413]))
    val call_tmp[3421511]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3421571 '=' ret[3421394] call_tmp[3421503])
    gotoReturn _end_findFullSlot[3421529] _end_findFullSlot[3421529]
    label _end_findFullSlot[3421529]
    (3421531 return ret[3421394])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].findFullSlot[4238876](const  ref arg this[4238880]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const  ref arg key[4238887]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4238894]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[4238906]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[4238913]:int(64)[10] "dead at end of block" "insert auto destroy"
    (4238915 'move' slotNum[4238913] -1)
    (4238918 'end of statement')
    val foundSlot[4238919]:bool[19] "dead at end of block" "insert auto destroy"
    (4238921 'move' foundSlot[4238919] 0)
    (4238924 'end of statement')
    val tmp[4238925]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[4238927]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4238929 'move' tmp[4238927](4238931 'addr of' foundSlot[4238919]))
    ref tmp[4238933]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4238935 'move' tmp[4238933](4238937 'addr of' slotNum[4238913]))
    (4238939 'move' tmp[4238925](4238945 call _findSlot[3862184] this[4238880] key[4238887]))
    { scopeless
      val call_tmp[4238948]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4238956]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4238964]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[4238978]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4238980 'move' call_tmp[4238978](4239045 '.' tmp[4238925] x0[3257006]))
    val coerce_tmp[4239048]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4239052 'move' coerce_tmp[4239048](4239050 'deref' call_tmp[4238978]))
    (4238986 call =[52153] tmp[4238927] coerce_tmp[4239048])
    ref call_tmp[4238989]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4238991 'move' call_tmp[4238989](4239057 '.' tmp[4238925] x1[3257008]))
    val coerce_tmp[4239060]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4239064 'move' coerce_tmp[4239060](4239062 'deref' call_tmp[4238989]))
    (4238997 call =[52229] tmp[4238933] coerce_tmp[4239060])
    (4239000 'end of statement' foundSlot[4238919] slotNum[4238913])
    val call_tmp[4239003]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (4239005 'move' call_tmp[4239003](4239008 call _build_tuple[3260720] foundSlot[4238919] slotNum[4238913]))
    val call_tmp[4239011]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (4239071 '=' ret[4238894] call_tmp[4239003])
    gotoReturn _end_findFullSlot[4239029] _end_findFullSlot[4239029]
    label _end_findFullSlot[4239029]
    (4239031 return ret[4238894])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].findFullSlot[4314054](const  ref arg this[4314058]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const  ref arg key[4314065]:string[244]) : (bool,int(64))[3257010] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4314072]:(bool,int(64))[3257010] "dead after last mention" "RVV" "temp"
    val call_tmp[4314084]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val slotNum[4314091]:int(64)[10] "dead at end of block" "insert auto destroy"
    (4314093 'move' slotNum[4314091] -1)
    (4314096 'end of statement')
    val foundSlot[4314097]:bool[19] "dead at end of block" "insert auto destroy"
    (4314099 'move' foundSlot[4314097] 0)
    (4314102 'end of statement')
    val tmp[4314103]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[4314105]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4314107 'move' tmp[4314105](4314109 'addr of' foundSlot[4314097]))
    ref tmp[4314111]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4314113 'move' tmp[4314111](4314115 'addr of' slotNum[4314091]))
    (4314117 'move' tmp[4314103](4314123 call _findSlot[4312263] this[4314058] key[4314065]))
    { scopeless
      val call_tmp[4314126]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4314134]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[4314142]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    }
    ref call_tmp[4314156]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4314158 'move' call_tmp[4314156](4314223 '.' tmp[4314103] x0[3257006]))
    val coerce_tmp[4314226]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4314230 'move' coerce_tmp[4314226](4314228 'deref' call_tmp[4314156]))
    (4314164 call =[52153] tmp[4314105] coerce_tmp[4314226])
    ref call_tmp[4314167]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4314169 'move' call_tmp[4314167](4314235 '.' tmp[4314103] x1[3257008]))
    val coerce_tmp[4314238]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4314242 'move' coerce_tmp[4314238](4314240 'deref' call_tmp[4314167]))
    (4314175 call =[52229] tmp[4314111] coerce_tmp[4314238])
    (4314178 'end of statement' foundSlot[4314097] slotNum[4314091])
    val call_tmp[4314181]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (4314183 'move' call_tmp[4314181](4314186 call _build_tuple[3260720] foundSlot[4314097] slotNum[4314091]))
    val call_tmp[4314189]:(bool,int(64))[3257010] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (4314249 '=' ret[4314072] call_tmp[4314181])
    gotoReturn _end_findFullSlot[4314207] _end_findFullSlot[4314207]
    label _end_findFullSlot[4314207]
    (4314209 return ret[4314072])
  }
  function _ref(chpl__hashtable(string,string))[3283450].clearSlot[3345438](ref arg this[3345442]:_ref(chpl__hashtable(string,string))[3283450], ref arg tableEntry[3345465]:_ref(chpl_TableEntry(string,string))[3283482], ref arg key[3345472]:string[244], ref arg val[3345479]:string[244]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3345711]:string[244] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3345718 'end of statement')
    val _formal_tmp_val[3345712]:string[244] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3345728 'end of statement')
    ref call_tmp[3345616]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3345618 'move' call_tmp[3345616](3345621 call key[3345732] tableEntry[3345465]))
    val call_tmp[3345624]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    (3345626 'move' call_tmp[3345624](3345629 call moveFrom[3261311] call_tmp[3345616]))
    (3345852 'move' _formal_tmp_key[3345711] call_tmp[3345624])
    (3345635 'end of statement')
    ref call_tmp[3345636]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3345638 'move' call_tmp[3345636](3345641 call val[3345762] tableEntry[3345465]))
    val call_tmp[3345644]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    (3345646 'move' call_tmp[3345644](3345649 call moveFrom[3261311] call_tmp[3345636]))
    (3345855 'move' _formal_tmp_val[3345712] call_tmp[3345644])
    (3345655 'end of statement')
    ref call_tmp[3345656]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3345658 'move' call_tmp[3345656](3345661 call status[3345291] tableEntry[3345465]))
    (3345665 call =[3261273] call_tmp[3345656] deleted[264676])
    (3345668 'end of statement')
    ref call_tmp[3345669]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3345671 'move' call_tmp[3345669](3345674 call tableNumFullSlots[3345794] this[3345442]))
    (3345678 call -=[72507] call_tmp[3345669] 1)
    (3345681 'end of statement')
    ref call_tmp[3345682]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3345684 'move' call_tmp[3345682](3345687 call tableNumDeletedSlots[3345823] this[3345442]))
    (3345691 call +=[72190] call_tmp[3345682] 1)
    label _endclearSlot[3345722]
    (3345719 '=' key[3345472] _formal_tmp_key[3345711])
    (3345729 '=' val[3345479] _formal_tmp_val[3345712])
    (3345694 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].clearSlot[3360523](ref arg this[3360527]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], ref arg tableEntry[3360550]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782], ref arg key[3360557]:string[244], ref arg val[3360564]:owned ModuleSpecification?[3283604]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3360796]:string[244] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3360803 'end of statement')
    val _formal_tmp_val[3360797]:owned ModuleSpecification?[3283604] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3360813 'end of statement')
    ref call_tmp[3360701]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (3360703 'move' call_tmp[3360701](3360706 call key[3360817] tableEntry[3360550]))
    val call_tmp[3360709]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    (3360711 'move' call_tmp[3360709](3360714 call moveFrom[3261311] call_tmp[3360701]))
    (3363378 'move' _formal_tmp_key[3360796] call_tmp[3360709])
    (3360720 'end of statement')
    ref call_tmp[3360721]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
    (3360723 'move' call_tmp[3360721](3360726 call val[3360847] tableEntry[3360550]))
    val call_tmp[3360729]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    (3360731 'move' call_tmp[3360729](3360734 call moveFrom[3360875] call_tmp[3360721]))
    (3363381 'move' _formal_tmp_val[3360797] call_tmp[3360729])
    (3360740 'end of statement')
    ref call_tmp[3360741]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
    (3360743 'move' call_tmp[3360741](3360746 call status[3360376] tableEntry[3360550]))
    (3360750 call =[3261273] call_tmp[3360741] deleted[264676])
    (3360753 'end of statement')
    ref call_tmp[3360754]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3360756 'move' call_tmp[3360754](3360759 call tableNumFullSlots[3363320] this[3360527]))
    (3360763 call -=[72507] call_tmp[3360754] 1)
    (3360766 'end of statement')
    ref call_tmp[3360767]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3360769 'move' call_tmp[3360767](3360772 call tableNumDeletedSlots[3363349] this[3360527]))
    (3360776 call +=[72190] call_tmp[3360767] 1)
    label _endclearSlot[3360807]
    (3360804 '=' key[3360557] _formal_tmp_key[3360796])
    (3360814 '=' val[3360564] _formal_tmp_val[3360797])
    (3360779 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].clearSlot[3345500](ref arg this[3345504]:_ref(chpl__hashtable(string,string))[3283450], const in arg slotNum[3345506]:int(64)[10], ref arg key[3345513]:string[244], ref arg val[3345520]:string[244]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3345576]:string[244] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3345583 'end of statement')
    val _formal_tmp_val[3345577]:string[244] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3345593 'end of statement')
    ref tableEntry[3345530]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "ref var"
    ref call_tmp[3345534]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3345598]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead at end of block" "temp"
    (3345600 'move' _this_tmp_[3345598](3345539 call table[3340092] this[3345504]))
    val coerce_tmp[3345605]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3345609 'move' coerce_tmp[3345605](3345607 'deref' _this_tmp_[3345598]))
    (3345536 'move' call_tmp[3345534](3345542 call this[3343256] coerce_tmp[3345605] slotNum[3345506]))
    (3345544 'move' tableEntry[3345530] call_tmp[3345534])
    (3345548 'end of statement')
    val _formal_tmp_out_key[3345696]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_val[3345703]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
    (3345553 call clearSlot[3345438] this[3345504] tableEntry[3345530] _formal_tmp_out_key[3345696] _formal_tmp_out_val[3345703])
    (3345860 'move' _formal_tmp_key[3345576] _formal_tmp_out_key[3345696])
    (3345863 'move' _formal_tmp_val[3345577] _formal_tmp_out_val[3345703])
    (3345557 'end of statement' tableEntry[3345530])
    label _endclearSlot[3345587]
    (3345584 '=' key[3345513] _formal_tmp_key[3345576])
    (3345594 '=' val[3345520] _formal_tmp_val[3345577])
    (3345559 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].clearSlot[3360585](ref arg this[3360589]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const in arg slotNum[3360591]:int(64)[10], ref arg key[3360598]:string[244], ref arg val[3360605]:owned ModuleSpecification?[3283604]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[3360661]:string[244] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3360668 'end of statement')
    val _formal_tmp_val[3360662]:owned ModuleSpecification?[3283604] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    (3360678 'end of statement')
    ref tableEntry[3360615]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "ref var"
    ref call_tmp[3360619]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[3360683]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead at end of block" "temp"
    (3360685 'move' _this_tmp_[3360683](3360624 call table[3355177] this[3360589]))
    val coerce_tmp[3360690]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3360694 'move' coerce_tmp[3360690](3360692 'deref' _this_tmp_[3360683]))
    (3360621 'move' call_tmp[3360619](3360627 call this[3358341] coerce_tmp[3360690] slotNum[3360591]))
    (3360629 'move' tableEntry[3360615] call_tmp[3360619])
    (3360633 'end of statement')
    val _formal_tmp_out_key[3360781]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_val[3360788]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
    (3360638 call clearSlot[3360523] this[3360589] tableEntry[3360615] _formal_tmp_out_key[3360781] _formal_tmp_out_val[3360788])
    (3363386 'move' _formal_tmp_key[3360661] _formal_tmp_out_key[3360781])
    (3363389 'move' _formal_tmp_val[3360662] _formal_tmp_out_val[3360788])
    (3360642 'end of statement' tableEntry[3360615])
    label _endclearSlot[3360672]
    (3360669 '=' key[3360598] _formal_tmp_key[3360661])
    (3360679 '=' val[3360605] _formal_tmp_val[3360662])
    (3360644 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].maybeShrinkAfterRemove[3345869](ref arg this[3345873]:_ref(chpl__hashtable(string,string))[3283450]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[3345879]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3345881]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3345883 'move' call_tmp[3345881](3345886 call tableSize[3340120] this[3345873]))
    ref call_tmp[3345889]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3345891 'move' call_tmp[3345889](3345894 call startingSize[3346030] this[3345873]))
    val coerce_tmp[3346058]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3346062 'move' coerce_tmp[3346058](3346060 'deref' call_tmp[3345881]))
    val coerce_tmp[3346064]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3346068 'move' coerce_tmp[3346064](3346066 'deref' call_tmp[3345889]))
    (3345897 'move' tmp[3345879](3345900 call >[55238] coerce_tmp[3346058] coerce_tmp[3346064]))
    val call_tmp[3345903]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3346073 'end of statement')
    val tmp[3345916]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3345918]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3345920]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3345922 'move' call_tmp[3345920] tmp[3345879])
    (3345927 'move' tmp[3345918] call_tmp[3345920])
    if tmp[3345918]
    {
      val tmp[3345934]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3345936]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3345938 'move' call_tmp[3345936](3345941 call tableNumFullSlots[3345794] this[3345873]))
      ref call_tmp[3345944]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3345946 'move' call_tmp[3345944](3345949 call tableSize[3340120] this[3345873]))
      val call_tmp[3345952]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const cast_tmp[3346076]:int(64)[10] "dead after last mention" "const" "temp"
      (3346079 'move' cast_tmp[3346076](3346077 'deref' call_tmp[3345944]))
      (3345954 'move' call_tmp[3345952](3345957 'cast' real(64)[13] cast_tmp[3346076]))
      val call_tmp[3345960]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3346082]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3346086 'move' coerce_tmp[3346082](3346084 'deref' call_tmp[3345936]))
      val coerce_tmp[3346088]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3346094 'move' coerce_tmp[3346088](3346090 'cast' real(64)[13] coerce_tmp[3346082]))
      (3345962 'move' call_tmp[3345960](3345965 call /[59825] coerce_tmp[3346088] call_tmp[3345952]))
      ref call_tmp[3345968]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (3345970 'move' call_tmp[3345968](3345973 call resizeThreshold[3346097] this[3345873]))
      val call_tmp[3345976]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3346125]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3346129 'move' coerce_tmp[3346125](3346127 'deref' call_tmp[3345968]))
      val coerce_tmp[3346131]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3346137 'move' coerce_tmp[3346131](3346133 'cast' real(64)[13] 4))
      (3345978 'move' call_tmp[3345976](3345981 call /[59825] coerce_tmp[3346125] coerce_tmp[3346131]))
      val call_tmp[3345984]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3345986 'move' call_tmp[3345984](3345989 call <[55101] call_tmp[3345960] call_tmp[3345976]))
      (3345992 'move' tmp[3345934] call_tmp[3345984])
      (3345997 'move' tmp[3345916] tmp[3345934])
    }
    {
      (3346003 'move' tmp[3345916] 0)
    }
    val call_tmp[3346009]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3346011 'move' call_tmp[3346009] tmp[3345916])
    if call_tmp[3346009]
    {
      (3346022 call resize[3346141] this[3345873] 0)
    }
    (3346026 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].maybeShrinkAfterRemove[3363395](ref arg this[3363399]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[3363405]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3363407]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3363409 'move' call_tmp[3363407](3363412 call tableSize[3355205] this[3363399]))
    ref call_tmp[3363415]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3363417 'move' call_tmp[3363415](3363420 call startingSize[3363556] this[3363399]))
    val coerce_tmp[3363584]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3363588 'move' coerce_tmp[3363584](3363586 'deref' call_tmp[3363407]))
    val coerce_tmp[3363590]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3363594 'move' coerce_tmp[3363590](3363592 'deref' call_tmp[3363415]))
    (3363423 'move' tmp[3363405](3363426 call >[55238] coerce_tmp[3363584] coerce_tmp[3363590]))
    val call_tmp[3363429]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3363599 'end of statement')
    val tmp[3363442]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3363444]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3363446]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3363448 'move' call_tmp[3363446] tmp[3363405])
    (3363453 'move' tmp[3363444] call_tmp[3363446])
    if tmp[3363444]
    {
      val tmp[3363460]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3363462]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3363464 'move' call_tmp[3363462](3363467 call tableNumFullSlots[3363320] this[3363399]))
      ref call_tmp[3363470]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3363472 'move' call_tmp[3363470](3363475 call tableSize[3355205] this[3363399]))
      val call_tmp[3363478]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const cast_tmp[3363602]:int(64)[10] "dead after last mention" "const" "temp"
      (3363605 'move' cast_tmp[3363602](3363603 'deref' call_tmp[3363470]))
      (3363480 'move' call_tmp[3363478](3363483 'cast' real(64)[13] cast_tmp[3363602]))
      val call_tmp[3363486]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3363608]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3363612 'move' coerce_tmp[3363608](3363610 'deref' call_tmp[3363462]))
      val coerce_tmp[3363614]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3363620 'move' coerce_tmp[3363614](3363616 'cast' real(64)[13] coerce_tmp[3363608]))
      (3363488 'move' call_tmp[3363486](3363491 call /[59825] coerce_tmp[3363614] call_tmp[3363478]))
      ref call_tmp[3363494]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (3363496 'move' call_tmp[3363494](3363499 call resizeThreshold[3363623] this[3363399]))
      val call_tmp[3363502]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3363651]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3363655 'move' coerce_tmp[3363651](3363653 'deref' call_tmp[3363494]))
      val coerce_tmp[3363657]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3363663 'move' coerce_tmp[3363657](3363659 'cast' real(64)[13] 4))
      (3363504 'move' call_tmp[3363502](3363507 call /[59825] coerce_tmp[3363651] coerce_tmp[3363657]))
      val call_tmp[3363510]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3363512 'move' call_tmp[3363510](3363515 call <[55101] call_tmp[3363486] call_tmp[3363502]))
      (3363518 'move' tmp[3363460] call_tmp[3363510])
      (3363523 'move' tmp[3363442] tmp[3363460])
    }
    {
      (3363529 'move' tmp[3363442] 0)
    }
    val call_tmp[3363535]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3363537 'move' call_tmp[3363535] tmp[3363442])
    if call_tmp[3363535]
    {
      (3363548 call resize[3363667] this[3363399] 0)
    }
    (3363552 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].allocateTable[1943023](const  ref arg this[1943027]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const in arg size[1943029]:int(64)[10]) : _ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1943031]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "RVV" "temp"
    val call_tmp[1943039]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1943041 'move' call_tmp[1943039](1943044 call ==[52746] size[1943029] 0))
    val call_tmp[1943047]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1943049 'move' call_tmp[1943047] call_tmp[1943039])
    if call_tmp[1943047]
    {
      (1949572 '=' ret[1943031](1949568 'cast' _ddata(chpl_TableEntry(string,Module(real(32))))[1941559] nil[32]))
      gotoReturn _end_allocateTable[1943102] _end_allocateTable[1943102]
    }
    {
      val call_tmp[1943063]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1943071]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1943079]:chpl_TableEntry(string,Module(real(32)))[1941536] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1943087]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "expr temp" "maybe param" "temp"
      (1943089 'move' call_tmp[1943087](1943092 call _allocateData[1943230] size[1943029]))
      (1943095 'move' ret[1943031] call_tmp[1943087])
      gotoReturn _end_allocateTable[1943102] _end_allocateTable[1943102]
    }
    label _end_allocateTable[1943102]
    (1943104 return ret[1943031])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].allocateTable[3303079](const  ref arg this[3303083]:_ref(chpl__hashtable(string,int(64)))[3288858], const in arg size[3303085]:int(64)[10]) : _ddata(chpl_TableEntry(string,int(64)))[3288904] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3303087]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "RVV" "temp"
    val call_tmp[3303095]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3303097 'move' call_tmp[3303095](3303100 call ==[52746] size[3303085] 0))
    val call_tmp[3303103]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3303105 'move' call_tmp[3303103] call_tmp[3303095])
    if call_tmp[3303103]
    {
      (3306539 '=' ret[3303087](3306535 'cast' _ddata(chpl_TableEntry(string,int(64)))[3288904] nil[32]))
      gotoReturn _end_allocateTable[3303158] _end_allocateTable[3303158]
    }
    {
      val call_tmp[3303119]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3303127]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3303135]:chpl_TableEntry(string,int(64))[3288881] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3303143]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "expr temp" "maybe param" "temp"
      (3303145 'move' call_tmp[3303143](3303148 call _allocateData[3303234] size[3303085]))
      (3303151 'move' ret[3303087] call_tmp[3303143])
      gotoReturn _end_allocateTable[3303158] _end_allocateTable[3303158]
    }
    label _end_allocateTable[3303158]
    (3303160 return ret[3303087])
  }
  function _ref(chpl__hashtable(string,string))[3283450].allocateTable[3340148](const  ref arg this[3340152]:_ref(chpl__hashtable(string,string))[3283450], const in arg size[3340154]:int(64)[10]) : _ddata(chpl_TableEntry(string,string))[3283496] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3340156]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "RVV" "temp"
    val call_tmp[3340164]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3340166 'move' call_tmp[3340164](3340169 call ==[52746] size[3340154] 0))
    val call_tmp[3340172]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3340174 'move' call_tmp[3340172] call_tmp[3340164])
    if call_tmp[3340172]
    {
      (3343680 '=' ret[3340156](3343676 'cast' _ddata(chpl_TableEntry(string,string))[3283496] nil[32]))
      gotoReturn _end_allocateTable[3340227] _end_allocateTable[3340227]
    }
    {
      val call_tmp[3340188]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3340196]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3340204]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3340212]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "expr temp" "maybe param" "temp"
      (3340214 'move' call_tmp[3340212](3340217 call _allocateData[3340355] size[3340154]))
      (3340220 'move' ret[3340156] call_tmp[3340212])
      gotoReturn _end_allocateTable[3340227] _end_allocateTable[3340227]
    }
    label _end_allocateTable[3340227]
    (3340229 return ret[3340156])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].allocateTable[3355233](const  ref arg this[3355237]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const in arg size[3355239]:int(64)[10]) : _ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3355241]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "RVV" "temp"
    val call_tmp[3355249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3355251 'move' call_tmp[3355249](3355254 call ==[52746] size[3355239] 0))
    val call_tmp[3355257]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3355259 'move' call_tmp[3355257] call_tmp[3355249])
    if call_tmp[3355257]
    {
      (3358765 '=' ret[3355241](3358761 'cast' _ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] nil[32]))
      gotoReturn _end_allocateTable[3355312] _end_allocateTable[3355312]
    }
    {
      val call_tmp[3355273]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3355281]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3355289]:chpl_TableEntry(string,owned ModuleSpecification?)[3283773] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3355297]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "expr temp" "maybe param" "temp"
      (3355299 'move' call_tmp[3355297](3355302 call _allocateData[3355440] size[3355239]))
      (3355305 'move' ret[3355241] call_tmp[3355297])
      gotoReturn _end_allocateTable[3355312] _end_allocateTable[3355312]
    }
    label _end_allocateTable[3355312]
    (3355314 return ret[3355241])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].allocateTable[3392367](const  ref arg this[3392371]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const in arg size[3392373]:int(64)[10]) : _ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3392375]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "RVV" "temp"
    val call_tmp[3392383]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3392385 'move' call_tmp[3392383](3392388 call ==[52746] size[3392373] 0))
    val call_tmp[3392391]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3392393 'move' call_tmp[3392391] call_tmp[3392383])
    if call_tmp[3392391]
    {
      (3395899 '=' ret[3392375](3395895 'cast' _ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] nil[32]))
      gotoReturn _end_allocateTable[3392446] _end_allocateTable[3392446]
    }
    {
      val call_tmp[3392407]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3392415]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3392423]:chpl_TableEntry(string,shared Module(real(32)))[3392238] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3392431]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "expr temp" "maybe param" "temp"
      (3392433 'move' call_tmp[3392431](3392436 call _allocateData[3392574] size[3392373]))
      (3392439 'move' ret[3392375] call_tmp[3392431])
      gotoReturn _end_allocateTable[3392446] _end_allocateTable[3392446]
    }
    label _end_allocateTable[3392446]
    (3392448 return ret[3392375])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].allocateTable[3828960](const  ref arg this[3828964]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const in arg size[3828966]:int(64)[10]) : _ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3828968]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "RVV" "temp"
    val call_tmp[3828976]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828978 'move' call_tmp[3828976](3828981 call ==[52746] size[3828966] 0))
    val call_tmp[3828984]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828986 'move' call_tmp[3828984] call_tmp[3828976])
    if call_tmp[3828984]
    {
      (3832492 '=' ret[3828968](3832488 'cast' _ddata(chpl_TableEntry(string,Module(real(64))))[3405294] nil[32]))
      gotoReturn _end_allocateTable[3829039] _end_allocateTable[3829039]
    }
    {
      val call_tmp[3829000]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3829008]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3829016]:chpl_TableEntry(string,Module(real(64)))[3405271] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3829024]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "expr temp" "maybe param" "temp"
      (3829026 'move' call_tmp[3829024](3829029 call _allocateData[3829167] size[3828966]))
      (3829032 'move' ret[3828968] call_tmp[3829024])
      gotoReturn _end_allocateTable[3829039] _end_allocateTable[3829039]
    }
    label _end_allocateTable[3829039]
    (3829041 return ret[3828968])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].allocateTable[4305520](const  ref arg this[4305524]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const in arg size[4305526]:int(64)[10]) : _ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[4305528]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "RVV" "temp"
    val call_tmp[4305536]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4305538 'move' call_tmp[4305536](4305541 call ==[52746] size[4305526] 0))
    val call_tmp[4305544]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4305546 'move' call_tmp[4305544] call_tmp[4305536])
    if call_tmp[4305544]
    {
      (4309052 '=' ret[4305528](4309048 'cast' _ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] nil[32]))
      gotoReturn _end_allocateTable[4305599] _end_allocateTable[4305599]
    }
    {
      val call_tmp[4305560]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4305568]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4305576]:chpl_TableEntry(string,shared Module(real(64)))[3855424] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[4305584]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "expr temp" "maybe param" "temp"
      (4305586 'move' call_tmp[4305584](4305589 call _allocateData[4305727] size[4305526]))
      (4305592 'move' ret[4305528] call_tmp[4305584])
      gotoReturn _end_allocateTable[4305599] _end_allocateTable[4305599]
    }
    label _end_allocateTable[4305599]
    (4305601 return ret[4305528])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].rehash[3257986](ref arg this[3257990]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const in arg newSize[3257992]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3258001]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3258003 'move' call_tmp[3258001](3258006 call tableSize[1942995] this[3257990]))
    val oldSize[3258009]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3258718]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3258722 'move' coerce_tmp[3258718](3258720 'deref' call_tmp[3258001]))
    (3258011 'move' oldSize[3258009](3258715 call chpl__initCopy[1473915] coerce_tmp[3258718] 0))
    (3258014 'end of statement')
    ref call_tmp[3258015]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "maybe param" "temp"
    (3258017 'move' call_tmp[3258015](3258020 call table[1942967] this[3257990]))
    val oldTable[3258023]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3258729]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3258733 'move' coerce_tmp[3258729](3258731 'deref' call_tmp[3258015]))
    (3258025 'move' oldTable[3258023](3258726 call chpl__initCopy[1944583] coerce_tmp[3258729] 0))
    (3258028 'end of statement')
    ref call_tmp[3258029]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3258031 'move' call_tmp[3258029](3258034 call tableSize[1942995] this[3257990]))
    (3258038 call =[52229] call_tmp[3258029] newSize[3257992])
    (3258041 'end of statement')
    ref call_tmp[3258042]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3258044 'move' call_tmp[3258042](3258047 call tableNumFullSlots[3257493] this[3257990]))
    val entries[3258050]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3258742]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3258746 'move' coerce_tmp[3258742](3258744 'deref' call_tmp[3258042]))
    (3258052 'move' entries[3258050](3258739 call chpl__initCopy[1473915] coerce_tmp[3258742] 0))
    (3258055 'end of statement')
    val call_tmp[3258056]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3258058 'move' call_tmp[3258056](3258061 call >[55238] entries[3258050] 0))
    val call_tmp[3258064]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3258066 'move' call_tmp[3258064] call_tmp[3258056])
    if call_tmp[3258064]
    {
      val call_tmp[3258073]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3258075 'move' call_tmp[3258073](3258078 call ==[52746] newSize[3257992] 0))
      val call_tmp[3258081]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3258083 'move' call_tmp[3258081] call_tmp[3258073])
      if call_tmp[3258081]
      {
        (3258091 call halt[88131] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[3258094]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "maybe param" "temp"
      (3258096 'move' call_tmp[3258094](3258099 call table[1942967] this[3257990]))
      ref call_tmp[3258102]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3258104 'move' call_tmp[3258102](3258107 call tableSize[1942995] this[3257990]))
      val call_tmp[3258110]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3258754]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3258758 'move' coerce_tmp[3258754](3258756 'deref' call_tmp[3258102]))
      (3258112 'move' call_tmp[3258110](3258118 call allocateTable[1943023] this[3257990] coerce_tmp[3258754]))
      (3258121 call =[1944473] call_tmp[3258094] call_tmp[3258110])
      (3258124 'end of statement')
      ref call_tmp[3258125]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3258127 'move' call_tmp[3258125](3258130 call rehashHelpers[3258762] this[3257990]))
      val call_tmp[3258133]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3258790]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3258796 'move' coerce_tmp[3258790](3258792 call borrow[3258798] call_tmp[3258125]))
      val coerce_tmp[3258906]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3258912 'move' coerce_tmp[3258906](3258908 'cast' borrowed RootClass?[467971] coerce_tmp[3258790]))
      (3258135 'move' call_tmp[3258133](3258138 call !=[53510] coerce_tmp[3258906] nil[32]))
      val call_tmp[3258141]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3258143 'move' call_tmp[3258141] call_tmp[3258133])
      if call_tmp[3258141]
      {
        ref call_tmp[3258150]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3258152 'move' call_tmp[3258150](3258155 call rehashHelpers[3258762] this[3257990]))
        val call_tmp[3258158]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3258160 'move' call_tmp[3258158](3258163 call postfix![3258925] call_tmp[3258150]))
        ref call_tmp[3258165]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3258167 'move' call_tmp[3258165](3258170 call tableSize[1942995] this[3257990]))
        val coerce_tmp[3259145]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3259149 'move' coerce_tmp[3259145](3259147 'deref' call_tmp[3258165]))
        (3258177 call startRehash[265641] call_tmp[3258158] coerce_tmp[3259145])
      }
      ref call_tmp[3258180]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3258182 'move' call_tmp[3258180](3258185 call tableNumDeletedSlots[3257521] this[3257990]))
      (3258189 call =[52229] call_tmp[3258180] 0)
      (3258192 'end of statement')
      {
        val _indexOfInterest[3258194]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[3258196]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        val call_tmp[3258198]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        (3258200 'move' call_tmp[3258198](3258203 call _allSlots[265237] oldSize[3258009]))
        (3258205 'move' _iterator[3258196](3258208 call _getIterator[1946146] call_tmp[3258198]))
        Defer
        {
          {
            (3258212 call _freeIterator[1947321] _iterator[3258196])
          }
        }
        ForLoop[3258221]
        {
          const oldslot[3258224]:int(64)[10] "const" "index var" "insert auto destroy"
          (3258226 'end of statement')
          (3258227 'move' oldslot[3258224] _indexOfInterest[3258194])
          (3258230 'end of statement' oldslot[3258224])
          {
            ref call_tmp[3258233]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead after last mention" "maybe param" "temp"
            (3258235 'move' call_tmp[3258233](3258238 call this[1947405] oldTable[3258023] oldslot[3258224]))
            ref call_tmp[3258240]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
            (3258242 'move' call_tmp[3258240](3258245 call status[3259161] call_tmp[3258233]))
            val call_tmp[3258248]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[3259246]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3259250 'move' coerce_tmp[3259246](3259248 'deref' call_tmp[3258240]))
            (3258250 'move' call_tmp[3258248](3258253 call ==[3259199] coerce_tmp[3259246] full[264674]))
            val call_tmp[3258256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3258258 'move' call_tmp[3258256] call_tmp[3258248])
            if call_tmp[3258256]
            {
              ref oldEntry[3258265]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "ref var"
              ref call_tmp[3258269]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
              (3258271 'move' call_tmp[3258269](3258274 call this[1947405] oldTable[3258023] oldslot[3258224]))
              (3258276 'move' oldEntry[3258265] call_tmp[3258269])
              (3258280 'end of statement')
              ref call_tmp[3258281]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3258283 'move' call_tmp[3258281](3258286 call key[3259256] oldEntry[3258265]))
              val call_tmp[3258289]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
              (3258291 'move' call_tmp[3258289](3258297 call _findSlot[3259284] this[3257990] call_tmp[3258281]))
              val tmp[3258299]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
              (3258301 'move' tmp[3258299](3260917 call chpl__initCopy[3260920] call_tmp[3258289] 0))
              1
              (3258308 'end of statement')
              ref call_tmp[3258309]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3258311 'move' call_tmp[3258309](3261226 '.' tmp[3258299] x0[3257006]))
              val foundSlot[3258316]:bool[19] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3261232]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3261236 'move' coerce_tmp[3261232](3261234 'deref' call_tmp[3258309]))
              (3258318 'move' foundSlot[3258316](3261229 call chpl__initCopy[1757859] coerce_tmp[3261232] 0))
              ref call_tmp[3258321]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3258323 'move' call_tmp[3258321](3261241 '.' tmp[3258299] x1[3257008]))
              val newslot[3258328]:int(64)[10] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3261247]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3261251 'move' coerce_tmp[3261247](3261249 'deref' call_tmp[3258321]))
              (3258330 'move' newslot[3258328](3261244 call chpl__initCopy[1473915] coerce_tmp[3261247] 0))
              (3258333 'end of statement')
              val call_tmp[3258334]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3258336 'move' call_tmp[3258334] foundSlot[3258316])
              if call_tmp[3258334]
              {
                (3258344 call halt[88131] "duplicate element found while resizing for key")
              }
              val call_tmp[3258347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3258349 'move' call_tmp[3258347](3258352 call <[1469576] newslot[3258328] 0))
              val call_tmp[3258355]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3258357 'move' call_tmp[3258355] call_tmp[3258347])
              if call_tmp[3258355]
              {
                (3258365 call halt[1483780] "couldn't add element during resize - got slot " newslot[3258328] " for key")
                (3258369 'end of statement' newslot[3258328])
              }
              ref dstSlot[3258372]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "ref var"
              ref call_tmp[3258376]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[3261258]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead at end of block" "temp"
              (3261260 'move' _this_tmp_[3261258](3258381 call table[1942967] this[3257990]))
              val coerce_tmp[3261265]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3261269 'move' coerce_tmp[3261265](3261267 'deref' _this_tmp_[3261258]))
              (3258378 'move' call_tmp[3258376](3258384 call this[1947405] coerce_tmp[3261265] newslot[3258328]))
              (3258386 'move' dstSlot[3258372] call_tmp[3258376])
              (3258390 'end of statement' oldTable[3258023] oldslot[3258224] newslot[3258328])
              ref call_tmp[3258394]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
              (3258396 'move' call_tmp[3258394](3258399 call status[3259161] dstSlot[3258372]))
              (3258403 call =[3261273] call_tmp[3258394] full[264674])
              (3258406 'end of statement' dstSlot[3258372])
              ref call_tmp[3258408]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3258410 'move' call_tmp[3258408](3258413 call key[3259256] dstSlot[3258372]))
              ref call_tmp[3258416]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3258418 'move' call_tmp[3258416](3258421 call key[3259256] oldEntry[3258265]))
              val call_tmp[3258424]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3258426 'move' call_tmp[3258424](3258429 call moveFrom[3261311] call_tmp[3258416]))
              (3258432 call moveInitialize[3261406] call_tmp[3258408] call_tmp[3258424])
              (3258435 'end of statement' dstSlot[3258372] oldEntry[3258265])
              ref call_tmp[3258438]:_ref(Module(real(32)))[1935660] "dead after last mention" "maybe param" "temp"
              (3258440 'move' call_tmp[3258438](3258443 call val[3261562] dstSlot[3258372]))
              ref call_tmp[3258446]:_ref(Module(real(32)))[1935660] "dead after last mention" "maybe param" "temp"
              (3258448 'move' call_tmp[3258446](3258451 call val[3261562] oldEntry[3258265]))
              val call_tmp[3258454]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp"
              (3258456 'move' call_tmp[3258454](3258459 call moveFrom[3261591] call_tmp[3258446]))
              (3258462 call moveInitialize[3261692] call_tmp[3258438] call_tmp[3258454])
              (3258465 'end of statement' dstSlot[3258372] oldEntry[3258265])
              ref call_tmp[3258468]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
              (3258470 'move' call_tmp[3258468](3258473 call rehashHelpers[3258762] this[3257990]))
              val call_tmp[3258476]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3261843]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3261849 'move' coerce_tmp[3261843](3261845 call borrow[3258798] call_tmp[3258468]))
              val coerce_tmp[3261852]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3261858 'move' coerce_tmp[3261852](3261854 'cast' borrowed RootClass?[467971] coerce_tmp[3261843]))
              (3258478 'move' call_tmp[3258476](3258481 call !=[53510] coerce_tmp[3261852] nil[32]))
              val call_tmp[3258484]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3258486 'move' call_tmp[3258484] call_tmp[3258476])
              if call_tmp[3258484]
              {
                ref call_tmp[3258493]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
                (3258495 'move' call_tmp[3258493](3258498 call rehashHelpers[3258762] this[3257990]))
                val call_tmp[3258501]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
                (3258503 'move' call_tmp[3258501](3258506 call postfix![3258925] call_tmp[3258493]))
                (3258512 call moveElementDuringRehash[265654] call_tmp[3258501] oldslot[3258224] newslot[3258328])
                (3258515 'end of statement' oldslot[3258224] newslot[3258328])
              }
            }
          }
          label _continueLabel[3258520]
          _indexOfInterest[3258194]
          _iterator[3258196]
        }
        label _breakLabel[3258522]
      }
      ref call_tmp[3258524]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3258526 'move' call_tmp[3258524](3258529 call rehashHelpers[3258762] this[3257990]))
      val call_tmp[3258532]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3261865]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3261871 'move' coerce_tmp[3261865](3261867 call borrow[3258798] call_tmp[3258524]))
      val coerce_tmp[3261874]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3261880 'move' coerce_tmp[3261874](3261876 'cast' borrowed RootClass?[467971] coerce_tmp[3261865]))
      (3258534 'move' call_tmp[3258532](3258537 call !=[53510] coerce_tmp[3261874] nil[32]))
      val call_tmp[3258540]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3258542 'move' call_tmp[3258540] call_tmp[3258532])
      if call_tmp[3258540]
      {
        ref call_tmp[3258549]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3258551 'move' call_tmp[3258549](3258554 call rehashHelpers[3258762] this[3257990]))
        val call_tmp[3258557]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3258559 'move' call_tmp[3258557](3258562 call postfix![3258925] call_tmp[3258549]))
        (3258568 call finishRehash[265671] call_tmp[3258557] oldSize[3258009])
        (3258570 'end of statement' oldSize[3258009])
      }
      (3258574 call _freeData[3261886] oldTable[3258023] oldSize[3258009])
      (3258577 'end of statement' oldTable[3258023] oldSize[3258009])
    }
    {
      ref call_tmp[3258581]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3258583 'move' call_tmp[3258581](3258586 call rehashHelpers[3258762] this[3257990]))
      val call_tmp[3258589]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3262065]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3262071 'move' coerce_tmp[3262065](3262067 call borrow[3258798] call_tmp[3258581]))
      val coerce_tmp[3262074]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3262080 'move' coerce_tmp[3262074](3262076 'cast' borrowed RootClass?[467971] coerce_tmp[3262065]))
      (3258591 'move' call_tmp[3258589](3258594 call !=[53510] coerce_tmp[3262074] nil[32]))
      val call_tmp[3258597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3258599 'move' call_tmp[3258597] call_tmp[3258589])
      if call_tmp[3258597]
      {
        ref call_tmp[3258606]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3258608 'move' call_tmp[3258606](3258611 call rehashHelpers[3258762] this[3257990]))
        val call_tmp[3258614]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3258616 'move' call_tmp[3258614](3258619 call postfix![3258925] call_tmp[3258606]))
        ref call_tmp[3258621]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3258623 'move' call_tmp[3258621](3258626 call tableSize[1942995] this[3257990]))
        val coerce_tmp[3262086]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3262090 'move' coerce_tmp[3262086](3262088 'deref' call_tmp[3258621]))
        (3258633 call startRehash[265641] call_tmp[3258614] coerce_tmp[3262086])
        (3258635 'end of statement')
        ref call_tmp[3258636]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3258638 'move' call_tmp[3258636](3258641 call rehashHelpers[3258762] this[3257990]))
        val call_tmp[3258644]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3258646 'move' call_tmp[3258644](3258649 call postfix![3258925] call_tmp[3258636]))
        (3258655 call finishRehash[265671] call_tmp[3258644] oldSize[3258009])
        (3258657 'end of statement' oldSize[3258009])
      }
      (3258661 call _freeData[3261886] oldTable[3258023] oldSize[3258009])
      (3258664 'end of statement' oldTable[3258023] oldSize[3258009])
      ref call_tmp[3258667]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "maybe param" "temp"
      (3258669 'move' call_tmp[3258667](3258672 call table[1942967] this[3257990]))
      ref call_tmp[3258675]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3258677 'move' call_tmp[3258675](3258680 call tableSize[1942995] this[3257990]))
      val call_tmp[3258683]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3262099]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3262103 'move' coerce_tmp[3262099](3262101 'deref' call_tmp[3258675]))
      (3258685 'move' call_tmp[3258683](3258691 call allocateTable[1943023] this[3257990] coerce_tmp[3262099]))
      (3258694 call =[1944473] call_tmp[3258667] call_tmp[3258683])
      (3258697 'end of statement')
      ref call_tmp[3258698]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3258700 'move' call_tmp[3258698](3258703 call tableNumDeletedSlots[3257521] this[3257990]))
      (3258707 call =[52229] call_tmp[3258698] 0)
    }
    (3258711 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].rehash[3302264](ref arg this[3302268]:_ref(chpl__hashtable(string,int(64)))[3288858], const in arg newSize[3302270]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3302279]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3302281 'move' call_tmp[3302279](3302284 call tableSize[3301883] this[3302268]))
    val oldSize[3302287]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3302996]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3303000 'move' coerce_tmp[3302996](3302998 'deref' call_tmp[3302279]))
    (3302289 'move' oldSize[3302287](3302993 call chpl__initCopy[1473915] coerce_tmp[3302996] 0))
    (3302292 'end of statement')
    ref call_tmp[3302293]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "maybe param" "temp"
    (3302295 'move' call_tmp[3302293](3302298 call table[3303003] this[3302268]))
    val oldTable[3302301]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3303054]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3303058 'move' coerce_tmp[3303054](3303056 'deref' call_tmp[3302293]))
    (3302303 'move' oldTable[3302301](3303031 call chpl__initCopy[3303034] coerce_tmp[3303054] 0))
    (3302306 'end of statement')
    ref call_tmp[3302307]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3302309 'move' call_tmp[3302307](3302312 call tableSize[3301883] this[3302268]))
    (3302316 call =[52229] call_tmp[3302307] newSize[3302270])
    (3302319 'end of statement')
    ref call_tmp[3302320]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3302322 'move' call_tmp[3302320](3302325 call tableNumFullSlots[3301760] this[3302268]))
    val entries[3302328]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3303067]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3303071 'move' coerce_tmp[3303067](3303069 'deref' call_tmp[3302320]))
    (3302330 'move' entries[3302328](3303064 call chpl__initCopy[1473915] coerce_tmp[3303067] 0))
    (3302333 'end of statement')
    val call_tmp[3302334]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3302336 'move' call_tmp[3302334](3302339 call >[55238] entries[3302328] 0))
    val call_tmp[3302342]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3302344 'move' call_tmp[3302342] call_tmp[3302334])
    if call_tmp[3302342]
    {
      val call_tmp[3302351]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3302353 'move' call_tmp[3302351](3302356 call ==[52746] newSize[3302270] 0))
      val call_tmp[3302359]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3302361 'move' call_tmp[3302359] call_tmp[3302351])
      if call_tmp[3302359]
      {
        (3302369 call halt[88131] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[3302372]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "maybe param" "temp"
      (3302374 'move' call_tmp[3302372](3302377 call table[3303003] this[3302268]))
      ref call_tmp[3302380]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3302382 'move' call_tmp[3302380](3302385 call tableSize[3301883] this[3302268]))
      val call_tmp[3302388]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3303162]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3303166 'move' coerce_tmp[3303162](3303164 'deref' call_tmp[3302380]))
      (3302390 'move' call_tmp[3302388](3302396 call allocateTable[3303079] this[3302268] coerce_tmp[3303162]))
      (3302399 call =[3304477] call_tmp[3302372] call_tmp[3302388])
      (3302402 'end of statement')
      ref call_tmp[3302403]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3302405 'move' call_tmp[3302403](3302408 call rehashHelpers[3306542] this[3302268]))
      val call_tmp[3302411]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3306570]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3306576 'move' coerce_tmp[3306570](3306572 call borrow[3258798] call_tmp[3302403]))
      val coerce_tmp[3306579]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3306585 'move' coerce_tmp[3306579](3306581 'cast' borrowed RootClass?[467971] coerce_tmp[3306570]))
      (3302413 'move' call_tmp[3302411](3302416 call !=[53510] coerce_tmp[3306579] nil[32]))
      val call_tmp[3302419]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3302421 'move' call_tmp[3302419] call_tmp[3302411])
      if call_tmp[3302419]
      {
        ref call_tmp[3302428]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3302430 'move' call_tmp[3302428](3302433 call rehashHelpers[3306542] this[3302268]))
        val call_tmp[3302436]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3302438 'move' call_tmp[3302436](3302441 call postfix![3258925] call_tmp[3302428]))
        ref call_tmp[3302443]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3302445 'move' call_tmp[3302443](3302448 call tableSize[3301883] this[3302268]))
        val coerce_tmp[3306591]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3306595 'move' coerce_tmp[3306591](3306593 'deref' call_tmp[3302443]))
        (3302455 call startRehash[265641] call_tmp[3302436] coerce_tmp[3306591])
      }
      ref call_tmp[3302458]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3302460 'move' call_tmp[3302458](3302463 call tableNumDeletedSlots[3301788] this[3302268]))
      (3302467 call =[52229] call_tmp[3302458] 0)
      (3302470 'end of statement')
      {
        val _indexOfInterest[3302472]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[3302474]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        val call_tmp[3302476]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        (3302478 'move' call_tmp[3302476](3302481 call _allSlots[265237] oldSize[3302287]))
        (3302483 'move' _iterator[3302474](3302486 call _getIterator[1946146] call_tmp[3302476]))
        Defer
        {
          {
            (3302490 call _freeIterator[1947321] _iterator[3302474])
          }
        }
        ForLoop[3302499]
        {
          const oldslot[3302502]:int(64)[10] "const" "index var" "insert auto destroy"
          (3302504 'end of statement')
          (3302505 'move' oldslot[3302502] _indexOfInterest[3302472])
          (3302508 'end of statement' oldslot[3302502])
          {
            ref call_tmp[3302511]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
            (3302513 'move' call_tmp[3302511](3302516 call this[3306115] oldTable[3302301] oldslot[3302502]))
            ref call_tmp[3302518]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
            (3302520 'move' call_tmp[3302518](3302523 call status[3306607] call_tmp[3302511]))
            val call_tmp[3302526]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[3306635]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3306639 'move' coerce_tmp[3306635](3306637 'deref' call_tmp[3302518]))
            (3302528 'move' call_tmp[3302526](3302531 call ==[3259199] coerce_tmp[3306635] full[264674]))
            val call_tmp[3302534]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3302536 'move' call_tmp[3302534] call_tmp[3302526])
            if call_tmp[3302534]
            {
              ref oldEntry[3302543]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "ref var"
              ref call_tmp[3302547]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "maybe param" "temp"
              (3302549 'move' call_tmp[3302547](3302552 call this[3306115] oldTable[3302301] oldslot[3302502]))
              (3302554 'move' oldEntry[3302543] call_tmp[3302547])
              (3302558 'end of statement')
              ref call_tmp[3302559]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3302561 'move' call_tmp[3302559](3302564 call key[3306645] oldEntry[3302543]))
              val call_tmp[3302567]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
              (3302569 'move' call_tmp[3302567](3302575 call _findSlot[3306673] this[3302268] call_tmp[3302559]))
              val tmp[3302577]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
              (3302579 'move' tmp[3302577](3307732 call chpl__initCopy[3260920] call_tmp[3302567] 0))
              1
              (3302586 'end of statement')
              ref call_tmp[3302587]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3302589 'move' call_tmp[3302587](3307740 '.' tmp[3302577] x0[3257006]))
              val foundSlot[3302594]:bool[19] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3307746]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3307750 'move' coerce_tmp[3307746](3307748 'deref' call_tmp[3302587]))
              (3302596 'move' foundSlot[3302594](3307743 call chpl__initCopy[1757859] coerce_tmp[3307746] 0))
              ref call_tmp[3302599]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3302601 'move' call_tmp[3302599](3307755 '.' tmp[3302577] x1[3257008]))
              val newslot[3302606]:int(64)[10] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3307761]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3307765 'move' coerce_tmp[3307761](3307763 'deref' call_tmp[3302599]))
              (3302608 'move' newslot[3302606](3307758 call chpl__initCopy[1473915] coerce_tmp[3307761] 0))
              (3302611 'end of statement')
              val call_tmp[3302612]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3302614 'move' call_tmp[3302612] foundSlot[3302594])
              if call_tmp[3302612]
              {
                (3302622 call halt[88131] "duplicate element found while resizing for key")
              }
              val call_tmp[3302625]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3302627 'move' call_tmp[3302625](3302630 call <[1469576] newslot[3302606] 0))
              val call_tmp[3302633]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3302635 'move' call_tmp[3302633] call_tmp[3302625])
              if call_tmp[3302633]
              {
                (3302643 call halt[1483780] "couldn't add element during resize - got slot " newslot[3302606] " for key")
                (3302647 'end of statement' newslot[3302606])
              }
              ref dstSlot[3302650]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "ref var"
              ref call_tmp[3302654]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[3307772]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead at end of block" "temp"
              (3307774 'move' _this_tmp_[3307772](3302659 call table[3303003] this[3302268]))
              val coerce_tmp[3307779]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3307783 'move' coerce_tmp[3307779](3307781 'deref' _this_tmp_[3307772]))
              (3302656 'move' call_tmp[3302654](3302662 call this[3306115] coerce_tmp[3307779] newslot[3302606]))
              (3302664 'move' dstSlot[3302650] call_tmp[3302654])
              (3302668 'end of statement' oldTable[3302301] oldslot[3302502] newslot[3302606])
              ref call_tmp[3302672]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
              (3302674 'move' call_tmp[3302672](3302677 call status[3306607] dstSlot[3302650]))
              (3302681 call =[3261273] call_tmp[3302672] full[264674])
              (3302684 'end of statement' dstSlot[3302650])
              ref call_tmp[3302686]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3302688 'move' call_tmp[3302686](3302691 call key[3306645] dstSlot[3302650]))
              ref call_tmp[3302694]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3302696 'move' call_tmp[3302694](3302699 call key[3306645] oldEntry[3302543]))
              val call_tmp[3302702]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3302704 'move' call_tmp[3302702](3302707 call moveFrom[3261311] call_tmp[3302694]))
              (3302710 call moveInitialize[3261406] call_tmp[3302686] call_tmp[3302702])
              (3302713 'end of statement' dstSlot[3302650] oldEntry[3302543])
              ref call_tmp[3302716]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3302718 'move' call_tmp[3302716](3302721 call val[3307792] dstSlot[3302650]))
              ref call_tmp[3302724]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3302726 'move' call_tmp[3302724](3302729 call val[3307792] oldEntry[3302543]))
              val call_tmp[3302732]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (3302734 'move' call_tmp[3302732](3302737 call moveFrom[3307821] call_tmp[3302724]))
              (3302740 call moveInitialize[3307920] call_tmp[3302716] call_tmp[3302732])
              (3302743 'end of statement' dstSlot[3302650] oldEntry[3302543])
              ref call_tmp[3302746]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
              (3302748 'move' call_tmp[3302746](3302751 call rehashHelpers[3306542] this[3302268]))
              val call_tmp[3302754]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3308071]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3308077 'move' coerce_tmp[3308071](3308073 call borrow[3258798] call_tmp[3302746]))
              val coerce_tmp[3308080]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3308086 'move' coerce_tmp[3308080](3308082 'cast' borrowed RootClass?[467971] coerce_tmp[3308071]))
              (3302756 'move' call_tmp[3302754](3302759 call !=[53510] coerce_tmp[3308080] nil[32]))
              val call_tmp[3302762]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3302764 'move' call_tmp[3302762] call_tmp[3302754])
              if call_tmp[3302762]
              {
                ref call_tmp[3302771]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
                (3302773 'move' call_tmp[3302771](3302776 call rehashHelpers[3306542] this[3302268]))
                val call_tmp[3302779]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
                (3302781 'move' call_tmp[3302779](3302784 call postfix![3258925] call_tmp[3302771]))
                (3302790 call moveElementDuringRehash[265654] call_tmp[3302779] oldslot[3302502] newslot[3302606])
                (3302793 'end of statement' oldslot[3302502] newslot[3302606])
              }
            }
          }
          label _continueLabel[3302798]
          _indexOfInterest[3302472]
          _iterator[3302474]
        }
        label _breakLabel[3302800]
      }
      ref call_tmp[3302802]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3302804 'move' call_tmp[3302802](3302807 call rehashHelpers[3306542] this[3302268]))
      val call_tmp[3302810]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3308093]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308099 'move' coerce_tmp[3308093](3308095 call borrow[3258798] call_tmp[3302802]))
      val coerce_tmp[3308102]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308108 'move' coerce_tmp[3308102](3308104 'cast' borrowed RootClass?[467971] coerce_tmp[3308093]))
      (3302812 'move' call_tmp[3302810](3302815 call !=[53510] coerce_tmp[3308102] nil[32]))
      val call_tmp[3302818]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3302820 'move' call_tmp[3302818] call_tmp[3302810])
      if call_tmp[3302818]
      {
        ref call_tmp[3302827]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3302829 'move' call_tmp[3302827](3302832 call rehashHelpers[3306542] this[3302268]))
        val call_tmp[3302835]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3302837 'move' call_tmp[3302835](3302840 call postfix![3258925] call_tmp[3302827]))
        (3302846 call finishRehash[265671] call_tmp[3302835] oldSize[3302287])
        (3302848 'end of statement' oldSize[3302287])
      }
      (3302852 call _freeData[3308114] oldTable[3302301] oldSize[3302287])
      (3302855 'end of statement' oldTable[3302301] oldSize[3302287])
    }
    {
      ref call_tmp[3302859]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3302861 'move' call_tmp[3302859](3302864 call rehashHelpers[3306542] this[3302268]))
      val call_tmp[3302867]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3308293]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308299 'move' coerce_tmp[3308293](3308295 call borrow[3258798] call_tmp[3302859]))
      val coerce_tmp[3308302]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308308 'move' coerce_tmp[3308302](3308304 'cast' borrowed RootClass?[467971] coerce_tmp[3308293]))
      (3302869 'move' call_tmp[3302867](3302872 call !=[53510] coerce_tmp[3308302] nil[32]))
      val call_tmp[3302875]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3302877 'move' call_tmp[3302875] call_tmp[3302867])
      if call_tmp[3302875]
      {
        ref call_tmp[3302884]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3302886 'move' call_tmp[3302884](3302889 call rehashHelpers[3306542] this[3302268]))
        val call_tmp[3302892]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3302894 'move' call_tmp[3302892](3302897 call postfix![3258925] call_tmp[3302884]))
        ref call_tmp[3302899]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3302901 'move' call_tmp[3302899](3302904 call tableSize[3301883] this[3302268]))
        val coerce_tmp[3308314]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3308318 'move' coerce_tmp[3308314](3308316 'deref' call_tmp[3302899]))
        (3302911 call startRehash[265641] call_tmp[3302892] coerce_tmp[3308314])
        (3302913 'end of statement')
        ref call_tmp[3302914]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3302916 'move' call_tmp[3302914](3302919 call rehashHelpers[3306542] this[3302268]))
        val call_tmp[3302922]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3302924 'move' call_tmp[3302922](3302927 call postfix![3258925] call_tmp[3302914]))
        (3302933 call finishRehash[265671] call_tmp[3302922] oldSize[3302287])
        (3302935 'end of statement' oldSize[3302287])
      }
      (3302939 call _freeData[3308114] oldTable[3302301] oldSize[3302287])
      (3302942 'end of statement' oldTable[3302301] oldSize[3302287])
      ref call_tmp[3302945]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "maybe param" "temp"
      (3302947 'move' call_tmp[3302945](3302950 call table[3303003] this[3302268]))
      ref call_tmp[3302953]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3302955 'move' call_tmp[3302953](3302958 call tableSize[3301883] this[3302268]))
      val call_tmp[3302961]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3308327]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308331 'move' coerce_tmp[3308327](3308329 'deref' call_tmp[3302953]))
      (3302963 'move' call_tmp[3302961](3302969 call allocateTable[3303079] this[3302268] coerce_tmp[3308327]))
      (3302972 call =[3304477] call_tmp[3302945] call_tmp[3302961])
      (3302975 'end of statement')
      ref call_tmp[3302976]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3302978 'move' call_tmp[3302976](3302981 call tableNumDeletedSlots[3301788] this[3302268]))
      (3302985 call =[52229] call_tmp[3302976] 0)
    }
    (3302989 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].rehash[3346460](ref arg this[3346464]:_ref(chpl__hashtable(string,string))[3283450], const in arg newSize[3346466]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3346475]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3346477 'move' call_tmp[3346475](3346480 call tableSize[3340120] this[3346464]))
    val oldSize[3346483]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3347192]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3347196 'move' coerce_tmp[3347192](3347194 'deref' call_tmp[3346475]))
    (3346485 'move' oldSize[3346483](3347189 call chpl__initCopy[1473915] coerce_tmp[3347192] 0))
    (3346488 'end of statement')
    ref call_tmp[3346489]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "maybe param" "temp"
    (3346491 'move' call_tmp[3346489](3346494 call table[3340092] this[3346464]))
    val oldTable[3346497]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3347203]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3347207 'move' coerce_tmp[3347203](3347205 'deref' call_tmp[3346489]))
    (3346499 'move' oldTable[3346497](3347200 call chpl__initCopy[3341708] coerce_tmp[3347203] 0))
    (3346502 'end of statement')
    ref call_tmp[3346503]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3346505 'move' call_tmp[3346503](3346508 call tableSize[3340120] this[3346464]))
    (3346512 call =[52229] call_tmp[3346503] newSize[3346466])
    (3346515 'end of statement')
    ref call_tmp[3346516]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3346518 'move' call_tmp[3346516](3346521 call tableNumFullSlots[3345794] this[3346464]))
    val entries[3346524]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3347216]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3347220 'move' coerce_tmp[3347216](3347218 'deref' call_tmp[3346516]))
    (3346526 'move' entries[3346524](3347213 call chpl__initCopy[1473915] coerce_tmp[3347216] 0))
    (3346529 'end of statement')
    val call_tmp[3346530]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3346532 'move' call_tmp[3346530](3346535 call >[55238] entries[3346524] 0))
    val call_tmp[3346538]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3346540 'move' call_tmp[3346538] call_tmp[3346530])
    if call_tmp[3346538]
    {
      val call_tmp[3346547]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3346549 'move' call_tmp[3346547](3346552 call ==[52746] newSize[3346466] 0))
      val call_tmp[3346555]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3346557 'move' call_tmp[3346555] call_tmp[3346547])
      if call_tmp[3346555]
      {
        (3346565 call halt[88131] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[3346568]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "maybe param" "temp"
      (3346570 'move' call_tmp[3346568](3346573 call table[3340092] this[3346464]))
      ref call_tmp[3346576]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3346578 'move' call_tmp[3346576](3346581 call tableSize[3340120] this[3346464]))
      val call_tmp[3346584]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3347228]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3347232 'move' coerce_tmp[3347228](3347230 'deref' call_tmp[3346576]))
      (3346586 'move' call_tmp[3346584](3346592 call allocateTable[3340148] this[3346464] coerce_tmp[3347228]))
      (3346595 call =[3341598] call_tmp[3346568] call_tmp[3346584])
      (3346598 'end of statement')
      ref call_tmp[3346599]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3346601 'move' call_tmp[3346599](3346604 call rehashHelpers[3347236] this[3346464]))
      val call_tmp[3346607]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3347264]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3347270 'move' coerce_tmp[3347264](3347266 call borrow[3258798] call_tmp[3346599]))
      val coerce_tmp[3347273]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3347279 'move' coerce_tmp[3347273](3347275 'cast' borrowed RootClass?[467971] coerce_tmp[3347264]))
      (3346609 'move' call_tmp[3346607](3346612 call !=[53510] coerce_tmp[3347273] nil[32]))
      val call_tmp[3346615]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3346617 'move' call_tmp[3346615] call_tmp[3346607])
      if call_tmp[3346615]
      {
        ref call_tmp[3346624]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3346626 'move' call_tmp[3346624](3346629 call rehashHelpers[3347236] this[3346464]))
        val call_tmp[3346632]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3346634 'move' call_tmp[3346632](3346637 call postfix![3258925] call_tmp[3346624]))
        ref call_tmp[3346639]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3346641 'move' call_tmp[3346639](3346644 call tableSize[3340120] this[3346464]))
        val coerce_tmp[3347285]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3347289 'move' coerce_tmp[3347285](3347287 'deref' call_tmp[3346639]))
        (3346651 call startRehash[265641] call_tmp[3346632] coerce_tmp[3347285])
      }
      ref call_tmp[3346654]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3346656 'move' call_tmp[3346654](3346659 call tableNumDeletedSlots[3345823] this[3346464]))
      (3346663 call =[52229] call_tmp[3346654] 0)
      (3346666 'end of statement')
      {
        val _indexOfInterest[3346668]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[3346670]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        val call_tmp[3346672]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        (3346674 'move' call_tmp[3346672](3346677 call _allSlots[265237] oldSize[3346483]))
        (3346679 'move' _iterator[3346670](3346682 call _getIterator[1946146] call_tmp[3346672]))
        Defer
        {
          {
            (3346686 call _freeIterator[1947321] _iterator[3346670])
          }
        }
        ForLoop[3346695]
        {
          const oldslot[3346698]:int(64)[10] "const" "index var" "insert auto destroy"
          (3346700 'end of statement')
          (3346701 'move' oldslot[3346698] _indexOfInterest[3346668])
          (3346704 'end of statement' oldslot[3346698])
          {
            ref call_tmp[3346707]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
            (3346709 'move' call_tmp[3346707](3346712 call this[3343256] oldTable[3346497] oldslot[3346698]))
            ref call_tmp[3346714]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
            (3346716 'move' call_tmp[3346714](3346719 call status[3345291] call_tmp[3346707]))
            val call_tmp[3346722]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[3347302]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3347306 'move' coerce_tmp[3347302](3347304 'deref' call_tmp[3346714]))
            (3346724 'move' call_tmp[3346722](3346727 call ==[3259199] coerce_tmp[3347302] full[264674]))
            val call_tmp[3346730]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3346732 'move' call_tmp[3346730] call_tmp[3346722])
            if call_tmp[3346730]
            {
              ref oldEntry[3346739]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "ref var"
              ref call_tmp[3346743]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
              (3346745 'move' call_tmp[3346743](3346748 call this[3343256] oldTable[3346497] oldslot[3346698]))
              (3346750 'move' oldEntry[3346739] call_tmp[3346743])
              (3346754 'end of statement')
              ref call_tmp[3346755]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3346757 'move' call_tmp[3346755](3346760 call key[3345732] oldEntry[3346739]))
              val call_tmp[3346763]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
              (3346765 'move' call_tmp[3346763](3346771 call _findSlot[3347313] this[3346464] call_tmp[3346755]))
              val tmp[3346773]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
              (3346775 'move' tmp[3346773](3348372 call chpl__initCopy[3260920] call_tmp[3346763] 0))
              1
              (3346782 'end of statement')
              ref call_tmp[3346783]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3346785 'move' call_tmp[3346783](3348380 '.' tmp[3346773] x0[3257006]))
              val foundSlot[3346790]:bool[19] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3348386]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3348390 'move' coerce_tmp[3348386](3348388 'deref' call_tmp[3346783]))
              (3346792 'move' foundSlot[3346790](3348383 call chpl__initCopy[1757859] coerce_tmp[3348386] 0))
              ref call_tmp[3346795]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3346797 'move' call_tmp[3346795](3348395 '.' tmp[3346773] x1[3257008]))
              val newslot[3346802]:int(64)[10] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3348401]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3348405 'move' coerce_tmp[3348401](3348403 'deref' call_tmp[3346795]))
              (3346804 'move' newslot[3346802](3348398 call chpl__initCopy[1473915] coerce_tmp[3348401] 0))
              (3346807 'end of statement')
              val call_tmp[3346808]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3346810 'move' call_tmp[3346808] foundSlot[3346790])
              if call_tmp[3346808]
              {
                (3346818 call halt[88131] "duplicate element found while resizing for key")
              }
              val call_tmp[3346821]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3346823 'move' call_tmp[3346821](3346826 call <[1469576] newslot[3346802] 0))
              val call_tmp[3346829]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3346831 'move' call_tmp[3346829] call_tmp[3346821])
              if call_tmp[3346829]
              {
                (3346839 call halt[1483780] "couldn't add element during resize - got slot " newslot[3346802] " for key")
                (3346843 'end of statement' newslot[3346802])
              }
              ref dstSlot[3346846]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "ref var"
              ref call_tmp[3346850]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[3348412]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead at end of block" "temp"
              (3348414 'move' _this_tmp_[3348412](3346855 call table[3340092] this[3346464]))
              val coerce_tmp[3348419]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3348423 'move' coerce_tmp[3348419](3348421 'deref' _this_tmp_[3348412]))
              (3346852 'move' call_tmp[3346850](3346858 call this[3343256] coerce_tmp[3348419] newslot[3346802]))
              (3346860 'move' dstSlot[3346846] call_tmp[3346850])
              (3346864 'end of statement' oldTable[3346497] oldslot[3346698] newslot[3346802])
              ref call_tmp[3346868]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
              (3346870 'move' call_tmp[3346868](3346873 call status[3345291] dstSlot[3346846]))
              (3346877 call =[3261273] call_tmp[3346868] full[264674])
              (3346880 'end of statement' dstSlot[3346846])
              ref call_tmp[3346882]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3346884 'move' call_tmp[3346882](3346887 call key[3345732] dstSlot[3346846]))
              ref call_tmp[3346890]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3346892 'move' call_tmp[3346890](3346895 call key[3345732] oldEntry[3346739]))
              val call_tmp[3346898]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3346900 'move' call_tmp[3346898](3346903 call moveFrom[3261311] call_tmp[3346890]))
              (3346906 call moveInitialize[3261406] call_tmp[3346882] call_tmp[3346898])
              (3346909 'end of statement' dstSlot[3346846] oldEntry[3346739])
              ref call_tmp[3346912]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3346914 'move' call_tmp[3346912](3346917 call val[3345762] dstSlot[3346846]))
              ref call_tmp[3346920]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3346922 'move' call_tmp[3346920](3346925 call val[3345762] oldEntry[3346739]))
              val call_tmp[3346928]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3346930 'move' call_tmp[3346928](3346933 call moveFrom[3261311] call_tmp[3346920]))
              (3346936 call moveInitialize[3261406] call_tmp[3346912] call_tmp[3346928])
              (3346939 'end of statement' dstSlot[3346846] oldEntry[3346739])
              ref call_tmp[3346942]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
              (3346944 'move' call_tmp[3346942](3346947 call rehashHelpers[3347236] this[3346464]))
              val call_tmp[3346950]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3348437]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3348443 'move' coerce_tmp[3348437](3348439 call borrow[3258798] call_tmp[3346942]))
              val coerce_tmp[3348446]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3348452 'move' coerce_tmp[3348446](3348448 'cast' borrowed RootClass?[467971] coerce_tmp[3348437]))
              (3346952 'move' call_tmp[3346950](3346955 call !=[53510] coerce_tmp[3348446] nil[32]))
              val call_tmp[3346958]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3346960 'move' call_tmp[3346958] call_tmp[3346950])
              if call_tmp[3346958]
              {
                ref call_tmp[3346967]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
                (3346969 'move' call_tmp[3346967](3346972 call rehashHelpers[3347236] this[3346464]))
                val call_tmp[3346975]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
                (3346977 'move' call_tmp[3346975](3346980 call postfix![3258925] call_tmp[3346967]))
                (3346986 call moveElementDuringRehash[265654] call_tmp[3346975] oldslot[3346698] newslot[3346802])
                (3346989 'end of statement' oldslot[3346698] newslot[3346802])
              }
            }
          }
          label _continueLabel[3346994]
          _indexOfInterest[3346668]
          _iterator[3346670]
        }
        label _breakLabel[3346996]
      }
      ref call_tmp[3346998]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3347000 'move' call_tmp[3346998](3347003 call rehashHelpers[3347236] this[3346464]))
      val call_tmp[3347006]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3348459]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3348465 'move' coerce_tmp[3348459](3348461 call borrow[3258798] call_tmp[3346998]))
      val coerce_tmp[3348468]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3348474 'move' coerce_tmp[3348468](3348470 'cast' borrowed RootClass?[467971] coerce_tmp[3348459]))
      (3347008 'move' call_tmp[3347006](3347011 call !=[53510] coerce_tmp[3348468] nil[32]))
      val call_tmp[3347014]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3347016 'move' call_tmp[3347014] call_tmp[3347006])
      if call_tmp[3347014]
      {
        ref call_tmp[3347023]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3347025 'move' call_tmp[3347023](3347028 call rehashHelpers[3347236] this[3346464]))
        val call_tmp[3347031]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3347033 'move' call_tmp[3347031](3347036 call postfix![3258925] call_tmp[3347023]))
        (3347042 call finishRehash[265671] call_tmp[3347031] oldSize[3346483])
        (3347044 'end of statement' oldSize[3346483])
      }
      (3347048 call _freeData[3348480] oldTable[3346497] oldSize[3346483])
      (3347051 'end of statement' oldTable[3346497] oldSize[3346483])
    }
    {
      ref call_tmp[3347055]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3347057 'move' call_tmp[3347055](3347060 call rehashHelpers[3347236] this[3346464]))
      val call_tmp[3347063]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3348659]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3348665 'move' coerce_tmp[3348659](3348661 call borrow[3258798] call_tmp[3347055]))
      val coerce_tmp[3348668]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3348674 'move' coerce_tmp[3348668](3348670 'cast' borrowed RootClass?[467971] coerce_tmp[3348659]))
      (3347065 'move' call_tmp[3347063](3347068 call !=[53510] coerce_tmp[3348668] nil[32]))
      val call_tmp[3347071]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3347073 'move' call_tmp[3347071] call_tmp[3347063])
      if call_tmp[3347071]
      {
        ref call_tmp[3347080]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3347082 'move' call_tmp[3347080](3347085 call rehashHelpers[3347236] this[3346464]))
        val call_tmp[3347088]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3347090 'move' call_tmp[3347088](3347093 call postfix![3258925] call_tmp[3347080]))
        ref call_tmp[3347095]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3347097 'move' call_tmp[3347095](3347100 call tableSize[3340120] this[3346464]))
        val coerce_tmp[3348680]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3348684 'move' coerce_tmp[3348680](3348682 'deref' call_tmp[3347095]))
        (3347107 call startRehash[265641] call_tmp[3347088] coerce_tmp[3348680])
        (3347109 'end of statement')
        ref call_tmp[3347110]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3347112 'move' call_tmp[3347110](3347115 call rehashHelpers[3347236] this[3346464]))
        val call_tmp[3347118]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3347120 'move' call_tmp[3347118](3347123 call postfix![3258925] call_tmp[3347110]))
        (3347129 call finishRehash[265671] call_tmp[3347118] oldSize[3346483])
        (3347131 'end of statement' oldSize[3346483])
      }
      (3347135 call _freeData[3348480] oldTable[3346497] oldSize[3346483])
      (3347138 'end of statement' oldTable[3346497] oldSize[3346483])
      ref call_tmp[3347141]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "maybe param" "temp"
      (3347143 'move' call_tmp[3347141](3347146 call table[3340092] this[3346464]))
      ref call_tmp[3347149]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3347151 'move' call_tmp[3347149](3347154 call tableSize[3340120] this[3346464]))
      val call_tmp[3347157]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3348693]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3348697 'move' coerce_tmp[3348693](3348695 'deref' call_tmp[3347149]))
      (3347159 'move' call_tmp[3347157](3347165 call allocateTable[3340148] this[3346464] coerce_tmp[3348693]))
      (3347168 call =[3341598] call_tmp[3347141] call_tmp[3347157])
      (3347171 'end of statement')
      ref call_tmp[3347172]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3347174 'move' call_tmp[3347172](3347177 call tableNumDeletedSlots[3345823] this[3346464]))
      (3347181 call =[52229] call_tmp[3347172] 0)
    }
    (3347185 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].rehash[3363986](ref arg this[3363990]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const in arg newSize[3363992]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3364001]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3364003 'move' call_tmp[3364001](3364006 call tableSize[3355205] this[3363990]))
    val oldSize[3364009]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3364718]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3364722 'move' coerce_tmp[3364718](3364720 'deref' call_tmp[3364001]))
    (3364011 'move' oldSize[3364009](3364715 call chpl__initCopy[1473915] coerce_tmp[3364718] 0))
    (3364014 'end of statement')
    ref call_tmp[3364015]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "maybe param" "temp"
    (3364017 'move' call_tmp[3364015](3364020 call table[3355177] this[3363990]))
    val oldTable[3364023]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3364729]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3364733 'move' coerce_tmp[3364729](3364731 'deref' call_tmp[3364015]))
    (3364025 'move' oldTable[3364023](3364726 call chpl__initCopy[3356793] coerce_tmp[3364729] 0))
    (3364028 'end of statement')
    ref call_tmp[3364029]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3364031 'move' call_tmp[3364029](3364034 call tableSize[3355205] this[3363990]))
    (3364038 call =[52229] call_tmp[3364029] newSize[3363992])
    (3364041 'end of statement')
    ref call_tmp[3364042]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3364044 'move' call_tmp[3364042](3364047 call tableNumFullSlots[3363320] this[3363990]))
    val entries[3364050]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3364742]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3364746 'move' coerce_tmp[3364742](3364744 'deref' call_tmp[3364042]))
    (3364052 'move' entries[3364050](3364739 call chpl__initCopy[1473915] coerce_tmp[3364742] 0))
    (3364055 'end of statement')
    val call_tmp[3364056]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3364058 'move' call_tmp[3364056](3364061 call >[55238] entries[3364050] 0))
    val call_tmp[3364064]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3364066 'move' call_tmp[3364064] call_tmp[3364056])
    if call_tmp[3364064]
    {
      val call_tmp[3364073]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3364075 'move' call_tmp[3364073](3364078 call ==[52746] newSize[3363992] 0))
      val call_tmp[3364081]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3364083 'move' call_tmp[3364081] call_tmp[3364073])
      if call_tmp[3364081]
      {
        (3364091 call halt[88131] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[3364094]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "maybe param" "temp"
      (3364096 'move' call_tmp[3364094](3364099 call table[3355177] this[3363990]))
      ref call_tmp[3364102]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3364104 'move' call_tmp[3364102](3364107 call tableSize[3355205] this[3363990]))
      val call_tmp[3364110]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3364754]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3364758 'move' coerce_tmp[3364754](3364756 'deref' call_tmp[3364102]))
      (3364112 'move' call_tmp[3364110](3364118 call allocateTable[3355233] this[3363990] coerce_tmp[3364754]))
      (3364121 call =[3356683] call_tmp[3364094] call_tmp[3364110])
      (3364124 'end of statement')
      ref call_tmp[3364125]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3364127 'move' call_tmp[3364125](3364130 call rehashHelpers[3364762] this[3363990]))
      val call_tmp[3364133]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3364790]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3364796 'move' coerce_tmp[3364790](3364792 call borrow[3258798] call_tmp[3364125]))
      val coerce_tmp[3364799]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3364805 'move' coerce_tmp[3364799](3364801 'cast' borrowed RootClass?[467971] coerce_tmp[3364790]))
      (3364135 'move' call_tmp[3364133](3364138 call !=[53510] coerce_tmp[3364799] nil[32]))
      val call_tmp[3364141]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3364143 'move' call_tmp[3364141] call_tmp[3364133])
      if call_tmp[3364141]
      {
        ref call_tmp[3364150]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3364152 'move' call_tmp[3364150](3364155 call rehashHelpers[3364762] this[3363990]))
        val call_tmp[3364158]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3364160 'move' call_tmp[3364158](3364163 call postfix![3258925] call_tmp[3364150]))
        ref call_tmp[3364165]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3364167 'move' call_tmp[3364165](3364170 call tableSize[3355205] this[3363990]))
        val coerce_tmp[3364811]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3364815 'move' coerce_tmp[3364811](3364813 'deref' call_tmp[3364165]))
        (3364177 call startRehash[265641] call_tmp[3364158] coerce_tmp[3364811])
      }
      ref call_tmp[3364180]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3364182 'move' call_tmp[3364180](3364185 call tableNumDeletedSlots[3363349] this[3363990]))
      (3364189 call =[52229] call_tmp[3364180] 0)
      (3364192 'end of statement')
      {
        val _indexOfInterest[3364194]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[3364196]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        val call_tmp[3364198]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        (3364200 'move' call_tmp[3364198](3364203 call _allSlots[265237] oldSize[3364009]))
        (3364205 'move' _iterator[3364196](3364208 call _getIterator[1946146] call_tmp[3364198]))
        Defer
        {
          {
            (3364212 call _freeIterator[1947321] _iterator[3364196])
          }
        }
        ForLoop[3364221]
        {
          const oldslot[3364224]:int(64)[10] "const" "index var" "insert auto destroy"
          (3364226 'end of statement')
          (3364227 'move' oldslot[3364224] _indexOfInterest[3364194])
          (3364230 'end of statement' oldslot[3364224])
          {
            ref call_tmp[3364233]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
            (3364235 'move' call_tmp[3364233](3364238 call this[3358341] oldTable[3364023] oldslot[3364224]))
            ref call_tmp[3364240]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
            (3364242 'move' call_tmp[3364240](3364245 call status[3360376] call_tmp[3364233]))
            val call_tmp[3364248]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[3364828]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3364832 'move' coerce_tmp[3364828](3364830 'deref' call_tmp[3364240]))
            (3364250 'move' call_tmp[3364248](3364253 call ==[3259199] coerce_tmp[3364828] full[264674]))
            val call_tmp[3364256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3364258 'move' call_tmp[3364256] call_tmp[3364248])
            if call_tmp[3364256]
            {
              ref oldEntry[3364265]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "ref var"
              ref call_tmp[3364269]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "maybe param" "temp"
              (3364271 'move' call_tmp[3364269](3364274 call this[3358341] oldTable[3364023] oldslot[3364224]))
              (3364276 'move' oldEntry[3364265] call_tmp[3364269])
              (3364280 'end of statement')
              ref call_tmp[3364281]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3364283 'move' call_tmp[3364281](3364286 call key[3360817] oldEntry[3364265]))
              val call_tmp[3364289]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
              (3364291 'move' call_tmp[3364289](3364297 call _findSlot[3364839] this[3363990] call_tmp[3364281]))
              val tmp[3364299]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
              (3364301 'move' tmp[3364299](3365898 call chpl__initCopy[3260920] call_tmp[3364289] 0))
              1
              (3364308 'end of statement')
              ref call_tmp[3364309]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3364311 'move' call_tmp[3364309](3365906 '.' tmp[3364299] x0[3257006]))
              val foundSlot[3364316]:bool[19] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3365912]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3365916 'move' coerce_tmp[3365912](3365914 'deref' call_tmp[3364309]))
              (3364318 'move' foundSlot[3364316](3365909 call chpl__initCopy[1757859] coerce_tmp[3365912] 0))
              ref call_tmp[3364321]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3364323 'move' call_tmp[3364321](3365921 '.' tmp[3364299] x1[3257008]))
              val newslot[3364328]:int(64)[10] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3365927]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3365931 'move' coerce_tmp[3365927](3365929 'deref' call_tmp[3364321]))
              (3364330 'move' newslot[3364328](3365924 call chpl__initCopy[1473915] coerce_tmp[3365927] 0))
              (3364333 'end of statement')
              val call_tmp[3364334]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3364336 'move' call_tmp[3364334] foundSlot[3364316])
              if call_tmp[3364334]
              {
                (3364344 call halt[88131] "duplicate element found while resizing for key")
              }
              val call_tmp[3364347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3364349 'move' call_tmp[3364347](3364352 call <[1469576] newslot[3364328] 0))
              val call_tmp[3364355]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3364357 'move' call_tmp[3364355] call_tmp[3364347])
              if call_tmp[3364355]
              {
                (3364365 call halt[1483780] "couldn't add element during resize - got slot " newslot[3364328] " for key")
                (3364369 'end of statement' newslot[3364328])
              }
              ref dstSlot[3364372]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "ref var"
              ref call_tmp[3364376]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[3365938]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead at end of block" "temp"
              (3365940 'move' _this_tmp_[3365938](3364381 call table[3355177] this[3363990]))
              val coerce_tmp[3365945]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3365949 'move' coerce_tmp[3365945](3365947 'deref' _this_tmp_[3365938]))
              (3364378 'move' call_tmp[3364376](3364384 call this[3358341] coerce_tmp[3365945] newslot[3364328]))
              (3364386 'move' dstSlot[3364372] call_tmp[3364376])
              (3364390 'end of statement' oldTable[3364023] oldslot[3364224] newslot[3364328])
              ref call_tmp[3364394]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
              (3364396 'move' call_tmp[3364394](3364399 call status[3360376] dstSlot[3364372]))
              (3364403 call =[3261273] call_tmp[3364394] full[264674])
              (3364406 'end of statement' dstSlot[3364372])
              ref call_tmp[3364408]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3364410 'move' call_tmp[3364408](3364413 call key[3360817] dstSlot[3364372]))
              ref call_tmp[3364416]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3364418 'move' call_tmp[3364416](3364421 call key[3360817] oldEntry[3364265]))
              val call_tmp[3364424]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3364426 'move' call_tmp[3364424](3364429 call moveFrom[3261311] call_tmp[3364416]))
              (3364432 call moveInitialize[3261406] call_tmp[3364408] call_tmp[3364424])
              (3364435 'end of statement' dstSlot[3364372] oldEntry[3364265])
              ref call_tmp[3364438]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
              (3364440 'move' call_tmp[3364438](3364443 call val[3360847] dstSlot[3364372]))
              ref call_tmp[3364446]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
              (3364448 'move' call_tmp[3364446](3364451 call val[3360847] oldEntry[3364265]))
              val call_tmp[3364454]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3364456 'move' call_tmp[3364454](3364459 call moveFrom[3360875] call_tmp[3364446]))
              (3364462 call moveInitialize[3365961] call_tmp[3364438] call_tmp[3364454])
              (3364465 'end of statement' dstSlot[3364372] oldEntry[3364265])
              ref call_tmp[3364468]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
              (3364470 'move' call_tmp[3364468](3364473 call rehashHelpers[3364762] this[3363990]))
              val call_tmp[3364476]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3366118]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3366124 'move' coerce_tmp[3366118](3366120 call borrow[3258798] call_tmp[3364468]))
              val coerce_tmp[3366127]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3366133 'move' coerce_tmp[3366127](3366129 'cast' borrowed RootClass?[467971] coerce_tmp[3366118]))
              (3364478 'move' call_tmp[3364476](3364481 call !=[53510] coerce_tmp[3366127] nil[32]))
              val call_tmp[3364484]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3364486 'move' call_tmp[3364484] call_tmp[3364476])
              if call_tmp[3364484]
              {
                ref call_tmp[3364493]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
                (3364495 'move' call_tmp[3364493](3364498 call rehashHelpers[3364762] this[3363990]))
                val call_tmp[3364501]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
                (3364503 'move' call_tmp[3364501](3364506 call postfix![3258925] call_tmp[3364493]))
                (3364512 call moveElementDuringRehash[265654] call_tmp[3364501] oldslot[3364224] newslot[3364328])
                (3364515 'end of statement' oldslot[3364224] newslot[3364328])
              }
            }
          }
          label _continueLabel[3364520]
          _indexOfInterest[3364194]
          _iterator[3364196]
        }
        label _breakLabel[3364522]
      }
      ref call_tmp[3364524]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3364526 'move' call_tmp[3364524](3364529 call rehashHelpers[3364762] this[3363990]))
      val call_tmp[3364532]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3366140]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3366146 'move' coerce_tmp[3366140](3366142 call borrow[3258798] call_tmp[3364524]))
      val coerce_tmp[3366149]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3366155 'move' coerce_tmp[3366149](3366151 'cast' borrowed RootClass?[467971] coerce_tmp[3366140]))
      (3364534 'move' call_tmp[3364532](3364537 call !=[53510] coerce_tmp[3366149] nil[32]))
      val call_tmp[3364540]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3364542 'move' call_tmp[3364540] call_tmp[3364532])
      if call_tmp[3364540]
      {
        ref call_tmp[3364549]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3364551 'move' call_tmp[3364549](3364554 call rehashHelpers[3364762] this[3363990]))
        val call_tmp[3364557]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3364559 'move' call_tmp[3364557](3364562 call postfix![3258925] call_tmp[3364549]))
        (3364568 call finishRehash[265671] call_tmp[3364557] oldSize[3364009])
        (3364570 'end of statement' oldSize[3364009])
      }
      (3364574 call _freeData[3366161] oldTable[3364023] oldSize[3364009])
      (3364577 'end of statement' oldTable[3364023] oldSize[3364009])
    }
    {
      ref call_tmp[3364581]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3364583 'move' call_tmp[3364581](3364586 call rehashHelpers[3364762] this[3363990]))
      val call_tmp[3364589]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3366340]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3366346 'move' coerce_tmp[3366340](3366342 call borrow[3258798] call_tmp[3364581]))
      val coerce_tmp[3366349]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3366355 'move' coerce_tmp[3366349](3366351 'cast' borrowed RootClass?[467971] coerce_tmp[3366340]))
      (3364591 'move' call_tmp[3364589](3364594 call !=[53510] coerce_tmp[3366349] nil[32]))
      val call_tmp[3364597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3364599 'move' call_tmp[3364597] call_tmp[3364589])
      if call_tmp[3364597]
      {
        ref call_tmp[3364606]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3364608 'move' call_tmp[3364606](3364611 call rehashHelpers[3364762] this[3363990]))
        val call_tmp[3364614]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3364616 'move' call_tmp[3364614](3364619 call postfix![3258925] call_tmp[3364606]))
        ref call_tmp[3364621]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3364623 'move' call_tmp[3364621](3364626 call tableSize[3355205] this[3363990]))
        val coerce_tmp[3366361]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3366365 'move' coerce_tmp[3366361](3366363 'deref' call_tmp[3364621]))
        (3364633 call startRehash[265641] call_tmp[3364614] coerce_tmp[3366361])
        (3364635 'end of statement')
        ref call_tmp[3364636]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3364638 'move' call_tmp[3364636](3364641 call rehashHelpers[3364762] this[3363990]))
        val call_tmp[3364644]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3364646 'move' call_tmp[3364644](3364649 call postfix![3258925] call_tmp[3364636]))
        (3364655 call finishRehash[265671] call_tmp[3364644] oldSize[3364009])
        (3364657 'end of statement' oldSize[3364009])
      }
      (3364661 call _freeData[3366161] oldTable[3364023] oldSize[3364009])
      (3364664 'end of statement' oldTable[3364023] oldSize[3364009])
      ref call_tmp[3364667]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "maybe param" "temp"
      (3364669 'move' call_tmp[3364667](3364672 call table[3355177] this[3363990]))
      ref call_tmp[3364675]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3364677 'move' call_tmp[3364675](3364680 call tableSize[3355205] this[3363990]))
      val call_tmp[3364683]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3366374]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3366378 'move' coerce_tmp[3366374](3366376 'deref' call_tmp[3364675]))
      (3364685 'move' call_tmp[3364683](3364691 call allocateTable[3355233] this[3363990] coerce_tmp[3366374]))
      (3364694 call =[3356683] call_tmp[3364667] call_tmp[3364683])
      (3364697 'end of statement')
      ref call_tmp[3364698]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3364700 'move' call_tmp[3364698](3364703 call tableNumDeletedSlots[3363349] this[3363990]))
      (3364707 call =[52229] call_tmp[3364698] 0)
    }
    (3364711 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].rehash[3401728](ref arg this[3401732]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const in arg newSize[3401734]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3401743]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401745 'move' call_tmp[3401743](3401748 call tableSize[3392339] this[3401732]))
    val oldSize[3401751]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3402460]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3402464 'move' coerce_tmp[3402460](3402462 'deref' call_tmp[3401743]))
    (3401753 'move' oldSize[3401751](3402457 call chpl__initCopy[1473915] coerce_tmp[3402460] 0))
    (3401756 'end of statement')
    ref call_tmp[3401757]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "maybe param" "temp"
    (3401759 'move' call_tmp[3401757](3401762 call table[3392311] this[3401732]))
    val oldTable[3401765]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3402471]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3402475 'move' coerce_tmp[3402471](3402473 'deref' call_tmp[3401757]))
    (3401767 'move' oldTable[3401765](3402468 call chpl__initCopy[3393927] coerce_tmp[3402471] 0))
    (3401770 'end of statement')
    ref call_tmp[3401771]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401773 'move' call_tmp[3401771](3401776 call tableSize[3392339] this[3401732]))
    (3401780 call =[52229] call_tmp[3401771] newSize[3401734])
    (3401783 'end of statement')
    ref call_tmp[3401784]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401786 'move' call_tmp[3401784](3401789 call tableNumFullSlots[3401251] this[3401732]))
    val entries[3401792]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3402484]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3402488 'move' coerce_tmp[3402484](3402486 'deref' call_tmp[3401784]))
    (3401794 'move' entries[3401792](3402481 call chpl__initCopy[1473915] coerce_tmp[3402484] 0))
    (3401797 'end of statement')
    val call_tmp[3401798]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3401800 'move' call_tmp[3401798](3401803 call >[55238] entries[3401792] 0))
    val call_tmp[3401806]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3401808 'move' call_tmp[3401806] call_tmp[3401798])
    if call_tmp[3401806]
    {
      val call_tmp[3401815]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3401817 'move' call_tmp[3401815](3401820 call ==[52746] newSize[3401734] 0))
      val call_tmp[3401823]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3401825 'move' call_tmp[3401823] call_tmp[3401815])
      if call_tmp[3401823]
      {
        (3401833 call halt[88131] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[3401836]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "maybe param" "temp"
      (3401838 'move' call_tmp[3401836](3401841 call table[3392311] this[3401732]))
      ref call_tmp[3401844]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3401846 'move' call_tmp[3401844](3401849 call tableSize[3392339] this[3401732]))
      val call_tmp[3401852]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3402496]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3402500 'move' coerce_tmp[3402496](3402498 'deref' call_tmp[3401844]))
      (3401854 'move' call_tmp[3401852](3401860 call allocateTable[3392367] this[3401732] coerce_tmp[3402496]))
      (3401863 call =[3393817] call_tmp[3401836] call_tmp[3401852])
      (3401866 'end of statement')
      ref call_tmp[3401867]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3401869 'move' call_tmp[3401867](3401872 call rehashHelpers[3402504] this[3401732]))
      val call_tmp[3401875]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3402532]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3402538 'move' coerce_tmp[3402532](3402534 call borrow[3258798] call_tmp[3401867]))
      val coerce_tmp[3402541]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3402547 'move' coerce_tmp[3402541](3402543 'cast' borrowed RootClass?[467971] coerce_tmp[3402532]))
      (3401877 'move' call_tmp[3401875](3401880 call !=[53510] coerce_tmp[3402541] nil[32]))
      val call_tmp[3401883]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3401885 'move' call_tmp[3401883] call_tmp[3401875])
      if call_tmp[3401883]
      {
        ref call_tmp[3401892]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3401894 'move' call_tmp[3401892](3401897 call rehashHelpers[3402504] this[3401732]))
        val call_tmp[3401900]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3401902 'move' call_tmp[3401900](3401905 call postfix![3258925] call_tmp[3401892]))
        ref call_tmp[3401907]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3401909 'move' call_tmp[3401907](3401912 call tableSize[3392339] this[3401732]))
        val coerce_tmp[3402553]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3402557 'move' coerce_tmp[3402553](3402555 'deref' call_tmp[3401907]))
        (3401919 call startRehash[265641] call_tmp[3401900] coerce_tmp[3402553])
      }
      ref call_tmp[3401922]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3401924 'move' call_tmp[3401922](3401927 call tableNumDeletedSlots[3401279] this[3401732]))
      (3401931 call =[52229] call_tmp[3401922] 0)
      (3401934 'end of statement')
      {
        val _indexOfInterest[3401936]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[3401938]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        val call_tmp[3401940]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        (3401942 'move' call_tmp[3401940](3401945 call _allSlots[265237] oldSize[3401751]))
        (3401947 'move' _iterator[3401938](3401950 call _getIterator[1946146] call_tmp[3401940]))
        Defer
        {
          {
            (3401954 call _freeIterator[1947321] _iterator[3401938])
          }
        }
        ForLoop[3401963]
        {
          const oldslot[3401966]:int(64)[10] "const" "index var" "insert auto destroy"
          (3401968 'end of statement')
          (3401969 'move' oldslot[3401966] _indexOfInterest[3401936])
          (3401972 'end of statement' oldslot[3401966])
          {
            ref call_tmp[3401975]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead after last mention" "maybe param" "temp"
            (3401977 'move' call_tmp[3401975](3401980 call this[3395475] oldTable[3401765] oldslot[3401966]))
            ref call_tmp[3401982]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
            (3401984 'move' call_tmp[3401982](3401987 call status[3402569] call_tmp[3401975]))
            val call_tmp[3401990]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[3402597]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3402601 'move' coerce_tmp[3402597](3402599 'deref' call_tmp[3401982]))
            (3401992 'move' call_tmp[3401990](3401995 call ==[3259199] coerce_tmp[3402597] full[264674]))
            val call_tmp[3401998]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3402000 'move' call_tmp[3401998] call_tmp[3401990])
            if call_tmp[3401998]
            {
              ref oldEntry[3402007]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "ref var"
              ref call_tmp[3402011]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
              (3402013 'move' call_tmp[3402011](3402016 call this[3395475] oldTable[3401765] oldslot[3401966]))
              (3402018 'move' oldEntry[3402007] call_tmp[3402011])
              (3402022 'end of statement')
              ref call_tmp[3402023]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3402025 'move' call_tmp[3402023](3402028 call key[3402607] oldEntry[3402007]))
              val call_tmp[3402031]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
              (3402033 'move' call_tmp[3402031](3402039 call _findSlot[3402635] this[3401732] call_tmp[3402023]))
              val tmp[3402041]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
              (3402043 'move' tmp[3402041](3403694 call chpl__initCopy[3260920] call_tmp[3402031] 0))
              1
              (3402050 'end of statement')
              ref call_tmp[3402051]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3402053 'move' call_tmp[3402051](3403702 '.' tmp[3402041] x0[3257006]))
              val foundSlot[3402058]:bool[19] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3403708]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3403712 'move' coerce_tmp[3403708](3403710 'deref' call_tmp[3402051]))
              (3402060 'move' foundSlot[3402058](3403705 call chpl__initCopy[1757859] coerce_tmp[3403708] 0))
              ref call_tmp[3402063]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3402065 'move' call_tmp[3402063](3403717 '.' tmp[3402041] x1[3257008]))
              val newslot[3402070]:int(64)[10] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3403723]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3403727 'move' coerce_tmp[3403723](3403725 'deref' call_tmp[3402063]))
              (3402072 'move' newslot[3402070](3403720 call chpl__initCopy[1473915] coerce_tmp[3403723] 0))
              (3402075 'end of statement')
              val call_tmp[3402076]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402078 'move' call_tmp[3402076] foundSlot[3402058])
              if call_tmp[3402076]
              {
                (3402086 call halt[88131] "duplicate element found while resizing for key")
              }
              val call_tmp[3402089]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402091 'move' call_tmp[3402089](3402094 call <[1469576] newslot[3402070] 0))
              val call_tmp[3402097]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402099 'move' call_tmp[3402097] call_tmp[3402089])
              if call_tmp[3402097]
              {
                (3402107 call halt[1483780] "couldn't add element during resize - got slot " newslot[3402070] " for key")
                (3402111 'end of statement' newslot[3402070])
              }
              ref dstSlot[3402114]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "ref var"
              ref call_tmp[3402118]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[3403734]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead at end of block" "temp"
              (3403736 'move' _this_tmp_[3403734](3402123 call table[3392311] this[3401732]))
              val coerce_tmp[3403741]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3403745 'move' coerce_tmp[3403741](3403743 'deref' _this_tmp_[3403734]))
              (3402120 'move' call_tmp[3402118](3402126 call this[3395475] coerce_tmp[3403741] newslot[3402070]))
              (3402128 'move' dstSlot[3402114] call_tmp[3402118])
              (3402132 'end of statement' oldTable[3401765] oldslot[3401966] newslot[3402070])
              ref call_tmp[3402136]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
              (3402138 'move' call_tmp[3402136](3402141 call status[3402569] dstSlot[3402114]))
              (3402145 call =[3261273] call_tmp[3402136] full[264674])
              (3402148 'end of statement' dstSlot[3402114])
              ref call_tmp[3402150]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3402152 'move' call_tmp[3402150](3402155 call key[3402607] dstSlot[3402114]))
              ref call_tmp[3402158]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3402160 'move' call_tmp[3402158](3402163 call key[3402607] oldEntry[3402007]))
              val call_tmp[3402166]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3402168 'move' call_tmp[3402166](3402171 call moveFrom[3261311] call_tmp[3402158]))
              (3402174 call moveInitialize[3261406] call_tmp[3402150] call_tmp[3402166])
              (3402177 'end of statement' dstSlot[3402114] oldEntry[3402007])
              ref call_tmp[3402180]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
              (3402182 'move' call_tmp[3402180](3402185 call val[3403754] dstSlot[3402114]))
              ref call_tmp[3402188]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
              (3402190 'move' call_tmp[3402188](3402193 call val[3403754] oldEntry[3402007]))
              val call_tmp[3402196]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3402198 'move' call_tmp[3402196](3402201 call moveFrom[3403783] call_tmp[3402188]))
              (3402204 call moveInitialize[3403878] call_tmp[3402180] call_tmp[3402196])
              (3402207 'end of statement' dstSlot[3402114] oldEntry[3402007])
              ref call_tmp[3402210]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
              (3402212 'move' call_tmp[3402210](3402215 call rehashHelpers[3402504] this[3401732]))
              val call_tmp[3402218]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3404035]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3404041 'move' coerce_tmp[3404035](3404037 call borrow[3258798] call_tmp[3402210]))
              val coerce_tmp[3404044]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3404050 'move' coerce_tmp[3404044](3404046 'cast' borrowed RootClass?[467971] coerce_tmp[3404035]))
              (3402220 'move' call_tmp[3402218](3402223 call !=[53510] coerce_tmp[3404044] nil[32]))
              val call_tmp[3402226]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3402228 'move' call_tmp[3402226] call_tmp[3402218])
              if call_tmp[3402226]
              {
                ref call_tmp[3402235]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
                (3402237 'move' call_tmp[3402235](3402240 call rehashHelpers[3402504] this[3401732]))
                val call_tmp[3402243]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
                (3402245 'move' call_tmp[3402243](3402248 call postfix![3258925] call_tmp[3402235]))
                (3402254 call moveElementDuringRehash[265654] call_tmp[3402243] oldslot[3401966] newslot[3402070])
                (3402257 'end of statement' oldslot[3401966] newslot[3402070])
              }
            }
          }
          label _continueLabel[3402262]
          _indexOfInterest[3401936]
          _iterator[3401938]
        }
        label _breakLabel[3402264]
      }
      ref call_tmp[3402266]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3402268 'move' call_tmp[3402266](3402271 call rehashHelpers[3402504] this[3401732]))
      val call_tmp[3402274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3404057]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404063 'move' coerce_tmp[3404057](3404059 call borrow[3258798] call_tmp[3402266]))
      val coerce_tmp[3404066]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404072 'move' coerce_tmp[3404066](3404068 'cast' borrowed RootClass?[467971] coerce_tmp[3404057]))
      (3402276 'move' call_tmp[3402274](3402279 call !=[53510] coerce_tmp[3404066] nil[32]))
      val call_tmp[3402282]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3402284 'move' call_tmp[3402282] call_tmp[3402274])
      if call_tmp[3402282]
      {
        ref call_tmp[3402291]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3402293 'move' call_tmp[3402291](3402296 call rehashHelpers[3402504] this[3401732]))
        val call_tmp[3402299]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3402301 'move' call_tmp[3402299](3402304 call postfix![3258925] call_tmp[3402291]))
        (3402310 call finishRehash[265671] call_tmp[3402299] oldSize[3401751])
        (3402312 'end of statement' oldSize[3401751])
      }
      (3402316 call _freeData[3404078] oldTable[3401765] oldSize[3401751])
      (3402319 'end of statement' oldTable[3401765] oldSize[3401751])
    }
    {
      ref call_tmp[3402323]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3402325 'move' call_tmp[3402323](3402328 call rehashHelpers[3402504] this[3401732]))
      val call_tmp[3402331]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3404257]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404263 'move' coerce_tmp[3404257](3404259 call borrow[3258798] call_tmp[3402323]))
      val coerce_tmp[3404266]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404272 'move' coerce_tmp[3404266](3404268 'cast' borrowed RootClass?[467971] coerce_tmp[3404257]))
      (3402333 'move' call_tmp[3402331](3402336 call !=[53510] coerce_tmp[3404266] nil[32]))
      val call_tmp[3402339]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3402341 'move' call_tmp[3402339] call_tmp[3402331])
      if call_tmp[3402339]
      {
        ref call_tmp[3402348]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3402350 'move' call_tmp[3402348](3402353 call rehashHelpers[3402504] this[3401732]))
        val call_tmp[3402356]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3402358 'move' call_tmp[3402356](3402361 call postfix![3258925] call_tmp[3402348]))
        ref call_tmp[3402363]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3402365 'move' call_tmp[3402363](3402368 call tableSize[3392339] this[3401732]))
        val coerce_tmp[3404278]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3404282 'move' coerce_tmp[3404278](3404280 'deref' call_tmp[3402363]))
        (3402375 call startRehash[265641] call_tmp[3402356] coerce_tmp[3404278])
        (3402377 'end of statement')
        ref call_tmp[3402378]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3402380 'move' call_tmp[3402378](3402383 call rehashHelpers[3402504] this[3401732]))
        val call_tmp[3402386]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3402388 'move' call_tmp[3402386](3402391 call postfix![3258925] call_tmp[3402378]))
        (3402397 call finishRehash[265671] call_tmp[3402386] oldSize[3401751])
        (3402399 'end of statement' oldSize[3401751])
      }
      (3402403 call _freeData[3404078] oldTable[3401765] oldSize[3401751])
      (3402406 'end of statement' oldTable[3401765] oldSize[3401751])
      ref call_tmp[3402409]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "maybe param" "temp"
      (3402411 'move' call_tmp[3402409](3402414 call table[3392311] this[3401732]))
      ref call_tmp[3402417]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3402419 'move' call_tmp[3402417](3402422 call tableSize[3392339] this[3401732]))
      val call_tmp[3402425]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3404291]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3404295 'move' coerce_tmp[3404291](3404293 'deref' call_tmp[3402417]))
      (3402427 'move' call_tmp[3402425](3402433 call allocateTable[3392367] this[3401732] coerce_tmp[3404291]))
      (3402436 call =[3393817] call_tmp[3402409] call_tmp[3402425])
      (3402439 'end of statement')
      ref call_tmp[3402440]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3402442 'move' call_tmp[3402440](3402445 call tableNumDeletedSlots[3401279] this[3401732]))
      (3402449 call =[52229] call_tmp[3402440] 0)
    }
    (3402453 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].rehash[3861277](ref arg this[3861281]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const in arg newSize[3861283]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3861292]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3861294 'move' call_tmp[3861292](3861297 call tableSize[3828932] this[3861281]))
    val oldSize[3861300]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3862009]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3862013 'move' coerce_tmp[3862009](3862011 'deref' call_tmp[3861292]))
    (3861302 'move' oldSize[3861300](3862006 call chpl__initCopy[1473915] coerce_tmp[3862009] 0))
    (3861305 'end of statement')
    ref call_tmp[3861306]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "maybe param" "temp"
    (3861308 'move' call_tmp[3861306](3861311 call table[3828904] this[3861281]))
    val oldTable[3861314]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3862020]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3862024 'move' coerce_tmp[3862020](3862022 'deref' call_tmp[3861306]))
    (3861316 'move' oldTable[3861314](3862017 call chpl__initCopy[3830520] coerce_tmp[3862020] 0))
    (3861319 'end of statement')
    ref call_tmp[3861320]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3861322 'move' call_tmp[3861320](3861325 call tableSize[3828932] this[3861281]))
    (3861329 call =[52229] call_tmp[3861320] newSize[3861283])
    (3861332 'end of statement')
    ref call_tmp[3861333]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3861335 'move' call_tmp[3861333](3861338 call tableNumFullSlots[3860800] this[3861281]))
    val entries[3861341]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[3862033]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3862037 'move' coerce_tmp[3862033](3862035 'deref' call_tmp[3861333]))
    (3861343 'move' entries[3861341](3862030 call chpl__initCopy[1473915] coerce_tmp[3862033] 0))
    (3861346 'end of statement')
    val call_tmp[3861347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3861349 'move' call_tmp[3861347](3861352 call >[55238] entries[3861341] 0))
    val call_tmp[3861355]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3861357 'move' call_tmp[3861355] call_tmp[3861347])
    if call_tmp[3861355]
    {
      val call_tmp[3861364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3861366 'move' call_tmp[3861364](3861369 call ==[52746] newSize[3861283] 0))
      val call_tmp[3861372]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3861374 'move' call_tmp[3861372] call_tmp[3861364])
      if call_tmp[3861372]
      {
        (3861382 call halt[88131] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[3861385]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "maybe param" "temp"
      (3861387 'move' call_tmp[3861385](3861390 call table[3828904] this[3861281]))
      ref call_tmp[3861393]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3861395 'move' call_tmp[3861393](3861398 call tableSize[3828932] this[3861281]))
      val call_tmp[3861401]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3862045]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3862049 'move' coerce_tmp[3862045](3862047 'deref' call_tmp[3861393]))
      (3861403 'move' call_tmp[3861401](3861409 call allocateTable[3828960] this[3861281] coerce_tmp[3862045]))
      (3861412 call =[3830410] call_tmp[3861385] call_tmp[3861401])
      (3861415 'end of statement')
      ref call_tmp[3861416]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3861418 'move' call_tmp[3861416](3861421 call rehashHelpers[3862053] this[3861281]))
      val call_tmp[3861424]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3862081]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3862087 'move' coerce_tmp[3862081](3862083 call borrow[3258798] call_tmp[3861416]))
      val coerce_tmp[3862090]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3862096 'move' coerce_tmp[3862090](3862092 'cast' borrowed RootClass?[467971] coerce_tmp[3862081]))
      (3861426 'move' call_tmp[3861424](3861429 call !=[53510] coerce_tmp[3862090] nil[32]))
      val call_tmp[3861432]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3861434 'move' call_tmp[3861432] call_tmp[3861424])
      if call_tmp[3861432]
      {
        ref call_tmp[3861441]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3861443 'move' call_tmp[3861441](3861446 call rehashHelpers[3862053] this[3861281]))
        val call_tmp[3861449]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3861451 'move' call_tmp[3861449](3861454 call postfix![3258925] call_tmp[3861441]))
        ref call_tmp[3861456]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3861458 'move' call_tmp[3861456](3861461 call tableSize[3828932] this[3861281]))
        val coerce_tmp[3862102]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3862106 'move' coerce_tmp[3862102](3862104 'deref' call_tmp[3861456]))
        (3861468 call startRehash[265641] call_tmp[3861449] coerce_tmp[3862102])
      }
      ref call_tmp[3861471]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3861473 'move' call_tmp[3861471](3861476 call tableNumDeletedSlots[3860828] this[3861281]))
      (3861480 call =[52229] call_tmp[3861471] 0)
      (3861483 'end of statement')
      {
        val _indexOfInterest[3861485]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[3861487]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        val call_tmp[3861489]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        (3861491 'move' call_tmp[3861489](3861494 call _allSlots[265237] oldSize[3861300]))
        (3861496 'move' _iterator[3861487](3861499 call _getIterator[1946146] call_tmp[3861489]))
        Defer
        {
          {
            (3861503 call _freeIterator[1947321] _iterator[3861487])
          }
        }
        ForLoop[3861512]
        {
          const oldslot[3861515]:int(64)[10] "const" "index var" "insert auto destroy"
          (3861517 'end of statement')
          (3861518 'move' oldslot[3861515] _indexOfInterest[3861485])
          (3861521 'end of statement' oldslot[3861515])
          {
            ref call_tmp[3861524]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead after last mention" "maybe param" "temp"
            (3861526 'move' call_tmp[3861524](3861529 call this[3832068] oldTable[3861314] oldslot[3861515]))
            ref call_tmp[3861531]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
            (3861533 'move' call_tmp[3861531](3861536 call status[3862118] call_tmp[3861524]))
            val call_tmp[3861539]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[3862146]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3862150 'move' coerce_tmp[3862146](3862148 'deref' call_tmp[3861531]))
            (3861541 'move' call_tmp[3861539](3861544 call ==[3259199] coerce_tmp[3862146] full[264674]))
            val call_tmp[3861547]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3861549 'move' call_tmp[3861547] call_tmp[3861539])
            if call_tmp[3861547]
            {
              ref oldEntry[3861556]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "ref var"
              ref call_tmp[3861560]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "maybe param" "temp"
              (3861562 'move' call_tmp[3861560](3861565 call this[3832068] oldTable[3861314] oldslot[3861515]))
              (3861567 'move' oldEntry[3861556] call_tmp[3861560])
              (3861571 'end of statement')
              ref call_tmp[3861572]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3861574 'move' call_tmp[3861572](3861577 call key[3862156] oldEntry[3861556]))
              val call_tmp[3861580]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
              (3861582 'move' call_tmp[3861580](3861588 call _findSlot[3862184] this[3861281] call_tmp[3861572]))
              val tmp[3861590]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
              (3861592 'move' tmp[3861590](3863243 call chpl__initCopy[3260920] call_tmp[3861580] 0))
              1
              (3861599 'end of statement')
              ref call_tmp[3861600]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3861602 'move' call_tmp[3861600](3863251 '.' tmp[3861590] x0[3257006]))
              val foundSlot[3861607]:bool[19] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3863257]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3863261 'move' coerce_tmp[3863257](3863259 'deref' call_tmp[3861600]))
              (3861609 'move' foundSlot[3861607](3863254 call chpl__initCopy[1757859] coerce_tmp[3863257] 0))
              ref call_tmp[3861612]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3861614 'move' call_tmp[3861612](3863266 '.' tmp[3861590] x1[3257008]))
              val newslot[3861619]:int(64)[10] "dead at end of block" "insert auto destroy"
              val coerce_tmp[3863272]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3863276 'move' coerce_tmp[3863272](3863274 'deref' call_tmp[3861612]))
              (3861621 'move' newslot[3861619](3863269 call chpl__initCopy[1473915] coerce_tmp[3863272] 0))
              (3861624 'end of statement')
              val call_tmp[3861625]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3861627 'move' call_tmp[3861625] foundSlot[3861607])
              if call_tmp[3861625]
              {
                (3861635 call halt[88131] "duplicate element found while resizing for key")
              }
              val call_tmp[3861638]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3861640 'move' call_tmp[3861638](3861643 call <[1469576] newslot[3861619] 0))
              val call_tmp[3861646]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3861648 'move' call_tmp[3861646] call_tmp[3861638])
              if call_tmp[3861646]
              {
                (3861656 call halt[1483780] "couldn't add element during resize - got slot " newslot[3861619] " for key")
                (3861660 'end of statement' newslot[3861619])
              }
              ref dstSlot[3861663]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "ref var"
              ref call_tmp[3861667]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[3863283]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead at end of block" "temp"
              (3863285 'move' _this_tmp_[3863283](3861672 call table[3828904] this[3861281]))
              val coerce_tmp[3863290]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3863294 'move' coerce_tmp[3863290](3863292 'deref' _this_tmp_[3863283]))
              (3861669 'move' call_tmp[3861667](3861675 call this[3832068] coerce_tmp[3863290] newslot[3861619]))
              (3861677 'move' dstSlot[3861663] call_tmp[3861667])
              (3861681 'end of statement' oldTable[3861314] oldslot[3861515] newslot[3861619])
              ref call_tmp[3861685]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
              (3861687 'move' call_tmp[3861685](3861690 call status[3862118] dstSlot[3861663]))
              (3861694 call =[3261273] call_tmp[3861685] full[264674])
              (3861697 'end of statement' dstSlot[3861663])
              ref call_tmp[3861699]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3861701 'move' call_tmp[3861699](3861704 call key[3862156] dstSlot[3861663]))
              ref call_tmp[3861707]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3861709 'move' call_tmp[3861707](3861712 call key[3862156] oldEntry[3861556]))
              val call_tmp[3861715]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (3861717 'move' call_tmp[3861715](3861720 call moveFrom[3261311] call_tmp[3861707]))
              (3861723 call moveInitialize[3261406] call_tmp[3861699] call_tmp[3861715])
              (3861726 'end of statement' dstSlot[3861663] oldEntry[3861556])
              ref call_tmp[3861729]:_ref(Module(real(64)))[3405072] "dead after last mention" "maybe param" "temp"
              (3861731 'move' call_tmp[3861729](3861734 call val[3863303] dstSlot[3861663]))
              ref call_tmp[3861737]:_ref(Module(real(64)))[3405072] "dead after last mention" "maybe param" "temp"
              (3861739 'move' call_tmp[3861737](3861742 call val[3863303] oldEntry[3861556]))
              val call_tmp[3861745]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp"
              (3861747 'move' call_tmp[3861745](3861750 call moveFrom[3863332] call_tmp[3861737]))
              (3861753 call moveInitialize[3863433] call_tmp[3861729] call_tmp[3861745])
              (3861756 'end of statement' dstSlot[3861663] oldEntry[3861556])
              ref call_tmp[3861759]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
              (3861761 'move' call_tmp[3861759](3861764 call rehashHelpers[3862053] this[3861281]))
              val call_tmp[3861767]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3863584]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3863590 'move' coerce_tmp[3863584](3863586 call borrow[3258798] call_tmp[3861759]))
              val coerce_tmp[3863593]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3863599 'move' coerce_tmp[3863593](3863595 'cast' borrowed RootClass?[467971] coerce_tmp[3863584]))
              (3861769 'move' call_tmp[3861767](3861772 call !=[53510] coerce_tmp[3863593] nil[32]))
              val call_tmp[3861775]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3861777 'move' call_tmp[3861775] call_tmp[3861767])
              if call_tmp[3861775]
              {
                ref call_tmp[3861784]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
                (3861786 'move' call_tmp[3861784](3861789 call rehashHelpers[3862053] this[3861281]))
                val call_tmp[3861792]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
                (3861794 'move' call_tmp[3861792](3861797 call postfix![3258925] call_tmp[3861784]))
                (3861803 call moveElementDuringRehash[265654] call_tmp[3861792] oldslot[3861515] newslot[3861619])
                (3861806 'end of statement' oldslot[3861515] newslot[3861619])
              }
            }
          }
          label _continueLabel[3861811]
          _indexOfInterest[3861485]
          _iterator[3861487]
        }
        label _breakLabel[3861813]
      }
      ref call_tmp[3861815]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3861817 'move' call_tmp[3861815](3861820 call rehashHelpers[3862053] this[3861281]))
      val call_tmp[3861823]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3863606]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863612 'move' coerce_tmp[3863606](3863608 call borrow[3258798] call_tmp[3861815]))
      val coerce_tmp[3863615]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863621 'move' coerce_tmp[3863615](3863617 'cast' borrowed RootClass?[467971] coerce_tmp[3863606]))
      (3861825 'move' call_tmp[3861823](3861828 call !=[53510] coerce_tmp[3863615] nil[32]))
      val call_tmp[3861831]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3861833 'move' call_tmp[3861831] call_tmp[3861823])
      if call_tmp[3861831]
      {
        ref call_tmp[3861840]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3861842 'move' call_tmp[3861840](3861845 call rehashHelpers[3862053] this[3861281]))
        val call_tmp[3861848]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3861850 'move' call_tmp[3861848](3861853 call postfix![3258925] call_tmp[3861840]))
        (3861859 call finishRehash[265671] call_tmp[3861848] oldSize[3861300])
        (3861861 'end of statement' oldSize[3861300])
      }
      (3861865 call _freeData[3863627] oldTable[3861314] oldSize[3861300])
      (3861868 'end of statement' oldTable[3861314] oldSize[3861300])
    }
    {
      ref call_tmp[3861872]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (3861874 'move' call_tmp[3861872](3861877 call rehashHelpers[3862053] this[3861281]))
      val call_tmp[3861880]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3863806]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863812 'move' coerce_tmp[3863806](3863808 call borrow[3258798] call_tmp[3861872]))
      val coerce_tmp[3863815]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863821 'move' coerce_tmp[3863815](3863817 'cast' borrowed RootClass?[467971] coerce_tmp[3863806]))
      (3861882 'move' call_tmp[3861880](3861885 call !=[53510] coerce_tmp[3863815] nil[32]))
      val call_tmp[3861888]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3861890 'move' call_tmp[3861888] call_tmp[3861880])
      if call_tmp[3861888]
      {
        ref call_tmp[3861897]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3861899 'move' call_tmp[3861897](3861902 call rehashHelpers[3862053] this[3861281]))
        val call_tmp[3861905]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3861907 'move' call_tmp[3861905](3861910 call postfix![3258925] call_tmp[3861897]))
        ref call_tmp[3861912]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3861914 'move' call_tmp[3861912](3861917 call tableSize[3828932] this[3861281]))
        val coerce_tmp[3863827]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3863831 'move' coerce_tmp[3863827](3863829 'deref' call_tmp[3861912]))
        (3861924 call startRehash[265641] call_tmp[3861905] coerce_tmp[3863827])
        (3861926 'end of statement')
        ref call_tmp[3861927]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (3861929 'move' call_tmp[3861927](3861932 call rehashHelpers[3862053] this[3861281]))
        val call_tmp[3861935]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (3861937 'move' call_tmp[3861935](3861940 call postfix![3258925] call_tmp[3861927]))
        (3861946 call finishRehash[265671] call_tmp[3861935] oldSize[3861300])
        (3861948 'end of statement' oldSize[3861300])
      }
      (3861952 call _freeData[3863627] oldTable[3861314] oldSize[3861300])
      (3861955 'end of statement' oldTable[3861314] oldSize[3861300])
      ref call_tmp[3861958]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "maybe param" "temp"
      (3861960 'move' call_tmp[3861958](3861963 call table[3828904] this[3861281]))
      ref call_tmp[3861966]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3861968 'move' call_tmp[3861966](3861971 call tableSize[3828932] this[3861281]))
      val call_tmp[3861974]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3863840]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3863844 'move' coerce_tmp[3863840](3863842 'deref' call_tmp[3861966]))
      (3861976 'move' call_tmp[3861974](3861982 call allocateTable[3828960] this[3861281] coerce_tmp[3863840]))
      (3861985 call =[3830410] call_tmp[3861958] call_tmp[3861974])
      (3861988 'end of statement')
      ref call_tmp[3861989]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3861991 'move' call_tmp[3861989](3861994 call tableNumDeletedSlots[3860828] this[3861281]))
      (3861998 call =[52229] call_tmp[3861989] 0)
    }
    (3862002 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].rehash[4311410](ref arg this[4311414]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const in arg newSize[4311416]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[4311425]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4311427 'move' call_tmp[4311425](4311430 call tableSize[4305492] this[4311414]))
    val oldSize[4311433]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[4312142]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4312146 'move' coerce_tmp[4312142](4312144 'deref' call_tmp[4311425]))
    (4311435 'move' oldSize[4311433](4312139 call chpl__initCopy[1473915] coerce_tmp[4312142] 0))
    (4311438 'end of statement')
    ref call_tmp[4311439]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "maybe param" "temp"
    (4311441 'move' call_tmp[4311439](4311444 call table[4305464] this[4311414]))
    val oldTable[4311447]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead at end of block" "insert auto destroy"
    val coerce_tmp[4312153]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4312157 'move' coerce_tmp[4312153](4312155 'deref' call_tmp[4311439]))
    (4311449 'move' oldTable[4311447](4312150 call chpl__initCopy[4307080] coerce_tmp[4312153] 0))
    (4311452 'end of statement')
    ref call_tmp[4311453]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4311455 'move' call_tmp[4311453](4311458 call tableSize[4305492] this[4311414]))
    (4311462 call =[52229] call_tmp[4311453] newSize[4311416])
    (4311465 'end of statement')
    ref call_tmp[4311466]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4311468 'move' call_tmp[4311466](4311471 call tableNumFullSlots[4310933] this[4311414]))
    val entries[4311474]:int(64)[10] "dead at end of block" "insert auto destroy"
    val coerce_tmp[4312166]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4312170 'move' coerce_tmp[4312166](4312168 'deref' call_tmp[4311466]))
    (4311476 'move' entries[4311474](4312163 call chpl__initCopy[1473915] coerce_tmp[4312166] 0))
    (4311479 'end of statement')
    val call_tmp[4311480]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4311482 'move' call_tmp[4311480](4311485 call >[55238] entries[4311474] 0))
    val call_tmp[4311488]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4311490 'move' call_tmp[4311488] call_tmp[4311480])
    if call_tmp[4311488]
    {
      val call_tmp[4311497]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4311499 'move' call_tmp[4311497](4311502 call ==[52746] newSize[4311416] 0))
      val call_tmp[4311505]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4311507 'move' call_tmp[4311505] call_tmp[4311497])
      if call_tmp[4311505]
      {
        (4311515 call halt[88131] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[4311518]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "maybe param" "temp"
      (4311520 'move' call_tmp[4311518](4311523 call table[4305464] this[4311414]))
      ref call_tmp[4311526]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4311528 'move' call_tmp[4311526](4311531 call tableSize[4305492] this[4311414]))
      val call_tmp[4311534]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4312178]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4312182 'move' coerce_tmp[4312178](4312180 'deref' call_tmp[4311526]))
      (4311536 'move' call_tmp[4311534](4311542 call allocateTable[4305520] this[4311414] coerce_tmp[4312178]))
      (4311545 call =[4306970] call_tmp[4311518] call_tmp[4311534])
      (4311548 'end of statement')
      ref call_tmp[4311549]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (4311551 'move' call_tmp[4311549](4311554 call rehashHelpers[4312186] this[4311414]))
      val call_tmp[4311557]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4312214]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4312220 'move' coerce_tmp[4312214](4312216 call borrow[3258798] call_tmp[4311549]))
      val coerce_tmp[4312223]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4312229 'move' coerce_tmp[4312223](4312225 'cast' borrowed RootClass?[467971] coerce_tmp[4312214]))
      (4311559 'move' call_tmp[4311557](4311562 call !=[53510] coerce_tmp[4312223] nil[32]))
      val call_tmp[4311565]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4311567 'move' call_tmp[4311565] call_tmp[4311557])
      if call_tmp[4311565]
      {
        ref call_tmp[4311574]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (4311576 'move' call_tmp[4311574](4311579 call rehashHelpers[4312186] this[4311414]))
        val call_tmp[4311582]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (4311584 'move' call_tmp[4311582](4311587 call postfix![3258925] call_tmp[4311574]))
        ref call_tmp[4311589]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4311591 'move' call_tmp[4311589](4311594 call tableSize[4305492] this[4311414]))
        val coerce_tmp[4312235]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4312239 'move' coerce_tmp[4312235](4312237 'deref' call_tmp[4311589]))
        (4311601 call startRehash[265641] call_tmp[4311582] coerce_tmp[4312235])
      }
      ref call_tmp[4311604]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4311606 'move' call_tmp[4311604](4311609 call tableNumDeletedSlots[4310961] this[4311414]))
      (4311613 call =[52229] call_tmp[4311604] 0)
      (4311616 'end of statement')
      {
        val _indexOfInterest[4311618]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[4311620]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        val call_tmp[4311622]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        (4311624 'move' call_tmp[4311622](4311627 call _allSlots[265237] oldSize[4311433]))
        (4311629 'move' _iterator[4311620](4311632 call _getIterator[1946146] call_tmp[4311622]))
        Defer
        {
          {
            (4311636 call _freeIterator[1947321] _iterator[4311620])
          }
        }
        ForLoop[4311645]
        {
          const oldslot[4311648]:int(64)[10] "const" "index var" "insert auto destroy"
          (4311650 'end of statement')
          (4311651 'move' oldslot[4311648] _indexOfInterest[4311618])
          (4311654 'end of statement' oldslot[4311648])
          {
            ref call_tmp[4311657]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead after last mention" "maybe param" "temp"
            (4311659 'move' call_tmp[4311657](4311662 call this[4308628] oldTable[4311447] oldslot[4311648]))
            ref call_tmp[4311664]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
            (4311666 'move' call_tmp[4311664](4311669 call status[4310148] call_tmp[4311657]))
            val call_tmp[4311672]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[4312252]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (4312256 'move' coerce_tmp[4312252](4312254 'deref' call_tmp[4311664]))
            (4311674 'move' call_tmp[4311672](4311677 call ==[3259199] coerce_tmp[4312252] full[264674]))
            val call_tmp[4311680]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (4311682 'move' call_tmp[4311680] call_tmp[4311672])
            if call_tmp[4311680]
            {
              ref oldEntry[4311689]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "ref var"
              ref call_tmp[4311693]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "maybe param" "temp"
              (4311695 'move' call_tmp[4311693](4311698 call this[4308628] oldTable[4311447] oldslot[4311648]))
              (4311700 'move' oldEntry[4311689] call_tmp[4311693])
              (4311704 'end of statement')
              ref call_tmp[4311705]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (4311707 'move' call_tmp[4311705](4311710 call key[4310201] oldEntry[4311689]))
              val call_tmp[4311713]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
              (4311715 'move' call_tmp[4311713](4311721 call _findSlot[4312263] this[4311414] call_tmp[4311705]))
              val tmp[4311723]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
              (4311725 'move' tmp[4311723](4313322 call chpl__initCopy[3260920] call_tmp[4311713] 0))
              1
              (4311732 'end of statement')
              ref call_tmp[4311733]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (4311735 'move' call_tmp[4311733](4313330 '.' tmp[4311723] x0[3257006]))
              val foundSlot[4311740]:bool[19] "dead at end of block" "insert auto destroy"
              val coerce_tmp[4313336]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (4313340 'move' coerce_tmp[4313336](4313338 'deref' call_tmp[4311733]))
              (4311742 'move' foundSlot[4311740](4313333 call chpl__initCopy[1757859] coerce_tmp[4313336] 0))
              ref call_tmp[4311745]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (4311747 'move' call_tmp[4311745](4313345 '.' tmp[4311723] x1[3257008]))
              val newslot[4311752]:int(64)[10] "dead at end of block" "insert auto destroy"
              val coerce_tmp[4313351]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (4313355 'move' coerce_tmp[4313351](4313353 'deref' call_tmp[4311745]))
              (4311754 'move' newslot[4311752](4313348 call chpl__initCopy[1473915] coerce_tmp[4313351] 0))
              (4311757 'end of statement')
              val call_tmp[4311758]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4311760 'move' call_tmp[4311758] foundSlot[4311740])
              if call_tmp[4311758]
              {
                (4311768 call halt[88131] "duplicate element found while resizing for key")
              }
              val call_tmp[4311771]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4311773 'move' call_tmp[4311771](4311776 call <[1469576] newslot[4311752] 0))
              val call_tmp[4311779]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4311781 'move' call_tmp[4311779] call_tmp[4311771])
              if call_tmp[4311779]
              {
                (4311789 call halt[1483780] "couldn't add element during resize - got slot " newslot[4311752] " for key")
                (4311793 'end of statement' newslot[4311752])
              }
              ref dstSlot[4311796]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "ref var"
              ref call_tmp[4311800]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[4313362]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead at end of block" "temp"
              (4313364 'move' _this_tmp_[4313362](4311805 call table[4305464] this[4311414]))
              val coerce_tmp[4313369]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (4313373 'move' coerce_tmp[4313369](4313371 'deref' _this_tmp_[4313362]))
              (4311802 'move' call_tmp[4311800](4311808 call this[4308628] coerce_tmp[4313369] newslot[4311752]))
              (4311810 'move' dstSlot[4311796] call_tmp[4311800])
              (4311814 'end of statement' oldTable[4311447] oldslot[4311648] newslot[4311752])
              ref call_tmp[4311818]:_ref(chpl__hash_status)[3259196] "dead after last mention" "maybe param" "temp"
              (4311820 'move' call_tmp[4311818](4311823 call status[4310148] dstSlot[4311796]))
              (4311827 call =[3261273] call_tmp[4311818] full[264674])
              (4311830 'end of statement' dstSlot[4311796])
              ref call_tmp[4311832]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (4311834 'move' call_tmp[4311832](4311837 call key[4310201] dstSlot[4311796]))
              ref call_tmp[4311840]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (4311842 'move' call_tmp[4311840](4311845 call key[4310201] oldEntry[4311689]))
              val call_tmp[4311848]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (4311850 'move' call_tmp[4311848](4311853 call moveFrom[3261311] call_tmp[4311840]))
              (4311856 call moveInitialize[3261406] call_tmp[4311832] call_tmp[4311848])
              (4311859 'end of statement' dstSlot[4311796] oldEntry[4311689])
              ref call_tmp[4311862]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
              (4311864 'move' call_tmp[4311862](4311867 call val[4313382] dstSlot[4311796]))
              ref call_tmp[4311870]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
              (4311872 'move' call_tmp[4311870](4311875 call val[4313382] oldEntry[4311689]))
              val call_tmp[4311878]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              (4311880 'move' call_tmp[4311878](4311883 call moveFrom[4313411] call_tmp[4311870]))
              (4311886 call moveInitialize[4313506] call_tmp[4311862] call_tmp[4311878])
              (4311889 'end of statement' dstSlot[4311796] oldEntry[4311689])
              ref call_tmp[4311892]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
              (4311894 'move' call_tmp[4311892](4311897 call rehashHelpers[4312186] this[4311414]))
              val call_tmp[4311900]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[4313663]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (4313669 'move' coerce_tmp[4313663](4313665 call borrow[3258798] call_tmp[4311892]))
              val coerce_tmp[4313672]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (4313678 'move' coerce_tmp[4313672](4313674 'cast' borrowed RootClass?[467971] coerce_tmp[4313663]))
              (4311902 'move' call_tmp[4311900](4311905 call !=[53510] coerce_tmp[4313672] nil[32]))
              val call_tmp[4311908]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (4311910 'move' call_tmp[4311908] call_tmp[4311900])
              if call_tmp[4311908]
              {
                ref call_tmp[4311917]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
                (4311919 'move' call_tmp[4311917](4311922 call rehashHelpers[4312186] this[4311414]))
                val call_tmp[4311925]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
                (4311927 'move' call_tmp[4311925](4311930 call postfix![3258925] call_tmp[4311917]))
                (4311936 call moveElementDuringRehash[265654] call_tmp[4311925] oldslot[4311648] newslot[4311752])
                (4311939 'end of statement' oldslot[4311648] newslot[4311752])
              }
            }
          }
          label _continueLabel[4311944]
          _indexOfInterest[4311618]
          _iterator[4311620]
        }
        label _breakLabel[4311946]
      }
      ref call_tmp[4311948]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (4311950 'move' call_tmp[4311948](4311953 call rehashHelpers[4312186] this[4311414]))
      val call_tmp[4311956]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4313685]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4313691 'move' coerce_tmp[4313685](4313687 call borrow[3258798] call_tmp[4311948]))
      val coerce_tmp[4313694]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4313700 'move' coerce_tmp[4313694](4313696 'cast' borrowed RootClass?[467971] coerce_tmp[4313685]))
      (4311958 'move' call_tmp[4311956](4311961 call !=[53510] coerce_tmp[4313694] nil[32]))
      val call_tmp[4311964]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4311966 'move' call_tmp[4311964] call_tmp[4311956])
      if call_tmp[4311964]
      {
        ref call_tmp[4311973]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (4311975 'move' call_tmp[4311973](4311978 call rehashHelpers[4312186] this[4311414]))
        val call_tmp[4311981]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (4311983 'move' call_tmp[4311981](4311986 call postfix![3258925] call_tmp[4311973]))
        (4311992 call finishRehash[265671] call_tmp[4311981] oldSize[4311433])
        (4311994 'end of statement' oldSize[4311433])
      }
      (4311998 call _freeData[4313706] oldTable[4311447] oldSize[4311433])
      (4312001 'end of statement' oldTable[4311447] oldSize[4311433])
    }
    {
      ref call_tmp[4312005]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
      (4312007 'move' call_tmp[4312005](4312010 call rehashHelpers[4312186] this[4311414]))
      val call_tmp[4312013]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4313885]:borrowed chpl__rehashHelpers?[468163] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4313891 'move' coerce_tmp[4313885](4313887 call borrow[3258798] call_tmp[4312005]))
      val coerce_tmp[4313894]:borrowed RootClass?[467971] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4313900 'move' coerce_tmp[4313894](4313896 'cast' borrowed RootClass?[467971] coerce_tmp[4313885]))
      (4312015 'move' call_tmp[4312013](4312018 call !=[53510] coerce_tmp[4313894] nil[32]))
      val call_tmp[4312021]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4312023 'move' call_tmp[4312021] call_tmp[4312013])
      if call_tmp[4312021]
      {
        ref call_tmp[4312030]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (4312032 'move' call_tmp[4312030](4312035 call rehashHelpers[4312186] this[4311414]))
        val call_tmp[4312038]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (4312040 'move' call_tmp[4312038](4312043 call postfix![3258925] call_tmp[4312030]))
        ref call_tmp[4312045]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4312047 'move' call_tmp[4312045](4312050 call tableSize[4305492] this[4311414]))
        val coerce_tmp[4313906]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4313910 'move' coerce_tmp[4313906](4313908 'deref' call_tmp[4312045]))
        (4312057 call startRehash[265641] call_tmp[4312038] coerce_tmp[4313906])
        (4312059 'end of statement')
        ref call_tmp[4312060]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
        (4312062 'move' call_tmp[4312060](4312065 call rehashHelpers[4312186] this[4311414]))
        val call_tmp[4312068]:chpl__rehashHelpers[265685] "dead after last mention" "expr temp" "maybe param" "temp"
        (4312070 'move' call_tmp[4312068](4312073 call postfix![3258925] call_tmp[4312060]))
        (4312079 call finishRehash[265671] call_tmp[4312068] oldSize[4311433])
        (4312081 'end of statement' oldSize[4311433])
      }
      (4312085 call _freeData[4313706] oldTable[4311447] oldSize[4311433])
      (4312088 'end of statement' oldTable[4311447] oldSize[4311433])
      ref call_tmp[4312091]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "maybe param" "temp"
      (4312093 'move' call_tmp[4312091](4312096 call table[4305464] this[4311414]))
      ref call_tmp[4312099]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4312101 'move' call_tmp[4312099](4312104 call tableSize[4305492] this[4311414]))
      val call_tmp[4312107]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4313919]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4313923 'move' coerce_tmp[4313919](4313921 'deref' call_tmp[4312099]))
      (4312109 'move' call_tmp[4312107](4312115 call allocateTable[4305520] this[4311414] coerce_tmp[4313919]))
      (4312118 call =[4306970] call_tmp[4312091] call_tmp[4312107])
      (4312121 'end of statement')
      ref call_tmp[4312122]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4312124 'move' call_tmp[4312122](4312127 call tableNumDeletedSlots[4310961] this[4311414]))
      (4312131 call =[52229] call_tmp[4312122] 0)
    }
    (4312135 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].resize[3257624](ref arg this[3257628]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], const in arg grow[3257630]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3257636]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3257638 'move' call_tmp[3257636](3257641 call postponeResize[3257871] this[3257628]))
    val call_tmp[3257644]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3257899]:bool[19] "dead after last mention" "const" "temp"
    (3257901 'move' tmp[3257899](3257903 'deref' call_tmp[3257636]))
    (3257646 'move' call_tmp[3257644] tmp[3257899])
    if call_tmp[3257644]
    {
      gotoReturn _end_resize[3257866] _end_resize[3257866]
    }
    val newSize[3257656]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3257658]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3257660]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3257662]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257664 'move' call_tmp[3257662](3257667 call tableSize[1942995] this[3257628]))
    val call_tmp[3257670]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3257906]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3257910 'move' coerce_tmp[3257906](3257908 'deref' call_tmp[3257662]))
    (3257672 'move' call_tmp[3257670](3257675 call ==[52746] coerce_tmp[3257906] 0))
    (3257678 'move' tmp[3257660] call_tmp[3257670])
    if tmp[3257660]
    {
      ref tmp[3257685]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
      (3257687 'move' tmp[3257685](3257690 call startingSize[3257913] this[3257628]))
      (3262111 '=' tmp[3257658](3262109 'deref' tmp[3257685]))
    }
    {
      val tmp[3257699]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
      val tmp[3257701]:bool[19] "dead after last mention" "maybe param" "temp"
      (3257703 'move' tmp[3257701] grow[3257630])
      if tmp[3257701]
      {
        val tmp[3257710]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3257712]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3257714 'move' call_tmp[3257712](3257717 call tableSize[1942995] this[3257628]))
        val coerce_tmp[3257942]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3257946 'move' coerce_tmp[3257942](3257944 'deref' call_tmp[3257712]))
        (3257720 'move' tmp[3257710](3257723 call <<[1520334] coerce_tmp[3257942] 1))
        (3257726 'move' tmp[3257699] tmp[3257710])
      }
      {
        val tmp[3257732]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3257734]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3257736 'move' call_tmp[3257734](3257739 call tableSize[1942995] this[3257628]))
        val coerce_tmp[3257950]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3257954 'move' coerce_tmp[3257950](3257952 'deref' call_tmp[3257734]))
        (3257742 'move' tmp[3257732](3257745 call >>[3255949] coerce_tmp[3257950] 1))
        (3257748 'move' tmp[3257699] tmp[3257732])
      }
      (3257754 'move' tmp[3257658] tmp[3257699])
    }
    (3257760 'move' newSize[3257656] tmp[3257658])
    (3257763 'end of statement')
    val tmp[3257764]:bool[19] "dead after last mention" "maybe param" "temp"
    (3257766 'move' tmp[3257764](3257769 call ==[52666] grow[3257630] 0))
    val call_tmp[3257772]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3257960 'end of statement')
    val tmp[3257785]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3257787]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3257789]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3257791 'move' call_tmp[3257789] tmp[3257764])
    (3257796 'move' tmp[3257787] call_tmp[3257789])
    if tmp[3257787]
    {
      val tmp[3257803]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3257805]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3257807 'move' call_tmp[3257805](3257810 call tableNumFullSlots[3257493] this[3257628]))
      val call_tmp[3257813]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3257978]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3257982 'move' coerce_tmp[3257978](3257980 'deref' call_tmp[3257805]))
      (3257815 'move' call_tmp[3257813](3257818 call *[1517100] coerce_tmp[3257978]))
      val call_tmp[3257821]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3257823 'move' call_tmp[3257821](3257826 call >[55238] call_tmp[3257813] newSize[3257656]))
      (3257829 'move' tmp[3257803] call_tmp[3257821])
      (3257834 'move' tmp[3257785] tmp[3257803])
    }
    {
      (3257840 'move' tmp[3257785] 0)
    }
    val call_tmp[3257846]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3257848 'move' call_tmp[3257846] tmp[3257785])
    if call_tmp[3257846]
    {
      gotoReturn _end_resize[3257866] _end_resize[3257866]
    }
    (3257862 call rehash[3257986] this[3257628] newSize[3257656])
    (3257864 'end of statement' newSize[3257656])
    label _end_resize[3257866]
    (3257868 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].resize[3301918](ref arg this[3301922]:_ref(chpl__hashtable(string,int(64)))[3288858], const in arg grow[3301924]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3301930]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3301932 'move' call_tmp[3301930](3301935 call postponeResize[3302165] this[3301922]))
    val call_tmp[3301938]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3302193]:bool[19] "dead after last mention" "const" "temp"
    (3302195 'move' tmp[3302193](3302197 'deref' call_tmp[3301930]))
    (3301940 'move' call_tmp[3301938] tmp[3302193])
    if call_tmp[3301938]
    {
      gotoReturn _end_resize[3302160] _end_resize[3302160]
    }
    val newSize[3301950]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3301952]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3301954]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3301956]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301958 'move' call_tmp[3301956](3301961 call tableSize[3301883] this[3301922]))
    val call_tmp[3301964]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3302200]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3302204 'move' coerce_tmp[3302200](3302202 'deref' call_tmp[3301956]))
    (3301966 'move' call_tmp[3301964](3301969 call ==[52746] coerce_tmp[3302200] 0))
    (3301972 'move' tmp[3301954] call_tmp[3301964])
    if tmp[3301954]
    {
      ref tmp[3301979]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
      (3301981 'move' tmp[3301979](3301984 call startingSize[3302207] this[3301922]))
      (3308339 '=' tmp[3301952](3308337 'deref' tmp[3301979]))
    }
    {
      val tmp[3301993]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
      val tmp[3301995]:bool[19] "dead after last mention" "maybe param" "temp"
      (3301997 'move' tmp[3301995] grow[3301924])
      if tmp[3301995]
      {
        val tmp[3302004]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3302006]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3302008 'move' call_tmp[3302006](3302011 call tableSize[3301883] this[3301922]))
        val coerce_tmp[3302236]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3302240 'move' coerce_tmp[3302236](3302238 'deref' call_tmp[3302006]))
        (3302014 'move' tmp[3302004](3302017 call <<[1520334] coerce_tmp[3302236] 1))
        (3302020 'move' tmp[3301993] tmp[3302004])
      }
      {
        val tmp[3302026]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3302028]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3302030 'move' call_tmp[3302028](3302033 call tableSize[3301883] this[3301922]))
        val coerce_tmp[3302244]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3302248 'move' coerce_tmp[3302244](3302246 'deref' call_tmp[3302028]))
        (3302036 'move' tmp[3302026](3302039 call >>[3255949] coerce_tmp[3302244] 1))
        (3302042 'move' tmp[3301993] tmp[3302026])
      }
      (3302048 'move' tmp[3301952] tmp[3301993])
    }
    (3302054 'move' newSize[3301950] tmp[3301952])
    (3302057 'end of statement')
    val tmp[3302058]:bool[19] "dead after last mention" "maybe param" "temp"
    (3302060 'move' tmp[3302058](3302063 call ==[52666] grow[3301924] 0))
    val call_tmp[3302066]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3302254 'end of statement')
    val tmp[3302079]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3302081]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3302083]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3302085 'move' call_tmp[3302083] tmp[3302058])
    (3302090 'move' tmp[3302081] call_tmp[3302083])
    if tmp[3302081]
    {
      val tmp[3302097]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3302099]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3302101 'move' call_tmp[3302099](3302104 call tableNumFullSlots[3301760] this[3301922]))
      val call_tmp[3302107]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3302256]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3302260 'move' coerce_tmp[3302256](3302258 'deref' call_tmp[3302099]))
      (3302109 'move' call_tmp[3302107](3302112 call *[1517100] coerce_tmp[3302256]))
      val call_tmp[3302115]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3302117 'move' call_tmp[3302115](3302120 call >[55238] call_tmp[3302107] newSize[3301950]))
      (3302123 'move' tmp[3302097] call_tmp[3302115])
      (3302128 'move' tmp[3302079] tmp[3302097])
    }
    {
      (3302134 'move' tmp[3302079] 0)
    }
    val call_tmp[3302140]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3302142 'move' call_tmp[3302140] tmp[3302079])
    if call_tmp[3302140]
    {
      gotoReturn _end_resize[3302160] _end_resize[3302160]
    }
    (3302156 call rehash[3302264] this[3301922] newSize[3301950])
    (3302158 'end of statement' newSize[3301950])
    label _end_resize[3302160]
    (3302162 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].resize[3346141](ref arg this[3346145]:_ref(chpl__hashtable(string,string))[3283450], const in arg grow[3346147]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3346153]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3346155 'move' call_tmp[3346153](3346158 call postponeResize[3346388] this[3346145]))
    val call_tmp[3346161]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3346416]:bool[19] "dead after last mention" "const" "temp"
    (3346418 'move' tmp[3346416](3346420 'deref' call_tmp[3346153]))
    (3346163 'move' call_tmp[3346161] tmp[3346416])
    if call_tmp[3346161]
    {
      gotoReturn _end_resize[3346383] _end_resize[3346383]
    }
    val newSize[3346173]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3346175]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3346177]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3346179]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3346181 'move' call_tmp[3346179](3346184 call tableSize[3340120] this[3346145]))
    val call_tmp[3346187]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3346423]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3346427 'move' coerce_tmp[3346423](3346425 'deref' call_tmp[3346179]))
    (3346189 'move' call_tmp[3346187](3346192 call ==[52746] coerce_tmp[3346423] 0))
    (3346195 'move' tmp[3346177] call_tmp[3346187])
    if tmp[3346177]
    {
      ref tmp[3346202]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
      (3346204 'move' tmp[3346202](3346207 call startingSize[3346030] this[3346145]))
      (3348705 '=' tmp[3346175](3348703 'deref' tmp[3346202]))
    }
    {
      val tmp[3346216]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
      val tmp[3346218]:bool[19] "dead after last mention" "maybe param" "temp"
      (3346220 'move' tmp[3346218] grow[3346147])
      if tmp[3346218]
      {
        val tmp[3346227]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3346229]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3346231 'move' call_tmp[3346229](3346234 call tableSize[3340120] this[3346145]))
        val coerce_tmp[3346432]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3346436 'move' coerce_tmp[3346432](3346434 'deref' call_tmp[3346229]))
        (3346237 'move' tmp[3346227](3346240 call <<[1520334] coerce_tmp[3346432] 1))
        (3346243 'move' tmp[3346216] tmp[3346227])
      }
      {
        val tmp[3346249]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3346251]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3346253 'move' call_tmp[3346251](3346256 call tableSize[3340120] this[3346145]))
        val coerce_tmp[3346440]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3346444 'move' coerce_tmp[3346440](3346442 'deref' call_tmp[3346251]))
        (3346259 'move' tmp[3346249](3346262 call >>[3255949] coerce_tmp[3346440] 1))
        (3346265 'move' tmp[3346216] tmp[3346249])
      }
      (3346271 'move' tmp[3346175] tmp[3346216])
    }
    (3346277 'move' newSize[3346173] tmp[3346175])
    (3346280 'end of statement')
    val tmp[3346281]:bool[19] "dead after last mention" "maybe param" "temp"
    (3346283 'move' tmp[3346281](3346286 call ==[52666] grow[3346147] 0))
    val call_tmp[3346289]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3346450 'end of statement')
    val tmp[3346302]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3346304]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3346306]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3346308 'move' call_tmp[3346306] tmp[3346281])
    (3346313 'move' tmp[3346304] call_tmp[3346306])
    if tmp[3346304]
    {
      val tmp[3346320]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3346322]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3346324 'move' call_tmp[3346322](3346327 call tableNumFullSlots[3345794] this[3346145]))
      val call_tmp[3346330]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3346452]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3346456 'move' coerce_tmp[3346452](3346454 'deref' call_tmp[3346322]))
      (3346332 'move' call_tmp[3346330](3346335 call *[1517100] coerce_tmp[3346452]))
      val call_tmp[3346338]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3346340 'move' call_tmp[3346338](3346343 call >[55238] call_tmp[3346330] newSize[3346173]))
      (3346346 'move' tmp[3346320] call_tmp[3346338])
      (3346351 'move' tmp[3346302] tmp[3346320])
    }
    {
      (3346357 'move' tmp[3346302] 0)
    }
    val call_tmp[3346363]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3346365 'move' call_tmp[3346363] tmp[3346302])
    if call_tmp[3346363]
    {
      gotoReturn _end_resize[3346383] _end_resize[3346383]
    }
    (3346379 call rehash[3346460] this[3346145] newSize[3346173])
    (3346381 'end of statement' newSize[3346173])
    label _end_resize[3346383]
    (3346385 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].resize[3363667](ref arg this[3363671]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], const in arg grow[3363673]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3363679]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3363681 'move' call_tmp[3363679](3363684 call postponeResize[3363914] this[3363671]))
    val call_tmp[3363687]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3363942]:bool[19] "dead after last mention" "const" "temp"
    (3363944 'move' tmp[3363942](3363946 'deref' call_tmp[3363679]))
    (3363689 'move' call_tmp[3363687] tmp[3363942])
    if call_tmp[3363687]
    {
      gotoReturn _end_resize[3363909] _end_resize[3363909]
    }
    val newSize[3363699]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3363701]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3363703]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3363705]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3363707 'move' call_tmp[3363705](3363710 call tableSize[3355205] this[3363671]))
    val call_tmp[3363713]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3363949]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3363953 'move' coerce_tmp[3363949](3363951 'deref' call_tmp[3363705]))
    (3363715 'move' call_tmp[3363713](3363718 call ==[52746] coerce_tmp[3363949] 0))
    (3363721 'move' tmp[3363703] call_tmp[3363713])
    if tmp[3363703]
    {
      ref tmp[3363728]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
      (3363730 'move' tmp[3363728](3363733 call startingSize[3363556] this[3363671]))
      (3366386 '=' tmp[3363701](3366384 'deref' tmp[3363728]))
    }
    {
      val tmp[3363742]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
      val tmp[3363744]:bool[19] "dead after last mention" "maybe param" "temp"
      (3363746 'move' tmp[3363744] grow[3363673])
      if tmp[3363744]
      {
        val tmp[3363753]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3363755]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3363757 'move' call_tmp[3363755](3363760 call tableSize[3355205] this[3363671]))
        val coerce_tmp[3363958]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3363962 'move' coerce_tmp[3363958](3363960 'deref' call_tmp[3363755]))
        (3363763 'move' tmp[3363753](3363766 call <<[1520334] coerce_tmp[3363958] 1))
        (3363769 'move' tmp[3363742] tmp[3363753])
      }
      {
        val tmp[3363775]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3363777]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3363779 'move' call_tmp[3363777](3363782 call tableSize[3355205] this[3363671]))
        val coerce_tmp[3363966]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3363970 'move' coerce_tmp[3363966](3363968 'deref' call_tmp[3363777]))
        (3363785 'move' tmp[3363775](3363788 call >>[3255949] coerce_tmp[3363966] 1))
        (3363791 'move' tmp[3363742] tmp[3363775])
      }
      (3363797 'move' tmp[3363701] tmp[3363742])
    }
    (3363803 'move' newSize[3363699] tmp[3363701])
    (3363806 'end of statement')
    val tmp[3363807]:bool[19] "dead after last mention" "maybe param" "temp"
    (3363809 'move' tmp[3363807](3363812 call ==[52666] grow[3363673] 0))
    val call_tmp[3363815]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3363976 'end of statement')
    val tmp[3363828]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3363830]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3363832]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3363834 'move' call_tmp[3363832] tmp[3363807])
    (3363839 'move' tmp[3363830] call_tmp[3363832])
    if tmp[3363830]
    {
      val tmp[3363846]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3363848]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3363850 'move' call_tmp[3363848](3363853 call tableNumFullSlots[3363320] this[3363671]))
      val call_tmp[3363856]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3363978]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3363982 'move' coerce_tmp[3363978](3363980 'deref' call_tmp[3363848]))
      (3363858 'move' call_tmp[3363856](3363861 call *[1517100] coerce_tmp[3363978]))
      val call_tmp[3363864]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3363866 'move' call_tmp[3363864](3363869 call >[55238] call_tmp[3363856] newSize[3363699]))
      (3363872 'move' tmp[3363846] call_tmp[3363864])
      (3363877 'move' tmp[3363828] tmp[3363846])
    }
    {
      (3363883 'move' tmp[3363828] 0)
    }
    val call_tmp[3363889]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3363891 'move' call_tmp[3363889] tmp[3363828])
    if call_tmp[3363889]
    {
      gotoReturn _end_resize[3363909] _end_resize[3363909]
    }
    (3363905 call rehash[3363986] this[3363671] newSize[3363699])
    (3363907 'end of statement' newSize[3363699])
    label _end_resize[3363909]
    (3363911 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].resize[3401382](ref arg this[3401386]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], const in arg grow[3401388]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3401394]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3401396 'move' call_tmp[3401394](3401399 call postponeResize[3401629] this[3401386]))
    val call_tmp[3401402]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3401657]:bool[19] "dead after last mention" "const" "temp"
    (3401659 'move' tmp[3401657](3401661 'deref' call_tmp[3401394]))
    (3401404 'move' call_tmp[3401402] tmp[3401657])
    if call_tmp[3401402]
    {
      gotoReturn _end_resize[3401624] _end_resize[3401624]
    }
    val newSize[3401414]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3401416]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3401418]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3401420]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401422 'move' call_tmp[3401420](3401425 call tableSize[3392339] this[3401386]))
    val call_tmp[3401428]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3401664]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3401668 'move' coerce_tmp[3401664](3401666 'deref' call_tmp[3401420]))
    (3401430 'move' call_tmp[3401428](3401433 call ==[52746] coerce_tmp[3401664] 0))
    (3401436 'move' tmp[3401418] call_tmp[3401428])
    if tmp[3401418]
    {
      ref tmp[3401443]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
      (3401445 'move' tmp[3401443](3401448 call startingSize[3401671] this[3401386]))
      (3404303 '=' tmp[3401416](3404301 'deref' tmp[3401443]))
    }
    {
      val tmp[3401457]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
      val tmp[3401459]:bool[19] "dead after last mention" "maybe param" "temp"
      (3401461 'move' tmp[3401459] grow[3401388])
      if tmp[3401459]
      {
        val tmp[3401468]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3401470]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3401472 'move' call_tmp[3401470](3401475 call tableSize[3392339] this[3401386]))
        val coerce_tmp[3401700]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3401704 'move' coerce_tmp[3401700](3401702 'deref' call_tmp[3401470]))
        (3401478 'move' tmp[3401468](3401481 call <<[1520334] coerce_tmp[3401700] 1))
        (3401484 'move' tmp[3401457] tmp[3401468])
      }
      {
        val tmp[3401490]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3401492]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3401494 'move' call_tmp[3401492](3401497 call tableSize[3392339] this[3401386]))
        val coerce_tmp[3401708]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3401712 'move' coerce_tmp[3401708](3401710 'deref' call_tmp[3401492]))
        (3401500 'move' tmp[3401490](3401503 call >>[3255949] coerce_tmp[3401708] 1))
        (3401506 'move' tmp[3401457] tmp[3401490])
      }
      (3401512 'move' tmp[3401416] tmp[3401457])
    }
    (3401518 'move' newSize[3401414] tmp[3401416])
    (3401521 'end of statement')
    val tmp[3401522]:bool[19] "dead after last mention" "maybe param" "temp"
    (3401524 'move' tmp[3401522](3401527 call ==[52666] grow[3401388] 0))
    val call_tmp[3401530]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3401718 'end of statement')
    val tmp[3401543]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3401545]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3401547]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3401549 'move' call_tmp[3401547] tmp[3401522])
    (3401554 'move' tmp[3401545] call_tmp[3401547])
    if tmp[3401545]
    {
      val tmp[3401561]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3401563]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3401565 'move' call_tmp[3401563](3401568 call tableNumFullSlots[3401251] this[3401386]))
      val call_tmp[3401571]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3401720]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3401724 'move' coerce_tmp[3401720](3401722 'deref' call_tmp[3401563]))
      (3401573 'move' call_tmp[3401571](3401576 call *[1517100] coerce_tmp[3401720]))
      val call_tmp[3401579]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3401581 'move' call_tmp[3401579](3401584 call >[55238] call_tmp[3401571] newSize[3401414]))
      (3401587 'move' tmp[3401561] call_tmp[3401579])
      (3401592 'move' tmp[3401543] tmp[3401561])
    }
    {
      (3401598 'move' tmp[3401543] 0)
    }
    val call_tmp[3401604]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3401606 'move' call_tmp[3401604] tmp[3401543])
    if call_tmp[3401604]
    {
      gotoReturn _end_resize[3401624] _end_resize[3401624]
    }
    (3401620 call rehash[3401728] this[3401386] newSize[3401414])
    (3401622 'end of statement' newSize[3401414])
    label _end_resize[3401624]
    (3401626 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].resize[3860931](ref arg this[3860935]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], const in arg grow[3860937]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[3860943]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3860945 'move' call_tmp[3860943](3860948 call postponeResize[3861178] this[3860935]))
    val call_tmp[3860951]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3861206]:bool[19] "dead after last mention" "const" "temp"
    (3861208 'move' tmp[3861206](3861210 'deref' call_tmp[3860943]))
    (3860953 'move' call_tmp[3860951] tmp[3861206])
    if call_tmp[3860951]
    {
      gotoReturn _end_resize[3861173] _end_resize[3861173]
    }
    val newSize[3860963]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3860965]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3860967]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[3860969]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860971 'move' call_tmp[3860969](3860974 call tableSize[3828932] this[3860935]))
    val call_tmp[3860977]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3861213]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3861217 'move' coerce_tmp[3861213](3861215 'deref' call_tmp[3860969]))
    (3860979 'move' call_tmp[3860977](3860982 call ==[52746] coerce_tmp[3861213] 0))
    (3860985 'move' tmp[3860967] call_tmp[3860977])
    if tmp[3860967]
    {
      ref tmp[3860992]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
      (3860994 'move' tmp[3860992](3860997 call startingSize[3861220] this[3860935]))
      (3863852 '=' tmp[3860965](3863850 'deref' tmp[3860992]))
    }
    {
      val tmp[3861006]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
      val tmp[3861008]:bool[19] "dead after last mention" "maybe param" "temp"
      (3861010 'move' tmp[3861008] grow[3860937])
      if tmp[3861008]
      {
        val tmp[3861017]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3861019]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3861021 'move' call_tmp[3861019](3861024 call tableSize[3828932] this[3860935]))
        val coerce_tmp[3861249]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3861253 'move' coerce_tmp[3861249](3861251 'deref' call_tmp[3861019]))
        (3861027 'move' tmp[3861017](3861030 call <<[1520334] coerce_tmp[3861249] 1))
        (3861033 'move' tmp[3861006] tmp[3861017])
      }
      {
        val tmp[3861039]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[3861041]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3861043 'move' call_tmp[3861041](3861046 call tableSize[3828932] this[3860935]))
        val coerce_tmp[3861257]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3861261 'move' coerce_tmp[3861257](3861259 'deref' call_tmp[3861041]))
        (3861049 'move' tmp[3861039](3861052 call >>[3255949] coerce_tmp[3861257] 1))
        (3861055 'move' tmp[3861006] tmp[3861039])
      }
      (3861061 'move' tmp[3860965] tmp[3861006])
    }
    (3861067 'move' newSize[3860963] tmp[3860965])
    (3861070 'end of statement')
    val tmp[3861071]:bool[19] "dead after last mention" "maybe param" "temp"
    (3861073 'move' tmp[3861071](3861076 call ==[52666] grow[3860937] 0))
    val call_tmp[3861079]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3861267 'end of statement')
    val tmp[3861092]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[3861094]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3861096]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3861098 'move' call_tmp[3861096] tmp[3861071])
    (3861103 'move' tmp[3861094] call_tmp[3861096])
    if tmp[3861094]
    {
      val tmp[3861110]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[3861112]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (3861114 'move' call_tmp[3861112](3861117 call tableNumFullSlots[3860800] this[3860935]))
      val call_tmp[3861120]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[3861269]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3861273 'move' coerce_tmp[3861269](3861271 'deref' call_tmp[3861112]))
      (3861122 'move' call_tmp[3861120](3861125 call *[1517100] coerce_tmp[3861269]))
      val call_tmp[3861128]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3861130 'move' call_tmp[3861128](3861133 call >[55238] call_tmp[3861120] newSize[3860963]))
      (3861136 'move' tmp[3861110] call_tmp[3861128])
      (3861141 'move' tmp[3861092] tmp[3861110])
    }
    {
      (3861147 'move' tmp[3861092] 0)
    }
    val call_tmp[3861153]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3861155 'move' call_tmp[3861153] tmp[3861092])
    if call_tmp[3861153]
    {
      gotoReturn _end_resize[3861173] _end_resize[3861173]
    }
    (3861169 call rehash[3861277] this[3860935] newSize[3860963])
    (3861171 'end of statement' newSize[3860963])
    label _end_resize[3861173]
    (3861175 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].resize[4311064](ref arg this[4311068]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], const in arg grow[4311070]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[4311076]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4311078 'move' call_tmp[4311076](4311081 call postponeResize[4311311] this[4311068]))
    val call_tmp[4311084]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[4311339]:bool[19] "dead after last mention" "const" "temp"
    (4311341 'move' tmp[4311339](4311343 'deref' call_tmp[4311076]))
    (4311086 'move' call_tmp[4311084] tmp[4311339])
    if call_tmp[4311084]
    {
      gotoReturn _end_resize[4311306] _end_resize[4311306]
    }
    val newSize[4311096]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[4311098]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[4311100]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[4311102]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4311104 'move' call_tmp[4311102](4311107 call tableSize[4305492] this[4311068]))
    val call_tmp[4311110]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4311346]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4311350 'move' coerce_tmp[4311346](4311348 'deref' call_tmp[4311102]))
    (4311112 'move' call_tmp[4311110](4311115 call ==[52746] coerce_tmp[4311346] 0))
    (4311118 'move' tmp[4311100] call_tmp[4311110])
    if tmp[4311100]
    {
      ref tmp[4311125]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "no auto destroy" "reference to a const field of 'this'" "reference to a const" "temp"
      (4311127 'move' tmp[4311125](4311130 call startingSize[4311353] this[4311068]))
      (4313931 '=' tmp[4311098](4313929 'deref' tmp[4311125]))
    }
    {
      val tmp[4311139]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
      val tmp[4311141]:bool[19] "dead after last mention" "maybe param" "temp"
      (4311143 'move' tmp[4311141] grow[4311070])
      if tmp[4311141]
      {
        val tmp[4311150]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[4311152]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4311154 'move' call_tmp[4311152](4311157 call tableSize[4305492] this[4311068]))
        val coerce_tmp[4311382]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4311386 'move' coerce_tmp[4311382](4311384 'deref' call_tmp[4311152]))
        (4311160 'move' tmp[4311150](4311163 call <<[1520334] coerce_tmp[4311382] 1))
        (4311166 'move' tmp[4311139] tmp[4311150])
      }
      {
        val tmp[4311172]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[4311174]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4311176 'move' call_tmp[4311174](4311179 call tableSize[4305492] this[4311068]))
        val coerce_tmp[4311390]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4311394 'move' coerce_tmp[4311390](4311392 'deref' call_tmp[4311174]))
        (4311182 'move' tmp[4311172](4311185 call >>[3255949] coerce_tmp[4311390] 1))
        (4311188 'move' tmp[4311139] tmp[4311172])
      }
      (4311194 'move' tmp[4311098] tmp[4311139])
    }
    (4311200 'move' newSize[4311096] tmp[4311098])
    (4311203 'end of statement')
    val tmp[4311204]:bool[19] "dead after last mention" "maybe param" "temp"
    (4311206 'move' tmp[4311204](4311209 call ==[52666] grow[4311070] 0))
    val call_tmp[4311212]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (4311400 'end of statement')
    val tmp[4311225]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[4311227]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[4311229]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4311231 'move' call_tmp[4311229] tmp[4311204])
    (4311236 'move' tmp[4311227] call_tmp[4311229])
    if tmp[4311227]
    {
      val tmp[4311243]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[4311245]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (4311247 'move' call_tmp[4311245](4311250 call tableNumFullSlots[4310933] this[4311068]))
      val call_tmp[4311253]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4311402]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4311406 'move' coerce_tmp[4311402](4311404 'deref' call_tmp[4311245]))
      (4311255 'move' call_tmp[4311253](4311258 call *[1517100] coerce_tmp[4311402]))
      val call_tmp[4311261]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (4311263 'move' call_tmp[4311261](4311266 call >[55238] call_tmp[4311253] newSize[4311096]))
      (4311269 'move' tmp[4311243] call_tmp[4311261])
      (4311274 'move' tmp[4311225] tmp[4311243])
    }
    {
      (4311280 'move' tmp[4311225] 0)
    }
    val call_tmp[4311286]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4311288 'move' call_tmp[4311286] tmp[4311225])
    if call_tmp[4311286]
    {
      gotoReturn _end_resize[4311306] _end_resize[4311306]
    }
    (4311302 call rehash[4311410] this[4311068] newSize[4311096])
    (4311304 'end of statement' newSize[4311096])
    label _end_resize[4311306]
    (4311308 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].tableNumFullSlots[3257493](ref arg this[3257497]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3257499]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3257507]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257509 'move' call_tmp[3257507](3257511 '.' this[3257497] tableNumFullSlots[1941461]))
    (3257514 'move' ret[3257499] call_tmp[3257507])
    (3257518 return ret[3257499])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].tableNumFullSlots[3301760](ref arg this[3301764]:_ref(chpl__hashtable(string,int(64)))[3288858]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3301766]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3301774]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301776 'move' call_tmp[3301774](3301778 '.' this[3301764] tableNumFullSlots[3288818]))
    (3301781 'move' ret[3301766] call_tmp[3301774])
    (3301785 return ret[3301766])
  }
  function _ref(chpl__hashtable(string,string))[3283450].tableNumFullSlots[3345794](ref arg this[3345798]:_ref(chpl__hashtable(string,string))[3283450]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3345800]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3345808]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3345810 'move' call_tmp[3345808](3345812 '.' this[3345798] tableNumFullSlots[3283410]))
    (3345815 'move' ret[3345800] call_tmp[3345808])
    (3345819 return ret[3345800])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].tableNumFullSlots[3363320](ref arg this[3363324]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3363326]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3363334]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3363336 'move' call_tmp[3363334](3363338 '.' this[3363324] tableNumFullSlots[3283710]))
    (3363341 'move' ret[3363326] call_tmp[3363334])
    (3363345 return ret[3363326])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].tableNumFullSlots[3401251](ref arg this[3401255]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3401257]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3401265]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401267 'move' call_tmp[3401265](3401269 '.' this[3401255] tableNumFullSlots[3392174]))
    (3401272 'move' ret[3401257] call_tmp[3401265])
    (3401276 return ret[3401257])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].tableNumFullSlots[3860800](ref arg this[3860804]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3860806]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3860814]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860816 'move' call_tmp[3860814](3860818 '.' this[3860804] tableNumFullSlots[3405208]))
    (3860821 'move' ret[3860806] call_tmp[3860814])
    (3860825 return ret[3860806])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].tableNumFullSlots[4310933](ref arg this[4310937]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4310939]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[4310947]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4310949 'move' call_tmp[4310947](4310951 '.' this[4310937] tableNumFullSlots[3855361]))
    (4310954 'move' ret[4310939] call_tmp[4310947])
    (4310958 return ret[4310939])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].tableNumDeletedSlots[3257521](ref arg this[3257525]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3257527]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3257535]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257537 'move' call_tmp[3257535](3257539 '.' this[3257525] tableNumDeletedSlots[1941464]))
    (3257542 'move' ret[3257527] call_tmp[3257535])
    (3257546 return ret[3257527])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].tableNumDeletedSlots[3301788](ref arg this[3301792]:_ref(chpl__hashtable(string,int(64)))[3288858]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3301794]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3301802]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301804 'move' call_tmp[3301802](3301806 '.' this[3301792] tableNumDeletedSlots[3288821]))
    (3301809 'move' ret[3301794] call_tmp[3301802])
    (3301813 return ret[3301794])
  }
  function _ref(chpl__hashtable(string,string))[3283450].tableNumDeletedSlots[3345823](ref arg this[3345827]:_ref(chpl__hashtable(string,string))[3283450]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3345829]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3345837]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3345839 'move' call_tmp[3345837](3345841 '.' this[3345827] tableNumDeletedSlots[3283413]))
    (3345844 'move' ret[3345829] call_tmp[3345837])
    (3345848 return ret[3345829])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].tableNumDeletedSlots[3363349](ref arg this[3363353]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3363355]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3363363]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3363365 'move' call_tmp[3363363](3363367 '.' this[3363353] tableNumDeletedSlots[3283713]))
    (3363370 'move' ret[3363355] call_tmp[3363363])
    (3363374 return ret[3363355])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].tableNumDeletedSlots[3401279](ref arg this[3401283]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3401285]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3401293]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401295 'move' call_tmp[3401293](3401297 '.' this[3401283] tableNumDeletedSlots[3392177]))
    (3401300 'move' ret[3401285] call_tmp[3401293])
    (3401304 return ret[3401285])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].tableNumDeletedSlots[3860828](ref arg this[3860832]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3860834]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3860842]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860844 'move' call_tmp[3860842](3860846 '.' this[3860832] tableNumDeletedSlots[3405211]))
    (3860849 'move' ret[3860834] call_tmp[3860842])
    (3860853 return ret[3860834])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].tableNumDeletedSlots[4310961](ref arg this[4310965]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4310967]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[4310975]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4310977 'move' call_tmp[4310975](4310979 '.' this[4310965] tableNumDeletedSlots[3855364]))
    (4310982 'move' ret[4310967] call_tmp[4310975])
    (4310986 return ret[4310967])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].tableSize[1942995](ref arg this[1942999]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1943001]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1943009]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1943011 'move' call_tmp[1943009](1943013 '.' this[1942999] tableSize[1941467]))
    (1943016 'move' ret[1943001] call_tmp[1943009])
    (1943020 return ret[1943001])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].tableSize[3301883](ref arg this[3301887]:_ref(chpl__hashtable(string,int(64)))[3288858]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3301889]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3301897]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301899 'move' call_tmp[3301897](3301901 '.' this[3301887] tableSize[3288824]))
    (3301904 'move' ret[3301889] call_tmp[3301897])
    (3301908 return ret[3301889])
  }
  function _ref(chpl__hashtable(string,string))[3283450].tableSize[3340120](ref arg this[3340124]:_ref(chpl__hashtable(string,string))[3283450]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3340126]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3340134]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3340136 'move' call_tmp[3340134](3340138 '.' this[3340124] tableSize[3283416]))
    (3340141 'move' ret[3340126] call_tmp[3340134])
    (3340145 return ret[3340126])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].tableSize[3355205](ref arg this[3355209]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3355211]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3355219]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3355221 'move' call_tmp[3355219](3355223 '.' this[3355209] tableSize[3283716]))
    (3355226 'move' ret[3355211] call_tmp[3355219])
    (3355230 return ret[3355211])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].tableSize[3392339](ref arg this[3392343]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3392345]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3392353]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3392355 'move' call_tmp[3392353](3392357 '.' this[3392343] tableSize[3392180]))
    (3392360 'move' ret[3392345] call_tmp[3392353])
    (3392364 return ret[3392345])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].tableSize[3828932](ref arg this[3828936]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3828938]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3828946]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3828948 'move' call_tmp[3828946](3828950 '.' this[3828936] tableSize[3405214]))
    (3828953 'move' ret[3828938] call_tmp[3828946])
    (3828957 return ret[3828938])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].tableSize[4305492](ref arg this[4305496]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4305498]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[4305506]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4305508 'move' call_tmp[4305506](4305510 '.' this[4305496] tableSize[3855367]))
    (4305513 'move' ret[4305498] call_tmp[4305506])
    (4305517 return ret[4305498])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].table[1942967](ref arg this[1942971]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) ref : _ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1942973]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "RVV" "temp"
    ref call_tmp[1942981]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "maybe param" "temp"
    (1942983 'move' call_tmp[1942981](1942985 '.' this[1942971] table[1941470]))
    (1942988 'move' ret[1942973] call_tmp[1942981])
    (1942992 return ret[1942973])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].table[3303003](ref arg this[3303007]:_ref(chpl__hashtable(string,int(64)))[3288858]) ref : _ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3303009]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "RVV" "temp"
    ref call_tmp[3303017]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "maybe param" "temp"
    (3303019 'move' call_tmp[3303017](3303021 '.' this[3303007] table[3288827]))
    (3303024 'move' ret[3303009] call_tmp[3303017])
    (3303028 return ret[3303009])
  }
  function _ref(chpl__hashtable(string,string))[3283450].table[3340092](ref arg this[3340096]:_ref(chpl__hashtable(string,string))[3283450]) ref : _ref(_ddata(chpl_TableEntry(string,string)))[3283505] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3340098]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "RVV" "temp"
    ref call_tmp[3340106]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "maybe param" "temp"
    (3340108 'move' call_tmp[3340106](3340110 '.' this[3340096] table[3283419]))
    (3340113 'move' ret[3340098] call_tmp[3340106])
    (3340117 return ret[3340098])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].table[3355177](ref arg this[3355181]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) ref : _ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3355183]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "RVV" "temp"
    ref call_tmp[3355191]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "maybe param" "temp"
    (3355193 'move' call_tmp[3355191](3355195 '.' this[3355181] table[3283719]))
    (3355198 'move' ret[3355183] call_tmp[3355191])
    (3355202 return ret[3355183])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].table[3392311](ref arg this[3392315]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) ref : _ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3392317]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "RVV" "temp"
    ref call_tmp[3392325]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "maybe param" "temp"
    (3392327 'move' call_tmp[3392325](3392329 '.' this[3392315] table[3392183]))
    (3392332 'move' ret[3392317] call_tmp[3392325])
    (3392336 return ret[3392317])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].table[3828904](ref arg this[3828908]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) ref : _ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3828910]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "RVV" "temp"
    ref call_tmp[3828918]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "maybe param" "temp"
    (3828920 'move' call_tmp[3828918](3828922 '.' this[3828908] table[3405217]))
    (3828925 'move' ret[3828910] call_tmp[3828918])
    (3828929 return ret[3828910])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].table[4305464](ref arg this[4305468]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) ref : _ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4305470]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "RVV" "temp"
    ref call_tmp[4305478]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "maybe param" "temp"
    (4305480 'move' call_tmp[4305478](4305482 '.' this[4305468] table[3855370]))
    (4305485 'move' ret[4305470] call_tmp[4305478])
    (4305489 return ret[4305470])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].rehashHelpers[3258762](ref arg this[3258766]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) ref : _ref(owned chpl__rehashHelpers?)[1941090] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3258768]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[3258776]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
    (3258778 'move' call_tmp[3258776](3258780 '.' this[3258766] rehashHelpers[1941478]))
    (3258783 'move' ret[3258768] call_tmp[3258776])
    (3258787 return ret[3258768])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].rehashHelpers[3306542](ref arg this[3306546]:_ref(chpl__hashtable(string,int(64)))[3288858]) ref : _ref(owned chpl__rehashHelpers?)[1941090] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3306548]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[3306556]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
    (3306558 'move' call_tmp[3306556](3306560 '.' this[3306546] rehashHelpers[3288835]))
    (3306563 'move' ret[3306548] call_tmp[3306556])
    (3306567 return ret[3306548])
  }
  function _ref(chpl__hashtable(string,string))[3283450].rehashHelpers[3347236](ref arg this[3347240]:_ref(chpl__hashtable(string,string))[3283450]) ref : _ref(owned chpl__rehashHelpers?)[1941090] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3347242]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[3347250]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
    (3347252 'move' call_tmp[3347250](3347254 '.' this[3347240] rehashHelpers[3283427]))
    (3347257 'move' ret[3347242] call_tmp[3347250])
    (3347261 return ret[3347242])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].rehashHelpers[3364762](ref arg this[3364766]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) ref : _ref(owned chpl__rehashHelpers?)[1941090] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3364768]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[3364776]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
    (3364778 'move' call_tmp[3364776](3364780 '.' this[3364766] rehashHelpers[3283727]))
    (3364783 'move' ret[3364768] call_tmp[3364776])
    (3364787 return ret[3364768])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].rehashHelpers[3402504](ref arg this[3402508]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) ref : _ref(owned chpl__rehashHelpers?)[1941090] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3402510]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[3402518]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
    (3402520 'move' call_tmp[3402518](3402522 '.' this[3402508] rehashHelpers[3392191]))
    (3402525 'move' ret[3402510] call_tmp[3402518])
    (3402529 return ret[3402510])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].rehashHelpers[3862053](ref arg this[3862057]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) ref : _ref(owned chpl__rehashHelpers?)[1941090] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3862059]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[3862067]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
    (3862069 'move' call_tmp[3862067](3862071 '.' this[3862057] rehashHelpers[3405225]))
    (3862074 'move' ret[3862059] call_tmp[3862067])
    (3862078 return ret[3862059])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].rehashHelpers[4312186](ref arg this[4312190]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) ref : _ref(owned chpl__rehashHelpers?)[1941090] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4312192]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[4312200]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "maybe param" "temp"
    (4312202 'move' call_tmp[4312200](4312204 '.' this[4312190] rehashHelpers[3855378]))
    (4312207 'move' ret[4312192] call_tmp[4312200])
    (4312211 return ret[4312192])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].postponeResize[3257871](ref arg this[3257875]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) ref : _ref(bool)[1466299] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3257877]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[3257885]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3257887 'move' call_tmp[3257885](3257889 '.' this[3257875] postponeResize[1941483]))
    (3257892 'move' ret[3257877] call_tmp[3257885])
    (3257896 return ret[3257877])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].postponeResize[3302165](ref arg this[3302169]:_ref(chpl__hashtable(string,int(64)))[3288858]) ref : _ref(bool)[1466299] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3302171]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[3302179]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3302181 'move' call_tmp[3302179](3302183 '.' this[3302169] postponeResize[3288840]))
    (3302186 'move' ret[3302171] call_tmp[3302179])
    (3302190 return ret[3302171])
  }
  function _ref(chpl__hashtable(string,string))[3283450].postponeResize[3346388](ref arg this[3346392]:_ref(chpl__hashtable(string,string))[3283450]) ref : _ref(bool)[1466299] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3346394]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[3346402]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3346404 'move' call_tmp[3346402](3346406 '.' this[3346392] postponeResize[3283432]))
    (3346409 'move' ret[3346394] call_tmp[3346402])
    (3346413 return ret[3346394])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].postponeResize[3363914](ref arg this[3363918]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) ref : _ref(bool)[1466299] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3363920]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[3363928]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3363930 'move' call_tmp[3363928](3363932 '.' this[3363918] postponeResize[3283732]))
    (3363935 'move' ret[3363920] call_tmp[3363928])
    (3363939 return ret[3363920])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].postponeResize[3401629](ref arg this[3401633]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) ref : _ref(bool)[1466299] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3401635]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[3401643]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3401645 'move' call_tmp[3401643](3401647 '.' this[3401633] postponeResize[3392196]))
    (3401650 'move' ret[3401635] call_tmp[3401643])
    (3401654 return ret[3401635])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].postponeResize[3861178](ref arg this[3861182]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) ref : _ref(bool)[1466299] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3861184]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[3861192]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3861194 'move' call_tmp[3861192](3861196 '.' this[3861182] postponeResize[3405230]))
    (3861199 'move' ret[3861184] call_tmp[3861192])
    (3861203 return ret[3861184])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].postponeResize[4311311](ref arg this[4311315]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) ref : _ref(bool)[1466299] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[4311317]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[4311325]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4311327 'move' call_tmp[4311325](4311329 '.' this[4311315] postponeResize[3855383]))
    (4311332 'move' ret[4311317] call_tmp[4311325])
    (4311336 return ret[4311317])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].resizeThreshold[3257563](const  ref arg this[3257567]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3257569]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3257577]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3257579 'move' call_tmp[3257577](3257581 '.' this[3257567] resizeThreshold[1941486]))
    (3257584 'move' ret[3257569] call_tmp[3257577])
    (3257588 return ret[3257569])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].resizeThreshold[3301830](const  ref arg this[3301834]:_ref(chpl__hashtable(string,int(64)))[3288858]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3301836]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3301844]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3301846 'move' call_tmp[3301844](3301848 '.' this[3301834] resizeThreshold[3288843]))
    (3301851 'move' ret[3301836] call_tmp[3301844])
    (3301855 return ret[3301836])
  }
  function _ref(chpl__hashtable(string,string))[3283450].resizeThreshold[3346097](const  ref arg this[3346101]:_ref(chpl__hashtable(string,string))[3283450]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3346103]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3346111]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3346113 'move' call_tmp[3346111](3346115 '.' this[3346101] resizeThreshold[3283435]))
    (3346118 'move' ret[3346103] call_tmp[3346111])
    (3346122 return ret[3346103])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].resizeThreshold[3363623](const  ref arg this[3363627]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3363629]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3363637]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3363639 'move' call_tmp[3363637](3363641 '.' this[3363627] resizeThreshold[3283735]))
    (3363644 'move' ret[3363629] call_tmp[3363637])
    (3363648 return ret[3363629])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].resizeThreshold[3401321](const  ref arg this[3401325]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3401327]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3401335]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3401337 'move' call_tmp[3401335](3401339 '.' this[3401325] resizeThreshold[3392199]))
    (3401342 'move' ret[3401327] call_tmp[3401335])
    (3401346 return ret[3401327])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].resizeThreshold[3860870](const  ref arg this[3860874]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3860876]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3860884]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3860886 'move' call_tmp[3860884](3860888 '.' this[3860874] resizeThreshold[3405233]))
    (3860891 'move' ret[3860876] call_tmp[3860884])
    (3860895 return ret[3860876])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].resizeThreshold[4311003](const  ref arg this[4311007]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[4311009]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4311017]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (4311019 'move' call_tmp[4311017](4311021 '.' this[4311007] resizeThreshold[3855386]))
    (4311024 'move' ret[4311009] call_tmp[4311017])
    (4311028 return ret[4311009])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].startingSize[3257913](const  ref arg this[3257917]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) const ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3257919]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3257927]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3257929 'move' call_tmp[3257927](3257931 '.' this[3257917] startingSize[1941489]))
    (3257934 'move' ret[3257919] call_tmp[3257927])
    (3257938 return ret[3257919])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].startingSize[3302207](const  ref arg this[3302211]:_ref(chpl__hashtable(string,int(64)))[3288858]) const ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3302213]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3302221]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3302223 'move' call_tmp[3302221](3302225 '.' this[3302211] startingSize[3288846]))
    (3302228 'move' ret[3302213] call_tmp[3302221])
    (3302232 return ret[3302213])
  }
  function _ref(chpl__hashtable(string,string))[3283450].startingSize[3346030](const  ref arg this[3346034]:_ref(chpl__hashtable(string,string))[3283450]) const ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3346036]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3346044]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3346046 'move' call_tmp[3346044](3346048 '.' this[3346034] startingSize[3283438]))
    (3346051 'move' ret[3346036] call_tmp[3346044])
    (3346055 return ret[3346036])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].startingSize[3363556](const  ref arg this[3363560]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) const ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3363562]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3363570]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3363572 'move' call_tmp[3363570](3363574 '.' this[3363560] startingSize[3283738]))
    (3363577 'move' ret[3363562] call_tmp[3363570])
    (3363581 return ret[3363562])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].startingSize[3401671](const  ref arg this[3401675]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) const ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3401677]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3401685]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3401687 'move' call_tmp[3401685](3401689 '.' this[3401675] startingSize[3392202]))
    (3401692 'move' ret[3401677] call_tmp[3401685])
    (3401696 return ret[3401677])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].startingSize[3861220](const  ref arg this[3861224]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) const ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[3861226]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3861234]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3861236 'move' call_tmp[3861234](3861238 '.' this[3861224] startingSize[3405236]))
    (3861241 'move' ret[3861226] call_tmp[3861234])
    (3861245 return ret[3861226])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].startingSize[4311353](const  ref arg this[4311357]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) const ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    const-ref ret[4311359]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[4311367]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4311369 'move' call_tmp[4311367](4311371 '.' this[4311357] startingSize[3855389]))
    (4311374 'move' ret[4311359] call_tmp[4311367])
    (4311378 return ret[4311359])
  }
  function _ref(chpl__hashtable(string,Module(real(32))))[1941508].init=[4032289](ref arg this[4032293]:_ref(chpl__hashtable(string,Module(real(32))))[1941508], ref arg other[4032298]:_ref(chpl__hashtable(string,Module(real(32))))[1941508]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val keyType[4032304]:string[244] "dead after last mention" "temp" "type variable"
    (4032316 'end of statement')
    val valType[4032317]:Module(real(32))[1935500] "dead after last mention" "temp" "type variable"
    (4032329 'end of statement')
    ref call_tmp[4032330]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4032332 'move' call_tmp[4032330](4032335 call tableNumFullSlots[3257493] other[4032298]))
    val tableNumFullSlots[4032338]:int(64)[10] "dead after last mention" "temp"
    (4032340 'move' tableNumFullSlots[4032338](4032528 'deref' call_tmp[4032330]))
    (4032344 '.=' this[4032293] tableNumFullSlots[1941461] tableNumFullSlots[4032338])
    (4032348 'end of statement')
    ref call_tmp[4032349]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4032351 'move' call_tmp[4032349](4032354 call tableNumDeletedSlots[3257521] other[4032298]))
    val tableNumDeletedSlots[4032357]:int(64)[10] "dead after last mention" "temp"
    (4032359 'move' tableNumDeletedSlots[4032357](4032531 'deref' call_tmp[4032349]))
    (4032363 '.=' this[4032293] tableNumDeletedSlots[1941464] tableNumDeletedSlots[4032357])
    (4032367 'end of statement')
    ref call_tmp[4032368]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4032370 'move' call_tmp[4032368](4032373 call tableSize[1942995] other[4032298]))
    val tableSize[4032376]:int(64)[10] "dead after last mention" "temp"
    (4032378 'move' tableSize[4032376](4032534 'deref' call_tmp[4032368]))
    (4032382 '.=' this[4032293] tableSize[1941467] tableSize[4032376])
    (4032386 'end of statement')
    ref call_tmp[4032387]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead after last mention" "maybe param" "temp"
    (4032389 'move' call_tmp[4032387](4032392 call table[1942967] other[4032298]))
    val call_tmp[4032395]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4032402]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4032409]:chpl_TableEntry(string,Module(real(32)))[1941536] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4032417]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4032424]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "temp"
    val coerce_tmp[4032558]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4032562 'move' coerce_tmp[4032558](4032560 'deref' call_tmp[4032387]))
    (4032426 'move' table[4032424](4032555 call chpl__initCopy[1944583] coerce_tmp[4032558] 0))
    (4032430 '.=' this[4032293] table[1941470] table[4032424])
    (4032434 'end of statement')
    ref call_tmp[4032435]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4032437 'move' call_tmp[4032435](4032440 call rehashHelpers[3258762] other[4032298]))
    val call_tmp[4032443]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4032450]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4032452 call init=[1941591] rehashHelpers[4032450] call_tmp[4032435])
    (4032456 '.=' this[4032293] rehashHelpers[1941478] rehashHelpers[4032450])
    (4032460 'end of statement')
    ref call_tmp[4032461]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4032463 'move' call_tmp[4032461](4032466 call postponeResize[3257871] other[4032298]))
    val postponeResize[4032469]:bool[19] "dead after last mention" "temp"
    (4032471 'move' postponeResize[4032469](4032580 'deref' call_tmp[4032461]))
    (4032475 '.=' this[4032293] postponeResize[1941483] postponeResize[4032469])
    (4032479 'end of statement')
    ref call_tmp[4032480]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4032482 'move' call_tmp[4032480](4032485 call resizeThreshold[3257563] other[4032298]))
    val resizeThreshold[4032488]:real(64)[13] "dead after last mention" "temp"
    (4032490 'move' resizeThreshold[4032488](4032583 'deref' call_tmp[4032480]))
    (4032494 '.=' this[4032293] resizeThreshold[1941486] resizeThreshold[4032488])
    (4032498 'end of statement')
    ref call_tmp[4032499]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4032501 'move' call_tmp[4032499](4032504 call startingSize[3257913] other[4032298]))
    val startingSize[4032507]:int(64)[10] "dead after last mention" "temp"
    (4032509 'move' startingSize[4032507](4032586 'deref' call_tmp[4032499]))
    (4032513 '.=' this[4032293] startingSize[1941489] startingSize[4032507])
    (4032517 'end of statement')
    (4032518 return _void[46])
  }
  function _ref(chpl__hashtable(string,string))[3283450].init=[4211681](ref arg this[4211685]:_ref(chpl__hashtable(string,string))[3283450], ref arg other[4211690]:_ref(chpl__hashtable(string,string))[3283450]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val keyType[4211696]:string[244] "dead after last mention" "temp" "type variable"
    (4211708 'end of statement')
    val valType[4211709]:string[244] "dead after last mention" "temp" "type variable"
    (4211721 'end of statement')
    ref call_tmp[4211722]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4211724 'move' call_tmp[4211722](4211727 call tableNumFullSlots[3345794] other[4211690]))
    val tableNumFullSlots[4211730]:int(64)[10] "dead after last mention" "temp"
    (4211732 'move' tableNumFullSlots[4211730](4211920 'deref' call_tmp[4211722]))
    (4211736 '.=' this[4211685] tableNumFullSlots[3283410] tableNumFullSlots[4211730])
    (4211740 'end of statement')
    ref call_tmp[4211741]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4211743 'move' call_tmp[4211741](4211746 call tableNumDeletedSlots[3345823] other[4211690]))
    val tableNumDeletedSlots[4211749]:int(64)[10] "dead after last mention" "temp"
    (4211751 'move' tableNumDeletedSlots[4211749](4211923 'deref' call_tmp[4211741]))
    (4211755 '.=' this[4211685] tableNumDeletedSlots[3283413] tableNumDeletedSlots[4211749])
    (4211759 'end of statement')
    ref call_tmp[4211760]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4211762 'move' call_tmp[4211760](4211765 call tableSize[3340120] other[4211690]))
    val tableSize[4211768]:int(64)[10] "dead after last mention" "temp"
    (4211770 'move' tableSize[4211768](4211926 'deref' call_tmp[4211760]))
    (4211774 '.=' this[4211685] tableSize[3283416] tableSize[4211768])
    (4211778 'end of statement')
    ref call_tmp[4211779]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "maybe param" "temp"
    (4211781 'move' call_tmp[4211779](4211784 call table[3340092] other[4211690]))
    val call_tmp[4211787]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4211794]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4211801]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4211809]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4211816]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "temp"
    val coerce_tmp[4211950]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4211954 'move' coerce_tmp[4211950](4211952 'deref' call_tmp[4211779]))
    (4211818 'move' table[4211816](4211947 call chpl__initCopy[3341708] coerce_tmp[4211950] 0))
    (4211822 '.=' this[4211685] table[3283419] table[4211816])
    (4211826 'end of statement')
    ref call_tmp[4211827]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4211829 'move' call_tmp[4211827](4211832 call rehashHelpers[3347236] other[4211690]))
    val call_tmp[4211835]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4211842]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4211844 call init=[1941591] rehashHelpers[4211842] call_tmp[4211827])
    (4211848 '.=' this[4211685] rehashHelpers[3283427] rehashHelpers[4211842])
    (4211852 'end of statement')
    ref call_tmp[4211853]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4211855 'move' call_tmp[4211853](4211858 call postponeResize[3346388] other[4211690]))
    val postponeResize[4211861]:bool[19] "dead after last mention" "temp"
    (4211863 'move' postponeResize[4211861](4211972 'deref' call_tmp[4211853]))
    (4211867 '.=' this[4211685] postponeResize[3283432] postponeResize[4211861])
    (4211871 'end of statement')
    ref call_tmp[4211872]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4211874 'move' call_tmp[4211872](4211877 call resizeThreshold[3346097] other[4211690]))
    val resizeThreshold[4211880]:real(64)[13] "dead after last mention" "temp"
    (4211882 'move' resizeThreshold[4211880](4211975 'deref' call_tmp[4211872]))
    (4211886 '.=' this[4211685] resizeThreshold[3283435] resizeThreshold[4211880])
    (4211890 'end of statement')
    ref call_tmp[4211891]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4211893 'move' call_tmp[4211891](4211896 call startingSize[3346030] other[4211690]))
    val startingSize[4211899]:int(64)[10] "dead after last mention" "temp"
    (4211901 'move' startingSize[4211899](4211978 'deref' call_tmp[4211891]))
    (4211905 '.=' this[4211685] startingSize[3283438] startingSize[4211899])
    (4211909 'end of statement')
    (4211910 return _void[46])
  }
  function _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750].init=[4215255](ref arg this[4215259]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750], ref arg other[4215264]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val keyType[4215270]:string[244] "dead after last mention" "temp" "type variable"
    (4215282 'end of statement')
    val valType[4215283]:owned ModuleSpecification?[3283604] "dead after last mention" "temp" "type variable"
    (4215295 'end of statement')
    ref call_tmp[4215296]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4215298 'move' call_tmp[4215296](4215301 call tableNumFullSlots[3363320] other[4215264]))
    val tableNumFullSlots[4215304]:int(64)[10] "dead after last mention" "temp"
    (4215306 'move' tableNumFullSlots[4215304](4215494 'deref' call_tmp[4215296]))
    (4215310 '.=' this[4215259] tableNumFullSlots[3283710] tableNumFullSlots[4215304])
    (4215314 'end of statement')
    ref call_tmp[4215315]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4215317 'move' call_tmp[4215315](4215320 call tableNumDeletedSlots[3363349] other[4215264]))
    val tableNumDeletedSlots[4215323]:int(64)[10] "dead after last mention" "temp"
    (4215325 'move' tableNumDeletedSlots[4215323](4215497 'deref' call_tmp[4215315]))
    (4215329 '.=' this[4215259] tableNumDeletedSlots[3283713] tableNumDeletedSlots[4215323])
    (4215333 'end of statement')
    ref call_tmp[4215334]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4215336 'move' call_tmp[4215334](4215339 call tableSize[3355205] other[4215264]))
    val tableSize[4215342]:int(64)[10] "dead after last mention" "temp"
    (4215344 'move' tableSize[4215342](4215500 'deref' call_tmp[4215334]))
    (4215348 '.=' this[4215259] tableSize[3283716] tableSize[4215342])
    (4215352 'end of statement')
    ref call_tmp[4215353]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "maybe param" "temp"
    (4215355 'move' call_tmp[4215353](4215358 call table[3355177] other[4215264]))
    val call_tmp[4215361]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4215368]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4215375]:chpl_TableEntry(string,owned ModuleSpecification?)[3283773] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4215383]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4215390]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "temp"
    val coerce_tmp[4215524]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4215528 'move' coerce_tmp[4215524](4215526 'deref' call_tmp[4215353]))
    (4215392 'move' table[4215390](4215521 call chpl__initCopy[3356793] coerce_tmp[4215524] 0))
    (4215396 '.=' this[4215259] table[3283719] table[4215390])
    (4215400 'end of statement')
    ref call_tmp[4215401]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4215403 'move' call_tmp[4215401](4215406 call rehashHelpers[3364762] other[4215264]))
    val call_tmp[4215409]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4215416]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4215418 call init=[1941591] rehashHelpers[4215416] call_tmp[4215401])
    (4215422 '.=' this[4215259] rehashHelpers[3283727] rehashHelpers[4215416])
    (4215426 'end of statement')
    ref call_tmp[4215427]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4215429 'move' call_tmp[4215427](4215432 call postponeResize[3363914] other[4215264]))
    val postponeResize[4215435]:bool[19] "dead after last mention" "temp"
    (4215437 'move' postponeResize[4215435](4215546 'deref' call_tmp[4215427]))
    (4215441 '.=' this[4215259] postponeResize[3283732] postponeResize[4215435])
    (4215445 'end of statement')
    ref call_tmp[4215446]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4215448 'move' call_tmp[4215446](4215451 call resizeThreshold[3363623] other[4215264]))
    val resizeThreshold[4215454]:real(64)[13] "dead after last mention" "temp"
    (4215456 'move' resizeThreshold[4215454](4215549 'deref' call_tmp[4215446]))
    (4215460 '.=' this[4215259] resizeThreshold[3283735] resizeThreshold[4215454])
    (4215464 'end of statement')
    ref call_tmp[4215465]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4215467 'move' call_tmp[4215465](4215470 call startingSize[3363556] other[4215264]))
    val startingSize[4215473]:int(64)[10] "dead after last mention" "temp"
    (4215475 'move' startingSize[4215473](4215552 'deref' call_tmp[4215465]))
    (4215479 '.=' this[4215259] startingSize[3283738] startingSize[4215473])
    (4215483 'end of statement')
    (4215484 return _void[46])
  }
  function _ref(chpl__hashtable(string,int(64)))[3288858].init=[4217272](ref arg this[4217276]:_ref(chpl__hashtable(string,int(64)))[3288858], ref arg other[4217281]:_ref(chpl__hashtable(string,int(64)))[3288858]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val keyType[4217287]:string[244] "dead after last mention" "temp" "type variable"
    (4217299 'end of statement')
    val valType[4217300]:int(64)[10] "dead after last mention" "temp" "type variable"
    (4217312 'end of statement')
    ref call_tmp[4217313]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4217315 'move' call_tmp[4217313](4217318 call tableNumFullSlots[3301760] other[4217281]))
    val tableNumFullSlots[4217321]:int(64)[10] "dead after last mention" "temp"
    (4217323 'move' tableNumFullSlots[4217321](4217511 'deref' call_tmp[4217313]))
    (4217327 '.=' this[4217276] tableNumFullSlots[3288818] tableNumFullSlots[4217321])
    (4217331 'end of statement')
    ref call_tmp[4217332]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4217334 'move' call_tmp[4217332](4217337 call tableNumDeletedSlots[3301788] other[4217281]))
    val tableNumDeletedSlots[4217340]:int(64)[10] "dead after last mention" "temp"
    (4217342 'move' tableNumDeletedSlots[4217340](4217514 'deref' call_tmp[4217332]))
    (4217346 '.=' this[4217276] tableNumDeletedSlots[3288821] tableNumDeletedSlots[4217340])
    (4217350 'end of statement')
    ref call_tmp[4217351]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4217353 'move' call_tmp[4217351](4217356 call tableSize[3301883] other[4217281]))
    val tableSize[4217359]:int(64)[10] "dead after last mention" "temp"
    (4217361 'move' tableSize[4217359](4217517 'deref' call_tmp[4217351]))
    (4217365 '.=' this[4217276] tableSize[3288824] tableSize[4217359])
    (4217369 'end of statement')
    ref call_tmp[4217370]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "maybe param" "temp"
    (4217372 'move' call_tmp[4217370](4217375 call table[3303003] other[4217281]))
    val call_tmp[4217378]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4217385]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4217392]:chpl_TableEntry(string,int(64))[3288881] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4217400]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4217407]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "temp"
    val coerce_tmp[4217541]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4217545 'move' coerce_tmp[4217541](4217543 'deref' call_tmp[4217370]))
    (4217409 'move' table[4217407](4217538 call chpl__initCopy[3303034] coerce_tmp[4217541] 0))
    (4217413 '.=' this[4217276] table[3288827] table[4217407])
    (4217417 'end of statement')
    ref call_tmp[4217418]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4217420 'move' call_tmp[4217418](4217423 call rehashHelpers[3306542] other[4217281]))
    val call_tmp[4217426]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4217433]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4217435 call init=[1941591] rehashHelpers[4217433] call_tmp[4217418])
    (4217439 '.=' this[4217276] rehashHelpers[3288835] rehashHelpers[4217433])
    (4217443 'end of statement')
    ref call_tmp[4217444]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4217446 'move' call_tmp[4217444](4217449 call postponeResize[3302165] other[4217281]))
    val postponeResize[4217452]:bool[19] "dead after last mention" "temp"
    (4217454 'move' postponeResize[4217452](4217563 'deref' call_tmp[4217444]))
    (4217458 '.=' this[4217276] postponeResize[3288840] postponeResize[4217452])
    (4217462 'end of statement')
    ref call_tmp[4217463]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4217465 'move' call_tmp[4217463](4217468 call resizeThreshold[3301830] other[4217281]))
    val resizeThreshold[4217471]:real(64)[13] "dead after last mention" "temp"
    (4217473 'move' resizeThreshold[4217471](4217566 'deref' call_tmp[4217463]))
    (4217477 '.=' this[4217276] resizeThreshold[3288843] resizeThreshold[4217471])
    (4217481 'end of statement')
    ref call_tmp[4217482]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4217484 'move' call_tmp[4217482](4217487 call startingSize[3302207] other[4217281]))
    val startingSize[4217490]:int(64)[10] "dead after last mention" "temp"
    (4217492 'move' startingSize[4217490](4217569 'deref' call_tmp[4217482]))
    (4217496 '.=' this[4217276] startingSize[3288846] startingSize[4217490])
    (4217500 'end of statement')
    (4217501 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(32))))[3392221].init=[4233355](ref arg this[4233359]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221], ref arg other[4233364]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val keyType[4233370]:string[244] "dead after last mention" "temp" "type variable"
    (4233382 'end of statement')
    val valType[4233383]:shared Module(real(32))[1955038] "dead after last mention" "temp" "type variable"
    (4233395 'end of statement')
    ref call_tmp[4233396]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4233398 'move' call_tmp[4233396](4233401 call tableNumFullSlots[3401251] other[4233364]))
    val tableNumFullSlots[4233404]:int(64)[10] "dead after last mention" "temp"
    (4233406 'move' tableNumFullSlots[4233404](4233594 'deref' call_tmp[4233396]))
    (4233410 '.=' this[4233359] tableNumFullSlots[3392174] tableNumFullSlots[4233404])
    (4233414 'end of statement')
    ref call_tmp[4233415]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4233417 'move' call_tmp[4233415](4233420 call tableNumDeletedSlots[3401279] other[4233364]))
    val tableNumDeletedSlots[4233423]:int(64)[10] "dead after last mention" "temp"
    (4233425 'move' tableNumDeletedSlots[4233423](4233597 'deref' call_tmp[4233415]))
    (4233429 '.=' this[4233359] tableNumDeletedSlots[3392177] tableNumDeletedSlots[4233423])
    (4233433 'end of statement')
    ref call_tmp[4233434]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4233436 'move' call_tmp[4233434](4233439 call tableSize[3392339] other[4233364]))
    val tableSize[4233442]:int(64)[10] "dead after last mention" "temp"
    (4233444 'move' tableSize[4233442](4233600 'deref' call_tmp[4233434]))
    (4233448 '.=' this[4233359] tableSize[3392180] tableSize[4233442])
    (4233452 'end of statement')
    ref call_tmp[4233453]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead after last mention" "maybe param" "temp"
    (4233455 'move' call_tmp[4233453](4233458 call table[3392311] other[4233364]))
    val call_tmp[4233461]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4233468]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4233475]:chpl_TableEntry(string,shared Module(real(32)))[3392238] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4233483]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4233490]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "temp"
    val coerce_tmp[4233624]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4233628 'move' coerce_tmp[4233624](4233626 'deref' call_tmp[4233453]))
    (4233492 'move' table[4233490](4233621 call chpl__initCopy[3393927] coerce_tmp[4233624] 0))
    (4233496 '.=' this[4233359] table[3392183] table[4233490])
    (4233500 'end of statement')
    ref call_tmp[4233501]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4233503 'move' call_tmp[4233501](4233506 call rehashHelpers[3402504] other[4233364]))
    val call_tmp[4233509]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4233516]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4233518 call init=[1941591] rehashHelpers[4233516] call_tmp[4233501])
    (4233522 '.=' this[4233359] rehashHelpers[3392191] rehashHelpers[4233516])
    (4233526 'end of statement')
    ref call_tmp[4233527]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4233529 'move' call_tmp[4233527](4233532 call postponeResize[3401629] other[4233364]))
    val postponeResize[4233535]:bool[19] "dead after last mention" "temp"
    (4233537 'move' postponeResize[4233535](4233646 'deref' call_tmp[4233527]))
    (4233541 '.=' this[4233359] postponeResize[3392196] postponeResize[4233535])
    (4233545 'end of statement')
    ref call_tmp[4233546]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4233548 'move' call_tmp[4233546](4233551 call resizeThreshold[3401321] other[4233364]))
    val resizeThreshold[4233554]:real(64)[13] "dead after last mention" "temp"
    (4233556 'move' resizeThreshold[4233554](4233649 'deref' call_tmp[4233546]))
    (4233560 '.=' this[4233359] resizeThreshold[3392199] resizeThreshold[4233554])
    (4233564 'end of statement')
    ref call_tmp[4233565]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4233567 'move' call_tmp[4233565](4233570 call startingSize[3401671] other[4233364]))
    val startingSize[4233573]:int(64)[10] "dead after last mention" "temp"
    (4233575 'move' startingSize[4233573](4233652 'deref' call_tmp[4233565]))
    (4233579 '.=' this[4233359] startingSize[3392202] startingSize[4233573])
    (4233583 'end of statement')
    (4233584 return _void[46])
  }
  function _ref(chpl__hashtable(string,Module(real(64))))[3405248].init=[4239372](ref arg this[4239376]:_ref(chpl__hashtable(string,Module(real(64))))[3405248], ref arg other[4239381]:_ref(chpl__hashtable(string,Module(real(64))))[3405248]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val keyType[4239387]:string[244] "dead after last mention" "temp" "type variable"
    (4239399 'end of statement')
    val valType[4239400]:Module(real(64))[3405063] "dead after last mention" "temp" "type variable"
    (4239412 'end of statement')
    ref call_tmp[4239413]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4239415 'move' call_tmp[4239413](4239418 call tableNumFullSlots[3860800] other[4239381]))
    val tableNumFullSlots[4239421]:int(64)[10] "dead after last mention" "temp"
    (4239423 'move' tableNumFullSlots[4239421](4239611 'deref' call_tmp[4239413]))
    (4239427 '.=' this[4239376] tableNumFullSlots[3405208] tableNumFullSlots[4239421])
    (4239431 'end of statement')
    ref call_tmp[4239432]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4239434 'move' call_tmp[4239432](4239437 call tableNumDeletedSlots[3860828] other[4239381]))
    val tableNumDeletedSlots[4239440]:int(64)[10] "dead after last mention" "temp"
    (4239442 'move' tableNumDeletedSlots[4239440](4239614 'deref' call_tmp[4239432]))
    (4239446 '.=' this[4239376] tableNumDeletedSlots[3405211] tableNumDeletedSlots[4239440])
    (4239450 'end of statement')
    ref call_tmp[4239451]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4239453 'move' call_tmp[4239451](4239456 call tableSize[3828932] other[4239381]))
    val tableSize[4239459]:int(64)[10] "dead after last mention" "temp"
    (4239461 'move' tableSize[4239459](4239617 'deref' call_tmp[4239451]))
    (4239465 '.=' this[4239376] tableSize[3405214] tableSize[4239459])
    (4239469 'end of statement')
    ref call_tmp[4239470]:_ref(_ddata(chpl_TableEntry(string,Module(real(64)))))[3405303] "dead after last mention" "maybe param" "temp"
    (4239472 'move' call_tmp[4239470](4239475 call table[3828904] other[4239381]))
    val call_tmp[4239478]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4239485]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4239492]:chpl_TableEntry(string,Module(real(64)))[3405271] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4239500]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4239507]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "temp"
    val coerce_tmp[4239641]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4239645 'move' coerce_tmp[4239641](4239643 'deref' call_tmp[4239470]))
    (4239509 'move' table[4239507](4239638 call chpl__initCopy[3830520] coerce_tmp[4239641] 0))
    (4239513 '.=' this[4239376] table[3405217] table[4239507])
    (4239517 'end of statement')
    ref call_tmp[4239518]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4239520 'move' call_tmp[4239518](4239523 call rehashHelpers[3862053] other[4239381]))
    val call_tmp[4239526]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4239533]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4239535 call init=[1941591] rehashHelpers[4239533] call_tmp[4239518])
    (4239539 '.=' this[4239376] rehashHelpers[3405225] rehashHelpers[4239533])
    (4239543 'end of statement')
    ref call_tmp[4239544]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4239546 'move' call_tmp[4239544](4239549 call postponeResize[3861178] other[4239381]))
    val postponeResize[4239552]:bool[19] "dead after last mention" "temp"
    (4239554 'move' postponeResize[4239552](4239663 'deref' call_tmp[4239544]))
    (4239558 '.=' this[4239376] postponeResize[3405230] postponeResize[4239552])
    (4239562 'end of statement')
    ref call_tmp[4239563]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4239565 'move' call_tmp[4239563](4239568 call resizeThreshold[3860870] other[4239381]))
    val resizeThreshold[4239571]:real(64)[13] "dead after last mention" "temp"
    (4239573 'move' resizeThreshold[4239571](4239666 'deref' call_tmp[4239563]))
    (4239577 '.=' this[4239376] resizeThreshold[3405233] resizeThreshold[4239571])
    (4239581 'end of statement')
    ref call_tmp[4239582]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4239584 'move' call_tmp[4239582](4239587 call startingSize[3861220] other[4239381]))
    val startingSize[4239590]:int(64)[10] "dead after last mention" "temp"
    (4239592 'move' startingSize[4239590](4239669 'deref' call_tmp[4239582]))
    (4239596 '.=' this[4239376] startingSize[3405236] startingSize[4239590])
    (4239600 'end of statement')
    (4239601 return _void[46])
  }
  function _ref(chpl__hashtable(string,shared Module(real(64))))[3855401].init=[4315065](ref arg this[4315069]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401], ref arg other[4315074]:_ref(chpl__hashtable(string,shared Module(real(64))))[3855401]) : void[4] "compiler generated" "copy initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val keyType[4315080]:string[244] "dead after last mention" "temp" "type variable"
    (4315092 'end of statement')
    val valType[4315093]:shared Module(real(64))[3405428] "dead after last mention" "temp" "type variable"
    (4315105 'end of statement')
    ref call_tmp[4315106]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4315108 'move' call_tmp[4315106](4315111 call tableNumFullSlots[4310933] other[4315074]))
    val tableNumFullSlots[4315114]:int(64)[10] "dead after last mention" "temp"
    (4315116 'move' tableNumFullSlots[4315114](4315304 'deref' call_tmp[4315106]))
    (4315120 '.=' this[4315069] tableNumFullSlots[3855361] tableNumFullSlots[4315114])
    (4315124 'end of statement')
    ref call_tmp[4315125]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4315127 'move' call_tmp[4315125](4315130 call tableNumDeletedSlots[4310961] other[4315074]))
    val tableNumDeletedSlots[4315133]:int(64)[10] "dead after last mention" "temp"
    (4315135 'move' tableNumDeletedSlots[4315133](4315307 'deref' call_tmp[4315125]))
    (4315139 '.=' this[4315069] tableNumDeletedSlots[3855364] tableNumDeletedSlots[4315133])
    (4315143 'end of statement')
    ref call_tmp[4315144]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4315146 'move' call_tmp[4315144](4315149 call tableSize[4305492] other[4315074]))
    val tableSize[4315152]:int(64)[10] "dead after last mention" "temp"
    (4315154 'move' tableSize[4315152](4315310 'deref' call_tmp[4315144]))
    (4315158 '.=' this[4315069] tableSize[3855367] tableSize[4315152])
    (4315162 'end of statement')
    ref call_tmp[4315163]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(64)))))[3855456] "dead after last mention" "maybe param" "temp"
    (4315165 'move' call_tmp[4315163](4315168 call table[4305464] other[4315074]))
    val call_tmp[4315171]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4315178]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4315185]:chpl_TableEntry(string,shared Module(real(64)))[3855424] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[4315193]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "maybe param" "temp" "type variable"
    val table[4315200]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "temp"
    val coerce_tmp[4315334]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4315338 'move' coerce_tmp[4315334](4315336 'deref' call_tmp[4315163]))
    (4315202 'move' table[4315200](4315331 call chpl__initCopy[4307080] coerce_tmp[4315334] 0))
    (4315206 '.=' this[4315069] table[3855370] table[4315200])
    (4315210 'end of statement')
    ref call_tmp[4315211]:_ref(owned chpl__rehashHelpers?)[1941090] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (4315213 'move' call_tmp[4315211](4315216 call rehashHelpers[4312186] other[4315074]))
    val call_tmp[4315219]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "maybe param" "temp" "type variable"
    val rehashHelpers[4315226]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (4315228 call init=[1941591] rehashHelpers[4315226] call_tmp[4315211])
    (4315232 '.=' this[4315069] rehashHelpers[3855378] rehashHelpers[4315226])
    (4315236 'end of statement')
    ref call_tmp[4315237]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (4315239 'move' call_tmp[4315237](4315242 call postponeResize[4311311] other[4315074]))
    val postponeResize[4315245]:bool[19] "dead after last mention" "temp"
    (4315247 'move' postponeResize[4315245](4315356 'deref' call_tmp[4315237]))
    (4315251 '.=' this[4315069] postponeResize[3855383] postponeResize[4315245])
    (4315255 'end of statement')
    ref call_tmp[4315256]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4315258 'move' call_tmp[4315256](4315261 call resizeThreshold[4311003] other[4315074]))
    val resizeThreshold[4315264]:real(64)[13] "dead after last mention" "temp"
    (4315266 'move' resizeThreshold[4315264](4315359 'deref' call_tmp[4315256]))
    (4315270 '.=' this[4315069] resizeThreshold[3855386] resizeThreshold[4315264])
    (4315274 'end of statement')
    ref call_tmp[4315275]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
    (4315277 'move' call_tmp[4315275](4315280 call startingSize[4311353] other[4315074]))
    val startingSize[4315283]:int(64)[10] "dead after last mention" "temp"
    (4315285 'move' startingSize[4315283](4315362 'deref' call_tmp[4315275]))
    (4315289 '.=' this[4315069] startingSize[3855389] startingSize[4315283])
    (4315293 'end of statement')
    (4315294 return _void[46])
  }
  type chpl__hashtable(string,Module(real(32)))[1941492] val tableNumFullSlots[1941461]:int(64)[10] val tableNumDeletedSlots[1941464]:int(64)[10] val tableSize[1941467]:int(64)[10] val table[1941470]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] val rehashHelpers[1941478]:owned chpl__rehashHelpers?[1941081] val postponeResize[1941483]:bool[19] const-val resizeThreshold[1941486]:real(64)[13] "const" const-val startingSize[1941489]:int(64)[10] "const"
  type chpl__hashtable(string,string)[3283441] val tableNumFullSlots[3283410]:int(64)[10] val tableNumDeletedSlots[3283413]:int(64)[10] val tableSize[3283416]:int(64)[10] val table[3283419]:_ddata(chpl_TableEntry(string,string))[3283496] val rehashHelpers[3283427]:owned chpl__rehashHelpers?[1941081] val postponeResize[3283432]:bool[19] const-val resizeThreshold[3283435]:real(64)[13] "const" const-val startingSize[3283438]:int(64)[10] "const"
  type chpl__hashtable(string,owned ModuleSpecification?)[3283741] val tableNumFullSlots[3283710]:int(64)[10] val tableNumDeletedSlots[3283713]:int(64)[10] val tableSize[3283716]:int(64)[10] val table[3283719]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] val rehashHelpers[3283727]:owned chpl__rehashHelpers?[1941081] val postponeResize[3283732]:bool[19] const-val resizeThreshold[3283735]:real(64)[13] "const" const-val startingSize[3283738]:int(64)[10] "const"
  type chpl__hashtable(string,int(64))[3288849] val tableNumFullSlots[3288818]:int(64)[10] val tableNumDeletedSlots[3288821]:int(64)[10] val tableSize[3288824]:int(64)[10] val table[3288827]:_ddata(chpl_TableEntry(string,int(64)))[3288904] val rehashHelpers[3288835]:owned chpl__rehashHelpers?[1941081] val postponeResize[3288840]:bool[19] const-val resizeThreshold[3288843]:real(64)[13] "const" const-val startingSize[3288846]:int(64)[10] "const"
  type chpl__hashtable(string,shared Module(real(32)))[3392205] val tableNumFullSlots[3392174]:int(64)[10] val tableNumDeletedSlots[3392177]:int(64)[10] val tableSize[3392180]:int(64)[10] val table[3392183]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] val rehashHelpers[3392191]:owned chpl__rehashHelpers?[1941081] val postponeResize[3392196]:bool[19] const-val resizeThreshold[3392199]:real(64)[13] "const" const-val startingSize[3392202]:int(64)[10] "const"
  type chpl__hashtable(string,Module(real(64)))[3405239] val tableNumFullSlots[3405208]:int(64)[10] val tableNumDeletedSlots[3405211]:int(64)[10] val tableSize[3405214]:int(64)[10] val table[3405217]:_ddata(chpl_TableEntry(string,Module(real(64))))[3405294] val rehashHelpers[3405225]:owned chpl__rehashHelpers?[1941081] val postponeResize[3405230]:bool[19] const-val resizeThreshold[3405233]:real(64)[13] "const" const-val startingSize[3405236]:int(64)[10] "const"
  type chpl__hashtable(string,shared Module(real(64)))[3855392] val tableNumFullSlots[3855361]:int(64)[10] val tableNumDeletedSlots[3855364]:int(64)[10] val tableSize[3855367]:int(64)[10] val table[3855370]:_ddata(chpl_TableEntry(string,shared Module(real(64))))[3855447] val rehashHelpers[3855378]:owned chpl__rehashHelpers?[1941081] val postponeResize[3855383]:bool[19] const-val resizeThreshold[3855386]:real(64)[13] "const" const-val startingSize[3855389]:int(64)[10] "const"
  function coforall_fn[1946445](const in arg size[1946447]:int(64)[10], const in arg numChunks[1946449]:int(64)[10], const in arg _coforallCount[5491356]:unmanaged _EndCount(atomic int(64),int(64))[1526264], const in arg chunk[5491358]:int(64)[10]) : void[4] "cobegin or coforall" "outside try" "resolved" "task fn from iterator fn" "wrapper needs start fence"
  {
    {
      val call_tmp[1946453]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1946455 'move' call_tmp[1946453](1946458 call -[1487343] size[1946447]))
      val call_tmp[1946461]:2*int(64)[1802073] "dead after last mention" "maybe param" "temp"
      val default_arg_waylo[1949023]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      val default_arg_lo[1949063]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      (1946463 'move' call_tmp[1946461](1946466 call _computeBlock[1801632] size[1946447] numChunks[1946449] chunk[5491358] call_tmp[1946453] 0 0))
      const tmp[1946471]:2*int(64)[1802073] "dead at end of block" "const" "insert auto destroy" "temp"
      (1946473 'move' tmp[1946471](1949073 call chpl__initCopy[1802267] call_tmp[1946461] 1))
      1
      (1946480 'end of statement')
      const-ref call_tmp[1946481]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1946483 'move' call_tmp[1946481](1949081 '.' tmp[1946471] x0[1802069]))
      const lo[1946488]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1949087]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1949091 'move' coerce_tmp[1949087](1949089 'deref' call_tmp[1946481]))
      (1946490 'move' lo[1946488](1949084 call chpl__initCopy[1473915] coerce_tmp[1949087] 1))
      const-ref call_tmp[1946493]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1946495 'move' call_tmp[1946493](1949096 '.' tmp[1946471] x1[1802071]))
      const hi[1946500]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1949102]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1949106 'move' coerce_tmp[1949102](1949104 'deref' call_tmp[1946493]))
      (1946502 'move' hi[1946500](1949099 call chpl__initCopy[1473915] coerce_tmp[1949102] 1))
      (1946505 'end of statement')
      val call_tmp[1946506]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      (1949110 'end of statement' lo[1946488] hi[1946500])
      {
        val _indexOfInterest[1946535]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1946537]:_ic_chpl_direct_range_iter[1600114] "dead at end of block" "expr temp" "temp"
        val call_tmp[1946539]:_ir_chpl_direct_range_iter[1600120] "dead at end of block" "expr temp" "maybe param" "temp"
        (1946541 'move' call_tmp[1946539](1946544 call chpl_direct_range_iter[122109] lo[1946488] hi[1946500]))
        (1946547 'move' _iterator[1946537](1946550 call _getIterator[1600129] call_tmp[1946539]))
        Defer
        {
          {
            (1946554 call _freeIterator[1600298] _iterator[1946537])
          }
        }
        ForLoop[1946563] order-independent
        {
          const slot[1946566]:int(64)[10] "const" "index var" "insert auto destroy"
          (1946568 'end of statement')
          (1946569 'move' slot[1946566] _indexOfInterest[1946535])
          (1946572 'end of statement' slot[1946566])
          {
            val yret[1946575]:int(64)[10] "dead after last mention" "YVV" "temp"
            (1946577 'move' yret[1946575] slot[1946566])
            (1946581 yield yret[1946575])
            (1946583 'end of statement' slot[1946566])
          }
          label _continueLabel[1946585]
          _indexOfInterest[1946535]
          _iterator[1946537]
        }
        label _breakLabel[1946587]
      }
    }
    (1946590 call _downEndCount[1802638] _coforallCount[5491356] nil[32])
    (1946593 return _void[46])
  }
  function ptrTo[1947437](ref arg x[1947439]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545]) : c_ptr(chpl_TableEntry(string,Module(real(32))))[1947483] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1947441]:c_ptr(chpl_TableEntry(string,Module(real(32))))[1947483] "dead after last mention" "RVV" "temp"
    val call_tmp[1947449]:c_ptr(chpl_TableEntry(string,Module(real(32))))[1947483] "dead after last mention" "expr temp" "maybe param" "temp"
    (1947451 'move' call_tmp[1947449](1947454 call c_pointer_return[1947463] x[1947439]))
    (1947456 'move' ret[1947441] call_tmp[1947449])
    (1947460 return ret[1947441])
  }
  function ptrTo[3306147](ref arg x[3306149]:_ref(chpl_TableEntry(string,int(64)))[3288890]) : c_ptr(chpl_TableEntry(string,int(64)))[3306193] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[3306151]:c_ptr(chpl_TableEntry(string,int(64)))[3306193] "dead after last mention" "RVV" "temp"
    val call_tmp[3306159]:c_ptr(chpl_TableEntry(string,int(64)))[3306193] "dead after last mention" "expr temp" "maybe param" "temp"
    (3306161 'move' call_tmp[3306159](3306164 call c_pointer_return[3306173] x[3306149]))
    (3306166 'move' ret[3306151] call_tmp[3306159])
    (3306170 return ret[3306151])
  }
  function ptrTo[3343288](ref arg x[3343290]:_ref(chpl_TableEntry(string,string))[3283482]) : c_ptr(chpl_TableEntry(string,string))[3343334] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[3343292]:c_ptr(chpl_TableEntry(string,string))[3343334] "dead after last mention" "RVV" "temp"
    val call_tmp[3343300]:c_ptr(chpl_TableEntry(string,string))[3343334] "dead after last mention" "expr temp" "maybe param" "temp"
    (3343302 'move' call_tmp[3343300](3343305 call c_pointer_return[3343314] x[3343290]))
    (3343307 'move' ret[3343292] call_tmp[3343300])
    (3343311 return ret[3343292])
  }
  function ptrTo[3358373](ref arg x[3358375]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782]) : c_ptr(chpl_TableEntry(string,owned ModuleSpecification?))[3358419] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[3358377]:c_ptr(chpl_TableEntry(string,owned ModuleSpecification?))[3358419] "dead after last mention" "RVV" "temp"
    val call_tmp[3358385]:c_ptr(chpl_TableEntry(string,owned ModuleSpecification?))[3358419] "dead after last mention" "expr temp" "maybe param" "temp"
    (3358387 'move' call_tmp[3358385](3358390 call c_pointer_return[3358399] x[3358375]))
    (3358392 'move' ret[3358377] call_tmp[3358385])
    (3358396 return ret[3358377])
  }
  function ptrTo[3395507](ref arg x[3395509]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247]) : c_ptr(chpl_TableEntry(string,shared Module(real(32))))[3395553] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[3395511]:c_ptr(chpl_TableEntry(string,shared Module(real(32))))[3395553] "dead after last mention" "RVV" "temp"
    val call_tmp[3395519]:c_ptr(chpl_TableEntry(string,shared Module(real(32))))[3395553] "dead after last mention" "expr temp" "maybe param" "temp"
    (3395521 'move' call_tmp[3395519](3395524 call c_pointer_return[3395533] x[3395509]))
    (3395526 'move' ret[3395511] call_tmp[3395519])
    (3395530 return ret[3395511])
  }
  function ptrTo[3832100](ref arg x[3832102]:_ref(chpl_TableEntry(string,Module(real(64))))[3405280]) : c_ptr(chpl_TableEntry(string,Module(real(64))))[3832146] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[3832104]:c_ptr(chpl_TableEntry(string,Module(real(64))))[3832146] "dead after last mention" "RVV" "temp"
    val call_tmp[3832112]:c_ptr(chpl_TableEntry(string,Module(real(64))))[3832146] "dead after last mention" "expr temp" "maybe param" "temp"
    (3832114 'move' call_tmp[3832112](3832117 call c_pointer_return[3832126] x[3832102]))
    (3832119 'move' ret[3832104] call_tmp[3832112])
    (3832123 return ret[3832104])
  }
  function ptrTo[4308660](ref arg x[4308662]:_ref(chpl_TableEntry(string,shared Module(real(64))))[3855433]) : c_ptr(chpl_TableEntry(string,shared Module(real(64))))[4308706] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[4308664]:c_ptr(chpl_TableEntry(string,shared Module(real(64))))[4308706] "dead after last mention" "RVV" "temp"
    val call_tmp[4308672]:c_ptr(chpl_TableEntry(string,shared Module(real(64))))[4308706] "dead after last mention" "expr temp" "maybe param" "temp"
    (4308674 'move' call_tmp[4308672](4308677 call c_pointer_return[4308686] x[4308662]))
    (4308679 'move' ret[4308664] call_tmp[4308672])
    (4308683 return ret[4308664])
  }
}
AST dump for ChapelIOStringifyHelper after pass expandExternArrayCalls.
Module use list: 

{
  { scopeless
    (106209 'use' ChapelStandard)
    (106211 'use' CTypes)
  }
  (106215 'use' BytesStringCommon 'only' decodePolicy)
  function _can_stringify_direct[106217](arg t[106219]:_any[141](?)) param : _unknown[42]
  {
    if(106347 call _cond_test(106307 call ||(106309 call ||(106311 call ||(106313 call ||(106315 call ||(106317 call ==(106320 'typeof' t) string[244])(106322 call ==(106325 'typeof' t) bytes[232]))(106327 call ==(106330 'typeof' t) chpl_c_string))(106332 call ==(106335 'typeof' t)(106337 call c_ptrConst c_char)))(106340 call isRangeType(106342 'typeof' t)))(106344 call isPrimitiveType(106346 'typeof' t))))
    {
      (106224 return 1)
    }
    {
      { scopeless
        if(106303 call _cond_test(106300 call isTupleType(106302 'typeof' t)))
        {
          {
            unknown i[106227] "index var" 0
            unknown tmp[106255] "maybe param" "temp"
            (106267 'move' tmp[106255](106265 call chpl_compute_low_param_loop_bound 0(106230 call -(106233 call . t c"size") 1)))
            unknown tmp[106256] "maybe param" "temp"
            (106280 'move' tmp[106256](106278 call chpl_compute_high_param_loop_bound 0(106272 call -(106274 call . t c"size") 1)))
            unknown tmp[106257] "maybe param" "temp"
            (106283 'move' tmp[106257] 1)
            ParamForLoop[106285]
            { i[106227] tmp[106255] tmp[106256] tmp[106257]
              {
                if(106250 call _cond_test(106243 call !(106246 call _can_stringify_direct(106248 call t i))))
                {
                  { scopeless
                    (106240 return 0)
                  }
                }
              }
            }
            label _unused_continueLabel[106259]
            label _breakLabel[106258]
          }
          (106294 return 1)
        }
        {
          (106297 return 0)
        }
      }
    }
  }
  { scopeless type
    bool
  }
  function _stringify_tuple[106355](arg tup[106358] :
  _tuple) : _unknown[42] "private"
  {
    { scopeless
      unknown str[106363] "("
      (106366 'end of statement')
    }
    {
      unknown i[106367] "index var" 0
      unknown tmp[106466] "maybe param" "temp"
      (106478 'move' tmp[106466](106476 call chpl_compute_low_param_loop_bound 0(106370 call -(106373 call . tup c"size") 1)))
      unknown tmp[106467] "maybe param" "temp"
      (106491 'move' tmp[106467](106489 call chpl_compute_high_param_loop_bound 0(106483 call -(106485 call . tup c"size") 1)))
      unknown tmp[106468] "maybe param" "temp"
      (106494 'move' tmp[106468] 1)
      ParamForLoop[106496]
      { i[106367] tmp[106466] tmp[106467] tmp[106468]
        {
          if(106424 call _cond_test(106406 call ||(106408 call ==(106413 'typeof'(106411 call tup i)) chpl_c_string)(106415 call ==(106420 'typeof'(106418 call tup i))(106422 call c_ptrConst c_char))))
          {
            Try!
            {
              {
                (106382 call += str(106389 call(106386 call . string[244] c"createCopyingBuffer")(106391 call tup i)))
              }
            }
          }
          {
            (106397 call += str(106400 call :(106403 call tup i) string[244]))
          }
          if(106460 call _cond_test(106453 call ==(106456 call . tup c"size") 1))
          {
            { scopeless
              (106428 call += str ",")
            }
          }
          {
            { scopeless
              if(106448 call _cond_test(106438 call < i(106441 call -(106444 call . tup c"size") 1)))
              {
                { scopeless
                  (106433 call += str ", ")
                }
              }
            }
          }
        }
      }
      label _unused_continueLabel[106470]
      label _breakLabel[106469]
    }
    (106505 call += str ")")
    (106509 return str)
  }
  function stringify_simple[106513](const arg args[106517]:_any[141](?) ...) : _unknown[42]
  {
    { scopeless
      unknown str[106523] ""
      (106526 'end of statement')
    }
    {
      unknown i[106527] "index var" 0
      unknown tmp[106679] "maybe param" "temp"
      (106691 'move' tmp[106679](106689 call chpl_compute_low_param_loop_bound 0(106530 call - k 1)))
      unknown tmp[106680] "maybe param" "temp"
      (106701 'move' tmp[106680](106699 call chpl_compute_high_param_loop_bound 0(106696 call - k 1)))
      unknown tmp[106681] "maybe param" "temp"
      (106704 'move' tmp[106681] 1)
      ParamForLoop[106706]
      { i[106527] tmp[106679] tmp[106680] tmp[106681]
        {
          if(106674 call _cond_test(106667 call ==(106672 'typeof'(106670 call args i)) string[244]))
          {
            (106538 call += str(106542 call args i))
          }
          {
            { scopeless
              if(106662 call _cond_test(106644 call ||(106646 call ==(106651 'typeof'(106649 call args i)) chpl_c_string)(106653 call ==(106658 'typeof'(106656 call args i))(106660 call c_ptrConst c_char))))
              {
                Try!
                {
                  {
                    (106546 call += str(106553 call(106550 call . string[244] c"createCopyingBuffer")(106555 call args i)(policy =(106558 call . decodePolicy c"replace"))))
                  }
                }
              }
              {
                { scopeless
                  if(106639 call _cond_test(106632 call ==(106637 'typeof'(106635 call args i)) bytes[232]))
                  {
                    Try!
                    {
                      {
                        (106567 call += str(106576 call(106573 call .(106571 call args i) c"decode")(106578 call . decodePolicy c"replace")))
                      }
                    }
                  }
                  {
                    { scopeless
                      if(106627 call _cond_test(106613 call ||(106616 call isRangeType(106620 'typeof'(106618 call args i)))(106622 call isPrimitiveType(106626 'typeof'(106624 call args i)))))
                      {
                        (106585 call += str(106588 call :(106591 call args i) string[244]))
                      }
                      {
                        { scopeless
                          if(106609 call _cond_test(106604 call isTupleType(106608 'typeof'(106606 call args i))))
                          {
                            (106595 call += str(106599 call _stringify_tuple(106601 call args i)))
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      label _unused_continueLabel[106683]
      label _breakLabel[106682]
    }
    (106715 return str)
  }
  { scopeless type
    string[244]
  }
}
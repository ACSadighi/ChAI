AST dump for Errors after pass optimizeOnClauses.
Module use list: ChapelStandard ChapelLocks CTypes 

{
  function chpl__init_Errors[468309]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    (588009 return _void[46])
  }
  function Error[85511].message[85497](const in arg this[85499]:Error[85511], ref arg _retArg[5541597]:string[244]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    ref call_tmp[7631821]:string[244] "dead after last mention" "maybe param" "temp"
    (7631823 'move' call_tmp[7631821](7631825 '.' this[85499] _msg[85454]))
    val ret[7626783]:string[244] "dead after last mention" "RVV" "temp"
    const-val tmp[7626785]:string[244] "dead after last mention" "temp"
    (7626788 call init=[21330] tmp[7626785] call_tmp[7631821])
    (7626791 'move' ret[7626783] tmp[7626785])
    (5541599 '=' _retArg[5541597] ret[7626783])
    (5541601 return _void[46])
  }
  function Error[85511].deinit[1061344](const in arg this[1061348]:Error[85511]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526050]
    ref _field_destructor_tmp_[5526048]:string[244] "temp"
    (5526055 'move' _field_destructor_tmp_[5526048](5526052 '.' this[1061348] _msg[85454]))
    (5526057 call deinit[21354] _field_destructor_tmp_[5526048])
    (1061356 return _void[46])
  }
  function _new[3031611](const  ref arg msg[3031620]:string[244]) : Error[85511] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[3031613]:Error[85511] "dead after last mention" "temp"
    const-val call_tmp[3031654]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3031657 'move' call_tmp[3031654](3031668 'sizeof_bundle' Error[85511]))
    val cast_tmp[3031671]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3031673 'move' cast_tmp[3031671](3031628 call chpl_here_alloc[308303] call_tmp[3031654] 294))
    (3031631 'move' initTemp[3031613](3031675 'cast' Error[85511] cast_tmp[3031671]))
    val super_tmp[7529066]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7529068 'move' super_tmp[7529066](7529070 '.v' initTemp[3031613] super[397311]))
    (7529073 'setcid' super_tmp[7529066])
    val call_tmp[7529075]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7529077 'move' call_tmp[7529075](7529079 'cast' RootClass[236] initTemp[3031613]))
    (7529082 'setcid' call_tmp[7529075])
    val init_coerce_tmp[7529084]:Error[85511] "dead after last mention" "temp"
    (7529086 '=' init_coerce_tmp[7529084](7529088 'cast' Error[85511] nil[32]))
    (7529091 '.=' initTemp[3031613] _next[85434] init_coerce_tmp[7529084])
    (7529095 '.=' initTemp[3031613] thrownLine[85442] 0)
    (7529099 '.=' initTemp[3031613] thrownFileId[85447] 0)
    val _msg[7529103]:string[244] "dead after last mention" "temp"
    (7529106 call init=[21330] _msg[7529103] msg[3031620])
    (7529109 '.=' initTemp[3031613] _msg[85454] _msg[7529103])
    (7529113 '.=' initTemp[3031613] _hasThrowInfo[85459] 0)
    (7529117 'setcid' initTemp[3031613])
    (3031649 return initTemp[3031613])
  }
  type Error[85511] val super[397311]:RootClass[236] "super class" val _next[85434]:Error[85511] val thrownLine[85442]:int(64)[10] val thrownFileId[85447]:int(32)[66] val _msg[85454]:string[244] val _hasThrowInfo[85459]:bool[19]
  function NilThrownError[85529].message[85515](const in arg this[85517]:NilThrownError[85529], ref arg _retArg[5609375]:string[244]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val inlineImm[7612406]:string[244] "temp"
    (7612409 'move' inlineImm[7612406] "thrown error was nil")
    ref i_x[7612411]:string[244] "temp"
    (7612415 'move' i_x[7612411](7612413 'set reference' inlineImm[7612406]))
    val ret[7612423]:string[244] "dead after last mention" "RVV" "temp"
    const-val tmp[7612425]:string[244] "dead after last mention" "temp"
    (7612428 call init=[21330] tmp[7612425] i_x[7612411])
    (7612431 'move' ret[7612423] tmp[7612425])
    (5609377 '=' _retArg[5609375] ret[7612423])
    (5609382 return _void[46])
  }
  function NilThrownError[85529].deinit[1061556](const in arg this[1061560]:NilThrownError[85529]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[5526075]
    val _parent_destructor_tmp_[5526070]:Error[85511] "temp"
    (5526077 'move' _parent_destructor_tmp_[5526070](5526071 'cast' Error[85511] this[1061560]))
    ref _field_destructor_tmp_[7630065]:string[244] "temp"
    (7630067 'move' _field_destructor_tmp_[7630065](7630069 '.' _parent_destructor_tmp_[5526070] _msg[85454]))
    (7630073 call deinit[21354] _field_destructor_tmp_[7630065])
    (1061568 return _void[46])
  }
  function _new[1500768]() : NilThrownError[85529] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[1500770]:NilThrownError[85529] "dead after last mention" "temp"
    const-val call_tmp[1500811]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1500814 'move' call_tmp[1500811](1500823 'sizeof_bundle' NilThrownError[85529]))
    val cast_tmp[1500826]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1500828 'move' cast_tmp[1500826](1500782 call chpl_here_alloc[308303] call_tmp[1500811] 1))
    (1500785 'move' initTemp[1500770](1500830 'cast' NilThrownError[85529] cast_tmp[1500826]))
    val super_tmp[7631925]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7631927 'move' super_tmp[7631925](7631929 '.v' initTemp[1500770] super[397420]))
    val super_tmp[7631932]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7631934 'move' super_tmp[7631932](7631936 '.v' super_tmp[7631925] super[397311]))
    (7631939 'setcid' super_tmp[7631932])
    val call_tmp[7631941]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7631943 'move' call_tmp[7631941](7631945 'cast' RootClass[236] super_tmp[7631925]))
    (7631948 'setcid' call_tmp[7631941])
    val init_coerce_tmp[7631950]:Error[85511] "dead after last mention" "temp"
    (7631952 '=' init_coerce_tmp[7631950](7631954 'cast' Error[85511] nil[32]))
    (7631957 '.=' super_tmp[7631925] _next[85434] init_coerce_tmp[7631950])
    (7631961 '.=' super_tmp[7631925] thrownLine[85442] 0)
    (7631965 '.=' super_tmp[7631925] thrownFileId[85447] 0)
    val _msg[7631969]:string[244] "dead after last mention" "temp"
    (7631972 call init[21321] _msg[7631969])
    (7631974 '.=' super_tmp[7631925] _msg[85454] _msg[7631969])
    (7631978 '.=' super_tmp[7631925] _hasThrowInfo[85459] 0)
    (7631982 'setcid' super_tmp[7631925])
    val call_tmp[7631984]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7631986 'move' call_tmp[7631984](7631988 'cast' Error[85511] initTemp[1500770]))
    (7631991 'setcid' call_tmp[7631984])
    (7631993 'setcid' initTemp[1500770])
    (1500806 return initTemp[1500770])
  }
  type NilThrownError[85529] val super[397420]:Error[85511] "super class"
  function NilClassError[85547].message[85533](const in arg this[85535]:NilClassError[85547], ref arg _retArg[5609384]:string[244]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val inlineImm[7612436]:string[244] "temp"
    (7612439 'move' inlineImm[7612436] "cannot convert nil class to non nilable type")
    ref i_x[7612441]:string[244] "temp"
    (7612445 'move' i_x[7612441](7612443 'set reference' inlineImm[7612436]))
    val ret[7612453]:string[244] "dead after last mention" "RVV" "temp"
    const-val tmp[7612455]:string[244] "dead after last mention" "temp"
    (7612458 call init=[21330] tmp[7612455] i_x[7612441])
    (7612461 'move' ret[7612453] tmp[7612455])
    (5609386 '=' _retArg[5609384] ret[7612453])
    (5609391 return _void[46])
  }
  function NilClassError[85547].deinit[1061768](const in arg this[1061772]:NilClassError[85547]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526087]
    val _parent_destructor_tmp_[5526082]:Error[85511] "temp"
    (5526089 'move' _parent_destructor_tmp_[5526082](5526083 'cast' Error[85511] this[1061772]))
    ref _field_destructor_tmp_[7630080]:string[244] "temp"
    (7630082 'move' _field_destructor_tmp_[7630080](7630084 '.' _parent_destructor_tmp_[5526082] _msg[85454]))
    (7630088 call deinit[21354] _field_destructor_tmp_[7630080])
    (1061780 return _void[46])
  }
  function _new[2140023]() : NilClassError[85547] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2140025]:NilClassError[85547] "dead after last mention" "temp"
    const-val call_tmp[2140066]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140069 'move' call_tmp[2140066](2140080 'sizeof_bundle' NilClassError[85547]))
    val cast_tmp[2140083]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (2140085 'move' cast_tmp[2140083](2140037 call chpl_here_alloc[308303] call_tmp[2140066] 95))
    (2140040 'move' initTemp[2140025](2140087 'cast' NilClassError[85547] cast_tmp[2140083]))
    val super_tmp[7631998]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7632000 'move' super_tmp[7631998](7632002 '.v' initTemp[2140025] super[397422]))
    val super_tmp[7632005]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7632007 'move' super_tmp[7632005](7632009 '.v' super_tmp[7631998] super[397311]))
    (7632012 'setcid' super_tmp[7632005])
    val call_tmp[7632014]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7632016 'move' call_tmp[7632014](7632018 'cast' RootClass[236] super_tmp[7631998]))
    (7632021 'setcid' call_tmp[7632014])
    val init_coerce_tmp[7632023]:Error[85511] "dead after last mention" "temp"
    (7632025 '=' init_coerce_tmp[7632023](7632027 'cast' Error[85511] nil[32]))
    (7632030 '.=' super_tmp[7631998] _next[85434] init_coerce_tmp[7632023])
    (7632034 '.=' super_tmp[7631998] thrownLine[85442] 0)
    (7632038 '.=' super_tmp[7631998] thrownFileId[85447] 0)
    val _msg[7632042]:string[244] "dead after last mention" "temp"
    (7632045 call init[21321] _msg[7632042])
    (7632047 '.=' super_tmp[7631998] _msg[85454] _msg[7632042])
    (7632051 '.=' super_tmp[7631998] _hasThrowInfo[85459] 0)
    (7632055 'setcid' super_tmp[7631998])
    val call_tmp[7632057]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7632059 'move' call_tmp[7632057](7632061 'cast' Error[85511] initTemp[2140025]))
    (7632064 'setcid' call_tmp[7632057])
    (7632066 'setcid' initTemp[2140025])
    (2140061 return initTemp[2140025])
  }
  type NilClassError[85547] val super[397422]:Error[85511] "super class"
  function ClassCastError[85565].message[85551](const in arg this[85553]:ClassCastError[85565], ref arg _retArg[5609393]:string[244]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val inlineImm[7612466]:string[244] "temp"
    (7612469 'move' inlineImm[7612466] "cannot cast class to type - runtime types not compatible")
    ref i_x[7612471]:string[244] "temp"
    (7612475 'move' i_x[7612471](7612473 'set reference' inlineImm[7612466]))
    val ret[7612483]:string[244] "dead after last mention" "RVV" "temp"
    const-val tmp[7612485]:string[244] "dead after last mention" "temp"
    (7612488 call init=[21330] tmp[7612485] i_x[7612471])
    (7612491 'move' ret[7612483] tmp[7612485])
    (5609395 '=' _retArg[5609393] ret[7612483])
    (5609400 return _void[46])
  }
  function ClassCastError[85565].deinit[1061980](const in arg this[1061984]:ClassCastError[85565]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526099]
    val _parent_destructor_tmp_[5526094]:Error[85511] "temp"
    (5526101 'move' _parent_destructor_tmp_[5526094](5526095 'cast' Error[85511] this[1061984]))
    ref _field_destructor_tmp_[7630095]:string[244] "temp"
    (7630097 'move' _field_destructor_tmp_[7630095](7630099 '.' _parent_destructor_tmp_[5526094] _msg[85454]))
    (7630103 call deinit[21354] _field_destructor_tmp_[7630095])
    (1061992 return _void[46])
  }
  function _new[2168546]() : ClassCastError[85565] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2168548]:ClassCastError[85565] "dead after last mention" "temp"
    const-val call_tmp[2168589]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168592 'move' call_tmp[2168589](2168603 'sizeof_bundle' ClassCastError[85565]))
    val cast_tmp[2168606]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (2168608 'move' cast_tmp[2168606](2168560 call chpl_here_alloc[308303] call_tmp[2168589] 100))
    (2168563 'move' initTemp[2168548](2168610 'cast' ClassCastError[85565] cast_tmp[2168606]))
    val super_tmp[7632093]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7632095 'move' super_tmp[7632093](7632097 '.v' initTemp[2168548] super[397424]))
    val super_tmp[7632100]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7632102 'move' super_tmp[7632100](7632104 '.v' super_tmp[7632093] super[397311]))
    (7632107 'setcid' super_tmp[7632100])
    val call_tmp[7632109]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7632111 'move' call_tmp[7632109](7632113 'cast' RootClass[236] super_tmp[7632093]))
    (7632116 'setcid' call_tmp[7632109])
    val init_coerce_tmp[7632118]:Error[85511] "dead after last mention" "temp"
    (7632120 '=' init_coerce_tmp[7632118](7632122 'cast' Error[85511] nil[32]))
    (7632125 '.=' super_tmp[7632093] _next[85434] init_coerce_tmp[7632118])
    (7632129 '.=' super_tmp[7632093] thrownLine[85442] 0)
    (7632133 '.=' super_tmp[7632093] thrownFileId[85447] 0)
    val _msg[7632137]:string[244] "dead after last mention" "temp"
    (7632140 call init[21321] _msg[7632137])
    (7632142 '.=' super_tmp[7632093] _msg[85454] _msg[7632137])
    (7632146 '.=' super_tmp[7632093] _hasThrowInfo[85459] 0)
    (7632150 'setcid' super_tmp[7632093])
    val call_tmp[7632152]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7632154 'move' call_tmp[7632152](7632156 'cast' Error[85511] initTemp[2168548]))
    (7632159 'setcid' call_tmp[7632152])
    (7632161 'setcid' initTemp[2168548])
    (2168584 return initTemp[2168548])
  }
  type ClassCastError[85565] val super[397424]:Error[85511] "super class"
  function DecodeError[85583].message[85569](const in arg this[85571]:DecodeError[85583], ref arg _retArg[5609402]:string[244]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val inlineImm[7612496]:string[244] "temp"
    (7612499 'move' inlineImm[7612496] "Invalid UTF-8 character encountered.")
    ref i_x[7612501]:string[244] "temp"
    (7612505 'move' i_x[7612501](7612503 'set reference' inlineImm[7612496]))
    val ret[7612513]:string[244] "dead after last mention" "RVV" "temp"
    const-val tmp[7612515]:string[244] "dead after last mention" "temp"
    (7612518 call init=[21330] tmp[7612515] i_x[7612501])
    (7612521 'move' ret[7612513] tmp[7612515])
    (5609404 '=' _retArg[5609402] ret[7612513])
    (5609409 return _void[46])
  }
  function DecodeError[85583].deinit[1062192](const in arg this[1062196]:DecodeError[85583]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526111]
    val _parent_destructor_tmp_[5526106]:Error[85511] "temp"
    (5526113 'move' _parent_destructor_tmp_[5526106](5526107 'cast' Error[85511] this[1062196]))
    ref _field_destructor_tmp_[7630110]:string[244] "temp"
    (7630112 'move' _field_destructor_tmp_[7630110](7630114 '.' _parent_destructor_tmp_[5526106] _msg[85454]))
    (7630118 call deinit[21354] _field_destructor_tmp_[7630110])
    (1062204 return _void[46])
  }
  function _new[1514615]() : DecodeError[85583] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[1514617]:DecodeError[85583] "dead after last mention" "temp"
    const-val call_tmp[1514655]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1514658 'move' call_tmp[1514655](1514669 'sizeof_bundle' DecodeError[85583]))
    val cast_tmp[1514672]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1514674 'move' cast_tmp[1514672](1514629 call chpl_here_alloc[308303] call_tmp[1514655] 2))
    (1514632 'move' initTemp[1514617](1514676 'cast' DecodeError[85583] cast_tmp[1514672]))
    val super_tmp[7632188]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7632190 'move' super_tmp[7632188](7632192 '.v' initTemp[1514617] super[397426]))
    val super_tmp[7632195]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7632197 'move' super_tmp[7632195](7632199 '.v' super_tmp[7632188] super[397311]))
    (7632202 'setcid' super_tmp[7632195])
    val call_tmp[7632204]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7632206 'move' call_tmp[7632204](7632208 'cast' RootClass[236] super_tmp[7632188]))
    (7632211 'setcid' call_tmp[7632204])
    val init_coerce_tmp[7632213]:Error[85511] "dead after last mention" "temp"
    (7632215 '=' init_coerce_tmp[7632213](7632217 'cast' Error[85511] nil[32]))
    (7632220 '.=' super_tmp[7632188] _next[85434] init_coerce_tmp[7632213])
    (7632224 '.=' super_tmp[7632188] thrownLine[85442] 0)
    (7632228 '.=' super_tmp[7632188] thrownFileId[85447] 0)
    val _msg[7632232]:string[244] "dead after last mention" "temp"
    (7632235 call init[21321] _msg[7632232])
    (7632237 '.=' super_tmp[7632188] _msg[85454] _msg[7632232])
    (7632241 '.=' super_tmp[7632188] _hasThrowInfo[85459] 0)
    (7632245 'setcid' super_tmp[7632188])
    val call_tmp[7632247]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7632249 'move' call_tmp[7632247](7632251 'cast' Error[85511] initTemp[1514617]))
    (7632254 'setcid' call_tmp[7632247])
    (7632256 'setcid' initTemp[1514617])
    (1514650 return initTemp[1514617])
  }
  type DecodeError[85583] val super[397426]:Error[85511] "super class"
  function IllegalArgumentError[85616].deinit[1062232](const in arg this[1062236]:IllegalArgumentError[85616]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526123]
    val _parent_destructor_tmp_[5526118]:Error[85511] "temp"
    (5526125 'move' _parent_destructor_tmp_[5526118](5526119 'cast' Error[85511] this[1062236]))
    ref _field_destructor_tmp_[7630125]:string[244] "temp"
    (7630127 'move' _field_destructor_tmp_[7630125](7630129 '.' _parent_destructor_tmp_[5526118] _msg[85454]))
    (7630133 call deinit[21354] _field_destructor_tmp_[7630125])
    (1062244 return _void[46])
  }
  function _new[1475209](const  ref arg msg[1475218]:string[244]) : IllegalArgumentError[85616] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1475211]:IllegalArgumentError[85616] "dead after last mention" "temp"
    const-val call_tmp[1475250]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1475253 'move' call_tmp[1475250](1475264 'sizeof_bundle' IllegalArgumentError[85616]))
    val cast_tmp[1475324]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1475326 'move' cast_tmp[1475324](1475224 call chpl_here_alloc[308303] call_tmp[1475250] 0))
    (1475227 'move' initTemp[1475211](1475328 'cast' IllegalArgumentError[85616] cast_tmp[1475324]))
    val super_tmp[7529184]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7529186 'move' super_tmp[7529184](7529188 '.v' initTemp[1475211] super[397428]))
    val super_tmp[7529191]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7529193 'move' super_tmp[7529191](7529195 '.v' super_tmp[7529184] super[397311]))
    (7529198 'setcid' super_tmp[7529191])
    val call_tmp[7529200]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7529202 'move' call_tmp[7529200](7529204 'cast' RootClass[236] super_tmp[7529184]))
    (7529207 'setcid' call_tmp[7529200])
    val init_coerce_tmp[7529209]:Error[85511] "dead after last mention" "temp"
    (7529211 '=' init_coerce_tmp[7529209](7529213 'cast' Error[85511] nil[32]))
    (7529216 '.=' super_tmp[7529184] _next[85434] init_coerce_tmp[7529209])
    (7529220 '.=' super_tmp[7529184] thrownLine[85442] 0)
    (7529224 '.=' super_tmp[7529184] thrownFileId[85447] 0)
    val _msg[7529228]:string[244] "dead after last mention" "temp"
    (7529231 call init=[21330] _msg[7529228] msg[1475218])
    (7529234 '.=' super_tmp[7529184] _msg[85454] _msg[7529228])
    (7529238 '.=' super_tmp[7529184] _hasThrowInfo[85459] 0)
    (7529242 'setcid' super_tmp[7529184])
    val call_tmp[7529244]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7529246 'move' call_tmp[7529244](7529248 'cast' Error[85511] initTemp[1475211]))
    (7529251 'setcid' call_tmp[7529244])
    (7529253 'setcid' initTemp[1475211])
    (1475245 return initTemp[1475211])
  }
  type IllegalArgumentError[85616] val super[397428]:Error[85511] "super class"
  function CodepointSplitError[85656].message[85639](const in arg this[85641]:CodepointSplitError[85656], ref arg _retArg[5608832]:string[244]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val coerce_tmp[4347051]:Error[85511] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (4347057 'move' coerce_tmp[4347051](4347053 'cast' Error[85511] this[85641]))
    ref call_tmp[7631891]:string[244] "dead after last mention" "maybe param" "temp"
    (7631893 'move' call_tmp[7631891](7631895 '.' coerce_tmp[4347051] _msg[85454]))
    const-val call_tmp[732718]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539110]:string[244] "temp"
    (85647 call +[28065] "Attempting to split a multi-byte codepoint. " call_tmp[7631891] ret_tmp[5539110])
    (5539113 'move' call_tmp[732718] ret_tmp[5539110])
    (5608834 '=' _retArg[5608832] call_tmp[732718])
    (5608836 return _void[46])
  }
  function CodepointSplitError[85656].deinit[1062272](const in arg this[1062276]:CodepointSplitError[85656]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526135]
    val _parent_destructor_tmp_[5526130]:Error[85511] "temp"
    (5526137 'move' _parent_destructor_tmp_[5526130](5526131 'cast' Error[85511] this[1062276]))
    ref _field_destructor_tmp_[7630140]:string[244] "temp"
    (7630142 'move' _field_destructor_tmp_[7630140](7630144 '.' _parent_destructor_tmp_[5526130] _msg[85454]))
    (7630148 call deinit[21354] _field_destructor_tmp_[7630140])
    (1062284 return _void[46])
  }
  function _new[1659047](const  ref arg info[1659056]:string[244]) : CodepointSplitError[85656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1659049]:CodepointSplitError[85656] "dead after last mention" "temp"
    const-val call_tmp[1659093]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1659096 'move' call_tmp[1659093](1659107 'sizeof_bundle' CodepointSplitError[85656]))
    val cast_tmp[1659110]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1659112 'move' cast_tmp[1659110](1659064 call chpl_here_alloc[308303] call_tmp[1659093] 36))
    (1659067 'move' initTemp[1659049](1659114 'cast' CodepointSplitError[85656] cast_tmp[1659110]))
    val super_tmp[7529258]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7529260 'move' super_tmp[7529258](7529262 '.v' initTemp[1659049] super[397430]))
    val super_tmp[7529265]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7529267 'move' super_tmp[7529265](7529269 '.v' super_tmp[7529258] super[397311]))
    (7529272 'setcid' super_tmp[7529265])
    val call_tmp[7529274]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7529276 'move' call_tmp[7529274](7529278 'cast' RootClass[236] super_tmp[7529258]))
    (7529281 'setcid' call_tmp[7529274])
    val init_coerce_tmp[7529283]:Error[85511] "dead after last mention" "temp"
    (7529285 '=' init_coerce_tmp[7529283](7529287 'cast' Error[85511] nil[32]))
    (7529290 '.=' super_tmp[7529258] _next[85434] init_coerce_tmp[7529283])
    (7529294 '.=' super_tmp[7529258] thrownLine[85442] 0)
    (7529298 '.=' super_tmp[7529258] thrownFileId[85447] 0)
    val _msg[7529302]:string[244] "dead after last mention" "temp"
    (7529305 call init=[21330] _msg[7529302] info[1659056])
    (7529308 '.=' super_tmp[7529258] _msg[85454] _msg[7529302])
    (7529312 '.=' super_tmp[7529258] _hasThrowInfo[85459] 0)
    (7529316 'setcid' super_tmp[7529258])
    val call_tmp[7529318]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7529320 'move' call_tmp[7529318](7529322 'cast' Error[85511] initTemp[1659049]))
    (7529325 'setcid' call_tmp[7529318])
    (7529327 'setcid' initTemp[1659049])
    (1659088 return initTemp[1659049])
  }
  type CodepointSplitError[85656] val super[397430]:Error[85511] "super class"
  function chpl_TaskErrors[85763].append[85694](ref arg this[85696]:chpl_TaskErrors[85763], const in arg err[85700]:Error[85511]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[7632331]:chpl_LocalSpinlock[85418] "dead after last mention" "maybe param" "temp"
    (7632333 'move' call_tmp[7632331](7632335 '.' this[85696] _errorsLock[85690]))
    val tmp[7527600]:bool[19] "dead after last mention" "temp"
    ref call_tmp[7527602]:atomic bool[83090] "dead after last mention" "maybe param" "temp"
    (7527604 'move' call_tmp[7527602](7527606 '.' call_tmp[7632331] l[85243]))
    (7527610 call chpl_rmem_consist_maybe_release[1582822])
    ref call_tmp[7527611]:atomic_bool[1524038] "dead after last mention" "maybe param" "temp"
    (7527613 'move' call_tmp[7527611](7527615 '.' call_tmp[7527602] _v[82072]))
    val ret[7527618]:memory_order[80955] "dead after last mention" "RVV" "temp"
    (7527620 'move' ret[7527618] memory_order_seq_cst[81211])
    const-val call_tmp[7527623]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7527625 'move' call_tmp[7527623](7527628 call atomic_load[1776740] call_tmp[7527611] ret[7527618]))
    val tmp[7527631]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7527623]
    {
      (7527635 'move' tmp[7527631] 1)
    }
    {
      ref call_tmp[7527639]:atomic bool[83090] "dead after last mention" "maybe param" "temp"
      (7527641 'move' call_tmp[7527639](7527643 '.' call_tmp[7632331] l[85243]))
      (7527647 call chpl_rmem_consist_maybe_release[1777215])
      (7527649 call chpl_rmem_consist_maybe_release[1777215])
      ref call_tmp[7527650]:atomic_bool[1524038] "dead after last mention" "maybe param" "temp"
      (7527652 'move' call_tmp[7527650](7527654 '.' call_tmp[7527639] _v[82072]))
      val ret[7527657]:memory_order[80955] "dead after last mention" "RVV" "temp"
      (7527659 'move' ret[7527657] memory_order_acquire[81196])
      const-val call_tmp[7527662]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7527664 'move' call_tmp[7527662](7527667 call atomic_exchange[1777524] call_tmp[7527650] 1 ret[7527657]))
      (7527672 call chpl_rmem_consist_maybe_acquire[1777919])
      (7527673 'move' tmp[7527631] call_tmp[7527662])
    }
    (7527677 'move' tmp[7527600] tmp[7527631])
    WhileDo[7527680]
    {
      (7527683 call chpl_task_yield[68741])
      ref call_tmp[7527684]:atomic bool[83090] "dead after last mention" "maybe param" "temp"
      (7527686 'move' call_tmp[7527684](7527688 '.' call_tmp[7632331] l[85243]))
      (7527692 call chpl_rmem_consist_maybe_release[1582822])
      ref call_tmp[7527693]:atomic_bool[1524038] "dead after last mention" "maybe param" "temp"
      (7527695 'move' call_tmp[7527693](7527697 '.' call_tmp[7527684] _v[82072]))
      val ret[7527700]:memory_order[80955] "dead after last mention" "RVV" "temp"
      (7527702 'move' ret[7527700] memory_order_seq_cst[81211])
      const-val call_tmp[7527705]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7527707 'move' call_tmp[7527705](7527710 call atomic_load[1776740] call_tmp[7527693] ret[7527700]))
      val tmp[7527713]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7527705]
      {
        (7527717 'move' tmp[7527713] 1)
      }
      {
        ref call_tmp[7527721]:atomic bool[83090] "dead after last mention" "maybe param" "temp"
        (7527723 'move' call_tmp[7527721](7527725 '.' call_tmp[7632331] l[85243]))
        (7527729 call chpl_rmem_consist_maybe_release[1777215])
        (7527731 call chpl_rmem_consist_maybe_release[1777215])
        ref call_tmp[7527732]:atomic_bool[1524038] "dead after last mention" "maybe param" "temp"
        (7527734 'move' call_tmp[7527732](7527736 '.' call_tmp[7527721] _v[82072]))
        val ret[7527739]:memory_order[80955] "dead after last mention" "RVV" "temp"
        (7527741 'move' ret[7527739] memory_order_acquire[81196])
        const-val call_tmp[7527744]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7527746 'move' call_tmp[7527744](7527749 call atomic_exchange[1777524] call_tmp[7527732] 1 ret[7527739]))
        (7527754 call chpl_rmem_consist_maybe_acquire[1777919])
        (7527755 'move' tmp[7527713] call_tmp[7527744])
      }
      (7527759 'move' tmp[7527600] tmp[7527713])
      tmp[7527600]
    }
    val coerce_tmp[1802785]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1802790 'move' coerce_tmp[1802785] err[85700])
    val coerce_tmp[1802855]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1802859 'move' coerce_tmp[1802855](9195699 '.v' this[85696] _head[85682]))
    (9195693 '.=' coerce_tmp[1802785] _next[85434] coerce_tmp[1802855])
    (9195705 '.=' this[85696] _head[85682] err[85700])
    ref call_tmp[7632341]:chpl_LocalSpinlock[85418] "dead after last mention" "maybe param" "temp"
    (7632343 'move' call_tmp[7632341](7632345 '.' this[85696] _errorsLock[85690]))
    ref call_tmp[7528744]:atomic bool[83090] "dead after last mention" "maybe param" "temp"
    (7528746 'move' call_tmp[7528744](7528748 '.' call_tmp[7632341] l[85243]))
    (7528752 call chpl_rmem_consist_maybe_release[1778818])
    (7528754 call chpl_rmem_consist_maybe_release[1778818])
    ref call_tmp[7528755]:atomic_bool[1524038] "dead after last mention" "maybe param" "temp"
    (7528757 'move' call_tmp[7528755](7528759 '.' call_tmp[7528744] _v[82072]))
    val ret[7528762]:memory_order[80955] "dead after last mention" "RVV" "temp"
    (7528764 'move' ret[7528762] memory_order_release[81201])
    (7528768 call atomic_store[1779222] call_tmp[7528755] 0 ret[7528762])
    (7528773 call chpl_rmem_consist_maybe_acquire[1779504])
    (7528775 call chpl_rmem_consist_maybe_acquire[1779504])
    (587788 return _void[46])
  }
  function chpl_TaskErrors[85763].empty[85748](const  ref arg this[85750]:chpl_TaskErrors[85763]) : bool[19] "fast on" "local fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val coerce_tmp[1805551]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1805555 'move' coerce_tmp[1805551](9195715 '.v' this[85750] _head[85682]))
    val coerce_tmp[1805557]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1805562 'move' coerce_tmp[1805557](1805559 'cast' RootClass[236] coerce_tmp[1805551]))
    const-val call_tmp[7492772]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7492774 'move' call_tmp[7492772](7492776 '==' coerce_tmp[1805557] nil[32]))
    (587794 return call_tmp[7492772])
  }
  function chpl_TaskErrors[85763].init[1062550](ref arg this[1062553]:chpl_TaskErrors[85763], in arg _head[1062556]:Error[85511], const  ref arg _errorsLock[1062569]:chpl_LocalSpinlock[85418]) : void[4] "compiler generated" "default initializer" "fast on" "last resort" "local fn" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[1525372]:chpl_LocalSpinlock[85418] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1525375 'move' _formal_tmp__errorsLock[1525372] _errorsLock[1062569])
    (1062581 '.=' this[1062553] _head[85682] _head[1062556])
    (1062584 '.=' this[1062553] _errorsLock[85690] _formal_tmp__errorsLock[1525372])
    (1062588 return _void[46])
  }
  type chpl_TaskErrors[85763] val _head[85682]:Error[85511] val _errorsLock[85690]:chpl_LocalSpinlock[85418]
  function TaskErrors[87096].deinit[86241](const in arg this[86243]:TaskErrors[87096]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    val coerce_tmp[1806023]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1806027 'move' coerce_tmp[1806023](9195726 '.v' this[86243] errorsArray[85773]))
    const-val call_tmp[7853565]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7853567 'move' call_tmp[7853565](7853569 'ptr_neq' coerce_tmp[1806023] nil[32]))
    if call_tmp[7853565]
    {
      const-val coerce_tmp[1806085]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1806089 'move' coerce_tmp[1806085](9195732 '.v' this[86243] nErrors[85768]))
      const-val tmp[7321488]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7321490 'move' tmp[7321488](7321492 '<' coerce_tmp[1806085] 0))
      if tmp[7321488]
      {
        (6276263 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
      }
      val tmp[6276273]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[7390164]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7390166 'move' call_tmp[7390164](7390168 '==' coerce_tmp[1806085] 0))
      if call_tmp[7390164]
      {
        const-val call_tmp[6276292]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (6276294 'move' call_tmp[6276292](6276296 'cast' uint(64)[86] 0))
        const-val call_tmp[7443118]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (7443120 'move' call_tmp[7443118](7443122 '-' call_tmp[6276292] 1))
        const-val call_tmp[7444288]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7444290 'move' call_tmp[7444288](7444292 'cast' int(64)[10] call_tmp[7443118]))
        (6276320 'move' tmp[6276273] call_tmp[7444288])
      }
      {
        const-val call_tmp[7447168]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7447170 'move' call_tmp[7447168](7447172 '-' coerce_tmp[1806085] 1))
        const-val call_tmp[7374605]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7374607 'move' call_tmp[7374605](7374609 '+' 0 call_tmp[7447168]))
        (6276353 'move' tmp[6276273] call_tmp[7374605])
      }
      const-val _ic__F1_high[9018305]:int(64)[10] "temp"
      (7457561 'move' _ic__F1_high[9018305] tmp[6276273])
      val i[6276390]:int(64)[10] "dead at end of block" "insert auto destroy"
      (6276394 'move' i[6276390] 0)
      (6276454 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6276273] 1 0 tmp[6276273] 1)
      val coerce_tmp[6276565]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6276567 'move' coerce_tmp[6276565](9195738 '.v' this[86243] errorsArray[85773]))
      CForLoop[6276461] hazard
      {
        ref call_tmp[7560778]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
        (7560780 'move' call_tmp[7560778](7560782 'array_get' coerce_tmp[6276565] i[6276390]))
        (6276578 call =[1806235] call_tmp[7560778] nil[32])
        {
          (6276470 '=' i[6276390] 0)
        }
        {
          (6276481 '<=' i[6276390] _ic__F1_high[9018305])
        }
        {
          (6276489 '+=' i[6276390] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[6276523]
      label _endchpl_direct_counted_range_iter_helper[6276528]
      label _endchpl_direct_counted_range_iter[5953449]
      val coerce_tmp[1807195]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1807199 'move' coerce_tmp[1807195](9195744 '.v' this[86243] errorsArray[85773]))
      val coerce_tmp[1807201]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1807207 'move' coerce_tmp[1807201](1807203 'cast' c_ptr(void)[1465614] coerce_tmp[1807195]))
      (7488562 call chpl_here_free[308686] coerce_tmp[1807201])
    }
    label _enddeinit[5525591]
    val _parent_destructor_tmp_[5525586]:Error[85511] "temp"
    (5525593 'move' _parent_destructor_tmp_[5525586](5525587 'cast' Error[85511] this[86243]))
    ref _field_destructor_tmp_[7629990]:string[244] "temp"
    (7629992 'move' _field_destructor_tmp_[7629990](7629994 '.' _parent_destructor_tmp_[5525586] _msg[85454]))
    (7629998 call deinit[21354] _field_destructor_tmp_[7629990])
    (587805 return _void[46])
  }
  function TaskErrors[87096].message[86562](const in arg this[86564]:TaskErrors[87096], ref arg _retArg[5609222]:string[244]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[587832]:string[244] "dead after last mention" "RVV" "temp"
    val n[86571]:int(64)[10] "dead at end of block" "insert auto destroy"
    (642109 'move' n[86571] 0)
    val minMsg[86576]:string[244] "dead at end of block" "insert auto destroy"
    (4347780 call init[21321] minMsg[86576])
    val maxMsg[86581]:string[244] "dead at end of block" "insert auto destroy"
    (4347785 call init[21321] maxMsg[86581])
    val first[86586]:Error[85511] "dead at end of block" "insert auto destroy"
    (4347793 'move' first[86586](4347791 'cast' Error[85511] nil[32]))
    val last[86593]:Error[85511] "dead at end of block" "insert auto destroy"
    (4347798 'move' last[86593](4347796 'cast' Error[85511] nil[32]))
    const-val call_tmp[5953702]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (5953704 'move' call_tmp[5953702](5953706 '_wide_get_node' this[86564]))
    const-val call_tmp[5953708]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542621]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542623]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7542625 'move' call_tmp[7542623](7542628 call chpl_nodeID[305038]))
    const-val call_tmp[7542629]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (7542631 'move' call_tmp[7542629](7542634 call chpl_rt_buildLocaleID[306484] call_tmp[7542623] c_sublocid_any[135202]))
    (7542637 'move' call_tmp[7542621] call_tmp[7542629])
    const-val call_tmp[7542640]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7542642]:locale[234] "temp"
    (7542645 call chpl_localeID_to_locale[137251] call_tmp[7542621] ret_tmp[7542642])
    (7542648 'move' call_tmp[7542640] ret_tmp[7542642])
    (5953715 'move' call_tmp[5953708] call_tmp[7542640])
    val coerce_tmp[7550928]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7550930 'move' coerce_tmp[7550928](7550932 '.v' call_tmp[5953708] _instance[135293]))
    val coerce_tmp[7550935]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7550937 'move' coerce_tmp[7550935](7550939 'cast' RootClass[236] coerce_tmp[7550928]))
    const-val call_tmp[7550942]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7550944 'move' call_tmp[7550942](7550946 '==' coerce_tmp[7550935] nil[32]))
    if call_tmp[7550942]
    {
      (7550952 call nilCheckHalt[392] "argument to ! is nil")
    }
    const-val call_tmp[7550955]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7550957 'move' call_tmp[7550955](7550960 call id[135878] coerce_tmp[7550928]))
    const-val coerce_tmp[5953727]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (5953729 'move' coerce_tmp[5953727](5953731 'cast' int(64)[10] call_tmp[5953702]))
    const-val call_tmp[7389264]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7389266 'move' call_tmp[7389264](7389268 '==' coerce_tmp[5953727] call_tmp[7550955]))
    const-val call_tmp[5953740]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (5953742 'move' call_tmp[5953740](5953744 '_wide_get_node' this[86564]))
    const-val call_tmp[5953746]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542663]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542665]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7542667 'move' call_tmp[7542665](7542670 call chpl_nodeID[305038]))
    const-val call_tmp[7542671]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (7542673 'move' call_tmp[7542671](7542676 call chpl_rt_buildLocaleID[306484] call_tmp[7542665] c_sublocid_any[135202]))
    (7542679 'move' call_tmp[7542663] call_tmp[7542671])
    const-val call_tmp[7542682]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7542684]:locale[234] "temp"
    (7542687 call chpl_localeID_to_locale[137251] call_tmp[7542663] ret_tmp[7542684])
    (7542690 'move' call_tmp[7542682] ret_tmp[7542684])
    (5953753 'move' call_tmp[5953746] call_tmp[7542682])
    val coerce_tmp[7550971]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7550973 'move' coerce_tmp[7550971](7550975 '.v' call_tmp[5953746] _instance[135293]))
    val coerce_tmp[7550978]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7550980 'move' coerce_tmp[7550978](7550982 'cast' RootClass[236] coerce_tmp[7550971]))
    const-val call_tmp[7550985]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7550987 'move' call_tmp[7550985](7550989 '==' coerce_tmp[7550978] nil[32]))
    if call_tmp[7550985]
    {
      (7550995 call nilCheckHalt[392] "argument to ! is nil")
    }
    const-val call_tmp[7550998]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7551000 'move' call_tmp[7550998](7551003 call id[135878] coerce_tmp[7550971]))
    (5953764 call assert[1809366] call_tmp[7389264] "iterating over a TaskErrors object allocated on locale " call_tmp[5953740] " while being on locale " call_tmp[7550998])
    ref i_x[7560383]:locale[234] "temp"
    (7560387 'move' i_x[7560383](7560385 'set reference' call_tmp[5953746]))
    (7560391 call deinit[135483] i_x[7560383])
    ref i_x[7560395]:locale[234] "temp"
    (7560399 'move' i_x[7560395](7560397 'set reference' call_tmp[5953708]))
    (7560403 call deinit[135483] i_x[7560395])
    const-val this[5954239]:TaskErrors[87096] "temp"
    (5954244 'move' this[5954239] this[86564])
    const-val coerce_tmp[5953789]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (5953791 'move' coerce_tmp[5953789](9195778 '.v' this[5954239] nErrors[85768]))
    val taskInd_this[5953810]:TaskErrors[87096] "task private variable"
    const-val this[5954246]:TaskErrors[87096] "temp"
    (5954251 'move' this[5954246] this[86564])
    (5953812 'move' taskInd_this[5953810] this[5954246])
    const-val tmp[7321503]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7321505 'move' tmp[7321503](7321507 '<' coerce_tmp[5953789] 0))
    if tmp[7321503]
    {
      (6277179 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    val tmp[6277189]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[7390179]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7390181 'move' call_tmp[7390179](7390183 '==' coerce_tmp[5953789] 0))
    if call_tmp[7390179]
    {
      const-val call_tmp[6277208]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (6277210 'move' call_tmp[6277208](6277212 'cast' uint(64)[86] 0))
      const-val call_tmp[7443128]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7443130 'move' call_tmp[7443128](7443132 '-' call_tmp[6277208] 1))
      const-val call_tmp[7444298]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444300 'move' call_tmp[7444298](7444302 'cast' int(64)[10] call_tmp[7443128]))
      (6277236 'move' tmp[6277189] call_tmp[7444298])
    }
    {
      const-val call_tmp[7447178]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7447180 'move' call_tmp[7447178](7447182 '-' coerce_tmp[5953789] 1))
      const-val call_tmp[7374615]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7374617 'move' call_tmp[7374615](7374619 '+' 0 call_tmp[7447178]))
      (6277269 'move' tmp[6277189] call_tmp[7374615])
    }
    const-val _ic__F1_high[9018324]:int(64)[10] "temp"
    (7457624 'move' _ic__F1_high[9018324] tmp[6277189])
    val i[6277306]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6277310 'move' i[6277306] 0)
    (6277370 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6277189] 1 0 tmp[6277189] 1)
    val coerce_tmp[6277480]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (6277482 'move' coerce_tmp[6277480](9195784 '.v' taskInd_this[5953810] errorsArray[85773]))
    CForLoop[6277377] hazard
    {
      ref call_tmp[7560788]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
      (7560790 'move' call_tmp[7560788](7560792 'array_get' coerce_tmp[6277480] i[6277306]))
      val coerce_tmp[6277494]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6277496 'move' coerce_tmp[6277494](6277499 call borrow[1817588] call_tmp[7560788]))
      val coerce_tmp[6277501]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6277503 'move' coerce_tmp[6277501](6277505 'cast' RootClass[236] coerce_tmp[6277494]))
      const-val call_tmp[7334229]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7334231 'move' call_tmp[7334229](7334233 '!=' coerce_tmp[6277501] nil[32]))
      if call_tmp[7334229]
      {
        val coerce_tmp[6277532]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6277534 'move' coerce_tmp[6277532](9195790 '.v' taskInd_this[5953810] errorsArray[85773]))
        ref call_tmp[7560798]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
        (7560800 'move' call_tmp[7560798](7560802 'array_get' coerce_tmp[6277532] i[6277306]))
        val coerce_tmp[8625775]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8625777 'move' coerce_tmp[8625775](8625779 '.v' call_tmp[7560798] chpl_p[1498153]))
        val coerce_tmp[8625782]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8625784 'move' coerce_tmp[8625782](8625786 'cast' RootClass[236] coerce_tmp[8625775]))
        const-val call_tmp[8625789]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8625791 'move' call_tmp[8625789](8625793 '==' coerce_tmp[8625782] nil[32]))
        if call_tmp[8625789]
        {
          (8625799 call nilCheckHalt[392] "argument to ! is nil")
        }
        val coerce_tmp[8625802]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8625804 'move' coerce_tmp[8625802](8625806 '.v' call_tmp[7560798] chpl_p[1498153]))
        val e[6277563]:Error[85511] "dead at end of block" "insert auto destroy"
        (6277565 'move' e[6277563] coerce_tmp[8625802])
        const-val tmp[6277571]:bool[19] "dead after last mention" "maybe param" "temp"
        (6277573 'move' tmp[6277571](6277576 call ==[28803] minMsg[86576] ""))
        val tmp[6277581]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[6277571]
        {
          (6277595 'move' tmp[6277581] 1)
        }
        {
          const-val call_tmp[6277601]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[6277603]:int(32)[66] "temp"
          (6277605 'move' _virtual_method_tmp_[6277603](6277607 'getcid' coerce_tmp[8625802]))
          val ret_tmp[6277609]:string[244] "temp"
          (6277611 'virtual method call' message[85497] _virtual_method_tmp_[6277603] coerce_tmp[8625802] ret_tmp[6277609])
          (6277616 'move' call_tmp[6277601] ret_tmp[6277609])
          val coerce_tmp[7427621]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7427623 'move' coerce_tmp[7427621](7427625 '.v' call_tmp[6277601] buff[21299]))
          const-val coerce_tmp[7427628]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7427630 'move' coerce_tmp[7427628](7427632 '.v' call_tmp[6277601] buffLen[21281]))
          const-val coerce_tmp[7427635]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7427637 'move' coerce_tmp[7427635](7427639 '.v' call_tmp[6277601] locale_id[21317]))
          val coerce_tmp[7427642]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7427644 'move' coerce_tmp[7427642](7427646 '.v' minMsg[86576] buff[21299]))
          const-val coerce_tmp[7427649]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7427651 'move' coerce_tmp[7427649](7427653 '.v' minMsg[86576] buffLen[21281]))
          const-val coerce_tmp[7427656]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7427658 'move' coerce_tmp[7427656](7427660 '.v' minMsg[86576] locale_id[21317]))
          val ret[7427663]:int(64)[10] "dead after last mention" "RVV" "temp"
          const-val call_tmp[7427665]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          (7427667 'move' call_tmp[7427665](7427670 call chpl_nodeID[305038]))
          const-val call_tmp[7427671]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7427673 'move' call_tmp[7427671](7427675 '==' coerce_tmp[7427635] call_tmp[7427665]))
          val tmp[7427678]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[7427671]
          {
            const-val call_tmp[7427682]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427684 'move' call_tmp[7427682](7427687 call chpl_nodeID[305038]))
            const-val call_tmp[7427688]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427690 'move' call_tmp[7427688](7427692 '==' coerce_tmp[7427656] call_tmp[7427682]))
            (7427695 'move' tmp[7427678] call_tmp[7427688])
          }
          {
            (7427699 'move' tmp[7427678] 0)
          }
          if tmp[7427678]
          {
            val ret[7427705]:int(64)[10] "dead after last mention" "RVV" "temp"
            val tmp[7427707]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[7427709]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            (7427711 'move' tmp[7427709](7427713 '<' coerce_tmp[7427628] coerce_tmp[7427649]))
            if tmp[7427709]
            {
              (7427718 'move' tmp[7427707] coerce_tmp[7427628])
            }
            {
              (7427722 'move' tmp[7427707] coerce_tmp[7427649])
            }
            const-val size[7427726]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            (7427728 'move' size[7427726] tmp[7427707])
            const-val call_tmp[7427731]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[7427733]:owned IllegalArgumentError?[1471812] "temp"
            (7427736 call chpl_checkValue[1471704] tmp[7427707] ret_tmp[7427733])
            (7427739 'move' call_tmp[7427731] ret_tmp[7427733])
            ref i_arg[7427744]:owned IllegalArgumentError?[1471812] "temp"
            (7427746 'move' i_arg[7427744](7427748 'set reference' call_tmp[7427731]))
            val call_tmp[7427750]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427752 'move' call_tmp[7427750](7427755 call borrow[1479886] i_arg[7427744]))
            val coerce_tmp[7427760]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7427762 'move' coerce_tmp[7427760](7427764 'cast' RootClass[236] call_tmp[7427750]))
            const-val call_tmp[7427767]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427769 'move' call_tmp[7427767](7427771 '!=' coerce_tmp[7427760] nil[32]))
            if call_tmp[7427767]
            {
              const-val call_tmp[7427776]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[7427778]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7427780 'move' coerce_tmp[7427778](7427782 'cast' Error[85511] call_tmp[7427750]))
              val _virtual_method_tmp_[7427785]:int(32)[66] "temp"
              (7427787 'move' _virtual_method_tmp_[7427785](7427789 'getcid' coerce_tmp[7427778]))
              val ret_tmp[7427791]:string[244] "temp"
              (7427793 'virtual method call' message[85497] _virtual_method_tmp_[7427785] coerce_tmp[7427778] ret_tmp[7427791])
              (7427798 'move' call_tmp[7427776] ret_tmp[7427791])
              (7427802 call safeCastCheckHalt[440] call_tmp[7427776])
              ref i_x[7427804]:string[244] "temp"
              (7427806 'move' i_x[7427804](7427808 'set reference' call_tmp[7427776]))
              (7427811 call deinit[21354] i_x[7427804])
            }
            (7427815 call chpl__autoDestroy[3929258] call_tmp[7427731])
            const-val call_tmp[7427817]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427819 'move' call_tmp[7427817](7427821 'cast' uint(64)[86] size[7427726]))
            val coerce_tmp[7427824]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7427826 'move' coerce_tmp[7427824](7427828 'cast' c_ptr(void)[1465614] coerce_tmp[7427621]))
            val coerce_tmp[7427831]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7427833 'move' coerce_tmp[7427831](7427835 'cast' c_ptr(void)[1465614] coerce_tmp[7427642]))
            const-val call_tmp[7427838]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427840 'move' call_tmp[7427838](7427843 call memcmp[12733] coerce_tmp[7427824] coerce_tmp[7427831] call_tmp[7427817]))
            const-val call_tmp[7427847]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[7427849]:owned IllegalArgumentError?[1471812] "temp"
            (7427852 call chpl_checkValue[1755328] call_tmp[7427838] ret_tmp[7427849])
            (7427855 'move' call_tmp[7427847] ret_tmp[7427849])
            ref i_arg[7427860]:owned IllegalArgumentError?[1471812] "temp"
            (7427862 'move' i_arg[7427860](7427864 'set reference' call_tmp[7427847]))
            val call_tmp[7427866]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427868 'move' call_tmp[7427866](7427871 call borrow[1479886] i_arg[7427860]))
            val coerce_tmp[7427876]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7427878 'move' coerce_tmp[7427876](7427880 'cast' RootClass[236] call_tmp[7427866]))
            const-val call_tmp[7427883]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427885 'move' call_tmp[7427883](7427887 '!=' coerce_tmp[7427876] nil[32]))
            if call_tmp[7427883]
            {
              const-val call_tmp[7427892]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[7427894]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7427896 'move' coerce_tmp[7427894](7427898 'cast' Error[85511] call_tmp[7427866]))
              val _virtual_method_tmp_[7427901]:int(32)[66] "temp"
              (7427903 'move' _virtual_method_tmp_[7427901](7427905 'getcid' coerce_tmp[7427894]))
              val ret_tmp[7427907]:string[244] "temp"
              (7427909 'virtual method call' message[85497] _virtual_method_tmp_[7427901] coerce_tmp[7427894] ret_tmp[7427907])
              (7427914 'move' call_tmp[7427892] ret_tmp[7427907])
              (7427918 call safeCastCheckHalt[440] call_tmp[7427892])
              ref i_x[7427920]:string[244] "temp"
              (7427922 'move' i_x[7427920](7427924 'set reference' call_tmp[7427892]))
              (7427927 call deinit[21354] i_x[7427920])
            }
            (7427931 call chpl__autoDestroy[3929258] call_tmp[7427847])
            const-val call_tmp[7427933]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427935 'move' call_tmp[7427933](7427937 'cast' int(64)[10] call_tmp[7427838]))
            const-val call_tmp[7427945]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427947 'move' call_tmp[7427945](7427949 '==' call_tmp[7427933] 0))
            if call_tmp[7427945]
            {
              const-val tmp[7427954]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (7427956 'move' tmp[7427954](7427958 '<' size[7427726] coerce_tmp[7427628]))
              if tmp[7427954]
              {
                (7427963 'move' ret[7427705] 1)
                gotoReturn _end__strcmp_local[7427988] _end__strcmp_local[7427988]
              }
              const-val tmp[7427969]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (7427971 'move' tmp[7427969](7427973 '<' size[7427726] coerce_tmp[7427649]))
              if tmp[7427969]
              {
                (7427978 'move' ret[7427705] -1)
                gotoReturn _end__strcmp_local[7427988] _end__strcmp_local[7427988]
              }
            }
            (7427985 '=' ret[7427705] call_tmp[7427933])
            label _end__strcmp_local[7427988]
            (7427990 'move' ret[7427663] ret[7427705])
            gotoReturn _end__strcmp[7429075] _end__strcmp[7429075]
          }
          {
            const-val call_tmp[7427996]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            (7427998 'move' call_tmp[7427996](7428001 call chpl_nodeID[305038]))
            const-val call_tmp[7428002]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7428004 'move' call_tmp[7428002](7428006 '!=' coerce_tmp[7427635] call_tmp[7427996]))
            val tmp[7428009]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[7428002]
            {
              const-val call_tmp[7428013]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428015 'move' call_tmp[7428013](7428018 call chpl_nodeID[305038]))
              const-val call_tmp[7428019]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428021 'move' call_tmp[7428019](7428023 '==' coerce_tmp[7427656] call_tmp[7428013]))
              (7428026 'move' tmp[7428009] call_tmp[7428019])
            }
            {
              (7428030 'move' tmp[7428009] 0)
            }
            if tmp[7428009]
            {
              val call_tmp[7428036]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[7428038]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7428040 'move' coerce_tmp[7428038](7428042 'cast' int(64)[10] coerce_tmp[7427635]))
              (7428045 'move' call_tmp[7428036](7428048 call bufferCopyRemote[30450] coerce_tmp[7428038] coerce_tmp[7427621] coerce_tmp[7427628]))
              val ret[7428057]:int(64)[10] "dead after last mention" "RVV" "temp"
              val tmp[7428059]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[7428061]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (7428063 'move' tmp[7428061](7428065 '<' coerce_tmp[7427628] coerce_tmp[7427649]))
              if tmp[7428061]
              {
                (7428070 'move' tmp[7428059] coerce_tmp[7427628])
              }
              {
                (7428074 'move' tmp[7428059] coerce_tmp[7427649])
              }
              const-val size[7428078]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (7428080 'move' size[7428078] tmp[7428059])
              const-val call_tmp[7428083]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[7428085]:owned IllegalArgumentError?[1471812] "temp"
              (7428088 call chpl_checkValue[1471704] tmp[7428059] ret_tmp[7428085])
              (7428091 'move' call_tmp[7428083] ret_tmp[7428085])
              ref i_arg[7428096]:owned IllegalArgumentError?[1471812] "temp"
              (7428098 'move' i_arg[7428096](7428100 'set reference' call_tmp[7428083]))
              val call_tmp[7428102]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428104 'move' call_tmp[7428102](7428107 call borrow[1479886] i_arg[7428096]))
              val coerce_tmp[7428112]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7428114 'move' coerce_tmp[7428112](7428116 'cast' RootClass[236] call_tmp[7428102]))
              const-val call_tmp[7428119]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428121 'move' call_tmp[7428119](7428123 '!=' coerce_tmp[7428112] nil[32]))
              if call_tmp[7428119]
              {
                const-val call_tmp[7428128]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val coerce_tmp[7428130]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428132 'move' coerce_tmp[7428130](7428134 'cast' Error[85511] call_tmp[7428102]))
                val _virtual_method_tmp_[7428137]:int(32)[66] "temp"
                (7428139 'move' _virtual_method_tmp_[7428137](7428141 'getcid' coerce_tmp[7428130]))
                val ret_tmp[7428143]:string[244] "temp"
                (7428145 'virtual method call' message[85497] _virtual_method_tmp_[7428137] coerce_tmp[7428130] ret_tmp[7428143])
                (7428150 'move' call_tmp[7428128] ret_tmp[7428143])
                (7428154 call safeCastCheckHalt[440] call_tmp[7428128])
                ref i_x[7428156]:string[244] "temp"
                (7428158 'move' i_x[7428156](7428160 'set reference' call_tmp[7428128]))
                (7428163 call deinit[21354] i_x[7428156])
              }
              (7428167 call chpl__autoDestroy[3929258] call_tmp[7428083])
              const-val call_tmp[7428169]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428171 'move' call_tmp[7428169](7428173 'cast' uint(64)[86] size[7428078]))
              val coerce_tmp[7428176]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7428178 'move' coerce_tmp[7428176](7428180 'cast' c_ptr(void)[1465614] call_tmp[7428036]))
              val coerce_tmp[7428183]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7428185 'move' coerce_tmp[7428183](7428187 'cast' c_ptr(void)[1465614] coerce_tmp[7427642]))
              const-val call_tmp[7428190]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428192 'move' call_tmp[7428190](7428195 call memcmp[12733] coerce_tmp[7428176] coerce_tmp[7428183] call_tmp[7428169]))
              const-val call_tmp[7428199]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[7428201]:owned IllegalArgumentError?[1471812] "temp"
              (7428204 call chpl_checkValue[1755328] call_tmp[7428190] ret_tmp[7428201])
              (7428207 'move' call_tmp[7428199] ret_tmp[7428201])
              ref i_arg[7428212]:owned IllegalArgumentError?[1471812] "temp"
              (7428214 'move' i_arg[7428212](7428216 'set reference' call_tmp[7428199]))
              val call_tmp[7428218]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428220 'move' call_tmp[7428218](7428223 call borrow[1479886] i_arg[7428212]))
              val coerce_tmp[7428228]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7428230 'move' coerce_tmp[7428228](7428232 'cast' RootClass[236] call_tmp[7428218]))
              const-val call_tmp[7428235]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428237 'move' call_tmp[7428235](7428239 '!=' coerce_tmp[7428228] nil[32]))
              if call_tmp[7428235]
              {
                const-val call_tmp[7428244]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val coerce_tmp[7428246]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428248 'move' coerce_tmp[7428246](7428250 'cast' Error[85511] call_tmp[7428218]))
                val _virtual_method_tmp_[7428253]:int(32)[66] "temp"
                (7428255 'move' _virtual_method_tmp_[7428253](7428257 'getcid' coerce_tmp[7428246]))
                val ret_tmp[7428259]:string[244] "temp"
                (7428261 'virtual method call' message[85497] _virtual_method_tmp_[7428253] coerce_tmp[7428246] ret_tmp[7428259])
                (7428266 'move' call_tmp[7428244] ret_tmp[7428259])
                (7428270 call safeCastCheckHalt[440] call_tmp[7428244])
                ref i_x[7428272]:string[244] "temp"
                (7428274 'move' i_x[7428272](7428276 'set reference' call_tmp[7428244]))
                (7428279 call deinit[21354] i_x[7428272])
              }
              (7428283 call chpl__autoDestroy[3929258] call_tmp[7428199])
              const-val call_tmp[7428285]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428287 'move' call_tmp[7428285](7428289 'cast' int(64)[10] call_tmp[7428190]))
              const-val call_tmp[7428297]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428299 'move' call_tmp[7428297](7428301 '==' call_tmp[7428285] 0))
              if call_tmp[7428297]
              {
                const-val tmp[7428306]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7428308 'move' tmp[7428306](7428310 '<' size[7428078] coerce_tmp[7427628]))
                if tmp[7428306]
                {
                  (7428315 'move' ret[7428057] 1)
                  gotoReturn _end__strcmp_local[7428340] _end__strcmp_local[7428340]
                }
                const-val tmp[7428321]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7428323 'move' tmp[7428321](7428325 '<' size[7428078] coerce_tmp[7427649]))
                if tmp[7428321]
                {
                  (7428330 'move' ret[7428057] -1)
                  gotoReturn _end__strcmp_local[7428340] _end__strcmp_local[7428340]
                }
              }
              (7428337 '=' ret[7428057] call_tmp[7428285])
              label _end__strcmp_local[7428340]
              val coerce_tmp[7428342]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7428344 'move' coerce_tmp[7428342](7428346 'cast' c_ptr(void)[1465614] call_tmp[7428036]))
              (7428350 call chpl_here_free[308686] coerce_tmp[7428342])
              (7428352 'move' ret[7427663] ret[7428057])
              gotoReturn _end__strcmp[7429075] _end__strcmp[7429075]
            }
            {
              const-val call_tmp[7428358]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428360 'move' call_tmp[7428358](7428363 call chpl_nodeID[305038]))
              const-val call_tmp[7428364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7428366 'move' call_tmp[7428364](7428368 '==' coerce_tmp[7427635] call_tmp[7428358]))
              val tmp[7428371]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[7428364]
              {
                const-val call_tmp[7428375]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428377 'move' call_tmp[7428375](7428380 call chpl_nodeID[305038]))
                const-val call_tmp[7428381]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428383 'move' call_tmp[7428381](7428385 '!=' coerce_tmp[7427656] call_tmp[7428375]))
                (7428388 'move' tmp[7428371] call_tmp[7428381])
              }
              {
                (7428392 'move' tmp[7428371] 0)
              }
              if tmp[7428371]
              {
                val call_tmp[7428398]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[7428400]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428402 'move' coerce_tmp[7428400](7428404 'cast' int(64)[10] coerce_tmp[7427656]))
                (7428407 'move' call_tmp[7428398](7428410 call bufferCopyRemote[30450] coerce_tmp[7428400] coerce_tmp[7427642] coerce_tmp[7427649]))
                val ret[7428419]:int(64)[10] "dead after last mention" "RVV" "temp"
                val tmp[7428421]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[7428423]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7428425 'move' tmp[7428423](7428427 '<' coerce_tmp[7427628] coerce_tmp[7427649]))
                if tmp[7428423]
                {
                  (7428432 'move' tmp[7428421] coerce_tmp[7427628])
                }
                {
                  (7428436 'move' tmp[7428421] coerce_tmp[7427649])
                }
                const-val size[7428440]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                (7428442 'move' size[7428440] tmp[7428421])
                const-val call_tmp[7428445]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7428447]:owned IllegalArgumentError?[1471812] "temp"
                (7428450 call chpl_checkValue[1471704] tmp[7428421] ret_tmp[7428447])
                (7428453 'move' call_tmp[7428445] ret_tmp[7428447])
                ref i_arg[7428458]:owned IllegalArgumentError?[1471812] "temp"
                (7428460 'move' i_arg[7428458](7428462 'set reference' call_tmp[7428445]))
                val call_tmp[7428464]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428466 'move' call_tmp[7428464](7428469 call borrow[1479886] i_arg[7428458]))
                val coerce_tmp[7428474]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428476 'move' coerce_tmp[7428474](7428478 'cast' RootClass[236] call_tmp[7428464]))
                const-val call_tmp[7428481]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428483 'move' call_tmp[7428481](7428485 '!=' coerce_tmp[7428474] nil[32]))
                if call_tmp[7428481]
                {
                  const-val call_tmp[7428490]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7428492]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7428494 'move' coerce_tmp[7428492](7428496 'cast' Error[85511] call_tmp[7428464]))
                  val _virtual_method_tmp_[7428499]:int(32)[66] "temp"
                  (7428501 'move' _virtual_method_tmp_[7428499](7428503 'getcid' coerce_tmp[7428492]))
                  val ret_tmp[7428505]:string[244] "temp"
                  (7428507 'virtual method call' message[85497] _virtual_method_tmp_[7428499] coerce_tmp[7428492] ret_tmp[7428505])
                  (7428512 'move' call_tmp[7428490] ret_tmp[7428505])
                  (7428516 call safeCastCheckHalt[440] call_tmp[7428490])
                  ref i_x[7428518]:string[244] "temp"
                  (7428520 'move' i_x[7428518](7428522 'set reference' call_tmp[7428490]))
                  (7428525 call deinit[21354] i_x[7428518])
                }
                (7428529 call chpl__autoDestroy[3929258] call_tmp[7428445])
                const-val call_tmp[7428531]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428533 'move' call_tmp[7428531](7428535 'cast' uint(64)[86] size[7428440]))
                val coerce_tmp[7428538]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428540 'move' coerce_tmp[7428538](7428542 'cast' c_ptr(void)[1465614] coerce_tmp[7427621]))
                val coerce_tmp[7428545]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428547 'move' coerce_tmp[7428545](7428549 'cast' c_ptr(void)[1465614] call_tmp[7428398]))
                const-val call_tmp[7428552]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428554 'move' call_tmp[7428552](7428557 call memcmp[12733] coerce_tmp[7428538] coerce_tmp[7428545] call_tmp[7428531]))
                const-val call_tmp[7428561]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7428563]:owned IllegalArgumentError?[1471812] "temp"
                (7428566 call chpl_checkValue[1755328] call_tmp[7428552] ret_tmp[7428563])
                (7428569 'move' call_tmp[7428561] ret_tmp[7428563])
                ref i_arg[7428574]:owned IllegalArgumentError?[1471812] "temp"
                (7428576 'move' i_arg[7428574](7428578 'set reference' call_tmp[7428561]))
                val call_tmp[7428580]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428582 'move' call_tmp[7428580](7428585 call borrow[1479886] i_arg[7428574]))
                val coerce_tmp[7428590]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428592 'move' coerce_tmp[7428590](7428594 'cast' RootClass[236] call_tmp[7428580]))
                const-val call_tmp[7428597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428599 'move' call_tmp[7428597](7428601 '!=' coerce_tmp[7428590] nil[32]))
                if call_tmp[7428597]
                {
                  const-val call_tmp[7428606]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7428608]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7428610 'move' coerce_tmp[7428608](7428612 'cast' Error[85511] call_tmp[7428580]))
                  val _virtual_method_tmp_[7428615]:int(32)[66] "temp"
                  (7428617 'move' _virtual_method_tmp_[7428615](7428619 'getcid' coerce_tmp[7428608]))
                  val ret_tmp[7428621]:string[244] "temp"
                  (7428623 'virtual method call' message[85497] _virtual_method_tmp_[7428615] coerce_tmp[7428608] ret_tmp[7428621])
                  (7428628 'move' call_tmp[7428606] ret_tmp[7428621])
                  (7428632 call safeCastCheckHalt[440] call_tmp[7428606])
                  ref i_x[7428634]:string[244] "temp"
                  (7428636 'move' i_x[7428634](7428638 'set reference' call_tmp[7428606]))
                  (7428641 call deinit[21354] i_x[7428634])
                }
                (7428645 call chpl__autoDestroy[3929258] call_tmp[7428561])
                const-val call_tmp[7428647]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428649 'move' call_tmp[7428647](7428651 'cast' int(64)[10] call_tmp[7428552]))
                const-val call_tmp[7428659]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428661 'move' call_tmp[7428659](7428663 '==' call_tmp[7428647] 0))
                if call_tmp[7428659]
                {
                  const-val tmp[7428668]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7428670 'move' tmp[7428668](7428672 '<' size[7428440] coerce_tmp[7427628]))
                  if tmp[7428668]
                  {
                    (7428677 'move' ret[7428419] 1)
                    gotoReturn _end__strcmp_local[7428702] _end__strcmp_local[7428702]
                  }
                  const-val tmp[7428683]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7428685 'move' tmp[7428683](7428687 '<' size[7428440] coerce_tmp[7427649]))
                  if tmp[7428683]
                  {
                    (7428692 'move' ret[7428419] -1)
                    gotoReturn _end__strcmp_local[7428702] _end__strcmp_local[7428702]
                  }
                }
                (7428699 '=' ret[7428419] call_tmp[7428647])
                label _end__strcmp_local[7428702]
                val coerce_tmp[7428704]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428706 'move' coerce_tmp[7428704](7428708 'cast' c_ptr(void)[1465614] call_tmp[7428398]))
                (7428712 call chpl_here_free[308686] coerce_tmp[7428704])
                (7428714 'move' ret[7427663] ret[7428419])
                gotoReturn _end__strcmp[7429075] _end__strcmp[7429075]
              }
              {
                val call_tmp[7428720]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[7428722]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428724 'move' coerce_tmp[7428722](7428726 'cast' int(64)[10] coerce_tmp[7427635]))
                (7428729 'move' call_tmp[7428720](7428732 call bufferCopyRemote[30450] coerce_tmp[7428722] coerce_tmp[7427621] coerce_tmp[7427628]))
                val call_tmp[7428741]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[7428743]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428745 'move' coerce_tmp[7428743](7428747 'cast' int(64)[10] coerce_tmp[7427656]))
                (7428750 'move' call_tmp[7428741](7428753 call bufferCopyRemote[30450] coerce_tmp[7428743] coerce_tmp[7427642] coerce_tmp[7427649]))
                val ret[7428762]:int(64)[10] "dead after last mention" "RVV" "temp"
                val tmp[7428764]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[7428766]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7428768 'move' tmp[7428766](7428770 '<' coerce_tmp[7427628] coerce_tmp[7427649]))
                if tmp[7428766]
                {
                  (7428775 'move' tmp[7428764] coerce_tmp[7427628])
                }
                {
                  (7428779 'move' tmp[7428764] coerce_tmp[7427649])
                }
                const-val size[7428783]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                (7428785 'move' size[7428783] tmp[7428764])
                const-val call_tmp[7428788]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7428790]:owned IllegalArgumentError?[1471812] "temp"
                (7428793 call chpl_checkValue[1471704] tmp[7428764] ret_tmp[7428790])
                (7428796 'move' call_tmp[7428788] ret_tmp[7428790])
                ref i_arg[7428801]:owned IllegalArgumentError?[1471812] "temp"
                (7428803 'move' i_arg[7428801](7428805 'set reference' call_tmp[7428788]))
                val call_tmp[7428807]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428809 'move' call_tmp[7428807](7428812 call borrow[1479886] i_arg[7428801]))
                val coerce_tmp[7428817]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428819 'move' coerce_tmp[7428817](7428821 'cast' RootClass[236] call_tmp[7428807]))
                const-val call_tmp[7428824]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428826 'move' call_tmp[7428824](7428828 '!=' coerce_tmp[7428817] nil[32]))
                if call_tmp[7428824]
                {
                  const-val call_tmp[7428833]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7428835]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7428837 'move' coerce_tmp[7428835](7428839 'cast' Error[85511] call_tmp[7428807]))
                  val _virtual_method_tmp_[7428842]:int(32)[66] "temp"
                  (7428844 'move' _virtual_method_tmp_[7428842](7428846 'getcid' coerce_tmp[7428835]))
                  val ret_tmp[7428848]:string[244] "temp"
                  (7428850 'virtual method call' message[85497] _virtual_method_tmp_[7428842] coerce_tmp[7428835] ret_tmp[7428848])
                  (7428855 'move' call_tmp[7428833] ret_tmp[7428848])
                  (7428859 call safeCastCheckHalt[440] call_tmp[7428833])
                  ref i_x[7428861]:string[244] "temp"
                  (7428863 'move' i_x[7428861](7428865 'set reference' call_tmp[7428833]))
                  (7428868 call deinit[21354] i_x[7428861])
                }
                (7428872 call chpl__autoDestroy[3929258] call_tmp[7428788])
                const-val call_tmp[7428874]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428876 'move' call_tmp[7428874](7428878 'cast' uint(64)[86] size[7428783]))
                val coerce_tmp[7428881]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428883 'move' coerce_tmp[7428881](7428885 'cast' c_ptr(void)[1465614] call_tmp[7428720]))
                val coerce_tmp[7428888]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428890 'move' coerce_tmp[7428888](7428892 'cast' c_ptr(void)[1465614] call_tmp[7428741]))
                const-val call_tmp[7428895]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428897 'move' call_tmp[7428895](7428900 call memcmp[12733] coerce_tmp[7428881] coerce_tmp[7428888] call_tmp[7428874]))
                const-val call_tmp[7428904]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7428906]:owned IllegalArgumentError?[1471812] "temp"
                (7428909 call chpl_checkValue[1755328] call_tmp[7428895] ret_tmp[7428906])
                (7428912 'move' call_tmp[7428904] ret_tmp[7428906])
                ref i_arg[7428917]:owned IllegalArgumentError?[1471812] "temp"
                (7428919 'move' i_arg[7428917](7428921 'set reference' call_tmp[7428904]))
                val call_tmp[7428923]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428925 'move' call_tmp[7428923](7428928 call borrow[1479886] i_arg[7428917]))
                val coerce_tmp[7428933]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7428935 'move' coerce_tmp[7428933](7428937 'cast' RootClass[236] call_tmp[7428923]))
                const-val call_tmp[7428940]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428942 'move' call_tmp[7428940](7428944 '!=' coerce_tmp[7428933] nil[32]))
                if call_tmp[7428940]
                {
                  const-val call_tmp[7428949]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7428951]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7428953 'move' coerce_tmp[7428951](7428955 'cast' Error[85511] call_tmp[7428923]))
                  val _virtual_method_tmp_[7428958]:int(32)[66] "temp"
                  (7428960 'move' _virtual_method_tmp_[7428958](7428962 'getcid' coerce_tmp[7428951]))
                  val ret_tmp[7428964]:string[244] "temp"
                  (7428966 'virtual method call' message[85497] _virtual_method_tmp_[7428958] coerce_tmp[7428951] ret_tmp[7428964])
                  (7428971 'move' call_tmp[7428949] ret_tmp[7428964])
                  (7428975 call safeCastCheckHalt[440] call_tmp[7428949])
                  ref i_x[7428977]:string[244] "temp"
                  (7428979 'move' i_x[7428977](7428981 'set reference' call_tmp[7428949]))
                  (7428984 call deinit[21354] i_x[7428977])
                }
                (7428988 call chpl__autoDestroy[3929258] call_tmp[7428904])
                const-val call_tmp[7428990]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (7428992 'move' call_tmp[7428990](7428994 'cast' int(64)[10] call_tmp[7428895]))
                const-val call_tmp[7429002]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7429004 'move' call_tmp[7429002](7429006 '==' call_tmp[7428990] 0))
                if call_tmp[7429002]
                {
                  const-val tmp[7429011]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7429013 'move' tmp[7429011](7429015 '<' size[7428783] coerce_tmp[7427628]))
                  if tmp[7429011]
                  {
                    (7429020 'move' ret[7428762] 1)
                    gotoReturn _end__strcmp_local[7429045] _end__strcmp_local[7429045]
                  }
                  const-val tmp[7429026]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7429028 'move' tmp[7429026](7429030 '<' size[7428783] coerce_tmp[7427649]))
                  if tmp[7429026]
                  {
                    (7429035 'move' ret[7428762] -1)
                    gotoReturn _end__strcmp_local[7429045] _end__strcmp_local[7429045]
                  }
                }
                (7429042 '=' ret[7428762] call_tmp[7428990])
                label _end__strcmp_local[7429045]
                val coerce_tmp[7429047]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7429049 'move' coerce_tmp[7429047](7429051 'cast' c_ptr(void)[1465614] call_tmp[7428720]))
                (7429055 call chpl_here_free[308686] coerce_tmp[7429047])
                val coerce_tmp[7429057]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7429059 'move' coerce_tmp[7429057](7429061 'cast' c_ptr(void)[1465614] call_tmp[7428741]))
                (7429065 call chpl_here_free[308686] coerce_tmp[7429057])
                (7429067 'move' ret[7427663] ret[7428762])
                gotoReturn _end__strcmp[7429075] _end__strcmp[7429075]
              }
            }
          }
          label _end__strcmp[7429075]
          const-val tmp[7429077]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7429079 'move' tmp[7429077](7429081 '<' ret[7427663] 0))
          (6277630 'move' tmp[6277581] tmp[7429077])
          ref i_x[7346434]:string[244] "temp"
          (7346438 'move' i_x[7346434](7346436 'set reference' call_tmp[6277601]))
          (7346442 call deinit[21354] i_x[7346434])
        }
        if tmp[6277581]
        {
          const-val call_tmp[6277644]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[6277646]:int(32)[66] "temp"
          (6277648 'move' _virtual_method_tmp_[6277646](6277650 'getcid' e[6277563]))
          val ret_tmp[6277652]:string[244] "temp"
          (6277654 'virtual method call' message[85497] _virtual_method_tmp_[6277646] e[6277563] ret_tmp[6277652])
          (6277659 'move' call_tmp[6277644] ret_tmp[6277652])
          (6277663 call =[28046] minMsg[86576] call_tmp[6277644])
          ref i_x[7346446]:string[244] "temp"
          (7346450 'move' i_x[7346446](7346448 'set reference' call_tmp[6277644]))
          (7346454 call deinit[21354] i_x[7346446])
        }
        const-val tmp[6277670]:bool[19] "dead after last mention" "maybe param" "temp"
        (6277672 'move' tmp[6277670](6277675 call ==[28803] maxMsg[86581] ""))
        val tmp[6277680]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[6277670]
        {
          (6277694 'move' tmp[6277680] 1)
        }
        {
          const-val call_tmp[6277700]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[6277702]:int(32)[66] "temp"
          (6277704 'move' _virtual_method_tmp_[6277702](6277706 'getcid' e[6277563]))
          val ret_tmp[6277708]:string[244] "temp"
          (6277710 'virtual method call' message[85497] _virtual_method_tmp_[6277702] e[6277563] ret_tmp[6277708])
          (6277715 'move' call_tmp[6277700] ret_tmp[6277708])
          val coerce_tmp[7430607]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7430609 'move' coerce_tmp[7430607](7430611 '.v' call_tmp[6277700] buff[21299]))
          const-val coerce_tmp[7430614]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7430616 'move' coerce_tmp[7430614](7430618 '.v' call_tmp[6277700] buffLen[21281]))
          const-val coerce_tmp[7430621]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7430623 'move' coerce_tmp[7430621](7430625 '.v' call_tmp[6277700] locale_id[21317]))
          val coerce_tmp[7430628]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7430630 'move' coerce_tmp[7430628](7430632 '.v' maxMsg[86581] buff[21299]))
          const-val coerce_tmp[7430635]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7430637 'move' coerce_tmp[7430635](7430639 '.v' maxMsg[86581] buffLen[21281]))
          const-val coerce_tmp[7430642]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7430644 'move' coerce_tmp[7430642](7430646 '.v' maxMsg[86581] locale_id[21317]))
          val ret[7430649]:int(64)[10] "dead after last mention" "RVV" "temp"
          const-val call_tmp[7430651]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          (7430653 'move' call_tmp[7430651](7430656 call chpl_nodeID[305038]))
          const-val call_tmp[7430657]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7430659 'move' call_tmp[7430657](7430661 '==' coerce_tmp[7430621] call_tmp[7430651]))
          val tmp[7430664]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[7430657]
          {
            const-val call_tmp[7430668]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430670 'move' call_tmp[7430668](7430673 call chpl_nodeID[305038]))
            const-val call_tmp[7430674]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430676 'move' call_tmp[7430674](7430678 '==' coerce_tmp[7430642] call_tmp[7430668]))
            (7430681 'move' tmp[7430664] call_tmp[7430674])
          }
          {
            (7430685 'move' tmp[7430664] 0)
          }
          if tmp[7430664]
          {
            val ret[7430691]:int(64)[10] "dead after last mention" "RVV" "temp"
            val tmp[7430693]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[7430695]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            (7430697 'move' tmp[7430695](7430699 '<' coerce_tmp[7430614] coerce_tmp[7430635]))
            if tmp[7430695]
            {
              (7430704 'move' tmp[7430693] coerce_tmp[7430614])
            }
            {
              (7430708 'move' tmp[7430693] coerce_tmp[7430635])
            }
            const-val size[7430712]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            (7430714 'move' size[7430712] tmp[7430693])
            const-val call_tmp[7430717]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[7430719]:owned IllegalArgumentError?[1471812] "temp"
            (7430722 call chpl_checkValue[1471704] tmp[7430693] ret_tmp[7430719])
            (7430725 'move' call_tmp[7430717] ret_tmp[7430719])
            ref i_arg[7430730]:owned IllegalArgumentError?[1471812] "temp"
            (7430732 'move' i_arg[7430730](7430734 'set reference' call_tmp[7430717]))
            val call_tmp[7430736]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430738 'move' call_tmp[7430736](7430741 call borrow[1479886] i_arg[7430730]))
            val coerce_tmp[7430746]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7430748 'move' coerce_tmp[7430746](7430750 'cast' RootClass[236] call_tmp[7430736]))
            const-val call_tmp[7430753]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430755 'move' call_tmp[7430753](7430757 '!=' coerce_tmp[7430746] nil[32]))
            if call_tmp[7430753]
            {
              const-val call_tmp[7430762]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[7430764]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7430766 'move' coerce_tmp[7430764](7430768 'cast' Error[85511] call_tmp[7430736]))
              val _virtual_method_tmp_[7430771]:int(32)[66] "temp"
              (7430773 'move' _virtual_method_tmp_[7430771](7430775 'getcid' coerce_tmp[7430764]))
              val ret_tmp[7430777]:string[244] "temp"
              (7430779 'virtual method call' message[85497] _virtual_method_tmp_[7430771] coerce_tmp[7430764] ret_tmp[7430777])
              (7430784 'move' call_tmp[7430762] ret_tmp[7430777])
              (7430788 call safeCastCheckHalt[440] call_tmp[7430762])
              ref i_x[7430790]:string[244] "temp"
              (7430792 'move' i_x[7430790](7430794 'set reference' call_tmp[7430762]))
              (7430797 call deinit[21354] i_x[7430790])
            }
            (7430801 call chpl__autoDestroy[3929258] call_tmp[7430717])
            const-val call_tmp[7430803]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430805 'move' call_tmp[7430803](7430807 'cast' uint(64)[86] size[7430712]))
            val coerce_tmp[7430810]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7430812 'move' coerce_tmp[7430810](7430814 'cast' c_ptr(void)[1465614] coerce_tmp[7430607]))
            val coerce_tmp[7430817]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7430819 'move' coerce_tmp[7430817](7430821 'cast' c_ptr(void)[1465614] coerce_tmp[7430628]))
            const-val call_tmp[7430824]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430826 'move' call_tmp[7430824](7430829 call memcmp[12733] coerce_tmp[7430810] coerce_tmp[7430817] call_tmp[7430803]))
            const-val call_tmp[7430833]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[7430835]:owned IllegalArgumentError?[1471812] "temp"
            (7430838 call chpl_checkValue[1755328] call_tmp[7430824] ret_tmp[7430835])
            (7430841 'move' call_tmp[7430833] ret_tmp[7430835])
            ref i_arg[7430846]:owned IllegalArgumentError?[1471812] "temp"
            (7430848 'move' i_arg[7430846](7430850 'set reference' call_tmp[7430833]))
            val call_tmp[7430852]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430854 'move' call_tmp[7430852](7430857 call borrow[1479886] i_arg[7430846]))
            val coerce_tmp[7430862]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7430864 'move' coerce_tmp[7430862](7430866 'cast' RootClass[236] call_tmp[7430852]))
            const-val call_tmp[7430869]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430871 'move' call_tmp[7430869](7430873 '!=' coerce_tmp[7430862] nil[32]))
            if call_tmp[7430869]
            {
              const-val call_tmp[7430878]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[7430880]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7430882 'move' coerce_tmp[7430880](7430884 'cast' Error[85511] call_tmp[7430852]))
              val _virtual_method_tmp_[7430887]:int(32)[66] "temp"
              (7430889 'move' _virtual_method_tmp_[7430887](7430891 'getcid' coerce_tmp[7430880]))
              val ret_tmp[7430893]:string[244] "temp"
              (7430895 'virtual method call' message[85497] _virtual_method_tmp_[7430887] coerce_tmp[7430880] ret_tmp[7430893])
              (7430900 'move' call_tmp[7430878] ret_tmp[7430893])
              (7430904 call safeCastCheckHalt[440] call_tmp[7430878])
              ref i_x[7430906]:string[244] "temp"
              (7430908 'move' i_x[7430906](7430910 'set reference' call_tmp[7430878]))
              (7430913 call deinit[21354] i_x[7430906])
            }
            (7430917 call chpl__autoDestroy[3929258] call_tmp[7430833])
            const-val call_tmp[7430919]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430921 'move' call_tmp[7430919](7430923 'cast' int(64)[10] call_tmp[7430824]))
            const-val call_tmp[7430931]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430933 'move' call_tmp[7430931](7430935 '==' call_tmp[7430919] 0))
            if call_tmp[7430931]
            {
              const-val tmp[7430940]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (7430942 'move' tmp[7430940](7430944 '<' size[7430712] coerce_tmp[7430614]))
              if tmp[7430940]
              {
                (7430949 'move' ret[7430691] 1)
                gotoReturn _end__strcmp_local[7430974] _end__strcmp_local[7430974]
              }
              const-val tmp[7430955]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (7430957 'move' tmp[7430955](7430959 '<' size[7430712] coerce_tmp[7430635]))
              if tmp[7430955]
              {
                (7430964 'move' ret[7430691] -1)
                gotoReturn _end__strcmp_local[7430974] _end__strcmp_local[7430974]
              }
            }
            (7430971 '=' ret[7430691] call_tmp[7430919])
            label _end__strcmp_local[7430974]
            (7430976 'move' ret[7430649] ret[7430691])
            gotoReturn _end__strcmp[7432061] _end__strcmp[7432061]
          }
          {
            const-val call_tmp[7430982]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430984 'move' call_tmp[7430982](7430987 call chpl_nodeID[305038]))
            const-val call_tmp[7430988]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7430990 'move' call_tmp[7430988](7430992 '!=' coerce_tmp[7430621] call_tmp[7430982]))
            val tmp[7430995]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[7430988]
            {
              const-val call_tmp[7430999]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431001 'move' call_tmp[7430999](7431004 call chpl_nodeID[305038]))
              const-val call_tmp[7431005]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431007 'move' call_tmp[7431005](7431009 '==' coerce_tmp[7430642] call_tmp[7430999]))
              (7431012 'move' tmp[7430995] call_tmp[7431005])
            }
            {
              (7431016 'move' tmp[7430995] 0)
            }
            if tmp[7430995]
            {
              val call_tmp[7431022]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[7431024]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7431026 'move' coerce_tmp[7431024](7431028 'cast' int(64)[10] coerce_tmp[7430621]))
              (7431031 'move' call_tmp[7431022](7431034 call bufferCopyRemote[30450] coerce_tmp[7431024] coerce_tmp[7430607] coerce_tmp[7430614]))
              val ret[7431043]:int(64)[10] "dead after last mention" "RVV" "temp"
              val tmp[7431045]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[7431047]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              (7431049 'move' tmp[7431047](7431051 '<' coerce_tmp[7430614] coerce_tmp[7430635]))
              if tmp[7431047]
              {
                (7431056 'move' tmp[7431045] coerce_tmp[7430614])
              }
              {
                (7431060 'move' tmp[7431045] coerce_tmp[7430635])
              }
              const-val size[7431064]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (7431066 'move' size[7431064] tmp[7431045])
              const-val call_tmp[7431069]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[7431071]:owned IllegalArgumentError?[1471812] "temp"
              (7431074 call chpl_checkValue[1471704] tmp[7431045] ret_tmp[7431071])
              (7431077 'move' call_tmp[7431069] ret_tmp[7431071])
              ref i_arg[7431082]:owned IllegalArgumentError?[1471812] "temp"
              (7431084 'move' i_arg[7431082](7431086 'set reference' call_tmp[7431069]))
              val call_tmp[7431088]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431090 'move' call_tmp[7431088](7431093 call borrow[1479886] i_arg[7431082]))
              val coerce_tmp[7431098]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7431100 'move' coerce_tmp[7431098](7431102 'cast' RootClass[236] call_tmp[7431088]))
              const-val call_tmp[7431105]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431107 'move' call_tmp[7431105](7431109 '!=' coerce_tmp[7431098] nil[32]))
              if call_tmp[7431105]
              {
                const-val call_tmp[7431114]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val coerce_tmp[7431116]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431118 'move' coerce_tmp[7431116](7431120 'cast' Error[85511] call_tmp[7431088]))
                val _virtual_method_tmp_[7431123]:int(32)[66] "temp"
                (7431125 'move' _virtual_method_tmp_[7431123](7431127 'getcid' coerce_tmp[7431116]))
                val ret_tmp[7431129]:string[244] "temp"
                (7431131 'virtual method call' message[85497] _virtual_method_tmp_[7431123] coerce_tmp[7431116] ret_tmp[7431129])
                (7431136 'move' call_tmp[7431114] ret_tmp[7431129])
                (7431140 call safeCastCheckHalt[440] call_tmp[7431114])
                ref i_x[7431142]:string[244] "temp"
                (7431144 'move' i_x[7431142](7431146 'set reference' call_tmp[7431114]))
                (7431149 call deinit[21354] i_x[7431142])
              }
              (7431153 call chpl__autoDestroy[3929258] call_tmp[7431069])
              const-val call_tmp[7431155]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431157 'move' call_tmp[7431155](7431159 'cast' uint(64)[86] size[7431064]))
              val coerce_tmp[7431162]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7431164 'move' coerce_tmp[7431162](7431166 'cast' c_ptr(void)[1465614] call_tmp[7431022]))
              val coerce_tmp[7431169]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7431171 'move' coerce_tmp[7431169](7431173 'cast' c_ptr(void)[1465614] coerce_tmp[7430628]))
              const-val call_tmp[7431176]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431178 'move' call_tmp[7431176](7431181 call memcmp[12733] coerce_tmp[7431162] coerce_tmp[7431169] call_tmp[7431155]))
              const-val call_tmp[7431185]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[7431187]:owned IllegalArgumentError?[1471812] "temp"
              (7431190 call chpl_checkValue[1755328] call_tmp[7431176] ret_tmp[7431187])
              (7431193 'move' call_tmp[7431185] ret_tmp[7431187])
              ref i_arg[7431198]:owned IllegalArgumentError?[1471812] "temp"
              (7431200 'move' i_arg[7431198](7431202 'set reference' call_tmp[7431185]))
              val call_tmp[7431204]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431206 'move' call_tmp[7431204](7431209 call borrow[1479886] i_arg[7431198]))
              val coerce_tmp[7431214]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7431216 'move' coerce_tmp[7431214](7431218 'cast' RootClass[236] call_tmp[7431204]))
              const-val call_tmp[7431221]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431223 'move' call_tmp[7431221](7431225 '!=' coerce_tmp[7431214] nil[32]))
              if call_tmp[7431221]
              {
                const-val call_tmp[7431230]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val coerce_tmp[7431232]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431234 'move' coerce_tmp[7431232](7431236 'cast' Error[85511] call_tmp[7431204]))
                val _virtual_method_tmp_[7431239]:int(32)[66] "temp"
                (7431241 'move' _virtual_method_tmp_[7431239](7431243 'getcid' coerce_tmp[7431232]))
                val ret_tmp[7431245]:string[244] "temp"
                (7431247 'virtual method call' message[85497] _virtual_method_tmp_[7431239] coerce_tmp[7431232] ret_tmp[7431245])
                (7431252 'move' call_tmp[7431230] ret_tmp[7431245])
                (7431256 call safeCastCheckHalt[440] call_tmp[7431230])
                ref i_x[7431258]:string[244] "temp"
                (7431260 'move' i_x[7431258](7431262 'set reference' call_tmp[7431230]))
                (7431265 call deinit[21354] i_x[7431258])
              }
              (7431269 call chpl__autoDestroy[3929258] call_tmp[7431185])
              const-val call_tmp[7431271]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431273 'move' call_tmp[7431271](7431275 'cast' int(64)[10] call_tmp[7431176]))
              const-val call_tmp[7431283]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431285 'move' call_tmp[7431283](7431287 '==' call_tmp[7431271] 0))
              if call_tmp[7431283]
              {
                const-val tmp[7431292]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7431294 'move' tmp[7431292](7431296 '<' size[7431064] coerce_tmp[7430614]))
                if tmp[7431292]
                {
                  (7431301 'move' ret[7431043] 1)
                  gotoReturn _end__strcmp_local[7431326] _end__strcmp_local[7431326]
                }
                const-val tmp[7431307]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7431309 'move' tmp[7431307](7431311 '<' size[7431064] coerce_tmp[7430635]))
                if tmp[7431307]
                {
                  (7431316 'move' ret[7431043] -1)
                  gotoReturn _end__strcmp_local[7431326] _end__strcmp_local[7431326]
                }
              }
              (7431323 '=' ret[7431043] call_tmp[7431271])
              label _end__strcmp_local[7431326]
              val coerce_tmp[7431328]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (7431330 'move' coerce_tmp[7431328](7431332 'cast' c_ptr(void)[1465614] call_tmp[7431022]))
              (7431336 call chpl_here_free[308686] coerce_tmp[7431328])
              (7431338 'move' ret[7430649] ret[7431043])
              gotoReturn _end__strcmp[7432061] _end__strcmp[7432061]
            }
            {
              const-val call_tmp[7431344]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431346 'move' call_tmp[7431344](7431349 call chpl_nodeID[305038]))
              const-val call_tmp[7431350]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7431352 'move' call_tmp[7431350](7431354 '==' coerce_tmp[7430621] call_tmp[7431344]))
              val tmp[7431357]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[7431350]
              {
                const-val call_tmp[7431361]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431363 'move' call_tmp[7431361](7431366 call chpl_nodeID[305038]))
                const-val call_tmp[7431367]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431369 'move' call_tmp[7431367](7431371 '!=' coerce_tmp[7430642] call_tmp[7431361]))
                (7431374 'move' tmp[7431357] call_tmp[7431367])
              }
              {
                (7431378 'move' tmp[7431357] 0)
              }
              if tmp[7431357]
              {
                val call_tmp[7431384]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[7431386]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431388 'move' coerce_tmp[7431386](7431390 'cast' int(64)[10] coerce_tmp[7430642]))
                (7431393 'move' call_tmp[7431384](7431396 call bufferCopyRemote[30450] coerce_tmp[7431386] coerce_tmp[7430628] coerce_tmp[7430635]))
                val ret[7431405]:int(64)[10] "dead after last mention" "RVV" "temp"
                val tmp[7431407]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[7431409]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7431411 'move' tmp[7431409](7431413 '<' coerce_tmp[7430614] coerce_tmp[7430635]))
                if tmp[7431409]
                {
                  (7431418 'move' tmp[7431407] coerce_tmp[7430614])
                }
                {
                  (7431422 'move' tmp[7431407] coerce_tmp[7430635])
                }
                const-val size[7431426]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                (7431428 'move' size[7431426] tmp[7431407])
                const-val call_tmp[7431431]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7431433]:owned IllegalArgumentError?[1471812] "temp"
                (7431436 call chpl_checkValue[1471704] tmp[7431407] ret_tmp[7431433])
                (7431439 'move' call_tmp[7431431] ret_tmp[7431433])
                ref i_arg[7431444]:owned IllegalArgumentError?[1471812] "temp"
                (7431446 'move' i_arg[7431444](7431448 'set reference' call_tmp[7431431]))
                val call_tmp[7431450]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431452 'move' call_tmp[7431450](7431455 call borrow[1479886] i_arg[7431444]))
                val coerce_tmp[7431460]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431462 'move' coerce_tmp[7431460](7431464 'cast' RootClass[236] call_tmp[7431450]))
                const-val call_tmp[7431467]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431469 'move' call_tmp[7431467](7431471 '!=' coerce_tmp[7431460] nil[32]))
                if call_tmp[7431467]
                {
                  const-val call_tmp[7431476]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7431478]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7431480 'move' coerce_tmp[7431478](7431482 'cast' Error[85511] call_tmp[7431450]))
                  val _virtual_method_tmp_[7431485]:int(32)[66] "temp"
                  (7431487 'move' _virtual_method_tmp_[7431485](7431489 'getcid' coerce_tmp[7431478]))
                  val ret_tmp[7431491]:string[244] "temp"
                  (7431493 'virtual method call' message[85497] _virtual_method_tmp_[7431485] coerce_tmp[7431478] ret_tmp[7431491])
                  (7431498 'move' call_tmp[7431476] ret_tmp[7431491])
                  (7431502 call safeCastCheckHalt[440] call_tmp[7431476])
                  ref i_x[7431504]:string[244] "temp"
                  (7431506 'move' i_x[7431504](7431508 'set reference' call_tmp[7431476]))
                  (7431511 call deinit[21354] i_x[7431504])
                }
                (7431515 call chpl__autoDestroy[3929258] call_tmp[7431431])
                const-val call_tmp[7431517]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431519 'move' call_tmp[7431517](7431521 'cast' uint(64)[86] size[7431426]))
                val coerce_tmp[7431524]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431526 'move' coerce_tmp[7431524](7431528 'cast' c_ptr(void)[1465614] coerce_tmp[7430607]))
                val coerce_tmp[7431531]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431533 'move' coerce_tmp[7431531](7431535 'cast' c_ptr(void)[1465614] call_tmp[7431384]))
                const-val call_tmp[7431538]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431540 'move' call_tmp[7431538](7431543 call memcmp[12733] coerce_tmp[7431524] coerce_tmp[7431531] call_tmp[7431517]))
                const-val call_tmp[7431547]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7431549]:owned IllegalArgumentError?[1471812] "temp"
                (7431552 call chpl_checkValue[1755328] call_tmp[7431538] ret_tmp[7431549])
                (7431555 'move' call_tmp[7431547] ret_tmp[7431549])
                ref i_arg[7431560]:owned IllegalArgumentError?[1471812] "temp"
                (7431562 'move' i_arg[7431560](7431564 'set reference' call_tmp[7431547]))
                val call_tmp[7431566]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431568 'move' call_tmp[7431566](7431571 call borrow[1479886] i_arg[7431560]))
                val coerce_tmp[7431576]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431578 'move' coerce_tmp[7431576](7431580 'cast' RootClass[236] call_tmp[7431566]))
                const-val call_tmp[7431583]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431585 'move' call_tmp[7431583](7431587 '!=' coerce_tmp[7431576] nil[32]))
                if call_tmp[7431583]
                {
                  const-val call_tmp[7431592]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7431594]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7431596 'move' coerce_tmp[7431594](7431598 'cast' Error[85511] call_tmp[7431566]))
                  val _virtual_method_tmp_[7431601]:int(32)[66] "temp"
                  (7431603 'move' _virtual_method_tmp_[7431601](7431605 'getcid' coerce_tmp[7431594]))
                  val ret_tmp[7431607]:string[244] "temp"
                  (7431609 'virtual method call' message[85497] _virtual_method_tmp_[7431601] coerce_tmp[7431594] ret_tmp[7431607])
                  (7431614 'move' call_tmp[7431592] ret_tmp[7431607])
                  (7431618 call safeCastCheckHalt[440] call_tmp[7431592])
                  ref i_x[7431620]:string[244] "temp"
                  (7431622 'move' i_x[7431620](7431624 'set reference' call_tmp[7431592]))
                  (7431627 call deinit[21354] i_x[7431620])
                }
                (7431631 call chpl__autoDestroy[3929258] call_tmp[7431547])
                const-val call_tmp[7431633]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431635 'move' call_tmp[7431633](7431637 'cast' int(64)[10] call_tmp[7431538]))
                const-val call_tmp[7431645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431647 'move' call_tmp[7431645](7431649 '==' call_tmp[7431633] 0))
                if call_tmp[7431645]
                {
                  const-val tmp[7431654]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7431656 'move' tmp[7431654](7431658 '<' size[7431426] coerce_tmp[7430614]))
                  if tmp[7431654]
                  {
                    (7431663 'move' ret[7431405] 1)
                    gotoReturn _end__strcmp_local[7431688] _end__strcmp_local[7431688]
                  }
                  const-val tmp[7431669]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7431671 'move' tmp[7431669](7431673 '<' size[7431426] coerce_tmp[7430635]))
                  if tmp[7431669]
                  {
                    (7431678 'move' ret[7431405] -1)
                    gotoReturn _end__strcmp_local[7431688] _end__strcmp_local[7431688]
                  }
                }
                (7431685 '=' ret[7431405] call_tmp[7431633])
                label _end__strcmp_local[7431688]
                val coerce_tmp[7431690]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431692 'move' coerce_tmp[7431690](7431694 'cast' c_ptr(void)[1465614] call_tmp[7431384]))
                (7431698 call chpl_here_free[308686] coerce_tmp[7431690])
                (7431700 'move' ret[7430649] ret[7431405])
                gotoReturn _end__strcmp[7432061] _end__strcmp[7432061]
              }
              {
                val call_tmp[7431706]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[7431708]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431710 'move' coerce_tmp[7431708](7431712 'cast' int(64)[10] coerce_tmp[7430621]))
                (7431715 'move' call_tmp[7431706](7431718 call bufferCopyRemote[30450] coerce_tmp[7431708] coerce_tmp[7430607] coerce_tmp[7430614]))
                val call_tmp[7431727]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[7431729]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431731 'move' coerce_tmp[7431729](7431733 'cast' int(64)[10] coerce_tmp[7430642]))
                (7431736 'move' call_tmp[7431727](7431739 call bufferCopyRemote[30450] coerce_tmp[7431729] coerce_tmp[7430628] coerce_tmp[7430635]))
                val ret[7431748]:int(64)[10] "dead after last mention" "RVV" "temp"
                val tmp[7431750]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[7431752]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                (7431754 'move' tmp[7431752](7431756 '<' coerce_tmp[7430614] coerce_tmp[7430635]))
                if tmp[7431752]
                {
                  (7431761 'move' tmp[7431750] coerce_tmp[7430614])
                }
                {
                  (7431765 'move' tmp[7431750] coerce_tmp[7430635])
                }
                const-val size[7431769]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                (7431771 'move' size[7431769] tmp[7431750])
                const-val call_tmp[7431774]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7431776]:owned IllegalArgumentError?[1471812] "temp"
                (7431779 call chpl_checkValue[1471704] tmp[7431750] ret_tmp[7431776])
                (7431782 'move' call_tmp[7431774] ret_tmp[7431776])
                ref i_arg[7431787]:owned IllegalArgumentError?[1471812] "temp"
                (7431789 'move' i_arg[7431787](7431791 'set reference' call_tmp[7431774]))
                val call_tmp[7431793]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431795 'move' call_tmp[7431793](7431798 call borrow[1479886] i_arg[7431787]))
                val coerce_tmp[7431803]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431805 'move' coerce_tmp[7431803](7431807 'cast' RootClass[236] call_tmp[7431793]))
                const-val call_tmp[7431810]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431812 'move' call_tmp[7431810](7431814 '!=' coerce_tmp[7431803] nil[32]))
                if call_tmp[7431810]
                {
                  const-val call_tmp[7431819]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7431821]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7431823 'move' coerce_tmp[7431821](7431825 'cast' Error[85511] call_tmp[7431793]))
                  val _virtual_method_tmp_[7431828]:int(32)[66] "temp"
                  (7431830 'move' _virtual_method_tmp_[7431828](7431832 'getcid' coerce_tmp[7431821]))
                  val ret_tmp[7431834]:string[244] "temp"
                  (7431836 'virtual method call' message[85497] _virtual_method_tmp_[7431828] coerce_tmp[7431821] ret_tmp[7431834])
                  (7431841 'move' call_tmp[7431819] ret_tmp[7431834])
                  (7431845 call safeCastCheckHalt[440] call_tmp[7431819])
                  ref i_x[7431847]:string[244] "temp"
                  (7431849 'move' i_x[7431847](7431851 'set reference' call_tmp[7431819]))
                  (7431854 call deinit[21354] i_x[7431847])
                }
                (7431858 call chpl__autoDestroy[3929258] call_tmp[7431774])
                const-val call_tmp[7431860]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431862 'move' call_tmp[7431860](7431864 'cast' uint(64)[86] size[7431769]))
                val coerce_tmp[7431867]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431869 'move' coerce_tmp[7431867](7431871 'cast' c_ptr(void)[1465614] call_tmp[7431706]))
                val coerce_tmp[7431874]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431876 'move' coerce_tmp[7431874](7431878 'cast' c_ptr(void)[1465614] call_tmp[7431727]))
                const-val call_tmp[7431881]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431883 'move' call_tmp[7431881](7431886 call memcmp[12733] coerce_tmp[7431867] coerce_tmp[7431874] call_tmp[7431860]))
                const-val call_tmp[7431890]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[7431892]:owned IllegalArgumentError?[1471812] "temp"
                (7431895 call chpl_checkValue[1755328] call_tmp[7431881] ret_tmp[7431892])
                (7431898 'move' call_tmp[7431890] ret_tmp[7431892])
                ref i_arg[7431903]:owned IllegalArgumentError?[1471812] "temp"
                (7431905 'move' i_arg[7431903](7431907 'set reference' call_tmp[7431890]))
                val call_tmp[7431909]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431911 'move' call_tmp[7431909](7431914 call borrow[1479886] i_arg[7431903]))
                val coerce_tmp[7431919]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7431921 'move' coerce_tmp[7431919](7431923 'cast' RootClass[236] call_tmp[7431909]))
                const-val call_tmp[7431926]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431928 'move' call_tmp[7431926](7431930 '!=' coerce_tmp[7431919] nil[32]))
                if call_tmp[7431926]
                {
                  const-val call_tmp[7431935]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[7431937]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (7431939 'move' coerce_tmp[7431937](7431941 'cast' Error[85511] call_tmp[7431909]))
                  val _virtual_method_tmp_[7431944]:int(32)[66] "temp"
                  (7431946 'move' _virtual_method_tmp_[7431944](7431948 'getcid' coerce_tmp[7431937]))
                  val ret_tmp[7431950]:string[244] "temp"
                  (7431952 'virtual method call' message[85497] _virtual_method_tmp_[7431944] coerce_tmp[7431937] ret_tmp[7431950])
                  (7431957 'move' call_tmp[7431935] ret_tmp[7431950])
                  (7431961 call safeCastCheckHalt[440] call_tmp[7431935])
                  ref i_x[7431963]:string[244] "temp"
                  (7431965 'move' i_x[7431963](7431967 'set reference' call_tmp[7431935]))
                  (7431970 call deinit[21354] i_x[7431963])
                }
                (7431974 call chpl__autoDestroy[3929258] call_tmp[7431890])
                const-val call_tmp[7431976]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431978 'move' call_tmp[7431976](7431980 'cast' int(64)[10] call_tmp[7431881]))
                const-val call_tmp[7431988]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7431990 'move' call_tmp[7431988](7431992 '==' call_tmp[7431976] 0))
                if call_tmp[7431988]
                {
                  const-val tmp[7431997]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7431999 'move' tmp[7431997](7432001 '<' size[7431769] coerce_tmp[7430614]))
                  if tmp[7431997]
                  {
                    (7432006 'move' ret[7431748] 1)
                    gotoReturn _end__strcmp_local[7432031] _end__strcmp_local[7432031]
                  }
                  const-val tmp[7432012]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (7432014 'move' tmp[7432012](7432016 '<' size[7431769] coerce_tmp[7430635]))
                  if tmp[7432012]
                  {
                    (7432021 'move' ret[7431748] -1)
                    gotoReturn _end__strcmp_local[7432031] _end__strcmp_local[7432031]
                  }
                }
                (7432028 '=' ret[7431748] call_tmp[7431976])
                label _end__strcmp_local[7432031]
                val coerce_tmp[7432033]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7432035 'move' coerce_tmp[7432033](7432037 'cast' c_ptr(void)[1465614] call_tmp[7431706]))
                (7432041 call chpl_here_free[308686] coerce_tmp[7432033])
                val coerce_tmp[7432043]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (7432045 'move' coerce_tmp[7432043](7432047 'cast' c_ptr(void)[1465614] call_tmp[7431727]))
                (7432051 call chpl_here_free[308686] coerce_tmp[7432043])
                (7432053 'move' ret[7430649] ret[7431748])
                gotoReturn _end__strcmp[7432061] _end__strcmp[7432061]
              }
            }
          }
          label _end__strcmp[7432061]
          const-val call_tmp[7432063]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7432065 'move' call_tmp[7432063](7432067 '>' ret[7430649] 0))
          (6277729 'move' tmp[6277680] call_tmp[7432063])
          ref i_x[7346458]:string[244] "temp"
          (7346462 'move' i_x[7346458](7346460 'set reference' call_tmp[6277700]))
          (7346466 call deinit[21354] i_x[7346458])
        }
        if tmp[6277680]
        {
          const-val call_tmp[6277743]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[6277745]:int(32)[66] "temp"
          (6277747 'move' _virtual_method_tmp_[6277745](6277749 'getcid' e[6277563]))
          val ret_tmp[6277751]:string[244] "temp"
          (6277753 'virtual method call' message[85497] _virtual_method_tmp_[6277745] e[6277563] ret_tmp[6277751])
          (6277758 'move' call_tmp[6277743] ret_tmp[6277751])
          (6277762 call =[28046] maxMsg[86581] call_tmp[6277743])
          ref i_x[7346470]:string[244] "temp"
          (7346474 'move' i_x[7346470](7346472 'set reference' call_tmp[6277743]))
          (7346478 call deinit[21354] i_x[7346470])
        }
        ref i_lhs[7513298]:int(64)[10] "temp"
        (7513302 'move' i_lhs[7513298](7513300 'set reference' n[86571]))
        (7513310 '+=' i_lhs[7513298] 1)
      }
      {
        (6277386 '=' i[6277306] 0)
      }
      {
        (6277397 '<=' i[6277306] _ic__F1_high[9018324])
      }
      {
        (6277405 '+=' i[6277306] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6277439]
    label _endchpl_direct_counted_range_iter_helper[6277444]
    label _endchpl_direct_counted_range_iter[5953988]
    label _endthese[5953993]
    const-val call_tmp[5954258]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (5954260 'move' call_tmp[5954258](5954262 '_wide_get_node' this[86564]))
    const-val call_tmp[5954264]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542705]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542707]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7542709 'move' call_tmp[7542707](7542712 call chpl_nodeID[305038]))
    const-val call_tmp[7542713]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (7542715 'move' call_tmp[7542713](7542718 call chpl_rt_buildLocaleID[306484] call_tmp[7542707] c_sublocid_any[135202]))
    (7542721 'move' call_tmp[7542705] call_tmp[7542713])
    const-val call_tmp[7542724]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7542726]:locale[234] "temp"
    (7542729 call chpl_localeID_to_locale[137251] call_tmp[7542705] ret_tmp[7542726])
    (7542732 'move' call_tmp[7542724] ret_tmp[7542726])
    (5954271 'move' call_tmp[5954264] call_tmp[7542724])
    val coerce_tmp[7551014]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7551016 'move' coerce_tmp[7551014](7551018 '.v' call_tmp[5954264] _instance[135293]))
    val coerce_tmp[7551021]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7551023 'move' coerce_tmp[7551021](7551025 'cast' RootClass[236] coerce_tmp[7551014]))
    const-val call_tmp[7551028]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7551030 'move' call_tmp[7551028](7551032 '==' coerce_tmp[7551021] nil[32]))
    if call_tmp[7551028]
    {
      (7551038 call nilCheckHalt[392] "argument to ! is nil")
    }
    const-val call_tmp[7551041]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7551043 'move' call_tmp[7551041](7551046 call id[135878] coerce_tmp[7551014]))
    const-val coerce_tmp[5954283]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (5954285 'move' coerce_tmp[5954283](5954287 'cast' int(64)[10] call_tmp[5954258]))
    const-val call_tmp[7389274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7389276 'move' call_tmp[7389274](7389278 '==' coerce_tmp[5954283] call_tmp[7551041]))
    const-val call_tmp[5954296]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (5954298 'move' call_tmp[5954296](5954300 '_wide_get_node' this[86564]))
    const-val call_tmp[5954302]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542747]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7542749]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7542751 'move' call_tmp[7542749](7542754 call chpl_nodeID[305038]))
    const-val call_tmp[7542755]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (7542757 'move' call_tmp[7542755](7542760 call chpl_rt_buildLocaleID[306484] call_tmp[7542749] c_sublocid_any[135202]))
    (7542763 'move' call_tmp[7542747] call_tmp[7542755])
    const-val call_tmp[7542766]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7542768]:locale[234] "temp"
    (7542771 call chpl_localeID_to_locale[137251] call_tmp[7542747] ret_tmp[7542768])
    (7542774 'move' call_tmp[7542766] ret_tmp[7542768])
    (5954309 'move' call_tmp[5954302] call_tmp[7542766])
    val coerce_tmp[7551057]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7551059 'move' coerce_tmp[7551057](7551061 '.v' call_tmp[5954302] _instance[135293]))
    val coerce_tmp[7551064]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7551066 'move' coerce_tmp[7551064](7551068 'cast' RootClass[236] coerce_tmp[7551057]))
    const-val call_tmp[7551071]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7551073 'move' call_tmp[7551071](7551075 '==' coerce_tmp[7551064] nil[32]))
    if call_tmp[7551071]
    {
      (7551081 call nilCheckHalt[392] "argument to ! is nil")
    }
    const-val call_tmp[7551084]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7551086 'move' call_tmp[7551084](7551089 call id[135878] coerce_tmp[7551057]))
    (5954320 call assert[1809366] call_tmp[7389274] "iterating over a TaskErrors object allocated on locale " call_tmp[5954296] " while being on locale " call_tmp[7551084])
    ref i_x[7560407]:locale[234] "temp"
    (7560411 'move' i_x[7560407](7560409 'set reference' call_tmp[5954302]))
    (7560415 call deinit[135483] i_x[7560407])
    ref i_x[7560419]:locale[234] "temp"
    (7560423 'move' i_x[7560419](7560421 'set reference' call_tmp[5954264]))
    (7560427 call deinit[135483] i_x[7560419])
    const-val this[5954671]:TaskErrors[87096] "temp"
    (5954676 'move' this[5954671] this[86564])
    const-val coerce_tmp[5954345]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (5954347 'move' coerce_tmp[5954345](9195812 '.v' this[5954671] nErrors[85768]))
    val taskInd_this[5954366]:TaskErrors[87096] "task private variable"
    const-val this[5954678]:TaskErrors[87096] "temp"
    (5954683 'move' this[5954678] this[86564])
    (5954368 'move' taskInd_this[5954366] this[5954678])
    const-val tmp[7321518]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7321520 'move' tmp[7321518](7321522 '<' coerce_tmp[5954345] 0))
    if tmp[7321518]
    {
      (6277881 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    val tmp[6277891]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[7390194]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7390196 'move' call_tmp[7390194](7390198 '==' coerce_tmp[5954345] 0))
    if call_tmp[7390194]
    {
      const-val call_tmp[6277910]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (6277912 'move' call_tmp[6277910](6277914 'cast' uint(64)[86] 0))
      const-val call_tmp[7443138]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7443140 'move' call_tmp[7443138](7443142 '-' call_tmp[6277910] 1))
      const-val call_tmp[7444308]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444310 'move' call_tmp[7444308](7444312 'cast' int(64)[10] call_tmp[7443138]))
      (6277938 'move' tmp[6277891] call_tmp[7444308])
    }
    {
      const-val call_tmp[7447188]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7447190 'move' call_tmp[7447188](7447192 '-' coerce_tmp[5954345] 1))
      const-val call_tmp[7374625]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7374627 'move' call_tmp[7374625](7374629 '+' 0 call_tmp[7447188]))
      (6277971 'move' tmp[6277891] call_tmp[7374625])
    }
    const-val _ic__F1_high[9018343]:int(64)[10] "temp"
    (7457687 'move' _ic__F1_high[9018343] tmp[6277891])
    val i[6278008]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6278012 'move' i[6278008] 0)
    (6278072 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6277891] 1 0 tmp[6277891] 1)
    val coerce_tmp[6278182]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (6278184 'move' coerce_tmp[6278182](9195818 '.v' taskInd_this[5954366] errorsArray[85773]))
    CForLoop[6278079] hazard
    {
      ref call_tmp[7560808]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
      (7560810 'move' call_tmp[7560808](7560812 'array_get' coerce_tmp[6278182] i[6278008]))
      val coerce_tmp[6278196]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6278198 'move' coerce_tmp[6278196](6278201 call borrow[1817588] call_tmp[7560808]))
      val coerce_tmp[6278203]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6278205 'move' coerce_tmp[6278203](6278207 'cast' RootClass[236] coerce_tmp[6278196]))
      const-val call_tmp[7334239]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7334241 'move' call_tmp[7334239](7334243 '!=' coerce_tmp[6278203] nil[32]))
      if call_tmp[7334239]
      {
        val coerce_tmp[6278234]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6278236 'move' coerce_tmp[6278234](9195824 '.v' taskInd_this[5954366] errorsArray[85773]))
        ref call_tmp[7560818]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
        (7560820 'move' call_tmp[7560818](7560822 'array_get' coerce_tmp[6278234] i[6278008]))
        val coerce_tmp[8625812]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8625814 'move' coerce_tmp[8625812](8625816 '.v' call_tmp[7560818] chpl_p[1498153]))
        val coerce_tmp[8625819]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8625821 'move' coerce_tmp[8625819](8625823 'cast' RootClass[236] coerce_tmp[8625812]))
        const-val call_tmp[8625826]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8625828 'move' call_tmp[8625826](8625830 '==' coerce_tmp[8625819] nil[32]))
        if call_tmp[8625826]
        {
          (8625836 call nilCheckHalt[392] "argument to ! is nil")
        }
        val coerce_tmp[8625839]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8625841 'move' coerce_tmp[8625839](8625843 '.v' call_tmp[7560818] chpl_p[1498153]))
        val e[6278265]:Error[85511] "dead at end of block" "insert auto destroy"
        (6278267 'move' e[6278265] coerce_tmp[8625839])
        const-val call_tmp[6278273]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val _virtual_method_tmp_[6278275]:int(32)[66] "temp"
        (6278277 'move' _virtual_method_tmp_[6278275](6278279 'getcid' coerce_tmp[8625839]))
        val ret_tmp[6278281]:string[244] "temp"
        (6278283 'virtual method call' message[85497] _virtual_method_tmp_[6278275] coerce_tmp[8625839] ret_tmp[6278281])
        (6278288 'move' call_tmp[6278273] ret_tmp[6278281])
        const-val call_tmp[6278291]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (6278293 'move' call_tmp[6278291](6278296 call ==[28803] call_tmp[6278273] minMsg[86576]))
        if call_tmp[6278291]
        {
          val coerce_tmp[6278308]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (6278310 'move' coerce_tmp[6278308](6278312 'cast' RootClass[236] first[86586]))
          const-val call_tmp[7495622]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7495624 'move' call_tmp[7495622](7495626 '==' coerce_tmp[6278308] nil[32]))
          if call_tmp[7495622]
          {
            (7850182 '=' first[86586] e[6278265])
          }
          (7850194 '=' last[86593] e[6278265])
        }
        ref i_x[7346482]:string[244] "temp"
        (7346486 'move' i_x[7346482](7346484 'set reference' call_tmp[6278273]))
        (7346490 call deinit[21354] i_x[7346482])
      }
      {
        (6278088 '=' i[6278008] 0)
      }
      {
        (6278099 '<=' i[6278008] _ic__F1_high[9018343])
      }
      {
        (6278107 '+=' i[6278008] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6278141]
    label _endchpl_direct_counted_range_iter_helper[6278146]
    label _endchpl_direct_counted_range_iter[5954544]
    label _endthese[5954549]
    val coerce_tmp[7424629]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7424631 'move' coerce_tmp[7424629](7424633 '.v' minMsg[86576] buff[21299]))
    const-val coerce_tmp[7424636]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7424638 'move' coerce_tmp[7424636](7424640 '.v' minMsg[86576] buffLen[21281]))
    const-val coerce_tmp[7424643]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7424645 'move' coerce_tmp[7424643](7424647 '.v' minMsg[86576] locale_id[21317]))
    val coerce_tmp[7424650]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7424652 'move' coerce_tmp[7424650](7424654 '.v' maxMsg[86581] buff[21299]))
    const-val coerce_tmp[7424657]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7424659 'move' coerce_tmp[7424657](7424661 '.v' maxMsg[86581] buffLen[21281]))
    const-val coerce_tmp[7424664]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7424666 'move' coerce_tmp[7424664](7424668 '.v' maxMsg[86581] locale_id[21317]))
    val ret[7424671]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[7424673]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7424675 'move' call_tmp[7424673](7424678 call chpl_nodeID[305038]))
    const-val call_tmp[7424679]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7424681 'move' call_tmp[7424679](7424683 '==' coerce_tmp[7424643] call_tmp[7424673]))
    val tmp[7424686]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7424679]
    {
      const-val call_tmp[7424690]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424692 'move' call_tmp[7424690](7424695 call chpl_nodeID[305038]))
      const-val call_tmp[7424696]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424698 'move' call_tmp[7424696](7424700 '==' coerce_tmp[7424664] call_tmp[7424690]))
      (7424703 'move' tmp[7424686] call_tmp[7424696])
    }
    {
      (7424707 'move' tmp[7424686] 0)
    }
    if tmp[7424686]
    {
      val ret[7424713]:int(64)[10] "dead after last mention" "RVV" "temp"
      val tmp[7424715]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[7424717]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7424719 'move' tmp[7424717](7424721 '<' coerce_tmp[7424636] coerce_tmp[7424657]))
      if tmp[7424717]
      {
        (7424726 'move' tmp[7424715] coerce_tmp[7424636])
      }
      {
        (7424730 'move' tmp[7424715] coerce_tmp[7424657])
      }
      const-val size[7424734]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (7424736 'move' size[7424734] tmp[7424715])
      const-val call_tmp[7424739]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[7424741]:owned IllegalArgumentError?[1471812] "temp"
      (7424744 call chpl_checkValue[1471704] tmp[7424715] ret_tmp[7424741])
      (7424747 'move' call_tmp[7424739] ret_tmp[7424741])
      ref i_arg[7424752]:owned IllegalArgumentError?[1471812] "temp"
      (7424754 'move' i_arg[7424752](7424756 'set reference' call_tmp[7424739]))
      val call_tmp[7424758]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424760 'move' call_tmp[7424758](7424763 call borrow[1479886] i_arg[7424752]))
      val coerce_tmp[7424768]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7424770 'move' coerce_tmp[7424768](7424772 'cast' RootClass[236] call_tmp[7424758]))
      const-val call_tmp[7424775]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424777 'move' call_tmp[7424775](7424779 '!=' coerce_tmp[7424768] nil[32]))
      if call_tmp[7424775]
      {
        const-val call_tmp[7424784]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val coerce_tmp[7424786]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7424788 'move' coerce_tmp[7424786](7424790 'cast' Error[85511] call_tmp[7424758]))
        val _virtual_method_tmp_[7424793]:int(32)[66] "temp"
        (7424795 'move' _virtual_method_tmp_[7424793](7424797 'getcid' coerce_tmp[7424786]))
        val ret_tmp[7424799]:string[244] "temp"
        (7424801 'virtual method call' message[85497] _virtual_method_tmp_[7424793] coerce_tmp[7424786] ret_tmp[7424799])
        (7424806 'move' call_tmp[7424784] ret_tmp[7424799])
        (7424810 call safeCastCheckHalt[440] call_tmp[7424784])
        ref i_x[7424812]:string[244] "temp"
        (7424814 'move' i_x[7424812](7424816 'set reference' call_tmp[7424784]))
        (7424819 call deinit[21354] i_x[7424812])
      }
      (7424823 call chpl__autoDestroy[3929258] call_tmp[7424739])
      const-val call_tmp[7424825]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424827 'move' call_tmp[7424825](7424829 'cast' uint(64)[86] size[7424734]))
      val coerce_tmp[7424832]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7424834 'move' coerce_tmp[7424832](7424836 'cast' c_ptr(void)[1465614] coerce_tmp[7424629]))
      val coerce_tmp[7424839]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7424841 'move' coerce_tmp[7424839](7424843 'cast' c_ptr(void)[1465614] coerce_tmp[7424650]))
      const-val call_tmp[7424846]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424848 'move' call_tmp[7424846](7424851 call memcmp[12733] coerce_tmp[7424832] coerce_tmp[7424839] call_tmp[7424825]))
      const-val call_tmp[7424855]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[7424857]:owned IllegalArgumentError?[1471812] "temp"
      (7424860 call chpl_checkValue[1755328] call_tmp[7424846] ret_tmp[7424857])
      (7424863 'move' call_tmp[7424855] ret_tmp[7424857])
      ref i_arg[7424868]:owned IllegalArgumentError?[1471812] "temp"
      (7424870 'move' i_arg[7424868](7424872 'set reference' call_tmp[7424855]))
      val call_tmp[7424874]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424876 'move' call_tmp[7424874](7424879 call borrow[1479886] i_arg[7424868]))
      val coerce_tmp[7424884]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7424886 'move' coerce_tmp[7424884](7424888 'cast' RootClass[236] call_tmp[7424874]))
      const-val call_tmp[7424891]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424893 'move' call_tmp[7424891](7424895 '!=' coerce_tmp[7424884] nil[32]))
      if call_tmp[7424891]
      {
        const-val call_tmp[7424900]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val coerce_tmp[7424902]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7424904 'move' coerce_tmp[7424902](7424906 'cast' Error[85511] call_tmp[7424874]))
        val _virtual_method_tmp_[7424909]:int(32)[66] "temp"
        (7424911 'move' _virtual_method_tmp_[7424909](7424913 'getcid' coerce_tmp[7424902]))
        val ret_tmp[7424915]:string[244] "temp"
        (7424917 'virtual method call' message[85497] _virtual_method_tmp_[7424909] coerce_tmp[7424902] ret_tmp[7424915])
        (7424922 'move' call_tmp[7424900] ret_tmp[7424915])
        (7424926 call safeCastCheckHalt[440] call_tmp[7424900])
        ref i_x[7424928]:string[244] "temp"
        (7424930 'move' i_x[7424928](7424932 'set reference' call_tmp[7424900]))
        (7424935 call deinit[21354] i_x[7424928])
      }
      (7424939 call chpl__autoDestroy[3929258] call_tmp[7424855])
      const-val call_tmp[7424941]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424943 'move' call_tmp[7424941](7424945 'cast' int(64)[10] call_tmp[7424846]))
      const-val call_tmp[7424953]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7424955 'move' call_tmp[7424953](7424957 '==' call_tmp[7424941] 0))
      if call_tmp[7424953]
      {
        const-val tmp[7424962]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7424964 'move' tmp[7424962](7424966 '<' size[7424734] coerce_tmp[7424636]))
        if tmp[7424962]
        {
          (7424971 'move' ret[7424713] 1)
          gotoReturn _end__strcmp_local[7424996] _end__strcmp_local[7424996]
        }
        const-val tmp[7424977]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7424979 'move' tmp[7424977](7424981 '<' size[7424734] coerce_tmp[7424657]))
        if tmp[7424977]
        {
          (7424986 'move' ret[7424713] -1)
          gotoReturn _end__strcmp_local[7424996] _end__strcmp_local[7424996]
        }
      }
      (7424993 '=' ret[7424713] call_tmp[7424941])
      label _end__strcmp_local[7424996]
      (7424998 'move' ret[7424671] ret[7424713])
      gotoReturn _end__strcmp[7426083] _end__strcmp[7426083]
    }
    {
      const-val call_tmp[7425004]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7425006 'move' call_tmp[7425004](7425009 call chpl_nodeID[305038]))
      const-val call_tmp[7425010]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7425012 'move' call_tmp[7425010](7425014 '!=' coerce_tmp[7424643] call_tmp[7425004]))
      val tmp[7425017]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7425010]
      {
        const-val call_tmp[7425021]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425023 'move' call_tmp[7425021](7425026 call chpl_nodeID[305038]))
        const-val call_tmp[7425027]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425029 'move' call_tmp[7425027](7425031 '==' coerce_tmp[7424664] call_tmp[7425021]))
        (7425034 'move' tmp[7425017] call_tmp[7425027])
      }
      {
        (7425038 'move' tmp[7425017] 0)
      }
      if tmp[7425017]
      {
        val call_tmp[7425044]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[7425046]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7425048 'move' coerce_tmp[7425046](7425050 'cast' int(64)[10] coerce_tmp[7424643]))
        (7425053 'move' call_tmp[7425044](7425056 call bufferCopyRemote[30450] coerce_tmp[7425046] coerce_tmp[7424629] coerce_tmp[7424636]))
        val ret[7425065]:int(64)[10] "dead after last mention" "RVV" "temp"
        val tmp[7425067]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[7425069]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7425071 'move' tmp[7425069](7425073 '<' coerce_tmp[7424636] coerce_tmp[7424657]))
        if tmp[7425069]
        {
          (7425078 'move' tmp[7425067] coerce_tmp[7424636])
        }
        {
          (7425082 'move' tmp[7425067] coerce_tmp[7424657])
        }
        const-val size[7425086]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
        (7425088 'move' size[7425086] tmp[7425067])
        const-val call_tmp[7425091]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7425093]:owned IllegalArgumentError?[1471812] "temp"
        (7425096 call chpl_checkValue[1471704] tmp[7425067] ret_tmp[7425093])
        (7425099 'move' call_tmp[7425091] ret_tmp[7425093])
        ref i_arg[7425104]:owned IllegalArgumentError?[1471812] "temp"
        (7425106 'move' i_arg[7425104](7425108 'set reference' call_tmp[7425091]))
        val call_tmp[7425110]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425112 'move' call_tmp[7425110](7425115 call borrow[1479886] i_arg[7425104]))
        val coerce_tmp[7425120]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7425122 'move' coerce_tmp[7425120](7425124 'cast' RootClass[236] call_tmp[7425110]))
        const-val call_tmp[7425127]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425129 'move' call_tmp[7425127](7425131 '!=' coerce_tmp[7425120] nil[32]))
        if call_tmp[7425127]
        {
          const-val call_tmp[7425136]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[7425138]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425140 'move' coerce_tmp[7425138](7425142 'cast' Error[85511] call_tmp[7425110]))
          val _virtual_method_tmp_[7425145]:int(32)[66] "temp"
          (7425147 'move' _virtual_method_tmp_[7425145](7425149 'getcid' coerce_tmp[7425138]))
          val ret_tmp[7425151]:string[244] "temp"
          (7425153 'virtual method call' message[85497] _virtual_method_tmp_[7425145] coerce_tmp[7425138] ret_tmp[7425151])
          (7425158 'move' call_tmp[7425136] ret_tmp[7425151])
          (7425162 call safeCastCheckHalt[440] call_tmp[7425136])
          ref i_x[7425164]:string[244] "temp"
          (7425166 'move' i_x[7425164](7425168 'set reference' call_tmp[7425136]))
          (7425171 call deinit[21354] i_x[7425164])
        }
        (7425175 call chpl__autoDestroy[3929258] call_tmp[7425091])
        const-val call_tmp[7425177]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425179 'move' call_tmp[7425177](7425181 'cast' uint(64)[86] size[7425086]))
        val coerce_tmp[7425184]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7425186 'move' coerce_tmp[7425184](7425188 'cast' c_ptr(void)[1465614] call_tmp[7425044]))
        val coerce_tmp[7425191]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7425193 'move' coerce_tmp[7425191](7425195 'cast' c_ptr(void)[1465614] coerce_tmp[7424650]))
        const-val call_tmp[7425198]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425200 'move' call_tmp[7425198](7425203 call memcmp[12733] coerce_tmp[7425184] coerce_tmp[7425191] call_tmp[7425177]))
        const-val call_tmp[7425207]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7425209]:owned IllegalArgumentError?[1471812] "temp"
        (7425212 call chpl_checkValue[1755328] call_tmp[7425198] ret_tmp[7425209])
        (7425215 'move' call_tmp[7425207] ret_tmp[7425209])
        ref i_arg[7425220]:owned IllegalArgumentError?[1471812] "temp"
        (7425222 'move' i_arg[7425220](7425224 'set reference' call_tmp[7425207]))
        val call_tmp[7425226]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425228 'move' call_tmp[7425226](7425231 call borrow[1479886] i_arg[7425220]))
        val coerce_tmp[7425236]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7425238 'move' coerce_tmp[7425236](7425240 'cast' RootClass[236] call_tmp[7425226]))
        const-val call_tmp[7425243]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425245 'move' call_tmp[7425243](7425247 '!=' coerce_tmp[7425236] nil[32]))
        if call_tmp[7425243]
        {
          const-val call_tmp[7425252]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[7425254]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425256 'move' coerce_tmp[7425254](7425258 'cast' Error[85511] call_tmp[7425226]))
          val _virtual_method_tmp_[7425261]:int(32)[66] "temp"
          (7425263 'move' _virtual_method_tmp_[7425261](7425265 'getcid' coerce_tmp[7425254]))
          val ret_tmp[7425267]:string[244] "temp"
          (7425269 'virtual method call' message[85497] _virtual_method_tmp_[7425261] coerce_tmp[7425254] ret_tmp[7425267])
          (7425274 'move' call_tmp[7425252] ret_tmp[7425267])
          (7425278 call safeCastCheckHalt[440] call_tmp[7425252])
          ref i_x[7425280]:string[244] "temp"
          (7425282 'move' i_x[7425280](7425284 'set reference' call_tmp[7425252]))
          (7425287 call deinit[21354] i_x[7425280])
        }
        (7425291 call chpl__autoDestroy[3929258] call_tmp[7425207])
        const-val call_tmp[7425293]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425295 'move' call_tmp[7425293](7425297 'cast' int(64)[10] call_tmp[7425198]))
        const-val call_tmp[7425305]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425307 'move' call_tmp[7425305](7425309 '==' call_tmp[7425293] 0))
        if call_tmp[7425305]
        {
          const-val tmp[7425314]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7425316 'move' tmp[7425314](7425318 '<' size[7425086] coerce_tmp[7424636]))
          if tmp[7425314]
          {
            (7425323 'move' ret[7425065] 1)
            gotoReturn _end__strcmp_local[7425348] _end__strcmp_local[7425348]
          }
          const-val tmp[7425329]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7425331 'move' tmp[7425329](7425333 '<' size[7425086] coerce_tmp[7424657]))
          if tmp[7425329]
          {
            (7425338 'move' ret[7425065] -1)
            gotoReturn _end__strcmp_local[7425348] _end__strcmp_local[7425348]
          }
        }
        (7425345 '=' ret[7425065] call_tmp[7425293])
        label _end__strcmp_local[7425348]
        val coerce_tmp[7425350]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7425352 'move' coerce_tmp[7425350](7425354 'cast' c_ptr(void)[1465614] call_tmp[7425044]))
        (7425358 call chpl_here_free[308686] coerce_tmp[7425350])
        (7425360 'move' ret[7424671] ret[7425065])
        gotoReturn _end__strcmp[7426083] _end__strcmp[7426083]
      }
      {
        const-val call_tmp[7425366]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425368 'move' call_tmp[7425366](7425371 call chpl_nodeID[305038]))
        const-val call_tmp[7425372]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7425374 'move' call_tmp[7425372](7425376 '==' coerce_tmp[7424643] call_tmp[7425366]))
        val tmp[7425379]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[7425372]
        {
          const-val call_tmp[7425383]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425385 'move' call_tmp[7425383](7425388 call chpl_nodeID[305038]))
          const-val call_tmp[7425389]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425391 'move' call_tmp[7425389](7425393 '!=' coerce_tmp[7424664] call_tmp[7425383]))
          (7425396 'move' tmp[7425379] call_tmp[7425389])
        }
        {
          (7425400 'move' tmp[7425379] 0)
        }
        if tmp[7425379]
        {
          val call_tmp[7425406]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[7425408]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425410 'move' coerce_tmp[7425408](7425412 'cast' int(64)[10] coerce_tmp[7424664]))
          (7425415 'move' call_tmp[7425406](7425418 call bufferCopyRemote[30450] coerce_tmp[7425408] coerce_tmp[7424650] coerce_tmp[7424657]))
          val ret[7425427]:int(64)[10] "dead after last mention" "RVV" "temp"
          val tmp[7425429]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[7425431]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7425433 'move' tmp[7425431](7425435 '<' coerce_tmp[7424636] coerce_tmp[7424657]))
          if tmp[7425431]
          {
            (7425440 'move' tmp[7425429] coerce_tmp[7424636])
          }
          {
            (7425444 'move' tmp[7425429] coerce_tmp[7424657])
          }
          const-val size[7425448]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
          (7425450 'move' size[7425448] tmp[7425429])
          const-val call_tmp[7425453]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7425455]:owned IllegalArgumentError?[1471812] "temp"
          (7425458 call chpl_checkValue[1471704] tmp[7425429] ret_tmp[7425455])
          (7425461 'move' call_tmp[7425453] ret_tmp[7425455])
          ref i_arg[7425466]:owned IllegalArgumentError?[1471812] "temp"
          (7425468 'move' i_arg[7425466](7425470 'set reference' call_tmp[7425453]))
          val call_tmp[7425472]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425474 'move' call_tmp[7425472](7425477 call borrow[1479886] i_arg[7425466]))
          val coerce_tmp[7425482]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425484 'move' coerce_tmp[7425482](7425486 'cast' RootClass[236] call_tmp[7425472]))
          const-val call_tmp[7425489]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425491 'move' call_tmp[7425489](7425493 '!=' coerce_tmp[7425482] nil[32]))
          if call_tmp[7425489]
          {
            const-val call_tmp[7425498]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val coerce_tmp[7425500]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7425502 'move' coerce_tmp[7425500](7425504 'cast' Error[85511] call_tmp[7425472]))
            val _virtual_method_tmp_[7425507]:int(32)[66] "temp"
            (7425509 'move' _virtual_method_tmp_[7425507](7425511 'getcid' coerce_tmp[7425500]))
            val ret_tmp[7425513]:string[244] "temp"
            (7425515 'virtual method call' message[85497] _virtual_method_tmp_[7425507] coerce_tmp[7425500] ret_tmp[7425513])
            (7425520 'move' call_tmp[7425498] ret_tmp[7425513])
            (7425524 call safeCastCheckHalt[440] call_tmp[7425498])
            ref i_x[7425526]:string[244] "temp"
            (7425528 'move' i_x[7425526](7425530 'set reference' call_tmp[7425498]))
            (7425533 call deinit[21354] i_x[7425526])
          }
          (7425537 call chpl__autoDestroy[3929258] call_tmp[7425453])
          const-val call_tmp[7425539]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425541 'move' call_tmp[7425539](7425543 'cast' uint(64)[86] size[7425448]))
          val coerce_tmp[7425546]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425548 'move' coerce_tmp[7425546](7425550 'cast' c_ptr(void)[1465614] coerce_tmp[7424629]))
          val coerce_tmp[7425553]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425555 'move' coerce_tmp[7425553](7425557 'cast' c_ptr(void)[1465614] call_tmp[7425406]))
          const-val call_tmp[7425560]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425562 'move' call_tmp[7425560](7425565 call memcmp[12733] coerce_tmp[7425546] coerce_tmp[7425553] call_tmp[7425539]))
          const-val call_tmp[7425569]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7425571]:owned IllegalArgumentError?[1471812] "temp"
          (7425574 call chpl_checkValue[1755328] call_tmp[7425560] ret_tmp[7425571])
          (7425577 'move' call_tmp[7425569] ret_tmp[7425571])
          ref i_arg[7425582]:owned IllegalArgumentError?[1471812] "temp"
          (7425584 'move' i_arg[7425582](7425586 'set reference' call_tmp[7425569]))
          val call_tmp[7425588]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425590 'move' call_tmp[7425588](7425593 call borrow[1479886] i_arg[7425582]))
          val coerce_tmp[7425598]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425600 'move' coerce_tmp[7425598](7425602 'cast' RootClass[236] call_tmp[7425588]))
          const-val call_tmp[7425605]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425607 'move' call_tmp[7425605](7425609 '!=' coerce_tmp[7425598] nil[32]))
          if call_tmp[7425605]
          {
            const-val call_tmp[7425614]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val coerce_tmp[7425616]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7425618 'move' coerce_tmp[7425616](7425620 'cast' Error[85511] call_tmp[7425588]))
            val _virtual_method_tmp_[7425623]:int(32)[66] "temp"
            (7425625 'move' _virtual_method_tmp_[7425623](7425627 'getcid' coerce_tmp[7425616]))
            val ret_tmp[7425629]:string[244] "temp"
            (7425631 'virtual method call' message[85497] _virtual_method_tmp_[7425623] coerce_tmp[7425616] ret_tmp[7425629])
            (7425636 'move' call_tmp[7425614] ret_tmp[7425629])
            (7425640 call safeCastCheckHalt[440] call_tmp[7425614])
            ref i_x[7425642]:string[244] "temp"
            (7425644 'move' i_x[7425642](7425646 'set reference' call_tmp[7425614]))
            (7425649 call deinit[21354] i_x[7425642])
          }
          (7425653 call chpl__autoDestroy[3929258] call_tmp[7425569])
          const-val call_tmp[7425655]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425657 'move' call_tmp[7425655](7425659 'cast' int(64)[10] call_tmp[7425560]))
          const-val call_tmp[7425667]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425669 'move' call_tmp[7425667](7425671 '==' call_tmp[7425655] 0))
          if call_tmp[7425667]
          {
            const-val tmp[7425676]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            (7425678 'move' tmp[7425676](7425680 '<' size[7425448] coerce_tmp[7424636]))
            if tmp[7425676]
            {
              (7425685 'move' ret[7425427] 1)
              gotoReturn _end__strcmp_local[7425710] _end__strcmp_local[7425710]
            }
            const-val tmp[7425691]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            (7425693 'move' tmp[7425691](7425695 '<' size[7425448] coerce_tmp[7424657]))
            if tmp[7425691]
            {
              (7425700 'move' ret[7425427] -1)
              gotoReturn _end__strcmp_local[7425710] _end__strcmp_local[7425710]
            }
          }
          (7425707 '=' ret[7425427] call_tmp[7425655])
          label _end__strcmp_local[7425710]
          val coerce_tmp[7425712]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425714 'move' coerce_tmp[7425712](7425716 'cast' c_ptr(void)[1465614] call_tmp[7425406]))
          (7425720 call chpl_here_free[308686] coerce_tmp[7425712])
          (7425722 'move' ret[7424671] ret[7425427])
          gotoReturn _end__strcmp[7426083] _end__strcmp[7426083]
        }
        {
          val call_tmp[7425728]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[7425730]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425732 'move' coerce_tmp[7425730](7425734 'cast' int(64)[10] coerce_tmp[7424643]))
          (7425737 'move' call_tmp[7425728](7425740 call bufferCopyRemote[30450] coerce_tmp[7425730] coerce_tmp[7424629] coerce_tmp[7424636]))
          val call_tmp[7425749]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[7425751]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425753 'move' coerce_tmp[7425751](7425755 'cast' int(64)[10] coerce_tmp[7424664]))
          (7425758 'move' call_tmp[7425749](7425761 call bufferCopyRemote[30450] coerce_tmp[7425751] coerce_tmp[7424650] coerce_tmp[7424657]))
          val ret[7425770]:int(64)[10] "dead after last mention" "RVV" "temp"
          val tmp[7425772]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[7425774]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7425776 'move' tmp[7425774](7425778 '<' coerce_tmp[7424636] coerce_tmp[7424657]))
          if tmp[7425774]
          {
            (7425783 'move' tmp[7425772] coerce_tmp[7424636])
          }
          {
            (7425787 'move' tmp[7425772] coerce_tmp[7424657])
          }
          const-val size[7425791]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
          (7425793 'move' size[7425791] tmp[7425772])
          const-val call_tmp[7425796]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7425798]:owned IllegalArgumentError?[1471812] "temp"
          (7425801 call chpl_checkValue[1471704] tmp[7425772] ret_tmp[7425798])
          (7425804 'move' call_tmp[7425796] ret_tmp[7425798])
          ref i_arg[7425809]:owned IllegalArgumentError?[1471812] "temp"
          (7425811 'move' i_arg[7425809](7425813 'set reference' call_tmp[7425796]))
          val call_tmp[7425815]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425817 'move' call_tmp[7425815](7425820 call borrow[1479886] i_arg[7425809]))
          val coerce_tmp[7425825]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425827 'move' coerce_tmp[7425825](7425829 'cast' RootClass[236] call_tmp[7425815]))
          const-val call_tmp[7425832]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425834 'move' call_tmp[7425832](7425836 '!=' coerce_tmp[7425825] nil[32]))
          if call_tmp[7425832]
          {
            const-val call_tmp[7425841]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val coerce_tmp[7425843]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7425845 'move' coerce_tmp[7425843](7425847 'cast' Error[85511] call_tmp[7425815]))
            val _virtual_method_tmp_[7425850]:int(32)[66] "temp"
            (7425852 'move' _virtual_method_tmp_[7425850](7425854 'getcid' coerce_tmp[7425843]))
            val ret_tmp[7425856]:string[244] "temp"
            (7425858 'virtual method call' message[85497] _virtual_method_tmp_[7425850] coerce_tmp[7425843] ret_tmp[7425856])
            (7425863 'move' call_tmp[7425841] ret_tmp[7425856])
            (7425867 call safeCastCheckHalt[440] call_tmp[7425841])
            ref i_x[7425869]:string[244] "temp"
            (7425871 'move' i_x[7425869](7425873 'set reference' call_tmp[7425841]))
            (7425876 call deinit[21354] i_x[7425869])
          }
          (7425880 call chpl__autoDestroy[3929258] call_tmp[7425796])
          const-val call_tmp[7425882]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425884 'move' call_tmp[7425882](7425886 'cast' uint(64)[86] size[7425791]))
          val coerce_tmp[7425889]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425891 'move' coerce_tmp[7425889](7425893 'cast' c_ptr(void)[1465614] call_tmp[7425728]))
          val coerce_tmp[7425896]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425898 'move' coerce_tmp[7425896](7425900 'cast' c_ptr(void)[1465614] call_tmp[7425749]))
          const-val call_tmp[7425903]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425905 'move' call_tmp[7425903](7425908 call memcmp[12733] coerce_tmp[7425889] coerce_tmp[7425896] call_tmp[7425882]))
          const-val call_tmp[7425912]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7425914]:owned IllegalArgumentError?[1471812] "temp"
          (7425917 call chpl_checkValue[1755328] call_tmp[7425903] ret_tmp[7425914])
          (7425920 'move' call_tmp[7425912] ret_tmp[7425914])
          ref i_arg[7425925]:owned IllegalArgumentError?[1471812] "temp"
          (7425927 'move' i_arg[7425925](7425929 'set reference' call_tmp[7425912]))
          val call_tmp[7425931]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425933 'move' call_tmp[7425931](7425936 call borrow[1479886] i_arg[7425925]))
          val coerce_tmp[7425941]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7425943 'move' coerce_tmp[7425941](7425945 'cast' RootClass[236] call_tmp[7425931]))
          const-val call_tmp[7425948]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7425950 'move' call_tmp[7425948](7425952 '!=' coerce_tmp[7425941] nil[32]))
          if call_tmp[7425948]
          {
            const-val call_tmp[7425957]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val coerce_tmp[7425959]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7425961 'move' coerce_tmp[7425959](7425963 'cast' Error[85511] call_tmp[7425931]))
            val _virtual_method_tmp_[7425966]:int(32)[66] "temp"
            (7425968 'move' _virtual_method_tmp_[7425966](7425970 'getcid' coerce_tmp[7425959]))
            val ret_tmp[7425972]:string[244] "temp"
            (7425974 'virtual method call' message[85497] _virtual_method_tmp_[7425966] coerce_tmp[7425959] ret_tmp[7425972])
            (7425979 'move' call_tmp[7425957] ret_tmp[7425972])
            (7425983 call safeCastCheckHalt[440] call_tmp[7425957])
            ref i_x[7425985]:string[244] "temp"
            (7425987 'move' i_x[7425985](7425989 'set reference' call_tmp[7425957]))
            (7425992 call deinit[21354] i_x[7425985])
          }
          (7425996 call chpl__autoDestroy[3929258] call_tmp[7425912])
          const-val call_tmp[7425998]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7426000 'move' call_tmp[7425998](7426002 'cast' int(64)[10] call_tmp[7425903]))
          const-val call_tmp[7426010]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7426012 'move' call_tmp[7426010](7426014 '==' call_tmp[7425998] 0))
          if call_tmp[7426010]
          {
            const-val tmp[7426019]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            (7426021 'move' tmp[7426019](7426023 '<' size[7425791] coerce_tmp[7424636]))
            if tmp[7426019]
            {
              (7426028 'move' ret[7425770] 1)
              gotoReturn _end__strcmp_local[7426053] _end__strcmp_local[7426053]
            }
            const-val tmp[7426034]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            (7426036 'move' tmp[7426034](7426038 '<' size[7425791] coerce_tmp[7424657]))
            if tmp[7426034]
            {
              (7426043 'move' ret[7425770] -1)
              gotoReturn _end__strcmp_local[7426053] _end__strcmp_local[7426053]
            }
          }
          (7426050 '=' ret[7425770] call_tmp[7425998])
          label _end__strcmp_local[7426053]
          val coerce_tmp[7426055]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7426057 'move' coerce_tmp[7426055](7426059 'cast' c_ptr(void)[1465614] call_tmp[7425728]))
          (7426063 call chpl_here_free[308686] coerce_tmp[7426055])
          val coerce_tmp[7426065]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7426067 'move' coerce_tmp[7426065](7426069 'cast' c_ptr(void)[1465614] call_tmp[7425749]))
          (7426073 call chpl_here_free[308686] coerce_tmp[7426065])
          (7426075 'move' ret[7424671] ret[7425770])
          gotoReturn _end__strcmp[7426083] _end__strcmp[7426083]
        }
      }
    }
    label _end__strcmp[7426083]
    const-val call_tmp[7426085]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7426087 'move' call_tmp[7426085](7426089 '==' ret[7424671] 0))
    const-val call_tmp[7426092]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7426094 'move' call_tmp[7426092](7426096 'u!' call_tmp[7426085]))
    if call_tmp[7426092]
    {
      const-val call_tmp[5954690]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (5954692 'move' call_tmp[5954690](5954694 '_wide_get_node' this[86564]))
      const-val call_tmp[5954696]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7542789]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7542791]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7542793 'move' call_tmp[7542791](7542796 call chpl_nodeID[305038]))
      const-val call_tmp[7542797]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (7542799 'move' call_tmp[7542797](7542802 call chpl_rt_buildLocaleID[306484] call_tmp[7542791] c_sublocid_any[135202]))
      (7542805 'move' call_tmp[7542789] call_tmp[7542797])
      const-val call_tmp[7542808]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[7542810]:locale[234] "temp"
      (7542813 call chpl_localeID_to_locale[137251] call_tmp[7542789] ret_tmp[7542810])
      (7542816 'move' call_tmp[7542808] ret_tmp[7542810])
      (5954703 'move' call_tmp[5954696] call_tmp[7542808])
      val coerce_tmp[7551100]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7551102 'move' coerce_tmp[7551100](7551104 '.v' call_tmp[5954696] _instance[135293]))
      val coerce_tmp[7551107]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7551109 'move' coerce_tmp[7551107](7551111 'cast' RootClass[236] coerce_tmp[7551100]))
      const-val call_tmp[7551114]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7551116 'move' call_tmp[7551114](7551118 '==' coerce_tmp[7551107] nil[32]))
      if call_tmp[7551114]
      {
        (7551124 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[7551127]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7551129 'move' call_tmp[7551127](7551132 call id[135878] coerce_tmp[7551100]))
      const-val coerce_tmp[5954715]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (5954717 'move' coerce_tmp[5954715](5954719 'cast' int(64)[10] call_tmp[5954690]))
      const-val call_tmp[7389284]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7389286 'move' call_tmp[7389284](7389288 '==' coerce_tmp[5954715] call_tmp[7551127]))
      const-val call_tmp[5954728]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (5954730 'move' call_tmp[5954728](5954732 '_wide_get_node' this[86564]))
      const-val call_tmp[5954734]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7542831]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7542833]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7542835 'move' call_tmp[7542833](7542838 call chpl_nodeID[305038]))
      const-val call_tmp[7542839]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (7542841 'move' call_tmp[7542839](7542844 call chpl_rt_buildLocaleID[306484] call_tmp[7542833] c_sublocid_any[135202]))
      (7542847 'move' call_tmp[7542831] call_tmp[7542839])
      const-val call_tmp[7542850]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[7542852]:locale[234] "temp"
      (7542855 call chpl_localeID_to_locale[137251] call_tmp[7542831] ret_tmp[7542852])
      (7542858 'move' call_tmp[7542850] ret_tmp[7542852])
      (5954741 'move' call_tmp[5954734] call_tmp[7542850])
      val coerce_tmp[7551143]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7551145 'move' coerce_tmp[7551143](7551147 '.v' call_tmp[5954734] _instance[135293]))
      val coerce_tmp[7551150]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7551152 'move' coerce_tmp[7551150](7551154 'cast' RootClass[236] coerce_tmp[7551143]))
      const-val call_tmp[7551157]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7551159 'move' call_tmp[7551157](7551161 '==' coerce_tmp[7551150] nil[32]))
      if call_tmp[7551157]
      {
        (7551167 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[7551170]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7551172 'move' call_tmp[7551170](7551175 call id[135878] coerce_tmp[7551143]))
      (5954752 call assert[1809366] call_tmp[7389284] "iterating over a TaskErrors object allocated on locale " call_tmp[5954728] " while being on locale " call_tmp[7551170])
      ref i_x[7560431]:locale[234] "temp"
      (7560435 'move' i_x[7560431](7560433 'set reference' call_tmp[5954734]))
      (7560439 call deinit[135483] i_x[7560431])
      ref i_x[7560443]:locale[234] "temp"
      (7560447 'move' i_x[7560443](7560445 'set reference' call_tmp[5954696]))
      (7560451 call deinit[135483] i_x[7560443])
      const-val this[5955071]:TaskErrors[87096] "temp"
      (5955076 'move' this[5955071] this[86564])
      const-val coerce_tmp[5954777]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (5954779 'move' coerce_tmp[5954777](9195842 '.v' this[5955071] nErrors[85768]))
      val taskInd_this[5954798]:TaskErrors[87096] "task private variable"
      const-val this[5955078]:TaskErrors[87096] "temp"
      (5955083 'move' this[5955078] this[86564])
      (5954800 'move' taskInd_this[5954798] this[5955078])
      const-val tmp[7321533]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7321535 'move' tmp[7321533](7321537 '<' coerce_tmp[5954777] 0))
      if tmp[7321533]
      {
        (6278459 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
      }
      val tmp[6278469]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[7390209]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7390211 'move' call_tmp[7390209](7390213 '==' coerce_tmp[5954777] 0))
      if call_tmp[7390209]
      {
        const-val call_tmp[6278488]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (6278490 'move' call_tmp[6278488](6278492 'cast' uint(64)[86] 0))
        const-val call_tmp[7443148]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (7443150 'move' call_tmp[7443148](7443152 '-' call_tmp[6278488] 1))
        const-val call_tmp[7444318]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7444320 'move' call_tmp[7444318](7444322 'cast' int(64)[10] call_tmp[7443148]))
        (6278516 'move' tmp[6278469] call_tmp[7444318])
      }
      {
        const-val call_tmp[7447198]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7447200 'move' call_tmp[7447198](7447202 '-' coerce_tmp[5954777] 1))
        const-val call_tmp[7374635]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7374637 'move' call_tmp[7374635](7374639 '+' 0 call_tmp[7447198]))
        (6278549 'move' tmp[6278469] call_tmp[7374635])
      }
      const-val _ic__F1_high[9018362]:int(64)[10] "temp"
      (7457750 'move' _ic__F1_high[9018362] tmp[6278469])
      val i[6278586]:int(64)[10] "dead at end of block" "insert auto destroy"
      (6278590 'move' i[6278586] 0)
      (6278650 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6278469] 1 0 tmp[6278469] 1)
      val coerce_tmp[6278760]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (6278762 'move' coerce_tmp[6278760](9195848 '.v' taskInd_this[5954798] errorsArray[85773]))
      CForLoop[6278657] hazard
      {
        ref call_tmp[7560828]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
        (7560830 'move' call_tmp[7560828](7560832 'array_get' coerce_tmp[6278760] i[6278586]))
        val coerce_tmp[6278774]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6278776 'move' coerce_tmp[6278774](6278779 call borrow[1817588] call_tmp[7560828]))
        val coerce_tmp[6278781]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6278783 'move' coerce_tmp[6278781](6278785 'cast' RootClass[236] coerce_tmp[6278774]))
        const-val call_tmp[7334249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7334251 'move' call_tmp[7334249](7334253 '!=' coerce_tmp[6278781] nil[32]))
        if call_tmp[7334249]
        {
          val coerce_tmp[6278812]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (6278814 'move' coerce_tmp[6278812](9195854 '.v' taskInd_this[5954798] errorsArray[85773]))
          ref call_tmp[7560838]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
          (7560840 'move' call_tmp[7560838](7560842 'array_get' coerce_tmp[6278812] i[6278586]))
          val coerce_tmp[8625849]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (8625851 'move' coerce_tmp[8625849](8625853 '.v' call_tmp[7560838] chpl_p[1498153]))
          val coerce_tmp[8625856]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (8625858 'move' coerce_tmp[8625856](8625860 'cast' RootClass[236] coerce_tmp[8625849]))
          const-val call_tmp[8625863]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8625865 'move' call_tmp[8625863](8625867 '==' coerce_tmp[8625856] nil[32]))
          if call_tmp[8625863]
          {
            (8625873 call nilCheckHalt[392] "argument to ! is nil")
          }
          val coerce_tmp[8625876]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (8625878 'move' coerce_tmp[8625876](8625880 '.v' call_tmp[7560838] chpl_p[1498153]))
          val e[6278843]:Error[85511] "dead at end of block" "insert auto destroy"
          (6278845 'move' e[6278843] coerce_tmp[8625876])
          const-val call_tmp[6278851]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[6278853]:int(32)[66] "temp"
          (6278855 'move' _virtual_method_tmp_[6278853](6278857 'getcid' coerce_tmp[8625876]))
          val ret_tmp[6278859]:string[244] "temp"
          (6278861 'virtual method call' message[85497] _virtual_method_tmp_[6278853] coerce_tmp[8625876] ret_tmp[6278859])
          (6278866 'move' call_tmp[6278851] ret_tmp[6278859])
          const-val call_tmp[6278869]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (6278871 'move' call_tmp[6278869](6278874 call ==[28803] call_tmp[6278851] maxMsg[86581]))
          if call_tmp[6278869]
          {
            (7850206 '=' last[86593] e[6278843])
          }
          ref i_x[7346494]:string[244] "temp"
          (7346498 'move' i_x[7346494](7346496 'set reference' call_tmp[6278851]))
          (7346502 call deinit[21354] i_x[7346494])
        }
        {
          (6278666 '=' i[6278586] 0)
        }
        {
          (6278677 '<=' i[6278586] _ic__F1_high[9018362])
        }
        {
          (6278685 '+=' i[6278586] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[6278719]
      label _endchpl_direct_counted_range_iter_helper[6278724]
      label _endchpl_direct_counted_range_iter[5954976]
      label _endthese[5954981]
    }
    const-val call_tmp[733424]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546287]:string[244] "temp"
    (86855 call :[1496816] n[86571] ret_tmp[5546287])
    (5546290 'move' call_tmp[733424] ret_tmp[5546287])
    const-val call_tmp[733429]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539116]:string[244] "temp"
    (86853 call +[28065] call_tmp[733424] " errors: " ret_tmp[5539116])
    (5539119 'move' call_tmp[733429] ret_tmp[5539116])
    val ret[86852]:string[244] "dead at end of block" "insert auto destroy"
    (642125 'move' ret[86852] call_tmp[733429])
    ref i_x[7335178]:string[244] "temp"
    (7335182 'move' i_x[7335178](7335180 'set reference' call_tmp[733424]))
    (7335186 call deinit[21354] i_x[7335178])
    val coerce_tmp[4347693]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4347699 'move' coerce_tmp[4347693](4347695 'cast' RootClass[236] first[86586]))
    const-val call_tmp[7329169]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7329171 'move' call_tmp[7329169](7329173 '!=' coerce_tmp[4347693] nil[32]))
    val tmp[661080]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7329169]
    {
      val coerce_tmp[4347705]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347711 'move' coerce_tmp[4347705](4347707 'cast' RootClass[236] last[86593]))
      const-val call_tmp[7329179]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7329181 'move' call_tmp[7329179](7329183 '!=' coerce_tmp[4347705] nil[32]))
      (661095 'move' tmp[661080] call_tmp[7329179])
    }
    {
      (661100 'move' tmp[661080] 0)
    }
    val tmp[661107]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[661080]
    {
      val coerce_tmp[4347717]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347723 'move' coerce_tmp[4347717](4347719 'cast' RootClass[236] first[86586]))
      val coerce_tmp[4347725]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347731 'move' coerce_tmp[4347725](4347727 'cast' RootClass[236] last[86593]))
      const-val call_tmp[7497612]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7497614 'move' call_tmp[7497612](7497616 'ptr_neq' coerce_tmp[4347717] coerce_tmp[4347725]))
      (661122 'move' tmp[661107] call_tmp[7497612])
    }
    {
      (661127 'move' tmp[661107] 0)
    }
    if tmp[661107]
    {
      val coerce_tmp[7647333]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7647335 'move' coerce_tmp[7647333](7647337 'cast' RootClass[236] first[86586]))
      const-val call_tmp[7647340]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7647342 'move' call_tmp[7647340](7647344 '==' coerce_tmp[7647333] nil[32]))
      if call_tmp[7647340]
      {
        (7647350 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[733474]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5541643]:string[244] "temp"
      (86872 call chpl_describe_error[87147] first[86586] ret_tmp[5541643])
      (5541646 'move' call_tmp[733474] ret_tmp[5541643])
      const-val call_tmp[733479]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539128]:string[244] "temp"
      (86869 call +[28065] call_tmp[733474] " ... " ret_tmp[5539128])
      (5539131 'move' call_tmp[733479] ret_tmp[5539128])
      val coerce_tmp[7647356]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7647358 'move' coerce_tmp[7647356](7647360 'cast' RootClass[236] last[86593]))
      const-val call_tmp[7647363]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7647365 'move' call_tmp[7647363](7647367 '==' coerce_tmp[7647356] nil[32]))
      if call_tmp[7647363]
      {
        (7647373 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[733489]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5541649]:string[244] "temp"
      (86880 call chpl_describe_error[87147] last[86593] ret_tmp[5541649])
      (5541652 'move' call_tmp[733489] ret_tmp[5541649])
      const-val call_tmp[733494]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539122]:string[244] "temp"
      (86867 call +[28065] call_tmp[733479] call_tmp[733489] ret_tmp[5539122])
      (5539125 'move' call_tmp[733494] ret_tmp[5539122])
      (86864 call +=[28600] ret[86852] call_tmp[733494])
      ref i_x[7335190]:string[244] "temp"
      (7335194 'move' i_x[7335190](7335192 'set reference' call_tmp[733494]))
      (7335198 call deinit[21354] i_x[7335190])
      ref i_x[7335202]:string[244] "temp"
      (7335206 'move' i_x[7335202](7335204 'set reference' call_tmp[733489]))
      (7335210 call deinit[21354] i_x[7335202])
      ref i_x[7335214]:string[244] "temp"
      (7335218 'move' i_x[7335214](7335216 'set reference' call_tmp[733479]))
      (7335222 call deinit[21354] i_x[7335214])
      ref i_x[7335226]:string[244] "temp"
      (7335230 'move' i_x[7335226](7335228 'set reference' call_tmp[733474]))
      (7335234 call deinit[21354] i_x[7335226])
    }
    {
      val coerce_tmp[4347759]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347765 'move' coerce_tmp[4347759](4347761 'cast' RootClass[236] first[86586]))
      const-val call_tmp[7329189]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7329191 'move' call_tmp[7329189](7329193 '!=' coerce_tmp[4347759] nil[32]))
      if call_tmp[7329189]
      {
        const-val call_tmp[733514]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5541655]:string[244] "temp"
        (86889 call chpl_describe_error[87147] first[86586] ret_tmp[5541655])
        (5541658 'move' call_tmp[733514] ret_tmp[5541655])
        (86885 call +=[28600] ret[86852] call_tmp[733514])
        ref i_x[7335238]:string[244] "temp"
        (7335242 'move' i_x[7335238](7335240 'set reference' call_tmp[733514]))
        (7335246 call deinit[21354] i_x[7335238])
      }
    }
    (4347778 '=' ret[587832] ret[86852])
    ref i_x[7335250]:string[244] "temp"
    (7335254 'move' i_x[7335250](7335252 'set reference' maxMsg[86581]))
    (7335258 call deinit[21354] i_x[7335250])
    ref i_x[7335262]:string[244] "temp"
    (7335266 'move' i_x[7335262](7335264 'set reference' minMsg[86576]))
    (7335270 call deinit[21354] i_x[7335262])
    label _end_message[587830]
    (5609224 '=' _retArg[5609222] ret[587832])
    (5609226 return _void[46])
  }
  function _new[1831355](ref arg group[1831364]:chpl_TaskErrors[85763]) : TaskErrors[87096] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1831357]:TaskErrors[87096] "dead after last mention" "temp"
    const-val call_tmp[1831398]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1831401 'move' call_tmp[1831398](1831412 'sizeof_bundle' TaskErrors[87096]))
    val cast_tmp[1831415]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1831417 'move' cast_tmp[1831415](1831372 call chpl_here_alloc[308303] call_tmp[1831398] 43))
    (1831375 'move' initTemp[1831357](1831419 'cast' TaskErrors[87096] cast_tmp[1831415]))
    val super_tmp[7570373]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7570375 'move' super_tmp[7570373](7570377 '.v' initTemp[1831357] super[397434]))
    val super_tmp[7570380]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7570382 'move' super_tmp[7570380](7570384 '.v' super_tmp[7570373] super[397311]))
    (7570387 'setcid' super_tmp[7570380])
    val call_tmp[7570389]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7570391 'move' call_tmp[7570389](7570393 'cast' RootClass[236] super_tmp[7570373]))
    (7570396 'setcid' call_tmp[7570389])
    val init_coerce_tmp[7570398]:Error[85511] "dead after last mention" "temp"
    (7570400 '=' init_coerce_tmp[7570398](7570402 'cast' Error[85511] nil[32]))
    (7570405 '.=' super_tmp[7570373] _next[85434] init_coerce_tmp[7570398])
    (7570409 '.=' super_tmp[7570373] thrownLine[85442] 0)
    (7570413 '.=' super_tmp[7570373] thrownFileId[85447] 0)
    val _msg[7570417]:string[244] "dead after last mention" "temp"
    (7570420 call init[21321] _msg[7570417])
    (7570422 '.=' super_tmp[7570373] _msg[85454] _msg[7570417])
    (7570426 '.=' super_tmp[7570373] _hasThrowInfo[85459] 0)
    (7570430 'setcid' super_tmp[7570373])
    val call_tmp[7570432]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7570434 'move' call_tmp[7570432](7570436 'cast' Error[85511] initTemp[1831357]))
    (7570439 'setcid' call_tmp[7570432])
    val head[7570441]:Error[85511] "dead at end of block"
    val coerce_tmp[7570443]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7570445 'move' coerce_tmp[7570443](7570447 '.v' group[1831364] _head[85682]))
    (7570450 '=' head[7570441] coerce_tmp[7570443])
    (7570453 'noop')
    val tmp[7570454]:Error[85511] "temp"
    (7570456 'move' tmp[7570454](7570458 'cast' Error[85511] nil[32]))
    (7570461 '.=' group[1831364] _head[85682] tmp[7570454])
    (7570465 '.=' initTemp[1831357] nErrors[85768] 0)
    val errorsArray[7570469]:c_ptr(owned Error?)[1805608] "dead after last mention" "temp"
    (7570471 'move' errorsArray[7570469](7570473 'cast' c_ptr(owned Error?)[1805608] nil[32]))
    (7570476 '.=' initTemp[1831357] errorsArray[85773] errorsArray[7570469])
    (7570480 'setcid' initTemp[1831357])
    val n[7570482]:int(64)[10] "dead at end of block" "insert auto destroy"
    (7570484 'move' n[7570482] 0)
    val while_borrow[7570487]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (7570489 'move' while_borrow[7570487] coerce_tmp[7570443])
    val tmp[7570492]:bool[19] "dead after last mention" "temp"
    val coerce_tmp[7570494]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7570496 'move' coerce_tmp[7570494](7570498 'cast' RootClass[236] coerce_tmp[7570443]))
    const-val call_tmp[7570501]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7570503 'move' call_tmp[7570501](7570505 '!=' coerce_tmp[7570494] nil[32]))
    (7570508 'move' tmp[7570492] call_tmp[7570501])
    WhileDo[7570511]
    {
      val coerce_tmp[7570513]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7570515 'move' coerce_tmp[7570513] while_borrow[7570487])
      val curnext[7570518]:Error[85511] "dead at end of block" "insert auto destroy"
      val coerce_tmp[7570520]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (7570522 'move' coerce_tmp[7570520](7570524 '.v' coerce_tmp[7570513] _next[85434]))
      (7570527 '=' curnext[7570518] coerce_tmp[7570520])
      (7570530 'noop')
      val _formal_type_tmp_[7570536]:TaskErrors[87096] "temp"
      val ret[7570538]:TaskErrors[87096] "dead after last mention" "RVV" "temp"
      val coerce_tmp[7570540]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7570542 'move' coerce_tmp[7570540](7570544 'cast' RootClass[236] while_borrow[7570487]))
      const-val call_tmp[7570547]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7570549 'move' call_tmp[7570547](7570551 '==' coerce_tmp[7570540] nil[32]))
      if call_tmp[7570547]
      {
        (7570556 '=' ret[7570538](7570558 'cast' TaskErrors[87096] nil[32]))
        gotoReturn _end_:[7570574] _end_:[7570574]
      }
      val call_tmp[7570564]:TaskErrors[87096] "dead after last mention" "maybe param" "temp"
      (7570566 'move' call_tmp[7570564](7570568 'dynamic_cast' _formal_type_tmp_[7570536] while_borrow[7570487]))
      (7570571 'move' ret[7570538] call_tmp[7570564])
      label _end_:[7570574]
      val coerce_tmp[7570581]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7570583 'move' coerce_tmp[7570581](7570585 'cast' RootClass[236] ret[7570538]))
      const-val call_tmp[7570588]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7570590 'move' call_tmp[7570588](7570592 '!=' coerce_tmp[7570581] nil[32]))
      if call_tmp[7570588]
      {
        const-val this[7570656]:TaskErrors[87096] "temp"
        (7570658 'move' this[7570656] ret[7570538])
        const-val call_tmp[7570663]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570672 'move' call_tmp[7570663](7570674 '_wide_get_node' ret[7570538]))
        const-val call_tmp[7570676]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7570678]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7570680]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570682 'move' call_tmp[7570680](7570685 call chpl_nodeID[305038]))
        const-val call_tmp[7570686]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        (7570688 'move' call_tmp[7570686](7570691 call chpl_rt_buildLocaleID[306484] call_tmp[7570680] c_sublocid_any[135202]))
        (7570694 'move' call_tmp[7570678] call_tmp[7570686])
        const-val call_tmp[7570697]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7570699]:locale[234] "temp"
        (7570702 call chpl_localeID_to_locale[137251] call_tmp[7570678] ret_tmp[7570699])
        (7570705 'move' call_tmp[7570697] ret_tmp[7570699])
        (7570708 'move' call_tmp[7570676] call_tmp[7570697])
        val coerce_tmp[7570711]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7570713 'move' coerce_tmp[7570711](7570715 '.v' call_tmp[7570676] _instance[135293]))
        val coerce_tmp[7570718]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7570720 'move' coerce_tmp[7570718](7570722 'cast' RootClass[236] coerce_tmp[7570711]))
        const-val call_tmp[7570725]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570727 'move' call_tmp[7570725](7570729 '==' coerce_tmp[7570718] nil[32]))
        if call_tmp[7570725]
        {
          (7570735 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7570738]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570740 'move' call_tmp[7570738](7570743 call id[135878] coerce_tmp[7570711]))
        const-val coerce_tmp[7570747]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7570749 'move' coerce_tmp[7570747](7570751 'cast' int(64)[10] call_tmp[7570663]))
        const-val call_tmp[7570754]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570756 'move' call_tmp[7570754](7570758 '==' coerce_tmp[7570747] call_tmp[7570738]))
        const-val call_tmp[7570764]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570773 'move' call_tmp[7570764](7570775 '_wide_get_node' ret[7570538]))
        const-val call_tmp[7570777]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7570779]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7570781]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570783 'move' call_tmp[7570781](7570786 call chpl_nodeID[305038]))
        const-val call_tmp[7570787]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        (7570789 'move' call_tmp[7570787](7570792 call chpl_rt_buildLocaleID[306484] call_tmp[7570781] c_sublocid_any[135202]))
        (7570795 'move' call_tmp[7570779] call_tmp[7570787])
        const-val call_tmp[7570798]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7570800]:locale[234] "temp"
        (7570803 call chpl_localeID_to_locale[137251] call_tmp[7570779] ret_tmp[7570800])
        (7570806 'move' call_tmp[7570798] ret_tmp[7570800])
        (7570809 'move' call_tmp[7570777] call_tmp[7570798])
        val coerce_tmp[7570812]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7570814 'move' coerce_tmp[7570812](7570816 '.v' call_tmp[7570777] _instance[135293]))
        val coerce_tmp[7570819]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7570821 'move' coerce_tmp[7570819](7570823 'cast' RootClass[236] coerce_tmp[7570812]))
        const-val call_tmp[7570826]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570828 'move' call_tmp[7570826](7570830 '==' coerce_tmp[7570819] nil[32]))
        if call_tmp[7570826]
        {
          (7570836 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7570839]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7570841 'move' call_tmp[7570839](7570844 call id[135878] coerce_tmp[7570812]))
        (7570847 call assert[1809366] call_tmp[7570754] "iterating over a TaskErrors object allocated on locale " call_tmp[7570764] " while being on locale " call_tmp[7570839])
        ref i_x[7570853]:locale[234] "temp"
        (7570855 'move' i_x[7570853](7570857 'set reference' call_tmp[7570777]))
        (7570860 call deinit[135483] i_x[7570853])
        ref i_x[7570862]:locale[234] "temp"
        (7570864 'move' i_x[7570862](7570866 'set reference' call_tmp[7570676]))
        (7570869 call deinit[135483] i_x[7570862])
        const-val this[7570873]:TaskErrors[87096] "temp"
        (7570875 'move' this[7570873] ret[7570538])
        const-val coerce_tmp[7570882]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (7570884 'move' coerce_tmp[7570882](7570886 '.v' this[7570873] nErrors[85768]))
        val taskInd_this[7570959]:TaskErrors[87096] "task private variable"
        (7570961 'move' taskInd_this[7570959] this[7570656])
        const-val tmp[7571060]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7571062 'move' tmp[7571060](7571064 '<' coerce_tmp[7570882] 0))
        if tmp[7571060]
        {
          (7571070 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
        }
        val tmp[7571085]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val call_tmp[7571094]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7571096 'move' call_tmp[7571094](7571098 '==' coerce_tmp[7570882] 0))
        if call_tmp[7571094]
        {
          const-val call_tmp[7571103]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (7571112 'move' call_tmp[7571103](7571114 'cast' uint(64)[86] 0))
          const-val call_tmp[7571117]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (7571119 'move' call_tmp[7571117](7571121 '-' call_tmp[7571103] 1))
          const-val call_tmp[7571124]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7571126 'move' call_tmp[7571124](7571128 'cast' int(64)[10] call_tmp[7571117]))
          (7571131 'move' tmp[7571085] call_tmp[7571124])
        }
        {
          const-val call_tmp[7571142]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7571144 'move' call_tmp[7571142](7571146 '-' coerce_tmp[7570882] 1))
          const-val call_tmp[7571156]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7571158 'move' call_tmp[7571156](7571160 '+' 0 call_tmp[7571142]))
          (7571163 'move' tmp[7571085] call_tmp[7571156])
        }
        const-val _ic__F1_high[9019464]:int(64)[10] "temp"
        (7571234 'move' _ic__F1_high[9019464] tmp[7571085])
        val i[7571241]:int(64)[10] "dead at end of block" "insert auto destroy"
        (7571243 'move' i[7571241] 0)
        (7571275 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[7571085] 1 0 tmp[7571085] 1)
        val coerce_tmp[7571314]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7571316 'move' coerce_tmp[7571314](7571318 '.v' taskInd_this[7570959] errorsArray[85773]))
        CForLoop[7571282]
        {
          ref call_tmp[7571321]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
          (7571323 'move' call_tmp[7571321](7571325 'array_get' coerce_tmp[7571314] i[7571241]))
          val coerce_tmp[7571328]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7571330 'move' coerce_tmp[7571328](7571333 call borrow[1817588] call_tmp[7571321]))
          val coerce_tmp[7571335]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7571337 'move' coerce_tmp[7571335](7571339 'cast' RootClass[236] coerce_tmp[7571328]))
          const-val call_tmp[7571342]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7571344 'move' call_tmp[7571342](7571346 '!=' coerce_tmp[7571335] nil[32]))
          if call_tmp[7571342]
          {
            ref i_lhs[7571358]:int(64)[10] "temp"
            (7571360 'move' i_lhs[7571358](7571362 'set reference' n[7570482]))
            (7571364 '+=' i_lhs[7571358] 1)
          }
          {
            (7571291 '=' i[7571241] 0)
          }
          {
            (7571302 '<=' i[7571241] _ic__F1_high[9019464])
          }
          {
            (7571306 '+=' i[7571241] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[7571368]
        label _endchpl_direct_counted_range_iter_helper[7571380]
        label _endchpl_direct_counted_range_iter[7571392]
        label _endthese[7571404]
      }
      {
        ref i_lhs[7571417]:int(64)[10] "temp"
        (7571419 'move' i_lhs[7571417](7571421 'set reference' n[7570482]))
        (7571423 '+=' i_lhs[7571417] 1)
      }
      (7571427 'move' while_borrow[7570487] curnext[7570518])
      val coerce_tmp[7571430]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7571432 'move' coerce_tmp[7571430](7571434 'cast' RootClass[236] curnext[7570518]))
      const-val call_tmp[7571437]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571439 'move' call_tmp[7571437](7571441 '!=' coerce_tmp[7571430] nil[32]))
      (7571444 'move' tmp[7570492] call_tmp[7571437])
      tmp[7570492]
    }
    (7571447 '.=' initTemp[1831357] nErrors[85768] n[7570482])
    const-val call_tmp[7571451]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7571453 'move' call_tmp[7571451](7571455 'cast' uint(64)[86] n[7570482]))
    const-val call_tmp[7571468]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7571470 'move' call_tmp[7571468](7571473 call sizeof[1818326] owned Error?[1498158]))
    const-val call_tmp[7571475]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7571477 'move' call_tmp[7571475](7571479 '*' call_tmp[7571451] call_tmp[7571468]))
    const-val tmp[7571492]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7571494 'move' tmp[7571492](7571496 '<' 0 0))
    val tmp[7571499]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7571492]
    {
      (7571503 'move' tmp[7571499] 1)
    }
    {
      const-val call_tmp[7571507]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571509 'move' call_tmp[7571507](7571511 'cast' uint(64)[86] 0))
      const-val call_tmp[7571514]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571516 'move' call_tmp[7571514](7571518 '!=' 0 call_tmp[7571507]))
      (7571521 'move' tmp[7571499] call_tmp[7571514])
    }
    val ptr[7571525]:c_ptr(void)[1465614] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[7571527]:c_ptr(void)[1465614] "dead at end of block" "temp"
    (7571529 '=' init_coerce_tmp[7571527](7571531 'cast' c_ptr(void)[1465614] nil[32]))
    (7571534 'move' ptr[7571525] init_coerce_tmp[7571527])
    const-val call_tmp[7571537]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7571539 'move' call_tmp[7571537](7571541 'u!' tmp[7571499]))
    if call_tmp[7571537]
    {
      (9276517 'noop')
      {
        const-val call_tmp[7571547]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
        (7571549 'move' call_tmp[7571547](7571552 call offset_ARRAY_ELEMENTS[50769]))
        val call_tmp[7571553]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
        (7571555 'move' call_tmp[7571553](7571558 call chpl_here_calloc[1818371] call_tmp[7571475] 1 call_tmp[7571547]))
        (7571562 '=' ptr[7571525] call_tmp[7571553])
      }
    }
    {
      const-val call_tmp[7571600]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571602 'move' call_tmp[7571600](7571605 call chpl_bitops_clz_64[1820112] 0))
      const-val call_tmp[7571607]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571609 'move' call_tmp[7571607](7571611 'cast' int(64)[10] call_tmp[7571600]))
      const-val call_tmp[7571614]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571616 'move' call_tmp[7571614](7571618 '-' 63 call_tmp[7571607]))
      const-val call_tmp[7571624]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571626 'move' call_tmp[7571624](7571628 '==' 1 0))
      if call_tmp[7571624]
      {
        (7571634 call halt[88131] "Attempt to divide by zero")
      }
      const-val call_tmp[7571637]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7571639 'move' call_tmp[7571637](7571641 '/' call_tmp[7571614] 1))
      val p[7571644]:int(64)[10] "dead at end of block" "insert auto destroy"
      (7571646 'move' p[7571644] call_tmp[7571637])
      const-val tmp[7571649]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7571651 'move' tmp[7571649](7571653 '<' call_tmp[7571637] 0))
      if tmp[7571649]
      {
        const-val call_tmp[7571658]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571660]:string[244] "temp"
        (7571663 call :[1721023] 1 ret_tmp[7571660])
        (7571666 'move' call_tmp[7571658] ret_tmp[7571660])
        const-val call_tmp[7571669]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571671]:string[244] "temp"
        (7571674 call +[28065] "Cannot bitshift " call_tmp[7571658] ret_tmp[7571671])
        (7571678 'move' call_tmp[7571669] ret_tmp[7571671])
        const-val call_tmp[7571681]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571683]:string[244] "temp"
        (7571686 call +[28065] call_tmp[7571669] " by " ret_tmp[7571683])
        (7571690 'move' call_tmp[7571681] ret_tmp[7571683])
        const-val call_tmp[7571693]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571695]:string[244] "temp"
        (7571698 call :[1496816] call_tmp[7571637] ret_tmp[7571695])
        (7571701 'move' call_tmp[7571693] ret_tmp[7571695])
        const-val call_tmp[7571704]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571706]:string[244] "temp"
        (7571709 call +[28065] call_tmp[7571681] call_tmp[7571693] ret_tmp[7571706])
        (7571713 'move' call_tmp[7571704] ret_tmp[7571706])
        const-val call_tmp[7571716]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571718]:string[244] "temp"
        (7571721 call +[28065] call_tmp[7571704] " because " ret_tmp[7571718])
        (7571725 'move' call_tmp[7571716] ret_tmp[7571718])
        const-val call_tmp[7571728]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571730]:string[244] "temp"
        (7571733 call :[1496816] call_tmp[7571637] ret_tmp[7571730])
        (7571736 'move' call_tmp[7571728] ret_tmp[7571730])
        const-val call_tmp[7571739]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7571741]:string[244] "temp"
        (7571744 call +[28065] call_tmp[7571716] call_tmp[7571728] ret_tmp[7571741])
        (7571748 'move' call_tmp[7571739] ret_tmp[7571741])
        const-val call_tmp[7571751]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7571753]:string[244] "temp"
        (7571756 call +[28065] call_tmp[7571739] " is less than 0" ret_tmp[7571753])
        (7571760 'move' call_tmp[7571751] ret_tmp[7571753])
        const-val msg[7571763]:string[244] "dead at end of block" "insert auto destroy"
        (7571765 'move' msg[7571763] call_tmp[7571751])
        ref i_x[7571768]:string[244] "temp"
        (7571770 'move' i_x[7571768](7571772 'set reference' call_tmp[7571739]))
        (7571775 call deinit[21354] i_x[7571768])
        ref i_x[7571777]:string[244] "temp"
        (7571779 'move' i_x[7571777](7571781 'set reference' call_tmp[7571728]))
        (7571784 call deinit[21354] i_x[7571777])
        ref i_x[7571786]:string[244] "temp"
        (7571788 'move' i_x[7571786](7571790 'set reference' call_tmp[7571716]))
        (7571793 call deinit[21354] i_x[7571786])
        ref i_x[7571795]:string[244] "temp"
        (7571797 'move' i_x[7571795](7571799 'set reference' call_tmp[7571704]))
        (7571802 call deinit[21354] i_x[7571795])
        ref i_x[7571804]:string[244] "temp"
        (7571806 'move' i_x[7571804](7571808 'set reference' call_tmp[7571693]))
        (7571811 call deinit[21354] i_x[7571804])
        ref i_x[7571813]:string[244] "temp"
        (7571815 'move' i_x[7571813](7571817 'set reference' call_tmp[7571681]))
        (7571820 call deinit[21354] i_x[7571813])
        ref i_x[7571822]:string[244] "temp"
        (7571824 'move' i_x[7571822](7571826 'set reference' call_tmp[7571669]))
        (7571829 call deinit[21354] i_x[7571822])
        ref i_x[7571831]:string[244] "temp"
        (7571833 'move' i_x[7571831](7571835 'set reference' call_tmp[7571658]))
        (7571838 call deinit[21354] i_x[7571831])
        (7571841 call boundsCheckHalt[404] msg[7571763])
        ref i_x[7571843]:string[244] "temp"
        (7571845 'move' i_x[7571843](7571847 'set reference' msg[7571763]))
        (7571850 call deinit[21354] i_x[7571843])
      }
      {
        const-val call_tmp[7571853]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7571855 'move' call_tmp[7571853](7571857 '>=' call_tmp[7571637] 64))
        if call_tmp[7571853]
        {
          const-val call_tmp[7571862]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571864]:string[244] "temp"
          (7571867 call :[1721023] 1 ret_tmp[7571864])
          (7571870 'move' call_tmp[7571862] ret_tmp[7571864])
          const-val call_tmp[7571873]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571875]:string[244] "temp"
          (7571878 call +[28065] "Cannot bitshift " call_tmp[7571862] ret_tmp[7571875])
          (7571882 'move' call_tmp[7571873] ret_tmp[7571875])
          const-val call_tmp[7571885]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571887]:string[244] "temp"
          (7571890 call +[28065] call_tmp[7571873] " by " ret_tmp[7571887])
          (7571894 'move' call_tmp[7571885] ret_tmp[7571887])
          const-val call_tmp[7571897]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571899]:string[244] "temp"
          (7571902 call :[1496816] call_tmp[7571637] ret_tmp[7571899])
          (7571905 'move' call_tmp[7571897] ret_tmp[7571899])
          const-val call_tmp[7571908]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571910]:string[244] "temp"
          (7571913 call +[28065] call_tmp[7571885] call_tmp[7571897] ret_tmp[7571910])
          (7571917 'move' call_tmp[7571908] ret_tmp[7571910])
          const-val call_tmp[7571920]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571922]:string[244] "temp"
          (7571925 call +[28065] call_tmp[7571908] " because " ret_tmp[7571922])
          (7571929 'move' call_tmp[7571920] ret_tmp[7571922])
          const-val call_tmp[7571932]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571934]:string[244] "temp"
          (7571937 call :[1496816] call_tmp[7571637] ret_tmp[7571934])
          (7571940 'move' call_tmp[7571932] ret_tmp[7571934])
          const-val call_tmp[7571943]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571945]:string[244] "temp"
          (7571948 call +[28065] call_tmp[7571920] call_tmp[7571932] ret_tmp[7571945])
          (7571952 'move' call_tmp[7571943] ret_tmp[7571945])
          const-val call_tmp[7571955]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7571957]:string[244] "temp"
          (7571960 call +[28065] call_tmp[7571943] " is >= the bitwidth of " ret_tmp[7571957])
          (7571964 'move' call_tmp[7571955] ret_tmp[7571957])
          const-val call_tmp[7571967]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7571969]:string[244] "temp"
          (7571972 call +[28065] call_tmp[7571955] "uint(64)" ret_tmp[7571969])
          (7571976 'move' call_tmp[7571967] ret_tmp[7571969])
          const-val msg[7571979]:string[244] "dead at end of block" "insert auto destroy"
          (7571981 'move' msg[7571979] call_tmp[7571967])
          ref i_x[7571984]:string[244] "temp"
          (7571986 'move' i_x[7571984](7571988 'set reference' call_tmp[7571955]))
          (7571991 call deinit[21354] i_x[7571984])
          ref i_x[7571993]:string[244] "temp"
          (7571995 'move' i_x[7571993](7571997 'set reference' call_tmp[7571943]))
          (7572000 call deinit[21354] i_x[7571993])
          ref i_x[7572002]:string[244] "temp"
          (7572004 'move' i_x[7572002](7572006 'set reference' call_tmp[7571932]))
          (7572009 call deinit[21354] i_x[7572002])
          ref i_x[7572011]:string[244] "temp"
          (7572013 'move' i_x[7572011](7572015 'set reference' call_tmp[7571920]))
          (7572018 call deinit[21354] i_x[7572011])
          ref i_x[7572020]:string[244] "temp"
          (7572022 'move' i_x[7572020](7572024 'set reference' call_tmp[7571908]))
          (7572027 call deinit[21354] i_x[7572020])
          ref i_x[7572029]:string[244] "temp"
          (7572031 'move' i_x[7572029](7572033 'set reference' call_tmp[7571897]))
          (7572036 call deinit[21354] i_x[7572029])
          ref i_x[7572038]:string[244] "temp"
          (7572040 'move' i_x[7572038](7572042 'set reference' call_tmp[7571885]))
          (7572045 call deinit[21354] i_x[7572038])
          ref i_x[7572047]:string[244] "temp"
          (7572049 'move' i_x[7572047](7572051 'set reference' call_tmp[7571873]))
          (7572054 call deinit[21354] i_x[7572047])
          ref i_x[7572056]:string[244] "temp"
          (7572058 'move' i_x[7572056](7572060 'set reference' call_tmp[7571862]))
          (7572063 call deinit[21354] i_x[7572056])
          (7572066 call boundsCheckHalt[404] msg[7571979])
          ref i_x[7572068]:string[244] "temp"
          (7572070 'move' i_x[7572068](7572072 'set reference' msg[7571979]))
          (7572075 call deinit[21354] i_x[7572068])
        }
      }
      const-val call_tmp[7572079]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7572081 'move' call_tmp[7572079](7572083 '<<' 1 call_tmp[7571637]))
      const-val tmp[7572086]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7572088 'move' tmp[7572086](7572090 '<' call_tmp[7572079] 0))
      if tmp[7572086]
      {
        ref i_lhs[7572095]:int(64)[10] "temp"
        (7572097 'move' i_lhs[7572095](7572099 'set reference' p[7571644]))
        (7572101 '+=' i_lhs[7572095] 1)
      }
      const-val tmp[7572105]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7572107 'move' tmp[7572105](7572109 '<' p[7571644] 0))
      if tmp[7572105]
      {
        const-val call_tmp[7572114]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572116]:string[244] "temp"
        (7572119 call :[1721023] 1 ret_tmp[7572116])
        (7572122 'move' call_tmp[7572114] ret_tmp[7572116])
        const-val call_tmp[7572125]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572127]:string[244] "temp"
        (7572130 call +[28065] "Cannot bitshift " call_tmp[7572114] ret_tmp[7572127])
        (7572134 'move' call_tmp[7572125] ret_tmp[7572127])
        const-val call_tmp[7572137]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572139]:string[244] "temp"
        (7572142 call +[28065] call_tmp[7572125] " by " ret_tmp[7572139])
        (7572146 'move' call_tmp[7572137] ret_tmp[7572139])
        const-val call_tmp[7572149]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572151]:string[244] "temp"
        (7572154 call :[1496816] p[7571644] ret_tmp[7572151])
        (7572157 'move' call_tmp[7572149] ret_tmp[7572151])
        const-val call_tmp[7572160]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572162]:string[244] "temp"
        (7572165 call +[28065] call_tmp[7572137] call_tmp[7572149] ret_tmp[7572162])
        (7572169 'move' call_tmp[7572160] ret_tmp[7572162])
        const-val call_tmp[7572172]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572174]:string[244] "temp"
        (7572177 call +[28065] call_tmp[7572160] " because " ret_tmp[7572174])
        (7572181 'move' call_tmp[7572172] ret_tmp[7572174])
        const-val call_tmp[7572184]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572186]:string[244] "temp"
        (7572189 call :[1496816] p[7571644] ret_tmp[7572186])
        (7572192 'move' call_tmp[7572184] ret_tmp[7572186])
        const-val call_tmp[7572195]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572197]:string[244] "temp"
        (7572200 call +[28065] call_tmp[7572172] call_tmp[7572184] ret_tmp[7572197])
        (7572204 'move' call_tmp[7572195] ret_tmp[7572197])
        const-val call_tmp[7572207]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7572209]:string[244] "temp"
        (7572212 call +[28065] call_tmp[7572195] " is less than 0" ret_tmp[7572209])
        (7572216 'move' call_tmp[7572207] ret_tmp[7572209])
        const-val msg[7572219]:string[244] "dead at end of block" "insert auto destroy"
        (7572221 'move' msg[7572219] call_tmp[7572207])
        ref i_x[7572224]:string[244] "temp"
        (7572226 'move' i_x[7572224](7572228 'set reference' call_tmp[7572195]))
        (7572231 call deinit[21354] i_x[7572224])
        ref i_x[7572233]:string[244] "temp"
        (7572235 'move' i_x[7572233](7572237 'set reference' call_tmp[7572184]))
        (7572240 call deinit[21354] i_x[7572233])
        ref i_x[7572242]:string[244] "temp"
        (7572244 'move' i_x[7572242](7572246 'set reference' call_tmp[7572172]))
        (7572249 call deinit[21354] i_x[7572242])
        ref i_x[7572251]:string[244] "temp"
        (7572253 'move' i_x[7572251](7572255 'set reference' call_tmp[7572160]))
        (7572258 call deinit[21354] i_x[7572251])
        ref i_x[7572260]:string[244] "temp"
        (7572262 'move' i_x[7572260](7572264 'set reference' call_tmp[7572149]))
        (7572267 call deinit[21354] i_x[7572260])
        ref i_x[7572269]:string[244] "temp"
        (7572271 'move' i_x[7572269](7572273 'set reference' call_tmp[7572137]))
        (7572276 call deinit[21354] i_x[7572269])
        ref i_x[7572278]:string[244] "temp"
        (7572280 'move' i_x[7572278](7572282 'set reference' call_tmp[7572125]))
        (7572285 call deinit[21354] i_x[7572278])
        ref i_x[7572287]:string[244] "temp"
        (7572289 'move' i_x[7572287](7572291 'set reference' call_tmp[7572114]))
        (7572294 call deinit[21354] i_x[7572287])
        (7572297 call boundsCheckHalt[404] msg[7572219])
        ref i_x[7572299]:string[244] "temp"
        (7572301 'move' i_x[7572299](7572303 'set reference' msg[7572219]))
        (7572306 call deinit[21354] i_x[7572299])
      }
      {
        const-val call_tmp[7572309]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7572311 'move' call_tmp[7572309](7572313 '>=' p[7571644] 64))
        if call_tmp[7572309]
        {
          const-val call_tmp[7572318]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572320]:string[244] "temp"
          (7572323 call :[1721023] 1 ret_tmp[7572320])
          (7572326 'move' call_tmp[7572318] ret_tmp[7572320])
          const-val call_tmp[7572329]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572331]:string[244] "temp"
          (7572334 call +[28065] "Cannot bitshift " call_tmp[7572318] ret_tmp[7572331])
          (7572338 'move' call_tmp[7572329] ret_tmp[7572331])
          const-val call_tmp[7572341]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572343]:string[244] "temp"
          (7572346 call +[28065] call_tmp[7572329] " by " ret_tmp[7572343])
          (7572350 'move' call_tmp[7572341] ret_tmp[7572343])
          const-val call_tmp[7572353]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572355]:string[244] "temp"
          (7572358 call :[1496816] p[7571644] ret_tmp[7572355])
          (7572361 'move' call_tmp[7572353] ret_tmp[7572355])
          const-val call_tmp[7572364]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572366]:string[244] "temp"
          (7572369 call +[28065] call_tmp[7572341] call_tmp[7572353] ret_tmp[7572366])
          (7572373 'move' call_tmp[7572364] ret_tmp[7572366])
          const-val call_tmp[7572376]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572378]:string[244] "temp"
          (7572381 call +[28065] call_tmp[7572364] " because " ret_tmp[7572378])
          (7572385 'move' call_tmp[7572376] ret_tmp[7572378])
          const-val call_tmp[7572388]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572390]:string[244] "temp"
          (7572393 call :[1496816] p[7571644] ret_tmp[7572390])
          (7572396 'move' call_tmp[7572388] ret_tmp[7572390])
          const-val call_tmp[7572399]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572401]:string[244] "temp"
          (7572404 call +[28065] call_tmp[7572376] call_tmp[7572388] ret_tmp[7572401])
          (7572408 'move' call_tmp[7572399] ret_tmp[7572401])
          const-val call_tmp[7572411]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572413]:string[244] "temp"
          (7572416 call +[28065] call_tmp[7572399] " is >= the bitwidth of " ret_tmp[7572413])
          (7572420 'move' call_tmp[7572411] ret_tmp[7572413])
          const-val call_tmp[7572423]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7572425]:string[244] "temp"
          (7572428 call +[28065] call_tmp[7572411] "uint(64)" ret_tmp[7572425])
          (7572432 'move' call_tmp[7572423] ret_tmp[7572425])
          const-val msg[7572435]:string[244] "dead at end of block" "insert auto destroy"
          (7572437 'move' msg[7572435] call_tmp[7572423])
          ref i_x[7572440]:string[244] "temp"
          (7572442 'move' i_x[7572440](7572444 'set reference' call_tmp[7572411]))
          (7572447 call deinit[21354] i_x[7572440])
          ref i_x[7572449]:string[244] "temp"
          (7572451 'move' i_x[7572449](7572453 'set reference' call_tmp[7572399]))
          (7572456 call deinit[21354] i_x[7572449])
          ref i_x[7572458]:string[244] "temp"
          (7572460 'move' i_x[7572458](7572462 'set reference' call_tmp[7572388]))
          (7572465 call deinit[21354] i_x[7572458])
          ref i_x[7572467]:string[244] "temp"
          (7572469 'move' i_x[7572467](7572471 'set reference' call_tmp[7572376]))
          (7572474 call deinit[21354] i_x[7572467])
          ref i_x[7572476]:string[244] "temp"
          (7572478 'move' i_x[7572476](7572480 'set reference' call_tmp[7572364]))
          (7572483 call deinit[21354] i_x[7572476])
          ref i_x[7572485]:string[244] "temp"
          (7572487 'move' i_x[7572485](7572489 'set reference' call_tmp[7572353]))
          (7572492 call deinit[21354] i_x[7572485])
          ref i_x[7572494]:string[244] "temp"
          (7572496 'move' i_x[7572494](7572498 'set reference' call_tmp[7572341]))
          (7572501 call deinit[21354] i_x[7572494])
          ref i_x[7572503]:string[244] "temp"
          (7572505 'move' i_x[7572503](7572507 'set reference' call_tmp[7572329]))
          (7572510 call deinit[21354] i_x[7572503])
          ref i_x[7572512]:string[244] "temp"
          (7572514 'move' i_x[7572512](7572516 'set reference' call_tmp[7572318]))
          (7572519 call deinit[21354] i_x[7572512])
          (7572522 call boundsCheckHalt[404] msg[7572435])
          ref i_x[7572524]:string[244] "temp"
          (7572526 'move' i_x[7572524](7572528 'set reference' msg[7572435]))
          (7572531 call deinit[21354] i_x[7572524])
        }
      }
      const-val call_tmp[7572535]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7572537 'move' call_tmp[7572535](7572539 '<<' 1 p[7571644]))
      const-val call_tmp[7572542]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7572544 'move' call_tmp[7572542](7572546 '<=' 0 call_tmp[7572535]))
      (7572550 call assert[87867] call_tmp[7572542])
      const-val tmp[7572552]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7572554 'move' tmp[7572552](7572556 '<' p[7571644] 0))
      if tmp[7572552]
      {
        const-val call_tmp[7572561]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572563]:string[244] "temp"
        (7572566 call :[1721023] 1 ret_tmp[7572563])
        (7572569 'move' call_tmp[7572561] ret_tmp[7572563])
        const-val call_tmp[7572572]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572574]:string[244] "temp"
        (7572577 call +[28065] "Cannot bitshift " call_tmp[7572561] ret_tmp[7572574])
        (7572581 'move' call_tmp[7572572] ret_tmp[7572574])
        const-val call_tmp[7572584]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572586]:string[244] "temp"
        (7572589 call +[28065] call_tmp[7572572] " by " ret_tmp[7572586])
        (7572593 'move' call_tmp[7572584] ret_tmp[7572586])
        const-val call_tmp[7572596]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572598]:string[244] "temp"
        (7572601 call :[1496816] p[7571644] ret_tmp[7572598])
        (7572604 'move' call_tmp[7572596] ret_tmp[7572598])
        const-val call_tmp[7572607]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572609]:string[244] "temp"
        (7572612 call +[28065] call_tmp[7572584] call_tmp[7572596] ret_tmp[7572609])
        (7572616 'move' call_tmp[7572607] ret_tmp[7572609])
        const-val call_tmp[7572619]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572621]:string[244] "temp"
        (7572624 call +[28065] call_tmp[7572607] " because " ret_tmp[7572621])
        (7572628 'move' call_tmp[7572619] ret_tmp[7572621])
        const-val call_tmp[7572631]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572633]:string[244] "temp"
        (7572636 call :[1496816] p[7571644] ret_tmp[7572633])
        (7572639 'move' call_tmp[7572631] ret_tmp[7572633])
        const-val call_tmp[7572642]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7572644]:string[244] "temp"
        (7572647 call +[28065] call_tmp[7572619] call_tmp[7572631] ret_tmp[7572644])
        (7572651 'move' call_tmp[7572642] ret_tmp[7572644])
        const-val call_tmp[7572654]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7572656]:string[244] "temp"
        (7572659 call +[28065] call_tmp[7572642] " is less than 0" ret_tmp[7572656])
        (7572663 'move' call_tmp[7572654] ret_tmp[7572656])
        const-val msg[7572666]:string[244] "dead at end of block" "insert auto destroy"
        (7572668 'move' msg[7572666] call_tmp[7572654])
        ref i_x[7572671]:string[244] "temp"
        (7572673 'move' i_x[7572671](7572675 'set reference' call_tmp[7572642]))
        (7572678 call deinit[21354] i_x[7572671])
        ref i_x[7572680]:string[244] "temp"
        (7572682 'move' i_x[7572680](7572684 'set reference' call_tmp[7572631]))
        (7572687 call deinit[21354] i_x[7572680])
        ref i_x[7572689]:string[244] "temp"
        (7572691 'move' i_x[7572689](7572693 'set reference' call_tmp[7572619]))
        (7572696 call deinit[21354] i_x[7572689])
        ref i_x[7572698]:string[244] "temp"
        (7572700 'move' i_x[7572698](7572702 'set reference' call_tmp[7572607]))
        (7572705 call deinit[21354] i_x[7572698])
        ref i_x[7572707]:string[244] "temp"
        (7572709 'move' i_x[7572707](7572711 'set reference' call_tmp[7572596]))
        (7572714 call deinit[21354] i_x[7572707])
        ref i_x[7572716]:string[244] "temp"
        (7572718 'move' i_x[7572716](7572720 'set reference' call_tmp[7572584]))
        (7572723 call deinit[21354] i_x[7572716])
        ref i_x[7572725]:string[244] "temp"
        (7572727 'move' i_x[7572725](7572729 'set reference' call_tmp[7572572]))
        (7572732 call deinit[21354] i_x[7572725])
        ref i_x[7572734]:string[244] "temp"
        (7572736 'move' i_x[7572734](7572738 'set reference' call_tmp[7572561]))
        (7572741 call deinit[21354] i_x[7572734])
        (7572744 call boundsCheckHalt[404] msg[7572666])
        ref i_x[7572746]:string[244] "temp"
        (7572748 'move' i_x[7572746](7572750 'set reference' msg[7572666]))
        (7572753 call deinit[21354] i_x[7572746])
      }
      {
        const-val call_tmp[7572756]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7572758 'move' call_tmp[7572756](7572760 '>=' p[7571644] 64))
        if call_tmp[7572756]
        {
          const-val call_tmp[7572765]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572767]:string[244] "temp"
          (7572770 call :[1721023] 1 ret_tmp[7572767])
          (7572773 'move' call_tmp[7572765] ret_tmp[7572767])
          const-val call_tmp[7572776]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572778]:string[244] "temp"
          (7572781 call +[28065] "Cannot bitshift " call_tmp[7572765] ret_tmp[7572778])
          (7572785 'move' call_tmp[7572776] ret_tmp[7572778])
          const-val call_tmp[7572788]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572790]:string[244] "temp"
          (7572793 call +[28065] call_tmp[7572776] " by " ret_tmp[7572790])
          (7572797 'move' call_tmp[7572788] ret_tmp[7572790])
          const-val call_tmp[7572800]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572802]:string[244] "temp"
          (7572805 call :[1496816] p[7571644] ret_tmp[7572802])
          (7572808 'move' call_tmp[7572800] ret_tmp[7572802])
          const-val call_tmp[7572811]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572813]:string[244] "temp"
          (7572816 call +[28065] call_tmp[7572788] call_tmp[7572800] ret_tmp[7572813])
          (7572820 'move' call_tmp[7572811] ret_tmp[7572813])
          const-val call_tmp[7572823]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572825]:string[244] "temp"
          (7572828 call +[28065] call_tmp[7572811] " because " ret_tmp[7572825])
          (7572832 'move' call_tmp[7572823] ret_tmp[7572825])
          const-val call_tmp[7572835]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572837]:string[244] "temp"
          (7572840 call :[1496816] p[7571644] ret_tmp[7572837])
          (7572843 'move' call_tmp[7572835] ret_tmp[7572837])
          const-val call_tmp[7572846]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572848]:string[244] "temp"
          (7572851 call +[28065] call_tmp[7572823] call_tmp[7572835] ret_tmp[7572848])
          (7572855 'move' call_tmp[7572846] ret_tmp[7572848])
          const-val call_tmp[7572858]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7572860]:string[244] "temp"
          (7572863 call +[28065] call_tmp[7572846] " is >= the bitwidth of " ret_tmp[7572860])
          (7572867 'move' call_tmp[7572858] ret_tmp[7572860])
          const-val call_tmp[7572870]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7572872]:string[244] "temp"
          (7572875 call +[28065] call_tmp[7572858] "uint(64)" ret_tmp[7572872])
          (7572879 'move' call_tmp[7572870] ret_tmp[7572872])
          const-val msg[7572882]:string[244] "dead at end of block" "insert auto destroy"
          (7572884 'move' msg[7572882] call_tmp[7572870])
          ref i_x[7572887]:string[244] "temp"
          (7572889 'move' i_x[7572887](7572891 'set reference' call_tmp[7572858]))
          (7572894 call deinit[21354] i_x[7572887])
          ref i_x[7572896]:string[244] "temp"
          (7572898 'move' i_x[7572896](7572900 'set reference' call_tmp[7572846]))
          (7572903 call deinit[21354] i_x[7572896])
          ref i_x[7572905]:string[244] "temp"
          (7572907 'move' i_x[7572905](7572909 'set reference' call_tmp[7572835]))
          (7572912 call deinit[21354] i_x[7572905])
          ref i_x[7572914]:string[244] "temp"
          (7572916 'move' i_x[7572914](7572918 'set reference' call_tmp[7572823]))
          (7572921 call deinit[21354] i_x[7572914])
          ref i_x[7572923]:string[244] "temp"
          (7572925 'move' i_x[7572923](7572927 'set reference' call_tmp[7572811]))
          (7572930 call deinit[21354] i_x[7572923])
          ref i_x[7572932]:string[244] "temp"
          (7572934 'move' i_x[7572932](7572936 'set reference' call_tmp[7572800]))
          (7572939 call deinit[21354] i_x[7572932])
          ref i_x[7572941]:string[244] "temp"
          (7572943 'move' i_x[7572941](7572945 'set reference' call_tmp[7572788]))
          (7572948 call deinit[21354] i_x[7572941])
          ref i_x[7572950]:string[244] "temp"
          (7572952 'move' i_x[7572950](7572954 'set reference' call_tmp[7572776]))
          (7572957 call deinit[21354] i_x[7572950])
          ref i_x[7572959]:string[244] "temp"
          (7572961 'move' i_x[7572959](7572963 'set reference' call_tmp[7572765]))
          (7572966 call deinit[21354] i_x[7572959])
          (7572969 call boundsCheckHalt[404] msg[7572882])
          ref i_x[7572971]:string[244] "temp"
          (7572973 'move' i_x[7572971](7572975 'set reference' msg[7572882]))
          (7572978 call deinit[21354] i_x[7572971])
        }
      }
      const-val call_tmp[7572982]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7572984 'move' call_tmp[7572982](7572986 '<<' 1 p[7571644]))
      const-val call_tmp[7572989]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7572991 'move' call_tmp[7572989](7572993 '!=' 0 call_tmp[7572982]))
      if call_tmp[7572989]
      {
        (7572999 call halt[1821083] "allocate called with non-power-of-2 alignment " 0)
      }
      const-val call_tmp[7573003]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7573005 'move' call_tmp[7573003](7573008 call sizeof[1521716] c_ptr(void)[1465614]))
      const-val tmp[7573010]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7573012 'move' tmp[7573010](7573014 '<' 0 call_tmp[7573003]))
      if tmp[7573010]
      {
        (7573020 call halt[88131] "allocate called with alignment smaller than pointer size")
      }
      const-val call_tmp[7573023]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
      (7573025 'move' call_tmp[7573023](7573028 call offset_ARRAY_ELEMENTS[50769]))
      val call_tmp[7573029]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
      (7573031 'move' call_tmp[7573029](7573034 call chpl_here_aligned_alloc[1827971] 0 call_tmp[7571475] call_tmp[7573023]))
      (7573038 '=' ptr[7571525] call_tmp[7573029])
      (9276518 'noop')
      {
        val inlineImm[7573043]:int(64)[10] "temp"
        (7573045 'move' inlineImm[7573043] 0)
        const-val call_tmp[7573048]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7573050]:owned IllegalArgumentError?[1471812] "temp"
        (7573053 call chpl_checkValue[1535618] 0 ret_tmp[7573050])
        (7573056 'move' call_tmp[7573048] ret_tmp[7573050])
        ref i_arg[7573061]:owned IllegalArgumentError?[1471812] "temp"
        (7573063 'move' i_arg[7573061](7573065 'set reference' call_tmp[7573048]))
        val call_tmp[7573067]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573069 'move' call_tmp[7573067](7573072 call borrow[1479886] i_arg[7573061]))
        val coerce_tmp[7573077]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7573079 'move' coerce_tmp[7573077](7573081 'cast' RootClass[236] call_tmp[7573067]))
        const-val call_tmp[7573084]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573086 'move' call_tmp[7573084](7573088 '!=' coerce_tmp[7573077] nil[32]))
        if call_tmp[7573084]
        {
          const-val call_tmp[7573093]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[7573095]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7573097 'move' coerce_tmp[7573095](7573099 'cast' Error[85511] call_tmp[7573067]))
          val _virtual_method_tmp_[7573102]:int(32)[66] "temp"
          (7573104 'move' _virtual_method_tmp_[7573102](7573106 'getcid' coerce_tmp[7573095]))
          val ret_tmp[7573108]:string[244] "temp"
          (7573110 'virtual method call' message[85497] _virtual_method_tmp_[7573102] coerce_tmp[7573095] ret_tmp[7573108])
          (7573115 'move' call_tmp[7573093] ret_tmp[7573108])
          (7573119 call safeCastCheckHalt[440] call_tmp[7573093])
          ref i_x[7573121]:string[244] "temp"
          (7573123 'move' i_x[7573121](7573125 'set reference' call_tmp[7573093]))
          (7573128 call deinit[21354] i_x[7573121])
        }
        (7573132 call chpl__autoDestroy[3929258] call_tmp[7573048])
        const-val call_tmp[7573134]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573136 'move' call_tmp[7573134](7573138 'cast' int(32)[66] inlineImm[7573043]))
        (7573142 call memset[1828140] call_tmp[7573029] call_tmp[7573134] call_tmp[7571475])
      }
    }
    val call_tmp[7573148]:c_ptr(owned Error?)[1805608] "dead after last mention" "expr temp" "maybe param" "temp"
    (7573150 'move' call_tmp[7573148](7573152 'cast' c_ptr(owned Error?)[1805608] ptr[7571525]))
    (7573155 '.=' initTemp[1831357] errorsArray[85773] call_tmp[7573148])
    val idx[7573159]:int(64)[10] "dead at end of block" "insert auto destroy"
    (7573161 'move' idx[7573159] 0)
    val while_borrow[7573164]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (7573166 'move' while_borrow[7573164] head[7570441])
    val tmp[7573169]:bool[19] "dead after last mention" "temp"
    val coerce_tmp[7573171]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7573173 'move' coerce_tmp[7573171](7573175 'cast' RootClass[236] head[7570441]))
    const-val call_tmp[7573178]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7573180 'move' call_tmp[7573178](7573182 '!=' coerce_tmp[7573171] nil[32]))
    (7573185 'move' tmp[7573169] call_tmp[7573178])
    WhileDo[7573188]
    {
      val coerce_tmp[7573195]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7573197 'move' coerce_tmp[7573195] while_borrow[7573164])
      val curnext[7573200]:Error[85511] "dead at end of block" "insert auto destroy"
      val coerce_tmp[7573202]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (7573204 'move' coerce_tmp[7573202](7573206 '.v' coerce_tmp[7573195] _next[85434]))
      (7573209 '=' curnext[7573200] coerce_tmp[7573202])
      (7573212 'noop')
      val coerce_tmp[7573213]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7573215 'move' coerce_tmp[7573213] while_borrow[7573164])
      val tmp[7573218]:Error[85511] "temp"
      (7573220 'move' tmp[7573218](7573222 'cast' Error[85511] nil[32]))
      (7573225 '.=' coerce_tmp[7573213] _next[85434] tmp[7573218])
      val _formal_type_tmp_[7573234]:TaskErrors[87096] "temp"
      val ret[7573236]:TaskErrors[87096] "dead after last mention" "RVV" "temp"
      val coerce_tmp[7573238]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7573240 'move' coerce_tmp[7573238](7573242 'cast' RootClass[236] while_borrow[7573164]))
      const-val call_tmp[7573245]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7573247 'move' call_tmp[7573245](7573249 '==' coerce_tmp[7573238] nil[32]))
      if call_tmp[7573245]
      {
        (7573254 '=' ret[7573236](7573256 'cast' TaskErrors[87096] nil[32]))
        gotoReturn _end_:[7573272] _end_:[7573272]
      }
      val call_tmp[7573262]:TaskErrors[87096] "dead after last mention" "maybe param" "temp"
      (7573264 'move' call_tmp[7573262](7573266 'dynamic_cast' _formal_type_tmp_[7573234] while_borrow[7573164]))
      (7573269 'move' ret[7573236] call_tmp[7573262])
      label _end_:[7573272]
      val coerce_tmp[7573279]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7573281 'move' coerce_tmp[7573279](7573283 'cast' RootClass[236] ret[7573236]))
      const-val call_tmp[7573286]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7573288 'move' call_tmp[7573286](7573290 '!=' coerce_tmp[7573279] nil[32]))
      if call_tmp[7573286]
      {
        const asTaskErr[7573295]:TaskErrors[87096] "const"
        (7573297 'move' asTaskErr[7573295] ret[7573236])
        const-val call_tmp[7573300]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7573302]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573304 'move' call_tmp[7573302](7573307 call chpl_nodeID[305038]))
        const-val call_tmp[7573308]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        (7573310 'move' call_tmp[7573308](7573313 call chpl_rt_buildLocaleID[306484] call_tmp[7573302] c_sublocid_any[135202]))
        (7573316 'move' call_tmp[7573300] call_tmp[7573308])
        const-val call_tmp[7573319]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7573321]:locale[234] "temp"
        (7573324 call chpl_localeID_to_locale[137251] call_tmp[7573300] ret_tmp[7573321])
        (7573327 'move' call_tmp[7573319] ret_tmp[7573321])
        const-val origLoc[7573330]:locale[234] "dead at end of block" "const" "insert auto destroy"
        (7573332 'move' origLoc[7573330] call_tmp[7573319])
        const EA[7573335]:c_ptr(owned Error?)[1805608] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[7573337]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (7573339 'move' coerce_tmp[7573337](7573341 '.v' initTemp[1831357] errorsArray[85773]))
        (7573344 '=' EA[7573335] coerce_tmp[7573337])
        (7573347 'noop')
        ref i_x[7573348]:int(64)[10] "temp"
        (7573350 'move' i_x[7573348](7573352 'set reference' idx[7573159]))
        val call_tmp[7573354]:c_ptr(int(64))[1828691] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573356 'move' call_tmp[7573354](7573359 call c_pointer_return[1828772] i_x[7573348]))
        const idxPtr[7573361]:c_ptr(int(64))[1828691] "dead at end of block" "const" "insert auto destroy"
        (7573363 'move' idxPtr[7573361] call_tmp[7573354])
        const-val this[7573425]:TaskErrors[87096] "temp"
        (7573427 'move' this[7573425] ret[7573236])
        const-val call_tmp[7573432]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573441 'move' call_tmp[7573432](7573443 '_wide_get_node' ret[7573236]))
        const-val call_tmp[7573445]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7573447]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7573449]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573451 'move' call_tmp[7573449](7573454 call chpl_nodeID[305038]))
        const-val call_tmp[7573455]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        (7573457 'move' call_tmp[7573455](7573460 call chpl_rt_buildLocaleID[306484] call_tmp[7573449] c_sublocid_any[135202]))
        (7573463 'move' call_tmp[7573447] call_tmp[7573455])
        const-val call_tmp[7573466]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7573468]:locale[234] "temp"
        (7573471 call chpl_localeID_to_locale[137251] call_tmp[7573447] ret_tmp[7573468])
        (7573474 'move' call_tmp[7573466] ret_tmp[7573468])
        (7573477 'move' call_tmp[7573445] call_tmp[7573466])
        val coerce_tmp[7573480]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7573482 'move' coerce_tmp[7573480](7573484 '.v' call_tmp[7573445] _instance[135293]))
        val coerce_tmp[7573487]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7573489 'move' coerce_tmp[7573487](7573491 'cast' RootClass[236] coerce_tmp[7573480]))
        const-val call_tmp[7573494]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573496 'move' call_tmp[7573494](7573498 '==' coerce_tmp[7573487] nil[32]))
        if call_tmp[7573494]
        {
          (7573504 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7573507]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573509 'move' call_tmp[7573507](7573512 call id[135878] coerce_tmp[7573480]))
        const-val coerce_tmp[7573516]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7573518 'move' coerce_tmp[7573516](7573520 'cast' int(64)[10] call_tmp[7573432]))
        const-val call_tmp[7573523]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573525 'move' call_tmp[7573523](7573527 '==' coerce_tmp[7573516] call_tmp[7573507]))
        const-val call_tmp[7573533]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573542 'move' call_tmp[7573533](7573544 '_wide_get_node' ret[7573236]))
        const-val call_tmp[7573546]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7573548]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val call_tmp[7573550]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573552 'move' call_tmp[7573550](7573555 call chpl_nodeID[305038]))
        const-val call_tmp[7573556]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        (7573558 'move' call_tmp[7573556](7573561 call chpl_rt_buildLocaleID[306484] call_tmp[7573550] c_sublocid_any[135202]))
        (7573564 'move' call_tmp[7573548] call_tmp[7573556])
        const-val call_tmp[7573567]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7573569]:locale[234] "temp"
        (7573572 call chpl_localeID_to_locale[137251] call_tmp[7573548] ret_tmp[7573569])
        (7573575 'move' call_tmp[7573567] ret_tmp[7573569])
        (7573578 'move' call_tmp[7573546] call_tmp[7573567])
        val coerce_tmp[7573581]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7573583 'move' coerce_tmp[7573581](7573585 '.v' call_tmp[7573546] _instance[135293]))
        val coerce_tmp[7573588]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7573590 'move' coerce_tmp[7573588](7573592 'cast' RootClass[236] coerce_tmp[7573581]))
        const-val call_tmp[7573595]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573597 'move' call_tmp[7573595](7573599 '==' coerce_tmp[7573588] nil[32]))
        if call_tmp[7573595]
        {
          (7573605 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7573608]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573610 'move' call_tmp[7573608](7573613 call id[135878] coerce_tmp[7573581]))
        (7573616 call assert[1809366] call_tmp[7573523] "iterating over a TaskErrors object allocated on locale " call_tmp[7573533] " while being on locale " call_tmp[7573608])
        ref i_x[7573622]:locale[234] "temp"
        (7573624 'move' i_x[7573622](7573626 'set reference' call_tmp[7573546]))
        (7573629 call deinit[135483] i_x[7573622])
        ref i_x[7573631]:locale[234] "temp"
        (7573633 'move' i_x[7573631](7573635 'set reference' call_tmp[7573445]))
        (7573638 call deinit[135483] i_x[7573631])
        const-val this[7573642]:TaskErrors[87096] "temp"
        (7573644 'move' this[7573642] ret[7573236])
        const-val coerce_tmp[7573651]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (7573653 'move' coerce_tmp[7573651](7573655 '.v' this[7573642] nErrors[85768]))
        val inlineImm[7573658]:int(64)[10] "temp"
        (7573660 'move' inlineImm[7573658] 0)
        val taskInd_this[7573733]:TaskErrors[87096] "task private variable"
        (7573735 'move' taskInd_this[7573733] this[7573425])
        val inlineImm[7573834]:int(64)[10] "temp"
        (7573836 'move' inlineImm[7573834] 0)
        const-val tmp[7573839]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7573841 'move' tmp[7573839](7573843 '<' coerce_tmp[7573651] inlineImm[7573834]))
        if tmp[7573839]
        {
          (7573849 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
        }
        val tmp[7573864]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        val inlineImm[7573873]:int(64)[10] "temp"
        (7573875 'move' inlineImm[7573873] 0)
        const-val call_tmp[7573878]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7573880 'move' call_tmp[7573878](7573882 '==' coerce_tmp[7573651] inlineImm[7573873]))
        if call_tmp[7573878]
        {
          const-val call_tmp[7573887]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (7573896 'move' call_tmp[7573887](7573898 'cast' uint(64)[86] inlineImm[7573658]))
          const-val call_tmp[7573901]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (7573903 'move' call_tmp[7573901](7573905 '-' call_tmp[7573887] 1))
          const-val call_tmp[7573908]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7573910 'move' call_tmp[7573908](7573912 'cast' int(64)[10] call_tmp[7573901]))
          (7573915 'move' tmp[7573864] call_tmp[7573908])
        }
        {
          const-val call_tmp[7573926]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7573928 'move' call_tmp[7573926](7573930 '-' coerce_tmp[7573651] 1))
          const-val call_tmp[7573940]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (7573942 'move' call_tmp[7573940](7573944 '+' inlineImm[7573658] call_tmp[7573926]))
          (7573947 'move' tmp[7573864] call_tmp[7573940])
        }
        const-val _ic__F1_high[9019483]:int(64)[10] "temp"
        (7574018 'move' _ic__F1_high[9019483] tmp[7573864])
        val i[7574025]:int(64)[10] "dead at end of block" "insert auto destroy"
        (7574027 'move' i[7574025] 0)
        (7574059 call chpl_checkIfRangeIterWillOverflow[1518856] inlineImm[7573658] tmp[7573864] 1 inlineImm[7573658] tmp[7573864] 1)
        val coerce_tmp[7574098]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7574100 'move' coerce_tmp[7574098](7574102 '.v' taskInd_this[7573733] errorsArray[85773]))
        CForLoop[7574066]
        {
          ref call_tmp[7574105]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
          (7574107 'move' call_tmp[7574105](7574109 'array_get' coerce_tmp[7574098] i[7574025]))
          val coerce_tmp[7574112]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7574114 'move' coerce_tmp[7574112](7574117 call borrow[1817588] call_tmp[7574105]))
          val coerce_tmp[7574119]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7574121 'move' coerce_tmp[7574119](7574123 'cast' RootClass[236] coerce_tmp[7574112]))
          const-val call_tmp[7574126]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7574128 'move' call_tmp[7574126](7574130 '!=' coerce_tmp[7574119] nil[32]))
          if call_tmp[7574126]
          {
            val coerce_tmp[7574135]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7574137 'move' coerce_tmp[7574135](7574139 '.v' taskInd_this[7573733] errorsArray[85773]))
            ref call_tmp[7574142]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
            (7574144 'move' call_tmp[7574142](7574146 'array_get' coerce_tmp[7574135] i[7574025]))
            val coerce_tmp[7574149]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7574151 'move' coerce_tmp[7574149](7574153 '.v' origLoc[7573330] _instance[135293]))
            val coerce_tmp[7574156]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7574158 'move' coerce_tmp[7574156](7574160 'cast' RootClass[236] coerce_tmp[7574149]))
            const-val call_tmp[7574163]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7574165 'move' call_tmp[7574163](7574167 '==' coerce_tmp[7574156] nil[32]))
            if call_tmp[7574163]
            {
              (7574173 call nilCheckHalt[392] "argument to ! is nil")
            }
            ref call_tmp[7574176]:int(64)[10] "dead after last mention" "maybe param" "temp"
            (7574178 'move' call_tmp[7574176](7574180 'array_get' idxPtr[7573361] 0))
            const-val coerce_tmp[7574183]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (7574185 'move' coerce_tmp[7574183](7574187 'deref' call_tmp[7574176]))
            ref call_tmp[7574189]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
            (7574191 'move' call_tmp[7574189](7574193 'array_get' EA[7573335] coerce_tmp[7574183]))
            (7574197 call =[1828977] call_tmp[7574189] call_tmp[7574142])
            ref call_tmp[7574200]:int(64)[10] "dead after last mention" "maybe param" "temp"
            (7574202 'move' call_tmp[7574200](7574204 'array_get' idxPtr[7573361] 0))
            (7574207 '+=' call_tmp[7574200] 1)
          }
          {
            (7574075 '=' i[7574025] inlineImm[7573658])
          }
          {
            (7574086 '<=' i[7574025] _ic__F1_high[9019483])
          }
          {
            (7574090 '+=' i[7574025] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[7574211]
        label _endchpl_direct_counted_range_iter_helper[7574223]
        label _endchpl_direct_counted_range_iter[7574235]
        label _endthese[7574247]
        (7574260 call chpl__delete[1829638] asTaskErr[7573295])
        ref i_x[7574262]:locale[234] "temp"
        (7574264 'move' i_x[7574262](7574266 'set reference' origLoc[7573330]))
        (7574269 call deinit[135483] i_x[7574262])
      }
      {
        val coerce_tmp[7574272]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7574274 'move' coerce_tmp[7574272](7574276 '.v' initTemp[1831357] errorsArray[85773]))
        ref call_tmp[7574279]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
        (7574281 'move' call_tmp[7574279](7574283 'array_get' coerce_tmp[7574272] idx[7573159]))
        val call_tmp[7574286]:owned Error[1498203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574288]:owned Error[1498203] "temp"
        ref i__retArg[7574290]:owned Error[1498203] "temp"
        (7574292 'move' i__retArg[7574290](7574294 'set reference' ret_tmp[7574288]))
        const-val ret[7574296]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        const-val call_tmp[7574298]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[7574300]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (7574303 call init[1499358] initTemp[7574300] while_borrow[7573164])
        (7574306 'move' call_tmp[7574298] initTemp[7574300])
        (7574309 'move' ret[7574296] call_tmp[7574298])
        (7574312 '=' i__retArg[7574290] ret[7574296])
        (7574315 'move' call_tmp[7574286] ret_tmp[7574288])
        (7574319 call =[1830773] call_tmp[7574279] call_tmp[7574286])
        (7574323 call chpl__autoDestroy[3930254] call_tmp[7574286])
        ref i_lhs[7574325]:int(64)[10] "temp"
        (7574327 'move' i_lhs[7574325](7574329 'set reference' idx[7573159]))
        (7574331 '+=' i_lhs[7574325] 1)
      }
      (7574335 'move' while_borrow[7573164] curnext[7573200])
      val coerce_tmp[7574338]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7574340 'move' coerce_tmp[7574338](7574342 'cast' RootClass[236] curnext[7573200]))
      const-val call_tmp[7574345]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574347 'move' call_tmp[7574345](7574349 '!=' coerce_tmp[7574338] nil[32]))
      (7574352 'move' tmp[7573169] call_tmp[7574345])
      tmp[7573169]
    }
    (1831393 return initTemp[1831357])
  }
  function _new[4346024](const in arg err[4346033]:Error[85511]) : TaskErrors[87096] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[4346026]:TaskErrors[87096] "dead after last mention" "temp"
    const-val call_tmp[4346065]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4346068 'move' call_tmp[4346065](4346077 'sizeof_bundle' TaskErrors[87096]))
    val cast_tmp[4346080]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4346082 'move' cast_tmp[4346080](4346039 call chpl_here_alloc[308303] call_tmp[4346065] 43))
    (4346042 'move' initTemp[4346026](4346084 'cast' TaskErrors[87096] cast_tmp[4346080]))
    val super_tmp[7574378]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (7574380 'move' super_tmp[7574378](7574382 '.v' initTemp[4346026] super[397434]))
    val super_tmp[7574385]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (7574387 'move' super_tmp[7574385](7574389 '.v' super_tmp[7574378] super[397311]))
    (7574392 'setcid' super_tmp[7574385])
    val call_tmp[7574394]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (7574396 'move' call_tmp[7574394](7574398 'cast' RootClass[236] super_tmp[7574378]))
    (7574401 'setcid' call_tmp[7574394])
    val init_coerce_tmp[7574403]:Error[85511] "dead after last mention" "temp"
    (7574405 '=' init_coerce_tmp[7574403](7574407 'cast' Error[85511] nil[32]))
    (7574410 '.=' super_tmp[7574378] _next[85434] init_coerce_tmp[7574403])
    (7574414 '.=' super_tmp[7574378] thrownLine[85442] 0)
    (7574418 '.=' super_tmp[7574378] thrownFileId[85447] 0)
    val _msg[7574422]:string[244] "dead after last mention" "temp"
    (7574425 call init[21321] _msg[7574422])
    (7574427 '.=' super_tmp[7574378] _msg[85454] _msg[7574422])
    (7574431 '.=' super_tmp[7574378] _hasThrowInfo[85459] 0)
    (7574435 'setcid' super_tmp[7574378])
    val call_tmp[7574437]:Error[85511] "dead after last mention" "maybe param" "temp"
    (7574439 'move' call_tmp[7574437](7574441 'cast' Error[85511] initTemp[4346026]))
    (7574444 'setcid' call_tmp[7574437])
    (7574446 '.=' initTemp[4346026] nErrors[85768] 1)
    const-val coerce_tmp[7574450]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7574452 'move' coerce_tmp[7574450](7574454 'cast' uint(64)[86] 1))
    const-val call_tmp[7574467]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7574469 'move' call_tmp[7574467](7574472 call sizeof[1818326] owned Error?[1498158]))
    const-val call_tmp[7574474]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7574476 'move' call_tmp[7574474](7574478 '*' coerce_tmp[7574450] call_tmp[7574467]))
    const-val tmp[7574491]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7574493 'move' tmp[7574491](7574495 '<' 0 0))
    val tmp[7574498]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7574491]
    {
      (7574502 'move' tmp[7574498] 1)
    }
    {
      const-val call_tmp[7574506]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574508 'move' call_tmp[7574506](7574510 'cast' uint(64)[86] 0))
      const-val call_tmp[7574513]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574515 'move' call_tmp[7574513](7574517 '!=' 0 call_tmp[7574506]))
      (7574520 'move' tmp[7574498] call_tmp[7574513])
    }
    val ptr[7574524]:c_ptr(void)[1465614] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[7574526]:c_ptr(void)[1465614] "dead at end of block" "temp"
    (7574528 '=' init_coerce_tmp[7574526](7574530 'cast' c_ptr(void)[1465614] nil[32]))
    (7574533 'move' ptr[7574524] init_coerce_tmp[7574526])
    const-val call_tmp[7574536]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7574538 'move' call_tmp[7574536](7574540 'u!' tmp[7574498]))
    if call_tmp[7574536]
    {
      (9276525 'noop')
      {
        const-val call_tmp[7574546]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
        (7574548 'move' call_tmp[7574546](7574551 call offset_ARRAY_ELEMENTS[50769]))
        val call_tmp[7574552]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
        (7574554 'move' call_tmp[7574552](7574557 call chpl_here_calloc[1818371] call_tmp[7574474] 1 call_tmp[7574546]))
        (7574561 '=' ptr[7574524] call_tmp[7574552])
      }
    }
    {
      const-val call_tmp[7574599]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574601 'move' call_tmp[7574599](7574604 call chpl_bitops_clz_64[1820112] 0))
      const-val call_tmp[7574606]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574608 'move' call_tmp[7574606](7574610 'cast' int(64)[10] call_tmp[7574599]))
      const-val call_tmp[7574613]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574615 'move' call_tmp[7574613](7574617 '-' 63 call_tmp[7574606]))
      const-val call_tmp[7574623]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574625 'move' call_tmp[7574623](7574627 '==' 1 0))
      if call_tmp[7574623]
      {
        (7574633 call halt[88131] "Attempt to divide by zero")
      }
      const-val call_tmp[7574636]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7574638 'move' call_tmp[7574636](7574640 '/' call_tmp[7574613] 1))
      val p[7574643]:int(64)[10] "dead at end of block" "insert auto destroy"
      (7574645 'move' p[7574643] call_tmp[7574636])
      const-val tmp[7574648]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7574650 'move' tmp[7574648](7574652 '<' call_tmp[7574636] 0))
      if tmp[7574648]
      {
        const-val call_tmp[7574657]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574659]:string[244] "temp"
        (7574662 call :[1721023] 1 ret_tmp[7574659])
        (7574665 'move' call_tmp[7574657] ret_tmp[7574659])
        const-val call_tmp[7574668]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574670]:string[244] "temp"
        (7574673 call +[28065] "Cannot bitshift " call_tmp[7574657] ret_tmp[7574670])
        (7574677 'move' call_tmp[7574668] ret_tmp[7574670])
        const-val call_tmp[7574680]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574682]:string[244] "temp"
        (7574685 call +[28065] call_tmp[7574668] " by " ret_tmp[7574682])
        (7574689 'move' call_tmp[7574680] ret_tmp[7574682])
        const-val call_tmp[7574692]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574694]:string[244] "temp"
        (7574697 call :[1496816] call_tmp[7574636] ret_tmp[7574694])
        (7574700 'move' call_tmp[7574692] ret_tmp[7574694])
        const-val call_tmp[7574703]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574705]:string[244] "temp"
        (7574708 call +[28065] call_tmp[7574680] call_tmp[7574692] ret_tmp[7574705])
        (7574712 'move' call_tmp[7574703] ret_tmp[7574705])
        const-val call_tmp[7574715]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574717]:string[244] "temp"
        (7574720 call +[28065] call_tmp[7574703] " because " ret_tmp[7574717])
        (7574724 'move' call_tmp[7574715] ret_tmp[7574717])
        const-val call_tmp[7574727]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574729]:string[244] "temp"
        (7574732 call :[1496816] call_tmp[7574636] ret_tmp[7574729])
        (7574735 'move' call_tmp[7574727] ret_tmp[7574729])
        const-val call_tmp[7574738]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7574740]:string[244] "temp"
        (7574743 call +[28065] call_tmp[7574715] call_tmp[7574727] ret_tmp[7574740])
        (7574747 'move' call_tmp[7574738] ret_tmp[7574740])
        const-val call_tmp[7574750]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7574752]:string[244] "temp"
        (7574755 call +[28065] call_tmp[7574738] " is less than 0" ret_tmp[7574752])
        (7574759 'move' call_tmp[7574750] ret_tmp[7574752])
        const-val msg[7574762]:string[244] "dead at end of block" "insert auto destroy"
        (7574764 'move' msg[7574762] call_tmp[7574750])
        ref i_x[7574767]:string[244] "temp"
        (7574769 'move' i_x[7574767](7574771 'set reference' call_tmp[7574738]))
        (7574774 call deinit[21354] i_x[7574767])
        ref i_x[7574776]:string[244] "temp"
        (7574778 'move' i_x[7574776](7574780 'set reference' call_tmp[7574727]))
        (7574783 call deinit[21354] i_x[7574776])
        ref i_x[7574785]:string[244] "temp"
        (7574787 'move' i_x[7574785](7574789 'set reference' call_tmp[7574715]))
        (7574792 call deinit[21354] i_x[7574785])
        ref i_x[7574794]:string[244] "temp"
        (7574796 'move' i_x[7574794](7574798 'set reference' call_tmp[7574703]))
        (7574801 call deinit[21354] i_x[7574794])
        ref i_x[7574803]:string[244] "temp"
        (7574805 'move' i_x[7574803](7574807 'set reference' call_tmp[7574692]))
        (7574810 call deinit[21354] i_x[7574803])
        ref i_x[7574812]:string[244] "temp"
        (7574814 'move' i_x[7574812](7574816 'set reference' call_tmp[7574680]))
        (7574819 call deinit[21354] i_x[7574812])
        ref i_x[7574821]:string[244] "temp"
        (7574823 'move' i_x[7574821](7574825 'set reference' call_tmp[7574668]))
        (7574828 call deinit[21354] i_x[7574821])
        ref i_x[7574830]:string[244] "temp"
        (7574832 'move' i_x[7574830](7574834 'set reference' call_tmp[7574657]))
        (7574837 call deinit[21354] i_x[7574830])
        (7574840 call boundsCheckHalt[404] msg[7574762])
        ref i_x[7574842]:string[244] "temp"
        (7574844 'move' i_x[7574842](7574846 'set reference' msg[7574762]))
        (7574849 call deinit[21354] i_x[7574842])
      }
      {
        const-val call_tmp[7574852]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7574854 'move' call_tmp[7574852](7574856 '>=' call_tmp[7574636] 64))
        if call_tmp[7574852]
        {
          const-val call_tmp[7574861]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574863]:string[244] "temp"
          (7574866 call :[1721023] 1 ret_tmp[7574863])
          (7574869 'move' call_tmp[7574861] ret_tmp[7574863])
          const-val call_tmp[7574872]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574874]:string[244] "temp"
          (7574877 call +[28065] "Cannot bitshift " call_tmp[7574861] ret_tmp[7574874])
          (7574881 'move' call_tmp[7574872] ret_tmp[7574874])
          const-val call_tmp[7574884]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574886]:string[244] "temp"
          (7574889 call +[28065] call_tmp[7574872] " by " ret_tmp[7574886])
          (7574893 'move' call_tmp[7574884] ret_tmp[7574886])
          const-val call_tmp[7574896]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574898]:string[244] "temp"
          (7574901 call :[1496816] call_tmp[7574636] ret_tmp[7574898])
          (7574904 'move' call_tmp[7574896] ret_tmp[7574898])
          const-val call_tmp[7574907]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574909]:string[244] "temp"
          (7574912 call +[28065] call_tmp[7574884] call_tmp[7574896] ret_tmp[7574909])
          (7574916 'move' call_tmp[7574907] ret_tmp[7574909])
          const-val call_tmp[7574919]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574921]:string[244] "temp"
          (7574924 call +[28065] call_tmp[7574907] " because " ret_tmp[7574921])
          (7574928 'move' call_tmp[7574919] ret_tmp[7574921])
          const-val call_tmp[7574931]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574933]:string[244] "temp"
          (7574936 call :[1496816] call_tmp[7574636] ret_tmp[7574933])
          (7574939 'move' call_tmp[7574931] ret_tmp[7574933])
          const-val call_tmp[7574942]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574944]:string[244] "temp"
          (7574947 call +[28065] call_tmp[7574919] call_tmp[7574931] ret_tmp[7574944])
          (7574951 'move' call_tmp[7574942] ret_tmp[7574944])
          const-val call_tmp[7574954]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7574956]:string[244] "temp"
          (7574959 call +[28065] call_tmp[7574942] " is >= the bitwidth of " ret_tmp[7574956])
          (7574963 'move' call_tmp[7574954] ret_tmp[7574956])
          const-val call_tmp[7574966]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7574968]:string[244] "temp"
          (7574971 call +[28065] call_tmp[7574954] "uint(64)" ret_tmp[7574968])
          (7574975 'move' call_tmp[7574966] ret_tmp[7574968])
          const-val msg[7574978]:string[244] "dead at end of block" "insert auto destroy"
          (7574980 'move' msg[7574978] call_tmp[7574966])
          ref i_x[7574983]:string[244] "temp"
          (7574985 'move' i_x[7574983](7574987 'set reference' call_tmp[7574954]))
          (7574990 call deinit[21354] i_x[7574983])
          ref i_x[7574992]:string[244] "temp"
          (7574994 'move' i_x[7574992](7574996 'set reference' call_tmp[7574942]))
          (7574999 call deinit[21354] i_x[7574992])
          ref i_x[7575001]:string[244] "temp"
          (7575003 'move' i_x[7575001](7575005 'set reference' call_tmp[7574931]))
          (7575008 call deinit[21354] i_x[7575001])
          ref i_x[7575010]:string[244] "temp"
          (7575012 'move' i_x[7575010](7575014 'set reference' call_tmp[7574919]))
          (7575017 call deinit[21354] i_x[7575010])
          ref i_x[7575019]:string[244] "temp"
          (7575021 'move' i_x[7575019](7575023 'set reference' call_tmp[7574907]))
          (7575026 call deinit[21354] i_x[7575019])
          ref i_x[7575028]:string[244] "temp"
          (7575030 'move' i_x[7575028](7575032 'set reference' call_tmp[7574896]))
          (7575035 call deinit[21354] i_x[7575028])
          ref i_x[7575037]:string[244] "temp"
          (7575039 'move' i_x[7575037](7575041 'set reference' call_tmp[7574884]))
          (7575044 call deinit[21354] i_x[7575037])
          ref i_x[7575046]:string[244] "temp"
          (7575048 'move' i_x[7575046](7575050 'set reference' call_tmp[7574872]))
          (7575053 call deinit[21354] i_x[7575046])
          ref i_x[7575055]:string[244] "temp"
          (7575057 'move' i_x[7575055](7575059 'set reference' call_tmp[7574861]))
          (7575062 call deinit[21354] i_x[7575055])
          (7575065 call boundsCheckHalt[404] msg[7574978])
          ref i_x[7575067]:string[244] "temp"
          (7575069 'move' i_x[7575067](7575071 'set reference' msg[7574978]))
          (7575074 call deinit[21354] i_x[7575067])
        }
      }
      const-val call_tmp[7575078]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7575080 'move' call_tmp[7575078](7575082 '<<' 1 call_tmp[7574636]))
      const-val tmp[7575085]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7575087 'move' tmp[7575085](7575089 '<' call_tmp[7575078] 0))
      if tmp[7575085]
      {
        ref i_lhs[7575094]:int(64)[10] "temp"
        (7575096 'move' i_lhs[7575094](7575098 'set reference' p[7574643]))
        (7575100 '+=' i_lhs[7575094] 1)
      }
      const-val tmp[7575104]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7575106 'move' tmp[7575104](7575108 '<' p[7574643] 0))
      if tmp[7575104]
      {
        const-val call_tmp[7575113]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575115]:string[244] "temp"
        (7575118 call :[1721023] 1 ret_tmp[7575115])
        (7575121 'move' call_tmp[7575113] ret_tmp[7575115])
        const-val call_tmp[7575124]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575126]:string[244] "temp"
        (7575129 call +[28065] "Cannot bitshift " call_tmp[7575113] ret_tmp[7575126])
        (7575133 'move' call_tmp[7575124] ret_tmp[7575126])
        const-val call_tmp[7575136]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575138]:string[244] "temp"
        (7575141 call +[28065] call_tmp[7575124] " by " ret_tmp[7575138])
        (7575145 'move' call_tmp[7575136] ret_tmp[7575138])
        const-val call_tmp[7575148]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575150]:string[244] "temp"
        (7575153 call :[1496816] p[7574643] ret_tmp[7575150])
        (7575156 'move' call_tmp[7575148] ret_tmp[7575150])
        const-val call_tmp[7575159]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575161]:string[244] "temp"
        (7575164 call +[28065] call_tmp[7575136] call_tmp[7575148] ret_tmp[7575161])
        (7575168 'move' call_tmp[7575159] ret_tmp[7575161])
        const-val call_tmp[7575171]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575173]:string[244] "temp"
        (7575176 call +[28065] call_tmp[7575159] " because " ret_tmp[7575173])
        (7575180 'move' call_tmp[7575171] ret_tmp[7575173])
        const-val call_tmp[7575183]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575185]:string[244] "temp"
        (7575188 call :[1496816] p[7574643] ret_tmp[7575185])
        (7575191 'move' call_tmp[7575183] ret_tmp[7575185])
        const-val call_tmp[7575194]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575196]:string[244] "temp"
        (7575199 call +[28065] call_tmp[7575171] call_tmp[7575183] ret_tmp[7575196])
        (7575203 'move' call_tmp[7575194] ret_tmp[7575196])
        const-val call_tmp[7575206]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7575208]:string[244] "temp"
        (7575211 call +[28065] call_tmp[7575194] " is less than 0" ret_tmp[7575208])
        (7575215 'move' call_tmp[7575206] ret_tmp[7575208])
        const-val msg[7575218]:string[244] "dead at end of block" "insert auto destroy"
        (7575220 'move' msg[7575218] call_tmp[7575206])
        ref i_x[7575223]:string[244] "temp"
        (7575225 'move' i_x[7575223](7575227 'set reference' call_tmp[7575194]))
        (7575230 call deinit[21354] i_x[7575223])
        ref i_x[7575232]:string[244] "temp"
        (7575234 'move' i_x[7575232](7575236 'set reference' call_tmp[7575183]))
        (7575239 call deinit[21354] i_x[7575232])
        ref i_x[7575241]:string[244] "temp"
        (7575243 'move' i_x[7575241](7575245 'set reference' call_tmp[7575171]))
        (7575248 call deinit[21354] i_x[7575241])
        ref i_x[7575250]:string[244] "temp"
        (7575252 'move' i_x[7575250](7575254 'set reference' call_tmp[7575159]))
        (7575257 call deinit[21354] i_x[7575250])
        ref i_x[7575259]:string[244] "temp"
        (7575261 'move' i_x[7575259](7575263 'set reference' call_tmp[7575148]))
        (7575266 call deinit[21354] i_x[7575259])
        ref i_x[7575268]:string[244] "temp"
        (7575270 'move' i_x[7575268](7575272 'set reference' call_tmp[7575136]))
        (7575275 call deinit[21354] i_x[7575268])
        ref i_x[7575277]:string[244] "temp"
        (7575279 'move' i_x[7575277](7575281 'set reference' call_tmp[7575124]))
        (7575284 call deinit[21354] i_x[7575277])
        ref i_x[7575286]:string[244] "temp"
        (7575288 'move' i_x[7575286](7575290 'set reference' call_tmp[7575113]))
        (7575293 call deinit[21354] i_x[7575286])
        (7575296 call boundsCheckHalt[404] msg[7575218])
        ref i_x[7575298]:string[244] "temp"
        (7575300 'move' i_x[7575298](7575302 'set reference' msg[7575218]))
        (7575305 call deinit[21354] i_x[7575298])
      }
      {
        const-val call_tmp[7575308]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7575310 'move' call_tmp[7575308](7575312 '>=' p[7574643] 64))
        if call_tmp[7575308]
        {
          const-val call_tmp[7575317]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575319]:string[244] "temp"
          (7575322 call :[1721023] 1 ret_tmp[7575319])
          (7575325 'move' call_tmp[7575317] ret_tmp[7575319])
          const-val call_tmp[7575328]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575330]:string[244] "temp"
          (7575333 call +[28065] "Cannot bitshift " call_tmp[7575317] ret_tmp[7575330])
          (7575337 'move' call_tmp[7575328] ret_tmp[7575330])
          const-val call_tmp[7575340]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575342]:string[244] "temp"
          (7575345 call +[28065] call_tmp[7575328] " by " ret_tmp[7575342])
          (7575349 'move' call_tmp[7575340] ret_tmp[7575342])
          const-val call_tmp[7575352]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575354]:string[244] "temp"
          (7575357 call :[1496816] p[7574643] ret_tmp[7575354])
          (7575360 'move' call_tmp[7575352] ret_tmp[7575354])
          const-val call_tmp[7575363]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575365]:string[244] "temp"
          (7575368 call +[28065] call_tmp[7575340] call_tmp[7575352] ret_tmp[7575365])
          (7575372 'move' call_tmp[7575363] ret_tmp[7575365])
          const-val call_tmp[7575375]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575377]:string[244] "temp"
          (7575380 call +[28065] call_tmp[7575363] " because " ret_tmp[7575377])
          (7575384 'move' call_tmp[7575375] ret_tmp[7575377])
          const-val call_tmp[7575387]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575389]:string[244] "temp"
          (7575392 call :[1496816] p[7574643] ret_tmp[7575389])
          (7575395 'move' call_tmp[7575387] ret_tmp[7575389])
          const-val call_tmp[7575398]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575400]:string[244] "temp"
          (7575403 call +[28065] call_tmp[7575375] call_tmp[7575387] ret_tmp[7575400])
          (7575407 'move' call_tmp[7575398] ret_tmp[7575400])
          const-val call_tmp[7575410]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575412]:string[244] "temp"
          (7575415 call +[28065] call_tmp[7575398] " is >= the bitwidth of " ret_tmp[7575412])
          (7575419 'move' call_tmp[7575410] ret_tmp[7575412])
          const-val call_tmp[7575422]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7575424]:string[244] "temp"
          (7575427 call +[28065] call_tmp[7575410] "uint(64)" ret_tmp[7575424])
          (7575431 'move' call_tmp[7575422] ret_tmp[7575424])
          const-val msg[7575434]:string[244] "dead at end of block" "insert auto destroy"
          (7575436 'move' msg[7575434] call_tmp[7575422])
          ref i_x[7575439]:string[244] "temp"
          (7575441 'move' i_x[7575439](7575443 'set reference' call_tmp[7575410]))
          (7575446 call deinit[21354] i_x[7575439])
          ref i_x[7575448]:string[244] "temp"
          (7575450 'move' i_x[7575448](7575452 'set reference' call_tmp[7575398]))
          (7575455 call deinit[21354] i_x[7575448])
          ref i_x[7575457]:string[244] "temp"
          (7575459 'move' i_x[7575457](7575461 'set reference' call_tmp[7575387]))
          (7575464 call deinit[21354] i_x[7575457])
          ref i_x[7575466]:string[244] "temp"
          (7575468 'move' i_x[7575466](7575470 'set reference' call_tmp[7575375]))
          (7575473 call deinit[21354] i_x[7575466])
          ref i_x[7575475]:string[244] "temp"
          (7575477 'move' i_x[7575475](7575479 'set reference' call_tmp[7575363]))
          (7575482 call deinit[21354] i_x[7575475])
          ref i_x[7575484]:string[244] "temp"
          (7575486 'move' i_x[7575484](7575488 'set reference' call_tmp[7575352]))
          (7575491 call deinit[21354] i_x[7575484])
          ref i_x[7575493]:string[244] "temp"
          (7575495 'move' i_x[7575493](7575497 'set reference' call_tmp[7575340]))
          (7575500 call deinit[21354] i_x[7575493])
          ref i_x[7575502]:string[244] "temp"
          (7575504 'move' i_x[7575502](7575506 'set reference' call_tmp[7575328]))
          (7575509 call deinit[21354] i_x[7575502])
          ref i_x[7575511]:string[244] "temp"
          (7575513 'move' i_x[7575511](7575515 'set reference' call_tmp[7575317]))
          (7575518 call deinit[21354] i_x[7575511])
          (7575521 call boundsCheckHalt[404] msg[7575434])
          ref i_x[7575523]:string[244] "temp"
          (7575525 'move' i_x[7575523](7575527 'set reference' msg[7575434]))
          (7575530 call deinit[21354] i_x[7575523])
        }
      }
      const-val call_tmp[7575534]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7575536 'move' call_tmp[7575534](7575538 '<<' 1 p[7574643]))
      const-val call_tmp[7575541]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7575543 'move' call_tmp[7575541](7575545 '<=' 0 call_tmp[7575534]))
      (7575549 call assert[87867] call_tmp[7575541])
      const-val tmp[7575551]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7575553 'move' tmp[7575551](7575555 '<' p[7574643] 0))
      if tmp[7575551]
      {
        const-val call_tmp[7575560]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575562]:string[244] "temp"
        (7575565 call :[1721023] 1 ret_tmp[7575562])
        (7575568 'move' call_tmp[7575560] ret_tmp[7575562])
        const-val call_tmp[7575571]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575573]:string[244] "temp"
        (7575576 call +[28065] "Cannot bitshift " call_tmp[7575560] ret_tmp[7575573])
        (7575580 'move' call_tmp[7575571] ret_tmp[7575573])
        const-val call_tmp[7575583]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575585]:string[244] "temp"
        (7575588 call +[28065] call_tmp[7575571] " by " ret_tmp[7575585])
        (7575592 'move' call_tmp[7575583] ret_tmp[7575585])
        const-val call_tmp[7575595]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575597]:string[244] "temp"
        (7575600 call :[1496816] p[7574643] ret_tmp[7575597])
        (7575603 'move' call_tmp[7575595] ret_tmp[7575597])
        const-val call_tmp[7575606]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575608]:string[244] "temp"
        (7575611 call +[28065] call_tmp[7575583] call_tmp[7575595] ret_tmp[7575608])
        (7575615 'move' call_tmp[7575606] ret_tmp[7575608])
        const-val call_tmp[7575618]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575620]:string[244] "temp"
        (7575623 call +[28065] call_tmp[7575606] " because " ret_tmp[7575620])
        (7575627 'move' call_tmp[7575618] ret_tmp[7575620])
        const-val call_tmp[7575630]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575632]:string[244] "temp"
        (7575635 call :[1496816] p[7574643] ret_tmp[7575632])
        (7575638 'move' call_tmp[7575630] ret_tmp[7575632])
        const-val call_tmp[7575641]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7575643]:string[244] "temp"
        (7575646 call +[28065] call_tmp[7575618] call_tmp[7575630] ret_tmp[7575643])
        (7575650 'move' call_tmp[7575641] ret_tmp[7575643])
        const-val call_tmp[7575653]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7575655]:string[244] "temp"
        (7575658 call +[28065] call_tmp[7575641] " is less than 0" ret_tmp[7575655])
        (7575662 'move' call_tmp[7575653] ret_tmp[7575655])
        const-val msg[7575665]:string[244] "dead at end of block" "insert auto destroy"
        (7575667 'move' msg[7575665] call_tmp[7575653])
        ref i_x[7575670]:string[244] "temp"
        (7575672 'move' i_x[7575670](7575674 'set reference' call_tmp[7575641]))
        (7575677 call deinit[21354] i_x[7575670])
        ref i_x[7575679]:string[244] "temp"
        (7575681 'move' i_x[7575679](7575683 'set reference' call_tmp[7575630]))
        (7575686 call deinit[21354] i_x[7575679])
        ref i_x[7575688]:string[244] "temp"
        (7575690 'move' i_x[7575688](7575692 'set reference' call_tmp[7575618]))
        (7575695 call deinit[21354] i_x[7575688])
        ref i_x[7575697]:string[244] "temp"
        (7575699 'move' i_x[7575697](7575701 'set reference' call_tmp[7575606]))
        (7575704 call deinit[21354] i_x[7575697])
        ref i_x[7575706]:string[244] "temp"
        (7575708 'move' i_x[7575706](7575710 'set reference' call_tmp[7575595]))
        (7575713 call deinit[21354] i_x[7575706])
        ref i_x[7575715]:string[244] "temp"
        (7575717 'move' i_x[7575715](7575719 'set reference' call_tmp[7575583]))
        (7575722 call deinit[21354] i_x[7575715])
        ref i_x[7575724]:string[244] "temp"
        (7575726 'move' i_x[7575724](7575728 'set reference' call_tmp[7575571]))
        (7575731 call deinit[21354] i_x[7575724])
        ref i_x[7575733]:string[244] "temp"
        (7575735 'move' i_x[7575733](7575737 'set reference' call_tmp[7575560]))
        (7575740 call deinit[21354] i_x[7575733])
        (7575743 call boundsCheckHalt[404] msg[7575665])
        ref i_x[7575745]:string[244] "temp"
        (7575747 'move' i_x[7575745](7575749 'set reference' msg[7575665]))
        (7575752 call deinit[21354] i_x[7575745])
      }
      {
        const-val call_tmp[7575755]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7575757 'move' call_tmp[7575755](7575759 '>=' p[7574643] 64))
        if call_tmp[7575755]
        {
          const-val call_tmp[7575764]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575766]:string[244] "temp"
          (7575769 call :[1721023] 1 ret_tmp[7575766])
          (7575772 'move' call_tmp[7575764] ret_tmp[7575766])
          const-val call_tmp[7575775]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575777]:string[244] "temp"
          (7575780 call +[28065] "Cannot bitshift " call_tmp[7575764] ret_tmp[7575777])
          (7575784 'move' call_tmp[7575775] ret_tmp[7575777])
          const-val call_tmp[7575787]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575789]:string[244] "temp"
          (7575792 call +[28065] call_tmp[7575775] " by " ret_tmp[7575789])
          (7575796 'move' call_tmp[7575787] ret_tmp[7575789])
          const-val call_tmp[7575799]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575801]:string[244] "temp"
          (7575804 call :[1496816] p[7574643] ret_tmp[7575801])
          (7575807 'move' call_tmp[7575799] ret_tmp[7575801])
          const-val call_tmp[7575810]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575812]:string[244] "temp"
          (7575815 call +[28065] call_tmp[7575787] call_tmp[7575799] ret_tmp[7575812])
          (7575819 'move' call_tmp[7575810] ret_tmp[7575812])
          const-val call_tmp[7575822]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575824]:string[244] "temp"
          (7575827 call +[28065] call_tmp[7575810] " because " ret_tmp[7575824])
          (7575831 'move' call_tmp[7575822] ret_tmp[7575824])
          const-val call_tmp[7575834]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575836]:string[244] "temp"
          (7575839 call :[1496816] p[7574643] ret_tmp[7575836])
          (7575842 'move' call_tmp[7575834] ret_tmp[7575836])
          const-val call_tmp[7575845]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575847]:string[244] "temp"
          (7575850 call +[28065] call_tmp[7575822] call_tmp[7575834] ret_tmp[7575847])
          (7575854 'move' call_tmp[7575845] ret_tmp[7575847])
          const-val call_tmp[7575857]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7575859]:string[244] "temp"
          (7575862 call +[28065] call_tmp[7575845] " is >= the bitwidth of " ret_tmp[7575859])
          (7575866 'move' call_tmp[7575857] ret_tmp[7575859])
          const-val call_tmp[7575869]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7575871]:string[244] "temp"
          (7575874 call +[28065] call_tmp[7575857] "uint(64)" ret_tmp[7575871])
          (7575878 'move' call_tmp[7575869] ret_tmp[7575871])
          const-val msg[7575881]:string[244] "dead at end of block" "insert auto destroy"
          (7575883 'move' msg[7575881] call_tmp[7575869])
          ref i_x[7575886]:string[244] "temp"
          (7575888 'move' i_x[7575886](7575890 'set reference' call_tmp[7575857]))
          (7575893 call deinit[21354] i_x[7575886])
          ref i_x[7575895]:string[244] "temp"
          (7575897 'move' i_x[7575895](7575899 'set reference' call_tmp[7575845]))
          (7575902 call deinit[21354] i_x[7575895])
          ref i_x[7575904]:string[244] "temp"
          (7575906 'move' i_x[7575904](7575908 'set reference' call_tmp[7575834]))
          (7575911 call deinit[21354] i_x[7575904])
          ref i_x[7575913]:string[244] "temp"
          (7575915 'move' i_x[7575913](7575917 'set reference' call_tmp[7575822]))
          (7575920 call deinit[21354] i_x[7575913])
          ref i_x[7575922]:string[244] "temp"
          (7575924 'move' i_x[7575922](7575926 'set reference' call_tmp[7575810]))
          (7575929 call deinit[21354] i_x[7575922])
          ref i_x[7575931]:string[244] "temp"
          (7575933 'move' i_x[7575931](7575935 'set reference' call_tmp[7575799]))
          (7575938 call deinit[21354] i_x[7575931])
          ref i_x[7575940]:string[244] "temp"
          (7575942 'move' i_x[7575940](7575944 'set reference' call_tmp[7575787]))
          (7575947 call deinit[21354] i_x[7575940])
          ref i_x[7575949]:string[244] "temp"
          (7575951 'move' i_x[7575949](7575953 'set reference' call_tmp[7575775]))
          (7575956 call deinit[21354] i_x[7575949])
          ref i_x[7575958]:string[244] "temp"
          (7575960 'move' i_x[7575958](7575962 'set reference' call_tmp[7575764]))
          (7575965 call deinit[21354] i_x[7575958])
          (7575968 call boundsCheckHalt[404] msg[7575881])
          ref i_x[7575970]:string[244] "temp"
          (7575972 'move' i_x[7575970](7575974 'set reference' msg[7575881]))
          (7575977 call deinit[21354] i_x[7575970])
        }
      }
      const-val call_tmp[7575981]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7575983 'move' call_tmp[7575981](7575985 '<<' 1 p[7574643]))
      const-val call_tmp[7575988]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7575990 'move' call_tmp[7575988](7575992 '!=' 0 call_tmp[7575981]))
      if call_tmp[7575988]
      {
        (7575998 call halt[1821083] "allocate called with non-power-of-2 alignment " 0)
      }
      const-val call_tmp[7576002]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7576004 'move' call_tmp[7576002](7576007 call sizeof[1521716] c_ptr(void)[1465614]))
      const-val tmp[7576009]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7576011 'move' tmp[7576009](7576013 '<' 0 call_tmp[7576002]))
      if tmp[7576009]
      {
        (7576019 call halt[88131] "allocate called with alignment smaller than pointer size")
      }
      const-val call_tmp[7576022]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
      (7576024 'move' call_tmp[7576022](7576027 call offset_ARRAY_ELEMENTS[50769]))
      val call_tmp[7576028]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
      (7576030 'move' call_tmp[7576028](7576033 call chpl_here_aligned_alloc[1827971] 0 call_tmp[7574474] call_tmp[7576022]))
      (7576037 '=' ptr[7574524] call_tmp[7576028])
      (9276526 'noop')
      {
        val inlineImm[7576042]:int(64)[10] "temp"
        (7576044 'move' inlineImm[7576042] 0)
        const-val call_tmp[7576047]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7576049]:owned IllegalArgumentError?[1471812] "temp"
        (7576052 call chpl_checkValue[1535618] 0 ret_tmp[7576049])
        (7576055 'move' call_tmp[7576047] ret_tmp[7576049])
        ref i_arg[7576060]:owned IllegalArgumentError?[1471812] "temp"
        (7576062 'move' i_arg[7576060](7576064 'set reference' call_tmp[7576047]))
        val call_tmp[7576066]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
        (7576068 'move' call_tmp[7576066](7576071 call borrow[1479886] i_arg[7576060]))
        val coerce_tmp[7576076]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7576078 'move' coerce_tmp[7576076](7576080 'cast' RootClass[236] call_tmp[7576066]))
        const-val call_tmp[7576083]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7576085 'move' call_tmp[7576083](7576087 '!=' coerce_tmp[7576076] nil[32]))
        if call_tmp[7576083]
        {
          const-val call_tmp[7576092]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[7576094]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (7576096 'move' coerce_tmp[7576094](7576098 'cast' Error[85511] call_tmp[7576066]))
          val _virtual_method_tmp_[7576101]:int(32)[66] "temp"
          (7576103 'move' _virtual_method_tmp_[7576101](7576105 'getcid' coerce_tmp[7576094]))
          val ret_tmp[7576107]:string[244] "temp"
          (7576109 'virtual method call' message[85497] _virtual_method_tmp_[7576101] coerce_tmp[7576094] ret_tmp[7576107])
          (7576114 'move' call_tmp[7576092] ret_tmp[7576107])
          (7576118 call safeCastCheckHalt[440] call_tmp[7576092])
          ref i_x[7576120]:string[244] "temp"
          (7576122 'move' i_x[7576120](7576124 'set reference' call_tmp[7576092]))
          (7576127 call deinit[21354] i_x[7576120])
        }
        (7576131 call chpl__autoDestroy[3929258] call_tmp[7576047])
        const-val call_tmp[7576133]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7576135 'move' call_tmp[7576133](7576137 'cast' int(32)[66] inlineImm[7576042]))
        (7576141 call memset[1828140] call_tmp[7576028] call_tmp[7576133] call_tmp[7574474])
      }
    }
    val call_tmp[7576147]:c_ptr(owned Error?)[1805608] "dead after last mention" "expr temp" "maybe param" "temp"
    (7576149 'move' call_tmp[7576147](7576151 'cast' c_ptr(owned Error?)[1805608] ptr[7574524]))
    (7576154 '.=' initTemp[4346026] errorsArray[85773] call_tmp[7576147])
    (7576158 'setcid' initTemp[4346026])
    val coerce_tmp[7576160]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7576162 'move' coerce_tmp[7576160] err[4346033])
    val tmp[7576165]:Error[85511] "temp"
    (7576167 'move' tmp[7576165](7576169 'cast' Error[85511] nil[32]))
    (7576172 '.=' coerce_tmp[7576160] _next[85434] tmp[7576165])
    val coerce_tmp[7576176]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7576178 'move' coerce_tmp[7576176](7576180 '.v' initTemp[4346026] errorsArray[85773]))
    val inlineImm[7576183]:int(64)[10] "temp"
    (7576185 'move' inlineImm[7576183] 0)
    ref call_tmp[7576188]:owned Error?[1498158] "dead after last mention" "maybe param" "temp"
    (7576190 'move' call_tmp[7576188](7576192 'array_get' coerce_tmp[7576176] inlineImm[7576183]))
    val call_tmp[7576195]:owned Error[1498203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7576197]:owned Error[1498203] "temp"
    ref i__retArg[7576199]:owned Error[1498203] "temp"
    (7576201 'move' i__retArg[7576199](7576203 'set reference' ret_tmp[7576197]))
    const-val ret[7576205]:owned Error[1498203] "dead after last mention" "RVV" "temp"
    const-val call_tmp[7576207]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[7576209]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
    (7576212 call init[1499358] initTemp[7576209] err[4346033])
    (7576215 'move' call_tmp[7576207] initTemp[7576209])
    (7576218 'move' ret[7576205] call_tmp[7576207])
    (7576221 '=' i__retArg[7576199] ret[7576205])
    (7576224 'move' call_tmp[7576195] ret_tmp[7576197])
    (7576228 call =[1830773] call_tmp[7576188] call_tmp[7576195])
    (7576232 call chpl__autoDestroy[3930254] call_tmp[7576195])
    (4346060 return initTemp[4346026])
  }
  type TaskErrors[87096] val super[397434]:Error[85511] "super class" val nErrors[85768]:int(64)[10] val errorsArray[85773]:c_ptr(owned Error?)[1805608]
  function chpl_error_type_name[87098](const in arg err[87102]:Error[85511], ref arg _retArg[5541637]:string[244]) : void[4] "fn returns via _retArg" "resolved"
  {
    const-val call_tmp[733565]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (733568 'move' call_tmp[733565](87109 'getcid' err[87102]))
    const-val call_tmp[733570]:chpl_c_string[16] "dead after last mention" "maybe param" "temp"
    (733573 'move' call_tmp[733570](87115 'class name by id' call_tmp[733565]))
    const-val nameS[87120]:string[244] "dead at end of block" "insert auto destroy" "split inited"
    val error[5497696]:Error[85511] "error variable" "temp"
    (5497712 'move' error[5497696] nil[32])
    val call_tmp[733582]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (733585 'move' call_tmp[733582](87133 'cast' c_ptrConst(int(8))[1466333] call_tmp[733570]))
    const-val call_tmp[7620627]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620629 'move' call_tmp[7620627](7620631 'string_length_bytes' call_tmp[733582]))
    const-val call_tmp[7620633]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7620635]:owned IllegalArgumentError?[1471812] "temp"
    (7620638 call chpl_checkValue[1511482] call_tmp[7620627] ret_tmp[7620635])
    (7620641 'move' call_tmp[7620633] ret_tmp[7620635])
    ref i_arg[7620646]:owned IllegalArgumentError?[1471812] "temp"
    (7620648 'move' i_arg[7620646](7620650 'set reference' call_tmp[7620633]))
    val call_tmp[7620652]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620654 'move' call_tmp[7620652](7620657 call borrow[1479886] i_arg[7620646]))
    val coerce_tmp[7620662]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7620664 'move' coerce_tmp[7620662](7620666 'cast' RootClass[236] call_tmp[7620652]))
    const-val call_tmp[7620669]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620671 'move' call_tmp[7620669](7620673 '!=' coerce_tmp[7620662] nil[32]))
    if call_tmp[7620669]
    {
      const-val call_tmp[7620678]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7620680]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7620682 'move' coerce_tmp[7620680](7620684 'cast' Error[85511] call_tmp[7620652]))
      val _virtual_method_tmp_[7620687]:int(32)[66] "temp"
      (7620689 'move' _virtual_method_tmp_[7620687](7620691 'getcid' coerce_tmp[7620680]))
      val ret_tmp[7620693]:string[244] "temp"
      (7620695 'virtual method call' message[85497] _virtual_method_tmp_[7620687] coerce_tmp[7620680] ret_tmp[7620693])
      (7620700 'move' call_tmp[7620678] ret_tmp[7620693])
      (7620704 call safeCastCheckHalt[440] call_tmp[7620678])
      ref i_x[7620706]:string[244] "temp"
      (7620708 'move' i_x[7620706](7620710 'set reference' call_tmp[7620678]))
      (7620713 call deinit[21354] i_x[7620706])
    }
    (7620717 call chpl__autoDestroy[3929258] call_tmp[7620633])
    const-val call_tmp[7620719]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620721 'move' call_tmp[7620719] call_tmp[7620627])
    val errorExists[7296992]:bool[19] "temp"
    (7296997 'move' errorExists[7296992](7296994 '!=' error[5497696] nil[32]))
    if errorExists[7296992]
    {
      gotoErrorHandling handler[5497697] handler[5497697]
    }
    const-val ret[7623978]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7623980]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623982 'move' call_tmp[7623980](7623984 'cast' c_ptr(uint(8))[1466369] call_tmp[733582]))
    const-val call_tmp[7623987]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7623989 'move' call_tmp[7623987](7623991 '+' call_tmp[7620719] 1))
    const-val call_tmp[7623994]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7623996]:Error[85511] "error variable" "temp"
    (7623998 'move' error[7623996] nil[32])
    const-val ret_tmp[7624001]:string[244] "temp"
    (7624004 call createCopyingBuffer[1513110] call_tmp[7623980] call_tmp[7620719] call_tmp[7623987] strict[37976] error[7623996] ret_tmp[7624001])
    (7624011 'move' call_tmp[7623994] ret_tmp[7624001])
    val errorExists[7624014]:bool[19] "temp"
    (7624016 'move' errorExists[7624014](7624018 '!=' error[7623996] nil[32]))
    if errorExists[7624014]
    {
      (7624023 '=' error[5497696] error[7623996])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624032] _endcreateCopyingBuffer[7624032]
    }
    (7624029 '=' ret[7623978] call_tmp[7623994])
    label _endcreateCopyingBuffer[7624032]
    val errorExists[7297000]:bool[19] "temp"
    (7297005 'move' errorExists[7297000](7297002 '!=' error[5497696] nil[32]))
    if errorExists[7297000]
    {
      gotoErrorHandling handler[5497697] handler[5497697]
    }
    (642141 'move' nameS[87120] ret[7623978])
    label handler[5497697]
    val errorExists[7297008]:bool[19] "temp"
    (7297013 'move' errorExists[7297008](7297010 '!=' error[5497696] nil[32]))
    if errorExists[7297008]
    {
      (5497718 call chpl_uncaught_error[87456] error[5497696])
    }
    label _end_chpl_error_type_name[587874]
    (5541639 '=' _retArg[5541637] nameS[87120])
    (5541641 return _void[46])
  }
  function chpl_describe_error[87147](const in arg err[87151]:Error[85511], ref arg _retArg[5541673]:string[244]) : void[4] "fn returns via _retArg" "resolved"
  {
    const-val call_tmp[733592]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5541631]:string[244] "temp"
    (87159 call chpl_error_type_name[87098] err[87151] ret_tmp[5541631])
    (5541634 'move' call_tmp[733592] ret_tmp[5541631])
    const-val nameS[87157]:string[244] "dead at end of block" "insert auto destroy"
    (642144 'move' nameS[87157] call_tmp[733592])
    const-val call_tmp[733597]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539140]:string[244] "temp"
    (87167 call +[28065] nameS[87157] ": " ret_tmp[5539140])
    (5539143 'move' call_tmp[733597] ret_tmp[5539140])
    const-val call_tmp[733604]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[5469177]:int(32)[66] "temp"
    (5469181 'move' _virtual_method_tmp_[5469177](5469179 'getcid' err[87151]))
    val ret_tmp[5541525]:string[244] "temp"
    (87177 'virtual method call' message[85497] _virtual_method_tmp_[5469177] err[87151] ret_tmp[5541525])
    (5541528 'move' call_tmp[733604] ret_tmp[5541525])
    const-val call_tmp[733609]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539134]:string[244] "temp"
    (87165 call +[28065] call_tmp[733597] call_tmp[733604] ret_tmp[5539134])
    (5539137 'move' call_tmp[733609] ret_tmp[5539134])
    ref i_x[7335286]:string[244] "temp"
    (7335290 'move' i_x[7335286](7335288 'set reference' call_tmp[733604]))
    (7335294 call deinit[21354] i_x[7335286])
    ref i_x[7335274]:string[244] "temp"
    (7335278 'move' i_x[7335274](7335276 'set reference' call_tmp[733597]))
    (7335282 call deinit[21354] i_x[7335274])
    ref i_x[7335298]:string[244] "temp"
    (7335302 'move' i_x[7335298](7335300 'set reference' nameS[87157]))
    (7335306 call deinit[21354] i_x[7335298])
    label _end_chpl_describe_error[587886]
    (5541675 '=' _retArg[5541673] call_tmp[733609])
    (5541677 return _void[46])
  }
  function chpl_do_fix_thrown_error[87185](const in arg err[87190]:Error[85511]) : Error[85511] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free"
  {
    val fixErr[87197]:Error[85511] "dead at end of block" "insert auto destroy"
    (642148 'move' fixErr[87197] err[87190])
    val coerce_tmp[1500635]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1500640 'move' coerce_tmp[1500635](1500637 'cast' RootClass[236] err[87190]))
    const-val call_tmp[7492452]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7492454 'move' call_tmp[7492452](7492456 '==' coerce_tmp[1500635] nil[32]))
    if call_tmp[7492452]
    {
      val new_temp[1500817]:NilThrownError[85529] "dead after last mention" "temp"
      (1500819 'move' new_temp[1500817](1500682 call _new[1500768]))
      (7647658 '=' fixErr[87197](7647660 'cast' Error[85511] new_temp[1500817]))
    }
    const-val call_tmp[733629]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (733632 'move' call_tmp[733629](87224 '_get_user_line'))
    const-val call_tmp[733634]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (733637 'move' call_tmp[733634](87229 '_get_user_file'))
    val coerce_tmp[7642073]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7642075 'move' coerce_tmp[7642073](7642077 'cast' RootClass[236] fixErr[87197]))
    const-val call_tmp[7642080]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7642082 'move' call_tmp[7642080](7642084 '==' coerce_tmp[7642073] nil[32]))
    if call_tmp[7642080]
    {
      (7642090 call nilCheckHalt[392] "argument to ! is nil")
    }
    val coerce_tmp[1500974]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1500979 'move' coerce_tmp[1500974] fixErr[87197])
    const-val coerce_tmp[1500982]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1500986 'move' coerce_tmp[1500982](9195868 '.v' coerce_tmp[1500974] _hasThrowInfo[85459]))
    const-val call_tmp[7349798]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7349800 'move' call_tmp[7349798](7349802 'u!' coerce_tmp[1500982]))
    if call_tmp[7349798]
    {
      val coerce_tmp[7642096]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7642098 'move' coerce_tmp[7642096](7642100 'cast' RootClass[236] fixErr[87197]))
      const-val call_tmp[7642103]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7642105 'move' call_tmp[7642103](7642107 '==' coerce_tmp[7642096] nil[32]))
      if call_tmp[7642103]
      {
        (7642113 call nilCheckHalt[392] "argument to ! is nil")
      }
      val coerce_tmp[1500990]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500995 'move' coerce_tmp[1500990] fixErr[87197])
      (9195874 '.=' coerce_tmp[1500990] _hasThrowInfo[85459] 1)
      val coerce_tmp[7642119]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7642121 'move' coerce_tmp[7642119](7642123 'cast' RootClass[236] fixErr[87197]))
      const-val call_tmp[7642126]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7642128 'move' call_tmp[7642126](7642130 '==' coerce_tmp[7642119] nil[32]))
      if call_tmp[7642126]
      {
        (7642136 call nilCheckHalt[392] "argument to ! is nil")
      }
      val coerce_tmp[1501000]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1501005 'move' coerce_tmp[1501000] fixErr[87197])
      (9195880 '.=' coerce_tmp[1501000] thrownLine[85442] call_tmp[733629])
      val coerce_tmp[7642142]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7642144 'move' coerce_tmp[7642142](7642146 'cast' RootClass[236] fixErr[87197]))
      const-val call_tmp[7642149]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7642151 'move' call_tmp[7642149](7642153 '==' coerce_tmp[7642142] nil[32]))
      if call_tmp[7642149]
      {
        (7642159 call nilCheckHalt[392] "argument to ! is nil")
      }
      val coerce_tmp[1501010]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1501015 'move' coerce_tmp[1501010] fixErr[87197])
      (9195886 '.=' coerce_tmp[1501010] thrownFileId[85447] call_tmp[733634])
    }
    label _end_chpl_do_fix_thrown_error[587898]
    (587902 return fixErr[87197])
  }
  function chpl_fix_thrown_error[87309](const  ref arg err[87314]:owned Error[1498203]) : Error[85511] "always propagate line file info" "ignore in global analysis" "insert line file info" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[1500602]:owned Error[1498203] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (1500605 'move' _formal_tmp_err[1500602] err[87314])
    ref i_obj[7647537]:owned Error[1498203] "temp"
    (7647541 'move' i_obj[7647537](7647539 'set reference' _formal_tmp_err[1500602]))
    val coerce_tmp[7647548]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7647550 'move' coerce_tmp[7647548](7647552 '.v' i_obj[7647537] chpl_p[1498198]))
    (7647558 'noop')
    val tmp[7647559]:Error[85511] "temp"
    (7647561 'move' tmp[7647559](7647563 'cast' Error[85511] nil[32]))
    (7647566 '.=' i_obj[7647537] chpl_p[1498198] tmp[7647559])
    val coerce_tmp[7647570]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7647572 'move' coerce_tmp[7647570](7647574 'cast' RootClass[236] coerce_tmp[7647548]))
    const-val call_tmp[7647577]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7647579 'move' call_tmp[7647577](7647581 '==' coerce_tmp[7647570] nil[32]))
    if call_tmp[7647577]
    {
      (7647587 call nilCheckHalt[392] "argument to ! is nil")
    }
    val call_tmp[733721]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    (733724 'move' call_tmp[733721](87322 call chpl_do_fix_thrown_error[87185] coerce_tmp[7647548]))
    (5610710 call chpl__autoDestroy[3930254] _formal_tmp_err[1500602])
    (587924 return call_tmp[733721])
  }
  function chpl_delete_error[87431](const in arg err[87436]:Error[85511]) : void[4] "resolved" "no return value for void"
  {
    val coerce_tmp[4345688]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345693 'move' coerce_tmp[4345688](4345690 'cast' RootClass[236] err[87436]))
    const-val call_tmp[7329159]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7329161 'move' call_tmp[7329159](7329163 '!=' coerce_tmp[4345688] nil[32]))
    if call_tmp[7329159]
    {
      (87442 call chpl__delete[1806275] err[87436])
    }
    (587943 return _void[46])
  }
  function chpl_uncaught_error[87456](const in arg err[87460]:Error[85511]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[733786]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (733789 'move' call_tmp[733786](87477 '_get_user_file'))
    const-val call_tmp[733791]:chpl_c_string[16] "dead after last mention" "maybe param" "temp"
    (733794 'move' call_tmp[733791](87476 'chpl_lookupFilename' call_tmp[733786]))
    const-val myFileS[87481]:string[244] "dead at end of block" "insert auto destroy" "split inited"
    val error[5497729]:Error[85511] "error variable" "temp"
    (5497745 'move' error[5497729] nil[32])
    val call_tmp[733803]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (733806 'move' call_tmp[733803](87494 'cast' c_ptrConst(int(8))[1466333] call_tmp[733791]))
    const-val call_tmp[7620740]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620742 'move' call_tmp[7620740](7620744 'string_length_bytes' call_tmp[733803]))
    const-val call_tmp[7620746]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7620748]:owned IllegalArgumentError?[1471812] "temp"
    (7620751 call chpl_checkValue[1511482] call_tmp[7620740] ret_tmp[7620748])
    (7620754 'move' call_tmp[7620746] ret_tmp[7620748])
    ref i_arg[7620759]:owned IllegalArgumentError?[1471812] "temp"
    (7620761 'move' i_arg[7620759](7620763 'set reference' call_tmp[7620746]))
    val call_tmp[7620765]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620767 'move' call_tmp[7620765](7620770 call borrow[1479886] i_arg[7620759]))
    val coerce_tmp[7620775]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7620777 'move' coerce_tmp[7620775](7620779 'cast' RootClass[236] call_tmp[7620765]))
    const-val call_tmp[7620782]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620784 'move' call_tmp[7620782](7620786 '!=' coerce_tmp[7620775] nil[32]))
    if call_tmp[7620782]
    {
      const-val call_tmp[7620791]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7620793]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7620795 'move' coerce_tmp[7620793](7620797 'cast' Error[85511] call_tmp[7620765]))
      val _virtual_method_tmp_[7620800]:int(32)[66] "temp"
      (7620802 'move' _virtual_method_tmp_[7620800](7620804 'getcid' coerce_tmp[7620793]))
      val ret_tmp[7620806]:string[244] "temp"
      (7620808 'virtual method call' message[85497] _virtual_method_tmp_[7620800] coerce_tmp[7620793] ret_tmp[7620806])
      (7620813 'move' call_tmp[7620791] ret_tmp[7620806])
      (7620817 call safeCastCheckHalt[440] call_tmp[7620791])
      ref i_x[7620819]:string[244] "temp"
      (7620821 'move' i_x[7620819](7620823 'set reference' call_tmp[7620791]))
      (7620826 call deinit[21354] i_x[7620819])
    }
    (7620830 call chpl__autoDestroy[3929258] call_tmp[7620746])
    const-val call_tmp[7620832]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620834 'move' call_tmp[7620832] call_tmp[7620740])
    val errorExists[7297016]:bool[19] "temp"
    (7297021 'move' errorExists[7297016](7297018 '!=' error[5497729] nil[32]))
    if errorExists[7297016]
    {
      gotoErrorHandling handler[5497730] handler[5497730]
    }
    const-val ret[7624052]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7624054]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624056 'move' call_tmp[7624054](7624058 'cast' c_ptr(uint(8))[1466369] call_tmp[733803]))
    const-val call_tmp[7624061]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624063 'move' call_tmp[7624061](7624065 '+' call_tmp[7620832] 1))
    const-val call_tmp[7624068]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7624070]:Error[85511] "error variable" "temp"
    (7624072 'move' error[7624070] nil[32])
    const-val ret_tmp[7624075]:string[244] "temp"
    (7624078 call createCopyingBuffer[1513110] call_tmp[7624054] call_tmp[7620832] call_tmp[7624061] strict[37976] error[7624070] ret_tmp[7624075])
    (7624085 'move' call_tmp[7624068] ret_tmp[7624075])
    val errorExists[7624088]:bool[19] "temp"
    (7624090 'move' errorExists[7624088](7624092 '!=' error[7624070] nil[32]))
    if errorExists[7624088]
    {
      (7624097 '=' error[5497729] error[7624070])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624106] _endcreateCopyingBuffer[7624106]
    }
    (7624103 '=' ret[7624052] call_tmp[7624068])
    label _endcreateCopyingBuffer[7624106]
    val errorExists[7297024]:bool[19] "temp"
    (7297029 'move' errorExists[7297024](7297026 '!=' error[5497729] nil[32]))
    if errorExists[7297024]
    {
      gotoErrorHandling handler[5497730] handler[5497730]
    }
    (642168 'move' myFileS[87481] ret[7624052])
    label handler[5497730]
    val errorExists[7297032]:bool[19] "temp"
    (7297037 'move' errorExists[7297032](7297034 '!=' error[5497729] nil[32]))
    if errorExists[7297032]
    {
      (5497751 call chpl_uncaught_error[87456] error[5497729])
    }
    const-val call_tmp[733813]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (733816 'move' call_tmp[733813](87505 '_get_user_line'))
    val coerce_tmp[4345738]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345743 'move' coerce_tmp[4345738] err[87460])
    ref call_tmp[7631807]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (7631809 'move' call_tmp[7631807](7631811 '.' coerce_tmp[4345738] thrownFileId[85447]))
    const-val call_tmp[733825]:chpl_c_string[16] "dead after last mention" "maybe param" "temp"
    (733828 'move' call_tmp[733825](87510 'chpl_lookupFilename' call_tmp[7631807]))
    const-val thrownFileS[87518]:string[244] "dead at end of block" "insert auto destroy" "split inited"
    val error[5497762]:Error[85511] "error variable" "temp"
    (5497778 'move' error[5497762] nil[32])
    val call_tmp[733837]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (733840 'move' call_tmp[733837](87531 'cast' c_ptrConst(int(8))[1466333] call_tmp[733825]))
    const-val call_tmp[7620853]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620855 'move' call_tmp[7620853](7620857 'string_length_bytes' call_tmp[733837]))
    const-val call_tmp[7620859]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7620861]:owned IllegalArgumentError?[1471812] "temp"
    (7620864 call chpl_checkValue[1511482] call_tmp[7620853] ret_tmp[7620861])
    (7620867 'move' call_tmp[7620859] ret_tmp[7620861])
    ref i_arg[7620872]:owned IllegalArgumentError?[1471812] "temp"
    (7620874 'move' i_arg[7620872](7620876 'set reference' call_tmp[7620859]))
    val call_tmp[7620878]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620880 'move' call_tmp[7620878](7620883 call borrow[1479886] i_arg[7620872]))
    val coerce_tmp[7620888]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7620890 'move' coerce_tmp[7620888](7620892 'cast' RootClass[236] call_tmp[7620878]))
    const-val call_tmp[7620895]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620897 'move' call_tmp[7620895](7620899 '!=' coerce_tmp[7620888] nil[32]))
    if call_tmp[7620895]
    {
      const-val call_tmp[7620904]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7620906]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7620908 'move' coerce_tmp[7620906](7620910 'cast' Error[85511] call_tmp[7620878]))
      val _virtual_method_tmp_[7620913]:int(32)[66] "temp"
      (7620915 'move' _virtual_method_tmp_[7620913](7620917 'getcid' coerce_tmp[7620906]))
      val ret_tmp[7620919]:string[244] "temp"
      (7620921 'virtual method call' message[85497] _virtual_method_tmp_[7620913] coerce_tmp[7620906] ret_tmp[7620919])
      (7620926 'move' call_tmp[7620904] ret_tmp[7620919])
      (7620930 call safeCastCheckHalt[440] call_tmp[7620904])
      ref i_x[7620932]:string[244] "temp"
      (7620934 'move' i_x[7620932](7620936 'set reference' call_tmp[7620904]))
      (7620939 call deinit[21354] i_x[7620932])
    }
    (7620943 call chpl__autoDestroy[3929258] call_tmp[7620859])
    const-val call_tmp[7620945]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7620947 'move' call_tmp[7620945] call_tmp[7620853])
    val errorExists[7297040]:bool[19] "temp"
    (7297045 'move' errorExists[7297040](7297042 '!=' error[5497762] nil[32]))
    if errorExists[7297040]
    {
      gotoErrorHandling handler[5497763] handler[5497763]
    }
    const-val ret[7624126]:string[244] "dead after last mention" "RVV" "temp"
    val call_tmp[7624128]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624130 'move' call_tmp[7624128](7624132 'cast' c_ptr(uint(8))[1466369] call_tmp[733837]))
    const-val call_tmp[7624135]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7624137 'move' call_tmp[7624135](7624139 '+' call_tmp[7620945] 1))
    const-val call_tmp[7624142]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[7624144]:Error[85511] "error variable" "temp"
    (7624146 'move' error[7624144] nil[32])
    const-val ret_tmp[7624149]:string[244] "temp"
    (7624152 call createCopyingBuffer[1513110] call_tmp[7624128] call_tmp[7620945] call_tmp[7624135] strict[37976] error[7624144] ret_tmp[7624149])
    (7624159 'move' call_tmp[7624142] ret_tmp[7624149])
    val errorExists[7624162]:bool[19] "temp"
    (7624164 'move' errorExists[7624162](7624166 '!=' error[7624144] nil[32]))
    if errorExists[7624162]
    {
      (7624171 '=' error[5497762] error[7624144])
      gotoErrorHandlingReturn _endcreateCopyingBuffer[7624180] _endcreateCopyingBuffer[7624180]
    }
    (7624177 '=' ret[7624126] call_tmp[7624142])
    label _endcreateCopyingBuffer[7624180]
    val errorExists[7297048]:bool[19] "temp"
    (7297053 'move' errorExists[7297048](7297050 '!=' error[5497762] nil[32]))
    if errorExists[7297048]
    {
      gotoErrorHandling handler[5497763] handler[5497763]
    }
    (642183 'move' thrownFileS[87518] ret[7624126])
    label handler[5497763]
    val errorExists[7297056]:bool[19] "temp"
    (7297061 'move' errorExists[7297056](7297058 '!=' error[5497762] nil[32]))
    if errorExists[7297056]
    {
      (5497784 call chpl_uncaught_error[87456] error[5497762])
    }
    val coerce_tmp[4345787]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345792 'move' coerce_tmp[4345787] err[87460])
    const-val coerce_tmp[4345798]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (4345802 'move' coerce_tmp[4345798](9195901 '.v' coerce_tmp[4345787] thrownLine[85442]))
    (642186 'noop')
    const-val call_tmp[733854]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5541661]:string[244] "temp"
    (87576 call chpl_describe_error[87147] err[87460] ret_tmp[5541661])
    (5541664 'move' call_tmp[733854] ret_tmp[5541661])
    const-val call_tmp[733859]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539206]:string[244] "temp"
    (87570 call +[28065] "uncaught " call_tmp[733854] ret_tmp[5539206])
    (5539209 'move' call_tmp[733859] ret_tmp[5539206])
    const-val call_tmp[733864]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539200]:string[244] "temp"
    (87568 call +[28065] call_tmp[733859] "\n  " ret_tmp[5539200])
    (5539203 'move' call_tmp[733864] ret_tmp[5539200])
    const-val call_tmp[733869]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539194]:string[244] "temp"
    (87566 call +[28065] call_tmp[733864] thrownFileS[87518] ret_tmp[5539194])
    (5539197 'move' call_tmp[733869] ret_tmp[5539194])
    const-val call_tmp[733874]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539188]:string[244] "temp"
    (87564 call +[28065] call_tmp[733869] ":" ret_tmp[5539188])
    (5539191 'move' call_tmp[733874] ret_tmp[5539188])
    const-val call_tmp[733879]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546293]:string[244] "temp"
    (87585 call :[1496816] coerce_tmp[4345798] ret_tmp[5546293])
    (5546296 'move' call_tmp[733879] ret_tmp[5546293])
    const-val call_tmp[733884]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539182]:string[244] "temp"
    (87562 call +[28065] call_tmp[733874] call_tmp[733879] ret_tmp[5539182])
    (5539185 'move' call_tmp[733884] ret_tmp[5539182])
    const-val call_tmp[733889]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539176]:string[244] "temp"
    (87560 call +[28065] call_tmp[733884] ": thrown here" ret_tmp[5539176])
    (5539179 'move' call_tmp[733889] ret_tmp[5539176])
    const-val call_tmp[733894]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539170]:string[244] "temp"
    (87558 call +[28065] call_tmp[733889] "\n  " ret_tmp[5539170])
    (5539173 'move' call_tmp[733894] ret_tmp[5539170])
    const-val call_tmp[733899]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539164]:string[244] "temp"
    (87556 call +[28065] call_tmp[733894] myFileS[87481] ret_tmp[5539164])
    (5539167 'move' call_tmp[733899] ret_tmp[5539164])
    const-val call_tmp[733904]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539158]:string[244] "temp"
    (87554 call +[28065] call_tmp[733899] ":" ret_tmp[5539158])
    (5539161 'move' call_tmp[733904] ret_tmp[5539158])
    const-val call_tmp[733909]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546299]:string[244] "temp"
    (87595 call :[1496816] call_tmp[733813] ret_tmp[5546299])
    (5546302 'move' call_tmp[733909] ret_tmp[5546299])
    const-val call_tmp[733914]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539152]:string[244] "temp"
    (87552 call +[28065] call_tmp[733904] call_tmp[733909] ret_tmp[5539152])
    (5539155 'move' call_tmp[733914] ret_tmp[5539152])
    const-val call_tmp[733919]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539146]:string[244] "temp"
    (87550 call +[28065] call_tmp[733914] ": uncaught here" ret_tmp[5539146])
    (5539149 'move' call_tmp[733919] ret_tmp[5539146])
    const-val s[87549]:string[244] "dead at end of block" "insert auto destroy"
    (642188 'move' s[87549] call_tmp[733919])
    ref i_x[7335454]:string[244] "temp"
    (7335458 'move' i_x[7335454](7335456 'set reference' call_tmp[733914]))
    (7335462 call deinit[21354] i_x[7335454])
    ref i_x[7335442]:string[244] "temp"
    (7335446 'move' i_x[7335442](7335444 'set reference' call_tmp[733909]))
    (7335450 call deinit[21354] i_x[7335442])
    ref i_x[7335430]:string[244] "temp"
    (7335434 'move' i_x[7335430](7335432 'set reference' call_tmp[733904]))
    (7335438 call deinit[21354] i_x[7335430])
    ref i_x[7335418]:string[244] "temp"
    (7335422 'move' i_x[7335418](7335420 'set reference' call_tmp[733899]))
    (7335426 call deinit[21354] i_x[7335418])
    ref i_x[7335406]:string[244] "temp"
    (7335410 'move' i_x[7335406](7335408 'set reference' call_tmp[733894]))
    (7335414 call deinit[21354] i_x[7335406])
    ref i_x[7335394]:string[244] "temp"
    (7335398 'move' i_x[7335394](7335396 'set reference' call_tmp[733889]))
    (7335402 call deinit[21354] i_x[7335394])
    ref i_x[7335382]:string[244] "temp"
    (7335386 'move' i_x[7335382](7335384 'set reference' call_tmp[733884]))
    (7335390 call deinit[21354] i_x[7335382])
    ref i_x[7335370]:string[244] "temp"
    (7335374 'move' i_x[7335370](7335372 'set reference' call_tmp[733879]))
    (7335378 call deinit[21354] i_x[7335370])
    ref i_x[7335358]:string[244] "temp"
    (7335362 'move' i_x[7335358](7335360 'set reference' call_tmp[733874]))
    (7335366 call deinit[21354] i_x[7335358])
    ref i_x[7335346]:string[244] "temp"
    (7335350 'move' i_x[7335346](7335348 'set reference' call_tmp[733869]))
    (7335354 call deinit[21354] i_x[7335346])
    ref i_x[7335334]:string[244] "temp"
    (7335338 'move' i_x[7335334](7335336 'set reference' call_tmp[733864]))
    (7335342 call deinit[21354] i_x[7335334])
    ref i_x[7335322]:string[244] "temp"
    (7335326 'move' i_x[7335322](7335324 'set reference' call_tmp[733859]))
    (7335330 call deinit[21354] i_x[7335322])
    ref i_x[7335310]:string[244] "temp"
    (7335314 'move' i_x[7335310](7335312 'set reference' call_tmp[733854]))
    (7335318 call deinit[21354] i_x[7335310])
    val coerce_tmp[7489816]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489818 'move' coerce_tmp[7489816](7489820 '.v' s[87549] buff[21299]))
    (7489823 'noop')
    val call_tmp[7489824]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489826 'move' call_tmp[7489824](7489828 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489816]))
    (87605 call chpl_error_preformatted[87464] call_tmp[7489824])
    ref i_x[7335466]:string[244] "temp"
    (7335470 'move' i_x[7335466](7335468 'set reference' s[87549]))
    (7335474 call deinit[21354] i_x[7335466])
    ref i_x[7335478]:string[244] "temp"
    (7335482 'move' i_x[7335478](7335480 'set reference' thrownFileS[87518]))
    (7335486 call deinit[21354] i_x[7335478])
    ref i_x[7335490]:string[244] "temp"
    (7335494 'move' i_x[7335490](7335492 'set reference' myFileS[87481]))
    (7335498 call deinit[21354] i_x[7335490])
    (587945 return _void[46])
  }
  function chpl_propagate_error[87613](const in arg err[87617]:Error[85511]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    (87622 call chpl_uncaught_error[87456] err[87617])
    (587947 return _void[46])
  }
  function chpl_forall_error[87626](const in arg err[87630]:Error[85511]) : Error[85511] "resolved"
  {
    val ret[587951]:Error[85511] "dead after last mention" "RVV" "temp"
    val _formal_type_tmp_[7529706]:TaskErrors[87096] "temp"
    val ret[7529708]:TaskErrors[87096] "dead after last mention" "RVV" "temp"
    val coerce_tmp[7529710]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7529712 'move' coerce_tmp[7529710](7529714 'cast' RootClass[236] err[87630]))
    const-val call_tmp[7529717]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7529719 'move' call_tmp[7529717](7529721 '==' coerce_tmp[7529710] nil[32]))
    if call_tmp[7529717]
    {
      (7529726 '=' ret[7529708](7529728 'cast' TaskErrors[87096] nil[32]))
      gotoReturn _end_:[7529744] _end_:[7529744]
    }
    val call_tmp[7529734]:TaskErrors[87096] "dead after last mention" "maybe param" "temp"
    (7529736 'move' call_tmp[7529734](7529738 'dynamic_cast' _formal_type_tmp_[7529706] err[87630]))
    (7529741 'move' ret[7529708] call_tmp[7529734])
    label _end_:[7529744]
    val coerce_tmp[7529819]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7529821 'move' coerce_tmp[7529819](7529823 'cast' RootClass[236] ret[7529708]))
    const-val call_tmp[7529826]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7529828 'move' call_tmp[7529826](7529830 '!=' coerce_tmp[7529819] nil[32]))
    if call_tmp[7529826]
    {
      (4346089 '=' ret[587951] err[87630])
      gotoReturn _end_chpl_forall_error[587949] _end_chpl_forall_error[587949]
    }
    val new_temp[4346071]:TaskErrors[87096] "dead after last mention" "temp"
    (4346073 'move' new_temp[4346071](4345916 call _new[4346024] err[87630]))
    (4346095 '=' ret[587951](4346091 'cast' Error[85511] new_temp[4346071]))
    label _end_chpl_forall_error[587949]
    (587953 return ret[587951])
  }
  function chpl_enum_cast_error[1847892](const in arg casted[1847894]:uint(8)[71], const  ref arg enumName[1847896]:string[244], ref arg error_out[5500667]:Error[85511]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1847902]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555931]:string[244] "temp"
    (1847907 call :[1847963] casted[1847894] ret_tmp[5555931])
    (5555934 'move' call_tmp[1847902] ret_tmp[5555931])
    const-val call_tmp[1847910]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539638]:string[244] "temp"
    (1847915 call +[28065] "bad cast from int '" call_tmp[1847902] ret_tmp[5539638])
    (5539641 'move' call_tmp[1847910] ret_tmp[5539638])
    const-val call_tmp[1847918]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539644]:string[244] "temp"
    (1847923 call +[28065] call_tmp[1847910] "' to enum '" ret_tmp[5539644])
    (5539647 'move' call_tmp[1847918] ret_tmp[5539644])
    const-val call_tmp[1847926]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539650]:string[244] "temp"
    (1847931 call +[28065] call_tmp[1847918] enumName[1847896] ret_tmp[5539650])
    (5539653 'move' call_tmp[1847926] ret_tmp[5539650])
    const-val call_tmp[1847934]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539656]:string[244] "temp"
    (1847939 call +[28065] call_tmp[1847926] "'" ret_tmp[5539656])
    (5539659 'move' call_tmp[1847934] ret_tmp[5539656])
    const-val call_tmp[1847942]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1849504]:IllegalArgumentError[85616] "dead after last mention" "temp"
    (1849506 'move' new_temp[1849504](1849491 call _new[1475209] call_tmp[1847934]))
    const-val initTemp[1849513]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
    (1849516 call init[1475364] initTemp[1849513] new_temp[1849504])
    (1847944 'move' call_tmp[1847942] initTemp[1849513])
    val call_tmp[1847951]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1849530]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
    const-val ret_tmp[5547067]:owned Error[1498203] "temp"
    ref i_x[7643897]:owned IllegalArgumentError[1475882] "temp"
    (7643901 'move' i_x[7643897](7643899 'set reference' call_tmp[1847942]))
    ref i__retArg[7643903]:owned Error[1498203] "temp"
    (7643907 'move' i__retArg[7643903](7643905 'set reference' ret_tmp[5547067]))
    val _formal_tmp_x[7643910]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (7643912 'move' _formal_tmp_x[7643910] i_x[7643897])
    const-val ret[7643915]:owned Error[1498203] "dead after last mention" "RVV" "temp"
    ref i_this[7643917]:owned IllegalArgumentError[1475882] "temp"
    (7643919 'move' i_this[7643917](7643921 'set reference' _formal_tmp_x[7643910]))
    val coerce_tmp[7643923]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7643925 'move' coerce_tmp[7643923](7643927 '.v' i_this[7643917] chpl_p[1475877]))
    val call_tmp[7643930]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    (7643932 'move' call_tmp[7643930](7643934 'cast' Error[85511] coerce_tmp[7643923]))
    ref i_this[7643942]:owned IllegalArgumentError[1475882] "temp"
    (7643944 'move' i_this[7643942](7643946 'set reference' _formal_tmp_x[7643910]))
    val tmp[7643948]:IllegalArgumentError[85616] "temp"
    (7643950 'move' tmp[7643948](7643952 'cast' IllegalArgumentError[85616] nil[32]))
    (7643955 '.=' i_this[7643942] chpl_p[1475877] tmp[7643948])
    val coerce_tmp[7643959]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7643961 'move' coerce_tmp[7643959](7643963 'cast' RootClass[236] call_tmp[7643930]))
    const-val call_tmp[7643966]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7643968 'move' call_tmp[7643966](7643970 '==' coerce_tmp[7643959] nil[32]))
    if call_tmp[7643966]
    {
      (7643976 call nilCheckHalt[392] "argument to ! is nil")
    }
    const-val call_tmp[7643979]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[7643981]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
    (7643984 call init[1499358] initTemp[7643981] call_tmp[7643930])
    (7643987 'move' call_tmp[7643979] initTemp[7643981])
    (7643990 'move' ret[7643915] call_tmp[7643979])
    (7643994 call chpl__autoDestroy[3929468] _formal_tmp_x[7643910])
    (7643998 '=' i__retArg[7643903] ret[7643915])
    (5547070 'move' coerce_tmp[1849530] ret_tmp[5547067])
    const-val _formal_tmp_in_err[1849749]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1849754 'move' _formal_tmp_in_err[1849749] coerce_tmp[1849530])
    (1847953 'move' call_tmp[1847951](1847956 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[1849749]))
    (5500680 '=' error_out[5500667] call_tmp[1847951])
    ref i_x[7338394]:string[244] "temp"
    (7338398 'move' i_x[7338394](7338396 'set reference' call_tmp[1847934]))
    (7338402 call deinit[21354] i_x[7338394])
    ref i_x[7338406]:string[244] "temp"
    (7338410 'move' i_x[7338406](7338408 'set reference' call_tmp[1847926]))
    (7338414 call deinit[21354] i_x[7338406])
    ref i_x[7338418]:string[244] "temp"
    (7338422 'move' i_x[7338418](7338420 'set reference' call_tmp[1847918]))
    (7338426 call deinit[21354] i_x[7338418])
    ref i_x[7338430]:string[244] "temp"
    (7338434 'move' i_x[7338430](7338432 'set reference' call_tmp[1847910]))
    (7338438 call deinit[21354] i_x[7338430])
    ref i_x[7338442]:string[244] "temp"
    (7338446 'move' i_x[7338442](7338444 'set reference' call_tmp[1847902]))
    (7338450 call deinit[21354] i_x[7338442])
    gotoErrorHandlingReturn _endchpl_enum_cast_error[5500669] _endchpl_enum_cast_error[5500669]
    label _endchpl_enum_cast_error[5500669]
    (1847960 return _void[46])
  }
  function assert[87867](const in arg test[87870]:bool[19]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[7349780]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7349782 'move' call_tmp[7349780](7349784 'u!' test[87870]))
    if call_tmp[7349780]
    {
      val inlineImm[7488652]:string[244] "temp"
      (7488655 'move' inlineImm[7488652] "assert failed")
      val coerce_tmp[7488664]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (7488666 'move' coerce_tmp[7488664](7488668 '.v' inlineImm[7488652] buff[21299]))
      (7488671 'noop')
      val call_tmp[7488672]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (7488674 'move' call_tmp[7488672](7488676 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488664]))
      (87874 'chpl_error' call_tmp[7488672])
    }
    (587977 return _void[46])
  }
  function assert[1809366](const in arg test[1809368]:bool[19], const  ref arg _e0_args[1809370]:string[244], const in arg _e1_args[1809372]:int(32)[66], const  ref arg _e2_args[1809374]:string[244], const in arg _e3_args[1809376]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[7350059]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7350061 'move' call_tmp[7350059](7350063 'u!' test[1809368]))
    if call_tmp[7350059]
    {
      const-val call_tmp[1809404]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5555409]:string[244] "temp"
      (1809409 call chpl_stringify_wrapper[1809446] _e0_args[1809370] _e1_args[1809372] _e2_args[1809374] _e3_args[1809376] ret_tmp[5555409])
      (5555412 'move' call_tmp[1809404] ret_tmp[5555409])
      const-val call_tmp[1809414]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5539614]:string[244] "temp"
      (1809419 call +[28065] "assert failed - " call_tmp[1809404] ret_tmp[5539614])
      (5539617 'move' call_tmp[1809414] ret_tmp[5539614])
      const-val tmpstring[1809422]:string[244] "dead at end of block" "insert auto destroy"
      (1809424 'move' tmpstring[1809422] call_tmp[1809414])
      ref i_x[7338142]:string[244] "temp"
      (7338146 'move' i_x[7338142](7338144 'set reference' call_tmp[1809404]))
      (7338150 call deinit[21354] i_x[7338142])
      val coerce_tmp[7489024]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (7489026 'move' coerce_tmp[7489024](7489028 '.v' tmpstring[1809422] buff[21299]))
      (7489031 'noop')
      val call_tmp[7489032]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (7489034 'move' call_tmp[7489032](7489036 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489024]))
      (1809437 'chpl_error' call_tmp[7489032])
      ref i_x[7338154]:string[244] "temp"
      (7338158 'move' i_x[7338154](7338156 'set reference' tmpstring[1809422]))
      (7338162 call deinit[21354] i_x[7338154])
    }
    (1809442 return _void[46])
  }
  function assert[2078252](const in arg test[2078254]:bool[19], const  ref arg _e0_args[2078256]:string[244], const in arg _e1_args[2078258]:uint(64)[86], const  ref arg _e2_args[2078260]:string[244], const in arg _e3_args[2078262]:uint(64)[86]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[7350383]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7350385 'move' call_tmp[7350383](7350387 'u!' test[2078254]))
    if call_tmp[7350383]
    {
      const-val call_tmp[2078290]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5561874]:string[244] "temp"
      (2078295 call chpl_stringify_wrapper[2078338] _e0_args[2078256] _e1_args[2078258] _e2_args[2078260] _e3_args[2078262] ret_tmp[5561874])
      (5561877 'move' call_tmp[2078290] ret_tmp[5561874])
      const-val call_tmp[2078300]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5539776]:string[244] "temp"
      (2078305 call +[28065] "assert failed - " call_tmp[2078290] ret_tmp[5539776])
      (5539779 'move' call_tmp[2078300] ret_tmp[5539776])
      const-val tmpstring[2078308]:string[244] "dead at end of block" "insert auto destroy"
      (2078310 'move' tmpstring[2078308] call_tmp[2078300])
      ref i_x[7339726]:string[244] "temp"
      (7339730 'move' i_x[7339726](7339728 'set reference' call_tmp[2078290]))
      (7339734 call deinit[21354] i_x[7339726])
      val coerce_tmp[7489384]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (7489386 'move' coerce_tmp[7489384](7489388 '.v' tmpstring[2078308] buff[21299]))
      (7489391 'noop')
      val call_tmp[7489392]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (7489394 'move' call_tmp[7489392](7489396 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489384]))
      (2078323 'chpl_error' call_tmp[7489392])
      ref i_x[7339738]:string[244] "temp"
      (7339742 'move' i_x[7339738](7339740 'set reference' tmpstring[2078308]))
      (7339746 call deinit[21354] i_x[7339738])
    }
    (2078328 return _void[46])
  }
  function assert[2054013](const in arg test[2054015]:bool[19], const  ref arg _e0_args[2054017]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[7350356]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7350358 'move' call_tmp[7350356](7350360 'u!' test[2054015]))
    if call_tmp[7350356]
    {
      const-val call_tmp[2054039]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5561452]:string[244] "temp"
      (2054044 call chpl_stringify_wrapper[2054078] _e0_args[2054017] ret_tmp[5561452])
      (5561455 'move' call_tmp[2054039] ret_tmp[5561452])
      const-val call_tmp[2054046]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5539770]:string[244] "temp"
      (2054051 call +[28065] "assert failed - " call_tmp[2054039] ret_tmp[5539770])
      (5539773 'move' call_tmp[2054046] ret_tmp[5539770])
      const-val tmpstring[2054054]:string[244] "dead at end of block" "insert auto destroy"
      (2054056 'move' tmpstring[2054054] call_tmp[2054046])
      ref i_x[7339702]:string[244] "temp"
      (7339706 'move' i_x[7339702](7339704 'set reference' call_tmp[2054039]))
      (7339710 call deinit[21354] i_x[7339702])
      val coerce_tmp[7489360]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (7489362 'move' coerce_tmp[7489360](7489364 '.v' tmpstring[2054054] buff[21299]))
      (7489367 'noop')
      val call_tmp[7489368]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (7489370 'move' call_tmp[7489368](7489372 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489360]))
      (2054069 'chpl_error' call_tmp[7489368])
      ref i_x[7339714]:string[244] "temp"
      (7339718 'move' i_x[7339714](7339716 'set reference' tmpstring[2054054]))
      (7339722 call deinit[21354] i_x[7339714])
    }
    (2054074 return _void[46])
  }
  function compilerWarning[4514969]() : void[4] "expanded varargs" "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "no return value for void"
  {
    (4514978 return _void[46])
  }
  function compilerWarning[4637702]() : void[4] "expanded varargs" "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "no return value for void"
  {
    (4637711 return _void[46])
  }
  function compilerAssert[1518488]() : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free" "no return value for void"
  {
    (1518516 return _void[46])
  }
  function compilerAssert[1530591]() : void[4] "expanded varargs" "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "no return value for void"
  {
    (1530624 return _void[46])
  }
  function halt[88131](const  ref arg msg[88134]:string[244]) : void[4] "always propagate line file info" "function terminates program" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[734245]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[7399805]:string[244] "dead after last mention" "RVV" "temp"
    val ret[7399807]:string[244] "dead at end of block" "insert auto destroy"
    (7399810 call init[21321] ret[7399807])
    const-val coerce_tmp[7399812]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7399814 'move' coerce_tmp[7399812](7399816 '.v' msg[88134] cachedNumCodepoints[21293]))
    (7399819 '.=' ret[7399807] cachedNumCodepoints[21293] coerce_tmp[7399812])
    (7399824 call initWithBorrowedBuffer[1470549] ret[7399807] msg[88134])
    (7399827 '=' ret[7399805] ret[7399807])
    (5538727 'move' call_tmp[734245] ret[7399805])
    val coerce_tmp[7488712]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488714 'move' coerce_tmp[7488712](7488716 '.v' call_tmp[734245] buff[21299]))
    (7488719 'noop')
    val call_tmp[7488720]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488722 'move' call_tmp[7488720](7488724 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488712]))
    (88139 call halt[1504499] call_tmp[7488720])
    ref i_x[7335502]:string[244] "temp"
    (7335506 'move' i_x[7335502](7335504 'set reference' call_tmp[734245]))
    (7335510 call deinit[21354] i_x[7335502])
    (588001 return _void[46])
  }
  function halt[1504499](const in arg _e0_args[1504501]:c_ptrConst(int(8))[1466333]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1504507]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5547304]:string[244] "temp"
    (1504512 call chpl_stringify_wrapper[1504580] _e0_args[1504501] ret_tmp[5547304])
    (5547307 'move' call_tmp[1504507] ret_tmp[5547304])
    const-val call_tmp[1504514]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539230]:string[244] "temp"
    (1504519 call +[28065] "halt reached - " call_tmp[1504507] ret_tmp[5539230])
    (5539233 'move' call_tmp[1504514] ret_tmp[5539230])
    const-val tmpstring[1504522]:string[244] "dead at end of block" "insert auto destroy"
    (1504524 'move' tmpstring[1504522] call_tmp[1504514])
    ref i_x[7335910]:string[244] "temp"
    (7335914 'move' i_x[7335910](7335912 'set reference' call_tmp[1504507]))
    (7335918 call deinit[21354] i_x[7335910])
    val coerce_tmp[7488736]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488738 'move' coerce_tmp[7488736](7488740 '.v' tmpstring[1504522] buff[21299]))
    (7488743 'noop')
    val call_tmp[7488744]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488746 'move' call_tmp[7488744](7488748 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488736]))
    (1504537 'chpl_error' call_tmp[7488744])
    ref i_x[7335922]:string[244] "temp"
    (7335926 'move' i_x[7335922](7335924 'set reference' tmpstring[1504522]))
    (7335930 call deinit[21354] i_x[7335922])
    (1504541 return _void[46])
  }
  function halt[1483780](const  ref arg _e0_args[1483782]:string[244], const in arg _e1_args[1483784]:int(64)[10], const  ref arg _e2_args[1483786]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1483796]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546200]:string[244] "temp"
    (1483801 call chpl_stringify_wrapper[1483881] _e0_args[1483782] _e1_args[1483784] _e2_args[1483786] ret_tmp[5546200])
    (5546203 'move' call_tmp[1483796] ret_tmp[5546200])
    const-val call_tmp[1483805]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539224]:string[244] "temp"
    (1483810 call +[28065] "halt reached - " call_tmp[1483796] ret_tmp[5539224])
    (5539227 'move' call_tmp[1483805] ret_tmp[5539224])
    const-val tmpstring[1483813]:string[244] "dead at end of block" "insert auto destroy"
    (1483815 'move' tmpstring[1483813] call_tmp[1483805])
    ref i_x[7335874]:string[244] "temp"
    (7335878 'move' i_x[7335874](7335876 'set reference' call_tmp[1483796]))
    (7335882 call deinit[21354] i_x[7335874])
    val coerce_tmp[7488688]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488690 'move' coerce_tmp[7488688](7488692 '.v' tmpstring[1483813] buff[21299]))
    (7488695 'noop')
    val call_tmp[7488696]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488698 'move' call_tmp[7488696](7488700 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488688]))
    (1483828 'chpl_error' call_tmp[7488696])
    ref i_x[7335886]:string[244] "temp"
    (7335890 'move' i_x[7335886](7335888 'set reference' tmpstring[1483813]))
    (7335894 call deinit[21354] i_x[7335886])
    (1483832 return _void[46])
  }
  function halt[1832970](const  ref arg _e0_args[1832972]:string[244], const in arg _e1_args[1832974]:ArrayInit[66987], const  ref arg _e2_args[1832976]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1832986]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555643]:string[244] "temp"
    (1832991 call chpl_stringify_wrapper[1833025] _e0_args[1832972] _e1_args[1832974] _e2_args[1832976] ret_tmp[5555643])
    (5555646 'move' call_tmp[1832986] ret_tmp[5555643])
    const-val call_tmp[1832995]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539626]:string[244] "temp"
    (1833000 call +[28065] "halt reached - " call_tmp[1832986] ret_tmp[5539626])
    (5539629 'move' call_tmp[1832995] ret_tmp[5539626])
    const-val tmpstring[1833003]:string[244] "dead at end of block" "insert auto destroy"
    (1833005 'move' tmpstring[1833003] call_tmp[1832995])
    ref i_x[7338238]:string[244] "temp"
    (7338242 'move' i_x[7338238](7338240 'set reference' call_tmp[1832986]))
    (7338246 call deinit[21354] i_x[7338238])
    val coerce_tmp[7489192]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489194 'move' coerce_tmp[7489192](7489196 '.v' tmpstring[1833003] buff[21299]))
    (7489199 'noop')
    val call_tmp[7489200]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489202 'move' call_tmp[7489200](7489204 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489192]))
    (1833018 'chpl_error' call_tmp[7489200])
    ref i_x[7338250]:string[244] "temp"
    (7338254 'move' i_x[7338250](7338252 'set reference' tmpstring[1833003]))
    (7338258 call deinit[21354] i_x[7338250])
    (1833022 return _void[46])
  }
  function halt[1600471](const  ref arg _e0_args[1600473]:string[244], const in arg _e1_args[1600475]:int(64)[10], const  ref arg _e2_args[1600477]:string[244], const in arg _e3_args[1600479]:int(64)[10], const  ref arg _e4_args[1600481]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1600495]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5548901]:string[244] "temp"
    (1600500 call chpl_stringify_wrapper[1600592] _e0_args[1600473] _e1_args[1600475] _e2_args[1600477] _e3_args[1600479] _e4_args[1600481] ret_tmp[5548901])
    (5548904 'move' call_tmp[1600495] ret_tmp[5548901])
    const-val call_tmp[1600506]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539344]:string[244] "temp"
    (1600511 call +[28065] "halt reached - " call_tmp[1600495] ret_tmp[5539344])
    (5539347 'move' call_tmp[1600506] ret_tmp[5539344])
    const-val tmpstring[1600514]:string[244] "dead at end of block" "insert auto destroy"
    (1600516 'move' tmpstring[1600514] call_tmp[1600506])
    ref i_x[7336498]:string[244] "temp"
    (7336502 'move' i_x[7336498](7336500 'set reference' call_tmp[1600495]))
    (7336506 call deinit[21354] i_x[7336498])
    val coerce_tmp[7488784]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488786 'move' coerce_tmp[7488784](7488788 '.v' tmpstring[1600514] buff[21299]))
    (7488791 'noop')
    val call_tmp[7488792]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488794 'move' call_tmp[7488792](7488796 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488784]))
    (1600529 'chpl_error' call_tmp[7488792])
    ref i_x[7336510]:string[244] "temp"
    (7336514 'move' i_x[7336510](7336512 'set reference' tmpstring[1600514]))
    (7336518 call deinit[21354] i_x[7336510])
    (1600533 return _void[46])
  }
  function halt[1900307](const  ref arg _e0_args[1900309]:string[244], const  ref arg _e1_args[1900311]:string[244], const in arg _e2_args[1900313]:int(64)[10], const  ref arg _e3_args[1900315]:string[244], const in arg _e4_args[1900317]:range(int(64),both,one)[1610039]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1900331]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557100]:string[244] "temp"
    (1900336 call chpl_stringify_wrapper[1900378] _e0_args[1900309] _e1_args[1900311] _e2_args[1900313] _e3_args[1900315] _e4_args[1900317] ret_tmp[5557100])
    (5557103 'move' call_tmp[1900331] ret_tmp[5557100])
    const-val call_tmp[1900342]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539680]:string[244] "temp"
    (1900347 call +[28065] "halt reached - " call_tmp[1900331] ret_tmp[5539680])
    (5539683 'move' call_tmp[1900342] ret_tmp[5539680])
    const-val tmpstring[1900350]:string[244] "dead at end of block" "insert auto destroy"
    (1900352 'move' tmpstring[1900350] call_tmp[1900342])
    ref i_x[7338778]:string[244] "temp"
    (7338782 'move' i_x[7338778](7338780 'set reference' call_tmp[1900331]))
    (7338786 call deinit[21354] i_x[7338778])
    val coerce_tmp[7489216]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489218 'move' coerce_tmp[7489216](7489220 '.v' tmpstring[1900350] buff[21299]))
    (7489223 'noop')
    val call_tmp[7489224]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489226 'move' call_tmp[7489224](7489228 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489216]))
    (1900365 'chpl_error' call_tmp[7489224])
    ref i_x[7338790]:string[244] "temp"
    (7338794 'move' i_x[7338790](7338792 'set reference' tmpstring[1900350]))
    (7338798 call deinit[21354] i_x[7338790])
    (1900369 return _void[46])
  }
  function halt[1640377](const  ref arg _e0_args[1640379]:string[244], const in arg _e1_args[1640381]:range(int(64),both,one)[1610039], const  ref arg _e2_args[1640383]:string[244], const in arg _e3_args[1640385]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1640397]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5549709]:string[244] "temp"
    (1640402 call chpl_stringify_wrapper[1640488] _e0_args[1640379] _e1_args[1640381] _e2_args[1640383] _e3_args[1640385] ret_tmp[5549709])
    (5549712 'move' call_tmp[1640397] ret_tmp[5549709])
    const-val call_tmp[1640407]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539362]:string[244] "temp"
    (1640412 call +[28065] "halt reached - " call_tmp[1640397] ret_tmp[5539362])
    (5539365 'move' call_tmp[1640407] ret_tmp[5539362])
    const-val tmpstring[1640415]:string[244] "dead at end of block" "insert auto destroy"
    (1640417 'move' tmpstring[1640415] call_tmp[1640407])
    ref i_x[7336630]:string[244] "temp"
    (7336634 'move' i_x[7336630](7336632 'set reference' call_tmp[1640397]))
    (7336638 call deinit[21354] i_x[7336630])
    val coerce_tmp[7488808]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488810 'move' coerce_tmp[7488808](7488812 '.v' tmpstring[1640415] buff[21299]))
    (7488815 'noop')
    val call_tmp[7488816]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488818 'move' call_tmp[7488816](7488820 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488808]))
    (1640430 'chpl_error' call_tmp[7488816])
    ref i_x[7336642]:string[244] "temp"
    (7336646 'move' i_x[7336642](7336644 'set reference' tmpstring[1640415]))
    (7336650 call deinit[21354] i_x[7336642])
    (1640434 return _void[46])
  }
  function halt[1664036](const  ref arg _e0_args[1664038]:string[244], const in arg _e1_args[1664040]:range(byteIndex,both,one)[1655317], const  ref arg _e2_args[1664042]:string[244], const in arg _e3_args[1664044]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1664056]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550141]:string[244] "temp"
    (1664061 call chpl_stringify_wrapper[1664096] _e0_args[1664038] _e1_args[1664040] _e2_args[1664042] _e3_args[1664044] ret_tmp[5550141])
    (5550144 'move' call_tmp[1664056] ret_tmp[5550141])
    const-val call_tmp[1664066]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539404]:string[244] "temp"
    (1664071 call +[28065] "halt reached - " call_tmp[1664056] ret_tmp[5539404])
    (5539407 'move' call_tmp[1664066] ret_tmp[5539404])
    const-val tmpstring[1664074]:string[244] "dead at end of block" "insert auto destroy"
    (1664076 'move' tmpstring[1664074] call_tmp[1664066])
    ref i_x[7336870]:string[244] "temp"
    (7336874 'move' i_x[7336870](7336872 'set reference' call_tmp[1664056]))
    (7336878 call deinit[21354] i_x[7336870])
    val coerce_tmp[7488832]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488834 'move' coerce_tmp[7488832](7488836 '.v' tmpstring[1664074] buff[21299]))
    (7488839 'noop')
    val call_tmp[7488840]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488842 'move' call_tmp[7488840](7488844 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488832]))
    (1664089 'chpl_error' call_tmp[7488840])
    ref i_x[7336882]:string[244] "temp"
    (7336886 'move' i_x[7336882](7336884 'set reference' tmpstring[1664074]))
    (7336890 call deinit[21354] i_x[7336882])
    (1664093 return _void[46])
  }
  function halt[1673640](const  ref arg _e0_args[1673642]:string[244], const in arg _e1_args[1673644]:int(64)[10], const  ref arg _e2_args[1673646]:string[244], const in arg _e3_args[1673648]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1673660]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550216]:string[244] "temp"
    (1673665 call chpl_stringify_wrapper[1673700] _e0_args[1673642] _e1_args[1673644] _e2_args[1673646] _e3_args[1673648] ret_tmp[5550216])
    (5550219 'move' call_tmp[1673660] ret_tmp[5550216])
    const-val call_tmp[1673670]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539410]:string[244] "temp"
    (1673675 call +[28065] "halt reached - " call_tmp[1673660] ret_tmp[5539410])
    (5539413 'move' call_tmp[1673670] ret_tmp[5539410])
    const-val tmpstring[1673678]:string[244] "dead at end of block" "insert auto destroy"
    (1673680 'move' tmpstring[1673678] call_tmp[1673670])
    ref i_x[7336942]:string[244] "temp"
    (7336946 'move' i_x[7336942](7336944 'set reference' call_tmp[1673660]))
    (7336950 call deinit[21354] i_x[7336942])
    val coerce_tmp[7488856]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488858 'move' coerce_tmp[7488856](7488860 '.v' tmpstring[1673678] buff[21299]))
    (7488863 'noop')
    val call_tmp[7488864]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488866 'move' call_tmp[7488864](7488868 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488856]))
    (1673693 'chpl_error' call_tmp[7488864])
    ref i_x[7336954]:string[244] "temp"
    (7336958 'move' i_x[7336954](7336956 'set reference' tmpstring[1673678]))
    (7336962 call deinit[21354] i_x[7336954])
    (1673697 return _void[46])
  }
  function halt[1685520](const  ref arg _e0_args[1685522]:string[244], const in arg _e1_args[1685524]:range(int(64),low,one)[1576928], const  ref arg _e2_args[1685526]:string[244], const in arg _e3_args[1685528]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1685540]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550348]:string[244] "temp"
    (1685545 call chpl_stringify_wrapper[1685580] _e0_args[1685522] _e1_args[1685524] _e2_args[1685526] _e3_args[1685528] ret_tmp[5550348])
    (5550351 'move' call_tmp[1685540] ret_tmp[5550348])
    const-val call_tmp[1685550]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539416]:string[244] "temp"
    (1685555 call +[28065] "halt reached - " call_tmp[1685540] ret_tmp[5539416])
    (5539419 'move' call_tmp[1685550] ret_tmp[5539416])
    const-val tmpstring[1685558]:string[244] "dead at end of block" "insert auto destroy"
    (1685560 'move' tmpstring[1685558] call_tmp[1685550])
    ref i_x[7336990]:string[244] "temp"
    (7336994 'move' i_x[7336990](7336992 'set reference' call_tmp[1685540]))
    (7336998 call deinit[21354] i_x[7336990])
    val coerce_tmp[7488880]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488882 'move' coerce_tmp[7488880](7488884 '.v' tmpstring[1685558] buff[21299]))
    (7488887 'noop')
    val call_tmp[7488888]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488890 'move' call_tmp[7488888](7488892 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488880]))
    (1685573 'chpl_error' call_tmp[7488888])
    ref i_x[7337002]:string[244] "temp"
    (7337006 'move' i_x[7337002](7337004 'set reference' tmpstring[1685558]))
    (7337010 call deinit[21354] i_x[7337002])
    (1685577 return _void[46])
  }
  function halt[1705288](const  ref arg _e0_args[1705290]:string[244], const in arg _e1_args[1705292]:range(byteIndex,low,one)[1698271], const  ref arg _e2_args[1705294]:string[244], const in arg _e3_args[1705296]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1705308]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550579]:string[244] "temp"
    (1705313 call chpl_stringify_wrapper[1705348] _e0_args[1705290] _e1_args[1705292] _e2_args[1705294] _e3_args[1705296] ret_tmp[5550579])
    (5550582 'move' call_tmp[1705308] ret_tmp[5550579])
    const-val call_tmp[1705318]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539446]:string[244] "temp"
    (1705323 call +[28065] "halt reached - " call_tmp[1705308] ret_tmp[5539446])
    (5539449 'move' call_tmp[1705318] ret_tmp[5539446])
    const-val tmpstring[1705326]:string[244] "dead at end of block" "insert auto destroy"
    (1705328 'move' tmpstring[1705326] call_tmp[1705318])
    ref i_x[7337242]:string[244] "temp"
    (7337246 'move' i_x[7337242](7337244 'set reference' call_tmp[1705308]))
    (7337250 call deinit[21354] i_x[7337242])
    val coerce_tmp[7488904]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488906 'move' coerce_tmp[7488904](7488908 '.v' tmpstring[1705326] buff[21299]))
    (7488911 'noop')
    val call_tmp[7488912]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488914 'move' call_tmp[7488912](7488916 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488904]))
    (1705341 'chpl_error' call_tmp[7488912])
    ref i_x[7337254]:string[244] "temp"
    (7337258 'move' i_x[7337254](7337256 'set reference' tmpstring[1705326]))
    (7337262 call deinit[21354] i_x[7337254])
    (1705345 return _void[46])
  }
  function halt[1735757](const  ref arg _e0_args[1735759]:string[244], const in arg _e1_args[1735761]:range(byteIndex,high,one)[1726799], const  ref arg _e2_args[1735763]:string[244], const in arg _e3_args[1735765]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1735777]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5551353]:string[244] "temp"
    (1735782 call chpl_stringify_wrapper[1735817] _e0_args[1735759] _e1_args[1735761] _e2_args[1735763] _e3_args[1735765] ret_tmp[5551353])
    (5551356 'move' call_tmp[1735777] ret_tmp[5551353])
    const-val call_tmp[1735787]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539488]:string[244] "temp"
    (1735792 call +[28065] "halt reached - " call_tmp[1735777] ret_tmp[5539488])
    (5539491 'move' call_tmp[1735787] ret_tmp[5539488])
    const-val tmpstring[1735795]:string[244] "dead at end of block" "insert auto destroy"
    (1735797 'move' tmpstring[1735795] call_tmp[1735787])
    ref i_x[7337482]:string[244] "temp"
    (7337486 'move' i_x[7337482](7337484 'set reference' call_tmp[1735777]))
    (7337490 call deinit[21354] i_x[7337482])
    val coerce_tmp[7488928]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7488930 'move' coerce_tmp[7488928](7488932 '.v' tmpstring[1735795] buff[21299]))
    (7488935 'noop')
    val call_tmp[7488936]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7488938 'move' call_tmp[7488936](7488940 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7488928]))
    (1735810 'chpl_error' call_tmp[7488936])
    ref i_x[7337494]:string[244] "temp"
    (7337498 'move' i_x[7337494](7337496 'set reference' tmpstring[1735795]))
    (7337502 call deinit[21354] i_x[7337494])
    (1735814 return _void[46])
  }
  function halt[1785554](const  ref arg _e0_args[1785556]:string[244], const  ref arg _e1_args[1785558]:string[244], const  ref arg _e2_args[1785560]:string[244], const  ref arg _e3_args[1785562]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1785574]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5554842]:string[244] "temp"
    (1785579 call chpl_stringify_wrapper[1785614] _e0_args[1785556] _e1_args[1785558] _e2_args[1785560] _e3_args[1785562] ret_tmp[5554842])
    (5554845 'move' call_tmp[1785574] ret_tmp[5554842])
    const-val call_tmp[1785584]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539608]:string[244] "temp"
    (1785589 call +[28065] "halt reached - " call_tmp[1785574] ret_tmp[5539608])
    (5539611 'move' call_tmp[1785584] ret_tmp[5539608])
    const-val tmpstring[1785592]:string[244] "dead at end of block" "insert auto destroy"
    (1785594 'move' tmpstring[1785592] call_tmp[1785584])
    ref i_x[7338118]:string[244] "temp"
    (7338122 'move' i_x[7338118](7338120 'set reference' call_tmp[1785574]))
    (7338126 call deinit[21354] i_x[7338118])
    val coerce_tmp[7489000]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489002 'move' coerce_tmp[7489000](7489004 '.v' tmpstring[1785592] buff[21299]))
    (7489007 'noop')
    val call_tmp[7489008]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489010 'move' call_tmp[7489008](7489012 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489000]))
    (1785607 'chpl_error' call_tmp[7489008])
    ref i_x[7338130]:string[244] "temp"
    (7338134 'move' i_x[7338130](7338132 'set reference' tmpstring[1785592]))
    (7338138 call deinit[21354] i_x[7338130])
    (1785611 return _void[46])
  }
  function halt[5090017](const  ref arg _e0_args[5090019]:string[244], const  ref arg _e1_args[5090021]:3*int(64)[1995504], const  ref arg _e2_args[5090023]:string[244], const  ref arg _e3_args[5090025]:4*int(64)[1960494]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[5090037]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5607953]:string[244] "temp"
    (5090042 call chpl_stringify_wrapper[5090077] _e0_args[5090019] _e1_args[5090021] _e2_args[5090023] _e3_args[5090025] ret_tmp[5607953])
    (5607956 'move' call_tmp[5090037] ret_tmp[5607953])
    const-val call_tmp[5090047]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5541156]:string[244] "temp"
    (5090052 call +[28065] "halt reached - " call_tmp[5090037] ret_tmp[5541156])
    (5541159 'move' call_tmp[5090047] ret_tmp[5541156])
    const-val tmpstring[5090055]:string[244] "dead at end of block" "insert auto destroy"
    (5090057 'move' tmpstring[5090055] call_tmp[5090047])
    ref i_x[7346002]:string[244] "temp"
    (7346006 'move' i_x[7346002](7346004 'set reference' call_tmp[5090037]))
    (7346010 call deinit[21354] i_x[7346002])
    val coerce_tmp[7489864]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489866 'move' coerce_tmp[7489864](7489868 '.v' tmpstring[5090055] buff[21299]))
    (7489871 'noop')
    val call_tmp[7489872]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489874 'move' call_tmp[7489872](7489876 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489864]))
    (5090070 'chpl_error' call_tmp[7489872])
    ref i_x[7346014]:string[244] "temp"
    (7346018 'move' i_x[7346014](7346016 'set reference' tmpstring[5090055]))
    (7346022 call deinit[21354] i_x[7346014])
    (5090074 return _void[46])
  }
  function halt[1821083](const  ref arg _e0_args[1821085]:string[244], const in arg _e1_args[1821087]:uint(64)[86]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1821095]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555550]:string[244] "temp"
    (1821100 call chpl_stringify_wrapper[1821174] _e0_args[1821085] _e1_args[1821087] ret_tmp[5555550])
    (5555553 'move' call_tmp[1821095] ret_tmp[5555550])
    const-val call_tmp[1821103]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539620]:string[244] "temp"
    (1821108 call +[28065] "halt reached - " call_tmp[1821095] ret_tmp[5539620])
    (5539623 'move' call_tmp[1821103] ret_tmp[5539620])
    const-val tmpstring[1821111]:string[244] "dead at end of block" "insert auto destroy"
    (1821113 'move' tmpstring[1821111] call_tmp[1821103])
    ref i_x[7338202]:string[244] "temp"
    (7338206 'move' i_x[7338202](7338204 'set reference' call_tmp[1821095]))
    (7338210 call deinit[21354] i_x[7338202])
    val coerce_tmp[7489048]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489050 'move' coerce_tmp[7489048](7489052 '.v' tmpstring[1821111] buff[21299]))
    (7489055 'noop')
    val call_tmp[7489056]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489058 'move' call_tmp[7489056](7489060 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489048]))
    (1821126 'chpl_error' call_tmp[7489056])
    ref i_x[7338214]:string[244] "temp"
    (7338218 'move' i_x[7338214](7338216 'set reference' tmpstring[1821111]))
    (7338222 call deinit[21354] i_x[7338214])
    (1821130 return _void[46])
  }
  function halt[1925218](const  ref arg _e0_args[1925220]:string[244], const in arg _e1_args[1925222]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1925230]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557659]:string[244] "temp"
    (1925235 call chpl_stringify_wrapper[1925268] _e0_args[1925220] _e1_args[1925222] ret_tmp[5557659])
    (5557662 'move' call_tmp[1925230] ret_tmp[5557659])
    const-val call_tmp[1925238]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539722]:string[244] "temp"
    (1925243 call +[28065] "halt reached - " call_tmp[1925230] ret_tmp[5539722])
    (5539725 'move' call_tmp[1925238] ret_tmp[5539722])
    const-val tmpstring[1925246]:string[244] "dead at end of block" "insert auto destroy"
    (1925248 'move' tmpstring[1925246] call_tmp[1925238])
    ref i_x[7339270]:string[244] "temp"
    (7339274 'move' i_x[7339270](7339272 'set reference' call_tmp[1925230]))
    (7339278 call deinit[21354] i_x[7339270])
    val coerce_tmp[7489288]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489290 'move' coerce_tmp[7489288](7489292 '.v' tmpstring[1925246] buff[21299]))
    (7489295 'noop')
    val call_tmp[7489296]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489298 'move' call_tmp[7489296](7489300 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489288]))
    (1925261 'chpl_error' call_tmp[7489296])
    ref i_x[7339282]:string[244] "temp"
    (7339286 'move' i_x[7339282](7339284 'set reference' tmpstring[1925246]))
    (7339290 call deinit[21354] i_x[7339282])
    (1925265 return _void[46])
  }
  function halt[3006352](const  ref arg _e0_args[3006354]:string[244], const  ref arg _e1_args[3006356]:Tensor(real(64))[1960841]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[3006364]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5583990]:string[244] "temp"
    (3006369 call chpl_stringify_wrapper[3006402] _e0_args[3006354] _e1_args[3006356] ret_tmp[5583990])
    (5583993 'move' call_tmp[3006364] ret_tmp[5583990])
    const-val call_tmp[3006372]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5540046]:string[244] "temp"
    (3006377 call +[28065] "halt reached - " call_tmp[3006364] ret_tmp[5540046])
    (5540049 'move' call_tmp[3006372] ret_tmp[5540046])
    const-val tmpstring[3006380]:string[244] "dead at end of block" "insert auto destroy"
    (3006382 'move' tmpstring[3006380] call_tmp[3006372])
    ref i_x[7340890]:string[244] "temp"
    (7340894 'move' i_x[7340890](7340892 'set reference' call_tmp[3006364]))
    (7340898 call deinit[21354] i_x[7340890])
    val coerce_tmp[7489456]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489458 'move' coerce_tmp[7489456](7489460 '.v' tmpstring[3006380] buff[21299]))
    (7489463 'noop')
    val call_tmp[7489464]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489466 'move' call_tmp[7489464](7489468 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489456]))
    (3006395 'chpl_error' call_tmp[7489464])
    ref i_x[7340902]:string[244] "temp"
    (7340906 'move' i_x[7340902](7340904 'set reference' tmpstring[3006380]))
    (7340910 call deinit[21354] i_x[7340902])
    (3006399 return _void[46])
  }
  function halt[3251951](const  ref arg _e0_args[3251953]:string[244], const  ref arg _e1_args[3251955]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[3251963]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557740]:string[244] "temp"
    (3251968 call chpl_stringify_wrapper[1936460] _e0_args[3251953] _e1_args[3251955] ret_tmp[5557740])
    (5557743 'move' call_tmp[3251963] ret_tmp[5557740])
    const-val call_tmp[3251971]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5540202]:string[244] "temp"
    (3251976 call +[28065] "halt reached - " call_tmp[3251963] ret_tmp[5540202])
    (5540205 'move' call_tmp[3251971] ret_tmp[5540202])
    const-val tmpstring[3251979]:string[244] "dead at end of block" "insert auto destroy"
    (3251981 'move' tmpstring[3251979] call_tmp[3251971])
    ref i_x[7341694]:string[244] "temp"
    (7341698 'move' i_x[7341694](7341696 'set reference' call_tmp[3251963]))
    (7341702 call deinit[21354] i_x[7341694])
    val coerce_tmp[7489480]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489482 'move' coerce_tmp[7489480](7489484 '.v' tmpstring[3251979] buff[21299]))
    (7489487 'noop')
    val call_tmp[7489488]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489490 'move' call_tmp[7489488](7489492 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489480]))
    (3251994 'chpl_error' call_tmp[7489488])
    ref i_x[7341706]:string[244] "temp"
    (7341710 'move' i_x[7341706](7341708 'set reference' tmpstring[3251979]))
    (7341714 call deinit[21354] i_x[7341706])
    (3251998 return _void[46])
  }
  function halt[2014349](const  ref arg _e0_args[2014351]:string[244], const  ref arg _e1_args[2014353]:string[244], const in arg _e2_args[2014355]:int(64)[10], const  ref arg _e3_args[2014357]:string[244], const in arg _e4_args[2014359]:uint(64)[86], const  ref arg _e5_args[2014361]:string[244], const in arg _e6_args[2014363]:uint(64)[86]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[2014381]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5561257]:string[244] "temp"
    (2014386 call chpl_stringify_wrapper[2014490] _e0_args[2014351] _e1_args[2014353] _e2_args[2014355] _e3_args[2014357] _e4_args[2014359] _e5_args[2014361] _e6_args[2014363] ret_tmp[5561257])
    (5561260 'move' call_tmp[2014381] ret_tmp[5561257])
    const-val call_tmp[2014394]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539764]:string[244] "temp"
    (2014399 call +[28065] "halt reached - " call_tmp[2014381] ret_tmp[5539764])
    (5539767 'move' call_tmp[2014394] ret_tmp[5539764])
    const-val tmpstring[2014402]:string[244] "dead at end of block" "insert auto destroy"
    (2014404 'move' tmpstring[2014402] call_tmp[2014394])
    ref i_x[7339642]:string[244] "temp"
    (7339646 'move' i_x[7339642](7339644 'set reference' call_tmp[2014381]))
    (7339650 call deinit[21354] i_x[7339642])
    val coerce_tmp[7489336]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489338 'move' coerce_tmp[7489336](7489340 '.v' tmpstring[2014402] buff[21299]))
    (7489343 'noop')
    val call_tmp[7489344]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489346 'move' call_tmp[7489344](7489348 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489336]))
    (2014417 'chpl_error' call_tmp[7489344])
    ref i_x[7339654]:string[244] "temp"
    (7339658 'move' i_x[7339654](7339656 'set reference' tmpstring[2014402]))
    (7339662 call deinit[21354] i_x[7339654])
    (2014421 return _void[46])
  }
  function halt[4534935](const  ref arg _e0_args[4534937]:string[244], const  ref arg _e1_args[4534939]:string[244], const  ref arg _e2_args[4534941]:string[244], const  ref arg _e3_args[4534943]:string[244], const  ref arg _e4_args[4534945]:string[244], const  ref arg _e5_args[4534947]:string[244], const  ref arg _e6_args[4534949]:string[244], const  ref arg _e7_args[4534951]:string[244], const  ref arg _e8_args[4534953]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[4534975]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5601136]:string[244] "temp"
    (4534980 call chpl_stringify_wrapper[4535096] _e0_args[4534937] _e1_args[4534939] _e2_args[4534941] _e3_args[4534943] _e4_args[4534945] _e5_args[4534947] _e6_args[4534949] _e7_args[4534951] _e8_args[4534953] ret_tmp[5601136])
    (5601139 'move' call_tmp[4534975] ret_tmp[5601136])
    const-val call_tmp[4534990]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5540586]:string[244] "temp"
    (4534995 call +[28065] "halt reached - " call_tmp[4534975] ret_tmp[5540586])
    (5540589 'move' call_tmp[4534990] ret_tmp[5540586])
    const-val tmpstring[4534998]:string[244] "dead at end of block" "insert auto destroy"
    (4535000 'move' tmpstring[4534998] call_tmp[4534990])
    ref i_x[7344142]:string[244] "temp"
    (7344146 'move' i_x[7344142](7344144 'set reference' call_tmp[4534975]))
    (7344150 call deinit[21354] i_x[7344142])
    val coerce_tmp[7489840]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489842 'move' coerce_tmp[7489840](7489844 '.v' tmpstring[4534998] buff[21299]))
    (7489847 'noop')
    val call_tmp[7489848]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489850 'move' call_tmp[7489848](7489852 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489840]))
    (4535013 'chpl_error' call_tmp[7489848])
    ref i_x[7344154]:string[244] "temp"
    (7344158 'move' i_x[7344154](7344156 'set reference' tmpstring[4534998]))
    (7344162 call deinit[21354] i_x[7344154])
    (4535017 return _void[46])
  }
  function warning[88179](const  ref arg msg[88182]:string[244]) : void[4] "always propagate line file info" "resolved" "no return value for void"
  {
    const-val call_tmp[734276]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[7399849]:string[244] "dead after last mention" "RVV" "temp"
    val ret[7399851]:string[244] "dead at end of block" "insert auto destroy"
    (7399854 call init[21321] ret[7399851])
    const-val coerce_tmp[7399856]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7399858 'move' coerce_tmp[7399856](7399860 '.v' msg[88182] cachedNumCodepoints[21293]))
    (7399863 '.=' ret[7399851] cachedNumCodepoints[21293] coerce_tmp[7399856])
    (7399868 call initWithBorrowedBuffer[1470549] ret[7399851] msg[88182])
    (7399871 '=' ret[7399849] ret[7399851])
    (5538733 'move' call_tmp[734276] ret[7399849])
    val coerce_tmp[7489312]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489314 'move' coerce_tmp[7489312](7489316 '.v' call_tmp[734276] buff[21299]))
    (7489319 'noop')
    val call_tmp[7489320]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489322 'move' call_tmp[7489320](7489324 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489312]))
    (88186 'chpl_warning' call_tmp[7489320])
    ref i_x[7335514]:string[244] "temp"
    (7335518 'move' i_x[7335514](7335516 'set reference' call_tmp[734276]))
    (7335522 call deinit[21354] i_x[7335514])
    (588005 return _void[46])
  }
  function warning[1936426](const  ref arg _e0_args[1936428]:string[244], const  ref arg _e1_args[1936430]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1936438]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5557734]:string[244] "temp"
    (1936443 call chpl_stringify_wrapper[1936460] _e0_args[1936428] _e1_args[1936430] ret_tmp[5557734])
    (5557737 'move' call_tmp[1936438] ret_tmp[5557734])
    const-val tmpstring[1936446]:string[244] "dead at end of block" "insert auto destroy"
    (1936448 'move' tmpstring[1936446] call_tmp[1936438])
    (1936453 call warning[88179] tmpstring[1936446])
    ref i_x[7339510]:string[244] "temp"
    (7339514 'move' i_x[7339510](7339512 'set reference' tmpstring[1936446]))
    (7339518 call deinit[21354] i_x[7339510])
    (1936457 return _void[46])
  }
  function chpl_error_preformatted[87464](const in arg ptr[87469]:c_ptrConst(int(8))[1466333]) : void[4] "extern" "local args" "no fn body" "resolved"
  {
  }
}
AST dump for Errors after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard ChapelLocks CTypes 

{
  function chpl__init_Errors[468309]() : void[4] "insert line file info" "module init" "resolved"
  {
    (588009 return _void[46])
  }
  function Error[85511].init[85464](const in arg this[85466]:Error[85511]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[519431]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (519439 'move' super_tmp[519431](519432 '.v' this[85466] super[397311]))
    (519435 call init[1004245] super_tmp[519431])
    val tmp[519366]:RootClass[236] "dead after last mention" "temp" "type variable"
    val call_tmp[732645]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (732648 'move' call_tmp[732645](519377 'cast' RootClass[236] this[85466]))
    val chpl__thisAsParent[519374]:RootClass[236] "dead at end of block" "insert auto destroy" "temp"
    (642062 'move' chpl__thisAsParent[519374] call_tmp[732645])
    (519380 'setcid' chpl__thisAsParent[519374])
    val _next[519382]:Error[85511] "dead after last mention" "temp"
    val init_coerce_tmp[1500700]:Error[85511] "dead after last mention" "temp"
    (1500718 '=' init_coerce_tmp[1500700](1500714 'cast' Error[85511] nil[32]))
    (519385 'move' _next[519382] init_coerce_tmp[1500700])
    (519387 '.=' this[85466] _next[85434] _next[519382])
    val thrownLine[519392]:int(64)[10] "dead after last mention" "temp"
    (1500721 'move' thrownLine[519392] 0)
    (519397 '.=' this[85466] thrownLine[85442] thrownLine[519392])
    val thrownFileId[519401]:int(32)[66] "dead after last mention" "temp"
    val call_tmp[732650]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1500724 'move' thrownFileId[519401] 0)
    (519408 '.=' this[85466] thrownFileId[85447] thrownFileId[519401])
    val _msg[519412]:string[244] "dead after last mention" "temp"
    (1500726 call init[21321] _msg[519412])
    (519417 '.=' this[85466] _msg[85454] _msg[519412])
    val _hasThrowInfo[519422]:bool[19] "dead after last mention" "temp"
    (519425 'move' _hasThrowInfo[519422] 0)
    (519427 '.=' this[85466] _hasThrowInfo[85459] _hasThrowInfo[519422])
    (519442 'setcid' this[85466])
    (587714 return _void[46])
  }
  function Error[85511].init[85477](const in arg this[85479]:Error[85511], const  ref arg msg[85482]:string[244]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[519514]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (519522 'move' super_tmp[519514](519515 '.v' this[85479] super[397311]))
    (519518 call init[1004245] super_tmp[519514])
    val tmp[519448]:RootClass[236] "dead after last mention" "temp" "type variable"
    val call_tmp[732660]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (732663 'move' call_tmp[732660](519459 'cast' RootClass[236] this[85479]))
    val chpl__thisAsParent[519456]:RootClass[236] "dead at end of block" "insert auto destroy" "temp"
    (642064 'move' chpl__thisAsParent[519456] call_tmp[732660])
    (519462 'setcid' chpl__thisAsParent[519456])
    val _next[519465]:Error[85511] "dead after last mention" "temp"
    val init_coerce_tmp[1473215]:Error[85511] "dead after last mention" "temp"
    (1475170 '=' init_coerce_tmp[1473215](1475166 'cast' Error[85511] nil[32]))
    (519468 'move' _next[519465] init_coerce_tmp[1473215])
    (519470 '.=' this[85479] _next[85434] _next[519465])
    val thrownLine[519474]:int(64)[10] "dead after last mention" "temp"
    (1475173 'move' thrownLine[519474] 0)
    (519479 '.=' this[85479] thrownLine[85442] thrownLine[519474])
    val thrownFileId[519483]:int(32)[66] "dead after last mention" "temp"
    val call_tmp[732665]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1475176 'move' thrownFileId[519483] 0)
    (519490 '.=' this[85479] thrownFileId[85447] thrownFileId[519483])
    val _msg[519494]:string[244] "dead after last mention" "temp"
    (519497 call init=[21330] _msg[519494] msg[85482])
    (519499 '.=' this[85479] _msg[85454] _msg[519494])
    val _hasThrowInfo[519505]:bool[19] "dead after last mention" "temp"
    (519508 'move' _hasThrowInfo[519505] 0)
    (519510 '.=' this[85479] _hasThrowInfo[85459] _hasThrowInfo[519505])
    (519525 'setcid' this[85479])
    (587716 return _void[46])
  }
  function Error[85511].message[85497](const in arg this[85499]:Error[85511], ref arg _retArg[5541597]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    const-val ret[587720]:string[244] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[732672]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (732675 'move' call_tmp[732672](423381 call _msg[1061292] this[85499]))
    (1480462 '=' ret[587720](1480459 call chpl__autoCopy[1480464] call_tmp[732672] 0))
    (5541599 '=' _retArg[5541597] ret[587720])
    (5541601 return _void[46])
  }
  function Error[85511]._next[1061214](const in arg this[1061218]:Error[85511]) ref : _ref(Error)[1471765] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1061228]:_ref(Error)[1471765] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061235]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
    (1061238 'move' call_tmp[1061235](1061222 '.' this[1061218] _next[85434]))
    (1061233 'move' ret[1061228] call_tmp[1061235])
    (1061230 return ret[1061228])
  }
  function Error[85511].thrownLine[1061240](const in arg this[1061244]:Error[85511]) ref : _ref(int(64))[1465689] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1061254]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061261]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1061264 'move' call_tmp[1061261](1061248 '.' this[1061244] thrownLine[85442]))
    (1061259 'move' ret[1061254] call_tmp[1061261])
    (1061256 return ret[1061254])
  }
  function Error[85511].thrownFileId[1061266](const in arg this[1061270]:Error[85511]) ref : _ref(int(32))[1465743] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1061280]:_ref(int(32))[1465743] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061287]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
    (1061290 'move' call_tmp[1061287](1061274 '.' this[1061270] thrownFileId[85447]))
    (1061285 'move' ret[1061280] call_tmp[1061287])
    (1061282 return ret[1061280])
  }
  function Error[85511]._msg[1061292](const in arg this[1061296]:Error[85511]) ref : _ref(string)[1466327] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1061306]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061313]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (1061316 'move' call_tmp[1061313](1061300 '.' this[1061296] _msg[85454]))
    (1061311 'move' ret[1061306] call_tmp[1061313])
    (1061308 return ret[1061306])
  }
  function Error[85511]._hasThrowInfo[1061318](const in arg this[1061322]:Error[85511]) ref : _ref(bool)[1466299] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1061332]:_ref(bool)[1466299] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061339]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (1061342 'move' call_tmp[1061339](1061326 '.' this[1061322] _hasThrowInfo[85459]))
    (1061337 'move' ret[1061332] call_tmp[1061339])
    (1061334 return ret[1061332])
  }
  function Error[85511].deinit[1061344](const in arg this[1061348]:Error[85511]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526050]
    ref _field_destructor_tmp_[5526048]:_ref(string)[1466327] "temp"
    (5526055 'move' _field_destructor_tmp_[5526048](5526052 '.' this[1061348] _msg[85454]))
    (5526057 call deinit[21354] _field_destructor_tmp_[5526048])
    val _parent_destructor_tmp_[5526060]:RootClass[236] "temp"
    (5526065 'move' _parent_destructor_tmp_[5526060](5526061 'cast' RootClass[236] this[1061348]))
    (5526067 call deinit[1004261] _parent_destructor_tmp_[5526060])
    (1061356 return _void[46])
  }
  function _new[3031611](const  ref arg msg[3031620]:string[244]) : Error[85511] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5479596]:Error[85511] "temp"
    val ret[3031647]:Error[85511] "dead after last mention" "RVV" "temp"
    val initTemp[3031613]:Error[85511] "dead after last mention" "temp"
    const-val call_tmp[3031654]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3031657 'move' call_tmp[3031654](3031668 'sizeof_bundle' Error[85511]))
    val cast_tmp[3031671]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3031673 'move' cast_tmp[3031671](3031628 call chpl_here_alloc[308303] call_tmp[3031654] 294))
    (3031631 'move' initTemp[3031613](3031675 'cast' Error[85511] cast_tmp[3031671]))
    (3031614 call init[85477] initTemp[3031613] msg[3031620])
    val tmp[3031633]:Error[85511] "dead after last mention" "temp"
    (3031637 'move' tmp[3031633] initTemp[3031613])
    (3031652 'move' ret[3031647] tmp[3031633])
    (3031649 return ret[3031647])
  }
  type Error[85511] val super[397311]:RootClass[236] "super class" val _next[85434]:Error[85511] val thrownLine[85442]:int(64)[10] val thrownFileId[85447]:int(32)[66] val _msg[85454]:string[244] val _hasThrowInfo[85459]:bool[19]
  function NilThrownError[85529].message[85515](const in arg this[85517]:NilThrownError[85529], ref arg _retArg[5609375]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[587730]:string[244] "dead after last mention" "RVV" "temp"
    (587735 'move' ret[587730](5609380 call chpl__initCopy[1480493] "thrown error was nil" 0))
    (5609377 '=' _retArg[5609375] ret[587730])
    (5609382 return _void[46])
  }
  function NilThrownError[85529].init[1061384](const in arg this[1061387]:NilThrownError[85529]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[1061400]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (1061402 'move' super_tmp[1061400](1061399 '.v' this[1061387] super[397420]))
    (1061397 call init[85464] super_tmp[1061400])
    val tmp[1061405]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[1061443]:Error[85511] "dead after last mention" "maybe param" "temp"
    (1061446 'move' call_tmp[1061443](1061416 'cast' Error[85511] this[1061387]))
    val chpl__thisAsParent[1061413]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (1061434 'move' chpl__thisAsParent[1061413] call_tmp[1061443])
    (1061419 'setcid' chpl__thisAsParent[1061413])
    (1061421 'setcid' this[1061387])
    (1061432 return _void[46])
  }
  function NilThrownError[85529].deinit[1061556](const in arg this[1061560]:NilThrownError[85529]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[5526075]
    val _parent_destructor_tmp_[5526070]:Error[85511] "temp"
    (5526077 'move' _parent_destructor_tmp_[5526070](5526071 'cast' Error[85511] this[1061560]))
    (5526079 call deinit[1061344] _parent_destructor_tmp_[5526070])
    (1061568 return _void[46])
  }
  function _new[1500768]() : NilThrownError[85529] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[5477986]:NilThrownError[85529] "temp"
    val ret[1500804]:NilThrownError[85529] "dead after last mention" "RVV" "temp"
    val initTemp[1500770]:NilThrownError[85529] "dead after last mention" "temp"
    const-val call_tmp[1500811]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1500814 'move' call_tmp[1500811](1500823 'sizeof_bundle' NilThrownError[85529]))
    val cast_tmp[1500826]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1500828 'move' cast_tmp[1500826](1500782 call chpl_here_alloc[308303] call_tmp[1500811] 1))
    (1500785 'move' initTemp[1500770](1500830 'cast' NilThrownError[85529] cast_tmp[1500826]))
    (1500771 call init[1061384] initTemp[1500770])
    val tmp[1500787]:NilThrownError[85529] "dead after last mention" "temp"
    (1500794 'move' tmp[1500787] initTemp[1500770])
    (1500809 'move' ret[1500804] tmp[1500787])
    (1500806 return ret[1500804])
  }
  type NilThrownError[85529] val super[397420]:Error[85511] "super class"
  function NilClassError[85547].message[85533](const in arg this[85535]:NilClassError[85547], ref arg _retArg[5609384]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[587739]:string[244] "dead after last mention" "RVV" "temp"
    (587744 'move' ret[587739](5609389 call chpl__initCopy[1480493] "cannot convert nil class to non nilable type" 0))
    (5609386 '=' _retArg[5609384] ret[587739])
    (5609391 return _void[46])
  }
  function NilClassError[85547].init[1061596](const in arg this[1061599]:NilClassError[85547]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[1061612]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (1061614 'move' super_tmp[1061612](1061611 '.v' this[1061599] super[397422]))
    (1061609 call init[85464] super_tmp[1061612])
    val tmp[1061617]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[1061655]:Error[85511] "dead after last mention" "maybe param" "temp"
    (1061658 'move' call_tmp[1061655](1061628 'cast' Error[85511] this[1061599]))
    val chpl__thisAsParent[1061625]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (1061646 'move' chpl__thisAsParent[1061625] call_tmp[1061655])
    (1061631 'setcid' chpl__thisAsParent[1061625])
    (1061633 'setcid' this[1061599])
    (1061644 return _void[46])
  }
  function NilClassError[85547].deinit[1061768](const in arg this[1061772]:NilClassError[85547]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526087]
    val _parent_destructor_tmp_[5526082]:Error[85511] "temp"
    (5526089 'move' _parent_destructor_tmp_[5526082](5526083 'cast' Error[85511] this[1061772]))
    (5526091 call deinit[1061344] _parent_destructor_tmp_[5526082])
    (1061780 return _void[46])
  }
  function _new[2140023]() : NilClassError[85547] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[5478812]:NilClassError[85547] "temp"
    val ret[2140059]:NilClassError[85547] "dead after last mention" "RVV" "temp"
    val initTemp[2140025]:NilClassError[85547] "dead after last mention" "temp"
    const-val call_tmp[2140066]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140069 'move' call_tmp[2140066](2140080 'sizeof_bundle' NilClassError[85547]))
    val cast_tmp[2140083]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (2140085 'move' cast_tmp[2140083](2140037 call chpl_here_alloc[308303] call_tmp[2140066] 95))
    (2140040 'move' initTemp[2140025](2140087 'cast' NilClassError[85547] cast_tmp[2140083]))
    (2140026 call init[1061596] initTemp[2140025])
    val tmp[2140042]:NilClassError[85547] "dead after last mention" "temp"
    (2140049 'move' tmp[2140042] initTemp[2140025])
    (2140064 'move' ret[2140059] tmp[2140042])
    (2140061 return ret[2140059])
  }
  type NilClassError[85547] val super[397422]:Error[85511] "super class"
  function ClassCastError[85565].message[85551](const in arg this[85553]:ClassCastError[85565], ref arg _retArg[5609393]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[587748]:string[244] "dead after last mention" "RVV" "temp"
    (587753 'move' ret[587748](5609398 call chpl__initCopy[1480493] "cannot cast class to type - runtime types not compatible" 0))
    (5609395 '=' _retArg[5609393] ret[587748])
    (5609400 return _void[46])
  }
  function ClassCastError[85565].init[1061808](const in arg this[1061811]:ClassCastError[85565]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[1061824]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (1061826 'move' super_tmp[1061824](1061823 '.v' this[1061811] super[397424]))
    (1061821 call init[85464] super_tmp[1061824])
    val tmp[1061829]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[1061867]:Error[85511] "dead after last mention" "maybe param" "temp"
    (1061870 'move' call_tmp[1061867](1061840 'cast' Error[85511] this[1061811]))
    val chpl__thisAsParent[1061837]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (1061858 'move' chpl__thisAsParent[1061837] call_tmp[1061867])
    (1061843 'setcid' chpl__thisAsParent[1061837])
    (1061845 'setcid' this[1061811])
    (1061856 return _void[46])
  }
  function ClassCastError[85565].deinit[1061980](const in arg this[1061984]:ClassCastError[85565]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526099]
    val _parent_destructor_tmp_[5526094]:Error[85511] "temp"
    (5526101 'move' _parent_destructor_tmp_[5526094](5526095 'cast' Error[85511] this[1061984]))
    (5526103 call deinit[1061344] _parent_destructor_tmp_[5526094])
    (1061992 return _void[46])
  }
  function _new[2168546]() : ClassCastError[85565] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[5478864]:ClassCastError[85565] "temp"
    val ret[2168582]:ClassCastError[85565] "dead after last mention" "RVV" "temp"
    val initTemp[2168548]:ClassCastError[85565] "dead after last mention" "temp"
    const-val call_tmp[2168589]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168592 'move' call_tmp[2168589](2168603 'sizeof_bundle' ClassCastError[85565]))
    val cast_tmp[2168606]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (2168608 'move' cast_tmp[2168606](2168560 call chpl_here_alloc[308303] call_tmp[2168589] 100))
    (2168563 'move' initTemp[2168548](2168610 'cast' ClassCastError[85565] cast_tmp[2168606]))
    (2168549 call init[1061808] initTemp[2168548])
    val tmp[2168565]:ClassCastError[85565] "dead after last mention" "temp"
    (2168572 'move' tmp[2168565] initTemp[2168548])
    (2168587 'move' ret[2168582] tmp[2168565])
    (2168584 return ret[2168582])
  }
  type ClassCastError[85565] val super[397424]:Error[85511] "super class"
  function DecodeError[85583].message[85569](const in arg this[85571]:DecodeError[85583], ref arg _retArg[5609402]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[587757]:string[244] "dead after last mention" "RVV" "temp"
    (587762 'move' ret[587757](5609407 call chpl__initCopy[1480493] "Invalid UTF-8 character encountered." 0))
    (5609404 '=' _retArg[5609402] ret[587757])
    (5609409 return _void[46])
  }
  function DecodeError[85583].init[1062020](const in arg this[1062023]:DecodeError[85583]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[1062036]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (1062038 'move' super_tmp[1062036](1062035 '.v' this[1062023] super[397426]))
    (1062033 call init[85464] super_tmp[1062036])
    val tmp[1062041]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[1062079]:Error[85511] "dead after last mention" "maybe param" "temp"
    (1062082 'move' call_tmp[1062079](1062052 'cast' Error[85511] this[1062023]))
    val chpl__thisAsParent[1062049]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (1062070 'move' chpl__thisAsParent[1062049] call_tmp[1062079])
    (1062055 'setcid' chpl__thisAsParent[1062049])
    (1062057 'setcid' this[1062023])
    (1062068 return _void[46])
  }
  function DecodeError[85583].deinit[1062192](const in arg this[1062196]:DecodeError[85583]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526111]
    val _parent_destructor_tmp_[5526106]:Error[85511] "temp"
    (5526113 'move' _parent_destructor_tmp_[5526106](5526107 'cast' Error[85511] this[1062196]))
    (5526115 call deinit[1061344] _parent_destructor_tmp_[5526106])
    (1062204 return _void[46])
  }
  function _new[1514615]() : DecodeError[85583] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[5478006]:DecodeError[85583] "temp"
    val ret[1514648]:DecodeError[85583] "dead after last mention" "RVV" "temp"
    val initTemp[1514617]:DecodeError[85583] "dead after last mention" "temp"
    const-val call_tmp[1514655]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1514658 'move' call_tmp[1514655](1514669 'sizeof_bundle' DecodeError[85583]))
    val cast_tmp[1514672]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1514674 'move' cast_tmp[1514672](1514629 call chpl_here_alloc[308303] call_tmp[1514655] 2))
    (1514632 'move' initTemp[1514617](1514676 'cast' DecodeError[85583] cast_tmp[1514672]))
    (1514618 call init[1062020] initTemp[1514617])
    val tmp[1514634]:DecodeError[85583] "dead after last mention" "temp"
    (1514638 'move' tmp[1514634] initTemp[1514617])
    (1514653 'move' ret[1514648] tmp[1514634])
    (1514650 return ret[1514648])
  }
  type DecodeError[85583] val super[397426]:Error[85511] "super class"
  function IllegalArgumentError[85616].init[85596](const in arg this[85598]:IllegalArgumentError[85616], const  ref arg msg[85601]:string[244]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[519561]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (519563 'move' super_tmp[519561](519560 '.v' this[85598] super[397428]))
    (85611 call init[85477] super_tmp[519561] msg[85601])
    val tmp[519566]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[732694]:Error[85511] "dead after last mention" "maybe param" "temp"
    (732697 'move' call_tmp[732694](519577 'cast' Error[85511] this[85598]))
    val chpl__thisAsParent[519574]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (642068 'move' chpl__thisAsParent[519574] call_tmp[732694])
    (519580 'setcid' chpl__thisAsParent[519574])
    (519582 'setcid' this[85598])
    (587766 return _void[46])
  }
  function IllegalArgumentError[85616].deinit[1062232](const in arg this[1062236]:IllegalArgumentError[85616]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526123]
    val _parent_destructor_tmp_[5526118]:Error[85511] "temp"
    (5526125 'move' _parent_destructor_tmp_[5526118](5526119 'cast' Error[85511] this[1062236]))
    (5526127 call deinit[1061344] _parent_destructor_tmp_[5526118])
    (1062244 return _void[46])
  }
  function _new[1475209](const  ref arg msg[1475218]:string[244]) : IllegalArgumentError[85616] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5477962]:IllegalArgumentError[85616] "temp"
    val ret[1475243]:IllegalArgumentError[85616] "dead after last mention" "RVV" "temp"
    val initTemp[1475211]:IllegalArgumentError[85616] "dead after last mention" "temp"
    const-val call_tmp[1475250]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1475253 'move' call_tmp[1475250](1475264 'sizeof_bundle' IllegalArgumentError[85616]))
    val cast_tmp[1475324]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1475326 'move' cast_tmp[1475324](1475224 call chpl_here_alloc[308303] call_tmp[1475250] 0))
    (1475227 'move' initTemp[1475211](1475328 'cast' IllegalArgumentError[85616] cast_tmp[1475324]))
    (1475212 call init[85596] initTemp[1475211] msg[1475218])
    val tmp[1475229]:IllegalArgumentError[85616] "dead after last mention" "temp"
    (1475233 'move' tmp[1475229] initTemp[1475211])
    (1475248 'move' ret[1475243] tmp[1475229])
    (1475245 return ret[1475243])
  }
  type IllegalArgumentError[85616] val super[397428]:Error[85511] "super class"
  function CodepointSplitError[85656].init[85620](const in arg this[85622]:CodepointSplitError[85656], const  ref arg info[85625]:string[244]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[519585]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (519587 'move' super_tmp[519585](519584 '.v' this[85622] super[397430]))
    (85635 call init[85477] super_tmp[519585] info[85625])
    val tmp[519590]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[732706]:Error[85511] "dead after last mention" "maybe param" "temp"
    (732709 'move' call_tmp[732706](519601 'cast' Error[85511] this[85622]))
    val chpl__thisAsParent[519598]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (642070 'move' chpl__thisAsParent[519598] call_tmp[732706])
    (519604 'setcid' chpl__thisAsParent[519598])
    (519606 'setcid' this[85622])
    (587768 return _void[46])
  }
  function CodepointSplitError[85656].message[85639](const in arg this[85641]:CodepointSplitError[85656], ref arg _retArg[5608832]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[587772]:string[244] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[732713]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[4347051]:Error[85511] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (4347057 'move' coerce_tmp[4347051](4347053 'cast' Error[85511] this[85641]))
    (732716 'move' call_tmp[732713](423388 call _msg[1061292] coerce_tmp[4347051]))
    const-val call_tmp[732718]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539110]:string[244] "temp"
    (85647 call +[28065] "Attempting to split a multi-byte codepoint. " call_tmp[732713] ret_tmp[5539110])
    (5539113 'move' call_tmp[732718] ret_tmp[5539110])
    (587777 'move' ret[587772] call_tmp[732718])
    (5608834 '=' _retArg[5608832] ret[587772])
    (5608836 return _void[46])
  }
  function CodepointSplitError[85656].deinit[1062272](const in arg this[1062276]:CodepointSplitError[85656]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526135]
    val _parent_destructor_tmp_[5526130]:Error[85511] "temp"
    (5526137 'move' _parent_destructor_tmp_[5526130](5526131 'cast' Error[85511] this[1062276]))
    (5526139 call deinit[1061344] _parent_destructor_tmp_[5526130])
    (1062284 return _void[46])
  }
  function _new[1659047](const  ref arg info[1659056]:string[244]) : CodepointSplitError[85656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5478206]:CodepointSplitError[85656] "temp"
    val ret[1659086]:CodepointSplitError[85656] "dead after last mention" "RVV" "temp"
    val initTemp[1659049]:CodepointSplitError[85656] "dead after last mention" "temp"
    const-val call_tmp[1659093]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1659096 'move' call_tmp[1659093](1659107 'sizeof_bundle' CodepointSplitError[85656]))
    val cast_tmp[1659110]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1659112 'move' cast_tmp[1659110](1659064 call chpl_here_alloc[308303] call_tmp[1659093] 36))
    (1659067 'move' initTemp[1659049](1659114 'cast' CodepointSplitError[85656] cast_tmp[1659110]))
    (1659050 call init[85620] initTemp[1659049] info[1659056])
    val tmp[1659069]:CodepointSplitError[85656] "dead after last mention" "temp"
    (1659076 'move' tmp[1659069] initTemp[1659049])
    (1659091 'move' ret[1659086] tmp[1659069])
    (1659088 return ret[1659086])
  }
  type CodepointSplitError[85656] val super[397430]:Error[85511] "super class"
  function _ref(chpl_TaskErrors)[1478591].append[85694](ref arg this[85696]:_ref(chpl_TaskErrors)[1478591], const in arg err[85700]:Error[85511]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val tmp[85738]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[732723]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (732726 'move' call_tmp[732723](85735 '_wide_get_locale' this[85696]))
      (85739 'move' tmp[85738] call_tmp[732723])
      {
        ref call_tmp[732730]:_ref(chpl_LocalSpinlock)[1500922] "dead after last mention" "maybe param" "temp"
        (732733 'move' call_tmp[732730](400433 call _errorsLock[1062524] this[85696]))
        (85714 call lock[85296] call_tmp[732730])
        ref call_tmp[732739]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1802785]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1802790 'move' coerce_tmp[1802785] err[85700])
        (732742 'move' call_tmp[732739](85720 call _next[1061214] coerce_tmp[1802785]))
        const-ref call_tmp[732746]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
        (732749 'move' call_tmp[732746](423398 call _head[1062498] this[85696]))
        val coerce_tmp[1802855]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1802859 'move' coerce_tmp[1802855](1802857 'deref' call_tmp[732746]))
        (85715 call =[1802821] call_tmp[732739] coerce_tmp[1802855])
        ref call_tmp[732753]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
        (732756 'move' call_tmp[732753](423403 call _head[1062498] this[85696]))
        val coerce_tmp[1802863]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1802869 'move' coerce_tmp[1802863] err[85700])
        (85724 call =[1802821] call_tmp[732753] coerce_tmp[1802863])
        ref call_tmp[732760]:_ref(chpl_LocalSpinlock)[1500922] "dead after last mention" "maybe param" "temp"
        (732763 'move' call_tmp[732760](400439 call _errorsLock[1062524] this[85696]))
        (85734 call unlock[85397] call_tmp[732760])
      }
    }
    (587788 return _void[46])
  }
  function _ref(chpl_TaskErrors)[1478591].empty[85748](const  ref arg this[85750]:_ref(chpl_TaskErrors)[1478591]) : bool[19] "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[587792]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[732769]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
    (732772 'move' call_tmp[732769](423409 call _head[1062498] this[85750]))
    const-val call_tmp[732774]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1805551]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1805555 'move' coerce_tmp[1805551](1805553 'deref' call_tmp[732769]))
    val coerce_tmp[1805557]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1805562 'move' coerce_tmp[1805557](1805559 'cast' RootClass[236] coerce_tmp[1805551]))
    (732777 'move' call_tmp[732774](85756 call ==[53036] coerce_tmp[1805557] nil[32]))
    (587797 'move' ret[587792] call_tmp[732774])
    (587794 return ret[587792])
  }
  function _ref(chpl_TaskErrors)[1478591]._head[1062498](ref arg this[1062502]:_ref(chpl_TaskErrors)[1478591]) ref : _ref(Error)[1471765] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1062512]:_ref(Error)[1471765] "dead after last mention" "RVV" "temp"
    ref call_tmp[1062519]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
    (1062522 'move' call_tmp[1062519](1062506 '.' this[1062502] _head[85682]))
    (1062517 'move' ret[1062512] call_tmp[1062519])
    (1062514 return ret[1062512])
  }
  function _ref(chpl_TaskErrors)[1478591]._errorsLock[1062524](ref arg this[1062528]:_ref(chpl_TaskErrors)[1478591]) ref : _ref(chpl_LocalSpinlock)[1500922] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1062538]:_ref(chpl_LocalSpinlock)[1500922] "dead after last mention" "RVV" "temp"
    ref call_tmp[1062545]:_ref(chpl_LocalSpinlock)[1500922] "dead after last mention" "maybe param" "temp"
    (1062548 'move' call_tmp[1062545](1062532 '.' this[1062528] _errorsLock[85690]))
    (1062543 'move' ret[1062538] call_tmp[1062545])
    (1062540 return ret[1062538])
  }
  function _ref(chpl_TaskErrors)[1478591].init[1062550](ref arg this[1062553]:_ref(chpl_TaskErrors)[1478591], in arg _head[1062556]:Error[85511], const  ref arg _errorsLock[1062569]:chpl_LocalSpinlock[85418]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[1525372]:chpl_LocalSpinlock[85418] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1525375 'move' _formal_tmp__errorsLock[1525372] _errorsLock[1062569])
    (1062581 '.=' this[1062553] _head[85682] _head[1062556])
    (1062584 '.=' this[1062553] _errorsLock[85690] _formal_tmp__errorsLock[1525372])
    (1062588 return _void[46])
  }
  function init_default__errorsLock[1523892](ref arg _retArg[5547875]:_ref(chpl_LocalSpinlock)[1500922]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[1523894]:chpl_LocalSpinlock[85418] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[1523899]:chpl_LocalSpinlock[85418] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1525060 call init[85249] _errorsLock[1523899])
    (1525057 'move' ret[1523894] _errorsLock[1523899])
    (5547877 '=' _retArg[5547875] ret[1523894])
    (5547879 return _void[46])
  }
  function init_default__head[1523848]() : Error[85511] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free" "was compiler generated"
  {
    val ret[1523850]:Error[85511] "dead after last mention" "RVV" "maybe param" "temp"
    val _head[1523855]:Error[85511] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1523859]:Error[85511] "dead after last mention" "temp"
    val _formal_type[1523861]:Error[85511] "dead after last mention" "temp" "type variable"
    (1523882 '=' tmp[1523859](1523878 'cast' Error[85511] nil[32]))
    (1523872 'move' _head[1523855] tmp[1523859])
    (1523875 'move' ret[1523850] _head[1523855])
    (1523853 return ret[1523850])
  }
  function _ref(chpl_TaskErrors)[1478591].deinit[1062786](const  ref arg this[1062790]:_ref(chpl_TaskErrors)[1478591]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5526144]
    const-ref _field_destructor_tmp_[5526142]:_ref(chpl_LocalSpinlock)[1500922] "temp"
    (5526149 'move' _field_destructor_tmp_[5526142](5526146 '.' this[1062790] _errorsLock[85690]))
    (5526151 call deinit[1060104] _field_destructor_tmp_[5526142])
    (1062798 return _void[46])
  }
  type chpl_TaskErrors[85763] val _head[85682]:Error[85511] val _errorsLock[85690]:chpl_LocalSpinlock[85418]
  function TaskErrors[87096].init[85782](const in arg this[85784]:TaskErrors[87096], ref arg group[85787]:_ref(chpl_TaskErrors)[1478591]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[519653]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (519661 'move' super_tmp[519653](519654 '.v' this[85784] super[397434]))
    (519657 call init[85464] super_tmp[519653])
    val tmp[519612]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[732784]:Error[85511] "dead after last mention" "maybe param" "temp"
    (732787 'move' call_tmp[732784](519623 'cast' Error[85511] this[85784]))
    val chpl__thisAsParent[519620]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (642075 'move' chpl__thisAsParent[519620] call_tmp[732784])
    (519626 'setcid' chpl__thisAsParent[519620])
    const-ref call_tmp[732791]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
    (732794 'move' call_tmp[732791](85801 call _head[1062498] group[85787]))
    val head[85794]:Error[85511] "dead at end of block"
    val coerce_tmp[1807230]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1807234 'move' coerce_tmp[1807230](1807232 'deref' call_tmp[732791]))
    (5610582 '=' head[85794] coerce_tmp[1807230])
    (642077 'noop')
    ref call_tmp[732798]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
    (732801 'move' call_tmp[732798](85809 call _head[1062498] group[85787]))
    (85806 call =[1807238] call_tmp[732798] nil[32])
    val nErrors[519628]:int(64)[10] "dead after last mention" "temp"
    (1831342 'move' nErrors[519628] 0)
    (519633 '.=' this[85784] nErrors[85768] nErrors[519628])
    val errorsArray[519637]:c_ptr(owned Error?)[1805608] "dead after last mention" "temp"
    val call_tmp[732803]:owned Error?[1498158] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[732808]:c_ptr(owned Error?)[1805608] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1831347 'move' errorsArray[519637](1831345 'cast' c_ptr(owned Error?)[1805608] nil[32]))
    (519646 '.=' this[85784] errorsArray[85773] errorsArray[519637])
    (519651 'setcid' this[85784])
    val n[85819]:int(64)[10] "dead at end of block" "insert auto destroy"
    (642079 'move' n[85819] 0)
    val cur[85824]:Error[85511] "dead at end of block" "insert auto destroy"
    (642081 'move' cur[85824] head[85794])
    {
      val call_tmp[732813]:Error[85511] "dead after last mention" "maybe param" "temp"
      (732816 'move' call_tmp[732813](85917 call chpl_checkBorrowIfVar[1807303] cur[85824]))
      val while_borrow[85916]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
      (642083 'move' while_borrow[85916] call_tmp[732813])
      val tmp[85920]:bool[19] "dead after last mention" "temp"
      (85948 'move' tmp[85920](85946 call _cond_test[1807521] while_borrow[85916]))
      WhileDo[85926] hazard
      {
        val call_tmp[732818]:Error[85511] "dead after last mention" "maybe param" "temp"
        (732821 'move' call_tmp[732818] while_borrow[85916])
        const curr[85829]:Error[85511] "dead at end of block" "const" "insert auto destroy"
        (642085 'move' curr[85829] call_tmp[732818])
        {
          const-ref call_tmp[732825]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1807918]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1807923 'move' coerce_tmp[1807918] curr[85829])
          (732828 'move' call_tmp[732825](85836 call _next[1061214] coerce_tmp[1807918]))
          val curnext[85834]:Error[85511] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1807929]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1807933 'move' coerce_tmp[1807929](1807931 'deref' call_tmp[732825]))
          (5610585 '=' curnext[85834] coerce_tmp[1807929])
          (642087 'noop')
          val call_tmp[732830]:TaskErrors[87096] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1808279]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1808284 'move' coerce_tmp[1808279] curr[85829])
          (732833 'move' call_tmp[732830](85899 call :[1808086] coerce_tmp[1808279]))
          val ifvar_borrow[732835]:TaskErrors[87096] "dead after last mention" "temp"
          (732837 'move' ifvar_borrow[732835](732840 call chpl_checkBorrowIfVar[1808412] call_tmp[732830]))
          const-val call_tmp[732847]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (732850 'move' call_tmp[732847](85908 call _cond_test[1808626] ifvar_borrow[732835]))
          if call_tmp[732847]
          {
            const asTaskErr[85905]:TaskErrors[87096] "const"
            (732843 'move' asTaskErr[85905] ifvar_borrow[732835])
            {
              const-val tmp[85886]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
              const-val call_tmp[732852]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
              (732855 'move' call_tmp[732852](85883 '_wide_get_locale' asTaskErr[85905]))
              (85887 'move' tmp[85886] call_tmp[732852])
              {
                ref _indexOfInterest[85849]:_ref(owned Error?)[1498167] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[85850]:_ic_these_TaskErrors[1809076] "dead at end of block" "expr temp" "temp"
                (85859 'move' _iterator[85850](85857 call _getIterator[1809032] asTaskErr[85905]))
                {
                  const-val this[5953022]:TaskErrors[87096] "temp"
                  (5953027 'move' this[5953022](5953024 '.v' _iterator[85850] F0_this[6827033]))
                  const-val this[5953015]:TaskErrors[87096] "temp"
                  (5953020 'move' this[5953015](5953017 '.v' _iterator[85850] F0_this[6827033]))
                  const-val this[5953008]:TaskErrors[87096] "temp"
                  (5953013 'move' this[5953008](5953010 '.v' _iterator[85850] F0_this[6827033]))
                  val ret[5952726]:_ir_these_TaskErrors[1809082] "dead at end of block" "RVV" "temp"
                  val call_tmp[5952728]:bool[19] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
                  const-val call_tmp[5952730]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val this[5952987]:TaskErrors[87096] "temp"
                  (5952992 'move' this[5952987](5952989 '.v' _iterator[85850] F0_this[6827033]))
                  (5952732 'move' call_tmp[5952730](5952734 '_wide_get_node' this[5952987]))
                  const-val call_tmp[5952736]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[5952738]:locale[234] "temp"
                  (5952741 call here[135591] ret_tmp[5952738])
                  (5952743 'move' call_tmp[5952736] ret_tmp[5952738])
                  const-val call_tmp[5952746]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (5952748 'move' call_tmp[5952746](5952751 call id[135646] call_tmp[5952736]))
                  const-val call_tmp[5952753]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[5952755]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (5952757 'move' coerce_tmp[5952755](5952759 'cast' int(64)[10] call_tmp[5952730]))
                  (5952762 'move' call_tmp[5952753](5952765 call ==[52746] coerce_tmp[5952755] call_tmp[5952746]))
                  const-val call_tmp[5952768]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val this[5952994]:TaskErrors[87096] "temp"
                  (5952999 'move' this[5952994](5952996 '.v' _iterator[85850] F0_this[6827033]))
                  (5952770 'move' call_tmp[5952768](5952772 '_wide_get_node' this[5952994]))
                  const-val call_tmp[5952774]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[5952776]:locale[234] "temp"
                  (5952779 call here[135591] ret_tmp[5952776])
                  (5952781 'move' call_tmp[5952774] ret_tmp[5952776])
                  const-val call_tmp[5952784]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (5952786 'move' call_tmp[5952784](5952789 call id[135646] call_tmp[5952774]))
                  (5952792 call assert[1809366] call_tmp[5952753] "iterating over a TaskErrors object allocated on locale " call_tmp[5952768] " while being on locale " call_tmp[5952784])
                  (5952799 call chpl__autoDestroy[3885511] call_tmp[5952774])
                  (5952802 call chpl__autoDestroy[3885511] call_tmp[5952736])
                  val _indexOfInterest[5952804]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[5952806]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[5952808]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-val this[5953001]:TaskErrors[87096] "temp"
                  (5953006 'move' this[5953001](5953003 '.v' _iterator[85850] F0_this[6827033]))
                  (5952810 'move' call_tmp[5952808](5952813 call nErrors[1064482] this[5953001]))
                  const-val call_tmp[5952815]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[5952817]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (5952819 'move' coerce_tmp[5952817](5952821 'deref' call_tmp[5952808]))
                  const-val ret_tmp[5952823]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                  (5952826 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[5952817] ret_tmp[5952823])
                  (5952830 'move' call_tmp[5952815] ret_tmp[5952823])
                  (5952833 'move' _iterator[5952806](5952836 call _getIterator[1520079] call_tmp[5952815]))
                  val taskInd_this[6275294]:TaskErrors[87096] "task private variable"
                  (6275297 'move' taskInd_this[6275294](6275296 'task private svar capture' this[5953022]))
                  {
                    val ret[6275300]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                    val tmp[6275302]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275304]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6275306]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6275308]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6275310]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275312]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6275314]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val _indexOfInterest[6275316]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6275318]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6275320]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6275322]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                    const-val low[6275710]:int(64)[10] "temp"
                    (6275715 'move' low[6275710](6275712 '.v' _iterator[5952806] F0_low[6832410]))
                    const-val count[6275717]:int(64)[10] "temp"
                    (6275722 'move' count[6275717](6275719 '.v' _iterator[5952806] F1_count[6832414]))
                    (6275325 call chpl_direct_counted_range_iter_helper[1469227] low[6275710] count[6275717] ret_tmp[6275322])
                    (6275329 'move' call_tmp[6275320] ret_tmp[6275322])
                    (6275332 'move' _iterator[6275318](6275335 call _getIterator[1519812] call_tmp[6275320]))
                    val ret[6275337]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                    val tmp[6275339]:bool[19] "dead after last mention" "maybe param" "temp"
                    val tmp[6275341]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275343]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6275345]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6275347]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275349]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6275351]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    val call_tmp[6275353]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6275355]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6275357]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6275359]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val tmp[6275361]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275363]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6275365]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[6275367]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6275369]:int(64)[10] "temp"
                    (6275371 'move' count[6275369](6275373 '.v' _iterator[6275318] F1_count[6834178]))
                    (6275376 'move' call_tmp[6275367](6275379 call <[1469576] count[6275369] 0))
                    (6275382 'move' tmp[6275365] call_tmp[6275367])
                    (6275385 'move' tmp[6275359] call_tmp[6275367])
                    const-val call_tmp[6275388]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (6275390 'move' call_tmp[6275388] call_tmp[6275367])
                    if call_tmp[6275367]
                    {
                      (6275396 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                    }
                    const-val start[6275399]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    const-val low[6275401]:int(64)[10] "temp"
                    (6275403 'move' low[6275401](6275405 '.v' _iterator[6275318] F0_low[6834174]))
                    (6275408 'move' start[6275399] low[6275401])
                    const-val end[6275411]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    val tmp[6275413]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[6275415]:bool[19] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[6275417]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6275419]:int(64)[10] "temp"
                    (6275421 'move' count[6275419](6275423 '.v' _iterator[6275318] F1_count[6834178]))
                    (6275426 'move' call_tmp[6275417](6275429 call ==[52746] count[6275419] 0))
                    (6275432 'move' tmp[6275415] call_tmp[6275417])
                    if call_tmp[6275417]
                    {
                      const-val tmp[6275437]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[6275439]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6275441]:int(64)[10] "temp"
                      (6275443 'move' low[6275441](6275445 '.v' _iterator[6275318] F0_low[6834174]))
                      (6275448 'move' call_tmp[6275439](6275450 'cast' uint(64)[86] low[6275441]))
                      const-val call_tmp[6275453]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[6275455]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6275457 'move' coerce_tmp[6275455](6275459 'cast' uint(64)[86] 1))
                      (6275462 'move' call_tmp[6275453](6275465 call -[1487313] call_tmp[6275439]))
                      val call_tmp[6275467]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6275469 'move' tmp[6275437](6275472 call :[1482043] call_tmp[6275453]))
                      (6275474 'move' tmp[6275413] tmp[6275437])
                    }
                    {
                      const-val tmp[6275478]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      val call_tmp[6275480]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[6275482]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6275484]:int(64)[10] "temp"
                      (6275486 'move' count[6275484](6275488 '.v' _iterator[6275318] F1_count[6834178]))
                      (6275491 'move' call_tmp[6275482] count[6275484])
                      const-val call_tmp[6275494]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6275496]:int(64)[10] "temp"
                      (6275498 'move' count[6275496](6275500 '.v' _iterator[6275318] F1_count[6834178]))
                      (6275503 'move' call_tmp[6275494](6275506 call -[1487343] count[6275496]))
                      const-val call_tmp[6275508]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6275510]:int(64)[10] "temp"
                      (6275512 'move' low[6275510](6275514 '.v' _iterator[6275318] F0_low[6834174]))
                      (6275517 'move' call_tmp[6275508](6275520 call +[56587] low[6275510] call_tmp[6275494]))
                      val call_tmp[6275523]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6275525 'move' tmp[6275478] call_tmp[6275508])
                      (6275528 'move' tmp[6275413] call_tmp[6275508])
                    }
                    (6275532 'move' end[6275411] tmp[6275413])
                    val _indexOfInterest[6275535]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6275537]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6275539]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6275541]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                    (6275544 call chpl_direct_param_stride_range_iter[1517410] start[6275399] tmp[6275413] ret_tmp[6275541])
                    (6275548 'move' call_tmp[6275539] ret_tmp[6275541])
                    (6275551 'move' _iterator[6275537](6275554 call _getIterator[1519541] call_tmp[6275539]))
                    {
                      val ret[6573466]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                      val call_tmp[6573468]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573470]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6573473 call chpl_range_check_stride[1517730])
                      val i[6573474]:int(64)[10] "dead at end of block" "insert auto destroy"
                      val call_tmp[6573476]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6573478 'move' i[6573474] 0)
                      val call_tmp[6573481]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573483]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573485]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573487]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[6573489]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[6573682]:int(64)[10] "temp"
                      (6573687 'move' low[6573682](6573684 '.v' _iterator[6275537] F0_low[6835591]))
                      (6573491 'move' default_arg_first[6573489](6573494 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6573682]))
                      const-val default_arg_last[6573496]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[6573689]:int(64)[10] "temp"
                      (6573694 'move' high[6573689](6573691 '.v' _iterator[6275537] F1_high[6835595]))
                      (6573498 'move' default_arg_last[6573496](6573501 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6573689]))
                      val default_arg_shouldHalt[6573503]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                      const-val _return_tmp_[6573505]:bool[19] "dead after last mention" "temp"
                      const-val low[6573696]:int(64)[10] "temp"
                      (6573701 'move' low[6573696](6573698 '.v' _iterator[6275537] F0_low[6835591]))
                      const-val high[6573703]:int(64)[10] "temp"
                      (6573708 'move' high[6573703](6573705 '.v' _iterator[6275537] F1_high[6835595]))
                      (6573507 'move' _return_tmp_[6573505](6573510 call chpl_checkIfRangeIterWillOverflow[1518856] low[6573696] high[6573703] 1 default_arg_first[6573489] default_arg_last[6573496] 1))
                      CForLoop[6573517]
                      {
                        const-val yret[6573534]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6573536 'move' yret[6573534] i[6573474])
                        const-val _yieldedIndex[6573550]:int(64)[10] "temp"
                        (6573680 'move' _yieldedIndex[6573550] i[6573474])
                        {
                          const-val i[6573552]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6573554 'move' i[6573552] _yieldedIndex[6573550])
                          const-val yret[6573557]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6573559 'move' yret[6573557] _yieldedIndex[6573550])
                          const-val _yieldedIndex[6573562]:int(64)[10] "temp"
                          (6573564 'move' _yieldedIndex[6573562] _yieldedIndex[6573550])
                          const-val i[6573567]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6573569 'move' i[6573567] _yieldedIndex[6573562])
                          const-val yret[6573572]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6573574 'move' yret[6573572] _yieldedIndex[6573562])
                          const-val _yieldedIndex[6573577]:int(64)[10] "temp"
                          (6573579 'move' _yieldedIndex[6573577] _yieldedIndex[6573562])
                          {
                            const-val i[6573583]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6573585 'move' i[6573583] _yieldedIndex[6573577])
                            const-ref call_tmp[6573588]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                            const-ref _this_tmp_[6573590]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                            (6573592 'move' _this_tmp_[6573590](6573595 call errorsArray[1064508] taskInd_this[6275294]))
                            val coerce_tmp[6573597]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6573599 'move' coerce_tmp[6573597](6573601 'deref' _this_tmp_[6573590]))
                            (6573603 'move' call_tmp[6573588](6573606 call this[1806103] coerce_tmp[6573597] _yieldedIndex[6573577]))
                            const-val call_tmp[6573609]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            val coerce_tmp[6573611]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6573613 'move' coerce_tmp[6573611](6573616 call borrow[1817588] call_tmp[6573588]))
                            val coerce_tmp[6573618]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6573620 'move' coerce_tmp[6573618](6573622 'cast' RootClass[236] coerce_tmp[6573611]))
                            (6573625 'move' call_tmp[6573609](6573628 call !=[53510] coerce_tmp[6573618] nil[32]))
                            const-val call_tmp[6573631]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (6573633 'move' call_tmp[6573631] call_tmp[6573609])
                            if call_tmp[6573609]
                            {
                              ref yret[6573638]:_ref(owned Error?)[1498167] "dead after last mention" "YVV" "temp"
                              const-ref call_tmp[6573640]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                              const-ref _this_tmp_[6573642]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                              (6573644 'move' _this_tmp_[6573642](6573647 call errorsArray[1064508] taskInd_this[6275294]))
                              val coerce_tmp[6573649]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (6573651 'move' coerce_tmp[6573649](6573653 'deref' _this_tmp_[6573642]))
                              (6573655 'move' call_tmp[6573640](6573658 call this[1806103] coerce_tmp[6573649] i[6573583]))
                              const-ref _yieldedIndex[6573661]:_ref(owned Error?)[1498167] "temp"
                              (6573663 'move' _yieldedIndex[6573661] call_tmp[6573640])
                              {
                                const-ref chpl__elidedIdx[6573667]:_ref(owned Error?)[1498167] "index var" "insert auto destroy"
                                (6573669 'move' chpl__elidedIdx[6573667] _yieldedIndex[6573661])
                                (6573673 call +=[72190] n[85819] 1)
                                label _continueLabel[6573676]
                              }
                            }
                          }
                        }
                        {
                          const-val low[6573710]:int(64)[10] "temp"
                          (6573715 'move' low[6573710](6573712 '.v' _iterator[6275537] F0_low[6835591]))
                          (6573519 '=' i[6573474] low[6573710])
                        }
                        {
                          const-val high[6573717]:int(64)[10] "temp"
                          (6573722 'move' high[6573717](6573719 '.v' _iterator[6275537] F1_high[6835595]))
                          (6573523 '<=' i[6573474] high[6573717])
                        }
                        {
                          val call_tmp[6573527]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          val call_tmp[6573529]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          (6573531 '+=' i[6573474] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[6573546]
                    }
                    (6275598 call _freeIterator[1519714] _iterator[6275537])
                    label _endchpl_direct_counted_range_iter_helper[6275600]
                    (6275603 call _freeIterator[1519981] _iterator[6275318])
                    label _endchpl_direct_counted_range_iter[6275605]
                  }
                  (5952967 call _freeIterator[1520248] _iterator[5952806])
                  label _endthese[5952969]
                }
                label _breakLabel[85855]
                (5610597 call _freeIterator[1817748] _iterator[85850])
              }
            }
          }
          {
            (85895 call +=[72190] n[85819] 1)
          }
          (85912 call =[1802821] cur[85824] curnext[85834])
        }
        label _continueLabel[85924]
        (85935 'move' while_borrow[85916](85932 call chpl_checkBorrowIfVar[1807303] cur[85824]))
        (85940 'move' tmp[85920](85938 call _cond_test[1807521] while_borrow[85916]))
        tmp[85920]
      }
      label _breakLabel[85925]
    }
    ref call_tmp[732859]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (732862 'move' call_tmp[732859](423432 call nErrors[1064482] this[85784]))
    (85951 call =[52229] call_tmp[732859] n[85819])
    ref call_tmp[732866]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "maybe param" "temp"
    (732869 'move' call_tmp[732866](423440 call errorsArray[1064508] this[85784]))
    val call_tmp[732871]:owned Error?[1498158] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[732876]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (732879 'move' call_tmp[732876](85964 'cast' uint(64)[86] n[85819]))
    val call_tmp[732881]:c_ptr(owned Error?)[1805608] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val default_arg_alignment[1818281]:uint(64)[86] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1818285 'move' default_arg_alignment[1818281](1818283 call allocate_default_alignment[1818242]))
    (732884 'move' call_tmp[732881](85959 call allocate[1817847] call_tmp[732876] 1 default_arg_alignment[1818281]))
    (85955 call =[1828302] call_tmp[732866] call_tmp[732881])
    val idx[85971]:int(64)[10] "dead at end of block" "insert auto destroy"
    (642089 'move' idx[85971] 0)
    (85975 call =[1802821] cur[85824] head[85794])
    {
      val call_tmp[732886]:Error[85511] "dead after last mention" "maybe param" "temp"
      (732889 'move' call_tmp[732886](86135 call chpl_checkBorrowIfVar[1807303] cur[85824]))
      val while_borrow[86134]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
      (642091 'move' while_borrow[86134] call_tmp[732886])
      val tmp[86138]:bool[19] "dead after last mention" "temp"
      (86166 'move' tmp[86138](86164 call _cond_test[1807521] while_borrow[86134]))
      WhileDo[86144] hazard
      {
        val call_tmp[732891]:Error[85511] "dead after last mention" "maybe param" "temp"
        (732894 'move' call_tmp[732891] while_borrow[86134])
        const curr[85980]:Error[85511] "dead at end of block" "const" "insert auto destroy"
        (642093 'move' curr[85980] call_tmp[732891])
        {
          const-ref call_tmp[732898]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1828542]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1828547 'move' coerce_tmp[1828542] curr[85980])
          (732901 'move' call_tmp[732898](85987 call _next[1061214] coerce_tmp[1828542]))
          val curnext[85985]:Error[85511] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1828553]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1828557 'move' coerce_tmp[1828553](1828555 'deref' call_tmp[732898]))
          (5610588 '=' curnext[85985] coerce_tmp[1828553])
          (642095 'noop')
          ref call_tmp[732905]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1828560]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1828565 'move' coerce_tmp[1828560] curr[85980])
          (732908 'move' call_tmp[732905](85995 call _next[1061214] coerce_tmp[1828560]))
          (85992 call =[1807238] call_tmp[732905] nil[32])
          val call_tmp[732910]:TaskErrors[87096] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1828569]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1828574 'move' coerce_tmp[1828569] curr[85980])
          (732913 'move' call_tmp[732910](86117 call :[1808086] coerce_tmp[1828569]))
          val ifvar_borrow[732915]:TaskErrors[87096] "dead after last mention" "temp"
          (732917 'move' ifvar_borrow[732915](732920 call chpl_checkBorrowIfVar[1808412] call_tmp[732910]))
          const-val call_tmp[732927]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (732930 'move' call_tmp[732927](86126 call _cond_test[1808626] ifvar_borrow[732915]))
          if call_tmp[732927]
          {
            const asTaskErr[86123]:TaskErrors[87096] "const"
            (732923 'move' asTaskErr[86123] ifvar_borrow[732915])
            const-val call_tmp[732932]:locale[234] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[5543088]:locale[234] "temp"
            (423456 call here[135591] ret_tmp[5543088])
            (5543091 'move' call_tmp[732932] ret_tmp[5543088])
            const-val origLoc[86012]:locale[234] "dead at end of block" "const" "insert auto destroy"
            (642097 'move' origLoc[86012] call_tmp[732932])
            const-ref call_tmp[732939]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "maybe param" "temp"
            (732942 'move' call_tmp[732939](423453 call errorsArray[1064508] this[85784]))
            const EA[86008]:c_ptr(owned Error?)[1805608] "dead at end of block" "const" "insert auto destroy"
            val coerce_tmp[1828606]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1828610 'move' coerce_tmp[1828606](1828608 'deref' call_tmp[732939]))
            (5610591 '=' EA[86008] coerce_tmp[1828606])
            (642099 'noop')
            val call_tmp[732944]:c_ptr(int(64))[1828691] "dead after last mention" "maybe param" "temp"
            (732947 'move' call_tmp[732944](86004 call c_ptrTo[1828613] idx[85971]))
            const idxPtr[86002]:c_ptr(int(64))[1828691] "dead at end of block" "const" "insert auto destroy"
            (642101 'move' idxPtr[86002] call_tmp[732944])
            {
              const-val tmp[86086]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
              const-val call_tmp[732949]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
              (732952 'move' call_tmp[732949](86083 '_wide_get_locale' asTaskErr[86123]))
              (86087 'move' tmp[86086] call_tmp[732949])
              {
                ref _indexOfInterest[86051]:_ref(owned Error?)[1498167] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[86052]:_ic_these_TaskErrors[1809076] "dead at end of block" "expr temp" "temp"
                (86061 'move' _iterator[86052](86059 call _getIterator[1809032] asTaskErr[86123]))
                {
                  const-val this[5953378]:TaskErrors[87096] "temp"
                  (5953383 'move' this[5953378](5953380 '.v' _iterator[86052] F0_this[6827033]))
                  const-val this[5953371]:TaskErrors[87096] "temp"
                  (5953376 'move' this[5953371](5953373 '.v' _iterator[86052] F0_this[6827033]))
                  const-val this[5953364]:TaskErrors[87096] "temp"
                  (5953369 'move' this[5953364](5953366 '.v' _iterator[86052] F0_this[6827033]))
                  val ret[5953030]:_ir_these_TaskErrors[1809082] "dead at end of block" "RVV" "temp"
                  val call_tmp[5953032]:bool[19] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
                  const-val call_tmp[5953034]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val this[5953343]:TaskErrors[87096] "temp"
                  (5953348 'move' this[5953343](5953345 '.v' _iterator[86052] F0_this[6827033]))
                  (5953036 'move' call_tmp[5953034](5953038 '_wide_get_node' this[5953343]))
                  const-val call_tmp[5953040]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[5953042]:locale[234] "temp"
                  (5953045 call here[135591] ret_tmp[5953042])
                  (5953047 'move' call_tmp[5953040] ret_tmp[5953042])
                  const-val call_tmp[5953050]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (5953052 'move' call_tmp[5953050](5953055 call id[135646] call_tmp[5953040]))
                  const-val call_tmp[5953057]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[5953059]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (5953061 'move' coerce_tmp[5953059](5953063 'cast' int(64)[10] call_tmp[5953034]))
                  (5953066 'move' call_tmp[5953057](5953069 call ==[52746] coerce_tmp[5953059] call_tmp[5953050]))
                  const-val call_tmp[5953072]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val this[5953350]:TaskErrors[87096] "temp"
                  (5953355 'move' this[5953350](5953352 '.v' _iterator[86052] F0_this[6827033]))
                  (5953074 'move' call_tmp[5953072](5953076 '_wide_get_node' this[5953350]))
                  const-val call_tmp[5953078]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[5953080]:locale[234] "temp"
                  (5953083 call here[135591] ret_tmp[5953080])
                  (5953085 'move' call_tmp[5953078] ret_tmp[5953080])
                  const-val call_tmp[5953088]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (5953090 'move' call_tmp[5953088](5953093 call id[135646] call_tmp[5953078]))
                  (5953096 call assert[1809366] call_tmp[5953057] "iterating over a TaskErrors object allocated on locale " call_tmp[5953072] " while being on locale " call_tmp[5953088])
                  (5953103 call chpl__autoDestroy[3885511] call_tmp[5953078])
                  (5953106 call chpl__autoDestroy[3885511] call_tmp[5953040])
                  val _indexOfInterest[5953108]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[5953110]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[5953112]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-val this[5953357]:TaskErrors[87096] "temp"
                  (5953362 'move' this[5953357](5953359 '.v' _iterator[86052] F0_this[6827033]))
                  (5953114 'move' call_tmp[5953112](5953117 call nErrors[1064482] this[5953357]))
                  const-val call_tmp[5953119]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[5953121]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (5953123 'move' coerce_tmp[5953121](5953125 'deref' call_tmp[5953112]))
                  const-val ret_tmp[5953127]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                  (5953130 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[5953121] ret_tmp[5953127])
                  (5953134 'move' call_tmp[5953119] ret_tmp[5953127])
                  (5953137 'move' _iterator[5953110](5953140 call _getIterator[1520079] call_tmp[5953119]))
                  val taskInd_this[6275728]:TaskErrors[87096] "task private variable"
                  (6275731 'move' taskInd_this[6275728](6275730 'task private svar capture' this[5953378]))
                  {
                    val ret[6275734]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                    val tmp[6275736]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275738]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6275740]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6275742]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6275744]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275746]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6275748]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val _indexOfInterest[6275750]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6275752]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6275754]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6275756]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                    const-val low[6276196]:int(64)[10] "temp"
                    (6276201 'move' low[6276196](6276198 '.v' _iterator[5953110] F0_low[6832410]))
                    const-val count[6276203]:int(64)[10] "temp"
                    (6276208 'move' count[6276203](6276205 '.v' _iterator[5953110] F1_count[6832414]))
                    (6275759 call chpl_direct_counted_range_iter_helper[1469227] low[6276196] count[6276203] ret_tmp[6275756])
                    (6275763 'move' call_tmp[6275754] ret_tmp[6275756])
                    (6275766 'move' _iterator[6275752](6275769 call _getIterator[1519812] call_tmp[6275754]))
                    val ret[6275771]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                    val tmp[6275773]:bool[19] "dead after last mention" "maybe param" "temp"
                    val tmp[6275775]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275777]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6275779]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6275781]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275783]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6275785]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    val call_tmp[6275787]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6275789]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6275791]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6275793]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val tmp[6275795]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6275797]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6275799]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[6275801]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6275803]:int(64)[10] "temp"
                    (6275805 'move' count[6275803](6275807 '.v' _iterator[6275752] F1_count[6834178]))
                    (6275810 'move' call_tmp[6275801](6275813 call <[1469576] count[6275803] 0))
                    (6275816 'move' tmp[6275799] call_tmp[6275801])
                    (6275819 'move' tmp[6275793] call_tmp[6275801])
                    const-val call_tmp[6275822]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (6275824 'move' call_tmp[6275822] call_tmp[6275801])
                    if call_tmp[6275801]
                    {
                      (6275830 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                    }
                    const-val start[6275833]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    const-val low[6275835]:int(64)[10] "temp"
                    (6275837 'move' low[6275835](6275839 '.v' _iterator[6275752] F0_low[6834174]))
                    (6275842 'move' start[6275833] low[6275835])
                    const-val end[6275845]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    val tmp[6275847]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[6275849]:bool[19] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[6275851]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6275853]:int(64)[10] "temp"
                    (6275855 'move' count[6275853](6275857 '.v' _iterator[6275752] F1_count[6834178]))
                    (6275860 'move' call_tmp[6275851](6275863 call ==[52746] count[6275853] 0))
                    (6275866 'move' tmp[6275849] call_tmp[6275851])
                    if call_tmp[6275851]
                    {
                      const-val tmp[6275871]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[6275873]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6275875]:int(64)[10] "temp"
                      (6275877 'move' low[6275875](6275879 '.v' _iterator[6275752] F0_low[6834174]))
                      (6275882 'move' call_tmp[6275873](6275884 'cast' uint(64)[86] low[6275875]))
                      const-val call_tmp[6275887]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[6275889]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6275891 'move' coerce_tmp[6275889](6275893 'cast' uint(64)[86] 1))
                      (6275896 'move' call_tmp[6275887](6275899 call -[1487313] call_tmp[6275873]))
                      val call_tmp[6275901]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6275903 'move' tmp[6275871](6275906 call :[1482043] call_tmp[6275887]))
                      (6275908 'move' tmp[6275847] tmp[6275871])
                    }
                    {
                      const-val tmp[6275912]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      val call_tmp[6275914]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[6275916]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6275918]:int(64)[10] "temp"
                      (6275920 'move' count[6275918](6275922 '.v' _iterator[6275752] F1_count[6834178]))
                      (6275925 'move' call_tmp[6275916] count[6275918])
                      const-val call_tmp[6275928]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6275930]:int(64)[10] "temp"
                      (6275932 'move' count[6275930](6275934 '.v' _iterator[6275752] F1_count[6834178]))
                      (6275937 'move' call_tmp[6275928](6275940 call -[1487343] count[6275930]))
                      const-val call_tmp[6275942]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6275944]:int(64)[10] "temp"
                      (6275946 'move' low[6275944](6275948 '.v' _iterator[6275752] F0_low[6834174]))
                      (6275951 'move' call_tmp[6275942](6275954 call +[56587] low[6275944] call_tmp[6275928]))
                      val call_tmp[6275957]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6275959 'move' tmp[6275912] call_tmp[6275942])
                      (6275962 'move' tmp[6275847] call_tmp[6275942])
                    }
                    (6275966 'move' end[6275845] tmp[6275847])
                    val _indexOfInterest[6275969]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6275971]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6275973]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6275975]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                    (6275978 call chpl_direct_param_stride_range_iter[1517410] start[6275833] tmp[6275847] ret_tmp[6275975])
                    (6275982 'move' call_tmp[6275973] ret_tmp[6275975])
                    (6275985 'move' _iterator[6275971](6275988 call _getIterator[1519541] call_tmp[6275973]))
                    {
                      val ret[6573725]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                      val call_tmp[6573727]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573729]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6573732 call chpl_range_check_stride[1517730])
                      val i[6573733]:int(64)[10] "dead at end of block" "insert auto destroy"
                      val call_tmp[6573735]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6573737 'move' i[6573733] 0)
                      val call_tmp[6573740]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573742]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573744]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6573746]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[6573748]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[6573993]:int(64)[10] "temp"
                      (6573998 'move' low[6573993](6573995 '.v' _iterator[6275971] F0_low[6835591]))
                      (6573750 'move' default_arg_first[6573748](6573753 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6573993]))
                      const-val default_arg_last[6573755]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[6574000]:int(64)[10] "temp"
                      (6574005 'move' high[6574000](6574002 '.v' _iterator[6275971] F1_high[6835595]))
                      (6573757 'move' default_arg_last[6573755](6573760 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6574000]))
                      val default_arg_shouldHalt[6573762]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                      const-val _return_tmp_[6573764]:bool[19] "dead after last mention" "temp"
                      const-val low[6574007]:int(64)[10] "temp"
                      (6574012 'move' low[6574007](6574009 '.v' _iterator[6275971] F0_low[6835591]))
                      const-val high[6574014]:int(64)[10] "temp"
                      (6574019 'move' high[6574014](6574016 '.v' _iterator[6275971] F1_high[6835595]))
                      (6573766 'move' _return_tmp_[6573764](6573769 call chpl_checkIfRangeIterWillOverflow[1518856] low[6574007] high[6574014] 1 default_arg_first[6573748] default_arg_last[6573755] 1))
                      CForLoop[6573776] hazard
                      {
                        const-val yret[6573793]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6573795 'move' yret[6573793] i[6573733])
                        const-val _yieldedIndex[6573809]:int(64)[10] "temp"
                        (6573991 'move' _yieldedIndex[6573809] i[6573733])
                        {
                          const-val i[6573811]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6573813 'move' i[6573811] _yieldedIndex[6573809])
                          const-val yret[6573816]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6573818 'move' yret[6573816] _yieldedIndex[6573809])
                          const-val _yieldedIndex[6573821]:int(64)[10] "temp"
                          (6573823 'move' _yieldedIndex[6573821] _yieldedIndex[6573809])
                          const-val i[6573826]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6573828 'move' i[6573826] _yieldedIndex[6573821])
                          const-val yret[6573831]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6573833 'move' yret[6573831] _yieldedIndex[6573821])
                          const-val _yieldedIndex[6573836]:int(64)[10] "temp"
                          (6573838 'move' _yieldedIndex[6573836] _yieldedIndex[6573821])
                          {
                            const-val i[6573842]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6573844 'move' i[6573842] _yieldedIndex[6573836])
                            const-ref call_tmp[6573847]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                            const-ref _this_tmp_[6573849]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                            (6573851 'move' _this_tmp_[6573849](6573854 call errorsArray[1064508] taskInd_this[6275728]))
                            val coerce_tmp[6573856]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6573858 'move' coerce_tmp[6573856](6573860 'deref' _this_tmp_[6573849]))
                            (6573862 'move' call_tmp[6573847](6573865 call this[1806103] coerce_tmp[6573856] _yieldedIndex[6573836]))
                            const-val call_tmp[6573868]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            val coerce_tmp[6573870]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6573872 'move' coerce_tmp[6573870](6573875 call borrow[1817588] call_tmp[6573847]))
                            val coerce_tmp[6573877]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6573879 'move' coerce_tmp[6573877](6573881 'cast' RootClass[236] coerce_tmp[6573870]))
                            (6573884 'move' call_tmp[6573868](6573887 call !=[53510] coerce_tmp[6573877] nil[32]))
                            const-val call_tmp[6573890]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (6573892 'move' call_tmp[6573890] call_tmp[6573868])
                            if call_tmp[6573868]
                            {
                              ref yret[6573897]:_ref(owned Error?)[1498167] "dead after last mention" "YVV" "temp"
                              ref call_tmp[6573899]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                              const-ref _this_tmp_[6573901]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                              (6573903 'move' _this_tmp_[6573901](6573906 call errorsArray[1064508] taskInd_this[6275728]))
                              val coerce_tmp[6573908]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (6573910 'move' coerce_tmp[6573908](6573912 'deref' _this_tmp_[6573901]))
                              (6573914 'move' call_tmp[6573899](6573917 call this[1806103] coerce_tmp[6573908] i[6573842]))
                              ref _yieldedIndex[6573920]:_ref(owned Error?)[1498167] "temp"
                              (6573922 'move' _yieldedIndex[6573920] call_tmp[6573899])
                              {
                                ref e[6573926]:_ref(owned Error?)[1498167] "index var" "insert auto destroy"
                                (6573928 'move' e[6573926] _yieldedIndex[6573920])
                                {
                                  const-val tmp[6573932]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
                                  const-val call_tmp[6573934]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
                                  val _locale_tmp_[6573936]:BaseLocale[136243] "dead after last mention" "temp"
                                  (6573938 'move' _locale_tmp_[6573936](6573941 call _value[135299] origLoc[86012]))
                                  (6573943 'move' call_tmp[6573934](6573945 '_wide_get_locale' _locale_tmp_[6573936]))
                                  (6573947 'move' tmp[6573932] call_tmp[6573934])
                                  {
                                    const-ref call_tmp[6573951]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                                    (6573953 'move' call_tmp[6573951](6573956 call deref[1828846] idxPtr[86002]))
                                    ref call_tmp[6573958]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                                    const-val coerce_tmp[6573960]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (6573962 'move' coerce_tmp[6573960](6573964 'deref' call_tmp[6573951]))
                                    (6573966 'move' call_tmp[6573958](6573969 call this[1806103] EA[86008] coerce_tmp[6573960]))
                                    (6573973 call =[1828977] call_tmp[6573958] e[6573926])
                                    ref call_tmp[6573976]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                                    (6573978 'move' call_tmp[6573976](6573981 call deref[1828846] idxPtr[86002]))
                                    (6573984 call +=[72190] call_tmp[6573976] 1)
                                  }
                                }
                                label _continueLabel[6573987]
                              }
                            }
                          }
                        }
                        {
                          const-val low[6574021]:int(64)[10] "temp"
                          (6574026 'move' low[6574021](6574023 '.v' _iterator[6275971] F0_low[6835591]))
                          (6573778 '=' i[6573733] low[6574021])
                        }
                        {
                          const-val high[6574028]:int(64)[10] "temp"
                          (6574033 'move' high[6574028](6574030 '.v' _iterator[6275971] F1_high[6835595]))
                          (6573782 '<=' i[6573733] high[6574028])
                        }
                        {
                          val call_tmp[6573786]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          val call_tmp[6573788]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          (6573790 '+=' i[6573733] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[6573805]
                    }
                    (6276032 call _freeIterator[1519714] _iterator[6275971])
                    label _endchpl_direct_counted_range_iter_helper[6276034]
                    (6276037 call _freeIterator[1519981] _iterator[6275752])
                    label _endchpl_direct_counted_range_iter[6276039]
                  }
                  (5953271 call _freeIterator[1520248] _iterator[5953110])
                  label _endthese[5953273]
                }
                label _breakLabel[86057]
                (5610602 call _freeIterator[1817748] _iterator[86052])
              }
            }
            (86096 call chpl__delete[1829638] asTaskErr[86123])
            (5610605 call chpl__autoDestroy[3885511] origLoc[86012])
          }
          {
            ref call_tmp[732980]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
            const-ref _this_tmp_[1830673]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
            (1830675 'move' _this_tmp_[1830673](423466 call errorsArray[1064508] this[85784]))
            val coerce_tmp[1830680]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1830684 'move' coerce_tmp[1830680](1830682 'deref' _this_tmp_[1830673]))
            (732983 'move' call_tmp[732980](86103 call this[1806103] coerce_tmp[1830680] idx[85971]))
            val call_tmp[732987]:owned Error[1498203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[5555607]:owned Error[1498203] "temp"
            (86111 call adopt[1830713] curr[85980] ret_tmp[5555607])
            (5555610 'move' call_tmp[732987] ret_tmp[5555607])
            (86100 call =[1830773] call_tmp[732980] call_tmp[732987])
            (5610608 call chpl__autoDestroy[3930254] call_tmp[732987])
            (86113 call +=[72190] idx[85971] 1)
          }
          (86130 call =[1802821] cur[85824] curnext[85985])
        }
        label _continueLabel[86142]
        (86153 'move' while_borrow[86134](86150 call chpl_checkBorrowIfVar[1807303] cur[85824]))
        (86158 'move' tmp[86138](86156 call _cond_test[1807521] while_borrow[86134]))
        tmp[86138]
      }
      label _breakLabel[86143]
    }
    (587799 return _void[46])
  }
  function TaskErrors[87096].init[86171](const in arg this[86173]:TaskErrors[87096], const in arg err[86177]:Error[85511]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[519709]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (519717 'move' super_tmp[519709](519710 '.v' this[86173] super[397434]))
    (519713 call init[85464] super_tmp[519709])
    val tmp[519668]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[732997]:Error[85511] "dead after last mention" "maybe param" "temp"
    (733000 'move' call_tmp[732997](519679 'cast' Error[85511] this[86173]))
    val chpl__thisAsParent[519676]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (642103 'move' chpl__thisAsParent[519676] call_tmp[732997])
    (519682 'setcid' chpl__thisAsParent[519676])
    val nErrors[519684]:int(64)[10] "dead after last mention" "temp"
    (519687 'move' nErrors[519684] 1)
    (519689 '.=' this[86173] nErrors[85768] nErrors[519684])
    val call_tmp[733002]:owned Error?[1498158] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[733007]:c_ptr(owned Error?)[1805608] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[4345941]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345947 'move' coerce_tmp[4345941](4345943 'cast' uint(64)[86] 1))
    const-val default_arg_alignment[4345950]:uint(64)[86] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (4345954 'move' default_arg_alignment[4345950](4345952 call allocate_default_alignment[1818242]))
    (733010 'move' call_tmp[733007](86191 call allocate[1817847] coerce_tmp[4345941] 1 default_arg_alignment[4345950]))
    val call_tmp[733012]:owned Error?[1498158] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[733017]:c_ptr(owned Error?)[1805608] "dead after last mention" "maybe param" "temp" "type variable"
    val errorsArray[519693]:c_ptr(owned Error?)[1805608] "dead after last mention" "temp"
    (519700 'move' errorsArray[519693] call_tmp[733007])
    (519702 '.=' this[86173] errorsArray[85773] errorsArray[519693])
    (519707 'setcid' this[86173])
    ref call_tmp[733024]:_ref(Error)[1471765] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[4345979]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345984 'move' coerce_tmp[4345979] err[86177])
    (733027 'move' call_tmp[733024](86207 call _next[1061214] coerce_tmp[4345979]))
    (86204 call =[1807238] call_tmp[733024] nil[32])
    ref call_tmp[733031]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[4345989]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
    (4345991 'move' _this_tmp_[4345989](423492 call errorsArray[1064508] this[86173]))
    val coerce_tmp[4345996]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4346000 'move' coerce_tmp[4345996](4345998 'deref' _this_tmp_[4345989]))
    (733034 'move' call_tmp[733031](86214 call this[1806103] coerce_tmp[4345996] 0))
    val call_tmp[733038]:owned Error[1498203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555613]:owned Error[1498203] "temp"
    (86220 call adopt[1830713] err[86177] ret_tmp[5555613])
    (5555616 'move' call_tmp[733038] ret_tmp[5555613])
    (86211 call =[1830773] call_tmp[733031] call_tmp[733038])
    (5610612 call chpl__autoDestroy[3930254] call_tmp[733038])
    (587801 return _void[46])
  }
  function TaskErrors[87096].deinit[86241](const in arg this[86243]:TaskErrors[87096]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-ref call_tmp[733065]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "maybe param" "temp"
    (733068 'move' call_tmp[733065](423525 call errorsArray[1064508] this[86243]))
    const-val call_tmp[733070]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1806023]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1806027 'move' coerce_tmp[1806023](1806025 'deref' call_tmp[733065]))
    (733073 'move' call_tmp[733070](86319 call _cond_test[1805652] coerce_tmp[1806023]))
    if call_tmp[733070]
    {
      {
        const-val tmp[86310]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
        const-val call_tmp[733075]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
        (733078 'move' call_tmp[733075](86307 '_wide_get_locale' this[86243]))
        (86311 'move' tmp[86310] call_tmp[733075])
        {
          {
            val _indexOfInterest[86265]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[86266]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
            const-ref call_tmp[733082]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
            (733085 'move' call_tmp[733082](423515 call nErrors[1064482] this[86243]))
            const-val call_tmp[733087]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1806085]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1806089 'move' coerce_tmp[1806085](1806087 'deref' call_tmp[733082]))
            const-val ret_tmp[5545862]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
            (86282 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[1806085] ret_tmp[5545862])
            (5545865 'move' call_tmp[733087] ret_tmp[5545862])
            (86275 'move' _iterator[86266](86273 call _getIterator[1520079] call_tmp[733087]))
            {
              val ret[5953386]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
              val tmp[5953388]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[5953390]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[5953392]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[5953394]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[5953396]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[5953398]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[5953400]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val _indexOfInterest[5953402]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[5953404]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[5953406]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[5953408]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
              const-val low[5953491]:int(64)[10] "temp"
              (5953496 'move' low[5953491](5953493 '.v' _iterator[86266] F0_low[6832410]))
              const-val count[5953498]:int(64)[10] "temp"
              (5953503 'move' count[5953498](5953500 '.v' _iterator[86266] F1_count[6832414]))
              (5953411 call chpl_direct_counted_range_iter_helper[1469227] low[5953491] count[5953498] ret_tmp[5953408])
              (5953415 'move' call_tmp[5953406] ret_tmp[5953408])
              (5953418 'move' _iterator[5953404](5953421 call _getIterator[1519812] call_tmp[5953406]))
              {
                val ret[6276211]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                val tmp[6276213]:bool[19] "dead after last mention" "maybe param" "temp"
                val tmp[6276215]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6276217]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[6276219]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                val tmp[6276221]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6276223]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[6276225]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                val call_tmp[6276227]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[6276229]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6276231]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                const-val tmp[6276233]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val tmp[6276235]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6276237]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                const-val tmp[6276239]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6276241]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6276586]:int(64)[10] "temp"
                (6276591 'move' count[6276586](6276588 '.v' _iterator[5953404] F1_count[6834178]))
                (6276243 'move' call_tmp[6276241](6276246 call <[1469576] count[6276586] 0))
                (6276249 'move' tmp[6276239] call_tmp[6276241])
                (6276252 'move' tmp[6276233] call_tmp[6276241])
                const-val call_tmp[6276255]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (6276257 'move' call_tmp[6276255] call_tmp[6276241])
                if call_tmp[6276241]
                {
                  (6276263 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                }
                const-val start[6276266]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                const-val low[6276593]:int(64)[10] "temp"
                (6276598 'move' low[6276593](6276595 '.v' _iterator[5953404] F0_low[6834174]))
                (6276268 'move' start[6276266] low[6276593])
                const-val end[6276271]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                val tmp[6276273]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[6276275]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[6276277]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6276600]:int(64)[10] "temp"
                (6276605 'move' count[6276600](6276602 '.v' _iterator[5953404] F1_count[6834178]))
                (6276279 'move' call_tmp[6276277](6276282 call ==[52746] count[6276600] 0))
                (6276285 'move' tmp[6276275] call_tmp[6276277])
                if call_tmp[6276277]
                {
                  const-val tmp[6276290]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[6276292]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val low[6276607]:int(64)[10] "temp"
                  (6276612 'move' low[6276607](6276609 '.v' _iterator[5953404] F0_low[6834174]))
                  (6276294 'move' call_tmp[6276292](6276296 'cast' uint(64)[86] low[6276607]))
                  const-val call_tmp[6276299]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6276301]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (6276303 'move' coerce_tmp[6276301](6276305 'cast' uint(64)[86] 1))
                  (6276308 'move' call_tmp[6276299](6276311 call -[1487313] call_tmp[6276292]))
                  val call_tmp[6276313]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6276315 'move' tmp[6276290](6276318 call :[1482043] call_tmp[6276299]))
                  (6276320 'move' tmp[6276273] tmp[6276290])
                }
                {
                  const-val tmp[6276324]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  val call_tmp[6276326]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[6276328]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[6276614]:int(64)[10] "temp"
                  (6276619 'move' count[6276614](6276616 '.v' _iterator[5953404] F1_count[6834178]))
                  (6276330 'move' call_tmp[6276328] count[6276614])
                  const-val call_tmp[6276333]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[6276621]:int(64)[10] "temp"
                  (6276626 'move' count[6276621](6276623 '.v' _iterator[5953404] F1_count[6834178]))
                  (6276335 'move' call_tmp[6276333](6276338 call -[1487343] count[6276621]))
                  const-val call_tmp[6276340]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val low[6276628]:int(64)[10] "temp"
                  (6276633 'move' low[6276628](6276630 '.v' _iterator[5953404] F0_low[6834174]))
                  (6276342 'move' call_tmp[6276340](6276345 call +[56587] low[6276628] call_tmp[6276333]))
                  val call_tmp[6276348]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6276350 'move' tmp[6276324] call_tmp[6276340])
                  (6276353 'move' tmp[6276273] call_tmp[6276340])
                }
                (6276357 'move' end[6276271] tmp[6276273])
                val _indexOfInterest[6276360]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6276362]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[6276364]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6276366]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                (6276369 call chpl_direct_param_stride_range_iter[1517410] start[6276266] tmp[6276273] ret_tmp[6276366])
                (6276373 'move' call_tmp[6276364] ret_tmp[6276366])
                (6276376 'move' _iterator[6276362](6276379 call _getIterator[1519541] call_tmp[6276364]))
                {
                  val ret[6276382]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                  val call_tmp[6276384]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6276386]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6276389 call chpl_range_check_stride[1517730])
                  val i[6276390]:int(64)[10] "dead at end of block" "insert auto destroy"
                  val call_tmp[6276392]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6276394 'move' i[6276390] 0)
                  val call_tmp[6276397]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6276399]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6276401]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6276403]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[6276405]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[6276407]:int(64)[10] "temp"
                  (6276409 'move' low[6276407](6276411 '.v' _iterator[6276362] F0_low[6835591]))
                  (6276414 'move' default_arg_first[6276405](6276417 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6276407]))
                  const-val default_arg_last[6276419]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[6276421]:int(64)[10] "temp"
                  (6276423 'move' high[6276421](6276425 '.v' _iterator[6276362] F1_high[6835595]))
                  (6276428 'move' default_arg_last[6276419](6276431 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6276421]))
                  val default_arg_shouldHalt[6276433]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                  const-val _return_tmp_[6276435]:bool[19] "dead after last mention" "temp"
                  const-val low[6276437]:int(64)[10] "temp"
                  (6276439 'move' low[6276437](6276441 '.v' _iterator[6276362] F0_low[6835591]))
                  const-val high[6276444]:int(64)[10] "temp"
                  (6276446 'move' high[6276444](6276448 '.v' _iterator[6276362] F1_high[6835595]))
                  (6276451 'move' _return_tmp_[6276435](6276454 call chpl_checkIfRangeIterWillOverflow[1518856] low[6276437] high[6276444] 1 default_arg_first[6276405] default_arg_last[6276419] 1))
                  CForLoop[6276461] hazard
                  {
                    const-val yret[6276492]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6276494 'move' yret[6276492] i[6276390])
                    const-val _yieldedIndex[6276497]:int(64)[10] "temp"
                    (6276499 'move' _yieldedIndex[6276497] i[6276390])
                    {
                      const-val i[6276503]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6276505 'move' i[6276503] _yieldedIndex[6276497])
                      const-val yret[6276508]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6276510 'move' yret[6276508] _yieldedIndex[6276497])
                      const-val _yieldedIndex[6276532]:int(64)[10] "temp"
                      (6276584 'move' _yieldedIndex[6276532] _yieldedIndex[6276497])
                      {
                        const-val i[6276534]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6276536 'move' i[6276534] _yieldedIndex[6276532])
                        const-val yret[6276539]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6276541 'move' yret[6276539] _yieldedIndex[6276532])
                        const-val _yieldedIndex[6276544]:int(64)[10] "temp"
                        (6276546 'move' _yieldedIndex[6276544] _yieldedIndex[6276532])
                        {
                          const-val i[6276550]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6276552 'move' i[6276550] _yieldedIndex[6276544])
                          {
                            ref call_tmp[6276556]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                            const-ref _this_tmp_[6276558]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                            (6276560 'move' _this_tmp_[6276558](6276563 call errorsArray[1064508] this[86243]))
                            val coerce_tmp[6276565]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6276567 'move' coerce_tmp[6276565](6276569 'deref' _this_tmp_[6276558]))
                            (6276571 'move' call_tmp[6276556](6276574 call this[1806103] coerce_tmp[6276565] i[6276550]))
                            (6276578 call =[1806235] call_tmp[6276556] nil[32])
                          }
                          label _continueLabel[6276581]
                        }
                      }
                    }
                    {
                      const-val low[6276463]:int(64)[10] "temp"
                      (6276465 'move' low[6276463](6276467 '.v' _iterator[6276362] F0_low[6835591]))
                      (6276470 '=' i[6276390] low[6276463])
                    }
                    {
                      const-val high[6276474]:int(64)[10] "temp"
                      (6276476 'move' high[6276474](6276478 '.v' _iterator[6276362] F1_high[6835595]))
                      (6276481 '<=' i[6276390] high[6276474])
                    }
                    {
                      val call_tmp[6276485]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      val call_tmp[6276487]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      (6276489 '+=' i[6276390] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[6276523]
                }
                (6276526 call _freeIterator[1519714] _iterator[6276362])
                label _endchpl_direct_counted_range_iter_helper[6276528]
              }
              (5953447 call _freeIterator[1519981] _iterator[5953404])
              label _endchpl_direct_counted_range_iter[5953449]
            }
            label _breakLabel[86271]
            (5610618 call _freeIterator[1520248] _iterator[86266])
          }
          const-ref call_tmp[733101]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "maybe param" "temp"
          (733104 'move' call_tmp[733101](423520 call errorsArray[1064508] this[86243]))
          val coerce_tmp[1807195]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1807199 'move' coerce_tmp[1807195](1807197 'deref' call_tmp[733101]))
          val coerce_tmp[1807201]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1807207 'move' coerce_tmp[1807201](1807203 'cast' c_ptr(void)[1465614] coerce_tmp[1807195]))
          (86305 call deallocate[51080] coerce_tmp[1807201])
        }
      }
    }
    label _enddeinit[5525591]
    val _parent_destructor_tmp_[5525586]:Error[85511] "temp"
    (5525593 'move' _parent_destructor_tmp_[5525586](5525587 'cast' Error[85511] this[86243]))
    (5525595 call deinit[1061344] _parent_destructor_tmp_[5525586])
    (587805 return _void[46])
  }
  function TaskErrors[87096].these[86326](const in arg this[86328]:TaskErrors[87096], ref arg _retArg[5541627]:_ref(_ir_these_TaskErrors)[1809193]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[6827394]:_ir_these_TaskErrors[1809082] "temp"
    (6827396 '.=' _ir[6827394] F0_this[6827035] this[86328])
    (6827400 '=' _retArg[5541627] _ir[6827394])
    (6827403 return _void[46])
  }
  type _ic_these_TaskErrors[1809076] val super[1809077]:RootClass[236] "super class" val more[1809079]:int(64)[10] const-val F0_this[6827033]:TaskErrors[87096] val F1__iterator[6827037]:_ic_chpl_direct_counted_range_iter[1520064] val F2_taskInd_this[6827039]:TaskErrors[87096] val F3__iterator[6827041]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F4__iterator[6827043]:_ic_chpl_direct_param_stride_range_iter[1519526] val F5_i[6827045]:int(64)[10] ref value[6827047]:_ref(owned Error?)[1498167]
  type _ir_these_TaskErrors[1809082] const-val F0_this[6827035]:TaskErrors[87096]
  function _getIterator[1809091](const  ref arg ir[1809093]:_ir_these_TaskErrors[1809082]) : _ic_these_TaskErrors[1809076] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1809200]:_ic_these_TaskErrors[1809076] "dead after last mention" "RVV" "temp"
    val _ic_[1809083]:_ic_these_TaskErrors[1809076] "dead after last mention" "temp"
    const-val call_tmp[1809207]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1809210 'move' call_tmp[1809207](1809222 'sizeof_bundle' _ic_these_TaskErrors[1809076]))
    val cast_tmp[1809225]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1809227 'move' cast_tmp[1809225](1809088 call chpl_here_alloc[308303] call_tmp[1809207] 42))
    (1809096 'move' _ic_[1809083](1809229 'cast' _ic_these_TaskErrors[1809076] cast_tmp[1809225]))
    (1809098 'setcid' _ic_[1809083])
    (1809205 'move' ret[1809200] _ic_[1809083])
    (6827406 '.=' ret[1809200] more[1809079] 1)
    const-val tmp[6827410]:TaskErrors[87096] "temp"
    (6827415 'move' tmp[6827410](6827411 '.v' ir[1809093] F0_this[6827035]))
    (6827417 '.=' ret[1809200] F0_this[6827033] tmp[6827410])
    (1809202 return ret[1809200])
  }
  function TaskErrors[87096].message[86562](const in arg this[86564]:TaskErrors[87096], ref arg _retArg[5609222]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[587832]:string[244] "dead after last mention" "RVV" "temp"
    val n[86571]:int(64)[10] "dead at end of block" "insert auto destroy"
    (642109 'move' n[86571] 0)
    val minMsg[86576]:string[244] "dead at end of block" "insert auto destroy"
    (4347780 call init[21321] minMsg[86576])
    val maxMsg[86581]:string[244] "dead at end of block" "insert auto destroy"
    (4347785 call init[21321] maxMsg[86581])
    val first[86586]:Error[85511] "dead at end of block" "insert auto destroy"
    (4347793 'move' first[86586](4347791 'cast' Error[85511] nil[32]))
    val last[86593]:Error[85511] "dead at end of block" "insert auto destroy"
    (4347798 'move' last[86593](4347796 'cast' Error[85511] nil[32]))
    {
      ref _indexOfInterest[86673]:_ref(owned Error?)[1498167] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[86674]:_ic_these_TaskErrors[1809076] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[733268]:_ir_these_TaskErrors[1809082] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5541603]:_ir_these_TaskErrors[1809082] "temp"
      (86602 call these[86326] this[86564] ret_tmp[5541603])
      (5541606 'move' call_tmp[733268] ret_tmp[5541603])
      (86683 'move' _iterator[86674](86681 call _getIterator[1809091] call_tmp[733268]))
      {
        val ret[5953698]:_ir_these_TaskErrors[1809082] "dead at end of block" "RVV" "temp"
        val call_tmp[5953700]:bool[19] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
        const-val call_tmp[5953702]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val this[5954225]:TaskErrors[87096] "temp"
        (5954230 'move' this[5954225](5954227 '.v' _iterator[86674] F0_this[6827033]))
        (5953704 'move' call_tmp[5953702](5953706 '_wide_get_node' this[5954225]))
        const-val call_tmp[5953708]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5953710]:locale[234] "temp"
        (5953713 call here[135591] ret_tmp[5953710])
        (5953715 'move' call_tmp[5953708] ret_tmp[5953710])
        const-val call_tmp[5953718]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (5953720 'move' call_tmp[5953718](5953723 call id[135646] call_tmp[5953708]))
        const-val call_tmp[5953725]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[5953727]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (5953729 'move' coerce_tmp[5953727](5953731 'cast' int(64)[10] call_tmp[5953702]))
        (5953734 'move' call_tmp[5953725](5953737 call ==[52746] coerce_tmp[5953727] call_tmp[5953718]))
        const-val call_tmp[5953740]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val this[5954232]:TaskErrors[87096] "temp"
        (5954237 'move' this[5954232](5954234 '.v' _iterator[86674] F0_this[6827033]))
        (5953742 'move' call_tmp[5953740](5953744 '_wide_get_node' this[5954232]))
        const-val call_tmp[5953746]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5953748]:locale[234] "temp"
        (5953751 call here[135591] ret_tmp[5953748])
        (5953753 'move' call_tmp[5953746] ret_tmp[5953748])
        const-val call_tmp[5953756]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (5953758 'move' call_tmp[5953756](5953761 call id[135646] call_tmp[5953746]))
        (5953764 call assert[1809366] call_tmp[5953725] "iterating over a TaskErrors object allocated on locale " call_tmp[5953740] " while being on locale " call_tmp[5953756])
        (5953771 call chpl__autoDestroy[3885511] call_tmp[5953746])
        (5953774 call chpl__autoDestroy[3885511] call_tmp[5953708])
        val _indexOfInterest[5953776]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[5953778]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
        const-ref call_tmp[5953780]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
        const-val this[5954239]:TaskErrors[87096] "temp"
        (5954244 'move' this[5954239](5954241 '.v' _iterator[86674] F0_this[6827033]))
        (5953782 'move' call_tmp[5953780](5953785 call nErrors[1064482] this[5954239]))
        const-val call_tmp[5953787]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[5953789]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (5953791 'move' coerce_tmp[5953789](5953793 'deref' call_tmp[5953780]))
        const-val ret_tmp[5953795]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
        (5953798 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[5953789] ret_tmp[5953795])
        (5953802 'move' call_tmp[5953787] ret_tmp[5953795])
        (5953805 'move' _iterator[5953778](5953808 call _getIterator[1520079] call_tmp[5953787]))
        val taskInd_this[5953810]:TaskErrors[87096] "task private variable"
        const-val this[5954246]:TaskErrors[87096] "temp"
        (5954251 'move' this[5954246](5954248 '.v' _iterator[86674] F0_this[6827033]))
        (5953812 'move' taskInd_this[5953810](5953814 'task private svar capture' this[5954246]))
        {
          val ret[5953820]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
          val tmp[5953822]:bool[19] "dead after last mention" "maybe param" "temp"
          val call_tmp[5953824]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[5953826]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[5953828]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
          val tmp[5953830]:bool[19] "dead after last mention" "maybe param" "temp"
          val call_tmp[5953832]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[5953834]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val _indexOfInterest[5953836]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[5953838]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[5953840]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[5953842]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
          const-val low[5953844]:int(64)[10] "temp"
          (5953846 'move' low[5953844](5953848 '.v' _iterator[5953778] F0_low[6832410]))
          const-val count[5953851]:int(64)[10] "temp"
          (5953853 'move' count[5953851](5953855 '.v' _iterator[5953778] F1_count[6832414]))
          (5953859 call chpl_direct_counted_range_iter_helper[1469227] low[5953844] count[5953851] ret_tmp[5953842])
          (5953863 'move' call_tmp[5953840] ret_tmp[5953842])
          (5953866 'move' _iterator[5953838](5953869 call _getIterator[1519812] call_tmp[5953840]))
          {
            val ret[6277127]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
            val tmp[6277129]:bool[19] "dead after last mention" "maybe param" "temp"
            val tmp[6277131]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6277133]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6277135]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6277137]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6277139]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6277141]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            val call_tmp[6277143]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[6277145]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6277147]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6277149]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val tmp[6277151]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6277153]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6277155]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6277157]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6277779]:int(64)[10] "temp"
            (6277784 'move' count[6277779](6277781 '.v' _iterator[5953838] F1_count[6834178]))
            (6277159 'move' call_tmp[6277157](6277162 call <[1469576] count[6277779] 0))
            (6277165 'move' tmp[6277155] call_tmp[6277157])
            (6277168 'move' tmp[6277149] call_tmp[6277157])
            const-val call_tmp[6277171]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (6277173 'move' call_tmp[6277171] call_tmp[6277157])
            if call_tmp[6277157]
            {
              (6277179 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
            }
            const-val start[6277182]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            const-val low[6277786]:int(64)[10] "temp"
            (6277791 'move' low[6277786](6277788 '.v' _iterator[5953838] F0_low[6834174]))
            (6277184 'move' start[6277182] low[6277786])
            const-val end[6277187]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            val tmp[6277189]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[6277191]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[6277193]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6277793]:int(64)[10] "temp"
            (6277798 'move' count[6277793](6277795 '.v' _iterator[5953838] F1_count[6834178]))
            (6277195 'move' call_tmp[6277193](6277198 call ==[52746] count[6277793] 0))
            (6277201 'move' tmp[6277191] call_tmp[6277193])
            if call_tmp[6277193]
            {
              const-val tmp[6277206]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6277208]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6277800]:int(64)[10] "temp"
              (6277805 'move' low[6277800](6277802 '.v' _iterator[5953838] F0_low[6834174]))
              (6277210 'move' call_tmp[6277208](6277212 'cast' uint(64)[86] low[6277800]))
              const-val call_tmp[6277215]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[6277217]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (6277219 'move' coerce_tmp[6277217](6277221 'cast' uint(64)[86] 1))
              (6277224 'move' call_tmp[6277215](6277227 call -[1487313] call_tmp[6277208]))
              val call_tmp[6277229]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6277231 'move' tmp[6277206](6277234 call :[1482043] call_tmp[6277215]))
              (6277236 'move' tmp[6277189] tmp[6277206])
            }
            {
              const-val tmp[6277240]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              val call_tmp[6277242]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[6277244]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6277807]:int(64)[10] "temp"
              (6277812 'move' count[6277807](6277809 '.v' _iterator[5953838] F1_count[6834178]))
              (6277246 'move' call_tmp[6277244] count[6277807])
              const-val call_tmp[6277249]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6277814]:int(64)[10] "temp"
              (6277819 'move' count[6277814](6277816 '.v' _iterator[5953838] F1_count[6834178]))
              (6277251 'move' call_tmp[6277249](6277254 call -[1487343] count[6277814]))
              const-val call_tmp[6277256]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6277821]:int(64)[10] "temp"
              (6277826 'move' low[6277821](6277823 '.v' _iterator[5953838] F0_low[6834174]))
              (6277258 'move' call_tmp[6277256](6277261 call +[56587] low[6277821] call_tmp[6277249]))
              val call_tmp[6277264]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6277266 'move' tmp[6277240] call_tmp[6277256])
              (6277269 'move' tmp[6277189] call_tmp[6277256])
            }
            (6277273 'move' end[6277187] tmp[6277189])
            val _indexOfInterest[6277276]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6277278]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6277280]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6277282]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6277285 call chpl_direct_param_stride_range_iter[1517410] start[6277182] tmp[6277189] ret_tmp[6277282])
            (6277289 'move' call_tmp[6277280] ret_tmp[6277282])
            (6277292 'move' _iterator[6277278](6277295 call _getIterator[1519541] call_tmp[6277280]))
            {
              val ret[6277298]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6277300]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6277302]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6277305 call chpl_range_check_stride[1517730])
              val i[6277306]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6277308]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6277310 'move' i[6277306] 0)
              val call_tmp[6277313]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6277315]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6277317]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6277319]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6277321]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6277323]:int(64)[10] "temp"
              (6277325 'move' low[6277323](6277327 '.v' _iterator[6277278] F0_low[6835591]))
              (6277330 'move' default_arg_first[6277321](6277333 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6277323]))
              const-val default_arg_last[6277335]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6277337]:int(64)[10] "temp"
              (6277339 'move' high[6277337](6277341 '.v' _iterator[6277278] F1_high[6835595]))
              (6277344 'move' default_arg_last[6277335](6277347 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6277337]))
              val default_arg_shouldHalt[6277349]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6277351]:bool[19] "dead after last mention" "temp"
              const-val low[6277353]:int(64)[10] "temp"
              (6277355 'move' low[6277353](6277357 '.v' _iterator[6277278] F0_low[6835591]))
              const-val high[6277360]:int(64)[10] "temp"
              (6277362 'move' high[6277360](6277364 '.v' _iterator[6277278] F1_high[6835595]))
              (6277367 'move' _return_tmp_[6277351](6277370 call chpl_checkIfRangeIterWillOverflow[1518856] low[6277353] high[6277360] 1 default_arg_first[6277321] default_arg_last[6277335] 1))
              CForLoop[6277377] hazard
              {
                const-val yret[6277408]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6277410 'move' yret[6277408] i[6277306])
                const-val _yieldedIndex[6277413]:int(64)[10] "temp"
                (6277415 'move' _yieldedIndex[6277413] i[6277306])
                {
                  const-val i[6277419]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6277421 'move' i[6277419] _yieldedIndex[6277413])
                  const-val yret[6277424]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6277426 'move' yret[6277424] _yieldedIndex[6277413])
                  const-val _yieldedIndex[6277448]:int(64)[10] "temp"
                  (6277777 'move' _yieldedIndex[6277448] _yieldedIndex[6277413])
                  {
                    const-val i[6277450]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6277452 'move' i[6277450] _yieldedIndex[6277448])
                    const-val yret[6277455]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6277457 'move' yret[6277455] _yieldedIndex[6277448])
                    const-val _yieldedIndex[6277460]:int(64)[10] "temp"
                    (6277462 'move' _yieldedIndex[6277460] _yieldedIndex[6277448])
                    {
                      const-val i[6277466]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6277468 'move' i[6277466] _yieldedIndex[6277460])
                      const-ref call_tmp[6277471]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                      const-ref _this_tmp_[6277473]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                      (6277475 'move' _this_tmp_[6277473](6277478 call errorsArray[1064508] taskInd_this[5953810]))
                      val coerce_tmp[6277480]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6277482 'move' coerce_tmp[6277480](6277484 'deref' _this_tmp_[6277473]))
                      (6277486 'move' call_tmp[6277471](6277489 call this[1806103] coerce_tmp[6277480] _yieldedIndex[6277460]))
                      const-val call_tmp[6277492]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[6277494]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6277496 'move' coerce_tmp[6277494](6277499 call borrow[1817588] call_tmp[6277471]))
                      val coerce_tmp[6277501]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6277503 'move' coerce_tmp[6277501](6277505 'cast' RootClass[236] coerce_tmp[6277494]))
                      (6277508 'move' call_tmp[6277492](6277511 call !=[53510] coerce_tmp[6277501] nil[32]))
                      const-val call_tmp[6277514]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (6277516 'move' call_tmp[6277514] call_tmp[6277492])
                      if call_tmp[6277492]
                      {
                        ref yret[6277521]:_ref(owned Error?)[1498167] "dead after last mention" "YVV" "temp"
                        const-ref call_tmp[6277523]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                        const-ref _this_tmp_[6277525]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                        (6277527 'move' _this_tmp_[6277525](6277530 call errorsArray[1064508] taskInd_this[5953810]))
                        val coerce_tmp[6277532]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (6277534 'move' coerce_tmp[6277532](6277536 'deref' _this_tmp_[6277525]))
                        (6277538 'move' call_tmp[6277523](6277541 call this[1806103] coerce_tmp[6277532] i[6277466]))
                        const-ref _yieldedIndex[6277544]:_ref(owned Error?)[1498167] "temp"
                        (6277546 'move' _yieldedIndex[6277544] call_tmp[6277523])
                        {
                          const-ref err[6277550]:_ref(owned Error?)[1498167] "index var" "insert auto destroy"
                          (6277552 'move' err[6277550] _yieldedIndex[6277544])
                          {
                            val call_tmp[6277556]:Error[85511] "dead after last mention" "maybe param" "temp"
                            (6277558 'move' call_tmp[6277556](6277561 call postfix![4347073] err[6277550]))
                            val e[6277563]:Error[85511] "dead at end of block" "insert auto destroy"
                            (6277565 'move' e[6277563] call_tmp[6277556])
                            const-val tmp[6277571]:bool[19] "dead after last mention" "maybe param" "temp"
                            (6277573 'move' tmp[6277571](6277576 call ==[28803] minMsg[86576] ""))
                            val call_tmp[6277579]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                            val tmp[6277581]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[6277583]:bool[19] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[6277585]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (6277587 'move' call_tmp[6277585] tmp[6277571])
                            (6277590 'move' tmp[6277583] call_tmp[6277585])
                            if tmp[6277583]
                            {
                              (6277595 'move' tmp[6277581] 1)
                            }
                            {
                              const-val tmp[6277599]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[6277601]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[6277603]:int(32)[66] "temp"
                              (6277605 'move' _virtual_method_tmp_[6277603](6277607 'getcid' e[6277563]))
                              val ret_tmp[6277609]:string[244] "temp"
                              (6277611 'virtual method call' message[85497] _virtual_method_tmp_[6277603] e[6277563] ret_tmp[6277609])
                              (6277616 'move' call_tmp[6277601] ret_tmp[6277609])
                              const-val call_tmp[6277619]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6277621 'move' call_tmp[6277619](6277624 call <[28857] call_tmp[6277601] minMsg[86576]))
                              (6277627 'move' tmp[6277599] call_tmp[6277619])
                              (6277630 'move' tmp[6277581] tmp[6277599])
                              (6277634 call chpl__autoDestroy[3262688] call_tmp[6277601])
                            }
                            const-val call_tmp[6277637]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (6277639 'move' call_tmp[6277637] tmp[6277581])
                            if call_tmp[6277637]
                            {
                              const-val call_tmp[6277644]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[6277646]:int(32)[66] "temp"
                              (6277648 'move' _virtual_method_tmp_[6277646](6277650 'getcid' e[6277563]))
                              val ret_tmp[6277652]:string[244] "temp"
                              (6277654 'virtual method call' message[85497] _virtual_method_tmp_[6277646] e[6277563] ret_tmp[6277652])
                              (6277659 'move' call_tmp[6277644] ret_tmp[6277652])
                              (6277663 call =[28046] minMsg[86576] call_tmp[6277644])
                              (6277667 call chpl__autoDestroy[3262688] call_tmp[6277644])
                            }
                            const-val tmp[6277670]:bool[19] "dead after last mention" "maybe param" "temp"
                            (6277672 'move' tmp[6277670](6277675 call ==[28803] maxMsg[86581] ""))
                            val call_tmp[6277678]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                            val tmp[6277680]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[6277682]:bool[19] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[6277684]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (6277686 'move' call_tmp[6277684] tmp[6277670])
                            (6277689 'move' tmp[6277682] call_tmp[6277684])
                            if tmp[6277682]
                            {
                              (6277694 'move' tmp[6277680] 1)
                            }
                            {
                              const-val tmp[6277698]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[6277700]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[6277702]:int(32)[66] "temp"
                              (6277704 'move' _virtual_method_tmp_[6277702](6277706 'getcid' e[6277563]))
                              val ret_tmp[6277708]:string[244] "temp"
                              (6277710 'virtual method call' message[85497] _virtual_method_tmp_[6277702] e[6277563] ret_tmp[6277708])
                              (6277715 'move' call_tmp[6277700] ret_tmp[6277708])
                              const-val call_tmp[6277718]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6277720 'move' call_tmp[6277718](6277723 call >[28883] call_tmp[6277700] maxMsg[86581]))
                              (6277726 'move' tmp[6277698] call_tmp[6277718])
                              (6277729 'move' tmp[6277680] tmp[6277698])
                              (6277733 call chpl__autoDestroy[3262688] call_tmp[6277700])
                            }
                            const-val call_tmp[6277736]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (6277738 'move' call_tmp[6277736] tmp[6277680])
                            if call_tmp[6277736]
                            {
                              const-val call_tmp[6277743]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[6277745]:int(32)[66] "temp"
                              (6277747 'move' _virtual_method_tmp_[6277745](6277749 'getcid' e[6277563]))
                              val ret_tmp[6277751]:string[244] "temp"
                              (6277753 'virtual method call' message[85497] _virtual_method_tmp_[6277745] e[6277563] ret_tmp[6277751])
                              (6277758 'move' call_tmp[6277743] ret_tmp[6277751])
                              (6277762 call =[28046] maxMsg[86581] call_tmp[6277743])
                              (6277766 call chpl__autoDestroy[3262688] call_tmp[6277743])
                            }
                            (6277770 call +=[72190] n[86571] 1)
                          }
                          label _continueLabel[6277773]
                        }
                      }
                    }
                  }
                }
                {
                  const-val low[6277379]:int(64)[10] "temp"
                  (6277381 'move' low[6277379](6277383 '.v' _iterator[6277278] F0_low[6835591]))
                  (6277386 '=' i[6277306] low[6277379])
                }
                {
                  const-val high[6277390]:int(64)[10] "temp"
                  (6277392 'move' high[6277390](6277394 '.v' _iterator[6277278] F1_high[6835595]))
                  (6277397 '<=' i[6277306] high[6277390])
                }
                {
                  val call_tmp[6277401]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6277403]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6277405 '+=' i[6277306] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6277439]
            }
            (6277442 call _freeIterator[1519714] _iterator[6277278])
            label _endchpl_direct_counted_range_iter_helper[6277444]
          }
          (5953986 call _freeIterator[1519981] _iterator[5953838])
          label _endchpl_direct_counted_range_iter[5953988]
        }
        (5953991 call _freeIterator[1520248] _iterator[5953778])
        label _endthese[5953993]
      }
      label _breakLabel[86679]
      (5610655 call _freeIterator[1817748] _iterator[86674])
    }
    {
      {
        ref _indexOfInterest[86749]:_ref(owned Error?)[1498167] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[86750]:_ic_these_TaskErrors[1809076] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[733348]:_ir_these_TaskErrors[1809082] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[5541609]:_ir_these_TaskErrors[1809082] "temp"
        (86709 call these[86326] this[86564] ret_tmp[5541609])
        (5541612 'move' call_tmp[733348] ret_tmp[5541609])
        (86759 'move' _iterator[86750](86757 call _getIterator[1809091] call_tmp[733348]))
        {
          val ret[5954254]:_ir_these_TaskErrors[1809082] "dead at end of block" "RVV" "temp"
          val call_tmp[5954256]:bool[19] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[5954258]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[5954657]:TaskErrors[87096] "temp"
          (5954662 'move' this[5954657](5954659 '.v' _iterator[86750] F0_this[6827033]))
          (5954260 'move' call_tmp[5954258](5954262 '_wide_get_node' this[5954657]))
          const-val call_tmp[5954264]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[5954266]:locale[234] "temp"
          (5954269 call here[135591] ret_tmp[5954266])
          (5954271 'move' call_tmp[5954264] ret_tmp[5954266])
          const-val call_tmp[5954274]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (5954276 'move' call_tmp[5954274](5954279 call id[135646] call_tmp[5954264]))
          const-val call_tmp[5954281]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[5954283]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (5954285 'move' coerce_tmp[5954283](5954287 'cast' int(64)[10] call_tmp[5954258]))
          (5954290 'move' call_tmp[5954281](5954293 call ==[52746] coerce_tmp[5954283] call_tmp[5954274]))
          const-val call_tmp[5954296]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[5954664]:TaskErrors[87096] "temp"
          (5954669 'move' this[5954664](5954666 '.v' _iterator[86750] F0_this[6827033]))
          (5954298 'move' call_tmp[5954296](5954300 '_wide_get_node' this[5954664]))
          const-val call_tmp[5954302]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[5954304]:locale[234] "temp"
          (5954307 call here[135591] ret_tmp[5954304])
          (5954309 'move' call_tmp[5954302] ret_tmp[5954304])
          const-val call_tmp[5954312]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (5954314 'move' call_tmp[5954312](5954317 call id[135646] call_tmp[5954302]))
          (5954320 call assert[1809366] call_tmp[5954281] "iterating over a TaskErrors object allocated on locale " call_tmp[5954296] " while being on locale " call_tmp[5954312])
          (5954327 call chpl__autoDestroy[3885511] call_tmp[5954302])
          (5954330 call chpl__autoDestroy[3885511] call_tmp[5954264])
          val _indexOfInterest[5954332]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[5954334]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[5954336]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          const-val this[5954671]:TaskErrors[87096] "temp"
          (5954676 'move' this[5954671](5954673 '.v' _iterator[86750] F0_this[6827033]))
          (5954338 'move' call_tmp[5954336](5954341 call nErrors[1064482] this[5954671]))
          const-val call_tmp[5954343]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[5954345]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (5954347 'move' coerce_tmp[5954345](5954349 'deref' call_tmp[5954336]))
          const-val ret_tmp[5954351]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          (5954354 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[5954345] ret_tmp[5954351])
          (5954358 'move' call_tmp[5954343] ret_tmp[5954351])
          (5954361 'move' _iterator[5954334](5954364 call _getIterator[1520079] call_tmp[5954343]))
          val taskInd_this[5954366]:TaskErrors[87096] "task private variable"
          const-val this[5954678]:TaskErrors[87096] "temp"
          (5954683 'move' this[5954678](5954680 '.v' _iterator[86750] F0_this[6827033]))
          (5954368 'move' taskInd_this[5954366](5954370 'task private svar capture' this[5954678]))
          {
            val ret[5954376]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[5954378]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[5954380]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[5954382]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[5954384]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[5954386]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[5954388]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[5954390]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[5954392]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[5954394]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[5954396]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[5954398]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[5954400]:int(64)[10] "temp"
            (5954402 'move' low[5954400](5954404 '.v' _iterator[5954334] F0_low[6832410]))
            const-val count[5954407]:int(64)[10] "temp"
            (5954409 'move' count[5954407](5954411 '.v' _iterator[5954334] F1_count[6832414]))
            (5954415 call chpl_direct_counted_range_iter_helper[1469227] low[5954400] count[5954407] ret_tmp[5954398])
            (5954419 'move' call_tmp[5954396] ret_tmp[5954398])
            (5954422 'move' _iterator[5954394](5954425 call _getIterator[1519812] call_tmp[5954396]))
            {
              val ret[6277829]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
              val tmp[6277831]:bool[19] "dead after last mention" "maybe param" "temp"
              val tmp[6277833]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6277835]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6277837]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6277839]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6277841]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6277843]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              val call_tmp[6277845]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6277847]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6277849]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6277851]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val tmp[6277853]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6277855]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6277857]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6277859]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6278357]:int(64)[10] "temp"
              (6278362 'move' count[6278357](6278359 '.v' _iterator[5954394] F1_count[6834178]))
              (6277861 'move' call_tmp[6277859](6277864 call <[1469576] count[6278357] 0))
              (6277867 'move' tmp[6277857] call_tmp[6277859])
              (6277870 'move' tmp[6277851] call_tmp[6277859])
              const-val call_tmp[6277873]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (6277875 'move' call_tmp[6277873] call_tmp[6277859])
              if call_tmp[6277859]
              {
                (6277881 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
              }
              const-val start[6277884]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              const-val low[6278364]:int(64)[10] "temp"
              (6278369 'move' low[6278364](6278366 '.v' _iterator[5954394] F0_low[6834174]))
              (6277886 'move' start[6277884] low[6278364])
              const-val end[6277889]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              val tmp[6277891]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[6277893]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[6277895]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6278371]:int(64)[10] "temp"
              (6278376 'move' count[6278371](6278373 '.v' _iterator[5954394] F1_count[6834178]))
              (6277897 'move' call_tmp[6277895](6277900 call ==[52746] count[6278371] 0))
              (6277903 'move' tmp[6277893] call_tmp[6277895])
              if call_tmp[6277895]
              {
                const-val tmp[6277908]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6277910]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6278378]:int(64)[10] "temp"
                (6278383 'move' low[6278378](6278380 '.v' _iterator[5954394] F0_low[6834174]))
                (6277912 'move' call_tmp[6277910](6277914 'cast' uint(64)[86] low[6278378]))
                const-val call_tmp[6277917]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[6277919]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (6277921 'move' coerce_tmp[6277919](6277923 'cast' uint(64)[86] 1))
                (6277926 'move' call_tmp[6277917](6277929 call -[1487313] call_tmp[6277910]))
                val call_tmp[6277931]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6277933 'move' tmp[6277908](6277936 call :[1482043] call_tmp[6277917]))
                (6277938 'move' tmp[6277891] tmp[6277908])
              }
              {
                const-val tmp[6277942]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[6277944]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[6277946]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6278385]:int(64)[10] "temp"
                (6278390 'move' count[6278385](6278387 '.v' _iterator[5954394] F1_count[6834178]))
                (6277948 'move' call_tmp[6277946] count[6278385])
                const-val call_tmp[6277951]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6278392]:int(64)[10] "temp"
                (6278397 'move' count[6278392](6278394 '.v' _iterator[5954394] F1_count[6834178]))
                (6277953 'move' call_tmp[6277951](6277956 call -[1487343] count[6278392]))
                const-val call_tmp[6277958]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6278399]:int(64)[10] "temp"
                (6278404 'move' low[6278399](6278401 '.v' _iterator[5954394] F0_low[6834174]))
                (6277960 'move' call_tmp[6277958](6277963 call +[56587] low[6278399] call_tmp[6277951]))
                val call_tmp[6277966]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6277968 'move' tmp[6277942] call_tmp[6277958])
                (6277971 'move' tmp[6277891] call_tmp[6277958])
              }
              (6277975 'move' end[6277889] tmp[6277891])
              val _indexOfInterest[6277978]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6277980]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6277982]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6277984]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
              (6277987 call chpl_direct_param_stride_range_iter[1517410] start[6277884] tmp[6277891] ret_tmp[6277984])
              (6277991 'move' call_tmp[6277982] ret_tmp[6277984])
              (6277994 'move' _iterator[6277980](6277997 call _getIterator[1519541] call_tmp[6277982]))
              {
                val ret[6278000]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                val call_tmp[6278002]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6278004]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6278007 call chpl_range_check_stride[1517730])
                val i[6278008]:int(64)[10] "dead at end of block" "insert auto destroy"
                val call_tmp[6278010]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6278012 'move' i[6278008] 0)
                val call_tmp[6278015]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6278017]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6278019]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6278021]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[6278023]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[6278025]:int(64)[10] "temp"
                (6278027 'move' low[6278025](6278029 '.v' _iterator[6277980] F0_low[6835591]))
                (6278032 'move' default_arg_first[6278023](6278035 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6278025]))
                const-val default_arg_last[6278037]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[6278039]:int(64)[10] "temp"
                (6278041 'move' high[6278039](6278043 '.v' _iterator[6277980] F1_high[6835595]))
                (6278046 'move' default_arg_last[6278037](6278049 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6278039]))
                val default_arg_shouldHalt[6278051]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                const-val _return_tmp_[6278053]:bool[19] "dead after last mention" "temp"
                const-val low[6278055]:int(64)[10] "temp"
                (6278057 'move' low[6278055](6278059 '.v' _iterator[6277980] F0_low[6835591]))
                const-val high[6278062]:int(64)[10] "temp"
                (6278064 'move' high[6278062](6278066 '.v' _iterator[6277980] F1_high[6835595]))
                (6278069 'move' _return_tmp_[6278053](6278072 call chpl_checkIfRangeIterWillOverflow[1518856] low[6278055] high[6278062] 1 default_arg_first[6278023] default_arg_last[6278037] 1))
                CForLoop[6278079] hazard
                {
                  const-val yret[6278110]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6278112 'move' yret[6278110] i[6278008])
                  const-val _yieldedIndex[6278115]:int(64)[10] "temp"
                  (6278117 'move' _yieldedIndex[6278115] i[6278008])
                  {
                    const-val i[6278121]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6278123 'move' i[6278121] _yieldedIndex[6278115])
                    const-val yret[6278126]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6278128 'move' yret[6278126] _yieldedIndex[6278115])
                    const-val _yieldedIndex[6278150]:int(64)[10] "temp"
                    (6278355 'move' _yieldedIndex[6278150] _yieldedIndex[6278115])
                    {
                      const-val i[6278152]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6278154 'move' i[6278152] _yieldedIndex[6278150])
                      const-val yret[6278157]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6278159 'move' yret[6278157] _yieldedIndex[6278150])
                      const-val _yieldedIndex[6278162]:int(64)[10] "temp"
                      (6278164 'move' _yieldedIndex[6278162] _yieldedIndex[6278150])
                      {
                        const-val i[6278168]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6278170 'move' i[6278168] _yieldedIndex[6278162])
                        const-ref call_tmp[6278173]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                        const-ref _this_tmp_[6278175]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                        (6278177 'move' _this_tmp_[6278175](6278180 call errorsArray[1064508] taskInd_this[5954366]))
                        val coerce_tmp[6278182]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (6278184 'move' coerce_tmp[6278182](6278186 'deref' _this_tmp_[6278175]))
                        (6278188 'move' call_tmp[6278173](6278191 call this[1806103] coerce_tmp[6278182] _yieldedIndex[6278162]))
                        const-val call_tmp[6278194]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        val coerce_tmp[6278196]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (6278198 'move' coerce_tmp[6278196](6278201 call borrow[1817588] call_tmp[6278173]))
                        val coerce_tmp[6278203]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (6278205 'move' coerce_tmp[6278203](6278207 'cast' RootClass[236] coerce_tmp[6278196]))
                        (6278210 'move' call_tmp[6278194](6278213 call !=[53510] coerce_tmp[6278203] nil[32]))
                        const-val call_tmp[6278216]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6278218 'move' call_tmp[6278216] call_tmp[6278194])
                        if call_tmp[6278194]
                        {
                          ref yret[6278223]:_ref(owned Error?)[1498167] "dead after last mention" "YVV" "temp"
                          const-ref call_tmp[6278225]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                          const-ref _this_tmp_[6278227]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                          (6278229 'move' _this_tmp_[6278227](6278232 call errorsArray[1064508] taskInd_this[5954366]))
                          val coerce_tmp[6278234]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6278236 'move' coerce_tmp[6278234](6278238 'deref' _this_tmp_[6278227]))
                          (6278240 'move' call_tmp[6278225](6278243 call this[1806103] coerce_tmp[6278234] i[6278168]))
                          const-ref _yieldedIndex[6278246]:_ref(owned Error?)[1498167] "temp"
                          (6278248 'move' _yieldedIndex[6278246] call_tmp[6278225])
                          {
                            const-ref err[6278252]:_ref(owned Error?)[1498167] "index var" "insert auto destroy"
                            (6278254 'move' err[6278252] _yieldedIndex[6278246])
                            {
                              val call_tmp[6278258]:Error[85511] "dead after last mention" "maybe param" "temp"
                              (6278260 'move' call_tmp[6278258](6278263 call postfix![4347073] err[6278252]))
                              val e[6278265]:Error[85511] "dead at end of block" "insert auto destroy"
                              (6278267 'move' e[6278265] call_tmp[6278258])
                              const-val call_tmp[6278273]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[6278275]:int(32)[66] "temp"
                              (6278277 'move' _virtual_method_tmp_[6278275](6278279 'getcid' e[6278265]))
                              val ret_tmp[6278281]:string[244] "temp"
                              (6278283 'virtual method call' message[85497] _virtual_method_tmp_[6278275] e[6278265] ret_tmp[6278281])
                              (6278288 'move' call_tmp[6278273] ret_tmp[6278281])
                              const-val call_tmp[6278291]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6278293 'move' call_tmp[6278291](6278296 call ==[28803] call_tmp[6278273] minMsg[86576]))
                              const-val call_tmp[6278299]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6278301 'move' call_tmp[6278299] call_tmp[6278291])
                              if call_tmp[6278299]
                              {
                                const-val call_tmp[6278306]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                val coerce_tmp[6278308]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (6278310 'move' coerce_tmp[6278308](6278312 'cast' RootClass[236] first[86586]))
                                (6278315 'move' call_tmp[6278306](6278318 call ==[53036] coerce_tmp[6278308] nil[32]))
                                const-val call_tmp[6278321]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                (6278323 'move' call_tmp[6278321] call_tmp[6278306])
                                if call_tmp[6278321]
                                {
                                  val coerce_tmp[6278328]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (6278330 'move' coerce_tmp[6278328] e[6278265])
                                  (6278334 call =[1802794] first[86586] coerce_tmp[6278328])
                                }
                                val coerce_tmp[6278338]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (6278340 'move' coerce_tmp[6278338] e[6278265])
                                (6278344 call =[1802794] last[86593] coerce_tmp[6278338])
                              }
                              (6278349 call chpl__autoDestroy[3262688] call_tmp[6278273])
                            }
                            label _continueLabel[6278351]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[6278081]:int(64)[10] "temp"
                    (6278083 'move' low[6278081](6278085 '.v' _iterator[6277980] F0_low[6835591]))
                    (6278088 '=' i[6278008] low[6278081])
                  }
                  {
                    const-val high[6278092]:int(64)[10] "temp"
                    (6278094 'move' high[6278092](6278096 '.v' _iterator[6277980] F1_high[6835595]))
                    (6278099 '<=' i[6278008] high[6278092])
                  }
                  {
                    val call_tmp[6278103]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6278105]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    (6278107 '+=' i[6278008] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[6278141]
              }
              (6278144 call _freeIterator[1519714] _iterator[6277980])
              label _endchpl_direct_counted_range_iter_helper[6278146]
            }
            (5954542 call _freeIterator[1519981] _iterator[5954394])
            label _endchpl_direct_counted_range_iter[5954544]
          }
          (5954547 call _freeIterator[1520248] _iterator[5954334])
          label _endthese[5954549]
        }
        label _breakLabel[86755]
        (5610664 call _freeIterator[1817748] _iterator[86750])
      }
      const-val call_tmp[733385]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (733388 'move' call_tmp[733385](86843 call !=[28829] minMsg[86576] maxMsg[86581]))
      const-val call_tmp[733390]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (733393 'move' call_tmp[733390] call_tmp[733385])
      if call_tmp[733390]
      {
        {
          ref _indexOfInterest[86811]:_ref(owned Error?)[1498167] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[86812]:_ic_these_TaskErrors[1809076] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[733397]:_ir_these_TaskErrors[1809082] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[5541615]:_ir_these_TaskErrors[1809082] "temp"
          (86785 call these[86326] this[86564] ret_tmp[5541615])
          (5541618 'move' call_tmp[733397] ret_tmp[5541615])
          (86821 'move' _iterator[86812](86819 call _getIterator[1809091] call_tmp[733397]))
          {
            val ret[5954686]:_ir_these_TaskErrors[1809082] "dead at end of block" "RVV" "temp"
            val call_tmp[5954688]:bool[19] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            const-val call_tmp[5954690]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val this[5955057]:TaskErrors[87096] "temp"
            (5955062 'move' this[5955057](5955059 '.v' _iterator[86812] F0_this[6827033]))
            (5954692 'move' call_tmp[5954690](5954694 '_wide_get_node' this[5955057]))
            const-val call_tmp[5954696]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[5954698]:locale[234] "temp"
            (5954701 call here[135591] ret_tmp[5954698])
            (5954703 'move' call_tmp[5954696] ret_tmp[5954698])
            const-val call_tmp[5954706]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (5954708 'move' call_tmp[5954706](5954711 call id[135646] call_tmp[5954696]))
            const-val call_tmp[5954713]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[5954715]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (5954717 'move' coerce_tmp[5954715](5954719 'cast' int(64)[10] call_tmp[5954690]))
            (5954722 'move' call_tmp[5954713](5954725 call ==[52746] coerce_tmp[5954715] call_tmp[5954706]))
            const-val call_tmp[5954728]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val this[5955064]:TaskErrors[87096] "temp"
            (5955069 'move' this[5955064](5955066 '.v' _iterator[86812] F0_this[6827033]))
            (5954730 'move' call_tmp[5954728](5954732 '_wide_get_node' this[5955064]))
            const-val call_tmp[5954734]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[5954736]:locale[234] "temp"
            (5954739 call here[135591] ret_tmp[5954736])
            (5954741 'move' call_tmp[5954734] ret_tmp[5954736])
            const-val call_tmp[5954744]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (5954746 'move' call_tmp[5954744](5954749 call id[135646] call_tmp[5954734]))
            (5954752 call assert[1809366] call_tmp[5954713] "iterating over a TaskErrors object allocated on locale " call_tmp[5954728] " while being on locale " call_tmp[5954744])
            (5954759 call chpl__autoDestroy[3885511] call_tmp[5954734])
            (5954762 call chpl__autoDestroy[3885511] call_tmp[5954696])
            val _indexOfInterest[5954764]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[5954766]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
            const-ref call_tmp[5954768]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
            const-val this[5955071]:TaskErrors[87096] "temp"
            (5955076 'move' this[5955071](5955073 '.v' _iterator[86812] F0_this[6827033]))
            (5954770 'move' call_tmp[5954768](5954773 call nErrors[1064482] this[5955071]))
            const-val call_tmp[5954775]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[5954777]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (5954779 'move' coerce_tmp[5954777](5954781 'deref' call_tmp[5954768]))
            const-val ret_tmp[5954783]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
            (5954786 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[5954777] ret_tmp[5954783])
            (5954790 'move' call_tmp[5954775] ret_tmp[5954783])
            (5954793 'move' _iterator[5954766](5954796 call _getIterator[1520079] call_tmp[5954775]))
            val taskInd_this[5954798]:TaskErrors[87096] "task private variable"
            const-val this[5955078]:TaskErrors[87096] "temp"
            (5955083 'move' this[5955078](5955080 '.v' _iterator[86812] F0_this[6827033]))
            (5954800 'move' taskInd_this[5954798](5954802 'task private svar capture' this[5955078]))
            {
              val ret[5954808]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
              val tmp[5954810]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[5954812]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[5954814]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[5954816]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[5954818]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[5954820]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[5954822]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val _indexOfInterest[5954824]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[5954826]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[5954828]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[5954830]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
              const-val low[5954832]:int(64)[10] "temp"
              (5954834 'move' low[5954832](5954836 '.v' _iterator[5954766] F0_low[6832410]))
              const-val count[5954839]:int(64)[10] "temp"
              (5954841 'move' count[5954839](5954843 '.v' _iterator[5954766] F1_count[6832414]))
              (5954847 call chpl_direct_counted_range_iter_helper[1469227] low[5954832] count[5954839] ret_tmp[5954830])
              (5954851 'move' call_tmp[5954828] ret_tmp[5954830])
              (5954854 'move' _iterator[5954826](5954857 call _getIterator[1519812] call_tmp[5954828]))
              {
                val ret[6278407]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                val tmp[6278409]:bool[19] "dead after last mention" "maybe param" "temp"
                val tmp[6278411]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6278413]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[6278415]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                val tmp[6278417]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6278419]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[6278421]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                val call_tmp[6278423]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[6278425]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6278427]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                const-val tmp[6278429]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val tmp[6278431]:bool[19] "dead after last mention" "maybe param" "temp"
                val call_tmp[6278433]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                const-val tmp[6278435]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6278437]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6278903]:int(64)[10] "temp"
                (6278908 'move' count[6278903](6278905 '.v' _iterator[5954826] F1_count[6834178]))
                (6278439 'move' call_tmp[6278437](6278442 call <[1469576] count[6278903] 0))
                (6278445 'move' tmp[6278435] call_tmp[6278437])
                (6278448 'move' tmp[6278429] call_tmp[6278437])
                const-val call_tmp[6278451]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (6278453 'move' call_tmp[6278451] call_tmp[6278437])
                if call_tmp[6278437]
                {
                  (6278459 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                }
                const-val start[6278462]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                const-val low[6278910]:int(64)[10] "temp"
                (6278915 'move' low[6278910](6278912 '.v' _iterator[5954826] F0_low[6834174]))
                (6278464 'move' start[6278462] low[6278910])
                const-val end[6278467]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                val tmp[6278469]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[6278471]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[6278473]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6278917]:int(64)[10] "temp"
                (6278922 'move' count[6278917](6278919 '.v' _iterator[5954826] F1_count[6834178]))
                (6278475 'move' call_tmp[6278473](6278478 call ==[52746] count[6278917] 0))
                (6278481 'move' tmp[6278471] call_tmp[6278473])
                if call_tmp[6278473]
                {
                  const-val tmp[6278486]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[6278488]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val low[6278924]:int(64)[10] "temp"
                  (6278929 'move' low[6278924](6278926 '.v' _iterator[5954826] F0_low[6834174]))
                  (6278490 'move' call_tmp[6278488](6278492 'cast' uint(64)[86] low[6278924]))
                  const-val call_tmp[6278495]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6278497]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (6278499 'move' coerce_tmp[6278497](6278501 'cast' uint(64)[86] 1))
                  (6278504 'move' call_tmp[6278495](6278507 call -[1487313] call_tmp[6278488]))
                  val call_tmp[6278509]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6278511 'move' tmp[6278486](6278514 call :[1482043] call_tmp[6278495]))
                  (6278516 'move' tmp[6278469] tmp[6278486])
                }
                {
                  const-val tmp[6278520]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  val call_tmp[6278522]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[6278524]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[6278931]:int(64)[10] "temp"
                  (6278936 'move' count[6278931](6278933 '.v' _iterator[5954826] F1_count[6834178]))
                  (6278526 'move' call_tmp[6278524] count[6278931])
                  const-val call_tmp[6278529]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[6278938]:int(64)[10] "temp"
                  (6278943 'move' count[6278938](6278940 '.v' _iterator[5954826] F1_count[6834178]))
                  (6278531 'move' call_tmp[6278529](6278534 call -[1487343] count[6278938]))
                  const-val call_tmp[6278536]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val low[6278945]:int(64)[10] "temp"
                  (6278950 'move' low[6278945](6278947 '.v' _iterator[5954826] F0_low[6834174]))
                  (6278538 'move' call_tmp[6278536](6278541 call +[56587] low[6278945] call_tmp[6278529]))
                  val call_tmp[6278544]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6278546 'move' tmp[6278520] call_tmp[6278536])
                  (6278549 'move' tmp[6278469] call_tmp[6278536])
                }
                (6278553 'move' end[6278467] tmp[6278469])
                val _indexOfInterest[6278556]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6278558]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[6278560]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6278562]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                (6278565 call chpl_direct_param_stride_range_iter[1517410] start[6278462] tmp[6278469] ret_tmp[6278562])
                (6278569 'move' call_tmp[6278560] ret_tmp[6278562])
                (6278572 'move' _iterator[6278558](6278575 call _getIterator[1519541] call_tmp[6278560]))
                {
                  val ret[6278578]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                  val call_tmp[6278580]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6278582]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6278585 call chpl_range_check_stride[1517730])
                  val i[6278586]:int(64)[10] "dead at end of block" "insert auto destroy"
                  val call_tmp[6278588]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (6278590 'move' i[6278586] 0)
                  val call_tmp[6278593]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6278595]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6278597]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  val call_tmp[6278599]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[6278601]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[6278603]:int(64)[10] "temp"
                  (6278605 'move' low[6278603](6278607 '.v' _iterator[6278558] F0_low[6835591]))
                  (6278610 'move' default_arg_first[6278601](6278613 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6278603]))
                  const-val default_arg_last[6278615]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[6278617]:int(64)[10] "temp"
                  (6278619 'move' high[6278617](6278621 '.v' _iterator[6278558] F1_high[6835595]))
                  (6278624 'move' default_arg_last[6278615](6278627 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6278617]))
                  val default_arg_shouldHalt[6278629]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                  const-val _return_tmp_[6278631]:bool[19] "dead after last mention" "temp"
                  const-val low[6278633]:int(64)[10] "temp"
                  (6278635 'move' low[6278633](6278637 '.v' _iterator[6278558] F0_low[6835591]))
                  const-val high[6278640]:int(64)[10] "temp"
                  (6278642 'move' high[6278640](6278644 '.v' _iterator[6278558] F1_high[6835595]))
                  (6278647 'move' _return_tmp_[6278631](6278650 call chpl_checkIfRangeIterWillOverflow[1518856] low[6278633] high[6278640] 1 default_arg_first[6278601] default_arg_last[6278615] 1))
                  CForLoop[6278657] hazard
                  {
                    const-val yret[6278688]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6278690 'move' yret[6278688] i[6278586])
                    const-val _yieldedIndex[6278693]:int(64)[10] "temp"
                    (6278695 'move' _yieldedIndex[6278693] i[6278586])
                    {
                      const-val i[6278699]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6278701 'move' i[6278699] _yieldedIndex[6278693])
                      const-val yret[6278704]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6278706 'move' yret[6278704] _yieldedIndex[6278693])
                      const-val _yieldedIndex[6278728]:int(64)[10] "temp"
                      (6278901 'move' _yieldedIndex[6278728] _yieldedIndex[6278693])
                      {
                        const-val i[6278730]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6278732 'move' i[6278730] _yieldedIndex[6278728])
                        const-val yret[6278735]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6278737 'move' yret[6278735] _yieldedIndex[6278728])
                        const-val _yieldedIndex[6278740]:int(64)[10] "temp"
                        (6278742 'move' _yieldedIndex[6278740] _yieldedIndex[6278728])
                        {
                          const-val i[6278746]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6278748 'move' i[6278746] _yieldedIndex[6278740])
                          const-ref call_tmp[6278751]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                          const-ref _this_tmp_[6278753]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                          (6278755 'move' _this_tmp_[6278753](6278758 call errorsArray[1064508] taskInd_this[5954798]))
                          val coerce_tmp[6278760]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6278762 'move' coerce_tmp[6278760](6278764 'deref' _this_tmp_[6278753]))
                          (6278766 'move' call_tmp[6278751](6278769 call this[1806103] coerce_tmp[6278760] _yieldedIndex[6278740]))
                          const-val call_tmp[6278772]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          val coerce_tmp[6278774]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6278776 'move' coerce_tmp[6278774](6278779 call borrow[1817588] call_tmp[6278751]))
                          val coerce_tmp[6278781]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6278783 'move' coerce_tmp[6278781](6278785 'cast' RootClass[236] coerce_tmp[6278774]))
                          (6278788 'move' call_tmp[6278772](6278791 call !=[53510] coerce_tmp[6278781] nil[32]))
                          const-val call_tmp[6278794]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (6278796 'move' call_tmp[6278794] call_tmp[6278772])
                          if call_tmp[6278772]
                          {
                            ref yret[6278801]:_ref(owned Error?)[1498167] "dead after last mention" "YVV" "temp"
                            const-ref call_tmp[6278803]:_ref(owned Error?)[1498167] "dead after last mention" "maybe param" "temp"
                            const-ref _this_tmp_[6278805]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "temp"
                            (6278807 'move' _this_tmp_[6278805](6278810 call errorsArray[1064508] taskInd_this[5954798]))
                            val coerce_tmp[6278812]:c_ptr(owned Error?)[1805608] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6278814 'move' coerce_tmp[6278812](6278816 'deref' _this_tmp_[6278805]))
                            (6278818 'move' call_tmp[6278803](6278821 call this[1806103] coerce_tmp[6278812] i[6278746]))
                            const-ref _yieldedIndex[6278824]:_ref(owned Error?)[1498167] "temp"
                            (6278826 'move' _yieldedIndex[6278824] call_tmp[6278803])
                            {
                              const-ref err[6278830]:_ref(owned Error?)[1498167] "index var" "insert auto destroy"
                              (6278832 'move' err[6278830] _yieldedIndex[6278824])
                              {
                                val call_tmp[6278836]:Error[85511] "dead after last mention" "maybe param" "temp"
                                (6278838 'move' call_tmp[6278836](6278841 call postfix![4347073] err[6278830]))
                                val e[6278843]:Error[85511] "dead at end of block" "insert auto destroy"
                                (6278845 'move' e[6278843] call_tmp[6278836])
                                const-val call_tmp[6278851]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                val _virtual_method_tmp_[6278853]:int(32)[66] "temp"
                                (6278855 'move' _virtual_method_tmp_[6278853](6278857 'getcid' e[6278843]))
                                val ret_tmp[6278859]:string[244] "temp"
                                (6278861 'virtual method call' message[85497] _virtual_method_tmp_[6278853] e[6278843] ret_tmp[6278859])
                                (6278866 'move' call_tmp[6278851] ret_tmp[6278859])
                                const-val call_tmp[6278869]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                (6278871 'move' call_tmp[6278869](6278874 call ==[28803] call_tmp[6278851] maxMsg[86581]))
                                const-val call_tmp[6278877]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                (6278879 'move' call_tmp[6278877] call_tmp[6278869])
                                if call_tmp[6278877]
                                {
                                  val coerce_tmp[6278884]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (6278886 'move' coerce_tmp[6278884] e[6278843])
                                  (6278890 call =[1802794] last[86593] coerce_tmp[6278884])
                                }
                                (6278895 call chpl__autoDestroy[3262688] call_tmp[6278851])
                              }
                              label _continueLabel[6278897]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[6278659]:int(64)[10] "temp"
                      (6278661 'move' low[6278659](6278663 '.v' _iterator[6278558] F0_low[6835591]))
                      (6278666 '=' i[6278586] low[6278659])
                    }
                    {
                      const-val high[6278670]:int(64)[10] "temp"
                      (6278672 'move' high[6278670](6278674 '.v' _iterator[6278558] F1_high[6835595]))
                      (6278677 '<=' i[6278586] high[6278670])
                    }
                    {
                      val call_tmp[6278681]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      val call_tmp[6278683]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      (6278685 '+=' i[6278586] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[6278719]
                }
                (6278722 call _freeIterator[1519714] _iterator[6278558])
                label _endchpl_direct_counted_range_iter_helper[6278724]
              }
              (5954974 call _freeIterator[1519981] _iterator[5954826])
              label _endchpl_direct_counted_range_iter[5954976]
            }
            (5954979 call _freeIterator[1520248] _iterator[5954766])
            label _endthese[5954981]
          }
          label _breakLabel[86817]
          (5610673 call _freeIterator[1817748] _iterator[86812])
        }
      }
    }
    const-val call_tmp[733424]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546287]:string[244] "temp"
    (86855 call :[1496816] n[86571] ret_tmp[5546287])
    (5546290 'move' call_tmp[733424] ret_tmp[5546287])
    const-val call_tmp[733429]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539116]:string[244] "temp"
    (86853 call +[28065] call_tmp[733424] " errors: " ret_tmp[5539116])
    (5539119 'move' call_tmp[733429] ret_tmp[5539116])
    val ret[86852]:string[244] "dead at end of block" "insert auto destroy"
    (642125 'move' ret[86852] call_tmp[733429])
    (5610675 call chpl__autoDestroy[3262688] call_tmp[733424])
    const-val tmp[481953]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val tmp[481974]:bool[19] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[4347693]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4347699 'move' coerce_tmp[4347693](4347695 'cast' RootClass[236] first[86586]))
    (481985 'move' tmp[481974](86907 call !=[53510] coerce_tmp[4347693] nil[32]))
    val call_tmp[733434]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[661080]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[661081]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[733439]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (733442 'move' call_tmp[733439] tmp[481974])
    (661086 'move' tmp[661081] call_tmp[733439])
    if tmp[661081]
    {
      const-val tmp[661088]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[733444]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4347705]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347711 'move' coerce_tmp[4347705](4347707 'cast' RootClass[236] last[86593]))
      (733447 'move' call_tmp[733444](86911 call !=[53510] coerce_tmp[4347705] nil[32]))
      (661090 'move' tmp[661088] call_tmp[733444])
      (661095 'move' tmp[661080] tmp[661088])
    }
    {
      (661100 'move' tmp[661080] 0)
    }
    (481964 'move' tmp[481953] tmp[661080])
    val call_tmp[733449]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[661107]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[661108]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[733454]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (733457 'move' call_tmp[733454] tmp[481953])
    (661113 'move' tmp[661108] call_tmp[733454])
    if tmp[661108]
    {
      const-val tmp[661115]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[733459]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4347717]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347723 'move' coerce_tmp[4347717](4347719 'cast' RootClass[236] first[86586]))
      val coerce_tmp[4347725]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347731 'move' coerce_tmp[4347725](4347727 'cast' RootClass[236] last[86593]))
      (733462 'move' call_tmp[733459](86915 call !=[53489] coerce_tmp[4347717] coerce_tmp[4347725]))
      (661117 'move' tmp[661115] call_tmp[733459])
      (661122 'move' tmp[661107] tmp[661115])
    }
    {
      (661127 'move' tmp[661107] 0)
    }
    const-val call_tmp[733464]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (733467 'move' call_tmp[733464] tmp[661107])
    if call_tmp[733464]
    {
      val call_tmp[733469]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (733472 'move' call_tmp[733469](86873 call postfix![1499052] first[86586]))
      const-val call_tmp[733474]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5541643]:string[244] "temp"
      (86872 call chpl_describe_error[87147] call_tmp[733469] ret_tmp[5541643])
      (5541646 'move' call_tmp[733474] ret_tmp[5541643])
      const-val call_tmp[733479]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539128]:string[244] "temp"
      (86869 call +[28065] call_tmp[733474] " ... " ret_tmp[5539128])
      (5539131 'move' call_tmp[733479] ret_tmp[5539128])
      val call_tmp[733484]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (733487 'move' call_tmp[733484](86881 call postfix![1499052] last[86593]))
      const-val call_tmp[733489]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5541649]:string[244] "temp"
      (86880 call chpl_describe_error[87147] call_tmp[733484] ret_tmp[5541649])
      (5541652 'move' call_tmp[733489] ret_tmp[5541649])
      const-val call_tmp[733494]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539122]:string[244] "temp"
      (86867 call +[28065] call_tmp[733479] call_tmp[733489] ret_tmp[5539122])
      (5539125 'move' call_tmp[733494] ret_tmp[5539122])
      (86864 call +=[28600] ret[86852] call_tmp[733494])
      (5610679 call chpl__autoDestroy[3262688] call_tmp[733494])
      (5610682 call chpl__autoDestroy[3262688] call_tmp[733489])
      (5610685 call chpl__autoDestroy[3262688] call_tmp[733479])
      (5610688 call chpl__autoDestroy[3262688] call_tmp[733474])
    }
    {
      const-val call_tmp[733499]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[4347759]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (4347765 'move' coerce_tmp[4347759](4347761 'cast' RootClass[236] first[86586]))
      (733502 'move' call_tmp[733499](86894 call !=[53510] coerce_tmp[4347759] nil[32]))
      const-val call_tmp[733504]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (733507 'move' call_tmp[733504] call_tmp[733499])
      if call_tmp[733504]
      {
        val call_tmp[733509]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (733512 'move' call_tmp[733509] first[86586])
        const-val call_tmp[733514]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5541655]:string[244] "temp"
        (86889 call chpl_describe_error[87147] call_tmp[733509] ret_tmp[5541655])
        (5541658 'move' call_tmp[733514] ret_tmp[5541655])
        (86885 call +=[28600] ret[86852] call_tmp[733514])
        (5610692 call chpl__autoDestroy[3262688] call_tmp[733514])
      }
    }
    (4347778 '=' ret[587832] ret[86852])
    (5610695 call chpl__autoDestroy[3262688] maxMsg[86581])
    (5610698 call chpl__autoDestroy[3262688] minMsg[86576])
    gotoReturn _end_message[587830] _end_message[587830]
    label _end_message[587830]
    (5609224 '=' _retArg[5609222] ret[587832])
    (5609226 return _void[46])
  }
  function TaskErrors[87096].nErrors[1064482](const in arg this[1064486]:TaskErrors[87096]) ref : _ref(int(64))[1465689] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1064496]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1064503]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1064506 'move' call_tmp[1064503](1064490 '.' this[1064486] nErrors[85768]))
    (1064501 'move' ret[1064496] call_tmp[1064503])
    (1064498 return ret[1064496])
  }
  function TaskErrors[87096].errorsArray[1064508](const in arg this[1064512]:TaskErrors[87096]) ref : _ref(c_ptr(owned Error?))[1805617] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1064522]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "RVV" "temp"
    ref call_tmp[1064529]:_ref(c_ptr(owned Error?))[1805617] "dead after last mention" "maybe param" "temp"
    (1064532 'move' call_tmp[1064529](1064516 '.' this[1064512] errorsArray[85773]))
    (1064527 'move' ret[1064522] call_tmp[1064529])
    (1064524 return ret[1064522])
  }
  function _new[1831355](ref arg group[1831364]:_ref(chpl_TaskErrors)[1478591]) : TaskErrors[87096] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5478402]:TaskErrors[87096] "temp"
    val ret[1831391]:TaskErrors[87096] "dead after last mention" "RVV" "temp"
    val initTemp[1831357]:TaskErrors[87096] "dead after last mention" "temp"
    const-val call_tmp[1831398]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1831401 'move' call_tmp[1831398](1831412 'sizeof_bundle' TaskErrors[87096]))
    val cast_tmp[1831415]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (1831417 'move' cast_tmp[1831415](1831372 call chpl_here_alloc[308303] call_tmp[1831398] 43))
    (1831375 'move' initTemp[1831357](1831419 'cast' TaskErrors[87096] cast_tmp[1831415]))
    (1831358 call init[85782] initTemp[1831357] group[1831364])
    val tmp[1831377]:TaskErrors[87096] "dead after last mention" "temp"
    (1831381 'move' tmp[1831377] initTemp[1831357])
    (1831396 'move' ret[1831391] tmp[1831377])
    (1831393 return ret[1831391])
  }
  function _new[4346024](const in arg err[4346033]:Error[85511]) : TaskErrors[87096] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5480832]:TaskErrors[87096] "temp"
    val ret[4346058]:TaskErrors[87096] "dead after last mention" "RVV" "temp"
    val initTemp[4346026]:TaskErrors[87096] "dead after last mention" "temp"
    const-val call_tmp[4346065]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (4346068 'move' call_tmp[4346065](4346077 'sizeof_bundle' TaskErrors[87096]))
    val cast_tmp[4346080]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (4346082 'move' cast_tmp[4346080](4346039 call chpl_here_alloc[308303] call_tmp[4346065] 43))
    (4346042 'move' initTemp[4346026](4346084 'cast' TaskErrors[87096] cast_tmp[4346080]))
    (4346027 call init[86171] initTemp[4346026] err[4346033])
    val tmp[4346044]:TaskErrors[87096] "dead after last mention" "temp"
    (4346048 'move' tmp[4346044] initTemp[4346026])
    (4346063 'move' ret[4346058] tmp[4346044])
    (4346060 return ret[4346058])
  }
  type TaskErrors[87096] val super[397434]:Error[85511] "super class" val nErrors[85768]:int(64)[10] val errorsArray[85773]:c_ptr(owned Error?)[1805608]
  function chpl_error_type_name[87098](const in arg err[87102]:Error[85511], ref arg _retArg[5541637]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "resolved"
  {
    const-val ret[587876]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[733565]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (733568 'move' call_tmp[733565](87109 'getcid' err[87102]))
    const-val cid[87108]:int(32)[66] "dead at end of block" "insert auto destroy"
    (642129 'move' cid[87108] call_tmp[733565])
    const-val call_tmp[733570]:chpl_c_string[16] "dead after last mention" "maybe param" "temp"
    (733573 'move' call_tmp[733570](87115 'class name by id' cid[87108]))
    const-val nameC[87114]:chpl_c_string[16] "dead at end of block" "insert auto destroy"
    (642131 'move' nameC[87114] call_tmp[733570])
    const-val nameS[87120]:string[244] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[642133]:string[244] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[5497696]:Error[85511] "error variable" "temp"
      (5497712 'move' error[5497696] nil[32])
      val call_tmp[733577]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[733582]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (733585 'move' call_tmp[733582](87133 'cast' c_ptrConst(int(8))[1466333] nameC[87114]))
      const-val call_tmp[733587]:string[244] "dead after last mention" "maybe param" "temp"
      const-val default_arg_length[3479647]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (3479654 'move' default_arg_length[3479647](3479649 call createCopyingBuffer_default_length[1513064] call_tmp[733582] error[5497696]))
      val errorExists[7296992]:bool[19] "temp"
      (7296997 'move' errorExists[7296992](7296994 '!=' error[5497696] nil[32]))
      if errorExists[7296992]
      {
        gotoErrorHandling handler[5497697] handler[5497697]
      }
      val default_arg_policy[3479658]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      const-val ret_tmp[5547451]:string[244] "temp"
      (87132 call createCopyingBuffer[1511294] call_tmp[733582] default_arg_length[3479647] strict[37976] error[5497696] ret_tmp[5547451])
      (5547454 'move' call_tmp[733587] ret_tmp[5547451])
      val errorExists[7297000]:bool[19] "temp"
      (7297005 'move' errorExists[7297000](7297002 '!=' error[5497696] nil[32]))
      if errorExists[7297000]
      {
        gotoErrorHandling handler[5497697] handler[5497697]
      }
      (642141 'move' nameS[87120] call_tmp[733587])
      label handler[5497697]
      const-val shouldHandleError[5497721]:bool[19] "temp"
      val errorExists[7297008]:bool[19] "temp"
      (7297013 'move' errorExists[7297008](7297010 '!=' error[5497696] nil[32]))
      (5497725 'move' shouldHandleError[5497721] errorExists[7297008])
      if shouldHandleError[5497721]
      {
        (5497718 call chpl_uncaught_error[87456] error[5497696])
      }
    }
    (3479670 '=' ret[587876] nameS[87120])
    gotoReturn _end_chpl_error_type_name[587874] _end_chpl_error_type_name[587874]
    label _end_chpl_error_type_name[587874]
    (5541639 '=' _retArg[5541637] ret[587876])
    (5541641 return _void[46])
  }
  function chpl_describe_error[87147](const in arg err[87151]:Error[85511], ref arg _retArg[5541673]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "resolved"
  {
    const-val ret[587888]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[733592]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5541631]:string[244] "temp"
    (87159 call chpl_error_type_name[87098] err[87151] ret_tmp[5541631])
    (5541634 'move' call_tmp[733592] ret_tmp[5541631])
    const-val nameS[87157]:string[244] "dead at end of block" "insert auto destroy"
    (642144 'move' nameS[87157] call_tmp[733592])
    const-val call_tmp[733597]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539140]:string[244] "temp"
    (87167 call +[28065] nameS[87157] ": " ret_tmp[5539140])
    (5539143 'move' call_tmp[733597] ret_tmp[5539140])
    const-val call_tmp[733604]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[5469177]:int(32)[66] "temp"
    (5469181 'move' _virtual_method_tmp_[5469177](5469179 'getcid' err[87151]))
    val ret_tmp[5541525]:string[244] "temp"
    (87177 'virtual method call' message[85497] _virtual_method_tmp_[5469177] err[87151] ret_tmp[5541525])
    (5541528 'move' call_tmp[733604] ret_tmp[5541525])
    const-val call_tmp[733609]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539134]:string[244] "temp"
    (87165 call +[28065] call_tmp[733597] call_tmp[733604] ret_tmp[5539134])
    (5539137 'move' call_tmp[733609] ret_tmp[5539134])
    const-val ret[87164]:string[244] "dead at end of block" "insert auto destroy"
    (642146 'move' ret[87164] call_tmp[733609])
    (5610704 call chpl__autoDestroy[3262688] call_tmp[733604])
    (5610701 call chpl__autoDestroy[3262688] call_tmp[733597])
    (3479688 '=' ret[587888] ret[87164])
    (5610707 call chpl__autoDestroy[3262688] nameS[87157])
    gotoReturn _end_chpl_describe_error[587886] _end_chpl_describe_error[587886]
    label _end_chpl_describe_error[587886]
    (5541675 '=' _retArg[5541673] ret[587888])
    (5541677 return _void[46])
  }
  function chpl_do_fix_thrown_error[87185](const in arg err[87190]:Error[85511]) : Error[85511] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free"
  {
    val ret[587900]:Error[85511] "dead after last mention" "RVV" "temp"
    val fixErr[87197]:Error[85511] "dead at end of block" "insert auto destroy"
    (642148 'move' fixErr[87197] err[87190])
    const-val call_tmp[733614]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1500635]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1500640 'move' coerce_tmp[1500635](1500637 'cast' RootClass[236] fixErr[87197]))
    (733617 'move' call_tmp[733614](87213 call ==[53036] coerce_tmp[1500635] nil[32]))
    const-val call_tmp[733619]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (733622 'move' call_tmp[733619] call_tmp[733614])
    if call_tmp[733619]
    {
      val call_tmp[733624]:NilThrownError[85529] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
      { scopeless
        val new_temp[1500817]:NilThrownError[85529] "dead after last mention" "temp"
        (1500819 'move' new_temp[1500817](1500682 call _new[1500768]))
      }
      (733627 'move' call_tmp[733624] new_temp[1500817])
      val coerce_tmp[1500957]:NilThrownError[85529] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500963 'move' coerce_tmp[1500957] call_tmp[733624])
      (87204 call =[1500877] fixErr[87197] coerce_tmp[1500957])
    }
    const-val call_tmp[733629]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (733632 'move' call_tmp[733629](87224 '_get_user_line'))
    const-val line[87223]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (642150 'move' line[87223] call_tmp[733629])
    const-val call_tmp[733634]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (733637 'move' call_tmp[733634](87229 '_get_user_file'))
    const-val fileId[87228]:int(32)[66] "dead at end of block" "const" "insert auto destroy"
    (642152 'move' fileId[87228] call_tmp[733634])
    val call_tmp[733639]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    (733642 'move' call_tmp[733639](87268 call postfix![1499043] fixErr[87197]))
    const-ref call_tmp[733646]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1500974]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1500979 'move' coerce_tmp[1500974] call_tmp[733639])
    (733649 'move' call_tmp[733646](87271 call _hasThrowInfo[1061318] coerce_tmp[1500974]))
    const-val call_tmp[733651]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1500982]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1500986 'move' coerce_tmp[1500982](1500984 'deref' call_tmp[733646]))
    (733654 'move' call_tmp[733651](87266 call ![63126] coerce_tmp[1500982]))
    const-val call_tmp[733656]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (733659 'move' call_tmp[733656] call_tmp[733651])
    if call_tmp[733656]
    {
      val call_tmp[733661]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (733664 'move' call_tmp[733661](87235 call postfix![1499043] fixErr[87197]))
      ref call_tmp[733668]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1500990]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500995 'move' coerce_tmp[1500990] call_tmp[733661])
      (733671 'move' call_tmp[733668](87240 call _hasThrowInfo[1061318] coerce_tmp[1500990]))
      (87233 call =[52153] call_tmp[733668] 1)
      val call_tmp[733673]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (733676 'move' call_tmp[733673](87246 call postfix![1499043] fixErr[87197]))
      ref call_tmp[733680]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1501000]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1501005 'move' coerce_tmp[1501000] call_tmp[733673])
      (733683 'move' call_tmp[733680](87251 call thrownLine[1061240] coerce_tmp[1501000]))
      (87244 call =[52229] call_tmp[733680] line[87223])
      val call_tmp[733685]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (733688 'move' call_tmp[733685](87257 call postfix![1499043] fixErr[87197]))
      ref call_tmp[733692]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1501010]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1501015 'move' coerce_tmp[1501010] call_tmp[733685])
      (733695 'move' call_tmp[733692](87262 call thrownFileId[1061266] coerce_tmp[1501010]))
      (87255 call =[52209] call_tmp[733692] fileId[87228])
    }
    val call_tmp[733697]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    (733700 'move' call_tmp[733697](87280 call _to_nonnil[1499273] fixErr[87197]))
    (1501021 '=' ret[587900] call_tmp[733697])
    gotoReturn _end_chpl_do_fix_thrown_error[587898] _end_chpl_do_fix_thrown_error[587898]
    label _end_chpl_do_fix_thrown_error[587898]
    (587902 return ret[587900])
  }
  function chpl_fix_thrown_error[87309](const  ref arg err[87314]:owned Error[1498203]) : Error[85511] "always propagate line file info" "ignore in global analysis" "insert line file info" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[1500602]:owned Error[1498203] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (1500605 'move' _formal_tmp_err[1500602] err[87314])
    val ret[587922]:Error[85511] "dead after last mention" "RVV" "temp"
    val call_tmp[733716]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    (733719 'move' call_tmp[733716](87327 call release[1500225] _formal_tmp_err[1500602]))
    val call_tmp[733721]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1500622]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1500628 'move' coerce_tmp[1500622] call_tmp[733716])
    (733724 'move' call_tmp[733721](87322 call chpl_do_fix_thrown_error[87185] coerce_tmp[1500622]))
    (1501024 '=' ret[587922] call_tmp[733721])
    (5610710 call chpl__autoDestroy[3930254] _formal_tmp_err[1500602])
    (587924 return ret[587922])
  }
  function chpl_delete_error[87431](const in arg err[87436]:Error[85511]) : void[4] "resolved" "no return value for void"
  {
    const-val call_tmp[733776]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4345688]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345693 'move' coerce_tmp[4345688](4345690 'cast' RootClass[236] err[87436]))
    (733779 'move' call_tmp[733776](87445 call !=[53510] coerce_tmp[4345688] nil[32]))
    const-val call_tmp[733781]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (733784 'move' call_tmp[733781] call_tmp[733776])
    if call_tmp[733781]
    {
      (87442 call chpl__delete[1806275] err[87436])
    }
    (587943 return _void[46])
  }
  function chpl_uncaught_error[87456](const in arg err[87460]:Error[85511]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[733786]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (733789 'move' call_tmp[733786](87477 '_get_user_file'))
    const-val call_tmp[733791]:chpl_c_string[16] "dead after last mention" "maybe param" "temp"
    (733794 'move' call_tmp[733791](87476 'chpl_lookupFilename' call_tmp[733786]))
    const-val myFileC[87475]:chpl_c_string[16] "dead at end of block" "const" "insert auto destroy"
    (642158 'move' myFileC[87475] call_tmp[733791])
    const-val myFileS[87481]:string[244] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[642160]:string[244] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[5497729]:Error[85511] "error variable" "temp"
      (5497745 'move' error[5497729] nil[32])
      val call_tmp[733798]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[733803]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (733806 'move' call_tmp[733803](87494 'cast' c_ptrConst(int(8))[1466333] myFileC[87475]))
      const-val call_tmp[733808]:string[244] "dead after last mention" "maybe param" "temp"
      const-val default_arg_length[4345716]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (4345723 'move' default_arg_length[4345716](4345718 call createCopyingBuffer_default_length[1513064] call_tmp[733803] error[5497729]))
      val errorExists[7297016]:bool[19] "temp"
      (7297021 'move' errorExists[7297016](7297018 '!=' error[5497729] nil[32]))
      if errorExists[7297016]
      {
        gotoErrorHandling handler[5497730] handler[5497730]
      }
      val default_arg_policy[4345727]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      const-val ret_tmp[5547457]:string[244] "temp"
      (87493 call createCopyingBuffer[1511294] call_tmp[733803] default_arg_length[4345716] strict[37976] error[5497729] ret_tmp[5547457])
      (5547460 'move' call_tmp[733808] ret_tmp[5547457])
      val errorExists[7297024]:bool[19] "temp"
      (7297029 'move' errorExists[7297024](7297026 '!=' error[5497729] nil[32]))
      if errorExists[7297024]
      {
        gotoErrorHandling handler[5497730] handler[5497730]
      }
      (642168 'move' myFileS[87481] call_tmp[733808])
      label handler[5497730]
      const-val shouldHandleError[5497754]:bool[19] "temp"
      val errorExists[7297032]:bool[19] "temp"
      (7297037 'move' errorExists[7297032](7297034 '!=' error[5497729] nil[32]))
      (5497758 'move' shouldHandleError[5497754] errorExists[7297032])
      if shouldHandleError[5497754]
      {
        (5497751 call chpl_uncaught_error[87456] error[5497729])
      }
    }
    const-val call_tmp[733813]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (733816 'move' call_tmp[733813](87505 '_get_user_line'))
    const-val myLine[87504]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (642171 'move' myLine[87504] call_tmp[733813])
    ref call_tmp[733820]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[4345738]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345743 'move' coerce_tmp[4345738] err[87460])
    (733823 'move' call_tmp[733820](87512 call thrownFileId[1061266] coerce_tmp[4345738]))
    const-val call_tmp[733825]:chpl_c_string[16] "dead after last mention" "maybe param" "temp"
    (733828 'move' call_tmp[733825](87510 'chpl_lookupFilename' call_tmp[733820]))
    const-val thrownFileC[87509]:chpl_c_string[16] "dead at end of block" "const" "insert auto destroy"
    (642173 'move' thrownFileC[87509] call_tmp[733825])
    const-val thrownFileS[87518]:string[244] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[642175]:string[244] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[5497762]:Error[85511] "error variable" "temp"
      (5497778 'move' error[5497762] nil[32])
      val call_tmp[733832]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[733837]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (733840 'move' call_tmp[733837](87531 'cast' c_ptrConst(int(8))[1466333] thrownFileC[87509]))
      const-val call_tmp[733842]:string[244] "dead after last mention" "maybe param" "temp"
      const-val default_arg_length[4345765]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (4345772 'move' default_arg_length[4345765](4345767 call createCopyingBuffer_default_length[1513064] call_tmp[733837] error[5497762]))
      val errorExists[7297040]:bool[19] "temp"
      (7297045 'move' errorExists[7297040](7297042 '!=' error[5497762] nil[32]))
      if errorExists[7297040]
      {
        gotoErrorHandling handler[5497763] handler[5497763]
      }
      val default_arg_policy[4345776]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      const-val ret_tmp[5547463]:string[244] "temp"
      (87530 call createCopyingBuffer[1511294] call_tmp[733837] default_arg_length[4345765] strict[37976] error[5497762] ret_tmp[5547463])
      (5547466 'move' call_tmp[733842] ret_tmp[5547463])
      val errorExists[7297048]:bool[19] "temp"
      (7297053 'move' errorExists[7297048](7297050 '!=' error[5497762] nil[32]))
      if errorExists[7297048]
      {
        gotoErrorHandling handler[5497763] handler[5497763]
      }
      (642183 'move' thrownFileS[87518] call_tmp[733842])
      label handler[5497763]
      const-val shouldHandleError[5497787]:bool[19] "temp"
      val errorExists[7297056]:bool[19] "temp"
      (7297061 'move' errorExists[7297056](7297058 '!=' error[5497762] nil[32]))
      (5497791 'move' shouldHandleError[5497787] errorExists[7297056])
      if shouldHandleError[5497787]
      {
        (5497784 call chpl_uncaught_error[87456] error[5497762])
      }
    }
    const-ref call_tmp[733849]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[4345787]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345792 'move' coerce_tmp[4345787] err[87460])
    (733852 'move' call_tmp[733849](87543 call thrownLine[1061240] coerce_tmp[4345787]))
    const-val thrownLine[87541]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[4345798]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (4345802 'move' coerce_tmp[4345798](4345800 'deref' call_tmp[733849]))
    (5610713 '=' thrownLine[87541] coerce_tmp[4345798])
    (642186 'noop')
    const-val call_tmp[733854]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[4345805]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345810 'move' coerce_tmp[4345805] err[87460])
    const-val ret_tmp[5541661]:string[244] "temp"
    (87576 call chpl_describe_error[87147] coerce_tmp[4345805] ret_tmp[5541661])
    (5541664 'move' call_tmp[733854] ret_tmp[5541661])
    const-val call_tmp[733859]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539206]:string[244] "temp"
    (87570 call +[28065] "uncaught " call_tmp[733854] ret_tmp[5539206])
    (5539209 'move' call_tmp[733859] ret_tmp[5539206])
    const-val call_tmp[733864]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539200]:string[244] "temp"
    (87568 call +[28065] call_tmp[733859] "\n  " ret_tmp[5539200])
    (5539203 'move' call_tmp[733864] ret_tmp[5539200])
    const-val call_tmp[733869]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539194]:string[244] "temp"
    (87566 call +[28065] call_tmp[733864] thrownFileS[87518] ret_tmp[5539194])
    (5539197 'move' call_tmp[733869] ret_tmp[5539194])
    const-val call_tmp[733874]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539188]:string[244] "temp"
    (87564 call +[28065] call_tmp[733869] ":" ret_tmp[5539188])
    (5539191 'move' call_tmp[733874] ret_tmp[5539188])
    const-val call_tmp[733879]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546293]:string[244] "temp"
    (87585 call :[1496816] thrownLine[87541] ret_tmp[5546293])
    (5546296 'move' call_tmp[733879] ret_tmp[5546293])
    const-val call_tmp[733884]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539182]:string[244] "temp"
    (87562 call +[28065] call_tmp[733874] call_tmp[733879] ret_tmp[5539182])
    (5539185 'move' call_tmp[733884] ret_tmp[5539182])
    const-val call_tmp[733889]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539176]:string[244] "temp"
    (87560 call +[28065] call_tmp[733884] ": thrown here" ret_tmp[5539176])
    (5539179 'move' call_tmp[733889] ret_tmp[5539176])
    const-val call_tmp[733894]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539170]:string[244] "temp"
    (87558 call +[28065] call_tmp[733889] "\n  " ret_tmp[5539170])
    (5539173 'move' call_tmp[733894] ret_tmp[5539170])
    const-val call_tmp[733899]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539164]:string[244] "temp"
    (87556 call +[28065] call_tmp[733894] myFileS[87481] ret_tmp[5539164])
    (5539167 'move' call_tmp[733899] ret_tmp[5539164])
    const-val call_tmp[733904]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539158]:string[244] "temp"
    (87554 call +[28065] call_tmp[733899] ":" ret_tmp[5539158])
    (5539161 'move' call_tmp[733904] ret_tmp[5539158])
    const-val call_tmp[733909]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546299]:string[244] "temp"
    (87595 call :[1496816] myLine[87504] ret_tmp[5546299])
    (5546302 'move' call_tmp[733909] ret_tmp[5546299])
    const-val call_tmp[733914]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539152]:string[244] "temp"
    (87552 call +[28065] call_tmp[733904] call_tmp[733909] ret_tmp[5539152])
    (5539155 'move' call_tmp[733914] ret_tmp[5539152])
    const-val call_tmp[733919]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539146]:string[244] "temp"
    (87550 call +[28065] call_tmp[733914] ": uncaught here" ret_tmp[5539146])
    (5539149 'move' call_tmp[733919] ret_tmp[5539146])
    const-val s[87549]:string[244] "dead at end of block" "insert auto destroy"
    (642188 'move' s[87549] call_tmp[733919])
    (5610752 call chpl__autoDestroy[3262688] call_tmp[733914])
    (5610749 call chpl__autoDestroy[3262688] call_tmp[733909])
    (5610746 call chpl__autoDestroy[3262688] call_tmp[733904])
    (5610743 call chpl__autoDestroy[3262688] call_tmp[733899])
    (5610740 call chpl__autoDestroy[3262688] call_tmp[733894])
    (5610737 call chpl__autoDestroy[3262688] call_tmp[733889])
    (5610734 call chpl__autoDestroy[3262688] call_tmp[733884])
    (5610731 call chpl__autoDestroy[3262688] call_tmp[733879])
    (5610728 call chpl__autoDestroy[3262688] call_tmp[733874])
    (5610725 call chpl__autoDestroy[3262688] call_tmp[733869])
    (5610722 call chpl__autoDestroy[3262688] call_tmp[733864])
    (5610719 call chpl__autoDestroy[3262688] call_tmp[733859])
    (5610716 call chpl__autoDestroy[3262688] call_tmp[733854])
    val call_tmp[733926]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (733929 'move' call_tmp[733926](87610 call c_str[51169] s[87549]))
    (87605 call chpl_error_preformatted[87464] call_tmp[733926])
    (5610755 call chpl__autoDestroy[3262688] s[87549])
    (5610758 call chpl__autoDestroy[3262688] thrownFileS[87518])
    (5610761 call chpl__autoDestroy[3262688] myFileS[87481])
    (587945 return _void[46])
  }
  function chpl_propagate_error[87613](const in arg err[87617]:Error[85511]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    (87622 call chpl_uncaught_error[87456] err[87617])
    (587947 return _void[46])
  }
  function chpl_forall_error[87626](const in arg err[87630]:Error[85511]) : Error[85511] "resolved"
  {
    val ret[587951]:Error[85511] "dead after last mention" "RVV" "temp"
    val call_tmp[733931]:TaskErrors[87096] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4345903]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4345908 'move' coerce_tmp[4345903] err[87630])
    (733934 'move' call_tmp[733931](87639 call :[1808086] coerce_tmp[4345903]))
    const-val call_tmp[733936]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (733939 'move' call_tmp[733936](87645 call _cond_test[1808626] call_tmp[733931]))
    if call_tmp[733936]
    {
      (4346089 '=' ret[587951] err[87630])
      gotoReturn _end_chpl_forall_error[587949] _end_chpl_forall_error[587949]
    }
    val call_tmp[733941]:TaskErrors[87096] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
    { scopeless
      val new_temp[4346071]:TaskErrors[87096] "dead after last mention" "temp"
      (4346073 'move' new_temp[4346071](4345916 call _new[4346024] err[87630]))
    }
    (733944 'move' call_tmp[733941] new_temp[4346071])
    (4346095 '=' ret[587951](4346091 'cast' Error[85511] call_tmp[733941]))
    label _end_chpl_forall_error[587949]
    (587953 return ret[587951])
  }
  function chpl_enum_cast_error[1847892](const in arg casted[1847894]:uint(8)[71], const  ref arg enumName[1847896]:string[244], ref arg error_out[5500667]:Error[85511]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1847902]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555931]:string[244] "temp"
    (1847907 call :[1847963] casted[1847894] ret_tmp[5555931])
    (5555934 'move' call_tmp[1847902] ret_tmp[5555931])
    const-val call_tmp[1847910]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539638]:string[244] "temp"
    (1847915 call +[28065] "bad cast from int '" call_tmp[1847902] ret_tmp[5539638])
    (5539641 'move' call_tmp[1847910] ret_tmp[5539638])
    const-val call_tmp[1847918]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539644]:string[244] "temp"
    (1847923 call +[28065] call_tmp[1847910] "' to enum '" ret_tmp[5539644])
    (5539647 'move' call_tmp[1847918] ret_tmp[5539644])
    const-val call_tmp[1847926]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539650]:string[244] "temp"
    (1847931 call +[28065] call_tmp[1847918] enumName[1847896] ret_tmp[5539650])
    (5539653 'move' call_tmp[1847926] ret_tmp[5539650])
    const-val call_tmp[1847934]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5539656]:string[244] "temp"
    (1847939 call +[28065] call_tmp[1847926] "'" ret_tmp[5539656])
    (5539659 'move' call_tmp[1847934] ret_tmp[5539656])
    const-val call_tmp[1847942]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    { scopeless
      val new_temp[1849504]:IllegalArgumentError[85616] "dead after last mention" "temp"
      (1849506 'move' new_temp[1849504](1849491 call _new[1475209] call_tmp[1847934]))
    }
    const-val initTemp[1849513]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
    (1849516 call init[1475364] initTemp[1849513] new_temp[1849504])
    (1847944 'move' call_tmp[1847942] initTemp[1849513])
    val call_tmp[1847951]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1849530]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
    const-val ret_tmp[5547067]:owned Error[1498203] "temp"
    (1849532 call :[1498308] call_tmp[1847942] ret_tmp[5547067])
    (5547070 'move' coerce_tmp[1849530] ret_tmp[5547067])
    const-val _formal_tmp_in_err[1849749]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1849754 'move' _formal_tmp_in_err[1849749] coerce_tmp[1849530])
    (1847953 'move' call_tmp[1847951](1847956 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[1849749]))
    {
      val castedError[5500672]:Error[85511] "temp"
      (5500678 'move' castedError[5500672] call_tmp[1847951])
      (5500680 '=' error_out[5500667] castedError[5500672])
      (5614232 call chpl__autoDestroy[3262688] call_tmp[1847934])
      (5614235 call chpl__autoDestroy[3262688] call_tmp[1847926])
      (5614238 call chpl__autoDestroy[3262688] call_tmp[1847918])
      (5614241 call chpl__autoDestroy[3262688] call_tmp[1847910])
      (5614244 call chpl__autoDestroy[3262688] call_tmp[1847902])
      gotoErrorHandlingReturn _endchpl_enum_cast_error[5500669] _endchpl_enum_cast_error[5500669]
    }
    (5614259 call chpl__autoDestroy[3262688] call_tmp[1847934])
    (5614256 call chpl__autoDestroy[3262688] call_tmp[1847926])
    (5614253 call chpl__autoDestroy[3262688] call_tmp[1847918])
    (5614250 call chpl__autoDestroy[3262688] call_tmp[1847910])
    (5614247 call chpl__autoDestroy[3262688] call_tmp[1847902])
    label _endchpl_enum_cast_error[5500669]
    (1847960 return _void[46])
  }
  function assert[87867](const in arg test[87870]:bool[19]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[734142]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (734145 'move' call_tmp[734142](87883 call ![63126] test[87870]))
    const-val call_tmp[734147]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (734150 'move' call_tmp[734147] call_tmp[734142])
    if call_tmp[734147]
    {
      val call_tmp[734154]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (734157 'move' call_tmp[734154](87881 call c_str[51169] "assert failed"))
      (87874 'chpl_error' call_tmp[734154])
    }
    (587977 return _void[46])
  }
  function assert[1809366](const in arg test[1809368]:bool[19], const  ref arg _e0_args[1809370]:string[244], const in arg _e1_args[1809372]:int(32)[66], const  ref arg _e2_args[1809374]:string[244], const in arg _e3_args[1809376]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1809388]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1809390 'move' call_tmp[1809388](1809393 call ![63126] test[1809368]))
    const-val call_tmp[1809395]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1809397 'move' call_tmp[1809395] call_tmp[1809388])
    if call_tmp[1809395]
    {
      const-val call_tmp[1809404]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5555409]:string[244] "temp"
      (1809409 call chpl_stringify_wrapper[1809446] _e0_args[1809370] _e1_args[1809372] _e2_args[1809374] _e3_args[1809376] ret_tmp[5555409])
      (5555412 'move' call_tmp[1809404] ret_tmp[5555409])
      const-val call_tmp[1809414]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5539614]:string[244] "temp"
      (1809419 call +[28065] "assert failed - " call_tmp[1809404] ret_tmp[5539614])
      (5539617 'move' call_tmp[1809414] ret_tmp[5539614])
      const-val tmpstring[1809422]:string[244] "dead at end of block" "insert auto destroy"
      (1809424 'move' tmpstring[1809422] call_tmp[1809414])
      (5613154 call chpl__autoDestroy[3262688] call_tmp[1809404])
      val call_tmp[1809428]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (1809430 'move' call_tmp[1809428](1809436 call c_str[51169] tmpstring[1809422]))
      (1809437 'chpl_error' call_tmp[1809428])
      (5613158 call chpl__autoDestroy[3262688] tmpstring[1809422])
    }
    (1809442 return _void[46])
  }
  function assert[2078252](const in arg test[2078254]:bool[19], const  ref arg _e0_args[2078256]:string[244], const in arg _e1_args[2078258]:uint(64)[86], const  ref arg _e2_args[2078260]:string[244], const in arg _e3_args[2078262]:uint(64)[86]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[2078274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078276 'move' call_tmp[2078274](2078279 call ![63126] test[2078254]))
    const-val call_tmp[2078281]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078283 'move' call_tmp[2078281] call_tmp[2078274])
    if call_tmp[2078281]
    {
      const-val call_tmp[2078290]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5561874]:string[244] "temp"
      (2078295 call chpl_stringify_wrapper[2078338] _e0_args[2078256] _e1_args[2078258] _e2_args[2078260] _e3_args[2078262] ret_tmp[5561874])
      (5561877 'move' call_tmp[2078290] ret_tmp[5561874])
      const-val call_tmp[2078300]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5539776]:string[244] "temp"
      (2078305 call +[28065] "assert failed - " call_tmp[2078290] ret_tmp[5539776])
      (5539779 'move' call_tmp[2078300] ret_tmp[5539776])
      const-val tmpstring[2078308]:string[244] "dead at end of block" "insert auto destroy"
      (2078310 'move' tmpstring[2078308] call_tmp[2078300])
      (5616597 call chpl__autoDestroy[3262688] call_tmp[2078290])
      val call_tmp[2078314]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (2078316 'move' call_tmp[2078314](2078322 call c_str[51169] tmpstring[2078308]))
      (2078323 'chpl_error' call_tmp[2078314])
      (5616601 call chpl__autoDestroy[3262688] tmpstring[2078308])
    }
    (2078328 return _void[46])
  }
  function assert[2054013](const in arg test[2054015]:bool[19], const  ref arg _e0_args[2054017]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[2054023]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2054025 'move' call_tmp[2054023](2054028 call ![63126] test[2054015]))
    const-val call_tmp[2054030]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2054032 'move' call_tmp[2054030] call_tmp[2054023])
    if call_tmp[2054030]
    {
      const-val call_tmp[2054039]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5561452]:string[244] "temp"
      (2054044 call chpl_stringify_wrapper[2054078] _e0_args[2054017] ret_tmp[5561452])
      (5561455 'move' call_tmp[2054039] ret_tmp[5561452])
      const-val call_tmp[2054046]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5539770]:string[244] "temp"
      (2054051 call +[28065] "assert failed - " call_tmp[2054039] ret_tmp[5539770])
      (5539773 'move' call_tmp[2054046] ret_tmp[5539770])
      const-val tmpstring[2054054]:string[244] "dead at end of block" "insert auto destroy"
      (2054056 'move' tmpstring[2054054] call_tmp[2054046])
      (5616435 call chpl__autoDestroy[3262688] call_tmp[2054039])
      val call_tmp[2054060]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (2054062 'move' call_tmp[2054060](2054068 call c_str[51169] tmpstring[2054054]))
      (2054069 'chpl_error' call_tmp[2054060])
      (5616439 call chpl__autoDestroy[3262688] tmpstring[2054054])
    }
    (2054074 return _void[46])
  }
  function compilerWarning[4514969]() : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    (4514978 return _void[46])
  }
  function compilerWarning[4637702]() : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    (4637711 return _void[46])
  }
  function compilerAssert[1518488]() : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1518496]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1518503]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1518516 return _void[46])
  }
  function compilerAssert[1530591]() : void[4] "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1530603]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1530610]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1530624 return _void[46])
  }
  function halt[88131](const  ref arg msg[88134]:string[244]) : void[4] "always propagate line file info" "function terminates program" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[734245]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538724]:string[244] "temp"
    (88144 call localize[23546] msg[88134] ret_tmp[5538724])
    (5538727 'move' call_tmp[734245] ret_tmp[5538724])
    val call_tmp[734252]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (734255 'move' call_tmp[734252](88148 call c_str[51169] call_tmp[734245]))
    (88139 call halt[1504499] call_tmp[734252])
    (5610764 call chpl__autoDestroy[3262688] call_tmp[734245])
    (588001 return _void[46])
  }
  function halt[1504499](const in arg _e0_args[1504501]:c_ptrConst(int(8))[1466333]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1504507]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5547304]:string[244] "temp"
    (1504512 call chpl_stringify_wrapper[1504580] _e0_args[1504501] ret_tmp[5547304])
    (5547307 'move' call_tmp[1504507] ret_tmp[5547304])
    const-val call_tmp[1504514]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539230]:string[244] "temp"
    (1504519 call +[28065] "halt reached - " call_tmp[1504507] ret_tmp[5539230])
    (5539233 'move' call_tmp[1504514] ret_tmp[5539230])
    const-val tmpstring[1504522]:string[244] "dead at end of block" "insert auto destroy"
    (1504524 'move' tmpstring[1504522] call_tmp[1504514])
    (5611314 call chpl__autoDestroy[3262688] call_tmp[1504507])
    val call_tmp[1504528]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1504530 'move' call_tmp[1504528](1504536 call c_str[51169] tmpstring[1504522]))
    (1504537 'chpl_error' call_tmp[1504528])
    (5611317 call chpl__autoDestroy[3262688] tmpstring[1504522])
    (1504541 return _void[46])
  }
  function halt[1483780](const  ref arg _e0_args[1483782]:string[244], const in arg _e1_args[1483784]:int(64)[10], const  ref arg _e2_args[1483786]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1483796]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546200]:string[244] "temp"
    (1483801 call chpl_stringify_wrapper[1483881] _e0_args[1483782] _e1_args[1483784] _e2_args[1483786] ret_tmp[5546200])
    (5546203 'move' call_tmp[1483796] ret_tmp[5546200])
    const-val call_tmp[1483805]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539224]:string[244] "temp"
    (1483810 call +[28065] "halt reached - " call_tmp[1483796] ret_tmp[5539224])
    (5539227 'move' call_tmp[1483805] ret_tmp[5539224])
    const-val tmpstring[1483813]:string[244] "dead at end of block" "insert auto destroy"
    (1483815 'move' tmpstring[1483813] call_tmp[1483805])
    (5611266 call chpl__autoDestroy[3262688] call_tmp[1483796])
    val call_tmp[1483819]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1483821 'move' call_tmp[1483819](1483827 call c_str[51169] tmpstring[1483813]))
    (1483828 'chpl_error' call_tmp[1483819])
    (5611269 call chpl__autoDestroy[3262688] tmpstring[1483813])
    (1483832 return _void[46])
  }
  function halt[1832970](const  ref arg _e0_args[1832972]:string[244], const in arg _e1_args[1832974]:ArrayInit[66987], const  ref arg _e2_args[1832976]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1832986]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555643]:string[244] "temp"
    (1832991 call chpl_stringify_wrapper[1833025] _e0_args[1832972] _e1_args[1832974] _e2_args[1832976] ret_tmp[5555643])
    (5555646 'move' call_tmp[1832986] ret_tmp[5555643])
    const-val call_tmp[1832995]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539626]:string[244] "temp"
    (1833000 call +[28065] "halt reached - " call_tmp[1832986] ret_tmp[5539626])
    (5539629 'move' call_tmp[1832995] ret_tmp[5539626])
    const-val tmpstring[1833003]:string[244] "dead at end of block" "insert auto destroy"
    (1833005 'move' tmpstring[1833003] call_tmp[1832995])
    (5613208 call chpl__autoDestroy[3262688] call_tmp[1832986])
    val call_tmp[1833009]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1833011 'move' call_tmp[1833009](1833017 call c_str[51169] tmpstring[1833003]))
    (1833018 'chpl_error' call_tmp[1833009])
    (5613211 call chpl__autoDestroy[3262688] tmpstring[1833003])
    (1833022 return _void[46])
  }
  function halt[1600471](const  ref arg _e0_args[1600473]:string[244], const in arg _e1_args[1600475]:int(64)[10], const  ref arg _e2_args[1600477]:string[244], const in arg _e3_args[1600479]:int(64)[10], const  ref arg _e4_args[1600481]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1600495]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5548901]:string[244] "temp"
    (1600500 call chpl_stringify_wrapper[1600592] _e0_args[1600473] _e1_args[1600475] _e2_args[1600477] _e3_args[1600479] _e4_args[1600481] ret_tmp[5548901])
    (5548904 'move' call_tmp[1600495] ret_tmp[5548901])
    const-val call_tmp[1600506]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539344]:string[244] "temp"
    (1600511 call +[28065] "halt reached - " call_tmp[1600495] ret_tmp[5539344])
    (5539347 'move' call_tmp[1600506] ret_tmp[5539344])
    const-val tmpstring[1600514]:string[244] "dead at end of block" "insert auto destroy"
    (1600516 'move' tmpstring[1600514] call_tmp[1600506])
    (5611701 call chpl__autoDestroy[3262688] call_tmp[1600495])
    val call_tmp[1600520]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1600522 'move' call_tmp[1600520](1600528 call c_str[51169] tmpstring[1600514]))
    (1600529 'chpl_error' call_tmp[1600520])
    (5611704 call chpl__autoDestroy[3262688] tmpstring[1600514])
    (1600533 return _void[46])
  }
  function halt[1900307](const  ref arg _e0_args[1900309]:string[244], const  ref arg _e1_args[1900311]:string[244], const in arg _e2_args[1900313]:int(64)[10], const  ref arg _e3_args[1900315]:string[244], const in arg _e4_args[1900317]:range(int(64),both,one)[1610039]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1900331]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557100]:string[244] "temp"
    (1900336 call chpl_stringify_wrapper[1900378] _e0_args[1900309] _e1_args[1900311] _e2_args[1900313] _e3_args[1900315] _e4_args[1900317] ret_tmp[5557100])
    (5557103 'move' call_tmp[1900331] ret_tmp[5557100])
    const-val call_tmp[1900342]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539680]:string[244] "temp"
    (1900347 call +[28065] "halt reached - " call_tmp[1900331] ret_tmp[5539680])
    (5539683 'move' call_tmp[1900342] ret_tmp[5539680])
    const-val tmpstring[1900350]:string[244] "dead at end of block" "insert auto destroy"
    (1900352 'move' tmpstring[1900350] call_tmp[1900342])
    (5614711 call chpl__autoDestroy[3262688] call_tmp[1900331])
    val call_tmp[1900356]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1900358 'move' call_tmp[1900356](1900364 call c_str[51169] tmpstring[1900350]))
    (1900365 'chpl_error' call_tmp[1900356])
    (5614714 call chpl__autoDestroy[3262688] tmpstring[1900350])
    (1900369 return _void[46])
  }
  function halt[1640377](const  ref arg _e0_args[1640379]:string[244], const in arg _e1_args[1640381]:range(int(64),both,one)[1610039], const  ref arg _e2_args[1640383]:string[244], const in arg _e3_args[1640385]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1640397]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5549709]:string[244] "temp"
    (1640402 call chpl_stringify_wrapper[1640488] _e0_args[1640379] _e1_args[1640381] _e2_args[1640383] _e3_args[1640385] ret_tmp[5549709])
    (5549712 'move' call_tmp[1640397] ret_tmp[5549709])
    const-val call_tmp[1640407]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539362]:string[244] "temp"
    (1640412 call +[28065] "halt reached - " call_tmp[1640397] ret_tmp[5539362])
    (5539365 'move' call_tmp[1640407] ret_tmp[5539362])
    const-val tmpstring[1640415]:string[244] "dead at end of block" "insert auto destroy"
    (1640417 'move' tmpstring[1640415] call_tmp[1640407])
    (5611948 call chpl__autoDestroy[3262688] call_tmp[1640397])
    val call_tmp[1640421]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1640423 'move' call_tmp[1640421](1640429 call c_str[51169] tmpstring[1640415]))
    (1640430 'chpl_error' call_tmp[1640421])
    (5611951 call chpl__autoDestroy[3262688] tmpstring[1640415])
    (1640434 return _void[46])
  }
  function halt[1664036](const  ref arg _e0_args[1664038]:string[244], const in arg _e1_args[1664040]:range(byteIndex,both,one)[1655317], const  ref arg _e2_args[1664042]:string[244], const in arg _e3_args[1664044]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1664056]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550141]:string[244] "temp"
    (1664061 call chpl_stringify_wrapper[1664096] _e0_args[1664038] _e1_args[1664040] _e2_args[1664042] _e3_args[1664044] ret_tmp[5550141])
    (5550144 'move' call_tmp[1664056] ret_tmp[5550141])
    const-val call_tmp[1664066]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539404]:string[244] "temp"
    (1664071 call +[28065] "halt reached - " call_tmp[1664056] ret_tmp[5539404])
    (5539407 'move' call_tmp[1664066] ret_tmp[5539404])
    const-val tmpstring[1664074]:string[244] "dead at end of block" "insert auto destroy"
    (1664076 'move' tmpstring[1664074] call_tmp[1664066])
    (5612142 call chpl__autoDestroy[3262688] call_tmp[1664056])
    val call_tmp[1664080]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1664082 'move' call_tmp[1664080](1664088 call c_str[51169] tmpstring[1664074]))
    (1664089 'chpl_error' call_tmp[1664080])
    (5612145 call chpl__autoDestroy[3262688] tmpstring[1664074])
    (1664093 return _void[46])
  }
  function halt[1673640](const  ref arg _e0_args[1673642]:string[244], const in arg _e1_args[1673644]:int(64)[10], const  ref arg _e2_args[1673646]:string[244], const in arg _e3_args[1673648]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1673660]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550216]:string[244] "temp"
    (1673665 call chpl_stringify_wrapper[1673700] _e0_args[1673642] _e1_args[1673644] _e2_args[1673646] _e3_args[1673648] ret_tmp[5550216])
    (5550219 'move' call_tmp[1673660] ret_tmp[5550216])
    const-val call_tmp[1673670]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539410]:string[244] "temp"
    (1673675 call +[28065] "halt reached - " call_tmp[1673660] ret_tmp[5539410])
    (5539413 'move' call_tmp[1673670] ret_tmp[5539410])
    const-val tmpstring[1673678]:string[244] "dead at end of block" "insert auto destroy"
    (1673680 'move' tmpstring[1673678] call_tmp[1673670])
    (5612200 call chpl__autoDestroy[3262688] call_tmp[1673660])
    val call_tmp[1673684]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1673686 'move' call_tmp[1673684](1673692 call c_str[51169] tmpstring[1673678]))
    (1673693 'chpl_error' call_tmp[1673684])
    (5612203 call chpl__autoDestroy[3262688] tmpstring[1673678])
    (1673697 return _void[46])
  }
  function halt[1685520](const  ref arg _e0_args[1685522]:string[244], const in arg _e1_args[1685524]:range(int(64),low,one)[1576928], const  ref arg _e2_args[1685526]:string[244], const in arg _e3_args[1685528]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1685540]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550348]:string[244] "temp"
    (1685545 call chpl_stringify_wrapper[1685580] _e0_args[1685522] _e1_args[1685524] _e2_args[1685526] _e3_args[1685528] ret_tmp[5550348])
    (5550351 'move' call_tmp[1685540] ret_tmp[5550348])
    const-val call_tmp[1685550]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539416]:string[244] "temp"
    (1685555 call +[28065] "halt reached - " call_tmp[1685540] ret_tmp[5539416])
    (5539419 'move' call_tmp[1685550] ret_tmp[5539416])
    const-val tmpstring[1685558]:string[244] "dead at end of block" "insert auto destroy"
    (1685560 'move' tmpstring[1685558] call_tmp[1685550])
    (5612315 call chpl__autoDestroy[3262688] call_tmp[1685540])
    val call_tmp[1685564]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1685566 'move' call_tmp[1685564](1685572 call c_str[51169] tmpstring[1685558]))
    (1685573 'chpl_error' call_tmp[1685564])
    (5612318 call chpl__autoDestroy[3262688] tmpstring[1685558])
    (1685577 return _void[46])
  }
  function halt[1705288](const  ref arg _e0_args[1705290]:string[244], const in arg _e1_args[1705292]:range(byteIndex,low,one)[1698271], const  ref arg _e2_args[1705294]:string[244], const in arg _e3_args[1705296]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1705308]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550579]:string[244] "temp"
    (1705313 call chpl_stringify_wrapper[1705348] _e0_args[1705290] _e1_args[1705292] _e2_args[1705294] _e3_args[1705296] ret_tmp[5550579])
    (5550582 'move' call_tmp[1705308] ret_tmp[5550579])
    const-val call_tmp[1705318]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539446]:string[244] "temp"
    (1705323 call +[28065] "halt reached - " call_tmp[1705308] ret_tmp[5539446])
    (5539449 'move' call_tmp[1705318] ret_tmp[5539446])
    const-val tmpstring[1705326]:string[244] "dead at end of block" "insert auto destroy"
    (1705328 'move' tmpstring[1705326] call_tmp[1705318])
    (5612529 call chpl__autoDestroy[3262688] call_tmp[1705308])
    val call_tmp[1705332]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1705334 'move' call_tmp[1705332](1705340 call c_str[51169] tmpstring[1705326]))
    (1705341 'chpl_error' call_tmp[1705332])
    (5612532 call chpl__autoDestroy[3262688] tmpstring[1705326])
    (1705345 return _void[46])
  }
  function halt[1735757](const  ref arg _e0_args[1735759]:string[244], const in arg _e1_args[1735761]:range(byteIndex,high,one)[1726799], const  ref arg _e2_args[1735763]:string[244], const in arg _e3_args[1735765]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1735777]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5551353]:string[244] "temp"
    (1735782 call chpl_stringify_wrapper[1735817] _e0_args[1735759] _e1_args[1735761] _e2_args[1735763] _e3_args[1735765] ret_tmp[5551353])
    (5551356 'move' call_tmp[1735777] ret_tmp[5551353])
    const-val call_tmp[1735787]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539488]:string[244] "temp"
    (1735792 call +[28065] "halt reached - " call_tmp[1735777] ret_tmp[5539488])
    (5539491 'move' call_tmp[1735787] ret_tmp[5539488])
    const-val tmpstring[1735795]:string[244] "dead at end of block" "insert auto destroy"
    (1735797 'move' tmpstring[1735795] call_tmp[1735787])
    (5612742 call chpl__autoDestroy[3262688] call_tmp[1735777])
    val call_tmp[1735801]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1735803 'move' call_tmp[1735801](1735809 call c_str[51169] tmpstring[1735795]))
    (1735810 'chpl_error' call_tmp[1735801])
    (5612745 call chpl__autoDestroy[3262688] tmpstring[1735795])
    (1735814 return _void[46])
  }
  function halt[1785554](const  ref arg _e0_args[1785556]:string[244], const  ref arg _e1_args[1785558]:string[244], const  ref arg _e2_args[1785560]:string[244], const  ref arg _e3_args[1785562]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1785574]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5554842]:string[244] "temp"
    (1785579 call chpl_stringify_wrapper[1785614] _e0_args[1785556] _e1_args[1785558] _e2_args[1785560] _e3_args[1785562] ret_tmp[5554842])
    (5554845 'move' call_tmp[1785574] ret_tmp[5554842])
    const-val call_tmp[1785584]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539608]:string[244] "temp"
    (1785589 call +[28065] "halt reached - " call_tmp[1785574] ret_tmp[5539608])
    (5539611 'move' call_tmp[1785584] ret_tmp[5539608])
    const-val tmpstring[1785592]:string[244] "dead at end of block" "insert auto destroy"
    (1785594 'move' tmpstring[1785592] call_tmp[1785584])
    (5613062 call chpl__autoDestroy[3262688] call_tmp[1785574])
    val call_tmp[1785598]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1785600 'move' call_tmp[1785598](1785606 call c_str[51169] tmpstring[1785592]))
    (1785607 'chpl_error' call_tmp[1785598])
    (5613065 call chpl__autoDestroy[3262688] tmpstring[1785592])
    (1785611 return _void[46])
  }
  function halt[5090017](const  ref arg _e0_args[5090019]:string[244], const  ref arg _e1_args[5090021]:3*int(64)[1995504], const  ref arg _e2_args[5090023]:string[244], const  ref arg _e3_args[5090025]:4*int(64)[1960494]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[5090037]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5607953]:string[244] "temp"
    (5090042 call chpl_stringify_wrapper[5090077] _e0_args[5090019] _e1_args[5090021] _e2_args[5090023] _e3_args[5090025] ret_tmp[5607953])
    (5607956 'move' call_tmp[5090037] ret_tmp[5607953])
    const-val call_tmp[5090047]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5541156]:string[244] "temp"
    (5090052 call +[28065] "halt reached - " call_tmp[5090037] ret_tmp[5541156])
    (5541159 'move' call_tmp[5090047] ret_tmp[5541156])
    const-val tmpstring[5090055]:string[244] "dead at end of block" "insert auto destroy"
    (5090057 'move' tmpstring[5090055] call_tmp[5090047])
    (5656182 call chpl__autoDestroy[3262688] call_tmp[5090037])
    val call_tmp[5090061]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (5090063 'move' call_tmp[5090061](5090069 call c_str[51169] tmpstring[5090055]))
    (5090070 'chpl_error' call_tmp[5090061])
    (5656185 call chpl__autoDestroy[3262688] tmpstring[5090055])
    (5090074 return _void[46])
  }
  function halt[1821083](const  ref arg _e0_args[1821085]:string[244], const in arg _e1_args[1821087]:uint(64)[86]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1821095]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5555550]:string[244] "temp"
    (1821100 call chpl_stringify_wrapper[1821174] _e0_args[1821085] _e1_args[1821087] ret_tmp[5555550])
    (5555553 'move' call_tmp[1821095] ret_tmp[5555550])
    const-val call_tmp[1821103]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539620]:string[244] "temp"
    (1821108 call +[28065] "halt reached - " call_tmp[1821095] ret_tmp[5539620])
    (5539623 'move' call_tmp[1821103] ret_tmp[5539620])
    const-val tmpstring[1821111]:string[244] "dead at end of block" "insert auto destroy"
    (1821113 'move' tmpstring[1821111] call_tmp[1821103])
    (5613186 call chpl__autoDestroy[3262688] call_tmp[1821095])
    val call_tmp[1821117]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1821119 'move' call_tmp[1821117](1821125 call c_str[51169] tmpstring[1821111]))
    (1821126 'chpl_error' call_tmp[1821117])
    (5613189 call chpl__autoDestroy[3262688] tmpstring[1821111])
    (1821130 return _void[46])
  }
  function halt[1925218](const  ref arg _e0_args[1925220]:string[244], const in arg _e1_args[1925222]:int(64)[10]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[1925230]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557659]:string[244] "temp"
    (1925235 call chpl_stringify_wrapper[1925268] _e0_args[1925220] _e1_args[1925222] ret_tmp[5557659])
    (5557662 'move' call_tmp[1925230] ret_tmp[5557659])
    const-val call_tmp[1925238]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539722]:string[244] "temp"
    (1925243 call +[28065] "halt reached - " call_tmp[1925230] ret_tmp[5539722])
    (5539725 'move' call_tmp[1925238] ret_tmp[5539722])
    const-val tmpstring[1925246]:string[244] "dead at end of block" "insert auto destroy"
    (1925248 'move' tmpstring[1925246] call_tmp[1925238])
    (5614931 call chpl__autoDestroy[3262688] call_tmp[1925230])
    val call_tmp[1925252]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (1925254 'move' call_tmp[1925252](1925260 call c_str[51169] tmpstring[1925246]))
    (1925261 'chpl_error' call_tmp[1925252])
    (5614934 call chpl__autoDestroy[3262688] tmpstring[1925246])
    (1925265 return _void[46])
  }
  function halt[3006352](const  ref arg _e0_args[3006354]:string[244], const  ref arg _e1_args[3006356]:Tensor(real(64))[1960841]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[3006364]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5583990]:string[244] "temp"
    (3006369 call chpl_stringify_wrapper[3006402] _e0_args[3006354] _e1_args[3006356] ret_tmp[5583990])
    (5583993 'move' call_tmp[3006364] ret_tmp[5583990])
    const-val call_tmp[3006372]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5540046]:string[244] "temp"
    (3006377 call +[28065] "halt reached - " call_tmp[3006364] ret_tmp[5540046])
    (5540049 'move' call_tmp[3006372] ret_tmp[5540046])
    const-val tmpstring[3006380]:string[244] "dead at end of block" "insert auto destroy"
    (3006382 'move' tmpstring[3006380] call_tmp[3006372])
    (5628993 call chpl__autoDestroy[3262688] call_tmp[3006364])
    val call_tmp[3006386]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (3006388 'move' call_tmp[3006386](3006394 call c_str[51169] tmpstring[3006380]))
    (3006395 'chpl_error' call_tmp[3006386])
    (5628996 call chpl__autoDestroy[3262688] tmpstring[3006380])
    (3006399 return _void[46])
  }
  function halt[3251951](const  ref arg _e0_args[3251953]:string[244], const  ref arg _e1_args[3251955]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[3251963]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557740]:string[244] "temp"
    (3251968 call chpl_stringify_wrapper[1936460] _e0_args[3251953] _e1_args[3251955] ret_tmp[5557740])
    (5557743 'move' call_tmp[3251963] ret_tmp[5557740])
    const-val call_tmp[3251971]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5540202]:string[244] "temp"
    (3251976 call +[28065] "halt reached - " call_tmp[3251963] ret_tmp[5540202])
    (5540205 'move' call_tmp[3251971] ret_tmp[5540202])
    const-val tmpstring[3251979]:string[244] "dead at end of block" "insert auto destroy"
    (3251981 'move' tmpstring[3251979] call_tmp[3251971])
    (5631987 call chpl__autoDestroy[3262688] call_tmp[3251963])
    val call_tmp[3251985]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (3251987 'move' call_tmp[3251985](3251993 call c_str[51169] tmpstring[3251979]))
    (3251994 'chpl_error' call_tmp[3251985])
    (5631990 call chpl__autoDestroy[3262688] tmpstring[3251979])
    (3251998 return _void[46])
  }
  function halt[2014349](const  ref arg _e0_args[2014351]:string[244], const  ref arg _e1_args[2014353]:string[244], const in arg _e2_args[2014355]:int(64)[10], const  ref arg _e3_args[2014357]:string[244], const in arg _e4_args[2014359]:uint(64)[86], const  ref arg _e5_args[2014361]:string[244], const in arg _e6_args[2014363]:uint(64)[86]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[2014381]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5561257]:string[244] "temp"
    (2014386 call chpl_stringify_wrapper[2014490] _e0_args[2014351] _e1_args[2014353] _e2_args[2014355] _e3_args[2014357] _e4_args[2014359] _e5_args[2014361] _e6_args[2014363] ret_tmp[5561257])
    (5561260 'move' call_tmp[2014381] ret_tmp[5561257])
    const-val call_tmp[2014394]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5539764]:string[244] "temp"
    (2014399 call +[28065] "halt reached - " call_tmp[2014381] ret_tmp[5539764])
    (5539767 'move' call_tmp[2014394] ret_tmp[5539764])
    const-val tmpstring[2014402]:string[244] "dead at end of block" "insert auto destroy"
    (2014404 'move' tmpstring[2014402] call_tmp[2014394])
    (5615970 call chpl__autoDestroy[3262688] call_tmp[2014381])
    val call_tmp[2014408]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (2014410 'move' call_tmp[2014408](2014416 call c_str[51169] tmpstring[2014402]))
    (2014417 'chpl_error' call_tmp[2014408])
    (5615973 call chpl__autoDestroy[3262688] tmpstring[2014402])
    (2014421 return _void[46])
  }
  function halt[4534935](const  ref arg _e0_args[4534937]:string[244], const  ref arg _e1_args[4534939]:string[244], const  ref arg _e2_args[4534941]:string[244], const  ref arg _e3_args[4534943]:string[244], const  ref arg _e4_args[4534945]:string[244], const  ref arg _e5_args[4534947]:string[244], const  ref arg _e6_args[4534949]:string[244], const  ref arg _e7_args[4534951]:string[244], const  ref arg _e8_args[4534953]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "function terminates program" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[4534975]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5601136]:string[244] "temp"
    (4534980 call chpl_stringify_wrapper[4535096] _e0_args[4534937] _e1_args[4534939] _e2_args[4534941] _e3_args[4534943] _e4_args[4534945] _e5_args[4534947] _e6_args[4534949] _e7_args[4534951] _e8_args[4534953] ret_tmp[5601136])
    (5601139 'move' call_tmp[4534975] ret_tmp[5601136])
    const-val call_tmp[4534990]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5540586]:string[244] "temp"
    (4534995 call +[28065] "halt reached - " call_tmp[4534975] ret_tmp[5540586])
    (5540589 'move' call_tmp[4534990] ret_tmp[5540586])
    const-val tmpstring[4534998]:string[244] "dead at end of block" "insert auto destroy"
    (4535000 'move' tmpstring[4534998] call_tmp[4534990])
    (5647752 call chpl__autoDestroy[3262688] call_tmp[4534975])
    val call_tmp[4535004]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (4535006 'move' call_tmp[4535004](4535012 call c_str[51169] tmpstring[4534998]))
    (4535013 'chpl_error' call_tmp[4535004])
    (5647755 call chpl__autoDestroy[3262688] tmpstring[4534998])
    (4535017 return _void[46])
  }
  function warning[88179](const  ref arg msg[88182]:string[244]) : void[4] "always propagate line file info" "resolved" "no return value for void"
  {
    const-val call_tmp[734276]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538730]:string[244] "temp"
    (88191 call localize[23546] msg[88182] ret_tmp[5538730])
    (5538733 'move' call_tmp[734276] ret_tmp[5538730])
    val call_tmp[734283]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (734286 'move' call_tmp[734283](88195 call c_str[51169] call_tmp[734276]))
    (88186 'chpl_warning' call_tmp[734283])
    (5610767 call chpl__autoDestroy[3262688] call_tmp[734276])
    (588005 return _void[46])
  }
  function warning[1936426](const  ref arg _e0_args[1936428]:string[244], const  ref arg _e1_args[1936430]:string[244]) : void[4] "always propagate line file info" "expanded varargs" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1936438]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5557734]:string[244] "temp"
    (1936443 call chpl_stringify_wrapper[1936460] _e0_args[1936428] _e1_args[1936430] ret_tmp[5557734])
    (5557737 'move' call_tmp[1936438] ret_tmp[5557734])
    const-val tmpstring[1936446]:string[244] "dead at end of block" "insert auto destroy"
    (1936448 'move' tmpstring[1936446] call_tmp[1936438])
    (1936453 call warning[88179] tmpstring[1936446])
    (5615010 call chpl__autoDestroy[3262688] tmpstring[1936446])
    (1936457 return _void[46])
  }
  function chpl_error_preformatted[87464](const in arg ptr[87469]:c_ptrConst(int(8))[1466333]) : void[4] "extern" "local args" "no fn body" "resolved"
  {
  }
}
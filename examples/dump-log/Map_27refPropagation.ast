AST dump for Map after pass refPropagation.
Module use list: ChapelStandard ChapelLocks ChapelHashtable HaltWrappers IO FormattedIO Reflection 

{
  function chpl__init_Map[468660]() : void[4] "insert line file info" "module init" "resolved"
  {
    (637521 return _void[46])
  }
  function _checkKeyAndValType[1935939]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1936209 return _void[46])
  }
  function _checkKeyAndValType[3312968]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (3313238 return _void[46])
  }
  function _checkKeyAndValType[3339425]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (3339695 return _void[46])
  }
  function _checkKeyAndValType[3354484]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (3354754 return _void[46])
  }
  function _checkKeyAndValType[3391494]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (3391764 return _void[46])
  }
  function _checkKeyAndValType[3828211]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    (3828481 return _void[46])
  }
  function map(string,Module(real(32)),false)[1936356].init[1935675](ref arg this[1935679]:map(string,Module(real(32)),false)[1936356], const in arg resizeThreshold[1935689]:real(64)[13], const in arg initialCapacity[1935695]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (1935704 call _checkKeyAndValType[1935939])
    const-val tmp[1935738]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[1936365]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1936371 'move' coerce_tmp[1936365](1936367 'cast' real(64)[13] 0))
    const-val call_tmp[7498157]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498159 'move' call_tmp[7498157](7498161 '<=' resizeThreshold[1935689] coerce_tmp[1936365]))
    (1935740 'move' tmp[1935738] call_tmp[7498157])
    val tmp[1935759]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1935761]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1935763]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1935765 'move' call_tmp[1935763] tmp[1935738])
    (1935770 'move' tmp[1935761] call_tmp[1935763])
    if tmp[1935761]
    {
      (1935777 'move' tmp[1935759] 1)
    }
    {
      const-val tmp[1935783]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1935785]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1936377]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1936383 'move' coerce_tmp[1936377](1936379 'cast' real(64)[13] 1))
      const-val call_tmp[7498287]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7498289 'move' call_tmp[7498287](7498291 '>=' resizeThreshold[1935689] coerce_tmp[1936377]))
      (1935787 'move' call_tmp[1935785] call_tmp[7498287])
      (1935793 'move' tmp[1935783] call_tmp[1935785])
      (1935798 'move' tmp[1935759] tmp[1935783])
    }
    const-val call_tmp[1935804]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1935806 'move' call_tmp[1935804] tmp[1935759])
    if call_tmp[1935804]
    {
      (1935814 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[1935818]:real(64)[13] "dead after last mention" "temp"
      (1935820 'move' resizeThreshold[1935818] 0.5)
      (1935823 '.=' this[1935679] resizeThreshold[1936338] resizeThreshold[1935818])
    }
    {
      val resizeThreshold[1935829]:real(64)[13] "dead after last mention" "temp"
      (1935831 'move' resizeThreshold[1935829] resizeThreshold[1935689])
      (1935834 '.=' this[1935679] resizeThreshold[1936338] resizeThreshold[1935829])
    }
    const-val call_tmp[1935847]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1941023]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[1949594]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1949598 'move' coerce_tmp[1949594](9201126 '.v' this[1935679] resizeThreshold[1936338]))
    const-val default_arg_rehashHelpers[1950019]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5557827]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[7892814]:owned chpl__rehashHelpers?[1941081] "temp"
    (7892818 'move' i__retArg[7892814](7892816 'set reference' ret_tmp[5557827]))
    const-val ret[7892821]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[7892823]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[7892825]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (7892828 call init=[1949636] tmp[7892825] nil[32])
    (7892831 'move' rehashHelpers[7892823] tmp[7892825])
    (7892834 'move' ret[7892821] rehashHelpers[7892823])
    (7892837 '=' i__retArg[7892814] ret[7892821])
    (5557830 'move' default_arg_rehashHelpers[1950019] ret_tmp[5557827])
    (1941026 call init[1941108] initTemp[1941023] coerce_tmp[1949594] initialCapacity[1935695] default_arg_rehashHelpers[1950019])
    (1935849 'move' call_tmp[1935847] initTemp[1941023])
    val table[1935879]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    (1935881 'move' table[1935879] call_tmp[1935847])
    (1935885 '.=' this[1935679] table[1936341] table[1935879])
    (1935936 return _void[46])
  }
  function map(string,int(64),false)[3288794].init[3312704](ref arg this[3312708]:map(string,int(64),false)[3288794], const in arg resizeThreshold[3312718]:real(64)[13], const in arg initialCapacity[3312724]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3312733 call _checkKeyAndValType[3312968])
    const-val tmp[3312767]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3313258]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3313264 'move' coerce_tmp[3313258](3313260 'cast' real(64)[13] 0))
    const-val call_tmp[7498167]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498169 'move' call_tmp[7498167](7498171 '<=' resizeThreshold[3312718] coerce_tmp[3313258]))
    (3312769 'move' tmp[3312767] call_tmp[7498167])
    val tmp[3312788]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3312790]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3312792]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312794 'move' call_tmp[3312792] tmp[3312767])
    (3312799 'move' tmp[3312790] call_tmp[3312792])
    if tmp[3312790]
    {
      (3312806 'move' tmp[3312788] 1)
    }
    {
      const-val tmp[3312812]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3312814]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3313270]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3313276 'move' coerce_tmp[3313270](3313272 'cast' real(64)[13] 1))
      const-val call_tmp[7498297]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7498299 'move' call_tmp[7498297](7498301 '>=' resizeThreshold[3312718] coerce_tmp[3313270]))
      (3312816 'move' call_tmp[3312814] call_tmp[7498297])
      (3312822 'move' tmp[3312812] call_tmp[3312814])
      (3312827 'move' tmp[3312788] tmp[3312812])
    }
    const-val call_tmp[3312833]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312835 'move' call_tmp[3312833] tmp[3312788])
    if call_tmp[3312833]
    {
      (3312843 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3312847]:real(64)[13] "dead after last mention" "temp"
      (3312849 'move' resizeThreshold[3312847] 0.5)
      (3312852 '.=' this[3312708] resizeThreshold[3288776] resizeThreshold[3312847])
    }
    {
      val resizeThreshold[3312858]:real(64)[13] "dead after last mention" "temp"
      (3312860 'move' resizeThreshold[3312858] resizeThreshold[3312718])
      (3312863 '.=' this[3312708] resizeThreshold[3288776] resizeThreshold[3312858])
    }
    const-val call_tmp[3312876]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3313283]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3313309]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3313313 'move' coerce_tmp[3313309](9219407 '.v' this[3312708] resizeThreshold[3288776]))
    const-val default_arg_rehashHelpers[3313316]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5588829]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[8454279]:owned chpl__rehashHelpers?[1941081] "temp"
    (8454283 'move' i__retArg[8454279](8454281 'set reference' ret_tmp[5588829]))
    const-val ret[8454286]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[8454288]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[8454290]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (8454293 call init=[1949636] tmp[8454290] nil[32])
    (8454296 'move' rehashHelpers[8454288] tmp[8454290])
    (8454299 'move' ret[8454286] rehashHelpers[8454288])
    (8454302 '=' i__retArg[8454279] ret[8454286])
    (5588832 'move' default_arg_rehashHelpers[3313316] ret_tmp[5588829])
    (3313286 call init[3310554] initTemp[3313283] coerce_tmp[3313309] initialCapacity[3312724] default_arg_rehashHelpers[3313316])
    (3312878 'move' call_tmp[3312876] initTemp[3313283])
    val table[3312908]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    (3312910 'move' table[3312908] call_tmp[3312876])
    (3312914 '.=' this[3312708] table[3288779] table[3312908])
    (3312965 return _void[46])
  }
  function map(string,shared Module(real(32)),false)[3391831].init[3391230](ref arg this[3391234]:map(string,shared Module(real(32)),false)[3391831], const in arg resizeThreshold[3391244]:real(64)[13], const in arg initialCapacity[3391250]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3391259 call _checkKeyAndValType[3391494])
    const-val tmp[3391293]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3391840]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3391846 'move' coerce_tmp[3391840](3391842 'cast' real(64)[13] 0))
    const-val call_tmp[7498197]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498199 'move' call_tmp[7498197](7498201 '<=' resizeThreshold[3391244] coerce_tmp[3391840]))
    (3391295 'move' tmp[3391293] call_tmp[7498197])
    val tmp[3391314]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3391316]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3391318]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3391320 'move' call_tmp[3391318] tmp[3391293])
    (3391325 'move' tmp[3391316] call_tmp[3391318])
    if tmp[3391316]
    {
      (3391332 'move' tmp[3391314] 1)
    }
    {
      const-val tmp[3391338]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3391340]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3391852]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3391858 'move' coerce_tmp[3391852](3391854 'cast' real(64)[13] 1))
      const-val call_tmp[7498327]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7498329 'move' call_tmp[7498327](7498331 '>=' resizeThreshold[3391244] coerce_tmp[3391852]))
      (3391342 'move' call_tmp[3391340] call_tmp[7498327])
      (3391348 'move' tmp[3391338] call_tmp[3391340])
      (3391353 'move' tmp[3391314] tmp[3391338])
    }
    const-val call_tmp[3391359]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3391361 'move' call_tmp[3391359] tmp[3391314])
    if call_tmp[3391359]
    {
      (3391369 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3391373]:real(64)[13] "dead after last mention" "temp"
      (3391375 'move' resizeThreshold[3391373] 0.5)
      (3391378 '.=' this[3391234] resizeThreshold[3391813] resizeThreshold[3391373])
    }
    {
      val resizeThreshold[3391384]:real(64)[13] "dead after last mention" "temp"
      (3391386 'move' resizeThreshold[3391384] resizeThreshold[3391244])
      (3391389 '.=' this[3391234] resizeThreshold[3391813] resizeThreshold[3391384])
    }
    const-val call_tmp[3391402]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3391875]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3395921]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3395925 'move' coerce_tmp[3395921](9221577 '.v' this[3391234] resizeThreshold[3391813]))
    const-val default_arg_rehashHelpers[3395965]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589746]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[8463345]:owned chpl__rehashHelpers?[1941081] "temp"
    (8463349 'move' i__retArg[8463345](8463347 'set reference' ret_tmp[5589746]))
    const-val ret[8463352]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[8463354]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[8463356]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (8463359 call init=[1949636] tmp[8463356] nil[32])
    (8463362 'move' rehashHelpers[8463354] tmp[8463356])
    (8463365 'move' ret[8463352] rehashHelpers[8463354])
    (8463368 '=' i__retArg[8463345] ret[8463352])
    (5589749 'move' default_arg_rehashHelpers[3395965] ret_tmp[5589746])
    (3391878 call init[3391886] initTemp[3391875] coerce_tmp[3395921] initialCapacity[3391250] default_arg_rehashHelpers[3395965])
    (3391404 'move' call_tmp[3391402] initTemp[3391875])
    val table[3391434]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    (3391436 'move' table[3391434] call_tmp[3391402])
    (3391440 '.=' this[3391234] table[3391816] table[3391434])
    (3391491 return _void[46])
  }
  function map(string,Module(real(64)),false)[3405184].init[3827947](ref arg this[3827951]:map(string,Module(real(64)),false)[3405184], const in arg resizeThreshold[3827961]:real(64)[13], const in arg initialCapacity[3827967]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3827976 call _checkKeyAndValType[3828211])
    const-val tmp[3828010]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3828527]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3828533 'move' coerce_tmp[3828527](3828529 'cast' real(64)[13] 0))
    const-val call_tmp[7498207]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498209 'move' call_tmp[7498207](7498211 '<=' resizeThreshold[3827961] coerce_tmp[3828527]))
    (3828012 'move' tmp[3828010] call_tmp[7498207])
    val tmp[3828031]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3828033]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3828035]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828037 'move' call_tmp[3828035] tmp[3828010])
    (3828042 'move' tmp[3828033] call_tmp[3828035])
    if tmp[3828033]
    {
      (3828049 'move' tmp[3828031] 1)
    }
    {
      const-val tmp[3828055]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3828057]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3828539]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3828545 'move' coerce_tmp[3828539](3828541 'cast' real(64)[13] 1))
      const-val call_tmp[7498337]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7498339 'move' call_tmp[7498337](7498341 '>=' resizeThreshold[3827961] coerce_tmp[3828539]))
      (3828059 'move' call_tmp[3828057] call_tmp[7498337])
      (3828065 'move' tmp[3828055] call_tmp[3828057])
      (3828070 'move' tmp[3828031] tmp[3828055])
    }
    const-val call_tmp[3828076]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828078 'move' call_tmp[3828076] tmp[3828031])
    if call_tmp[3828076]
    {
      (3828086 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3828090]:real(64)[13] "dead after last mention" "temp"
      (3828092 'move' resizeThreshold[3828090] 0.5)
      (3828095 '.=' this[3827951] resizeThreshold[3405166] resizeThreshold[3828090])
    }
    {
      val resizeThreshold[3828101]:real(64)[13] "dead after last mention" "temp"
      (3828103 'move' resizeThreshold[3828101] resizeThreshold[3827961])
      (3828106 '.=' this[3827951] resizeThreshold[3405166] resizeThreshold[3828101])
    }
    const-val call_tmp[3828119]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3828552]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3832514]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3832518 'move' coerce_tmp[3832514](9231188 '.v' this[3827951] resizeThreshold[3405166]))
    const-val default_arg_rehashHelpers[3832558]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5595767]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[8573843]:owned chpl__rehashHelpers?[1941081] "temp"
    (8573847 'move' i__retArg[8573843](8573845 'set reference' ret_tmp[5595767]))
    const-val ret[8573850]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[8573852]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[8573854]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (8573857 call init=[1949636] tmp[8573854] nil[32])
    (8573860 'move' rehashHelpers[8573852] tmp[8573854])
    (8573863 'move' ret[8573850] rehashHelpers[8573852])
    (8573866 '=' i__retArg[8573843] ret[8573850])
    (5595770 'move' default_arg_rehashHelpers[3832558] ret_tmp[5595767])
    (3828555 call init[3828563] initTemp[3828552] coerce_tmp[3832514] initialCapacity[3827967] default_arg_rehashHelpers[3832558])
    (3828121 'move' call_tmp[3828119] initTemp[3828552])
    val table[3828151]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    (3828153 'move' table[3828151] call_tmp[3828119])
    (3828157 '.=' this[3827951] table[3405169] table[3828151])
    (3828208 return _void[46])
  }
  function map(string,string,false)[3283386].init[3339157](ref arg this[3339161]:map(string,string,false)[3283386], const in arg resizeThreshold[3339173]:real(64)[13], const in arg initialCapacity[3339179]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    (3339190 call _checkKeyAndValType[3339425])
    const-val tmp[3339224]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3339715]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3339721 'move' coerce_tmp[3339715](3339717 'cast' real(64)[13] 0))
    const-val call_tmp[7498177]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498179 'move' call_tmp[7498177](7498181 '<=' resizeThreshold[3339173] coerce_tmp[3339715]))
    (3339226 'move' tmp[3339224] call_tmp[7498177])
    val tmp[3339245]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3339247]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3339249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339251 'move' call_tmp[3339249] tmp[3339224])
    (3339256 'move' tmp[3339247] call_tmp[3339249])
    if tmp[3339247]
    {
      (3339263 'move' tmp[3339245] 1)
    }
    {
      const-val tmp[3339269]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3339271]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3339727]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3339733 'move' coerce_tmp[3339727](3339729 'cast' real(64)[13] 1))
      const-val call_tmp[7498307]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7498309 'move' call_tmp[7498307](7498311 '>=' resizeThreshold[3339173] coerce_tmp[3339727]))
      (3339273 'move' call_tmp[3339271] call_tmp[7498307])
      (3339279 'move' tmp[3339269] call_tmp[3339271])
      (3339284 'move' tmp[3339245] tmp[3339269])
    }
    const-val call_tmp[3339290]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339292 'move' call_tmp[3339290] tmp[3339245])
    if call_tmp[3339290]
    {
      (3339300 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3339304]:real(64)[13] "dead after last mention" "temp"
      (3339306 'move' resizeThreshold[3339304] 0.5)
      (3339309 '.=' this[3339161] resizeThreshold[3283368] resizeThreshold[3339304])
    }
    {
      val resizeThreshold[3339315]:real(64)[13] "dead after last mention" "temp"
      (3339317 'move' resizeThreshold[3339315] resizeThreshold[3339173])
      (3339320 '.=' this[3339161] resizeThreshold[3283368] resizeThreshold[3339315])
    }
    const-val call_tmp[3339333]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3339740]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3343702]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3343706 'move' coerce_tmp[3343702](9219856 '.v' this[3339161] resizeThreshold[3283368]))
    const-val default_arg_rehashHelpers[3343746]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589230]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[8458041]:owned chpl__rehashHelpers?[1941081] "temp"
    (8458045 'move' i__retArg[8458041](8458043 'set reference' ret_tmp[5589230]))
    const-val ret[8458048]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[8458050]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[8458052]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (8458055 call init=[1949636] tmp[8458052] nil[32])
    (8458058 'move' rehashHelpers[8458050] tmp[8458052])
    (8458061 'move' ret[8458048] rehashHelpers[8458050])
    (8458064 '=' i__retArg[8458041] ret[8458048])
    (5589233 'move' default_arg_rehashHelpers[3343746] ret_tmp[5589230])
    (3339743 call init[3339751] initTemp[3339740] coerce_tmp[3343702] initialCapacity[3339179] default_arg_rehashHelpers[3343746])
    (3339335 'move' call_tmp[3339333] initTemp[3339740])
    val table[3339365]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    (3339367 'move' table[3339365] call_tmp[3339333])
    (3339371 '.=' this[3339161] table[3283371] table[3339365])
    (3339422 return _void[46])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].init[3354216](ref arg this[3354220]:map(string,owned ModuleSpecification?,false)[3283686], const in arg resizeThreshold[3354232]:real(64)[13], const in arg initialCapacity[3354238]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    (3354249 call _checkKeyAndValType[3354484])
    const-val tmp[3354283]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3354800]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3354806 'move' coerce_tmp[3354800](3354802 'cast' real(64)[13] 0))
    const-val call_tmp[7498187]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498189 'move' call_tmp[7498187](7498191 '<=' resizeThreshold[3354232] coerce_tmp[3354800]))
    (3354285 'move' tmp[3354283] call_tmp[7498187])
    val tmp[3354304]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3354306]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3354308]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3354310 'move' call_tmp[3354308] tmp[3354283])
    (3354315 'move' tmp[3354306] call_tmp[3354308])
    if tmp[3354306]
    {
      (3354322 'move' tmp[3354304] 1)
    }
    {
      const-val tmp[3354328]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3354330]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3354812]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3354818 'move' coerce_tmp[3354812](3354814 'cast' real(64)[13] 1))
      const-val call_tmp[7498317]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7498319 'move' call_tmp[7498317](7498321 '>=' resizeThreshold[3354232] coerce_tmp[3354812]))
      (3354332 'move' call_tmp[3354330] call_tmp[7498317])
      (3354338 'move' tmp[3354328] call_tmp[3354330])
      (3354343 'move' tmp[3354304] tmp[3354328])
    }
    const-val call_tmp[3354349]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3354351 'move' call_tmp[3354349] tmp[3354304])
    if call_tmp[3354349]
    {
      (3354359 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3354363]:real(64)[13] "dead after last mention" "temp"
      (3354365 'move' resizeThreshold[3354363] 0.5)
      (3354368 '.=' this[3354220] resizeThreshold[3283668] resizeThreshold[3354363])
    }
    {
      val resizeThreshold[3354374]:real(64)[13] "dead after last mention" "temp"
      (3354376 'move' resizeThreshold[3354374] resizeThreshold[3354232])
      (3354379 '.=' this[3354220] resizeThreshold[3283668] resizeThreshold[3354374])
    }
    const-val call_tmp[3354392]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3354825]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3358787]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3358791 'move' coerce_tmp[3358787](9220497 '.v' this[3354220] resizeThreshold[3283668]))
    const-val default_arg_rehashHelpers[3358831]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589424]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[8460310]:owned chpl__rehashHelpers?[1941081] "temp"
    (8460314 'move' i__retArg[8460310](8460312 'set reference' ret_tmp[5589424]))
    const-val ret[8460317]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[8460319]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[8460321]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (8460324 call init=[1949636] tmp[8460321] nil[32])
    (8460327 'move' rehashHelpers[8460319] tmp[8460321])
    (8460330 'move' ret[8460317] rehashHelpers[8460319])
    (8460333 '=' i__retArg[8460310] ret[8460317])
    (5589427 'move' default_arg_rehashHelpers[3358831] ret_tmp[5589424])
    (3354828 call init[3354836] initTemp[3354825] coerce_tmp[3358787] initialCapacity[3354238] default_arg_rehashHelpers[3358831])
    (3354394 'move' call_tmp[3354392] initTemp[3354825])
    val table[3354424]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    (3354426 'move' table[3354424] call_tmp[3354392])
    (3354430 '.=' this[3354220] table[3283671] table[3354424])
    (3354481 return _void[46])
  }
  function map(string,int(64),false)[3288794].init=[3309171](ref arg this[3309175]:map(string,int(64),false)[3288794], ref arg other[3309177]:map(string,int(64),false)[3288794]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val resizeThreshold[3309538]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[3310533]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3310537 'move' coerce_tmp[3310533](9219348 '.v' other[3309177] resizeThreshold[3288776]))
    (5632648 '=' resizeThreshold[3309538] coerce_tmp[3310533])
    (3309540 'noop')
    (3309543 '.=' this[3309175] resizeThreshold[3288776] resizeThreshold[3309538])
    const-val call_tmp[3309569]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3310544]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3310924]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3310928 'move' coerce_tmp[3310924](9219351 '.v' this[3309175] resizeThreshold[3288776]))
    const-val default_arg_rehashHelpers[3310995]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5588823]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[8454251]:owned chpl__rehashHelpers?[1941081] "temp"
    (8454255 'move' i__retArg[8454251](8454253 'set reference' ret_tmp[5588823]))
    const-val ret[8454258]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[8454260]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[8454262]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (8454265 call init=[1949636] tmp[8454262] nil[32])
    (8454268 'move' rehashHelpers[8454260] tmp[8454262])
    (8454271 'move' ret[8454258] rehashHelpers[8454260])
    (8454274 '=' i__retArg[8454251] ret[8454258])
    (5588826 'move' default_arg_rehashHelpers[3310995] ret_tmp[5588823])
    (3310547 call init[3310554] initTemp[3310544] coerce_tmp[3310924] 16 default_arg_rehashHelpers[3310995])
    (3309571 'move' call_tmp[3309569] initTemp[3310544])
    val table[3309600]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    (3309602 'move' table[3309600] call_tmp[3309569])
    (3309606 '.=' this[3309175] table[3288779] table[3309600])
    ref call_tmp[8452510]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
    (8452512 'move' call_tmp[8452510](8452514 '.' other[3309177] table[3288779]))
    ref call_tmp[8452520]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
    (8452522 'move' call_tmp[8452520](8452524 '.' other[3309177] table[3288779]))
    const-val call_tmp_F0_size[9110503]:int(64)[10] "temp"
    const-val coerce_tmp[6384818]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6384820 'move' coerce_tmp[6384818](9219357 '.v' call_tmp[8452510] tableSize[3288824]))
    const-val ret_tmp_F0_size[9110511]:int(64)[10] "temp"
    const-val _ir_F0_size[9110619]:int(64)[10] "temp"
    (7613823 'move' _ir_F0_size[9110619] coerce_tmp[6384818])
    (9110517 'move' ret_tmp_F0_size[9110511] _ir_F0_size[9110619])
    (9110509 'move' call_tmp_F0_size[9110503] ret_tmp_F0_size[9110511])
    const-val _ic__F0_size[9003347]:int(64)[10] "temp"
    const-val tmp[7890845]:int(64)[10] "temp"
    (7890847 'move' tmp[7890845] call_tmp_F0_size[9110503])
    (7890852 'move' _ic__F0_size[9003347] tmp[7890845])
    const-val call_tmp_F0_low[9194116]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9194118]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9194132]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9194134]:int(64)[10] "temp"
    const-val size[6384849]:int(64)[10] "temp"
    (6384851 'move' size[6384849] _ic__F0_size[9003347])
    val inlineImm[7433479]:int(64)[10] "temp"
    (7433482 'move' inlineImm[7433479] 0)
    const-val _ir_F0_low[9194660]:int(64)[10] "temp"
    const-val _ir_F1_count[9194662]:int(64)[10] "temp"
    (7433493 'move' _ir_F0_low[9194660] inlineImm[7433479])
    (7433497 'move' _ir_F1_count[9194662] size[6384849])
    (9194140 'move' ret_tmp_F0_low[9194132] _ir_F0_low[9194660])
    (9194145 'move' ret_tmp_F1_count[9194134] _ir_F1_count[9194662])
    (9194124 'move' call_tmp_F0_low[9194116] ret_tmp_F0_low[9194132])
    (9194129 'move' call_tmp_F1_count[9194118] ret_tmp_F1_count[9194134])
    const-val _ic__F0_low[9005241]:int(64)[10] "temp"
    const-val _ic__F1_count[9005243]:int(64)[10] "temp"
    const-val tmp[7437112]:int(64)[10] "temp"
    (7437114 'move' tmp[7437112] call_tmp_F0_low[9194116])
    (7437119 'move' _ic__F0_low[9005241] tmp[7437112])
    const-val tmp[7437123]:int(64)[10] "temp"
    (7437125 'move' tmp[7437123] call_tmp_F1_count[9194118])
    (7437130 'move' _ic__F1_count[9005243] tmp[7437123])
    const-val call_tmp_F0_low[9078443]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9078445]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9078459]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9078461]:int(64)[10] "temp"
    const-val low[6384894]:int(64)[10] "temp"
    (6384896 'move' low[6384894] _ic__F0_low[9005241])
    const-val count[6384901]:int(64)[10] "temp"
    (6384903 'move' count[6384901] _ic__F1_count[9005243])
    const-val _ir_F0_low[9078963]:int(64)[10] "temp"
    const-val _ir_F1_count[9078965]:int(64)[10] "temp"
    (7438869 'move' _ir_F0_low[9078963] low[6384894])
    (7438873 'move' _ir_F1_count[9078965] count[6384901])
    (9078467 'move' ret_tmp_F0_low[9078459] _ir_F0_low[9078963])
    (9078472 'move' ret_tmp_F1_count[9078461] _ir_F1_count[9078965])
    (9078451 'move' call_tmp_F0_low[9078443] ret_tmp_F0_low[9078459])
    (9078456 'move' call_tmp_F1_count[9078445] ret_tmp_F1_count[9078461])
    const-val _ic__F0_low[9015637]:int(64)[10] "temp"
    const-val _ic__F1_count[9015639]:int(64)[10] "temp"
    const-val tmp[7442001]:int(64)[10] "temp"
    (7442003 'move' tmp[7442001] call_tmp_F0_low[9078443])
    (7442008 'move' _ic__F0_low[9015637] tmp[7442001])
    const-val tmp[7442012]:int(64)[10] "temp"
    (7442014 'move' tmp[7442012] call_tmp_F1_count[9078445])
    (7442019 'move' _ic__F1_count[9015639] tmp[7442012])
    const-val call_tmp[6653915]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6654490]:int(64)[10] "temp"
    (6654495 'move' count[6654490] _ic__F1_count[9015639])
    val inlineImm[7322097]:int(64)[10] "temp"
    (7322100 'move' inlineImm[7322097] 0)
    const-val tmp[7322103]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7322105 'move' tmp[7322103](7322107 '<' count[6654490] inlineImm[7322097]))
    (6653917 'move' call_tmp[6653915] tmp[7322103])
    if call_tmp[6653915]
    {
      (6653937 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6653940]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6654497]:int(64)[10] "temp"
    (6654502 'move' low[6654497] _ic__F0_low[9015637])
    (6653942 'move' start[6653940] low[6654497])
    val tmp[6653947]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[6653951]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6654504]:int(64)[10] "temp"
    (6654509 'move' count[6654504] _ic__F1_count[9015639])
    val inlineImm[7391033]:int(64)[10] "temp"
    (7391036 'move' inlineImm[7391033] 0)
    const-val call_tmp[7391039]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7391041 'move' call_tmp[7391039](7391043 '==' count[6654504] inlineImm[7391033]))
    (6653953 'move' call_tmp[6653951] call_tmp[7391039])
    if call_tmp[6653951]
    {
      const-val tmp[6653964]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6653966]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6654511]:int(64)[10] "temp"
      (6654516 'move' low[6654511] _ic__F0_low[9015637])
      (6653968 'move' call_tmp[6653966](6653970 'cast' uint(64)[86] low[6654511]))
      const-val call_tmp[6653973]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7443468]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7443470 'move' call_tmp[7443468](7443472 '-' call_tmp[6653966] 1))
      (6653982 'move' call_tmp[6653973] call_tmp[7443468])
      const-val call_tmp[7444698]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444700 'move' call_tmp[7444698](7444702 'cast' int(64)[10] call_tmp[6653973]))
      (6653989 'move' tmp[6653964] call_tmp[7444698])
      (6653994 'move' tmp[6653947] tmp[6653964])
    }
    {
      const-val call_tmp[6654007]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6654525]:int(64)[10] "temp"
      (6654530 'move' count[6654525] _ic__F1_count[9015639])
      const-val call_tmp[7447738]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7447740 'move' call_tmp[7447738](7447742 '-' count[6654525] 1))
      (6654009 'move' call_tmp[6654007] call_tmp[7447738])
      const-val call_tmp[6654014]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6654532]:int(64)[10] "temp"
      (6654537 'move' low[6654532] _ic__F0_low[9015637])
      const-val call_tmp[7375135]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7375137 'move' call_tmp[7375135](7375139 '+' low[6654532] call_tmp[6654007]))
      (6654016 'move' call_tmp[6654014] call_tmp[7375135])
      (6654027 'move' tmp[6653947] call_tmp[6654014])
    }
    const-val call_tmp_F0_low[9168716]:int(64)[10] "temp"
    const-val call_tmp_F1_high[9168718]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9168732]:int(64)[10] "temp"
    const-val ret_tmp_F1_high[9168734]:int(64)[10] "temp"
    const-val _ir_F0_low[9170324]:int(64)[10] "temp"
    const-val _ir_F1_high[9170326]:int(64)[10] "temp"
    (7451082 'move' _ir_F0_low[9170324] start[6653940])
    (7451086 'move' _ir_F1_high[9170326] tmp[6653947])
    (9168740 'move' ret_tmp_F0_low[9168732] _ir_F0_low[9170324])
    (9168745 'move' ret_tmp_F1_high[9168734] _ir_F1_high[9170326])
    (9168724 'move' call_tmp_F0_low[9168716] ret_tmp_F0_low[9168732])
    (9168729 'move' call_tmp_F1_high[9168718] ret_tmp_F1_high[9168734])
    const-val _ic__F0_low[9019120]:int(64)[10] "temp"
    const-val _ic__F1_high[9019122]:int(64)[10] "temp"
    const-val tmp[7460378]:int(64)[10] "temp"
    (7460380 'move' tmp[7460378] call_tmp_F0_low[9168716])
    (7460385 'move' _ic__F0_low[9019120] tmp[7460378])
    const-val tmp[7460389]:int(64)[10] "temp"
    (7460391 'move' tmp[7460389] call_tmp_F1_high[9168718])
    (7460396 'move' _ic__F1_high[9019122] tmp[7460389])
    val i[6654064]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6654068 'move' i[6654064] 0)
    const-val default_arg_first[6654079]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6654081]:int(64)[10] "temp"
    (6654083 'move' low[6654081] _ic__F0_low[9019120])
    (6654088 'move' default_arg_first[6654079] low[6654081])
    const-val default_arg_last[6654093]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6654095]:int(64)[10] "temp"
    (6654097 'move' high[6654095] _ic__F1_high[9019122])
    (6654102 'move' default_arg_last[6654093] high[6654095])
    const-val low[6654111]:int(64)[10] "temp"
    (6654113 'move' low[6654111] _ic__F0_low[9019120])
    const-val high[6654118]:int(64)[10] "temp"
    (6654120 'move' high[6654118] _ic__F1_high[9019122])
    (6654128 call chpl_checkIfRangeIterWillOverflow[1518856] low[6654111] high[6654118] 1 default_arg_first[6654079] default_arg_last[6654093] 1)
    CForLoop[6654135] hazard
    {
      const-val _yieldedIndex[6654171]:int(64)[10] "temp"
      (6654173 'move' _yieldedIndex[6654171] i[6654064])
      const-val _yieldedIndex[6654206]:int(64)[10] "temp"
      (6654488 'move' _yieldedIndex[6654206] _yieldedIndex[6654171])
      const-val _yieldedIndex[6654218]:int(64)[10] "temp"
      (6654220 'move' _yieldedIndex[6654218] _yieldedIndex[6654206])
      const-val _yieldedIndex[6654234]:int(64)[10] "temp"
      (6654236 'move' _yieldedIndex[6654234] _yieldedIndex[6654218])
      const-val _yieldedIndex[6654250]:int(64)[10] "temp"
      (6654252 'move' _yieldedIndex[6654250] _yieldedIndex[6654234])
      const-val slot[6654256]:int(64)[10] "const" "index var" "insert auto destroy"
      (6654258 'move' slot[6654256] _yieldedIndex[6654250])
      const-val call_tmp[6654261]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
      (6654263 'move' call_tmp[6654261] call_tmp[8452520])
      const-val call_tmp[6654266]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[8454423]:chpl__hashtable(string,int(64))[3288849] "temp"
      (8454427 'move' i_this[8454423](8454425 'set reference' call_tmp[6654261]))
      val coerce_tmp[8454430]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454432 'move' coerce_tmp[8454430](8454434 '.v' i_this[8454423] table[3288827]))
      ref call_tmp[8454437]:chpl_TableEntry(string,int(64))[3288881] "dead after last mention" "maybe param" "temp"
      (8454439 'move' call_tmp[8454437](8454441 'array_get' coerce_tmp[8454430] _yieldedIndex[6654250]))
      const-val coerce_tmp[8454444]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454446 'move' coerce_tmp[8454444](8454448 '.v' call_tmp[8454437] status[3288873]))
      const-val call_tmp[8454451]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8454453 'move' call_tmp[8454451](8454455 '==' coerce_tmp[8454444] full[264674]))
      (6654268 'move' call_tmp[6654266] call_tmp[8454451])
      if call_tmp[6654266]
      {
        val call_tmp[6654283]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
        (6654285 'move' call_tmp[6654283] call_tmp[8452520])
        ref i_this[8453037]:chpl__hashtable(string,int(64))[3288849] "temp"
        (8453041 'move' i_this[8453037](8453039 'set reference' call_tmp[6654283]))
        val coerce_tmp[6654297]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6654299 'move' coerce_tmp[6654297](9219363 '.v' i_this[8453037] table[3288827]))
        ref call_tmp[8453323]:chpl_TableEntry(string,int(64))[3288881] "dead after last mention" "maybe param" "temp"
        (8453325 'move' call_tmp[8453323](8453327 'array_get' coerce_tmp[6654297] slot[6654256]))
        ref call_tmp[8453672]:string[244] "dead after last mention" "maybe param" "temp"
        (8453674 'move' call_tmp[8453672](8453676 '.' call_tmp[8453323] key[3288877]))
        ref call_tmp[8452530]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
        (8452532 'move' call_tmp[8452530](8452534 '.' this[3309175] table[3288779]))
        const-val call_tmp[6654335]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
        const-val ret_tmp[6654337]:(bool,int(64))[3257010] "temp"
        (6654340 call findAvailableSlot[3301272] call_tmp[8452530] call_tmp[8453672] ret_tmp[6654337])
        (6654344 'move' call_tmp[6654335] ret_tmp[6654337])
        val tmp_x1[9107838]:int(64)[10] "temp"
        (9107849 'move' tmp_x1[9107838](9107847 '.v' call_tmp[6654335] x1[3257008]))
        1
        const-val slot[6654360]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[6654362]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (6654364 'move' coerce_tmp[6654362] tmp_x1[9107838])
        (6654368 '=' slot[6654360] coerce_tmp[6654362])
        (6654371 'noop')
        ref call_tmp[8452540]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
        (8452542 'move' call_tmp[8452540](8452544 '.' other[3309177] table[3288779]))
        const-val call_tmp[6654379]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
        const-val ret_tmp[6654381]:(bool,int(64))[3257010] "temp"
        (6654384 call findFullSlot[3312245] call_tmp[8452540] call_tmp[8453672] ret_tmp[6654381])
        (6654388 'move' call_tmp[6654379] ret_tmp[6654381])
        val tmp_x1[9107854]:int(64)[10] "temp"
        (9107865 'move' tmp_x1[9107854](9107863 '.v' call_tmp[6654379] x1[3257008]))
        1
        const-val slot2[6654404]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[6654406]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (6654408 'move' coerce_tmp[6654406] tmp_x1[9107854])
        (6654412 '=' slot2[6654404] coerce_tmp[6654406])
        (6654415 'noop')
        ref call_tmp[8452550]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
        (8452552 'move' call_tmp[8452550](8452554 '.' this[3309175] table[3288779]))
        ref call_tmp[8452560]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
        (8452562 'move' call_tmp[8452560](8452564 '.' other[3309177] table[3288779]))
        val coerce_tmp[6654439]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6654441 'move' coerce_tmp[6654439](9219380 '.v' call_tmp[8452560] table[3288827]))
        ref call_tmp[8453333]:chpl_TableEntry(string,int(64))[3288881] "dead after last mention" "maybe param" "temp"
        (8453335 'move' call_tmp[8453333](8453337 'array_get' coerce_tmp[6654439] slot2[6654404]))
        const-val _formal_tmp_in_key[6654458]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
        val ret[7613009]:string[244] "dead after last mention" "RVV" "temp"
        const-val tmp[7613011]:string[244] "dead after last mention" "temp"
        (7613014 call init=[21330] tmp[7613011] call_tmp[8453672])
        (7613017 'move' ret[7613009] tmp[7613011])
        (6654460 'move' _formal_tmp_in_key[6654458] ret[7613009])
        const-val coerce_tmp[6654466]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6654468 'move' coerce_tmp[6654466](9219386 '.v' call_tmp[8453333] val[3288879]))
        (6654473 call fillSlot[3308541] call_tmp[8452550] slot[6654360] _formal_tmp_in_key[6654458] coerce_tmp[6654466])
      }
      {
        const-val low[6654137]:int(64)[10] "temp"
        (6654139 'move' low[6654137] _ic__F0_low[9019120])
        (6654144 '=' i[6654064] low[6654137])
      }
      {
        const-val high[6654148]:int(64)[10] "temp"
        (6654150 'move' high[6654148] _ic__F1_high[9019122])
        (6654155 '<=' i[6654064] high[6654148])
      }
      {
        (6654163 '+=' i[6654064] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6654197]
    label _endchpl_direct_counted_range_iter_helper[6654202]
    label _endchpl_direct_counted_range_iter[6384985]
    label _end_allSlots[6384990]
    label _endallSlots[6384995]
    label _endkeys[6055362]
    (3310143 return _void[46])
  }
  function map(string,string,false)[3283386].init=[3381988](ref arg this[3381992]:map(string,string,false)[3283386], ref arg other[3381994]:map(string,string,false)[3283386]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val resizeThreshold[3382355]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[3383183]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3383187 'move' coerce_tmp[3383183](9221505 '.v' other[3381994] resizeThreshold[3283368]))
    (5635511 '=' resizeThreshold[3382355] coerce_tmp[3383183])
    (3382357 'noop')
    (3382360 '.=' this[3381992] resizeThreshold[3283368] resizeThreshold[3382355])
    const-val call_tmp[3382386]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3383194]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3383219]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3383223 'move' coerce_tmp[3383219](9221508 '.v' this[3381992] resizeThreshold[3283368]))
    const-val default_arg_rehashHelpers[3383253]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589236]:owned chpl__rehashHelpers?[1941081] "temp"
    ref i__retArg[8458069]:owned chpl__rehashHelpers?[1941081] "temp"
    (8458073 'move' i__retArg[8458069](8458071 'set reference' ret_tmp[5589236]))
    const-val ret[8458076]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "RVV" "maybe param" "temp"
    const-val rehashHelpers[8458078]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[8458080]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "temp"
    (8458083 call init=[1949636] tmp[8458080] nil[32])
    (8458086 'move' rehashHelpers[8458078] tmp[8458080])
    (8458089 'move' ret[8458076] rehashHelpers[8458078])
    (8458092 '=' i__retArg[8458069] ret[8458076])
    (5589239 'move' default_arg_rehashHelpers[3383253] ret_tmp[5589236])
    (3383197 call init[3339751] initTemp[3383194] coerce_tmp[3383219] 16 default_arg_rehashHelpers[3383253])
    (3382388 'move' call_tmp[3382386] initTemp[3383194])
    val table[3382417]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    (3382419 'move' table[3382417] call_tmp[3382386])
    (3382423 '.=' this[3381992] table[3283371] table[3382417])
    ref call_tmp[8458235]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458237 'move' call_tmp[8458235](8458239 '.' other[3381994] table[3283371]))
    ref call_tmp[8458245]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458247 'move' call_tmp[8458245](8458249 '.' other[3381994] table[3283371]))
    const-val call_tmp_F0_size[9110487]:int(64)[10] "temp"
    const-val coerce_tmp[6060851]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6060853 'move' coerce_tmp[6060851](9221514 '.v' call_tmp[8458235] tableSize[3283416]))
    const-val ret_tmp_F0_size[9110495]:int(64)[10] "temp"
    const-val _ir_F0_size[9110615]:int(64)[10] "temp"
    (7613805 'move' _ir_F0_size[9110615] coerce_tmp[6060851])
    (9110501 'move' ret_tmp_F0_size[9110495] _ir_F0_size[9110615])
    (9110493 'move' call_tmp_F0_size[9110487] ret_tmp_F0_size[9110495])
    const-val _ic__F0_size[9003326]:int(64)[10] "temp"
    const-val tmp[7890793]:int(64)[10] "temp"
    (7890795 'move' tmp[7890793] call_tmp_F0_size[9110487])
    (7890800 'move' _ic__F0_size[9003326] tmp[7890793])
    const-val call_tmp_F0_low[9193668]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9193670]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9193684]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9193686]:int(64)[10] "temp"
    const-val size[6060882]:int(64)[10] "temp"
    (6060884 'move' size[6060882] _ic__F0_size[9003326])
    val inlineImm[7433101]:int(64)[10] "temp"
    (7433104 'move' inlineImm[7433101] 0)
    const-val _ir_F0_low[9194548]:int(64)[10] "temp"
    const-val _ir_F1_count[9194550]:int(64)[10] "temp"
    (7433115 'move' _ir_F0_low[9194548] inlineImm[7433101])
    (7433119 'move' _ir_F1_count[9194550] size[6060882])
    (9193692 'move' ret_tmp_F0_low[9193684] _ir_F0_low[9194548])
    (9193697 'move' ret_tmp_F1_count[9193686] _ir_F1_count[9194550])
    (9193676 'move' call_tmp_F0_low[9193668] ret_tmp_F0_low[9193684])
    (9193681 'move' call_tmp_F1_count[9193670] ret_tmp_F1_count[9193686])
    const-val _ic__F0_low[9004919]:int(64)[10] "temp"
    const-val _ic__F1_count[9004921]:int(64)[10] "temp"
    const-val tmp[7436230]:int(64)[10] "temp"
    (7436232 'move' tmp[7436230] call_tmp_F0_low[9193668])
    (7436237 'move' _ic__F0_low[9004919] tmp[7436230])
    const-val tmp[7436241]:int(64)[10] "temp"
    (7436243 'move' tmp[7436241] call_tmp_F1_count[9193670])
    (7436248 'move' _ic__F1_count[9004921] tmp[7436241])
    const-val call_tmp_F0_low[9077675]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9077677]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9077691]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9077693]:int(64)[10] "temp"
    const-val low[6060927]:int(64)[10] "temp"
    (6060929 'move' low[6060927] _ic__F0_low[9004919])
    const-val count[6060934]:int(64)[10] "temp"
    (6060936 'move' count[6060934] _ic__F1_count[9004921])
    const-val _ir_F0_low[9078771]:int(64)[10] "temp"
    const-val _ir_F1_count[9078773]:int(64)[10] "temp"
    (7438297 'move' _ir_F0_low[9078771] low[6060927])
    (7438301 'move' _ir_F1_count[9078773] count[6060934])
    (9077699 'move' ret_tmp_F0_low[9077691] _ir_F0_low[9078771])
    (9077704 'move' ret_tmp_F1_count[9077693] _ir_F1_count[9078773])
    (9077683 'move' call_tmp_F0_low[9077675] ret_tmp_F0_low[9077691])
    (9077688 'move' call_tmp_F1_count[9077677] ret_tmp_F1_count[9077693])
    const-val _ic__F0_low[9015013]:int(64)[10] "temp"
    const-val _ic__F1_count[9015015]:int(64)[10] "temp"
    const-val tmp[7440363]:int(64)[10] "temp"
    (7440365 'move' tmp[7440363] call_tmp_F0_low[9077675])
    (7440370 'move' _ic__F0_low[9015013] tmp[7440363])
    const-val tmp[7440374]:int(64)[10] "temp"
    (7440376 'move' tmp[7440374] call_tmp_F1_count[9077677])
    (7440381 'move' _ic__F1_count[9015015] tmp[7440374])
    const-val call_tmp[6393880]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6394457]:int(64)[10] "temp"
    (6394462 'move' count[6394457] _ic__F1_count[9015015])
    val inlineImm[7321887]:int(64)[10] "temp"
    (7321890 'move' inlineImm[7321887] 0)
    const-val tmp[7321893]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7321895 'move' tmp[7321893](7321897 '<' count[6394457] inlineImm[7321887]))
    (6393882 'move' call_tmp[6393880] tmp[7321893])
    if call_tmp[6393880]
    {
      (6393902 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6393905]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6394464]:int(64)[10] "temp"
    (6394469 'move' low[6394464] _ic__F0_low[9015013])
    (6393907 'move' start[6393905] low[6394464])
    val tmp[6393912]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[6393916]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6394471]:int(64)[10] "temp"
    (6394476 'move' count[6394471] _ic__F1_count[9015015])
    val inlineImm[7390643]:int(64)[10] "temp"
    (7390646 'move' inlineImm[7390643] 0)
    const-val call_tmp[7390649]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7390651 'move' call_tmp[7390649](7390653 '==' count[6394471] inlineImm[7390643]))
    (6393918 'move' call_tmp[6393916] call_tmp[7390649])
    if call_tmp[6393916]
    {
      const-val tmp[6393929]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6393931]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6394478]:int(64)[10] "temp"
      (6394483 'move' low[6394478] _ic__F0_low[9015013])
      (6393933 'move' call_tmp[6393931](6393935 'cast' uint(64)[86] low[6394478]))
      const-val call_tmp[6393938]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7443348]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7443350 'move' call_tmp[7443348](7443352 '-' call_tmp[6393931] 1))
      (6393947 'move' call_tmp[6393938] call_tmp[7443348])
      const-val call_tmp[7444558]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444560 'move' call_tmp[7444558](7444562 'cast' int(64)[10] call_tmp[6393938]))
      (6393954 'move' tmp[6393929] call_tmp[7444558])
      (6393959 'move' tmp[6393912] tmp[6393929])
    }
    {
      const-val call_tmp[6393972]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6394492]:int(64)[10] "temp"
      (6394497 'move' count[6394492] _ic__F1_count[9015015])
      const-val call_tmp[7447588]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7447590 'move' call_tmp[7447588](7447592 '-' count[6394492] 1))
      (6393974 'move' call_tmp[6393972] call_tmp[7447588])
      const-val call_tmp[6393979]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6394499]:int(64)[10] "temp"
      (6394504 'move' low[6394499] _ic__F0_low[9015013])
      const-val call_tmp[7374985]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7374987 'move' call_tmp[7374985](7374989 '+' low[6394499] call_tmp[6393972]))
      (6393981 'move' call_tmp[6393979] call_tmp[7374985])
      (6393992 'move' tmp[6393912] call_tmp[6393979])
    }
    const-val call_tmp_F0_low[9168140]:int(64)[10] "temp"
    const-val call_tmp_F1_high[9168142]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9168156]:int(64)[10] "temp"
    const-val ret_tmp_F1_high[9168158]:int(64)[10] "temp"
    const-val _ir_F0_low[9170180]:int(64)[10] "temp"
    const-val _ir_F1_high[9170182]:int(64)[10] "temp"
    (7450686 'move' _ir_F0_low[9170180] start[6393905])
    (7450690 'move' _ir_F1_high[9170182] tmp[6393912])
    (9168164 'move' ret_tmp_F0_low[9168156] _ir_F0_low[9170180])
    (9168169 'move' ret_tmp_F1_high[9168158] _ir_F1_high[9170182])
    (9168148 'move' call_tmp_F0_low[9168140] ret_tmp_F0_low[9168156])
    (9168153 'move' call_tmp_F1_high[9168142] ret_tmp_F1_high[9168158])
    const-val _ic__F0_low[9018797]:int(64)[10] "temp"
    const-val _ic__F1_high[9018799]:int(64)[10] "temp"
    const-val tmp[7459244]:int(64)[10] "temp"
    (7459246 'move' tmp[7459244] call_tmp_F0_low[9168140])
    (7459251 'move' _ic__F0_low[9018797] tmp[7459244])
    const-val tmp[7459255]:int(64)[10] "temp"
    (7459257 'move' tmp[7459255] call_tmp_F1_high[9168142])
    (7459262 'move' _ic__F1_high[9018799] tmp[7459255])
    val i[6394029]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6394033 'move' i[6394029] 0)
    const-val default_arg_first[6394044]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6394046]:int(64)[10] "temp"
    (6394048 'move' low[6394046] _ic__F0_low[9018797])
    (6394053 'move' default_arg_first[6394044] low[6394046])
    const-val default_arg_last[6394058]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6394060]:int(64)[10] "temp"
    (6394062 'move' high[6394060] _ic__F1_high[9018799])
    (6394067 'move' default_arg_last[6394058] high[6394060])
    const-val low[6394076]:int(64)[10] "temp"
    (6394078 'move' low[6394076] _ic__F0_low[9018797])
    const-val high[6394083]:int(64)[10] "temp"
    (6394085 'move' high[6394083] _ic__F1_high[9018799])
    (6394093 call chpl_checkIfRangeIterWillOverflow[1518856] low[6394076] high[6394083] 1 default_arg_first[6394044] default_arg_last[6394058] 1)
    CForLoop[6394100] hazard
    {
      const-val _yieldedIndex[6394136]:int(64)[10] "temp"
      (6394138 'move' _yieldedIndex[6394136] i[6394029])
      const-val _yieldedIndex[6394171]:int(64)[10] "temp"
      (6394455 'move' _yieldedIndex[6394171] _yieldedIndex[6394136])
      const-val _yieldedIndex[6394183]:int(64)[10] "temp"
      (6394185 'move' _yieldedIndex[6394183] _yieldedIndex[6394171])
      const-val _yieldedIndex[6394199]:int(64)[10] "temp"
      (6394201 'move' _yieldedIndex[6394199] _yieldedIndex[6394183])
      const-val _yieldedIndex[6394215]:int(64)[10] "temp"
      (6394217 'move' _yieldedIndex[6394215] _yieldedIndex[6394199])
      const-val slot[6394221]:int(64)[10] "const" "index var" "insert auto destroy"
      (6394223 'move' slot[6394221] _yieldedIndex[6394215])
      const-val call_tmp[6394226]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
      (6394228 'move' call_tmp[6394226] call_tmp[8458245])
      const-val call_tmp[6394231]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[8458740]:chpl__hashtable(string,string)[3283441] "temp"
      (8458744 'move' i_this[8458740](8458742 'set reference' call_tmp[6394226]))
      val coerce_tmp[8458747]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8458749 'move' coerce_tmp[8458747](8458751 '.v' i_this[8458740] table[3283419]))
      ref call_tmp[8458754]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "maybe param" "temp"
      (8458756 'move' call_tmp[8458754](8458758 'array_get' coerce_tmp[8458747] _yieldedIndex[6394215]))
      const-val coerce_tmp[8458761]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8458763 'move' coerce_tmp[8458761](8458765 '.v' call_tmp[8458754] status[3283465]))
      const-val call_tmp[8458768]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8458770 'move' call_tmp[8458768](8458772 '==' coerce_tmp[8458761] full[264674]))
      (6394233 'move' call_tmp[6394231] call_tmp[8458768])
      if call_tmp[6394231]
      {
        val call_tmp[6394248]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
        (6394250 'move' call_tmp[6394248] call_tmp[8458245])
        ref i_this[8457372]:chpl__hashtable(string,string)[3283441] "temp"
        (8457376 'move' i_this[8457372](8457374 'set reference' call_tmp[6394248]))
        val coerce_tmp[6394262]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6394264 'move' coerce_tmp[6394262](9221520 '.v' i_this[8457372] table[3283419]))
        ref call_tmp[8457922]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "maybe param" "temp"
        (8457924 'move' call_tmp[8457922](8457926 'array_get' coerce_tmp[6394262] slot[6394221]))
        ref call_tmp[8458862]:string[244] "dead after last mention" "maybe param" "temp"
        (8458864 'move' call_tmp[8458862](8458866 '.' call_tmp[8457922] key[3283469]))
        ref call_tmp[8458275]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
        (8458277 'move' call_tmp[8458275](8458279 '.' this[3381992] table[3283371]))
        const-val call_tmp[6394300]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
        const-val ret_tmp[6394302]:(bool,int(64))[3257010] "temp"
        (6394305 call findAvailableSlot[3349576] call_tmp[8458275] call_tmp[8458862] ret_tmp[6394302])
        (6394309 'move' call_tmp[6394300] ret_tmp[6394302])
        val tmp_x1[9107770]:int(64)[10] "temp"
        (9107781 'move' tmp_x1[9107770](9107779 '.v' call_tmp[6394300] x1[3257008]))
        1
        const-val slot[6394325]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[6394327]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (6394329 'move' coerce_tmp[6394327] tmp_x1[9107770])
        (6394333 '=' slot[6394325] coerce_tmp[6394327])
        (6394336 'noop')
        ref call_tmp[8458285]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
        (8458287 'move' call_tmp[8458285](8458289 '.' other[3381994] table[3283371]))
        const-val call_tmp[6394344]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
        const-val ret_tmp[6394346]:(bool,int(64))[3257010] "temp"
        (6394349 call findFullSlot[3383343] call_tmp[8458285] call_tmp[8458862] ret_tmp[6394346])
        (6394353 'move' call_tmp[6394344] ret_tmp[6394346])
        val tmp_x1[9107786]:int(64)[10] "temp"
        (9107797 'move' tmp_x1[9107786](9107795 '.v' call_tmp[6394344] x1[3257008]))
        1
        const-val slot2[6394369]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[6394371]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (6394373 'move' coerce_tmp[6394371] tmp_x1[9107786])
        (6394377 '=' slot2[6394369] coerce_tmp[6394371])
        (6394380 'noop')
        ref call_tmp[8458295]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
        (8458297 'move' call_tmp[8458295](8458299 '.' this[3381992] table[3283371]))
        ref call_tmp[8458305]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
        (8458307 'move' call_tmp[8458305](8458309 '.' other[3381994] table[3283371]))
        val coerce_tmp[6394404]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6394406 'move' coerce_tmp[6394404](9221537 '.v' call_tmp[8458305] table[3283419]))
        ref call_tmp[8457932]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "maybe param" "temp"
        (8457934 'move' call_tmp[8457932](8457936 'array_get' coerce_tmp[6394404] slot2[6394369]))
        ref call_tmp[8458936]:string[244] "dead after last mention" "maybe param" "temp"
        (8458938 'move' call_tmp[8458936](8458940 '.' call_tmp[8457932] val[3283471]))
        const-val _formal_tmp_in_key[6394423]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
        val ret[7612971]:string[244] "dead after last mention" "RVV" "temp"
        const-val tmp[7612973]:string[244] "dead after last mention" "temp"
        (7612976 call init=[21330] tmp[7612973] call_tmp[8458862])
        (7612979 'move' ret[7612971] tmp[7612973])
        (6394425 'move' _formal_tmp_in_key[6394423] ret[7612971])
        const-val _formal_tmp_in_val[6394431]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
        val ret[7612990]:string[244] "dead after last mention" "RVV" "temp"
        const-val tmp[7612992]:string[244] "dead after last mention" "temp"
        (7612995 call init=[21330] tmp[7612992] call_tmp[8458936])
        (7612998 'move' ret[7612990] tmp[7612992])
        (6394433 'move' _formal_tmp_in_val[6394431] ret[7612990])
        (6394440 call fillSlot[3350263] call_tmp[8458295] slot[6394325] _formal_tmp_in_key[6394423] _formal_tmp_in_val[6394431])
      }
      {
        const-val low[6394102]:int(64)[10] "temp"
        (6394104 'move' low[6394102] _ic__F0_low[9018797])
        (6394109 '=' i[6394029] low[6394102])
      }
      {
        const-val high[6394113]:int(64)[10] "temp"
        (6394115 'move' high[6394113] _ic__F1_high[9018799])
        (6394120 '<=' i[6394029] high[6394113])
      }
      {
        (6394128 '+=' i[6394029] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6394162]
    label _endchpl_direct_counted_range_iter_helper[6394167]
    label _endchpl_direct_counted_range_iter[6061091]
    label _end_allSlots[6061096]
    label _endallSlots[6061101]
    label _endkeys[6061106]
    (3382960 return _void[46])
  }
  function map(string,string,false)[3283386].clear[3344292](ref arg this[3344296]:map(string,string,false)[3283386]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[8458155]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458157 'move' call_tmp[8458155](8458159 '.' this[3344296] table[3283371]))
    const-val call_tmp_F0_size[9110455]:int(64)[10] "temp"
    const-val coerce_tmp[6056288]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6056290 'move' coerce_tmp[6056288](9219905 '.v' call_tmp[8458155] tableSize[3283416]))
    const-val ret_tmp_F0_size[9110463]:int(64)[10] "temp"
    const-val _ir_F0_size[9110607]:int(64)[10] "temp"
    (7613769 'move' _ir_F0_size[9110607] coerce_tmp[6056288])
    (9110469 'move' ret_tmp_F0_size[9110463] _ir_F0_size[9110607])
    (9110461 'move' call_tmp_F0_size[9110455] ret_tmp_F0_size[9110463])
    const-val _ic__F0_size[9003284]:int(64)[10] "temp"
    const-val tmp[7890689]:int(64)[10] "temp"
    (7890691 'move' tmp[7890689] call_tmp_F0_size[9110455])
    (7890696 'move' _ic__F0_size[9003284] tmp[7890689])
    const-val call_tmp_F0_low[9194148]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9194150]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9194164]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9194166]:int(64)[10] "temp"
    const-val size[6387332]:int(64)[10] "temp"
    (6387337 'move' size[6387332] _ic__F0_size[9003284])
    val inlineImm[7433506]:int(64)[10] "temp"
    (7433509 'move' inlineImm[7433506] 0)
    const-val _ir_F0_low[9194668]:int(64)[10] "temp"
    const-val _ir_F1_count[9194670]:int(64)[10] "temp"
    (7433520 'move' _ir_F0_low[9194668] inlineImm[7433506])
    (7433524 'move' _ir_F1_count[9194670] size[6387332])
    (9194172 'move' ret_tmp_F0_low[9194164] _ir_F0_low[9194668])
    (9194177 'move' ret_tmp_F1_count[9194166] _ir_F1_count[9194670])
    (9194156 'move' call_tmp_F0_low[9194148] ret_tmp_F0_low[9194164])
    (9194161 'move' call_tmp_F1_count[9194150] ret_tmp_F1_count[9194166])
    const-val _ic__F0_low[9005264]:int(64)[10] "temp"
    const-val _ic__F1_count[9005266]:int(64)[10] "temp"
    const-val tmp[7437175]:int(64)[10] "temp"
    (7437177 'move' tmp[7437175] call_tmp_F0_low[9194148])
    (7437182 'move' _ic__F0_low[9005264] tmp[7437175])
    const-val tmp[7437186]:int(64)[10] "temp"
    (7437188 'move' tmp[7437186] call_tmp_F1_count[9194150])
    (7437193 'move' _ic__F1_count[9005266] tmp[7437186])
    const-val call_tmp_F0_low[9078475]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9078477]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9078491]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9078493]:int(64)[10] "temp"
    const-val low[6386797]:int(64)[10] "temp"
    (6386799 'move' low[6386797] _ic__F0_low[9005264])
    const-val count[6386804]:int(64)[10] "temp"
    (6386806 'move' count[6386804] _ic__F1_count[9005266])
    const-val _ir_F0_low[9078971]:int(64)[10] "temp"
    const-val _ir_F1_count[9078973]:int(64)[10] "temp"
    (7438891 'move' _ir_F0_low[9078971] low[6386797])
    (7438895 'move' _ir_F1_count[9078973] count[6386804])
    (9078499 'move' ret_tmp_F0_low[9078491] _ir_F0_low[9078971])
    (9078504 'move' ret_tmp_F1_count[9078493] _ir_F1_count[9078973])
    (9078483 'move' call_tmp_F0_low[9078475] ret_tmp_F0_low[9078491])
    (9078488 'move' call_tmp_F1_count[9078477] ret_tmp_F1_count[9078493])
    const-val _ic__F0_low[9015663]:int(64)[10] "temp"
    const-val _ic__F1_count[9015665]:int(64)[10] "temp"
    const-val tmp[7442064]:int(64)[10] "temp"
    (7442066 'move' tmp[7442064] call_tmp_F0_low[9078475])
    (7442071 'move' _ic__F0_low[9015663] tmp[7442064])
    const-val tmp[7442075]:int(64)[10] "temp"
    (7442077 'move' tmp[7442075] call_tmp_F1_count[9078477])
    (7442082 'move' _ic__F1_count[9015665] tmp[7442075])
    const-val call_tmp[6386855]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6386857]:int(64)[10] "temp"
    (6386859 'move' count[6386857] _ic__F1_count[9015665])
    val inlineImm[7321752]:int(64)[10] "temp"
    (7321755 'move' inlineImm[7321752] 0)
    const-val tmp[7321758]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7321760 'move' tmp[7321758](7321762 '<' count[6386857] inlineImm[7321752]))
    (6386864 'move' call_tmp[6386855] tmp[7321758])
    if call_tmp[6386855]
    {
      (6386884 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6386887]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6386889]:int(64)[10] "temp"
    (6386891 'move' low[6386889] _ic__F0_low[9015663])
    (6386896 'move' start[6386887] low[6386889])
    val tmp[6386901]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[6386905]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6386907]:int(64)[10] "temp"
    (6386909 'move' count[6386907] _ic__F1_count[9015665])
    val inlineImm[7390478]:int(64)[10] "temp"
    (7390481 'move' inlineImm[7390478] 0)
    const-val call_tmp[7390484]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7390486 'move' call_tmp[7390484](7390488 '==' count[6386907] inlineImm[7390478]))
    (6386914 'move' call_tmp[6386905] call_tmp[7390484])
    if call_tmp[6386905]
    {
      const-val tmp[6386925]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6386927]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6386929]:int(64)[10] "temp"
      (6386931 'move' low[6386929] _ic__F0_low[9015663])
      (6386936 'move' call_tmp[6386927](6386938 'cast' uint(64)[86] low[6386929]))
      const-val call_tmp[6386941]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7443278]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7443280 'move' call_tmp[7443278](7443282 '-' call_tmp[6386927] 1))
      (6386950 'move' call_tmp[6386941] call_tmp[7443278])
      const-val call_tmp[7444468]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444470 'move' call_tmp[7444468](7444472 'cast' int(64)[10] call_tmp[6386941]))
      (6386957 'move' tmp[6386925] call_tmp[7444468])
      (6386962 'move' tmp[6386901] tmp[6386925])
    }
    {
      const-val call_tmp[6386982]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6386984]:int(64)[10] "temp"
      (6386986 'move' count[6386984] _ic__F1_count[9015665])
      const-val call_tmp[7447518]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7447520 'move' call_tmp[7447518](7447522 '-' count[6386984] 1))
      (6386991 'move' call_tmp[6386982] call_tmp[7447518])
      const-val call_tmp[6386996]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6386998]:int(64)[10] "temp"
      (6387000 'move' low[6386998] _ic__F0_low[9015663])
      const-val call_tmp[7374915]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7374917 'move' call_tmp[7374915](7374919 '+' low[6386998] call_tmp[6386982]))
      (6387005 'move' call_tmp[6386996] call_tmp[7374915])
      (6387016 'move' tmp[6386901] call_tmp[6386996])
    }
    const-val call_tmp_F0_low[9167852]:int(64)[10] "temp"
    const-val call_tmp_F1_high[9167854]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9167868]:int(64)[10] "temp"
    const-val ret_tmp_F1_high[9167870]:int(64)[10] "temp"
    const-val _ir_F0_low[9170108]:int(64)[10] "temp"
    const-val _ir_F1_high[9170110]:int(64)[10] "temp"
    (7450488 'move' _ir_F0_low[9170108] start[6386887])
    (7450492 'move' _ir_F1_high[9170110] tmp[6386901])
    (9167876 'move' ret_tmp_F0_low[9167868] _ir_F0_low[9170108])
    (9167881 'move' ret_tmp_F1_high[9167870] _ir_F1_high[9170110])
    (9167860 'move' call_tmp_F0_low[9167852] ret_tmp_F0_low[9167868])
    (9167865 'move' call_tmp_F1_high[9167854] ret_tmp_F1_high[9167870])
    const-val _ic__F0_low[9018626]:int(64)[10] "temp"
    const-val _ic__F1_high[9018628]:int(64)[10] "temp"
    const-val tmp[7458677]:int(64)[10] "temp"
    (7458679 'move' tmp[7458677] call_tmp_F0_low[9167852])
    (7458684 'move' _ic__F0_low[9018626] tmp[7458677])
    const-val tmp[7458688]:int(64)[10] "temp"
    (7458690 'move' tmp[7458688] call_tmp_F1_high[9167854])
    (7458695 'move' _ic__F1_high[9018628] tmp[7458688])
    val i[6387053]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6387057 'move' i[6387053] 0)
    const-val default_arg_first[6387068]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6387070]:int(64)[10] "temp"
    (6387072 'move' low[6387070] _ic__F0_low[9018626])
    (6387077 'move' default_arg_first[6387068] low[6387070])
    const-val default_arg_last[6387082]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6387084]:int(64)[10] "temp"
    (6387086 'move' high[6387084] _ic__F1_high[9018628])
    (6387091 'move' default_arg_last[6387082] high[6387084])
    const-val low[6387100]:int(64)[10] "temp"
    (6387102 'move' low[6387100] _ic__F0_low[9018626])
    const-val high[6387107]:int(64)[10] "temp"
    (6387109 'move' high[6387107] _ic__F1_high[9018628])
    (6387117 call chpl_checkIfRangeIterWillOverflow[1518856] low[6387100] high[6387107] 1 default_arg_first[6387068] default_arg_last[6387082] 1)
    CForLoop[6387124]
    {
      const-val _yieldedIndex[6387160]:int(64)[10] "temp"
      (6387162 'move' _yieldedIndex[6387160] i[6387053])
      const-val _yieldedIndex[6387176]:int(64)[10] "temp"
      (6387178 'move' _yieldedIndex[6387176] _yieldedIndex[6387160])
      const-val _yieldedIndex[6387192]:int(64)[10] "temp"
      (6387194 'move' _yieldedIndex[6387192] _yieldedIndex[6387176])
      const-val _yieldedIndex[6387243]:int(64)[10] "temp"
      (6387330 'move' _yieldedIndex[6387243] _yieldedIndex[6387192])
      const-val _yieldedIndex[6387255]:int(64)[10] "temp"
      (6387257 'move' _yieldedIndex[6387255] _yieldedIndex[6387243])
      const-val slot[6387261]:int(64)[10] "const" "index var" "insert auto destroy"
      (6387263 'move' slot[6387261] _yieldedIndex[6387255])
      ref call_tmp[8458255]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
      (8458257 'move' call_tmp[8458255](8458259 '.' this[3344296] table[3283371]))
      const-val call_tmp[6387274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[8458673]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8458675 'move' coerce_tmp[8458673](8458677 '.v' call_tmp[8458255] table[3283419]))
      ref call_tmp[8458680]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "maybe param" "temp"
      (8458682 'move' call_tmp[8458680](8458684 'array_get' coerce_tmp[8458673] slot[6387261]))
      const-val coerce_tmp[8458687]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8458689 'move' coerce_tmp[8458687](8458691 '.v' call_tmp[8458680] status[3283465]))
      const-val call_tmp[8458694]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8458696 'move' call_tmp[8458694](8458698 '==' coerce_tmp[8458687] full[264674]))
      (6387276 'move' call_tmp[6387274] call_tmp[8458694])
      const-val call_tmp[6387282]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6387284 'move' call_tmp[6387282] call_tmp[6387274])
      if call_tmp[6387282]
      {
        const-val key[6387289]:string[244] "dead at end of block" "insert auto destroy" "split inited"
        const-val val[6387293]:string[244] "dead at end of block" "insert auto destroy" "split inited"
        ref call_tmp[8458265]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
        (8458267 'move' call_tmp[8458265](8458269 '.' this[3344296] table[3283371]))
        val _formal_tmp_out_key[6387304]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
        val _formal_tmp_out_val[6387306]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
        (6387309 call clearSlot[3345500] call_tmp[8458265] slot[6387261] _formal_tmp_out_key[6387304] _formal_tmp_out_val[6387306])
        (6387314 'move' key[6387289] _formal_tmp_out_key[6387304])
        (6387317 'move' val[6387293] _formal_tmp_out_val[6387306])
        ref i_x[7347046]:string[244] "temp"
        (7347050 'move' i_x[7347046](7347048 'set reference' val[6387293]))
        (7347054 call deinit[21354] i_x[7347046])
        ref i_x[7347058]:string[244] "temp"
        (7347062 'move' i_x[7347058](7347060 'set reference' key[6387289]))
        (7347066 call deinit[21354] i_x[7347058])
      }
      {
        const-val low[6387126]:int(64)[10] "temp"
        (6387128 'move' low[6387126] _ic__F0_low[9018626])
        (6387133 '=' i[6387053] low[6387126])
      }
      {
        const-val high[6387137]:int(64)[10] "temp"
        (6387139 'move' high[6387137] _ic__F1_high[9018628])
        (6387144 '<=' i[6387053] high[6387137])
      }
      {
        (6387152 '+=' i[6387053] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6387224]
    label _endchpl_direct_counted_range_iter_helper[6387229]
    label _endchpl_direct_counted_range_iter[6387234]
    label _end_allSlots[6387239]
    label _endallSlots[6056334]
    ref call_tmp[8458165]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458167 'move' call_tmp[8458165](8458169 '.' this[3344296] table[3283371]))
    (3344457 call maybeShrinkAfterRemove[3345869] call_tmp[8458165])
    (3344458 return _void[46])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].clear[3359377](ref arg this[3359381]:map(string,owned ModuleSpecification?,false)[3283686]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[8460393]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
    (8460395 'move' call_tmp[8460393](8460397 '.' this[3359381] table[3283671]))
    const-val call_tmp_F0_size[9110471]:int(64)[10] "temp"
    const-val coerce_tmp[6057933]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6057935 'move' coerce_tmp[6057933](9220546 '.v' call_tmp[8460393] tableSize[3283716]))
    const-val ret_tmp_F0_size[9110479]:int(64)[10] "temp"
    const-val _ir_F0_size[9110611]:int(64)[10] "temp"
    (7613787 'move' _ir_F0_size[9110611] coerce_tmp[6057933])
    (9110485 'move' ret_tmp_F0_size[9110479] _ir_F0_size[9110611])
    (9110477 'move' call_tmp_F0_size[9110471] ret_tmp_F0_size[9110479])
    const-val _ic__F0_size[9003305]:int(64)[10] "temp"
    const-val tmp[7890741]:int(64)[10] "temp"
    (7890743 'move' tmp[7890741] call_tmp_F0_size[9110471])
    (7890748 'move' _ic__F0_size[9003305] tmp[7890741])
    const-val call_tmp_F0_low[9194180]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9194182]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9194196]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9194198]:int(64)[10] "temp"
    const-val size[6390024]:int(64)[10] "temp"
    (6390029 'move' size[6390024] _ic__F0_size[9003305])
    val inlineImm[7433533]:int(64)[10] "temp"
    (7433536 'move' inlineImm[7433533] 0)
    const-val _ir_F0_low[9194676]:int(64)[10] "temp"
    const-val _ir_F1_count[9194678]:int(64)[10] "temp"
    (7433547 'move' _ir_F0_low[9194676] inlineImm[7433533])
    (7433551 'move' _ir_F1_count[9194678] size[6390024])
    (9194204 'move' ret_tmp_F0_low[9194196] _ir_F0_low[9194676])
    (9194209 'move' ret_tmp_F1_count[9194198] _ir_F1_count[9194678])
    (9194188 'move' call_tmp_F0_low[9194180] ret_tmp_F0_low[9194196])
    (9194193 'move' call_tmp_F1_count[9194182] ret_tmp_F1_count[9194198])
    const-val _ic__F0_low[9005287]:int(64)[10] "temp"
    const-val _ic__F1_count[9005289]:int(64)[10] "temp"
    const-val tmp[7437238]:int(64)[10] "temp"
    (7437240 'move' tmp[7437238] call_tmp_F0_low[9194180])
    (7437245 'move' _ic__F0_low[9005287] tmp[7437238])
    const-val tmp[7437249]:int(64)[10] "temp"
    (7437251 'move' tmp[7437249] call_tmp_F1_count[9194182])
    (7437256 'move' _ic__F1_count[9005289] tmp[7437249])
    const-val call_tmp_F0_low[9078507]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9078509]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9078523]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9078525]:int(64)[10] "temp"
    const-val low[6389489]:int(64)[10] "temp"
    (6389491 'move' low[6389489] _ic__F0_low[9005287])
    const-val count[6389496]:int(64)[10] "temp"
    (6389498 'move' count[6389496] _ic__F1_count[9005289])
    const-val _ir_F0_low[9078979]:int(64)[10] "temp"
    const-val _ir_F1_count[9078981]:int(64)[10] "temp"
    (7438913 'move' _ir_F0_low[9078979] low[6389489])
    (7438917 'move' _ir_F1_count[9078981] count[6389496])
    (9078531 'move' ret_tmp_F0_low[9078523] _ir_F0_low[9078979])
    (9078536 'move' ret_tmp_F1_count[9078525] _ir_F1_count[9078981])
    (9078515 'move' call_tmp_F0_low[9078507] ret_tmp_F0_low[9078523])
    (9078520 'move' call_tmp_F1_count[9078509] ret_tmp_F1_count[9078525])
    const-val _ic__F0_low[9015689]:int(64)[10] "temp"
    const-val _ic__F1_count[9015691]:int(64)[10] "temp"
    const-val tmp[7442127]:int(64)[10] "temp"
    (7442129 'move' tmp[7442127] call_tmp_F0_low[9078507])
    (7442134 'move' _ic__F0_low[9015689] tmp[7442127])
    const-val tmp[7442138]:int(64)[10] "temp"
    (7442140 'move' tmp[7442138] call_tmp_F1_count[9078509])
    (7442145 'move' _ic__F1_count[9015691] tmp[7442138])
    const-val call_tmp[6389547]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6389549]:int(64)[10] "temp"
    (6389551 'move' count[6389549] _ic__F1_count[9015691])
    val inlineImm[7321812]:int(64)[10] "temp"
    (7321815 'move' inlineImm[7321812] 0)
    const-val tmp[7321818]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7321820 'move' tmp[7321818](7321822 '<' count[6389549] inlineImm[7321812]))
    (6389556 'move' call_tmp[6389547] tmp[7321818])
    if call_tmp[6389547]
    {
      (6389576 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6389579]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6389581]:int(64)[10] "temp"
    (6389583 'move' low[6389581] _ic__F0_low[9015689])
    (6389588 'move' start[6389579] low[6389581])
    val tmp[6389593]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[6389597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6389599]:int(64)[10] "temp"
    (6389601 'move' count[6389599] _ic__F1_count[9015691])
    val inlineImm[7390553]:int(64)[10] "temp"
    (7390556 'move' inlineImm[7390553] 0)
    const-val call_tmp[7390559]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7390561 'move' call_tmp[7390559](7390563 '==' count[6389599] inlineImm[7390553]))
    (6389606 'move' call_tmp[6389597] call_tmp[7390559])
    if call_tmp[6389597]
    {
      const-val tmp[6389617]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6389619]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6389621]:int(64)[10] "temp"
      (6389623 'move' low[6389621] _ic__F0_low[9015689])
      (6389628 'move' call_tmp[6389619](6389630 'cast' uint(64)[86] low[6389621]))
      const-val call_tmp[6389633]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7443308]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7443310 'move' call_tmp[7443308](7443312 '-' call_tmp[6389619] 1))
      (6389642 'move' call_tmp[6389633] call_tmp[7443308])
      const-val call_tmp[7444508]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444510 'move' call_tmp[7444508](7444512 'cast' int(64)[10] call_tmp[6389633]))
      (6389649 'move' tmp[6389617] call_tmp[7444508])
      (6389654 'move' tmp[6389593] tmp[6389617])
    }
    {
      const-val call_tmp[6389674]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6389676]:int(64)[10] "temp"
      (6389678 'move' count[6389676] _ic__F1_count[9015691])
      const-val call_tmp[7447548]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7447550 'move' call_tmp[7447548](7447552 '-' count[6389676] 1))
      (6389683 'move' call_tmp[6389674] call_tmp[7447548])
      const-val call_tmp[6389688]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6389690]:int(64)[10] "temp"
      (6389692 'move' low[6389690] _ic__F0_low[9015689])
      const-val call_tmp[7374945]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7374947 'move' call_tmp[7374945](7374949 '+' low[6389690] call_tmp[6389674]))
      (6389697 'move' call_tmp[6389688] call_tmp[7374945])
      (6389708 'move' tmp[6389593] call_tmp[6389688])
    }
    const-val call_tmp_F0_low[9167980]:int(64)[10] "temp"
    const-val call_tmp_F1_high[9167982]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9167996]:int(64)[10] "temp"
    const-val ret_tmp_F1_high[9167998]:int(64)[10] "temp"
    const-val _ir_F0_low[9170140]:int(64)[10] "temp"
    const-val _ir_F1_high[9170142]:int(64)[10] "temp"
    (7450576 'move' _ir_F0_low[9170140] start[6389579])
    (7450580 'move' _ir_F1_high[9170142] tmp[6389593])
    (9168004 'move' ret_tmp_F0_low[9167996] _ir_F0_low[9170140])
    (9168009 'move' ret_tmp_F1_high[9167998] _ir_F1_high[9170142])
    (9167988 'move' call_tmp_F0_low[9167980] ret_tmp_F0_low[9167996])
    (9167993 'move' call_tmp_F1_high[9167982] ret_tmp_F1_high[9167998])
    const-val _ic__F0_low[9018702]:int(64)[10] "temp"
    const-val _ic__F1_high[9018704]:int(64)[10] "temp"
    const-val tmp[7458929]:int(64)[10] "temp"
    (7458931 'move' tmp[7458929] call_tmp_F0_low[9167980])
    (7458936 'move' _ic__F0_low[9018702] tmp[7458929])
    const-val tmp[7458940]:int(64)[10] "temp"
    (7458942 'move' tmp[7458940] call_tmp_F1_high[9167982])
    (7458947 'move' _ic__F1_high[9018704] tmp[7458940])
    val i[6389745]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6389749 'move' i[6389745] 0)
    const-val default_arg_first[6389760]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6389762]:int(64)[10] "temp"
    (6389764 'move' low[6389762] _ic__F0_low[9018702])
    (6389769 'move' default_arg_first[6389760] low[6389762])
    const-val default_arg_last[6389774]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6389776]:int(64)[10] "temp"
    (6389778 'move' high[6389776] _ic__F1_high[9018704])
    (6389783 'move' default_arg_last[6389774] high[6389776])
    const-val low[6389792]:int(64)[10] "temp"
    (6389794 'move' low[6389792] _ic__F0_low[9018702])
    const-val high[6389799]:int(64)[10] "temp"
    (6389801 'move' high[6389799] _ic__F1_high[9018704])
    (6389809 call chpl_checkIfRangeIterWillOverflow[1518856] low[6389792] high[6389799] 1 default_arg_first[6389760] default_arg_last[6389774] 1)
    CForLoop[6389816] hazard
    {
      const-val _yieldedIndex[6389852]:int(64)[10] "temp"
      (6389854 'move' _yieldedIndex[6389852] i[6389745])
      const-val _yieldedIndex[6389868]:int(64)[10] "temp"
      (6389870 'move' _yieldedIndex[6389868] _yieldedIndex[6389852])
      const-val _yieldedIndex[6389884]:int(64)[10] "temp"
      (6389886 'move' _yieldedIndex[6389884] _yieldedIndex[6389868])
      const-val _yieldedIndex[6389935]:int(64)[10] "temp"
      (6390022 'move' _yieldedIndex[6389935] _yieldedIndex[6389884])
      const-val _yieldedIndex[6389947]:int(64)[10] "temp"
      (6389949 'move' _yieldedIndex[6389947] _yieldedIndex[6389935])
      const-val slot[6389953]:int(64)[10] "const" "index var" "insert auto destroy"
      (6389955 'move' slot[6389953] _yieldedIndex[6389947])
      ref call_tmp[8460473]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
      (8460475 'move' call_tmp[8460473](8460477 '.' this[3359381] table[3283671]))
      const-val call_tmp[6389966]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[8460716]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8460718 'move' coerce_tmp[8460716](8460720 '.v' call_tmp[8460473] table[3283719]))
      ref call_tmp[8460723]:chpl_TableEntry(string,owned ModuleSpecification?)[3283773] "dead after last mention" "maybe param" "temp"
      (8460725 'move' call_tmp[8460723](8460727 'array_get' coerce_tmp[8460716] slot[6389953]))
      const-val coerce_tmp[8460730]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8460732 'move' coerce_tmp[8460730](8460734 '.v' call_tmp[8460723] status[3283765]))
      const-val call_tmp[8460737]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8460739 'move' call_tmp[8460737](8460741 '==' coerce_tmp[8460730] full[264674]))
      (6389968 'move' call_tmp[6389966] call_tmp[8460737])
      const-val call_tmp[6389974]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6389976 'move' call_tmp[6389974] call_tmp[6389966])
      if call_tmp[6389974]
      {
        const-val key[6389981]:string[244] "dead at end of block" "insert auto destroy" "split inited"
        const-val val[6389985]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "split inited"
        ref call_tmp[8460483]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
        (8460485 'move' call_tmp[8460483](8460487 '.' this[3359381] table[3283671]))
        val _formal_tmp_out_key[6389996]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
        val _formal_tmp_out_val[6389998]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
        (6390001 call clearSlot[3360585] call_tmp[8460483] slot[6389953] _formal_tmp_out_key[6389996] _formal_tmp_out_val[6389998])
        (6390006 'move' key[6389981] _formal_tmp_out_key[6389996])
        (6390009 'move' val[6389985] _formal_tmp_out_val[6389998])
        (6390013 call chpl__autoDestroy[3373663] val[6389985])
        ref i_x[7347070]:string[244] "temp"
        (7347074 'move' i_x[7347070](7347072 'set reference' key[6389981]))
        (7347078 call deinit[21354] i_x[7347070])
      }
      {
        const-val low[6389818]:int(64)[10] "temp"
        (6389820 'move' low[6389818] _ic__F0_low[9018702])
        (6389825 '=' i[6389745] low[6389818])
      }
      {
        const-val high[6389829]:int(64)[10] "temp"
        (6389831 'move' high[6389829] _ic__F1_high[9018704])
        (6389836 '<=' i[6389745] high[6389829])
      }
      {
        (6389844 '+=' i[6389745] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6389916]
    label _endchpl_direct_counted_range_iter_helper[6389921]
    label _endchpl_direct_counted_range_iter[6389926]
    label _end_allSlots[6389931]
    label _endallSlots[6057979]
    ref call_tmp[8460403]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
    (8460405 'move' call_tmp[8460403](8460407 '.' this[3359381] table[3283671]))
    (3359542 call maybeShrinkAfterRemove[3363395] call_tmp[8460403])
    (3359543 return _void[46])
  }
  function map(string,int(64),false)[3288794].contains[3315108](const  ref arg this[3315112]:map(string,int(64),false)[3288794], const  ref arg k[3315119]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3315123]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[8452480]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
    (8452482 'move' call_tmp[8452480](8452484 '.' this[3315112] table[3288779]))
    const-val call_tmp[3315154]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588867]:(bool,int(64))[3257010] "temp"
    (3315162 call findFullSlot[3312245] call_tmp[8452480] k[3315119] ret_tmp[5588867])
    (5588870 'move' call_tmp[3315154] ret_tmp[5588867])
    val tmp_x0[9107342]:bool[19] "temp"
    (9107350 'move' tmp_x0[9107342](9107348 '.v' call_tmp[3315154] x0[3257006]))
    1
    const-val result[3315181]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315219]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315223 'move' coerce_tmp[3315219] tmp_x0[9107342])
    (5632718 '=' result[3315181] coerce_tmp[3315219])
    (3315183 'noop')
    (3315227 '=' ret[3315123] result[3315181])
    label _end_contains[3315196]
    (3315198 return ret[3315123])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].this[3396146](ref arg this[3396150]:map(string,owned ModuleSpecification?,false)[3283686], const  ref arg k[3396157]:string[244]) ref : _ref(owned ModuleSpecification?)[3283613] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref call_tmp[8460433]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
    (8460435 'move' call_tmp[8460433](8460437 '.' this[3396150] table[3283671]))
    const-val call_tmp[3396306]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589594]:(bool,int(64))[3257010] "temp"
    (3396314 call findAvailableSlot[3372171] call_tmp[8460433] k[3396157] ret_tmp[5589594])
    (5589597 'move' call_tmp[3396306] ret_tmp[5589594])
    val tmp_x1[9107522]:int(64)[10] "temp"
    (9107533 'move' tmp_x1[9107522](9107531 '.v' call_tmp[3396306] x1[3257008]))
    1
    const-val slot[3396333]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3397194]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3397198 'move' coerce_tmp[3397194] tmp_x1[9107522])
    (5635631 '=' slot[3396333] coerce_tmp[3397194])
    (3396335 'noop')
    ref call_tmp[8460443]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
    (8460445 'move' call_tmp[8460443](8460447 '.' this[3396150] table[3283671]))
    const-val call_tmp[3396347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[8460685]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8460687 'move' coerce_tmp[8460685](8460689 '.v' call_tmp[8460443] table[3283719]))
    ref call_tmp[8460692]:chpl_TableEntry(string,owned ModuleSpecification?)[3283773] "dead after last mention" "maybe param" "temp"
    (8460694 'move' call_tmp[8460692](8460696 'array_get' coerce_tmp[8460685] slot[3396333]))
    const-val coerce_tmp[8460699]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8460701 'move' coerce_tmp[8460699](8460703 '.v' call_tmp[8460692] status[3283765]))
    const-val call_tmp[8460706]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8460708 'move' call_tmp[8460706](8460710 '==' coerce_tmp[8460699] full[264674]))
    (3396349 'move' call_tmp[3396347] call_tmp[8460706])
    const-val call_tmp[3396357]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351481]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351483 'move' call_tmp[7351481](7351485 'u!' call_tmp[3396347]))
    (3396359 'move' call_tmp[3396357] call_tmp[7351481])
    const-val call_tmp[3396364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396366 'move' call_tmp[3396364] call_tmp[3396357])
    if call_tmp[3396364]
    {
      const-val val[3396373]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "maybe copy elided"
      (3397245 call init[3367941] val[3396373])
      ref call_tmp[8460453]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
      (8460455 'move' call_tmp[8460453](8460457 '.' this[3396150] table[3283671]))
      const-val _formal_tmp_in_key[3397207]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      val ret[7610719]:string[244] "dead after last mention" "RVV" "temp"
      const-val tmp[7610721]:string[244] "dead after last mention" "temp"
      (7610724 call init=[21330] tmp[7610721] k[3396157])
      (7610727 'move' ret[7610719] tmp[7610721])
      (3397212 'move' _formal_tmp_in_key[3397207] ret[7610719])
      const-val _formal_tmp_in_val[3397216]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (5635628 '=' _formal_tmp_in_val[3397216] val[3396373])
      (3397221 'noop')
      (3396399 call fillSlot[3372858] call_tmp[8460453] slot[3396333] _formal_tmp_in_key[3397207] _formal_tmp_in_val[3397216])
    }
    ref call_tmp[8460463]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
    (8460465 'move' call_tmp[8460463](8460467 '.' this[3396150] table[3283671]))
    val coerce_tmp[3397235]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3397239 'move' coerce_tmp[3397235](9221615 '.v' call_tmp[8460463] table[3283719]))
    ref call_tmp[8460121]:chpl_TableEntry(string,owned ModuleSpecification?)[3283773] "dead after last mention" "maybe param" "temp"
    (8460123 'move' call_tmp[8460121](8460125 'array_get' coerce_tmp[3397235] slot[3396333]))
    ref call_tmp[8460852]:owned ModuleSpecification?[3283604] "dead after last mention" "maybe param" "temp"
    (8460854 'move' call_tmp[8460852](8460856 '.' call_tmp[8460121] val[3283771]))
    label _end_this[3396441]
    (3396443 return call_tmp[8460852])
  }
  function map(string,shared Module(real(32)),false)[3391831].this[3406518](ref arg this[3406522]:map(string,shared Module(real(32)),false)[3391831], const  ref arg k[3406529]:string[244], ref arg error_out[5510739]:Error[85511]) ref : _ref(shared Module(real(32)))[1955047] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref call_tmp[8463940]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp"
    (8463942 'move' call_tmp[8463940](8463944 '.' this[3406522] table[3391816]))
    const-val call_tmp[3406588]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589812]:(bool,int(64))[3257010] "temp"
    (3406596 call findAvailableSlot[3400815] call_tmp[8463940] k[3406529] ret_tmp[5589812])
    (5589815 'move' call_tmp[3406588] ret_tmp[5589812])
    val tmp_x1[9107592]:int(64)[10] "temp"
    (9107603 'move' tmp_x1[9107592](9107601 '.v' call_tmp[3406588] x1[3257008]))
    1
    const-val slot[3406615]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3407469]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3407473 'move' coerce_tmp[3407469] tmp_x1[9107592])
    (5635799 '=' slot[3406615] coerce_tmp[3407469])
    (3406617 'noop')
    ref call_tmp[8463950]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp"
    (8463952 'move' call_tmp[8463950](8463954 '.' this[3406522] table[3391816]))
    const-val call_tmp[3406629]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[8464790]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8464792 'move' coerce_tmp[8464790](8464794 '.v' call_tmp[8463950] table[3392183]))
    ref call_tmp[8464797]:chpl_TableEntry(string,shared Module(real(32)))[3392238] "dead after last mention" "maybe param" "temp"
    (8464799 'move' call_tmp[8464797](8464801 'array_get' coerce_tmp[8464790] slot[3406615]))
    const-val coerce_tmp[8464804]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8464806 'move' coerce_tmp[8464804](8464808 '.v' call_tmp[8464797] status[3392230]))
    const-val call_tmp[8464811]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8464813 'move' call_tmp[8464811](8464815 '==' coerce_tmp[8464804] full[264674]))
    (3406631 'move' call_tmp[3406629] call_tmp[8464811])
    const-val call_tmp[3406639]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351499]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351501 'move' call_tmp[7351499](7351503 'u!' call_tmp[3406629]))
    (3406641 'move' call_tmp[3406639] call_tmp[7351499])
    const-val call_tmp[3406646]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406648 'move' call_tmp[3406646] call_tmp[3406639])
    if call_tmp[3406646]
    {
      const-val call_tmp[3406655]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[3407573]:KeyNotFoundError[352856] "dead after last mention" "temp"
      (3407575 'move' new_temp[3407573](3407560 call _new[3333701] k[3406529]))
      const-val initTemp[3407582]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3407585 call init[3333806] initTemp[3407582] new_temp[3407573])
      (3406657 'move' call_tmp[3406655] initTemp[3407582])
      val call_tmp[3406662]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3407599]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589158]:owned Error[1498203] "temp"
      ref i_x[8457010]:owned KeyNotFoundError[3334157] "temp"
      (8457014 'move' i_x[8457010](8457012 'set reference' call_tmp[3406655]))
      ref i__retArg[8457016]:owned Error[1498203] "temp"
      (8457020 'move' i__retArg[8457016](8457018 'set reference' ret_tmp[5589158]))
      val _formal_tmp_x[8457023]:owned KeyNotFoundError[3334157] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8457025 'move' _formal_tmp_x[8457023] i_x[8457010])
      const-val ret[8457028]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8457030]:owned KeyNotFoundError[3334157] "temp"
      (8457032 'move' i_this[8457030](8457034 'set reference' _formal_tmp_x[8457023]))
      val coerce_tmp[8457036]:KeyNotFoundError[352856] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8457038 'move' coerce_tmp[8457036](8457040 '.v' i_this[8457030] chpl_p[3334152]))
      val call_tmp[8457043]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8457045 'move' call_tmp[8457043](8457047 'cast' Error[85511] coerce_tmp[8457036]))
      val castPtr[8457050]:Error[85511] "dead at end of block" "insert auto destroy"
      (8457052 'move' castPtr[8457050] call_tmp[8457043])
      ref i_this[8457055]:owned KeyNotFoundError[3334157] "temp"
      (8457057 'move' i_this[8457055](8457059 'set reference' _formal_tmp_x[8457023]))
      val tmp[8457061]:KeyNotFoundError[352856] "temp"
      (8457063 'move' tmp[8457061](8457065 'cast' KeyNotFoundError[352856] nil[32]))
      (8457068 '.=' i_this[8457055] chpl_p[3334152] tmp[8457061])
      val coerce_tmp[8457072]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8457074 'move' coerce_tmp[8457072](8457076 'cast' RootClass[236] call_tmp[8457043]))
      const-val call_tmp[8457079]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8457081 'move' call_tmp[8457079](8457083 '==' coerce_tmp[8457072] nil[32]))
      if call_tmp[8457079]
      {
        (8457089 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8457092]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8457094]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8457097 call init[1499358] initTemp[8457094] castPtr[8457050])
      (8457100 'move' call_tmp[8457092] initTemp[8457094])
      (8457103 'move' ret[8457028] call_tmp[8457092])
      (8457107 call chpl__autoDestroy[4223706] _formal_tmp_x[8457023])
      (8457111 '=' i__retArg[8457016] ret[8457028])
      (5589161 'move' coerce_tmp[3407599] ret_tmp[5589158])
      const-val _formal_tmp_in_err[3407818]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3407823 'move' _formal_tmp_in_err[3407818] coerce_tmp[3407599])
      (3406664 'move' call_tmp[3406662](3406667 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3407818]))
      val castedError[5510742]:Error[85511] "temp"
      (5510748 'move' castedError[5510742] call_tmp[3406662])
      (5510750 '=' error_out[5510739] castedError[5510742])
      gotoErrorHandlingReturn _end_this[3406716] _end_this[3406716]
    }
    ref call_tmp[8463960]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp"
    (8463962 'move' call_tmp[8463960](8463964 '.' this[3406522] table[3391816]))
    val coerce_tmp[3407837]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3407841 'move' coerce_tmp[3407837](9222146 '.v' call_tmp[8463960] table[3392183]))
    ref call_tmp[8463156]:chpl_TableEntry(string,shared Module(real(32)))[3392238] "dead after last mention" "maybe param" "temp"
    (8463158 'move' call_tmp[8463156](8463160 'array_get' coerce_tmp[3407837] slot[3406615]))
    ref call_tmp[8464530]:shared Module(real(32))[1955038] "dead after last mention" "maybe param" "temp"
    (8464532 'move' call_tmp[8464530](8464534 '.' call_tmp[8463156] val[3392236]))
    label _end_this[3406716]
    (3406718 return call_tmp[8464530])
  }
  function map(string,int(64),false)[3288794].this[3315376](const  ref arg this[3315380]:map(string,int(64),false)[3288794], const  ref arg k[3315387]:string[244], ref arg error_out[5508019]:Error[85511]) const ref : _ref(int(64))[1465689] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref call_tmp[8452490]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
    (8452492 'move' call_tmp[8452490](8452494 '.' this[3315380] table[3288779]))
    const-val call_tmp[3315600]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588873]:(bool,int(64))[3257010] "temp"
    (3315608 call findFullSlot[3312245] call_tmp[8452490] k[3315387] ret_tmp[5588873])
    (5588876 'move' call_tmp[3315600] ret_tmp[5588873])
    val tmp_x0[9107358]:bool[19] "temp"
    val tmp_x1[9107360]:int(64)[10] "temp"
    (9107366 'move' tmp_x0[9107358](9107364 '.v' call_tmp[3315600] x0[3257006]))
    (9107371 'move' tmp_x1[9107360](9107369 '.v' call_tmp[3315600] x1[3257008]))
    1
    const-val found[3315627]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315787]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315791 'move' coerce_tmp[3315787] tmp_x0[9107358])
    (5632738 '=' found[3315627] coerce_tmp[3315787])
    (3315629 'noop')
    const-val slot[3315639]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315802]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315806 'move' coerce_tmp[3315802] tmp_x1[9107360])
    (5632741 '=' slot[3315639] coerce_tmp[3315802])
    (3315641 'noop')
    const-val call_tmp[3315645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351148]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351150 'move' call_tmp[7351148](7351152 'u!' found[3315627]))
    (3315647 'move' call_tmp[3315645] call_tmp[7351148])
    const-val call_tmp[3315652]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315654 'move' call_tmp[3315652] call_tmp[3315645])
    if call_tmp[3315652]
    {
      const-val call_tmp[3315661]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[3333755]:KeyNotFoundError[352856] "dead after last mention" "temp"
      (3333757 'move' new_temp[3333755](3315849 call _new[3333701] k[3315387]))
      const-val initTemp[3333785]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3333788 call init[3333806] initTemp[3333785] new_temp[3333755])
      (3315663 'move' call_tmp[3315661] initTemp[3333785])
      val call_tmp[3315668]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3334275]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589134]:owned Error[1498203] "temp"
      ref i_x[8456798]:owned KeyNotFoundError[3334157] "temp"
      (8456802 'move' i_x[8456798](8456800 'set reference' call_tmp[3315661]))
      ref i__retArg[8456804]:owned Error[1498203] "temp"
      (8456808 'move' i__retArg[8456804](8456806 'set reference' ret_tmp[5589134]))
      val _formal_tmp_x[8456811]:owned KeyNotFoundError[3334157] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8456813 'move' _formal_tmp_x[8456811] i_x[8456798])
      const-val ret[8456816]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8456818]:owned KeyNotFoundError[3334157] "temp"
      (8456820 'move' i_this[8456818](8456822 'set reference' _formal_tmp_x[8456811]))
      val coerce_tmp[8456824]:KeyNotFoundError[352856] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8456826 'move' coerce_tmp[8456824](8456828 '.v' i_this[8456818] chpl_p[3334152]))
      val call_tmp[8456831]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8456833 'move' call_tmp[8456831](8456835 'cast' Error[85511] coerce_tmp[8456824]))
      val castPtr[8456838]:Error[85511] "dead at end of block" "insert auto destroy"
      (8456840 'move' castPtr[8456838] call_tmp[8456831])
      ref i_this[8456843]:owned KeyNotFoundError[3334157] "temp"
      (8456845 'move' i_this[8456843](8456847 'set reference' _formal_tmp_x[8456811]))
      val tmp[8456849]:KeyNotFoundError[352856] "temp"
      (8456851 'move' tmp[8456849](8456853 'cast' KeyNotFoundError[352856] nil[32]))
      (8456856 '.=' i_this[8456843] chpl_p[3334152] tmp[8456849])
      val coerce_tmp[8456860]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8456862 'move' coerce_tmp[8456860](8456864 'cast' RootClass[236] call_tmp[8456831]))
      const-val call_tmp[8456867]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8456869 'move' call_tmp[8456867](8456871 '==' coerce_tmp[8456860] nil[32]))
      if call_tmp[8456867]
      {
        (8456877 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8456880]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8456882]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8456885 call init[1499358] initTemp[8456882] castPtr[8456838])
      (8456888 'move' call_tmp[8456880] initTemp[8456882])
      (8456891 'move' ret[8456816] call_tmp[8456880])
      (8456895 call chpl__autoDestroy[4223706] _formal_tmp_x[8456811])
      (8456899 '=' i__retArg[8456804] ret[8456816])
      (5589137 'move' coerce_tmp[3334275] ret_tmp[5589134])
      const-val _formal_tmp_in_err[3335146]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3335151 'move' _formal_tmp_in_err[3335146] coerce_tmp[3334275])
      (3315670 'move' call_tmp[3315668](3315673 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3335146]))
      val castedError[5508022]:Error[85511] "temp"
      (5508028 'move' castedError[5508022] call_tmp[3315668])
      (5508030 '=' error_out[5508019] castedError[5508022])
      gotoErrorHandlingReturn _end_this[3315722] _end_this[3315722]
    }
    ref call_tmp[8452500]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
    (8452502 'move' call_tmp[8452500](8452504 '.' this[3315380] table[3288779]))
    val coerce_tmp[3335165]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3335169 'move' coerce_tmp[3335165](9219488 '.v' call_tmp[8452500] table[3288827]))
    ref call_tmp[8453223]:chpl_TableEntry(string,int(64))[3288881] "dead after last mention" "maybe param" "temp"
    (8453225 'move' call_tmp[8453223](8453227 'array_get' coerce_tmp[3335165] slot[3315639]))
    ref call_tmp[8453853]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (8453855 'move' call_tmp[8453853](8453857 '.' call_tmp[8453223] val[3288879]))
    label _end_this[3315722]
    (3315724 return call_tmp[8453853])
  }
  function map(string,string,false)[3283386].this[3386412](const  ref arg this[3386416]:map(string,string,false)[3283386], const  ref arg k[3386423]:string[244], ref arg error_out[5510668]:Error[85511]) const ref : _ref(string)[1466327] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref call_tmp[8458195]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458197 'move' call_tmp[8458195](8458199 '.' this[3386416] table[3283371]))
    const-val call_tmp[3386636]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589724]:(bool,int(64))[3257010] "temp"
    (3386644 call findFullSlot[3383343] call_tmp[8458195] k[3386423] ret_tmp[5589724])
    (5589727 'move' call_tmp[3386636] ret_tmp[5589724])
    val tmp_x0[9107502]:bool[19] "temp"
    val tmp_x1[9107504]:int(64)[10] "temp"
    (9107510 'move' tmp_x0[9107502](9107508 '.v' call_tmp[3386636] x0[3257006]))
    (9107515 'move' tmp_x1[9107504](9107513 '.v' call_tmp[3386636] x1[3257008]))
    1
    const-val found[3386663]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3386840]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3386844 'move' coerce_tmp[3386840] tmp_x0[9107502])
    (5635563 '=' found[3386663] coerce_tmp[3386840])
    (3386665 'noop')
    const-val slot[3386675]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3386855]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3386859 'move' coerce_tmp[3386855] tmp_x1[9107504])
    (5635566 '=' slot[3386675] coerce_tmp[3386855])
    (3386677 'noop')
    const-val call_tmp[3386681]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351463]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351465 'move' call_tmp[7351463](7351467 'u!' found[3386663]))
    (3386683 'move' call_tmp[3386681] call_tmp[7351463])
    const-val call_tmp[3386688]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386690 'move' call_tmp[3386688] call_tmp[3386681])
    if call_tmp[3386688]
    {
      const-val call_tmp[3386697]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[3386880]:KeyNotFoundError[352856] "dead after last mention" "temp"
      (3386882 'move' new_temp[3386880](3386867 call _new[3333701] k[3386423]))
      const-val initTemp[3386889]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3386892 call init[3333806] initTemp[3386889] new_temp[3386880])
      (3386699 'move' call_tmp[3386697] initTemp[3386889])
      val call_tmp[3386704]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3386906]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589140]:owned Error[1498203] "temp"
      ref i_x[8456904]:owned KeyNotFoundError[3334157] "temp"
      (8456908 'move' i_x[8456904](8456906 'set reference' call_tmp[3386697]))
      ref i__retArg[8456910]:owned Error[1498203] "temp"
      (8456914 'move' i__retArg[8456910](8456912 'set reference' ret_tmp[5589140]))
      val _formal_tmp_x[8456917]:owned KeyNotFoundError[3334157] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8456919 'move' _formal_tmp_x[8456917] i_x[8456904])
      const-val ret[8456922]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8456924]:owned KeyNotFoundError[3334157] "temp"
      (8456926 'move' i_this[8456924](8456928 'set reference' _formal_tmp_x[8456917]))
      val coerce_tmp[8456930]:KeyNotFoundError[352856] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8456932 'move' coerce_tmp[8456930](8456934 '.v' i_this[8456924] chpl_p[3334152]))
      val call_tmp[8456937]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8456939 'move' call_tmp[8456937](8456941 'cast' Error[85511] coerce_tmp[8456930]))
      val castPtr[8456944]:Error[85511] "dead at end of block" "insert auto destroy"
      (8456946 'move' castPtr[8456944] call_tmp[8456937])
      ref i_this[8456949]:owned KeyNotFoundError[3334157] "temp"
      (8456951 'move' i_this[8456949](8456953 'set reference' _formal_tmp_x[8456917]))
      val tmp[8456955]:KeyNotFoundError[352856] "temp"
      (8456957 'move' tmp[8456955](8456959 'cast' KeyNotFoundError[352856] nil[32]))
      (8456962 '.=' i_this[8456949] chpl_p[3334152] tmp[8456955])
      val coerce_tmp[8456966]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8456968 'move' coerce_tmp[8456966](8456970 'cast' RootClass[236] call_tmp[8456937]))
      const-val call_tmp[8456973]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8456975 'move' call_tmp[8456973](8456977 '==' coerce_tmp[8456966] nil[32]))
      if call_tmp[8456973]
      {
        (8456983 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8456986]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8456988]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8456991 call init[1499358] initTemp[8456988] castPtr[8456944])
      (8456994 'move' call_tmp[8456986] initTemp[8456988])
      (8456997 'move' ret[8456922] call_tmp[8456986])
      (8457001 call chpl__autoDestroy[4223706] _formal_tmp_x[8456917])
      (8457005 '=' i__retArg[8456910] ret[8456922])
      (5589143 'move' coerce_tmp[3386906] ret_tmp[5589140])
      const-val _formal_tmp_in_err[3387125]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3387130 'move' _formal_tmp_in_err[3387125] coerce_tmp[3386906])
      (3386706 'move' call_tmp[3386704](3386709 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3387125]))
      val castedError[5510671]:Error[85511] "temp"
      (5510677 'move' castedError[5510671] call_tmp[3386704])
      (5510679 '=' error_out[5510668] castedError[5510671])
      gotoErrorHandlingReturn _end_this[3386758] _end_this[3386758]
    }
    ref call_tmp[8458205]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458207 'move' call_tmp[8458205](8458209 '.' this[3386416] table[3283371]))
    val coerce_tmp[3387144]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3387148 'move' coerce_tmp[3387144](9221562 '.v' call_tmp[8458205] table[3283419]))
    ref call_tmp[8457822]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "maybe param" "temp"
    (8457824 'move' call_tmp[8457822](8457826 'array_get' coerce_tmp[3387144] slot[3386675]))
    ref call_tmp[8458906]:string[244] "dead after last mention" "maybe param" "temp"
    (8458908 'move' call_tmp[8458906](8458910 '.' call_tmp[8457822] val[3283471]))
    label _end_this[3386758]
    (3386760 return call_tmp[8458906])
  }
  function map(string,Module(real(32)),false)[1936356].this[3420987](const  ref arg this[3420991]:map(string,Module(real(32)),false)[1936356], const  ref arg k[3420998]:string[244], ref arg error_out[5510797]:Error[85511]) const ref : _ref(Module(real(32)))[1935660] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref call_tmp[8418671]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "maybe param" "temp"
    (8418673 'move' call_tmp[8418671](8418675 '.' this[3420991] table[1936341]))
    const-val call_tmp[3421204]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589960]:(bool,int(64))[3257010] "temp"
    (3421212 call findFullSlot[3421376] call_tmp[8418671] k[3420998] ret_tmp[5589960])
    (5589963 'move' call_tmp[3421204] ret_tmp[5589960])
    val tmp_x0[9107606]:bool[19] "temp"
    val tmp_x1[9107608]:int(64)[10] "temp"
    (9107614 'move' tmp_x0[9107606](9107612 '.v' call_tmp[3421204] x0[3257006]))
    (9107619 'move' tmp_x1[9107608](9107617 '.v' call_tmp[3421204] x1[3257008]))
    1
    const-val found[3421231]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3421587]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3421591 'move' coerce_tmp[3421587] tmp_x0[9107606])
    (5636003 '=' found[3421231] coerce_tmp[3421587])
    (3421233 'noop')
    const-val slot[3421243]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3421602]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3421606 'move' coerce_tmp[3421602] tmp_x1[9107608])
    (5636006 '=' slot[3421243] coerce_tmp[3421602])
    (3421245 'noop')
    const-val call_tmp[3421249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351517]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351519 'move' call_tmp[7351517](7351521 'u!' found[3421231]))
    (3421251 'move' call_tmp[3421249] call_tmp[7351517])
    const-val call_tmp[3421256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421258 'move' call_tmp[3421256] call_tmp[3421249])
    if call_tmp[3421256]
    {
      const-val call_tmp[3421265]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[3421627]:KeyNotFoundError[352856] "dead after last mention" "temp"
      (3421629 'move' new_temp[3421627](3421614 call _new[3333701] k[3420998]))
      const-val initTemp[3421636]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3421639 call init[3333806] initTemp[3421636] new_temp[3421627])
      (3421267 'move' call_tmp[3421265] initTemp[3421636])
      val call_tmp[3421272]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3421653]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589164]:owned Error[1498203] "temp"
      ref i_x[8457116]:owned KeyNotFoundError[3334157] "temp"
      (8457120 'move' i_x[8457116](8457118 'set reference' call_tmp[3421265]))
      ref i__retArg[8457122]:owned Error[1498203] "temp"
      (8457126 'move' i__retArg[8457122](8457124 'set reference' ret_tmp[5589164]))
      val _formal_tmp_x[8457129]:owned KeyNotFoundError[3334157] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8457131 'move' _formal_tmp_x[8457129] i_x[8457116])
      const-val ret[8457134]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8457136]:owned KeyNotFoundError[3334157] "temp"
      (8457138 'move' i_this[8457136](8457140 'set reference' _formal_tmp_x[8457129]))
      val coerce_tmp[8457142]:KeyNotFoundError[352856] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8457144 'move' coerce_tmp[8457142](8457146 '.v' i_this[8457136] chpl_p[3334152]))
      val call_tmp[8457149]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8457151 'move' call_tmp[8457149](8457153 'cast' Error[85511] coerce_tmp[8457142]))
      val castPtr[8457156]:Error[85511] "dead at end of block" "insert auto destroy"
      (8457158 'move' castPtr[8457156] call_tmp[8457149])
      ref i_this[8457161]:owned KeyNotFoundError[3334157] "temp"
      (8457163 'move' i_this[8457161](8457165 'set reference' _formal_tmp_x[8457129]))
      val tmp[8457167]:KeyNotFoundError[352856] "temp"
      (8457169 'move' tmp[8457167](8457171 'cast' KeyNotFoundError[352856] nil[32]))
      (8457174 '.=' i_this[8457161] chpl_p[3334152] tmp[8457167])
      val coerce_tmp[8457178]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8457180 'move' coerce_tmp[8457178](8457182 'cast' RootClass[236] call_tmp[8457149]))
      const-val call_tmp[8457185]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8457187 'move' call_tmp[8457185](8457189 '==' coerce_tmp[8457178] nil[32]))
      if call_tmp[8457185]
      {
        (8457195 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8457198]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8457200]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8457203 call init[1499358] initTemp[8457200] castPtr[8457156])
      (8457206 'move' call_tmp[8457198] initTemp[8457200])
      (8457209 'move' ret[8457134] call_tmp[8457198])
      (8457213 call chpl__autoDestroy[4223706] _formal_tmp_x[8457129])
      (8457217 '=' i__retArg[8457122] ret[8457134])
      (5589167 'move' coerce_tmp[3421653] ret_tmp[5589164])
      const-val _formal_tmp_in_err[3421872]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3421877 'move' _formal_tmp_in_err[3421872] coerce_tmp[3421653])
      (3421274 'move' call_tmp[3421272](3421277 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3421872]))
      val castedError[5510800]:Error[85511] "temp"
      (5510806 'move' castedError[5510800] call_tmp[3421272])
      (5510808 '=' error_out[5510797] castedError[5510800])
      gotoErrorHandlingReturn _end_this[3421326] _end_this[3421326]
    }
    ref call_tmp[8418681]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "maybe param" "temp"
    (8418683 'move' call_tmp[8418681](8418685 '.' this[3420991] table[1936341]))
    val coerce_tmp[3421891]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3421895 'move' coerce_tmp[3421891](9222313 '.v' call_tmp[8418681] table[1941470]))
    ref call_tmp[7891221]:chpl_TableEntry(string,Module(real(32)))[1941536] "dead after last mention" "maybe param" "temp"
    (7891223 'move' call_tmp[7891221](7891225 'array_get' coerce_tmp[3421891] slot[3421243]))
    ref call_tmp[8421745]:Module(real(32))[1935500] "dead after last mention" "maybe param" "temp"
    (8421747 'move' call_tmp[8421745](8421749 '.' call_tmp[7891221] val[1941534]))
    label _end_this[3421326]
    (3421328 return call_tmp[8421745])
  }
  type _ic_keys__ref_map_string_int64_t_F[3311955] val super[3311956]:RootClass[236] "super class" val more[3311958]:int(64)[10] const-ref F0_this[7079744]:map(string,int(64),false)[3288794] val F1__iterator[7079748]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] const-ref F2_table_ref[7079750]:chpl__hashtable(string,int(64))[3288849] val F3__iterator[7079752]:_ic__allSlots[1946131] val F4__iterator[7079754]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7079756]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7079758]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7079760]:int(64)[10] const-ref value[7079762]:string[244]
  type _ir_keys__ref_map_string_int64_t_F[3311961] const-ref F0_this[7079746]:map(string,int(64),false)[3288794]
  type _ic_keys__ref_map_string_string_F[3381529] val super[3381530]:RootClass[236] "super class" val more[3381532]:int(64)[10] const-ref F0_this[7087442]:map(string,string,false)[3283386] val F1__iterator[7087446]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] const-ref F2_table_ref[7087448]:chpl__hashtable(string,string)[3283441] val F3__iterator[7087450]:_ic__allSlots[1946131] val F4__iterator[7087452]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7087454]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7087456]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7087458]:int(64)[10] const-ref value[7087460]:string[244]
  type _ir_keys__ref_map_string_string_F[3381535] const-ref F0_this[7087444]:map(string,string,false)[3283386]
  function map(string,string,false)[3283386]._readHelper[3343832](ref arg this[3343836]:map(string,string,false)[3283386], const  ref arg r[3343838]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3343840]:jsonDeserializer[356412], ref arg error_out[5509584]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3344155 call clear[3344292] this[3343836])
    const-val call_tmp[3344170]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "maybe param" "temp"
    val error[5509589]:Error[85511] "error variable" "temp"
    (5509591 'move' error[5509589] nil[32])
    const-val ret_tmp[5589304]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "temp"
    (3344178 call startMap[3348715] deserializer[3343840] r[3343838] error[5509589] ret_tmp[5589304])
    (5589307 'move' call_tmp[3344170] ret_tmp[5589304])
    val errorExists[7302568]:bool[19] "temp"
    (7302573 'move' errorExists[7302568](7302570 '!=' error[5509589] nil[32]))
    if errorExists[7302568]
    {
      (5509595 '=' error_out[5509584] error[5509589])
      gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
    }
    val des[3344180]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "insert auto destroy"
    (3344182 'move' des[3344180] call_tmp[3344170])
    val tmp[3344193]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[3344195]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[5509604]:Error[85511] "error variable" "temp"
    (5509606 'move' error[5509604] nil[32])
    (3344197 'move' call_tmp[3344195](3344203 call hasMore[3348903] des[3344180] error[5509604]))
    val errorExists[7302576]:bool[19] "temp"
    (7302581 'move' errorExists[7302576](7302578 '!=' error[5509604] nil[32]))
    if errorExists[7302576]
    {
      (5509610 '=' error_out[5509584] error[5509604])
      ref _field_destructor_tmp_[8622380]:fileReader(false,jsonDeserializer)[3276790] "temp"
      (8622382 'move' _field_destructor_tmp_[8622380](8622384 '.' des[3344180] reader[3348816]))
      (8622388 call deinit[4209365] _field_destructor_tmp_[8622380])
      gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
    }
    (3344204 'move' tmp[3344193] call_tmp[3344195])
    WhileDo[3344209] hazard
    {
      const-val call_tmp[3344220]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val error[5509619]:Error[85511] "error variable" "temp"
      (5509621 'move' error[5509619] nil[32])
      const-val ret_tmp[5589322]:string[244] "temp"
      (3344228 call readKey[3349035] des[3344180] error[5509619] ret_tmp[5589322])
      (5589325 'move' call_tmp[3344220] ret_tmp[5589322])
      val errorExists[7302584]:bool[19] "temp"
      (7302589 'move' errorExists[7302584](7302586 '!=' error[5509619] nil[32]))
      if errorExists[7302584]
      {
        (5509625 '=' error_out[5509584] error[5509619])
        ref _field_destructor_tmp_[8622399]:fileReader(false,jsonDeserializer)[3276790] "temp"
        (8622401 'move' _field_destructor_tmp_[8622399](8622403 '.' des[3344180] reader[3348816]))
        (8622407 call deinit[4209365] _field_destructor_tmp_[8622399])
        gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
      }
      const-val call_tmp[3344238]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val error[5509634]:Error[85511] "error variable" "temp"
      (5509636 'move' error[5509634] nil[32])
      const-val ret_tmp[5589340]:string[244] "temp"
      (3344246 call readValue[3349327] des[3344180] error[5509634] ret_tmp[5589340])
      (5589343 'move' call_tmp[3344238] ret_tmp[5589340])
      val errorExists[7302592]:bool[19] "temp"
      (7302597 'move' errorExists[7302592](7302594 '!=' error[5509634] nil[32]))
      if errorExists[7302592]
      {
        (5509640 '=' error_out[5509584] error[5509634])
        ref _field_destructor_tmp_[8622418]:fileReader(false,jsonDeserializer)[3276790] "temp"
        (8622420 'move' _field_destructor_tmp_[8622418](8622422 '.' des[3344180] reader[3348816]))
        (8622426 call deinit[4209365] _field_destructor_tmp_[8622418])
        gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
      }
      (3344252 call add[3349410] this[3343836] call_tmp[3344220] call_tmp[3344238])
      const-val call_tmp[3344259]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509649]:Error[85511] "error variable" "temp"
      (5509651 'move' error[5509649] nil[32])
      (3344261 'move' call_tmp[3344259](3344267 call hasMore[3348903] des[3344180] error[5509649]))
      val errorExists[7302600]:bool[19] "temp"
      (7302605 'move' errorExists[7302600](7302602 '!=' error[5509649] nil[32]))
      if errorExists[7302600]
      {
        (5509655 '=' error_out[5509584] error[5509649])
        ref _field_destructor_tmp_[8622437]:fileReader(false,jsonDeserializer)[3276790] "temp"
        (8622439 'move' _field_destructor_tmp_[8622437](8622441 '.' des[3344180] reader[3348816]))
        (8622445 call deinit[4209365] _field_destructor_tmp_[8622437])
        gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
      }
      (3344268 'move' tmp[3344193] call_tmp[3344259])
      tmp[3344193]
    }
    val error[5509664]:Error[85511] "error variable" "temp"
    (5509666 'move' error[5509664] nil[32])
    (3344279 call endMap[3350681] des[3344180] error[5509664])
    val errorExists[7302608]:bool[19] "temp"
    (7302613 'move' errorExists[7302608](7302610 '!=' error[5509664] nil[32]))
    if errorExists[7302608]
    {
      (5509670 '=' error_out[5509584] error[5509664])
      ref _field_destructor_tmp_[8622456]:fileReader(false,jsonDeserializer)[3276790] "temp"
      (8622458 'move' _field_destructor_tmp_[8622456](8622460 '.' des[3344180] reader[3348816]))
      (8622464 call deinit[4209365] _field_destructor_tmp_[8622456])
      gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
    }
    ref _field_destructor_tmp_[8622475]:fileReader(false,jsonDeserializer)[3276790] "temp"
    (8622477 'move' _field_destructor_tmp_[8622475](8622479 '.' des[3344180] reader[3348816]))
    (8622483 call deinit[4209365] _field_destructor_tmp_[8622475])
    label _end_readHelper[5509586]
    (3344282 return _void[46])
  }
  function map(string,owned ModuleSpecification?,false)[3283686]._readHelper[3358917](ref arg this[3358921]:map(string,owned ModuleSpecification?,false)[3283686], const  ref arg r[3358923]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3358925]:jsonDeserializer[356412], ref arg error_out[5510004]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3359240 call clear[3359377] this[3358921])
    const-val call_tmp[3359255]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "maybe param" "temp"
    val error[5510009]:Error[85511] "error variable" "temp"
    (5510011 'move' error[5510009] nil[32])
    const-val ret_tmp[5589310]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "temp"
    (3359263 call startMap[3348715] deserializer[3358925] r[3358923] error[5510009] ret_tmp[5589310])
    (5589313 'move' call_tmp[3359255] ret_tmp[5589310])
    val errorExists[7302768]:bool[19] "temp"
    (7302773 'move' errorExists[7302768](7302770 '!=' error[5510009] nil[32]))
    if errorExists[7302768]
    {
      (5510015 '=' error_out[5510004] error[5510009])
      gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
    }
    val des[3359265]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "insert auto destroy"
    (3359267 'move' des[3359265] call_tmp[3359255])
    val tmp[3359278]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[3359280]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[5510024]:Error[85511] "error variable" "temp"
    (5510026 'move' error[5510024] nil[32])
    (3359282 'move' call_tmp[3359280](3359288 call hasMore[3348903] des[3359265] error[5510024]))
    val errorExists[7302776]:bool[19] "temp"
    (7302781 'move' errorExists[7302776](7302778 '!=' error[5510024] nil[32]))
    if errorExists[7302776]
    {
      (5510030 '=' error_out[5510004] error[5510024])
      ref _field_destructor_tmp_[8622494]:fileReader(false,jsonDeserializer)[3276790] "temp"
      (8622496 'move' _field_destructor_tmp_[8622494](8622498 '.' des[3359265] reader[3348816]))
      (8622502 call deinit[4209365] _field_destructor_tmp_[8622494])
      gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
    }
    (3359289 'move' tmp[3359278] call_tmp[3359280])
    WhileDo[3359294] hazard
    {
      const-val call_tmp[3359305]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val error[5510039]:Error[85511] "error variable" "temp"
      (5510041 'move' error[5510039] nil[32])
      const-val ret_tmp[5589328]:string[244] "temp"
      (3359313 call readKey[3349035] des[3359265] error[5510039] ret_tmp[5589328])
      (5589331 'move' call_tmp[3359305] ret_tmp[5589328])
      val errorExists[7302784]:bool[19] "temp"
      (7302789 'move' errorExists[7302784](7302786 '!=' error[5510039] nil[32]))
      if errorExists[7302784]
      {
        (5510045 '=' error_out[5510004] error[5510039])
        ref _field_destructor_tmp_[8622513]:fileReader(false,jsonDeserializer)[3276790] "temp"
        (8622515 'move' _field_destructor_tmp_[8622513](8622517 '.' des[3359265] reader[3348816]))
        (8622521 call deinit[4209365] _field_destructor_tmp_[8622513])
        gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
      }
      const-val call_tmp[3359323]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val error[5510054]:Error[85511] "error variable" "temp"
      (5510056 'move' error[5510054] nil[32])
      const-val ret_tmp[5589516]:owned ModuleSpecification?[3283604] "temp"
      (3359331 call readValue[3366403] des[3359265] error[5510054] ret_tmp[5589516])
      (5589519 'move' call_tmp[3359323] ret_tmp[5589516])
      val errorExists[7302792]:bool[19] "temp"
      (7302797 'move' errorExists[7302792](7302794 '!=' error[5510054] nil[32]))
      if errorExists[7302792]
      {
        (5510060 '=' error_out[5510004] error[5510054])
        ref _field_destructor_tmp_[8622532]:fileReader(false,jsonDeserializer)[3276790] "temp"
        (8622534 'move' _field_destructor_tmp_[8622532](8622536 '.' des[3359265] reader[3348816]))
        (8622540 call deinit[4209365] _field_destructor_tmp_[8622532])
        gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
      }
      (3359337 call add[3372005] this[3358921] call_tmp[3359305] call_tmp[3359323])
      const-val call_tmp[3359344]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5510069]:Error[85511] "error variable" "temp"
      (5510071 'move' error[5510069] nil[32])
      (3359346 'move' call_tmp[3359344](3359352 call hasMore[3348903] des[3359265] error[5510069]))
      val errorExists[7302800]:bool[19] "temp"
      (7302805 'move' errorExists[7302800](7302802 '!=' error[5510069] nil[32]))
      if errorExists[7302800]
      {
        (5510075 '=' error_out[5510004] error[5510069])
        ref _field_destructor_tmp_[8622551]:fileReader(false,jsonDeserializer)[3276790] "temp"
        (8622553 'move' _field_destructor_tmp_[8622551](8622555 '.' des[3359265] reader[3348816]))
        (8622559 call deinit[4209365] _field_destructor_tmp_[8622551])
        gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
      }
      (3359353 'move' tmp[3359278] call_tmp[3359344])
      tmp[3359278]
    }
    val error[5510084]:Error[85511] "error variable" "temp"
    (5510086 'move' error[5510084] nil[32])
    (3359364 call endMap[3350681] des[3359265] error[5510084])
    val errorExists[7302808]:bool[19] "temp"
    (7302813 'move' errorExists[7302808](7302810 '!=' error[5510084] nil[32]))
    if errorExists[7302808]
    {
      (5510090 '=' error_out[5510004] error[5510084])
      ref _field_destructor_tmp_[8622570]:fileReader(false,jsonDeserializer)[3276790] "temp"
      (8622572 'move' _field_destructor_tmp_[8622570](8622574 '.' des[3359265] reader[3348816]))
      (8622578 call deinit[4209365] _field_destructor_tmp_[8622570])
      gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
    }
    ref _field_destructor_tmp_[8622589]:fileReader(false,jsonDeserializer)[3276790] "temp"
    (8622591 'move' _field_destructor_tmp_[8622589](8622593 '.' des[3359265] reader[3348816]))
    (8622597 call deinit[4209365] _field_destructor_tmp_[8622589])
    label _end_readHelper[5510006]
    (3359367 return _void[46])
  }
  function map(string,string,false)[3283386].init[3339110](ref arg this[3339114]:map(string,string,false)[3283386], const  ref arg reader[3339122]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3339124]:jsonDeserializer[356412], ref arg error_out[5509565]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    const-val default_arg_resizeThreshold[3343797]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val resizeThreshold[8458098]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (8458100 'move' resizeThreshold[8458098] defaultHashTableResizeThreshold[209951])
    (3343801 'move' default_arg_resizeThreshold[3343797] resizeThreshold[8458098])
    (3339142 call init[3339157] this[3339114] default_arg_resizeThreshold[3343797] 16)
    val error[5509570]:Error[85511] "error variable" "temp"
    (5509572 'move' error[5509570] nil[32])
    (3339151 call _readHelper[3343832] this[3339114] reader[3339122] deserializer[3339124] error[5509570])
    val errorExists[7302560]:bool[19] "temp"
    (7302565 'move' errorExists[7302560](7302562 '!=' error[5509570] nil[32]))
    if errorExists[7302560]
    {
      (5509576 '=' error_out[5509565] error[5509570])
      gotoErrorHandlingReturn _endinit[5509567] _endinit[5509567]
    }
    label _endinit[5509567]
    (3339154 return _void[46])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].init[3354169](ref arg this[3354173]:map(string,owned ModuleSpecification?,false)[3283686], const  ref arg reader[3354181]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3354183]:jsonDeserializer[356412], ref arg error_out[5509985]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    const-val default_arg_resizeThreshold[3358882]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val resizeThreshold[8460339]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (8460341 'move' resizeThreshold[8460339] defaultHashTableResizeThreshold[209951])
    (3358886 'move' default_arg_resizeThreshold[3358882] resizeThreshold[8460339])
    (3354201 call init[3354216] this[3354173] default_arg_resizeThreshold[3358882] 16)
    val error[5509990]:Error[85511] "error variable" "temp"
    (5509992 'move' error[5509990] nil[32])
    (3354210 call _readHelper[3358917] this[3354173] reader[3354181] deserializer[3354183] error[5509990])
    val errorExists[7302760]:bool[19] "temp"
    (7302765 'move' errorExists[7302760](7302762 '!=' error[5509990] nil[32]))
    if errorExists[7302760]
    {
      (5509996 '=' error_out[5509985] error[5509990])
      gotoErrorHandlingReturn _endinit[5509987] _endinit[5509987]
    }
    label _endinit[5509987]
    (3354213 return _void[46])
  }
  function map(string,int(64),false)[3288794].add[3300824](ref arg this[3300828]:map(string,int(64),false)[3288794], const  ref arg k[3300835]:string[244], const in arg v[3300842]:int(64)[10]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3301089]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3301092 'move' _formal_tmp_k[3301089] k[3300835])
    val ret[3300853]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[8452460]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
    (8452462 'move' call_tmp[8452460](8452464 '.' this[3300828] table[3288779]))
    const-val call_tmp[3300990]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588735]:(bool,int(64))[3257010] "temp"
    (3300998 call findAvailableSlot[3301272] call_tmp[8452460] _formal_tmp_k[3301089] ret_tmp[5588735])
    (5588738 'move' call_tmp[3300990] ret_tmp[5588735])
    val tmp_x0[9107270]:bool[19] "temp"
    val tmp_x1[9107272]:int(64)[10] "temp"
    (9107278 'move' tmp_x0[9107270](9107276 '.v' call_tmp[3300990] x0[3257006]))
    (9107283 'move' tmp_x1[9107272](9107281 '.v' call_tmp[3300990] x1[3257008]))
    1
    const-val found[3301017]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3308454]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3308458 'move' coerce_tmp[3308454] tmp_x0[9107270])
    (5632556 '=' found[3301017] coerce_tmp[3308454])
    (3301019 'noop')
    const-val slot[3301029]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3308469]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3308473 'move' coerce_tmp[3308469] tmp_x1[9107272])
    (5632559 '=' slot[3301029] coerce_tmp[3308469])
    (3301031 'noop')
    const-val call_tmp[3301035]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301037 'move' call_tmp[3301035] found[3301017])
    if call_tmp[3301035]
    {
      (3301044 'move' ret[3300853] 0)
      ref i_x[7342174]:string[244] "temp"
      (7342178 'move' i_x[7342174](7342176 'set reference' _formal_tmp_k[3301089]))
      (7342182 call deinit[21354] i_x[7342174])
      gotoReturn _end_add[3301075] _end_add[3301075]
    }
    ref call_tmp[8452470]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp"
    (8452472 'move' call_tmp[8452470](8452474 '.' this[3300828] table[3288779]))
    const-val _formal_tmp_in_key[3308602]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632553 '=' _formal_tmp_in_key[3308602] _formal_tmp_k[3301089])
    (3308607 'noop')
    (3301064 call fillSlot[3308541] call_tmp[8452470] slot[3301029] _formal_tmp_in_key[3308602] v[3300842])
    (3301070 'move' ret[3300853] 1)
    label _end_add[3301075]
    (3301077 return ret[3300853])
  }
  function map(string,string,false)[3283386].add[3349410](ref arg this[3349414]:map(string,string,false)[3283386], const  ref arg k[3349421]:string[244], const  ref arg v[3349428]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3349562]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3349566 'move' _formal_tmp_k[3349562] k[3349421])
    const-val _formal_tmp_v[3349563]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3349570 'move' _formal_tmp_v[3349563] v[3349428])
    val ret[3349439]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[8458175]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458177 'move' call_tmp[8458175](8458179 '.' this[3349414] table[3283371]))
    const-val call_tmp[3349472]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589352]:(bool,int(64))[3257010] "temp"
    (3349480 call findAvailableSlot[3349576] call_tmp[8458175] _formal_tmp_k[3349562] ret_tmp[5589352])
    (5589355 'move' call_tmp[3349472] ret_tmp[5589352])
    val tmp_x0[9107376]:bool[19] "temp"
    val tmp_x1[9107378]:int(64)[10] "temp"
    (9107384 'move' tmp_x0[9107376](9107382 '.v' call_tmp[3349472] x0[3257006]))
    (9107389 'move' tmp_x1[9107378](9107387 '.v' call_tmp[3349472] x1[3257008]))
    1
    const-val found[3349499]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3350176]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3350180 'move' coerce_tmp[3350176] tmp_x0[9107376])
    (5635056 '=' found[3349499] coerce_tmp[3350176])
    (3349501 'noop')
    const-val slot[3349511]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3350191]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3350195 'move' coerce_tmp[3350191] tmp_x1[9107378])
    (5635059 '=' slot[3349511] coerce_tmp[3350191])
    (3349513 'noop')
    const-val call_tmp[3349517]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349519 'move' call_tmp[3349517] found[3349499])
    if call_tmp[3349517]
    {
      (3349526 'move' ret[3349439] 0)
      ref i_x[7342726]:string[244] "temp"
      (7342730 'move' i_x[7342726](7342728 'set reference' _formal_tmp_v[3349563]))
      (7342734 call deinit[21354] i_x[7342726])
      ref i_x[7342738]:string[244] "temp"
      (7342742 'move' i_x[7342738](7342740 'set reference' _formal_tmp_k[3349562]))
      (7342746 call deinit[21354] i_x[7342738])
      gotoReturn _end_add[3349557] _end_add[3349557]
    }
    ref call_tmp[8458185]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458187 'move' call_tmp[8458185](8458189 '.' this[3349414] table[3283371]))
    const-val _formal_tmp_in_key[3350324]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635050 '=' _formal_tmp_in_key[3350324] _formal_tmp_k[3349562])
    (3350329 'noop')
    const-val _formal_tmp_in_val[3350333]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635053 '=' _formal_tmp_in_val[3350333] _formal_tmp_v[3349563])
    (3350338 'noop')
    (3349546 call fillSlot[3350263] call_tmp[8458185] slot[3349511] _formal_tmp_in_key[3350324] _formal_tmp_in_val[3350333])
    (3349552 'move' ret[3349439] 1)
    label _end_add[3349557]
    (3349559 return ret[3349439])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].add[3372005](ref arg this[3372009]:map(string,owned ModuleSpecification?,false)[3283686], const  ref arg k[3372016]:string[244], const  ref arg v[3372023]:owned ModuleSpecification?[3283604]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3372157]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3372161 'move' _formal_tmp_k[3372157] k[3372016])
    const-val _formal_tmp_v[3372158]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3372165 'move' _formal_tmp_v[3372158] v[3372023])
    val ret[3372034]:bool[19] "dead after last mention" "RVV" "temp"
    ref call_tmp[8460413]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
    (8460415 'move' call_tmp[8460413](8460417 '.' this[3372009] table[3283671]))
    const-val call_tmp[3372067]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589588]:(bool,int(64))[3257010] "temp"
    (3372075 call findAvailableSlot[3372171] call_tmp[8460413] _formal_tmp_k[3372157] ret_tmp[5589588])
    (5589591 'move' call_tmp[3372067] ret_tmp[5589588])
    val tmp_x0[9107430]:bool[19] "temp"
    val tmp_x1[9107432]:int(64)[10] "temp"
    (9107438 'move' tmp_x0[9107430](9107436 '.v' call_tmp[3372067] x0[3257006]))
    (9107443 'move' tmp_x1[9107432](9107441 '.v' call_tmp[3372067] x1[3257008]))
    1
    const-val found[3372094]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3372771]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3372775 'move' coerce_tmp[3372771] tmp_x0[9107430])
    (5635322 '=' found[3372094] coerce_tmp[3372771])
    (3372096 'noop')
    const-val slot[3372106]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3372786]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3372790 'move' coerce_tmp[3372786] tmp_x1[9107432])
    (5635325 '=' slot[3372106] coerce_tmp[3372786])
    (3372108 'noop')
    const-val call_tmp[3372112]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372114 'move' call_tmp[3372112] found[3372094])
    if call_tmp[3372112]
    {
      (3372121 'move' ret[3372034] 0)
      (5635335 call chpl__autoDestroy[3373663] _formal_tmp_v[3372158])
      ref i_x[7342798]:string[244] "temp"
      (7342802 'move' i_x[7342798](7342800 'set reference' _formal_tmp_k[3372157]))
      (7342806 call deinit[21354] i_x[7342798])
      gotoReturn _end_add[3372152] _end_add[3372152]
    }
    ref call_tmp[8460423]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp"
    (8460425 'move' call_tmp[8460423](8460427 '.' this[3372009] table[3283671]))
    const-val _formal_tmp_in_key[3372919]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635316 '=' _formal_tmp_in_key[3372919] _formal_tmp_k[3372157])
    (3372924 'noop')
    const-val _formal_tmp_in_val[3372928]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635319 '=' _formal_tmp_in_val[3372928] _formal_tmp_v[3372158])
    (3372933 'noop')
    (3372141 call fillSlot[3372858] call_tmp[8460423] slot[3372106] _formal_tmp_in_key[3372919] _formal_tmp_in_val[3372928])
    (3372147 'move' ret[3372034] 1)
    label _end_add[3372152]
    (3372154 return ret[3372034])
  }
  function map(string,Module(real(32)),false)[1936356].addOrReplace[3256564](ref arg this[3256568]:map(string,Module(real(32)),false)[1936356], const  ref arg k[3256575]:string[244], in arg v[3256582]:Module(real(32))[1935500]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3256792]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3256795 'move' _formal_tmp_k[3256792] k[3256575])
    ref call_tmp[8418651]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "maybe param" "temp"
    (8418653 'move' call_tmp[8418651](8418655 '.' this[3256568] table[1936341]))
    const-val call_tmp[3256717]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5587913]:(bool,int(64))[3257010] "temp"
    (3256725 call findAvailableSlot[3256975] call_tmp[8418651] _formal_tmp_k[3256792] ret_tmp[5587913])
    (5587916 'move' call_tmp[3256717] ret_tmp[5587913])
    val tmp_x1[9107218]:int(64)[10] "temp"
    (9107229 'move' tmp_x1[9107218](9107227 '.v' call_tmp[3256717] x1[3257008]))
    1
    (3256746 'noop')
    const-val slot[3256756]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3262241]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3262245 'move' coerce_tmp[3262241] tmp_x1[9107218])
    (5632019 '=' slot[3256756] coerce_tmp[3262241])
    (3256758 'noop')
    ref call_tmp[8418661]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "maybe param" "temp"
    (8418663 'move' call_tmp[8418661](8418665 '.' this[3256568] table[1936341]))
    const-val _formal_tmp_in_key[3262372]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632013 '=' _formal_tmp_in_key[3262372] _formal_tmp_k[3256792])
    (3262377 'noop')
    (3256774 call fillSlot[3262311] call_tmp[8418661] slot[3256756] _formal_tmp_in_key[3262372] v[3256582])
    (3256780 return _void[46])
  }
  function map(string,shared Module(real(32)),false)[3391831].addOrReplace[3400390](ref arg this[3400394]:map(string,shared Module(real(32)),false)[3391831], const  ref arg k[3400401]:string[244], const  ref arg v[3400408]:shared Module(real(32))[1955038]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3400627]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400631 'move' _formal_tmp_k[3400627] k[3400401])
    const-val _formal_tmp_v[3400628]:shared Module(real(32))[1955038] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400635 'move' _formal_tmp_v[3400628] v[3400408])
    ref call_tmp[8463920]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp"
    (8463922 'move' call_tmp[8463920](8463924 '.' this[3400394] table[3391816]))
    const-val call_tmp[3400543]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589806]:(bool,int(64))[3257010] "temp"
    (3400551 call findAvailableSlot[3400815] call_tmp[8463920] _formal_tmp_k[3400627] ret_tmp[5589806])
    (5589809 'move' call_tmp[3400543] ret_tmp[5589806])
    val tmp_x1[9107538]:int(64)[10] "temp"
    (9107549 'move' tmp_x1[9107538](9107547 '.v' call_tmp[3400543] x1[3257008]))
    1
    (3400572 'noop')
    const-val slot[3400582]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3404433]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3404437 'move' coerce_tmp[3404433] tmp_x1[9107538])
    (5635697 '=' slot[3400582] coerce_tmp[3404433])
    (3400584 'noop')
    ref call_tmp[8463930]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp"
    (8463932 'move' call_tmp[8463930](8463934 '.' this[3400394] table[3391816]))
    const-val _formal_tmp_in_key[3404564]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635688 '=' _formal_tmp_in_key[3404564] _formal_tmp_k[3400627])
    (3404569 'noop')
    const-val _formal_tmp_in_val[3404573]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635691 '=' _formal_tmp_in_val[3404573] _formal_tmp_v[3400628])
    (3404578 'noop')
    (3400600 call fillSlot[3404503] call_tmp[8463930] slot[3400582] _formal_tmp_in_key[3404564] _formal_tmp_in_val[3404573])
    (3400606 return _void[46])
  }
  function map(string,Module(real(64)),false)[3405184].addOrReplace[3859953](ref arg this[3859957]:map(string,Module(real(64)),false)[3405184], const  ref arg k[3859964]:string[244], in arg v[3859971]:Module(real(64))[3405063]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3860181]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3860184 'move' _formal_tmp_k[3860181] k[3859964])
    ref call_tmp[8577705]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "maybe param" "temp"
    (8577707 'move' call_tmp[8577705](8577709 '.' this[3859957] table[3405169]))
    const-val call_tmp[3860106]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5596133]:(bool,int(64))[3257010] "temp"
    (3860114 call findAvailableSlot[3860364] call_tmp[8577705] _formal_tmp_k[3860181] ret_tmp[5596133])
    (5596136 'move' call_tmp[3860106] ret_tmp[5596133])
    val tmp_x1[9107644]:int(64)[10] "temp"
    (9107655 'move' tmp_x1[9107644](9107653 '.v' call_tmp[3860106] x1[3257008]))
    1
    (3860135 'noop')
    const-val slot[3860145]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3863982]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3863986 'move' coerce_tmp[3863982] tmp_x1[9107644])
    (5642104 '=' slot[3860145] coerce_tmp[3863982])
    (3860147 'noop')
    ref call_tmp[8577715]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "maybe param" "temp"
    (8577717 'move' call_tmp[8577715](8577719 '.' this[3859957] table[3405169]))
    const-val _formal_tmp_in_key[3864113]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5642098 '=' _formal_tmp_in_key[3864113] _formal_tmp_k[3860181])
    (3864118 'noop')
    (3860163 call fillSlot[3864052] call_tmp[8577715] slot[3860145] _formal_tmp_in_key[3864113] v[3859971])
    (3860169 return _void[46])
  }
  type map(string,Module(real(32)),false)[1936356] const resizeThreshold[1936338]:real(64)[13] "const" val table[1936341]:chpl__hashtable(string,Module(real(32)))[1941492]
  type map(string,string,false)[3283386] const resizeThreshold[3283368]:real(64)[13] "const" val table[3283371]:chpl__hashtable(string,string)[3283441]
  type map(string,owned ModuleSpecification?,false)[3283686] const resizeThreshold[3283668]:real(64)[13] "const" val table[3283671]:chpl__hashtable(string,owned ModuleSpecification?)[3283741]
  type map(string,int(64),false)[3288794] const resizeThreshold[3288776]:real(64)[13] "const" val table[3288779]:chpl__hashtable(string,int(64))[3288849]
  type map(string,shared Module(real(32)),false)[3391831] const resizeThreshold[3391813]:real(64)[13] "const" val table[3391816]:chpl__hashtable(string,shared Module(real(32)))[3392205]
  type map(string,Module(real(64)),false)[3405184] const resizeThreshold[3405166]:real(64)[13] "const" val table[3405169]:chpl__hashtable(string,Module(real(64)))[3405239]
  function KeyNotFoundError[352856].deinit[1390661](const in arg this[1390665]:KeyNotFoundError[352856]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526569]
    val _parent_destructor_tmp_[5526564]:Error[85511] "temp"
    (5526571 'move' _parent_destructor_tmp_[5526564](5526565 'cast' Error[85511] this[1390665]))
    ref _field_destructor_tmp_[7630155]:string[244] "temp"
    (7630157 'move' _field_destructor_tmp_[7630155](7630159 '.' _parent_destructor_tmp_[5526564] _msg[85454]))
    (7630163 call deinit[21354] _field_destructor_tmp_[7630155])
    (1390673 return _void[46])
  }
  function _new[3333701](const  ref arg k[3333712]:string[244]) : KeyNotFoundError[352856] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val ret[3333742]:KeyNotFoundError[352856] "dead after last mention" "RVV" "temp"
    val initTemp[3333703]:KeyNotFoundError[352856] "dead after last mention" "temp"
    const-val call_tmp[3333749]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3333752 'move' call_tmp[3333749](3333763 'sizeof_bundle' KeyNotFoundError[352856]))
    val cast_tmp[3333766]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3333768 'move' cast_tmp[3333766](3333720 call chpl_here_alloc[308303] call_tmp[3333749] 327))
    (3333723 'move' initTemp[3333703](3333770 'cast' KeyNotFoundError[352856] cast_tmp[3333766]))
    val super_tmp[8454974]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (8454976 'move' super_tmp[8454974](8454978 '.v' initTemp[3333703] super[397916]))
    const-val call_tmp[8454981]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[8454983]:Error[85511] "error variable" "temp"
    (8454985 'move' error[8454983] nil[32])
    const-val ret_tmp[8454988]:string[244] "temp"
    (8454991 call format[3316409] "key '%\?' not found" k[3333712] error[8454983] ret_tmp[8454988])
    (8454996 'move' call_tmp[8454981] ret_tmp[8454988])
    val errorExists[8454999]:bool[19] "temp"
    (8455001 'move' errorExists[8454999](8455003 '!=' error[8454983] nil[32]))
    if errorExists[8454999]
    {
      (8455009 call chpl_uncaught_error[87456] error[8454983])
    }
    ref i_msg[8455012]:string[244] "temp"
    (8455014 'move' i_msg[8455012](8455016 'set reference' call_tmp[8454981]))
    val super_tmp[8455018]:RootClass[236] "dead after last mention" "temporary of super field" "temp"
    (8455020 'move' super_tmp[8455018](8455022 '.v' super_tmp[8454974] super[397311]))
    (8455025 'setcid' super_tmp[8455018])
    val call_tmp[8455027]:RootClass[236] "dead after last mention" "maybe param" "temp"
    (8455029 'move' call_tmp[8455027](8455031 'cast' RootClass[236] super_tmp[8454974]))
    (8455034 'setcid' call_tmp[8455027])
    val init_coerce_tmp[8455036]:Error[85511] "dead after last mention" "temp"
    (8455038 '=' init_coerce_tmp[8455036](8455040 'cast' Error[85511] nil[32]))
    (8455043 '.=' super_tmp[8454974] _next[85434] init_coerce_tmp[8455036])
    (8455047 '.=' super_tmp[8454974] thrownLine[85442] 0)
    (8455051 '.=' super_tmp[8454974] thrownFileId[85447] 0)
    val _msg[8455055]:string[244] "dead after last mention" "temp"
    (8455058 call init=[21330] _msg[8455055] i_msg[8455012])
    (8455061 '.=' super_tmp[8454974] _msg[85454] _msg[8455055])
    (8455065 '.=' super_tmp[8454974] _hasThrowInfo[85459] 0)
    (8455069 'setcid' super_tmp[8454974])
    ref i_x[8455071]:string[244] "temp"
    (8455073 'move' i_x[8455071](8455075 'set reference' call_tmp[8454981]))
    (8455078 call deinit[21354] i_x[8455071])
    val call_tmp[8455080]:Error[85511] "dead after last mention" "maybe param" "temp"
    (8455082 'move' call_tmp[8455080](8455084 'cast' Error[85511] initTemp[3333703]))
    (8455087 'setcid' call_tmp[8455080])
    (8455089 'setcid' initTemp[3333703])
    val tmp[3333725]:KeyNotFoundError[352856] "dead after last mention" "temp"
    (3333732 'move' tmp[3333725] initTemp[3333703])
    (3333747 'move' ret[3333742] tmp[3333725])
    (3333744 return ret[3333742])
  }
  type KeyNotFoundError[352856] val super[397916]:Error[85511] "super class"
}
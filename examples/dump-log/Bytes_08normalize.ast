AST dump for Bytes after pass normalize.
Module use list: ChapelStandard ByteBufferHelpers BytesStringCommon CTypes ChplConfig BytesCasts POSIX 

{
  function chpl__init_Bytes[468354]() : void[4] "insert line file info" "module init"
  {
    (1000950 'resolution point' |hashable[475017])
    (1000952 'end of statement')
    (1000953 'resolution point' |writeSerializable[475117])
    (1000955 'end of statement')
    (1000956 'resolution point' |readDeserializable[475122])
    (1000958 'end of statement')
    (596728 return _void[46])
  }
  function bytes[232].createBorrowingBuffer[32952](arg _mt[32962]:_MT[201], arg this[32955]:bytes[232] :
  bytes[232], arg x[32959]:bytes[232]) : _unknown[42] "inline" "method" "@unstable"
  {
    unknown ret[595645] "RVV" "temp"
    unknown ret[32967] "dead at end of block" "insert auto destroy"
    (643722 'default init var' ret[32967] bytes[232])
    (32970 'end of statement')
    (32972 call initWithBorrowedBuffer ret[32967] x[32959])
    (548384 'end of statement' ret[32967])
    (595651 'move' ret[595645](595650 'coerce' ret[32967] bytes[232]))
    gotoReturn _end_createBorrowingBuffer[595643] _end_createBorrowingBuffer[595643]
    (548386 'end of statement' ret[32967])
    label _end_createBorrowingBuffer[595643]
    (595647 return ret[595645])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createBorrowingBuffer[32980](arg _mt[32997]:_MT[201], arg this[32983]:bytes[232] :
  bytes[232], arg x[32987]:chpl_c_string[16], arg length[32994] :
  (1001774 call size _mt[203] x[32987]) =
  (32991 call size _mt[203] x[32987])) : _unknown[42] "deprecated" "inline" "method"
  {
    unknown ret[595657] "RVV" "temp"
    unknown call_tmp[752916] "expr temp" "maybe param" "maybe type" "temp"
    (752919 'move' call_tmp[752916](33007 call : x[32987] bufferType[30212]))
    unknown call_tmp[752921] "expr temp" "maybe param" "maybe type" "temp"
    (752924 'move' call_tmp[752921](33013 call + length[32994] 1))
    unknown call_tmp[752926] "expr temp" "maybe param" "maybe type" "temp"
    (752929 'move' call_tmp[752926](33006 call(33003 call (partial) createBorrowingBuffer _mt[203] bytes[232]) call_tmp[752916](length = length[32994])(size = call_tmp[752921])))
    (595663 'move' ret[595657](595662 'coerce' call_tmp[752926] bytes[232]))
    (595659 return ret[595657])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createBorrowingBuffer[33021](arg _mt[33040]:_MT[201], arg this[33024]:bytes[232] :
  bytes[232], arg x[33031]:c_ptr[46891](?), arg length[33037] :
  (1001779 call strLen x[33031]) =
  (33035 call strLen x[33031])) : _unknown[42] "inline" "method" "@unstable"
  {
    unknown ret[595667] "RVV" "temp"
    unknown call_tmp[752933] "expr temp" "maybe param" "maybe type" "temp"
    (752936 'move' call_tmp[752933](33050 call : x[33031] bufferType[30212]))
    unknown call_tmp[752938] "expr temp" "maybe param" "maybe type" "temp"
    (752941 'move' call_tmp[752938](33056 call + length[33037] 1))
    unknown call_tmp[752943] "expr temp" "maybe param" "maybe type" "temp"
    (752946 'move' call_tmp[752943](33049 call(33046 call (partial) createBorrowingBuffer _mt[203] bytes[232]) call_tmp[752933](length = length[33037])(size = call_tmp[752938])))
    (595673 'move' ret[595667](595672 'coerce' call_tmp[752943] bytes[232]))
    (595669 return ret[595667])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createBorrowingBuffer[33064](arg _mt[33083]:_MT[201], arg this[33067]:bytes[232] :
  bytes[232], arg x[33074]:c_ptrConst[46990](?), arg length[33080] :
  (1001783 call strLen x[33074]) =
  (33078 call strLen x[33074])) : _unknown[42] "inline" "method" "@unstable"
  {
    unknown ret[595677] "RVV" "temp"
    unknown call_tmp[752950] "expr temp" "maybe param" "maybe type" "temp"
    (752953 'move' call_tmp[752950](33093 call : x[33074] bufferType[30212]))
    unknown call_tmp[752955] "expr temp" "maybe param" "maybe type" "temp"
    (752958 'move' call_tmp[752955](33099 call + length[33080] 1))
    unknown call_tmp[752960] "expr temp" "maybe param" "maybe type" "temp"
    (752963 'move' call_tmp[752960](33092 call(33089 call (partial) createBorrowingBuffer _mt[203] bytes[232]) call_tmp[752950](length = length[33080])(size = call_tmp[752955])))
    (595683 'move' ret[595677](595682 'coerce' call_tmp[752960] bytes[232]))
    (595679 return ret[595677])
  }
  { scopeless type
    bytes[232]
  }
  function chpl_createBytesWithLiteral[33107](arg buffer[33110]:chpl_c_string[16], arg offset[33114]:int(64)[10], arg x[33118]:chpl_c_string[16], arg length[33122]:int(64)[10]) : _unknown[42]
  {
    unknown ret[595687] "RVV" "temp"
    unknown call_tmp[752965] "expr temp" "maybe param" "maybe type" "temp"
    (752968 'move' call_tmp[752965](33134 call c_ptr[46891](?) void[4]))
    unknown call_tmp[752970] "expr temp" "maybe param" "maybe type" "temp"
    (752973 'move' call_tmp[752970](33130 call : buffer[33110] call_tmp[752965]))
    unknown call_tmp[752975] "expr temp" "maybe param" "maybe type" "temp"
    (752978 'move' call_tmp[752975](33139 call uint(64)[86] 8))
    unknown call_tmp[752980] "expr temp" "maybe param" "maybe type" "temp"
    (752983 'move' call_tmp[752980](33137 call c_ptr[46891](?) call_tmp[752975]))
    unknown call_tmp[752985] "maybe param" "maybe type" "temp"
    (752988 'move' call_tmp[752985](33128 call : call_tmp[752970] call_tmp[752980]))
    unknown buf[33127] "dead at end of block" "insert auto destroy"
    (643724 'init var' buf[33127] call_tmp[752985])
    (33142 'end of statement')
    unknown call_tmp[752990] "expr temp" "maybe param" "maybe type" "temp"
    (752993 'move' call_tmp[752990](33146 call + buf[33127] offset[33114]))
    (33143 call = buf[33127] call_tmp[752990])
    (548391 'end of statement' buf[33127])
    unknown call_tmp[752995] "expr temp" "maybe param" "maybe type" "temp"
    (752998 'move' call_tmp[752995](33165 call c_ptr[46891](?) void[4]))
    unknown call_tmp[753000] "expr temp" "maybe param" "maybe type" "temp"
    (753003 'move' call_tmp[753000](33161 call : buf[33127] call_tmp[752995]))
    unknown call_tmp[753005] "expr temp" "maybe param" "maybe type" "temp"
    (753008 'move' call_tmp[753005](33171 call c_ptr[46891](?) void[4]))
    unknown call_tmp[753010] "expr temp" "maybe param" "maybe type" "temp"
    (753013 'move' call_tmp[753010](33167 call : x[33118] call_tmp[753005]))
    unknown call_tmp[753017] "expr temp" "maybe param" "maybe type" "temp"
    (753020 'move' call_tmp[753017](33177 call(33174 call (partial) safeCast _mt[203] length[33122]) c_size_t[614]))
    (33160 call memcpy call_tmp[753000] call_tmp[753010] call_tmp[753017])
    (548393 'end of statement' buf[33127])
    unknown call_tmp[753022] "expr temp" "maybe param" "maybe type" "temp"
    (753025 'move' call_tmp[753022](33182 call buf[33127] length[33122]))
    (33179 call = call_tmp[753022] 0)
    (548395 'end of statement' buf[33127])
    unknown call_tmp[753029] "expr temp" "maybe param" "maybe type" "temp"
    (753032 'move' call_tmp[753029](33190 call(33187 call (partial) createBorrowingBuffer _mt[203] bytes[232]) buf[33127] length[33122]))
    (595692 'move' ret[595687](595691 'deref' call_tmp[753029]))
    gotoReturn _end_chpl_createBytesWithLiteral[595685] _end_chpl_createBytesWithLiteral[595685]
    (548397 'end of statement' buf[33127])
    label _end_chpl_createBytesWithLiteral[595685]
    (595689 return ret[595687])
    (396019 'used modules list'(33158 'import' POSIX[12822].{memcpy}))
  }
  function bytes[232].createBorrowingBuffer[33195](arg _mt[33216]:_MT[201], arg this[33198]:bytes[232] :
  bytes[232], arg x[33205]:c_ptr[46891](?), arg length[33209]:int(64)[10], arg size[33213]:int(64)[10]) : _unknown[42] "inline" "method" "@unstable"
  {
    unknown ret[595698] "RVV" "temp"
    unknown tmp[477879] "maybe param" "temp"
    unknown call_tmp[753034] "expr temp" "maybe param" "maybe type" "temp"
    (753037 'move' call_tmp[753034](514576 'query' x[33205] 1))
    unknown call_tmp[753039] "expr temp" "maybe param" "maybe type" "temp"
    (753042 'move' call_tmp[753039](33236 call uint(64)[86] 8))
    (477890 'move' tmp[477879](33232 call != call_tmp[753034] call_tmp[753039]))
    unknown call_tmp[753044] "expr temp" "maybe param" "maybe type" "temp"
    (753047 'move' call_tmp[753044](477892 call _cond_invalid tmp[477879]))
    if call_tmp[753044]
    {
      (477895 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[665979] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[665980] "maybe param" "temp"
    unknown call_tmp[753049] "expr temp" "maybe param" "maybe type" "temp"
    (753052 'move' call_tmp[753049](477880 call isTrue tmp[477879]))
    (665985 'move' tmp[665980](665983 call _cond_test call_tmp[753049]))
    if tmp[665980]
    {
      unknown tmp[665987] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753054] "expr temp" "maybe param" "maybe type" "temp"
      (753057 'move' call_tmp[753054](514579 'query' x[33205] 1))
      unknown call_tmp[753059] "expr temp" "maybe param" "maybe type" "temp"
      (753062 'move' call_tmp[753059](33242 call int(64)[10] 8))
      unknown call_tmp[753064] "expr temp" "maybe param" "maybe type" "temp"
      (753067 'move' call_tmp[753064](33238 call != call_tmp[753054] call_tmp[753059]))
      (665989 'move' tmp[665987](477883 call isTrue call_tmp[753064]))
      (665994 'move' tmp[665979](665991 '_paramFoldLogical' tmp[665980] tmp[665987]))
    }
    {
      (665999 'move' tmp[665979](665996 '_paramFoldLogical' tmp[665980] 0))
    }
    unknown call_tmp[753069] "expr temp" "maybe param" "maybe type" "temp"
    (753072 'move' call_tmp[753069](33244 call _cond_test tmp[665979]))
    if call_tmp[753069]
    {
      unknown call_tmp[753074] "expr temp" "maybe param" "maybe type" "temp"
      (753077 'move' call_tmp[753074](514582 'query' x[33205] 1))
      unknown call_tmp[753079] "expr temp" "maybe param" "maybe type" "temp"
      (753082 'move' call_tmp[753079](33226 call : call_tmp[753074] string[244]))
      (33222 call compilerError "Cannot create a bytes with a buffer of " call_tmp[753079])
    }
    unknown ret[33249] "dead at end of block" "insert auto destroy"
    (643726 'default init var' ret[33249] bytes[232])
    (33252 'end of statement')
    unknown call_tmp[753084] "expr temp" "maybe param" "maybe type" "temp"
    (753087 'move' call_tmp[753084](33256 call : x[33205] bufferType[30212]))
    (33254 call initWithBorrowedBuffer ret[33249] call_tmp[753084] length[33209] size[33213])
    (548401 'end of statement' ret[33249])
    (595704 'move' ret[595698](595703 'coerce' ret[33249] bytes[232]))
    gotoReturn _end_createBorrowingBuffer[595696] _end_createBorrowingBuffer[595696]
    (548403 'end of statement' ret[33249])
    label _end_createBorrowingBuffer[595696]
    (595700 return ret[595698])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createAdoptingBuffer[33267](arg _mt[33286]:_MT[201], arg this[33270]:bytes[232] :
  bytes[232], arg x[33277]:c_ptr[46891](?), arg length[33283] :
  (1001787 call strLen x[33277]) =
  (33281 call strLen x[33277])) : _unknown[42] "inline" "method"
  {
    unknown ret[595710] "RVV" "temp"
    unknown call_tmp[753091] "expr temp" "maybe param" "maybe type" "temp"
    (753094 'move' call_tmp[753091](33296 call : x[33277] bufferType[30212]))
    unknown call_tmp[753096] "expr temp" "maybe param" "maybe type" "temp"
    (753099 'move' call_tmp[753096](33302 call + length[33283] 1))
    unknown call_tmp[753101] "expr temp" "maybe param" "maybe type" "temp"
    (753104 'move' call_tmp[753101](33295 call(33292 call (partial) createAdoptingBuffer _mt[203] bytes[232]) call_tmp[753091](length = length[33283])(size = call_tmp[753096])))
    (595716 'move' ret[595710](595715 'coerce' call_tmp[753101] bytes[232]))
    (595712 return ret[595710])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createAdoptingBuffer[33310](arg _mt[33327]:_MT[201], arg this[33313]:bytes[232] :
  bytes[232], arg x[33317]:chpl_c_string[16], arg length[33324] :
  (1001791 call size _mt[203] x[33317]) =
  (33321 call size _mt[203] x[33317])) : _unknown[42] "deprecated" "inline" "method"
  {
    unknown ret[595720] "RVV" "temp"
    unknown call_tmp[753110] "expr temp" "maybe param" "maybe type" "temp"
    (753113 'move' call_tmp[753110](33337 call : x[33317] bufferType[30212]))
    unknown call_tmp[753115] "expr temp" "maybe param" "maybe type" "temp"
    (753118 'move' call_tmp[753115](33343 call + length[33324] 1))
    unknown call_tmp[753120] "expr temp" "maybe param" "maybe type" "temp"
    (753123 'move' call_tmp[753120](33336 call(33333 call (partial) createAdoptingBuffer _mt[203] bytes[232]) call_tmp[753110](length = length[33324])(size = call_tmp[753115])))
    (595726 'move' ret[595720](595725 'coerce' call_tmp[753120] bytes[232]))
    (595722 return ret[595720])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createAdoptingBuffer[33351](arg _mt[33370]:_MT[201], arg this[33354]:bytes[232] :
  bytes[232], arg x[33361]:c_ptrConst[46990](?), arg length[33367] :
  (1001796 call strLen x[33361]) =
  (33365 call strLen x[33361])) : _unknown[42] "inline" "method"
  {
    unknown ret[595730] "RVV" "temp"
    unknown call_tmp[753127] "expr temp" "maybe param" "maybe type" "temp"
    (753130 'move' call_tmp[753127](33380 call : x[33361] bufferType[30212]))
    unknown call_tmp[753132] "expr temp" "maybe param" "maybe type" "temp"
    (753135 'move' call_tmp[753132](33386 call + length[33367] 1))
    unknown call_tmp[753137] "expr temp" "maybe param" "maybe type" "temp"
    (753140 'move' call_tmp[753137](33379 call(33376 call (partial) createAdoptingBuffer _mt[203] bytes[232]) call_tmp[753127](length = length[33367])(size = call_tmp[753132])))
    (595736 'move' ret[595730](595735 'coerce' call_tmp[753137] bytes[232]))
    (595732 return ret[595730])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createAdoptingBuffer[33394](arg _mt[33415]:_MT[201], arg this[33397]:bytes[232] :
  bytes[232], arg x[33404]:c_ptr[46891](?), arg length[33408]:int(64)[10], arg size[33412]:int(64)[10]) : _unknown[42] "inline" "method"
  {
    unknown ret[595740] "RVV" "temp"
    unknown tmp[477900] "maybe param" "temp"
    unknown call_tmp[753142] "expr temp" "maybe param" "maybe type" "temp"
    (753145 'move' call_tmp[753142](514606 'query' x[33404] 1))
    unknown call_tmp[753147] "expr temp" "maybe param" "maybe type" "temp"
    (753150 'move' call_tmp[753147](33433 call uint(64)[86] 8))
    (477911 'move' tmp[477900](33429 call != call_tmp[753142] call_tmp[753147]))
    unknown call_tmp[753152] "expr temp" "maybe param" "maybe type" "temp"
    (753155 'move' call_tmp[753152](477913 call _cond_invalid tmp[477900]))
    if call_tmp[753152]
    {
      (477916 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[666006] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666007] "maybe param" "temp"
    unknown call_tmp[753157] "expr temp" "maybe param" "maybe type" "temp"
    (753160 'move' call_tmp[753157](477901 call isTrue tmp[477900]))
    (666012 'move' tmp[666007](666010 call _cond_test call_tmp[753157]))
    if tmp[666007]
    {
      unknown tmp[666014] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753162] "expr temp" "maybe param" "maybe type" "temp"
      (753165 'move' call_tmp[753162](514609 'query' x[33404] 1))
      unknown call_tmp[753167] "expr temp" "maybe param" "maybe type" "temp"
      (753170 'move' call_tmp[753167](33439 call int(64)[10] 8))
      unknown call_tmp[753172] "expr temp" "maybe param" "maybe type" "temp"
      (753175 'move' call_tmp[753172](33435 call != call_tmp[753162] call_tmp[753167]))
      (666016 'move' tmp[666014](477904 call isTrue call_tmp[753172]))
      (666021 'move' tmp[666006](666018 '_paramFoldLogical' tmp[666007] tmp[666014]))
    }
    {
      (666026 'move' tmp[666006](666023 '_paramFoldLogical' tmp[666007] 0))
    }
    unknown call_tmp[753177] "expr temp" "maybe param" "maybe type" "temp"
    (753180 'move' call_tmp[753177](33441 call _cond_test tmp[666006]))
    if call_tmp[753177]
    {
      unknown call_tmp[753182] "expr temp" "maybe param" "maybe type" "temp"
      (753185 'move' call_tmp[753182](514612 'query' x[33404] 1))
      unknown call_tmp[753187] "expr temp" "maybe param" "maybe type" "temp"
      (753190 'move' call_tmp[753187](33423 call : call_tmp[753182] string[244]))
      (33421 call compilerError "Cannot create a bytes with a buffer of " call_tmp[753187])
    }
    unknown ret[33446] "dead at end of block" "insert auto destroy"
    (643728 'default init var' ret[33446] bytes[232])
    (33449 'end of statement')
    (33451 call initWithOwnedBuffer ret[33446] x[33404] length[33408] size[33412])
    (548410 'end of statement' ret[33446])
    (595746 'move' ret[595740](595745 'coerce' ret[33446] bytes[232]))
    gotoReturn _end_createAdoptingBuffer[595738] _end_createAdoptingBuffer[595738]
    (548412 'end of statement' ret[33446])
    label _end_createAdoptingBuffer[595738]
    (595742 return ret[595740])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createCopyingBuffer[33461](arg _mt[33480]:_MT[201], arg this[33464]:bytes[232] :
  bytes[232], arg x[33471]:c_ptrConst[46990](?), arg length[33477] :
  (1001800 call strLen x[33471]) =
  (33475 call strLen x[33471])) : _unknown[42] "inline" "method"
  {
    unknown ret[595752] "RVV" "temp"
    unknown call_tmp[753194] "expr temp" "maybe param" "maybe type" "temp"
    (753197 'move' call_tmp[753194](33490 call : x[33471] bufferType[30212]))
    unknown call_tmp[753199] "expr temp" "maybe param" "maybe type" "temp"
    (753202 'move' call_tmp[753199](33496 call + length[33477] 1))
    unknown call_tmp[753204] "expr temp" "maybe param" "maybe type" "temp"
    (753207 'move' call_tmp[753204](33489 call(33486 call (partial) createCopyingBuffer _mt[203] bytes[232]) call_tmp[753194](length = length[33477])(size = call_tmp[753199])))
    (595758 'move' ret[595752](595757 'coerce' call_tmp[753204] bytes[232]))
    (595754 return ret[595752])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createCopyingBuffer[33504](arg _mt[33521]:_MT[201], arg this[33507]:bytes[232] :
  bytes[232], arg x[33511]:chpl_c_string[16], arg length[33518] :
  (1001804 call size _mt[203] x[33511]) =
  (33515 call size _mt[203] x[33511])) : _unknown[42] "deprecated" "inline" "method"
  {
    unknown ret[595762] "RVV" "temp"
    unknown call_tmp[753213] "expr temp" "maybe param" "maybe type" "temp"
    (753216 'move' call_tmp[753213](33531 call : x[33511] bufferType[30212]))
    unknown call_tmp[753218] "expr temp" "maybe param" "maybe type" "temp"
    (753221 'move' call_tmp[753218](33537 call + length[33518] 1))
    unknown call_tmp[753223] "expr temp" "maybe param" "maybe type" "temp"
    (753226 'move' call_tmp[753223](33530 call(33527 call (partial) createCopyingBuffer _mt[203] bytes[232]) call_tmp[753213](length = length[33518])(size = call_tmp[753218])))
    (595768 'move' ret[595762](595767 'coerce' call_tmp[753223] bytes[232]))
    (595764 return ret[595762])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].createCopyingBuffer[33545](arg _mt[33571]:_MT[201], arg this[33548]:bytes[232] :
  bytes[232], arg x[33555]:c_ptr[46891](?), arg length[33561] :
  (1001809 call strLen x[33555]) =
  (33559 call strLen x[33555]), arg size[33568] :
  (1001813 call + length[33561] 1) =
  (33564 call + length[33561] 1)) : _unknown[42] "inline" "method"
  {
    unknown ret[595772] "RVV" "temp"
    unknown tmp[477921] "maybe param" "temp"
    unknown call_tmp[753228] "expr temp" "maybe param" "maybe type" "temp"
    (753231 'move' call_tmp[753228](514629 'query' x[33555] 1))
    unknown call_tmp[753233] "expr temp" "maybe param" "maybe type" "temp"
    (753236 'move' call_tmp[753233](33589 call uint(64)[86] 8))
    (477932 'move' tmp[477921](33585 call != call_tmp[753228] call_tmp[753233]))
    unknown call_tmp[753238] "expr temp" "maybe param" "maybe type" "temp"
    (753241 'move' call_tmp[753238](477934 call _cond_invalid tmp[477921]))
    if call_tmp[753238]
    {
      (477937 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[666033] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666034] "maybe param" "temp"
    unknown call_tmp[753243] "expr temp" "maybe param" "maybe type" "temp"
    (753246 'move' call_tmp[753243](477922 call isTrue tmp[477921]))
    (666039 'move' tmp[666034](666037 call _cond_test call_tmp[753243]))
    if tmp[666034]
    {
      unknown tmp[666041] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753248] "expr temp" "maybe param" "maybe type" "temp"
      (753251 'move' call_tmp[753248](514632 'query' x[33555] 1))
      unknown call_tmp[753253] "expr temp" "maybe param" "maybe type" "temp"
      (753256 'move' call_tmp[753253](33595 call int(64)[10] 8))
      unknown call_tmp[753258] "expr temp" "maybe param" "maybe type" "temp"
      (753261 'move' call_tmp[753258](33591 call != call_tmp[753248] call_tmp[753253]))
      (666043 'move' tmp[666041](477925 call isTrue call_tmp[753258]))
      (666048 'move' tmp[666033](666045 '_paramFoldLogical' tmp[666034] tmp[666041]))
    }
    {
      (666053 'move' tmp[666033](666050 '_paramFoldLogical' tmp[666034] 0))
    }
    unknown call_tmp[753263] "expr temp" "maybe param" "maybe type" "temp"
    (753266 'move' call_tmp[753263](33597 call _cond_test tmp[666033]))
    if call_tmp[753263]
    {
      unknown call_tmp[753268] "expr temp" "maybe param" "maybe type" "temp"
      (753271 'move' call_tmp[753268](514635 'query' x[33555] 1))
      unknown call_tmp[753273] "expr temp" "maybe param" "maybe type" "temp"
      (753276 'move' call_tmp[753273](33579 call : call_tmp[753268] string[244]))
      (33577 call compilerError "Cannot create a bytes with a buffer of " call_tmp[753273])
    }
    unknown ret[33602] "dead at end of block" "insert auto destroy"
    (643730 'default init var' ret[33602] bytes[232])
    (33605 'end of statement')
    (33607 call initWithNewBuffer ret[33602] x[33555] length[33561] size[33568])
    (548418 'end of statement' ret[33602])
    (595778 'move' ret[595772](595777 'coerce' ret[33602] bytes[232]))
    gotoReturn _end_createCopyingBuffer[595770] _end_createCopyingBuffer[595770]
    (548420 'end of statement' ret[33602])
    label _end_createCopyingBuffer[595770]
    (595774 return ret[595772])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].init[33649](arg _mt[33653]:_MT[201], ref arg this[33651]:bytes[232]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown buffLen[514641] "temp"
    (514644 'init var' buffLen[514641] 0 int(64)[10])
    (514646 'init field' this[33651] c"buffLen" buffLen[514641])
    (548422 'end of statement')
    unknown buffSize[514651] "temp"
    (514654 'init var' buffSize[514651] 0 int(64)[10])
    (514656 'init field' this[33651] c"buffSize" buffSize[514651])
    (548423 'end of statement')
    unknown buff[514661] "temp"
    (514664 'init var' buff[514661] nil[32] bufferType[30212])
    (514666 'init field' this[33651] c"buff" buff[514661])
    (548424 'end of statement')
    unknown isOwned[514671] "temp"
    (514674 'init var' isOwned[514671] 1 bool[19])
    (514676 'init field' this[33651] c"isOwned" isOwned[514671])
    (548425 'end of statement')
    unknown call_tmp[753278] "maybe param" "maybe type" "temp"
    (753281 'move' call_tmp[753278](514681 call chpl_nodeID[305038]))
    unknown locale_id[514682] "temp"
    (514684 'init var' locale_id[514682] call_tmp[753278])
    (514686 '.=' this[33651] c"locale_id" locale_id[514682])
    (548426 'end of statement')
    (595782 return _void[46])
  }
  function bytes[232].deinit[33658](arg _mt[33662]:_MT[201], ref arg this[33660]:bytes[232]) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    unknown tmp[477942] "maybe param" "temp"
    (477953 'move' tmp[477942](416905 call isOwned _mt[203] this[33660]))
    unknown call_tmp[753285] "expr temp" "maybe param" "maybe type" "temp"
    (753288 'move' call_tmp[753285](477955 call _cond_invalid tmp[477942]))
    if call_tmp[753285]
    {
      (477958 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[666060] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666061] "maybe param" "temp"
    unknown call_tmp[753290] "expr temp" "maybe param" "maybe type" "temp"
    (753293 'move' call_tmp[753290](477943 call isTrue tmp[477942]))
    (666066 'move' tmp[666061](666064 call _cond_test call_tmp[753290]))
    if tmp[666061]
    {
      unknown tmp[666068] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753297] "expr temp" "maybe param" "maybe type" "temp"
      (753300 'move' call_tmp[753297](33697 call buff _mt[203] this[33660]))
      unknown call_tmp[753302] "expr temp" "maybe param" "maybe type" "temp"
      (753305 'move' call_tmp[753302](33694 call != call_tmp[753297] nil[32]))
      (666070 'move' tmp[666068](477946 call isTrue call_tmp[753302]))
      (666075 'move' tmp[666060](666072 '_paramFoldLogical' tmp[666061] tmp[666068]))
    }
    {
      (666080 'move' tmp[666060](666077 '_paramFoldLogical' tmp[666061] 0))
    }
    unknown call_tmp[753307] "expr temp" "maybe param" "maybe type" "temp"
    (753310 'move' call_tmp[753307](33701 call _cond_test tmp[666060]))
    if call_tmp[753307]
    {
      {
        const tmp[33683] "const" "temp"
        unknown call_tmp[753314] "expr temp" "maybe param" "maybe type" "temp"
        (753317 'move' call_tmp[753314](33670 call locale_id _mt[203] this[33660]))
        unknown call_tmp[753319] "expr temp" "maybe param" "maybe type" "temp"
        (753322 'move' call_tmp[753319](33668 call chpl_buildLocaleID call_tmp[753314] c_sublocid_any[135202]))
        unknown call_tmp[753324] "expr temp" "maybe param" "maybe type" "temp"
        (753327 'move' call_tmp[753324](33666 'chpl_on_locale_num' call_tmp[753319]))
        (33684 'move' tmp[33683](33681 'deref' call_tmp[753324]))
        {
          unknown call_tmp[753331] "expr temp" "maybe param" "maybe type" "temp"
          (753334 'move' call_tmp[753331](33678 call buff _mt[203] this[33660]))
          (33676 call chpl_here_free call_tmp[753331])
        }
        (33687 'elided on block' 0 tmp[33683])
      }
    }
    (595784 return _void[46])
  }
  function bytes[232].chpl__serialize[33707](arg _mt[33711]:_MT[201], arg this[33709]:bytes[232]) : _unknown[42] "method" "primary method"
  {
    unknown ret[595788] "RVV" "temp"
    unknown data[33715] "dead at end of block" "insert auto destroy"
    (643732 'default init var' data[33715] chpl__inPlaceBuffer[37917])
    (33718 'end of statement')
    unknown call_tmp[753338] "expr temp" "maybe param" "maybe type" "temp"
    (753341 'move' call_tmp[753338](416927 call buffLen _mt[203] this[33709]))
    unknown call_tmp[753343] "expr temp" "maybe param" "maybe type" "temp"
    (753346 'move' call_tmp[753343](33728 call <= call_tmp[753338] CHPL_SHORT_STRING_SIZE[37911]))
    unknown call_tmp[753348] "expr temp" "maybe param" "maybe type" "temp"
    (753351 'move' call_tmp[753348](33732 call _cond_test call_tmp[753343]))
    if call_tmp[753348]
    {
      unknown call_tmp[753353] "expr temp" "maybe param" "maybe type" "temp"
      (753356 'move' call_tmp[753353](33723 call chpl__getInPlaceBufferDataForWrite data[33715]))
      unknown call_tmp[753360] "expr temp" "maybe param" "maybe type" "temp"
      (753363 'move' call_tmp[753360](416912 call locale_id _mt[203] this[33709]))
      unknown call_tmp[753367] "expr temp" "maybe param" "maybe type" "temp"
      (753370 'move' call_tmp[753367](416917 call buff _mt[203] this[33709]))
      unknown call_tmp[753374] "expr temp" "maybe param" "maybe type" "temp"
      (753377 'move' call_tmp[753374](416922 call buffLen _mt[203] this[33709]))
      (33721 call chpl_string_comm_get call_tmp[753353] call_tmp[753360] call_tmp[753367] call_tmp[753374])
      (548429 'end of statement' data[33715])
    }
    unknown call_tmp[753381] "expr temp" "maybe param" "maybe type" "temp"
    (753384 'move' call_tmp[753381](416934 call buffLen _mt[203] this[33709]))
    unknown call_tmp[753388] "expr temp" "maybe param" "maybe type" "temp"
    (753391 'move' call_tmp[753388](416939 call buff _mt[203] this[33709]))
    unknown call_tmp[753395] "expr temp" "maybe param" "maybe type" "temp"
    (753398 'move' call_tmp[753395](416944 call buffSize _mt[203] this[33709]))
    unknown call_tmp[753402] "expr temp" "maybe param" "maybe type" "temp"
    (753405 'move' call_tmp[753402](416949 call locale_id _mt[203] this[33709]))
    unknown call_tmp[753409] "expr temp" "maybe param" "maybe type" "temp"
    (753412 'move' call_tmp[753409](416955 call buffLen _mt[203] this[33709]))
    unknown call_tmp[753414] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (753417 'move' call_tmp[753414](1000012 'new' __serializeHelper[37973] call_tmp[753381] call_tmp[753388] call_tmp[753395] call_tmp[753402] data[33715] call_tmp[753409]))
    (595793 'move' ret[595788](595792 'deref' call_tmp[753414]))
    gotoReturn _end_chpl__serialize[595786] _end_chpl__serialize[595786]
    (548431 'end of statement' data[33715])
    label _end_chpl__serialize[595786]
    (595790 return ret[595788])
  }
  function bytes[232].chpl__deserialize[33748](arg _mt[33754]:_MT[201], arg this[33750]:bytes[232], arg data[33752]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[595799] "RVV" "temp"
    unknown call_tmp[753421] "expr temp" "maybe param" "maybe type" "temp"
    (753424 'move' call_tmp[753421](33846 call locale_id _mt[203] data[33752]))
    unknown call_tmp[753426] "expr temp" "maybe param" "maybe type" "temp"
    (753429 'move' call_tmp[753426](416960 call chpl_nodeID[305038]))
    unknown call_tmp[753431] "expr temp" "maybe param" "maybe type" "temp"
    (753434 'move' call_tmp[753431](33843 call != call_tmp[753421] call_tmp[753426]))
    unknown call_tmp[753436] "expr temp" "maybe param" "maybe type" "temp"
    (753439 'move' call_tmp[753436](33850 call _cond_test call_tmp[753431]))
    if call_tmp[753436]
    {
      unknown call_tmp[753443] "expr temp" "maybe param" "maybe type" "temp"
      (753446 'move' call_tmp[753443](33816 call buffLen _mt[203] data[33752]))
      unknown call_tmp[753448] "expr temp" "maybe param" "maybe type" "temp"
      (753451 'move' call_tmp[753448](33813 call <= call_tmp[753443] CHPL_SHORT_STRING_SIZE[37911]))
      unknown call_tmp[753453] "expr temp" "maybe param" "maybe type" "temp"
      (753456 'move' call_tmp[753453](33820 call _cond_test call_tmp[753448]))
      if call_tmp[753453]
      {
        unknown call_tmp[753462] "expr temp" "maybe param" "maybe type" "temp"
        (753465 'move' call_tmp[753462](33768 call shortData _mt[203] data[33752]))
        unknown call_tmp[753467] "expr temp" "maybe param" "maybe type" "temp"
        (753470 'move' call_tmp[753467](33766 call chpl__getInPlaceBufferData call_tmp[753462]))
        unknown call_tmp[753474] "expr temp" "maybe param" "maybe type" "temp"
        (753477 'move' call_tmp[753474](33772 call buffLen _mt[203] data[33752]))
        unknown call_tmp[753481] "expr temp" "maybe param" "maybe type" "temp"
        (753484 'move' call_tmp[753481](33776 call size _mt[203] data[33752]))
        unknown call_tmp[753486] "expr temp" "maybe param" "maybe type" "temp"
        (753489 'move' call_tmp[753486](33764 call(33761 call (partial) createCopyingBuffer _mt[203] bytes[232]) call_tmp[753467] call_tmp[753474] call_tmp[753481]))
        (595804 'move' ret[595799](595803 'deref' call_tmp[753486]))
        gotoReturn _end_chpl__deserialize[595797] _end_chpl__deserialize[595797]
      }
      {
        unknown call_tmp[753493] "expr temp" "maybe param" "maybe type" "temp"
        (753496 'move' call_tmp[753493](33785 call locale_id _mt[203] data[33752]))
        unknown call_tmp[753500] "expr temp" "maybe param" "maybe type" "temp"
        (753503 'move' call_tmp[753500](33789 call buff _mt[203] data[33752]))
        unknown call_tmp[753507] "expr temp" "maybe param" "maybe type" "temp"
        (753510 'move' call_tmp[753507](33793 call buffLen _mt[203] data[33752]))
        unknown call_tmp[753512] "maybe param" "maybe type" "temp"
        (753515 'move' call_tmp[753512](33783 call bufferCopyRemote call_tmp[753493] call_tmp[753500] call_tmp[753507]))
        unknown localBuff[33781] "dead at end of block" "insert auto destroy"
        (643734 'init var' localBuff[33781] call_tmp[753512])
        (33797 'end of statement')
        unknown call_tmp[753521] "expr temp" "maybe param" "maybe type" "temp"
        (753524 'move' call_tmp[753521](33806 call buffLen _mt[203] data[33752]))
        unknown call_tmp[753528] "expr temp" "maybe param" "maybe type" "temp"
        (753531 'move' call_tmp[753528](33810 call size _mt[203] data[33752]))
        unknown call_tmp[753533] "expr temp" "maybe param" "maybe type" "temp"
        (753536 'move' call_tmp[753533](33803 call(33800 call (partial) createAdoptingBuffer _mt[203] bytes[232]) localBuff[33781] call_tmp[753521] call_tmp[753528]))
        (595809 'move' ret[595799](595808 'deref' call_tmp[753533]))
        gotoReturn _end_chpl__deserialize[595797] _end_chpl__deserialize[595797]
        (548434 'end of statement' localBuff[33781])
      }
    }
    {
      unknown call_tmp[753542] "expr temp" "maybe param" "maybe type" "temp"
      (753545 'move' call_tmp[753542](33832 call buff _mt[203] data[33752]))
      unknown call_tmp[753549] "expr temp" "maybe param" "maybe type" "temp"
      (753552 'move' call_tmp[753549](33836 call buffLen _mt[203] data[33752]))
      unknown call_tmp[753556] "expr temp" "maybe param" "maybe type" "temp"
      (753559 'move' call_tmp[753556](33840 call size _mt[203] data[33752]))
      unknown call_tmp[753561] "expr temp" "maybe param" "maybe type" "temp"
      (753564 'move' call_tmp[753561](33830 call(33827 call (partial) createBorrowingBuffer _mt[203] bytes[232]) call_tmp[753542] call_tmp[753549] call_tmp[753556]))
      (595814 'move' ret[595799](595813 'deref' call_tmp[753561]))
      gotoReturn _end_chpl__deserialize[595797] _end_chpl__deserialize[595797]
    }
    label _end_chpl__deserialize[595797]
    (595801 return ret[595799])
  }
  function bytes[232].serialize[33856](arg _mt[33864]:_MT[201], arg this[33858]:bytes[232], arg writer[33860]:_any[141](?), ref arg serializer[33862]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (33868 call compilerError "not implemented: serialize")
    (595818 return _void[46])
  }
  function bytes[232].deserialize[33872](arg _mt[33880]:_MT[201], ref arg this[33874]:bytes[232], arg reader[33876]:_any[141](?), ref arg deserialize[33878]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (33884 call compilerError "not implemented: deserialize")
    (595820 return _void[46])
  }
  function bytes[232].init=[33890](arg _mt[33898]:_MT[201], ref arg this[33892]:bytes[232], arg b[33895]:bytes[232]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown buffLen[514691] "temp"
    (514694 'init var' buffLen[514691] 0 int(64)[10])
    (514696 'init field' this[33892] c"buffLen" buffLen[514691])
    (548439 'end of statement')
    unknown buffSize[514701] "temp"
    (514704 'init var' buffSize[514701] 0 int(64)[10])
    (514706 'init field' this[33892] c"buffSize" buffSize[514701])
    (548440 'end of statement')
    unknown buff[514711] "temp"
    (514714 'init var' buff[514711] nil[32] bufferType[30212])
    (514716 'init field' this[33892] c"buff" buff[514711])
    (548441 'end of statement')
    unknown isOwned[514721] "temp"
    (514724 'init var' isOwned[514721] 1 bool[19])
    (514726 'init field' this[33892] c"isOwned" isOwned[514721])
    (548442 'end of statement')
    unknown call_tmp[753566] "maybe param" "maybe type" "temp"
    (753569 'move' call_tmp[753566](514731 call chpl_nodeID[305038]))
    unknown locale_id[514732] "temp"
    (514734 'init var' locale_id[514732] call_tmp[753566])
    (514736 '.=' this[33892] c"locale_id" locale_id[514732])
    (548443 'end of statement')
    (514740 'init done')
    (548444 'end of statement')
    (33907 call initWithNewBuffer this[33892] b[33895])
    (595822 return _void[46])
  }
  function bytes[232].init=[33912](arg _mt[33920]:_MT[201], ref arg this[33914]:bytes[232], arg b[33917]:string[244]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown buffLen[514742] "temp"
    (514745 'init var' buffLen[514742] 0 int(64)[10])
    (514747 'init field' this[33914] c"buffLen" buffLen[514742])
    (548446 'end of statement')
    unknown buffSize[514752] "temp"
    (514755 'init var' buffSize[514752] 0 int(64)[10])
    (514757 'init field' this[33914] c"buffSize" buffSize[514752])
    (548447 'end of statement')
    unknown buff[514762] "temp"
    (514765 'init var' buff[514762] nil[32] bufferType[30212])
    (514767 'init field' this[33914] c"buff" buff[514762])
    (548448 'end of statement')
    unknown isOwned[514772] "temp"
    (514775 'init var' isOwned[514772] 1 bool[19])
    (514777 'init field' this[33914] c"isOwned" isOwned[514772])
    (548449 'end of statement')
    unknown call_tmp[753571] "maybe param" "maybe type" "temp"
    (753574 'move' call_tmp[753571](514782 call chpl_nodeID[305038]))
    unknown locale_id[514783] "temp"
    (514785 'init var' locale_id[514783] call_tmp[753571])
    (514787 '.=' this[33914] c"locale_id" locale_id[514783])
    (548450 'end of statement')
    (514791 'init done')
    (548451 'end of statement')
    unknown call_tmp[753578] "expr temp" "maybe param" "maybe type" "temp"
    (753581 'move' call_tmp[753578](33932 call buff _mt[203] b[33917]))
    unknown call_tmp[753585] "expr temp" "maybe param" "maybe type" "temp"
    (753588 'move' call_tmp[753585](33936 call numBytes _mt[203] b[33917]))
    unknown call_tmp[753592] "expr temp" "maybe param" "maybe type" "temp"
    (753595 'move' call_tmp[753592](33943 call numBytes _mt[203] b[33917]))
    unknown call_tmp[753597] "expr temp" "maybe param" "maybe type" "temp"
    (753600 'move' call_tmp[753597](33940 call + call_tmp[753592] 1))
    (33929 call initWithNewBuffer this[33914] call_tmp[753578](length = call_tmp[753585])(size = call_tmp[753597]))
    (595824 return _void[46])
  }
  function bytes[232].init=[33950](arg _mt[33958]:_MT[201], ref arg this[33952]:bytes[232], arg b[33955] :
  c_string[51978]) : void[4] "deprecated" "method" "primary method" "no return value for void"
  {
    unknown buffLen[514793] "temp"
    (514796 'init var' buffLen[514793] 0 int(64)[10])
    (514798 'init field' this[33952] c"buffLen" buffLen[514793])
    (548453 'end of statement')
    unknown buffSize[514803] "temp"
    (514806 'init var' buffSize[514803] 0 int(64)[10])
    (514808 'init field' this[33952] c"buffSize" buffSize[514803])
    (548454 'end of statement')
    unknown buff[514813] "temp"
    (514816 'init var' buff[514813] nil[32] bufferType[30212])
    (514818 'init field' this[33952] c"buff" buff[514813])
    (548455 'end of statement')
    unknown isOwned[514823] "temp"
    (514826 'init var' isOwned[514823] 1 bool[19])
    (514828 'init field' this[33952] c"isOwned" isOwned[514823])
    (548456 'end of statement')
    unknown call_tmp[753602] "maybe param" "maybe type" "temp"
    (753605 'move' call_tmp[753602](514833 call chpl_nodeID[305038]))
    unknown locale_id[514834] "temp"
    (514836 'init var' locale_id[514834] call_tmp[753602])
    (514838 '.=' this[33952] c"locale_id" locale_id[514834])
    (548457 'end of statement')
    (514842 'init done')
    (548458 'end of statement')
    unknown call_tmp[753609] "maybe param" "maybe type" "temp"
    (753612 'move' call_tmp[753609](33969 call size _mt[203] b[33955]))
    unknown length[33967] "dead at end of block" "insert auto destroy"
    (643736 'init var' length[33967] call_tmp[753609])
    (33973 'end of statement')
    unknown call_tmp[753614] "expr temp" "maybe param" "maybe type" "temp"
    (753617 'move' call_tmp[753614](33977 call : b[33955] bufferType[30212]))
    unknown call_tmp[753619] "expr temp" "maybe param" "maybe type" "temp"
    (753622 'move' call_tmp[753619](33983 call + length[33967] 1))
    (33975 call initWithNewBuffer this[33952] call_tmp[753614](length = length[33967])(size = call_tmp[753619]))
    (548459 'end of statement' length[33967])
    (595826 return _void[46])
  }
  function bytes[232].byteIndices[33990](arg _mt[33994]:_MT[201], arg this[33992]:bytes[232]) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[595830] "RVV" "temp"
    unknown call_tmp[753626] "expr temp" "maybe param" "maybe type" "temp"
    (753629 'move' call_tmp[753626](416972 call size _mt[203] this[33992]))
    unknown call_tmp[753631] "expr temp" "maybe param" "maybe type" "temp"
    (753634 'move' call_tmp[753631](34000 call chpl__nudgeHighBound call_tmp[753626]))
    unknown call_tmp[753636] "expr temp" "maybe param" "maybe type" "temp"
    (753639 'move' call_tmp[753636](34002 call chpl_build_bounded_range 0 call_tmp[753631]))
    (595835 'move' ret[595830](595834 'deref' call_tmp[753636]))
    (595832 return ret[595830])
  }
  function bytes[232].size[34006](arg _mt[34010]:_MT[201], param arg this[34008]:bytes[232]) param : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[595839] "RVV" "param" "temp"
    unknown call_tmp[753641] "expr temp" "maybe param" "maybe type" "temp"
    (753644 'move' call_tmp[753641](34014 'string_length_bytes' this[34008]))
    (595844 'move' ret[595839](595843 'deref' call_tmp[753641]))
    (595841 return ret[595839])
  }
  function bytes[232].numBytes[34018](arg _mt[34022]:_MT[201], param arg this[34020]:bytes[232]) param : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[595848] "RVV" "param" "temp"
    unknown call_tmp[753646] "expr temp" "maybe param" "maybe type" "temp"
    (753649 'move' call_tmp[753646](34026 'string_length_bytes' this[34020]))
    (595853 'move' ret[595848](595852 'deref' call_tmp[753646]))
    (595850 return ret[595848])
  }
  function bytes[232].this[34030](arg _mt[34038]:_MT[201], param arg this[34032]:bytes[232], param arg i[34035]:int(64)[10]) param : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[595857] "RVV" "param" "temp"
    unknown tmp[477963] "maybe param" "temp"
    (477974 'move' tmp[477963](34068 call < i[34035] 0))
    unknown call_tmp[753651] "expr temp" "maybe param" "maybe type" "temp"
    (753654 'move' call_tmp[753651](477976 call _cond_invalid tmp[477963]))
    if call_tmp[753651]
    {
      (477979 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[666087] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666088] "maybe param" "temp"
    unknown call_tmp[753656] "expr temp" "maybe param" "maybe type" "temp"
    (753659 'move' call_tmp[753656](477964 call isTrue tmp[477963]))
    (666093 'move' tmp[666088](666091 call _cond_test call_tmp[753656]))
    if tmp[666088]
    {
      (666098 'move' tmp[666087](666095 '_paramFoldLogical' tmp[666088] 1))
    }
    {
      unknown tmp[666100] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753663] "expr temp" "maybe param" "maybe type" "temp"
      (753666 'move' call_tmp[753663](34078 call size _mt[203] this[34032]))
      unknown call_tmp[753668] "expr temp" "maybe param" "maybe type" "temp"
      (753671 'move' call_tmp[753668](34075 call - call_tmp[753663] 1))
      unknown call_tmp[753673] "expr temp" "maybe param" "maybe type" "temp"
      (753676 'move' call_tmp[753673](34072 call > i[34035] call_tmp[753668]))
      (666102 'move' tmp[666100](477968 call isTrue call_tmp[753673]))
      (666107 'move' tmp[666087](666104 '_paramFoldLogical' tmp[666088] tmp[666100]))
    }
    unknown call_tmp[753678] "expr temp" "maybe param" "maybe type" "temp"
    (753681 'move' call_tmp[753678](34082 call _cond_test tmp[666087]))
    if call_tmp[753678]
    {
      unknown call_tmp[753683] "expr temp" "maybe param" "maybe type" "temp"
      (753686 'move' call_tmp[753683](34051 call : i[34035] string[244]))
      unknown call_tmp[753688] "expr temp" "maybe param" "maybe type" "temp"
      (753691 'move' call_tmp[753688](34048 call + "index " call_tmp[753683]))
      unknown call_tmp[753693] "expr temp" "maybe param" "maybe type" "temp"
      (753696 'move' call_tmp[753693](34046 call + call_tmp[753688] " out of bounds for bytes with length "))
      unknown call_tmp[753700] "expr temp" "maybe param" "maybe type" "temp"
      (753703 'move' call_tmp[753700](34061 call numBytes _mt[203] this[34032]))
      unknown call_tmp[753705] "expr temp" "maybe param" "maybe type" "temp"
      (753708 'move' call_tmp[753705](34058 call : call_tmp[753700] string[244]))
      unknown call_tmp[753710] "expr temp" "maybe param" "maybe type" "temp"
      (753713 'move' call_tmp[753710](34044 call + call_tmp[753693] call_tmp[753705]))
      (34043 call compilerError call_tmp[753710])
    }
    unknown call_tmp[753715] "expr temp" "maybe param" "maybe type" "temp"
    (753718 'move' call_tmp[753715](34088 'ascii' this[34032] i[34035]))
    (595863 'move' ret[595857](595862 'coerce' call_tmp[753715] int(64)[10]))
    (595859 return ret[595857])
  }
  { scopeless type
    int(64)[10]
  }
  function bytes[232].item[34094](arg _mt[34102]:_MT[201], param arg this[34096]:bytes[232], param arg i[34099]:int(64)[10]) param : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[595867] "RVV" "param" "temp"
    unknown tmp[477984] "maybe param" "temp"
    (477995 'move' tmp[477984](34130 call < i[34099] 0))
    unknown call_tmp[753720] "expr temp" "maybe param" "maybe type" "temp"
    (753723 'move' call_tmp[753720](477997 call _cond_invalid tmp[477984]))
    if call_tmp[753720]
    {
      (478000 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[666114] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666115] "maybe param" "temp"
    unknown call_tmp[753725] "expr temp" "maybe param" "maybe type" "temp"
    (753728 'move' call_tmp[753725](477985 call isTrue tmp[477984]))
    (666120 'move' tmp[666115](666118 call _cond_test call_tmp[753725]))
    if tmp[666115]
    {
      (666125 'move' tmp[666114](666122 '_paramFoldLogical' tmp[666115] 1))
    }
    {
      unknown tmp[666127] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753732] "expr temp" "maybe param" "maybe type" "temp"
      (753735 'move' call_tmp[753732](34140 call size _mt[203] this[34096]))
      unknown call_tmp[753737] "expr temp" "maybe param" "maybe type" "temp"
      (753740 'move' call_tmp[753737](34137 call - call_tmp[753732] 1))
      unknown call_tmp[753742] "expr temp" "maybe param" "maybe type" "temp"
      (753745 'move' call_tmp[753742](34134 call > i[34099] call_tmp[753737]))
      (666129 'move' tmp[666127](477989 call isTrue call_tmp[753742]))
      (666134 'move' tmp[666114](666131 '_paramFoldLogical' tmp[666115] tmp[666127]))
    }
    unknown call_tmp[753747] "expr temp" "maybe param" "maybe type" "temp"
    (753750 'move' call_tmp[753747](34144 call _cond_test tmp[666114]))
    if call_tmp[753747]
    {
      unknown call_tmp[753752] "expr temp" "maybe param" "maybe type" "temp"
      (753755 'move' call_tmp[753752](34115 call : i[34099] string[244]))
      unknown call_tmp[753757] "expr temp" "maybe param" "maybe type" "temp"
      (753760 'move' call_tmp[753757](34112 call + "index " call_tmp[753752]))
      unknown call_tmp[753762] "expr temp" "maybe param" "maybe type" "temp"
      (753765 'move' call_tmp[753762](34110 call + call_tmp[753757] " out of bounds for bytes with length "))
      unknown call_tmp[753769] "expr temp" "maybe param" "maybe type" "temp"
      (753772 'move' call_tmp[753769](34123 call numBytes _mt[203] this[34096]))
      unknown call_tmp[753774] "expr temp" "maybe param" "maybe type" "temp"
      (753777 'move' call_tmp[753774](34120 call : call_tmp[753769] string[244]))
      unknown call_tmp[753779] "expr temp" "maybe param" "maybe type" "temp"
      (753782 'move' call_tmp[753779](34108 call + call_tmp[753762] call_tmp[753774]))
      (34107 call compilerError call_tmp[753779])
    }
    unknown call_tmp[753784] "expr temp" "maybe param" "maybe type" "temp"
    (753787 'move' call_tmp[753784](34150 'bytes item' this[34096] i[34099]))
    (595873 'move' ret[595867](595872 'coerce' call_tmp[753784] bytes[232]))
    (595869 return ret[595867])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].item[34156](arg _mt[34164]:_MT[201], arg this[34158]:bytes[232], arg i[34161]:byteIndex[18611]) : _unknown[42] "method" "primary method"
  {
    unknown ret[595877] "RVV" "temp"
    unknown call_tmp[753791] "expr temp" "maybe param" "maybe type" "temp"
    (753794 'move' call_tmp[753791](34174 call : i[34161] int(64)[10]))
    unknown call_tmp[753796] "expr temp" "maybe param" "maybe type" "temp"
    (753799 'move' call_tmp[753796](34173 call(34170 call (partial) item _mt[203] this[34158]) call_tmp[753791]))
    (595883 'move' ret[595877](595882 'coerce' call_tmp[753796] bytes[232]))
    (595879 return ret[595877])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].this[34181](arg _mt[34189]:_MT[201], arg this[34183]:bytes[232], arg i[34186]:byteIndex[18611]) : _unknown[42] "method" "primary method"
  {
    unknown ret[595887] "RVV" "temp"
    unknown call_tmp[753803] "expr temp" "maybe param" "maybe type" "temp"
    (753806 'move' call_tmp[753803](34201 call : i[34186] int(64)[10]))
    unknown call_tmp[753808] "expr temp" "maybe param" "maybe type" "temp"
    (753811 'move' call_tmp[753808](34200 call(34197 call (partial) byte _mt[203] this[34183]) call_tmp[753803]))
    unknown call_tmp[753813] "expr temp" "maybe param" "maybe type" "temp"
    (753816 'move' call_tmp[753813](595892 call uint(64)[86] 8))
    (595895 'move' ret[595887](595894 'coerce' call_tmp[753808] call_tmp[753813]))
    (595889 return ret[595887])
  }
  { scopeless type
    (34192 call uint(64)[86] 8)
  }
  function bytes[232].toByte[34208](arg _mt[34212]:_MT[201], param arg this[34210]:bytes[232]) param : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[595899] "RVV" "param" "temp"
    unknown call_tmp[753820] "expr temp" "maybe param" "maybe type" "temp"
    (753823 'move' call_tmp[753820](34227 call numBytes _mt[203] this[34210]))
    unknown call_tmp[753825] "expr temp" "maybe param" "maybe type" "temp"
    (753828 'move' call_tmp[753825](34224 call != call_tmp[753820] 1))
    unknown call_tmp[753830] "expr temp" "maybe param" "maybe type" "temp"
    (753833 'move' call_tmp[753830](34231 call _cond_test call_tmp[753825]))
    if call_tmp[753830]
    {
      (34219 call compilerError "bytes.toByte() only accepts single-byte bytes")
    }
    unknown call_tmp[753835] "expr temp" "maybe param" "maybe type" "temp"
    (753838 'move' call_tmp[753835](34237 'ascii' this[34210]))
    unknown call_tmp[753840] "expr temp" "maybe param" "maybe type" "temp"
    (753843 'move' call_tmp[753840](595904 call uint(64)[86] 8))
    (595907 'move' ret[595899](595906 'coerce' call_tmp[753835] call_tmp[753840]))
    (595901 return ret[595899])
  }
  { scopeless type
    (34215 call uint(64)[86] 8)
  }
  function bytes[232].byte[34242](arg _mt[34250]:_MT[201], param arg this[34244]:bytes[232], param arg i[34247]:int(64)[10]) param : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[595911] "RVV" "param" "temp"
    unknown tmp[478005] "maybe param" "temp"
    (478016 'move' tmp[478005](34280 call < i[34247] 0))
    unknown call_tmp[753845] "expr temp" "maybe param" "maybe type" "temp"
    (753848 'move' call_tmp[753845](478018 call _cond_invalid tmp[478005]))
    if call_tmp[753845]
    {
      (478021 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[666141] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666142] "maybe param" "temp"
    unknown call_tmp[753850] "expr temp" "maybe param" "maybe type" "temp"
    (753853 'move' call_tmp[753850](478006 call isTrue tmp[478005]))
    (666147 'move' tmp[666142](666145 call _cond_test call_tmp[753850]))
    if tmp[666142]
    {
      (666152 'move' tmp[666141](666149 '_paramFoldLogical' tmp[666142] 1))
    }
    {
      unknown tmp[666154] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753857] "expr temp" "maybe param" "maybe type" "temp"
      (753860 'move' call_tmp[753857](34288 call numBytes _mt[203] this[34244]))
      unknown call_tmp[753862] "expr temp" "maybe param" "maybe type" "temp"
      (753865 'move' call_tmp[753862](34284 call >= i[34247] call_tmp[753857]))
      (666156 'move' tmp[666154](478010 call isTrue call_tmp[753862]))
      (666161 'move' tmp[666141](666158 '_paramFoldLogical' tmp[666142] tmp[666154]))
    }
    unknown call_tmp[753867] "expr temp" "maybe param" "maybe type" "temp"
    (753870 'move' call_tmp[753867](34291 call _cond_test tmp[666141]))
    if call_tmp[753867]
    {
      unknown call_tmp[753872] "expr temp" "maybe param" "maybe type" "temp"
      (753875 'move' call_tmp[753872](34265 call : i[34247] string[244]))
      unknown call_tmp[753877] "expr temp" "maybe param" "maybe type" "temp"
      (753880 'move' call_tmp[753877](34262 call + "index " call_tmp[753872]))
      unknown call_tmp[753882] "expr temp" "maybe param" "maybe type" "temp"
      (753885 'move' call_tmp[753882](34260 call + call_tmp[753877] " out of bounds for bytes with length "))
      unknown call_tmp[753889] "expr temp" "maybe param" "maybe type" "temp"
      (753892 'move' call_tmp[753889](34273 call numBytes _mt[203] this[34244]))
      unknown call_tmp[753894] "expr temp" "maybe param" "maybe type" "temp"
      (753897 'move' call_tmp[753894](34270 call : call_tmp[753889] string[244]))
      unknown call_tmp[753899] "expr temp" "maybe param" "maybe type" "temp"
      (753902 'move' call_tmp[753899](34258 call + call_tmp[753882] call_tmp[753894]))
      (34257 call compilerError call_tmp[753899])
    }
    unknown call_tmp[753904] "expr temp" "maybe param" "maybe type" "temp"
    (753907 'move' call_tmp[753904](34297 'ascii' this[34244] i[34247]))
    unknown call_tmp[753909] "expr temp" "maybe param" "maybe type" "temp"
    (753912 'move' call_tmp[753909](595916 call uint(64)[86] 8))
    (595919 'move' ret[595911](595918 'coerce' call_tmp[753904] call_tmp[753909]))
    (595913 return ret[595911])
  }
  { scopeless type
    (34253 call uint(64)[86] 8)
  }
  function bytes[232].join[34303](arg _mt[34314]:_MT[201], arg this[34305]:bytes[232], const  ref arg x[34311]:_array[255540](?)) : _unknown[42] "compiler added where" "inline" "method" "primary method"
  {
    unknown ret[595923] "RVV" "temp"
    unknown call_tmp[753914] "expr temp" "maybe param" "maybe type" "temp"
    (753917 'move' call_tmp[753914](34320 call doJoin this[34305] x[34311]))
    (595929 'move' ret[595923](595928 'coerce' call_tmp[753914] bytes[232]))
    (595925 return ret[595923])
  }
  where {
    unknown call_tmp[753921] "expr temp" "maybe param" "maybe type" "temp"
    (753924 'move' call_tmp[753921](514849 call eltType _mt[203] x[34311]))
    unknown call_tmp[753926] "expr temp" "maybe param" "maybe type" "temp"
    (753929 'move' call_tmp[753926](514853 'is_instantiation_allow_values' bytes[232] call_tmp[753921]))
    (514847 call & 1 call_tmp[753926])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].join[34326](arg _mt[34332]:_MT[201], arg this[34328]:bytes[232], const  ref arg x[34330]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[595933] "RVV" "temp"
    unknown tmp[478026] "maybe param" "temp"
    unknown call_tmp[753931] "expr temp" "maybe param" "maybe type" "temp"
    (753934 'move' call_tmp[753931](34349 call isHomogeneousTuple x[34330]))
    (478037 'move' tmp[478026](34346 call ! call_tmp[753931]))
    unknown call_tmp[753936] "expr temp" "maybe param" "maybe type" "temp"
    (753939 'move' call_tmp[753936](478039 call _cond_invalid tmp[478026]))
    if call_tmp[753936]
    {
      (478042 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[666168] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666169] "maybe param" "temp"
    unknown call_tmp[753941] "expr temp" "maybe param" "maybe type" "temp"
    (753944 'move' call_tmp[753941](478027 call isTrue tmp[478026]))
    (666174 'move' tmp[666169](666172 call _cond_test call_tmp[753941]))
    if tmp[666169]
    {
      (666179 'move' tmp[666168](666176 '_paramFoldLogical' tmp[666169] 1))
    }
    {
      unknown tmp[666181] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[753946] "expr temp" "maybe param" "maybe type" "temp"
      (753949 'move' call_tmp[753946](34356 call x[34330] 0))
      unknown call_tmp[753951] "expr temp" "maybe param" "maybe type" "temp"
      (753954 'move' call_tmp[753951](34354 call isBytes call_tmp[753946]))
      unknown call_tmp[753956] "expr temp" "maybe param" "maybe type" "temp"
      (753959 'move' call_tmp[753956](34351 call ! call_tmp[753951]))
      (666183 'move' tmp[666181](478031 call isTrue call_tmp[753956]))
      (666188 'move' tmp[666168](666185 '_paramFoldLogical' tmp[666169] tmp[666181]))
    }
    unknown call_tmp[753961] "expr temp" "maybe param" "maybe type" "temp"
    (753964 'move' call_tmp[753961](34358 call _cond_test tmp[666168]))
    if call_tmp[753961]
    {
      (34339 call compilerError "join() on tuples only handles homogeneous tuples of bytes")
    }
    unknown call_tmp[753966] "expr temp" "maybe param" "maybe type" "temp"
    (753969 'move' call_tmp[753966](34365 call doJoin this[34328] x[34330]))
    (595938 'move' ret[595933](595937 'deref' call_tmp[753966]))
    (595935 return ret[595933])
  }
  where {
    (34335 call isTuple x[34330])
  }
  function bytes[232].join[34371](arg _mt[34379]:_MT[201], arg this[34373]:bytes[232], arg ir[34376]:_iteratorRecord[165](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[595942] "RVV" "temp"
    unknown call_tmp[753971] "expr temp" "maybe param" "maybe type" "temp"
    (753974 'move' call_tmp[753971](34385 call doJoinIterator this[34373] ir[34376]))
    (595948 'move' ret[595942](595947 'coerce' call_tmp[753971] bytes[232]))
    (595944 return ret[595942])
  }
  { scopeless type
    bytes[232]
  }
  type bytes[232] val buffLen[33621]:int(64)[10] 0 int(64)[10] val buffSize[33627]:int(64)[10] 0 int(64)[10] unknown buff[33633] nil[32] bufferType[30212] val isOwned[33639]:bool[19] 1 bool[19] unknown locale_id[33645](416900 call chpl_nodeID[305038])
  function bytes[232].size[34393](arg _mt[34399]:_MT[201], arg this[34396]:bytes[232] :
  bytes[232]) : _unknown[42] "inline" "method" "no parens"
  {
    unknown ret[595952] "RVV" "temp"
    unknown call_tmp[753978] "expr temp" "maybe param" "maybe type" "temp"
    (753981 'move' call_tmp[753978](417009 call buffLen _mt[203] this[34396]))
    (595958 'move' ret[595952](595957 'coerce' call_tmp[753978] int(64)[10]))
    (595954 return ret[595952])
  }
  { scopeless type
    int(64)[10]
  }
  function bytes[232].indices[34408](arg _mt[34414]:_MT[201], arg this[34411]:bytes[232] :
  bytes[232]) : _unknown[42] "method" "no parens"
  {
    unknown ret[595962] "RVV" "temp"
    unknown call_tmp[753985] "expr temp" "maybe param" "maybe type" "temp"
    (753988 'move' call_tmp[753985](417014 call size _mt[203] this[34411]))
    unknown call_tmp[753990] "expr temp" "maybe param" "maybe type" "temp"
    (753993 'move' call_tmp[753990](34421 call chpl__nudgeHighBound call_tmp[753985]))
    unknown call_tmp[753995] "expr temp" "maybe param" "maybe type" "temp"
    (753998 'move' call_tmp[753995](34423 call chpl_build_bounded_range 0 call_tmp[753990]))
    (595968 'move' ret[595962](595967 'coerce' call_tmp[753995] range[240](?)))
    (595964 return ret[595962])
  }
  { scopeless type
    range[240](?)
  }
  function bytes[232].numBytes[34428](arg _mt[34434]:_MT[201], arg this[34431]:bytes[232] :
  bytes[232]) : _unknown[42] "inline" "method" "no parens"
  {
    unknown ret[595972] "RVV" "temp"
    unknown call_tmp[754002] "expr temp" "maybe param" "maybe type" "temp"
    (754005 'move' call_tmp[754002](417019 call buffLen _mt[203] this[34431]))
    (595978 'move' ret[595972](595977 'coerce' call_tmp[754002] int(64)[10]))
    (595974 return ret[595972])
  }
  { scopeless type
    int(64)[10]
  }
  function bytes[232].localize[34443](arg _mt[34449]:_MT[201], arg this[34446]:bytes[232] :
  bytes[232]) : _unknown[42] "inline" "method" "@unstable"
  {
    unknown ret[595982] "RVV" "temp"
    unknown tmp[478047] "maybe param" "temp"
    (478058 'move' tmp[478047](34473 call compiledForSingleLocale))
    unknown call_tmp[754007] "expr temp" "maybe param" "maybe type" "temp"
    (754010 'move' call_tmp[754007](478060 call _cond_invalid tmp[478047]))
    if call_tmp[754007]
    {
      (478063 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[666195] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666196] "maybe param" "temp"
    unknown call_tmp[754012] "expr temp" "maybe param" "maybe type" "temp"
    (754015 'move' call_tmp[754012](478048 call isTrue tmp[478047]))
    (666201 'move' tmp[666196](666199 call _cond_test call_tmp[754012]))
    if tmp[666196]
    {
      (666206 'move' tmp[666195](666203 '_paramFoldLogical' tmp[666196] 1))
    }
    {
      unknown tmp[666208] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[754019] "expr temp" "maybe param" "maybe type" "temp"
      (754022 'move' call_tmp[754019](34477 call locale_id _mt[203] this[34446]))
      unknown call_tmp[754024] "expr temp" "maybe param" "maybe type" "temp"
      (754027 'move' call_tmp[754024](417025 call chpl_nodeID[305038]))
      unknown call_tmp[754029] "expr temp" "maybe param" "maybe type" "temp"
      (754032 'move' call_tmp[754029](34474 call == call_tmp[754019] call_tmp[754024]))
      (666210 'move' tmp[666208](478052 call isTrue call_tmp[754029]))
      (666215 'move' tmp[666195](666212 '_paramFoldLogical' tmp[666196] tmp[666208]))
    }
    unknown call_tmp[754034] "expr temp" "maybe param" "maybe type" "temp"
    (754037 'move' call_tmp[754034](34481 call _cond_test tmp[666195]))
    if call_tmp[754034]
    {
      unknown call_tmp[754041] "expr temp" "maybe param" "maybe type" "temp"
      (754044 'move' call_tmp[754041](34459 call(34456 call (partial) createBorrowingBuffer _mt[203] bytes[232]) this[34446]))
      (595988 'move' ret[595982](595987 'coerce' call_tmp[754041] bytes[232]))
      gotoReturn _end_localize[595980] _end_localize[595980]
    }
    {
      const x[34463] "dead at end of block" "const" "insert auto destroy"
      (643738 'init var' x[34463] this[34446] bytes[232])
      (34467 'end of statement')
      (595994 'move' ret[595982](595993 'coerce' x[34463] bytes[232]))
      gotoReturn _end_localize[595980] _end_localize[595980]
      (548487 'end of statement' x[34463])
    }
    label _end_localize[595980]
    (595984 return ret[595982])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].c_str[34488](arg _mt[34494]:_MT[201], arg this[34491]:bytes[232] :
  bytes[232]) : _unknown[42] "deprecated" "inline" "last resort" "method"
  {
    unknown ret[596000] "RVV" "temp"
    unknown call_tmp[754048] "expr temp" "maybe param" "maybe type" "temp"
    (754051 'move' call_tmp[754048](34510 call(34507 call (partial) c_str _mt[203] this[34491])))
    unknown call_tmp[754053] "expr temp" "maybe param" "maybe type" "temp"
    (754056 'move' call_tmp[754053](596005 call c_ptrConst[46990](?) c_char[562]))
    (596008 'move' ret[596000](596007 'coerce' call_tmp[754048] call_tmp[754053]))
    (596002 return ret[596000])
    (396021 'used modules list'(34503 'use' CTypes[51217] 'only' c_str))
  }
  { scopeless type
    (34497 call c_ptrConst[46990](?) c_char[562])
  }
  function bytes[232].item[34514](arg _mt[34524]:_MT[201], arg this[34517]:bytes[232] :
  bytes[232], arg i[34521]:int(64)[10]) : _unknown[42] "method"
  {
    unknown ret[596012] "RVV" "temp"
    unknown tmp[478068] "maybe param" "temp"
    (478079 'move' tmp[478068] 1)
    unknown call_tmp[754058] "expr temp" "maybe param" "maybe type" "temp"
    (754061 'move' call_tmp[754058](478081 call _cond_invalid tmp[478068]))
    if call_tmp[754058]
    {
      (478084 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[666249] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666250] "maybe param" "temp"
    unknown call_tmp[754063] "expr temp" "maybe param" "maybe type" "temp"
    (754066 'move' call_tmp[754063](478069 call isTrue tmp[478068]))
    (666255 'move' tmp[666250](666253 call _cond_test call_tmp[754063]))
    if tmp[666250]
    {
      unknown tmp[478089] "maybe param" "temp"
      (478100 'move' tmp[478089](34543 call < i[34521] 0))
      unknown call_tmp[754068] "expr temp" "maybe param" "maybe type" "temp"
      (754071 'move' call_tmp[754068](478102 call _cond_invalid tmp[478089]))
      if call_tmp[754068]
      {
        (478105 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[666222] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[666223] "maybe param" "temp"
      unknown call_tmp[754073] "expr temp" "maybe param" "maybe type" "temp"
      (754076 'move' call_tmp[754073](478090 call isTrue tmp[478089]))
      (666228 'move' tmp[666223](666226 call _cond_test call_tmp[754073]))
      if tmp[666223]
      {
        (666233 'move' tmp[666222](666230 '_paramFoldLogical' tmp[666223] 1))
      }
      {
        unknown tmp[666235] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[754080] "expr temp" "maybe param" "maybe type" "temp"
        (754083 'move' call_tmp[754080](34551 call buffLen _mt[203] this[34517]))
        unknown call_tmp[754085] "expr temp" "maybe param" "maybe type" "temp"
        (754088 'move' call_tmp[754085](34547 call >= i[34521] call_tmp[754080]))
        (666237 'move' tmp[666235](478094 call isTrue call_tmp[754085]))
        (666242 'move' tmp[666222](666239 '_paramFoldLogical' tmp[666223] tmp[666235]))
      }
      unknown tmp[666257] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (666259 'move' tmp[666257](478072 call isTrue tmp[666222]))
      (666264 'move' tmp[666249](666261 '_paramFoldLogical' tmp[666250] tmp[666257]))
    }
    {
      (666269 'move' tmp[666249](666266 '_paramFoldLogical' tmp[666250] 0))
    }
    unknown call_tmp[754090] "expr temp" "maybe param" "maybe type" "temp"
    (754093 'move' call_tmp[754090](34554 call _cond_test tmp[666249]))
    if call_tmp[754090]
    {
      unknown call_tmp[754097] "expr temp" "maybe param" "maybe type" "temp"
      (754100 'move' call_tmp[754097](34534 call buffLen _mt[203] this[34517]))
      (34529 call halt "index " i[34521] " out of bounds for bytes with length " call_tmp[754097])
    }
    unknown call_tmp[754104] "expr temp" "maybe param" "maybe type" "temp"
    (754107 'move' call_tmp[754104](34567 call buff _mt[203] this[34517]))
    unknown call_tmp[754111] "expr temp" "maybe param" "maybe type" "temp"
    (754114 'move' call_tmp[754111](34576 call locale_id _mt[203] this[34517]))
    unknown call_tmp[754116] "maybe param" "maybe type" "temp"
    (754119 'move' call_tmp[754116](34565 call bufferCopy(buf = call_tmp[754104])(off = i[34521])(len = 1)(loc = call_tmp[754111])))
    unknown tmp[34580] "dead at end of block" "insert auto destroy" "temp"
    (643740 'init var' tmp[34580] call_tmp[754116])
    (34587 call _check_tuple_var_decl tmp[34580] 2)
    (548492 'end of statement')
    unknown call_tmp[754121] "maybe param" "maybe type" "temp"
    (754124 'move' call_tmp[754121](34581 call tmp[34580] 0))
    unknown buf[34560] "dead at end of block" "insert auto destroy"
    (643742 'init var' buf[34560] call_tmp[754121])
    unknown call_tmp[754126] "maybe param" "maybe type" "temp"
    (754129 'move' call_tmp[754126](34584 call tmp[34580] 1))
    unknown size[34562] "dead at end of block" "insert auto destroy"
    (643744 'init var' size[34562] call_tmp[754126])
    (34592 'end of statement')
    unknown call_tmp[754133] "expr temp" "maybe param" "maybe type" "temp"
    (754136 'move' call_tmp[754133](34598 call(34595 call (partial) createAdoptingBuffer _mt[203] bytes[232]) buf[34560](length = 1)(size = size[34562])))
    (596018 'move' ret[596012](596017 'coerce' call_tmp[754133] bytes[232]))
    gotoReturn _end_item[596010] _end_item[596010]
    (548493 'end of statement' buf[34560] size[34562])
    label _end_item[596010]
    (596014 return ret[596012])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].this[34607](arg _mt[34617]:_MT[201], arg this[34610]:bytes[232] :
  bytes[232], arg i[34614]:int(64)[10]) : _unknown[42] "method"
  {
    unknown ret[596024] "RVV" "temp"
    unknown call_tmp[754140] "expr temp" "maybe param" "maybe type" "temp"
    (754143 'move' call_tmp[754140](34628 call(34625 call (partial) byte _mt[203] this[34610]) i[34614]))
    unknown call_tmp[754145] "expr temp" "maybe param" "maybe type" "temp"
    (754148 'move' call_tmp[754145](596029 call uint(64)[86] 8))
    (596032 'move' ret[596024](596031 'coerce' call_tmp[754140] call_tmp[754145]))
    (596026 return ret[596024])
  }
  { scopeless type
    (34620 call uint(64)[86] 8)
  }
  function bytes[232].toByte[34633](arg _mt[34639]:_MT[201], arg this[34636]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596036] "RVV" "temp"
    unknown call_tmp[754152] "expr temp" "maybe param" "maybe type" "temp"
    (754155 'move' call_tmp[754152](34652 call buffLen _mt[203] this[34636]))
    unknown call_tmp[754157] "expr temp" "maybe param" "maybe type" "temp"
    (754160 'move' call_tmp[754157](34649 call != call_tmp[754152] 1))
    unknown call_tmp[754162] "expr temp" "maybe param" "maybe type" "temp"
    (754165 'move' call_tmp[754162](34656 call _cond_test call_tmp[754157]))
    if call_tmp[754162]
    {
      (34647 call halt "bytes.toByte() only accepts single-byte bytes")
    }
    unknown call_tmp[754169] "expr temp" "maybe param" "maybe type" "temp"
    (754172 'move' call_tmp[754169](34664 call buff _mt[203] this[34636]))
    unknown call_tmp[754176] "expr temp" "maybe param" "maybe type" "temp"
    (754179 'move' call_tmp[754176](34671 call locale_id _mt[203] this[34636]))
    unknown call_tmp[754181] "expr temp" "maybe param" "maybe type" "temp"
    (754184 'move' call_tmp[754181](34662 call bufferGetByte(buf = call_tmp[754169])(off = 0)(loc = call_tmp[754176])))
    unknown call_tmp[754186] "expr temp" "maybe param" "maybe type" "temp"
    (754189 'move' call_tmp[754186](596041 call uint(64)[86] 8))
    (596044 'move' ret[596036](596043 'coerce' call_tmp[754181] call_tmp[754186]))
    (596038 return ret[596036])
  }
  { scopeless type
    (34642 call uint(64)[86] 8)
  }
  function bytes[232].byte[34678](arg _mt[34688]:_MT[201], arg this[34681]:bytes[232] :
  bytes[232], arg i[34685]:int(64)[10]) : _unknown[42] "method"
  {
    unknown ret[596048] "RVV" "temp"
    unknown tmp[478110] "maybe param" "temp"
    (478121 'move' tmp[478110] 1)
    unknown call_tmp[754191] "expr temp" "maybe param" "maybe type" "temp"
    (754194 'move' call_tmp[754191](478123 call _cond_invalid tmp[478110]))
    if call_tmp[754191]
    {
      (478126 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[666303] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666304] "maybe param" "temp"
    unknown call_tmp[754196] "expr temp" "maybe param" "maybe type" "temp"
    (754199 'move' call_tmp[754196](478111 call isTrue tmp[478110]))
    (666309 'move' tmp[666304](666307 call _cond_test call_tmp[754196]))
    if tmp[666304]
    {
      unknown tmp[478131] "maybe param" "temp"
      (478142 'move' tmp[478131](34709 call < i[34685] 0))
      unknown call_tmp[754201] "expr temp" "maybe param" "maybe type" "temp"
      (754204 'move' call_tmp[754201](478144 call _cond_invalid tmp[478131]))
      if call_tmp[754201]
      {
        (478147 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[666276] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[666277] "maybe param" "temp"
      unknown call_tmp[754206] "expr temp" "maybe param" "maybe type" "temp"
      (754209 'move' call_tmp[754206](478132 call isTrue tmp[478131]))
      (666282 'move' tmp[666277](666280 call _cond_test call_tmp[754206]))
      if tmp[666277]
      {
        (666287 'move' tmp[666276](666284 '_paramFoldLogical' tmp[666277] 1))
      }
      {
        unknown tmp[666289] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[754213] "expr temp" "maybe param" "maybe type" "temp"
        (754216 'move' call_tmp[754213](34717 call buffLen _mt[203] this[34681]))
        unknown call_tmp[754218] "expr temp" "maybe param" "maybe type" "temp"
        (754221 'move' call_tmp[754218](34713 call >= i[34685] call_tmp[754213]))
        (666291 'move' tmp[666289](478136 call isTrue call_tmp[754218]))
        (666296 'move' tmp[666276](666293 '_paramFoldLogical' tmp[666277] tmp[666289]))
      }
      unknown tmp[666311] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (666313 'move' tmp[666311](478114 call isTrue tmp[666276]))
      (666318 'move' tmp[666303](666315 '_paramFoldLogical' tmp[666304] tmp[666311]))
    }
    {
      (666323 'move' tmp[666303](666320 '_paramFoldLogical' tmp[666304] 0))
    }
    unknown call_tmp[754223] "expr temp" "maybe param" "maybe type" "temp"
    (754226 'move' call_tmp[754223](34720 call _cond_test tmp[666303]))
    if call_tmp[754223]
    {
      unknown call_tmp[754230] "expr temp" "maybe param" "maybe type" "temp"
      (754233 'move' call_tmp[754230](34700 call buffLen _mt[203] this[34681]))
      (34695 call halt "index " i[34685] " out of bounds for bytes with length " call_tmp[754230])
    }
    unknown call_tmp[754237] "expr temp" "maybe param" "maybe type" "temp"
    (754240 'move' call_tmp[754237](34729 call buff _mt[203] this[34681]))
    unknown call_tmp[754244] "expr temp" "maybe param" "maybe type" "temp"
    (754247 'move' call_tmp[754244](34736 call locale_id _mt[203] this[34681]))
    unknown call_tmp[754249] "expr temp" "maybe param" "maybe type" "temp"
    (754252 'move' call_tmp[754249](34727 call bufferGetByte(buf = call_tmp[754237])(off = i[34685])(loc = call_tmp[754244])))
    unknown call_tmp[754254] "expr temp" "maybe param" "maybe type" "temp"
    (754257 'move' call_tmp[754254](596053 call uint(64)[86] 8))
    (596056 'move' ret[596048](596055 'coerce' call_tmp[754249] call_tmp[754254]))
    (596050 return ret[596048])
  }
  { scopeless type
    (34691 call uint(64)[86] 8)
  }
  function bytes[232].items[34743](arg _mt[34749]:_MT[201], arg this[34746]:bytes[232] :
  bytes[232]) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[596060] "RVV" "temp"
    unknown call_tmp[754261] "expr temp" "maybe param" "maybe type" "temp"
    (754264 'move' call_tmp[754261](34759 call(34756 call (partial) isEmpty _mt[203] this[34746])))
    unknown call_tmp[754266] "expr temp" "maybe param" "maybe type" "temp"
    (754269 'move' call_tmp[754266](34760 call _cond_test call_tmp[754261]))
    if call_tmp[754266]
    {
      gotoReturn _end_items[596058] _end_items[596058]
    }
    {
      unknown _indexOfInterest[34781] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[34782] "expr temp" "temp"
      unknown call_tmp[754273] "expr temp" "maybe param" "maybe type" "temp"
      (754276 'move' call_tmp[754273](34768 call indices _mt[203] this[34746]))
      (34791 'move' _iterator[34782](34789 call _getIterator call_tmp[754273]))
      Defer
      {
        {
          (34806 call _freeIterator _iterator[34782])
        }
      }
      { scopeless type
        (34796 'move' _indexOfInterest[34781](34793 call iteratorIndex _iterator[34782]))
      }
      ForLoop[34783] order-independent
      {
        unknown i[34765] "index var" "insert auto destroy"
        (548504 'end of statement')
        (34801 'move' i[34765] _indexOfInterest[34781])
        (548505 'end of statement' i[34765])
        unknown yret[596066] "YVV" "temp"
        unknown call_tmp[754280] "expr temp" "maybe param" "maybe type" "temp"
        (754283 'move' call_tmp[754280](34776 call(34773 call (partial) item _mt[203] this[34746]) i[34765]))
        (596070 'move' yret[596066](596069 'coerce' call_tmp[754280] bytes[232]))
        (34771 yield yret[596066])
        (548507 'end of statement' i[34765])
        label _continueLabel[34786]
        _indexOfInterest[34781]
        _iterator[34782]
      }
      label _breakLabel[34787]
    }
    label _end_items[596058]
    (596062 return ret[596060])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].these[34816](arg _mt[34822]:_MT[201], arg this[34819]:bytes[232] :
  bytes[232]) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[596075] "RVV" "temp"
    {
      unknown _indexOfInterest[34840] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[34841] "expr temp" "temp"
      unknown call_tmp[754287] "expr temp" "maybe param" "maybe type" "temp"
      (754290 'move' call_tmp[754287](34836 call(34833 call (partial) chpl_bytes _mt[203] this[34819])))
      (34850 'move' _iterator[34841](34848 call _getIterator call_tmp[754287]))
      Defer
      {
        {
          (34865 call _freeIterator _iterator[34841])
        }
      }
      { scopeless type
        (34855 'move' _indexOfInterest[34840](34852 call iteratorIndex _iterator[34841]))
      }
      ForLoop[34842]
      {
        unknown i[34828] "index var" "insert auto destroy"
        (548510 'end of statement')
        (34860 'move' i[34828] _indexOfInterest[34840])
        (548511 'end of statement' i[34828])
        unknown yret[596079] "YVV" "temp"
        unknown call_tmp[754292] "expr temp" "maybe param" "maybe type" "temp"
        (754295 'move' call_tmp[754292](596082 call uint(64)[86] 8))
        (596085 'move' yret[596079](596084 'coerce' i[34828] call_tmp[754292]))
        (34837 yield yret[596079])
        (548513 'end of statement' i[34828])
        label _continueLabel[34845]
        _indexOfInterest[34840]
        _iterator[34841]
      }
      label _breakLabel[34846]
    }
    (596077 return ret[596075])
  }
  { scopeless type
    (34825 call uint(64)[86] 8)
  }
  function bytes[232].chpl_bytes[34875](arg _mt[34881]:_MT[201], arg this[34878]:bytes[232] :
  bytes[232]) : _unknown[42] "chpldoc ignore chpl prefix" "iterator fn" "method" "no return value for void"
  {
    unknown ret[596090] "RVV" "temp"
    {
      unknown _indexOfInterest[34903] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[34904] "expr temp" "temp"
      unknown call_tmp[754299] "expr temp" "maybe param" "maybe type" "temp"
      (754302 'move' call_tmp[754299](34890 call indices _mt[203] this[34878]))
      (34913 'move' _iterator[34904](34911 call _getIterator call_tmp[754299]))
      Defer
      {
        {
          (34928 call _freeIterator _iterator[34904])
        }
      }
      { scopeless type
        (34918 'move' _indexOfInterest[34903](34915 call iteratorIndex _iterator[34904]))
      }
      ForLoop[34905] order-independent
      {
        unknown i[34887] "index var" "insert auto destroy"
        (548516 'end of statement')
        (34923 'move' i[34887] _indexOfInterest[34903])
        (548517 'end of statement' i[34887])
        unknown yret[596094] "YVV" "temp"
        unknown call_tmp[754306] "expr temp" "maybe param" "maybe type" "temp"
        (754309 'move' call_tmp[754306](34898 call(34895 call (partial) byte _mt[203] this[34878]) i[34887]))
        unknown call_tmp[754311] "expr temp" "maybe param" "maybe type" "temp"
        (754314 'move' call_tmp[754311](596097 call uint(64)[86] 8))
        (596100 'move' yret[596094](596099 'coerce' call_tmp[754306] call_tmp[754311]))
        (34893 yield yret[596094])
        (548519 'end of statement' i[34887])
        label _continueLabel[34908]
        _indexOfInterest[34903]
        _iterator[34904]
      }
      label _breakLabel[34909]
    }
    (596092 return ret[596090])
  }
  { scopeless type
    (34884 call uint(64)[86] 8)
  }
  function bytes[232].this[34938](arg _mt[34950]:_MT[201], arg this[34941]:bytes[232] :
  bytes[232], arg r[34947]:range[240](?)) : _unknown[42] "inline" "method"
  {
    unknown ret[596105] "RVV" "temp"
    unknown call_tmp[754316] "expr temp" "maybe param" "maybe type" "temp"
    (754319 'move' call_tmp[754316](34956 call getSlice this[34941] r[34947]))
    (596111 'move' ret[596105](596110 'coerce' call_tmp[754316] bytes[232]))
    (596107 return ret[596105])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].isEmpty[34963](arg _mt[34969]:_MT[201], arg this[34966]:bytes[232] :
  bytes[232]) : _unknown[42] "inline" "method"
  {
    unknown ret[596115] "RVV" "temp"
    unknown call_tmp[754323] "expr temp" "maybe param" "maybe type" "temp"
    (754326 'move' call_tmp[754323](34977 call buffLen _mt[203] this[34966]))
    unknown call_tmp[754328] "expr temp" "maybe param" "maybe type" "temp"
    (754331 'move' call_tmp[754328](34974 call == call_tmp[754323] 0))
    (596121 'move' ret[596115](596120 'coerce' call_tmp[754328] bool[19]))
    (596117 return ret[596115])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].startsWith[34984](arg _mt[34996]:_MT[201], arg this[34987]:bytes[232] :
  bytes[232], arg patterns[34992]:bytes[232] ...) : _unknown[42] "inline" "method"
  {
    unknown ret[596125] "RVV" "temp"
    unknown call_tmp[754333] "expr temp" "maybe param" "maybe type" "temp"
    (754336 'move' call_tmp[754333](35002 call startsEndsWith this[34987] patterns[34992](fromLeft = 1)))
    (596131 'move' ret[596125](596130 'coerce' call_tmp[754333] bool[19]))
    (596127 return ret[596125])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].endsWith[35010](arg _mt[35022]:_MT[201], arg this[35013]:bytes[232] :
  bytes[232], arg patterns[35018]:bytes[232] ...) : _unknown[42] "inline" "method"
  {
    unknown ret[596135] "RVV" "temp"
    unknown call_tmp[754338] "expr temp" "maybe param" "maybe type" "temp"
    (754341 'move' call_tmp[754338](35028 call startsEndsWith this[35013] patterns[35018](fromLeft = 0)))
    (596141 'move' ret[596135](596140 'coerce' call_tmp[754338] bool[19]))
    (596137 return ret[596135])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].find[35036](arg _mt[35057]:_MT[201], arg this[35039]:bytes[232] :
  bytes[232], arg pattern[35043]:bytes[232], arg indices[35053]:range[240](?) =
  (35050 call indices _mt[203] this[35039])) : _unknown[42] "inline" "method"
  {
    unknown ret[596145] "RVV" "temp"
    unknown call_tmp[754345] "expr temp" "maybe param" "maybe type" "temp"
    (754348 'move' call_tmp[754345](35063 call doSearchNoEnc this[35039] pattern[35043] indices[35053](count = 0)))
    (596151 'move' ret[596145](596150 'coerce' call_tmp[754345] int(64)[10]))
    (596147 return ret[596145])
  }
  { scopeless type
    int(64)[10]
  }
  function bytes[232].rfind[35072](arg _mt[35093]:_MT[201], arg this[35075]:bytes[232] :
  bytes[232], arg pattern[35079]:bytes[232], arg indices[35089]:range[240](?) =
  (35086 call indices _mt[203] this[35075])) : _unknown[42] "inline" "method"
  {
    unknown ret[596155] "RVV" "temp"
    unknown call_tmp[754352] "expr temp" "maybe param" "maybe type" "temp"
    (754355 'move' call_tmp[754352](35099 call doSearchNoEnc this[35075] pattern[35079] indices[35089](count = 0)(fromLeft = 0)))
    (596161 'move' ret[596155](596160 'coerce' call_tmp[754352] int(64)[10]))
    (596157 return ret[596155])
  }
  { scopeless type
    int(64)[10]
  }
  function bytes[232].count[35110](arg _mt[35131]:_MT[201], arg this[35113]:bytes[232] :
  bytes[232], arg pattern[35117]:bytes[232], arg indices[35127]:range[240](?) =
  (35124 call indices _mt[203] this[35113])) : _unknown[42] "inline" "method"
  {
    unknown ret[596165] "RVV" "temp"
    unknown call_tmp[754359] "expr temp" "maybe param" "maybe type" "temp"
    (754362 'move' call_tmp[754359](35137 call doSearchNoEnc this[35113] pattern[35117] indices[35127](count = 1)))
    (596171 'move' ret[596165](596170 'coerce' call_tmp[754359] int(64)[10]))
    (596167 return ret[596165])
  }
  { scopeless type
    int(64)[10]
  }
  function bytes[232].replace[35146](arg _mt[35168]:_MT[201], arg this[35149]:bytes[232] :
  bytes[232], arg pattern[35153]:bytes[232], arg replacement[35157]:bytes[232], arg count[35164]:int(64)[10] =
  (35161 call - 1)) : _unknown[42] "inline" "method"
  {
    unknown ret[596175] "RVV" "temp"
    unknown call_tmp[754364] "expr temp" "maybe param" "maybe type" "temp"
    (754367 'move' call_tmp[754364](35174 call doReplace this[35149] pattern[35153] replacement[35157] count[35164]))
    (596181 'move' ret[596175](596180 'coerce' call_tmp[754364] bytes[232]))
    (596177 return ret[596175])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].split[35182](arg _mt[35206]:_MT[201], arg this[35185]:bytes[232] :
  bytes[232], arg sep[35189]:bytes[232], arg maxsplit[35196]:int(64)[10] =
  (35193 call - 1), arg ignoreEmpty[35202]:bool[19] =
  0) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[596185] "RVV" "temp"
    {
      unknown _indexOfInterest[35221] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[35222] "expr temp" "temp"
      unknown call_tmp[754369] "expr temp" "maybe param" "maybe type" "temp"
      (754372 'move' call_tmp[754369](35213 call doSplit this[35185] sep[35189] maxsplit[35196] ignoreEmpty[35202]))
      (35231 'move' _iterator[35222](35229 call _getIterator call_tmp[754369]))
      Defer
      {
        {
          (35246 call _freeIterator _iterator[35222])
        }
      }
      { scopeless type
        (35236 'move' _indexOfInterest[35221](35233 call iteratorIndex _iterator[35222]))
      }
      ForLoop[35223]
      {
        unknown s[35210] "index var" "insert auto destroy"
        (548530 'end of statement')
        (35241 'move' s[35210] _indexOfInterest[35221])
        (548531 'end of statement' s[35210])
        unknown yret[596189] "YVV" "temp"
        (596193 'move' yret[596189](596192 'coerce' s[35210] bytes[232]))
        (35218 yield yret[596189])
        (548533 'end of statement' s[35210])
        label _continueLabel[35226]
        _indexOfInterest[35221]
        _iterator[35222]
      }
      label _breakLabel[35227]
    }
    (596187 return ret[596185])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].split[35256](arg _mt[35270]:_MT[201], arg this[35259]:bytes[232] :
  bytes[232], arg maxsplit[35266]:int(64)[10] =
  (35263 call - 1)) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[596198] "RVV" "temp"
    {
      unknown _indexOfInterest[35283] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[35284] "expr temp" "temp"
      unknown call_tmp[754374] "expr temp" "maybe param" "maybe type" "temp"
      (754377 'move' call_tmp[754374](35277 call doSplitWSNoEnc this[35259] maxsplit[35266]))
      (35293 'move' _iterator[35284](35291 call _getIterator call_tmp[754374]))
      Defer
      {
        {
          (35308 call _freeIterator _iterator[35284])
        }
      }
      { scopeless type
        (35298 'move' _indexOfInterest[35283](35295 call iteratorIndex _iterator[35284]))
      }
      ForLoop[35285]
      {
        unknown s[35274] "index var" "insert auto destroy"
        (548536 'end of statement')
        (35303 'move' s[35274] _indexOfInterest[35283])
        (548537 'end of statement' s[35274])
        unknown yret[596202] "YVV" "temp"
        (596206 'move' yret[596202](596205 'coerce' s[35274] bytes[232]))
        (35280 yield yret[596202])
        (548539 'end of statement' s[35274])
        label _continueLabel[35288]
        _indexOfInterest[35283]
        _iterator[35284]
      }
      label _breakLabel[35289]
    }
    (596200 return ret[596198])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].join[35318](arg _mt[35330]:_MT[201], arg this[35321]:bytes[232] :
  bytes[232], const  ref arg x[35326]:bytes[232] ...) : _unknown[42] "inline" "method"
  {
    unknown ret[596211] "RVV" "temp"
    unknown call_tmp[754379] "expr temp" "maybe param" "maybe type" "temp"
    (754382 'move' call_tmp[754379](35336 call doJoin this[35321] x[35326]))
    (596217 'move' ret[596211](596216 'coerce' call_tmp[754379] bytes[232]))
    (596213 return ret[596211])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].join[35342](arg _mt[35350]:_MT[201], arg this[35345]:bytes[232] :
  bytes[232], const  ref arg x[35348]:_any[141](?)) : _unknown[42] "inline" "method" "no return value for void"
  {
    unknown ret[596221] "RVV" "temp"
    unknown call_tmp[754384] "expr temp" "maybe param" "maybe type" "temp"
    (754387 'move' call_tmp[754384](35356 call + "bytes.join() accepts any number of bytes, homogeneous " "tuple of bytes, or array of bytes as an argument"))
    (35355 call compilerError call_tmp[754384])
    (596223 return ret[596221])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].strip[35367](arg _mt[35387]:_MT[201], arg this[35370]:bytes[232] :
  bytes[232], arg chars[35376] :
  b" \t\r\n" =
  b" \t\r\n", arg leading[35380] :
  1 =
  1, arg trailing[35384] :
  1 =
  1) : _unknown[42] "method"
  {
    unknown ret[596227] "RVV" "temp"
    unknown call_tmp[754389] "expr temp" "maybe param" "maybe type" "temp"
    (754392 'move' call_tmp[754389](35393 call doStripNoEnc this[35370] chars[35376] leading[35380] trailing[35384]))
    (596233 'move' ret[596227](596232 'coerce' call_tmp[754389] bytes[232]))
    (596229 return ret[596227])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].partition[35401](arg _mt[35411]:_MT[201], const arg this[35404]:bytes[232] :
  bytes[232], arg sep[35408]:bytes[232]) : _unknown[42] "inline" "method"
  {
    unknown ret[596237] "RVV" "temp"
    unknown call_tmp[754394] "expr temp" "maybe param" "maybe type" "temp"
    (754397 'move' call_tmp[754394](35420 call doPartition this[35404] sep[35408]))
    unknown call_tmp[754399] "expr temp" "maybe param" "maybe type" "temp"
    (754402 'move' call_tmp[754399](596242 call * 3 bytes[232]))
    (596246 'move' ret[596237](596245 'coerce' call_tmp[754394] call_tmp[754399]))
    (596239 return ret[596237])
  }
  { scopeless type
    (35413 call * 3 bytes[232])
  }
  function bytes[232].dedent[35426](arg _mt[35440]:_MT[201], arg this[35429]:bytes[232] :
  bytes[232], arg columns[35433] :
  0 =
  0, arg ignoreFirst[35437] :
  1 =
  1) : _unknown[42] "method" "@unstable"
  {
    unknown ret[596250] "RVV" "temp"
    unknown call_tmp[754404] "expr temp" "maybe param" "maybe type" "temp"
    (754407 'move' call_tmp[754404](35446 call doDedent this[35429] columns[35433] ignoreFirst[35437]))
    (596256 'move' ret[596250](596255 'coerce' call_tmp[754404] bytes[232]))
    (596252 return ret[596250])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].decode[35453](arg _mt[35466]:_MT[201], arg this[35456]:bytes[232] :
  bytes[232], arg policy[35463] :
  strict[37976] =
  strict[37976]) : _unknown[42] throws "method"
  {
    unknown ret[596260] "RVV" "temp"
    unknown call_tmp[754411] "maybe param" "maybe type" "temp"
    (754414 'move' call_tmp[754411](35477 call(35474 call (partial) localize _mt[203] this[35456])))
    unknown localThis[35471] "dead at end of block" "insert auto destroy"
    (643746 'init var' localThis[35471] call_tmp[754411] bytes[232])
    (35479 'end of statement')
    unknown call_tmp[754418] "expr temp" "maybe param" "maybe type" "temp"
    (754421 'move' call_tmp[754418](35484 call buff _mt[203] localThis[35471]))
    unknown call_tmp[754425] "expr temp" "maybe param" "maybe type" "temp"
    (754428 'move' call_tmp[754425](35488 call buffLen _mt[203] localThis[35471]))
    unknown call_tmp[754430] "expr temp" "maybe param" "maybe type" "temp"
    (754433 'move' call_tmp[754430](35482 call decodeByteBuffer call_tmp[754418] call_tmp[754425] policy[35463]))
    (596266 'move' ret[596260](596265 'coerce' call_tmp[754430] string[244]))
    gotoReturn _end_decode[596258] _end_decode[596258]
    (548546 'end of statement' localThis[35471])
    label _end_decode[596258]
    (596262 return ret[596260])
  }
  { scopeless type
    string[244]
  }
  function bytes[232].isUpper[35495](arg _mt[35501]:_MT[201], arg this[35498]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596272] "RVV" "temp"
    unknown call_tmp[754437] "expr temp" "maybe param" "maybe type" "temp"
    (754440 'move' call_tmp[754437](35512 call(35509 call (partial) isEmpty _mt[203] this[35498])))
    unknown call_tmp[754442] "expr temp" "maybe param" "maybe type" "temp"
    (754445 'move' call_tmp[754442](35513 call _cond_test call_tmp[754437]))
    if call_tmp[754442]
    {
      (596278 'move' ret[596272](596277 'coerce' 0 bool[19]))
      gotoReturn _end_isUpper[596270] _end_isUpper[596270]
    }
    unknown result[35519] "dead at end of block" "insert auto destroy"
    (643748 'init var' result[35519] 1 bool[19])
    (35523 'end of statement')
    {
      const tmp[35592] "const" "temp"
      unknown call_tmp[754449] "expr temp" "maybe param" "maybe type" "temp"
      (754452 'move' call_tmp[754449](35528 call locale_id _mt[203] this[35498]))
      unknown call_tmp[754454] "expr temp" "maybe param" "maybe type" "temp"
      (754457 'move' call_tmp[754454](35526 call chpl_buildLocaleID call_tmp[754449] c_sublocid_any[135202]))
      unknown call_tmp[754459] "expr temp" "maybe param" "maybe type" "temp"
      (754462 'move' call_tmp[754459](35524 'chpl_on_locale_num' call_tmp[754454]))
      (35593 'move' tmp[35592](35590 'deref' call_tmp[754459]))
      {
        {
          unknown _indexOfInterest[35558] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[35559] "expr temp" "temp"
          unknown call_tmp[754466] "expr temp" "maybe param" "maybe type" "temp"
          (754469 'move' call_tmp[754466](35539 call(35536 call (partial) chpl_bytes _mt[203] this[35498])))
          (35568 'move' _iterator[35559](35566 call _getIterator call_tmp[754466]))
          Defer
          {
            {
              (35583 call _freeIterator _iterator[35559])
            }
          }
          { scopeless type
            (35573 'move' _indexOfInterest[35558](35570 call iteratorIndex _iterator[35559]))
          }
          ForLoop[35560]
          {
            unknown b[35533] "index var" "insert auto destroy"
            (548550 'end of statement')
            (35578 'move' b[35533] _indexOfInterest[35558])
            (548551 'end of statement' b[35533])
            {
              unknown call_tmp[754471] "expr temp" "maybe param" "maybe type" "temp"
              (754474 'move' call_tmp[754471](35552 call byte_isUpper b[35533]))
              unknown call_tmp[754476] "expr temp" "maybe param" "maybe type" "temp"
              (754479 'move' call_tmp[754476](35549 call ! call_tmp[754471]))
              unknown call_tmp[754481] "expr temp" "maybe param" "maybe type" "temp"
              (754484 'move' call_tmp[754481](35554 call _cond_test call_tmp[754476]))
              if call_tmp[754481]
              {
                (35542 call = result[35519] 0)
                (548553 'end of statement' result[35519])
                break _breakLabel[35564] _breakLabel[35564]
              }
            }
            label _continueLabel[35563]
            _indexOfInterest[35558]
            _iterator[35559]
          }
          label _breakLabel[35564]
        }
      }
      (35596 'elided on block' 0 tmp[35592])
    }
    (596284 'move' ret[596272](596283 'coerce' result[35519] bool[19]))
    gotoReturn _end_isUpper[596270] _end_isUpper[596270]
    (548555 'end of statement' result[35519])
    label _end_isUpper[596270]
    (596274 return ret[596272])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].isLower[35605](arg _mt[35611]:_MT[201], arg this[35608]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596290] "RVV" "temp"
    unknown call_tmp[754488] "expr temp" "maybe param" "maybe type" "temp"
    (754491 'move' call_tmp[754488](35622 call(35619 call (partial) isEmpty _mt[203] this[35608])))
    unknown call_tmp[754493] "expr temp" "maybe param" "maybe type" "temp"
    (754496 'move' call_tmp[754493](35623 call _cond_test call_tmp[754488]))
    if call_tmp[754493]
    {
      (596296 'move' ret[596290](596295 'coerce' 0 bool[19]))
      gotoReturn _end_isLower[596288] _end_isLower[596288]
    }
    unknown result[35629] "dead at end of block" "insert auto destroy"
    (643750 'init var' result[35629] 1 bool[19])
    (35633 'end of statement')
    {
      const tmp[35702] "const" "temp"
      unknown call_tmp[754500] "expr temp" "maybe param" "maybe type" "temp"
      (754503 'move' call_tmp[754500](35638 call locale_id _mt[203] this[35608]))
      unknown call_tmp[754505] "expr temp" "maybe param" "maybe type" "temp"
      (754508 'move' call_tmp[754505](35636 call chpl_buildLocaleID call_tmp[754500] c_sublocid_any[135202]))
      unknown call_tmp[754510] "expr temp" "maybe param" "maybe type" "temp"
      (754513 'move' call_tmp[754510](35634 'chpl_on_locale_num' call_tmp[754505]))
      (35703 'move' tmp[35702](35700 'deref' call_tmp[754510]))
      {
        {
          unknown _indexOfInterest[35668] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[35669] "expr temp" "temp"
          unknown call_tmp[754517] "expr temp" "maybe param" "maybe type" "temp"
          (754520 'move' call_tmp[754517](35649 call(35646 call (partial) chpl_bytes _mt[203] this[35608])))
          (35678 'move' _iterator[35669](35676 call _getIterator call_tmp[754517]))
          Defer
          {
            {
              (35693 call _freeIterator _iterator[35669])
            }
          }
          { scopeless type
            (35683 'move' _indexOfInterest[35668](35680 call iteratorIndex _iterator[35669]))
          }
          ForLoop[35670]
          {
            unknown b[35643] "index var" "insert auto destroy"
            (548559 'end of statement')
            (35688 'move' b[35643] _indexOfInterest[35668])
            (548560 'end of statement' b[35643])
            {
              unknown call_tmp[754522] "expr temp" "maybe param" "maybe type" "temp"
              (754525 'move' call_tmp[754522](35662 call byte_isLower b[35643]))
              unknown call_tmp[754527] "expr temp" "maybe param" "maybe type" "temp"
              (754530 'move' call_tmp[754527](35659 call ! call_tmp[754522]))
              unknown call_tmp[754532] "expr temp" "maybe param" "maybe type" "temp"
              (754535 'move' call_tmp[754532](35664 call _cond_test call_tmp[754527]))
              if call_tmp[754532]
              {
                (35652 call = result[35629] 0)
                (548562 'end of statement' result[35629])
                break _breakLabel[35674] _breakLabel[35674]
              }
            }
            label _continueLabel[35673]
            _indexOfInterest[35668]
            _iterator[35669]
          }
          label _breakLabel[35674]
        }
      }
      (35706 'elided on block' 0 tmp[35702])
    }
    (596302 'move' ret[596290](596301 'coerce' result[35629] bool[19]))
    gotoReturn _end_isLower[596288] _end_isLower[596288]
    (548564 'end of statement' result[35629])
    label _end_isLower[596288]
    (596292 return ret[596290])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].isSpace[35715](arg _mt[35721]:_MT[201], arg this[35718]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596308] "RVV" "temp"
    unknown call_tmp[754539] "expr temp" "maybe param" "maybe type" "temp"
    (754542 'move' call_tmp[754539](35732 call(35729 call (partial) isEmpty _mt[203] this[35718])))
    unknown call_tmp[754544] "expr temp" "maybe param" "maybe type" "temp"
    (754547 'move' call_tmp[754544](35733 call _cond_test call_tmp[754539]))
    if call_tmp[754544]
    {
      (596314 'move' ret[596308](596313 'coerce' 0 bool[19]))
      gotoReturn _end_isSpace[596306] _end_isSpace[596306]
    }
    unknown result[35739] "dead at end of block" "insert auto destroy"
    (643752 'init var' result[35739] 1 bool[19])
    (35743 'end of statement')
    {
      const tmp[35812] "const" "temp"
      unknown call_tmp[754551] "expr temp" "maybe param" "maybe type" "temp"
      (754554 'move' call_tmp[754551](35748 call locale_id _mt[203] this[35718]))
      unknown call_tmp[754556] "expr temp" "maybe param" "maybe type" "temp"
      (754559 'move' call_tmp[754556](35746 call chpl_buildLocaleID call_tmp[754551] c_sublocid_any[135202]))
      unknown call_tmp[754561] "expr temp" "maybe param" "maybe type" "temp"
      (754564 'move' call_tmp[754561](35744 'chpl_on_locale_num' call_tmp[754556]))
      (35813 'move' tmp[35812](35810 'deref' call_tmp[754561]))
      {
        {
          unknown _indexOfInterest[35778] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[35779] "expr temp" "temp"
          unknown call_tmp[754568] "expr temp" "maybe param" "maybe type" "temp"
          (754571 'move' call_tmp[754568](35759 call(35756 call (partial) chpl_bytes _mt[203] this[35718])))
          (35788 'move' _iterator[35779](35786 call _getIterator call_tmp[754568]))
          Defer
          {
            {
              (35803 call _freeIterator _iterator[35779])
            }
          }
          { scopeless type
            (35793 'move' _indexOfInterest[35778](35790 call iteratorIndex _iterator[35779]))
          }
          ForLoop[35780]
          {
            unknown b[35753] "index var" "insert auto destroy"
            (548568 'end of statement')
            (35798 'move' b[35753] _indexOfInterest[35778])
            (548569 'end of statement' b[35753])
            {
              unknown call_tmp[754573] "expr temp" "maybe param" "maybe type" "temp"
              (754576 'move' call_tmp[754573](35772 call byte_isWhitespace b[35753]))
              unknown call_tmp[754578] "expr temp" "maybe param" "maybe type" "temp"
              (754581 'move' call_tmp[754578](35769 call ! call_tmp[754573]))
              unknown call_tmp[754583] "expr temp" "maybe param" "maybe type" "temp"
              (754586 'move' call_tmp[754583](35774 call _cond_test call_tmp[754578]))
              if call_tmp[754583]
              {
                (35762 call = result[35739] 0)
                (548571 'end of statement' result[35739])
                break _breakLabel[35784] _breakLabel[35784]
              }
            }
            label _continueLabel[35783]
            _indexOfInterest[35778]
            _iterator[35779]
          }
          label _breakLabel[35784]
        }
      }
      (35816 'elided on block' 0 tmp[35812])
    }
    (596320 'move' ret[596308](596319 'coerce' result[35739] bool[19]))
    gotoReturn _end_isSpace[596306] _end_isSpace[596306]
    (548573 'end of statement' result[35739])
    label _end_isSpace[596306]
    (596310 return ret[596308])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].isAlpha[35825](arg _mt[35831]:_MT[201], arg this[35828]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596326] "RVV" "temp"
    unknown call_tmp[754590] "expr temp" "maybe param" "maybe type" "temp"
    (754593 'move' call_tmp[754590](35842 call(35839 call (partial) isEmpty _mt[203] this[35828])))
    unknown call_tmp[754595] "expr temp" "maybe param" "maybe type" "temp"
    (754598 'move' call_tmp[754595](35843 call _cond_test call_tmp[754590]))
    if call_tmp[754595]
    {
      (596332 'move' ret[596326](596331 'coerce' 0 bool[19]))
      gotoReturn _end_isAlpha[596324] _end_isAlpha[596324]
    }
    unknown result[35849] "dead at end of block" "insert auto destroy"
    (643754 'init var' result[35849] 1 bool[19])
    (35853 'end of statement')
    {
      const tmp[35922] "const" "temp"
      unknown call_tmp[754602] "expr temp" "maybe param" "maybe type" "temp"
      (754605 'move' call_tmp[754602](35858 call locale_id _mt[203] this[35828]))
      unknown call_tmp[754607] "expr temp" "maybe param" "maybe type" "temp"
      (754610 'move' call_tmp[754607](35856 call chpl_buildLocaleID call_tmp[754602] c_sublocid_any[135202]))
      unknown call_tmp[754612] "expr temp" "maybe param" "maybe type" "temp"
      (754615 'move' call_tmp[754612](35854 'chpl_on_locale_num' call_tmp[754607]))
      (35923 'move' tmp[35922](35920 'deref' call_tmp[754612]))
      {
        {
          unknown _indexOfInterest[35888] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[35889] "expr temp" "temp"
          unknown call_tmp[754619] "expr temp" "maybe param" "maybe type" "temp"
          (754622 'move' call_tmp[754619](35869 call(35866 call (partial) chpl_bytes _mt[203] this[35828])))
          (35898 'move' _iterator[35889](35896 call _getIterator call_tmp[754619]))
          Defer
          {
            {
              (35913 call _freeIterator _iterator[35889])
            }
          }
          { scopeless type
            (35903 'move' _indexOfInterest[35888](35900 call iteratorIndex _iterator[35889]))
          }
          ForLoop[35890]
          {
            unknown b[35863] "index var" "insert auto destroy"
            (548577 'end of statement')
            (35908 'move' b[35863] _indexOfInterest[35888])
            (548578 'end of statement' b[35863])
            {
              unknown call_tmp[754624] "expr temp" "maybe param" "maybe type" "temp"
              (754627 'move' call_tmp[754624](35882 call byte_isAlpha b[35863]))
              unknown call_tmp[754629] "expr temp" "maybe param" "maybe type" "temp"
              (754632 'move' call_tmp[754629](35879 call ! call_tmp[754624]))
              unknown call_tmp[754634] "expr temp" "maybe param" "maybe type" "temp"
              (754637 'move' call_tmp[754634](35884 call _cond_test call_tmp[754629]))
              if call_tmp[754634]
              {
                (35872 call = result[35849] 0)
                (548580 'end of statement' result[35849])
                break _breakLabel[35894] _breakLabel[35894]
              }
            }
            label _continueLabel[35893]
            _indexOfInterest[35888]
            _iterator[35889]
          }
          label _breakLabel[35894]
        }
      }
      (35926 'elided on block' 0 tmp[35922])
    }
    (596338 'move' ret[596326](596337 'coerce' result[35849] bool[19]))
    gotoReturn _end_isAlpha[596324] _end_isAlpha[596324]
    (548582 'end of statement' result[35849])
    label _end_isAlpha[596324]
    (596328 return ret[596326])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].isDigit[35935](arg _mt[35941]:_MT[201], arg this[35938]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596344] "RVV" "temp"
    unknown call_tmp[754641] "expr temp" "maybe param" "maybe type" "temp"
    (754644 'move' call_tmp[754641](35952 call(35949 call (partial) isEmpty _mt[203] this[35938])))
    unknown call_tmp[754646] "expr temp" "maybe param" "maybe type" "temp"
    (754649 'move' call_tmp[754646](35953 call _cond_test call_tmp[754641]))
    if call_tmp[754646]
    {
      (596350 'move' ret[596344](596349 'coerce' 0 bool[19]))
      gotoReturn _end_isDigit[596342] _end_isDigit[596342]
    }
    unknown result[35959] "dead at end of block" "insert auto destroy"
    (643756 'init var' result[35959] 1 bool[19])
    (35963 'end of statement')
    {
      const tmp[36032] "const" "temp"
      unknown call_tmp[754653] "expr temp" "maybe param" "maybe type" "temp"
      (754656 'move' call_tmp[754653](35968 call locale_id _mt[203] this[35938]))
      unknown call_tmp[754658] "expr temp" "maybe param" "maybe type" "temp"
      (754661 'move' call_tmp[754658](35966 call chpl_buildLocaleID call_tmp[754653] c_sublocid_any[135202]))
      unknown call_tmp[754663] "expr temp" "maybe param" "maybe type" "temp"
      (754666 'move' call_tmp[754663](35964 'chpl_on_locale_num' call_tmp[754658]))
      (36033 'move' tmp[36032](36030 'deref' call_tmp[754663]))
      {
        {
          unknown _indexOfInterest[35998] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[35999] "expr temp" "temp"
          unknown call_tmp[754670] "expr temp" "maybe param" "maybe type" "temp"
          (754673 'move' call_tmp[754670](35979 call(35976 call (partial) chpl_bytes _mt[203] this[35938])))
          (36008 'move' _iterator[35999](36006 call _getIterator call_tmp[754670]))
          Defer
          {
            {
              (36023 call _freeIterator _iterator[35999])
            }
          }
          { scopeless type
            (36013 'move' _indexOfInterest[35998](36010 call iteratorIndex _iterator[35999]))
          }
          ForLoop[36000]
          {
            unknown b[35973] "index var" "insert auto destroy"
            (548586 'end of statement')
            (36018 'move' b[35973] _indexOfInterest[35998])
            (548587 'end of statement' b[35973])
            {
              unknown call_tmp[754675] "expr temp" "maybe param" "maybe type" "temp"
              (754678 'move' call_tmp[754675](35992 call byte_isDigit b[35973]))
              unknown call_tmp[754680] "expr temp" "maybe param" "maybe type" "temp"
              (754683 'move' call_tmp[754680](35989 call ! call_tmp[754675]))
              unknown call_tmp[754685] "expr temp" "maybe param" "maybe type" "temp"
              (754688 'move' call_tmp[754685](35994 call _cond_test call_tmp[754680]))
              if call_tmp[754685]
              {
                (35982 call = result[35959] 0)
                (548589 'end of statement' result[35959])
                break _breakLabel[36004] _breakLabel[36004]
              }
            }
            label _continueLabel[36003]
            _indexOfInterest[35998]
            _iterator[35999]
          }
          label _breakLabel[36004]
        }
      }
      (36036 'elided on block' 0 tmp[36032])
    }
    (596356 'move' ret[596344](596355 'coerce' result[35959] bool[19]))
    gotoReturn _end_isDigit[596342] _end_isDigit[596342]
    (548591 'end of statement' result[35959])
    label _end_isDigit[596342]
    (596346 return ret[596344])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].isAlnum[36045](arg _mt[36051]:_MT[201], arg this[36048]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596362] "RVV" "temp"
    unknown call_tmp[754692] "expr temp" "maybe param" "maybe type" "temp"
    (754695 'move' call_tmp[754692](36062 call(36059 call (partial) isEmpty _mt[203] this[36048])))
    unknown call_tmp[754697] "expr temp" "maybe param" "maybe type" "temp"
    (754700 'move' call_tmp[754697](36063 call _cond_test call_tmp[754692]))
    if call_tmp[754697]
    {
      (596368 'move' ret[596362](596367 'coerce' 0 bool[19]))
      gotoReturn _end_isAlnum[596360] _end_isAlnum[596360]
    }
    unknown result[36069] "dead at end of block" "insert auto destroy"
    (643758 'init var' result[36069] 1 bool[19])
    (36073 'end of statement')
    {
      const tmp[36142] "const" "temp"
      unknown call_tmp[754704] "expr temp" "maybe param" "maybe type" "temp"
      (754707 'move' call_tmp[754704](36078 call locale_id _mt[203] this[36048]))
      unknown call_tmp[754709] "expr temp" "maybe param" "maybe type" "temp"
      (754712 'move' call_tmp[754709](36076 call chpl_buildLocaleID call_tmp[754704] c_sublocid_any[135202]))
      unknown call_tmp[754714] "expr temp" "maybe param" "maybe type" "temp"
      (754717 'move' call_tmp[754714](36074 'chpl_on_locale_num' call_tmp[754709]))
      (36143 'move' tmp[36142](36140 'deref' call_tmp[754714]))
      {
        {
          unknown _indexOfInterest[36108] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[36109] "expr temp" "temp"
          unknown call_tmp[754721] "expr temp" "maybe param" "maybe type" "temp"
          (754724 'move' call_tmp[754721](36089 call(36086 call (partial) chpl_bytes _mt[203] this[36048])))
          (36118 'move' _iterator[36109](36116 call _getIterator call_tmp[754721]))
          Defer
          {
            {
              (36133 call _freeIterator _iterator[36109])
            }
          }
          { scopeless type
            (36123 'move' _indexOfInterest[36108](36120 call iteratorIndex _iterator[36109]))
          }
          ForLoop[36110]
          {
            unknown b[36083] "index var" "insert auto destroy"
            (548595 'end of statement')
            (36128 'move' b[36083] _indexOfInterest[36108])
            (548596 'end of statement' b[36083])
            {
              unknown call_tmp[754726] "expr temp" "maybe param" "maybe type" "temp"
              (754729 'move' call_tmp[754726](36102 call byte_isAlnum b[36083]))
              unknown call_tmp[754731] "expr temp" "maybe param" "maybe type" "temp"
              (754734 'move' call_tmp[754731](36099 call ! call_tmp[754726]))
              unknown call_tmp[754736] "expr temp" "maybe param" "maybe type" "temp"
              (754739 'move' call_tmp[754736](36104 call _cond_test call_tmp[754731]))
              if call_tmp[754736]
              {
                (36092 call = result[36069] 0)
                (548598 'end of statement' result[36069])
                break _breakLabel[36114] _breakLabel[36114]
              }
            }
            label _continueLabel[36113]
            _indexOfInterest[36108]
            _iterator[36109]
          }
          label _breakLabel[36114]
        }
      }
      (36146 'elided on block' 0 tmp[36142])
    }
    (596374 'move' ret[596362](596373 'coerce' result[36069] bool[19]))
    gotoReturn _end_isAlnum[596360] _end_isAlnum[596360]
    (548600 'end of statement' result[36069])
    label _end_isAlnum[596360]
    (596364 return ret[596362])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].isPrintable[36155](arg _mt[36161]:_MT[201], arg this[36158]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596380] "RVV" "temp"
    unknown call_tmp[754743] "expr temp" "maybe param" "maybe type" "temp"
    (754746 'move' call_tmp[754743](36172 call(36169 call (partial) isEmpty _mt[203] this[36158])))
    unknown call_tmp[754748] "expr temp" "maybe param" "maybe type" "temp"
    (754751 'move' call_tmp[754748](36173 call _cond_test call_tmp[754743]))
    if call_tmp[754748]
    {
      (596386 'move' ret[596380](596385 'coerce' 0 bool[19]))
      gotoReturn _end_isPrintable[596378] _end_isPrintable[596378]
    }
    unknown result[36179] "dead at end of block" "insert auto destroy"
    (643760 'init var' result[36179] 1 bool[19])
    (36183 'end of statement')
    {
      const tmp[36252] "const" "temp"
      unknown call_tmp[754755] "expr temp" "maybe param" "maybe type" "temp"
      (754758 'move' call_tmp[754755](36188 call locale_id _mt[203] this[36158]))
      unknown call_tmp[754760] "expr temp" "maybe param" "maybe type" "temp"
      (754763 'move' call_tmp[754760](36186 call chpl_buildLocaleID call_tmp[754755] c_sublocid_any[135202]))
      unknown call_tmp[754765] "expr temp" "maybe param" "maybe type" "temp"
      (754768 'move' call_tmp[754765](36184 'chpl_on_locale_num' call_tmp[754760]))
      (36253 'move' tmp[36252](36250 'deref' call_tmp[754765]))
      {
        {
          unknown _indexOfInterest[36218] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[36219] "expr temp" "temp"
          unknown call_tmp[754772] "expr temp" "maybe param" "maybe type" "temp"
          (754775 'move' call_tmp[754772](36199 call(36196 call (partial) chpl_bytes _mt[203] this[36158])))
          (36228 'move' _iterator[36219](36226 call _getIterator call_tmp[754772]))
          Defer
          {
            {
              (36243 call _freeIterator _iterator[36219])
            }
          }
          { scopeless type
            (36233 'move' _indexOfInterest[36218](36230 call iteratorIndex _iterator[36219]))
          }
          ForLoop[36220]
          {
            unknown b[36193] "index var" "insert auto destroy"
            (548604 'end of statement')
            (36238 'move' b[36193] _indexOfInterest[36218])
            (548605 'end of statement' b[36193])
            {
              unknown call_tmp[754777] "expr temp" "maybe param" "maybe type" "temp"
              (754780 'move' call_tmp[754777](36212 call byte_isPrintable b[36193]))
              unknown call_tmp[754782] "expr temp" "maybe param" "maybe type" "temp"
              (754785 'move' call_tmp[754782](36209 call ! call_tmp[754777]))
              unknown call_tmp[754787] "expr temp" "maybe param" "maybe type" "temp"
              (754790 'move' call_tmp[754787](36214 call _cond_test call_tmp[754782]))
              if call_tmp[754787]
              {
                (36202 call = result[36179] 0)
                (548607 'end of statement' result[36179])
                break _breakLabel[36224] _breakLabel[36224]
              }
            }
            label _continueLabel[36223]
            _indexOfInterest[36218]
            _iterator[36219]
          }
          label _breakLabel[36224]
        }
      }
      (36256 'elided on block' 0 tmp[36252])
    }
    (596392 'move' ret[596380](596391 'coerce' result[36179] bool[19]))
    gotoReturn _end_isPrintable[596378] _end_isPrintable[596378]
    (548609 'end of statement' result[36179])
    label _end_isPrintable[596378]
    (596382 return ret[596380])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].isTitle[36265](arg _mt[36271]:_MT[201], arg this[36268]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596398] "RVV" "temp"
    unknown call_tmp[754794] "expr temp" "maybe param" "maybe type" "temp"
    (754797 'move' call_tmp[754794](36282 call(36279 call (partial) isEmpty _mt[203] this[36268])))
    unknown call_tmp[754799] "expr temp" "maybe param" "maybe type" "temp"
    (754802 'move' call_tmp[754799](36283 call _cond_test call_tmp[754794]))
    if call_tmp[754799]
    {
      (596404 'move' ret[596398](596403 'coerce' 0 bool[19]))
      gotoReturn _end_isTitle[596396] _end_isTitle[596396]
    }
    unknown result[36289] "dead at end of block" "insert auto destroy"
    (643762 'init var' result[36289] 1 bool[19])
    (36293 'end of statement')
    {
      const tmp[36434] "const" "temp"
      unknown call_tmp[754806] "expr temp" "maybe param" "maybe type" "temp"
      (754809 'move' call_tmp[754806](36298 call locale_id _mt[203] this[36268]))
      unknown call_tmp[754811] "expr temp" "maybe param" "maybe type" "temp"
      (754814 'move' call_tmp[754811](36296 call chpl_buildLocaleID call_tmp[754806] c_sublocid_any[135202]))
      unknown call_tmp[754816] "expr temp" "maybe param" "maybe type" "temp"
      (754819 'move' call_tmp[754816](36294 'chpl_on_locale_num' call_tmp[754811]))
      (36435 'move' tmp[36434](36432 'deref' call_tmp[754816]))
      {
        unknown UN[36313] "dead at end of block" "param"
        (643764 'init var' UN[36313] 0)
        unknown UPPER[36309] "dead at end of block" "param"
        (643766 'init var' UPPER[36309] 1)
        unknown LOWER[36305] "dead at end of block" "param"
        (643768 'init var' LOWER[36305] 2)
        (36316 'end of statement')
        unknown last[36318] "dead at end of block" "insert auto destroy"
        (643770 'init var' last[36318] UN[36313])
        (36321 'end of statement')
        {
          unknown _indexOfInterest[36400] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[36401] "expr temp" "temp"
          unknown call_tmp[754823] "expr temp" "maybe param" "maybe type" "temp"
          (754826 'move' call_tmp[754823](36328 call(36325 call (partial) chpl_bytes _mt[203] this[36268])))
          (36410 'move' _iterator[36401](36408 call _getIterator call_tmp[754823]))
          Defer
          {
            {
              (36425 call _freeIterator _iterator[36401])
            }
          }
          { scopeless type
            (36415 'move' _indexOfInterest[36400](36412 call iteratorIndex _iterator[36401]))
          }
          ForLoop[36402]
          {
            unknown b[36322] "index var" "insert auto destroy"
            (548613 'end of statement')
            (36420 'move' b[36322] _indexOfInterest[36400])
            (548614 'end of statement' b[36322])
            {
              unknown call_tmp[754828] "expr temp" "maybe param" "maybe type" "temp"
              (754831 'move' call_tmp[754828](36393 call byte_isLower b[36322]))
              unknown call_tmp[754833] "expr temp" "maybe param" "maybe type" "temp"
              (754836 'move' call_tmp[754833](36395 call _cond_test call_tmp[754828]))
              if call_tmp[754833]
              {
                unknown tmp[478152] "maybe param" "temp"
                (478163 'move' tmp[478152](36346 call == last[36318] UPPER[36309]))
                unknown call_tmp[754838] "expr temp" "maybe param" "maybe type" "temp"
                (754841 'move' call_tmp[754838](478165 call _cond_invalid tmp[478152]))
                if call_tmp[754838]
                {
                  (478168 call compilerError "cannot promote short-circuiting || operator")
                }
                unknown tmp[666330] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                unknown tmp[666331] "maybe param" "temp"
                unknown call_tmp[754843] "expr temp" "maybe param" "maybe type" "temp"
                (754846 'move' call_tmp[754843](478153 call isTrue tmp[478152]))
                (666336 'move' tmp[666331](666334 call _cond_test call_tmp[754843]))
                if tmp[666331]
                {
                  (666341 'move' tmp[666330](666338 '_paramFoldLogical' tmp[666331] 1))
                }
                {
                  unknown tmp[666343] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                  unknown call_tmp[754848] "expr temp" "maybe param" "maybe type" "temp"
                  (754851 'move' call_tmp[754848](36350 call == last[36318] LOWER[36305]))
                  (666345 'move' tmp[666343](478157 call isTrue call_tmp[754848]))
                  (666350 'move' tmp[666330](666347 '_paramFoldLogical' tmp[666331] tmp[666343]))
                }
                unknown call_tmp[754853] "expr temp" "maybe param" "maybe type" "temp"
                (754856 'move' call_tmp[754853](36354 call _cond_test tmp[666330]))
                if call_tmp[754853]
                {
                  (36332 call = last[36318] LOWER[36305])
                  (548617 'end of statement' last[36318])
                }
                {
                  (36337 call = result[36289] 0)
                  (548619 'end of statement' result[36289])
                  break _breakLabel[36406] _breakLabel[36406]
                }
              }
              {
                unknown call_tmp[754858] "expr temp" "maybe param" "maybe type" "temp"
                (754861 'move' call_tmp[754858](36386 call byte_isUpper b[36322]))
                unknown call_tmp[754863] "expr temp" "maybe param" "maybe type" "temp"
                (754866 'move' call_tmp[754863](36388 call _cond_test call_tmp[754858]))
                if call_tmp[754863]
                {
                  unknown call_tmp[754868] "expr temp" "maybe param" "maybe type" "temp"
                  (754871 'move' call_tmp[754868](36372 call == last[36318] UN[36313]))
                  unknown call_tmp[754873] "expr temp" "maybe param" "maybe type" "temp"
                  (754876 'move' call_tmp[754873](36376 call _cond_test call_tmp[754868]))
                  if call_tmp[754873]
                  {
                    (36360 call = last[36318] UPPER[36309])
                    (548621 'end of statement' last[36318])
                  }
                  {
                    (36365 call = result[36289] 0)
                    (548623 'end of statement' result[36289])
                    break _breakLabel[36406] _breakLabel[36406]
                  }
                }
                {
                  (36381 call = last[36318] UN[36313])
                  (548625 'end of statement' last[36318])
                }
              }
            }
            label _continueLabel[36405]
            _indexOfInterest[36400]
            _iterator[36401]
          }
          label _breakLabel[36406]
        }
      }
      (36438 'elided on block' 0 tmp[36434])
    }
    (596410 'move' ret[596398](596409 'coerce' result[36289] bool[19]))
    gotoReturn _end_isTitle[596396] _end_isTitle[596396]
    (548627 'end of statement' result[36289])
    label _end_isTitle[596396]
    (596400 return ret[596398])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].toLower[36447](arg _mt[36453]:_MT[201], arg this[36450]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596416] "RVV" "temp"
    unknown result[36458] "dead at end of block" "insert auto destroy"
    (643772 'init var' result[36458] this[36450] bytes[232])
    (36462 'end of statement')
    unknown call_tmp[754880] "expr temp" "maybe param" "maybe type" "temp"
    (754883 'move' call_tmp[754880](36470 call(36467 call (partial) isEmpty _mt[203] result[36458])))
    unknown call_tmp[754885] "expr temp" "maybe param" "maybe type" "temp"
    (754888 'move' call_tmp[754885](36471 call _cond_test call_tmp[754880]))
    if call_tmp[754885]
    {
      (596422 'move' ret[596416](596421 'coerce' result[36458] bytes[232]))
      gotoReturn _end_toLower[596414] _end_toLower[596414]
      (548629 'end of statement' result[36458])
    }
    {
      unknown _indexOfInterest[36505] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[36506] "expr temp" "temp"
      unknown call_tmp[754892] "expr temp" "maybe param" "maybe type" "temp"
      (754895 'move' call_tmp[754892](36518 call(36515 call (partial) chpl_bytes _mt[203] result[36458])))
      unknown call_tmp[754897] "expr temp" "maybe param" "maybe type" "temp"
      (754900 'move' call_tmp[754897](36519 call _getIterator call_tmp[754892]))
      unknown call_tmp[754902] "expr temp" "maybe param" "maybe type" "temp"
      (754905 'move' call_tmp[754902](36522 call chpl_build_low_bounded_range 0))
      unknown call_tmp[754907] "expr temp" "maybe param" "maybe type" "temp"
      (754910 'move' call_tmp[754907](36524 call _getIterator call_tmp[754902]))
      (36526 'move' _iterator[36506](36492 call _build_tuple call_tmp[754897] call_tmp[754907]))
      Defer
      {
        {
          (36554 call _freeIterator _iterator[36506])
        }
      }
      { scopeless type
        (36531 'move' _indexOfInterest[36505](36528 call iteratorIndex _iterator[36506]))
      }
      ForLoop[36507]
      {
        (36536 call _check_tuple_var_decl _indexOfInterest[36505] 2)
        (548632 'end of statement')
        unknown b[36477] "index var" "insert auto destroy"
        (548633 'end of statement')
        (36543 'move' b[36477](36540 call _indexOfInterest[36505] 0))
        (548634 'end of statement' b[36477])
        unknown i[36479] "index var" "insert auto destroy"
        (548636 'end of statement')
        (36549 'move' i[36479](36546 call _indexOfInterest[36505] 1))
        (548637 'end of statement' i[36479])
        {
          unknown call_tmp[754914] "expr temp" "maybe param" "maybe type" "temp"
          (754917 'move' call_tmp[754914](36500 call(36497 call (partial) buff _mt[203] result[36458]) i[36479]))
          unknown call_tmp[754919] "expr temp" "maybe param" "maybe type" "temp"
          (754922 'move' call_tmp[754919](36503 call byte_toLower b[36477]))
          (36494 call = call_tmp[754914] call_tmp[754919])
          (548639 'end of statement' result[36458] i[36479] b[36477])
        }
        label _continueLabel[36510]
        _indexOfInterest[36505]
        _iterator[36506]
      }
      label _breakLabel[36511]
    }
    (596428 'move' ret[596416](596427 'coerce' result[36458] bytes[232]))
    gotoReturn _end_toLower[596414] _end_toLower[596414]
    (548643 'end of statement' result[36458])
    label _end_toLower[596414]
    (596418 return ret[596416])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].toUpper[36566](arg _mt[36572]:_MT[201], arg this[36569]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596434] "RVV" "temp"
    unknown result[36577] "dead at end of block" "insert auto destroy"
    (643774 'init var' result[36577] this[36569] bytes[232])
    (36581 'end of statement')
    unknown call_tmp[754926] "expr temp" "maybe param" "maybe type" "temp"
    (754929 'move' call_tmp[754926](36589 call(36586 call (partial) isEmpty _mt[203] result[36577])))
    unknown call_tmp[754931] "expr temp" "maybe param" "maybe type" "temp"
    (754934 'move' call_tmp[754931](36590 call _cond_test call_tmp[754926]))
    if call_tmp[754931]
    {
      (596440 'move' ret[596434](596439 'coerce' result[36577] bytes[232]))
      gotoReturn _end_toUpper[596432] _end_toUpper[596432]
      (548645 'end of statement' result[36577])
    }
    {
      unknown _indexOfInterest[36624] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[36625] "expr temp" "temp"
      unknown call_tmp[754938] "expr temp" "maybe param" "maybe type" "temp"
      (754941 'move' call_tmp[754938](36637 call(36634 call (partial) chpl_bytes _mt[203] result[36577])))
      unknown call_tmp[754943] "expr temp" "maybe param" "maybe type" "temp"
      (754946 'move' call_tmp[754943](36638 call _getIterator call_tmp[754938]))
      unknown call_tmp[754948] "expr temp" "maybe param" "maybe type" "temp"
      (754951 'move' call_tmp[754948](36641 call chpl_build_low_bounded_range 0))
      unknown call_tmp[754953] "expr temp" "maybe param" "maybe type" "temp"
      (754956 'move' call_tmp[754953](36643 call _getIterator call_tmp[754948]))
      (36645 'move' _iterator[36625](36611 call _build_tuple call_tmp[754943] call_tmp[754953]))
      Defer
      {
        {
          (36673 call _freeIterator _iterator[36625])
        }
      }
      { scopeless type
        (36650 'move' _indexOfInterest[36624](36647 call iteratorIndex _iterator[36625]))
      }
      ForLoop[36626]
      {
        (36655 call _check_tuple_var_decl _indexOfInterest[36624] 2)
        (548648 'end of statement')
        unknown b[36596] "index var" "insert auto destroy"
        (548649 'end of statement')
        (36662 'move' b[36596](36659 call _indexOfInterest[36624] 0))
        (548650 'end of statement' b[36596])
        unknown i[36598] "index var" "insert auto destroy"
        (548652 'end of statement')
        (36668 'move' i[36598](36665 call _indexOfInterest[36624] 1))
        (548653 'end of statement' i[36598])
        {
          unknown call_tmp[754960] "expr temp" "maybe param" "maybe type" "temp"
          (754963 'move' call_tmp[754960](36619 call(36616 call (partial) buff _mt[203] result[36577]) i[36598]))
          unknown call_tmp[754965] "expr temp" "maybe param" "maybe type" "temp"
          (754968 'move' call_tmp[754965](36622 call byte_toUpper b[36596]))
          (36613 call = call_tmp[754960] call_tmp[754965])
          (548655 'end of statement' result[36577] i[36598] b[36596])
        }
        label _continueLabel[36629]
        _indexOfInterest[36624]
        _iterator[36625]
      }
      label _breakLabel[36630]
    }
    (596446 'move' ret[596434](596445 'coerce' result[36577] bytes[232]))
    gotoReturn _end_toUpper[596432] _end_toUpper[596432]
    (548659 'end of statement' result[36577])
    label _end_toUpper[596432]
    (596436 return ret[596434])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].toTitle[36685](arg _mt[36691]:_MT[201], arg this[36688]:bytes[232] :
  bytes[232]) : _unknown[42] "method"
  {
    unknown ret[596452] "RVV" "temp"
    unknown result[36696] "dead at end of block" "insert auto destroy"
    (643776 'init var' result[36696] this[36688] bytes[232])
    (36700 'end of statement')
    unknown call_tmp[754972] "expr temp" "maybe param" "maybe type" "temp"
    (754975 'move' call_tmp[754972](36708 call(36705 call (partial) isEmpty _mt[203] result[36696])))
    unknown call_tmp[754977] "expr temp" "maybe param" "maybe type" "temp"
    (754980 'move' call_tmp[754977](36709 call _cond_test call_tmp[754972]))
    if call_tmp[754977]
    {
      (596458 'move' ret[596452](596457 'coerce' result[36696] bytes[232]))
      gotoReturn _end_toTitle[596450] _end_toTitle[596450]
      (548661 'end of statement' result[36696])
    }
    unknown UN[36720] "dead at end of block" "param"
    (643778 'init var' UN[36720] 0)
    unknown LETTER[36716] "dead at end of block" "param"
    (643780 'init var' LETTER[36716] 1)
    (36723 'end of statement')
    unknown last[36725] "dead at end of block" "insert auto destroy"
    (643782 'init var' last[36725] UN[36720])
    (36728 'end of statement')
    {
      unknown _indexOfInterest[36796] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[36797] "expr temp" "temp"
      unknown call_tmp[754984] "expr temp" "maybe param" "maybe type" "temp"
      (754987 'move' call_tmp[754984](36809 call(36806 call (partial) chpl_bytes _mt[203] result[36696])))
      unknown call_tmp[754989] "expr temp" "maybe param" "maybe type" "temp"
      (754992 'move' call_tmp[754989](36810 call _getIterator call_tmp[754984]))
      unknown call_tmp[754994] "expr temp" "maybe param" "maybe type" "temp"
      (754997 'move' call_tmp[754994](36813 call chpl_build_low_bounded_range 0))
      unknown call_tmp[754999] "expr temp" "maybe param" "maybe type" "temp"
      (755002 'move' call_tmp[754999](36815 call _getIterator call_tmp[754994]))
      (36817 'move' _iterator[36797](36745 call _build_tuple call_tmp[754989] call_tmp[754999]))
      Defer
      {
        {
          (36845 call _freeIterator _iterator[36797])
        }
      }
      { scopeless type
        (36822 'move' _indexOfInterest[36796](36819 call iteratorIndex _iterator[36797]))
      }
      ForLoop[36798]
      {
        (36827 call _check_tuple_var_decl _indexOfInterest[36796] 2)
        (548664 'end of statement')
        unknown b[36730] "index var" "insert auto destroy"
        (548665 'end of statement')
        (36834 'move' b[36730](36831 call _indexOfInterest[36796] 0))
        (548666 'end of statement' b[36730])
        unknown i[36732] "index var" "insert auto destroy"
        (548668 'end of statement')
        (36840 'move' i[36732](36837 call _indexOfInterest[36796] 1))
        (548669 'end of statement' i[36732])
        {
          unknown call_tmp[755004] "expr temp" "maybe param" "maybe type" "temp"
          (755007 'move' call_tmp[755004](36790 call byte_isAlpha b[36730]))
          unknown call_tmp[755009] "expr temp" "maybe param" "maybe type" "temp"
          (755012 'move' call_tmp[755009](36792 call _cond_test call_tmp[755004]))
          if call_tmp[755009]
          {
            unknown call_tmp[755014] "expr temp" "maybe param" "maybe type" "temp"
            (755017 'move' call_tmp[755014](36776 call == last[36725] UN[36720]))
            unknown call_tmp[755019] "expr temp" "maybe param" "maybe type" "temp"
            (755022 'move' call_tmp[755019](36780 call _cond_test call_tmp[755014]))
            if call_tmp[755019]
            {
              (36749 call = last[36725] LETTER[36716])
              (548671 'end of statement' last[36725])
              unknown call_tmp[755026] "expr temp" "maybe param" "maybe type" "temp"
              (755029 'move' call_tmp[755026](36759 call(36756 call (partial) buff _mt[203] result[36696]) i[36732]))
              unknown call_tmp[755031] "expr temp" "maybe param" "maybe type" "temp"
              (755034 'move' call_tmp[755031](36762 call byte_toUpper b[36730]))
              (36753 call = call_tmp[755026] call_tmp[755031])
              (548673 'end of statement' result[36696] i[36732] b[36730])
            }
            {
              unknown call_tmp[755038] "expr temp" "maybe param" "maybe type" "temp"
              (755041 'move' call_tmp[755038](36771 call(36768 call (partial) buff _mt[203] result[36696]) i[36732]))
              unknown call_tmp[755043] "expr temp" "maybe param" "maybe type" "temp"
              (755046 'move' call_tmp[755043](36774 call byte_toLower b[36730]))
              (36765 call = call_tmp[755038] call_tmp[755043])
              (548677 'end of statement' result[36696] i[36732] b[36730])
            }
          }
          {
            (36785 call = last[36725] UN[36720])
            (548681 'end of statement' last[36725])
          }
        }
        label _continueLabel[36801]
        _indexOfInterest[36796]
        _iterator[36797]
      }
      label _breakLabel[36802]
    }
    (596464 'move' ret[596452](596463 'coerce' result[36696] bytes[232]))
    gotoReturn _end_toTitle[596450] _end_toTitle[596450]
    (548683 'end of statement' result[36696])
    label _end_toTitle[596450]
    (596454 return ret[596452])
  }
  { scopeless type
    bytes[232]
  }
  function :[36857](arg x[36860]:string[244], arg t[36864]:bytes[232]) : _unknown[42] "inline" "operator"
  {
    unknown ret[596470] "RVV" "temp"
    unknown call_tmp[755052] "expr temp" "maybe param" "maybe type" "temp"
    (755055 'move' call_tmp[755052](36875 call buff _mt[203] x[36860]))
    unknown call_tmp[755059] "expr temp" "maybe param" "maybe type" "temp"
    (755062 'move' call_tmp[755059](36879 call numBytes _mt[203] x[36860]))
    unknown call_tmp[755066] "expr temp" "maybe param" "maybe type" "temp"
    (755069 'move' call_tmp[755066](36886 call numBytes _mt[203] x[36860]))
    unknown call_tmp[755071] "expr temp" "maybe param" "maybe type" "temp"
    (755074 'move' call_tmp[755071](36883 call + call_tmp[755066] 1))
    unknown call_tmp[755076] "expr temp" "maybe param" "maybe type" "temp"
    (755079 'move' call_tmp[755076](36873 call(36870 call (partial) createCopyingBuffer _mt[203] bytes[232]) call_tmp[755052](length = call_tmp[755059])(size = call_tmp[755071])))
    (596475 'move' ret[596470](596474 'deref' call_tmp[755076]))
    (596472 return ret[596470])
  }
  function :[36893](arg x[36896] :
  c_string[51978], arg t[36900]:bytes[232]) : _unknown[42] "deprecated" "inline" "operator"
  {
    unknown ret[596479] "RVV" "temp"
    unknown call_tmp[755083] "maybe param" "maybe type" "temp"
    (755086 'move' call_tmp[755083](36907 call size _mt[203] x[36896]))
    unknown length[36905] "dead at end of block" "insert auto destroy"
    (643784 'init var' length[36905] call_tmp[755083])
    (36911 'end of statement')
    unknown call_tmp[755090] "expr temp" "maybe param" "maybe type" "temp"
    (755093 'move' call_tmp[755090](36918 call : x[36896] bufferType[30212]))
    unknown call_tmp[755095] "expr temp" "maybe param" "maybe type" "temp"
    (755098 'move' call_tmp[755095](36924 call + length[36905] 1))
    unknown call_tmp[755100] "expr temp" "maybe param" "maybe type" "temp"
    (755103 'move' call_tmp[755100](36917 call(36914 call (partial) createCopyingBuffer _mt[203] bytes[232]) call_tmp[755090](length = length[36905])(size = call_tmp[755095])))
    (596484 'move' ret[596479](596483 'deref' call_tmp[755100]))
    gotoReturn _end_:[596477] _end_:[596477]
    (548686 'end of statement' length[36905])
    label _end_:[596477]
    (596481 return ret[596479])
  }
  function bytes[232].+=[36931](arg _mt[36945]:_MT[201], arg this[36934]:bytes[232] :
  bytes[232], ref arg lhs[36938]:bytes[232], const  ref arg rhs[36942]:bytes[232]) : _unknown[42] "assignop" "method" "operator" "no return value for void"
  {
    unknown ret[596490] "RVV" "temp"
    (36950 call doAppend lhs[36938] rhs[36942])
    (596492 return ret[596490])
  }
  { scopeless type
    void[4]
  }
  function bytes[232].appendByteValues[36956](arg _mt[36970]:_MT[201], ref arg this[36959]:bytes[232] :
  bytes[232], arg x[36966] ... :
  (36963 call uint(64)[86] 8)) : _unknown[42] "method" "@unstable" "no return value for void"
  {
    unknown ret[596496] "RVV" "temp"
    unknown buf[36975] "dead at end of block" "insert auto destroy"
    unknown call_tmp[755105] "expr temp" "maybe param" "maybe type" "temp"
    (755108 'move' call_tmp[755105](36979 call uint(64)[86] 8))
    unknown call_tmp[755112] "expr temp" "maybe param" "maybe type" "temp"
    (755115 'move' call_tmp[755112](36982 call size _mt[203] x[36966]))
    unknown call_tmp[755117] "expr temp" "maybe param" "maybe type" "temp"
    (755120 'move' call_tmp[755117](36977 call c_array[47643](?) call_tmp[755105] call_tmp[755112]))
    (643786 'default init var' buf[36975] call_tmp[755117])
    (36986 'end of statement')
    {
      unknown i[36987] "dead at end of block" "index var" "insert auto destroy"
      (643788 'init var' i[36987] 0)
      (548689 'end of statement')
      unknown tmp[37007] "maybe param" "temp"
      unknown call_tmp[755124] "expr temp" "maybe param" "maybe type" "temp"
      (755127 'move' call_tmp[755124](36991 call size _mt[203] x[36966]))
      unknown call_tmp[755129] "expr temp" "maybe param" "maybe type" "temp"
      (755132 'move' call_tmp[755129](36994 call chpl__nudgeHighBound call_tmp[755124]))
      (37019 'move' tmp[37007](37017 call chpl_compute_low_param_loop_bound 0 call_tmp[755129]))
      unknown tmp[37008] "maybe param" "temp"
      unknown call_tmp[755136] "expr temp" "maybe param" "maybe type" "temp"
      (755139 'move' call_tmp[755136](37026 call size _mt[203] x[36966]))
      unknown call_tmp[755141] "expr temp" "maybe param" "maybe type" "temp"
      (755144 'move' call_tmp[755141](37024 call chpl__nudgeHighBound call_tmp[755136]))
      (37031 'move' tmp[37008](37029 call chpl_compute_high_param_loop_bound 0 call_tmp[755141]))
      unknown tmp[37009] "maybe param" "temp"
      (37034 'move' tmp[37009] 1)
      ParamForLoop[37036]
      { i[36987] tmp[37007] tmp[37008] tmp[37009]
        {
          unknown call_tmp[755146] "expr temp" "maybe param" "maybe type" "temp"
          (755149 'move' call_tmp[755146](37002 call buf[36975] i[36987]))
          unknown call_tmp[755151] "expr temp" "maybe param" "maybe type" "temp"
          (755154 'move' call_tmp[755151](37005 call x[36966] i[36987]))
          (36999 call = call_tmp[755146] call_tmp[755151])
          (548690 'end of statement' buf[36975] i[36987])
        }
      }
      label _unused_continueLabel[37011]
      label _breakLabel[37010]
    }
    unknown call_tmp[755158] "expr temp" "maybe param" "maybe type" "temp"
    (755161 'move' call_tmp[755158](37049 call size _mt[203] x[36966]))
    (37046 call doAppendSomeBytes this[36959] call_tmp[755158] buf[36975](nCodepoints = 0))
    (548693 'end of statement' buf[36975])
    (596498 return ret[596496])
  }
  { scopeless type
    void[4]
  }
  function convertNibble[37058](in arg nib[37063] :
  (37061 call uint(64)[86] 8), arg uppercase[37067]:bool[19]) : _unknown[42] "private"
  {
    unknown ret[596502] "RVV" "temp"
    unknown call_tmp[755163] "expr temp" "maybe param" "maybe type" "temp"
    (755166 'move' call_tmp[755163](37077 call & nib[37063] 15))
    (37074 call = nib[37063] call_tmp[755163])
    (548695 'end of statement')
    unknown tmp[478194] "maybe param" "temp"
    (478205 'move' tmp[478194](37157 call <= 0 nib[37063]))
    unknown call_tmp[755168] "expr temp" "maybe param" "maybe type" "temp"
    (755171 'move' call_tmp[755168](478207 call _cond_invalid tmp[478194]))
    if call_tmp[755168]
    {
      (478210 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[666357] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[666358] "maybe param" "temp"
    unknown call_tmp[755173] "expr temp" "maybe param" "maybe type" "temp"
    (755176 'move' call_tmp[755173](478195 call isTrue tmp[478194]))
    (666363 'move' tmp[666358](666361 call _cond_test call_tmp[755173]))
    if tmp[666358]
    {
      unknown tmp[666365] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[755178] "expr temp" "maybe param" "maybe type" "temp"
      (755181 'move' call_tmp[755178](37161 call <= nib[37063] 9))
      (666367 'move' tmp[666365](478198 call isTrue call_tmp[755178]))
      (666372 'move' tmp[666357](666369 '_paramFoldLogical' tmp[666358] tmp[666365]))
    }
    {
      (666377 'move' tmp[666357](666374 '_paramFoldLogical' tmp[666358] 0))
    }
    unknown call_tmp[755183] "expr temp" "maybe param" "maybe type" "temp"
    (755186 'move' call_tmp[755183](37167 call _cond_test tmp[666357]))
    if call_tmp[755183]
    {
      unknown call_tmp[755188] "maybe param" "maybe type" "temp"
      (755191 'move' call_tmp[755188](37092 call b"0" 0))
      unknown call_tmp[755193] "maybe param" "maybe type" "temp"
      (755196 'move' call_tmp[755193](37087 call uint(64)[86] 8))
      unknown zero[37085] "dead at end of block" "param"
      (643790 'init var' zero[37085] call_tmp[755188] call_tmp[755193])
      (37095 'end of statement')
      unknown call_tmp[755198] "expr temp" "maybe param" "maybe type" "temp"
      (755201 'move' call_tmp[755198](37097 call + zero[37085] nib[37063]))
      unknown call_tmp[755203] "expr temp" "maybe param" "maybe type" "temp"
      (755206 'move' call_tmp[755203](596507 call uint(64)[86] 8))
      (596510 'move' ret[596502](596509 'coerce' call_tmp[755198] call_tmp[755203]))
      gotoReturn _end_convertNibble[596500] _end_convertNibble[596500]
    }
    {
      unknown tmp[478173] "maybe param" "temp"
      (478184 'move' tmp[478173](37143 call <= 10 nib[37063]))
      unknown call_tmp[755208] "expr temp" "maybe param" "maybe type" "temp"
      (755211 'move' call_tmp[755208](478186 call _cond_invalid tmp[478173]))
      if call_tmp[755208]
      {
        (478189 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[666384] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[666385] "maybe param" "temp"
      unknown call_tmp[755213] "expr temp" "maybe param" "maybe type" "temp"
      (755216 'move' call_tmp[755213](478174 call isTrue tmp[478173]))
      (666390 'move' tmp[666385](666388 call _cond_test call_tmp[755213]))
      if tmp[666385]
      {
        unknown tmp[666392] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[755218] "expr temp" "maybe param" "maybe type" "temp"
        (755221 'move' call_tmp[755218](37147 call <= nib[37063] 15))
        (666394 'move' tmp[666392](478177 call isTrue call_tmp[755218]))
        (666399 'move' tmp[666384](666396 '_paramFoldLogical' tmp[666385] tmp[666392]))
      }
      {
        (666404 'move' tmp[666384](666401 '_paramFoldLogical' tmp[666385] 0))
      }
      unknown call_tmp[755223] "expr temp" "maybe param" "maybe type" "temp"
      (755226 'move' call_tmp[755223](37151 call _cond_test tmp[666384]))
      if call_tmp[755223]
      {
        unknown call_tmp[755228] "maybe param" "maybe type" "temp"
        (755231 'move' call_tmp[755228](37110 call b"a" 0))
        unknown call_tmp[755233] "maybe param" "maybe type" "temp"
        (755236 'move' call_tmp[755233](37105 call uint(64)[86] 8))
        unknown a[37103] "dead at end of block" "param"
        (643792 'init var' a[37103] call_tmp[755228] call_tmp[755233])
        (37113 'end of statement')
        unknown call_tmp[755238] "maybe param" "maybe type" "temp"
        (755241 'move' call_tmp[755238](37122 call b"A" 0))
        unknown call_tmp[755243] "maybe param" "maybe type" "temp"
        (755246 'move' call_tmp[755243](37117 call uint(64)[86] 8))
        unknown A[37115] "dead at end of block" "param"
        (643794 'init var' A[37115] call_tmp[755238] call_tmp[755243])
        (37125 'end of statement')
        unknown tmp[666411] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[666412] "maybe param" "temp"
        (666417 'move' tmp[666412](666415 call _cond_test uppercase[37067]))
        if tmp[666412]
        {
          (666422 'move' tmp[666411](666419 '_paramFoldLogical' tmp[666412] A[37115]))
        }
        {
          (666427 'move' tmp[666411](666424 '_paramFoldLogical' tmp[666412] a[37103]))
        }
        unknown call_tmp[755248] "expr temp" "maybe param" "maybe type" "temp"
        (755251 'move' call_tmp[755248](37129 call + tmp[666411] nib[37063]))
        unknown call_tmp[755253] "expr temp" "maybe param" "maybe type" "temp"
        (755256 'move' call_tmp[755253](37127 call - call_tmp[755248] 10))
        unknown call_tmp[755258] "expr temp" "maybe param" "maybe type" "temp"
        (755261 'move' call_tmp[755258](596515 call uint(64)[86] 8))
        (596518 'move' ret[596502](596517 'coerce' call_tmp[755253] call_tmp[755258]))
        gotoReturn _end_convertNibble[596500] _end_convertNibble[596500]
      }
    }
    unknown call_tmp[755263] "expr temp" "maybe param" "maybe type" "temp"
    (755266 'move' call_tmp[755263](596523 call uint(64)[86] 8))
    (596526 'move' ret[596502](596525 'coerce' 0 call_tmp[755263]))
    label _end_convertNibble[596500]
    (596504 return ret[596502])
  }
  { scopeless type
    (37071 call uint(64)[86] 8)
  }
  function bytes[232].toHexadecimal[37177](arg _mt[37193]:_MT[201], arg this[37180]:bytes[232] :
  bytes[232], arg uppercase[37185]:bool[19] =
  0, arg resultType[37190]:_any[141](?) =
  bytes[232]) : _unknown[42] "method" "@unstable"
  {
    unknown ret[596530] "RVV" "temp"
    unknown result[37198] "dead at end of block" "insert auto destroy"
    (643796 'default init var' result[37198] resultType[37190])
    (37201 'end of statement')
    {
      unknown _indexOfInterest[37267] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[37268] "expr temp" "temp"
      (37277 'move' _iterator[37268](37275 call _getIterator this[37180]))
      Defer
      {
        {
          (37292 call _freeIterator _iterator[37268])
        }
      }
      { scopeless type
        (37282 'move' _indexOfInterest[37267](37279 call iteratorIndex _iterator[37268]))
      }
      ForLoop[37269]
      {
        unknown byte[37202] "index var" "insert auto destroy"
        (548702 'end of statement')
        (37287 'move' byte[37202] _indexOfInterest[37267])
        (548703 'end of statement' byte[37202])
        {
          unknown call_tmp[755268] "expr temp" "maybe param" "maybe type" "temp"
          (755271 'move' call_tmp[755268](37212 call >> byte[37202] 4))
          unknown call_tmp[755273] "expr temp" "maybe param" "maybe type" "temp"
          (755276 'move' call_tmp[755273](37210 call & call_tmp[755268] 15))
          unknown call_tmp[755278] "maybe param" "maybe type" "temp"
          (755281 'move' call_tmp[755278](37209 call convertNibble call_tmp[755273] uppercase[37185]))
          const nib1[37207] "dead at end of block" "const" "insert auto destroy"
          (643798 'init var' nib1[37207] call_tmp[755278])
          (37219 'end of statement')
          unknown call_tmp[755283] "expr temp" "maybe param" "maybe type" "temp"
          (755286 'move' call_tmp[755283](37224 call & byte[37202] 15))
          unknown call_tmp[755288] "maybe param" "maybe type" "temp"
          (755291 'move' call_tmp[755288](37223 call convertNibble call_tmp[755283] uppercase[37185]))
          const nib2[37221] "dead at end of block" "const" "insert auto destroy"
          (643800 'init var' nib2[37221] call_tmp[755288])
          (37230 'end of statement' byte[37202])
          unknown call_tmp[755293] "expr temp" "maybe param" "maybe type" "temp"
          (755296 'move' call_tmp[755293](37241 call == resultType[37190] bytes[232]))
          unknown call_tmp[755298] "expr temp" "maybe param" "maybe type" "temp"
          (755301 'move' call_tmp[755298](37245 call _cond_test call_tmp[755293]))
          if call_tmp[755298]
          {
            (37238 call(37235 call (partial) appendByteValues _mt[203] result[37198]) nib1[37207] nib2[37221])
            (548706 'end of statement' result[37198] nib1[37207] nib2[37221])
          }
          unknown call_tmp[755305] "expr temp" "maybe param" "maybe type" "temp"
          (755308 'move' call_tmp[755305](37259 call == resultType[37190] string[244]))
          unknown call_tmp[755310] "expr temp" "maybe param" "maybe type" "temp"
          (755313 'move' call_tmp[755310](37263 call _cond_test call_tmp[755305]))
          if call_tmp[755310]
          {
            (37256 call(37253 call (partial) appendCodepointValues _mt[203] result[37198]) nib1[37207] nib2[37221])
            (548710 'end of statement' result[37198] nib1[37207] nib2[37221])
          }
        }
        label _continueLabel[37272]
        _indexOfInterest[37267]
        _iterator[37268]
      }
      label _breakLabel[37273]
    }
    (596536 'move' ret[596530](596535 'coerce' result[37198] resultType[37190]))
    gotoReturn _end_toHexadecimal[596528] _end_toHexadecimal[596528]
    (548714 'end of statement' result[37198])
    label _end_toHexadecimal[596528]
    (596532 return ret[596530])
  }
  { scopeless type
    resultType[37190]
  }
  function bytes[232].=[37304](arg _mt[37318]:_MT[201], arg this[37307]:bytes[232] :
  bytes[232], ref arg lhs[37311]:bytes[232], arg rhs[37315]:bytes[232]) : _unknown[42] "assignop" "method" "operator" "no return value for void"
  {
    unknown ret[596542] "RVV" "temp"
    (37323 call doAssign lhs[37311] rhs[37315])
    (596544 return ret[596542])
  }
  { scopeless type
    void[4]
  }
  function bytes[232].=[37329](arg _mt[37343]:_MT[201], arg this[37332]:bytes[232] :
  bytes[232], ref arg lhs[37336]:bytes[232], arg rhs_c[37340] :
  c_string[51978]) : _unknown[42] "assignop" "deprecated" "method" "operator" "no return value for void"
  {
    unknown ret[596548] "RVV" "temp"
    unknown call_tmp[755319] "expr temp" "maybe param" "maybe type" "temp"
    (755322 'move' call_tmp[755319](37359 call c_ptrConst[46990](?) c_char[562]))
    unknown call_tmp[755324] "expr temp" "maybe param" "maybe type" "temp"
    (755327 'move' call_tmp[755324](37355 call : rhs_c[37340] call_tmp[755319]))
    unknown call_tmp[755329] "expr temp" "maybe param" "maybe type" "temp"
    (755332 'move' call_tmp[755329](37354 call(37351 call (partial) createCopyingBuffer _mt[203] bytes[232]) call_tmp[755324]))
    (37347 call = lhs[37336] call_tmp[755329])
    (596550 return ret[596548])
  }
  { scopeless type
    void[4]
  }
  function bytes[232].+[37364](arg _mt[37378]:_MT[201], arg this[37367]:bytes[232] :
  bytes[232], arg s0[37371]:bytes[232], arg s1[37375]:bytes[232]) : _unknown[42] "method" "operator"
  {
    unknown ret[596554] "RVV" "temp"
    unknown call_tmp[755334] "expr temp" "maybe param" "maybe type" "temp"
    (755337 'move' call_tmp[755334](37384 call doConcat s0[37371] s1[37375]))
    (596560 'move' ret[596554](596559 'coerce' call_tmp[755334] bytes[232]))
    (596556 return ret[596554])
  }
  { scopeless type
    bytes[232]
  }
  function bytes[232].+[37390](arg _mt[37404]:_MT[201], arg this[37393]:bytes[232] :
  bytes[232], param arg s0[37397]:bytes[232], param arg s1[37401]:bytes[232]) param : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596564] "RVV" "param" "temp"
    unknown call_tmp[755339] "expr temp" "maybe param" "maybe type" "temp"
    (755342 'move' call_tmp[755339](37408 'string_concat' s0[37397] s1[37401]))
    (596569 'move' ret[596564](596568 'deref' call_tmp[755339]))
    (596566 return ret[596564])
  }
  function *[37413](arg s[37416]:bytes[232], arg n[37420]:integral[159](?)) : _unknown[42] "operator"
  {
    unknown ret[596573] "RVV" "temp"
    unknown call_tmp[755344] "expr temp" "maybe param" "maybe type" "temp"
    (755347 'move' call_tmp[755344](37427 call doMultiply s[37416] n[37420]))
    (596579 'move' ret[596573](596578 'coerce' call_tmp[755344] bytes[232]))
    (596575 return ret[596573])
  }
  { scopeless type
    bytes[232]
  }
  function *[37433](arg n[37436]:integral[159](?), arg s[37440]:bytes[232]) : _unknown[42] "operator"
  {
    unknown ret[596583] "RVV" "temp"
    unknown call_tmp[755349] "expr temp" "maybe param" "maybe type" "temp"
    (755352 'move' call_tmp[755349](37446 call doMultiply s[37440] n[37436]))
    (596588 'move' ret[596583](596587 'deref' call_tmp[755349]))
    (596585 return ret[596583])
  }
  function bytes[232].==[37451](arg _mt[37465]:_MT[201], arg this[37454]:bytes[232] :
  bytes[232], arg a[37458]:bytes[232], arg b[37462]:bytes[232]) : _unknown[42] "method" "operator"
  {
    unknown ret[596592] "RVV" "temp"
    unknown call_tmp[755354] "expr temp" "maybe param" "maybe type" "temp"
    (755357 'move' call_tmp[755354](37471 call doEq a[37458] b[37462]))
    (596598 'move' ret[596592](596597 'coerce' call_tmp[755354] bool[19]))
    (596594 return ret[596592])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].!=[37477](arg _mt[37491]:_MT[201], arg this[37480]:bytes[232] :
  bytes[232], arg a[37484]:bytes[232], arg b[37488]:bytes[232]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596602] "RVV" "temp"
    unknown call_tmp[755359] "expr temp" "maybe param" "maybe type" "temp"
    (755362 'move' call_tmp[755359](37499 call doEq a[37484] b[37488]))
    unknown call_tmp[755364] "expr temp" "maybe param" "maybe type" "temp"
    (755367 'move' call_tmp[755364](37496 call ! call_tmp[755359]))
    (596608 'move' ret[596602](596607 'coerce' call_tmp[755364] bool[19]))
    (596604 return ret[596602])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].<[37505](arg _mt[37519]:_MT[201], arg this[37508]:bytes[232] :
  bytes[232], arg a[37512]:bytes[232], arg b[37516]:bytes[232]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596612] "RVV" "temp"
    unknown call_tmp[755369] "expr temp" "maybe param" "maybe type" "temp"
    (755372 'move' call_tmp[755369](37525 call doLessThan a[37512] b[37516]))
    (596618 'move' ret[596612](596617 'coerce' call_tmp[755369] bool[19]))
    (596614 return ret[596612])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].>[37531](arg _mt[37545]:_MT[201], arg this[37534]:bytes[232] :
  bytes[232], arg a[37538]:bytes[232], arg b[37542]:bytes[232]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596622] "RVV" "temp"
    unknown call_tmp[755374] "expr temp" "maybe param" "maybe type" "temp"
    (755377 'move' call_tmp[755374](37551 call doGreaterThan a[37538] b[37542]))
    (596628 'move' ret[596622](596627 'coerce' call_tmp[755374] bool[19]))
    (596624 return ret[596622])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].<=[37557](arg _mt[37571]:_MT[201], arg this[37560]:bytes[232] :
  bytes[232], arg a[37564]:bytes[232], arg b[37568]:bytes[232]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596632] "RVV" "temp"
    unknown call_tmp[755379] "expr temp" "maybe param" "maybe type" "temp"
    (755382 'move' call_tmp[755379](37577 call doLessThanOrEq a[37564] b[37568]))
    (596638 'move' ret[596632](596637 'coerce' call_tmp[755379] bool[19]))
    (596634 return ret[596632])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].>=[37583](arg _mt[37597]:_MT[201], arg this[37586]:bytes[232] :
  bytes[232], arg a[37590]:bytes[232], arg b[37594]:bytes[232]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596642] "RVV" "temp"
    unknown call_tmp[755384] "expr temp" "maybe param" "maybe type" "temp"
    (755387 'move' call_tmp[755384](37603 call doGreaterThanOrEq a[37590] b[37594]))
    (596648 'move' ret[596642](596647 'coerce' call_tmp[755384] bool[19]))
    (596644 return ret[596642])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].==[37609](arg _mt[37623]:_MT[201], arg this[37612]:bytes[232] :
  bytes[232], param arg s0[37616]:bytes[232], param arg s1[37620]:bytes[232]) param : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596652] "RVV" "param" "temp"
    unknown call_tmp[755389] "expr temp" "maybe param" "maybe type" "temp"
    (755392 'move' call_tmp[755389](37629 'string_compare' s0[37616] s1[37620]))
    unknown call_tmp[755394] "expr temp" "maybe param" "maybe type" "temp"
    (755397 'move' call_tmp[755394](37627 call == call_tmp[755389] 0))
    (596657 'move' ret[596652](596656 'deref' call_tmp[755394]))
    (596654 return ret[596652])
  }
  function bytes[232].!=[37635](arg _mt[37649]:_MT[201], arg this[37638]:bytes[232] :
  bytes[232], param arg s0[37642]:bytes[232], param arg s1[37646]:bytes[232]) param : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596661] "RVV" "param" "temp"
    unknown call_tmp[755399] "expr temp" "maybe param" "maybe type" "temp"
    (755402 'move' call_tmp[755399](37655 'string_compare' s0[37642] s1[37646]))
    unknown call_tmp[755404] "expr temp" "maybe param" "maybe type" "temp"
    (755407 'move' call_tmp[755404](37653 call != call_tmp[755399] 0))
    (596666 'move' ret[596661](596665 'deref' call_tmp[755404]))
    (596663 return ret[596661])
  }
  function bytes[232].<=[37661](arg _mt[37675]:_MT[201], arg this[37664]:bytes[232] :
  bytes[232], param arg a[37668]:bytes[232], param arg b[37672]:bytes[232]) param : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596670] "RVV" "param" "temp"
    unknown call_tmp[755409] "expr temp" "maybe param" "maybe type" "temp"
    (755412 'move' call_tmp[755409](37681 'string_compare' a[37668] b[37672]))
    unknown call_tmp[755414] "expr temp" "maybe param" "maybe type" "temp"
    (755417 'move' call_tmp[755414](37679 call <= call_tmp[755409] 0))
    (596675 'move' ret[596670](596674 'deref' call_tmp[755414]))
    (596672 return ret[596670])
  }
  function bytes[232].>=[37687](arg _mt[37701]:_MT[201], arg this[37690]:bytes[232] :
  bytes[232], param arg a[37694]:bytes[232], param arg b[37698]:bytes[232]) param : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596679] "RVV" "param" "temp"
    unknown call_tmp[755419] "expr temp" "maybe param" "maybe type" "temp"
    (755422 'move' call_tmp[755419](37707 'string_compare' a[37694] b[37698]))
    unknown call_tmp[755424] "expr temp" "maybe param" "maybe type" "temp"
    (755427 'move' call_tmp[755424](37705 call >= call_tmp[755419] 0))
    (596684 'move' ret[596679](596683 'deref' call_tmp[755424]))
    (596681 return ret[596679])
  }
  function bytes[232].<[37713](arg _mt[37727]:_MT[201], arg this[37716]:bytes[232] :
  bytes[232], param arg a[37720]:bytes[232], param arg b[37724]:bytes[232]) param : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596688] "RVV" "param" "temp"
    unknown call_tmp[755429] "expr temp" "maybe param" "maybe type" "temp"
    (755432 'move' call_tmp[755429](37733 'string_compare' a[37720] b[37724]))
    unknown call_tmp[755434] "expr temp" "maybe param" "maybe type" "temp"
    (755437 'move' call_tmp[755434](37731 call < call_tmp[755429] 0))
    (596693 'move' ret[596688](596692 'deref' call_tmp[755434]))
    (596690 return ret[596688])
  }
  function bytes[232].>[37739](arg _mt[37753]:_MT[201], arg this[37742]:bytes[232] :
  bytes[232], param arg a[37746]:bytes[232], param arg b[37750]:bytes[232]) param : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[596697] "RVV" "param" "temp"
    unknown call_tmp[755439] "expr temp" "maybe param" "maybe type" "temp"
    (755442 'move' call_tmp[755439](37759 'string_compare' a[37746] b[37750]))
    unknown call_tmp[755444] "expr temp" "maybe param" "maybe type" "temp"
    (755447 'move' call_tmp[755444](37757 call > call_tmp[755439] 0))
    (596702 'move' ret[596697](596701 'deref' call_tmp[755444]))
    (596699 return ret[596697])
  }
  function bytes[232].hash[37765](arg _mt[37771]:_MT[201], arg this[37768]:bytes[232] :
  bytes[232]) : _unknown[42] "inline" "method"
  {
    unknown ret[596706] "RVV" "temp"
    unknown call_tmp[755449] "expr temp" "maybe param" "maybe type" "temp"
    (755452 'move' call_tmp[755449](37777 call getHash this[37768]))
    (596712 'move' ret[596706](596711 'coerce' call_tmp[755449] uint(64)[86]))
    (596708 return ret[596706])
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475017]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] bytes[232]
    {
    }
    (596716 return _void[46])
  }
  function bytes[232].<=>[37789](arg _mt[37803]:_MT[201], arg this[37792]:bytes[232] :
  bytes[232], ref arg x[37796]:bytes[232], ref arg y[37800]:bytes[232]) : _unknown[42] "method" "operator" "no return value for void"
  {
    unknown call_tmp[755456] "expr temp" "maybe param" "maybe type" "temp"
    (755459 'move' call_tmp[755456](37874 call locale_id _mt[203] x[37796]))
    unknown call_tmp[755463] "expr temp" "maybe param" "maybe type" "temp"
    (755466 'move' call_tmp[755463](37878 call locale_id _mt[203] y[37800]))
    unknown call_tmp[755468] "expr temp" "maybe param" "maybe type" "temp"
    (755471 'move' call_tmp[755468](37871 call != call_tmp[755456] call_tmp[755463]))
    unknown call_tmp[755473] "expr temp" "maybe param" "maybe type" "temp"
    (755476 'move' call_tmp[755473](37881 call _cond_test call_tmp[755468]))
    if call_tmp[755473]
    {
      unknown tmp[37808] "dead at end of block" "insert auto destroy"
      (643802 'init var' tmp[37808] x[37796])
      (37811 'end of statement')
      (37812 call = x[37796] y[37800])
      (548736 'end of statement')
      (37816 call = y[37800] tmp[37808])
      (548737 'end of statement' tmp[37808])
    }
    {
      unknown call_tmp[755480] "expr temp" "maybe param" "maybe type" "temp"
      (755483 'move' call_tmp[755480](37824 call buffLen _mt[203] x[37796]))
      unknown call_tmp[755487] "expr temp" "maybe param" "maybe type" "temp"
      (755490 'move' call_tmp[755487](37828 call buffLen _mt[203] y[37800]))
      (37821 call <=> call_tmp[755480] call_tmp[755487])
      (548739 'end of statement')
      unknown call_tmp[755494] "expr temp" "maybe param" "maybe type" "temp"
      (755497 'move' call_tmp[755494](37834 call buffSize _mt[203] x[37796]))
      unknown call_tmp[755501] "expr temp" "maybe param" "maybe type" "temp"
      (755504 'move' call_tmp[755501](37838 call buffSize _mt[203] y[37800]))
      (37831 call <=> call_tmp[755494] call_tmp[755501])
      (548740 'end of statement')
      unknown call_tmp[755508] "expr temp" "maybe param" "maybe type" "temp"
      (755511 'move' call_tmp[755508](37844 call buff _mt[203] x[37796]))
      unknown call_tmp[755515] "expr temp" "maybe param" "maybe type" "temp"
      (755518 'move' call_tmp[755515](37848 call buff _mt[203] y[37800]))
      (37841 call <=> call_tmp[755508] call_tmp[755515])
      (548741 'end of statement')
      unknown call_tmp[755522] "expr temp" "maybe param" "maybe type" "temp"
      (755525 'move' call_tmp[755522](37854 call isOwned _mt[203] x[37796]))
      unknown call_tmp[755529] "expr temp" "maybe param" "maybe type" "temp"
      (755532 'move' call_tmp[755529](37858 call isOwned _mt[203] y[37800]))
      (37851 call <=> call_tmp[755522] call_tmp[755529])
      (548742 'end of statement')
      unknown call_tmp[755536] "expr temp" "maybe param" "maybe type" "temp"
      (755539 'move' call_tmp[755536](37864 call locale_id _mt[203] x[37796]))
      unknown call_tmp[755543] "expr temp" "maybe param" "maybe type" "temp"
      (755546 'move' call_tmp[755543](37868 call locale_id _mt[203] y[37800]))
      (37861 call <=> call_tmp[755536] call_tmp[755543])
    }
    (596718 return _void[46])
  }
  function |writeSerializable[475117]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] bytes[232]
    {
    }
    (596722 return _void[46])
  }
  function |readDeserializable[475122]() : _unknown[42] "ImplementsStmt wrapper"
  { readDeserializable[310078] bytes[232]
    {
    }
    (596726 return _void[46])
  }
  (396011 'used modules list'(32928 'use' ChapelStandard[315387])(32931 'use' ByteBufferHelpers[31230])(32934 'use' BytesStringCommon[46748])(32937 'use' CTypes[51217])(32942 'use' ChplConfig[29952] 'only' compiledForSingleLocale)(32945 'use' BytesCasts[32924])(32950 'use' BytesStringCommon[46748] 'only' decodePolicy))
}
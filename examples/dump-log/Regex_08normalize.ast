AST dump for Regex after pass normalize.
Module use list: ChapelStandard OS CTypes IO ChplConfig RegexIoSupport 

{
  function chpl__init_Regex[468462]() : void[4] "insert line file info" "module init"
  {
    (646477 'init var' initBufferSizeForSlowReplaceAndCount[153603] 16)
    (153606 'end of statement')
    { scopeless type extern
      (646479 'default init var' QIO_REGEX_ANCHOR_UNANCHORED[153850] c_int[522])
    }
    (153853 'end of statement')
    { scopeless type extern
      (646482 'default init var' QIO_REGEX_ANCHOR_START[153855] c_int[522])
    }
    (153858 'end of statement')
    { scopeless type extern
      (646485 'default init var' QIO_REGEX_ANCHOR_BOTH[153860] c_int[522])
    }
    (153863 'end of statement')
    (1001037 'resolution point' |serializable[475232])
    (1001039 'end of statement')
    (612191 return _void[46])
  }
  def module RegexIoSupport[158722]  
  const initBufferSizeForSlowReplaceAndCount[153603] "dead at end of block" "const" "insert auto destroy" "private"
  type qio_regex_t[153611]
  type qio_regex_options_t[153655] val utf8[153615]:bool[19] bool[19] val posix[153620]:bool[19] bool[19] val literal[153625]:bool[19] bool[19] val nocapture[153630]:bool[19] bool[19] val ignorecase[153635]:bool[19] bool[19] val multiline[153640]:bool[19] bool[19] val dotnl[153645]:bool[19] bool[19] val nongreedy[153650]:bool[19] bool[19]
  function qio_regex_null[153657]() : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    qio_regex_t[153611]
  }
  function qio_regex_init_default_options[153663](ref arg options[153666]:qio_regex_options_t[153655]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_create_compile[153671](arg str[153676] :
  (153674 call c_ptrConst[46990](?) c_char[562]), arg strlen[153682] :
  (153680 call int(64)[10] 64), const  ref arg options[153686]:qio_regex_options_t[153655], ref arg compiled[153690]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_create_compile_flags[153695](arg str[153700] :
  (153698 call c_ptrConst[46990](?) c_char[562]), arg strlen[153706] :
  (153704 call int(64)[10] 64), arg flags[153712] :
  (153710 call c_ptrConst[46990](?) c_char[562]), arg flagslen[153718] :
  (153716 call int(64)[10] 64), arg isUtf8[153722]:bool[19], ref arg compiled[153726]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_create_compile_flags_2[153731](arg str[153736] :
  (153734 call c_ptr[46891](?) void[4]), arg strlen[153742] :
  (153740 call int(64)[10] 64), arg flags[153748] :
  (153746 call c_ptr[46891](?) void[4]), arg flagslen[153754] :
  (153752 call int(64)[10] 64), arg isUtf8[153758]:bool[19], ref arg compiled[153762]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function qio_regex_retain[153767](const  ref arg compiled[153770]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_release[153775](ref arg compiled[153778]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function qio_regex_get_options[153783](const  ref arg regex[153786]:qio_regex_t[153611], ref arg options[153790]:qio_regex_options_t[153655]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_borrow_pattern[153795](const  ref arg regex[153798]:qio_regex_t[153611], ref arg pattern[153804] :
  (153802 call c_ptrConst[46990](?) c_char[562]), ref arg len_out[153810] :
  (153808 call int(64)[10] 64)) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_get_ncaptures[153815](const  ref arg regex[153818]:qio_regex_t[153611]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    (153822 call int(64)[10] 64)
  }
  function qio_regex_ok[153827](const  ref arg regex[153830]:qio_regex_t[153611]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    bool[19]
  }
  function qio_regex_error[153837](const  ref arg regex[153840]:qio_regex_t[153611]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (153844 call c_ptrConst[46990](?) c_char[562])
  }
  const QIO_REGEX_ANCHOR_UNANCHORED[153850] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_REGEX_ANCHOR_START[153855] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_REGEX_ANCHOR_BOTH[153860] "dead at end of block" "const" "extern" "insert auto destroy"
  type qio_regex_string_piece_t[153880] val offset[153866]:int(64)[10](153868 call int(64)[10] 64) val len[153873]:int(64)[10](153875 call int(64)[10] 64)
  function qio_regex_string_piece_isnull[153882](ref arg sp[153885]:qio_regex_string_piece_t[153880]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    bool[19]
  }
  function qio_regex_match[153892](const  ref arg re[153895]:qio_regex_t[153611], arg text[153901] :
  (153899 call c_ptrConst[46990](?) c_char[562]), arg textlen[153907] :
  (153905 call int(64)[10] 64), arg startpos[153913] :
  (153911 call int(64)[10] 64), arg endpos[153919] :
  (153917 call int(64)[10] 64), arg anchor[153923] :
  c_int[522], ref arg submatch[153927]:qio_regex_string_piece_t[153880], arg nsubmatch[153933] :
  (153931 call int(64)[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    bool[19]
  }
  function qio_regex_replace[153940](const  ref arg re[153943]:qio_regex_t[153611], arg repl[153949] :
  (153947 call c_ptrConst[46990](?) c_char[562]), arg repllen[153955] :
  (153953 call int(64)[10] 64), arg text[153961] :
  (153959 call c_ptrConst[46990](?) c_char[562]), arg textlen[153967] :
  (153965 call int(64)[10] 64), arg maxreplace[153973] :
  (153971 call int(64)[10] 64), ref arg replaced[153979] :
  (153977 call c_ptrConst[46990](?) c_char[562]), ref arg replaced_len[153985] :
  (153983 call int(64)[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (153989 call int(64)[10] 64)
  }
  function BadRegexError[154035].init[154001](arg _mt[154009]:_MT[201], arg this[154003]:BadRegexError[154035], arg msg[154006]:string[244]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[526285] "temporary of super field" "temp"
    (526293 'move' super_tmp[526285](526286 '.v' this[154003] c"super"))
    (526289 call init _mt[203] super_tmp[526285])
    (555340 'end of statement')
    unknown tmp[526260] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[577815] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[823024] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (823027 'move' call_tmp[823024](526262 '.v' this[154003] c"super"))
      (577819 'move' call_type_tmp[577815](526265 'typeof' call_tmp[823024]))
    }
    (526266 'move' tmp[526260] call_type_tmp[577815])
    unknown call_tmp[823029] "maybe param" "maybe type" "temp"
    (823032 'move' call_tmp[823029](526271 'cast' tmp[526260] this[154003]))
    unknown chpl__thisAsParent[526268] "dead at end of block" "insert auto destroy" "temp"
    (646488 'init var' chpl__thisAsParent[526268] call_tmp[823029] tmp[526260])
    (526274 'setcid' chpl__thisAsParent[526268])
    (555341 'end of statement')
    unknown msg[526276] "temp"
    (526279 'init var' msg[526276] msg[154006] string[244])
    (526281 'init field' this[154003] c"msg" msg[526276])
    (555342 'end of statement')
    (526296 'setcid' this[154003])
    (611662 return _void[46])
  }
  function BadRegexError[154035].message[154023](arg _mt[154027]:_MT[201], arg this[154025]:BadRegexError[154035]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[611666] "RVV" "temp"
    unknown call_tmp[823036] "expr temp" "maybe param" "maybe type" "temp"
    (823039 'move' call_tmp[823036](434183 call msg _mt[203] this[154025]))
    (611671 'move' ret[611666](611670 'deref' call_tmp[823036]))
    (611668 return ret[611666])
  }
  type BadRegexError[154035] val super[397545]:Error[85511] "super class" val msg[153997]:string[244] string[244]
  type BadRegexError[434230](?)
  type regexMatch[154054] val matched[154039]:bool[19] bool[19] val byteOffset[154044]:byteIndex[18611] byteIndex[18611] val numBytes[154049]:int(64)[10] int(64)[10]
  function reMatch[154056]() type : _unknown[42] "no parens" "do not resolve unless called"
  {
    unknown ret[611675] "RVV" "temp" "type variable"
    (154060 call compilerWarning "Regex: 'reMatch' is deprecated; please use 'regexMatch' instead")
    (555345 'end of statement')
    (611680 'move' ret[611675](611679 'deref' regexMatch[154054]))
    (611677 return ret[611675])
  }
  function _to_regexMatch[154068](ref arg p[154071]:qio_regex_string_piece_t[153880]) : _unknown[42]
  {
    unknown ret[611684] "RVV" "temp"
    unknown call_tmp[823041] "expr temp" "maybe param" "maybe type" "temp"
    (823044 'move' call_tmp[823041](154111 call qio_regex_string_piece_isnull p[154071]))
    unknown call_tmp[823046] "expr temp" "maybe param" "maybe type" "temp"
    (823049 'move' call_tmp[823046](154113 call _cond_test call_tmp[823041]))
    if call_tmp[823046]
    {
      unknown call_tmp[823051] "expr temp" "maybe param" "maybe type" "temp"
      (823054 'move' call_tmp[823051](154084 call - 1))
      unknown call_tmp[823056] "expr temp" "maybe param" "maybe type" "temp"
      (823059 'move' call_tmp[823056](154082 call : call_tmp[823051] byteIndex[18611]))
      unknown call_tmp[823061] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (823064 'move' call_tmp[823061](1000160 'new' regexMatch[154054] 0 call_tmp[823056] 0))
      (611690 'move' ret[611684](611689 'coerce' call_tmp[823061] regexMatch[154054]))
      gotoReturn _end__to_regexMatch[611682] _end__to_regexMatch[611682]
    }
    {
      unknown call_tmp[823068] "expr temp" "maybe param" "maybe type" "temp"
      (823071 'move' call_tmp[823068](154100 call offset _mt[203] p[154071]))
      unknown call_tmp[823073] "expr temp" "maybe param" "maybe type" "temp"
      (823076 'move' call_tmp[823073](154095 call : call_tmp[823068] byteIndex[18611]))
      unknown call_tmp[823080] "expr temp" "maybe param" "maybe type" "temp"
      (823083 'move' call_tmp[823080](154107 call len _mt[203] p[154071]))
      unknown call_tmp[823085] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (823088 'move' call_tmp[823085](1000161 'new' regexMatch[154054] 1 call_tmp[823073] call_tmp[823080]))
      (611696 'move' ret[611684](611695 'coerce' call_tmp[823085] regexMatch[154054]))
      gotoReturn _end__to_regexMatch[611682] _end__to_regexMatch[611682]
    }
    label _end__to_regexMatch[611682]
    (611686 return ret[611684])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regexMatch[154054].![154120](arg _mt[154130]:_MT[201], arg this[154123]:regexMatch[154054] :
  regexMatch[154054], arg m[154127]:regexMatch[154054]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[611702] "RVV" "temp"
    unknown call_tmp[823092] "expr temp" "maybe param" "maybe type" "temp"
    (823095 'move' call_tmp[823092](154139 call matched _mt[203] m[154127]))
    unknown call_tmp[823097] "expr temp" "maybe param" "maybe type" "temp"
    (823100 'move' call_tmp[823097](154134 call ! call_tmp[823092]))
    (611707 'move' ret[611702](611706 'deref' call_tmp[823097]))
    (611704 return ret[611702])
  }
  function regexMatch[154054].chpl_cond_test_method[154144](arg _mt[154150]:_MT[201], arg this[154147]:regexMatch[154054] :
  regexMatch[154054]) : _unknown[42] "inline" "method"
  {
    unknown ret[611711] "RVV" "temp"
    unknown call_tmp[823104] "expr temp" "maybe param" "maybe type" "temp"
    (823107 'move' call_tmp[823104](154155 call matched _mt[203] this[154147]))
    (611716 'move' ret[611711](611715 'deref' call_tmp[823104]))
    (611713 return ret[611711])
  }
  function string[244].this[154160](arg _mt[154170]:_MT[201], arg this[154163]:string[244] :
  string[244], arg m[154167]:regexMatch[154054]) : _unknown[42] "method"
  {
    unknown ret[611720] "RVV" "temp"
    unknown call_tmp[823111] "expr temp" "maybe param" "maybe type" "temp"
    (823114 'move' call_tmp[823111](154196 call matched _mt[203] m[154167]))
    unknown call_tmp[823116] "expr temp" "maybe param" "maybe type" "temp"
    (823119 'move' call_tmp[823116](154199 call _cond_test call_tmp[823111]))
    if call_tmp[823116]
    {
      unknown call_tmp[823123] "expr temp" "maybe param" "maybe type" "temp"
      (823126 'move' call_tmp[823123](154181 call byteOffset _mt[203] m[154167]))
      unknown call_tmp[823128] "expr temp" "maybe param" "maybe type" "temp"
      (823131 'move' call_tmp[823128](154184 call chpl_build_low_bounded_range call_tmp[823123]))
      unknown call_tmp[823135] "expr temp" "maybe param" "maybe type" "temp"
      (823138 'move' call_tmp[823135](154187 call numBytes _mt[203] m[154167]))
      unknown call_tmp[823140] "expr temp" "maybe param" "maybe type" "temp"
      (823143 'move' call_tmp[823140](154176 call # call_tmp[823128] call_tmp[823135]))
      unknown call_tmp[823145] "expr temp" "maybe param" "maybe type" "temp"
      (823148 'move' call_tmp[823145](154175 call this[154163] call_tmp[823140]))
      (611725 'move' ret[611720](611724 'deref' call_tmp[823145]))
      gotoReturn _end_this[611718] _end_this[611718]
    }
    {
      (611730 'move' ret[611720](611729 'deref' ""))
      gotoReturn _end_this[611718] _end_this[611718]
    }
    label _end_this[611718]
    (611722 return ret[611720])
  }
  function bytes[232].this[154207](arg _mt[154217]:_MT[201], arg this[154210]:bytes[232] :
  bytes[232], arg m[154214]:regexMatch[154054]) : _unknown[42] "method"
  {
    unknown ret[611736] "RVV" "temp"
    unknown call_tmp[823152] "expr temp" "maybe param" "maybe type" "temp"
    (823155 'move' call_tmp[823152](154243 call matched _mt[203] m[154214]))
    unknown call_tmp[823157] "expr temp" "maybe param" "maybe type" "temp"
    (823160 'move' call_tmp[823157](154246 call _cond_test call_tmp[823152]))
    if call_tmp[823157]
    {
      unknown call_tmp[823164] "expr temp" "maybe param" "maybe type" "temp"
      (823167 'move' call_tmp[823164](154228 call byteOffset _mt[203] m[154214]))
      unknown call_tmp[823169] "expr temp" "maybe param" "maybe type" "temp"
      (823172 'move' call_tmp[823169](154225 call : call_tmp[823164] int(64)[10]))
      unknown call_tmp[823174] "expr temp" "maybe param" "maybe type" "temp"
      (823177 'move' call_tmp[823174](154232 call chpl_build_low_bounded_range call_tmp[823169]))
      unknown call_tmp[823181] "expr temp" "maybe param" "maybe type" "temp"
      (823184 'move' call_tmp[823181](154235 call numBytes _mt[203] m[154214]))
      unknown call_tmp[823186] "expr temp" "maybe param" "maybe type" "temp"
      (823189 'move' call_tmp[823186](154223 call # call_tmp[823174] call_tmp[823181]))
      unknown call_tmp[823191] "expr temp" "maybe param" "maybe type" "temp"
      (823194 'move' call_tmp[823191](154222 call this[154210] call_tmp[823186]))
      (611741 'move' ret[611736](611740 'deref' call_tmp[823191]))
      gotoReturn _end_this[611734] _end_this[611734]
    }
    {
      (611746 'move' ret[611736](611745 'deref' b""))
      gotoReturn _end_this[611734] _end_this[611734]
    }
    label _end_this[611734]
    (611738 return ret[611736])
  }
  function serializedType[154254](arg exprType[154256]:_any[141](?)) type : _unknown[42] "private"
  {
    unknown ret[611752] "RVV" "temp" "type variable"
    unknown expr[154260] "dead at end of block" "insert auto destroy"
    (646490 'default init var' expr[154260] exprType[154256])
    (154263 'end of statement')
    { scopeless type
      unknown call_type_tmp[577821] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[823198] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (823201 'move' call_tmp[823198](154269 call(154266 call (partial) chpl__serialize _mt[203] expr[154260])))
      (577825 'move' call_type_tmp[577821](154270 'typeof' call_tmp[823198]))
    }
    (611757 'move' ret[611752](611756 'deref' call_type_tmp[577821]))
    gotoReturn _end_serializedType[611750] _end_serializedType[611750]
    (555355 'end of statement' expr[154260])
    label _end_serializedType[611750]
    (611754 return ret[611752])
  }
  type chpl_serializeHelper[154290](?) unknown exprType[154275] "type variable" unknown pattern[154278](154280 call serializedType exprType[154275]) val options[154285]:qio_regex_options_t[153655] qio_regex_options_t[153655]
  function regex[156365](?).init[154313](arg _mt[154350]:_MT[201], ref arg this[154315]:regex[156365](?), arg pattern[154319]:_any[141](?), arg posix[154323] :
  0 =
  0, arg literal[154327] :
  0 =
  0, arg noCapture[154331] :
  0 =
  0, arg ignoreCase[154335] :
  0 =
  0, arg multiLine[154339] :
  posix[154323] =
  posix[154323], arg dotAll[154343] :
  0 =
  0, arg nonGreedy[154347] :
  0 =
  0) : void[4] throws "method" "primary method" "no return value for void"
  {
    unknown exprType[526308] "temp" "type variable"
    (526310 'move' exprType[526308](526298 'typeof' pattern[154319]))
    (526312 'init field' this[154315] c"exprType" exprType[526308])
    (555357 'end of statement')
    unknown call_tmp[823203] "maybe param" "maybe type" "temp"
    (823206 'move' call_tmp[823203](526317 call here[135591]))
    unknown home[526318] "temp"
    (526321 'init var' home[526318] call_tmp[823203] locale[234])
    (526323 'init field' this[154315] c"home" home[526318])
    (555358 'end of statement')
    unknown call_tmp[823208] "maybe param" "maybe type" "temp"
    (823211 'move' call_tmp[823208](526328 call qio_regex_null))
    unknown _regex[526329] "temp"
    (526332 'init var' _regex[526329] call_tmp[823208] qio_regex_t[153611])
    (526334 'init field' this[154315] c"_regex" _regex[526329])
    (555359 'end of statement')
    (526338 'init done')
    (555360 'end of statement')
    unknown call_tmp[823213] "expr temp" "maybe param" "maybe type" "temp"
    (823216 'move' call_tmp[823213](154386 call == CHPL_RE2[29893] "none"))
    unknown call_tmp[823218] "expr temp" "maybe param" "maybe type" "temp"
    (823221 'move' call_tmp[823218](154390 call _cond_test call_tmp[823213]))
    if call_tmp[823218]
    {
      (154382 call compilerError "Cannot use Regex with CHPL_RE2=none")
    }
    unknown opts[154395] "dead at end of block" "insert auto destroy"
    (646492 'default init var' opts[154395] qio_regex_options_t[153655])
    (154398 'end of statement')
    (154400 call qio_regex_init_default_options opts[154395])
    (555362 'end of statement' opts[154395])
    unknown call_tmp[823225] "expr temp" "maybe param" "maybe type" "temp"
    (823228 'move' call_tmp[823225](154407 call utf8 _mt[203] opts[154395]))
    unknown call_tmp[823230] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (823233 'move' call_tmp[823230](526300 'typeof' pattern[154319]))
    unknown call_tmp[823235] "expr temp" "maybe param" "maybe type" "temp"
    (823238 'move' call_tmp[823235](154410 call == call_tmp[823230] string[244]))
    (154402 call = call_tmp[823225] call_tmp[823235])
    (555364 'end of statement' opts[154395])
    unknown call_tmp[823242] "expr temp" "maybe param" "maybe type" "temp"
    (823245 'move' call_tmp[823242](154419 call posix _mt[203] opts[154395]))
    (154414 call = call_tmp[823242] posix[154323])
    (555366 'end of statement' opts[154395])
    unknown call_tmp[823249] "expr temp" "maybe param" "maybe type" "temp"
    (823252 'move' call_tmp[823249](154428 call literal _mt[203] opts[154395]))
    (154423 call = call_tmp[823249] literal[154327])
    (555368 'end of statement' opts[154395])
    unknown call_tmp[823256] "expr temp" "maybe param" "maybe type" "temp"
    (823259 'move' call_tmp[823256](154437 call nocapture _mt[203] opts[154395]))
    (154432 call = call_tmp[823256] noCapture[154331])
    (555370 'end of statement' opts[154395])
    unknown call_tmp[823263] "expr temp" "maybe param" "maybe type" "temp"
    (823266 'move' call_tmp[823263](154446 call ignorecase _mt[203] opts[154395]))
    (154441 call = call_tmp[823263] ignoreCase[154335])
    (555372 'end of statement' opts[154395])
    unknown call_tmp[823270] "expr temp" "maybe param" "maybe type" "temp"
    (823273 'move' call_tmp[823270](154455 call multiline _mt[203] opts[154395]))
    (154450 call = call_tmp[823270] multiLine[154339])
    (555374 'end of statement' opts[154395])
    unknown call_tmp[823277] "expr temp" "maybe param" "maybe type" "temp"
    (823280 'move' call_tmp[823277](154464 call dotnl _mt[203] opts[154395]))
    (154459 call = call_tmp[823277] dotAll[154343])
    (555376 'end of statement' opts[154395])
    unknown call_tmp[823284] "expr temp" "maybe param" "maybe type" "temp"
    (823287 'move' call_tmp[823284](154473 call nongreedy _mt[203] opts[154395]))
    (154468 call = call_tmp[823284] nonGreedy[154347])
    (555378 'end of statement' opts[154395])
    unknown call_tmp[823291] "expr temp" "maybe param" "maybe type" "temp"
    (823294 'move' call_tmp[823291](154483 call(154480 call (partial) localize _mt[203] pattern[154319])))
    unknown call_tmp[823298] "expr temp" "maybe param" "maybe type" "temp"
    (823301 'move' call_tmp[823298](154487 call(154484 call (partial) c_str _mt[203] call_tmp[823291])))
    unknown call_tmp[823305] "expr temp" "maybe param" "maybe type" "temp"
    (823308 'move' call_tmp[823305](154489 call numBytes _mt[203] pattern[154319]))
    unknown call_tmp[823312] "expr temp" "maybe param" "maybe type" "temp"
    (823315 'move' call_tmp[823312](154496 call _regex _mt[203] this[154315]))
    (154478 call qio_regex_create_compile call_tmp[823298] call_tmp[823305] opts[154395] call_tmp[823312])
    (555380 'end of statement' opts[154395])
    unknown call_tmp[823319] "expr temp" "maybe param" "maybe type" "temp"
    (823322 'move' call_tmp[823319](154582 call _regex _mt[203] this[154315]))
    unknown call_tmp[823324] "expr temp" "maybe param" "maybe type" "temp"
    (823327 'move' call_tmp[823324](154580 call qio_regex_ok call_tmp[823319]))
    unknown call_tmp[823329] "expr temp" "maybe param" "maybe type" "temp"
    (823332 'move' call_tmp[823329](154577 call ! call_tmp[823324]))
    unknown call_tmp[823334] "expr temp" "maybe param" "maybe type" "temp"
    (823337 'move' call_tmp[823334](154585 call _cond_test call_tmp[823329]))
    if call_tmp[823334]
    {
      const patternStr[154501] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[682384] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[682385] "maybe param" "temp"
      unknown call_tmp[823339] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (823342 'move' call_tmp[823339](526302 'typeof' pattern[154319]))
      unknown call_tmp[823344] "expr temp" "maybe param" "maybe type" "temp"
      (823347 'move' call_tmp[823344](154502 call == call_tmp[823339] string[244]))
      (682390 'move' tmp[682385](682388 call _cond_test call_tmp[823344]))
      if tmp[682385]
      {
        (682395 'move' tmp[682384](682392 '_paramFoldLogical' tmp[682385] pattern[154319]))
      }
      {
        unknown tmp[682397] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (682399 'move' tmp[682397](154511 call(154508 call (partial) decode _mt[203] pattern[154319]) replace[37978]))
        (682404 'move' tmp[682384](682401 '_paramFoldLogical' tmp[682385] tmp[682397]))
      }
      (646494 'init var' patternStr[154501] tmp[682384])
      (154520 'end of statement')
      unknown call_tmp[823353] "expr temp" "maybe param" "maybe type" "temp"
      (823356 'move' call_tmp[823353](154526 call _regex _mt[203] this[154315]))
      unknown call_tmp[823358] "maybe param" "maybe type" "temp"
      (823361 'move' call_tmp[823358](154524 call qio_regex_error call_tmp[823353]))
      unknown err_str[154522] "dead at end of block" "insert auto destroy"
      (646496 'init var' err_str[154522] call_tmp[823358])
      (154530 'end of statement')
      unknown err_msg[154532] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[646498] "maybe param" "maybe type" "temp"
      (646504 'move' type_tmp[646498] string[244])
      (646500 'init var split decl' err_msg[154532] type_tmp[646498])
      (154535 'end of statement')
      Try!
      {
        {
          unknown call_tmp[823365] "expr temp" "maybe param" "maybe type" "temp"
          (823368 'move' call_tmp[823365](154550 call(154547 call (partial) createAdoptingBuffer _mt[203] string[244]) err_str[154522]))
          unknown call_tmp[823370] "expr temp" "maybe param" "maybe type" "temp"
          (823373 'move' call_tmp[823370](154544 call + call_tmp[823365] " when compiling regex '"))
          unknown call_tmp[823375] "expr temp" "maybe param" "maybe type" "temp"
          (823378 'move' call_tmp[823375](154542 call + call_tmp[823370] patternStr[154501]))
          unknown call_tmp[823380] "maybe param" "maybe type" "temp"
          (823383 'move' call_tmp[823380](154540 call + call_tmp[823375] "'"))
          (646506 'init var split init' err_msg[154532] call_tmp[823380] type_tmp[646498])
          (555382 'end of statement' err_msg[154532] err_str[154522] patternStr[154501])
        }
      }
      (154561 call errorThrower err_msg[154532])
      (555386 'end of statement' err_msg[154532])
      function errorThrower[154563](arg msg[154565]:_any[141](?)) : _unknown[42] throws "inline" "no return value for void"
      {
        unknown call_tmp[823385] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (823388 'move' call_tmp[823385](1000162 'new' BadRegexError[434230](?) msg[154565](_chpl_manager = _owned[238](?))))
        unknown call_tmp[823390] "expr temp" "maybe param" "maybe type" "temp"
        (823393 'move' call_tmp[823390](542263 call chpl_fix_thrown_error call_tmp[823385]))
        (154568 'throw' call_tmp[823390])
        (611761 return _void[46])
      }
    }
    (611763 return _void[46])
    (396735 'used modules list'(154364 'use' ChplConfig[29952]))
  }
  where {
    unknown tmp[489387] "maybe param" "temp"
    unknown call_tmp[823395] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (823398 'move' call_tmp[823395](526304 'typeof' pattern[154319]))
    (489398 'move' tmp[489387](154354 call == call_tmp[823395] string[244]))
    unknown call_tmp[823400] "expr temp" "maybe param" "maybe type" "temp"
    (823403 'move' call_tmp[823400](489400 call _cond_invalid tmp[489387]))
    if call_tmp[823400]
    {
      (489403 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682411] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682412] "maybe param" "temp"
    unknown call_tmp[823405] "expr temp" "maybe param" "maybe type" "temp"
    (823408 'move' call_tmp[823405](489388 call isTrue tmp[489387]))
    (682417 'move' tmp[682412](682415 call _cond_test call_tmp[823405]))
    if tmp[682412]
    {
      (682422 'move' tmp[682411](682419 '_paramFoldLogical' tmp[682412] 1))
    }
    {
      unknown tmp[682424] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[823410] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (823413 'move' call_tmp[823410](526306 'typeof' pattern[154319]))
      unknown call_tmp[823415] "expr temp" "maybe param" "maybe type" "temp"
      (823418 'move' call_tmp[823415](154358 call == call_tmp[823410] bytes[232]))
      (682426 'move' tmp[682424](489392 call isTrue call_tmp[823415]))
      (682431 'move' tmp[682411](682428 '_paramFoldLogical' tmp[682412] tmp[682424]))
    }
    (1001454 call chpl_statementLevelSymbol tmp[682411])
  }
  function regex[156365](?).init=[154592](arg _mt[154602]:_MT[201], ref arg this[154594]:regex[156365](?), arg x[154599]:regex[156365](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown exprType[526346] "temp" "type variable"
    (526348 'move' exprType[526346](154612 call exprType _mt[203] x[154599]))
    (526350 'init field' this[154594] c"exprType" exprType[526346])
    (555389 'end of statement')
    unknown call_tmp[823422] "maybe param" "maybe type" "temp"
    (823425 'move' call_tmp[823422](434235 call here[135591]))
    unknown home[526354] "temp"
    (526357 'init var' home[526354] call_tmp[823422] locale[234])
    (526359 'init field' this[154594] c"home" home[526354])
    (555390 'end of statement')
    unknown call_tmp[823429] "expr temp" "maybe param" "maybe type" "temp"
    (823432 'move' call_tmp[823429](154674 call home _mt[203] x[154599]))
    unknown call_tmp[823434] "expr temp" "maybe param" "maybe type" "temp"
    (823437 'move' call_tmp[823434](434238 call here[135591]))
    unknown call_tmp[823439] "expr temp" "maybe param" "maybe type" "temp"
    (823442 'move' call_tmp[823439](154671 call == call_tmp[823429] call_tmp[823434]))
    unknown call_tmp[823444] "expr temp" "maybe param" "maybe type" "temp"
    (823447 'move' call_tmp[823444](154678 call _cond_test call_tmp[823439]))
    if call_tmp[823444]
    {
      unknown call_tmp[823451] "maybe param" "maybe type" "temp"
      (823454 'move' call_tmp[823451](154632 call _regex _mt[203] x[154599]))
      unknown _regex[526363] "temp"
      (526366 'init var' _regex[526363] call_tmp[823451] qio_regex_t[153611])
      (526368 'init field' this[154594] c"_regex" _regex[526363])
      (555391 'end of statement')
      (526372 'init done')
      (555392 'end of statement')
      unknown call_tmp[823458] "expr temp" "maybe param" "maybe type" "temp"
      (823461 'move' call_tmp[823458](154643 call _regex _mt[203] x[154599]))
      (154641 call qio_regex_retain call_tmp[823458])
    }
    {
      unknown call_tmp[823463] "maybe param" "maybe type" "temp"
      (823466 'move' call_tmp[823463](526374 call qio_regex_null))
      unknown _regex[526375] "temp"
      (526378 'init var' _regex[526375] call_tmp[823463] qio_regex_t[153611])
      (526380 'init field' this[154594] c"_regex" _regex[526375])
      (555394 'end of statement')
      (526384 'init done')
      (555395 'end of statement')
      unknown call_tmp[823470] "maybe param" "maybe type" "temp"
      (823473 'move' call_tmp[823470](154660 call(154657 call (partial) _serialize _mt[203] x[154599])))
      unknown serialized[154653] "dead at end of block" "insert auto destroy"
      (646509 'init var' serialized[154653] call_tmp[823470])
      (154662 'end of statement')
      (154669 call(154666 call (partial) _deserialize _mt[203] this[154594]) serialized[154653])
      (555396 'end of statement' serialized[154653])
    }
    (611765 return _void[46])
  }
  function regex[156365](?).init[154684](arg _mt[154690]:_MT[201], ref arg this[154686]:regex[156365](?), arg exprType[154688]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown exprType[526385] "temp" "type variable"
    (526387 'move' exprType[526385] exprType[154688])
    (526389 'init field' this[154686] c"exprType" exprType[526385])
    (555398 'end of statement')
    unknown call_tmp[823477] "maybe param" "maybe type" "temp"
    (823480 'move' call_tmp[823477](526395 call here[135591]))
    unknown home[526396] "temp"
    (526399 'init var' home[526396] call_tmp[823477] locale[234])
    (526401 'init field' this[154686] c"home" home[526396])
    (555399 'end of statement')
    unknown call_tmp[823482] "maybe param" "maybe type" "temp"
    (823485 'move' call_tmp[823482](526406 call qio_regex_null))
    unknown _regex[526407] "temp"
    (526410 'init var' _regex[526407] call_tmp[823482] qio_regex_t[153611])
    (526412 'init field' this[154686] c"_regex" _regex[526407])
    (555400 'end of statement')
    (611767 return _void[46])
  }
  function regex[156365](?)._serialize[154702](arg _mt[154706]:_MT[201], arg this[154704]:regex[156365](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611771] "RVV" "temp"
    unknown pattern[154710] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823489] "expr temp" "maybe param" "maybe type" "temp"
    (823492 'move' call_tmp[823489](434243 call exprType _mt[203] this[154704]))
    unknown call_tmp[823494] "expr temp" "maybe param" "maybe type" "temp"
    (823497 'move' call_tmp[823494](154712 call serializedType call_tmp[823489]))
    (646511 'default init var' pattern[154710] call_tmp[823494])
    (154715 'end of statement')
    unknown options[154717] "dead at end of block" "insert auto destroy"
    (646513 'default init var' options[154717] qio_regex_options_t[153655])
    (154720 'end of statement')
    unknown call_tmp[823501] "maybe param" "maybe type" "temp"
    (823504 'move' call_tmp[823501](434249 call _regex _mt[203] this[154704]))
    const _regexCopy[154722] "dead at end of block" "const" "insert auto destroy"
    (646515 'init var' _regexCopy[154722] call_tmp[823501])
    (154725 'end of statement')
    {
      const tmp[154782] "const" "temp"
      unknown call_tmp[823508] "expr temp" "maybe param" "maybe type" "temp"
      (823511 'move' call_tmp[823508](154727 call home _mt[203] this[154704]))
      unknown call_tmp[823513] "expr temp" "maybe param" "maybe type" "temp"
      (823516 'move' call_tmp[823513](154779 '_wide_get_locale' call_tmp[823508]))
      (154783 'move' tmp[154782](154780 'deref' call_tmp[823513]))
      {
        unknown patternTemp[154732] "dead at end of block" "insert auto destroy"
        unknown call_tmp[823518] "expr temp" "maybe param" "maybe type" "temp"
        (823521 'move' call_tmp[823518](154734 call c_ptrConst[46990](?) c_char[562]))
        (646517 'default init var' patternTemp[154732] call_tmp[823518])
        (154737 'end of statement')
        unknown len[154739] "dead at end of block" "insert auto destroy"
        (646519 'default init var' len[154739] int(64)[10])
        (154742 'end of statement')
        (154744 call qio_regex_borrow_pattern _regexCopy[154722] patternTemp[154732] len[154739])
        (555401 'end of statement' _regexCopy[154722] patternTemp[154732] len[154739])
        Try!
        {
          {
            unknown call_tmp[823525] "expr temp" "maybe param" "maybe type" "temp"
            (823528 'move' call_tmp[823525](403901 call exprType _mt[203] this[154704]))
            unknown call_tmp[823532] "expr temp" "maybe param" "maybe type" "temp"
            (823535 'move' call_tmp[823532](154756 call(154753 call (partial) createBorrowingBuffer _mt[203] call_tmp[823525]) patternTemp[154732] len[154739]))
            unknown call_tmp[823539] "expr temp" "maybe param" "maybe type" "temp"
            (823542 'move' call_tmp[823539](154762 call(154759 call (partial) chpl__serialize _mt[203] call_tmp[823532])))
            (154749 call = pattern[154710] call_tmp[823539])
            (555405 'end of statement' pattern[154710] patternTemp[154732] len[154739])
          }
        }
        unknown localOptions[154767] "dead at end of block" "insert auto destroy"
        (646521 'default init var' localOptions[154767] qio_regex_options_t[153655])
        (154770 'end of statement')
        (154772 call qio_regex_get_options _regexCopy[154722] localOptions[154767])
        (555409 'end of statement' _regexCopy[154722] localOptions[154767])
        (154775 call = options[154717] localOptions[154767])
        (555412 'end of statement' options[154717] localOptions[154767])
      }
      (154786 'elided on block' 0 tmp[154782])
    }
    unknown call_tmp[823546] "expr temp" "maybe param" "maybe type" "temp"
    (823549 'move' call_tmp[823546](434268 call exprType _mt[203] this[154704]))
    unknown call_tmp[823551] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (823554 'move' call_tmp[823551](1000163 'new' chpl_serializeHelper[154290](?) call_tmp[823546] pattern[154710] options[154717]))
    (611776 'move' ret[611771](611775 'deref' call_tmp[823551]))
    gotoReturn _end__serialize[611769] _end__serialize[611769]
    (555415 'end of statement' pattern[154710] options[154717])
    label _end__serialize[611769]
    (611773 return ret[611771])
  }
  function regex[156365](?)._deserialize[154799](arg _mt[154805]:_MT[201], ref arg this[154801]:regex[156365](?), arg data[154803]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[823558] "expr temp" "maybe param" "maybe type" "temp"
    (823561 'move' call_tmp[823558](403906 call exprType _mt[203] this[154801]))
    unknown call_tmp[823567] "expr temp" "maybe param" "maybe type" "temp"
    (823570 'move' call_tmp[823567](154818 call pattern _mt[203] data[154803]))
    unknown call_tmp[823572] "maybe param" "maybe type" "temp"
    (823575 'move' call_tmp[823572](154814 call(154811 call (partial) chpl__deserialize _mt[203] call_tmp[823558]) call_tmp[823567]))
    const pattern[154809] "dead at end of block" "const" "insert auto destroy"
    (646523 'init var' pattern[154809] call_tmp[823572])
    (154822 'end of statement')
    unknown call_tmp[823579] "expr temp" "maybe param" "maybe type" "temp"
    (823582 'move' call_tmp[823579](154829 call(154826 call (partial) c_str _mt[203] pattern[154809])))
    unknown call_tmp[823586] "expr temp" "maybe param" "maybe type" "temp"
    (823589 'move' call_tmp[823586](154831 call numBytes _mt[203] pattern[154809]))
    unknown call_tmp[823593] "expr temp" "maybe param" "maybe type" "temp"
    (823596 'move' call_tmp[823593](154837 call options _mt[203] data[154803]))
    unknown call_tmp[823600] "expr temp" "maybe param" "maybe type" "temp"
    (823603 'move' call_tmp[823600](154841 call _regex _mt[203] this[154801]))
    (154824 call qio_regex_create_compile call_tmp[823579] call_tmp[823586] call_tmp[823593] call_tmp[823600])
    (555418 'end of statement' pattern[154809])
    (611780 return _void[46])
  }
  function regex[156365](?).chpl__serialize[154846](arg _mt[154850]:_MT[201], arg this[154848]:regex[156365](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611784] "RVV" "temp"
    unknown call_tmp[823607] "expr temp" "maybe param" "maybe type" "temp"
    (823610 'move' call_tmp[823607](154855 call(434274 call (partial) _serialize _mt[203] this[154848])))
    (611789 'move' ret[611784](611788 'deref' call_tmp[823607]))
    (611786 return ret[611784])
  }
  function regex[156365](?).chpl__deserialize[154858](arg _mt[154864]:_MT[201], arg this[154860]:regex[156365](?), arg data[154862]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611793] "RVV" "temp"
    unknown ret[154868] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823614] "expr temp" "maybe param" "maybe type" "temp"
    (823617 'move' call_tmp[823614](434280 call exprType _mt[203] this[154860]))
    unknown call_tmp[823619] "expr temp" "maybe param" "maybe type" "temp"
    (823622 'move' call_tmp[823619](154870 call regex[156365](?) call_tmp[823614]))
    (646525 'default init var' ret[154868] call_tmp[823619])
    (154873 'end of statement')
    (154878 call(154875 call (partial) _deserialize _mt[203] ret[154868]) data[154862])
    (555421 'end of statement' ret[154868])
    (611798 'move' ret[611793](611797 'deref' ret[154868]))
    gotoReturn _end_chpl__deserialize[611791] _end_chpl__deserialize[611791]
    (555423 'end of statement' ret[154868])
    label _end_chpl__deserialize[611791]
    (611795 return ret[611793])
  }
  function regex[156365](?).deinit[154884](arg _mt[154888]:_MT[201], ref arg this[154886]:regex[156365](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[823628] "expr temp" "maybe param" "maybe type" "temp"
    (823631 'move' call_tmp[823628](434287 call _regex _mt[203] this[154886]))
    (154892 call qio_regex_release call_tmp[823628])
    (555425 'end of statement')
    unknown call_tmp[823635] "expr temp" "maybe param" "maybe type" "temp"
    (823638 'move' call_tmp[823635](434292 call _regex _mt[203] this[154886]))
    unknown call_tmp[823640] "expr temp" "maybe param" "maybe type" "temp"
    (823643 'move' call_tmp[823640](154898 call qio_regex_null))
    (154894 call = call_tmp[823635] call_tmp[823640])
    (611802 return _void[46])
  }
  function regex[156365](?)._handle_captures[154901](arg _mt[154919]:_MT[201], arg this[154903]:regex[156365](?), arg text[154906] :
  (434297 call exprType _mt[203] this[154903]), ref arg matches[154914]:c_array[47643](?), ref arg captures[154917]:_any[141](?)) : _unknown[42] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[823647] "expr temp" "maybe param" "maybe type" "temp"
    (823650 'move' call_tmp[823647](526432 'query' matches[154914] 2))
    unknown call_tmp[823654] "expr temp" "maybe param" "maybe type" "temp"
    (823657 'move' call_tmp[823654](154928 call size _mt[203] captures[154917]))
    unknown call_tmp[823659] "expr temp" "maybe param" "maybe type" "temp"
    (823662 'move' call_tmp[823659](154924 call >= call_tmp[823647] call_tmp[823654]))
    (154923 call assert call_tmp[823659])
    (555427 'end of statement')
    {
      unknown i[154931] "dead at end of block" "index var" "insert auto destroy"
      (646527 'init var' i[154931] 0)
      (555428 'end of statement')
      unknown tmp[155054] "maybe param" "temp"
      unknown call_tmp[823666] "expr temp" "maybe param" "maybe type" "temp"
      (823669 'move' call_tmp[823666](154937 call size _mt[203] captures[154917]))
      unknown call_tmp[823671] "expr temp" "maybe param" "maybe type" "temp"
      (823674 'move' call_tmp[823671](154934 call - call_tmp[823666] 1))
      (155066 'move' tmp[155054](155064 call chpl_compute_low_param_loop_bound 0 call_tmp[823671]))
      unknown tmp[155055] "maybe param" "temp"
      unknown call_tmp[823678] "expr temp" "maybe param" "maybe type" "temp"
      (823681 'move' call_tmp[823678](155073 call size _mt[203] captures[154917]))
      unknown call_tmp[823683] "expr temp" "maybe param" "maybe type" "temp"
      (823686 'move' call_tmp[823683](155071 call - call_tmp[823678] 1))
      (155079 'move' tmp[155055](155077 call chpl_compute_high_param_loop_bound 0 call_tmp[823683]))
      unknown tmp[155056] "maybe param" "temp"
      (155082 'move' tmp[155056] 1)
      ParamForLoop[155084]
      { i[154931] tmp[155054] tmp[155055] tmp[155056]
        {
          unknown call_tmp[823688] "expr temp" "maybe param" "maybe type" "temp"
          (823691 'move' call_tmp[823688](154950 call + i[154931] 1))
          unknown call_tmp[823693] "expr temp" "maybe param" "maybe type" "temp"
          (823696 'move' call_tmp[823693](154949 call matches[154914] call_tmp[823688]))
          unknown call_tmp[823698] "maybe param" "maybe type" "temp"
          (823701 'move' call_tmp[823698](154947 call _to_regexMatch call_tmp[823693]))
          unknown m[154945] "dead at end of block" "insert auto destroy"
          (646529 'init var' m[154945] call_tmp[823698])
          (154955 'end of statement' i[154931])
          { scopeless type
            unknown call_type_tmp[577827] "expr temp" "maybe type" "temp" "type variable"
            unknown call_tmp[823703] "expr temp" "maybe param" "used in type" "maybe type" "temp"
            (823706 'move' call_tmp[823703](155046 call captures[154917] i[154931]))
            (577831 'move' call_type_tmp[577827](155048 'typeof' call_tmp[823703]))
          }
          unknown call_tmp[823708] "expr temp" "maybe param" "maybe type" "temp"
          (823711 'move' call_tmp[823708](155043 call == call_type_tmp[577827] regexMatch[154054]))
          unknown call_tmp[823713] "expr temp" "maybe param" "maybe type" "temp"
          (823716 'move' call_tmp[823713](155050 call _cond_test call_tmp[823708]))
          if call_tmp[823713]
          {
            unknown call_tmp[823718] "expr temp" "maybe param" "maybe type" "temp"
            (823721 'move' call_tmp[823718](154960 call captures[154917] i[154931]))
            (154957 call = call_tmp[823718] m[154945])
            (555430 'end of statement' i[154931] m[154945])
          }
          {
            unknown call_tmp[823725] "expr temp" "maybe param" "maybe type" "temp"
            (823728 'move' call_tmp[823725](155036 call matched _mt[203] m[154945]))
            unknown call_tmp[823730] "expr temp" "maybe param" "maybe type" "temp"
            (823733 'move' call_tmp[823730](155039 call _cond_test call_tmp[823725]))
            if call_tmp[823730]
            {
              { scopeless type
                unknown call_type_tmp[577833] "expr temp" "maybe type" "temp" "type variable"
                unknown call_tmp[823735] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                (823738 'move' call_tmp[823735](155012 call captures[154917] i[154931]))
                (577837 'move' call_type_tmp[577833](155014 'typeof' call_tmp[823735]))
              }
              unknown call_tmp[823742] "expr temp" "maybe param" "maybe type" "temp"
              (823745 'move' call_tmp[823742](434327 call exprType _mt[203] this[154903]))
              unknown call_tmp[823747] "expr temp" "maybe param" "maybe type" "temp"
              (823750 'move' call_tmp[823747](155009 call == call_type_tmp[577833] call_tmp[823742]))
              unknown call_tmp[823752] "expr temp" "maybe param" "maybe type" "temp"
              (823755 'move' call_tmp[823752](155016 call _cond_test call_tmp[823747]))
              if call_tmp[823752]
              {
                unknown call_tmp[823757] "expr temp" "maybe param" "maybe type" "temp"
                (823760 'move' call_tmp[823757](154969 call captures[154917] i[154931]))
                unknown call_tmp[823762] "expr temp" "maybe param" "maybe type" "temp"
                (823765 'move' call_tmp[823762](154972 call text[154906] m[154945]))
                (154966 call = call_tmp[823757] call_tmp[823762])
                (555433 'end of statement' i[154931] m[154945])
              }
              {
                Try
                {
                  {
                    { scopeless type
                      unknown call_type_tmp[577839] "expr temp" "maybe type" "temp" "type variable"
                      unknown call_tmp[823767] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                      (823770 'move' call_tmp[823767](154987 call captures[154917] i[154931]))
                      (577843 'move' call_type_tmp[577839](154989 'typeof' call_tmp[823767]))
                    }
                    unknown call_tmp[823772] "expr temp" "maybe param" "maybe type" "temp"
                    (823775 'move' call_tmp[823772](154979 call captures[154917] i[154931]))
                    unknown call_tmp[823777] "expr temp" "maybe param" "maybe type" "temp"
                    (823780 'move' call_tmp[823777](154984 call text[154906] m[154945]))
                    unknown call_tmp[823782] "expr temp" "maybe param" "maybe type" "temp"
                    (823785 'move' call_tmp[823782](154981 call : call_tmp[823777] call_type_tmp[577839]))
                    (154976 call = call_tmp[823772] call_tmp[823782])
                    (555436 'end of statement' i[154931] m[154945])
                  }
                }
                Catch
                {
                  unknown call_tmp[823787] "maybe param" "maybe type" "temp"
                  (823790 'move' call_tmp[823787](394918 'current error'))
                  unknown tmp[394915] "dead at end of block" "insert auto destroy" "temp"
                  (646531 'init var' tmp[394915] call_tmp[823787])
                  unknown call_tmp[823792] "expr temp" "maybe param" "maybe type" "temp"
                  (823795 'move' call_tmp[823792](394923 'to non nilable class' tmp[394915]))
                  unknown call_tmp[823797] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                  (823800 'move' call_tmp[823797](1000164 'new' _owned[238](?) call_tmp[823792]))
                  unknown chpl_anon_error[394921] "dead at end of block" "insert auto destroy"
                  (646533 'init var' chpl_anon_error[394921] call_tmp[823797])
                  (555439 'end of statement')
                  {
                    { scopeless type
                      unknown call_type_tmp[577845] "expr temp" "maybe type" "temp" "type variable"
                      unknown call_tmp[823802] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                      (823805 'move' call_tmp[823802](154995 call captures[154917] i[154931]))
                      (577849 'move' call_type_tmp[577845](154997 'typeof' call_tmp[823802]))
                    }
                    unknown empty[154993] "dead at end of block" "insert auto destroy"
                    (646535 'default init var' empty[154993] call_type_tmp[577845])
                    (154999 'end of statement' i[154931])
                    unknown call_tmp[823807] "expr temp" "maybe param" "maybe type" "temp"
                    (823810 'move' call_tmp[823807](155003 call captures[154917] i[154931]))
                    (155000 call = call_tmp[823807] empty[154993])
                    (555441 'end of statement' i[154931] empty[154993])
                  }
                }
              }
            }
            {
              { scopeless type
                unknown call_type_tmp[577851] "expr temp" "maybe type" "temp" "type variable"
                unknown call_tmp[823812] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                (823815 'move' call_tmp[823812](155024 call captures[154917] i[154931]))
                (577855 'move' call_type_tmp[577851](155026 'typeof' call_tmp[823812]))
              }
              unknown empty[155022] "dead at end of block" "insert auto destroy"
              (646537 'default init var' empty[155022] call_type_tmp[577851])
              (155028 'end of statement' i[154931])
              unknown call_tmp[823817] "expr temp" "maybe param" "maybe type" "temp"
              (823820 'move' call_tmp[823817](155032 call captures[154917] i[154931]))
              (155029 call = call_tmp[823817] empty[155022])
              (555445 'end of statement' i[154931] empty[155022])
            }
          }
        }
      }
      label _unused_continueLabel[155058]
      label _breakLabel[155057]
    }
    (611804 return _void[46])
  }
  where {
    unknown call_tmp[823822] "expr temp" "maybe param" "maybe type" "temp"
    (823825 'move' call_tmp[823822](526419 'query' matches[154914] 1))
    unknown call_tmp[823827] "expr temp" "maybe param" "maybe type" "temp"
    (823830 'move' call_tmp[823827](526423 call == qio_regex_string_piece_t[153880] call_tmp[823822]))
    (526427 call & 1 call_tmp[823827])
  }
  function regex[156365](?).search[155095](arg _mt[155108]:_MT[201], arg this[155097]:regex[156365](?), arg text[155100] :
  (434340 call exprType _mt[203] this[155097]), ref arg captures[155105]:_any[141](?) ...) : _unknown[42] "method" "primary method"
  {
    unknown ret[611808] "RVV" "temp"
    unknown call_tmp[823836] "expr temp" "maybe param" "maybe type" "temp"
    (823839 'move' call_tmp[823836](155114 call(434347 call (partial) _search_match _mt[203] this[155097]) text[155100] QIO_REGEX_ANCHOR_UNANCHORED[153850] 1 captures[155105]))
    (611814 'move' ret[611808](611813 'coerce' call_tmp[823836] regexMatch[154054]))
    (611810 return ret[611808])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).search[155122](arg _mt[155130]:_MT[201], arg this[155124]:regex[156365](?), arg text[155127] :
  (434355 call exprType _mt[203] this[155124])) : _unknown[42] "method" "primary method"
  {
    unknown ret[611818] "RVV" "temp"
    unknown dummy[155135] "dead at end of block" "insert auto destroy"
    (646539 'default init var' dummy[155135] int(64)[10])
    (155138 'end of statement')
    unknown call_tmp[823845] "expr temp" "maybe param" "maybe type" "temp"
    (823848 'move' call_tmp[823845](155141 call(434360 call (partial) _search_match _mt[203] this[155124]) text[155127] QIO_REGEX_ANCHOR_UNANCHORED[153850] 0 dummy[155135]))
    (611824 'move' ret[611818](611823 'coerce' call_tmp[823845] regexMatch[154054]))
    gotoReturn _end_search[611816] _end_search[611816]
    (555449 'end of statement' dummy[155135])
    label _end_search[611816]
    (611820 return ret[611818])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).match[155149](arg _mt[155162]:_MT[201], arg this[155151]:regex[156365](?), arg text[155154] :
  (434368 call exprType _mt[203] this[155151]), ref arg captures[155159]:_any[141](?) ...) : _unknown[42] "method" "primary method"
  {
    unknown ret[611830] "RVV" "temp"
    unknown call_tmp[823854] "expr temp" "maybe param" "maybe type" "temp"
    (823857 'move' call_tmp[823854](155168 call(434373 call (partial) _search_match _mt[203] this[155151]) text[155154] QIO_REGEX_ANCHOR_START[153855] 1 captures[155159]))
    (611836 'move' ret[611830](611835 'coerce' call_tmp[823854] regexMatch[154054]))
    (611832 return ret[611830])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).match[155176](arg _mt[155184]:_MT[201], arg this[155178]:regex[156365](?), arg text[155181] :
  (434381 call exprType _mt[203] this[155178])) : _unknown[42] "method" "primary method"
  {
    unknown ret[611840] "RVV" "temp"
    unknown dummy[155189] "dead at end of block" "insert auto destroy"
    (646541 'default init var' dummy[155189] int(64)[10])
    (155192 'end of statement')
    unknown call_tmp[823863] "expr temp" "maybe param" "maybe type" "temp"
    (823866 'move' call_tmp[823863](155195 call(434386 call (partial) _search_match _mt[203] this[155178]) text[155181] QIO_REGEX_ANCHOR_START[153855] 0 dummy[155189]))
    (611846 'move' ret[611840](611845 'coerce' call_tmp[823863] regexMatch[154054]))
    gotoReturn _end_match[611838] _end_match[611838]
    (555452 'end of statement' dummy[155189])
    label _end_match[611838]
    (611842 return ret[611840])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).fullMatch[155203](arg _mt[155216]:_MT[201], arg this[155205]:regex[156365](?), arg text[155208] :
  (434394 call exprType _mt[203] this[155205]), ref arg captures[155213]:_any[141](?) ...) : _unknown[42] "method" "primary method"
  {
    unknown ret[611852] "RVV" "temp"
    unknown call_tmp[823872] "expr temp" "maybe param" "maybe type" "temp"
    (823875 'move' call_tmp[823872](155222 call(434399 call (partial) _search_match _mt[203] this[155205]) text[155208] QIO_REGEX_ANCHOR_BOTH[153860] 1 captures[155213]))
    (611858 'move' ret[611852](611857 'coerce' call_tmp[823872] regexMatch[154054]))
    (611854 return ret[611852])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).fullMatch[155230](arg _mt[155238]:_MT[201], arg this[155232]:regex[156365](?), arg text[155235] :
  (434407 call exprType _mt[203] this[155232])) : _unknown[42] "method" "primary method"
  {
    unknown ret[611862] "RVV" "temp"
    unknown dummy[155243] "dead at end of block" "insert auto destroy"
    (646543 'default init var' dummy[155243] int(64)[10])
    (155246 'end of statement')
    unknown call_tmp[823881] "expr temp" "maybe param" "maybe type" "temp"
    (823884 'move' call_tmp[823881](155249 call(434412 call (partial) _search_match _mt[203] this[155232]) text[155235] QIO_REGEX_ANCHOR_BOTH[153860] 0 dummy[155243]))
    (611868 'move' ret[611862](611867 'coerce' call_tmp[823881] regexMatch[154054]))
    gotoReturn _end_fullMatch[611860] _end_fullMatch[611860]
    (555455 'end of statement' dummy[155243])
    label _end_fullMatch[611860]
    (611864 return ret[611862])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?)._search_match[155257](arg _mt[155273]:_MT[201], arg this[155259]:regex[156365](?), arg text[155262] :
  (434420 call exprType _mt[203] this[155259]), arg anchor[155266] :
  c_int[522], param arg has_captures[155269]:_any[141](?), ref arg captures[155271]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611874] "RVV" "temp"
    unknown regexCopy[155278] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823890] "expr temp" "maybe param" "maybe type" "temp"
    (823893 'move' call_tmp[823890](434428 call exprType _mt[203] this[155259]))
    unknown call_tmp[823895] "expr temp" "maybe param" "maybe type" "temp"
    (823898 'move' call_tmp[823895](155280 call regex[156365](?) call_tmp[823890]))
    (646545 'default init var' regexCopy[155278] call_tmp[823895])
    (155283 'end of statement')
    unknown call_tmp[823902] "expr temp" "maybe param" "maybe type" "temp"
    (823905 'move' call_tmp[823902](434435 call home _mt[203] this[155259]))
    unknown call_tmp[823907] "expr temp" "maybe param" "maybe type" "temp"
    (823910 'move' call_tmp[823907](434438 call here[135591]))
    unknown call_tmp[823912] "expr temp" "maybe param" "maybe type" "temp"
    (823915 'move' call_tmp[823912](155289 call != call_tmp[823902] call_tmp[823907]))
    unknown call_tmp[823917] "expr temp" "maybe param" "maybe type" "temp"
    (823920 'move' call_tmp[823917](155293 call _cond_test call_tmp[823912]))
    if call_tmp[823917]
    {
      (155284 call = regexCopy[155278] this[155259])
      (555457 'end of statement' regexCopy[155278])
    }
    const localRegex[155299] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682438] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682439] "maybe param" "temp"
    unknown call_tmp[823924] "expr temp" "maybe param" "maybe type" "temp"
    (823927 'move' call_tmp[823924](434442 call home _mt[203] this[155259]))
    unknown call_tmp[823929] "expr temp" "maybe param" "maybe type" "temp"
    (823932 'move' call_tmp[823929](434445 call here[135591]))
    unknown call_tmp[823934] "expr temp" "maybe param" "maybe type" "temp"
    (823937 'move' call_tmp[823934](155300 call != call_tmp[823924] call_tmp[823929]))
    (682444 'move' tmp[682439](682442 call _cond_test call_tmp[823934]))
    if tmp[682439]
    {
      unknown tmp[682446] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682448 'move' tmp[682446](155305 call _regex _mt[203] regexCopy[155278]))
      (682453 'move' tmp[682438](682450 '_paramFoldLogical' tmp[682439] tmp[682446]))
    }
    {
      unknown tmp[682455] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682457 'move' tmp[682455](434449 call _regex _mt[203] this[155259]))
      (682462 'move' tmp[682438](682459 '_paramFoldLogical' tmp[682439] tmp[682455]))
    }
    (646547 'init var' localRegex[155299] tmp[682438])
    (155313 'end of statement')
    unknown ret[155315] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646549] "maybe param" "maybe type" "temp"
    (646555 'move' type_tmp[646549] regexMatch[154054])
    (646551 'init var split decl' ret[155315] type_tmp[646549])
    (155318 'end of statement')
    unknown pos[155320] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646560] "maybe param" "maybe type" "temp"
    (646566 'move' type_tmp[646560] byteIndex[18611])
    (646562 'init var split decl' pos[155320] type_tmp[646560])
    (155323 'end of statement')
    unknown endpos[155325] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646571] "maybe param" "maybe type" "temp"
    (646577 'move' type_tmp[646571] byteIndex[18611])
    (646573 'init var split decl' endpos[155325] type_tmp[646571])
    (155328 'end of statement')
    (646568 'init var split init' pos[155320] 0 type_tmp[646560])
    (555460 'end of statement' pos[155320])
    unknown call_tmp[823945] "expr temp" "maybe param" "maybe type" "temp"
    (823948 'move' call_tmp[823945](155340 call numBytes _mt[203] text[155262]))
    unknown call_tmp[823950] "maybe param" "maybe type" "temp"
    (823953 'move' call_tmp[823950](155336 call + pos[155320] call_tmp[823945]))
    (646579 'init var split init' endpos[155325] call_tmp[823950] type_tmp[646571])
    (555462 'end of statement' endpos[155325] pos[155320])
    unknown nmatches[155344] "dead at end of block" "param"
    unknown tmp[682469] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682470] "maybe param" "temp"
    (682475 'move' tmp[682470](682473 call _cond_test has_captures[155269]))
    if tmp[682470]
    {
      unknown tmp[682477] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[823957] "expr temp" "maybe param" "maybe type" "temp"
      (823960 'move' call_tmp[823957](155350 call size _mt[203] captures[155271]))
      (682479 'move' tmp[682477](155346 call + 1 call_tmp[823957]))
      (682484 'move' tmp[682469](682481 '_paramFoldLogical' tmp[682470] tmp[682477]))
    }
    {
      (682489 'move' tmp[682469](682486 '_paramFoldLogical' tmp[682470] 1))
    }
    (646582 'init var' nmatches[155344] tmp[682469])
    (155358 'end of statement')
    unknown matches[155360] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823962] "expr temp" "maybe param" "maybe type" "temp"
    (823965 'move' call_tmp[823962](155362 call c_array[47643](?) qio_regex_string_piece_t[153880] nmatches[155344]))
    (646584 'default init var' matches[155360] call_tmp[823962])
    (155366 'end of statement')
    unknown got[155368] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646586] "maybe param" "maybe type" "temp"
    (646592 'move' type_tmp[646586] bool[19])
    (646588 'init var split decl' got[155368] type_tmp[646586])
    (155371 'end of statement' regexCopy[155278])
    unknown call_tmp[823969] "expr temp" "maybe param" "maybe type" "temp"
    (823972 'move' call_tmp[823969](155382 call(155379 call (partial) localize _mt[203] text[155262])))
    unknown call_tmp[823976] "expr temp" "maybe param" "maybe type" "temp"
    (823979 'move' call_tmp[823976](155386 call(155383 call (partial) c_str _mt[203] call_tmp[823969])))
    unknown call_tmp[823983] "expr temp" "maybe param" "maybe type" "temp"
    (823986 'move' call_tmp[823983](155388 call numBytes _mt[203] text[155262]))
    unknown call_tmp[823988] "expr temp" "maybe param" "maybe type" "temp"
    (823991 'move' call_tmp[823988](155391 call : pos[155320] int(64)[10]))
    unknown call_tmp[823993] "expr temp" "maybe param" "maybe type" "temp"
    (823996 'move' call_tmp[823993](155395 call : endpos[155325] int(64)[10]))
    unknown call_tmp[823998] "expr temp" "maybe param" "maybe type" "temp"
    (824001 'move' call_tmp[823998](155401 call matches[155360] 0))
    unknown call_tmp[824003] "maybe param" "maybe type" "temp"
    (824006 'move' call_tmp[824003](155376 call qio_regex_match localRegex[155299] call_tmp[823976] call_tmp[823983] call_tmp[823988] call_tmp[823993] anchor[155266] call_tmp[823998] nmatches[155344]))
    (646594 'init var split init' got[155368] call_tmp[824003] type_tmp[646586])
    (555465 'end of statement' got[155368] localRegex[155299] pos[155320] endpos[155325] matches[155360])
    unknown call_tmp[824008] "expr temp" "maybe param" "maybe type" "temp"
    (824011 'move' call_tmp[824008](155411 call _cond_test has_captures[155269]))
    if call_tmp[824008]
    {
      (155405 call(434473 call (partial) _handle_captures _mt[203] this[155259]) text[155262] matches[155360] captures[155271])
      (555471 'end of statement' matches[155360])
    }
    unknown call_tmp[824015] "expr temp" "maybe param" "maybe type" "temp"
    (824018 'move' call_tmp[824015](155426 call matches[155360] 0))
    unknown call_tmp[824022] "expr temp" "maybe param" "maybe type" "temp"
    (824025 'move' call_tmp[824022](155428 call offset _mt[203] call_tmp[824015]))
    unknown call_tmp[824027] "expr temp" "maybe param" "maybe type" "temp"
    (824030 'move' call_tmp[824027](155423 call : call_tmp[824022] byteIndex[18611]))
    unknown call_tmp[824032] "expr temp" "maybe param" "maybe type" "temp"
    (824035 'move' call_tmp[824032](155433 call matches[155360] 0))
    unknown call_tmp[824039] "expr temp" "maybe param" "maybe type" "temp"
    (824042 'move' call_tmp[824039](155435 call len _mt[203] call_tmp[824032]))
    unknown call_tmp[824044] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (824047 'move' call_tmp[824044](1000165 'new' regexMatch[154054] got[155368] call_tmp[824027] call_tmp[824039]))
    (646557 'init var split init' ret[155315] call_tmp[824044] type_tmp[646549])
    (555473 'end of statement' ret[155315] got[155368] matches[155360])
    (611880 'move' ret[611874](611879 'coerce' ret[155315] regexMatch[154054]))
    gotoReturn _end__search_match[611872] _end__search_match[611872]
    (555477 'end of statement' ret[155315])
    label _end__search_match[611872]
    (611876 return ret[611874])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).split[155443](arg _mt[155457]:_MT[201], arg this[155445]:regex[156365](?), arg text[155448] :
  (434489 call exprType _mt[203] this[155445]), arg maxsplit[155453]:int(64)[10] =
  0) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611886] "RVV" "temp"
    unknown regexCopy[155461] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824053] "expr temp" "maybe param" "maybe type" "temp"
    (824056 'move' call_tmp[824053](434495 call exprType _mt[203] this[155445]))
    unknown call_tmp[824058] "expr temp" "maybe param" "maybe type" "temp"
    (824061 'move' call_tmp[824058](155463 call regex[156365](?) call_tmp[824053]))
    (646597 'default init var' regexCopy[155461] call_tmp[824058])
    (155466 'end of statement')
    unknown call_tmp[824065] "expr temp" "maybe param" "maybe type" "temp"
    (824068 'move' call_tmp[824065](434502 call home _mt[203] this[155445]))
    unknown call_tmp[824070] "expr temp" "maybe param" "maybe type" "temp"
    (824073 'move' call_tmp[824070](434505 call here[135591]))
    unknown call_tmp[824075] "expr temp" "maybe param" "maybe type" "temp"
    (824078 'move' call_tmp[824075](155472 call != call_tmp[824065] call_tmp[824070]))
    unknown call_tmp[824080] "expr temp" "maybe param" "maybe type" "temp"
    (824083 'move' call_tmp[824080](155476 call _cond_test call_tmp[824075]))
    if call_tmp[824080]
    {
      (155467 call = regexCopy[155461] this[155445])
      (555479 'end of statement' regexCopy[155461])
    }
    const localRegex[155482] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682496] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682497] "maybe param" "temp"
    unknown call_tmp[824087] "expr temp" "maybe param" "maybe type" "temp"
    (824090 'move' call_tmp[824087](434509 call home _mt[203] this[155445]))
    unknown call_tmp[824092] "expr temp" "maybe param" "maybe type" "temp"
    (824095 'move' call_tmp[824092](434512 call here[135591]))
    unknown call_tmp[824097] "expr temp" "maybe param" "maybe type" "temp"
    (824100 'move' call_tmp[824097](155483 call != call_tmp[824087] call_tmp[824092]))
    (682502 'move' tmp[682497](682500 call _cond_test call_tmp[824097]))
    if tmp[682497]
    {
      unknown tmp[682504] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682506 'move' tmp[682504](155488 call _regex _mt[203] regexCopy[155461]))
      (682511 'move' tmp[682496](682508 '_paramFoldLogical' tmp[682497] tmp[682504]))
    }
    {
      unknown tmp[682513] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682515 'move' tmp[682513](434516 call _regex _mt[203] this[155445]))
      (682520 'move' tmp[682496](682517 '_paramFoldLogical' tmp[682497] tmp[682513]))
    }
    (646599 'init var' localRegex[155482] tmp[682496])
    (155496 'end of statement')
    unknown call_tmp[824106] "maybe param" "maybe type" "temp"
    (824109 'move' call_tmp[824106](155500 call qio_regex_get_ncaptures localRegex[155482]))
    unknown ncaptures[155498] "dead at end of block" "insert auto destroy"
    (646601 'init var' ncaptures[155498] call_tmp[824106])
    (155503 'end of statement')
    unknown call_tmp[824111] "maybe param" "maybe type" "temp"
    (824114 'move' call_tmp[824111](155506 call + 1 ncaptures[155498]))
    unknown nmatches[155505] "dead at end of block" "insert auto destroy"
    (646603 'init var' nmatches[155505] call_tmp[824111])
    (155511 'end of statement')
    unknown pos[155513] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646605] "maybe param" "maybe type" "temp"
    (646611 'move' type_tmp[646605] byteIndex[18611])
    (646607 'init var split decl' pos[155513] type_tmp[646605])
    (155516 'end of statement')
    unknown endpos[155518] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646616] "maybe param" "maybe type" "temp"
    (646622 'move' type_tmp[646616] byteIndex[18611])
    (646618 'init var split decl' endpos[155518] type_tmp[646616])
    (155521 'end of statement')
    unknown last[155523] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646627] "maybe param" "maybe type" "temp"
    (646633 'move' type_tmp[646627] byteIndex[18611])
    (646629 'init var split decl' last[155523] type_tmp[646627])
    (155526 'end of statement')
    unknown call_tmp[824118] "maybe param" "maybe type" "temp"
    (824121 'move' call_tmp[824118](155533 call(155530 call (partial) localize _mt[203] text[155448])))
    unknown localText[155528] "dead at end of block" "insert auto destroy"
    (646638 'init var' localText[155528] call_tmp[824118])
    (155535 'end of statement')
    unknown call_tmp[824125] "expr temp" "maybe param" "maybe type" "temp"
    (824128 'move' call_tmp[824125](155545 call(155542 call (partial) safeCast _mt[203] nmatches[155505]) c_size_t[614]))
    unknown call_tmp[824130] "maybe param" "maybe type" "temp"
    (824133 'move' call_tmp[824130](155539 call allocate qio_regex_string_piece_t[153880] call_tmp[824125]))
    unknown matches[155537] "dead at end of block" "insert auto destroy"
    (646640 'init var' matches[155537] call_tmp[824130])
    (155548 'end of statement')
    Defer
    {
      { scopeless
        (155550 call deallocate matches[155537])
        (555485 'end of statement' matches[155537])
      }
    }
    (646613 'init var split init' pos[155513] 0 type_tmp[646605])
    (555487 'end of statement' pos[155513])
    unknown call_tmp[824137] "expr temp" "maybe param" "maybe type" "temp"
    (824140 'move' call_tmp[824137](155566 call numBytes _mt[203] localText[155528]))
    unknown call_tmp[824142] "maybe param" "maybe type" "temp"
    (824145 'move' call_tmp[824142](155562 call + pos[155513] call_tmp[824137]))
    (646624 'init var split init' endpos[155518] call_tmp[824142] type_tmp[646616])
    (555489 'end of statement' endpos[155518] pos[155513] localText[155528])
    (646635 'init var split init' last[155523] 0 type_tmp[646627])
    (555493 'end of statement' last[155523])
    unknown splits[155574] "dead at end of block" "insert auto destroy"
    (646642 'init var' splits[155574] 0)
    (155577 'end of statement')
    unknown maxsplits[155579] "dead at end of block" "insert auto destroy"
    (646644 'init var' maxsplits[155579] maxsplit[155453])
    (155582 'end of statement' regexCopy[155461] localRegex[155482] ncaptures[155498] nmatches[155505])
    unknown call_tmp[824147] "expr temp" "maybe param" "maybe type" "temp"
    (824150 'move' call_tmp[824147](155590 call == maxsplit[155453] 0))
    unknown call_tmp[824152] "expr temp" "maybe param" "maybe type" "temp"
    (824155 'move' call_tmp[824152](155594 call _cond_test call_tmp[824147]))
    if call_tmp[824152]
    {
      unknown call_tmp[824157] "expr temp" "maybe param" "maybe type" "temp"
      (824160 'move' call_tmp[824157](155587 call max int(64)[10]))
      (155583 call = maxsplits[155579] call_tmp[824157])
      (555495 'end of statement' maxsplits[155579])
    }
    {
      unknown tmp[155781] "temp"
      unknown tmp[489429] "maybe param" "temp"
      (489440 'move' tmp[489429](155810 call < splits[155574] maxsplits[155579]))
      unknown call_tmp[824162] "expr temp" "maybe param" "maybe type" "temp"
      (824165 'move' call_tmp[824162](489442 call _cond_invalid tmp[489429]))
      if call_tmp[824162]
      {
        (489445 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[682527] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[682528] "maybe param" "temp"
      unknown call_tmp[824167] "expr temp" "maybe param" "maybe type" "temp"
      (824170 'move' call_tmp[824167](489430 call isTrue tmp[489429]))
      (682533 'move' tmp[682528](682531 call _cond_test call_tmp[824167]))
      if tmp[682528]
      {
        unknown tmp[682535] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[824172] "expr temp" "maybe param" "maybe type" "temp"
        (824175 'move' call_tmp[824172](155814 call <= pos[155513] endpos[155518]))
        (682537 'move' tmp[682535](489433 call isTrue call_tmp[824172]))
        (682542 'move' tmp[682527](682539 '_paramFoldLogical' tmp[682528] tmp[682535]))
      }
      {
        (682547 'move' tmp[682527](682544 '_paramFoldLogical' tmp[682528] 0))
      }
      (155817 'move' tmp[155781](155806 call _cond_test tmp[682527]))
      WhileDo[155786]
      {
        {
          unknown call_tmp[824179] "expr temp" "maybe param" "maybe type" "temp"
          (824182 'move' call_tmp[824179](155619 call(155616 call (partial) c_str _mt[203] localText[155528])))
          unknown call_tmp[824186] "expr temp" "maybe param" "maybe type" "temp"
          (824189 'move' call_tmp[824186](155621 call numBytes _mt[203] localText[155528]))
          unknown call_tmp[824191] "expr temp" "maybe param" "maybe type" "temp"
          (824194 'move' call_tmp[824191](155624 call : pos[155513] int(64)[10]))
          unknown call_tmp[824196] "expr temp" "maybe param" "maybe type" "temp"
          (824199 'move' call_tmp[824196](155628 call : endpos[155518] int(64)[10]))
          unknown call_tmp[824201] "expr temp" "maybe param" "maybe type" "temp"
          (824204 'move' call_tmp[824201](155634 call matches[155537] 0))
          unknown call_tmp[824206] "maybe param" "maybe type" "temp"
          (824209 'move' call_tmp[824206](155613 call qio_regex_match localRegex[155482] call_tmp[824179] call_tmp[824186] call_tmp[824191] call_tmp[824196] QIO_REGEX_ANCHOR_UNANCHORED[153850] call_tmp[824201] nmatches[155505]))
          unknown got[155611] "dead at end of block" "insert auto destroy"
          (646646 'init var' got[155611] call_tmp[824206])
          (155638 'end of statement')
          unknown call_tmp[824211] "expr temp" "maybe param" "maybe type" "temp"
          (824214 'move' call_tmp[824211](155642 call ! got[155611]))
          unknown call_tmp[824216] "expr temp" "maybe param" "maybe type" "temp"
          (824219 'move' call_tmp[824216](155645 call _cond_test call_tmp[824211]))
          if call_tmp[824216]
          {
            break _breakLabel[155785] _breakLabel[155785]
          }
          (155650 call += splits[155574] 1)
          (555504 'end of statement' splits[155574])
          unknown call_tmp[824221] "expr temp" "maybe param" "maybe type" "temp"
          (824224 'move' call_tmp[824221](155658 call matches[155537] 0))
          unknown call_tmp[824228] "maybe param" "maybe type" "temp"
          (824231 'move' call_tmp[824228](155660 call offset _mt[203] call_tmp[824221]))
          unknown splitstart[155655] "dead at end of block" "insert auto destroy"
          (646648 'init var' splitstart[155655] call_tmp[824228] byteIndex[18611])
          (155664 'end of statement' localRegex[155482] localText[155528] pos[155513] endpos[155518] matches[155537] nmatches[155505] matches[155537])
          Try!
          {
            {
              unknown yret[611890] "YVV" "temp"
              unknown call_tmp[824233] "expr temp" "maybe param" "maybe type" "temp"
              (824236 'move' call_tmp[824233](155671 call chpl__nudgeHighBound splitstart[155655]))
              unknown call_tmp[824238] "expr temp" "maybe param" "maybe type" "temp"
              (824241 'move' call_tmp[824238](155673 call chpl_build_bounded_range last[155523] call_tmp[824233]))
              unknown call_tmp[824243] "expr temp" "maybe param" "maybe type" "temp"
              (824246 'move' call_tmp[824243](155668 call text[155448] call_tmp[824238]))
              (611893 'move' yret[611890](611892 'deref' call_tmp[824243]))
              (155666 yield yret[611890])
              (555507 'end of statement' last[155523] splitstart[155655])
            }
          }
          unknown call_tmp[824248] "expr temp" "maybe param" "maybe type" "temp"
          (824251 'move' call_tmp[824248](155685 call matches[155537] 0))
          unknown call_tmp[824255] "expr temp" "maybe param" "maybe type" "temp"
          (824258 'move' call_tmp[824255](155687 call len _mt[203] call_tmp[824248]))
          unknown call_tmp[824260] "expr temp" "maybe param" "maybe type" "temp"
          (824263 'move' call_tmp[824260](155681 call + splitstart[155655] call_tmp[824255]))
          (155678 call = last[155523] call_tmp[824260])
          (555510 'end of statement' last[155523] splitstart[155655] matches[155537])
          {
            unknown _indexOfInterest[155725] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[155726] "expr temp" "temp"
            unknown call_tmp[824265] "expr temp" "maybe param" "maybe type" "temp"
            (824268 'move' call_tmp[824265](155739 call chpl_direct_range_iter 1 ncaptures[155498]))
            (155735 'move' _iterator[155726](155733 call _getIterator call_tmp[824265]))
            Defer
            {
              {
                (155754 call _freeIterator _iterator[155726])
              }
            }
            { scopeless type
              (155744 'move' _indexOfInterest[155725](155741 call iteratorIndex _iterator[155726]))
            }
            ForLoop[155727]
            {
              unknown i[155690] "index var" "insert auto destroy"
              (555515 'end of statement')
              (155749 'move' i[155690] _indexOfInterest[155725])
              (555516 'end of statement' i[155690])
              {
                unknown yret[611896] "YVV" "temp"
                unknown call_tmp[824270] "expr temp" "maybe param" "maybe type" "temp"
                (824273 'move' call_tmp[824270](155708 call matches[155537] i[155690]))
                unknown call_tmp[824275] "expr temp" "maybe param" "maybe type" "temp"
                (824278 'move' call_tmp[824275](155706 call qio_regex_string_piece_isnull call_tmp[824270]))
                unknown call_tmp[824280] "expr temp" "maybe param" "maybe type" "temp"
                (824283 'move' call_tmp[824280](155703 call ! call_tmp[824275]))
                unknown call_tmp[824285] "expr temp" "maybe param" "maybe type" "temp"
                (824288 'move' call_tmp[824285](155713 call matches[155537] i[155690]))
                unknown call_tmp[824292] "expr temp" "maybe param" "maybe type" "temp"
                (824295 'move' call_tmp[824292](155715 call offset _mt[203] call_tmp[824285]))
                unknown call_tmp[824297] "expr temp" "maybe param" "maybe type" "temp"
                (824300 'move' call_tmp[824297](155710 call : call_tmp[824292] byteIndex[18611]))
                unknown call_tmp[824302] "expr temp" "maybe param" "maybe type" "temp"
                (824305 'move' call_tmp[824302](155720 call matches[155537] i[155690]))
                unknown call_tmp[824309] "expr temp" "maybe param" "maybe type" "temp"
                (824312 'move' call_tmp[824309](155722 call len _mt[203] call_tmp[824302]))
                unknown call_tmp[824314] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (824317 'move' call_tmp[824314](1000166 'new' regexMatch[154054] call_tmp[824280] call_tmp[824297] call_tmp[824309]))
                unknown call_tmp[824319] "expr temp" "maybe param" "maybe type" "temp"
                (824322 'move' call_tmp[824319](155699 call text[155448] call_tmp[824314]))
                (611899 'move' yret[611896](611898 'deref' call_tmp[824319]))
                (155697 yield yret[611896])
                (555518 'end of statement' matches[155537] i[155690])
              }
              label _continueLabel[155730]
              _indexOfInterest[155725]
              _iterator[155726]
            }
            label _breakLabel[155731]
          }
          unknown call_tmp[824324] "expr temp" "maybe param" "maybe type" "temp"
          (824327 'move' call_tmp[824324](155767 call matches[155537] 0))
          unknown call_tmp[824331] "expr temp" "maybe param" "maybe type" "temp"
          (824334 'move' call_tmp[824331](155769 call offset _mt[203] call_tmp[824324]))
          unknown call_tmp[824336] "expr temp" "maybe param" "maybe type" "temp"
          (824339 'move' call_tmp[824336](155776 call matches[155537] 0))
          unknown call_tmp[824343] "expr temp" "maybe param" "maybe type" "temp"
          (824346 'move' call_tmp[824343](155778 call len _mt[203] call_tmp[824336]))
          unknown call_tmp[824348] "expr temp" "maybe param" "maybe type" "temp"
          (824351 'move' call_tmp[824348](155773 call max 1 call_tmp[824343]))
          unknown call_tmp[824353] "expr temp" "maybe param" "maybe type" "temp"
          (824356 'move' call_tmp[824353](155764 call + call_tmp[824331] call_tmp[824348]))
          (155761 call = pos[155513] call_tmp[824353])
          (555521 'end of statement' pos[155513] matches[155537])
        }
        label _continueLabel[155784]
        unknown tmp[489408] "maybe param" "temp"
        (489419 'move' tmp[489408](155794 call < splits[155574] maxsplits[155579]))
        unknown call_tmp[824358] "expr temp" "maybe param" "maybe type" "temp"
        (824361 'move' call_tmp[824358](489421 call _cond_invalid tmp[489408]))
        if call_tmp[824358]
        {
          (489424 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682554] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682555] "maybe param" "temp"
        unknown call_tmp[824363] "expr temp" "maybe param" "maybe type" "temp"
        (824366 'move' call_tmp[824363](489409 call isTrue tmp[489408]))
        (682560 'move' tmp[682555](682558 call _cond_test call_tmp[824363]))
        if tmp[682555]
        {
          unknown tmp[682562] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[824368] "expr temp" "maybe param" "maybe type" "temp"
          (824371 'move' call_tmp[824368](155798 call <= pos[155513] endpos[155518]))
          (682564 'move' tmp[682562](489412 call isTrue call_tmp[824368]))
          (682569 'move' tmp[682554](682566 '_paramFoldLogical' tmp[682555] tmp[682562]))
        }
        {
          (682574 'move' tmp[682554](682571 '_paramFoldLogical' tmp[682555] 0))
        }
        (155801 'move' tmp[155781](155790 call _cond_test tmp[682554]))
        tmp[155781]
      }
      label _breakLabel[155785]
    }
    unknown call_tmp[824373] "expr temp" "maybe param" "maybe type" "temp"
    (824376 'move' call_tmp[824373](155852 call <= last[155523] endpos[155518]))
    unknown call_tmp[824378] "expr temp" "maybe param" "maybe type" "temp"
    (824381 'move' call_tmp[824378](155856 call _cond_test call_tmp[824373]))
    if call_tmp[824378]
    {
      unknown call_tmp[824385] "expr temp" "maybe param" "maybe type" "temp"
      (824388 'move' call_tmp[824385](155845 call numBytes _mt[203] text[155448]))
      unknown call_tmp[824390] "expr temp" "maybe param" "maybe type" "temp"
      (824393 'move' call_tmp[824390](155841 call >= last[155523] call_tmp[824385]))
      unknown call_tmp[824395] "expr temp" "maybe param" "maybe type" "temp"
      (824398 'move' call_tmp[824395](155848 call _cond_test call_tmp[824390]))
      if call_tmp[824395]
      {
        unknown yret[611902] "YVV" "temp"
        unknown call_tmp[824402] "expr temp" "maybe param" "maybe type" "temp"
        (824405 'move' call_tmp[824402](434573 call exprType _mt[203] this[155445]))
        unknown call_tmp[824407] "expr temp" "maybe param" "maybe type" "temp"
        (824410 'move' call_tmp[824407](155823 call : "" call_tmp[824402]))
        (611905 'move' yret[611902](611904 'deref' call_tmp[824407]))
        (155822 yield yret[611902])
      }
      {
        Try!
        {
          {
            unknown yret[611908] "YVV" "temp"
            unknown call_tmp[824412] "expr temp" "maybe param" "maybe type" "temp"
            (824415 'move' call_tmp[824412](155834 call chpl__nudgeHighBound endpos[155518]))
            unknown call_tmp[824417] "expr temp" "maybe param" "maybe type" "temp"
            (824420 'move' call_tmp[824417](155836 call chpl_build_bounded_range last[155523] call_tmp[824412]))
            unknown call_tmp[824422] "expr temp" "maybe param" "maybe type" "temp"
            (824425 'move' call_tmp[824422](155831 call text[155448] call_tmp[824417]))
            (611911 'move' yret[611908](611910 'deref' call_tmp[824422]))
            (155829 yield yret[611908])
            (555526 'end of statement' last[155523] endpos[155518])
          }
        }
      }
    }
    (611888 return ret[611886])
  }
  function regex[156365](?).matches[155862](arg _mt[155882]:_MT[201], arg this[155864]:regex[156365](?), arg text[155867] :
  (434584 call exprType _mt[203] this[155864]), param arg numCaptures[155871] :
  0 =
  0, arg maxMatches[155878]:int(64)[10] =
  (155876 call max int(64)[10])) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611916] "RVV" "temp"
    unknown regexCopy[155886] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824431] "expr temp" "maybe param" "maybe type" "temp"
    (824434 'move' call_tmp[824431](434590 call exprType _mt[203] this[155864]))
    unknown call_tmp[824436] "expr temp" "maybe param" "maybe type" "temp"
    (824439 'move' call_tmp[824436](155888 call regex[156365](?) call_tmp[824431]))
    (646650 'default init var' regexCopy[155886] call_tmp[824436])
    (155891 'end of statement')
    unknown call_tmp[824443] "expr temp" "maybe param" "maybe type" "temp"
    (824446 'move' call_tmp[824443](434597 call home _mt[203] this[155864]))
    unknown call_tmp[824448] "expr temp" "maybe param" "maybe type" "temp"
    (824451 'move' call_tmp[824448](434600 call here[135591]))
    unknown call_tmp[824453] "expr temp" "maybe param" "maybe type" "temp"
    (824456 'move' call_tmp[824453](155897 call != call_tmp[824443] call_tmp[824448]))
    unknown call_tmp[824458] "expr temp" "maybe param" "maybe type" "temp"
    (824461 'move' call_tmp[824458](155901 call _cond_test call_tmp[824453]))
    if call_tmp[824458]
    {
      (155892 call = regexCopy[155886] this[155864])
      (555529 'end of statement' regexCopy[155886])
    }
    const localRegex[155907] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682581] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682582] "maybe param" "temp"
    unknown call_tmp[824465] "expr temp" "maybe param" "maybe type" "temp"
    (824468 'move' call_tmp[824465](434604 call home _mt[203] this[155864]))
    unknown call_tmp[824470] "expr temp" "maybe param" "maybe type" "temp"
    (824473 'move' call_tmp[824470](434607 call here[135591]))
    unknown call_tmp[824475] "expr temp" "maybe param" "maybe type" "temp"
    (824478 'move' call_tmp[824475](155908 call != call_tmp[824465] call_tmp[824470]))
    (682587 'move' tmp[682582](682585 call _cond_test call_tmp[824475]))
    if tmp[682582]
    {
      unknown tmp[682589] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682591 'move' tmp[682589](155913 call _regex _mt[203] regexCopy[155886]))
      (682596 'move' tmp[682581](682593 '_paramFoldLogical' tmp[682582] tmp[682589]))
    }
    {
      unknown tmp[682598] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682600 'move' tmp[682598](434611 call _regex _mt[203] this[155864]))
      (682605 'move' tmp[682581](682602 '_paramFoldLogical' tmp[682582] tmp[682598]))
    }
    (646652 'init var' localRegex[155907] tmp[682581])
    (155921 'end of statement')
    unknown call_tmp[824484] "maybe param" "maybe type" "temp"
    (824487 'move' call_tmp[824484](155924 call + 1 numCaptures[155871]))
    unknown nMatches[155923] "dead at end of block" "param"
    (646654 'init var' nMatches[155923] call_tmp[824484])
    (155929 'end of statement')
    unknown matches[155931] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824489] "expr temp" "maybe param" "maybe type" "temp"
    (824492 'move' call_tmp[824489](155933 call c_array[47643](?) qio_regex_string_piece_t[153880] nMatches[155923]))
    (646656 'default init var' matches[155931] call_tmp[824489])
    (155937 'end of statement')
    unknown call_tmp[824496] "maybe param" "maybe type" "temp"
    (824499 'move' call_tmp[824496](155944 call(155941 call (partial) localize _mt[203] text[155867])))
    const localText[155939] "dead at end of block" "const" "insert auto destroy"
    (646658 'init var' localText[155939] call_tmp[824496])
    (155946 'end of statement')
    unknown call_tmp[824503] "maybe param" "maybe type" "temp"
    (824506 'move' call_tmp[824503](155950 call numBytes _mt[203] localText[155939]))
    const textLength[155948] "dead at end of block" "const" "insert auto destroy"
    (646660 'init var' textLength[155948] call_tmp[824503])
    (155954 'end of statement')
    const endPos[155956] "dead at end of block" "const" "insert auto destroy"
    (646662 'init var' endPos[155956] textLength[155948])
    (155959 'end of statement')
    unknown nFound[155961] "dead at end of block" "insert auto destroy"
    (646664 'init var' nFound[155961] 0)
    (155964 'end of statement')
    unknown cur[155966] "dead at end of block" "insert auto destroy"
    (646666 'init var' cur[155966] 0)
    (155969 'end of statement' regexCopy[155886] localText[155939] textLength[155948])
    {
      unknown tmp[156119] "temp"
      unknown tmp[489471] "maybe param" "temp"
      (489482 'move' tmp[489471](156148 call < nFound[155961] maxMatches[155878]))
      unknown call_tmp[824508] "expr temp" "maybe param" "maybe type" "temp"
      (824511 'move' call_tmp[824508](489484 call _cond_invalid tmp[489471]))
      if call_tmp[824508]
      {
        (489487 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[682612] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[682613] "maybe param" "temp"
      unknown call_tmp[824513] "expr temp" "maybe param" "maybe type" "temp"
      (824516 'move' call_tmp[824513](489472 call isTrue tmp[489471]))
      (682618 'move' tmp[682613](682616 call _cond_test call_tmp[824513]))
      if tmp[682613]
      {
        unknown tmp[682620] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[824518] "expr temp" "maybe param" "maybe type" "temp"
        (824521 'move' call_tmp[824518](156152 call <= cur[155966] endPos[155956]))
        (682622 'move' tmp[682620](489475 call isTrue call_tmp[824518]))
        (682627 'move' tmp[682612](682624 '_paramFoldLogical' tmp[682613] tmp[682620]))
      }
      {
        (682632 'move' tmp[682612](682629 '_paramFoldLogical' tmp[682613] 0))
      }
      (156155 'move' tmp[156119](156144 call _cond_test tmp[682612]))
      WhileDo[156124]
      {
        {
          unknown call_tmp[824525] "expr temp" "maybe param" "maybe type" "temp"
          (824528 'move' call_tmp[824525](155990 call(155987 call (partial) c_str _mt[203] localText[155939])))
          unknown call_tmp[824530] "expr temp" "maybe param" "maybe type" "temp"
          (824533 'move' call_tmp[824530](155992 call : cur[155966] int(64)[10]))
          unknown call_tmp[824535] "expr temp" "maybe param" "maybe type" "temp"
          (824538 'move' call_tmp[824535](155996 call : endPos[155956] int(64)[10]))
          unknown call_tmp[824540] "expr temp" "maybe param" "maybe type" "temp"
          (824543 'move' call_tmp[824540](156002 call matches[155931] 0))
          unknown call_tmp[824545] "maybe param" "maybe type" "temp"
          (824548 'move' call_tmp[824545](155984 call qio_regex_match localRegex[155907] call_tmp[824525] textLength[155948] call_tmp[824530] call_tmp[824535] QIO_REGEX_ANCHOR_UNANCHORED[153850] call_tmp[824540] nMatches[155923]))
          unknown got[155982] "dead at end of block" "insert auto destroy"
          (646668 'init var' got[155982] call_tmp[824545])
          (156006 'end of statement')
          unknown call_tmp[824550] "expr temp" "maybe param" "maybe type" "temp"
          (824553 'move' call_tmp[824550](156010 call ! got[155982]))
          unknown call_tmp[824555] "expr temp" "maybe param" "maybe type" "temp"
          (824558 'move' call_tmp[824555](156013 call _cond_test call_tmp[824550]))
          if call_tmp[824555]
          {
            break _breakLabel[156123] _breakLabel[156123]
          }
          unknown ret[156019] "dead at end of block" "insert auto destroy"
          unknown call_tmp[824560] "expr temp" "maybe param" "maybe type" "temp"
          (824563 'move' call_tmp[824560](156020 call * nMatches[155923] regexMatch[154054]))
          (646670 'default init var' ret[156019] call_tmp[824560])
          (156025 'end of statement' localRegex[155907] localText[155939] textLength[155948] cur[155966] endPos[155956] matches[155931])
          {
            unknown _indexOfInterest[156057] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[156058] "expr temp" "temp"
            unknown call_tmp[824565] "expr temp" "maybe param" "maybe type" "temp"
            (824568 'move' call_tmp[824565](156071 call chpl_direct_range_iter 0 numCaptures[155871]))
            (156067 'move' _iterator[156058](156065 call _getIterator call_tmp[824565]))
            Defer
            {
              {
                (156086 call _freeIterator _iterator[156058])
              }
            }
            { scopeless type
              (156076 'move' _indexOfInterest[156057](156073 call iteratorIndex _iterator[156058]))
            }
            ForLoop[156059]
            {
              unknown i[156026] "index var" "insert auto destroy"
              (555542 'end of statement')
              (156081 'move' i[156026] _indexOfInterest[156057])
              (555543 'end of statement' i[156026])
              {
                unknown call_tmp[824570] "expr temp" "maybe param" "maybe type" "temp"
                (824573 'move' call_tmp[824570](156036 call ret[156019] i[156026]))
                unknown call_tmp[824575] "expr temp" "maybe param" "maybe type" "temp"
                (824578 'move' call_tmp[824575](156045 call matches[155931] i[156026]))
                unknown call_tmp[824582] "expr temp" "maybe param" "maybe type" "temp"
                (824585 'move' call_tmp[824582](156047 call offset _mt[203] call_tmp[824575]))
                unknown call_tmp[824587] "expr temp" "maybe param" "maybe type" "temp"
                (824590 'move' call_tmp[824587](156042 call : call_tmp[824582] byteIndex[18611]))
                unknown call_tmp[824592] "expr temp" "maybe param" "maybe type" "temp"
                (824595 'move' call_tmp[824592](156052 call matches[155931] i[156026]))
                unknown call_tmp[824599] "expr temp" "maybe param" "maybe type" "temp"
                (824602 'move' call_tmp[824599](156054 call len _mt[203] call_tmp[824592]))
                unknown call_tmp[824604] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (824607 'move' call_tmp[824604](1000167 'new' regexMatch[154054] got[155982] call_tmp[824587] call_tmp[824599]))
                (156033 call = call_tmp[824570] call_tmp[824604])
                (555545 'end of statement' ret[156019] i[156026] got[155982] matches[155931] i[156026] matches[155931] i[156026])
              }
              label _continueLabel[156062]
              _indexOfInterest[156057]
              _iterator[156058]
            }
            label _breakLabel[156063]
          }
          unknown yret[611920] "YVV" "temp"
          (611923 'move' yret[611920](611922 'deref' ret[156019]))
          (156093 yield yret[611920])
          (555553 'end of statement' ret[156019])
          unknown call_tmp[824609] "expr temp" "maybe param" "maybe type" "temp"
          (824612 'move' call_tmp[824609](156101 call matches[155931] 0))
          unknown call_tmp[824616] "expr temp" "maybe param" "maybe type" "temp"
          (824619 'move' call_tmp[824616](156103 call offset _mt[203] call_tmp[824609]))
          unknown call_tmp[824621] "expr temp" "maybe param" "maybe type" "temp"
          (824624 'move' call_tmp[824621](156110 call matches[155931] 0))
          unknown call_tmp[824628] "expr temp" "maybe param" "maybe type" "temp"
          (824631 'move' call_tmp[824628](156112 call len _mt[203] call_tmp[824621]))
          unknown call_tmp[824633] "expr temp" "maybe param" "maybe type" "temp"
          (824636 'move' call_tmp[824633](156107 call max 1 call_tmp[824628]))
          unknown call_tmp[824638] "expr temp" "maybe param" "maybe type" "temp"
          (824641 'move' call_tmp[824638](156098 call + call_tmp[824616] call_tmp[824633]))
          (156095 call = cur[155966] call_tmp[824638])
          (555555 'end of statement' cur[155966] matches[155931])
          (156115 call += nFound[155961] 1)
          (555558 'end of statement' nFound[155961])
        }
        label _continueLabel[156122]
        unknown tmp[489450] "maybe param" "temp"
        (489461 'move' tmp[489450](156132 call < nFound[155961] maxMatches[155878]))
        unknown call_tmp[824643] "expr temp" "maybe param" "maybe type" "temp"
        (824646 'move' call_tmp[824643](489463 call _cond_invalid tmp[489450]))
        if call_tmp[824643]
        {
          (489466 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682639] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682640] "maybe param" "temp"
        unknown call_tmp[824648] "expr temp" "maybe param" "maybe type" "temp"
        (824651 'move' call_tmp[824648](489451 call isTrue tmp[489450]))
        (682645 'move' tmp[682640](682643 call _cond_test call_tmp[824648]))
        if tmp[682640]
        {
          unknown tmp[682647] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[824653] "expr temp" "maybe param" "maybe type" "temp"
          (824656 'move' call_tmp[824653](156136 call <= cur[155966] endPos[155956]))
          (682649 'move' tmp[682647](489454 call isTrue call_tmp[824653]))
          (682654 'move' tmp[682639](682651 '_paramFoldLogical' tmp[682640] tmp[682647]))
        }
        {
          (682659 'move' tmp[682639](682656 '_paramFoldLogical' tmp[682640] 0))
        }
        (156139 'move' tmp[156119](156128 call _cond_test tmp[682639]))
        tmp[156119]
      }
      label _breakLabel[156123]
    }
    (611918 return ret[611916])
  }
  function regex[156365](?).serialize[156160](arg _mt[156168]:_MT[201], arg this[156162]:regex[156365](?), arg writer[156164]:_any[141](?), ref arg serializer[156166]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown pattern[156172] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824660] "expr temp" "maybe param" "maybe type" "temp"
    (824663 'move' call_tmp[824660](434654 call exprType _mt[203] this[156162]))
    (646672 'default init var' pattern[156172] call_tmp[824660])
    (156175 'end of statement')
    {
      const tmp[156218] "const" "temp"
      unknown call_tmp[824667] "expr temp" "maybe param" "maybe type" "temp"
      (824670 'move' call_tmp[824667](156177 call home _mt[203] this[156162]))
      unknown call_tmp[824672] "expr temp" "maybe param" "maybe type" "temp"
      (824675 'move' call_tmp[824672](156215 '_wide_get_locale' call_tmp[824667]))
      (156219 'move' tmp[156218](156216 'deref' call_tmp[824672]))
      {
        unknown patternTemp[156182] "dead at end of block" "insert auto destroy"
        unknown call_tmp[824677] "expr temp" "maybe param" "maybe type" "temp"
        (824680 'move' call_tmp[824677](156184 call c_ptrConst[46990](?) c_char[562]))
        (646674 'default init var' patternTemp[156182] call_tmp[824677])
        (156187 'end of statement')
        unknown len[156189] "dead at end of block" "insert auto destroy"
        (646676 'default init var' len[156189] int(64)[10])
        (156192 'end of statement')
        unknown call_tmp[824684] "expr temp" "maybe param" "maybe type" "temp"
        (824687 'move' call_tmp[824684](156196 call _regex _mt[203] this[156162]))
        (156194 call qio_regex_borrow_pattern call_tmp[824684] patternTemp[156182] len[156189])
        (555561 'end of statement' patternTemp[156182] len[156189])
        Try!
        {
          {
            unknown call_tmp[824691] "expr temp" "maybe param" "maybe type" "temp"
            (824694 'move' call_tmp[824691](403939 call exprType _mt[203] this[156162]))
            unknown call_tmp[824698] "expr temp" "maybe param" "maybe type" "temp"
            (824701 'move' call_tmp[824698](156209 call(156206 call (partial) createCopyingBuffer _mt[203] call_tmp[824691]) patternTemp[156182] len[156189]))
            (156202 call = pattern[156172] call_tmp[824698])
            (555564 'end of statement' pattern[156172] patternTemp[156182] len[156189])
          }
        }
      }
      (156222 'elided on block' 0 tmp[156218])
    }
    (156230 call(156227 call (partial) write _mt[203] writer[156164]) "new regex(\"" pattern[156172] "\")")
    (555568 'end of statement' pattern[156172])
    (611926 return _void[46])
  }
  function regex[156365](?).deserialize[156240](arg _mt[156248]:_MT[201], ref arg this[156242]:regex[156365](?), arg reader[156244]:_any[141](?), ref arg deserializer[156246]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown pattern[156252] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824707] "expr temp" "maybe param" "maybe type" "temp"
    (824710 'move' call_tmp[824707](434667 call exprType _mt[203] this[156242]))
    (646678 'default init var' pattern[156252] call_tmp[824707])
    (156255 'end of statement')
    unknown tmp[489492] "maybe param" "temp"
    unknown tmp[489513] "maybe param" "temp"
    (489524 'move' tmp[489513](156313 call(156310 call (partial) matchLiteral _mt[203] reader[156244]) "new regex(\""))
    unknown call_tmp[824714] "expr temp" "maybe param" "maybe type" "temp"
    (824717 'move' call_tmp[824714](489526 call _cond_invalid tmp[489513]))
    if call_tmp[824714]
    {
      (489529 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[682666] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682667] "maybe param" "temp"
    unknown call_tmp[824719] "expr temp" "maybe param" "maybe type" "temp"
    (824722 'move' call_tmp[824719](489514 call isTrue tmp[489513]))
    (682672 'move' tmp[682667](682670 call _cond_test call_tmp[824719]))
    if tmp[682667]
    {
      unknown tmp[682674] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[824726] "expr temp" "maybe param" "maybe type" "temp"
      (824729 'move' call_tmp[824726](156319 call(156316 call (partial) read _mt[203] reader[156244]) pattern[156252]))
      (682676 'move' tmp[682674](489517 call isTrue call_tmp[824726]))
      (682681 'move' tmp[682666](682678 '_paramFoldLogical' tmp[682667] tmp[682674]))
    }
    {
      (682686 'move' tmp[682666](682683 '_paramFoldLogical' tmp[682667] 0))
    }
    (489503 'move' tmp[489492] tmp[682666])
    unknown call_tmp[824731] "expr temp" "maybe param" "maybe type" "temp"
    (824734 'move' call_tmp[824731](489505 call _cond_invalid tmp[489492]))
    if call_tmp[824731]
    {
      (489508 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[682693] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682694] "maybe param" "temp"
    unknown call_tmp[824736] "expr temp" "maybe param" "maybe type" "temp"
    (824739 'move' call_tmp[824736](489493 call isTrue tmp[489492]))
    (682699 'move' tmp[682694](682697 call _cond_test call_tmp[824736]))
    if tmp[682694]
    {
      unknown tmp[682701] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[824743] "expr temp" "maybe param" "maybe type" "temp"
      (824746 'move' call_tmp[824743](156325 call(156322 call (partial) matchLiteral _mt[203] reader[156244]) "\")"))
      (682703 'move' tmp[682701](489496 call isTrue call_tmp[824743]))
      (682708 'move' tmp[682693](682705 '_paramFoldLogical' tmp[682694] tmp[682701]))
    }
    {
      (682713 'move' tmp[682693](682710 '_paramFoldLogical' tmp[682694] 0))
    }
    unknown call_tmp[824748] "expr temp" "maybe param" "maybe type" "temp"
    (824751 'move' call_tmp[824748](156327 call _cond_test tmp[682693]))
    if call_tmp[824748]
    {
      {
        const tmp[156297] "const" "temp"
        unknown call_tmp[824755] "expr temp" "maybe param" "maybe type" "temp"
        (824758 'move' call_tmp[824755](156257 call home _mt[203] this[156242]))
        unknown call_tmp[824760] "expr temp" "maybe param" "maybe type" "temp"
        (824763 'move' call_tmp[824760](156294 '_wide_get_locale' call_tmp[824755]))
        (156298 'move' tmp[156297](156295 'deref' call_tmp[824760]))
        {
          unknown call_tmp[824767] "maybe param" "maybe type" "temp"
          (824770 'move' call_tmp[824767](156267 call(156264 call (partial) localize _mt[203] pattern[156252])))
          unknown localPattern[156262] "dead at end of block" "insert auto destroy"
          (646680 'init var' localPattern[156262] call_tmp[824767])
          (156269 'end of statement')
          unknown opts[156271] "dead at end of block" "insert auto destroy"
          (646682 'default init var' opts[156271] qio_regex_options_t[153655])
          (156274 'end of statement' pattern[156252])
          (156276 call qio_regex_init_default_options opts[156271])
          (555573 'end of statement' opts[156271])
          unknown call_tmp[824774] "expr temp" "maybe param" "maybe type" "temp"
          (824777 'move' call_tmp[824774](156284 call(156281 call (partial) c_str _mt[203] localPattern[156262])))
          unknown call_tmp[824781] "expr temp" "maybe param" "maybe type" "temp"
          (824784 'move' call_tmp[824781](156286 call numBytes _mt[203] localPattern[156262]))
          unknown call_tmp[824788] "expr temp" "maybe param" "maybe type" "temp"
          (824791 'move' call_tmp[824788](156291 call _regex _mt[203] this[156242]))
          (156279 call qio_regex_create_compile call_tmp[824774] call_tmp[824781] opts[156271] call_tmp[824788])
          (555575 'end of statement' localPattern[156262] opts[156271])
        }
        (156301 'elided on block' 0 tmp[156297])
      }
    }
    (611928 return _void[46])
  }
  function regex[156365](?).init[156334](arg _mt[156346]:_MT[201], ref arg this[156336]:regex[156365](?), arg exprType[156338]:_any[141](?), arg reader[156341]:fileReader[170893](?), ref arg deserializer[156344]:_any[141](?)) : void[4] throws "method" "primary method" "no return value for void"
  {
    (156353 call(156350 call (partial) init _mt[203] this[156336]) exprType[156338])
    (555578 'end of statement')
    (156359 call(156356 call (partial) deserialize _mt[203] this[156336]) reader[156341] deserializer[156344])
    (611930 return _void[46])
  }
  type regex[156365](?) unknown exprType[154298] "type variable" val home[154301]:locale[234](434204 call here[135591]) locale[234] val _regex[154307]:qio_regex_t[153611](154310 call qio_regex_null) qio_regex_t[153611]
  function regex[156365](?).=[156367](arg _mt[156386]:_MT[201], arg this[156370]:regex[156365](?) :
  regex[156365](?), ref arg ret[156377]:regex[156365](?), arg x[156383] :
  unknown call_tmp[824797] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "assignop" "method" "operator" "no return value for void"
  {
    unknown call_tmp[824804] "expr temp" "maybe param" "maybe type" "temp"
    (824807 'move' call_tmp[824804](156469 call home _mt[203] x[156383]))
    unknown call_tmp[824811] "expr temp" "maybe param" "maybe type" "temp"
    (824814 'move' call_tmp[824811](156473 call home _mt[203] ret[156377]))
    unknown call_tmp[824816] "expr temp" "maybe param" "maybe type" "temp"
    (824819 'move' call_tmp[824816](156466 call == call_tmp[824804] call_tmp[824811]))
    unknown call_tmp[824821] "expr temp" "maybe param" "maybe type" "temp"
    (824824 'move' call_tmp[824821](156476 call _cond_test call_tmp[824816]))
    if call_tmp[824821]
    {
      {
        const tmp[156410] "const" "temp"
        unknown call_tmp[824828] "expr temp" "maybe param" "maybe type" "temp"
        (824831 'move' call_tmp[824828](156391 call home _mt[203] x[156383]))
        unknown call_tmp[824833] "expr temp" "maybe param" "maybe type" "temp"
        (824836 'move' call_tmp[824833](156407 '_wide_get_locale' call_tmp[824828]))
        (156411 'move' tmp[156410](156408 'deref' call_tmp[824833]))
        {
          unknown call_tmp[824840] "expr temp" "maybe param" "maybe type" "temp"
          (824843 'move' call_tmp[824840](156398 call _regex _mt[203] x[156383]))
          (156396 call qio_regex_retain call_tmp[824840])
          (555580 'end of statement')
          unknown call_tmp[824847] "expr temp" "maybe param" "maybe type" "temp"
          (824850 'move' call_tmp[824847](156404 call _regex _mt[203] ret[156377]))
          (156402 call qio_regex_release call_tmp[824847])
        }
        (156414 'elided on block' 0 tmp[156410])
      }
      unknown call_tmp[824854] "expr temp" "maybe param" "maybe type" "temp"
      (824857 'move' call_tmp[824854](156421 call _regex _mt[203] ret[156377]))
      unknown call_tmp[824861] "expr temp" "maybe param" "maybe type" "temp"
      (824864 'move' call_tmp[824861](156425 call _regex _mt[203] x[156383]))
      (156418 call = call_tmp[824854] call_tmp[824861])
    }
    {
      {
        const tmp[156458] "const" "temp"
        unknown call_tmp[824868] "expr temp" "maybe param" "maybe type" "temp"
        (824871 'move' call_tmp[824868](156430 call home _mt[203] ret[156377]))
        unknown call_tmp[824873] "expr temp" "maybe param" "maybe type" "temp"
        (824876 'move' call_tmp[824873](156455 '_wide_get_locale' call_tmp[824868]))
        (156459 'move' tmp[156458](156456 'deref' call_tmp[824873]))
        {
          unknown call_tmp[824880] "expr temp" "maybe param" "maybe type" "temp"
          (824883 'move' call_tmp[824880](156437 call _regex _mt[203] ret[156377]))
          (156435 call qio_regex_release call_tmp[824880])
          (555583 'end of statement')
          unknown call_tmp[824887] "maybe param" "maybe type" "temp"
          (824890 'move' call_tmp[824887](156446 call(156443 call (partial) _serialize _mt[203] x[156383])))
          unknown serialized[156441] "dead at end of block" "insert auto destroy"
          (646684 'init var' serialized[156441] call_tmp[824887])
          (156448 'end of statement')
          (156453 call(156450 call (partial) _deserialize _mt[203] ret[156377]) serialized[156441])
          (555584 'end of statement' serialized[156441])
        }
        (156462 'elided on block' 0 tmp[156458])
      }
    }
    (611932 return _void[46])
  }
  function :[156482](arg x[156488]:regex[156365](?), arg t[156492] :
  (526452 'query' x[156488] 1)) : _unknown[42] "inline" "operator"
  {
    unknown ret[611936] "RVV" "temp"
    unknown pattern[156497] "dead at end of block" "insert auto destroy"
    (646686 'default init var' pattern[156497] t[156492])
    (156500 'end of statement')
    {
      const tmp[156543] "const" "temp"
      unknown call_tmp[824896] "expr temp" "maybe param" "maybe type" "temp"
      (824899 'move' call_tmp[824896](156502 call home _mt[203] x[156488]))
      unknown call_tmp[824901] "expr temp" "maybe param" "maybe type" "temp"
      (824904 'move' call_tmp[824901](156540 '_wide_get_locale' call_tmp[824896]))
      (156544 'move' tmp[156543](156541 'deref' call_tmp[824901]))
      {
        unknown cs[156507] "dead at end of block" "insert auto destroy"
        unknown call_tmp[824906] "expr temp" "maybe param" "maybe type" "temp"
        (824909 'move' call_tmp[824906](156509 call c_ptrConst[46990](?) c_char[562]))
        (646688 'default init var' cs[156507] call_tmp[824906])
        (156512 'end of statement')
        unknown len[156514] "dead at end of block" "insert auto destroy"
        (646690 'default init var' len[156514] int(64)[10])
        (156517 'end of statement')
        unknown call_tmp[824913] "expr temp" "maybe param" "maybe type" "temp"
        (824916 'move' call_tmp[824913](156521 call _regex _mt[203] x[156488]))
        (156519 call qio_regex_borrow_pattern call_tmp[824913] cs[156507] len[156514])
        (555586 'end of statement' cs[156507] len[156514])
        Try!
        {
          {
            unknown call_tmp[824920] "expr temp" "maybe param" "maybe type" "temp"
            (824923 'move' call_tmp[824920](156534 call(156531 call (partial) createCopyingBuffer _mt[203] t[156492]) cs[156507] len[156514]))
            (156527 call = pattern[156497] call_tmp[824920])
            (555589 'end of statement' pattern[156497] cs[156507] len[156514])
          }
        }
      }
      (156547 'elided on block' 0 tmp[156543])
    }
    (611941 'move' ret[611936](611940 'deref' pattern[156497]))
    gotoReturn _end_:[611934] _end_:[611934]
    (555593 'end of statement' pattern[156497])
    label _end_:[611934]
    (611938 return ret[611936])
  }
  function string[244].find[156555](arg _mt[156567]:_MT[201], arg this[156558]:string[244] :
  string[244], arg pattern[156564] :
  (156562 call regex[156365](?) string[244])) : _unknown[42] "method"
  {
    unknown ret[611947] "RVV" "temp"
    unknown call_tmp[824927] "expr temp" "maybe param" "maybe type" "temp"
    (824930 'move' call_tmp[824927](156578 call(156575 call (partial) search _mt[203] pattern[156564]) this[156558]))
    unknown call_tmp[824934] "expr temp" "maybe param" "maybe type" "temp"
    (824937 'move' call_tmp[824934](156580 call byteOffset _mt[203] call_tmp[824927]))
    (611953 'move' ret[611947](611952 'coerce' call_tmp[824934] byteIndex[18611]))
    (611949 return ret[611947])
  }
  { scopeless type
    byteIndex[18611]
  }
  function bytes[232].find[156586](arg _mt[156598]:_MT[201], arg this[156589]:bytes[232] :
  bytes[232], arg pattern[156595] :
  (156593 call regex[156365](?) bytes[232])) : _unknown[42] "method"
  {
    unknown ret[611957] "RVV" "temp"
    unknown call_tmp[824941] "expr temp" "maybe param" "maybe type" "temp"
    (824944 'move' call_tmp[824941](156607 call(156604 call (partial) search _mt[203] pattern[156595]) this[156589]))
    unknown call_tmp[824948] "expr temp" "maybe param" "maybe type" "temp"
    (824951 'move' call_tmp[824948](156609 call byteOffset _mt[203] call_tmp[824941]))
    (611963 'move' ret[611957](611962 'coerce' call_tmp[824948] byteIndex[18611]))
    (611959 return ret[611957])
  }
  { scopeless type
    byteIndex[18611]
  }
  function string[244].replace[156615](arg _mt[156637]:_MT[201], arg this[156618]:string[244] :
  string[244], arg pattern[156624] :
  (156622 call regex[156365](?) string[244]), arg replacement[156628]:string[244], arg count[156634] :
  (1001953 call - 1) =
  (156631 call - 1)) : _unknown[42] "method"
  {
    unknown ret[611967] "RVV" "temp"
    unknown call_tmp[824953] "maybe param" "maybe type" "temp"
    (824956 'move' call_tmp[824953](156647 call doReplaceAndCount this[156618] pattern[156624] replacement[156628] count[156634]))
    unknown tmp[156652] "dead at end of block" "insert auto destroy" "temp"
    (646692 'init var' tmp[156652] call_tmp[824953])
    (156659 call _check_tuple_var_decl tmp[156652] 2)
    (555597 'end of statement')
    unknown call_tmp[824958] "maybe param" "maybe type" "temp"
    (824961 'move' call_tmp[824958](156653 call tmp[156652] 0))
    unknown str[156642] "dead at end of block" "insert auto destroy"
    (646694 'init var' str[156642] call_tmp[824958])
    unknown call_tmp[824963] "maybe param" "maybe type" "temp"
    (824966 'move' call_tmp[824963](156656 call tmp[156652] 1))
    unknown dummy[156644] "dead at end of block" "insert auto destroy"
    (646696 'init var' dummy[156644] call_tmp[824963])
    (156664 'end of statement')
    (611973 'move' ret[611967](611972 'coerce' str[156642] string[244]))
    gotoReturn _end_replace[611965] _end_replace[611965]
    (555598 'end of statement' str[156642])
    label _end_replace[611965]
    (611969 return ret[611967])
  }
  { scopeless type
    string[244]
  }
  function bytes[232].replace[156670](arg _mt[156692]:_MT[201], arg this[156673]:bytes[232] :
  bytes[232], arg pattern[156679] :
  (156677 call regex[156365](?) bytes[232]), arg replacement[156683]:bytes[232], arg count[156689] :
  (1001957 call - 1) =
  (156686 call - 1)) : _unknown[42] "method"
  {
    unknown ret[611979] "RVV" "temp"
    unknown call_tmp[824968] "maybe param" "maybe type" "temp"
    (824971 'move' call_tmp[824968](156702 call doReplaceAndCount this[156673] pattern[156679] replacement[156683] count[156689]))
    unknown tmp[156707] "dead at end of block" "insert auto destroy" "temp"
    (646698 'init var' tmp[156707] call_tmp[824968])
    (156714 call _check_tuple_var_decl tmp[156707] 2)
    (555600 'end of statement')
    unknown call_tmp[824973] "maybe param" "maybe type" "temp"
    (824976 'move' call_tmp[824973](156708 call tmp[156707] 0))
    unknown str[156697] "dead at end of block" "insert auto destroy"
    (646700 'init var' str[156697] call_tmp[824973])
    unknown call_tmp[824978] "maybe param" "maybe type" "temp"
    (824981 'move' call_tmp[824978](156711 call tmp[156707] 1))
    unknown dummy[156699] "dead at end of block" "insert auto destroy"
    (646702 'init var' dummy[156699] call_tmp[824978])
    (156719 'end of statement')
    (611985 'move' ret[611979](611984 'coerce' str[156697] bytes[232]))
    gotoReturn _end_replace[611977] _end_replace[611977]
    (555601 'end of statement' str[156697])
    label _end_replace[611977]
    (611981 return ret[611979])
  }
  { scopeless type
    bytes[232]
  }
  function string[244].replaceAndCount[156725](arg _mt[156747]:_MT[201], arg this[156728]:string[244] :
  string[244], arg pattern[156734] :
  (156732 call regex[156365](?) string[244]), arg replacement[156738]:string[244], arg count[156744] :
  (1001961 call - 1) =
  (156741 call - 1)) : _unknown[42] "method"
  {
    unknown ret[611991] "RVV" "temp"
    unknown call_tmp[824983] "expr temp" "maybe param" "maybe type" "temp"
    (824986 'move' call_tmp[824983](156757 call doReplaceAndCount this[156728] pattern[156734] replacement[156738] count[156744]))
    unknown call_tmp[824988] "expr temp" "maybe param" "maybe type" "temp"
    (824991 'move' call_tmp[824988](611996 call _build_tuple string[244] int(64)[10]))
    (612000 'move' ret[611991](611999 'coerce' call_tmp[824983] call_tmp[824988]))
    (611993 return ret[611991])
  }
  { scopeless type
    (156752 call _build_tuple string[244] int(64)[10])
  }
  function bytes[232].replaceAndCount[156765](arg _mt[156787]:_MT[201], arg this[156768]:bytes[232] :
  bytes[232], arg pattern[156774] :
  (156772 call regex[156365](?) bytes[232]), arg replacement[156778]:bytes[232], arg count[156784] :
  (1001965 call - 1) =
  (156781 call - 1)) : _unknown[42] "method"
  {
    unknown ret[612004] "RVV" "temp"
    unknown call_tmp[824993] "expr temp" "maybe param" "maybe type" "temp"
    (824996 'move' call_tmp[824993](156797 call doReplaceAndCount this[156768] pattern[156774] replacement[156778] count[156784]))
    unknown call_tmp[824998] "expr temp" "maybe param" "maybe type" "temp"
    (825001 'move' call_tmp[824998](612009 call _build_tuple bytes[232] int(64)[10]))
    (612013 'move' ret[612004](612012 'coerce' call_tmp[824993] call_tmp[824998]))
    (612006 return ret[612004])
  }
  { scopeless type
    (156792 call _build_tuple bytes[232] int(64)[10])
  }
  function doReplaceAndCount[156805](arg x[156809]:_any[141](?), arg pattern[156815] :
  unknown call_tmp[825003] "expr temp" "maybe param" "maybe type" "temp" "type variable", arg replacement[156819] :
  (526458 'typeof' x[156809]), arg count[156825] :
  (1001969 call - 1) =
  (156822 call - 1)) : _unknown[42] "inline" "private"
  {
    unknown ret[612017] "RVV" "temp"
    unknown regexCopy[156840] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825008] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (825011 'move' call_tmp[825008](526460 'typeof' x[156809]))
    unknown call_tmp[825013] "expr temp" "maybe param" "maybe type" "temp"
    (825016 'move' call_tmp[825013](156842 call regex[156365](?) call_tmp[825008]))
    (646704 'default init var' regexCopy[156840] call_tmp[825013])
    (156845 'end of statement')
    unknown call_tmp[825020] "expr temp" "maybe param" "maybe type" "temp"
    (825023 'move' call_tmp[825020](156854 call home _mt[203] pattern[156815]))
    unknown call_tmp[825025] "expr temp" "maybe param" "maybe type" "temp"
    (825028 'move' call_tmp[825025](434730 call here[135591]))
    unknown call_tmp[825030] "expr temp" "maybe param" "maybe type" "temp"
    (825033 'move' call_tmp[825030](156851 call != call_tmp[825020] call_tmp[825025]))
    unknown call_tmp[825035] "expr temp" "maybe param" "maybe type" "temp"
    (825038 'move' call_tmp[825035](156858 call _cond_test call_tmp[825030]))
    if call_tmp[825035]
    {
      (156846 call = regexCopy[156840] pattern[156815])
      (555605 'end of statement' regexCopy[156840])
    }
    const localRegex[156864] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682720] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682721] "maybe param" "temp"
    unknown call_tmp[825042] "expr temp" "maybe param" "maybe type" "temp"
    (825045 'move' call_tmp[825042](156868 call home _mt[203] pattern[156815]))
    unknown call_tmp[825047] "expr temp" "maybe param" "maybe type" "temp"
    (825050 'move' call_tmp[825047](434732 call here[135591]))
    unknown call_tmp[825052] "expr temp" "maybe param" "maybe type" "temp"
    (825055 'move' call_tmp[825052](156865 call != call_tmp[825042] call_tmp[825047]))
    (682726 'move' tmp[682721](682724 call _cond_test call_tmp[825052]))
    if tmp[682721]
    {
      unknown tmp[682728] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682730 'move' tmp[682728](156873 call _regex _mt[203] regexCopy[156840]))
      (682735 'move' tmp[682720](682732 '_paramFoldLogical' tmp[682721] tmp[682728]))
    }
    {
      unknown tmp[682737] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682739 'move' tmp[682737](156877 call _regex _mt[203] pattern[156815]))
      (682744 'move' tmp[682720](682741 '_paramFoldLogical' tmp[682721] tmp[682737]))
    }
    (646706 'init var' localRegex[156864] tmp[682720])
    (156884 'end of statement')
    unknown pos[156886] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646708] "maybe param" "maybe type" "temp"
    (646714 'move' type_tmp[646708] byteIndex[18611])
    (646710 'init var split decl' pos[156886] type_tmp[646708])
    (156889 'end of statement')
    unknown endpos[156891] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646719] "maybe param" "maybe type" "temp"
    (646725 'move' type_tmp[646719] byteIndex[18611])
    (646721 'init var split decl' endpos[156891] type_tmp[646719])
    (156894 'end of statement')
    (646716 'init var split init' pos[156886] 0 type_tmp[646708])
    (555608 'end of statement' pos[156886])
    unknown call_tmp[825063] "expr temp" "maybe param" "maybe type" "temp"
    (825066 'move' call_tmp[825063](156906 call numBytes _mt[203] x[156809]))
    unknown call_tmp[825068] "maybe param" "maybe type" "temp"
    (825071 'move' call_tmp[825068](156902 call + pos[156886] call_tmp[825063]))
    (646727 'init var split init' endpos[156891] call_tmp[825068] type_tmp[646719])
    (555610 'end of statement' endpos[156891] pos[156886])
    unknown replaced[156910] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825073] "expr temp" "maybe param" "maybe type" "temp"
    (825076 'move' call_tmp[825073](156912 call c_ptrConst[46990](?) c_char[562]))
    (646730 'default init var' replaced[156910] call_tmp[825073])
    (156915 'end of statement')
    unknown replaced_len[156917] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825078] "expr temp" "maybe param" "maybe type" "temp"
    (825081 'move' call_tmp[825078](156919 call int(64)[10] 64))
    (646732 'default init var' replaced_len[156917] call_tmp[825078])
    (156922 'end of statement')
    unknown call_tmp[825085] "expr temp" "maybe param" "maybe type" "temp"
    (825088 'move' call_tmp[825085](156933 call(156930 call (partial) localize _mt[203] replacement[156819])))
    unknown call_tmp[825092] "expr temp" "maybe param" "maybe type" "temp"
    (825095 'move' call_tmp[825092](156937 call(156934 call (partial) c_str _mt[203] call_tmp[825085])))
    unknown call_tmp[825099] "expr temp" "maybe param" "maybe type" "temp"
    (825102 'move' call_tmp[825099](156939 call numBytes _mt[203] replacement[156819]))
    unknown call_tmp[825106] "expr temp" "maybe param" "maybe type" "temp"
    (825109 'move' call_tmp[825106](156946 call(156943 call (partial) localize _mt[203] x[156809])))
    unknown call_tmp[825113] "expr temp" "maybe param" "maybe type" "temp"
    (825116 'move' call_tmp[825113](156950 call(156947 call (partial) c_str _mt[203] call_tmp[825106])))
    unknown call_tmp[825120] "expr temp" "maybe param" "maybe type" "temp"
    (825123 'move' call_tmp[825120](156952 call numBytes _mt[203] x[156809]))
    unknown call_tmp[825125] "maybe param" "maybe type" "temp"
    (825128 'move' call_tmp[825125](156927 call qio_regex_replace localRegex[156864] call_tmp[825092] call_tmp[825099] call_tmp[825113] call_tmp[825120] count[156825] replaced[156910] replaced_len[156917]))
    unknown nreplaced[156924] "dead at end of block" "insert auto destroy"
    (646734 'init var' nreplaced[156924] call_tmp[825125] int(64)[10])
    (156959 'end of statement')
    unknown call_tmp[825130] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (825133 'move' call_tmp[825130](526462 'typeof' x[156809]))
    unknown call_tmp[825137] "maybe param" "maybe type" "temp"
    (825140 'move' call_tmp[825137](156966 call(156963 call (partial) createAdoptingBuffer _mt[203] call_tmp[825130]) replaced[156910] replaced_len[156917]))
    unknown ret[156961] "dead at end of block" "insert auto destroy"
    (646736 'init var' ret[156961] call_tmp[825137])
    (156971 'end of statement' regexCopy[156840] localRegex[156864] replaced[156910] replaced_len[156917] replaced[156910] replaced_len[156917])
    unknown call_tmp[825142] "expr temp" "maybe param" "maybe type" "temp"
    (825145 'move' call_tmp[825142](156976 call _build_tuple ret[156961] nreplaced[156924]))
    (612022 'move' ret[612017](612021 'deref' call_tmp[825142]))
    gotoReturn _end_doReplaceAndCount[612015] _end_doReplaceAndCount[612015]
    (555618 'end of statement' ret[156961] nreplaced[156924])
    label _end_doReplaceAndCount[612015]
    (612019 return ret[612017])
  }
  where {
    unknown tmp[489534] "maybe param" "temp"
    unknown call_tmp[825147] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (825150 'move' call_tmp[825147](526464 'typeof' x[156809]))
    (489545 'move' tmp[489534](156830 call == call_tmp[825147] string[244]))
    unknown call_tmp[825152] "expr temp" "maybe param" "maybe type" "temp"
    (825155 'move' call_tmp[825152](489547 call _cond_invalid tmp[489534]))
    if call_tmp[825152]
    {
      (489550 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682751] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682752] "maybe param" "temp"
    unknown call_tmp[825157] "expr temp" "maybe param" "maybe type" "temp"
    (825160 'move' call_tmp[825157](489535 call isTrue tmp[489534]))
    (682757 'move' tmp[682752](682755 call _cond_test call_tmp[825157]))
    if tmp[682752]
    {
      (682762 'move' tmp[682751](682759 '_paramFoldLogical' tmp[682752] 1))
    }
    {
      unknown tmp[682764] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[825162] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (825165 'move' call_tmp[825162](526466 'typeof' x[156809]))
      unknown call_tmp[825167] "expr temp" "maybe param" "maybe type" "temp"
      (825170 'move' call_tmp[825167](156834 call == call_tmp[825162] bytes[232]))
      (682766 'move' tmp[682764](489539 call isTrue call_tmp[825167]))
      (682771 'move' tmp[682751](682768 '_paramFoldLogical' tmp[682752] tmp[682764]))
    }
    (1001456 call chpl_statementLevelSymbol tmp[682751])
  }
  function string[244].startsWith[156981](arg _mt[156993]:_MT[201], arg this[156984]:string[244] :
  string[244], arg pattern[156990] :
  (156988 call regex[156365](?) string[244])) : _unknown[42] "method"
  {
    unknown ret[612028] "RVV" "temp"
    unknown call_tmp[825174] "maybe param" "maybe type" "temp"
    (825177 'move' call_tmp[825174](157005 call(157002 call (partial) match _mt[203] pattern[156990]) this[156984]))
    unknown rm[156998] "dead at end of block" "insert auto destroy"
    (646738 'init var' rm[156998] call_tmp[825174])
    (157008 'end of statement')
    unknown call_tmp[825181] "expr temp" "maybe param" "maybe type" "temp"
    (825184 'move' call_tmp[825181](157013 call byteOffset _mt[203] rm[156998]))
    unknown call_tmp[825186] "expr temp" "maybe param" "maybe type" "temp"
    (825189 'move' call_tmp[825186](157010 call == call_tmp[825181] 0))
    (612034 'move' ret[612028](612033 'coerce' call_tmp[825186] bool[19]))
    gotoReturn _end_startsWith[612026] _end_startsWith[612026]
    (555621 'end of statement' rm[156998])
    label _end_startsWith[612026]
    (612030 return ret[612028])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].startsWith[157020](arg _mt[157032]:_MT[201], arg this[157023]:bytes[232] :
  bytes[232], arg pattern[157029] :
  (157027 call regex[156365](?) bytes[232])) : _unknown[42] "method"
  {
    unknown ret[612040] "RVV" "temp"
    unknown call_tmp[825193] "maybe param" "maybe type" "temp"
    (825196 'move' call_tmp[825193](157042 call(157039 call (partial) match _mt[203] pattern[157029]) this[157023]))
    unknown rm[157037] "dead at end of block" "insert auto destroy"
    (646740 'init var' rm[157037] call_tmp[825193])
    (157045 'end of statement')
    unknown call_tmp[825200] "expr temp" "maybe param" "maybe type" "temp"
    (825203 'move' call_tmp[825200](157050 call byteOffset _mt[203] rm[157037]))
    unknown call_tmp[825205] "expr temp" "maybe param" "maybe type" "temp"
    (825208 'move' call_tmp[825205](157047 call == call_tmp[825200] 0))
    (612046 'move' ret[612040](612045 'coerce' call_tmp[825205] bool[19]))
    gotoReturn _end_startsWith[612038] _end_startsWith[612038]
    (555623 'end of statement' rm[157037])
    label _end_startsWith[612038]
    (612042 return ret[612040])
  }
  { scopeless type
    bool[19]
  }
  function string[244].split[157057](arg _mt[157075]:_MT[201], arg this[157060]:string[244] :
  string[244], arg sep[157066] :
  (157064 call regex[156365](?) string[244]), arg maxsplit[157071]:int(64)[10] =
  0) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[612052] "RVV" "temp"
    {
      unknown _indexOfInterest[157090] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[157091] "expr temp" "temp"
      unknown call_tmp[825212] "expr temp" "maybe param" "maybe type" "temp"
      (825215 'move' call_tmp[825212](157084 call(157081 call (partial) split _mt[203] sep[157066]) this[157060] maxsplit[157071]))
      (157100 'move' _iterator[157091](157098 call _getIterator call_tmp[825212]))
      Defer
      {
        {
          (157115 call _freeIterator _iterator[157091])
        }
      }
      { scopeless type
        (157105 'move' _indexOfInterest[157090](157102 call iteratorIndex _iterator[157091]))
      }
      ForLoop[157092]
      {
        unknown v[157078] "index var" "insert auto destroy"
        (555626 'end of statement')
        (157110 'move' v[157078] _indexOfInterest[157090])
        (555627 'end of statement' v[157078])
        {
          unknown yret[612056] "YVV" "temp"
          (612059 'move' yret[612056](612058 'deref' v[157078]))
          (157088 yield yret[612056])
          (555629 'end of statement' v[157078])
        }
        label _continueLabel[157095]
        _indexOfInterest[157090]
        _iterator[157091]
      }
      label _breakLabel[157096]
    }
    (612054 return ret[612052])
  }
  function bytes[232].split[157124](arg _mt[157142]:_MT[201], arg this[157127]:bytes[232] :
  bytes[232], arg sep[157133] :
  (157131 call regex[156365](?) bytes[232]), arg maxsplit[157138]:int(64)[10] =
  0) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[612064] "RVV" "temp"
    {
      unknown _indexOfInterest[157157] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[157158] "expr temp" "temp"
      unknown call_tmp[825219] "expr temp" "maybe param" "maybe type" "temp"
      (825222 'move' call_tmp[825219](157151 call(157148 call (partial) split _mt[203] sep[157133]) this[157127] maxsplit[157138]))
      (157167 'move' _iterator[157158](157165 call _getIterator call_tmp[825219]))
      Defer
      {
        {
          (157182 call _freeIterator _iterator[157158])
        }
      }
      { scopeless type
        (157172 'move' _indexOfInterest[157157](157169 call iteratorIndex _iterator[157158]))
      }
      ForLoop[157159]
      {
        unknown v[157145] "index var" "insert auto destroy"
        (555632 'end of statement')
        (157177 'move' v[157145] _indexOfInterest[157157])
        (555633 'end of statement' v[157145])
        {
          unknown yret[612068] "YVV" "temp"
          (612071 'move' yret[612068](612070 'deref' v[157145]))
          (157155 yield yret[612068])
          (555635 'end of statement' v[157145])
        }
        label _continueLabel[157162]
        _indexOfInterest[157157]
        _iterator[157158]
      }
      label _breakLabel[157163]
    }
    (612066 return ret[612064])
  }
  function fileReader[170893](?).readThrough[157191](arg _mt[157214]:_MT[201], arg this[157194]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157201]:regex[156365](?), arg maxSize[157207] :
  (1001973 call - 1) =
  (157204 call - 1), arg stripSeparator[157211] :
  0 =
  0) : _unknown[42] throws "method"
  {
    unknown ret[612076] "RVV" "temp"
    unknown s[157229] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825224] "expr temp" "maybe param" "maybe type" "temp"
    (825227 'move' call_tmp[825224](526474 'query' separator[157201] 1))
    (646742 'default init var' s[157229] call_tmp[825224])
    (157232 'end of statement')
    unknown call_tmp[825231] "expr temp" "maybe param" "maybe type" "temp"
    (825234 'move' call_tmp[825231](157258 call(157255 call (partial) readThrough _mt[203] this[157194]) separator[157201] s[157229] maxSize[157207] stripSeparator[157211]))
    unknown call_tmp[825236] "expr temp" "maybe param" "maybe type" "temp"
    (825239 'move' call_tmp[825236](157250 call ! call_tmp[825231]))
    unknown call_tmp[825241] "expr temp" "maybe param" "maybe type" "temp"
    (825244 'move' call_tmp[825241](157263 call _cond_test call_tmp[825236]))
    if call_tmp[825241]
    {
      unknown call_tmp[825246] "expr temp" "maybe param" "maybe type" "temp"
      (825249 'move' call_tmp[825246](526477 'query' separator[157201] 1))
      unknown call_tmp[825251] "expr temp" "maybe param" "maybe type" "temp"
      (825254 'move' call_tmp[825251](157244 call : call_tmp[825246] string[244]))
      unknown call_tmp[825256] "expr temp" "maybe param" "maybe type" "temp"
      (825259 'move' call_tmp[825256](157239 call + "reached EOF in readThrough(" call_tmp[825251]))
      unknown call_tmp[825261] "expr temp" "maybe param" "maybe type" "temp"
      (825264 'move' call_tmp[825261](157237 call + call_tmp[825256] ")"))
      unknown call_tmp[825266] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (825269 'move' call_tmp[825266](1000168 'new' EofError[414412](?) call_tmp[825261]))
      unknown call_tmp[825271] "expr temp" "maybe param" "maybe type" "temp"
      (825274 'move' call_tmp[825271](542265 call chpl_fix_thrown_error call_tmp[825266]))
      (157233 'throw' call_tmp[825271])
    }
    unknown call_tmp[825276] "expr temp" "maybe param" "maybe type" "temp"
    (825279 'move' call_tmp[825276](612080 'query' separator[157201] 1))
    (612084 'move' ret[612076](612083 'coerce' s[157229] call_tmp[825276]))
    gotoReturn _end_readThrough[612074] _end_readThrough[612074]
    (555638 'end of statement' s[157229])
    label _end_readThrough[612074]
    (612078 return ret[612076])
  }
  where {
    unknown tmp[489555] "maybe param" "temp"
    unknown call_tmp[825281] "expr temp" "maybe param" "maybe type" "temp"
    (825284 'move' call_tmp[825281](526480 'query' separator[157201] 1))
    (489566 'move' tmp[489555](157219 call == call_tmp[825281] string[244]))
    unknown call_tmp[825286] "expr temp" "maybe param" "maybe type" "temp"
    (825289 'move' call_tmp[825286](489568 call _cond_invalid tmp[489555]))
    if call_tmp[825286]
    {
      (489571 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682778] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682779] "maybe param" "temp"
    unknown call_tmp[825291] "expr temp" "maybe param" "maybe type" "temp"
    (825294 'move' call_tmp[825291](489556 call isTrue tmp[489555]))
    (682784 'move' tmp[682779](682782 call _cond_test call_tmp[825291]))
    if tmp[682779]
    {
      (682789 'move' tmp[682778](682786 '_paramFoldLogical' tmp[682779] 1))
    }
    {
      unknown tmp[682791] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[825296] "expr temp" "maybe param" "maybe type" "temp"
      (825299 'move' call_tmp[825296](526483 'query' separator[157201] 1))
      unknown call_tmp[825301] "expr temp" "maybe param" "maybe type" "temp"
      (825304 'move' call_tmp[825301](157223 call == call_tmp[825296] bytes[232]))
      (682793 'move' tmp[682791](489560 call isTrue call_tmp[825301]))
      (682798 'move' tmp[682778](682795 '_paramFoldLogical' tmp[682779] tmp[682791]))
    }
    (1001458 call chpl_statementLevelSymbol tmp[682778])
  }
  { scopeless type
    (526486 'query' separator[157201] 1)
  }
  function fileReader[170893](?).readThrough[157274](arg _mt[157300]:_MT[201], arg this[157277]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157283] :
  (157281 call regex[156365](?) string[244]), ref arg s[157287]:string[244], arg maxSize[157293] :
  (1001979 call - 1) =
  (157290 call - 1), arg stripSeparator[157297] :
  0 =
  0) : _unknown[42] throws "method"
  {
    unknown ret[612090] "RVV" "temp"
    {
      const tmp[157568] "const" "temp"
      unknown call_tmp[825308] "expr temp" "maybe param" "maybe type" "temp"
      (825311 'move' call_tmp[825308](157315 call _home _mt[203] this[157277]))
      unknown call_tmp[825313] "expr temp" "maybe param" "maybe type" "temp"
      (825316 'move' call_tmp[825313](157565 '_wide_get_locale' call_tmp[825308]))
      (157569 'move' tmp[157568](157566 'deref' call_tmp[825313]))
      {
        Try
        {
          {
            (157324 call(157321 call (partial) lock _mt[203] this[157277]))
          }
        }
        Defer
        {
          {
            (157333 call(157330 call (partial) unlock _mt[203] this[157277]))
          }
        }
        unknown call_tmp[825322] "expr temp" "maybe param" "maybe type" "temp"
        (825325 'move' call_tmp[825322](157348 call * 4 maxSize[157293]))
        unknown call_tmp[825327] "maybe param" "maybe type" "temp"
        (825330 'move' call_tmp[825327](157346 call _findSeparator separator[157283] call_tmp[825322] this[157277]))
        const tmp[157353] "dead at end of block" "const" "insert auto destroy" "temp"
        (646744 'init var' tmp[157353] call_tmp[825327])
        (157366 call _check_tuple_var_decl tmp[157353] 4)
        (555642 'end of statement')
        unknown call_tmp[825332] "maybe param" "maybe type" "temp"
        (825335 'move' call_tmp[825332](157354 call tmp[157353] 0))
        const searchErr[157337] "dead at end of block" "const" "insert auto destroy"
        (646746 'init var' searchErr[157337] call_tmp[825332])
        unknown call_tmp[825337] "maybe param" "maybe type" "temp"
        (825340 'move' call_tmp[825337](157357 call tmp[157353] 1))
        const found[157339] "dead at end of block" "const" "insert auto destroy"
        (646748 'init var' found[157339] call_tmp[825337])
        unknown call_tmp[825342] "maybe param" "maybe type" "temp"
        (825345 'move' call_tmp[825342](157360 call tmp[157353] 2))
        const relByteOffset[157341] "dead at end of block" "const" "insert auto destroy"
        (646750 'init var' relByteOffset[157341] call_tmp[825342])
        unknown call_tmp[825347] "maybe param" "maybe type" "temp"
        (825350 'move' call_tmp[825347](157363 call tmp[157353] 3))
        const match[157343] "dead at end of block" "const" "insert auto destroy"
        (646752 'init var' match[157343] call_tmp[825347])
        (157371 'end of statement')
        unknown tmp[489576] "maybe param" "temp"
        (489587 'move' tmp[489576](157389 call != searchErr[157337] 0))
        unknown call_tmp[825352] "expr temp" "maybe param" "maybe type" "temp"
        (825355 'move' call_tmp[825352](489589 call _cond_invalid tmp[489576]))
        if call_tmp[825352]
        {
          (489592 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682805] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682806] "maybe param" "temp"
        unknown call_tmp[825357] "expr temp" "maybe param" "maybe type" "temp"
        (825360 'move' call_tmp[825357](489577 call isTrue tmp[489576]))
        (682811 'move' tmp[682806](682809 call _cond_test call_tmp[825357]))
        if tmp[682806]
        {
          unknown tmp[682813] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[825362] "expr temp" "maybe param" "maybe type" "temp"
          (825365 'move' call_tmp[825362](434783 call EEOF[158629]))
          unknown call_tmp[825367] "expr temp" "maybe param" "maybe type" "temp"
          (825370 'move' call_tmp[825367](157393 call != searchErr[157337] call_tmp[825362]))
          (682815 'move' tmp[682813](489580 call isTrue call_tmp[825367]))
          (682820 'move' tmp[682805](682817 '_paramFoldLogical' tmp[682806] tmp[682813]))
        }
        {
          (682825 'move' tmp[682805](682822 '_paramFoldLogical' tmp[682806] 0))
        }
        unknown call_tmp[825372] "expr temp" "maybe param" "maybe type" "temp"
        (825375 'move' call_tmp[825372](157397 call _cond_test tmp[682805]))
        if call_tmp[825372]
        {
          Try
          {
            {
              (157379 call(157376 call (partial) _ch_ioerror _mt[203] this[157277]) searchErr[157337] "in readThrough(regex(string))")
              (555644 'end of statement' searchErr[157337])
            }
          }
        }
        unknown call_tmp[825379] "expr temp" "maybe param" "maybe type" "temp"
        (825382 'move' call_tmp[825379](157412 call >= maxSize[157293] 0))
        unknown call_tmp[825384] "expr temp" "maybe param" "maybe type" "temp"
        (825387 'move' call_tmp[825384](157416 call _cond_test call_tmp[825379]))
        if call_tmp[825384]
        {
          unknown call_tmp[825391] "expr temp" "maybe param" "maybe type" "temp"
          (825394 'move' call_tmp[825391](157408 call _channel_internal _mt[203] this[157277]))
          (157403 call qio_channel_mark 0 call_tmp[825391])
        }
        unknown call_tmp[825398] "expr temp" "maybe param" "maybe type" "temp"
        (825401 'move' call_tmp[825398](157427 call _channel_internal _mt[203] this[157277]))
        unknown call_tmp[825403] "expr temp" "maybe param" "maybe type" "temp"
        (825406 'move' call_tmp[825403](157431 call - 1))
        unknown call_tmp[825408] "maybe param" "maybe type" "temp"
        (825411 'move' call_tmp[825408](157424 call readStringBytesData s[157287] call_tmp[825398] relByteOffset[157341] call_tmp[825403]))
        const err[157422] "dead at end of block" "const" "insert auto destroy"
        (646754 'init var' err[157422] call_tmp[825408])
        (157435 'end of statement' relByteOffset[157341])
        unknown call_tmp[825413] "expr temp" "maybe param" "maybe type" "temp"
        (825416 'move' call_tmp[825413](157531 call _cond_test err[157422]))
        if call_tmp[825413]
        {
          unknown call_tmp[825418] "expr temp" "maybe param" "maybe type" "temp"
          (825421 'move' call_tmp[825418](157444 call >= maxSize[157293] 0))
          unknown call_tmp[825423] "expr temp" "maybe param" "maybe type" "temp"
          (825426 'move' call_tmp[825423](157448 call _cond_test call_tmp[825418]))
          if call_tmp[825423]
          {
            unknown call_tmp[825430] "expr temp" "maybe param" "maybe type" "temp"
            (825433 'move' call_tmp[825430](157440 call _channel_internal _mt[203] this[157277]))
            (157438 call qio_channel_revert_unlocked call_tmp[825430])
          }
          Try
          {
            {
              (157458 call(157455 call (partial) _ch_ioerror _mt[203] this[157277]) err[157422] "in readThrough(regex(string))")
              (555649 'end of statement' err[157422])
            }
          }
        }
        {
          unknown tmp[489597] "maybe param" "temp"
          (489608 'move' tmp[489597](157503 call >= maxSize[157293] 0))
          unknown call_tmp[825437] "expr temp" "maybe param" "maybe type" "temp"
          (825440 'move' call_tmp[825437](489610 call _cond_invalid tmp[489597]))
          if call_tmp[825437]
          {
            (489613 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[682859] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[682860] "maybe param" "temp"
          unknown call_tmp[825442] "expr temp" "maybe param" "maybe type" "temp"
          (825445 'move' call_tmp[825442](489598 call isTrue tmp[489597]))
          (682865 'move' tmp[682860](682863 call _cond_test call_tmp[825442]))
          if tmp[682860]
          {
            unknown tmp[682832] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[682833] "maybe param" "temp"
            (682838 'move' tmp[682833](682836 call _cond_test stripSeparator[157297]))
            if tmp[682833]
            {
              unknown tmp[682840] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              (682842 'move' tmp[682840](157517 call numCodepoints _mt[203] match[157343]))
              (682847 'move' tmp[682832](682844 '_paramFoldLogical' tmp[682833] tmp[682840]))
            }
            {
              (682852 'move' tmp[682832](682849 '_paramFoldLogical' tmp[682833] 0))
            }
            unknown tmp[682867] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[825451] "expr temp" "maybe param" "maybe type" "temp"
            (825454 'move' call_tmp[825451](157512 call numCodepoints _mt[203] s[157287]))
            unknown call_tmp[825456] "expr temp" "maybe param" "maybe type" "temp"
            (825459 'move' call_tmp[825456](157509 call - call_tmp[825451] tmp[682832]))
            unknown call_tmp[825461] "expr temp" "maybe param" "maybe type" "temp"
            (825464 'move' call_tmp[825461](157507 call > call_tmp[825456] maxSize[157293]))
            (682869 'move' tmp[682867](489601 call isTrue call_tmp[825461]))
            (682874 'move' tmp[682859](682871 '_paramFoldLogical' tmp[682860] tmp[682867]))
          }
          {
            (682879 'move' tmp[682859](682876 '_paramFoldLogical' tmp[682860] 0))
          }
          unknown call_tmp[825466] "expr temp" "maybe param" "maybe type" "temp"
          (825469 'move' call_tmp[825466](157525 call _cond_test tmp[682859]))
          if call_tmp[825466]
          {
            unknown call_tmp[825473] "expr temp" "maybe param" "maybe type" "temp"
            (825476 'move' call_tmp[825473](157469 call _channel_internal _mt[203] this[157277]))
            (157467 call qio_channel_revert_unlocked call_tmp[825473])
            (555652 'end of statement')
            Try
            {
              {
                unknown call_tmp[825480] "expr temp" "maybe param" "maybe type" "temp"
                (825483 'move' call_tmp[825480](434790 call EFORMAT[158612]))
                unknown call_tmp[825485] "expr temp" "maybe param" "maybe type" "temp"
                (825488 'move' call_tmp[825485](157478 call : call_tmp[825480] errorCode[12828]))
                (157477 call(157474 call (partial) _ch_ioerror _mt[203] this[157277]) call_tmp[825485] "in readThrough(regex(string))")
              }
            }
          }
          {
            unknown call_tmp[825490] "expr temp" "maybe param" "maybe type" "temp"
            (825493 'move' call_tmp[825490](157493 call > maxSize[157293] 0))
            unknown call_tmp[825495] "expr temp" "maybe param" "maybe type" "temp"
            (825498 'move' call_tmp[825495](157497 call _cond_test call_tmp[825490]))
            if call_tmp[825495]
            {
              unknown call_tmp[825502] "expr temp" "maybe param" "maybe type" "temp"
              (825505 'move' call_tmp[825502](157490 call _channel_internal _mt[203] this[157277]))
              (157488 call qio_channel_commit_unlocked call_tmp[825502])
            }
          }
        }
        unknown tmp[489618] "maybe param" "temp"
        (489629 'move' tmp[489618] found[157339])
        unknown call_tmp[825507] "expr temp" "maybe param" "maybe type" "temp"
        (825510 'move' call_tmp[825507](489631 call _cond_invalid tmp[489618]))
        if call_tmp[825507]
        {
          (489634 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682886] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682887] "maybe param" "temp"
        unknown call_tmp[825512] "expr temp" "maybe param" "maybe type" "temp"
        (825515 'move' call_tmp[825512](489619 call isTrue tmp[489618]))
        (682892 'move' tmp[682887](682890 call _cond_test call_tmp[825512]))
        if tmp[682887]
        {
          unknown tmp[682894] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (682896 'move' tmp[682894](489622 call isTrue stripSeparator[157297]))
          (682901 'move' tmp[682886](682898 '_paramFoldLogical' tmp[682887] tmp[682894]))
        }
        {
          (682906 'move' tmp[682886](682903 '_paramFoldLogical' tmp[682887] 0))
        }
        unknown call_tmp[825517] "expr temp" "maybe param" "maybe type" "temp"
        (825520 'move' call_tmp[825517](157560 call _cond_test tmp[682886]))
        if call_tmp[825517]
        {
          unknown call_tmp[825524] "expr temp" "maybe param" "maybe type" "temp"
          (825527 'move' call_tmp[825524](157544 call size _mt[203] s[157287]))
          unknown call_tmp[825531] "expr temp" "maybe param" "maybe type" "temp"
          (825534 'move' call_tmp[825531](157548 call numCodepoints _mt[203] match[157343]))
          unknown call_tmp[825536] "expr temp" "maybe param" "maybe type" "temp"
          (825539 'move' call_tmp[825536](157541 call - call_tmp[825524] call_tmp[825531]))
          unknown call_tmp[825541] "expr temp" "maybe param" "maybe type" "temp"
          (825544 'move' call_tmp[825541](157551 call chpl__nudgeHighBound call_tmp[825536]))
          unknown call_tmp[825546] "expr temp" "maybe param" "maybe type" "temp"
          (825549 'move' call_tmp[825546](157553 call chpl_build_bounded_range 0 call_tmp[825541]))
          unknown call_tmp[825551] "expr temp" "maybe param" "maybe type" "temp"
          (825554 'move' call_tmp[825551](157539 call s[157287] call_tmp[825546]))
          (157535 call = s[157287] call_tmp[825551])
          (555656 'end of statement' match[157343])
        }
      }
      (157572 'elided on block' 0 tmp[157568])
    }
    unknown call_tmp[825558] "expr temp" "maybe param" "maybe type" "temp"
    (825561 'move' call_tmp[825558](157580 call size _mt[203] s[157287]))
    unknown call_tmp[825563] "expr temp" "maybe param" "maybe type" "temp"
    (825566 'move' call_tmp[825563](157577 call > call_tmp[825558] 0))
    (612096 'move' ret[612090](612095 'coerce' call_tmp[825563] bool[19]))
    (612092 return ret[612090])
    (396737 'used modules list'(157310 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function fileReader[170893](?).readThrough[157587](arg _mt[157613]:_MT[201], arg this[157590]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157596] :
  (157594 call regex[156365](?) bytes[232]), ref arg b[157600]:bytes[232], arg maxSize[157606] :
  (1001985 call - 1) =
  (157603 call - 1), arg stripSeparator[157610] :
  0 =
  0) : _unknown[42] throws "method"
  {
    unknown ret[612100] "RVV" "temp"
    {
      const tmp[157774] "const" "temp"
      unknown call_tmp[825570] "expr temp" "maybe param" "maybe type" "temp"
      (825573 'move' call_tmp[825570](157624 call _home _mt[203] this[157590]))
      unknown call_tmp[825575] "expr temp" "maybe param" "maybe type" "temp"
      (825578 'move' call_tmp[825575](157771 '_wide_get_locale' call_tmp[825570]))
      (157775 'move' tmp[157774](157772 'deref' call_tmp[825575]))
      {
        Try
        {
          {
            (157633 call(157630 call (partial) lock _mt[203] this[157590]))
          }
        }
        Defer
        {
          {
            (157642 call(157639 call (partial) unlock _mt[203] this[157590]))
          }
        }
        unknown call_tmp[825584] "maybe param" "maybe type" "temp"
        (825587 'move' call_tmp[825584](157655 call _findSeparator separator[157596] maxSize[157606] this[157590]))
        const tmp[157659] "dead at end of block" "const" "insert auto destroy" "temp"
        (646756 'init var' tmp[157659] call_tmp[825584])
        (157672 call _check_tuple_var_decl tmp[157659] 4)
        (555661 'end of statement')
        unknown call_tmp[825589] "maybe param" "maybe type" "temp"
        (825592 'move' call_tmp[825589](157660 call tmp[157659] 0))
        const searchErr[157646] "dead at end of block" "const" "insert auto destroy"
        (646758 'init var' searchErr[157646] call_tmp[825589])
        unknown call_tmp[825594] "maybe param" "maybe type" "temp"
        (825597 'move' call_tmp[825594](157663 call tmp[157659] 1))
        const found[157648] "dead at end of block" "const" "insert auto destroy"
        (646760 'init var' found[157648] call_tmp[825594])
        unknown call_tmp[825599] "maybe param" "maybe type" "temp"
        (825602 'move' call_tmp[825599](157666 call tmp[157659] 2))
        const relByteOffset[157650] "dead at end of block" "const" "insert auto destroy"
        (646762 'init var' relByteOffset[157650] call_tmp[825599])
        unknown call_tmp[825604] "maybe param" "maybe type" "temp"
        (825607 'move' call_tmp[825604](157669 call tmp[157659] 3))
        const match[157652] "dead at end of block" "const" "insert auto destroy"
        (646764 'init var' match[157652] call_tmp[825604])
        (157677 'end of statement')
        unknown tmp[489639] "maybe param" "temp"
        (489650 'move' tmp[489639](157693 call != searchErr[157646] 0))
        unknown call_tmp[825609] "expr temp" "maybe param" "maybe type" "temp"
        (825612 'move' call_tmp[825609](489652 call _cond_invalid tmp[489639]))
        if call_tmp[825609]
        {
          (489655 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682913] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682914] "maybe param" "temp"
        unknown call_tmp[825614] "expr temp" "maybe param" "maybe type" "temp"
        (825617 'move' call_tmp[825614](489640 call isTrue tmp[489639]))
        (682919 'move' tmp[682914](682917 call _cond_test call_tmp[825614]))
        if tmp[682914]
        {
          unknown tmp[682921] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[825619] "expr temp" "maybe param" "maybe type" "temp"
          (825622 'move' call_tmp[825619](434810 call EEOF[158629]))
          unknown call_tmp[825624] "expr temp" "maybe param" "maybe type" "temp"
          (825627 'move' call_tmp[825624](157697 call != searchErr[157646] call_tmp[825619]))
          (682923 'move' tmp[682921](489643 call isTrue call_tmp[825624]))
          (682928 'move' tmp[682913](682925 '_paramFoldLogical' tmp[682914] tmp[682921]))
        }
        {
          (682933 'move' tmp[682913](682930 '_paramFoldLogical' tmp[682914] 0))
        }
        unknown call_tmp[825629] "expr temp" "maybe param" "maybe type" "temp"
        (825632 'move' call_tmp[825629](157701 call _cond_test tmp[682913]))
        if call_tmp[825629]
        {
          Try
          {
            {
              (157683 call(157680 call (partial) _ch_ioerror _mt[203] this[157590]) searchErr[157646] "in readThrough(regex(bytes))")
              (555663 'end of statement' searchErr[157646])
            }
          }
        }
        unknown call_tmp[825638] "expr temp" "maybe param" "maybe type" "temp"
        (825641 'move' call_tmp[825638](157717 call _channel_internal _mt[203] this[157590]))
        unknown call_tmp[825643] "maybe param" "maybe type" "temp"
        (825646 'move' call_tmp[825643](157714 call readStringBytesData module=[222] IO[208303] b[157600] call_tmp[825638] relByteOffset[157650] 0))
        const err[157707] "dead at end of block" "const" "insert auto destroy"
        (646766 'init var' err[157707] call_tmp[825643])
        (157723 'end of statement' relByteOffset[157650])
        unknown call_tmp[825648] "expr temp" "maybe param" "maybe type" "temp"
        (825651 'move' call_tmp[825648](157736 call _cond_test err[157707]))
        if call_tmp[825648]
        {
          Try
          {
            {
              (157729 call(157726 call (partial) _ch_ioerror _mt[203] this[157590]) err[157707] "in readThrough(regex(bytes))")
              (555666 'end of statement' err[157707])
            }
          }
        }
        unknown tmp[489660] "maybe param" "temp"
        (489671 'move' tmp[489660] found[157648])
        unknown call_tmp[825655] "expr temp" "maybe param" "maybe type" "temp"
        (825658 'move' call_tmp[825655](489673 call _cond_invalid tmp[489660]))
        if call_tmp[825655]
        {
          (489676 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682940] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682941] "maybe param" "temp"
        unknown call_tmp[825660] "expr temp" "maybe param" "maybe type" "temp"
        (825663 'move' call_tmp[825660](489661 call isTrue tmp[489660]))
        (682946 'move' tmp[682941](682944 call _cond_test call_tmp[825660]))
        if tmp[682941]
        {
          unknown tmp[682948] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (682950 'move' tmp[682948](489664 call isTrue stripSeparator[157610]))
          (682955 'move' tmp[682940](682952 '_paramFoldLogical' tmp[682941] tmp[682948]))
        }
        {
          (682960 'move' tmp[682940](682957 '_paramFoldLogical' tmp[682941] 0))
        }
        unknown call_tmp[825665] "expr temp" "maybe param" "maybe type" "temp"
        (825668 'move' call_tmp[825665](157766 call _cond_test tmp[682940]))
        if call_tmp[825665]
        {
          unknown call_tmp[825672] "expr temp" "maybe param" "maybe type" "temp"
          (825675 'move' call_tmp[825672](157750 call size _mt[203] b[157600]))
          unknown call_tmp[825679] "expr temp" "maybe param" "maybe type" "temp"
          (825682 'move' call_tmp[825679](157754 call numBytes _mt[203] match[157652]))
          unknown call_tmp[825684] "expr temp" "maybe param" "maybe type" "temp"
          (825687 'move' call_tmp[825684](157747 call - call_tmp[825672] call_tmp[825679]))
          unknown call_tmp[825689] "expr temp" "maybe param" "maybe type" "temp"
          (825692 'move' call_tmp[825689](157757 call chpl__nudgeHighBound call_tmp[825684]))
          unknown call_tmp[825694] "expr temp" "maybe param" "maybe type" "temp"
          (825697 'move' call_tmp[825694](157759 call chpl_build_bounded_range 0 call_tmp[825689]))
          unknown call_tmp[825699] "expr temp" "maybe param" "maybe type" "temp"
          (825702 'move' call_tmp[825699](157745 call b[157600] call_tmp[825694]))
          (157741 call = b[157600] call_tmp[825699])
          (555669 'end of statement' match[157652])
        }
        (404007 'referenced modules list' IO[208303])
      }
      (157778 'elided on block' 0 tmp[157774])
    }
    unknown call_tmp[825706] "expr temp" "maybe param" "maybe type" "temp"
    (825709 'move' call_tmp[825706](157786 call size _mt[203] b[157600]))
    unknown call_tmp[825711] "expr temp" "maybe param" "maybe type" "temp"
    (825714 'move' call_tmp[825711](157783 call > call_tmp[825706] 0))
    (612106 'move' ret[612100](612105 'coerce' call_tmp[825711] bool[19]))
    (612102 return ret[612100])
    (396739 'used modules list'(157621 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function fileReader[170893](?).readTo[157793](arg _mt[157812]:_MT[201], arg this[157796]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157803]:regex[156365](?), arg maxSize[157809] :
  (1001991 call - 1) =
  (157806 call - 1)) : _unknown[42] throws "method"
  {
    unknown ret[612110] "RVV" "temp"
    unknown s[157827] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825716] "expr temp" "maybe param" "maybe type" "temp"
    (825719 'move' call_tmp[825716](526496 'query' separator[157803] 1))
    (646768 'default init var' s[157827] call_tmp[825716])
    (157830 'end of statement')
    unknown call_tmp[825723] "expr temp" "maybe param" "maybe type" "temp"
    (825726 'move' call_tmp[825723](157856 call(157853 call (partial) readTo _mt[203] this[157796]) separator[157803] s[157827] maxSize[157809]))
    unknown call_tmp[825728] "expr temp" "maybe param" "maybe type" "temp"
    (825731 'move' call_tmp[825728](157848 call ! call_tmp[825723]))
    unknown call_tmp[825733] "expr temp" "maybe param" "maybe type" "temp"
    (825736 'move' call_tmp[825733](157860 call _cond_test call_tmp[825728]))
    if call_tmp[825733]
    {
      unknown call_tmp[825738] "expr temp" "maybe param" "maybe type" "temp"
      (825741 'move' call_tmp[825738](526499 'query' separator[157803] 1))
      unknown call_tmp[825743] "expr temp" "maybe param" "maybe type" "temp"
      (825746 'move' call_tmp[825743](157842 call : call_tmp[825738] string[244]))
      unknown call_tmp[825748] "expr temp" "maybe param" "maybe type" "temp"
      (825751 'move' call_tmp[825748](157837 call + "reached EOF in readTo(" call_tmp[825743]))
      unknown call_tmp[825753] "expr temp" "maybe param" "maybe type" "temp"
      (825756 'move' call_tmp[825753](157835 call + call_tmp[825748] ")"))
      unknown call_tmp[825758] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (825761 'move' call_tmp[825758](1000169 'new' EofError[414412](?) call_tmp[825753]))
      unknown call_tmp[825763] "expr temp" "maybe param" "maybe type" "temp"
      (825766 'move' call_tmp[825763](542267 call chpl_fix_thrown_error call_tmp[825758]))
      (157831 'throw' call_tmp[825763])
    }
    unknown call_tmp[825768] "expr temp" "maybe param" "maybe type" "temp"
    (825771 'move' call_tmp[825768](612114 'query' separator[157803] 1))
    (612118 'move' ret[612110](612117 'coerce' s[157827] call_tmp[825768]))
    gotoReturn _end_readTo[612108] _end_readTo[612108]
    (555673 'end of statement' s[157827])
    label _end_readTo[612108]
    (612112 return ret[612110])
  }
  where {
    unknown tmp[489681] "maybe param" "temp"
    unknown call_tmp[825773] "expr temp" "maybe param" "maybe type" "temp"
    (825776 'move' call_tmp[825773](526502 'query' separator[157803] 1))
    (489692 'move' tmp[489681](157817 call == call_tmp[825773] string[244]))
    unknown call_tmp[825778] "expr temp" "maybe param" "maybe type" "temp"
    (825781 'move' call_tmp[825778](489694 call _cond_invalid tmp[489681]))
    if call_tmp[825778]
    {
      (489697 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682967] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682968] "maybe param" "temp"
    unknown call_tmp[825783] "expr temp" "maybe param" "maybe type" "temp"
    (825786 'move' call_tmp[825783](489682 call isTrue tmp[489681]))
    (682973 'move' tmp[682968](682971 call _cond_test call_tmp[825783]))
    if tmp[682968]
    {
      (682978 'move' tmp[682967](682975 '_paramFoldLogical' tmp[682968] 1))
    }
    {
      unknown tmp[682980] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[825788] "expr temp" "maybe param" "maybe type" "temp"
      (825791 'move' call_tmp[825788](526505 'query' separator[157803] 1))
      unknown call_tmp[825793] "expr temp" "maybe param" "maybe type" "temp"
      (825796 'move' call_tmp[825793](157821 call == call_tmp[825788] bytes[232]))
      (682982 'move' tmp[682980](489686 call isTrue call_tmp[825793]))
      (682987 'move' tmp[682967](682984 '_paramFoldLogical' tmp[682968] tmp[682980]))
    }
    (1001460 call chpl_statementLevelSymbol tmp[682967])
  }
  { scopeless type
    (526508 'query' separator[157803] 1)
  }
  function fileReader[170893](?).readTo[157871](arg _mt[157893]:_MT[201], arg this[157874]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157880] :
  (157878 call regex[156365](?) string[244]), ref arg s[157884]:string[244], arg maxSize[157890] :
  (1001995 call - 1) =
  (157887 call - 1)) : _unknown[42] throws "method"
  {
    unknown ret[612124] "RVV" "temp"
    {
      const tmp[158139] "const" "temp"
      unknown call_tmp[825800] "expr temp" "maybe param" "maybe type" "temp"
      (825803 'move' call_tmp[825800](157904 call _home _mt[203] this[157874]))
      unknown call_tmp[825805] "expr temp" "maybe param" "maybe type" "temp"
      (825808 'move' call_tmp[825805](158136 '_wide_get_locale' call_tmp[825800]))
      (158140 'move' tmp[158139](158137 'deref' call_tmp[825805]))
      {
        Try
        {
          {
            (157913 call(157910 call (partial) lock _mt[203] this[157874]))
          }
        }
        Defer
        {
          {
            (157922 call(157919 call (partial) unlock _mt[203] this[157874]))
          }
        }
        unknown call_tmp[825814] "expr temp" "maybe param" "maybe type" "temp"
        (825817 'move' call_tmp[825814](157937 call * 4 maxSize[157890]))
        unknown call_tmp[825819] "maybe param" "maybe type" "temp"
        (825822 'move' call_tmp[825819](157935 call _findSeparator separator[157880] call_tmp[825814] this[157874]))
        const tmp[157942] "dead at end of block" "const" "insert auto destroy" "temp"
        (646770 'init var' tmp[157942] call_tmp[825819])
        (157955 call _check_tuple_var_decl tmp[157942] 4)
        (555677 'end of statement')
        unknown call_tmp[825824] "maybe param" "maybe type" "temp"
        (825827 'move' call_tmp[825824](157943 call tmp[157942] 0))
        const searchErr[157926] "dead at end of block" "const" "insert auto destroy"
        (646772 'init var' searchErr[157926] call_tmp[825824])
        unknown call_tmp[825829] "maybe param" "maybe type" "temp"
        (825832 'move' call_tmp[825829](157946 call tmp[157942] 1))
        const found[157928] "dead at end of block" "const" "insert auto destroy"
        (646774 'init var' found[157928] call_tmp[825829])
        unknown call_tmp[825834] "maybe param" "maybe type" "temp"
        (825837 'move' call_tmp[825834](157949 call tmp[157942] 2))
        const relByteOffset[157930] "dead at end of block" "const" "insert auto destroy"
        (646776 'init var' relByteOffset[157930] call_tmp[825834])
        unknown call_tmp[825839] "maybe param" "maybe type" "temp"
        (825842 'move' call_tmp[825839](157952 call tmp[157942] 3))
        const match[157932] "dead at end of block" "const" "insert auto destroy"
        (646778 'init var' match[157932] call_tmp[825839])
        (157960 'end of statement')
        unknown tmp[489702] "maybe param" "temp"
        (489713 'move' tmp[489702](157976 call != searchErr[157926] 0))
        unknown call_tmp[825844] "expr temp" "maybe param" "maybe type" "temp"
        (825847 'move' call_tmp[825844](489715 call _cond_invalid tmp[489702]))
        if call_tmp[825844]
        {
          (489718 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682994] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682995] "maybe param" "temp"
        unknown call_tmp[825849] "expr temp" "maybe param" "maybe type" "temp"
        (825852 'move' call_tmp[825849](489703 call isTrue tmp[489702]))
        (683000 'move' tmp[682995](682998 call _cond_test call_tmp[825849]))
        if tmp[682995]
        {
          unknown tmp[683002] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[825854] "expr temp" "maybe param" "maybe type" "temp"
          (825857 'move' call_tmp[825854](434839 call EEOF[158629]))
          unknown call_tmp[825859] "expr temp" "maybe param" "maybe type" "temp"
          (825862 'move' call_tmp[825859](157980 call != searchErr[157926] call_tmp[825854]))
          (683004 'move' tmp[683002](489706 call isTrue call_tmp[825859]))
          (683009 'move' tmp[682994](683006 '_paramFoldLogical' tmp[682995] tmp[683002]))
        }
        {
          (683014 'move' tmp[682994](683011 '_paramFoldLogical' tmp[682995] 0))
        }
        unknown call_tmp[825864] "expr temp" "maybe param" "maybe type" "temp"
        (825867 'move' call_tmp[825864](157984 call _cond_test tmp[682994]))
        if call_tmp[825864]
        {
          Try
          {
            {
              (157966 call(157963 call (partial) _ch_ioerror _mt[203] this[157874]) searchErr[157926] "in readTo(regex(string))")
              (555679 'end of statement' searchErr[157926])
            }
          }
        }
        const numBytesToRead[157990] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[683021] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[683022] "maybe param" "temp"
        (683027 'move' tmp[683022](683025 call _cond_test found[157928]))
        if tmp[683022]
        {
          unknown tmp[683029] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (683031 'move' tmp[683029](157996 call numBytes _mt[203] match[157932]))
          (683036 'move' tmp[683021](683033 '_paramFoldLogical' tmp[683022] tmp[683029]))
        }
        {
          (683041 'move' tmp[683021](683038 '_paramFoldLogical' tmp[683022] 0))
        }
        unknown call_tmp[825873] "maybe param" "maybe type" "temp"
        (825876 'move' call_tmp[825873](157991 call - relByteOffset[157930] tmp[683021]))
        (646780 'init var' numBytesToRead[157990] call_tmp[825873])
        (158004 'end of statement')
        unknown call_tmp[825878] "expr temp" "maybe param" "maybe type" "temp"
        (825881 'move' call_tmp[825878](158013 call >= maxSize[157890] 0))
        unknown call_tmp[825883] "expr temp" "maybe param" "maybe type" "temp"
        (825886 'move' call_tmp[825883](158017 call _cond_test call_tmp[825878]))
        if call_tmp[825883]
        {
          unknown call_tmp[825890] "expr temp" "maybe param" "maybe type" "temp"
          (825893 'move' call_tmp[825890](158009 call _channel_internal _mt[203] this[157874]))
          (158006 call qio_channel_mark 0 call_tmp[825890])
        }
        unknown call_tmp[825897] "expr temp" "maybe param" "maybe type" "temp"
        (825900 'move' call_tmp[825897](158028 call _channel_internal _mt[203] this[157874]))
        unknown call_tmp[825902] "expr temp" "maybe param" "maybe type" "temp"
        (825905 'move' call_tmp[825902](158032 call - 1))
        unknown call_tmp[825907] "maybe param" "maybe type" "temp"
        (825910 'move' call_tmp[825907](158025 call readStringBytesData s[157884] call_tmp[825897] numBytesToRead[157990] call_tmp[825902]))
        const err[158023] "dead at end of block" "const" "insert auto destroy"
        (646782 'init var' err[158023] call_tmp[825907])
        (158036 'end of statement' relByteOffset[157930] found[157928] match[157932] numBytesToRead[157990])
        unknown call_tmp[825912] "expr temp" "maybe param" "maybe type" "temp"
        (825915 'move' call_tmp[825912](158132 call _cond_test err[158023]))
        if call_tmp[825912]
        {
          unknown call_tmp[825917] "expr temp" "maybe param" "maybe type" "temp"
          (825920 'move' call_tmp[825917](158045 call >= maxSize[157890] 0))
          unknown call_tmp[825922] "expr temp" "maybe param" "maybe type" "temp"
          (825925 'move' call_tmp[825922](158049 call _cond_test call_tmp[825917]))
          if call_tmp[825922]
          {
            unknown call_tmp[825929] "expr temp" "maybe param" "maybe type" "temp"
            (825932 'move' call_tmp[825929](158041 call _channel_internal _mt[203] this[157874]))
            (158039 call qio_channel_revert_unlocked call_tmp[825929])
          }
          Try
          {
            {
              (158059 call(158056 call (partial) _ch_ioerror _mt[203] this[157874]) err[158023] "in readTo(regex(string))")
              (555687 'end of statement' err[158023])
            }
          }
        }
        {
          unknown tmp[489723] "maybe param" "temp"
          (489734 'move' tmp[489723](158104 call >= maxSize[157890] 0))
          unknown call_tmp[825936] "expr temp" "maybe param" "maybe type" "temp"
          (825939 'move' call_tmp[825936](489736 call _cond_invalid tmp[489723]))
          if call_tmp[825936]
          {
            (489739 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[683075] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[683076] "maybe param" "temp"
          unknown call_tmp[825941] "expr temp" "maybe param" "maybe type" "temp"
          (825944 'move' call_tmp[825941](489724 call isTrue tmp[489723]))
          (683081 'move' tmp[683076](683079 call _cond_test call_tmp[825941]))
          if tmp[683076]
          {
            unknown tmp[683048] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[683049] "maybe param" "temp"
            (683054 'move' tmp[683049](683052 call _cond_test found[157928]))
            if tmp[683049]
            {
              unknown tmp[683056] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              (683058 'move' tmp[683056](158118 call numCodepoints _mt[203] match[157932]))
              (683063 'move' tmp[683048](683060 '_paramFoldLogical' tmp[683049] tmp[683056]))
            }
            {
              (683068 'move' tmp[683048](683065 '_paramFoldLogical' tmp[683049] 0))
            }
            unknown tmp[683083] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[825950] "expr temp" "maybe param" "maybe type" "temp"
            (825953 'move' call_tmp[825950](158113 call numCodepoints _mt[203] s[157884]))
            unknown call_tmp[825955] "expr temp" "maybe param" "maybe type" "temp"
            (825958 'move' call_tmp[825955](158110 call - call_tmp[825950] tmp[683048]))
            unknown call_tmp[825960] "expr temp" "maybe param" "maybe type" "temp"
            (825963 'move' call_tmp[825960](158108 call >= call_tmp[825955] maxSize[157890]))
            (683085 'move' tmp[683083](489727 call isTrue call_tmp[825960]))
            (683090 'move' tmp[683075](683087 '_paramFoldLogical' tmp[683076] tmp[683083]))
          }
          {
            (683095 'move' tmp[683075](683092 '_paramFoldLogical' tmp[683076] 0))
          }
          unknown call_tmp[825965] "expr temp" "maybe param" "maybe type" "temp"
          (825968 'move' call_tmp[825965](158126 call _cond_test tmp[683075]))
          if call_tmp[825965]
          {
            unknown call_tmp[825972] "expr temp" "maybe param" "maybe type" "temp"
            (825975 'move' call_tmp[825972](158070 call _channel_internal _mt[203] this[157874]))
            (158068 call qio_channel_revert_unlocked call_tmp[825972])
            (555690 'end of statement')
            Try
            {
              {
                unknown call_tmp[825979] "expr temp" "maybe param" "maybe type" "temp"
                (825982 'move' call_tmp[825979](434848 call EFORMAT[158612]))
                unknown call_tmp[825984] "expr temp" "maybe param" "maybe type" "temp"
                (825987 'move' call_tmp[825984](158079 call : call_tmp[825979] errorCode[12828]))
                (158078 call(158075 call (partial) _ch_ioerror _mt[203] this[157874]) call_tmp[825984] "in readTo(regex(string))")
              }
            }
          }
          {
            unknown call_tmp[825989] "expr temp" "maybe param" "maybe type" "temp"
            (825992 'move' call_tmp[825989](158094 call > maxSize[157890] 0))
            unknown call_tmp[825994] "expr temp" "maybe param" "maybe type" "temp"
            (825997 'move' call_tmp[825994](158098 call _cond_test call_tmp[825989]))
            if call_tmp[825994]
            {
              unknown call_tmp[826001] "expr temp" "maybe param" "maybe type" "temp"
              (826004 'move' call_tmp[826001](158091 call _channel_internal _mt[203] this[157874]))
              (158089 call qio_channel_commit_unlocked call_tmp[826001])
            }
          }
        }
      }
      (158143 'elided on block' 0 tmp[158139])
    }
    unknown call_tmp[826008] "expr temp" "maybe param" "maybe type" "temp"
    (826011 'move' call_tmp[826008](158151 call size _mt[203] s[157884]))
    unknown call_tmp[826013] "expr temp" "maybe param" "maybe type" "temp"
    (826016 'move' call_tmp[826013](158148 call > call_tmp[826008] 0))
    (612130 'move' ret[612124](612129 'coerce' call_tmp[826013] bool[19]))
    (612126 return ret[612124])
    (396741 'used modules list'(157901 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function fileReader[170893](?).readTo[158158](arg _mt[158180]:_MT[201], arg this[158161]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[158167] :
  (158165 call regex[156365](?) bytes[232]), ref arg b[158171]:bytes[232], arg maxSize[158177] :
  (1001999 call - 1) =
  (158174 call - 1)) : _unknown[42] throws "method"
  {
    unknown ret[612134] "RVV" "temp"
    {
      const tmp[158325] "const" "temp"
      unknown call_tmp[826020] "expr temp" "maybe param" "maybe type" "temp"
      (826023 'move' call_tmp[826020](158191 call _home _mt[203] this[158161]))
      unknown call_tmp[826025] "expr temp" "maybe param" "maybe type" "temp"
      (826028 'move' call_tmp[826025](158322 '_wide_get_locale' call_tmp[826020]))
      (158326 'move' tmp[158325](158323 'deref' call_tmp[826025]))
      {
        Try
        {
          {
            (158200 call(158197 call (partial) lock _mt[203] this[158161]))
          }
        }
        Defer
        {
          {
            (158209 call(158206 call (partial) unlock _mt[203] this[158161]))
          }
        }
        unknown call_tmp[826034] "maybe param" "maybe type" "temp"
        (826037 'move' call_tmp[826034](158222 call _findSeparator separator[158167] maxSize[158177] this[158161]))
        const tmp[158226] "dead at end of block" "const" "insert auto destroy" "temp"
        (646784 'init var' tmp[158226] call_tmp[826034])
        (158239 call _check_tuple_var_decl tmp[158226] 4)
        (555696 'end of statement')
        unknown call_tmp[826039] "maybe param" "maybe type" "temp"
        (826042 'move' call_tmp[826039](158227 call tmp[158226] 0))
        const searchErr[158213] "dead at end of block" "const" "insert auto destroy"
        (646786 'init var' searchErr[158213] call_tmp[826039])
        unknown call_tmp[826044] "maybe param" "maybe type" "temp"
        (826047 'move' call_tmp[826044](158230 call tmp[158226] 1))
        const found[158215] "dead at end of block" "const" "insert auto destroy"
        (646788 'init var' found[158215] call_tmp[826044])
        unknown call_tmp[826049] "maybe param" "maybe type" "temp"
        (826052 'move' call_tmp[826049](158233 call tmp[158226] 2))
        const relByteOffset[158217] "dead at end of block" "const" "insert auto destroy"
        (646790 'init var' relByteOffset[158217] call_tmp[826049])
        unknown call_tmp[826054] "maybe param" "maybe type" "temp"
        (826057 'move' call_tmp[826054](158236 call tmp[158226] 3))
        const match[158219] "dead at end of block" "const" "insert auto destroy"
        (646792 'init var' match[158219] call_tmp[826054])
        (158244 'end of statement')
        unknown tmp[489744] "maybe param" "temp"
        (489755 'move' tmp[489744](158260 call != searchErr[158213] 0))
        unknown call_tmp[826059] "expr temp" "maybe param" "maybe type" "temp"
        (826062 'move' call_tmp[826059](489757 call _cond_invalid tmp[489744]))
        if call_tmp[826059]
        {
          (489760 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[683102] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[683103] "maybe param" "temp"
        unknown call_tmp[826064] "expr temp" "maybe param" "maybe type" "temp"
        (826067 'move' call_tmp[826064](489745 call isTrue tmp[489744]))
        (683108 'move' tmp[683103](683106 call _cond_test call_tmp[826064]))
        if tmp[683103]
        {
          unknown tmp[683110] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[826069] "expr temp" "maybe param" "maybe type" "temp"
          (826072 'move' call_tmp[826069](434864 call EEOF[158629]))
          unknown call_tmp[826074] "expr temp" "maybe param" "maybe type" "temp"
          (826077 'move' call_tmp[826074](158264 call != searchErr[158213] call_tmp[826069]))
          (683112 'move' tmp[683110](489748 call isTrue call_tmp[826074]))
          (683117 'move' tmp[683102](683114 '_paramFoldLogical' tmp[683103] tmp[683110]))
        }
        {
          (683122 'move' tmp[683102](683119 '_paramFoldLogical' tmp[683103] 0))
        }
        unknown call_tmp[826079] "expr temp" "maybe param" "maybe type" "temp"
        (826082 'move' call_tmp[826079](158268 call _cond_test tmp[683102]))
        if call_tmp[826079]
        {
          Try
          {
            {
              (158250 call(158247 call (partial) _ch_ioerror _mt[203] this[158161]) searchErr[158213] "in readTo(regex(bytes))")
              (555698 'end of statement' searchErr[158213])
            }
          }
        }
        const numBytesToRead[158274] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[683129] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[683130] "maybe param" "temp"
        (683135 'move' tmp[683130](683133 call _cond_test found[158215]))
        if tmp[683130]
        {
          unknown tmp[683137] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (683139 'move' tmp[683137](158280 call numBytes _mt[203] match[158219]))
          (683144 'move' tmp[683129](683141 '_paramFoldLogical' tmp[683130] tmp[683137]))
        }
        {
          (683149 'move' tmp[683129](683146 '_paramFoldLogical' tmp[683130] 0))
        }
        unknown call_tmp[826088] "maybe param" "maybe type" "temp"
        (826091 'move' call_tmp[826088](158275 call - relByteOffset[158217] tmp[683129]))
        (646794 'init var' numBytesToRead[158274] call_tmp[826088])
        (158288 'end of statement')
        unknown call_tmp[826095] "expr temp" "maybe param" "maybe type" "temp"
        (826098 'move' call_tmp[826095](158298 call _channel_internal _mt[203] this[158161]))
        unknown call_tmp[826100] "maybe param" "maybe type" "temp"
        (826103 'move' call_tmp[826100](158295 call readStringBytesData module=[222] IO[208303] b[158171] call_tmp[826095] numBytesToRead[158274] 0))
        const err[158290] "dead at end of block" "const" "insert auto destroy"
        (646796 'init var' err[158290] call_tmp[826100])
        (158304 'end of statement' relByteOffset[158217] found[158215] match[158219] numBytesToRead[158274])
        unknown call_tmp[826105] "expr temp" "maybe param" "maybe type" "temp"
        (826108 'move' call_tmp[826105](158317 call _cond_test err[158290]))
        if call_tmp[826105]
        {
          Try
          {
            {
              (158310 call(158307 call (partial) _ch_ioerror _mt[203] this[158161]) err[158290] "in readTo(regex(bytes))")
              (555704 'end of statement' err[158290])
            }
          }
        }
        (404039 'referenced modules list' IO[208303])
      }
      (158329 'elided on block' 0 tmp[158325])
    }
    unknown call_tmp[826114] "expr temp" "maybe param" "maybe type" "temp"
    (826117 'move' call_tmp[826114](158337 call size _mt[203] b[158171]))
    unknown call_tmp[826119] "expr temp" "maybe param" "maybe type" "temp"
    (826122 'move' call_tmp[826119](158334 call > call_tmp[826114] 0))
    (612140 'move' ret[612134](612139 'coerce' call_tmp[826119] bool[19]))
    (612136 return ret[612134])
    (396743 'used modules list'(158188 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function _findSeparator[158344](arg separator[158350]:regex[156365](?), arg maxBytes[158356] :
  (1002003 call - 1) =
  (158353 call - 1), arg ch[158359]:_any[141](?)) : _unknown[42] throws "private"
  {
    unknown ret[612144] "RVV" "temp"
    (158381 call(158378 call (partial) mark _mt[203] ch[158359]))
    (555707 'end of statement')
    const maxNumBytes[158388] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[683156] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683157] "maybe param" "temp"
    unknown call_tmp[826126] "expr temp" "maybe param" "maybe type" "temp"
    (826129 'move' call_tmp[826126](158389 call < maxBytes[158356] 0))
    (683162 'move' tmp[683157](683160 call _cond_test call_tmp[826126]))
    if tmp[683157]
    {
      unknown tmp[683164] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (683166 'move' tmp[683164](158394 call max int(64)[10]))
      (683171 'move' tmp[683156](683168 '_paramFoldLogical' tmp[683157] tmp[683164]))
    }
    {
      (683176 'move' tmp[683156](683173 '_paramFoldLogical' tmp[683157] maxBytes[158356]))
    }
    (646798 'init var' maxNumBytes[158388] tmp[683156])
    const nm[158384] "dead at end of block" "const" "insert auto destroy"
    (646800 'init var' nm[158384] 1)
    (158401 'end of statement')
    unknown call_tmp[826131] "maybe param" "maybe type" "temp"
    (826134 'move' call_tmp[826131](158415 call _ddata_allocate qio_regex_string_piece_t[153880] nm[158384]))
    unknown matches[158413] "dead at end of block" "insert auto destroy"
    (646802 'init var' matches[158413] call_tmp[826131])
    unknown err[158408] "dead at end of block" "insert auto destroy"
    (646804 'init var' err[158408] 0 errorCode[12828])
    unknown separatorMatch[158404] "dead at end of block" "insert auto destroy"
    unknown call_tmp[826136] "expr temp" "maybe param" "maybe type" "temp"
    (826139 'move' call_tmp[826136](526518 'query' separator[158350] 1))
    (646806 'default init var' separatorMatch[158404] call_tmp[826136])
    (158419 'end of statement')
    unknown call_tmp[826143] "expr temp" "maybe param" "maybe type" "temp"
    (826146 'move' call_tmp[826143](158426 call _regex _mt[203] separator[158350]))
    unknown call_tmp[826150] "expr temp" "maybe param" "maybe type" "temp"
    (826153 'move' call_tmp[826150](158431 call _channel_internal _mt[203] ch[158359]))
    unknown call_tmp[826155] "expr temp" "maybe param" "maybe type" "temp"
    (826158 'move' call_tmp[826155](158424 call qio_regex_channel_match call_tmp[826143] 0 call_tmp[826150] maxNumBytes[158388] QIO_REGEX_ANCHOR_UNANCHORED[153850] 0 0 1 matches[158413] nm[158384]))
    (158420 call = err[158408] call_tmp[826155])
    (555709 'end of statement' err[158408] maxNumBytes[158388] matches[158413] nm[158384])
    unknown tmp[489765] "maybe param" "temp"
    unknown tmp[489786] "maybe param" "temp"
    (489797 'move' tmp[489786](158461 call != err[158408] 0))
    unknown call_tmp[826160] "expr temp" "maybe param" "maybe type" "temp"
    (826163 'move' call_tmp[826160](489799 call _cond_invalid tmp[489786]))
    if call_tmp[826160]
    {
      (489802 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683183] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683184] "maybe param" "temp"
    unknown call_tmp[826165] "expr temp" "maybe param" "maybe type" "temp"
    (826168 'move' call_tmp[826165](489787 call isTrue tmp[489786]))
    (683189 'move' tmp[683184](683187 call _cond_test call_tmp[826165]))
    if tmp[683184]
    {
      unknown tmp[683191] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826170] "expr temp" "maybe param" "maybe type" "temp"
      (826173 'move' call_tmp[826170](434891 call EEOF[158629]))
      unknown call_tmp[826175] "expr temp" "maybe param" "maybe type" "temp"
      (826178 'move' call_tmp[826175](158465 call != err[158408] call_tmp[826170]))
      (683193 'move' tmp[683191](489790 call isTrue call_tmp[826175]))
      (683198 'move' tmp[683183](683195 '_paramFoldLogical' tmp[683184] tmp[683191]))
    }
    {
      (683203 'move' tmp[683183](683200 '_paramFoldLogical' tmp[683184] 0))
    }
    (489776 'move' tmp[489765] tmp[683183])
    unknown call_tmp[826180] "expr temp" "maybe param" "maybe type" "temp"
    (826183 'move' call_tmp[826180](489778 call _cond_invalid tmp[489765]))
    if call_tmp[826180]
    {
      (489781 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683210] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683211] "maybe param" "temp"
    unknown call_tmp[826185] "expr temp" "maybe param" "maybe type" "temp"
    (826188 'move' call_tmp[826185](489766 call isTrue tmp[489765]))
    (683216 'move' tmp[683211](683214 call _cond_test call_tmp[826185]))
    if tmp[683211]
    {
      unknown tmp[683218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826190] "expr temp" "maybe param" "maybe type" "temp"
      (826193 'move' call_tmp[826190](434894 call EFORMAT[158612]))
      unknown call_tmp[826195] "expr temp" "maybe param" "maybe type" "temp"
      (826198 'move' call_tmp[826195](158469 call != err[158408] call_tmp[826190]))
      (683220 'move' tmp[683218](489769 call isTrue call_tmp[826195]))
      (683225 'move' tmp[683210](683222 '_paramFoldLogical' tmp[683211] tmp[683218]))
    }
    {
      (683230 'move' tmp[683210](683227 '_paramFoldLogical' tmp[683211] 0))
    }
    unknown call_tmp[826200] "expr temp" "maybe param" "maybe type" "temp"
    (826203 'move' call_tmp[826200](158473 call _cond_test tmp[683210]))
    if call_tmp[826200]
    {
      (158448 call(158445 call (partial) revert _mt[203] ch[158359]))
      (555716 'end of statement')
      unknown call_tmp[826207] "expr temp" "maybe param" "maybe type" "temp"
      (826210 'move' call_tmp[826207](158455 call _build_tuple err[158408] 0 0 separatorMatch[158404]))
      unknown call_tmp[826212] "expr temp" "maybe param" "maybe type" "temp"
      (826215 'move' call_tmp[826212](612153 'query' separator[158350] 1))
      unknown call_tmp[826217] "expr temp" "maybe param" "maybe type" "temp"
      (826220 'move' call_tmp[826217](612149 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826212]))
      (612157 'move' ret[612144](612156 'coerce' call_tmp[826207] call_tmp[826217]))
      gotoReturn _end__findSeparator[612142] _end__findSeparator[612142]
      (555717 'end of statement' err[158408] separatorMatch[158404])
    }
    unknown call_tmp[826222] "expr temp" "maybe param" "maybe type" "temp"
    (826225 'move' call_tmp[826222](158483 call matches[158413] 0))
    unknown call_tmp[826227] "maybe param" "maybe type" "temp"
    (826230 'move' call_tmp[826227](158481 call _to_regexMatch call_tmp[826222]))
    const m[158478] "dead at end of block" "const" "insert auto destroy"
    (646808 'init var' m[158478] call_tmp[826227] regexMatch[154054])
    (158486 'end of statement')
    (158493 call(158490 call (partial) _extractMatch _mt[203] ch[158359]) m[158478] separatorMatch[158404] err[158408])
    (555721 'end of statement' m[158478] separatorMatch[158404] err[158408])
    unknown tmp[489807] "maybe param" "temp"
    unknown tmp[489828] "maybe param" "temp"
    (489839 'move' tmp[489828](158515 call != err[158408] 0))
    unknown call_tmp[826234] "expr temp" "maybe param" "maybe type" "temp"
    (826237 'move' call_tmp[826234](489841 call _cond_invalid tmp[489828]))
    if call_tmp[826234]
    {
      (489844 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683237] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683238] "maybe param" "temp"
    unknown call_tmp[826239] "expr temp" "maybe param" "maybe type" "temp"
    (826242 'move' call_tmp[826239](489829 call isTrue tmp[489828]))
    (683243 'move' tmp[683238](683241 call _cond_test call_tmp[826239]))
    if tmp[683238]
    {
      unknown tmp[683245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826244] "expr temp" "maybe param" "maybe type" "temp"
      (826247 'move' call_tmp[826244](434905 call EEOF[158629]))
      unknown call_tmp[826249] "expr temp" "maybe param" "maybe type" "temp"
      (826252 'move' call_tmp[826249](158519 call != err[158408] call_tmp[826244]))
      (683247 'move' tmp[683245](489832 call isTrue call_tmp[826249]))
      (683252 'move' tmp[683237](683249 '_paramFoldLogical' tmp[683238] tmp[683245]))
    }
    {
      (683257 'move' tmp[683237](683254 '_paramFoldLogical' tmp[683238] 0))
    }
    (489818 'move' tmp[489807] tmp[683237])
    unknown call_tmp[826254] "expr temp" "maybe param" "maybe type" "temp"
    (826257 'move' call_tmp[826254](489820 call _cond_invalid tmp[489807]))
    if call_tmp[826254]
    {
      (489823 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683264] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683265] "maybe param" "temp"
    unknown call_tmp[826259] "expr temp" "maybe param" "maybe type" "temp"
    (826262 'move' call_tmp[826259](489808 call isTrue tmp[489807]))
    (683270 'move' tmp[683265](683268 call _cond_test call_tmp[826259]))
    if tmp[683265]
    {
      unknown tmp[683272] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826264] "expr temp" "maybe param" "maybe type" "temp"
      (826267 'move' call_tmp[826264](434908 call EFORMAT[158612]))
      unknown call_tmp[826269] "expr temp" "maybe param" "maybe type" "temp"
      (826272 'move' call_tmp[826269](158523 call != err[158408] call_tmp[826264]))
      (683274 'move' tmp[683272](489811 call isTrue call_tmp[826269]))
      (683279 'move' tmp[683264](683276 '_paramFoldLogical' tmp[683265] tmp[683272]))
    }
    {
      (683284 'move' tmp[683264](683281 '_paramFoldLogical' tmp[683265] 0))
    }
    unknown call_tmp[826274] "expr temp" "maybe param" "maybe type" "temp"
    (826277 'move' call_tmp[826274](158527 call _cond_test tmp[683264]))
    if call_tmp[826274]
    {
      (158502 call(158499 call (partial) revert _mt[203] ch[158359]))
      (555727 'end of statement')
      unknown call_tmp[826281] "expr temp" "maybe param" "maybe type" "temp"
      (826284 'move' call_tmp[826281](158509 call _build_tuple err[158408] 0 0 separatorMatch[158404]))
      unknown call_tmp[826286] "expr temp" "maybe param" "maybe type" "temp"
      (826289 'move' call_tmp[826286](612166 'query' separator[158350] 1))
      unknown call_tmp[826291] "expr temp" "maybe param" "maybe type" "temp"
      (826294 'move' call_tmp[826291](612162 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826286]))
      (612170 'move' ret[612144](612169 'coerce' call_tmp[826281] call_tmp[826291]))
      gotoReturn _end__findSeparator[612142] _end__findSeparator[612142]
      (555728 'end of statement' err[158408] separatorMatch[158404])
    }
    unknown call_tmp[826298] "maybe param" "maybe type" "temp"
    (826301 'move' call_tmp[826298](158537 call(158534 call (partial) offset _mt[203] ch[158359])))
    const endOffset[158532] "dead at end of block" "const" "insert auto destroy"
    (646810 'init var' endOffset[158532] call_tmp[826298])
    (158539 'end of statement')
    (158544 call(158541 call (partial) revert _mt[203] ch[158359]))
    (555731 'end of statement')
    unknown call_tmp[826307] "expr temp" "maybe param" "maybe type" "temp"
    (826310 'move' call_tmp[826307](158555 call(158552 call (partial) offset _mt[203] ch[158359])))
    unknown call_tmp[826312] "maybe param" "maybe type" "temp"
    (826315 'move' call_tmp[826312](158548 call - endOffset[158532] call_tmp[826307]))
    const numBytesRead[158546] "dead at end of block" "const" "insert auto destroy"
    (646812 'init var' numBytesRead[158546] call_tmp[826312] int(64)[10])
    (158557 'end of statement' nm[158384] matches[158413] endOffset[158532])
    (158559 call _ddata_free matches[158413] nm[158384])
    (555733 'end of statement' matches[158413] nm[158384])
    unknown tmp[489849] "maybe param" "temp"
    unknown call_tmp[826317] "expr temp" "maybe param" "maybe type" "temp"
    (826320 'move' call_tmp[826317](434915 call EFORMAT[158612]))
    (489860 'move' tmp[489849](158569 call == err[158408] call_tmp[826317]))
    unknown call_tmp[826322] "expr temp" "maybe param" "maybe type" "temp"
    (826325 'move' call_tmp[826322](489862 call _cond_invalid tmp[489849]))
    if call_tmp[826322]
    {
      (489865 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683291] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683292] "maybe param" "temp"
    unknown call_tmp[826327] "expr temp" "maybe param" "maybe type" "temp"
    (826330 'move' call_tmp[826327](489850 call isTrue tmp[489849]))
    (683297 'move' tmp[683292](683295 call _cond_test call_tmp[826327]))
    if tmp[683292]
    {
      unknown tmp[683299] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826332] "expr temp" "maybe param" "maybe type" "temp"
      (826335 'move' call_tmp[826332](158573 call < numBytesRead[158546] maxNumBytes[158388]))
      (683301 'move' tmp[683299](489853 call isTrue call_tmp[826332]))
      (683306 'move' tmp[683291](683303 '_paramFoldLogical' tmp[683292] tmp[683299]))
    }
    {
      (683311 'move' tmp[683291](683308 '_paramFoldLogical' tmp[683292] 0))
    }
    unknown call_tmp[826337] "expr temp" "maybe param" "maybe type" "temp"
    (826340 'move' call_tmp[826337](158577 call _cond_test tmp[683291]))
    if call_tmp[826337]
    {
      (158562 call = err[158408] 0)
      (555737 'end of statement' err[158408])
    }
    unknown call_tmp[826344] "expr temp" "maybe param" "maybe type" "temp"
    (826347 'move' call_tmp[826344](158586 call matched _mt[203] m[158478]))
    unknown call_tmp[826349] "expr temp" "maybe param" "maybe type" "temp"
    (826352 'move' call_tmp[826349](158591 call _build_tuple err[158408] call_tmp[826344] numBytesRead[158546] separatorMatch[158404]))
    unknown call_tmp[826354] "expr temp" "maybe param" "maybe type" "temp"
    (826357 'move' call_tmp[826354](612179 'query' separator[158350] 1))
    unknown call_tmp[826359] "expr temp" "maybe param" "maybe type" "temp"
    (826362 'move' call_tmp[826359](612175 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826354]))
    (612183 'move' ret[612144](612182 'coerce' call_tmp[826349] call_tmp[826359]))
    gotoReturn _end__findSeparator[612142] _end__findSeparator[612142]
    (555739 'end of statement' err[158408] m[158478] numBytesRead[158546] separatorMatch[158404])
    label _end__findSeparator[612142]
    (612146 return ret[612144])
    (396745 'used modules list'(158373 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    unknown call_tmp[826364] "expr temp" "maybe param" "maybe type" "temp"
    (826367 'move' call_tmp[826364](526521 'query' separator[158350] 1))
    (158366 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826364])
  }
  function |serializable[475232]() : _unknown[42] "ImplementsStmt wrapper"
  { serializable[310094] regex[156365](?)
    {
    }
    (612189 return _void[46])
  }
  (396730 'used modules list'(387020 'use' ChapelStandard[315387])(153599 'use' OS[15571])(153601 'use' CTypes[51217])(154293 'use' IO[208303]))
}
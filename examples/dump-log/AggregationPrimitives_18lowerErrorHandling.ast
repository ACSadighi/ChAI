AST dump for AggregationPrimitives after pass lowerErrorHandling.
Module use list: ChapelStandard CTypes Communication 

{
  function chpl__init_AggregationPrimitives[468603]() : void[4] "insert line file info" "module init" "resolved"
  {
    (631727 return _void[46])
  }
  function getEnvInt[313731](const  ref arg name[313734]:string[244], const in arg default[313738]:int(64)[10]) : int(64)[10] "resolved"
  {
    val ret[631672]:int(64)[10] "dead after last mention" "RVV" "temp"
    val call_tmp[940390]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (940393 'move' call_tmp[940390](313765 call localize[23546] name[313734]))
    val call_tmp[940397]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (940400 'move' call_tmp[940397](313769 call c_str[51169] call_tmp[940390]))
    val call_tmp[940402]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (940405 'move' call_tmp[940402](313760 call getenv[313743] call_tmp[940397]))
    const envValue[313758]:c_ptrConst(int(8))[1466333] "dead at end of block" "const" "insert auto destroy"
    (654235 'move' envValue[313758](1921961 call chpl__initCopy[1467266] call_tmp[940402] 1))
    (313771 'end of statement')
    val call_tmp[940407]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (940410 'move' call_tmp[940407](313775 call strLen[1511327] envValue[313758]))
    const len[313773]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (654237 'move' len[313773] call_tmp[940407])
    (313778 'end of statement')
    val call_tmp[940414]:string[244] "dead at end of block" "maybe param" "temp"
    val error[5498479]:unmanaged Error?[467980] "error variable" "temp"
    (5498481 'move' error[5498479] nil[32])
    (940417 'move' call_tmp[940414](313785 call createAdoptingBuffer[1539748] envValue[313758] len[313773] error[5498479]))
    if(5498488 'check error' error[5498479])
    {
      (5498484 call chpl_uncaught_error[87456] error[5498479])
    }
    const strval[313780]:string[244] "dead at end of block" "const" "insert auto destroy"
    (654239 'move' strval[313780] call_tmp[940414])
    (313791 'end of statement' envValue[313758] len[313773])
    val call_tmp[940421]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (940424 'move' call_tmp[940421](313799 call isEmpty[25458] strval[313780]))
    val call_tmp[940426]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (940429 'move' call_tmp[940426] call_tmp[940421])
    if call_tmp[940426]
    {
      (1921970 '=' ret[631672] default[313738])
      gotoReturn _end_getEnvInt[631670] _end_getEnvInt[631670]
    }
    val call_tmp[940431]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[5498492]:unmanaged Error?[467980] "error variable" "temp"
    (5498494 'move' error[5498492] nil[32])
    (940434 'move' call_tmp[940431](313805 call :[1751964] strval[313780] error[5498492]))
    if(5498501 'check error' error[5498492])
    {
      (5498497 call chpl_uncaught_error[87456] error[5498492])
    }
    (1921973 '=' ret[631672] call_tmp[940431])
    gotoReturn _end_getEnvInt[631670] _end_getEnvInt[631670]
    label _end_getEnvInt[631670]
    (631674 return ret[631672])
  }
  function getenv[313743](const in arg name[313748]:c_ptrConst(int(8))[1466333]) : c_ptrConst(int(8))[1466333] "extern" "local args" "no fn body" "resolved"
  {
  }
}
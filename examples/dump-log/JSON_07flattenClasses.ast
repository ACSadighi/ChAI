AST dump for JSON after pass flattenClasses.
Module use list: ChapelStandard IO CTypes Map List 

{
  unknown jsonWriter[353421] "type variable"(353423 call fileWriter[170987](?)(serializerType = jsonSerializer[354544]) ?[227])
  unknown jsonReader[353429] "type variable"(353431 call fileReader[170893](?)(deserializerType = jsonDeserializer[356412]) ?[227])
  function jsonSerializer[354544]._oldWrite[353437](arg _mt[353450]:_MT[201], arg this[353439]:jsonSerializer[354544], arg ch[353442] :
  jsonWriter[353421], const arg val[353447] :
  unknown t[353445]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown _def[353454](353455 'new'(353457 call defaultSerializer[171969]))
    (353459 'end of statement')
    unknown dc[353461](353466 call(353463 call . ch[353442] c"withSerializer") _def[353454])
    (353469 'end of statement')
    unknown st[353471](353476 call(353473 call . dc[353461] c"_styleInternal"))
    (353478 'end of statement')
    unknown orig[353480] st[353471]
    (353483 'end of statement')
    Defer
    {
      {
        (353489 call(353486 call . dc[353461] c"_set_styleInternal") orig[353480])
      }
    }
    (353493 call =(353498 call . st[353471] c"realfmt") 2)
    (353502 call =(353505 call . st[353471] c"string_format")(353508 call : json[164198](353517 call uint(64)[86] 8)))
    (353519 call =(353524 call . st[353471] c"aggregate_style")(353527 call : QIO_AGGREGATE_FORMAT_JSON[77225](353531 call uint(64)[86] 8)))
    (353533 call =(353538 call . st[353471] c"array_style")(353541 call : QIO_ARRAY_FORMAT_JSON[77210](353545 call uint(64)[86] 8)))
    (353547 call =(353552 call . st[353471] c"tuple_style")(353555 call : QIO_TUPLE_FORMAT_JSON[77240](353559 call uint(64)[86] 8)))
    (353565 call(353562 call . dc[353461] c"_set_styleInternal") st[353471])
    (353571 call(353568 call . dc[353461] c"_writeOne") dynamic[164113] val[353447](462469 call here[135591]))
  }
  function jsonSerializer[354544].serializeValue[353580](arg _mt[353593]:_MT[201], ref arg this[353582]:jsonSerializer[354544], arg writer[353585] :
  jsonWriter[353421], const arg val[353590] :
  unknown t[353588]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(353679 call _cond_test(353664 call ||(353666 call ||(353668 call == t[353588] string[244])(353673 call isEnumType t[353588]))(353675 call == t[353588] bytes[232])))
    {
      (353598 call(462473 call . this[353582] c"_oldWrite") writer[353585] val[353590])
    }
    {
      if(353659 call _cond_test(353651 call ||(353654 call isNumericType t[353588])(353657 call isBoolType t[353588])))
      {
        (353603 call(462479 call . this[353582] c"_oldWrite") writer[353585] val[353590])
      }
      {
        if(353647 call _cond_test(353645 call isClassType t[353588]))
        {
          if(353630 call _cond_test(353626 call == val[353590] nil[32]))
          {
            (353612 call(353609 call . writer[353585] c"writeLiteral") "null")
          }
          {
            (353621 call(353618 call .(353615 call postfix! val[353590]) c"serialize")(writer = writer[353585])(serializer = this[353582]))
          }
        }
        {
          (353639 call(353636 call . val[353590] c"serialize")(writer = writer[353585])(serializer = this[353582]))
        }
      }
    }
  }
  function jsonSerializer[354544].startClass[353686](arg _mt[353702]:_MT[201], arg this[353688]:jsonSerializer[354544], arg writer[353691] :
  jsonWriter[353421], arg name[353695] :
  string[244], arg size[353699] :
  int(64)[10]) : _unknown[42] throws "method" "primary method"
  {
    (353709 call(353706 call . writer[353691] c"writeLiteral") "{")
    (353711 return(353712 'new'(353714 call AggregateSerializer[353929](?) writer[353691](_ending = "}"))))
  }
  function jsonSerializer[354544].startRecord[353720](arg _mt[353736]:_MT[201], arg this[353722]:jsonSerializer[354544], arg writer[353725] :
  jsonWriter[353421], arg name[353729] :
  string[244], arg size[353733] :
  int(64)[10]) : _unknown[42] throws "method" "primary method"
  {
    (353743 call(353740 call . writer[353725] c"writeLiteral") "{")
    (353745 return(353746 'new'(353748 call AggregateSerializer[353929](?) writer[353725](_ending = "}"))))
  }
  function AggregateSerializer[353929](?).writeField[353784](arg _mt[353796]:_MT[201], ref arg this[353786]:AggregateSerializer[353929](?), arg name[353789] :
  string[244], const arg field[353793] :
  ?[227]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(353814 call _cond_test(353811 call !(462517 call . this[353786] c"_first")))
    {
      (353803 call(353800 call .(411070 call . this[353786] c"writer") c"writeLiteral") ", ")
    }
    {
      (353806 call =(462512 call . this[353786] c"_first") 0)
    }
    (353824 call(353821 call .(411075 call . this[353786] c"writer") c"write") name[353789])
    (353830 call(353827 call .(411080 call . this[353786] c"writer") c"writeLiteral") ":")
    (353836 call(353833 call .(411085 call . this[353786] c"writer") c"write") field[353793])
  }
  function AggregateSerializer[353929](?).startClass[353840](arg _mt[353854]:_MT[201], ref arg this[353842]:AggregateSerializer[353929](?), arg writer[353844]:_any[141](?), arg name[353847] :
  string[244], arg size[353851] :
  int(64)[10]) : _unknown[42] throws "method" "primary method"
  {
    (353857 return(353858 'new'(353860 call AggregateSerializer[353929](?) writer[353844](_parent = 1)(_firstPtr =(353865 call c_addrOf(462528 call . this[353842] c"_first"))))))
  }
  function AggregateSerializer[353929](?).endClass[353870](arg _mt[353874]:_MT[201], arg this[353872]:AggregateSerializer[353929](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(353905 call _cond_test(353902 call !(462548 call . this[353872] c"_parent")))
    {
      (353881 call(353878 call .(411090 call . this[353872] c"writer") c"writeLiteral")(462533 call . this[353872] c"_ending"))
    }
    {
      if(353897 call _cond_test(353893 call !=(462543 call . this[353872] c"_firstPtr") nil[32]))
      {
        (353884 call =(353890 call(353887 call .(411095 call . this[353872] c"_firstPtr") c"deref"))(462538 call . this[353872] c"_first"))
      }
    }
  }
  function AggregateSerializer[353929](?).endRecord[353913](arg _mt[353917]:_MT[201], arg this[353915]:AggregateSerializer[353929](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (353924 call(353921 call .(411100 call . this[353915] c"writer") c"writeLiteral")(462553 call . this[353915] c"_ending"))
  }
  function jsonSerializer[354544].startTuple[353931](arg _mt[353943]:_MT[201], arg this[353933]:jsonSerializer[354544], arg writer[353936] :
  jsonWriter[353421], arg size[353940] :
  int(64)[10]) : _unknown[42] throws "method" "primary method"
  {
    (353950 call(353947 call . writer[353936] c"writeLiteral") "[")
    (353952 return(353953 'new'(353955 call ListSerializer[354065](?) writer[353936])))
  }
  function jsonSerializer[354544].startList[353959](arg _mt[353971]:_MT[201], arg this[353961]:jsonSerializer[354544], arg writer[353964] :
  jsonWriter[353421], arg size[353968] :
  int(64)[10]) : _unknown[42] throws "method" "primary method"
  {
    (353978 call(353975 call . writer[353964] c"writeLiteral") "[")
    (353980 return(353981 'new'(353983 call ListSerializer[354065](?) writer[353964])))
  }
  function ListSerializer[354065](?).writeElement[353998](arg _mt[354006]:_MT[201], ref arg this[354000]:ListSerializer[354065](?), const arg element[354003] :
  ?[227]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(354024 call _cond_test(354021 call !(462574 call . this[354000] c"_first")))
    {
      (354013 call(354010 call .(411107 call . this[354000] c"writer") c"writeLiteral") ", ")
    }
    {
      (354016 call =(462569 call . this[354000] c"_first") 0)
    }
    (354034 call(354031 call .(411112 call . this[354000] c"writer") c"write") element[354003])
  }
  function ListSerializer[354065](?).endList[354038](arg _mt[354042]:_MT[201], arg this[354040]:ListSerializer[354065](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (354049 call(354046 call .(411117 call . this[354040] c"writer") c"writeLiteral") "]")
  }
  function ListSerializer[354065](?).endTuple[354053](arg _mt[354057]:_MT[201], arg this[354055]:ListSerializer[354065](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (354061 call(462579 call . this[354055] c"endList"))
  }
  function jsonSerializer[354544].startArray[354067](arg _mt[354079]:_MT[201], arg this[354069]:jsonSerializer[354544], arg writer[354072] :
  jsonWriter[353421], arg size[354076] :
  int(64)[10]) : _unknown[42] throws "method" "primary method"
  {
    (354082 return(354083 'new'(354085 call ArraySerializer[354336](?) writer[354072])))
  }
  function ArraySerializer[354336](?).startDim[354117](arg _mt[354125]:_MT[201], ref arg this[354119]:ArraySerializer[354336](?), arg size[354122] :
  int(64)[10]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (354128 call +=(462592 call . this[354119] c"_arrayDim") 1)
    if(354146 call _cond_test(354139 call <(354142 call .(411129 call . this[354119] c"_arrayFirst") c"size")(462597 call . this[354119] c"_arrayDim")))
    {
      (354137 call(354134 call .(411124 call . this[354119] c"_arrayFirst") c"pushBack") 1)
    }
    if(354173 call _cond_test(354168 call(462612 call . this[354119] c"_arrayFirst")(354169 call -(462617 call . this[354119] c"_arrayDim") 1)))
    {
      (354151 call =(354154 call(462602 call . this[354119] c"_arrayFirst")(354155 call -(462607 call . this[354119] c"_arrayDim") 1)) 0)
    }
    {
      (354165 call(354162 call .(411134 call . this[354119] c"writer") c"writeLiteral") ",")
    }
    (354177 call =(462622 call . this[354119] c"_arrayMax")(354181 call max(462627 call . this[354119] c"_arrayMax")(462632 call . this[354119] c"_arrayDim")))
    if(354206 call _cond_test(354202 call >(462642 call . this[354119] c"_arrayDim") 1))
    {
      (354189 call(354186 call .(411139 call . this[354119] c"writer") c"writeNewline"))
      (354194 call(354191 call .(411144 call . this[354119] c"writer") c"writeLiteral")(354195 call * " "(354198 call -(462637 call . this[354119] c"_arrayDim") 1)))
    }
    (354214 call(354211 call .(411149 call . this[354119] c"writer") c"writeLiteral") "[")
  }
  function ArraySerializer[354336](?).endDim[354218](arg _mt[354222]:_MT[201], ref arg this[354220]:ArraySerializer[354336](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(354247 call _cond_test(354243 call <(462652 call . this[354220] c"_arrayDim")(462657 call . this[354220] c"_arrayMax")))
    {
      (354230 call(354227 call .(411154 call . this[354220] c"writer") c"writeNewline"))
      (354235 call(354232 call .(411159 call . this[354220] c"writer") c"writeLiteral")(354236 call * " "(354239 call -(462647 call . this[354220] c"_arrayDim") 1)))
    }
    (354255 call(354252 call .(411164 call . this[354220] c"writer") c"writeLiteral") "]")
    if(354271 call _cond_test(354264 call <(462672 call . this[354220] c"_arrayDim")(354268 call .(411169 call . this[354220] c"_arrayFirst") c"size")))
    {
      (354257 call =(354260 call(462662 call . this[354220] c"_arrayFirst")(462667 call . this[354220] c"_arrayDim")) 1)
    }
    (354276 call -=(462677 call . this[354220] c"_arrayDim") 1)
    (354280 call =(462682 call . this[354220] c"_first") 1)
  }
  function ArraySerializer[354336](?).writeElement[354286](arg _mt[354294]:_MT[201], ref arg this[354288]:ArraySerializer[354336](?), const arg element[354291] :
  ?[227]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(354312 call _cond_test(354309 call !(462692 call . this[354288] c"_first")))
    {
      (354301 call(354298 call .(411174 call . this[354288] c"writer") c"writeLiteral") ", ")
    }
    {
      (354304 call =(462687 call . this[354288] c"_first") 0)
    }
    (354322 call(354319 call .(411179 call . this[354288] c"writer") c"write") element[354291])
  }
  function ArraySerializer[354336](?).endArray[354326](arg _mt[354330]:_MT[201], arg this[354328]:ArraySerializer[354336](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
  }
  function jsonSerializer[354544].startMap[354338](arg _mt[354350]:_MT[201], arg this[354340]:jsonSerializer[354544], arg writer[354343] :
  jsonWriter[353421], arg size[354347] :
  int(64)[10]) : _unknown[42] throws "method" "primary method"
  {
    (354357 call(354354 call . writer[354343] c"writeLiteral") "{")
    (354359 return(354360 'new'(354362 call MapSerializer[354541](?) writer[354343])))
  }
  function MapSerializer[354541](?).writeKey[354377](arg _mt[354385]:_MT[201], ref arg this[354379]:MapSerializer[354541](?), const arg key[354382] :
  ?[227]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(354425 call _cond_test(354422 call !(462709 call . this[354379] c"_first")))
    {
      (354393 call(354390 call .(411185 call . this[354379] c"writer") c"writeLiteral") ", ")
      (354399 call(354396 call .(411190 call . this[354379] c"writer") c"writeNewline"))
      (354404 call(354401 call .(411195 call . this[354379] c"writer") c"writeLiteral") "  ")
    }
    {
      (354411 call(354408 call .(411200 call . this[354379] c"writer") c"writeNewline"))
      (354416 call(354413 call .(411205 call . this[354379] c"writer") c"writeLiteral") "  ")
      (354418 call =(462704 call . this[354379] c"_first") 0)
    }
    if(354489 call _cond_test(354484 call ==(354487 'typeof' key[354382]) string[244]))
    {
      (354434 call(354431 call .(411210 call . this[354379] c"writer") c"write") key[354382])
    }
    {
      unknown f[354438](354440 call openMemFile)
      (354442 'end of statement')
      {
        (354459 call(354456 call .(354454 call(354451 call .(354448 call(354445 call . f[354438] c"writer")(locking = 0)) c"withSerializer") jsonSerializer[354544]) c"write") key[354382])
      }
      unknown tmp[354462] string[244]
      (354465 'end of statement')
      (354476 call(354473 call .(354470 call(354467 call . f[354438] c"reader")(locking = 0)) c"readAll") tmp[354462])
      (354482 call(354479 call .(411217 call . this[354379] c"writer") c"write") tmp[354462])
    }
  }
  function MapSerializer[354541](?).writeValue[354495](arg _mt[354503]:_MT[201], arg this[354497]:MapSerializer[354541](?), const arg val[354500] :
  ?[227]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (354510 call(354507 call .(411222 call . this[354497] c"writer") c"writeLiteral") ": ")
    (354516 call(354513 call .(411227 call . this[354497] c"writer") c"write") val[354500])
  }
  function MapSerializer[354541](?).endMap[354520](arg _mt[354524]:_MT[201], arg this[354522]:MapSerializer[354541](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (354531 call(354528 call .(411232 call . this[354522] c"writer") c"writeNewline"))
    (354536 call(354533 call .(411237 call . this[354522] c"writer") c"writeLiteral") "}")
  }
  type jsonSerializer[354544]
  function qio_channel_skip_json_field[354546](arg threadsafe[354549] :
  c_int[522], arg ch[354553] :
  qio_channel_ptr_t[164507]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode[12828]
  }
  function outOfOrderHelper[354560](arg reader[354563] :
  jsonReader[353429]) : _unknown[42] throws "private"
  {
    unknown m[354568](354570 call map[352283](?) string[244] int(64)[10])
    (354574 'end of statement')
    (354579 call(354576 call . reader[354563] c"mark"))
    (354584 call(354581 call . reader[354563] c"readLiteral") "{")
    unknown done[354587] 0
    (354590 'end of statement')
    unknown lastPos[354592](354593 call - 1)
    (354597 'end of statement')
    {
      unknown tmp[354681] "temp"
      (354703 'move' tmp[354681](354699 call _cond_test(354701 call ! done[354587])))
      WhileDo[354686]
      {
        {
          if(354627 call _cond_test(354625 call(354622 call . reader[354563] c"matchLiteral") "}"))
          {
            (354603 call = lastPos[354592](354606 call -(354612 call(354609 call . reader[354563] c"offset")) 1))
            (354614 call = done[354587] 1)
            break _breakLabel[354685] _breakLabel[354685]
          }
          (354635 call(354632 call . reader[354563] c"mark"))
          const name[354637] "const"(354642 call(354639 call . reader[354563] c"read") string[244])
          (354645 'end of statement')
          (354650 call(354647 call . reader[354563] c"readLiteral") ":")
          (354656 call(354653 call . m[354568] c"add") name[354637](354662 call(354659 call . reader[354563] c"offset")))
          (354667 call(354664 call . reader[354563] c"revert"))
          (354669 call qio_channel_skip_json_field 0(354672 call . reader[354563] c"_channel_internal"))
          (354679 call(354676 call . reader[354563] c"matchLiteral") ",")
        }
        label _continueLabel[354684]
        (354694 'move' tmp[354681](354690 call _cond_test(354692 call ! done[354587])))
        tmp[354681]
      }
      label _breakLabel[354685]
    }
    (354710 call(354707 call . reader[354563] c"revert"))
    (354711 return(354715 call _build_tuple m[354568] lastPos[354592]))
  }
  function jsonDeserializer[356412].init[354720](arg _mt[354724]:_MT[201], arg this[354722]:jsonDeserializer[356412]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (354731 call(354728 call . this[354722] c"chpl__initThisType"))
  }
  function jsonDeserializer[356412]._oldRead[354734](arg _mt[354747]:_MT[201], arg this[354736]:jsonDeserializer[356412], arg ch[354739] :
  jsonReader[353429], ref arg val[354744] :
  unknown t[354742]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown _def[354751](354752 'new'(354754 call defaultDeserializer[173096]))
    (354756 'end of statement')
    unknown dc[354758](354763 call(354760 call . ch[354739] c"withDeserializer") _def[354751])
    (354766 'end of statement')
    unknown st[354768](354773 call(354770 call . dc[354758] c"_styleInternal"))
    (354775 'end of statement')
    unknown orig[354777] st[354768]
    (354780 'end of statement')
    Defer
    {
      {
        (354786 call(354783 call . dc[354758] c"_set_styleInternal") orig[354777])
      }
    }
    (354790 call =(354793 call . st[354768] c"realfmt") 2)
    (354797 call =(354802 call . st[354768] c"bytes_prefix") 0)
    (354806 call =(354809 call . st[354768] c"string_format")(354812 call : json[164198](354819 call uint(64)[86] 8)))
    (354821 call =(354824 call . st[354768] c"aggregate_style")(354827 call : QIO_AGGREGATE_FORMAT_JSON[77225](354831 call uint(64)[86] 8)))
    (354833 call =(354836 call . st[354768] c"array_style")(354839 call : QIO_ARRAY_FORMAT_JSON[77210](354843 call uint(64)[86] 8)))
    (354845 call =(354848 call . st[354768] c"tuple_style")(354851 call : QIO_TUPLE_FORMAT_JSON[77240](354855 call uint(64)[86] 8)))
    (354861 call(354858 call . dc[354758] c"_set_styleInternal") st[354768])
    (354867 call(354864 call . dc[354758] c"_readOne") dynamic[164113] val[354744](462741 call here[135591]))
  }
  function jsonDeserializer[356412].deserializeType[354876](arg _mt[354886]:_MT[201], ref arg this[354878]:jsonDeserializer[356412], arg reader[354881] :
  jsonReader[353429], arg readType[354884]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(354907 call _cond_test(354896 call &&(354899 call isNilableClassType readType[354884])(354905 call(354902 call . reader[354881] c"matchLiteral") "null")))
    {
      (354891 return(354892 call : nil[32] readType[354884]))
    }
    if(355036 call _cond_test(355028 call ||(355031 call isNumericType readType[354884])(355034 call isBoolType readType[354884])))
    {
      unknown x[354913] readType[354884]
      (354916 'end of statement')
      (354921 call(354918 call . reader[354881] c"_readOne") dynamic[164113] x[354913](462749 call here[135591]))
      (354928 return x[354913])
    }
    {
      if(355023 call _cond_test(355015 call ||(355018 call isStringType readType[354884])(355021 call isBytesType readType[354884])))
      {
        unknown tmp[354932] readType[354884]
        (354935 'end of statement')
        (354937 call(462754 call . this[354878] c"_oldRead") reader[354881] tmp[354932])
        (354940 return tmp[354932])
      }
      {
        if(355010 call _cond_test(355008 call isEnumType readType[354884]))
        {
          (354947 call(354944 call . reader[354881] c"readLiteral") "\"")
          unknown ret[354950](354960 call(354957 call .(354955 call(354952 call . reader[354881] c"withDeserializer") defaultDeserializer[173096]) c"read") readType[354884])
          (354963 'end of statement')
          (354968 call(354965 call . reader[354881] c"readLiteral") "\"")
          (354970 return ret[354950])
        }
        {
          if(355003 call _cond_test(354992 call ||(354995 call canResolveTypeMethod readType[354884] "deserializeFrom" reader[354881] this[354878])(355001 call isArrayType readType[354884])))
          {
            (354973 return(354978 call(354975 call . readType[354884] c"deserializeFrom")(reader = reader[354881])(deserializer = this[354878])))
          }
          {
            (354984 return(354985 'new'(354987 call readType[354884](reader = reader[354881])(deserializer = this[354878]))))
          }
        }
      }
    }
  }
  { scopeless type
    readType[354884]
  }
  function jsonDeserializer[356412].deserializeValue[355044](arg _mt[355057]:_MT[201], ref arg this[355046]:jsonDeserializer[356412], arg reader[355049] :
  jsonReader[353429], ref arg val[355054] :
  unknown readType[355052]) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(355085 call _cond_test(355080 call canResolveMethod val[355054] "deserialize" reader[355049] this[355046]))
    {
      (355066 call(355063 call . val[355054] c"deserialize")(reader = reader[355049])(deserializer = this[355046]))
    }
    {
      (355072 call = val[355054](355076 call(462782 call . this[355046] c"deserializeType") reader[355049] readType[355052]))
    }
  }
  { scopeless type
    void[4]
  }
  function jsonDeserializer[356412].startClass[355092](arg _mt[355104]:_MT[201], arg this[355094]:jsonDeserializer[356412], arg reader[355097] :
  jsonReader[353429], arg name[355101] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    unknown tmp[355115] "temp"(355113 call outOfOrderHelper reader[355097])
    (355122 call _check_tuple_var_decl tmp[355115] 2)
    unknown m[355108](355116 call tmp[355115] 0)
    unknown last[355110](355119 call tmp[355115] 1)
    (355127 'end of statement')
    (355132 call(355129 call . reader[355097] c"readLiteral") "{")
    (355134 return(355135 'new'(355137 call AggregateDeserializer[355544](?) reader[355097] m[355108] last[355110])))
  }
  function jsonDeserializer[356412].startRecord[355143](arg _mt[355155]:_MT[201], arg this[355145]:jsonDeserializer[356412], arg reader[355148] :
  jsonReader[353429], arg name[355152] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    (355158 return(355160 call(462800 call . this[355145] c"startClass") reader[355148] name[355152]))
  }
  function AggregateDeserializer[355544](?)._readFieldName[355191](arg _mt[355203]:_MT[201], arg this[355193]:AggregateDeserializer[355544](?), arg reader[355196] :
  jsonReader[353429], arg key[355200] :
  string[244]) : _unknown[42] throws "method" "primary method"
  {
    Try
    {
      {
        (355211 call(355208 call . reader[355196] c"readLiteral") "\"")
        (355217 call(355214 call . reader[355196] c"readLiteral") key[355200])
        (355223 call(355220 call . reader[355196] c"readLiteral") "\"")
        (355229 call(355226 call . reader[355196] c"readLiteral") ":")
      }
    }
    Catch e : BadFormatError
    {
      unknown tmp[395671] "temp"(395675 'dynamic_cast' unmanaged BadFormatError?[468259](395674 'current error'))
      if(395678 '!=' tmp[395671] nil[32])
      {
        unknown e[355237](395688 'new'(395687 call _owned[238](?)(395684 'to non nilable class' tmp[395671])))
        {
          (355234 return 0)
        }
      }
      {
      }
    }
    (355241 return 1)
  }
  function AggregateDeserializer[355544](?).readField[355245](arg _mt[355255]:_MT[201], arg this[355247]:AggregateDeserializer[355544](?), arg name[355250] :
  string[244], arg fieldType[355253]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(355318 call _cond_test(355316 call(355313 call .(411300 call . this[355247] c"_fieldOffsets") c"contains") name[355250]))
    {
      (355264 call(355261 call .(411282 call . this[355247] c"reader") c"mark"))
      const dist[355266] "const"(355267 call -(355270 call(462813 call . this[355247] c"_fieldOffsets") name[355250])(355276 call(355273 call .(411287 call . this[355247] c"reader") c"offset")))
      (355278 'end of statement')
      (355283 call(355280 call .(411292 call . this[355247] c"reader") c"advance") dist[355266])
    }
    {
      if(355308 call _cond_test(355301 call !(355307 call(355304 call . name[355250] c"isEmpty"))))
      {
        (355286 'throw'(355287 'new'(355289 call IllegalArgumentError[414940](?)(355290 call +(355292 call + "field '" name[355250]) "' not found."))))
      }
    }
    unknown ret[355324](355329 call(355326 call .(411305 call . this[355247] c"reader") c"read") fieldType[355253])
    (355332 'end of statement')
    (355337 call(355334 call .(411310 call . this[355247] c"reader") c"matchLiteral") ",")
    if(355352 call _cond_test(355345 call !(355351 call(355348 call . name[355250] c"isEmpty"))))
    {
      (355343 call(355340 call .(411315 call . this[355247] c"reader") c"revert"))
    }
    (355357 return ret[355324])
  }
  { scopeless type
    fieldType[355253]
  }
  function AggregateDeserializer[355544](?).readField[355362](arg _mt[355372]:_MT[201], arg this[355364]:AggregateDeserializer[355544](?), arg name[355367] :
  string[244], ref arg field[355370]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(355430 call _cond_test(355428 call(355425 call .(411337 call . this[355364] c"_fieldOffsets") c"contains") name[355367]))
    {
      (355380 call(355377 call .(411321 call . this[355364] c"reader") c"mark"))
      const dist[355382] "const"(355383 call -(355386 call(462825 call . this[355364] c"_fieldOffsets") name[355367])(355392 call(355389 call .(411326 call . this[355364] c"reader") c"offset")))
      (355394 'end of statement')
      (355399 call(355396 call .(411331 call . this[355364] c"reader") c"advance") dist[355382])
    }
    {
      if(355420 call _cond_test(355413 call !(355419 call(355416 call . name[355367] c"isEmpty"))))
      {
        (355402 'throw'(355403 'new'(355405 call IllegalArgumentError[414940](?)(355406 call +(355408 call + "field '" name[355367]) "' not found."))))
      }
    }
    (355439 call(355436 call .(411342 call . this[355364] c"reader") c"read") field[355370])
    (355445 call(355442 call .(411347 call . this[355364] c"reader") c"matchLiteral") ",")
    if(355460 call _cond_test(355453 call !(355459 call(355456 call . name[355367] c"isEmpty"))))
    {
      (355451 call(355448 call .(411352 call . this[355364] c"reader") c"revert"))
    }
  }
  function AggregateDeserializer[355544](?).startClass[355467](arg _mt[355477]:_MT[201], ref arg this[355469]:AggregateDeserializer[355544](?), arg reader[355471]:_any[141](?), arg name[355474] :
  string[244]) : _unknown[42] "method" "primary method"
  {
    (355480 return(355481 'new'(355483 call AggregateDeserializer[355544](?) reader[355471](462840 call . this[355469] c"_fieldOffsets")(462847 call . this[355469] c"_lastPos")(_parent = 1))))
  }
  function AggregateDeserializer[355544](?).endClass[355491](arg _mt[355495]:_MT[201], arg this[355493]:AggregateDeserializer[355544](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(355526 call _cond_test(355523 call !(462858 call . this[355493] c"_parent")))
    {
      const dist[355500] "const"(355501 call -(462852 call . this[355493] c"_lastPos")(355508 call(355505 call .(411358 call . this[355493] c"reader") c"offset")))
      (355510 'end of statement')
      (355515 call(355512 call .(411363 call . this[355493] c"reader") c"advance") dist[355500])
      (355521 call(355518 call .(411368 call . this[355493] c"reader") c"readLiteral") "}")
    }
  }
  function AggregateDeserializer[355544](?).endRecord[355532](arg _mt[355536]:_MT[201], arg this[355534]:AggregateDeserializer[355544](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (355540 call(462862 call . this[355534] c"endClass"))
  }
  function jsonDeserializer[356412].startTuple[355546](arg _mt[355554]:_MT[201], arg this[355548]:jsonDeserializer[356412], arg reader[355551] :
  jsonReader[353429]) : _unknown[42] throws "method" "primary method"
  {
    (355557 return(355559 call(462867 call . this[355548] c"startList") reader[355551]))
  }
  function jsonDeserializer[356412].startList[355563](arg _mt[355571]:_MT[201], arg this[355565]:jsonDeserializer[356412], arg reader[355568] :
  jsonReader[353429]) : _unknown[42] throws "method" "primary method"
  {
    (355578 call(355575 call . reader[355568] c"readLiteral") "[")
    (355580 return(355581 'new'(355583 call ListDeserializer[355784](?) reader[355568])))
  }
  function ListDeserializer[355784](?).readElement[355598](arg _mt[355604]:_MT[201], ref arg this[355600]:ListDeserializer[355784](?), arg eltType[355602]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(355623 call _cond_test(355620 call !(462885 call . this[355600] c"_first")))
    {
      (355612 call(355609 call .(411374 call . this[355600] c"reader") c"readLiteral") ",")
    }
    {
      (355615 call =(462880 call . this[355600] c"_first") 0)
    }
    if(355649 call _cond_test(355642 call !(355648 call(355645 call . this[355600] c"hasMore"))))
    {
      (355629 'throw'(355630 'new'(355632 call BadFormatError[414425](?))))
    }
    {
      (355634 return(355639 call(355636 call .(411379 call . this[355600] c"reader") c"read") eltType[355602]))
    }
  }
  { scopeless type
    eltType[355602]
  }
  function ListDeserializer[355784](?).readElement[355658](arg _mt[355664]:_MT[201], ref arg this[355660]:ListDeserializer[355784](?), ref arg element[355662]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(355682 call _cond_test(355679 call !(462897 call . this[355660] c"_first")))
    {
      (355671 call(355668 call .(411385 call . this[355660] c"reader") c"readLiteral") ",")
    }
    {
      (355674 call =(462892 call . this[355660] c"_first") 0)
    }
    if(355707 call _cond_test(355700 call !(355706 call(355703 call . this[355660] c"hasMore"))))
    {
      (355688 'throw'(355689 'new'(355691 call BadFormatError[414425](?))))
    }
    {
      (355697 call(355694 call .(411390 call . this[355660] c"reader") c"read") element[355662])
    }
  }
  function ListDeserializer[355784](?).endList[355715](arg _mt[355719]:_MT[201], arg this[355717]:ListDeserializer[355784](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (355726 call(355723 call .(411396 call . this[355717] c"reader") c"readLiteral") "]")
  }
  function ListDeserializer[355784](?).endTuple[355730](arg _mt[355734]:_MT[201], arg this[355732]:ListDeserializer[355784](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (355738 call(462903 call . this[355732] c"endList"))
  }
  function ListDeserializer[355784](?).hasMore[355741](arg _mt[355745]:_MT[201], arg this[355743]:ListDeserializer[355784](?)) : _unknown[42] throws "method" "primary method"
  {
    (355753 call(355750 call .(411401 call . this[355743] c"reader") c"mark"))
    if(355776 call _cond_test(355774 call(355771 call .(411416 call . this[355743] c"reader") c"matchLiteral") "]"))
    {
      (355759 call(355756 call .(411406 call . this[355743] c"reader") c"revert"))
      (355760 return 0)
    }
    {
      (355767 call(355764 call .(411411 call . this[355743] c"reader") c"commit"))
      (355768 return 1)
    }
  }
  { scopeless type
    bool[19]
  }
  function jsonDeserializer[356412].startArray[355786](arg _mt[355794]:_MT[201], arg this[355788]:jsonDeserializer[356412], arg reader[355791] :
  jsonReader[353429]) : _unknown[42] throws "method" "primary method"
  {
    (355797 return(355798 'new'(355800 call ArrayDeserializer[356062](?) reader[355791])))
  }
  function ArrayDeserializer[356062](?).startDim[355832](arg _mt[355836]:_MT[201], ref arg this[355834]:ArrayDeserializer[356062](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (355839 call +=(462917 call . this[355834] c"_arrayDim") 1)
    if(355857 call _cond_test(355850 call <(355853 call .(411426 call . this[355834] c"_arrayFirst") c"size")(462922 call . this[355834] c"_arrayDim")))
    {
      (355848 call(355845 call .(411421 call . this[355834] c"_arrayFirst") c"pushBack") 1)
    }
    if(355884 call _cond_test(355879 call(462937 call . this[355834] c"_arrayFirst")(355880 call -(462942 call . this[355834] c"_arrayDim") 1)))
    {
      (355862 call =(355865 call(462927 call . this[355834] c"_arrayFirst")(355866 call -(462932 call . this[355834] c"_arrayDim") 1)) 0)
    }
    {
      (355876 call(355873 call .(411431 call . this[355834] c"reader") c"readLiteral") ",")
    }
    (355888 call =(462947 call . this[355834] c"_arrayMax")(355892 call max(462952 call . this[355834] c"_arrayMax")(462957 call . this[355834] c"_arrayDim")))
    (355899 call(355896 call .(411436 call . this[355834] c"reader") c"readLiteral") "[")
  }
  function ArrayDeserializer[356062](?).endDim[355903](arg _mt[355907]:_MT[201], ref arg this[355905]:ArrayDeserializer[356062](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(355934 call _cond_test(355930 call <(462967 call . this[355905] c"_arrayDim")(462972 call . this[355905] c"_arrayMax")))
    {
      (355917 call(355914 call .(411441 call . this[355905] c"reader") c"readNewline"))
      (355922 call(355919 call .(411446 call . this[355905] c"reader") c"readLiteral")(355923 call * " "(355926 call -(462962 call . this[355905] c"_arrayDim") 1)))
    }
    (355942 call(355939 call .(411451 call . this[355905] c"reader") c"readLiteral") "]")
    if(355958 call _cond_test(355951 call <(462987 call . this[355905] c"_arrayDim")(355955 call .(411456 call . this[355905] c"_arrayFirst") c"size")))
    {
      (355944 call =(355947 call(462977 call . this[355905] c"_arrayFirst")(462982 call . this[355905] c"_arrayDim")) 1)
    }
    (355963 call -=(462992 call . this[355905] c"_arrayDim") 1)
    (355967 call =(462997 call . this[355905] c"_first") 1)
  }
  function ArrayDeserializer[356062](?).readElement[355973](arg _mt[355979]:_MT[201], ref arg this[355975]:ArrayDeserializer[356062](?), arg eltType[355977]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(355998 call _cond_test(355995 call !(463008 call . this[355975] c"_first")))
    {
      (355987 call(355984 call .(411461 call . this[355975] c"reader") c"readLiteral") ", ")
    }
    {
      (355990 call =(463003 call . this[355975] c"_first") 0)
    }
    (356004 return(356009 call(356006 call .(411466 call . this[355975] c"reader") c"read") eltType[355977]))
  }
  { scopeless type
    eltType[355977]
  }
  function ArrayDeserializer[356062](?).readElement[356014](arg _mt[356020]:_MT[201], ref arg this[356016]:ArrayDeserializer[356062](?), ref arg element[356018]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    if(356038 call _cond_test(356035 call !(463019 call . this[356016] c"_first")))
    {
      (356027 call(356024 call .(411471 call . this[356016] c"reader") c"readLiteral") ", ")
    }
    {
      (356030 call =(463014 call . this[356016] c"_first") 0)
    }
    (356048 call(356045 call .(411476 call . this[356016] c"reader") c"read") element[356018])
  }
  function ArrayDeserializer[356062](?).endArray[356052](arg _mt[356056]:_MT[201], arg this[356054]:ArrayDeserializer[356062](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
  }
  function jsonDeserializer[356412].startMap[356064](arg _mt[356072]:_MT[201], arg this[356066]:jsonDeserializer[356412], arg reader[356069] :
  jsonReader[353429]) : _unknown[42] throws "method" "primary method"
  {
    (356079 call(356076 call . reader[356069] c"readLiteral") "{")
    (356081 return(356082 'new'(356084 call MapDeserializer[356409](?) reader[356069])))
  }
  function MapDeserializer[356409](?).readKey[356099](arg _mt[356105]:_MT[201], ref arg this[356101]:MapDeserializer[356409](?), arg keyType[356103]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    if(356124 call _cond_test(356121 call !(463037 call . this[356101] c"_first")))
    {
      (356113 call(356110 call .(411482 call . this[356101] c"reader") c"readLiteral") ",")
    }
    {
      (356116 call =(463032 call . this[356101] c"_first") 0)
    }
    if(356195 call _cond_test(356191 call == keyType[356103] string[244]))
    {
      (356131 return(356136 call(356133 call .(411487 call . this[356101] c"reader") c"read") string[244]))
    }
    {
      unknown f[356140](356142 call openMemFile)
      (356144 'end of statement')
      unknown s[356146](356151 call(356148 call .(411492 call . this[356101] c"reader") c"read") string[244])
      (356154 'end of statement')
      {
        (356171 call(356168 call .(356166 call(356163 call .(356160 call(356157 call . f[356140] c"writer")(locking = 0)) c"withSerializer") defaultSerializer[171969]) c"write") s[356146])
      }
      (356173 return(356189 call(356186 call .(356184 call(356181 call .(356178 call(356175 call . f[356140] c"reader")(locking = 0)) c"withDeserializer") jsonDeserializer[356412]) c"read") keyType[356103]))
    }
  }
  { scopeless type
    keyType[356103]
  }
  function MapDeserializer[356409](?).readKey[356202](arg _mt[356211]:_MT[201], ref arg this[356204]:MapDeserializer[356409](?), ref arg key[356208] :
  unknown t[356206]) : _unknown[42] throws "method" "primary method"
  {
    if(356229 call _cond_test(356226 call !(463052 call . this[356204] c"_first")))
    {
      (356218 call(356215 call .(411499 call . this[356204] c"reader") c"readLiteral") ",")
    }
    {
      (356221 call =(463047 call . this[356204] c"_first") 0)
    }
    if(356305 call _cond_test(356295 call ||(356297 call == t[356206] string[244])(356301 call == t[356206] bytes[232])))
    {
      (356240 call(356237 call .(411504 call . this[356204] c"reader") c"read") key[356208])
    }
    {
      unknown f[356244](356246 call openMemFile)
      (356248 'end of statement')
      unknown s[356250](356255 call(356252 call .(411509 call . this[356204] c"reader") c"read") string[244])
      (356258 'end of statement')
      {
        (356275 call(356272 call .(356270 call(356267 call .(356264 call(356261 call . f[356244] c"writer")(locking = 0)) c"withSerializer") defaultSerializer[171969]) c"write") s[356250])
      }
      (356277 return(356293 call(356290 call .(356288 call(356285 call .(356282 call(356279 call . f[356244] c"reader")(locking = 0)) c"withDeserializer") jsonDeserializer[356412]) c"read") key[356208]))
    }
  }
  function MapDeserializer[356409](?).readValue[356311](arg _mt[356317]:_MT[201], arg this[356313]:MapDeserializer[356409](?), arg valType[356315]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (356325 call(356322 call .(411516 call . this[356313] c"reader") c"readLiteral") ":")
    (356327 return(356332 call(356329 call .(411521 call . this[356313] c"reader") c"read") valType[356315]))
  }
  { scopeless type
    valType[356315]
  }
  function MapDeserializer[356409](?).readValue[356337](arg _mt[356343]:_MT[201], arg this[356339]:MapDeserializer[356409](?), ref arg value[356341]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (356350 call(356347 call .(411526 call . this[356339] c"reader") c"readLiteral") ":")
    (356356 call(356353 call .(411531 call . this[356339] c"reader") c"read") value[356341])
  }
  function MapDeserializer[356409](?).endMap[356360](arg _mt[356364]:_MT[201], arg this[356362]:MapDeserializer[356409](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (356371 call(356368 call .(411536 call . this[356362] c"reader") c"readLiteral") "}")
  }
  function MapDeserializer[356409](?).hasMore[356375](arg _mt[356379]:_MT[201], arg this[356377]:MapDeserializer[356409](?)) : _unknown[42] throws "method" "primary method"
  {
    (356387 call(356384 call .(411541 call . this[356377] c"reader") c"mark"))
    Defer
    {
      { scopeless
        (356392 call(356389 call .(411546 call . this[356377] c"reader") c"revert"))
      }
    }
    (356396 return(356397 call !(356403 call(356400 call .(411551 call . this[356377] c"reader") c"matchLiteral") "}")))
  }
  { scopeless type
    bool[19]
  }
  type jsonDeserializer[356412]
  function fromJson[356414](arg jsonString[356417] :
  string[244], arg loadAs[356420]:_any[141](?)) : _unknown[42] throws "@unstable"
  {
    unknown fileReader[356425](356427 call openStringReader jsonString[356417](deserializer =(356429 'new'(356431 call jsonDeserializer[356412]))))
    (356434 'end of statement')
    (356435 return(356440 call(356437 call . fileReader[356425] c"read") loadAs[356420]))
  }
  { scopeless type
    loadAs[356420]
  }
  function toJson[356445](arg arg[356447]:_any[141](?)) : _unknown[42] throws "@unstable"
  {
    unknown memWriter[356452](356454 call openMemFile)
    (356456 'end of statement')
    unknown writer[356458](356469 call(356466 call .(356463 call(356460 call . memWriter[356452] c"writer")(locking = 0)) c"withSerializer") jsonSerializer[354544])
    (356472 'end of statement')
    (356477 call(356474 call . writer[356458] c"write") arg[356447])
    (356483 call(356480 call . writer[356458] c"close"))
    (356484 return(356495 call(356492 call .(356489 call(356486 call . memWriter[356452] c"reader")(locking = 0)) c"readAll") string[244]))
  }
  { scopeless type
    string[244]
  }
  type AggregateSerializer[353929](?) unknown writer[353756] unknown _parent[353760] 0 bool[19] unknown _first[353766] 1 bool[19] const _ending[353772] "const" string[244] unknown _firstPtr[353777] nil[32](353779 call c_ptr[46891](?) bool[19])
  type ListSerializer[354065](?) unknown writer[353989] unknown _first[353993] 1 bool[19]
  type ArraySerializer[354336](?) unknown writer[354091] unknown _arrayDim[354095] int(64)[10] unknown _arrayFirst[354100](354102 call list[231871](?) bool[19]) unknown _arrayMax[354107] int(64)[10] unknown _first[354112] 1 bool[19]
  type MapSerializer[354541](?) unknown writer[354368] unknown _first[354372] 1 bool[19]
  type AggregateDeserializer[355544](?) unknown reader[355167] unknown _fieldOffsets[355171](355173 call map[352283](?) string[244] int(64)[10]) unknown _lastPos[355179](355180 call - 1) unknown _parent[355186] 0 bool[19]
  type ListDeserializer[355784](?) unknown reader[355589] unknown _first[355593] 1 bool[19]
  type ArrayDeserializer[356062](?) unknown reader[355806] unknown _first[355810] 1 bool[19] unknown _arrayDim[355816] 0 unknown _arrayMax[355821] 0 unknown _arrayFirst[355826](355828 call list[231871](?) bool[19])
  type MapDeserializer[356409](?) unknown reader[356090] unknown _first[356094] 1 bool[19]
  (397191 'used modules list'(387090 'use' ChapelStandard[315387])(353409 'use' IO[208303])(353412 'use' CTypes[51217])(353415 'use' Map[352858])(353418 'use' List[232161]))
}
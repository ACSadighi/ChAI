AST dump for OrderedDict after pass refPropagation.
Module use list: ChapelStandard List Map 

{
  function chpl__init_OrderedDict[468663]() : void[4] "insert line file info" "module init" "resolved"
  {
    (637599 return _void[46])
  }
  function dict(string,string)[3380632].init[3381805](ref arg this[3381809]:dict(string,string)[3380632], const  ref arg table[3381811]:map(string,string,false)[3283386], const  ref arg order[3381813]:list(string,false)[1950598]) : void[4] "compiler added where" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val _formal_tmp_table[3381946]:map(string,string,false)[3283386] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3381950 'move' _formal_tmp_table[3381946] table[3381811])
    const-val _formal_tmp_order[3381947]:list(string,false)[1950598] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3381954 'move' _formal_tmp_order[3381947] order[3381813])
    val table[3381907]:map(string,string,false)[3283386] "dead after last mention" "temp"
    (5635505 '=' table[3381907] _formal_tmp_table[3381946])
    (3381909 'noop')
    (3381913 '.=' this[3381809] table[3380620] table[3381907])
    val order[3381932]:list(string,false)[1950598] "dead after last mention" "temp"
    (5635508 '=' order[3381932] _formal_tmp_order[3381947])
    (3381934 'noop')
    (3381938 '.=' this[3381809] order[3380626] order[3381932])
    (3381943 return _void[46])
  }
  function dict(string,string)[3380632].init[3381222](ref arg this[3381226]:dict(string,string)[3380632], const  ref arg table[3381228]:map(string,string,false)[3283386]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_table[3381320]:map(string,string,false)[3283386] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3381323 'move' _formal_tmp_table[3381320] table[3381228])
    const-val call_tmp[3381241]:list(string,false)[1950598] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3381332]:list(string,false)[1950598] "dead at end of block" "delay instantiation" "temp"
    (3381335 call init[1950142] initTemp[3381332])
    (3381243 'move' call_tmp[3381241] initTemp[3381332])
    val ks[3381248]:list(string,false)[1950598] "dead at end of block" "delay instantiation" "insert auto destroy" "maybe copy elided"
    (3381250 'move' ks[3381248] call_tmp[3381241])
    ref i_this[8462059]:map(string,string,false)[3283386] "temp"
    (8462063 'move' i_this[8462059](8462061 'set reference' _formal_tmp_table[3381320]))
    ref call_tmp[8458215]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458217 'move' call_tmp[8458215](8458219 '.' i_this[8462059] table[3283371]))
    ref call_tmp[8458225]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp"
    (8458227 'move' call_tmp[8458225](8458229 '.' i_this[8462059] table[3283371]))
    const-val call_tmp_F0_size[9110519]:int(64)[10] "temp"
    const-val coerce_tmp[6392690]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6392692 'move' coerce_tmp[6392690](9221442 '.v' call_tmp[8458215] tableSize[3283416]))
    const-val ret_tmp_F0_size[9110527]:int(64)[10] "temp"
    const-val _ir_F0_size[9110623]:int(64)[10] "temp"
    (7613841 'move' _ir_F0_size[9110623] coerce_tmp[6392690])
    (9110533 'move' ret_tmp_F0_size[9110527] _ir_F0_size[9110623])
    (9110525 'move' call_tmp_F0_size[9110519] ret_tmp_F0_size[9110527])
    const-val _ic__F0_size[9003368]:int(64)[10] "temp"
    const-val tmp[7890897]:int(64)[10] "temp"
    (7890899 'move' tmp[7890897] call_tmp_F0_size[9110519])
    (7890904 'move' _ic__F0_size[9003368] tmp[7890897])
    const-val call_tmp_F0_low[9194212]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9194214]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9194228]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9194230]:int(64)[10] "temp"
    const-val size[6392721]:int(64)[10] "temp"
    (6392723 'move' size[6392721] _ic__F0_size[9003368])
    val inlineImm[7433560]:int(64)[10] "temp"
    (7433563 'move' inlineImm[7433560] 0)
    const-val _ir_F0_low[9194684]:int(64)[10] "temp"
    const-val _ir_F1_count[9194686]:int(64)[10] "temp"
    (7433574 'move' _ir_F0_low[9194684] inlineImm[7433560])
    (7433578 'move' _ir_F1_count[9194686] size[6392721])
    (9194236 'move' ret_tmp_F0_low[9194228] _ir_F0_low[9194684])
    (9194241 'move' ret_tmp_F1_count[9194230] _ir_F1_count[9194686])
    (9194220 'move' call_tmp_F0_low[9194212] ret_tmp_F0_low[9194228])
    (9194225 'move' call_tmp_F1_count[9194214] ret_tmp_F1_count[9194230])
    const-val _ic__F0_low[9005310]:int(64)[10] "temp"
    const-val _ic__F1_count[9005312]:int(64)[10] "temp"
    const-val tmp[7437301]:int(64)[10] "temp"
    (7437303 'move' tmp[7437301] call_tmp_F0_low[9194212])
    (7437308 'move' _ic__F0_low[9005310] tmp[7437301])
    const-val tmp[7437312]:int(64)[10] "temp"
    (7437314 'move' tmp[7437312] call_tmp_F1_count[9194214])
    (7437319 'move' _ic__F1_count[9005312] tmp[7437312])
    const-val call_tmp_F0_low[9078571]:int(64)[10] "temp"
    const-val call_tmp_F1_count[9078573]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9078587]:int(64)[10] "temp"
    const-val ret_tmp_F1_count[9078589]:int(64)[10] "temp"
    const-val low[6392766]:int(64)[10] "temp"
    (6392768 'move' low[6392766] _ic__F0_low[9005310])
    const-val count[6392773]:int(64)[10] "temp"
    (6392775 'move' count[6392773] _ic__F1_count[9005312])
    const-val _ir_F0_low[9078995]:int(64)[10] "temp"
    const-val _ir_F1_count[9078997]:int(64)[10] "temp"
    (7438957 'move' _ir_F0_low[9078995] low[6392766])
    (7438961 'move' _ir_F1_count[9078997] count[6392773])
    (9078595 'move' ret_tmp_F0_low[9078587] _ir_F0_low[9078995])
    (9078600 'move' ret_tmp_F1_count[9078589] _ir_F1_count[9078997])
    (9078579 'move' call_tmp_F0_low[9078571] ret_tmp_F0_low[9078587])
    (9078584 'move' call_tmp_F1_count[9078573] ret_tmp_F1_count[9078589])
    const-val _ic__F0_low[9015741]:int(64)[10] "temp"
    const-val _ic__F1_count[9015743]:int(64)[10] "temp"
    const-val tmp[7442253]:int(64)[10] "temp"
    (7442255 'move' tmp[7442253] call_tmp_F0_low[9078571])
    (7442260 'move' _ic__F0_low[9015741] tmp[7442253])
    const-val tmp[7442264]:int(64)[10] "temp"
    (7442266 'move' tmp[7442264] call_tmp_F1_count[9078573])
    (7442271 'move' _ic__F1_count[9015743] tmp[7442264])
    const-val call_tmp[6392824]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6392826]:int(64)[10] "temp"
    (6392828 'move' count[6392826] _ic__F1_count[9015743])
    val inlineImm[7321872]:int(64)[10] "temp"
    (7321875 'move' inlineImm[7321872] 0)
    const-val tmp[7321878]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7321880 'move' tmp[7321878](7321882 '<' count[6392826] inlineImm[7321872]))
    (6392833 'move' call_tmp[6392824] tmp[7321878])
    if call_tmp[6392824]
    {
      (6392853 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[6392856]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[6392858]:int(64)[10] "temp"
    (6392860 'move' low[6392858] _ic__F0_low[9015741])
    (6392865 'move' start[6392856] low[6392858])
    val tmp[6392870]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[6392874]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[6392876]:int(64)[10] "temp"
    (6392878 'move' count[6392876] _ic__F1_count[9015743])
    val inlineImm[7390628]:int(64)[10] "temp"
    (7390631 'move' inlineImm[7390628] 0)
    const-val call_tmp[7390634]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7390636 'move' call_tmp[7390634](7390638 '==' count[6392876] inlineImm[7390628]))
    (6392883 'move' call_tmp[6392874] call_tmp[7390634])
    if call_tmp[6392874]
    {
      const-val tmp[6392894]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[6392896]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6392898]:int(64)[10] "temp"
      (6392900 'move' low[6392898] _ic__F0_low[9015741])
      (6392905 'move' call_tmp[6392896](6392907 'cast' uint(64)[86] low[6392898]))
      const-val call_tmp[6392910]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7443338]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7443340 'move' call_tmp[7443338](7443342 '-' call_tmp[6392896] 1))
      (6392919 'move' call_tmp[6392910] call_tmp[7443338])
      const-val call_tmp[7444548]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444550 'move' call_tmp[7444548](7444552 'cast' int(64)[10] call_tmp[6392910]))
      (6392926 'move' tmp[6392894] call_tmp[7444548])
      (6392931 'move' tmp[6392870] tmp[6392894])
    }
    {
      const-val call_tmp[6392951]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[6392953]:int(64)[10] "temp"
      (6392955 'move' count[6392953] _ic__F1_count[9015743])
      const-val call_tmp[7447578]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7447580 'move' call_tmp[7447578](7447582 '-' count[6392953] 1))
      (6392960 'move' call_tmp[6392951] call_tmp[7447578])
      const-val call_tmp[6392965]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[6392967]:int(64)[10] "temp"
      (6392969 'move' low[6392967] _ic__F0_low[9015741])
      const-val call_tmp[7374975]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7374977 'move' call_tmp[7374975](7374979 '+' low[6392967] call_tmp[6392951]))
      (6392974 'move' call_tmp[6392965] call_tmp[7374975])
      (6392985 'move' tmp[6392870] call_tmp[6392965])
    }
    const-val call_tmp_F0_low[9168108]:int(64)[10] "temp"
    const-val call_tmp_F1_high[9168110]:int(64)[10] "temp"
    const-val ret_tmp_F0_low[9168124]:int(64)[10] "temp"
    const-val ret_tmp_F1_high[9168126]:int(64)[10] "temp"
    const-val _ir_F0_low[9170172]:int(64)[10] "temp"
    const-val _ir_F1_high[9170174]:int(64)[10] "temp"
    (7450664 'move' _ir_F0_low[9170172] start[6392856])
    (7450668 'move' _ir_F1_high[9170174] tmp[6392870])
    (9168132 'move' ret_tmp_F0_low[9168124] _ir_F0_low[9170172])
    (9168137 'move' ret_tmp_F1_high[9168126] _ir_F1_high[9170174])
    (9168116 'move' call_tmp_F0_low[9168108] ret_tmp_F0_low[9168124])
    (9168121 'move' call_tmp_F1_high[9168110] ret_tmp_F1_high[9168126])
    const-val _ic__F0_low[9018778]:int(64)[10] "temp"
    const-val _ic__F1_high[9018780]:int(64)[10] "temp"
    const-val tmp[7459181]:int(64)[10] "temp"
    (7459183 'move' tmp[7459181] call_tmp_F0_low[9168108])
    (7459188 'move' _ic__F0_low[9018778] tmp[7459181])
    const-val tmp[7459192]:int(64)[10] "temp"
    (7459194 'move' tmp[7459192] call_tmp_F1_high[9168110])
    (7459199 'move' _ic__F1_high[9018780] tmp[7459192])
    val i[6393022]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6393026 'move' i[6393022] 0)
    const-val default_arg_first[6393037]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[6393039]:int(64)[10] "temp"
    (6393041 'move' low[6393039] _ic__F0_low[9018778])
    (6393046 'move' default_arg_first[6393037] low[6393039])
    const-val default_arg_last[6393051]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[6393053]:int(64)[10] "temp"
    (6393055 'move' high[6393053] _ic__F1_high[9018780])
    (6393060 'move' default_arg_last[6393051] high[6393053])
    const-val low[6393069]:int(64)[10] "temp"
    (6393071 'move' low[6393069] _ic__F0_low[9018778])
    const-val high[6393076]:int(64)[10] "temp"
    (6393078 'move' high[6393076] _ic__F1_high[9018780])
    (6393086 call chpl_checkIfRangeIterWillOverflow[1518856] low[6393069] high[6393076] 1 default_arg_first[6393037] default_arg_last[6393051] 1)
    CForLoop[6393093] hazard
    {
      const-val _yieldedIndex[6393129]:int(64)[10] "temp"
      (6393131 'move' _yieldedIndex[6393129] i[6393022])
      const-val _yieldedIndex[6393145]:int(64)[10] "temp"
      (6393147 'move' _yieldedIndex[6393145] _yieldedIndex[6393129])
      const-val _yieldedIndex[6393161]:int(64)[10] "temp"
      (6393163 'move' _yieldedIndex[6393161] _yieldedIndex[6393145])
      const-val _yieldedIndex[6393177]:int(64)[10] "temp"
      (6393179 'move' _yieldedIndex[6393177] _yieldedIndex[6393161])
      const-val _yieldedIndex[6393236]:int(64)[10] "temp"
      (6393329 'move' _yieldedIndex[6393236] _yieldedIndex[6393177])
      const-val slot[6393238]:int(64)[10] "const" "index var" "insert auto destroy"
      (6393240 'move' slot[6393238] _yieldedIndex[6393236])
      const-val call_tmp[6393243]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
      (6393245 'move' call_tmp[6393243] call_tmp[8458225])
      const-val call_tmp[6393248]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[8458703]:chpl__hashtable(string,string)[3283441] "temp"
      (8458707 'move' i_this[8458703](8458705 'set reference' call_tmp[6393243]))
      val coerce_tmp[8458710]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8458712 'move' coerce_tmp[8458710](8458714 '.v' i_this[8458703] table[3283419]))
      ref call_tmp[8458717]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "maybe param" "temp"
      (8458719 'move' call_tmp[8458717](8458721 'array_get' coerce_tmp[8458710] _yieldedIndex[6393236]))
      const-val coerce_tmp[8458724]:chpl__hash_status[264678] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8458726 'move' coerce_tmp[8458724](8458728 '.v' call_tmp[8458717] status[3283465]))
      const-val call_tmp[8458731]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8458733 'move' call_tmp[8458731](8458735 '==' coerce_tmp[8458724] full[264674]))
      (6393250 'move' call_tmp[6393248] call_tmp[8458731])
      if call_tmp[6393248]
      {
        val call_tmp[6393265]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
        (6393267 'move' call_tmp[6393265] call_tmp[8458225])
        ref i_this[8457356]:chpl__hashtable(string,string)[3283441] "temp"
        (8457360 'move' i_this[8457356](8457358 'set reference' call_tmp[6393265]))
        val coerce_tmp[6393279]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (6393281 'move' coerce_tmp[6393279](9221448 '.v' i_this[8457356] table[3283419]))
        ref call_tmp[8457912]:chpl_TableEntry(string,string)[3283473] "dead after last mention" "maybe param" "temp"
        (8457914 'move' call_tmp[8457912](8457916 'array_get' coerce_tmp[6393279] slot[6393238]))
        ref call_tmp[8458852]:string[244] "dead after last mention" "maybe param" "temp"
        (8458854 'move' call_tmp[8458852](8458856 '.' call_tmp[8457912] key[3283469]))
        const-val _formal_tmp_in_x[6393309]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
        val ret[7612952]:string[244] "dead after last mention" "RVV" "temp"
        const-val tmp[7612954]:string[244] "dead after last mention" "temp"
        (7612957 call init=[21330] tmp[7612954] call_tmp[8458852])
        (7612960 'move' ret[7612952] tmp[7612954])
        (6393311 'move' _formal_tmp_in_x[6393309] ret[7612952])
        (6393322 call pushBack[3253361] ks[3381248] _formal_tmp_in_x[6393309])
      }
      {
        const-val low[6393095]:int(64)[10] "temp"
        (6393097 'move' low[6393095] _ic__F0_low[9018778])
        (6393102 '=' i[6393022] low[6393095])
      }
      {
        const-val high[6393106]:int(64)[10] "temp"
        (6393108 'move' high[6393106] _ic__F1_high[9018780])
        (6393113 '<=' i[6393022] high[6393106])
      }
      {
        (6393121 '+=' i[6393022] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6393212]
    label _endchpl_direct_counted_range_iter_helper[6393217]
    label _endchpl_direct_counted_range_iter[6393222]
    label _end_allSlots[6393227]
    label _endallSlots[6393232]
    label _endkeys[6060454]
    const-val _formal_tmp_in_table[3385998]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635488 '=' _formal_tmp_in_table[3385998] _formal_tmp_table[3381320])
    (3386003 'noop')
    const-val _formal_tmp_in_order[3386047]:list(string,false)[1950598] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635485 '=' _formal_tmp_in_order[3386047] ks[3381248])
    (3386052 'noop')
    (3381312 call init[3381805] this[3381226] _formal_tmp_in_table[3385998] _formal_tmp_in_order[3386047])
    (3381317 return _void[46])
  }
  function dict(string,shared Module(real(32)))[3391211].init[3391081](ref arg this[3391085]:dict(string,shared Module(real(32)))[3391211]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[3391117]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3391221]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg_resizeThreshold[3396022]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val resizeThreshold[8463374]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (8463376 'move' resizeThreshold[8463374] defaultHashTableResizeThreshold[209951])
    (3396026 'move' default_arg_resizeThreshold[3396022] resizeThreshold[8463374])
    (3391224 call init[3391230] initTemp[3391221] default_arg_resizeThreshold[3396022] 16)
    (3391119 'move' call_tmp[3391117] initTemp[3391221])
    val table[3391147]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "delay instantiation" "temp"
    (3391149 'move' table[3391147] call_tmp[3391117])
    (3391153 '.=' this[3391085] table[3391199] table[3391147])
    const-val call_tmp[3391158]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3396080]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "temp"
    (3396083 call init[1950142] initTemp[3396080])
    (3391160 'move' call_tmp[3391158] initTemp[3396080])
    val order[3391179]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "temp"
    (3391181 'move' order[3391179] call_tmp[3391158])
    (3391185 '.=' this[3391085] order[3391205] order[3391179])
    (3391190 return _void[46])
  }
  type _ic_these__ref_dict_string__shared_Module__real32[3408154] val super[3408155]:RootClass[236] "super class" val more[3408157]:int(64)[10] ref F0_this[7090241]:dict(string,shared Module(real(32)))[3391211] val F1__iterator[7090245]:_ic_these__ref_list_string_F[3384642] val F2__iterator[7090247]:_ic_chpl_direct_counted_range_iter[1520064] val F3__iterator[7090249]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F4__iterator[7090251]:_ic_chpl_direct_param_stride_range_iter[1519526] val F5_i[7090253]:int(64)[10] const-val F6_ret_tmp[7090255]:(string,shared Module(real(32)))[3407887] val F7_call_tmp[7090257]:(string,shared Module(real(32)))[3407887] const-val F8_low[7090259]:int(64)[10] val value[7090261]:(string,shared Module(real(32)))[3407984]
  type _ir_these__ref_dict_string__shared_Module__real32[3408160] ref F0_this[7090243]:dict(string,shared Module(real(32)))[3391211]
  function dict(string,shared Module(real(32)))[3391211].insert[3399122](ref arg this[3399126]:dict(string,shared Module(real(32)))[3391211], const  ref arg key[3399133]:string[244], const  ref arg value[3399140]:shared Module(real(32))[1955038]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_value[3400165]:shared Module(real(32))[1955038] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400168 'move' _formal_tmp_value[3400165] value[3399140])
    ref call_tmp[8463853]:list(string,false)[1950598] "dead after last mention" "maybe param" "temp"
    (8463855 'move' call_tmp[8463853](8463857 '.' this[3399126] order[3391205]))
    const-val call_tmp[3399262]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3399264 'move' call_tmp[3399262](3399270 call contains[3400199] call_tmp[8463853] key[3399133]))
    const-val call_tmp[3399272]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351490]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351492 'move' call_tmp[7351490](7351494 'u!' call_tmp[3399262]))
    (3399274 'move' call_tmp[3399272] call_tmp[7351490])
    const-val call_tmp[3399279]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3399281 'move' call_tmp[3399279] call_tmp[3399272])
    if call_tmp[3399279]
    {
      ref call_tmp[8463863]:list(string,false)[1950598] "dead after last mention" "maybe param" "temp"
      (8463865 'move' call_tmp[8463863](8463867 '.' this[3399126] order[3391205]))
      const-val _formal_tmp_in_x[3400352]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      val ret[7610738]:string[244] "dead after last mention" "RVV" "temp"
      const-val tmp[7610740]:string[244] "dead after last mention" "temp"
      (7610743 call init=[21330] tmp[7610740] key[3399133])
      (7610746 'move' ret[7610738] tmp[7610740])
      (3400357 'move' _formal_tmp_in_x[3400352] ret[7610738])
      (3399300 call pushBack[3253361] call_tmp[8463863] _formal_tmp_in_x[3400352])
    }
    ref call_tmp[8463884]:map(string,shared Module(real(32)),false)[3391831] "dead after last mention" "maybe param" "temp"
    (8463886 'move' call_tmp[8463884](8463888 '.' this[3399126] table[3391199]))
    const-val _formal_tmp_in_k[3400608]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    val ret[7610757]:string[244] "dead after last mention" "RVV" "temp"
    const-val tmp[7610759]:string[244] "dead after last mention" "temp"
    (7610762 call init=[21330] tmp[7610759] key[3399133])
    (7610765 'move' ret[7610757] tmp[7610759])
    (3400613 'move' _formal_tmp_in_k[3400608] ret[7610757])
    const-val _formal_tmp_in_v[3400617]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635674 '=' _formal_tmp_in_v[3400617] _formal_tmp_value[3400165])
    (3400622 'noop')
    (3399315 call addOrReplace[3400390] call_tmp[8463884] _formal_tmp_in_k[3400608] _formal_tmp_in_v[3400617])
    (3399318 return _void[46])
  }
  type dict(string,string)[3380632] val table[3380620]:map(string,string,false)[3283386] val order[3380626]:list(string,false)[1950598] forwarding ( )
  type dict(string,shared Module(real(32)))[3391211] val table[3391199]:map(string,shared Module(real(32)),false)[3391831] val order[3391205]:list(string,false)[1950598] forwarding ( )
}
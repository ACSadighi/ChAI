AST dump for ChapelHashing after pass normalize.
Module use list: ChapelBase Reflection 

{
  function chpl__init_ChapelHashing[468540]() : void[4] "insert line file info" "module init"
  {
    (1001088 'resolution point' hashable[279734])
    (1001090 'end of statement')
    (1001091 'resolution point' |hashable[475072])
    (1001093 'end of statement')
    (1001094 'resolution point' |hashable[475077])
    (1001096 'end of statement')
    (1001097 'resolution point' |hashable[475082])
    (1001099 'end of statement')
    (1001100 'resolution point' |hashable[475087])
    (1001102 'end of statement')
    (1001103 'resolution point' |hashable[475092])
    (1001105 'end of statement')
    (1001106 'resolution point' |hashable[475097])
    (1001108 'end of statement')
    (1001109 'resolution point' |hashable[475102])
    (1001111 'end of statement')
    (1001112 'resolution point' |hashable[475107])
    (1001114 'end of statement')
    (1001115 'resolution point' |hashable[475112])
    (1001117 'end of statement')
    (628301 return _void[46])
  }
  type Self[279732]
  {
    function Self[279732].hash[279719](arg _mt[279725]:_MT[201], arg this[279722]:Self[279732] :
    Self[279732]) : _unknown[42] "method" "no fn body"
    {
    }
    { scopeless type
      uint(64)[86]
    }
  }
  function chpl__defaultHashWrapperInner[279737](arg x[279739]:_any[141](?)) : _unknown[42]
  {
    unknown ret[628079] "RVV" "temp"
    unknown call_tmp[914350] "expr temp" "maybe param" "maybe type" "temp"
    (914353 'move' call_tmp[914350](279845 call canResolveMethod x[279739] "hash"))
    unknown call_tmp[914355] "expr temp" "maybe param" "maybe type" "temp"
    (914358 'move' call_tmp[914355](279842 call ! call_tmp[914350]))
    unknown call_tmp[914360] "expr temp" "maybe param" "maybe type" "temp"
    (914363 'move' call_tmp[914360](279850 call _cond_test call_tmp[914355]))
    if call_tmp[914360]
    {
      unknown call_tmp[914365] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (914368 'move' call_tmp[914365](279757 'typeof' x[279739]))
      unknown call_tmp[914370] "expr temp" "maybe param" "maybe type" "temp"
      (914373 'move' call_tmp[914370](279754 call : call_tmp[914365] string[244]))
      unknown call_tmp[914375] "expr temp" "maybe param" "maybe type" "temp"
      (914378 'move' call_tmp[914375](279749 call + "No hash function found for " call_tmp[914370]))
      (279748 call compilerError call_tmp[914375])
    }
    {
      unknown call_tmp[914380] "expr temp" "maybe param" "maybe type" "temp"
      (914383 'move' call_tmp[914380](279834 'implements interface' x[279739] hashable[279734]))
      unknown call_tmp[914385] "expr temp" "maybe param" "maybe type" "temp"
      (914388 'move' call_tmp[914385](279832 call == call_tmp[914380] 2))
      unknown call_tmp[914390] "expr temp" "maybe param" "maybe type" "temp"
      (914393 'move' call_tmp[914390](279838 call _cond_test call_tmp[914385]))
      if call_tmp[914390]
      {
        unknown call_tmp[914395] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (914398 'move' call_tmp[914395](279768 'typeof' x[279739]))
        unknown call_tmp[914400] "expr temp" "maybe param" "maybe type" "temp"
        (914403 'move' call_tmp[914400](279765 call : call_tmp[914395] string[244]))
        unknown call_tmp[914405] "expr temp" "maybe param" "maybe type" "temp"
        (914408 'move' call_tmp[914405](279763 call + call_tmp[914400] "' has a hash function that is being "))
        unknown call_tmp[914410] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (914413 'move' call_tmp[914410](279783 'typeof' x[279739]))
        unknown call_tmp[914415] "expr temp" "maybe param" "maybe type" "temp"
        (914418 'move' call_tmp[914415](279780 call : call_tmp[914410] string[244]))
        unknown call_tmp[914420] "expr temp" "maybe param" "maybe type" "temp"
        (914423 'move' call_tmp[914420](279775 call + "used by the standard library. However, '" call_tmp[914415]))
        unknown call_tmp[914425] "expr temp" "maybe param" "maybe type" "temp"
        (914428 'move' call_tmp[914425](279773 call + call_tmp[914420] "' does not implement hashable. "))
        (279761 call compilerWarning "'" call_tmp[914405] call_tmp[914425] "In the future, this will result in an error.")
        (566042 'end of statement')
        unknown call_tmp[914430] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (914433 'move' call_tmp[914430](279827 'typeof' x[279739]))
        unknown call_tmp[914435] "expr temp" "maybe param" "maybe type" "temp"
        (914438 'move' call_tmp[914435](279825 call isRecordType call_tmp[914430]))
        unknown call_tmp[914440] "expr temp" "maybe param" "maybe type" "temp"
        (914443 'move' call_tmp[914440](279828 call _cond_test call_tmp[914435]))
        if call_tmp[914440]
        {
          unknown call_tmp[914445] "expr temp" "maybe param" "maybe type" "temp" "type variable"
          (914448 'move' call_tmp[914445](279804 'typeof' x[279739]))
          unknown call_tmp[914450] "expr temp" "maybe param" "maybe type" "temp"
          (914453 'move' call_tmp[914450](279801 call : call_tmp[914445] string[244]))
          unknown call_tmp[914455] "expr temp" "maybe param" "maybe type" "temp"
          (914458 'move' call_tmp[914455](279796 call + "to make '" call_tmp[914450]))
          unknown call_tmp[914460] "expr temp" "maybe param" "maybe type" "temp"
          (914463 'move' call_tmp[914460](279794 call + call_tmp[914455] "' implement hashable, "))
          unknown call_tmp[914465] "expr temp" "maybe param" "maybe type" "temp" "type variable"
          (914468 'move' call_tmp[914465](279819 'typeof' x[279739]))
          unknown call_tmp[914470] "expr temp" "maybe param" "maybe type" "temp"
          (914473 'move' call_tmp[914470](279816 call : call_tmp[914465] string[244]))
          unknown call_tmp[914475] "expr temp" "maybe param" "maybe type" "temp"
          (914478 'move' call_tmp[914475](279811 call + "add the interface to its declaration: 'record " call_tmp[914470]))
          unknown call_tmp[914480] "expr temp" "maybe param" "maybe type" "temp"
          (914483 'move' call_tmp[914480](279809 call + call_tmp[914475] " : hashable'"))
          (279793 call compilerWarning call_tmp[914460] call_tmp[914480])
        }
      }
    }
    unknown call_tmp[914487] "expr temp" "maybe param" "maybe type" "temp"
    (914490 'move' call_tmp[914487](279862 call(279859 call (partial) hash _mt[203] x[279739])))
    (628085 'move' ret[628079](628084 'coerce' call_tmp[914487] uint(64)[86]))
    (628081 return ret[628079])
    (396961 'used modules list'(279744 'use' Reflection[1804]))
  }
  { scopeless type
    uint(64)[86]
  }
  function chpl__defaultHashWrapper[279866](arg x[279868]:_any[141](?)) : _unknown[42]
  {
    unknown ret[628089] "RVV" "temp"
    unknown call_tmp[914492] "maybe param" "maybe type" "temp"
    (914495 'move' call_tmp[914492](279875 call chpl__defaultHashWrapperInner x[279868]))
    const hash[279873] "dead at end of block" "const" "insert auto destroy"
    (652340 'init var' hash[279873] call_tmp[914492])
    (279878 'end of statement')
    unknown call_tmp[914497] "expr temp" "maybe param" "maybe type" "temp"
    (914500 'move' call_tmp[914497](279886 call max int(64)[10]))
    unknown call_tmp[914502] "expr temp" "maybe param" "maybe type" "temp"
    (914505 'move' call_tmp[914502](279882 call & hash[279873] call_tmp[914497]))
    unknown call_tmp[914507] "expr temp" "maybe param" "maybe type" "temp"
    (914510 'move' call_tmp[914507](279880 call : call_tmp[914502] int(64)[10]))
    (628095 'move' ret[628089](628094 'coerce' call_tmp[914507] int(64)[10]))
    gotoReturn _end_chpl__defaultHashWrapper[628087] _end_chpl__defaultHashWrapper[628087]
    (566045 'end of statement' hash[279873])
    label _end_chpl__defaultHashWrapper[628087]
    (628091 return ret[628089])
  }
  { scopeless type
    int(64)[10]
  }
  function _gen_key[279892](arg i[279895]:uint(64)[86]) : _unknown[42]
  {
    unknown ret[628101] "RVV" "temp"
    unknown key[279901] "dead at end of block" "insert auto destroy"
    (652342 'init var' key[279901] i[279895])
    (279904 'end of statement')
    unknown call_tmp[914512] "expr temp" "maybe param" "maybe type" "temp"
    (914515 'move' call_tmp[914512](279910 call ~ key[279901]))
    unknown call_tmp[914517] "expr temp" "maybe param" "maybe type" "temp"
    (914520 'move' call_tmp[914517](279913 call << key[279901] 21))
    unknown call_tmp[914522] "expr temp" "maybe param" "maybe type" "temp"
    (914525 'move' call_tmp[914522](279908 call + call_tmp[914512] call_tmp[914517]))
    (279905 call = key[279901] call_tmp[914522])
    (566047 'end of statement' key[279901])
    unknown call_tmp[914527] "expr temp" "maybe param" "maybe type" "temp"
    (914530 'move' call_tmp[914527](279925 call >> key[279901] 24))
    unknown call_tmp[914532] "expr temp" "maybe param" "maybe type" "temp"
    (914535 'move' call_tmp[914532](279922 call ^ key[279901] call_tmp[914527]))
    (279919 call = key[279901] call_tmp[914532])
    (566049 'end of statement' key[279901])
    unknown call_tmp[914537] "expr temp" "maybe param" "maybe type" "temp"
    (914540 'move' call_tmp[914537](279939 call << key[279901] 3))
    unknown call_tmp[914542] "expr temp" "maybe param" "maybe type" "temp"
    (914545 'move' call_tmp[914542](279936 call + key[279901] call_tmp[914537]))
    unknown call_tmp[914547] "expr temp" "maybe param" "maybe type" "temp"
    (914550 'move' call_tmp[914547](279943 call << key[279901] 8))
    unknown call_tmp[914552] "expr temp" "maybe param" "maybe type" "temp"
    (914555 'move' call_tmp[914552](279934 call + call_tmp[914542] call_tmp[914547]))
    (279931 call = key[279901] call_tmp[914552])
    (566051 'end of statement' key[279901])
    unknown call_tmp[914557] "expr temp" "maybe param" "maybe type" "temp"
    (914560 'move' call_tmp[914557](279953 call >> key[279901] 14))
    unknown call_tmp[914562] "expr temp" "maybe param" "maybe type" "temp"
    (914565 'move' call_tmp[914562](279950 call ^ key[279901] call_tmp[914557]))
    (279947 call = key[279901] call_tmp[914562])
    (566053 'end of statement' key[279901])
    unknown call_tmp[914567] "expr temp" "maybe param" "maybe type" "temp"
    (914570 'move' call_tmp[914567](279967 call << key[279901] 2))
    unknown call_tmp[914572] "expr temp" "maybe param" "maybe type" "temp"
    (914575 'move' call_tmp[914572](279964 call + key[279901] call_tmp[914567]))
    unknown call_tmp[914577] "expr temp" "maybe param" "maybe type" "temp"
    (914580 'move' call_tmp[914577](279971 call << key[279901] 4))
    unknown call_tmp[914582] "expr temp" "maybe param" "maybe type" "temp"
    (914585 'move' call_tmp[914582](279962 call + call_tmp[914572] call_tmp[914577]))
    (279959 call = key[279901] call_tmp[914582])
    (566055 'end of statement' key[279901])
    unknown call_tmp[914587] "expr temp" "maybe param" "maybe type" "temp"
    (914590 'move' call_tmp[914587](279981 call >> key[279901] 28))
    unknown call_tmp[914592] "expr temp" "maybe param" "maybe type" "temp"
    (914595 'move' call_tmp[914592](279978 call ^ key[279901] call_tmp[914587]))
    (279975 call = key[279901] call_tmp[914592])
    (566057 'end of statement' key[279901])
    unknown call_tmp[914597] "expr temp" "maybe param" "maybe type" "temp"
    (914600 'move' call_tmp[914597](279993 call << key[279901] 31))
    unknown call_tmp[914602] "expr temp" "maybe param" "maybe type" "temp"
    (914605 'move' call_tmp[914602](279990 call + key[279901] call_tmp[914597]))
    (279987 call = key[279901] call_tmp[914602])
    (566059 'end of statement' key[279901])
    (628107 'move' ret[628101](628106 'coerce' key[279901] uint(64)[86]))
    gotoReturn _end__gen_key[628099] _end__gen_key[628099]
    (566061 'end of statement' key[279901])
    label _end__gen_key[628099]
    (628103 return ret[628101])
  }
  { scopeless type
    uint(64)[86]
  }
  function _gen_key[280004](arg i[280007]:int(64)[10]) : _unknown[42]
  {
    unknown ret[628113] "RVV" "temp"
    unknown call_tmp[914607] "expr temp" "maybe param" "maybe type" "temp"
    (914610 'move' call_tmp[914607](280015 call : i[280007] uint(64)[86]))
    unknown call_tmp[914612] "expr temp" "maybe param" "maybe type" "temp"
    (914615 'move' call_tmp[914612](280014 call _gen_key call_tmp[914607]))
    (628119 'move' ret[628113](628118 'coerce' call_tmp[914612] uint(64)[86]))
    (628115 return ret[628113])
  }
  { scopeless type
    uint(64)[86]
  }
  function chpl__defaultHashCombine[280022](arg a[280025]:uint(64)[86], arg b[280029]:uint(64)[86], arg fieldnum[280033]:int(64)[10]) : _unknown[42] "inline"
  {
    unknown ret[628123] "RVV" "temp"
    function chpl_bitops_rotl_64[280038](arg x[280043] :
    (280041 call uint(64)[86] 64), arg n[280049] :
    (280047 call uint(64)[86] 64)) : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (280053 call uint(64)[86] 64)
    }
    unknown call_tmp[914617] "expr temp" "maybe param" "maybe type" "temp"
    (914620 'move' call_tmp[914617](280063 call + 17 fieldnum[280033]))
    unknown call_tmp[914622] "maybe param" "maybe type" "temp"
    (914625 'move' call_tmp[914622](280061 call : call_tmp[914617] uint(64)[86]))
    unknown n[280059] "dead at end of block" "insert auto destroy"
    (652344 'init var' n[280059] call_tmp[914622] uint(64)[86])
    (280071 'end of statement')
    unknown call_tmp[914627] "expr temp" "maybe param" "maybe type" "temp"
    (914630 'move' call_tmp[914627](280079 call chpl_bitops_rotl_64 b[280029] n[280059]))
    unknown call_tmp[914632] "expr temp" "maybe param" "maybe type" "temp"
    (914635 'move' call_tmp[914632](280075 call ^ a[280025] call_tmp[914627]))
    unknown call_tmp[914637] "expr temp" "maybe param" "maybe type" "temp"
    (914640 'move' call_tmp[914637](280074 call _gen_key call_tmp[914632]))
    (628129 'move' ret[628123](628128 'coerce' call_tmp[914637] uint(64)[86]))
    gotoReturn _end_chpl__defaultHashCombine[628121] _end_chpl__defaultHashCombine[628121]
    (566064 'end of statement' n[280059])
    label _end_chpl__defaultHashCombine[628121]
    (628125 return ret[628123])
  }
  { scopeless type
    uint(64)[86]
  }
  function bool[19].hash[280085](arg _mt[280091]:_MT[201], arg this[280088]:bool[19] :
  bool[19]) : _unknown[42] "inline" "method"
  {
    unknown ret[628135] "RVV" "temp"
    unknown call_tmp[914642] "expr temp" "maybe param" "maybe type" "temp"
    (914645 'move' call_tmp[914642](280102 call _cond_test this[280088]))
    if call_tmp[914642]
    {
      (628141 'move' ret[628135](628140 'coerce' 0 uint(64)[86]))
      gotoReturn _end_hash[628133] _end_hash[628133]
    }
    {
      (628147 'move' ret[628135](628146 'coerce' 1 uint(64)[86]))
      gotoReturn _end_hash[628133] _end_hash[628133]
    }
    label _end_hash[628133]
    (628137 return ret[628135])
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475072]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] bool[19]
    {
    }
    (628153 return _void[46])
  }
  function |hashable[475077]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] numeric[162](?)
    {
    }
    (628157 return _void[46])
  }
  function int(64)[10].hash[280126](arg _mt[280132]:_MT[201], arg this[280129]:int(64)[10] :
  int(64)[10]) : _unknown[42] "inline" "method"
  {
    unknown ret[628161] "RVV" "temp"
    unknown call_tmp[914647] "expr temp" "maybe param" "maybe type" "temp"
    (914650 'move' call_tmp[914647](280138 call _gen_key this[280129]))
    (628167 'move' ret[628161](628166 'coerce' call_tmp[914647] uint(64)[86]))
    (628163 return ret[628161])
  }
  { scopeless type
    uint(64)[86]
  }
  function uint(64)[86].hash[280143](arg _mt[280149]:_MT[201], arg this[280146]:uint(64)[86] :
  uint(64)[86]) : _unknown[42] "inline" "method"
  {
    unknown ret[628171] "RVV" "temp"
    unknown call_tmp[914652] "expr temp" "maybe param" "maybe type" "temp"
    (914655 'move' call_tmp[914652](280155 call _gen_key this[280146]))
    (628177 'move' ret[628171](628176 'coerce' call_tmp[914652] uint(64)[86]))
    (628173 return ret[628171])
  }
  { scopeless type
    uint(64)[86]
  }
  function enum[147](?).hash[280160](arg _mt[280166]:_MT[201], arg this[280163]:enum[147](?) :
  enum[147](?)) : _unknown[42] "inline" "method"
  {
    unknown ret[628181] "RVV" "temp"
    unknown call_tmp[914657] "expr temp" "maybe param" "maybe type" "temp"
    (914660 'move' call_tmp[914657](280174 call chpl__enumToOrder this[280163]))
    unknown call_tmp[914662] "expr temp" "maybe param" "maybe type" "temp"
    (914665 'move' call_tmp[914662](280172 call _gen_key call_tmp[914657]))
    (628187 'move' ret[628181](628186 'coerce' call_tmp[914662] uint(64)[86]))
    (628183 return ret[628181])
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475082]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] enum[147](?)
    {
    }
    (628191 return _void[46])
  }
  function real(64)[13].hash[280187](arg _mt[280193]:_MT[201], arg this[280190]:real(64)[13] :
  real(64)[13]) : _unknown[42] "inline" "method"
  {
    unknown ret[628195] "RVV" "temp"
    unknown call_tmp[914667] "expr temp" "maybe param" "maybe type" "temp"
    (914670 'move' call_tmp[914667](280200 'real2int' this[280190]))
    unknown call_tmp[914672] "expr temp" "maybe param" "maybe type" "temp"
    (914675 'move' call_tmp[914672](280199 call _gen_key call_tmp[914667]))
    (628201 'move' ret[628195](628200 'coerce' call_tmp[914672] uint(64)[86]))
    (628197 return ret[628195])
  }
  { scopeless type
    uint(64)[86]
  }
  function complex(128)[111].hash[280205](arg _mt[280211]:_MT[201], arg this[280208]:complex(128)[111] :
  complex(128)[111]) : _unknown[42] "inline" "method"
  {
    unknown ret[628205] "RVV" "temp"
    unknown call_tmp[914679] "expr temp" "maybe param" "maybe type" "temp"
    (914682 'move' call_tmp[914679](280222 call re _mt[203] this[280208]))
    unknown call_tmp[914684] "expr temp" "maybe param" "maybe type" "temp"
    (914687 'move' call_tmp[914684](280220 'real2int' call_tmp[914679]))
    unknown call_tmp[914691] "expr temp" "maybe param" "maybe type" "temp"
    (914694 'move' call_tmp[914691](280227 call im _mt[203] this[280208]))
    unknown call_tmp[914696] "expr temp" "maybe param" "maybe type" "temp"
    (914699 'move' call_tmp[914696](280225 'real2int' call_tmp[914691]))
    unknown call_tmp[914701] "expr temp" "maybe param" "maybe type" "temp"
    (914704 'move' call_tmp[914701](280218 call ^ call_tmp[914684] call_tmp[914696]))
    unknown call_tmp[914706] "expr temp" "maybe param" "maybe type" "temp"
    (914709 'move' call_tmp[914706](280217 call _gen_key call_tmp[914701]))
    (628211 'move' ret[628205](628210 'coerce' call_tmp[914706] uint(64)[86]))
    (628207 return ret[628205])
  }
  { scopeless type
    uint(64)[86]
  }
  function imag(64)[101].hash[280233](arg _mt[280239]:_MT[201], arg this[280236]:imag(64)[101] :
  imag(64)[101]) : _unknown[42] "inline" "method"
  {
    unknown ret[628215] "RVV" "temp"
    unknown call_tmp[914711] "expr temp" "maybe param" "maybe type" "temp"
    (914714 'move' call_tmp[914711](280248 call _i2r this[280236]))
    unknown call_tmp[914716] "expr temp" "maybe param" "maybe type" "temp"
    (914719 'move' call_tmp[914716](280246 'real2int' call_tmp[914711]))
    unknown call_tmp[914721] "expr temp" "maybe param" "maybe type" "temp"
    (914724 'move' call_tmp[914721](280245 call _gen_key call_tmp[914716]))
    (628221 'move' ret[628215](628220 'coerce' call_tmp[914721] uint(64)[86]))
    (628217 return ret[628215])
  }
  { scopeless type
    uint(64)[86]
  }
  function chpl_taskID_t[131].hash[280253](arg _mt[280259]:_MT[201], arg this[280256]:chpl_taskID_t[131] :
  chpl_taskID_t[131]) : _unknown[42] "inline" "method"
  {
    unknown ret[628225] "RVV" "temp"
    unknown call_tmp[914726] "expr temp" "maybe param" "maybe type" "temp"
    (914729 'move' call_tmp[914726](280266 call : this[280256] int(64)[10]))
    unknown call_tmp[914731] "expr temp" "maybe param" "maybe type" "temp"
    (914734 'move' call_tmp[914731](280265 call _gen_key call_tmp[914726]))
    (628231 'move' ret[628225](628230 'coerce' call_tmp[914731] uint(64)[86]))
    (628227 return ret[628225])
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475087]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] chpl_taskID_t[131]
    {
    }
    (628235 return _void[46])
  }
  function _array[255540](?).hash[280280](arg _mt[280286]:_MT[201], arg this[280283]:_array[255540](?) :
  _array[255540](?)) : _unknown[42] "inline" "method"
  {
    unknown ret[628239] "RVV" "temp"
    unknown hash[280291] "dead at end of block" "insert auto destroy"
    (652346 'init var' hash[280291] 0 uint(64)[86])
    (280295 'end of statement')
    unknown i[280297] "dead at end of block" "insert auto destroy"
    (652348 'init var' i[280297] 1)
    (280300 'end of statement')
    {
      unknown _indexOfInterest[280321] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[280322] "expr temp" "temp"
      (280331 'move' _iterator[280322](280329 call _getIterator this[280283]))
      Defer
      {
        {
          (280346 call _freeIterator _iterator[280322])
        }
      }
      { scopeless type
        (280336 'move' _indexOfInterest[280321](280333 call iteratorIndex _iterator[280322]))
      }
      ForLoop[280323]
      {
        unknown obj[280301] "index var" "insert auto destroy"
        (566080 'end of statement')
        (280341 'move' obj[280301] _indexOfInterest[280321])
        (566081 'end of statement' obj[280301])
        {
          unknown call_tmp[914738] "expr temp" "maybe param" "maybe type" "temp"
          (914741 'move' call_tmp[914738](280314 call(280311 call (partial) hash _mt[203] obj[280301])))
          unknown call_tmp[914743] "expr temp" "maybe param" "maybe type" "temp"
          (914746 'move' call_tmp[914743](280309 call chpl__defaultHashCombine call_tmp[914738] hash[280291] i[280297]))
          (280305 call = hash[280291] call_tmp[914743])
          (566083 'end of statement' hash[280291] obj[280301] i[280297])
          (280317 call += i[280297] 1)
          (566087 'end of statement' i[280297])
        }
        label _continueLabel[280326]
        _indexOfInterest[280321]
        _iterator[280322]
      }
      label _breakLabel[280327]
    }
    (628245 'move' ret[628239](628244 'coerce' hash[280291] uint(64)[86]))
    gotoReturn _end_hash[628237] _end_hash[628237]
    (566089 'end of statement' hash[280291])
    label _end_hash[628237]
    (628241 return ret[628239])
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475092]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] _array[255540](?)
    {
    }
    (628251 return _void[46])
  }
  function borrowed RootClass?[467971].hash[280365](arg _mt[280373]:_MT[201], arg this[280370]:borrowed RootClass?[467971]) : _unknown[42] "inline" "method"
  {
    unknown ret[628255] "RVV" "temp"
    unknown call_tmp[914748] "expr temp" "maybe param" "maybe type" "temp"
    (914751 'move' call_tmp[914748](280380 'object2int' this[280370]))
    unknown call_tmp[914753] "expr temp" "maybe param" "maybe type" "temp"
    (914756 'move' call_tmp[914753](280379 call _gen_key call_tmp[914748]))
    (628261 'move' ret[628255](628260 'coerce' call_tmp[914753] uint(64)[86]))
    (628257 return ret[628255])
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475097]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] class[195](?)
    {
    }
    (628265 return _void[46])
  }
  function |hashable[475102]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] _anyManagementNilable[198](?)
    {
    }
    (628269 return _void[46])
  }
  function locale[234].hash[280402](arg _mt[280408]:_MT[201], arg this[280405]:locale[234] :
  locale[234]) : _unknown[42] "inline" "method"
  {
    unknown ret[628273] "RVV" "temp"
    unknown call_tmp[914760] "expr temp" "maybe param" "maybe type" "temp"
    (914763 'move' call_tmp[914760](280417 call _value _mt[203] this[280405]))
    unknown call_tmp[914765] "expr temp" "maybe param" "maybe type" "temp"
    (914768 'move' call_tmp[914765](280415 'object2int' call_tmp[914760]))
    unknown call_tmp[914770] "expr temp" "maybe param" "maybe type" "temp"
    (914773 'move' call_tmp[914770](280414 call _gen_key call_tmp[914765]))
    (628279 'move' ret[628273](628278 'coerce' call_tmp[914770] uint(64)[86]))
    (628275 return ret[628273])
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475107]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] locale[234]
    {
    }
    (628283 return _void[46])
  }
  function range[240](?).hash[280430](arg _mt[280436]:_MT[201], arg this[280433]:range[240](?) :
  range[240](?)) : _unknown[42] "inline" "method"
  {
    unknown ret[628287] "RVV" "temp"
    unknown ret[280444] "dead at end of block" "insert auto destroy"
    (652350 'default init var' ret[280444] uint(64)[86])
    (280447 'end of statement')
    {
      unknown i[280448] "dead at end of block" "index var" "insert auto destroy"
      (652352 'init var' i[280448] 0)
      (566097 'end of statement')
      unknown tmp[280536] "maybe param" "temp"
      unknown call_tmp[914775] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (914778 'move' call_tmp[914775](280454 'typeof' this[280433]))
      unknown call_tmp[914780] "expr temp" "maybe param" "maybe type" "temp"
      (914783 'move' call_tmp[914780](280452 call numImplementationFields call_tmp[914775]))
      (280548 'move' tmp[280536](280546 call chpl_compute_low_param_loop_bound 1 call_tmp[914780]))
      unknown tmp[280537] "maybe param" "temp"
      unknown call_tmp[914785] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (914788 'move' call_tmp[914785](280554 'typeof' this[280433]))
      unknown call_tmp[914790] "expr temp" "maybe param" "maybe type" "temp"
      (914793 'move' call_tmp[914790](280553 call numImplementationFields call_tmp[914785]))
      (280558 'move' tmp[280537](280556 call chpl_compute_high_param_loop_bound 1 call_tmp[914790]))
      unknown tmp[280538] "maybe param" "temp"
      (280561 'move' tmp[280538] 1)
      ParamForLoop[280563]
      { i[280448] tmp[280536] tmp[280537] tmp[280538]
        {
          unknown tmp[502554] "maybe param" "temp"
          unknown tmp[502575] "maybe param" "temp"
          unknown call_tmp[914795] "expr temp" "maybe param" "maybe type" "temp"
          (914798 'move' call_tmp[914795](280509 call getImplementationField this[280433] i[280448]))
          unknown call_tmp[914800] "expr temp" "maybe param" "maybe type" "temp"
          (914803 'move' call_tmp[914800](280507 call isParam call_tmp[914795]))
          (502586 'move' tmp[502575](280504 call == call_tmp[914800] 0))
          unknown call_tmp[914805] "expr temp" "maybe param" "maybe type" "temp"
          (914808 'move' call_tmp[914805](502588 call _cond_invalid tmp[502575]))
          if call_tmp[914805]
          {
            (502591 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[703504] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[703505] "maybe param" "temp"
          unknown call_tmp[914810] "expr temp" "maybe param" "maybe type" "temp"
          (914813 'move' call_tmp[914810](502576 call isTrue tmp[502575]))
          (703510 'move' tmp[703505](703508 call _cond_test call_tmp[914810]))
          if tmp[703505]
          {
            unknown tmp[703512] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[914815] "expr temp" "maybe param" "maybe type" "temp"
            (914818 'move' call_tmp[914815](280518 call getImplementationField this[280433] i[280448]))
            unknown call_tmp[914820] "expr temp" "maybe param" "maybe type" "temp"
            (914823 'move' call_tmp[914820](280516 call isType call_tmp[914815]))
            unknown call_tmp[914825] "expr temp" "maybe param" "maybe type" "temp"
            (914828 'move' call_tmp[914825](280513 call == call_tmp[914820] 0))
            (703514 'move' tmp[703512](502579 call isTrue call_tmp[914825]))
            (703519 'move' tmp[703504](703516 '_paramFoldLogical' tmp[703505] tmp[703512]))
          }
          {
            (703524 'move' tmp[703504](703521 '_paramFoldLogical' tmp[703505] 0))
          }
          (502565 'move' tmp[502554] tmp[703504])
          unknown call_tmp[914830] "expr temp" "maybe param" "maybe type" "temp"
          (914833 'move' call_tmp[914830](502567 call _cond_invalid tmp[502554]))
          if call_tmp[914830]
          {
            (502570 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[703531] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[703532] "maybe param" "temp"
          unknown call_tmp[914835] "expr temp" "maybe param" "maybe type" "temp"
          (914838 'move' call_tmp[914835](502555 call isTrue tmp[502554]))
          (703537 'move' tmp[703532](703535 call _cond_test call_tmp[914835]))
          if tmp[703532]
          {
            { scopeless type
              unknown call_type_tmp[578891] "expr temp" "maybe type" "temp" "type variable"
              unknown call_tmp[914840] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (914843 'move' call_tmp[914840](280527 call getImplementationField this[280433] i[280448]))
              (578895 'move' call_type_tmp[578891](280530 'typeof' call_tmp[914840]))
            }
            unknown tmp[703539] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[914845] "expr temp" "maybe param" "maybe type" "temp"
            (914848 'move' call_tmp[914845](280525 call isNothingType call_type_tmp[578891]))
            unknown call_tmp[914850] "expr temp" "maybe param" "maybe type" "temp"
            (914853 'move' call_tmp[914850](280522 call == call_tmp[914845] 0))
            (703541 'move' tmp[703539](502558 call isTrue call_tmp[914850]))
            (703546 'move' tmp[703531](703543 '_paramFoldLogical' tmp[703532] tmp[703539]))
          }
          {
            (703551 'move' tmp[703531](703548 '_paramFoldLogical' tmp[703532] 0))
          }
          unknown call_tmp[914855] "expr temp" "maybe param" "maybe type" "temp"
          (914858 'move' call_tmp[914855](280532 call _cond_test tmp[703531]))
          if call_tmp[914855]
          {
            const field[280460] "dead at end of block" "const" "ref var"
            (652357 'init ref decl' field[280460])
            unknown call_tmp[914860] "expr temp" "maybe param" "maybe type" "temp"
            (914863 'move' call_tmp[914860](280462 call getImplementationField this[280433] i[280448]))
            (652355 'move' field[280460](652354 'addr of' call_tmp[914860]))
            (280466 'end of statement')
            unknown call_tmp[914867] "maybe param" "maybe type" "temp"
            (914870 'move' call_tmp[914867](280473 call(280470 call (partial) hash _mt[203] field[280460])))
            const fieldHash[280468] "dead at end of block" "const" "insert auto destroy"
            (652359 'init var' fieldHash[280468] call_tmp[914867])
            (280475 'end of statement' i[280448] field[280460])
            unknown call_tmp[914872] "expr temp" "maybe param" "maybe type" "temp"
            (914875 'move' call_tmp[914872](280490 call == i[280448] 1))
            unknown call_tmp[914877] "expr temp" "maybe param" "maybe type" "temp"
            (914880 'move' call_tmp[914877](280494 call _cond_test call_tmp[914872]))
            if call_tmp[914877]
            {
              (280476 call = ret[280444] fieldHash[280468])
              (566102 'end of statement' ret[280444] fieldHash[280468])
            }
            {
              unknown call_tmp[914882] "expr temp" "maybe param" "maybe type" "temp"
              (914885 'move' call_tmp[914882](280485 call chpl__defaultHashCombine fieldHash[280468] ret[280444] i[280448]))
              (280481 call = ret[280444] call_tmp[914882])
              (566105 'end of statement' ret[280444] fieldHash[280468] i[280448])
            }
          }
        }
      }
      label _unused_continueLabel[280540]
      label _breakLabel[280539]
    }
    (628293 'move' ret[628287](628292 'coerce' ret[280444] uint(64)[86]))
    gotoReturn _end_hash[628285] _end_hash[628285]
    (566109 'end of statement' ret[280444])
    label _end_hash[628285]
    (628289 return ret[628287])
    (396963 'used modules list'(280441 'use' Reflection[1804]))
  }
  { scopeless type
    uint(64)[86]
  }
  function |hashable[475112]() : _unknown[42] "ImplementsStmt wrapper"
  { hashable[279734] range[240](?)
    {
    }
    (628299 return _void[46])
  }
  (396959 'used modules list'(279715 'use' ChapelBase[77907]))
}
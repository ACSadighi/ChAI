AST dump for ExportWrappers after pass insertLineNumbers.
Module use list: ChapelStandard CTypes 

{
  function chpl__init_ExportWrappers[468597](const in arg _ln[9365661]:int(64)[10], in arg _fn[9365663]:int(32)[66]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ExportWrappers_p[9309453]
    {
      goto _exit_chpl__init_ExportWrappers[9309490] _exit_chpl__init_ExportWrappers[9309490]
    }
    val modFormatStr[9309461]:chpl_c_string[16] "temp"
    val modStr[9309462]:chpl_c_string[16] "temp"
    ref refIndentLevel[9309476]:int(32)[66] "temp"
    (9309469 'move' modFormatStr[9309461] c"%*s\n")
    (9309471 'move' modStr[9309462] c"ExportWrappers")
    (9309474 call printModuleInit[386886] modFormatStr[9309461] modStr[9309462] 14 _ln[9365661] _fn[9365663])
    (9309480 'move' refIndentLevel[9309476](9309479 'addr of' moduleInitLevel[386877]))
    (9309483 '+=' refIndentLevel[9309476] 1)
    (9309459 'move' chpl__init_ExportWrappers_p[9309453] 1)
    {
      (9305653 call chpl__init_CTypes[468360] _ln[9365661] _fn[9365663])
    }
    (9309486 '-=' refIndentLevel[9309476] 1)
    label _endchpl__init_ExportWrappers[9309492]
    label _exit_chpl__init_ExportWrappers[9309490]
    (631606 return _void[46])
  }
  function _initDynamicEndCount[311752](const in arg _ln[9495089]:int(64)[10], in arg _fn[9495091]:int(32)[66]) : void[4] "private" "resolved" "no return value for void"
  {
    val new_temp[7652737]:_EndCount(atomic int(64),int(64))[1525461] "dead after last mention" "temp"
    (7652739 'move' new_temp[7652737](7652742 call _new[1526233] _ln[9495089] _fn[9495091]))
    (311764 call chpl_task_setDynamicEndCount[51882] new_temp[7652737] _ln[9495089] _fn[9495091])
    (631522 return _void[46])
  }
  function _destroyDynamicEndCount[311768](const in arg _ln[9471827]:int(64)[10], in arg _fn[9471829]:int(32)[66]) : void[4] "private" "resolved" "no return value for void"
  {
    val call_tmp[939140]:_EndCount(atomic int(64),int(64))[1525461] "dead after last mention" "maybe param" "temp"
    (939143 'move' call_tmp[939140](311774 call chpl_task_getDynamicEndCount[51896] _ln[9471827] _fn[9471829]))
    val error[5498466]:Error[85511] "error variable" "temp"
    (5498468 'move' error[5498466] nil[32])
    (311778 call _waitEndCount[3874857] call_tmp[939140] error[5498466] _ln[9471827] _fn[9471829])
    val errorExists[7297392]:bool[19] "temp"
    (7297397 'move' errorExists[7297392](7297394 '!=' error[5498466] nil[32]))
    if errorExists[7297392]
    {
      (5498471 call chpl_uncaught_error[87456] error[5498466] _ln[9471827] _fn[9471829])
    }
    (7850585 call chpl__delete[1803567] call_tmp[939140] _ln[9471827] _fn[9471829])
    (631524 return _void[46])
  }
  function chpl_libraryModuleLevelSetup[311785]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    val ret[631528]:void[4] "dead after last mention" "RVV" "temp"
    (311790 call _initDynamicEndCount[311752] 39 83)
    (631530 return ret[631528])
  }
  function chpl_libraryModuleLevelCleanup[311794]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    val ret[631534]:void[4] "dead after last mention" "RVV" "temp"
    (311799 call _destroyDynamicEndCount[311768] 44 83)
    (631536 return ret[631534])
  }
}
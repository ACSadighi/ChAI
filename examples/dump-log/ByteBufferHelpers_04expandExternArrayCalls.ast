AST dump for ByteBufferHelpers after pass expandExternArrayCalls.
Module use list: 

{
  (30189 'use' ChapelStandard)
  (30192 'use' CTypes)
  (30198 'use'(30195 call . OS c"POSIX"))
  (30203 'use' ChplConfig 'only' compiledForSingleLocale)
  unknown byteType[30206] "type variable"(30208 call uint[86] 8)
  unknown bufferType[30212] "type variable"(30214 call c_ptr byteType)
  unknown locIdType[30218] "type variable"(30220 'typeof' chpl_nodeID)
  { scopeless
    unknown chpl_stringGrowthFactor[30223] "config" "param" 1.5
    (30228 'end of statement')
  }
  function chpl_memhook_md_num[30229]() : _unknown[42] "extern" "local args" "no fn body" "private" "fn synchronization free"
  {
  }
  { scopeless type
    chpl_mem_descInt_t
  }
  function offset_STR_COPY_DATA[30235]() : _unknown[42] "no parens" "private"
  {
    { scopeless
      const CHPL_RT_MD_STR_COPY_DATA[30239] "const" "extern" chpl_mem_descInt_t
      (30242 'end of statement')
    }
    (30243 return(30244 call - CHPL_RT_MD_STR_COPY_DATA(30248 call chpl_memhook_md_num)))
  }
  function offset_STR_COPY_REMOTE[30251]() : _unknown[42] "no parens" "private"
  {
    { scopeless
      const CHPL_RT_MD_STR_COPY_REMOTE[30255] "const" "extern" chpl_mem_descInt_t
      (30258 'end of statement')
    }
    (30259 return(30260 call - CHPL_RT_MD_STR_COPY_REMOTE(30264 call chpl_memhook_md_num)))
  }
  function chpl_string_comm_get[30267](arg dest[30270] :
  bufferType, arg src_loc_id[30276] :
  (30274 call int[10] 64), arg src_addr[30280] :
  bufferType, arg len[30284] :
  integral) : _unknown[42] "inline"
  {
    (30290 'import' Communication)
    (30297 call(30294 call . Communication c"get") dest src_addr src_loc_id(30305 call(30302 call . len c"safeCast") c_size_t))
  }
  function getGoodAllocSize[30309](arg requestedSize[30312] :
  int[10]) : _unknown[42] "inline" "private"
  {
    { scopeless
      const allocSize[30318] "const"(30320 call max(30322 call chpl_here_good_alloc_size requestedSize) chpl_stringMinAllocSize)
      (30326 'end of statement')
    }
    (30327 return allocSize)
  }
  { scopeless type
    int[10]
  }
  function bufferAlloc[30332](arg requestedSize[30334]:_any[141](?)) : _unknown[42] "inline"
  {
    { scopeless
      const allocSize[30343] "const"(30345 call getGoodAllocSize requestedSize)
      (30348 'end of statement')
    }
    { scopeless
      unknown buf[30350](30351 call :(30354 call chpl_here_alloc allocSize offset_STR_COPY_DATA) bufferType)
      (30359 'end of statement')
    }
    (30360 return(30364 call _build_tuple buf allocSize))
  }
  { scopeless type
    (30339 call _build_tuple bufferType int[10])
  }
  function bufferRealloc[30369](arg buf[30372] :
  bufferType, arg requestedSize[30376] :
  int[10]) : _unknown[42]
  {
    { scopeless
      const allocSize[30381] "const"(30383 call getGoodAllocSize(30384 call + requestedSize 1))
      (30389 'end of statement')
    }
    { scopeless
      unknown newBuff[30391](30392 call :(30395 call chpl_here_realloc buf allocSize offset_STR_COPY_DATA) bufferType)
      (30401 'end of statement')
    }
    (30402 return(30406 call _build_tuple newBuff allocSize))
  }
  function bufferEnsureSize[30410](arg buf[30413] :
  bufferType, arg currentSize[30417] :
  int[10], arg requestedSize[30421] :
  int[10]) : _unknown[42]
  {
    if(30442 call _cond_test(30438 call < currentSize requestedSize))
    {
      { scopeless
        (30425 return(30427 call bufferRealloc buf requestedSize))
      }
    }
    {
      { scopeless
        (30431 return(30435 call _build_tuple buf currentSize))
      }
    }
  }
  function bufferCopyRemote[30450](arg src_loc_id[30455] :
  (30453 call int[10] 64), arg src_addr[30459] :
  bufferType, arg len[30463] :
  int[10]) : _unknown[42]
  {
    { scopeless
      const tmp[30479] "const" "temp"(30474 call bufferAlloc(30475 call + len 1))
      (30486 call _check_tuple_var_decl tmp[30479] 2)
      const dst[30469] "const"(30480 call tmp[30479] 0)
      const allocSize[30471] "const"(30483 call tmp[30479] 1)
      (30491 'end of statement')
    }
    (30493 call chpl_string_comm_get dst src_loc_id src_addr len)
    (30498 call =(30501 call dst len) 0)
    (30504 return dst)
  }
  { scopeless type
    bufferType
  }
  function bufferCopyLocal[30509](arg src_addr[30512] :
  bufferType, arg len[30516] :
  int[10]) : _unknown[42] "inline"
  {
    { scopeless
      const tmp[30531] "const" "temp"(30526 call bufferAlloc(30527 call + len 1))
      (30538 call _check_tuple_var_decl tmp[30531] 2)
      const dst[30521] "const"(30532 call tmp[30531] 0)
      const allocSize[30523] "const"(30535 call tmp[30531] 1)
      (30543 'end of statement')
    }
    (30545 call bufferMemcpyLocal(dst = dst)(src = src_addr)(len = len))
    (30552 call =(30555 call dst len) 0)
    (30558 return(30562 call _build_tuple dst allocSize))
  }
  function bufferFree[30566](arg buf[30569] :
  bufferType) : _unknown[42] "inline"
  {
    (30574 call chpl_here_free buf)
  }
  function bufferCopy[30578](arg buf[30581] :
  bufferType, arg off[30585] :
  int[10], arg len[30589] :
  int[10], arg loc[30593] :
  locIdType) : _unknown[42] "inline"
  {
    if(30635 call _cond_test(30625 call &&(30627 call !(30630 call compiledForSingleLocale))(30631 call != loc chpl_nodeID)))
    {
      { scopeless
        unknown newBuf[30599](30601 call bufferCopyRemote loc(30603 call + buf off) len)
        (30609 'end of statement')
      }
      (30610 return(30614 call _build_tuple newBuf len))
    }
    {
      (30617 return(30619 call bufferCopyLocal(30620 call + buf off) len))
    }
  }
  function bufferMemcpy[30641](arg dst[30644] :
  bufferType, arg src_loc[30650] :
  (30648 call int[10] 64), arg src[30654] :
  bufferType, arg len[30658] :
  int[10], arg dst_off[30663] :
  int[10] =
  0, arg src_off[30669] :
  int[10] =
  0) : _unknown[42] "inline"
  {
    if(30714 call _cond_test(30704 call &&(30706 call !(30709 call compiledForSingleLocale))(30710 call != src_loc chpl_nodeID)))
    {
      (30676 call chpl_string_comm_get(30677 call + dst dst_off) src_loc(30682 call + src src_off) len)
    }
    {
      (30689 call memcpy(30690 call + dst dst_off)(30694 call + src src_off)(30702 call(30699 call . len c"safeCast") c_size_t))
    }
  }
  function bufferMemcpyLocal[30720](arg dst[30723] :
  bufferType, arg src[30727] :
  bufferType, arg len[30731] :
  int[10], arg dst_off[30736] :
  int[10] =
  0, arg src_off[30742] :
  int[10] =
  0) : _unknown[42] "inline"
  {
    (30748 call memcpy(30749 call +(30751 call : dst bufferType) dst_off)(30756 call +(30758 call : src bufferType) src_off)(30767 call(30764 call . len c"safeCast") c_size_t))
  }
  function bufferMemmoveLocal[30771](arg dst[30774] :
  bufferType, arg src[30777]:_any[141](?), arg len[30780] :
  int[10], arg dst_off[30785] :
  int[10] =
  0, arg src_off[30791] :
  int[10] =
  0) : _unknown[42] "inline"
  {
    (30797 call memmove(30798 call + dst dst_off)(30802 call + src src_off)(30810 call(30807 call . len c"safeCast") c_size_t))
  }
  function bufferGetByte[30814](arg buf[30817] :
  bufferType, arg off[30821] :
  int[10], arg loc[30825] :
  locIdType) : _unknown[42] "inline"
  {
    if(30872 call _cond_test(30862 call &&(30864 call !(30867 call compiledForSingleLocale))(30868 call != loc chpl_nodeID)))
    {
      { scopeless
        const newBuf[30831] "const"(30833 call bufferCopyRemote(src_loc_id = loc)(src_addr =(30836 call + buf off))(len = 1))
        (30844 'end of statement')
      }
      { scopeless
        const ret[30846] "const"(30848 call newBuf 0)
        (30851 'end of statement')
      }
      (30853 call bufferFree newBuf)
      (30855 return ret)
    }
    {
      (30858 return(30860 call buf off))
    }
  }
  function bufferEquals[30878](arg buf1[30881] :
  bufferType, arg off1[30885] :
  int[10], arg loc1[30889] :
  locIdType, arg buf2[30893] :
  bufferType, arg off2[30897] :
  int[10], arg loc2[30901] :
  locIdType, arg len[30905] :
  int[10]) : _unknown[42] "inline"
  {
    (30909 return(30910 call ==(30913 call _strcmp(buf1 =(30914 call + buf1 off1))(len1 = len)(loc1 = loc1)(buf2 =(30923 call + buf2 off2))(len2 = len)(loc2 = loc1)) 0))
  }
  function bufferEqualsLocal[30935](arg buf1[30938] :
  bufferType, arg off1[30942] :
  int[10], arg buf2[30946] :
  bufferType, arg off2[30950] :
  int[10], arg len[30954] :
  int[10]) : _unknown[42] "inline"
  {
    (30958 return(30959 call ==(30962 call _strcmp_local(buf1 =(30963 call + buf1 off1))(len1 = len)(buf2 =(30970 call + buf2 off2))(len2 = len)) 0))
  }
  function _strcmp_local[30980](arg buf1[30983] :
  bufferType, arg len1[30987] :
  int[10], arg buf2[30991] :
  bufferType, arg len2[30995] :
  int[10]) : _unknown[42] "inline" "private"
  {
    { scopeless
      const size[31001] "const"(31003 call min len1 len2)
      (31007 'end of statement')
    }
    { scopeless
      const result[31009] "const"(31011 call memcmp buf1 buf2(31018 call(31015 call . size c"safeCast") c_size_t))
      (31021 'end of statement')
    }
    if(31053 call _cond_test(31049 call == result 0))
    {
      if(31030 call _cond_test(31026 call < size len1))
      {
        { scopeless
          (31023 return 1)
        }
      }
      if(31044 call _cond_test(31040 call < size len2))
      {
        { scopeless
          (31035 return(31036 call - 1))
        }
      }
    }
    (31057 return result)
  }
  { scopeless type
    int[10]
  }
  function _strcmp[31062](arg buf1[31065] :
  bufferType, arg len1[31069] :
  int[10], arg loc1[31073] :
  locIdType, arg buf2[31077] :
  bufferType, arg len2[31081] :
  int[10], arg loc2[31085] :
  locIdType) : _unknown[42] "inline"
  {
    if(31223 call _cond_test(31213 call &&(31215 call == loc1 chpl_nodeID)(31219 call == loc2 chpl_nodeID)))
    {
      (31090 return(31092 call _strcmp_local buf1 len1 buf2 len2))
    }
    {
      { scopeless
        if(31208 call _cond_test(31198 call &&(31200 call != loc1 chpl_nodeID)(31204 call == loc2 chpl_nodeID)))
        {
          { scopeless
            unknown locBuf1[31099](31101 call bufferCopyRemote loc1 buf1 len1)
            (31106 'end of statement')
          }
          { scopeless
            const ret[31108] "const"(31110 call _strcmp_local locBuf1 len1 buf2 len2)
            (31116 'end of statement')
          }
          (31118 call bufferFree locBuf1)
          (31120 return ret)
        }
        {
          { scopeless
            if(31194 call _cond_test(31184 call &&(31186 call == loc1 chpl_nodeID)(31190 call != loc2 chpl_nodeID)))
            {
              { scopeless
                unknown locBuf2[31124](31126 call bufferCopyRemote loc2 buf2 len2)
                (31131 'end of statement')
              }
              { scopeless
                const ret[31133] "const"(31135 call _strcmp_local buf1 len1 locBuf2 len2)
                (31141 'end of statement')
              }
              (31143 call bufferFree locBuf2)
              (31145 return ret)
            }
            {
              { scopeless
                unknown locBuf1[31149](31151 call bufferCopyRemote loc1 buf1 len1)
                (31156 'end of statement')
              }
              { scopeless
                unknown locBuf2[31158](31160 call bufferCopyRemote loc2 buf2 len2)
                (31165 'end of statement')
              }
              { scopeless
                const ret[31167] "const"(31169 call _strcmp_local locBuf1 len1 locBuf2 len2)
                (31175 'end of statement')
              }
              (31177 call bufferFree locBuf1)
              (31180 call bufferFree locBuf2)
              (31182 return ret)
            }
          }
        }
      }
    }
  }
}
AST dump for AutoMath after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard HaltWrappers CTypes 

{
  function chpl__init_AutoMath[468318]() : void[4] "insert line file info" "module init" "resolved"
  {
    (589634 return _void[46])
  }
  function chpl_macro_float_isnan[1873](const in arg x[1878]:real(32)[91]) : int(32)[66] "extern" "codegen for CPU and GPU" "local args" "no fn body" "private" "resolved" "fn synchronization free"
  {
  }
  function abs[510394](const in arg x[510401]:int(64)[10]) : int(64)[10] "inline" "resolved" "fn synchronization free"
  {
    val ret[588344]:int(64)[10] "dead after last mention" "RVV" "temp"
    val tmp[661458]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[661459]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[735167]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (735170 'move' call_tmp[735167](510406 call <[1469576] x[510401] 0))
    (661464 'move' tmp[661459] call_tmp[735167])
    if tmp[661459]
    {
      const-val tmp[661466]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (661468 'move' tmp[661466](510411 call -[515541] x[510401]))
      (661473 'move' tmp[661458] tmp[661466])
    }
    {
      (661478 'move' tmp[661458] x[510401])
    }
    (588349 'move' ret[588344] tmp[661458])
    (588346 return ret[588344])
  }
  function ceil[2255](const in arg x[2260]:real(64)[13]) : real(64)[13] "extern" "codegen for CPU and GPU" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function isNan[2578](const in arg x[2583]:real(32)[91]) : bool[19] "inline" "resolved" "fn synchronization free"
  {
    val ret[588807]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[735477]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (735480 'move' call_tmp[735477](2592 call chpl_macro_float_isnan[1873] x[2583]))
    const-val call_tmp[735482]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (735485 'move' call_tmp[735482](2589 call :[4516266] call_tmp[735477]))
    (4516296 '=' ret[588807] call_tmp[735482])
    (588809 return ret[588807])
  }
  function max[2679](const in arg x[2684]:int(64)[10], const in arg y[2690]:int(64)[10]) : int(64)[10] "inline" "resolved" "fn synchronization free"
  {
    val ret[588844]:int(64)[10] "dead after last mention" "RVV" "temp"
    val tmp[661662]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[661663]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[735502]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (735505 'move' call_tmp[735502](2695 call >[55238] x[2684] y[2690]))
    (661668 'move' tmp[661663] call_tmp[735502])
    if tmp[661663]
    {
      (661673 'move' tmp[661662] x[2684])
    }
    {
      (661678 'move' tmp[661662] y[2690])
    }
    (588849 'move' ret[588844] tmp[661662])
    (588846 return ret[588844])
  }
  function max[2814](const in arg x[2819]:real(32)[91], const in arg y[2825]:real(32)[91]) : real(32)[91] "inline" "resolved" "fn synchronization free"
  {
    val ret[588889]:real(32)[91] "dead after last mention" "RVV" "temp"
    const-val tmp[475758]:bool[19] "dead after last mention" "maybe param" "temp"
    (475769 'move' tmp[475758](2832 call >[55343] x[2819] y[2825]))
    val call_tmp[735527]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[661777]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[661778]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[735532]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (735535 'move' call_tmp[735532] tmp[475758])
    (661783 'move' tmp[661778] call_tmp[735532])
    if tmp[661778]
    {
      (661788 'move' tmp[661777] 1)
    }
    {
      const-val tmp[661790]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[735537]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (735540 'move' call_tmp[735537](2837 call isNan[2578] x[2819]))
      (661792 'move' tmp[661790] call_tmp[735537])
      (661797 'move' tmp[661777] tmp[661790])
    }
    val tmp[661804]:real(32)[91] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[661805]:bool[19] "dead after last mention" "maybe param" "temp"
    (661810 'move' tmp[661805] tmp[661777])
    if tmp[661805]
    {
      (661815 'move' tmp[661804] x[2819])
    }
    {
      (661820 'move' tmp[661804] y[2825])
    }
    (588894 'move' ret[588889] tmp[661804])
    (588891 return ret[588889])
  }
  function min[3347](const in arg x[3352]:int(64)[10], const in arg y[3358]:int(64)[10]) : int(64)[10] "inline" "resolved" "fn synchronization free"
  {
    val ret[589035]:int(64)[10] "dead after last mention" "RVV" "temp"
    val tmp[662343]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[662344]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[735787]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (735790 'move' call_tmp[735787](3363 call <[1469576] x[3352] y[3358]))
    (662349 'move' tmp[662344] call_tmp[735787])
    if tmp[662344]
    {
      (662354 'move' tmp[662343] x[3352])
    }
    {
      (662359 'move' tmp[662343] y[3358])
    }
    (589040 'move' ret[589035] tmp[662343])
    (589037 return ret[589035])
  }
}
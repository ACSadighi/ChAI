AST dump for Regex after pass createTaskFunctions.
Module use list: ChapelStandard OS CTypes IO ChplConfig RegexIoSupport 

{
  function chpl__init_Regex[468462]() : void[4] "insert line file info" "module init"
  {
    (646477 'init var' initBufferSizeForSlowReplaceAndCount[153603] 16)
    (153606 'end of statement')
    { scopeless type extern
      (646479 'default init var' QIO_REGEX_ANCHOR_UNANCHORED[153850] c_int[522])
    }
    (153853 'end of statement')
    { scopeless type extern
      (646482 'default init var' QIO_REGEX_ANCHOR_START[153855] c_int[522])
    }
    (153858 'end of statement')
    { scopeless type extern
      (646485 'default init var' QIO_REGEX_ANCHOR_BOTH[153860] c_int[522])
    }
    (153863 'end of statement')
    (1001037 'resolution point' |serializable[475232])
    (1001039 'end of statement')
    (612191 return _void[46])
  }
  def module RegexIoSupport[158722]  
  const initBufferSizeForSlowReplaceAndCount[153603] "dead at end of block" "const" "insert auto destroy" "private"
  function =[1090881](ref arg _arg1[1090883]:qio_regex_t[153611], arg _arg2[1090884]:qio_regex_t[153611]) : _unknown[42] "assignop" "compiler generated" "inline" "last resort"
  {
    (1090887 '=' _arg1[1090883] _arg2[1090884])
    (1090892 return _void[46])
  }
  type qio_regex_t[153611]
  function qio_regex_options_t[153655].utf8[1090894](arg _mt[1090896]:_MT[201], ref arg this[1090898]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1090908] "RVV" "temp"
    unknown call_tmp[1090915] "expr temp" "maybe param" "maybe type" "temp"
    (1090918 'move' call_tmp[1090915](1090902 '.' this[1090898] c"utf8"))
    (1090913 'move' ret[1090908](1090912 'addr of' call_tmp[1090915]))
    (1090910 return ret[1090908])
  }
  function qio_regex_options_t[153655].posix[1090920](arg _mt[1090922]:_MT[201], ref arg this[1090924]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1090934] "RVV" "temp"
    unknown call_tmp[1090941] "expr temp" "maybe param" "maybe type" "temp"
    (1090944 'move' call_tmp[1090941](1090928 '.' this[1090924] c"posix"))
    (1090939 'move' ret[1090934](1090938 'addr of' call_tmp[1090941]))
    (1090936 return ret[1090934])
  }
  function qio_regex_options_t[153655].literal[1090946](arg _mt[1090948]:_MT[201], ref arg this[1090950]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1090960] "RVV" "temp"
    unknown call_tmp[1090967] "expr temp" "maybe param" "maybe type" "temp"
    (1090970 'move' call_tmp[1090967](1090954 '.' this[1090950] c"literal"))
    (1090965 'move' ret[1090960](1090964 'addr of' call_tmp[1090967]))
    (1090962 return ret[1090960])
  }
  function qio_regex_options_t[153655].nocapture[1090972](arg _mt[1090974]:_MT[201], ref arg this[1090976]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1090986] "RVV" "temp"
    unknown call_tmp[1090993] "expr temp" "maybe param" "maybe type" "temp"
    (1090996 'move' call_tmp[1090993](1090980 '.' this[1090976] c"nocapture"))
    (1090991 'move' ret[1090986](1090990 'addr of' call_tmp[1090993]))
    (1090988 return ret[1090986])
  }
  function qio_regex_options_t[153655].ignorecase[1090998](arg _mt[1091000]:_MT[201], ref arg this[1091002]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1091012] "RVV" "temp"
    unknown call_tmp[1091019] "expr temp" "maybe param" "maybe type" "temp"
    (1091022 'move' call_tmp[1091019](1091006 '.' this[1091002] c"ignorecase"))
    (1091017 'move' ret[1091012](1091016 'addr of' call_tmp[1091019]))
    (1091014 return ret[1091012])
  }
  function qio_regex_options_t[153655].multiline[1091024](arg _mt[1091026]:_MT[201], ref arg this[1091028]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1091038] "RVV" "temp"
    unknown call_tmp[1091045] "expr temp" "maybe param" "maybe type" "temp"
    (1091048 'move' call_tmp[1091045](1091032 '.' this[1091028] c"multiline"))
    (1091043 'move' ret[1091038](1091042 'addr of' call_tmp[1091045]))
    (1091040 return ret[1091038])
  }
  function qio_regex_options_t[153655].dotnl[1091050](arg _mt[1091052]:_MT[201], ref arg this[1091054]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1091064] "RVV" "temp"
    unknown call_tmp[1091071] "expr temp" "maybe param" "maybe type" "temp"
    (1091074 'move' call_tmp[1091071](1091058 '.' this[1091054] c"dotnl"))
    (1091069 'move' ret[1091064](1091068 'addr of' call_tmp[1091071]))
    (1091066 return ret[1091064])
  }
  function qio_regex_options_t[153655].nongreedy[1091076](arg _mt[1091078]:_MT[201], ref arg this[1091080]:qio_regex_options_t[153655]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1091090] "RVV" "temp"
    unknown call_tmp[1091097] "expr temp" "maybe param" "maybe type" "temp"
    (1091100 'move' call_tmp[1091097](1091084 '.' this[1091080] c"nongreedy"))
    (1091095 'move' ret[1091090](1091094 'addr of' call_tmp[1091097]))
    (1091092 return ret[1091090])
  }
  function qio_regex_options_t[153655].init[1091102](arg _mt[1091104]:_MT[201], ref arg this[1091105]:qio_regex_options_t[153655], in arg utf8[1091108]:bool[19] =
  _typeDefaultT[217], in arg posix[1091119]:bool[19] =
  _typeDefaultT[217], in arg literal[1091130]:bool[19] =
  _typeDefaultT[217], in arg nocapture[1091141]:bool[19] =
  _typeDefaultT[217], in arg ignorecase[1091152]:bool[19] =
  _typeDefaultT[217], in arg multiline[1091163]:bool[19] =
  _typeDefaultT[217], in arg dotnl[1091174]:bool[19] =
  _typeDefaultT[217], in arg nongreedy[1091185]:bool[19] =
  _typeDefaultT[217]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1091197 'init field' this[1091105] c"utf8" utf8[1091108])
    (1091200 'init field' this[1091105] c"posix" posix[1091119])
    (1091221 'end of statement')
    (1091203 'init field' this[1091105] c"literal" literal[1091130])
    (1091206 'init field' this[1091105] c"nocapture" nocapture[1091141])
    (1091222 'end of statement')
    (1091209 'init field' this[1091105] c"ignorecase" ignorecase[1091152])
    (1091212 'init field' this[1091105] c"multiline" multiline[1091163])
    (1091223 'end of statement')
    (1091215 'init field' this[1091105] c"dotnl" dotnl[1091174])
    (1091218 'init field' this[1091105] c"nongreedy" nongreedy[1091185])
    (1091224 'end of statement')
    (1091225 return _void[46])
  }
  function qio_regex_options_t[153655].init[1091227](arg _mt[1091229]:_MT[201], ref arg this[1091230]:qio_regex_options_t[153655], arg reader[1091231]:_any[141](?), ref arg deserializer[1091232]:_any[141](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1091487] "expr temp" "maybe param" "maybe type" "temp"
    (1091490 'move' call_tmp[1091487](1091242 'simple type name' this[1091230]))
    unknown call_tmp[1091492] "maybe param" "maybe type" "temp"
    (1091495 'move' call_tmp[1091492](1091244 call startRecord _mt[203] deserializer[1091232] reader[1091231] call_tmp[1091487]))
    unknown _chpl_des_helper[1091249] "dead at end of block" "insert auto destroy"
    (1091485 'init var' _chpl_des_helper[1091249] call_tmp[1091492])
    (1091464 'end of statement')
    unknown call_tmp[1091497] "expr temp" "maybe param" "maybe type" "temp"
    (1091500 'move' call_tmp[1091497](1091255 'field num to name' this[1091230] 1))
    unknown call_tmp[1091502] "maybe param" "maybe type" "temp"
    (1091505 'move' call_tmp[1091502](1091258 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091497] bool[19]))
    unknown utf8[1091392] "temp"
    (1091395 'init var' utf8[1091392] call_tmp[1091502] bool[19])
    (1091397 'init field' this[1091230] c"utf8" utf8[1091392])
    (1091465 'end of statement' _chpl_des_helper[1091249])
    unknown call_tmp[1091507] "expr temp" "maybe param" "maybe type" "temp"
    (1091510 'move' call_tmp[1091507](1091272 'field num to name' this[1091230] 2))
    unknown call_tmp[1091512] "maybe param" "maybe type" "temp"
    (1091515 'move' call_tmp[1091512](1091275 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091507] bool[19]))
    unknown posix[1091401] "temp"
    (1091404 'init var' posix[1091401] call_tmp[1091512] bool[19])
    (1091406 'init field' this[1091230] c"posix" posix[1091401])
    (1091467 'end of statement' _chpl_des_helper[1091249])
    unknown call_tmp[1091517] "expr temp" "maybe param" "maybe type" "temp"
    (1091520 'move' call_tmp[1091517](1091289 'field num to name' this[1091230] 3))
    unknown call_tmp[1091522] "maybe param" "maybe type" "temp"
    (1091525 'move' call_tmp[1091522](1091292 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091517] bool[19]))
    unknown literal[1091410] "temp"
    (1091413 'init var' literal[1091410] call_tmp[1091522] bool[19])
    (1091415 'init field' this[1091230] c"literal" literal[1091410])
    (1091469 'end of statement' _chpl_des_helper[1091249])
    unknown call_tmp[1091527] "expr temp" "maybe param" "maybe type" "temp"
    (1091530 'move' call_tmp[1091527](1091306 'field num to name' this[1091230] 4))
    unknown call_tmp[1091532] "maybe param" "maybe type" "temp"
    (1091535 'move' call_tmp[1091532](1091309 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091527] bool[19]))
    unknown nocapture[1091419] "temp"
    (1091422 'init var' nocapture[1091419] call_tmp[1091532] bool[19])
    (1091424 'init field' this[1091230] c"nocapture" nocapture[1091419])
    (1091471 'end of statement' _chpl_des_helper[1091249])
    unknown call_tmp[1091537] "expr temp" "maybe param" "maybe type" "temp"
    (1091540 'move' call_tmp[1091537](1091323 'field num to name' this[1091230] 5))
    unknown call_tmp[1091542] "maybe param" "maybe type" "temp"
    (1091545 'move' call_tmp[1091542](1091326 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091537] bool[19]))
    unknown ignorecase[1091428] "temp"
    (1091431 'init var' ignorecase[1091428] call_tmp[1091542] bool[19])
    (1091433 'init field' this[1091230] c"ignorecase" ignorecase[1091428])
    (1091473 'end of statement' _chpl_des_helper[1091249])
    unknown call_tmp[1091547] "expr temp" "maybe param" "maybe type" "temp"
    (1091550 'move' call_tmp[1091547](1091340 'field num to name' this[1091230] 6))
    unknown call_tmp[1091552] "maybe param" "maybe type" "temp"
    (1091555 'move' call_tmp[1091552](1091343 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091547] bool[19]))
    unknown multiline[1091437] "temp"
    (1091440 'init var' multiline[1091437] call_tmp[1091552] bool[19])
    (1091442 'init field' this[1091230] c"multiline" multiline[1091437])
    (1091475 'end of statement' _chpl_des_helper[1091249])
    unknown call_tmp[1091557] "expr temp" "maybe param" "maybe type" "temp"
    (1091560 'move' call_tmp[1091557](1091357 'field num to name' this[1091230] 7))
    unknown call_tmp[1091562] "maybe param" "maybe type" "temp"
    (1091565 'move' call_tmp[1091562](1091360 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091557] bool[19]))
    unknown dotnl[1091446] "temp"
    (1091449 'init var' dotnl[1091446] call_tmp[1091562] bool[19])
    (1091451 'init field' this[1091230] c"dotnl" dotnl[1091446])
    (1091477 'end of statement' _chpl_des_helper[1091249])
    unknown call_tmp[1091567] "expr temp" "maybe param" "maybe type" "temp"
    (1091570 'move' call_tmp[1091567](1091374 'field num to name' this[1091230] 8))
    unknown call_tmp[1091572] "maybe param" "maybe type" "temp"
    (1091575 'move' call_tmp[1091572](1091377 call readField _mt[203] _chpl_des_helper[1091249] call_tmp[1091567] bool[19]))
    unknown nongreedy[1091455] "temp"
    (1091458 'init var' nongreedy[1091455] call_tmp[1091572] bool[19])
    (1091460 'init field' this[1091230] c"nongreedy" nongreedy[1091455])
    (1091479 'end of statement' _chpl_des_helper[1091249])
    (1091387 call endRecord _mt[203] _chpl_des_helper[1091249])
    (1091481 'end of statement' _chpl_des_helper[1091249])
    (1091483 return _void[46])
  }
  where {
    unknown call_tmp[1091577] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1091580 'move' call_tmp[1091577](1091233 'typeof' reader[1091231]))
    (1091235 call chpl__isFileReader call_tmp[1091577])
  }
  function qio_regex_options_t[153655].init=[1091584](arg _mt[1091587]:_MT[201], arg this[1091588]:qio_regex_options_t[153655], arg other[1091589]:qio_regex_options_t[153655]) : _unknown[42] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1091593 '=' this[1091588] other[1091589])
    (1091597 return _void[46])
  }
  function qio_regex_options_t[153655].deinit[1091599](arg _mt[1091601]:_MT[201], arg this[1091603]:qio_regex_options_t[153655]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1091611 return _void[46])
  }
  function qio_regex_options_t[153655].serialize[1091613](arg _mt[1091617]:_MT[201], arg this[1091615]:qio_regex_options_t[153655], arg writer[1091616]:_any[141](?), ref arg serializer[1091621]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1091624 call serializeDefaultImpl writer[1091616] serializer[1091621] this[1091615])
    (1091630 return _void[46])
  }
  function qio_regex_options_t[153655].deserialize[1091632](arg _mt[1091636]:_MT[201], ref arg this[1091634]:qio_regex_options_t[153655], arg reader[1091635]:_any[141](?), ref arg deserializer[1091641]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1091643] "temp"
    (1091645 'move' _deser_temp[1091643] this[1091634])
    (1091648 call deserializeDefaultImpl reader[1091635] deserializer[1091641] _deser_temp[1091643])
    (1091654 return _void[46])
  }
  function =[1091656](ref arg _arg1[1091658]:qio_regex_options_t[153655], arg _arg2[1091659]:qio_regex_options_t[153655]) : _unknown[42] "assignop" "compiler generated" "inline" "last resort"
  {
    (1091662 '=' _arg1[1091658] _arg2[1091659])
    (1091667 return _void[46])
  }
  function qio_regex_options_t[153655].hash[1091669](arg _mt[1091672]:_MT[201], arg this[1091671]:qio_regex_options_t[153655]) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1091756] "RVV" "temp"
    unknown call_tmp[1091763] "expr temp" "maybe param" "maybe type" "temp"
    (1091766 'move' call_tmp[1091763](1091741 call nongreedy _mt[203] this[1091671]))
    unknown call_tmp[1091768] "expr temp" "maybe param" "maybe type" "temp"
    (1091771 'move' call_tmp[1091768](1091745 call hash _mt[203] call_tmp[1091763]))
    unknown call_tmp[1091773] "expr temp" "maybe param" "maybe type" "temp"
    (1091776 'move' call_tmp[1091773](1091731 call dotnl _mt[203] this[1091671]))
    unknown call_tmp[1091778] "expr temp" "maybe param" "maybe type" "temp"
    (1091781 'move' call_tmp[1091778](1091735 call hash _mt[203] call_tmp[1091773]))
    unknown call_tmp[1091783] "expr temp" "maybe param" "maybe type" "temp"
    (1091786 'move' call_tmp[1091783](1091721 call multiline _mt[203] this[1091671]))
    unknown call_tmp[1091788] "expr temp" "maybe param" "maybe type" "temp"
    (1091791 'move' call_tmp[1091788](1091725 call hash _mt[203] call_tmp[1091783]))
    unknown call_tmp[1091793] "expr temp" "maybe param" "maybe type" "temp"
    (1091796 'move' call_tmp[1091793](1091711 call ignorecase _mt[203] this[1091671]))
    unknown call_tmp[1091798] "expr temp" "maybe param" "maybe type" "temp"
    (1091801 'move' call_tmp[1091798](1091715 call hash _mt[203] call_tmp[1091793]))
    unknown call_tmp[1091803] "expr temp" "maybe param" "maybe type" "temp"
    (1091806 'move' call_tmp[1091803](1091701 call nocapture _mt[203] this[1091671]))
    unknown call_tmp[1091808] "expr temp" "maybe param" "maybe type" "temp"
    (1091811 'move' call_tmp[1091808](1091705 call hash _mt[203] call_tmp[1091803]))
    unknown call_tmp[1091813] "expr temp" "maybe param" "maybe type" "temp"
    (1091816 'move' call_tmp[1091813](1091691 call literal _mt[203] this[1091671]))
    unknown call_tmp[1091818] "expr temp" "maybe param" "maybe type" "temp"
    (1091821 'move' call_tmp[1091818](1091695 call hash _mt[203] call_tmp[1091813]))
    unknown call_tmp[1091823] "expr temp" "maybe param" "maybe type" "temp"
    (1091826 'move' call_tmp[1091823](1091681 call posix _mt[203] this[1091671]))
    unknown call_tmp[1091828] "expr temp" "maybe param" "maybe type" "temp"
    (1091831 'move' call_tmp[1091828](1091685 call hash _mt[203] call_tmp[1091823]))
    unknown call_tmp[1091833] "expr temp" "maybe param" "maybe type" "temp"
    (1091836 'move' call_tmp[1091833](1091675 call utf8 _mt[203] this[1091671]))
    unknown call_tmp[1091838] "expr temp" "maybe param" "maybe type" "temp"
    (1091841 'move' call_tmp[1091838](1091679 call chpl__defaultHashWrapperInner call_tmp[1091833]))
    unknown call_tmp[1091843] "expr temp" "maybe param" "maybe type" "temp"
    (1091846 'move' call_tmp[1091843](1091688 call chpl__defaultHashCombine call_tmp[1091828] call_tmp[1091838] 2))
    unknown call_tmp[1091848] "expr temp" "maybe param" "maybe type" "temp"
    (1091851 'move' call_tmp[1091848](1091698 call chpl__defaultHashCombine call_tmp[1091818] call_tmp[1091843] 3))
    unknown call_tmp[1091853] "expr temp" "maybe param" "maybe type" "temp"
    (1091856 'move' call_tmp[1091853](1091708 call chpl__defaultHashCombine call_tmp[1091808] call_tmp[1091848] 4))
    unknown call_tmp[1091858] "expr temp" "maybe param" "maybe type" "temp"
    (1091861 'move' call_tmp[1091858](1091718 call chpl__defaultHashCombine call_tmp[1091798] call_tmp[1091853] 5))
    unknown call_tmp[1091863] "expr temp" "maybe param" "maybe type" "temp"
    (1091866 'move' call_tmp[1091863](1091728 call chpl__defaultHashCombine call_tmp[1091788] call_tmp[1091858] 6))
    unknown call_tmp[1091868] "expr temp" "maybe param" "maybe type" "temp"
    (1091871 'move' call_tmp[1091868](1091738 call chpl__defaultHashCombine call_tmp[1091778] call_tmp[1091863] 7))
    unknown call_tmp[1091873] "expr temp" "maybe param" "maybe type" "temp"
    (1091876 'move' call_tmp[1091873](1091748 call chpl__defaultHashCombine call_tmp[1091768] call_tmp[1091868] 8))
    (1091761 'move' ret[1091756](1091760 'deref' call_tmp[1091873]))
    (1091758 return ret[1091756])
  }
  function chpl_fields_are_comparable[1091894](arg _arg1[1091896]:qio_regex_options_t[153655], arg _arg2[1091897]:qio_regex_options_t[153655]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1091986]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1091993] "expr temp" "maybe param" "maybe type" "temp"
    (1091996 'move' call_tmp[1091993](1091900 call utf8 _mt[203] _arg1[1091896]))
    unknown call_tmp[1091998] "expr temp" "maybe param" "maybe type" "temp"
    (1092001 'move' call_tmp[1091998](1091904 call utf8 _mt[203] _arg2[1091897]))
    unknown call_tmp[1092003] "expr temp" "maybe param" "maybe type" "temp"
    (1092006 'move' call_tmp[1092003](1091908 'call resolves' c"==" call_tmp[1091993] call_tmp[1091998]))
    unknown call_tmp[1092008] "expr temp" "maybe param" "maybe type" "temp"
    (1092011 'move' call_tmp[1092008](1091910 call posix _mt[203] _arg1[1091896]))
    unknown call_tmp[1092013] "expr temp" "maybe param" "maybe type" "temp"
    (1092016 'move' call_tmp[1092013](1091914 call posix _mt[203] _arg2[1091897]))
    unknown call_tmp[1092018] "expr temp" "maybe param" "maybe type" "temp"
    (1092021 'move' call_tmp[1092018](1091918 'call resolves' c"==" call_tmp[1092008] call_tmp[1092013]))
    unknown call_tmp[1092023] "expr temp" "maybe param" "maybe type" "temp"
    (1092026 'move' call_tmp[1092023](1091920 call literal _mt[203] _arg1[1091896]))
    unknown call_tmp[1092028] "expr temp" "maybe param" "maybe type" "temp"
    (1092031 'move' call_tmp[1092028](1091924 call literal _mt[203] _arg2[1091897]))
    unknown call_tmp[1092033] "expr temp" "maybe param" "maybe type" "temp"
    (1092036 'move' call_tmp[1092033](1091928 'call resolves' c"==" call_tmp[1092023] call_tmp[1092028]))
    unknown call_tmp[1092038] "expr temp" "maybe param" "maybe type" "temp"
    (1092041 'move' call_tmp[1092038](1091930 call nocapture _mt[203] _arg1[1091896]))
    unknown call_tmp[1092043] "expr temp" "maybe param" "maybe type" "temp"
    (1092046 'move' call_tmp[1092043](1091934 call nocapture _mt[203] _arg2[1091897]))
    unknown call_tmp[1092048] "expr temp" "maybe param" "maybe type" "temp"
    (1092051 'move' call_tmp[1092048](1091938 'call resolves' c"==" call_tmp[1092038] call_tmp[1092043]))
    unknown call_tmp[1092053] "expr temp" "maybe param" "maybe type" "temp"
    (1092056 'move' call_tmp[1092053](1091940 call ignorecase _mt[203] _arg1[1091896]))
    unknown call_tmp[1092058] "expr temp" "maybe param" "maybe type" "temp"
    (1092061 'move' call_tmp[1092058](1091944 call ignorecase _mt[203] _arg2[1091897]))
    unknown call_tmp[1092063] "expr temp" "maybe param" "maybe type" "temp"
    (1092066 'move' call_tmp[1092063](1091948 'call resolves' c"==" call_tmp[1092053] call_tmp[1092058]))
    unknown call_tmp[1092068] "expr temp" "maybe param" "maybe type" "temp"
    (1092071 'move' call_tmp[1092068](1091950 call multiline _mt[203] _arg1[1091896]))
    unknown call_tmp[1092073] "expr temp" "maybe param" "maybe type" "temp"
    (1092076 'move' call_tmp[1092073](1091954 call multiline _mt[203] _arg2[1091897]))
    unknown call_tmp[1092078] "expr temp" "maybe param" "maybe type" "temp"
    (1092081 'move' call_tmp[1092078](1091958 'call resolves' c"==" call_tmp[1092068] call_tmp[1092073]))
    unknown call_tmp[1092083] "expr temp" "maybe param" "maybe type" "temp"
    (1092086 'move' call_tmp[1092083](1091960 call dotnl _mt[203] _arg1[1091896]))
    unknown call_tmp[1092088] "expr temp" "maybe param" "maybe type" "temp"
    (1092091 'move' call_tmp[1092088](1091964 call dotnl _mt[203] _arg2[1091897]))
    unknown call_tmp[1092093] "expr temp" "maybe param" "maybe type" "temp"
    (1092096 'move' call_tmp[1092093](1091968 'call resolves' c"==" call_tmp[1092083] call_tmp[1092088]))
    unknown call_tmp[1092098] "expr temp" "maybe param" "maybe type" "temp"
    (1092101 'move' call_tmp[1092098](1091970 call nongreedy _mt[203] _arg1[1091896]))
    unknown call_tmp[1092103] "expr temp" "maybe param" "maybe type" "temp"
    (1092106 'move' call_tmp[1092103](1091974 call nongreedy _mt[203] _arg2[1091897]))
    unknown call_tmp[1092108] "expr temp" "maybe param" "maybe type" "temp"
    (1092111 'move' call_tmp[1092108](1091978 'call resolves' c"==" call_tmp[1092098] call_tmp[1092103]))
    unknown call_tmp[1092113] "expr temp" "maybe param" "maybe type" "temp"
    (1092116 'move' call_tmp[1092113](1091980 '&' call_tmp[1092003] call_tmp[1092018] call_tmp[1092033] call_tmp[1092048] call_tmp[1092063] call_tmp[1092078] call_tmp[1092093] call_tmp[1092108]))
    (1091991 'move' ret[1091986](1091990 'deref' call_tmp[1092113]))
    (1091988 return ret[1091986])
  }
  function qio_regex_options_t[153655].==[1091878](arg _mt[1091880]:_MT[201], arg this[1091882]:qio_regex_options_t[153655], arg _arg1[1091884]:qio_regex_options_t[153655], arg _arg2[1091885]:qio_regex_options_t[153655]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1092250]:bool[19] "RVV" "temp"
    unknown call_tmp[1092297] "expr temp" "maybe param" "maybe type" "temp"
    (1092300 'move' call_tmp[1092297](1092124 call utf8 _mt[203] _arg1[1091884]))
    unknown call_tmp[1092302] "expr temp" "maybe param" "maybe type" "temp"
    (1092305 'move' call_tmp[1092302](1092128 call utf8 _mt[203] _arg2[1091885]))
    unknown call_tmp[1092307] "expr temp" "maybe param" "maybe type" "temp"
    (1092310 'move' call_tmp[1092307](1092132 call chpl_field_neq call_tmp[1092297] call_tmp[1092302]))
    if call_tmp[1092307]
    {
      (1092255 'move' ret[1092250](1092254 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    unknown call_tmp[1092312] "expr temp" "maybe param" "maybe type" "temp"
    (1092315 'move' call_tmp[1092312](1092138 call posix _mt[203] _arg1[1091884]))
    unknown call_tmp[1092317] "expr temp" "maybe param" "maybe type" "temp"
    (1092320 'move' call_tmp[1092317](1092142 call posix _mt[203] _arg2[1091885]))
    unknown call_tmp[1092322] "expr temp" "maybe param" "maybe type" "temp"
    (1092325 'move' call_tmp[1092322](1092146 call chpl_field_neq call_tmp[1092312] call_tmp[1092317]))
    if call_tmp[1092322]
    {
      (1092260 'move' ret[1092250](1092259 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    unknown call_tmp[1092327] "expr temp" "maybe param" "maybe type" "temp"
    (1092330 'move' call_tmp[1092327](1092152 call literal _mt[203] _arg1[1091884]))
    unknown call_tmp[1092332] "expr temp" "maybe param" "maybe type" "temp"
    (1092335 'move' call_tmp[1092332](1092156 call literal _mt[203] _arg2[1091885]))
    unknown call_tmp[1092337] "expr temp" "maybe param" "maybe type" "temp"
    (1092340 'move' call_tmp[1092337](1092160 call chpl_field_neq call_tmp[1092327] call_tmp[1092332]))
    if call_tmp[1092337]
    {
      (1092265 'move' ret[1092250](1092264 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    unknown call_tmp[1092342] "expr temp" "maybe param" "maybe type" "temp"
    (1092345 'move' call_tmp[1092342](1092166 call nocapture _mt[203] _arg1[1091884]))
    unknown call_tmp[1092347] "expr temp" "maybe param" "maybe type" "temp"
    (1092350 'move' call_tmp[1092347](1092170 call nocapture _mt[203] _arg2[1091885]))
    unknown call_tmp[1092352] "expr temp" "maybe param" "maybe type" "temp"
    (1092355 'move' call_tmp[1092352](1092174 call chpl_field_neq call_tmp[1092342] call_tmp[1092347]))
    if call_tmp[1092352]
    {
      (1092270 'move' ret[1092250](1092269 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    unknown call_tmp[1092357] "expr temp" "maybe param" "maybe type" "temp"
    (1092360 'move' call_tmp[1092357](1092180 call ignorecase _mt[203] _arg1[1091884]))
    unknown call_tmp[1092362] "expr temp" "maybe param" "maybe type" "temp"
    (1092365 'move' call_tmp[1092362](1092184 call ignorecase _mt[203] _arg2[1091885]))
    unknown call_tmp[1092367] "expr temp" "maybe param" "maybe type" "temp"
    (1092370 'move' call_tmp[1092367](1092188 call chpl_field_neq call_tmp[1092357] call_tmp[1092362]))
    if call_tmp[1092367]
    {
      (1092275 'move' ret[1092250](1092274 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    unknown call_tmp[1092372] "expr temp" "maybe param" "maybe type" "temp"
    (1092375 'move' call_tmp[1092372](1092194 call multiline _mt[203] _arg1[1091884]))
    unknown call_tmp[1092377] "expr temp" "maybe param" "maybe type" "temp"
    (1092380 'move' call_tmp[1092377](1092198 call multiline _mt[203] _arg2[1091885]))
    unknown call_tmp[1092382] "expr temp" "maybe param" "maybe type" "temp"
    (1092385 'move' call_tmp[1092382](1092202 call chpl_field_neq call_tmp[1092372] call_tmp[1092377]))
    if call_tmp[1092382]
    {
      (1092280 'move' ret[1092250](1092279 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    unknown call_tmp[1092387] "expr temp" "maybe param" "maybe type" "temp"
    (1092390 'move' call_tmp[1092387](1092208 call dotnl _mt[203] _arg1[1091884]))
    unknown call_tmp[1092392] "expr temp" "maybe param" "maybe type" "temp"
    (1092395 'move' call_tmp[1092392](1092212 call dotnl _mt[203] _arg2[1091885]))
    unknown call_tmp[1092397] "expr temp" "maybe param" "maybe type" "temp"
    (1092400 'move' call_tmp[1092397](1092216 call chpl_field_neq call_tmp[1092387] call_tmp[1092392]))
    if call_tmp[1092397]
    {
      (1092285 'move' ret[1092250](1092284 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    unknown call_tmp[1092402] "expr temp" "maybe param" "maybe type" "temp"
    (1092405 'move' call_tmp[1092402](1092222 call nongreedy _mt[203] _arg1[1091884]))
    unknown call_tmp[1092407] "expr temp" "maybe param" "maybe type" "temp"
    (1092410 'move' call_tmp[1092407](1092226 call nongreedy _mt[203] _arg2[1091885]))
    unknown call_tmp[1092412] "expr temp" "maybe param" "maybe type" "temp"
    (1092415 'move' call_tmp[1092412](1092230 call chpl_field_neq call_tmp[1092402] call_tmp[1092407]))
    if call_tmp[1092412]
    {
      (1092290 'move' ret[1092250](1092289 'deref' 0))
      gotoReturn _end_==[1092248] _end_==[1092248]
    }
    (1092295 'move' ret[1092250](1092294 'deref' 1))
    label _end_==[1092248]
    (1092252 return ret[1092250])
  }
  where {
    unknown call_tmp[1092417] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1092420 'move' call_tmp[1092417](1091888 'typeof' _arg1[1091884]))
    unknown call_tmp[1092422] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1092425 'move' call_tmp[1092422](1091890 'typeof' _arg2[1091885]))
    unknown call_tmp[1092427] "expr temp" "maybe param" "maybe type" "temp"
    (1092430 'move' call_tmp[1092427](1091892 call == call_tmp[1092417] call_tmp[1092422]))
    unknown call_tmp[1092432] "expr temp" "maybe param" "maybe type" "temp"
    (1092435 'move' call_tmp[1092432](1092118 call chpl_fields_are_comparable[1091894] _arg1[1091884] _arg2[1091885]))
    (1092122 '&' call_tmp[1092427] call_tmp[1092432])
  }
  function chpl_fields_are_comparable[1092453](arg _arg1[1092455]:qio_regex_options_t[153655], arg _arg2[1092456]:qio_regex_options_t[153655]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1092545]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1092552] "expr temp" "maybe param" "maybe type" "temp"
    (1092555 'move' call_tmp[1092552](1092459 call utf8 _mt[203] _arg1[1092455]))
    unknown call_tmp[1092557] "expr temp" "maybe param" "maybe type" "temp"
    (1092560 'move' call_tmp[1092557](1092463 call utf8 _mt[203] _arg2[1092456]))
    unknown call_tmp[1092562] "expr temp" "maybe param" "maybe type" "temp"
    (1092565 'move' call_tmp[1092562](1092467 'call resolves' c"!=" call_tmp[1092552] call_tmp[1092557]))
    unknown call_tmp[1092567] "expr temp" "maybe param" "maybe type" "temp"
    (1092570 'move' call_tmp[1092567](1092469 call posix _mt[203] _arg1[1092455]))
    unknown call_tmp[1092572] "expr temp" "maybe param" "maybe type" "temp"
    (1092575 'move' call_tmp[1092572](1092473 call posix _mt[203] _arg2[1092456]))
    unknown call_tmp[1092577] "expr temp" "maybe param" "maybe type" "temp"
    (1092580 'move' call_tmp[1092577](1092477 'call resolves' c"!=" call_tmp[1092567] call_tmp[1092572]))
    unknown call_tmp[1092582] "expr temp" "maybe param" "maybe type" "temp"
    (1092585 'move' call_tmp[1092582](1092479 call literal _mt[203] _arg1[1092455]))
    unknown call_tmp[1092587] "expr temp" "maybe param" "maybe type" "temp"
    (1092590 'move' call_tmp[1092587](1092483 call literal _mt[203] _arg2[1092456]))
    unknown call_tmp[1092592] "expr temp" "maybe param" "maybe type" "temp"
    (1092595 'move' call_tmp[1092592](1092487 'call resolves' c"!=" call_tmp[1092582] call_tmp[1092587]))
    unknown call_tmp[1092597] "expr temp" "maybe param" "maybe type" "temp"
    (1092600 'move' call_tmp[1092597](1092489 call nocapture _mt[203] _arg1[1092455]))
    unknown call_tmp[1092602] "expr temp" "maybe param" "maybe type" "temp"
    (1092605 'move' call_tmp[1092602](1092493 call nocapture _mt[203] _arg2[1092456]))
    unknown call_tmp[1092607] "expr temp" "maybe param" "maybe type" "temp"
    (1092610 'move' call_tmp[1092607](1092497 'call resolves' c"!=" call_tmp[1092597] call_tmp[1092602]))
    unknown call_tmp[1092612] "expr temp" "maybe param" "maybe type" "temp"
    (1092615 'move' call_tmp[1092612](1092499 call ignorecase _mt[203] _arg1[1092455]))
    unknown call_tmp[1092617] "expr temp" "maybe param" "maybe type" "temp"
    (1092620 'move' call_tmp[1092617](1092503 call ignorecase _mt[203] _arg2[1092456]))
    unknown call_tmp[1092622] "expr temp" "maybe param" "maybe type" "temp"
    (1092625 'move' call_tmp[1092622](1092507 'call resolves' c"!=" call_tmp[1092612] call_tmp[1092617]))
    unknown call_tmp[1092627] "expr temp" "maybe param" "maybe type" "temp"
    (1092630 'move' call_tmp[1092627](1092509 call multiline _mt[203] _arg1[1092455]))
    unknown call_tmp[1092632] "expr temp" "maybe param" "maybe type" "temp"
    (1092635 'move' call_tmp[1092632](1092513 call multiline _mt[203] _arg2[1092456]))
    unknown call_tmp[1092637] "expr temp" "maybe param" "maybe type" "temp"
    (1092640 'move' call_tmp[1092637](1092517 'call resolves' c"!=" call_tmp[1092627] call_tmp[1092632]))
    unknown call_tmp[1092642] "expr temp" "maybe param" "maybe type" "temp"
    (1092645 'move' call_tmp[1092642](1092519 call dotnl _mt[203] _arg1[1092455]))
    unknown call_tmp[1092647] "expr temp" "maybe param" "maybe type" "temp"
    (1092650 'move' call_tmp[1092647](1092523 call dotnl _mt[203] _arg2[1092456]))
    unknown call_tmp[1092652] "expr temp" "maybe param" "maybe type" "temp"
    (1092655 'move' call_tmp[1092652](1092527 'call resolves' c"!=" call_tmp[1092642] call_tmp[1092647]))
    unknown call_tmp[1092657] "expr temp" "maybe param" "maybe type" "temp"
    (1092660 'move' call_tmp[1092657](1092529 call nongreedy _mt[203] _arg1[1092455]))
    unknown call_tmp[1092662] "expr temp" "maybe param" "maybe type" "temp"
    (1092665 'move' call_tmp[1092662](1092533 call nongreedy _mt[203] _arg2[1092456]))
    unknown call_tmp[1092667] "expr temp" "maybe param" "maybe type" "temp"
    (1092670 'move' call_tmp[1092667](1092537 'call resolves' c"!=" call_tmp[1092657] call_tmp[1092662]))
    unknown call_tmp[1092672] "expr temp" "maybe param" "maybe type" "temp"
    (1092675 'move' call_tmp[1092672](1092539 '&' call_tmp[1092562] call_tmp[1092577] call_tmp[1092592] call_tmp[1092607] call_tmp[1092622] call_tmp[1092637] call_tmp[1092652] call_tmp[1092667]))
    (1092550 'move' ret[1092545](1092549 'deref' call_tmp[1092672]))
    (1092547 return ret[1092545])
  }
  function qio_regex_options_t[153655].!=[1092437](arg _mt[1092439]:_MT[201], arg this[1092441]:qio_regex_options_t[153655], arg _arg1[1092443]:qio_regex_options_t[153655], arg _arg2[1092444]:qio_regex_options_t[153655]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1092809]:bool[19] "RVV" "temp"
    unknown call_tmp[1092856] "expr temp" "maybe param" "maybe type" "temp"
    (1092859 'move' call_tmp[1092856](1092683 call utf8 _mt[203] _arg1[1092443]))
    unknown call_tmp[1092861] "expr temp" "maybe param" "maybe type" "temp"
    (1092864 'move' call_tmp[1092861](1092687 call utf8 _mt[203] _arg2[1092444]))
    unknown call_tmp[1092866] "expr temp" "maybe param" "maybe type" "temp"
    (1092869 'move' call_tmp[1092866](1092691 call chpl_field_neq call_tmp[1092856] call_tmp[1092861]))
    if call_tmp[1092866]
    {
      (1092814 'move' ret[1092809](1092813 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    unknown call_tmp[1092871] "expr temp" "maybe param" "maybe type" "temp"
    (1092874 'move' call_tmp[1092871](1092697 call posix _mt[203] _arg1[1092443]))
    unknown call_tmp[1092876] "expr temp" "maybe param" "maybe type" "temp"
    (1092879 'move' call_tmp[1092876](1092701 call posix _mt[203] _arg2[1092444]))
    unknown call_tmp[1092881] "expr temp" "maybe param" "maybe type" "temp"
    (1092884 'move' call_tmp[1092881](1092705 call chpl_field_neq call_tmp[1092871] call_tmp[1092876]))
    if call_tmp[1092881]
    {
      (1092819 'move' ret[1092809](1092818 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    unknown call_tmp[1092886] "expr temp" "maybe param" "maybe type" "temp"
    (1092889 'move' call_tmp[1092886](1092711 call literal _mt[203] _arg1[1092443]))
    unknown call_tmp[1092891] "expr temp" "maybe param" "maybe type" "temp"
    (1092894 'move' call_tmp[1092891](1092715 call literal _mt[203] _arg2[1092444]))
    unknown call_tmp[1092896] "expr temp" "maybe param" "maybe type" "temp"
    (1092899 'move' call_tmp[1092896](1092719 call chpl_field_neq call_tmp[1092886] call_tmp[1092891]))
    if call_tmp[1092896]
    {
      (1092824 'move' ret[1092809](1092823 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    unknown call_tmp[1092901] "expr temp" "maybe param" "maybe type" "temp"
    (1092904 'move' call_tmp[1092901](1092725 call nocapture _mt[203] _arg1[1092443]))
    unknown call_tmp[1092906] "expr temp" "maybe param" "maybe type" "temp"
    (1092909 'move' call_tmp[1092906](1092729 call nocapture _mt[203] _arg2[1092444]))
    unknown call_tmp[1092911] "expr temp" "maybe param" "maybe type" "temp"
    (1092914 'move' call_tmp[1092911](1092733 call chpl_field_neq call_tmp[1092901] call_tmp[1092906]))
    if call_tmp[1092911]
    {
      (1092829 'move' ret[1092809](1092828 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    unknown call_tmp[1092916] "expr temp" "maybe param" "maybe type" "temp"
    (1092919 'move' call_tmp[1092916](1092739 call ignorecase _mt[203] _arg1[1092443]))
    unknown call_tmp[1092921] "expr temp" "maybe param" "maybe type" "temp"
    (1092924 'move' call_tmp[1092921](1092743 call ignorecase _mt[203] _arg2[1092444]))
    unknown call_tmp[1092926] "expr temp" "maybe param" "maybe type" "temp"
    (1092929 'move' call_tmp[1092926](1092747 call chpl_field_neq call_tmp[1092916] call_tmp[1092921]))
    if call_tmp[1092926]
    {
      (1092834 'move' ret[1092809](1092833 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    unknown call_tmp[1092931] "expr temp" "maybe param" "maybe type" "temp"
    (1092934 'move' call_tmp[1092931](1092753 call multiline _mt[203] _arg1[1092443]))
    unknown call_tmp[1092936] "expr temp" "maybe param" "maybe type" "temp"
    (1092939 'move' call_tmp[1092936](1092757 call multiline _mt[203] _arg2[1092444]))
    unknown call_tmp[1092941] "expr temp" "maybe param" "maybe type" "temp"
    (1092944 'move' call_tmp[1092941](1092761 call chpl_field_neq call_tmp[1092931] call_tmp[1092936]))
    if call_tmp[1092941]
    {
      (1092839 'move' ret[1092809](1092838 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    unknown call_tmp[1092946] "expr temp" "maybe param" "maybe type" "temp"
    (1092949 'move' call_tmp[1092946](1092767 call dotnl _mt[203] _arg1[1092443]))
    unknown call_tmp[1092951] "expr temp" "maybe param" "maybe type" "temp"
    (1092954 'move' call_tmp[1092951](1092771 call dotnl _mt[203] _arg2[1092444]))
    unknown call_tmp[1092956] "expr temp" "maybe param" "maybe type" "temp"
    (1092959 'move' call_tmp[1092956](1092775 call chpl_field_neq call_tmp[1092946] call_tmp[1092951]))
    if call_tmp[1092956]
    {
      (1092844 'move' ret[1092809](1092843 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    unknown call_tmp[1092961] "expr temp" "maybe param" "maybe type" "temp"
    (1092964 'move' call_tmp[1092961](1092781 call nongreedy _mt[203] _arg1[1092443]))
    unknown call_tmp[1092966] "expr temp" "maybe param" "maybe type" "temp"
    (1092969 'move' call_tmp[1092966](1092785 call nongreedy _mt[203] _arg2[1092444]))
    unknown call_tmp[1092971] "expr temp" "maybe param" "maybe type" "temp"
    (1092974 'move' call_tmp[1092971](1092789 call chpl_field_neq call_tmp[1092961] call_tmp[1092966]))
    if call_tmp[1092971]
    {
      (1092849 'move' ret[1092809](1092848 'deref' 1))
      gotoReturn _end_!=[1092807] _end_!=[1092807]
    }
    (1092854 'move' ret[1092809](1092853 'deref' 0))
    label _end_!=[1092807]
    (1092811 return ret[1092809])
  }
  where {
    unknown call_tmp[1092976] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1092979 'move' call_tmp[1092976](1092447 'typeof' _arg1[1092443]))
    unknown call_tmp[1092981] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1092984 'move' call_tmp[1092981](1092449 'typeof' _arg2[1092444]))
    unknown call_tmp[1092986] "expr temp" "maybe param" "maybe type" "temp"
    (1092989 'move' call_tmp[1092986](1092451 call == call_tmp[1092976] call_tmp[1092981]))
    unknown call_tmp[1092991] "expr temp" "maybe param" "maybe type" "temp"
    (1092994 'move' call_tmp[1092991](1092677 call chpl_fields_are_comparable[1092453] _arg1[1092443] _arg2[1092444]))
    (1092681 '&' call_tmp[1092986] call_tmp[1092991])
  }
  function chpl_fields_are_comparable[1093012](arg _arg1[1093014]:qio_regex_options_t[153655], arg _arg2[1093015]:qio_regex_options_t[153655]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1093104]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1093111] "expr temp" "maybe param" "maybe type" "temp"
    (1093114 'move' call_tmp[1093111](1093018 call utf8 _mt[203] _arg1[1093014]))
    unknown call_tmp[1093116] "expr temp" "maybe param" "maybe type" "temp"
    (1093119 'move' call_tmp[1093116](1093022 call utf8 _mt[203] _arg2[1093015]))
    unknown call_tmp[1093121] "expr temp" "maybe param" "maybe type" "temp"
    (1093124 'move' call_tmp[1093121](1093026 'call resolves' c"<" call_tmp[1093111] call_tmp[1093116]))
    unknown call_tmp[1093126] "expr temp" "maybe param" "maybe type" "temp"
    (1093129 'move' call_tmp[1093126](1093028 call posix _mt[203] _arg1[1093014]))
    unknown call_tmp[1093131] "expr temp" "maybe param" "maybe type" "temp"
    (1093134 'move' call_tmp[1093131](1093032 call posix _mt[203] _arg2[1093015]))
    unknown call_tmp[1093136] "expr temp" "maybe param" "maybe type" "temp"
    (1093139 'move' call_tmp[1093136](1093036 'call resolves' c"<" call_tmp[1093126] call_tmp[1093131]))
    unknown call_tmp[1093141] "expr temp" "maybe param" "maybe type" "temp"
    (1093144 'move' call_tmp[1093141](1093038 call literal _mt[203] _arg1[1093014]))
    unknown call_tmp[1093146] "expr temp" "maybe param" "maybe type" "temp"
    (1093149 'move' call_tmp[1093146](1093042 call literal _mt[203] _arg2[1093015]))
    unknown call_tmp[1093151] "expr temp" "maybe param" "maybe type" "temp"
    (1093154 'move' call_tmp[1093151](1093046 'call resolves' c"<" call_tmp[1093141] call_tmp[1093146]))
    unknown call_tmp[1093156] "expr temp" "maybe param" "maybe type" "temp"
    (1093159 'move' call_tmp[1093156](1093048 call nocapture _mt[203] _arg1[1093014]))
    unknown call_tmp[1093161] "expr temp" "maybe param" "maybe type" "temp"
    (1093164 'move' call_tmp[1093161](1093052 call nocapture _mt[203] _arg2[1093015]))
    unknown call_tmp[1093166] "expr temp" "maybe param" "maybe type" "temp"
    (1093169 'move' call_tmp[1093166](1093056 'call resolves' c"<" call_tmp[1093156] call_tmp[1093161]))
    unknown call_tmp[1093171] "expr temp" "maybe param" "maybe type" "temp"
    (1093174 'move' call_tmp[1093171](1093058 call ignorecase _mt[203] _arg1[1093014]))
    unknown call_tmp[1093176] "expr temp" "maybe param" "maybe type" "temp"
    (1093179 'move' call_tmp[1093176](1093062 call ignorecase _mt[203] _arg2[1093015]))
    unknown call_tmp[1093181] "expr temp" "maybe param" "maybe type" "temp"
    (1093184 'move' call_tmp[1093181](1093066 'call resolves' c"<" call_tmp[1093171] call_tmp[1093176]))
    unknown call_tmp[1093186] "expr temp" "maybe param" "maybe type" "temp"
    (1093189 'move' call_tmp[1093186](1093068 call multiline _mt[203] _arg1[1093014]))
    unknown call_tmp[1093191] "expr temp" "maybe param" "maybe type" "temp"
    (1093194 'move' call_tmp[1093191](1093072 call multiline _mt[203] _arg2[1093015]))
    unknown call_tmp[1093196] "expr temp" "maybe param" "maybe type" "temp"
    (1093199 'move' call_tmp[1093196](1093076 'call resolves' c"<" call_tmp[1093186] call_tmp[1093191]))
    unknown call_tmp[1093201] "expr temp" "maybe param" "maybe type" "temp"
    (1093204 'move' call_tmp[1093201](1093078 call dotnl _mt[203] _arg1[1093014]))
    unknown call_tmp[1093206] "expr temp" "maybe param" "maybe type" "temp"
    (1093209 'move' call_tmp[1093206](1093082 call dotnl _mt[203] _arg2[1093015]))
    unknown call_tmp[1093211] "expr temp" "maybe param" "maybe type" "temp"
    (1093214 'move' call_tmp[1093211](1093086 'call resolves' c"<" call_tmp[1093201] call_tmp[1093206]))
    unknown call_tmp[1093216] "expr temp" "maybe param" "maybe type" "temp"
    (1093219 'move' call_tmp[1093216](1093088 call nongreedy _mt[203] _arg1[1093014]))
    unknown call_tmp[1093221] "expr temp" "maybe param" "maybe type" "temp"
    (1093224 'move' call_tmp[1093221](1093092 call nongreedy _mt[203] _arg2[1093015]))
    unknown call_tmp[1093226] "expr temp" "maybe param" "maybe type" "temp"
    (1093229 'move' call_tmp[1093226](1093096 'call resolves' c"<" call_tmp[1093216] call_tmp[1093221]))
    unknown call_tmp[1093231] "expr temp" "maybe param" "maybe type" "temp"
    (1093234 'move' call_tmp[1093231](1093098 '&' call_tmp[1093121] call_tmp[1093136] call_tmp[1093151] call_tmp[1093166] call_tmp[1093181] call_tmp[1093196] call_tmp[1093211] call_tmp[1093226]))
    (1093109 'move' ret[1093104](1093108 'deref' call_tmp[1093231]))
    (1093106 return ret[1093104])
  }
  function qio_regex_options_t[153655].<[1092996](arg _mt[1092998]:_MT[201], arg this[1093000]:qio_regex_options_t[153655], arg _arg1[1093002]:qio_regex_options_t[153655], arg _arg2[1093003]:qio_regex_options_t[153655]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1093488]:bool[19] "RVV" "temp"
    unknown call_tmp[1093575] "expr temp" "maybe param" "maybe type" "temp"
    (1093578 'move' call_tmp[1093575](1093242 call utf8 _mt[203] _arg1[1093002]))
    unknown call_tmp[1093580] "expr temp" "maybe param" "maybe type" "temp"
    (1093583 'move' call_tmp[1093580](1093246 call utf8 _mt[203] _arg2[1093003]))
    unknown call_tmp[1093585] "expr temp" "maybe param" "maybe type" "temp"
    (1093588 'move' call_tmp[1093585](1093250 call chpl_field_lt call_tmp[1093575] call_tmp[1093580]))
    if call_tmp[1093585]
    {
      (1093493 'move' ret[1093488](1093492 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093590] "expr temp" "maybe param" "maybe type" "temp"
    (1093593 'move' call_tmp[1093590](1093256 call utf8 _mt[203] _arg1[1093002]))
    unknown call_tmp[1093595] "expr temp" "maybe param" "maybe type" "temp"
    (1093598 'move' call_tmp[1093595](1093260 call utf8 _mt[203] _arg2[1093003]))
    unknown call_tmp[1093600] "expr temp" "maybe param" "maybe type" "temp"
    (1093603 'move' call_tmp[1093600](1093264 call chpl_field_gt call_tmp[1093590] call_tmp[1093595]))
    if call_tmp[1093600]
    {
      (1093498 'move' ret[1093488](1093497 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093605] "expr temp" "maybe param" "maybe type" "temp"
    (1093608 'move' call_tmp[1093605](1093270 call posix _mt[203] _arg1[1093002]))
    unknown call_tmp[1093610] "expr temp" "maybe param" "maybe type" "temp"
    (1093613 'move' call_tmp[1093610](1093274 call posix _mt[203] _arg2[1093003]))
    unknown call_tmp[1093615] "expr temp" "maybe param" "maybe type" "temp"
    (1093618 'move' call_tmp[1093615](1093278 call chpl_field_lt call_tmp[1093605] call_tmp[1093610]))
    if call_tmp[1093615]
    {
      (1093503 'move' ret[1093488](1093502 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093620] "expr temp" "maybe param" "maybe type" "temp"
    (1093623 'move' call_tmp[1093620](1093284 call posix _mt[203] _arg1[1093002]))
    unknown call_tmp[1093625] "expr temp" "maybe param" "maybe type" "temp"
    (1093628 'move' call_tmp[1093625](1093288 call posix _mt[203] _arg2[1093003]))
    unknown call_tmp[1093630] "expr temp" "maybe param" "maybe type" "temp"
    (1093633 'move' call_tmp[1093630](1093292 call chpl_field_gt call_tmp[1093620] call_tmp[1093625]))
    if call_tmp[1093630]
    {
      (1093508 'move' ret[1093488](1093507 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093635] "expr temp" "maybe param" "maybe type" "temp"
    (1093638 'move' call_tmp[1093635](1093298 call literal _mt[203] _arg1[1093002]))
    unknown call_tmp[1093640] "expr temp" "maybe param" "maybe type" "temp"
    (1093643 'move' call_tmp[1093640](1093302 call literal _mt[203] _arg2[1093003]))
    unknown call_tmp[1093645] "expr temp" "maybe param" "maybe type" "temp"
    (1093648 'move' call_tmp[1093645](1093306 call chpl_field_lt call_tmp[1093635] call_tmp[1093640]))
    if call_tmp[1093645]
    {
      (1093513 'move' ret[1093488](1093512 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093650] "expr temp" "maybe param" "maybe type" "temp"
    (1093653 'move' call_tmp[1093650](1093312 call literal _mt[203] _arg1[1093002]))
    unknown call_tmp[1093655] "expr temp" "maybe param" "maybe type" "temp"
    (1093658 'move' call_tmp[1093655](1093316 call literal _mt[203] _arg2[1093003]))
    unknown call_tmp[1093660] "expr temp" "maybe param" "maybe type" "temp"
    (1093663 'move' call_tmp[1093660](1093320 call chpl_field_gt call_tmp[1093650] call_tmp[1093655]))
    if call_tmp[1093660]
    {
      (1093518 'move' ret[1093488](1093517 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093665] "expr temp" "maybe param" "maybe type" "temp"
    (1093668 'move' call_tmp[1093665](1093326 call nocapture _mt[203] _arg1[1093002]))
    unknown call_tmp[1093670] "expr temp" "maybe param" "maybe type" "temp"
    (1093673 'move' call_tmp[1093670](1093330 call nocapture _mt[203] _arg2[1093003]))
    unknown call_tmp[1093675] "expr temp" "maybe param" "maybe type" "temp"
    (1093678 'move' call_tmp[1093675](1093334 call chpl_field_lt call_tmp[1093665] call_tmp[1093670]))
    if call_tmp[1093675]
    {
      (1093523 'move' ret[1093488](1093522 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093680] "expr temp" "maybe param" "maybe type" "temp"
    (1093683 'move' call_tmp[1093680](1093340 call nocapture _mt[203] _arg1[1093002]))
    unknown call_tmp[1093685] "expr temp" "maybe param" "maybe type" "temp"
    (1093688 'move' call_tmp[1093685](1093344 call nocapture _mt[203] _arg2[1093003]))
    unknown call_tmp[1093690] "expr temp" "maybe param" "maybe type" "temp"
    (1093693 'move' call_tmp[1093690](1093348 call chpl_field_gt call_tmp[1093680] call_tmp[1093685]))
    if call_tmp[1093690]
    {
      (1093528 'move' ret[1093488](1093527 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093695] "expr temp" "maybe param" "maybe type" "temp"
    (1093698 'move' call_tmp[1093695](1093354 call ignorecase _mt[203] _arg1[1093002]))
    unknown call_tmp[1093700] "expr temp" "maybe param" "maybe type" "temp"
    (1093703 'move' call_tmp[1093700](1093358 call ignorecase _mt[203] _arg2[1093003]))
    unknown call_tmp[1093705] "expr temp" "maybe param" "maybe type" "temp"
    (1093708 'move' call_tmp[1093705](1093362 call chpl_field_lt call_tmp[1093695] call_tmp[1093700]))
    if call_tmp[1093705]
    {
      (1093533 'move' ret[1093488](1093532 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093710] "expr temp" "maybe param" "maybe type" "temp"
    (1093713 'move' call_tmp[1093710](1093368 call ignorecase _mt[203] _arg1[1093002]))
    unknown call_tmp[1093715] "expr temp" "maybe param" "maybe type" "temp"
    (1093718 'move' call_tmp[1093715](1093372 call ignorecase _mt[203] _arg2[1093003]))
    unknown call_tmp[1093720] "expr temp" "maybe param" "maybe type" "temp"
    (1093723 'move' call_tmp[1093720](1093376 call chpl_field_gt call_tmp[1093710] call_tmp[1093715]))
    if call_tmp[1093720]
    {
      (1093538 'move' ret[1093488](1093537 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093725] "expr temp" "maybe param" "maybe type" "temp"
    (1093728 'move' call_tmp[1093725](1093382 call multiline _mt[203] _arg1[1093002]))
    unknown call_tmp[1093730] "expr temp" "maybe param" "maybe type" "temp"
    (1093733 'move' call_tmp[1093730](1093386 call multiline _mt[203] _arg2[1093003]))
    unknown call_tmp[1093735] "expr temp" "maybe param" "maybe type" "temp"
    (1093738 'move' call_tmp[1093735](1093390 call chpl_field_lt call_tmp[1093725] call_tmp[1093730]))
    if call_tmp[1093735]
    {
      (1093543 'move' ret[1093488](1093542 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093740] "expr temp" "maybe param" "maybe type" "temp"
    (1093743 'move' call_tmp[1093740](1093396 call multiline _mt[203] _arg1[1093002]))
    unknown call_tmp[1093745] "expr temp" "maybe param" "maybe type" "temp"
    (1093748 'move' call_tmp[1093745](1093400 call multiline _mt[203] _arg2[1093003]))
    unknown call_tmp[1093750] "expr temp" "maybe param" "maybe type" "temp"
    (1093753 'move' call_tmp[1093750](1093404 call chpl_field_gt call_tmp[1093740] call_tmp[1093745]))
    if call_tmp[1093750]
    {
      (1093548 'move' ret[1093488](1093547 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093755] "expr temp" "maybe param" "maybe type" "temp"
    (1093758 'move' call_tmp[1093755](1093410 call dotnl _mt[203] _arg1[1093002]))
    unknown call_tmp[1093760] "expr temp" "maybe param" "maybe type" "temp"
    (1093763 'move' call_tmp[1093760](1093414 call dotnl _mt[203] _arg2[1093003]))
    unknown call_tmp[1093765] "expr temp" "maybe param" "maybe type" "temp"
    (1093768 'move' call_tmp[1093765](1093418 call chpl_field_lt call_tmp[1093755] call_tmp[1093760]))
    if call_tmp[1093765]
    {
      (1093553 'move' ret[1093488](1093552 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093770] "expr temp" "maybe param" "maybe type" "temp"
    (1093773 'move' call_tmp[1093770](1093424 call dotnl _mt[203] _arg1[1093002]))
    unknown call_tmp[1093775] "expr temp" "maybe param" "maybe type" "temp"
    (1093778 'move' call_tmp[1093775](1093428 call dotnl _mt[203] _arg2[1093003]))
    unknown call_tmp[1093780] "expr temp" "maybe param" "maybe type" "temp"
    (1093783 'move' call_tmp[1093780](1093432 call chpl_field_gt call_tmp[1093770] call_tmp[1093775]))
    if call_tmp[1093780]
    {
      (1093558 'move' ret[1093488](1093557 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093785] "expr temp" "maybe param" "maybe type" "temp"
    (1093788 'move' call_tmp[1093785](1093438 call nongreedy _mt[203] _arg1[1093002]))
    unknown call_tmp[1093790] "expr temp" "maybe param" "maybe type" "temp"
    (1093793 'move' call_tmp[1093790](1093442 call nongreedy _mt[203] _arg2[1093003]))
    unknown call_tmp[1093795] "expr temp" "maybe param" "maybe type" "temp"
    (1093798 'move' call_tmp[1093795](1093446 call chpl_field_lt call_tmp[1093785] call_tmp[1093790]))
    if call_tmp[1093795]
    {
      (1093563 'move' ret[1093488](1093562 'deref' 1))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    unknown call_tmp[1093800] "expr temp" "maybe param" "maybe type" "temp"
    (1093803 'move' call_tmp[1093800](1093452 call nongreedy _mt[203] _arg1[1093002]))
    unknown call_tmp[1093805] "expr temp" "maybe param" "maybe type" "temp"
    (1093808 'move' call_tmp[1093805](1093456 call nongreedy _mt[203] _arg2[1093003]))
    unknown call_tmp[1093810] "expr temp" "maybe param" "maybe type" "temp"
    (1093813 'move' call_tmp[1093810](1093460 call chpl_field_gt call_tmp[1093800] call_tmp[1093805]))
    if call_tmp[1093810]
    {
      (1093568 'move' ret[1093488](1093567 'deref' 0))
      gotoReturn _end_<[1093486] _end_<[1093486]
    }
    (1093573 'move' ret[1093488](1093572 'deref' 0))
    label _end_<[1093486]
    (1093490 return ret[1093488])
  }
  where {
    unknown call_tmp[1093815] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1093818 'move' call_tmp[1093815](1093006 'typeof' _arg1[1093002]))
    unknown call_tmp[1093820] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1093823 'move' call_tmp[1093820](1093008 'typeof' _arg2[1093003]))
    unknown call_tmp[1093825] "expr temp" "maybe param" "maybe type" "temp"
    (1093828 'move' call_tmp[1093825](1093010 call == call_tmp[1093815] call_tmp[1093820]))
    unknown call_tmp[1093830] "expr temp" "maybe param" "maybe type" "temp"
    (1093833 'move' call_tmp[1093830](1093236 call chpl_fields_are_comparable[1093012] _arg1[1093002] _arg2[1093003]))
    (1093240 '&' call_tmp[1093825] call_tmp[1093830])
  }
  function chpl_fields_are_comparable[1093851](arg _arg1[1093853]:qio_regex_options_t[153655], arg _arg2[1093854]:qio_regex_options_t[153655]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1093943]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1093950] "expr temp" "maybe param" "maybe type" "temp"
    (1093953 'move' call_tmp[1093950](1093857 call utf8 _mt[203] _arg1[1093853]))
    unknown call_tmp[1093955] "expr temp" "maybe param" "maybe type" "temp"
    (1093958 'move' call_tmp[1093955](1093861 call utf8 _mt[203] _arg2[1093854]))
    unknown call_tmp[1093960] "expr temp" "maybe param" "maybe type" "temp"
    (1093963 'move' call_tmp[1093960](1093865 'call resolves' c"<=" call_tmp[1093950] call_tmp[1093955]))
    unknown call_tmp[1093965] "expr temp" "maybe param" "maybe type" "temp"
    (1093968 'move' call_tmp[1093965](1093867 call posix _mt[203] _arg1[1093853]))
    unknown call_tmp[1093970] "expr temp" "maybe param" "maybe type" "temp"
    (1093973 'move' call_tmp[1093970](1093871 call posix _mt[203] _arg2[1093854]))
    unknown call_tmp[1093975] "expr temp" "maybe param" "maybe type" "temp"
    (1093978 'move' call_tmp[1093975](1093875 'call resolves' c"<=" call_tmp[1093965] call_tmp[1093970]))
    unknown call_tmp[1093980] "expr temp" "maybe param" "maybe type" "temp"
    (1093983 'move' call_tmp[1093980](1093877 call literal _mt[203] _arg1[1093853]))
    unknown call_tmp[1093985] "expr temp" "maybe param" "maybe type" "temp"
    (1093988 'move' call_tmp[1093985](1093881 call literal _mt[203] _arg2[1093854]))
    unknown call_tmp[1093990] "expr temp" "maybe param" "maybe type" "temp"
    (1093993 'move' call_tmp[1093990](1093885 'call resolves' c"<=" call_tmp[1093980] call_tmp[1093985]))
    unknown call_tmp[1093995] "expr temp" "maybe param" "maybe type" "temp"
    (1093998 'move' call_tmp[1093995](1093887 call nocapture _mt[203] _arg1[1093853]))
    unknown call_tmp[1094000] "expr temp" "maybe param" "maybe type" "temp"
    (1094003 'move' call_tmp[1094000](1093891 call nocapture _mt[203] _arg2[1093854]))
    unknown call_tmp[1094005] "expr temp" "maybe param" "maybe type" "temp"
    (1094008 'move' call_tmp[1094005](1093895 'call resolves' c"<=" call_tmp[1093995] call_tmp[1094000]))
    unknown call_tmp[1094010] "expr temp" "maybe param" "maybe type" "temp"
    (1094013 'move' call_tmp[1094010](1093897 call ignorecase _mt[203] _arg1[1093853]))
    unknown call_tmp[1094015] "expr temp" "maybe param" "maybe type" "temp"
    (1094018 'move' call_tmp[1094015](1093901 call ignorecase _mt[203] _arg2[1093854]))
    unknown call_tmp[1094020] "expr temp" "maybe param" "maybe type" "temp"
    (1094023 'move' call_tmp[1094020](1093905 'call resolves' c"<=" call_tmp[1094010] call_tmp[1094015]))
    unknown call_tmp[1094025] "expr temp" "maybe param" "maybe type" "temp"
    (1094028 'move' call_tmp[1094025](1093907 call multiline _mt[203] _arg1[1093853]))
    unknown call_tmp[1094030] "expr temp" "maybe param" "maybe type" "temp"
    (1094033 'move' call_tmp[1094030](1093911 call multiline _mt[203] _arg2[1093854]))
    unknown call_tmp[1094035] "expr temp" "maybe param" "maybe type" "temp"
    (1094038 'move' call_tmp[1094035](1093915 'call resolves' c"<=" call_tmp[1094025] call_tmp[1094030]))
    unknown call_tmp[1094040] "expr temp" "maybe param" "maybe type" "temp"
    (1094043 'move' call_tmp[1094040](1093917 call dotnl _mt[203] _arg1[1093853]))
    unknown call_tmp[1094045] "expr temp" "maybe param" "maybe type" "temp"
    (1094048 'move' call_tmp[1094045](1093921 call dotnl _mt[203] _arg2[1093854]))
    unknown call_tmp[1094050] "expr temp" "maybe param" "maybe type" "temp"
    (1094053 'move' call_tmp[1094050](1093925 'call resolves' c"<=" call_tmp[1094040] call_tmp[1094045]))
    unknown call_tmp[1094055] "expr temp" "maybe param" "maybe type" "temp"
    (1094058 'move' call_tmp[1094055](1093927 call nongreedy _mt[203] _arg1[1093853]))
    unknown call_tmp[1094060] "expr temp" "maybe param" "maybe type" "temp"
    (1094063 'move' call_tmp[1094060](1093931 call nongreedy _mt[203] _arg2[1093854]))
    unknown call_tmp[1094065] "expr temp" "maybe param" "maybe type" "temp"
    (1094068 'move' call_tmp[1094065](1093935 'call resolves' c"<=" call_tmp[1094055] call_tmp[1094060]))
    unknown call_tmp[1094070] "expr temp" "maybe param" "maybe type" "temp"
    (1094073 'move' call_tmp[1094070](1093937 '&' call_tmp[1093960] call_tmp[1093975] call_tmp[1093990] call_tmp[1094005] call_tmp[1094020] call_tmp[1094035] call_tmp[1094050] call_tmp[1094065]))
    (1093948 'move' ret[1093943](1093947 'deref' call_tmp[1094070]))
    (1093945 return ret[1093943])
  }
  function qio_regex_options_t[153655].<=[1093835](arg _mt[1093837]:_MT[201], arg this[1093839]:qio_regex_options_t[153655], arg _arg1[1093841]:qio_regex_options_t[153655], arg _arg2[1093842]:qio_regex_options_t[153655]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1094327]:bool[19] "RVV" "temp"
    unknown call_tmp[1094414] "expr temp" "maybe param" "maybe type" "temp"
    (1094417 'move' call_tmp[1094414](1094081 call utf8 _mt[203] _arg1[1093841]))
    unknown call_tmp[1094419] "expr temp" "maybe param" "maybe type" "temp"
    (1094422 'move' call_tmp[1094419](1094085 call utf8 _mt[203] _arg2[1093842]))
    unknown call_tmp[1094424] "expr temp" "maybe param" "maybe type" "temp"
    (1094427 'move' call_tmp[1094424](1094089 call chpl_field_lt call_tmp[1094414] call_tmp[1094419]))
    if call_tmp[1094424]
    {
      (1094332 'move' ret[1094327](1094331 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094429] "expr temp" "maybe param" "maybe type" "temp"
    (1094432 'move' call_tmp[1094429](1094095 call utf8 _mt[203] _arg1[1093841]))
    unknown call_tmp[1094434] "expr temp" "maybe param" "maybe type" "temp"
    (1094437 'move' call_tmp[1094434](1094099 call utf8 _mt[203] _arg2[1093842]))
    unknown call_tmp[1094439] "expr temp" "maybe param" "maybe type" "temp"
    (1094442 'move' call_tmp[1094439](1094103 call chpl_field_gt call_tmp[1094429] call_tmp[1094434]))
    if call_tmp[1094439]
    {
      (1094337 'move' ret[1094327](1094336 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094444] "expr temp" "maybe param" "maybe type" "temp"
    (1094447 'move' call_tmp[1094444](1094109 call posix _mt[203] _arg1[1093841]))
    unknown call_tmp[1094449] "expr temp" "maybe param" "maybe type" "temp"
    (1094452 'move' call_tmp[1094449](1094113 call posix _mt[203] _arg2[1093842]))
    unknown call_tmp[1094454] "expr temp" "maybe param" "maybe type" "temp"
    (1094457 'move' call_tmp[1094454](1094117 call chpl_field_lt call_tmp[1094444] call_tmp[1094449]))
    if call_tmp[1094454]
    {
      (1094342 'move' ret[1094327](1094341 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094459] "expr temp" "maybe param" "maybe type" "temp"
    (1094462 'move' call_tmp[1094459](1094123 call posix _mt[203] _arg1[1093841]))
    unknown call_tmp[1094464] "expr temp" "maybe param" "maybe type" "temp"
    (1094467 'move' call_tmp[1094464](1094127 call posix _mt[203] _arg2[1093842]))
    unknown call_tmp[1094469] "expr temp" "maybe param" "maybe type" "temp"
    (1094472 'move' call_tmp[1094469](1094131 call chpl_field_gt call_tmp[1094459] call_tmp[1094464]))
    if call_tmp[1094469]
    {
      (1094347 'move' ret[1094327](1094346 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094474] "expr temp" "maybe param" "maybe type" "temp"
    (1094477 'move' call_tmp[1094474](1094137 call literal _mt[203] _arg1[1093841]))
    unknown call_tmp[1094479] "expr temp" "maybe param" "maybe type" "temp"
    (1094482 'move' call_tmp[1094479](1094141 call literal _mt[203] _arg2[1093842]))
    unknown call_tmp[1094484] "expr temp" "maybe param" "maybe type" "temp"
    (1094487 'move' call_tmp[1094484](1094145 call chpl_field_lt call_tmp[1094474] call_tmp[1094479]))
    if call_tmp[1094484]
    {
      (1094352 'move' ret[1094327](1094351 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094489] "expr temp" "maybe param" "maybe type" "temp"
    (1094492 'move' call_tmp[1094489](1094151 call literal _mt[203] _arg1[1093841]))
    unknown call_tmp[1094494] "expr temp" "maybe param" "maybe type" "temp"
    (1094497 'move' call_tmp[1094494](1094155 call literal _mt[203] _arg2[1093842]))
    unknown call_tmp[1094499] "expr temp" "maybe param" "maybe type" "temp"
    (1094502 'move' call_tmp[1094499](1094159 call chpl_field_gt call_tmp[1094489] call_tmp[1094494]))
    if call_tmp[1094499]
    {
      (1094357 'move' ret[1094327](1094356 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094504] "expr temp" "maybe param" "maybe type" "temp"
    (1094507 'move' call_tmp[1094504](1094165 call nocapture _mt[203] _arg1[1093841]))
    unknown call_tmp[1094509] "expr temp" "maybe param" "maybe type" "temp"
    (1094512 'move' call_tmp[1094509](1094169 call nocapture _mt[203] _arg2[1093842]))
    unknown call_tmp[1094514] "expr temp" "maybe param" "maybe type" "temp"
    (1094517 'move' call_tmp[1094514](1094173 call chpl_field_lt call_tmp[1094504] call_tmp[1094509]))
    if call_tmp[1094514]
    {
      (1094362 'move' ret[1094327](1094361 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094519] "expr temp" "maybe param" "maybe type" "temp"
    (1094522 'move' call_tmp[1094519](1094179 call nocapture _mt[203] _arg1[1093841]))
    unknown call_tmp[1094524] "expr temp" "maybe param" "maybe type" "temp"
    (1094527 'move' call_tmp[1094524](1094183 call nocapture _mt[203] _arg2[1093842]))
    unknown call_tmp[1094529] "expr temp" "maybe param" "maybe type" "temp"
    (1094532 'move' call_tmp[1094529](1094187 call chpl_field_gt call_tmp[1094519] call_tmp[1094524]))
    if call_tmp[1094529]
    {
      (1094367 'move' ret[1094327](1094366 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094534] "expr temp" "maybe param" "maybe type" "temp"
    (1094537 'move' call_tmp[1094534](1094193 call ignorecase _mt[203] _arg1[1093841]))
    unknown call_tmp[1094539] "expr temp" "maybe param" "maybe type" "temp"
    (1094542 'move' call_tmp[1094539](1094197 call ignorecase _mt[203] _arg2[1093842]))
    unknown call_tmp[1094544] "expr temp" "maybe param" "maybe type" "temp"
    (1094547 'move' call_tmp[1094544](1094201 call chpl_field_lt call_tmp[1094534] call_tmp[1094539]))
    if call_tmp[1094544]
    {
      (1094372 'move' ret[1094327](1094371 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094549] "expr temp" "maybe param" "maybe type" "temp"
    (1094552 'move' call_tmp[1094549](1094207 call ignorecase _mt[203] _arg1[1093841]))
    unknown call_tmp[1094554] "expr temp" "maybe param" "maybe type" "temp"
    (1094557 'move' call_tmp[1094554](1094211 call ignorecase _mt[203] _arg2[1093842]))
    unknown call_tmp[1094559] "expr temp" "maybe param" "maybe type" "temp"
    (1094562 'move' call_tmp[1094559](1094215 call chpl_field_gt call_tmp[1094549] call_tmp[1094554]))
    if call_tmp[1094559]
    {
      (1094377 'move' ret[1094327](1094376 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094564] "expr temp" "maybe param" "maybe type" "temp"
    (1094567 'move' call_tmp[1094564](1094221 call multiline _mt[203] _arg1[1093841]))
    unknown call_tmp[1094569] "expr temp" "maybe param" "maybe type" "temp"
    (1094572 'move' call_tmp[1094569](1094225 call multiline _mt[203] _arg2[1093842]))
    unknown call_tmp[1094574] "expr temp" "maybe param" "maybe type" "temp"
    (1094577 'move' call_tmp[1094574](1094229 call chpl_field_lt call_tmp[1094564] call_tmp[1094569]))
    if call_tmp[1094574]
    {
      (1094382 'move' ret[1094327](1094381 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094579] "expr temp" "maybe param" "maybe type" "temp"
    (1094582 'move' call_tmp[1094579](1094235 call multiline _mt[203] _arg1[1093841]))
    unknown call_tmp[1094584] "expr temp" "maybe param" "maybe type" "temp"
    (1094587 'move' call_tmp[1094584](1094239 call multiline _mt[203] _arg2[1093842]))
    unknown call_tmp[1094589] "expr temp" "maybe param" "maybe type" "temp"
    (1094592 'move' call_tmp[1094589](1094243 call chpl_field_gt call_tmp[1094579] call_tmp[1094584]))
    if call_tmp[1094589]
    {
      (1094387 'move' ret[1094327](1094386 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094594] "expr temp" "maybe param" "maybe type" "temp"
    (1094597 'move' call_tmp[1094594](1094249 call dotnl _mt[203] _arg1[1093841]))
    unknown call_tmp[1094599] "expr temp" "maybe param" "maybe type" "temp"
    (1094602 'move' call_tmp[1094599](1094253 call dotnl _mt[203] _arg2[1093842]))
    unknown call_tmp[1094604] "expr temp" "maybe param" "maybe type" "temp"
    (1094607 'move' call_tmp[1094604](1094257 call chpl_field_lt call_tmp[1094594] call_tmp[1094599]))
    if call_tmp[1094604]
    {
      (1094392 'move' ret[1094327](1094391 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094609] "expr temp" "maybe param" "maybe type" "temp"
    (1094612 'move' call_tmp[1094609](1094263 call dotnl _mt[203] _arg1[1093841]))
    unknown call_tmp[1094614] "expr temp" "maybe param" "maybe type" "temp"
    (1094617 'move' call_tmp[1094614](1094267 call dotnl _mt[203] _arg2[1093842]))
    unknown call_tmp[1094619] "expr temp" "maybe param" "maybe type" "temp"
    (1094622 'move' call_tmp[1094619](1094271 call chpl_field_gt call_tmp[1094609] call_tmp[1094614]))
    if call_tmp[1094619]
    {
      (1094397 'move' ret[1094327](1094396 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094624] "expr temp" "maybe param" "maybe type" "temp"
    (1094627 'move' call_tmp[1094624](1094277 call nongreedy _mt[203] _arg1[1093841]))
    unknown call_tmp[1094629] "expr temp" "maybe param" "maybe type" "temp"
    (1094632 'move' call_tmp[1094629](1094281 call nongreedy _mt[203] _arg2[1093842]))
    unknown call_tmp[1094634] "expr temp" "maybe param" "maybe type" "temp"
    (1094637 'move' call_tmp[1094634](1094285 call chpl_field_lt call_tmp[1094624] call_tmp[1094629]))
    if call_tmp[1094634]
    {
      (1094402 'move' ret[1094327](1094401 'deref' 1))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    unknown call_tmp[1094639] "expr temp" "maybe param" "maybe type" "temp"
    (1094642 'move' call_tmp[1094639](1094291 call nongreedy _mt[203] _arg1[1093841]))
    unknown call_tmp[1094644] "expr temp" "maybe param" "maybe type" "temp"
    (1094647 'move' call_tmp[1094644](1094295 call nongreedy _mt[203] _arg2[1093842]))
    unknown call_tmp[1094649] "expr temp" "maybe param" "maybe type" "temp"
    (1094652 'move' call_tmp[1094649](1094299 call chpl_field_gt call_tmp[1094639] call_tmp[1094644]))
    if call_tmp[1094649]
    {
      (1094407 'move' ret[1094327](1094406 'deref' 0))
      gotoReturn _end_<=[1094325] _end_<=[1094325]
    }
    (1094412 'move' ret[1094327](1094411 'deref' 1))
    label _end_<=[1094325]
    (1094329 return ret[1094327])
  }
  where {
    unknown call_tmp[1094654] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1094657 'move' call_tmp[1094654](1093845 'typeof' _arg1[1093841]))
    unknown call_tmp[1094659] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1094662 'move' call_tmp[1094659](1093847 'typeof' _arg2[1093842]))
    unknown call_tmp[1094664] "expr temp" "maybe param" "maybe type" "temp"
    (1094667 'move' call_tmp[1094664](1093849 call == call_tmp[1094654] call_tmp[1094659]))
    unknown call_tmp[1094669] "expr temp" "maybe param" "maybe type" "temp"
    (1094672 'move' call_tmp[1094669](1094075 call chpl_fields_are_comparable[1093851] _arg1[1093841] _arg2[1093842]))
    (1094079 '&' call_tmp[1094664] call_tmp[1094669])
  }
  function chpl_fields_are_comparable[1094690](arg _arg1[1094692]:qio_regex_options_t[153655], arg _arg2[1094693]:qio_regex_options_t[153655]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1094782]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1094789] "expr temp" "maybe param" "maybe type" "temp"
    (1094792 'move' call_tmp[1094789](1094696 call utf8 _mt[203] _arg1[1094692]))
    unknown call_tmp[1094794] "expr temp" "maybe param" "maybe type" "temp"
    (1094797 'move' call_tmp[1094794](1094700 call utf8 _mt[203] _arg2[1094693]))
    unknown call_tmp[1094799] "expr temp" "maybe param" "maybe type" "temp"
    (1094802 'move' call_tmp[1094799](1094704 'call resolves' c">" call_tmp[1094789] call_tmp[1094794]))
    unknown call_tmp[1094804] "expr temp" "maybe param" "maybe type" "temp"
    (1094807 'move' call_tmp[1094804](1094706 call posix _mt[203] _arg1[1094692]))
    unknown call_tmp[1094809] "expr temp" "maybe param" "maybe type" "temp"
    (1094812 'move' call_tmp[1094809](1094710 call posix _mt[203] _arg2[1094693]))
    unknown call_tmp[1094814] "expr temp" "maybe param" "maybe type" "temp"
    (1094817 'move' call_tmp[1094814](1094714 'call resolves' c">" call_tmp[1094804] call_tmp[1094809]))
    unknown call_tmp[1094819] "expr temp" "maybe param" "maybe type" "temp"
    (1094822 'move' call_tmp[1094819](1094716 call literal _mt[203] _arg1[1094692]))
    unknown call_tmp[1094824] "expr temp" "maybe param" "maybe type" "temp"
    (1094827 'move' call_tmp[1094824](1094720 call literal _mt[203] _arg2[1094693]))
    unknown call_tmp[1094829] "expr temp" "maybe param" "maybe type" "temp"
    (1094832 'move' call_tmp[1094829](1094724 'call resolves' c">" call_tmp[1094819] call_tmp[1094824]))
    unknown call_tmp[1094834] "expr temp" "maybe param" "maybe type" "temp"
    (1094837 'move' call_tmp[1094834](1094726 call nocapture _mt[203] _arg1[1094692]))
    unknown call_tmp[1094839] "expr temp" "maybe param" "maybe type" "temp"
    (1094842 'move' call_tmp[1094839](1094730 call nocapture _mt[203] _arg2[1094693]))
    unknown call_tmp[1094844] "expr temp" "maybe param" "maybe type" "temp"
    (1094847 'move' call_tmp[1094844](1094734 'call resolves' c">" call_tmp[1094834] call_tmp[1094839]))
    unknown call_tmp[1094849] "expr temp" "maybe param" "maybe type" "temp"
    (1094852 'move' call_tmp[1094849](1094736 call ignorecase _mt[203] _arg1[1094692]))
    unknown call_tmp[1094854] "expr temp" "maybe param" "maybe type" "temp"
    (1094857 'move' call_tmp[1094854](1094740 call ignorecase _mt[203] _arg2[1094693]))
    unknown call_tmp[1094859] "expr temp" "maybe param" "maybe type" "temp"
    (1094862 'move' call_tmp[1094859](1094744 'call resolves' c">" call_tmp[1094849] call_tmp[1094854]))
    unknown call_tmp[1094864] "expr temp" "maybe param" "maybe type" "temp"
    (1094867 'move' call_tmp[1094864](1094746 call multiline _mt[203] _arg1[1094692]))
    unknown call_tmp[1094869] "expr temp" "maybe param" "maybe type" "temp"
    (1094872 'move' call_tmp[1094869](1094750 call multiline _mt[203] _arg2[1094693]))
    unknown call_tmp[1094874] "expr temp" "maybe param" "maybe type" "temp"
    (1094877 'move' call_tmp[1094874](1094754 'call resolves' c">" call_tmp[1094864] call_tmp[1094869]))
    unknown call_tmp[1094879] "expr temp" "maybe param" "maybe type" "temp"
    (1094882 'move' call_tmp[1094879](1094756 call dotnl _mt[203] _arg1[1094692]))
    unknown call_tmp[1094884] "expr temp" "maybe param" "maybe type" "temp"
    (1094887 'move' call_tmp[1094884](1094760 call dotnl _mt[203] _arg2[1094693]))
    unknown call_tmp[1094889] "expr temp" "maybe param" "maybe type" "temp"
    (1094892 'move' call_tmp[1094889](1094764 'call resolves' c">" call_tmp[1094879] call_tmp[1094884]))
    unknown call_tmp[1094894] "expr temp" "maybe param" "maybe type" "temp"
    (1094897 'move' call_tmp[1094894](1094766 call nongreedy _mt[203] _arg1[1094692]))
    unknown call_tmp[1094899] "expr temp" "maybe param" "maybe type" "temp"
    (1094902 'move' call_tmp[1094899](1094770 call nongreedy _mt[203] _arg2[1094693]))
    unknown call_tmp[1094904] "expr temp" "maybe param" "maybe type" "temp"
    (1094907 'move' call_tmp[1094904](1094774 'call resolves' c">" call_tmp[1094894] call_tmp[1094899]))
    unknown call_tmp[1094909] "expr temp" "maybe param" "maybe type" "temp"
    (1094912 'move' call_tmp[1094909](1094776 '&' call_tmp[1094799] call_tmp[1094814] call_tmp[1094829] call_tmp[1094844] call_tmp[1094859] call_tmp[1094874] call_tmp[1094889] call_tmp[1094904]))
    (1094787 'move' ret[1094782](1094786 'deref' call_tmp[1094909]))
    (1094784 return ret[1094782])
  }
  function qio_regex_options_t[153655].>[1094674](arg _mt[1094676]:_MT[201], arg this[1094678]:qio_regex_options_t[153655], arg _arg1[1094680]:qio_regex_options_t[153655], arg _arg2[1094681]:qio_regex_options_t[153655]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1095166]:bool[19] "RVV" "temp"
    unknown call_tmp[1095253] "expr temp" "maybe param" "maybe type" "temp"
    (1095256 'move' call_tmp[1095253](1094920 call utf8 _mt[203] _arg1[1094680]))
    unknown call_tmp[1095258] "expr temp" "maybe param" "maybe type" "temp"
    (1095261 'move' call_tmp[1095258](1094924 call utf8 _mt[203] _arg2[1094681]))
    unknown call_tmp[1095263] "expr temp" "maybe param" "maybe type" "temp"
    (1095266 'move' call_tmp[1095263](1094928 call chpl_field_gt call_tmp[1095253] call_tmp[1095258]))
    if call_tmp[1095263]
    {
      (1095171 'move' ret[1095166](1095170 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095268] "expr temp" "maybe param" "maybe type" "temp"
    (1095271 'move' call_tmp[1095268](1094934 call utf8 _mt[203] _arg1[1094680]))
    unknown call_tmp[1095273] "expr temp" "maybe param" "maybe type" "temp"
    (1095276 'move' call_tmp[1095273](1094938 call utf8 _mt[203] _arg2[1094681]))
    unknown call_tmp[1095278] "expr temp" "maybe param" "maybe type" "temp"
    (1095281 'move' call_tmp[1095278](1094942 call chpl_field_lt call_tmp[1095268] call_tmp[1095273]))
    if call_tmp[1095278]
    {
      (1095176 'move' ret[1095166](1095175 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095283] "expr temp" "maybe param" "maybe type" "temp"
    (1095286 'move' call_tmp[1095283](1094948 call posix _mt[203] _arg1[1094680]))
    unknown call_tmp[1095288] "expr temp" "maybe param" "maybe type" "temp"
    (1095291 'move' call_tmp[1095288](1094952 call posix _mt[203] _arg2[1094681]))
    unknown call_tmp[1095293] "expr temp" "maybe param" "maybe type" "temp"
    (1095296 'move' call_tmp[1095293](1094956 call chpl_field_gt call_tmp[1095283] call_tmp[1095288]))
    if call_tmp[1095293]
    {
      (1095181 'move' ret[1095166](1095180 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095298] "expr temp" "maybe param" "maybe type" "temp"
    (1095301 'move' call_tmp[1095298](1094962 call posix _mt[203] _arg1[1094680]))
    unknown call_tmp[1095303] "expr temp" "maybe param" "maybe type" "temp"
    (1095306 'move' call_tmp[1095303](1094966 call posix _mt[203] _arg2[1094681]))
    unknown call_tmp[1095308] "expr temp" "maybe param" "maybe type" "temp"
    (1095311 'move' call_tmp[1095308](1094970 call chpl_field_lt call_tmp[1095298] call_tmp[1095303]))
    if call_tmp[1095308]
    {
      (1095186 'move' ret[1095166](1095185 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095313] "expr temp" "maybe param" "maybe type" "temp"
    (1095316 'move' call_tmp[1095313](1094976 call literal _mt[203] _arg1[1094680]))
    unknown call_tmp[1095318] "expr temp" "maybe param" "maybe type" "temp"
    (1095321 'move' call_tmp[1095318](1094980 call literal _mt[203] _arg2[1094681]))
    unknown call_tmp[1095323] "expr temp" "maybe param" "maybe type" "temp"
    (1095326 'move' call_tmp[1095323](1094984 call chpl_field_gt call_tmp[1095313] call_tmp[1095318]))
    if call_tmp[1095323]
    {
      (1095191 'move' ret[1095166](1095190 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095328] "expr temp" "maybe param" "maybe type" "temp"
    (1095331 'move' call_tmp[1095328](1094990 call literal _mt[203] _arg1[1094680]))
    unknown call_tmp[1095333] "expr temp" "maybe param" "maybe type" "temp"
    (1095336 'move' call_tmp[1095333](1094994 call literal _mt[203] _arg2[1094681]))
    unknown call_tmp[1095338] "expr temp" "maybe param" "maybe type" "temp"
    (1095341 'move' call_tmp[1095338](1094998 call chpl_field_lt call_tmp[1095328] call_tmp[1095333]))
    if call_tmp[1095338]
    {
      (1095196 'move' ret[1095166](1095195 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095343] "expr temp" "maybe param" "maybe type" "temp"
    (1095346 'move' call_tmp[1095343](1095004 call nocapture _mt[203] _arg1[1094680]))
    unknown call_tmp[1095348] "expr temp" "maybe param" "maybe type" "temp"
    (1095351 'move' call_tmp[1095348](1095008 call nocapture _mt[203] _arg2[1094681]))
    unknown call_tmp[1095353] "expr temp" "maybe param" "maybe type" "temp"
    (1095356 'move' call_tmp[1095353](1095012 call chpl_field_gt call_tmp[1095343] call_tmp[1095348]))
    if call_tmp[1095353]
    {
      (1095201 'move' ret[1095166](1095200 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095358] "expr temp" "maybe param" "maybe type" "temp"
    (1095361 'move' call_tmp[1095358](1095018 call nocapture _mt[203] _arg1[1094680]))
    unknown call_tmp[1095363] "expr temp" "maybe param" "maybe type" "temp"
    (1095366 'move' call_tmp[1095363](1095022 call nocapture _mt[203] _arg2[1094681]))
    unknown call_tmp[1095368] "expr temp" "maybe param" "maybe type" "temp"
    (1095371 'move' call_tmp[1095368](1095026 call chpl_field_lt call_tmp[1095358] call_tmp[1095363]))
    if call_tmp[1095368]
    {
      (1095206 'move' ret[1095166](1095205 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095373] "expr temp" "maybe param" "maybe type" "temp"
    (1095376 'move' call_tmp[1095373](1095032 call ignorecase _mt[203] _arg1[1094680]))
    unknown call_tmp[1095378] "expr temp" "maybe param" "maybe type" "temp"
    (1095381 'move' call_tmp[1095378](1095036 call ignorecase _mt[203] _arg2[1094681]))
    unknown call_tmp[1095383] "expr temp" "maybe param" "maybe type" "temp"
    (1095386 'move' call_tmp[1095383](1095040 call chpl_field_gt call_tmp[1095373] call_tmp[1095378]))
    if call_tmp[1095383]
    {
      (1095211 'move' ret[1095166](1095210 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095388] "expr temp" "maybe param" "maybe type" "temp"
    (1095391 'move' call_tmp[1095388](1095046 call ignorecase _mt[203] _arg1[1094680]))
    unknown call_tmp[1095393] "expr temp" "maybe param" "maybe type" "temp"
    (1095396 'move' call_tmp[1095393](1095050 call ignorecase _mt[203] _arg2[1094681]))
    unknown call_tmp[1095398] "expr temp" "maybe param" "maybe type" "temp"
    (1095401 'move' call_tmp[1095398](1095054 call chpl_field_lt call_tmp[1095388] call_tmp[1095393]))
    if call_tmp[1095398]
    {
      (1095216 'move' ret[1095166](1095215 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095403] "expr temp" "maybe param" "maybe type" "temp"
    (1095406 'move' call_tmp[1095403](1095060 call multiline _mt[203] _arg1[1094680]))
    unknown call_tmp[1095408] "expr temp" "maybe param" "maybe type" "temp"
    (1095411 'move' call_tmp[1095408](1095064 call multiline _mt[203] _arg2[1094681]))
    unknown call_tmp[1095413] "expr temp" "maybe param" "maybe type" "temp"
    (1095416 'move' call_tmp[1095413](1095068 call chpl_field_gt call_tmp[1095403] call_tmp[1095408]))
    if call_tmp[1095413]
    {
      (1095221 'move' ret[1095166](1095220 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095418] "expr temp" "maybe param" "maybe type" "temp"
    (1095421 'move' call_tmp[1095418](1095074 call multiline _mt[203] _arg1[1094680]))
    unknown call_tmp[1095423] "expr temp" "maybe param" "maybe type" "temp"
    (1095426 'move' call_tmp[1095423](1095078 call multiline _mt[203] _arg2[1094681]))
    unknown call_tmp[1095428] "expr temp" "maybe param" "maybe type" "temp"
    (1095431 'move' call_tmp[1095428](1095082 call chpl_field_lt call_tmp[1095418] call_tmp[1095423]))
    if call_tmp[1095428]
    {
      (1095226 'move' ret[1095166](1095225 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095433] "expr temp" "maybe param" "maybe type" "temp"
    (1095436 'move' call_tmp[1095433](1095088 call dotnl _mt[203] _arg1[1094680]))
    unknown call_tmp[1095438] "expr temp" "maybe param" "maybe type" "temp"
    (1095441 'move' call_tmp[1095438](1095092 call dotnl _mt[203] _arg2[1094681]))
    unknown call_tmp[1095443] "expr temp" "maybe param" "maybe type" "temp"
    (1095446 'move' call_tmp[1095443](1095096 call chpl_field_gt call_tmp[1095433] call_tmp[1095438]))
    if call_tmp[1095443]
    {
      (1095231 'move' ret[1095166](1095230 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095448] "expr temp" "maybe param" "maybe type" "temp"
    (1095451 'move' call_tmp[1095448](1095102 call dotnl _mt[203] _arg1[1094680]))
    unknown call_tmp[1095453] "expr temp" "maybe param" "maybe type" "temp"
    (1095456 'move' call_tmp[1095453](1095106 call dotnl _mt[203] _arg2[1094681]))
    unknown call_tmp[1095458] "expr temp" "maybe param" "maybe type" "temp"
    (1095461 'move' call_tmp[1095458](1095110 call chpl_field_lt call_tmp[1095448] call_tmp[1095453]))
    if call_tmp[1095458]
    {
      (1095236 'move' ret[1095166](1095235 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095463] "expr temp" "maybe param" "maybe type" "temp"
    (1095466 'move' call_tmp[1095463](1095116 call nongreedy _mt[203] _arg1[1094680]))
    unknown call_tmp[1095468] "expr temp" "maybe param" "maybe type" "temp"
    (1095471 'move' call_tmp[1095468](1095120 call nongreedy _mt[203] _arg2[1094681]))
    unknown call_tmp[1095473] "expr temp" "maybe param" "maybe type" "temp"
    (1095476 'move' call_tmp[1095473](1095124 call chpl_field_gt call_tmp[1095463] call_tmp[1095468]))
    if call_tmp[1095473]
    {
      (1095241 'move' ret[1095166](1095240 'deref' 1))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    unknown call_tmp[1095478] "expr temp" "maybe param" "maybe type" "temp"
    (1095481 'move' call_tmp[1095478](1095130 call nongreedy _mt[203] _arg1[1094680]))
    unknown call_tmp[1095483] "expr temp" "maybe param" "maybe type" "temp"
    (1095486 'move' call_tmp[1095483](1095134 call nongreedy _mt[203] _arg2[1094681]))
    unknown call_tmp[1095488] "expr temp" "maybe param" "maybe type" "temp"
    (1095491 'move' call_tmp[1095488](1095138 call chpl_field_lt call_tmp[1095478] call_tmp[1095483]))
    if call_tmp[1095488]
    {
      (1095246 'move' ret[1095166](1095245 'deref' 0))
      gotoReturn _end_>[1095164] _end_>[1095164]
    }
    (1095251 'move' ret[1095166](1095250 'deref' 0))
    label _end_>[1095164]
    (1095168 return ret[1095166])
  }
  where {
    unknown call_tmp[1095493] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1095496 'move' call_tmp[1095493](1094684 'typeof' _arg1[1094680]))
    unknown call_tmp[1095498] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1095501 'move' call_tmp[1095498](1094686 'typeof' _arg2[1094681]))
    unknown call_tmp[1095503] "expr temp" "maybe param" "maybe type" "temp"
    (1095506 'move' call_tmp[1095503](1094688 call == call_tmp[1095493] call_tmp[1095498]))
    unknown call_tmp[1095508] "expr temp" "maybe param" "maybe type" "temp"
    (1095511 'move' call_tmp[1095508](1094914 call chpl_fields_are_comparable[1094690] _arg1[1094680] _arg2[1094681]))
    (1094918 '&' call_tmp[1095503] call_tmp[1095508])
  }
  function chpl_fields_are_comparable[1095529](arg _arg1[1095531]:qio_regex_options_t[153655], arg _arg2[1095532]:qio_regex_options_t[153655]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1095621]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1095628] "expr temp" "maybe param" "maybe type" "temp"
    (1095631 'move' call_tmp[1095628](1095535 call utf8 _mt[203] _arg1[1095531]))
    unknown call_tmp[1095633] "expr temp" "maybe param" "maybe type" "temp"
    (1095636 'move' call_tmp[1095633](1095539 call utf8 _mt[203] _arg2[1095532]))
    unknown call_tmp[1095638] "expr temp" "maybe param" "maybe type" "temp"
    (1095641 'move' call_tmp[1095638](1095543 'call resolves' c">=" call_tmp[1095628] call_tmp[1095633]))
    unknown call_tmp[1095643] "expr temp" "maybe param" "maybe type" "temp"
    (1095646 'move' call_tmp[1095643](1095545 call posix _mt[203] _arg1[1095531]))
    unknown call_tmp[1095648] "expr temp" "maybe param" "maybe type" "temp"
    (1095651 'move' call_tmp[1095648](1095549 call posix _mt[203] _arg2[1095532]))
    unknown call_tmp[1095653] "expr temp" "maybe param" "maybe type" "temp"
    (1095656 'move' call_tmp[1095653](1095553 'call resolves' c">=" call_tmp[1095643] call_tmp[1095648]))
    unknown call_tmp[1095658] "expr temp" "maybe param" "maybe type" "temp"
    (1095661 'move' call_tmp[1095658](1095555 call literal _mt[203] _arg1[1095531]))
    unknown call_tmp[1095663] "expr temp" "maybe param" "maybe type" "temp"
    (1095666 'move' call_tmp[1095663](1095559 call literal _mt[203] _arg2[1095532]))
    unknown call_tmp[1095668] "expr temp" "maybe param" "maybe type" "temp"
    (1095671 'move' call_tmp[1095668](1095563 'call resolves' c">=" call_tmp[1095658] call_tmp[1095663]))
    unknown call_tmp[1095673] "expr temp" "maybe param" "maybe type" "temp"
    (1095676 'move' call_tmp[1095673](1095565 call nocapture _mt[203] _arg1[1095531]))
    unknown call_tmp[1095678] "expr temp" "maybe param" "maybe type" "temp"
    (1095681 'move' call_tmp[1095678](1095569 call nocapture _mt[203] _arg2[1095532]))
    unknown call_tmp[1095683] "expr temp" "maybe param" "maybe type" "temp"
    (1095686 'move' call_tmp[1095683](1095573 'call resolves' c">=" call_tmp[1095673] call_tmp[1095678]))
    unknown call_tmp[1095688] "expr temp" "maybe param" "maybe type" "temp"
    (1095691 'move' call_tmp[1095688](1095575 call ignorecase _mt[203] _arg1[1095531]))
    unknown call_tmp[1095693] "expr temp" "maybe param" "maybe type" "temp"
    (1095696 'move' call_tmp[1095693](1095579 call ignorecase _mt[203] _arg2[1095532]))
    unknown call_tmp[1095698] "expr temp" "maybe param" "maybe type" "temp"
    (1095701 'move' call_tmp[1095698](1095583 'call resolves' c">=" call_tmp[1095688] call_tmp[1095693]))
    unknown call_tmp[1095703] "expr temp" "maybe param" "maybe type" "temp"
    (1095706 'move' call_tmp[1095703](1095585 call multiline _mt[203] _arg1[1095531]))
    unknown call_tmp[1095708] "expr temp" "maybe param" "maybe type" "temp"
    (1095711 'move' call_tmp[1095708](1095589 call multiline _mt[203] _arg2[1095532]))
    unknown call_tmp[1095713] "expr temp" "maybe param" "maybe type" "temp"
    (1095716 'move' call_tmp[1095713](1095593 'call resolves' c">=" call_tmp[1095703] call_tmp[1095708]))
    unknown call_tmp[1095718] "expr temp" "maybe param" "maybe type" "temp"
    (1095721 'move' call_tmp[1095718](1095595 call dotnl _mt[203] _arg1[1095531]))
    unknown call_tmp[1095723] "expr temp" "maybe param" "maybe type" "temp"
    (1095726 'move' call_tmp[1095723](1095599 call dotnl _mt[203] _arg2[1095532]))
    unknown call_tmp[1095728] "expr temp" "maybe param" "maybe type" "temp"
    (1095731 'move' call_tmp[1095728](1095603 'call resolves' c">=" call_tmp[1095718] call_tmp[1095723]))
    unknown call_tmp[1095733] "expr temp" "maybe param" "maybe type" "temp"
    (1095736 'move' call_tmp[1095733](1095605 call nongreedy _mt[203] _arg1[1095531]))
    unknown call_tmp[1095738] "expr temp" "maybe param" "maybe type" "temp"
    (1095741 'move' call_tmp[1095738](1095609 call nongreedy _mt[203] _arg2[1095532]))
    unknown call_tmp[1095743] "expr temp" "maybe param" "maybe type" "temp"
    (1095746 'move' call_tmp[1095743](1095613 'call resolves' c">=" call_tmp[1095733] call_tmp[1095738]))
    unknown call_tmp[1095748] "expr temp" "maybe param" "maybe type" "temp"
    (1095751 'move' call_tmp[1095748](1095615 '&' call_tmp[1095638] call_tmp[1095653] call_tmp[1095668] call_tmp[1095683] call_tmp[1095698] call_tmp[1095713] call_tmp[1095728] call_tmp[1095743]))
    (1095626 'move' ret[1095621](1095625 'deref' call_tmp[1095748]))
    (1095623 return ret[1095621])
  }
  function qio_regex_options_t[153655].>=[1095513](arg _mt[1095515]:_MT[201], arg this[1095517]:qio_regex_options_t[153655], arg _arg1[1095519]:qio_regex_options_t[153655], arg _arg2[1095520]:qio_regex_options_t[153655]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1096005]:bool[19] "RVV" "temp"
    unknown call_tmp[1096092] "expr temp" "maybe param" "maybe type" "temp"
    (1096095 'move' call_tmp[1096092](1095759 call utf8 _mt[203] _arg1[1095519]))
    unknown call_tmp[1096097] "expr temp" "maybe param" "maybe type" "temp"
    (1096100 'move' call_tmp[1096097](1095763 call utf8 _mt[203] _arg2[1095520]))
    unknown call_tmp[1096102] "expr temp" "maybe param" "maybe type" "temp"
    (1096105 'move' call_tmp[1096102](1095767 call chpl_field_gt call_tmp[1096092] call_tmp[1096097]))
    if call_tmp[1096102]
    {
      (1096010 'move' ret[1096005](1096009 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096107] "expr temp" "maybe param" "maybe type" "temp"
    (1096110 'move' call_tmp[1096107](1095773 call utf8 _mt[203] _arg1[1095519]))
    unknown call_tmp[1096112] "expr temp" "maybe param" "maybe type" "temp"
    (1096115 'move' call_tmp[1096112](1095777 call utf8 _mt[203] _arg2[1095520]))
    unknown call_tmp[1096117] "expr temp" "maybe param" "maybe type" "temp"
    (1096120 'move' call_tmp[1096117](1095781 call chpl_field_lt call_tmp[1096107] call_tmp[1096112]))
    if call_tmp[1096117]
    {
      (1096015 'move' ret[1096005](1096014 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096122] "expr temp" "maybe param" "maybe type" "temp"
    (1096125 'move' call_tmp[1096122](1095787 call posix _mt[203] _arg1[1095519]))
    unknown call_tmp[1096127] "expr temp" "maybe param" "maybe type" "temp"
    (1096130 'move' call_tmp[1096127](1095791 call posix _mt[203] _arg2[1095520]))
    unknown call_tmp[1096132] "expr temp" "maybe param" "maybe type" "temp"
    (1096135 'move' call_tmp[1096132](1095795 call chpl_field_gt call_tmp[1096122] call_tmp[1096127]))
    if call_tmp[1096132]
    {
      (1096020 'move' ret[1096005](1096019 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096137] "expr temp" "maybe param" "maybe type" "temp"
    (1096140 'move' call_tmp[1096137](1095801 call posix _mt[203] _arg1[1095519]))
    unknown call_tmp[1096142] "expr temp" "maybe param" "maybe type" "temp"
    (1096145 'move' call_tmp[1096142](1095805 call posix _mt[203] _arg2[1095520]))
    unknown call_tmp[1096147] "expr temp" "maybe param" "maybe type" "temp"
    (1096150 'move' call_tmp[1096147](1095809 call chpl_field_lt call_tmp[1096137] call_tmp[1096142]))
    if call_tmp[1096147]
    {
      (1096025 'move' ret[1096005](1096024 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096152] "expr temp" "maybe param" "maybe type" "temp"
    (1096155 'move' call_tmp[1096152](1095815 call literal _mt[203] _arg1[1095519]))
    unknown call_tmp[1096157] "expr temp" "maybe param" "maybe type" "temp"
    (1096160 'move' call_tmp[1096157](1095819 call literal _mt[203] _arg2[1095520]))
    unknown call_tmp[1096162] "expr temp" "maybe param" "maybe type" "temp"
    (1096165 'move' call_tmp[1096162](1095823 call chpl_field_gt call_tmp[1096152] call_tmp[1096157]))
    if call_tmp[1096162]
    {
      (1096030 'move' ret[1096005](1096029 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096167] "expr temp" "maybe param" "maybe type" "temp"
    (1096170 'move' call_tmp[1096167](1095829 call literal _mt[203] _arg1[1095519]))
    unknown call_tmp[1096172] "expr temp" "maybe param" "maybe type" "temp"
    (1096175 'move' call_tmp[1096172](1095833 call literal _mt[203] _arg2[1095520]))
    unknown call_tmp[1096177] "expr temp" "maybe param" "maybe type" "temp"
    (1096180 'move' call_tmp[1096177](1095837 call chpl_field_lt call_tmp[1096167] call_tmp[1096172]))
    if call_tmp[1096177]
    {
      (1096035 'move' ret[1096005](1096034 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096182] "expr temp" "maybe param" "maybe type" "temp"
    (1096185 'move' call_tmp[1096182](1095843 call nocapture _mt[203] _arg1[1095519]))
    unknown call_tmp[1096187] "expr temp" "maybe param" "maybe type" "temp"
    (1096190 'move' call_tmp[1096187](1095847 call nocapture _mt[203] _arg2[1095520]))
    unknown call_tmp[1096192] "expr temp" "maybe param" "maybe type" "temp"
    (1096195 'move' call_tmp[1096192](1095851 call chpl_field_gt call_tmp[1096182] call_tmp[1096187]))
    if call_tmp[1096192]
    {
      (1096040 'move' ret[1096005](1096039 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096197] "expr temp" "maybe param" "maybe type" "temp"
    (1096200 'move' call_tmp[1096197](1095857 call nocapture _mt[203] _arg1[1095519]))
    unknown call_tmp[1096202] "expr temp" "maybe param" "maybe type" "temp"
    (1096205 'move' call_tmp[1096202](1095861 call nocapture _mt[203] _arg2[1095520]))
    unknown call_tmp[1096207] "expr temp" "maybe param" "maybe type" "temp"
    (1096210 'move' call_tmp[1096207](1095865 call chpl_field_lt call_tmp[1096197] call_tmp[1096202]))
    if call_tmp[1096207]
    {
      (1096045 'move' ret[1096005](1096044 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096212] "expr temp" "maybe param" "maybe type" "temp"
    (1096215 'move' call_tmp[1096212](1095871 call ignorecase _mt[203] _arg1[1095519]))
    unknown call_tmp[1096217] "expr temp" "maybe param" "maybe type" "temp"
    (1096220 'move' call_tmp[1096217](1095875 call ignorecase _mt[203] _arg2[1095520]))
    unknown call_tmp[1096222] "expr temp" "maybe param" "maybe type" "temp"
    (1096225 'move' call_tmp[1096222](1095879 call chpl_field_gt call_tmp[1096212] call_tmp[1096217]))
    if call_tmp[1096222]
    {
      (1096050 'move' ret[1096005](1096049 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096227] "expr temp" "maybe param" "maybe type" "temp"
    (1096230 'move' call_tmp[1096227](1095885 call ignorecase _mt[203] _arg1[1095519]))
    unknown call_tmp[1096232] "expr temp" "maybe param" "maybe type" "temp"
    (1096235 'move' call_tmp[1096232](1095889 call ignorecase _mt[203] _arg2[1095520]))
    unknown call_tmp[1096237] "expr temp" "maybe param" "maybe type" "temp"
    (1096240 'move' call_tmp[1096237](1095893 call chpl_field_lt call_tmp[1096227] call_tmp[1096232]))
    if call_tmp[1096237]
    {
      (1096055 'move' ret[1096005](1096054 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096242] "expr temp" "maybe param" "maybe type" "temp"
    (1096245 'move' call_tmp[1096242](1095899 call multiline _mt[203] _arg1[1095519]))
    unknown call_tmp[1096247] "expr temp" "maybe param" "maybe type" "temp"
    (1096250 'move' call_tmp[1096247](1095903 call multiline _mt[203] _arg2[1095520]))
    unknown call_tmp[1096252] "expr temp" "maybe param" "maybe type" "temp"
    (1096255 'move' call_tmp[1096252](1095907 call chpl_field_gt call_tmp[1096242] call_tmp[1096247]))
    if call_tmp[1096252]
    {
      (1096060 'move' ret[1096005](1096059 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096257] "expr temp" "maybe param" "maybe type" "temp"
    (1096260 'move' call_tmp[1096257](1095913 call multiline _mt[203] _arg1[1095519]))
    unknown call_tmp[1096262] "expr temp" "maybe param" "maybe type" "temp"
    (1096265 'move' call_tmp[1096262](1095917 call multiline _mt[203] _arg2[1095520]))
    unknown call_tmp[1096267] "expr temp" "maybe param" "maybe type" "temp"
    (1096270 'move' call_tmp[1096267](1095921 call chpl_field_lt call_tmp[1096257] call_tmp[1096262]))
    if call_tmp[1096267]
    {
      (1096065 'move' ret[1096005](1096064 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096272] "expr temp" "maybe param" "maybe type" "temp"
    (1096275 'move' call_tmp[1096272](1095927 call dotnl _mt[203] _arg1[1095519]))
    unknown call_tmp[1096277] "expr temp" "maybe param" "maybe type" "temp"
    (1096280 'move' call_tmp[1096277](1095931 call dotnl _mt[203] _arg2[1095520]))
    unknown call_tmp[1096282] "expr temp" "maybe param" "maybe type" "temp"
    (1096285 'move' call_tmp[1096282](1095935 call chpl_field_gt call_tmp[1096272] call_tmp[1096277]))
    if call_tmp[1096282]
    {
      (1096070 'move' ret[1096005](1096069 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096287] "expr temp" "maybe param" "maybe type" "temp"
    (1096290 'move' call_tmp[1096287](1095941 call dotnl _mt[203] _arg1[1095519]))
    unknown call_tmp[1096292] "expr temp" "maybe param" "maybe type" "temp"
    (1096295 'move' call_tmp[1096292](1095945 call dotnl _mt[203] _arg2[1095520]))
    unknown call_tmp[1096297] "expr temp" "maybe param" "maybe type" "temp"
    (1096300 'move' call_tmp[1096297](1095949 call chpl_field_lt call_tmp[1096287] call_tmp[1096292]))
    if call_tmp[1096297]
    {
      (1096075 'move' ret[1096005](1096074 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096302] "expr temp" "maybe param" "maybe type" "temp"
    (1096305 'move' call_tmp[1096302](1095955 call nongreedy _mt[203] _arg1[1095519]))
    unknown call_tmp[1096307] "expr temp" "maybe param" "maybe type" "temp"
    (1096310 'move' call_tmp[1096307](1095959 call nongreedy _mt[203] _arg2[1095520]))
    unknown call_tmp[1096312] "expr temp" "maybe param" "maybe type" "temp"
    (1096315 'move' call_tmp[1096312](1095963 call chpl_field_gt call_tmp[1096302] call_tmp[1096307]))
    if call_tmp[1096312]
    {
      (1096080 'move' ret[1096005](1096079 'deref' 1))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    unknown call_tmp[1096317] "expr temp" "maybe param" "maybe type" "temp"
    (1096320 'move' call_tmp[1096317](1095969 call nongreedy _mt[203] _arg1[1095519]))
    unknown call_tmp[1096322] "expr temp" "maybe param" "maybe type" "temp"
    (1096325 'move' call_tmp[1096322](1095973 call nongreedy _mt[203] _arg2[1095520]))
    unknown call_tmp[1096327] "expr temp" "maybe param" "maybe type" "temp"
    (1096330 'move' call_tmp[1096327](1095977 call chpl_field_lt call_tmp[1096317] call_tmp[1096322]))
    if call_tmp[1096327]
    {
      (1096085 'move' ret[1096005](1096084 'deref' 0))
      gotoReturn _end_>=[1096003] _end_>=[1096003]
    }
    (1096090 'move' ret[1096005](1096089 'deref' 1))
    label _end_>=[1096003]
    (1096007 return ret[1096005])
  }
  where {
    unknown call_tmp[1096332] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1096335 'move' call_tmp[1096332](1095523 'typeof' _arg1[1095519]))
    unknown call_tmp[1096337] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1096340 'move' call_tmp[1096337](1095525 'typeof' _arg2[1095520]))
    unknown call_tmp[1096342] "expr temp" "maybe param" "maybe type" "temp"
    (1096345 'move' call_tmp[1096342](1095527 call == call_tmp[1096332] call_tmp[1096337]))
    unknown call_tmp[1096347] "expr temp" "maybe param" "maybe type" "temp"
    (1096350 'move' call_tmp[1096347](1095753 call chpl_fields_are_comparable[1095529] _arg1[1095519] _arg2[1095520]))
    (1095757 '&' call_tmp[1096342] call_tmp[1096347])
  }
  type qio_regex_options_t[153655] val utf8[153615]:bool[19] bool[19] val posix[153620]:bool[19] bool[19] val literal[153625]:bool[19] bool[19] val nocapture[153630]:bool[19] bool[19] val ignorecase[153635]:bool[19] bool[19] val multiline[153640]:bool[19] bool[19] val dotnl[153645]:bool[19] bool[19] val nongreedy[153650]:bool[19] bool[19]
  function qio_regex_null[153657]() : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    qio_regex_t[153611]
  }
  function qio_regex_init_default_options[153663](ref arg options[153666]:qio_regex_options_t[153655]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_create_compile[153671](arg str[153676] :
  (153674 call c_ptrConst[46990](?) c_char[562]), arg strlen[153682] :
  (153680 call int(64)[10] 64), const  ref arg options[153686]:qio_regex_options_t[153655], ref arg compiled[153690]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_create_compile_flags[153695](arg str[153700] :
  (153698 call c_ptrConst[46990](?) c_char[562]), arg strlen[153706] :
  (153704 call int(64)[10] 64), arg flags[153712] :
  (153710 call c_ptrConst[46990](?) c_char[562]), arg flagslen[153718] :
  (153716 call int(64)[10] 64), arg isUtf8[153722]:bool[19], ref arg compiled[153726]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_create_compile_flags_2[153731](arg str[153736] :
  (153734 call c_ptr[46891](?) void[4]), arg strlen[153742] :
  (153740 call int(64)[10] 64), arg flags[153748] :
  (153746 call c_ptr[46891](?) void[4]), arg flagslen[153754] :
  (153752 call int(64)[10] 64), arg isUtf8[153758]:bool[19], ref arg compiled[153762]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function qio_regex_retain[153767](const  ref arg compiled[153770]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_release[153775](ref arg compiled[153778]:qio_regex_t[153611]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function qio_regex_get_options[153783](const  ref arg regex[153786]:qio_regex_t[153611], ref arg options[153790]:qio_regex_options_t[153655]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_borrow_pattern[153795](const  ref arg regex[153798]:qio_regex_t[153611], ref arg pattern[153804] :
  (153802 call c_ptrConst[46990](?) c_char[562]), ref arg len_out[153810] :
  (153808 call int(64)[10] 64)) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function qio_regex_get_ncaptures[153815](const  ref arg regex[153818]:qio_regex_t[153611]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    (153822 call int(64)[10] 64)
  }
  function qio_regex_ok[153827](const  ref arg regex[153830]:qio_regex_t[153611]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    bool[19]
  }
  function qio_regex_error[153837](const  ref arg regex[153840]:qio_regex_t[153611]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (153844 call c_ptrConst[46990](?) c_char[562])
  }
  const QIO_REGEX_ANCHOR_UNANCHORED[153850] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_REGEX_ANCHOR_START[153855] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_REGEX_ANCHOR_BOTH[153860] "dead at end of block" "const" "extern" "insert auto destroy"
  function qio_regex_string_piece_t[153880].offset[1096352](arg _mt[1096354]:_MT[201], ref arg this[1096356]:qio_regex_string_piece_t[153880]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1096366] "RVV" "temp"
    unknown call_tmp[1096373] "expr temp" "maybe param" "maybe type" "temp"
    (1096376 'move' call_tmp[1096373](1096360 '.' this[1096356] c"offset"))
    (1096371 'move' ret[1096366](1096370 'addr of' call_tmp[1096373]))
    (1096368 return ret[1096366])
  }
  function qio_regex_string_piece_t[153880].len[1096378](arg _mt[1096380]:_MT[201], ref arg this[1096382]:qio_regex_string_piece_t[153880]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1096392] "RVV" "temp"
    unknown call_tmp[1096399] "expr temp" "maybe param" "maybe type" "temp"
    (1096402 'move' call_tmp[1096399](1096386 '.' this[1096382] c"len"))
    (1096397 'move' ret[1096392](1096396 'addr of' call_tmp[1096399]))
    (1096394 return ret[1096392])
  }
  function qio_regex_string_piece_t[153880].init[1096404](arg _mt[1096406]:_MT[201], ref arg this[1096407]:qio_regex_string_piece_t[153880], in arg offset[1096410] :
  (1096413 call int(64)[10] 64) =
  _typeDefaultT[217], in arg len[1096425] :
  (1096428 call int(64)[10] 64) =
  _typeDefaultT[217]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1096441 'init field' this[1096407] c"offset" offset[1096410])
    (1096444 'init field' this[1096407] c"len" len[1096425])
    (1096447 'end of statement')
    (1096448 return _void[46])
  }
  function qio_regex_string_piece_t[153880].init[1096450](arg _mt[1096452]:_MT[201], ref arg this[1096453]:qio_regex_string_piece_t[153880], arg reader[1096454]:_any[141](?), ref arg deserializer[1096455]:_any[141](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1096558] "expr temp" "maybe param" "maybe type" "temp"
    (1096561 'move' call_tmp[1096558](1096465 'simple type name' this[1096453]))
    unknown call_tmp[1096563] "maybe param" "maybe type" "temp"
    (1096566 'move' call_tmp[1096563](1096467 call startRecord _mt[203] deserializer[1096455] reader[1096454] call_tmp[1096558]))
    unknown _chpl_des_helper[1096472] "dead at end of block" "insert auto destroy"
    (1096556 'init var' _chpl_des_helper[1096472] call_tmp[1096563])
    (1096547 'end of statement')
    unknown call_tmp[1096568] "expr temp" "maybe param" "maybe type" "temp"
    (1096571 'move' call_tmp[1096568](1096484 'field num to name' this[1096453] 1))
    unknown call_tmp[1096573] "expr temp" "maybe param" "maybe type" "temp"
    (1096576 'move' call_tmp[1096573](1096482 call int(64)[10] 64))
    unknown call_tmp[1096578] "maybe param" "maybe type" "temp"
    (1096581 'move' call_tmp[1096578](1096487 call readField _mt[203] _chpl_des_helper[1096472] call_tmp[1096568] call_tmp[1096573]))
    unknown call_tmp[1096583] "maybe param" "maybe type" "temp"
    (1096586 'move' call_tmp[1096583](1096528 call int(64)[10] 64))
    unknown offset[1096525] "temp"
    (1096530 'init var' offset[1096525] call_tmp[1096578] call_tmp[1096583])
    (1096532 'init field' this[1096453] c"offset" offset[1096525])
    (1096548 'end of statement' _chpl_des_helper[1096472])
    unknown call_tmp[1096588] "expr temp" "maybe param" "maybe type" "temp"
    (1096591 'move' call_tmp[1096588](1096507 'field num to name' this[1096453] 2))
    unknown call_tmp[1096593] "expr temp" "maybe param" "maybe type" "temp"
    (1096596 'move' call_tmp[1096593](1096505 call int(64)[10] 64))
    unknown call_tmp[1096598] "maybe param" "maybe type" "temp"
    (1096601 'move' call_tmp[1096598](1096510 call readField _mt[203] _chpl_des_helper[1096472] call_tmp[1096588] call_tmp[1096593]))
    unknown call_tmp[1096603] "maybe param" "maybe type" "temp"
    (1096606 'move' call_tmp[1096603](1096539 call int(64)[10] 64))
    unknown len[1096536] "temp"
    (1096541 'init var' len[1096536] call_tmp[1096598] call_tmp[1096603])
    (1096543 'init field' this[1096453] c"len" len[1096536])
    (1096550 'end of statement' _chpl_des_helper[1096472])
    (1096520 call endRecord _mt[203] _chpl_des_helper[1096472])
    (1096552 'end of statement' _chpl_des_helper[1096472])
    (1096554 return _void[46])
  }
  where {
    unknown call_tmp[1096608] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1096611 'move' call_tmp[1096608](1096456 'typeof' reader[1096454]))
    (1096458 call chpl__isFileReader call_tmp[1096608])
  }
  function qio_regex_string_piece_t[153880].init=[1096615](arg _mt[1096618]:_MT[201], arg this[1096619]:qio_regex_string_piece_t[153880], arg other[1096620]:qio_regex_string_piece_t[153880]) : _unknown[42] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1096624 '=' this[1096619] other[1096620])
    (1096628 return _void[46])
  }
  function qio_regex_string_piece_t[153880].deinit[1096630](arg _mt[1096632]:_MT[201], arg this[1096634]:qio_regex_string_piece_t[153880]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1096642 return _void[46])
  }
  function qio_regex_string_piece_t[153880].serialize[1096644](arg _mt[1096648]:_MT[201], arg this[1096646]:qio_regex_string_piece_t[153880], arg writer[1096647]:_any[141](?), ref arg serializer[1096652]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1096655 call serializeDefaultImpl writer[1096647] serializer[1096652] this[1096646])
    (1096661 return _void[46])
  }
  function qio_regex_string_piece_t[153880].deserialize[1096663](arg _mt[1096667]:_MT[201], ref arg this[1096665]:qio_regex_string_piece_t[153880], arg reader[1096666]:_any[141](?), ref arg deserializer[1096672]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1096674] "temp"
    (1096676 'move' _deser_temp[1096674] this[1096665])
    (1096679 call deserializeDefaultImpl reader[1096666] deserializer[1096672] _deser_temp[1096674])
    (1096685 return _void[46])
  }
  function =[1096687](ref arg _arg1[1096689]:qio_regex_string_piece_t[153880], arg _arg2[1096690]:qio_regex_string_piece_t[153880]) : _unknown[42] "assignop" "compiler generated" "inline" "last resort"
  {
    (1096693 '=' _arg1[1096689] _arg2[1096690])
    (1096698 return _void[46])
  }
  function qio_regex_string_piece_t[153880].hash[1096700](arg _mt[1096703]:_MT[201], arg this[1096702]:qio_regex_string_piece_t[153880]) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1096727] "RVV" "temp"
    unknown call_tmp[1096734] "expr temp" "maybe param" "maybe type" "temp"
    (1096737 'move' call_tmp[1096734](1096712 call len _mt[203] this[1096702]))
    unknown call_tmp[1096739] "expr temp" "maybe param" "maybe type" "temp"
    (1096742 'move' call_tmp[1096739](1096716 call hash _mt[203] call_tmp[1096734]))
    unknown call_tmp[1096744] "expr temp" "maybe param" "maybe type" "temp"
    (1096747 'move' call_tmp[1096744](1096706 call offset _mt[203] this[1096702]))
    unknown call_tmp[1096749] "expr temp" "maybe param" "maybe type" "temp"
    (1096752 'move' call_tmp[1096749](1096710 call chpl__defaultHashWrapperInner call_tmp[1096744]))
    unknown call_tmp[1096754] "expr temp" "maybe param" "maybe type" "temp"
    (1096757 'move' call_tmp[1096754](1096719 call chpl__defaultHashCombine call_tmp[1096739] call_tmp[1096749] 2))
    (1096732 'move' ret[1096727](1096731 'deref' call_tmp[1096754]))
    (1096729 return ret[1096727])
  }
  function chpl_fields_are_comparable[1096775](arg _arg1[1096777]:qio_regex_string_piece_t[153880], arg _arg2[1096778]:qio_regex_string_piece_t[153880]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1096807]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1096814] "expr temp" "maybe param" "maybe type" "temp"
    (1096817 'move' call_tmp[1096814](1096781 call offset _mt[203] _arg1[1096777]))
    unknown call_tmp[1096819] "expr temp" "maybe param" "maybe type" "temp"
    (1096822 'move' call_tmp[1096819](1096785 call offset _mt[203] _arg2[1096778]))
    unknown call_tmp[1096824] "expr temp" "maybe param" "maybe type" "temp"
    (1096827 'move' call_tmp[1096824](1096789 'call resolves' c"==" call_tmp[1096814] call_tmp[1096819]))
    unknown call_tmp[1096829] "expr temp" "maybe param" "maybe type" "temp"
    (1096832 'move' call_tmp[1096829](1096791 call len _mt[203] _arg1[1096777]))
    unknown call_tmp[1096834] "expr temp" "maybe param" "maybe type" "temp"
    (1096837 'move' call_tmp[1096834](1096795 call len _mt[203] _arg2[1096778]))
    unknown call_tmp[1096839] "expr temp" "maybe param" "maybe type" "temp"
    (1096842 'move' call_tmp[1096839](1096799 'call resolves' c"==" call_tmp[1096829] call_tmp[1096834]))
    unknown call_tmp[1096844] "expr temp" "maybe param" "maybe type" "temp"
    (1096847 'move' call_tmp[1096844](1096801 '&' call_tmp[1096824] call_tmp[1096839]))
    (1096812 'move' ret[1096807](1096811 'deref' call_tmp[1096844]))
    (1096809 return ret[1096807])
  }
  function qio_regex_string_piece_t[153880].==[1096759](arg _mt[1096761]:_MT[201], arg this[1096763]:qio_regex_string_piece_t[153880], arg _arg1[1096765]:qio_regex_string_piece_t[153880], arg _arg2[1096766]:qio_regex_string_piece_t[153880]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1096891]:bool[19] "RVV" "temp"
    unknown call_tmp[1096908] "expr temp" "maybe param" "maybe type" "temp"
    (1096911 'move' call_tmp[1096908](1096855 call offset _mt[203] _arg1[1096765]))
    unknown call_tmp[1096913] "expr temp" "maybe param" "maybe type" "temp"
    (1096916 'move' call_tmp[1096913](1096859 call offset _mt[203] _arg2[1096766]))
    unknown call_tmp[1096918] "expr temp" "maybe param" "maybe type" "temp"
    (1096921 'move' call_tmp[1096918](1096863 call chpl_field_neq call_tmp[1096908] call_tmp[1096913]))
    if call_tmp[1096918]
    {
      (1096896 'move' ret[1096891](1096895 'deref' 0))
      gotoReturn _end_==[1096889] _end_==[1096889]
    }
    unknown call_tmp[1096923] "expr temp" "maybe param" "maybe type" "temp"
    (1096926 'move' call_tmp[1096923](1096869 call len _mt[203] _arg1[1096765]))
    unknown call_tmp[1096928] "expr temp" "maybe param" "maybe type" "temp"
    (1096931 'move' call_tmp[1096928](1096873 call len _mt[203] _arg2[1096766]))
    unknown call_tmp[1096933] "expr temp" "maybe param" "maybe type" "temp"
    (1096936 'move' call_tmp[1096933](1096877 call chpl_field_neq call_tmp[1096923] call_tmp[1096928]))
    if call_tmp[1096933]
    {
      (1096901 'move' ret[1096891](1096900 'deref' 0))
      gotoReturn _end_==[1096889] _end_==[1096889]
    }
    (1096906 'move' ret[1096891](1096905 'deref' 1))
    label _end_==[1096889]
    (1096893 return ret[1096891])
  }
  where {
    unknown call_tmp[1096938] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1096941 'move' call_tmp[1096938](1096769 'typeof' _arg1[1096765]))
    unknown call_tmp[1096943] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1096946 'move' call_tmp[1096943](1096771 'typeof' _arg2[1096766]))
    unknown call_tmp[1096948] "expr temp" "maybe param" "maybe type" "temp"
    (1096951 'move' call_tmp[1096948](1096773 call == call_tmp[1096938] call_tmp[1096943]))
    unknown call_tmp[1096953] "expr temp" "maybe param" "maybe type" "temp"
    (1096956 'move' call_tmp[1096953](1096849 call chpl_fields_are_comparable[1096775] _arg1[1096765] _arg2[1096766]))
    (1096853 '&' call_tmp[1096948] call_tmp[1096953])
  }
  function chpl_fields_are_comparable[1096974](arg _arg1[1096976]:qio_regex_string_piece_t[153880], arg _arg2[1096977]:qio_regex_string_piece_t[153880]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1097006]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1097013] "expr temp" "maybe param" "maybe type" "temp"
    (1097016 'move' call_tmp[1097013](1096980 call offset _mt[203] _arg1[1096976]))
    unknown call_tmp[1097018] "expr temp" "maybe param" "maybe type" "temp"
    (1097021 'move' call_tmp[1097018](1096984 call offset _mt[203] _arg2[1096977]))
    unknown call_tmp[1097023] "expr temp" "maybe param" "maybe type" "temp"
    (1097026 'move' call_tmp[1097023](1096988 'call resolves' c"!=" call_tmp[1097013] call_tmp[1097018]))
    unknown call_tmp[1097028] "expr temp" "maybe param" "maybe type" "temp"
    (1097031 'move' call_tmp[1097028](1096990 call len _mt[203] _arg1[1096976]))
    unknown call_tmp[1097033] "expr temp" "maybe param" "maybe type" "temp"
    (1097036 'move' call_tmp[1097033](1096994 call len _mt[203] _arg2[1096977]))
    unknown call_tmp[1097038] "expr temp" "maybe param" "maybe type" "temp"
    (1097041 'move' call_tmp[1097038](1096998 'call resolves' c"!=" call_tmp[1097028] call_tmp[1097033]))
    unknown call_tmp[1097043] "expr temp" "maybe param" "maybe type" "temp"
    (1097046 'move' call_tmp[1097043](1097000 '&' call_tmp[1097023] call_tmp[1097038]))
    (1097011 'move' ret[1097006](1097010 'deref' call_tmp[1097043]))
    (1097008 return ret[1097006])
  }
  function qio_regex_string_piece_t[153880].!=[1096958](arg _mt[1096960]:_MT[201], arg this[1096962]:qio_regex_string_piece_t[153880], arg _arg1[1096964]:qio_regex_string_piece_t[153880], arg _arg2[1096965]:qio_regex_string_piece_t[153880]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1097090]:bool[19] "RVV" "temp"
    unknown call_tmp[1097107] "expr temp" "maybe param" "maybe type" "temp"
    (1097110 'move' call_tmp[1097107](1097054 call offset _mt[203] _arg1[1096964]))
    unknown call_tmp[1097112] "expr temp" "maybe param" "maybe type" "temp"
    (1097115 'move' call_tmp[1097112](1097058 call offset _mt[203] _arg2[1096965]))
    unknown call_tmp[1097117] "expr temp" "maybe param" "maybe type" "temp"
    (1097120 'move' call_tmp[1097117](1097062 call chpl_field_neq call_tmp[1097107] call_tmp[1097112]))
    if call_tmp[1097117]
    {
      (1097095 'move' ret[1097090](1097094 'deref' 1))
      gotoReturn _end_!=[1097088] _end_!=[1097088]
    }
    unknown call_tmp[1097122] "expr temp" "maybe param" "maybe type" "temp"
    (1097125 'move' call_tmp[1097122](1097068 call len _mt[203] _arg1[1096964]))
    unknown call_tmp[1097127] "expr temp" "maybe param" "maybe type" "temp"
    (1097130 'move' call_tmp[1097127](1097072 call len _mt[203] _arg2[1096965]))
    unknown call_tmp[1097132] "expr temp" "maybe param" "maybe type" "temp"
    (1097135 'move' call_tmp[1097132](1097076 call chpl_field_neq call_tmp[1097122] call_tmp[1097127]))
    if call_tmp[1097132]
    {
      (1097100 'move' ret[1097090](1097099 'deref' 1))
      gotoReturn _end_!=[1097088] _end_!=[1097088]
    }
    (1097105 'move' ret[1097090](1097104 'deref' 0))
    label _end_!=[1097088]
    (1097092 return ret[1097090])
  }
  where {
    unknown call_tmp[1097137] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097140 'move' call_tmp[1097137](1096968 'typeof' _arg1[1096964]))
    unknown call_tmp[1097142] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097145 'move' call_tmp[1097142](1096970 'typeof' _arg2[1096965]))
    unknown call_tmp[1097147] "expr temp" "maybe param" "maybe type" "temp"
    (1097150 'move' call_tmp[1097147](1096972 call == call_tmp[1097137] call_tmp[1097142]))
    unknown call_tmp[1097152] "expr temp" "maybe param" "maybe type" "temp"
    (1097155 'move' call_tmp[1097152](1097048 call chpl_fields_are_comparable[1096974] _arg1[1096964] _arg2[1096965]))
    (1097052 '&' call_tmp[1097147] call_tmp[1097152])
  }
  function chpl_fields_are_comparable[1097173](arg _arg1[1097175]:qio_regex_string_piece_t[153880], arg _arg2[1097176]:qio_regex_string_piece_t[153880]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1097205]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1097212] "expr temp" "maybe param" "maybe type" "temp"
    (1097215 'move' call_tmp[1097212](1097179 call offset _mt[203] _arg1[1097175]))
    unknown call_tmp[1097217] "expr temp" "maybe param" "maybe type" "temp"
    (1097220 'move' call_tmp[1097217](1097183 call offset _mt[203] _arg2[1097176]))
    unknown call_tmp[1097222] "expr temp" "maybe param" "maybe type" "temp"
    (1097225 'move' call_tmp[1097222](1097187 'call resolves' c"<" call_tmp[1097212] call_tmp[1097217]))
    unknown call_tmp[1097227] "expr temp" "maybe param" "maybe type" "temp"
    (1097230 'move' call_tmp[1097227](1097189 call len _mt[203] _arg1[1097175]))
    unknown call_tmp[1097232] "expr temp" "maybe param" "maybe type" "temp"
    (1097235 'move' call_tmp[1097232](1097193 call len _mt[203] _arg2[1097176]))
    unknown call_tmp[1097237] "expr temp" "maybe param" "maybe type" "temp"
    (1097240 'move' call_tmp[1097237](1097197 'call resolves' c"<" call_tmp[1097227] call_tmp[1097232]))
    unknown call_tmp[1097242] "expr temp" "maybe param" "maybe type" "temp"
    (1097245 'move' call_tmp[1097242](1097199 '&' call_tmp[1097222] call_tmp[1097237]))
    (1097210 'move' ret[1097205](1097209 'deref' call_tmp[1097242]))
    (1097207 return ret[1097205])
  }
  function qio_regex_string_piece_t[153880].<[1097157](arg _mt[1097159]:_MT[201], arg this[1097161]:qio_regex_string_piece_t[153880], arg _arg1[1097163]:qio_regex_string_piece_t[153880], arg _arg2[1097164]:qio_regex_string_piece_t[153880]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1097319]:bool[19] "RVV" "temp"
    unknown call_tmp[1097346] "expr temp" "maybe param" "maybe type" "temp"
    (1097349 'move' call_tmp[1097346](1097253 call offset _mt[203] _arg1[1097163]))
    unknown call_tmp[1097351] "expr temp" "maybe param" "maybe type" "temp"
    (1097354 'move' call_tmp[1097351](1097257 call offset _mt[203] _arg2[1097164]))
    unknown call_tmp[1097356] "expr temp" "maybe param" "maybe type" "temp"
    (1097359 'move' call_tmp[1097356](1097261 call chpl_field_lt call_tmp[1097346] call_tmp[1097351]))
    if call_tmp[1097356]
    {
      (1097324 'move' ret[1097319](1097323 'deref' 1))
      gotoReturn _end_<[1097317] _end_<[1097317]
    }
    unknown call_tmp[1097361] "expr temp" "maybe param" "maybe type" "temp"
    (1097364 'move' call_tmp[1097361](1097267 call offset _mt[203] _arg1[1097163]))
    unknown call_tmp[1097366] "expr temp" "maybe param" "maybe type" "temp"
    (1097369 'move' call_tmp[1097366](1097271 call offset _mt[203] _arg2[1097164]))
    unknown call_tmp[1097371] "expr temp" "maybe param" "maybe type" "temp"
    (1097374 'move' call_tmp[1097371](1097275 call chpl_field_gt call_tmp[1097361] call_tmp[1097366]))
    if call_tmp[1097371]
    {
      (1097329 'move' ret[1097319](1097328 'deref' 0))
      gotoReturn _end_<[1097317] _end_<[1097317]
    }
    unknown call_tmp[1097376] "expr temp" "maybe param" "maybe type" "temp"
    (1097379 'move' call_tmp[1097376](1097281 call len _mt[203] _arg1[1097163]))
    unknown call_tmp[1097381] "expr temp" "maybe param" "maybe type" "temp"
    (1097384 'move' call_tmp[1097381](1097285 call len _mt[203] _arg2[1097164]))
    unknown call_tmp[1097386] "expr temp" "maybe param" "maybe type" "temp"
    (1097389 'move' call_tmp[1097386](1097289 call chpl_field_lt call_tmp[1097376] call_tmp[1097381]))
    if call_tmp[1097386]
    {
      (1097334 'move' ret[1097319](1097333 'deref' 1))
      gotoReturn _end_<[1097317] _end_<[1097317]
    }
    unknown call_tmp[1097391] "expr temp" "maybe param" "maybe type" "temp"
    (1097394 'move' call_tmp[1097391](1097295 call len _mt[203] _arg1[1097163]))
    unknown call_tmp[1097396] "expr temp" "maybe param" "maybe type" "temp"
    (1097399 'move' call_tmp[1097396](1097299 call len _mt[203] _arg2[1097164]))
    unknown call_tmp[1097401] "expr temp" "maybe param" "maybe type" "temp"
    (1097404 'move' call_tmp[1097401](1097303 call chpl_field_gt call_tmp[1097391] call_tmp[1097396]))
    if call_tmp[1097401]
    {
      (1097339 'move' ret[1097319](1097338 'deref' 0))
      gotoReturn _end_<[1097317] _end_<[1097317]
    }
    (1097344 'move' ret[1097319](1097343 'deref' 0))
    label _end_<[1097317]
    (1097321 return ret[1097319])
  }
  where {
    unknown call_tmp[1097406] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097409 'move' call_tmp[1097406](1097167 'typeof' _arg1[1097163]))
    unknown call_tmp[1097411] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097414 'move' call_tmp[1097411](1097169 'typeof' _arg2[1097164]))
    unknown call_tmp[1097416] "expr temp" "maybe param" "maybe type" "temp"
    (1097419 'move' call_tmp[1097416](1097171 call == call_tmp[1097406] call_tmp[1097411]))
    unknown call_tmp[1097421] "expr temp" "maybe param" "maybe type" "temp"
    (1097424 'move' call_tmp[1097421](1097247 call chpl_fields_are_comparable[1097173] _arg1[1097163] _arg2[1097164]))
    (1097251 '&' call_tmp[1097416] call_tmp[1097421])
  }
  function chpl_fields_are_comparable[1097442](arg _arg1[1097444]:qio_regex_string_piece_t[153880], arg _arg2[1097445]:qio_regex_string_piece_t[153880]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1097474]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1097481] "expr temp" "maybe param" "maybe type" "temp"
    (1097484 'move' call_tmp[1097481](1097448 call offset _mt[203] _arg1[1097444]))
    unknown call_tmp[1097486] "expr temp" "maybe param" "maybe type" "temp"
    (1097489 'move' call_tmp[1097486](1097452 call offset _mt[203] _arg2[1097445]))
    unknown call_tmp[1097491] "expr temp" "maybe param" "maybe type" "temp"
    (1097494 'move' call_tmp[1097491](1097456 'call resolves' c"<=" call_tmp[1097481] call_tmp[1097486]))
    unknown call_tmp[1097496] "expr temp" "maybe param" "maybe type" "temp"
    (1097499 'move' call_tmp[1097496](1097458 call len _mt[203] _arg1[1097444]))
    unknown call_tmp[1097501] "expr temp" "maybe param" "maybe type" "temp"
    (1097504 'move' call_tmp[1097501](1097462 call len _mt[203] _arg2[1097445]))
    unknown call_tmp[1097506] "expr temp" "maybe param" "maybe type" "temp"
    (1097509 'move' call_tmp[1097506](1097466 'call resolves' c"<=" call_tmp[1097496] call_tmp[1097501]))
    unknown call_tmp[1097511] "expr temp" "maybe param" "maybe type" "temp"
    (1097514 'move' call_tmp[1097511](1097468 '&' call_tmp[1097491] call_tmp[1097506]))
    (1097479 'move' ret[1097474](1097478 'deref' call_tmp[1097511]))
    (1097476 return ret[1097474])
  }
  function qio_regex_string_piece_t[153880].<=[1097426](arg _mt[1097428]:_MT[201], arg this[1097430]:qio_regex_string_piece_t[153880], arg _arg1[1097432]:qio_regex_string_piece_t[153880], arg _arg2[1097433]:qio_regex_string_piece_t[153880]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1097588]:bool[19] "RVV" "temp"
    unknown call_tmp[1097615] "expr temp" "maybe param" "maybe type" "temp"
    (1097618 'move' call_tmp[1097615](1097522 call offset _mt[203] _arg1[1097432]))
    unknown call_tmp[1097620] "expr temp" "maybe param" "maybe type" "temp"
    (1097623 'move' call_tmp[1097620](1097526 call offset _mt[203] _arg2[1097433]))
    unknown call_tmp[1097625] "expr temp" "maybe param" "maybe type" "temp"
    (1097628 'move' call_tmp[1097625](1097530 call chpl_field_lt call_tmp[1097615] call_tmp[1097620]))
    if call_tmp[1097625]
    {
      (1097593 'move' ret[1097588](1097592 'deref' 1))
      gotoReturn _end_<=[1097586] _end_<=[1097586]
    }
    unknown call_tmp[1097630] "expr temp" "maybe param" "maybe type" "temp"
    (1097633 'move' call_tmp[1097630](1097536 call offset _mt[203] _arg1[1097432]))
    unknown call_tmp[1097635] "expr temp" "maybe param" "maybe type" "temp"
    (1097638 'move' call_tmp[1097635](1097540 call offset _mt[203] _arg2[1097433]))
    unknown call_tmp[1097640] "expr temp" "maybe param" "maybe type" "temp"
    (1097643 'move' call_tmp[1097640](1097544 call chpl_field_gt call_tmp[1097630] call_tmp[1097635]))
    if call_tmp[1097640]
    {
      (1097598 'move' ret[1097588](1097597 'deref' 0))
      gotoReturn _end_<=[1097586] _end_<=[1097586]
    }
    unknown call_tmp[1097645] "expr temp" "maybe param" "maybe type" "temp"
    (1097648 'move' call_tmp[1097645](1097550 call len _mt[203] _arg1[1097432]))
    unknown call_tmp[1097650] "expr temp" "maybe param" "maybe type" "temp"
    (1097653 'move' call_tmp[1097650](1097554 call len _mt[203] _arg2[1097433]))
    unknown call_tmp[1097655] "expr temp" "maybe param" "maybe type" "temp"
    (1097658 'move' call_tmp[1097655](1097558 call chpl_field_lt call_tmp[1097645] call_tmp[1097650]))
    if call_tmp[1097655]
    {
      (1097603 'move' ret[1097588](1097602 'deref' 1))
      gotoReturn _end_<=[1097586] _end_<=[1097586]
    }
    unknown call_tmp[1097660] "expr temp" "maybe param" "maybe type" "temp"
    (1097663 'move' call_tmp[1097660](1097564 call len _mt[203] _arg1[1097432]))
    unknown call_tmp[1097665] "expr temp" "maybe param" "maybe type" "temp"
    (1097668 'move' call_tmp[1097665](1097568 call len _mt[203] _arg2[1097433]))
    unknown call_tmp[1097670] "expr temp" "maybe param" "maybe type" "temp"
    (1097673 'move' call_tmp[1097670](1097572 call chpl_field_gt call_tmp[1097660] call_tmp[1097665]))
    if call_tmp[1097670]
    {
      (1097608 'move' ret[1097588](1097607 'deref' 0))
      gotoReturn _end_<=[1097586] _end_<=[1097586]
    }
    (1097613 'move' ret[1097588](1097612 'deref' 1))
    label _end_<=[1097586]
    (1097590 return ret[1097588])
  }
  where {
    unknown call_tmp[1097675] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097678 'move' call_tmp[1097675](1097436 'typeof' _arg1[1097432]))
    unknown call_tmp[1097680] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097683 'move' call_tmp[1097680](1097438 'typeof' _arg2[1097433]))
    unknown call_tmp[1097685] "expr temp" "maybe param" "maybe type" "temp"
    (1097688 'move' call_tmp[1097685](1097440 call == call_tmp[1097675] call_tmp[1097680]))
    unknown call_tmp[1097690] "expr temp" "maybe param" "maybe type" "temp"
    (1097693 'move' call_tmp[1097690](1097516 call chpl_fields_are_comparable[1097442] _arg1[1097432] _arg2[1097433]))
    (1097520 '&' call_tmp[1097685] call_tmp[1097690])
  }
  function chpl_fields_are_comparable[1097711](arg _arg1[1097713]:qio_regex_string_piece_t[153880], arg _arg2[1097714]:qio_regex_string_piece_t[153880]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1097743]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1097750] "expr temp" "maybe param" "maybe type" "temp"
    (1097753 'move' call_tmp[1097750](1097717 call offset _mt[203] _arg1[1097713]))
    unknown call_tmp[1097755] "expr temp" "maybe param" "maybe type" "temp"
    (1097758 'move' call_tmp[1097755](1097721 call offset _mt[203] _arg2[1097714]))
    unknown call_tmp[1097760] "expr temp" "maybe param" "maybe type" "temp"
    (1097763 'move' call_tmp[1097760](1097725 'call resolves' c">" call_tmp[1097750] call_tmp[1097755]))
    unknown call_tmp[1097765] "expr temp" "maybe param" "maybe type" "temp"
    (1097768 'move' call_tmp[1097765](1097727 call len _mt[203] _arg1[1097713]))
    unknown call_tmp[1097770] "expr temp" "maybe param" "maybe type" "temp"
    (1097773 'move' call_tmp[1097770](1097731 call len _mt[203] _arg2[1097714]))
    unknown call_tmp[1097775] "expr temp" "maybe param" "maybe type" "temp"
    (1097778 'move' call_tmp[1097775](1097735 'call resolves' c">" call_tmp[1097765] call_tmp[1097770]))
    unknown call_tmp[1097780] "expr temp" "maybe param" "maybe type" "temp"
    (1097783 'move' call_tmp[1097780](1097737 '&' call_tmp[1097760] call_tmp[1097775]))
    (1097748 'move' ret[1097743](1097747 'deref' call_tmp[1097780]))
    (1097745 return ret[1097743])
  }
  function qio_regex_string_piece_t[153880].>[1097695](arg _mt[1097697]:_MT[201], arg this[1097699]:qio_regex_string_piece_t[153880], arg _arg1[1097701]:qio_regex_string_piece_t[153880], arg _arg2[1097702]:qio_regex_string_piece_t[153880]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1097857]:bool[19] "RVV" "temp"
    unknown call_tmp[1097884] "expr temp" "maybe param" "maybe type" "temp"
    (1097887 'move' call_tmp[1097884](1097791 call offset _mt[203] _arg1[1097701]))
    unknown call_tmp[1097889] "expr temp" "maybe param" "maybe type" "temp"
    (1097892 'move' call_tmp[1097889](1097795 call offset _mt[203] _arg2[1097702]))
    unknown call_tmp[1097894] "expr temp" "maybe param" "maybe type" "temp"
    (1097897 'move' call_tmp[1097894](1097799 call chpl_field_gt call_tmp[1097884] call_tmp[1097889]))
    if call_tmp[1097894]
    {
      (1097862 'move' ret[1097857](1097861 'deref' 1))
      gotoReturn _end_>[1097855] _end_>[1097855]
    }
    unknown call_tmp[1097899] "expr temp" "maybe param" "maybe type" "temp"
    (1097902 'move' call_tmp[1097899](1097805 call offset _mt[203] _arg1[1097701]))
    unknown call_tmp[1097904] "expr temp" "maybe param" "maybe type" "temp"
    (1097907 'move' call_tmp[1097904](1097809 call offset _mt[203] _arg2[1097702]))
    unknown call_tmp[1097909] "expr temp" "maybe param" "maybe type" "temp"
    (1097912 'move' call_tmp[1097909](1097813 call chpl_field_lt call_tmp[1097899] call_tmp[1097904]))
    if call_tmp[1097909]
    {
      (1097867 'move' ret[1097857](1097866 'deref' 0))
      gotoReturn _end_>[1097855] _end_>[1097855]
    }
    unknown call_tmp[1097914] "expr temp" "maybe param" "maybe type" "temp"
    (1097917 'move' call_tmp[1097914](1097819 call len _mt[203] _arg1[1097701]))
    unknown call_tmp[1097919] "expr temp" "maybe param" "maybe type" "temp"
    (1097922 'move' call_tmp[1097919](1097823 call len _mt[203] _arg2[1097702]))
    unknown call_tmp[1097924] "expr temp" "maybe param" "maybe type" "temp"
    (1097927 'move' call_tmp[1097924](1097827 call chpl_field_gt call_tmp[1097914] call_tmp[1097919]))
    if call_tmp[1097924]
    {
      (1097872 'move' ret[1097857](1097871 'deref' 1))
      gotoReturn _end_>[1097855] _end_>[1097855]
    }
    unknown call_tmp[1097929] "expr temp" "maybe param" "maybe type" "temp"
    (1097932 'move' call_tmp[1097929](1097833 call len _mt[203] _arg1[1097701]))
    unknown call_tmp[1097934] "expr temp" "maybe param" "maybe type" "temp"
    (1097937 'move' call_tmp[1097934](1097837 call len _mt[203] _arg2[1097702]))
    unknown call_tmp[1097939] "expr temp" "maybe param" "maybe type" "temp"
    (1097942 'move' call_tmp[1097939](1097841 call chpl_field_lt call_tmp[1097929] call_tmp[1097934]))
    if call_tmp[1097939]
    {
      (1097877 'move' ret[1097857](1097876 'deref' 0))
      gotoReturn _end_>[1097855] _end_>[1097855]
    }
    (1097882 'move' ret[1097857](1097881 'deref' 0))
    label _end_>[1097855]
    (1097859 return ret[1097857])
  }
  where {
    unknown call_tmp[1097944] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097947 'move' call_tmp[1097944](1097705 'typeof' _arg1[1097701]))
    unknown call_tmp[1097949] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1097952 'move' call_tmp[1097949](1097707 'typeof' _arg2[1097702]))
    unknown call_tmp[1097954] "expr temp" "maybe param" "maybe type" "temp"
    (1097957 'move' call_tmp[1097954](1097709 call == call_tmp[1097944] call_tmp[1097949]))
    unknown call_tmp[1097959] "expr temp" "maybe param" "maybe type" "temp"
    (1097962 'move' call_tmp[1097959](1097785 call chpl_fields_are_comparable[1097711] _arg1[1097701] _arg2[1097702]))
    (1097789 '&' call_tmp[1097954] call_tmp[1097959])
  }
  function chpl_fields_are_comparable[1097980](arg _arg1[1097982]:qio_regex_string_piece_t[153880], arg _arg2[1097983]:qio_regex_string_piece_t[153880]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1098012]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1098019] "expr temp" "maybe param" "maybe type" "temp"
    (1098022 'move' call_tmp[1098019](1097986 call offset _mt[203] _arg1[1097982]))
    unknown call_tmp[1098024] "expr temp" "maybe param" "maybe type" "temp"
    (1098027 'move' call_tmp[1098024](1097990 call offset _mt[203] _arg2[1097983]))
    unknown call_tmp[1098029] "expr temp" "maybe param" "maybe type" "temp"
    (1098032 'move' call_tmp[1098029](1097994 'call resolves' c">=" call_tmp[1098019] call_tmp[1098024]))
    unknown call_tmp[1098034] "expr temp" "maybe param" "maybe type" "temp"
    (1098037 'move' call_tmp[1098034](1097996 call len _mt[203] _arg1[1097982]))
    unknown call_tmp[1098039] "expr temp" "maybe param" "maybe type" "temp"
    (1098042 'move' call_tmp[1098039](1098000 call len _mt[203] _arg2[1097983]))
    unknown call_tmp[1098044] "expr temp" "maybe param" "maybe type" "temp"
    (1098047 'move' call_tmp[1098044](1098004 'call resolves' c">=" call_tmp[1098034] call_tmp[1098039]))
    unknown call_tmp[1098049] "expr temp" "maybe param" "maybe type" "temp"
    (1098052 'move' call_tmp[1098049](1098006 '&' call_tmp[1098029] call_tmp[1098044]))
    (1098017 'move' ret[1098012](1098016 'deref' call_tmp[1098049]))
    (1098014 return ret[1098012])
  }
  function qio_regex_string_piece_t[153880].>=[1097964](arg _mt[1097966]:_MT[201], arg this[1097968]:qio_regex_string_piece_t[153880], arg _arg1[1097970]:qio_regex_string_piece_t[153880], arg _arg2[1097971]:qio_regex_string_piece_t[153880]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1098126]:bool[19] "RVV" "temp"
    unknown call_tmp[1098153] "expr temp" "maybe param" "maybe type" "temp"
    (1098156 'move' call_tmp[1098153](1098060 call offset _mt[203] _arg1[1097970]))
    unknown call_tmp[1098158] "expr temp" "maybe param" "maybe type" "temp"
    (1098161 'move' call_tmp[1098158](1098064 call offset _mt[203] _arg2[1097971]))
    unknown call_tmp[1098163] "expr temp" "maybe param" "maybe type" "temp"
    (1098166 'move' call_tmp[1098163](1098068 call chpl_field_gt call_tmp[1098153] call_tmp[1098158]))
    if call_tmp[1098163]
    {
      (1098131 'move' ret[1098126](1098130 'deref' 1))
      gotoReturn _end_>=[1098124] _end_>=[1098124]
    }
    unknown call_tmp[1098168] "expr temp" "maybe param" "maybe type" "temp"
    (1098171 'move' call_tmp[1098168](1098074 call offset _mt[203] _arg1[1097970]))
    unknown call_tmp[1098173] "expr temp" "maybe param" "maybe type" "temp"
    (1098176 'move' call_tmp[1098173](1098078 call offset _mt[203] _arg2[1097971]))
    unknown call_tmp[1098178] "expr temp" "maybe param" "maybe type" "temp"
    (1098181 'move' call_tmp[1098178](1098082 call chpl_field_lt call_tmp[1098168] call_tmp[1098173]))
    if call_tmp[1098178]
    {
      (1098136 'move' ret[1098126](1098135 'deref' 0))
      gotoReturn _end_>=[1098124] _end_>=[1098124]
    }
    unknown call_tmp[1098183] "expr temp" "maybe param" "maybe type" "temp"
    (1098186 'move' call_tmp[1098183](1098088 call len _mt[203] _arg1[1097970]))
    unknown call_tmp[1098188] "expr temp" "maybe param" "maybe type" "temp"
    (1098191 'move' call_tmp[1098188](1098092 call len _mt[203] _arg2[1097971]))
    unknown call_tmp[1098193] "expr temp" "maybe param" "maybe type" "temp"
    (1098196 'move' call_tmp[1098193](1098096 call chpl_field_gt call_tmp[1098183] call_tmp[1098188]))
    if call_tmp[1098193]
    {
      (1098141 'move' ret[1098126](1098140 'deref' 1))
      gotoReturn _end_>=[1098124] _end_>=[1098124]
    }
    unknown call_tmp[1098198] "expr temp" "maybe param" "maybe type" "temp"
    (1098201 'move' call_tmp[1098198](1098102 call len _mt[203] _arg1[1097970]))
    unknown call_tmp[1098203] "expr temp" "maybe param" "maybe type" "temp"
    (1098206 'move' call_tmp[1098203](1098106 call len _mt[203] _arg2[1097971]))
    unknown call_tmp[1098208] "expr temp" "maybe param" "maybe type" "temp"
    (1098211 'move' call_tmp[1098208](1098110 call chpl_field_lt call_tmp[1098198] call_tmp[1098203]))
    if call_tmp[1098208]
    {
      (1098146 'move' ret[1098126](1098145 'deref' 0))
      gotoReturn _end_>=[1098124] _end_>=[1098124]
    }
    (1098151 'move' ret[1098126](1098150 'deref' 1))
    label _end_>=[1098124]
    (1098128 return ret[1098126])
  }
  where {
    unknown call_tmp[1098213] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1098216 'move' call_tmp[1098213](1097974 'typeof' _arg1[1097970]))
    unknown call_tmp[1098218] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1098221 'move' call_tmp[1098218](1097976 'typeof' _arg2[1097971]))
    unknown call_tmp[1098223] "expr temp" "maybe param" "maybe type" "temp"
    (1098226 'move' call_tmp[1098223](1097978 call == call_tmp[1098213] call_tmp[1098218]))
    unknown call_tmp[1098228] "expr temp" "maybe param" "maybe type" "temp"
    (1098231 'move' call_tmp[1098228](1098054 call chpl_fields_are_comparable[1097980] _arg1[1097970] _arg2[1097971]))
    (1098058 '&' call_tmp[1098223] call_tmp[1098228])
  }
  type qio_regex_string_piece_t[153880] val offset[153866]:int(64)[10](153868 call int(64)[10] 64) val len[153873]:int(64)[10](153875 call int(64)[10] 64)
  function qio_regex_string_piece_isnull[153882](ref arg sp[153885]:qio_regex_string_piece_t[153880]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    bool[19]
  }
  function qio_regex_match[153892](const  ref arg re[153895]:qio_regex_t[153611], arg text[153901] :
  (153899 call c_ptrConst[46990](?) c_char[562]), arg textlen[153907] :
  (153905 call int(64)[10] 64), arg startpos[153913] :
  (153911 call int(64)[10] 64), arg endpos[153919] :
  (153917 call int(64)[10] 64), arg anchor[153923] :
  c_int[522], ref arg submatch[153927]:qio_regex_string_piece_t[153880], arg nsubmatch[153933] :
  (153931 call int(64)[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    bool[19]
  }
  function qio_regex_replace[153940](const  ref arg re[153943]:qio_regex_t[153611], arg repl[153949] :
  (153947 call c_ptrConst[46990](?) c_char[562]), arg repllen[153955] :
  (153953 call int(64)[10] 64), arg text[153961] :
  (153959 call c_ptrConst[46990](?) c_char[562]), arg textlen[153967] :
  (153965 call int(64)[10] 64), arg maxreplace[153973] :
  (153971 call int(64)[10] 64), ref arg replaced[153979] :
  (153977 call c_ptrConst[46990](?) c_char[562]), ref arg replaced_len[153985] :
  (153983 call int(64)[10] 64)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (153989 call int(64)[10] 64)
  }
  function BadRegexError[154035].init[154001](arg _mt[154009]:_MT[201], arg this[154003]:BadRegexError[154035], arg msg[154006]:string[244]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[526285] "temporary of super field" "temp"
    (526293 'move' super_tmp[526285](526286 '.v' this[154003] c"super"))
    (526289 call init _mt[203] super_tmp[526285])
    (555340 'end of statement')
    unknown tmp[526260] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[577815] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[823024] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (823027 'move' call_tmp[823024](526262 '.v' this[154003] c"super"))
      (577819 'move' call_type_tmp[577815](526265 'typeof' call_tmp[823024]))
    }
    (526266 'move' tmp[526260] call_type_tmp[577815])
    unknown call_tmp[823029] "maybe param" "maybe type" "temp"
    (823032 'move' call_tmp[823029](526271 'cast' tmp[526260] this[154003]))
    unknown chpl__thisAsParent[526268] "dead at end of block" "insert auto destroy" "temp"
    (646488 'init var' chpl__thisAsParent[526268] call_tmp[823029] tmp[526260])
    (526274 'setcid' chpl__thisAsParent[526268])
    (555341 'end of statement')
    unknown msg[526276] "temp"
    (526279 'init var' msg[526276] msg[154006] string[244])
    (526281 'init field' this[154003] c"msg" msg[526276])
    (555342 'end of statement')
    (526296 'setcid' this[154003])
    (611662 return _void[46])
  }
  function BadRegexError[154035].message[154023](arg _mt[154027]:_MT[201], arg this[154025]:BadRegexError[154035]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[611666] "RVV" "temp"
    unknown call_tmp[823036] "expr temp" "maybe param" "maybe type" "temp"
    (823039 'move' call_tmp[823036](434183 call msg _mt[203] this[154025]))
    (611671 'move' ret[611666](611670 'deref' call_tmp[823036]))
    (611668 return ret[611666])
  }
  function BadRegexError[154035].super[1098233](arg _mt[1098235]:_MT[201], arg this[1098237]:BadRegexError[154035]) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1098247] "RVV" "temp"
    unknown call_tmp[1098254] "expr temp" "maybe param" "maybe type" "temp"
    (1098257 'move' call_tmp[1098254](1098241 '.v' this[1098237] c"super"))
    (1098252 'move' ret[1098247](1098251 'deref' call_tmp[1098254]))
    (1098249 return ret[1098247])
  }
  function BadRegexError[154035].msg[1098259](arg _mt[1098261]:_MT[201], arg this[1098263]:BadRegexError[154035]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1098273] "RVV" "temp"
    unknown call_tmp[1098280] "expr temp" "maybe param" "maybe type" "temp"
    (1098283 'move' call_tmp[1098280](1098267 '.' this[1098263] c"msg"))
    (1098278 'move' ret[1098273](1098277 'addr of' call_tmp[1098280]))
    (1098275 return ret[1098273])
  }
  function BadRegexError[154035].deinit[1098285](arg _mt[1098287]:_MT[201], arg this[1098289]:BadRegexError[154035]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1098297 return _void[46])
  }
  type BadRegexError[154035] val super[397545]:Error[85511] "super class" val msg[153997]:string[244] string[244]
  type BadRegexError[434230](?)
  function regexMatch[154054].matched[1098299](arg _mt[1098301]:_MT[201], ref arg this[1098303]:regexMatch[154054]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1098313] "RVV" "temp"
    unknown call_tmp[1098320] "expr temp" "maybe param" "maybe type" "temp"
    (1098323 'move' call_tmp[1098320](1098307 '.' this[1098303] c"matched"))
    (1098318 'move' ret[1098313](1098317 'addr of' call_tmp[1098320]))
    (1098315 return ret[1098313])
  }
  function regexMatch[154054].byteOffset[1098325](arg _mt[1098327]:_MT[201], ref arg this[1098329]:regexMatch[154054]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1098339] "RVV" "temp"
    unknown call_tmp[1098346] "expr temp" "maybe param" "maybe type" "temp"
    (1098349 'move' call_tmp[1098346](1098333 '.' this[1098329] c"byteOffset"))
    (1098344 'move' ret[1098339](1098343 'addr of' call_tmp[1098346]))
    (1098341 return ret[1098339])
  }
  function regexMatch[154054].numBytes[1098351](arg _mt[1098353]:_MT[201], ref arg this[1098355]:regexMatch[154054]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1098365] "RVV" "temp"
    unknown call_tmp[1098372] "expr temp" "maybe param" "maybe type" "temp"
    (1098375 'move' call_tmp[1098372](1098359 '.' this[1098355] c"numBytes"))
    (1098370 'move' ret[1098365](1098369 'addr of' call_tmp[1098372]))
    (1098367 return ret[1098365])
  }
  function regexMatch[154054].init[1098377](arg _mt[1098379]:_MT[201], ref arg this[1098380]:regexMatch[154054], in arg matched[1098383]:bool[19] =
  _typeDefaultT[217], in arg byteOffset[1098394]:byteIndex[18611] =
  _typeDefaultT[217], in arg numBytes[1098405]:int(64)[10] =
  _typeDefaultT[217]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1098417 'init field' this[1098380] c"matched" matched[1098383])
    (1098420 'init field' this[1098380] c"byteOffset" byteOffset[1098394])
    (1098426 'end of statement')
    (1098423 'init field' this[1098380] c"numBytes" numBytes[1098405])
    (1098428 return _void[46])
  }
  function regexMatch[154054].init[1098430](arg _mt[1098432]:_MT[201], ref arg this[1098433]:regexMatch[154054], arg reader[1098434]:_any[141](?), ref arg deserializer[1098435]:_any[141](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1098550] "expr temp" "maybe param" "maybe type" "temp"
    (1098553 'move' call_tmp[1098550](1098445 'simple type name' this[1098433]))
    unknown call_tmp[1098555] "maybe param" "maybe type" "temp"
    (1098558 'move' call_tmp[1098555](1098447 call startRecord _mt[203] deserializer[1098435] reader[1098434] call_tmp[1098550]))
    unknown _chpl_des_helper[1098452] "dead at end of block" "insert auto destroy"
    (1098548 'init var' _chpl_des_helper[1098452] call_tmp[1098555])
    (1098537 'end of statement')
    unknown call_tmp[1098560] "expr temp" "maybe param" "maybe type" "temp"
    (1098563 'move' call_tmp[1098560](1098458 'field num to name' this[1098433] 1))
    unknown call_tmp[1098565] "maybe param" "maybe type" "temp"
    (1098568 'move' call_tmp[1098565](1098461 call readField _mt[203] _chpl_des_helper[1098452] call_tmp[1098560] bool[19]))
    unknown matched[1098510] "temp"
    (1098513 'init var' matched[1098510] call_tmp[1098565] bool[19])
    (1098515 'init field' this[1098433] c"matched" matched[1098510])
    (1098538 'end of statement' _chpl_des_helper[1098452])
    unknown call_tmp[1098570] "expr temp" "maybe param" "maybe type" "temp"
    (1098573 'move' call_tmp[1098570](1098475 'field num to name' this[1098433] 2))
    unknown call_tmp[1098575] "maybe param" "maybe type" "temp"
    (1098578 'move' call_tmp[1098575](1098478 call readField _mt[203] _chpl_des_helper[1098452] call_tmp[1098570] byteIndex[18611]))
    unknown byteOffset[1098519] "temp"
    (1098522 'init var' byteOffset[1098519] call_tmp[1098575] byteIndex[18611])
    (1098524 'init field' this[1098433] c"byteOffset" byteOffset[1098519])
    (1098540 'end of statement' _chpl_des_helper[1098452])
    unknown call_tmp[1098580] "expr temp" "maybe param" "maybe type" "temp"
    (1098583 'move' call_tmp[1098580](1098492 'field num to name' this[1098433] 3))
    unknown call_tmp[1098585] "maybe param" "maybe type" "temp"
    (1098588 'move' call_tmp[1098585](1098495 call readField _mt[203] _chpl_des_helper[1098452] call_tmp[1098580] int(64)[10]))
    unknown numBytes[1098528] "temp"
    (1098531 'init var' numBytes[1098528] call_tmp[1098585] int(64)[10])
    (1098533 'init field' this[1098433] c"numBytes" numBytes[1098528])
    (1098542 'end of statement' _chpl_des_helper[1098452])
    (1098505 call endRecord _mt[203] _chpl_des_helper[1098452])
    (1098544 'end of statement' _chpl_des_helper[1098452])
    (1098546 return _void[46])
  }
  where {
    unknown call_tmp[1098590] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1098593 'move' call_tmp[1098590](1098436 'typeof' reader[1098434]))
    (1098438 call chpl__isFileReader call_tmp[1098590])
  }
  function regexMatch[154054].init=[1098597](arg _mt[1098600]:_MT[201], ref arg this[1098601]:regexMatch[154054], arg other[1098602]:regexMatch[154054]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1098670] "maybe param" "maybe type" "temp"
    (1098673 'move' call_tmp[1098670](1098610 call matched _mt[203] other[1098602]))
    unknown matched[1098636] "temp"
    (1098639 'init var' matched[1098636] call_tmp[1098670] bool[19])
    (1098641 'init field' this[1098601] c"matched" matched[1098636])
    (1098663 'end of statement')
    unknown call_tmp[1098677] "maybe param" "maybe type" "temp"
    (1098680 'move' call_tmp[1098677](1098620 call byteOffset _mt[203] other[1098602]))
    unknown byteOffset[1098645] "temp"
    (1098648 'init var' byteOffset[1098645] call_tmp[1098677] byteIndex[18611])
    (1098650 'init field' this[1098601] c"byteOffset" byteOffset[1098645])
    (1098664 'end of statement')
    unknown call_tmp[1098684] "maybe param" "maybe type" "temp"
    (1098687 'move' call_tmp[1098684](1098630 call numBytes _mt[203] other[1098602]))
    unknown numBytes[1098654] "temp"
    (1098657 'init var' numBytes[1098654] call_tmp[1098684] int(64)[10])
    (1098659 'init field' this[1098601] c"numBytes" numBytes[1098654])
    (1098665 'end of statement')
    (1098666 return _void[46])
  }
  function regexMatch[154054].deinit[1098689](arg _mt[1098691]:_MT[201], arg this[1098693]:regexMatch[154054]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1098701 return _void[46])
  }
  function regexMatch[154054].serialize[1098703](arg _mt[1098707]:_MT[201], arg this[1098705]:regexMatch[154054], arg writer[1098706]:_any[141](?), ref arg serializer[1098711]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1098714 call serializeDefaultImpl writer[1098706] serializer[1098711] this[1098705])
    (1098720 return _void[46])
  }
  function regexMatch[154054].deserialize[1098722](arg _mt[1098726]:_MT[201], ref arg this[1098724]:regexMatch[154054], arg reader[1098725]:_any[141](?), ref arg deserializer[1098731]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1098733] "temp"
    (1098735 'move' _deser_temp[1098733] this[1098724])
    (1098738 call deserializeDefaultImpl reader[1098725] deserializer[1098731] _deser_temp[1098733])
    (1098744 return _void[46])
  }
  function regexMatch[154054].=[1098746](arg _mt[1098748]:_MT[201], arg this[1098750]:regexMatch[154054], ref arg _arg1[1098752]:regexMatch[154054], const?  ref arg _arg2[1098753]:regexMatch[154054]) : void[4] "assignop" "compiler generated" "last resort" "method" "operator"
  {
    unknown call_tmp[1098801] "expr temp" "maybe param" "maybe type" "temp"
    (1098804 'move' call_tmp[1098801](1098763 call matched _mt[203] _arg1[1098752]))
    unknown call_tmp[1098808] "expr temp" "maybe param" "maybe type" "temp"
    (1098811 'move' call_tmp[1098808](1098767 call matched _mt[203] _arg2[1098753]))
    (1098771 call = call_tmp[1098801] call_tmp[1098808])
    (1098794 'end of statement')
    unknown call_tmp[1098815] "expr temp" "maybe param" "maybe type" "temp"
    (1098818 'move' call_tmp[1098815](1098773 call byteOffset _mt[203] _arg1[1098752]))
    unknown call_tmp[1098822] "expr temp" "maybe param" "maybe type" "temp"
    (1098825 'move' call_tmp[1098822](1098777 call byteOffset _mt[203] _arg2[1098753]))
    (1098781 call = call_tmp[1098815] call_tmp[1098822])
    (1098795 'end of statement')
    unknown call_tmp[1098829] "expr temp" "maybe param" "maybe type" "temp"
    (1098832 'move' call_tmp[1098829](1098783 call numBytes _mt[203] _arg1[1098752]))
    unknown call_tmp[1098836] "expr temp" "maybe param" "maybe type" "temp"
    (1098839 'move' call_tmp[1098836](1098787 call numBytes _mt[203] _arg2[1098753]))
    (1098791 call = call_tmp[1098829] call_tmp[1098836])
    (1098797 return _void[46])
  }
  where {
    unknown call_tmp[1098841] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1098844 'move' call_tmp[1098841](1098756 'typeof' _arg1[1098752]))
    unknown call_tmp[1098846] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1098849 'move' call_tmp[1098846](1098758 'typeof' _arg2[1098753]))
    (1098760 call == call_tmp[1098841] call_tmp[1098846])
  }
  function regexMatch[154054].hash[1098851](arg _mt[1098854]:_MT[201], arg this[1098853]:regexMatch[154054]) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1098888] "RVV" "temp"
    unknown call_tmp[1098895] "expr temp" "maybe param" "maybe type" "temp"
    (1098898 'move' call_tmp[1098895](1098873 call numBytes _mt[203] this[1098853]))
    unknown call_tmp[1098900] "expr temp" "maybe param" "maybe type" "temp"
    (1098903 'move' call_tmp[1098900](1098877 call hash _mt[203] call_tmp[1098895]))
    unknown call_tmp[1098905] "expr temp" "maybe param" "maybe type" "temp"
    (1098908 'move' call_tmp[1098905](1098863 call byteOffset _mt[203] this[1098853]))
    unknown call_tmp[1098910] "expr temp" "maybe param" "maybe type" "temp"
    (1098913 'move' call_tmp[1098910](1098867 call hash _mt[203] call_tmp[1098905]))
    unknown call_tmp[1098915] "expr temp" "maybe param" "maybe type" "temp"
    (1098918 'move' call_tmp[1098915](1098857 call matched _mt[203] this[1098853]))
    unknown call_tmp[1098920] "expr temp" "maybe param" "maybe type" "temp"
    (1098923 'move' call_tmp[1098920](1098861 call chpl__defaultHashWrapperInner call_tmp[1098915]))
    unknown call_tmp[1098925] "expr temp" "maybe param" "maybe type" "temp"
    (1098928 'move' call_tmp[1098925](1098870 call chpl__defaultHashCombine call_tmp[1098910] call_tmp[1098920] 2))
    unknown call_tmp[1098930] "expr temp" "maybe param" "maybe type" "temp"
    (1098933 'move' call_tmp[1098930](1098880 call chpl__defaultHashCombine call_tmp[1098900] call_tmp[1098925] 3))
    (1098893 'move' ret[1098888](1098892 'deref' call_tmp[1098930]))
    (1098890 return ret[1098888])
  }
  function chpl_fields_are_comparable[1098951](arg _arg1[1098953]:regexMatch[154054], arg _arg2[1098954]:regexMatch[154054]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1098993]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1099000] "expr temp" "maybe param" "maybe type" "temp"
    (1099003 'move' call_tmp[1099000](1098957 call matched _mt[203] _arg1[1098953]))
    unknown call_tmp[1099005] "expr temp" "maybe param" "maybe type" "temp"
    (1099008 'move' call_tmp[1099005](1098961 call matched _mt[203] _arg2[1098954]))
    unknown call_tmp[1099010] "expr temp" "maybe param" "maybe type" "temp"
    (1099013 'move' call_tmp[1099010](1098965 'call resolves' c"==" call_tmp[1099000] call_tmp[1099005]))
    unknown call_tmp[1099015] "expr temp" "maybe param" "maybe type" "temp"
    (1099018 'move' call_tmp[1099015](1098967 call byteOffset _mt[203] _arg1[1098953]))
    unknown call_tmp[1099020] "expr temp" "maybe param" "maybe type" "temp"
    (1099023 'move' call_tmp[1099020](1098971 call byteOffset _mt[203] _arg2[1098954]))
    unknown call_tmp[1099025] "expr temp" "maybe param" "maybe type" "temp"
    (1099028 'move' call_tmp[1099025](1098975 'call resolves' c"==" call_tmp[1099015] call_tmp[1099020]))
    unknown call_tmp[1099030] "expr temp" "maybe param" "maybe type" "temp"
    (1099033 'move' call_tmp[1099030](1098977 call numBytes _mt[203] _arg1[1098953]))
    unknown call_tmp[1099035] "expr temp" "maybe param" "maybe type" "temp"
    (1099038 'move' call_tmp[1099035](1098981 call numBytes _mt[203] _arg2[1098954]))
    unknown call_tmp[1099040] "expr temp" "maybe param" "maybe type" "temp"
    (1099043 'move' call_tmp[1099040](1098985 'call resolves' c"==" call_tmp[1099030] call_tmp[1099035]))
    unknown call_tmp[1099045] "expr temp" "maybe param" "maybe type" "temp"
    (1099048 'move' call_tmp[1099045](1098987 '&' call_tmp[1099010] call_tmp[1099025] call_tmp[1099040]))
    (1098998 'move' ret[1098993](1098997 'deref' call_tmp[1099045]))
    (1098995 return ret[1098993])
  }
  function regexMatch[154054].==[1098935](arg _mt[1098937]:_MT[201], arg this[1098939]:regexMatch[154054], arg _arg1[1098941]:regexMatch[154054], arg _arg2[1098942]:regexMatch[154054]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1099107]:bool[19] "RVV" "temp"
    unknown call_tmp[1099129] "expr temp" "maybe param" "maybe type" "temp"
    (1099132 'move' call_tmp[1099129](1099056 call matched _mt[203] _arg1[1098941]))
    unknown call_tmp[1099134] "expr temp" "maybe param" "maybe type" "temp"
    (1099137 'move' call_tmp[1099134](1099060 call matched _mt[203] _arg2[1098942]))
    unknown call_tmp[1099139] "expr temp" "maybe param" "maybe type" "temp"
    (1099142 'move' call_tmp[1099139](1099064 call chpl_field_neq call_tmp[1099129] call_tmp[1099134]))
    if call_tmp[1099139]
    {
      (1099112 'move' ret[1099107](1099111 'deref' 0))
      gotoReturn _end_==[1099105] _end_==[1099105]
    }
    unknown call_tmp[1099144] "expr temp" "maybe param" "maybe type" "temp"
    (1099147 'move' call_tmp[1099144](1099070 call byteOffset _mt[203] _arg1[1098941]))
    unknown call_tmp[1099149] "expr temp" "maybe param" "maybe type" "temp"
    (1099152 'move' call_tmp[1099149](1099074 call byteOffset _mt[203] _arg2[1098942]))
    unknown call_tmp[1099154] "expr temp" "maybe param" "maybe type" "temp"
    (1099157 'move' call_tmp[1099154](1099078 call chpl_field_neq call_tmp[1099144] call_tmp[1099149]))
    if call_tmp[1099154]
    {
      (1099117 'move' ret[1099107](1099116 'deref' 0))
      gotoReturn _end_==[1099105] _end_==[1099105]
    }
    unknown call_tmp[1099159] "expr temp" "maybe param" "maybe type" "temp"
    (1099162 'move' call_tmp[1099159](1099084 call numBytes _mt[203] _arg1[1098941]))
    unknown call_tmp[1099164] "expr temp" "maybe param" "maybe type" "temp"
    (1099167 'move' call_tmp[1099164](1099088 call numBytes _mt[203] _arg2[1098942]))
    unknown call_tmp[1099169] "expr temp" "maybe param" "maybe type" "temp"
    (1099172 'move' call_tmp[1099169](1099092 call chpl_field_neq call_tmp[1099159] call_tmp[1099164]))
    if call_tmp[1099169]
    {
      (1099122 'move' ret[1099107](1099121 'deref' 0))
      gotoReturn _end_==[1099105] _end_==[1099105]
    }
    (1099127 'move' ret[1099107](1099126 'deref' 1))
    label _end_==[1099105]
    (1099109 return ret[1099107])
  }
  where {
    unknown call_tmp[1099174] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1099177 'move' call_tmp[1099174](1098945 'typeof' _arg1[1098941]))
    unknown call_tmp[1099179] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1099182 'move' call_tmp[1099179](1098947 'typeof' _arg2[1098942]))
    unknown call_tmp[1099184] "expr temp" "maybe param" "maybe type" "temp"
    (1099187 'move' call_tmp[1099184](1098949 call == call_tmp[1099174] call_tmp[1099179]))
    unknown call_tmp[1099189] "expr temp" "maybe param" "maybe type" "temp"
    (1099192 'move' call_tmp[1099189](1099050 call chpl_fields_are_comparable[1098951] _arg1[1098941] _arg2[1098942]))
    (1099054 '&' call_tmp[1099184] call_tmp[1099189])
  }
  function chpl_fields_are_comparable[1099210](arg _arg1[1099212]:regexMatch[154054], arg _arg2[1099213]:regexMatch[154054]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1099252]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1099259] "expr temp" "maybe param" "maybe type" "temp"
    (1099262 'move' call_tmp[1099259](1099216 call matched _mt[203] _arg1[1099212]))
    unknown call_tmp[1099264] "expr temp" "maybe param" "maybe type" "temp"
    (1099267 'move' call_tmp[1099264](1099220 call matched _mt[203] _arg2[1099213]))
    unknown call_tmp[1099269] "expr temp" "maybe param" "maybe type" "temp"
    (1099272 'move' call_tmp[1099269](1099224 'call resolves' c"!=" call_tmp[1099259] call_tmp[1099264]))
    unknown call_tmp[1099274] "expr temp" "maybe param" "maybe type" "temp"
    (1099277 'move' call_tmp[1099274](1099226 call byteOffset _mt[203] _arg1[1099212]))
    unknown call_tmp[1099279] "expr temp" "maybe param" "maybe type" "temp"
    (1099282 'move' call_tmp[1099279](1099230 call byteOffset _mt[203] _arg2[1099213]))
    unknown call_tmp[1099284] "expr temp" "maybe param" "maybe type" "temp"
    (1099287 'move' call_tmp[1099284](1099234 'call resolves' c"!=" call_tmp[1099274] call_tmp[1099279]))
    unknown call_tmp[1099289] "expr temp" "maybe param" "maybe type" "temp"
    (1099292 'move' call_tmp[1099289](1099236 call numBytes _mt[203] _arg1[1099212]))
    unknown call_tmp[1099294] "expr temp" "maybe param" "maybe type" "temp"
    (1099297 'move' call_tmp[1099294](1099240 call numBytes _mt[203] _arg2[1099213]))
    unknown call_tmp[1099299] "expr temp" "maybe param" "maybe type" "temp"
    (1099302 'move' call_tmp[1099299](1099244 'call resolves' c"!=" call_tmp[1099289] call_tmp[1099294]))
    unknown call_tmp[1099304] "expr temp" "maybe param" "maybe type" "temp"
    (1099307 'move' call_tmp[1099304](1099246 '&' call_tmp[1099269] call_tmp[1099284] call_tmp[1099299]))
    (1099257 'move' ret[1099252](1099256 'deref' call_tmp[1099304]))
    (1099254 return ret[1099252])
  }
  function regexMatch[154054].!=[1099194](arg _mt[1099196]:_MT[201], arg this[1099198]:regexMatch[154054], arg _arg1[1099200]:regexMatch[154054], arg _arg2[1099201]:regexMatch[154054]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1099366]:bool[19] "RVV" "temp"
    unknown call_tmp[1099388] "expr temp" "maybe param" "maybe type" "temp"
    (1099391 'move' call_tmp[1099388](1099315 call matched _mt[203] _arg1[1099200]))
    unknown call_tmp[1099393] "expr temp" "maybe param" "maybe type" "temp"
    (1099396 'move' call_tmp[1099393](1099319 call matched _mt[203] _arg2[1099201]))
    unknown call_tmp[1099398] "expr temp" "maybe param" "maybe type" "temp"
    (1099401 'move' call_tmp[1099398](1099323 call chpl_field_neq call_tmp[1099388] call_tmp[1099393]))
    if call_tmp[1099398]
    {
      (1099371 'move' ret[1099366](1099370 'deref' 1))
      gotoReturn _end_!=[1099364] _end_!=[1099364]
    }
    unknown call_tmp[1099403] "expr temp" "maybe param" "maybe type" "temp"
    (1099406 'move' call_tmp[1099403](1099329 call byteOffset _mt[203] _arg1[1099200]))
    unknown call_tmp[1099408] "expr temp" "maybe param" "maybe type" "temp"
    (1099411 'move' call_tmp[1099408](1099333 call byteOffset _mt[203] _arg2[1099201]))
    unknown call_tmp[1099413] "expr temp" "maybe param" "maybe type" "temp"
    (1099416 'move' call_tmp[1099413](1099337 call chpl_field_neq call_tmp[1099403] call_tmp[1099408]))
    if call_tmp[1099413]
    {
      (1099376 'move' ret[1099366](1099375 'deref' 1))
      gotoReturn _end_!=[1099364] _end_!=[1099364]
    }
    unknown call_tmp[1099418] "expr temp" "maybe param" "maybe type" "temp"
    (1099421 'move' call_tmp[1099418](1099343 call numBytes _mt[203] _arg1[1099200]))
    unknown call_tmp[1099423] "expr temp" "maybe param" "maybe type" "temp"
    (1099426 'move' call_tmp[1099423](1099347 call numBytes _mt[203] _arg2[1099201]))
    unknown call_tmp[1099428] "expr temp" "maybe param" "maybe type" "temp"
    (1099431 'move' call_tmp[1099428](1099351 call chpl_field_neq call_tmp[1099418] call_tmp[1099423]))
    if call_tmp[1099428]
    {
      (1099381 'move' ret[1099366](1099380 'deref' 1))
      gotoReturn _end_!=[1099364] _end_!=[1099364]
    }
    (1099386 'move' ret[1099366](1099385 'deref' 0))
    label _end_!=[1099364]
    (1099368 return ret[1099366])
  }
  where {
    unknown call_tmp[1099433] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1099436 'move' call_tmp[1099433](1099204 'typeof' _arg1[1099200]))
    unknown call_tmp[1099438] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1099441 'move' call_tmp[1099438](1099206 'typeof' _arg2[1099201]))
    unknown call_tmp[1099443] "expr temp" "maybe param" "maybe type" "temp"
    (1099446 'move' call_tmp[1099443](1099208 call == call_tmp[1099433] call_tmp[1099438]))
    unknown call_tmp[1099448] "expr temp" "maybe param" "maybe type" "temp"
    (1099451 'move' call_tmp[1099448](1099309 call chpl_fields_are_comparable[1099210] _arg1[1099200] _arg2[1099201]))
    (1099313 '&' call_tmp[1099443] call_tmp[1099448])
  }
  function chpl_fields_are_comparable[1099469](arg _arg1[1099471]:regexMatch[154054], arg _arg2[1099472]:regexMatch[154054]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1099511]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1099518] "expr temp" "maybe param" "maybe type" "temp"
    (1099521 'move' call_tmp[1099518](1099475 call matched _mt[203] _arg1[1099471]))
    unknown call_tmp[1099523] "expr temp" "maybe param" "maybe type" "temp"
    (1099526 'move' call_tmp[1099523](1099479 call matched _mt[203] _arg2[1099472]))
    unknown call_tmp[1099528] "expr temp" "maybe param" "maybe type" "temp"
    (1099531 'move' call_tmp[1099528](1099483 'call resolves' c"<" call_tmp[1099518] call_tmp[1099523]))
    unknown call_tmp[1099533] "expr temp" "maybe param" "maybe type" "temp"
    (1099536 'move' call_tmp[1099533](1099485 call byteOffset _mt[203] _arg1[1099471]))
    unknown call_tmp[1099538] "expr temp" "maybe param" "maybe type" "temp"
    (1099541 'move' call_tmp[1099538](1099489 call byteOffset _mt[203] _arg2[1099472]))
    unknown call_tmp[1099543] "expr temp" "maybe param" "maybe type" "temp"
    (1099546 'move' call_tmp[1099543](1099493 'call resolves' c"<" call_tmp[1099533] call_tmp[1099538]))
    unknown call_tmp[1099548] "expr temp" "maybe param" "maybe type" "temp"
    (1099551 'move' call_tmp[1099548](1099495 call numBytes _mt[203] _arg1[1099471]))
    unknown call_tmp[1099553] "expr temp" "maybe param" "maybe type" "temp"
    (1099556 'move' call_tmp[1099553](1099499 call numBytes _mt[203] _arg2[1099472]))
    unknown call_tmp[1099558] "expr temp" "maybe param" "maybe type" "temp"
    (1099561 'move' call_tmp[1099558](1099503 'call resolves' c"<" call_tmp[1099548] call_tmp[1099553]))
    unknown call_tmp[1099563] "expr temp" "maybe param" "maybe type" "temp"
    (1099566 'move' call_tmp[1099563](1099505 '&' call_tmp[1099528] call_tmp[1099543] call_tmp[1099558]))
    (1099516 'move' ret[1099511](1099515 'deref' call_tmp[1099563]))
    (1099513 return ret[1099511])
  }
  function regexMatch[154054].<[1099453](arg _mt[1099455]:_MT[201], arg this[1099457]:regexMatch[154054], arg _arg1[1099459]:regexMatch[154054], arg _arg2[1099460]:regexMatch[154054]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1099670]:bool[19] "RVV" "temp"
    unknown call_tmp[1099707] "expr temp" "maybe param" "maybe type" "temp"
    (1099710 'move' call_tmp[1099707](1099574 call matched _mt[203] _arg1[1099459]))
    unknown call_tmp[1099712] "expr temp" "maybe param" "maybe type" "temp"
    (1099715 'move' call_tmp[1099712](1099578 call matched _mt[203] _arg2[1099460]))
    unknown call_tmp[1099717] "expr temp" "maybe param" "maybe type" "temp"
    (1099720 'move' call_tmp[1099717](1099582 call chpl_field_lt call_tmp[1099707] call_tmp[1099712]))
    if call_tmp[1099717]
    {
      (1099675 'move' ret[1099670](1099674 'deref' 1))
      gotoReturn _end_<[1099668] _end_<[1099668]
    }
    unknown call_tmp[1099722] "expr temp" "maybe param" "maybe type" "temp"
    (1099725 'move' call_tmp[1099722](1099588 call matched _mt[203] _arg1[1099459]))
    unknown call_tmp[1099727] "expr temp" "maybe param" "maybe type" "temp"
    (1099730 'move' call_tmp[1099727](1099592 call matched _mt[203] _arg2[1099460]))
    unknown call_tmp[1099732] "expr temp" "maybe param" "maybe type" "temp"
    (1099735 'move' call_tmp[1099732](1099596 call chpl_field_gt call_tmp[1099722] call_tmp[1099727]))
    if call_tmp[1099732]
    {
      (1099680 'move' ret[1099670](1099679 'deref' 0))
      gotoReturn _end_<[1099668] _end_<[1099668]
    }
    unknown call_tmp[1099737] "expr temp" "maybe param" "maybe type" "temp"
    (1099740 'move' call_tmp[1099737](1099602 call byteOffset _mt[203] _arg1[1099459]))
    unknown call_tmp[1099742] "expr temp" "maybe param" "maybe type" "temp"
    (1099745 'move' call_tmp[1099742](1099606 call byteOffset _mt[203] _arg2[1099460]))
    unknown call_tmp[1099747] "expr temp" "maybe param" "maybe type" "temp"
    (1099750 'move' call_tmp[1099747](1099610 call chpl_field_lt call_tmp[1099737] call_tmp[1099742]))
    if call_tmp[1099747]
    {
      (1099685 'move' ret[1099670](1099684 'deref' 1))
      gotoReturn _end_<[1099668] _end_<[1099668]
    }
    unknown call_tmp[1099752] "expr temp" "maybe param" "maybe type" "temp"
    (1099755 'move' call_tmp[1099752](1099616 call byteOffset _mt[203] _arg1[1099459]))
    unknown call_tmp[1099757] "expr temp" "maybe param" "maybe type" "temp"
    (1099760 'move' call_tmp[1099757](1099620 call byteOffset _mt[203] _arg2[1099460]))
    unknown call_tmp[1099762] "expr temp" "maybe param" "maybe type" "temp"
    (1099765 'move' call_tmp[1099762](1099624 call chpl_field_gt call_tmp[1099752] call_tmp[1099757]))
    if call_tmp[1099762]
    {
      (1099690 'move' ret[1099670](1099689 'deref' 0))
      gotoReturn _end_<[1099668] _end_<[1099668]
    }
    unknown call_tmp[1099767] "expr temp" "maybe param" "maybe type" "temp"
    (1099770 'move' call_tmp[1099767](1099630 call numBytes _mt[203] _arg1[1099459]))
    unknown call_tmp[1099772] "expr temp" "maybe param" "maybe type" "temp"
    (1099775 'move' call_tmp[1099772](1099634 call numBytes _mt[203] _arg2[1099460]))
    unknown call_tmp[1099777] "expr temp" "maybe param" "maybe type" "temp"
    (1099780 'move' call_tmp[1099777](1099638 call chpl_field_lt call_tmp[1099767] call_tmp[1099772]))
    if call_tmp[1099777]
    {
      (1099695 'move' ret[1099670](1099694 'deref' 1))
      gotoReturn _end_<[1099668] _end_<[1099668]
    }
    unknown call_tmp[1099782] "expr temp" "maybe param" "maybe type" "temp"
    (1099785 'move' call_tmp[1099782](1099644 call numBytes _mt[203] _arg1[1099459]))
    unknown call_tmp[1099787] "expr temp" "maybe param" "maybe type" "temp"
    (1099790 'move' call_tmp[1099787](1099648 call numBytes _mt[203] _arg2[1099460]))
    unknown call_tmp[1099792] "expr temp" "maybe param" "maybe type" "temp"
    (1099795 'move' call_tmp[1099792](1099652 call chpl_field_gt call_tmp[1099782] call_tmp[1099787]))
    if call_tmp[1099792]
    {
      (1099700 'move' ret[1099670](1099699 'deref' 0))
      gotoReturn _end_<[1099668] _end_<[1099668]
    }
    (1099705 'move' ret[1099670](1099704 'deref' 0))
    label _end_<[1099668]
    (1099672 return ret[1099670])
  }
  where {
    unknown call_tmp[1099797] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1099800 'move' call_tmp[1099797](1099463 'typeof' _arg1[1099459]))
    unknown call_tmp[1099802] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1099805 'move' call_tmp[1099802](1099465 'typeof' _arg2[1099460]))
    unknown call_tmp[1099807] "expr temp" "maybe param" "maybe type" "temp"
    (1099810 'move' call_tmp[1099807](1099467 call == call_tmp[1099797] call_tmp[1099802]))
    unknown call_tmp[1099812] "expr temp" "maybe param" "maybe type" "temp"
    (1099815 'move' call_tmp[1099812](1099568 call chpl_fields_are_comparable[1099469] _arg1[1099459] _arg2[1099460]))
    (1099572 '&' call_tmp[1099807] call_tmp[1099812])
  }
  function chpl_fields_are_comparable[1099833](arg _arg1[1099835]:regexMatch[154054], arg _arg2[1099836]:regexMatch[154054]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1099875]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1099882] "expr temp" "maybe param" "maybe type" "temp"
    (1099885 'move' call_tmp[1099882](1099839 call matched _mt[203] _arg1[1099835]))
    unknown call_tmp[1099887] "expr temp" "maybe param" "maybe type" "temp"
    (1099890 'move' call_tmp[1099887](1099843 call matched _mt[203] _arg2[1099836]))
    unknown call_tmp[1099892] "expr temp" "maybe param" "maybe type" "temp"
    (1099895 'move' call_tmp[1099892](1099847 'call resolves' c"<=" call_tmp[1099882] call_tmp[1099887]))
    unknown call_tmp[1099897] "expr temp" "maybe param" "maybe type" "temp"
    (1099900 'move' call_tmp[1099897](1099849 call byteOffset _mt[203] _arg1[1099835]))
    unknown call_tmp[1099902] "expr temp" "maybe param" "maybe type" "temp"
    (1099905 'move' call_tmp[1099902](1099853 call byteOffset _mt[203] _arg2[1099836]))
    unknown call_tmp[1099907] "expr temp" "maybe param" "maybe type" "temp"
    (1099910 'move' call_tmp[1099907](1099857 'call resolves' c"<=" call_tmp[1099897] call_tmp[1099902]))
    unknown call_tmp[1099912] "expr temp" "maybe param" "maybe type" "temp"
    (1099915 'move' call_tmp[1099912](1099859 call numBytes _mt[203] _arg1[1099835]))
    unknown call_tmp[1099917] "expr temp" "maybe param" "maybe type" "temp"
    (1099920 'move' call_tmp[1099917](1099863 call numBytes _mt[203] _arg2[1099836]))
    unknown call_tmp[1099922] "expr temp" "maybe param" "maybe type" "temp"
    (1099925 'move' call_tmp[1099922](1099867 'call resolves' c"<=" call_tmp[1099912] call_tmp[1099917]))
    unknown call_tmp[1099927] "expr temp" "maybe param" "maybe type" "temp"
    (1099930 'move' call_tmp[1099927](1099869 '&' call_tmp[1099892] call_tmp[1099907] call_tmp[1099922]))
    (1099880 'move' ret[1099875](1099879 'deref' call_tmp[1099927]))
    (1099877 return ret[1099875])
  }
  function regexMatch[154054].<=[1099817](arg _mt[1099819]:_MT[201], arg this[1099821]:regexMatch[154054], arg _arg1[1099823]:regexMatch[154054], arg _arg2[1099824]:regexMatch[154054]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1100034]:bool[19] "RVV" "temp"
    unknown call_tmp[1100071] "expr temp" "maybe param" "maybe type" "temp"
    (1100074 'move' call_tmp[1100071](1099938 call matched _mt[203] _arg1[1099823]))
    unknown call_tmp[1100076] "expr temp" "maybe param" "maybe type" "temp"
    (1100079 'move' call_tmp[1100076](1099942 call matched _mt[203] _arg2[1099824]))
    unknown call_tmp[1100081] "expr temp" "maybe param" "maybe type" "temp"
    (1100084 'move' call_tmp[1100081](1099946 call chpl_field_lt call_tmp[1100071] call_tmp[1100076]))
    if call_tmp[1100081]
    {
      (1100039 'move' ret[1100034](1100038 'deref' 1))
      gotoReturn _end_<=[1100032] _end_<=[1100032]
    }
    unknown call_tmp[1100086] "expr temp" "maybe param" "maybe type" "temp"
    (1100089 'move' call_tmp[1100086](1099952 call matched _mt[203] _arg1[1099823]))
    unknown call_tmp[1100091] "expr temp" "maybe param" "maybe type" "temp"
    (1100094 'move' call_tmp[1100091](1099956 call matched _mt[203] _arg2[1099824]))
    unknown call_tmp[1100096] "expr temp" "maybe param" "maybe type" "temp"
    (1100099 'move' call_tmp[1100096](1099960 call chpl_field_gt call_tmp[1100086] call_tmp[1100091]))
    if call_tmp[1100096]
    {
      (1100044 'move' ret[1100034](1100043 'deref' 0))
      gotoReturn _end_<=[1100032] _end_<=[1100032]
    }
    unknown call_tmp[1100101] "expr temp" "maybe param" "maybe type" "temp"
    (1100104 'move' call_tmp[1100101](1099966 call byteOffset _mt[203] _arg1[1099823]))
    unknown call_tmp[1100106] "expr temp" "maybe param" "maybe type" "temp"
    (1100109 'move' call_tmp[1100106](1099970 call byteOffset _mt[203] _arg2[1099824]))
    unknown call_tmp[1100111] "expr temp" "maybe param" "maybe type" "temp"
    (1100114 'move' call_tmp[1100111](1099974 call chpl_field_lt call_tmp[1100101] call_tmp[1100106]))
    if call_tmp[1100111]
    {
      (1100049 'move' ret[1100034](1100048 'deref' 1))
      gotoReturn _end_<=[1100032] _end_<=[1100032]
    }
    unknown call_tmp[1100116] "expr temp" "maybe param" "maybe type" "temp"
    (1100119 'move' call_tmp[1100116](1099980 call byteOffset _mt[203] _arg1[1099823]))
    unknown call_tmp[1100121] "expr temp" "maybe param" "maybe type" "temp"
    (1100124 'move' call_tmp[1100121](1099984 call byteOffset _mt[203] _arg2[1099824]))
    unknown call_tmp[1100126] "expr temp" "maybe param" "maybe type" "temp"
    (1100129 'move' call_tmp[1100126](1099988 call chpl_field_gt call_tmp[1100116] call_tmp[1100121]))
    if call_tmp[1100126]
    {
      (1100054 'move' ret[1100034](1100053 'deref' 0))
      gotoReturn _end_<=[1100032] _end_<=[1100032]
    }
    unknown call_tmp[1100131] "expr temp" "maybe param" "maybe type" "temp"
    (1100134 'move' call_tmp[1100131](1099994 call numBytes _mt[203] _arg1[1099823]))
    unknown call_tmp[1100136] "expr temp" "maybe param" "maybe type" "temp"
    (1100139 'move' call_tmp[1100136](1099998 call numBytes _mt[203] _arg2[1099824]))
    unknown call_tmp[1100141] "expr temp" "maybe param" "maybe type" "temp"
    (1100144 'move' call_tmp[1100141](1100002 call chpl_field_lt call_tmp[1100131] call_tmp[1100136]))
    if call_tmp[1100141]
    {
      (1100059 'move' ret[1100034](1100058 'deref' 1))
      gotoReturn _end_<=[1100032] _end_<=[1100032]
    }
    unknown call_tmp[1100146] "expr temp" "maybe param" "maybe type" "temp"
    (1100149 'move' call_tmp[1100146](1100008 call numBytes _mt[203] _arg1[1099823]))
    unknown call_tmp[1100151] "expr temp" "maybe param" "maybe type" "temp"
    (1100154 'move' call_tmp[1100151](1100012 call numBytes _mt[203] _arg2[1099824]))
    unknown call_tmp[1100156] "expr temp" "maybe param" "maybe type" "temp"
    (1100159 'move' call_tmp[1100156](1100016 call chpl_field_gt call_tmp[1100146] call_tmp[1100151]))
    if call_tmp[1100156]
    {
      (1100064 'move' ret[1100034](1100063 'deref' 0))
      gotoReturn _end_<=[1100032] _end_<=[1100032]
    }
    (1100069 'move' ret[1100034](1100068 'deref' 1))
    label _end_<=[1100032]
    (1100036 return ret[1100034])
  }
  where {
    unknown call_tmp[1100161] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1100164 'move' call_tmp[1100161](1099827 'typeof' _arg1[1099823]))
    unknown call_tmp[1100166] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1100169 'move' call_tmp[1100166](1099829 'typeof' _arg2[1099824]))
    unknown call_tmp[1100171] "expr temp" "maybe param" "maybe type" "temp"
    (1100174 'move' call_tmp[1100171](1099831 call == call_tmp[1100161] call_tmp[1100166]))
    unknown call_tmp[1100176] "expr temp" "maybe param" "maybe type" "temp"
    (1100179 'move' call_tmp[1100176](1099932 call chpl_fields_are_comparable[1099833] _arg1[1099823] _arg2[1099824]))
    (1099936 '&' call_tmp[1100171] call_tmp[1100176])
  }
  function chpl_fields_are_comparable[1100197](arg _arg1[1100199]:regexMatch[154054], arg _arg2[1100200]:regexMatch[154054]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1100239]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1100246] "expr temp" "maybe param" "maybe type" "temp"
    (1100249 'move' call_tmp[1100246](1100203 call matched _mt[203] _arg1[1100199]))
    unknown call_tmp[1100251] "expr temp" "maybe param" "maybe type" "temp"
    (1100254 'move' call_tmp[1100251](1100207 call matched _mt[203] _arg2[1100200]))
    unknown call_tmp[1100256] "expr temp" "maybe param" "maybe type" "temp"
    (1100259 'move' call_tmp[1100256](1100211 'call resolves' c">" call_tmp[1100246] call_tmp[1100251]))
    unknown call_tmp[1100261] "expr temp" "maybe param" "maybe type" "temp"
    (1100264 'move' call_tmp[1100261](1100213 call byteOffset _mt[203] _arg1[1100199]))
    unknown call_tmp[1100266] "expr temp" "maybe param" "maybe type" "temp"
    (1100269 'move' call_tmp[1100266](1100217 call byteOffset _mt[203] _arg2[1100200]))
    unknown call_tmp[1100271] "expr temp" "maybe param" "maybe type" "temp"
    (1100274 'move' call_tmp[1100271](1100221 'call resolves' c">" call_tmp[1100261] call_tmp[1100266]))
    unknown call_tmp[1100276] "expr temp" "maybe param" "maybe type" "temp"
    (1100279 'move' call_tmp[1100276](1100223 call numBytes _mt[203] _arg1[1100199]))
    unknown call_tmp[1100281] "expr temp" "maybe param" "maybe type" "temp"
    (1100284 'move' call_tmp[1100281](1100227 call numBytes _mt[203] _arg2[1100200]))
    unknown call_tmp[1100286] "expr temp" "maybe param" "maybe type" "temp"
    (1100289 'move' call_tmp[1100286](1100231 'call resolves' c">" call_tmp[1100276] call_tmp[1100281]))
    unknown call_tmp[1100291] "expr temp" "maybe param" "maybe type" "temp"
    (1100294 'move' call_tmp[1100291](1100233 '&' call_tmp[1100256] call_tmp[1100271] call_tmp[1100286]))
    (1100244 'move' ret[1100239](1100243 'deref' call_tmp[1100291]))
    (1100241 return ret[1100239])
  }
  function regexMatch[154054].>[1100181](arg _mt[1100183]:_MT[201], arg this[1100185]:regexMatch[154054], arg _arg1[1100187]:regexMatch[154054], arg _arg2[1100188]:regexMatch[154054]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1100398]:bool[19] "RVV" "temp"
    unknown call_tmp[1100435] "expr temp" "maybe param" "maybe type" "temp"
    (1100438 'move' call_tmp[1100435](1100302 call matched _mt[203] _arg1[1100187]))
    unknown call_tmp[1100440] "expr temp" "maybe param" "maybe type" "temp"
    (1100443 'move' call_tmp[1100440](1100306 call matched _mt[203] _arg2[1100188]))
    unknown call_tmp[1100445] "expr temp" "maybe param" "maybe type" "temp"
    (1100448 'move' call_tmp[1100445](1100310 call chpl_field_gt call_tmp[1100435] call_tmp[1100440]))
    if call_tmp[1100445]
    {
      (1100403 'move' ret[1100398](1100402 'deref' 1))
      gotoReturn _end_>[1100396] _end_>[1100396]
    }
    unknown call_tmp[1100450] "expr temp" "maybe param" "maybe type" "temp"
    (1100453 'move' call_tmp[1100450](1100316 call matched _mt[203] _arg1[1100187]))
    unknown call_tmp[1100455] "expr temp" "maybe param" "maybe type" "temp"
    (1100458 'move' call_tmp[1100455](1100320 call matched _mt[203] _arg2[1100188]))
    unknown call_tmp[1100460] "expr temp" "maybe param" "maybe type" "temp"
    (1100463 'move' call_tmp[1100460](1100324 call chpl_field_lt call_tmp[1100450] call_tmp[1100455]))
    if call_tmp[1100460]
    {
      (1100408 'move' ret[1100398](1100407 'deref' 0))
      gotoReturn _end_>[1100396] _end_>[1100396]
    }
    unknown call_tmp[1100465] "expr temp" "maybe param" "maybe type" "temp"
    (1100468 'move' call_tmp[1100465](1100330 call byteOffset _mt[203] _arg1[1100187]))
    unknown call_tmp[1100470] "expr temp" "maybe param" "maybe type" "temp"
    (1100473 'move' call_tmp[1100470](1100334 call byteOffset _mt[203] _arg2[1100188]))
    unknown call_tmp[1100475] "expr temp" "maybe param" "maybe type" "temp"
    (1100478 'move' call_tmp[1100475](1100338 call chpl_field_gt call_tmp[1100465] call_tmp[1100470]))
    if call_tmp[1100475]
    {
      (1100413 'move' ret[1100398](1100412 'deref' 1))
      gotoReturn _end_>[1100396] _end_>[1100396]
    }
    unknown call_tmp[1100480] "expr temp" "maybe param" "maybe type" "temp"
    (1100483 'move' call_tmp[1100480](1100344 call byteOffset _mt[203] _arg1[1100187]))
    unknown call_tmp[1100485] "expr temp" "maybe param" "maybe type" "temp"
    (1100488 'move' call_tmp[1100485](1100348 call byteOffset _mt[203] _arg2[1100188]))
    unknown call_tmp[1100490] "expr temp" "maybe param" "maybe type" "temp"
    (1100493 'move' call_tmp[1100490](1100352 call chpl_field_lt call_tmp[1100480] call_tmp[1100485]))
    if call_tmp[1100490]
    {
      (1100418 'move' ret[1100398](1100417 'deref' 0))
      gotoReturn _end_>[1100396] _end_>[1100396]
    }
    unknown call_tmp[1100495] "expr temp" "maybe param" "maybe type" "temp"
    (1100498 'move' call_tmp[1100495](1100358 call numBytes _mt[203] _arg1[1100187]))
    unknown call_tmp[1100500] "expr temp" "maybe param" "maybe type" "temp"
    (1100503 'move' call_tmp[1100500](1100362 call numBytes _mt[203] _arg2[1100188]))
    unknown call_tmp[1100505] "expr temp" "maybe param" "maybe type" "temp"
    (1100508 'move' call_tmp[1100505](1100366 call chpl_field_gt call_tmp[1100495] call_tmp[1100500]))
    if call_tmp[1100505]
    {
      (1100423 'move' ret[1100398](1100422 'deref' 1))
      gotoReturn _end_>[1100396] _end_>[1100396]
    }
    unknown call_tmp[1100510] "expr temp" "maybe param" "maybe type" "temp"
    (1100513 'move' call_tmp[1100510](1100372 call numBytes _mt[203] _arg1[1100187]))
    unknown call_tmp[1100515] "expr temp" "maybe param" "maybe type" "temp"
    (1100518 'move' call_tmp[1100515](1100376 call numBytes _mt[203] _arg2[1100188]))
    unknown call_tmp[1100520] "expr temp" "maybe param" "maybe type" "temp"
    (1100523 'move' call_tmp[1100520](1100380 call chpl_field_lt call_tmp[1100510] call_tmp[1100515]))
    if call_tmp[1100520]
    {
      (1100428 'move' ret[1100398](1100427 'deref' 0))
      gotoReturn _end_>[1100396] _end_>[1100396]
    }
    (1100433 'move' ret[1100398](1100432 'deref' 0))
    label _end_>[1100396]
    (1100400 return ret[1100398])
  }
  where {
    unknown call_tmp[1100525] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1100528 'move' call_tmp[1100525](1100191 'typeof' _arg1[1100187]))
    unknown call_tmp[1100530] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1100533 'move' call_tmp[1100530](1100193 'typeof' _arg2[1100188]))
    unknown call_tmp[1100535] "expr temp" "maybe param" "maybe type" "temp"
    (1100538 'move' call_tmp[1100535](1100195 call == call_tmp[1100525] call_tmp[1100530]))
    unknown call_tmp[1100540] "expr temp" "maybe param" "maybe type" "temp"
    (1100543 'move' call_tmp[1100540](1100296 call chpl_fields_are_comparable[1100197] _arg1[1100187] _arg2[1100188]))
    (1100300 '&' call_tmp[1100535] call_tmp[1100540])
  }
  function chpl_fields_are_comparable[1100561](arg _arg1[1100563]:regexMatch[154054], arg _arg2[1100564]:regexMatch[154054]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1100603]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1100610] "expr temp" "maybe param" "maybe type" "temp"
    (1100613 'move' call_tmp[1100610](1100567 call matched _mt[203] _arg1[1100563]))
    unknown call_tmp[1100615] "expr temp" "maybe param" "maybe type" "temp"
    (1100618 'move' call_tmp[1100615](1100571 call matched _mt[203] _arg2[1100564]))
    unknown call_tmp[1100620] "expr temp" "maybe param" "maybe type" "temp"
    (1100623 'move' call_tmp[1100620](1100575 'call resolves' c">=" call_tmp[1100610] call_tmp[1100615]))
    unknown call_tmp[1100625] "expr temp" "maybe param" "maybe type" "temp"
    (1100628 'move' call_tmp[1100625](1100577 call byteOffset _mt[203] _arg1[1100563]))
    unknown call_tmp[1100630] "expr temp" "maybe param" "maybe type" "temp"
    (1100633 'move' call_tmp[1100630](1100581 call byteOffset _mt[203] _arg2[1100564]))
    unknown call_tmp[1100635] "expr temp" "maybe param" "maybe type" "temp"
    (1100638 'move' call_tmp[1100635](1100585 'call resolves' c">=" call_tmp[1100625] call_tmp[1100630]))
    unknown call_tmp[1100640] "expr temp" "maybe param" "maybe type" "temp"
    (1100643 'move' call_tmp[1100640](1100587 call numBytes _mt[203] _arg1[1100563]))
    unknown call_tmp[1100645] "expr temp" "maybe param" "maybe type" "temp"
    (1100648 'move' call_tmp[1100645](1100591 call numBytes _mt[203] _arg2[1100564]))
    unknown call_tmp[1100650] "expr temp" "maybe param" "maybe type" "temp"
    (1100653 'move' call_tmp[1100650](1100595 'call resolves' c">=" call_tmp[1100640] call_tmp[1100645]))
    unknown call_tmp[1100655] "expr temp" "maybe param" "maybe type" "temp"
    (1100658 'move' call_tmp[1100655](1100597 '&' call_tmp[1100620] call_tmp[1100635] call_tmp[1100650]))
    (1100608 'move' ret[1100603](1100607 'deref' call_tmp[1100655]))
    (1100605 return ret[1100603])
  }
  function regexMatch[154054].>=[1100545](arg _mt[1100547]:_MT[201], arg this[1100549]:regexMatch[154054], arg _arg1[1100551]:regexMatch[154054], arg _arg2[1100552]:regexMatch[154054]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1100762]:bool[19] "RVV" "temp"
    unknown call_tmp[1100799] "expr temp" "maybe param" "maybe type" "temp"
    (1100802 'move' call_tmp[1100799](1100666 call matched _mt[203] _arg1[1100551]))
    unknown call_tmp[1100804] "expr temp" "maybe param" "maybe type" "temp"
    (1100807 'move' call_tmp[1100804](1100670 call matched _mt[203] _arg2[1100552]))
    unknown call_tmp[1100809] "expr temp" "maybe param" "maybe type" "temp"
    (1100812 'move' call_tmp[1100809](1100674 call chpl_field_gt call_tmp[1100799] call_tmp[1100804]))
    if call_tmp[1100809]
    {
      (1100767 'move' ret[1100762](1100766 'deref' 1))
      gotoReturn _end_>=[1100760] _end_>=[1100760]
    }
    unknown call_tmp[1100814] "expr temp" "maybe param" "maybe type" "temp"
    (1100817 'move' call_tmp[1100814](1100680 call matched _mt[203] _arg1[1100551]))
    unknown call_tmp[1100819] "expr temp" "maybe param" "maybe type" "temp"
    (1100822 'move' call_tmp[1100819](1100684 call matched _mt[203] _arg2[1100552]))
    unknown call_tmp[1100824] "expr temp" "maybe param" "maybe type" "temp"
    (1100827 'move' call_tmp[1100824](1100688 call chpl_field_lt call_tmp[1100814] call_tmp[1100819]))
    if call_tmp[1100824]
    {
      (1100772 'move' ret[1100762](1100771 'deref' 0))
      gotoReturn _end_>=[1100760] _end_>=[1100760]
    }
    unknown call_tmp[1100829] "expr temp" "maybe param" "maybe type" "temp"
    (1100832 'move' call_tmp[1100829](1100694 call byteOffset _mt[203] _arg1[1100551]))
    unknown call_tmp[1100834] "expr temp" "maybe param" "maybe type" "temp"
    (1100837 'move' call_tmp[1100834](1100698 call byteOffset _mt[203] _arg2[1100552]))
    unknown call_tmp[1100839] "expr temp" "maybe param" "maybe type" "temp"
    (1100842 'move' call_tmp[1100839](1100702 call chpl_field_gt call_tmp[1100829] call_tmp[1100834]))
    if call_tmp[1100839]
    {
      (1100777 'move' ret[1100762](1100776 'deref' 1))
      gotoReturn _end_>=[1100760] _end_>=[1100760]
    }
    unknown call_tmp[1100844] "expr temp" "maybe param" "maybe type" "temp"
    (1100847 'move' call_tmp[1100844](1100708 call byteOffset _mt[203] _arg1[1100551]))
    unknown call_tmp[1100849] "expr temp" "maybe param" "maybe type" "temp"
    (1100852 'move' call_tmp[1100849](1100712 call byteOffset _mt[203] _arg2[1100552]))
    unknown call_tmp[1100854] "expr temp" "maybe param" "maybe type" "temp"
    (1100857 'move' call_tmp[1100854](1100716 call chpl_field_lt call_tmp[1100844] call_tmp[1100849]))
    if call_tmp[1100854]
    {
      (1100782 'move' ret[1100762](1100781 'deref' 0))
      gotoReturn _end_>=[1100760] _end_>=[1100760]
    }
    unknown call_tmp[1100859] "expr temp" "maybe param" "maybe type" "temp"
    (1100862 'move' call_tmp[1100859](1100722 call numBytes _mt[203] _arg1[1100551]))
    unknown call_tmp[1100864] "expr temp" "maybe param" "maybe type" "temp"
    (1100867 'move' call_tmp[1100864](1100726 call numBytes _mt[203] _arg2[1100552]))
    unknown call_tmp[1100869] "expr temp" "maybe param" "maybe type" "temp"
    (1100872 'move' call_tmp[1100869](1100730 call chpl_field_gt call_tmp[1100859] call_tmp[1100864]))
    if call_tmp[1100869]
    {
      (1100787 'move' ret[1100762](1100786 'deref' 1))
      gotoReturn _end_>=[1100760] _end_>=[1100760]
    }
    unknown call_tmp[1100874] "expr temp" "maybe param" "maybe type" "temp"
    (1100877 'move' call_tmp[1100874](1100736 call numBytes _mt[203] _arg1[1100551]))
    unknown call_tmp[1100879] "expr temp" "maybe param" "maybe type" "temp"
    (1100882 'move' call_tmp[1100879](1100740 call numBytes _mt[203] _arg2[1100552]))
    unknown call_tmp[1100884] "expr temp" "maybe param" "maybe type" "temp"
    (1100887 'move' call_tmp[1100884](1100744 call chpl_field_lt call_tmp[1100874] call_tmp[1100879]))
    if call_tmp[1100884]
    {
      (1100792 'move' ret[1100762](1100791 'deref' 0))
      gotoReturn _end_>=[1100760] _end_>=[1100760]
    }
    (1100797 'move' ret[1100762](1100796 'deref' 1))
    label _end_>=[1100760]
    (1100764 return ret[1100762])
  }
  where {
    unknown call_tmp[1100889] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1100892 'move' call_tmp[1100889](1100555 'typeof' _arg1[1100551]))
    unknown call_tmp[1100894] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1100897 'move' call_tmp[1100894](1100557 'typeof' _arg2[1100552]))
    unknown call_tmp[1100899] "expr temp" "maybe param" "maybe type" "temp"
    (1100902 'move' call_tmp[1100899](1100559 call == call_tmp[1100889] call_tmp[1100894]))
    unknown call_tmp[1100904] "expr temp" "maybe param" "maybe type" "temp"
    (1100907 'move' call_tmp[1100904](1100660 call chpl_fields_are_comparable[1100561] _arg1[1100551] _arg2[1100552]))
    (1100664 '&' call_tmp[1100899] call_tmp[1100904])
  }
  type regexMatch[154054] val matched[154039]:bool[19] bool[19] val byteOffset[154044]:byteIndex[18611] byteIndex[18611] val numBytes[154049]:int(64)[10] int(64)[10]
  function reMatch[154056]() type : _unknown[42] "no parens" "do not resolve unless called"
  {
    unknown ret[611675] "RVV" "temp" "type variable"
    (154060 call compilerWarning "Regex: 'reMatch' is deprecated; please use 'regexMatch' instead")
    (555345 'end of statement')
    (611680 'move' ret[611675](611679 'deref' regexMatch[154054]))
    (611677 return ret[611675])
  }
  function _to_regexMatch[154068](ref arg p[154071]:qio_regex_string_piece_t[153880]) : _unknown[42]
  {
    unknown ret[611684] "RVV" "temp"
    unknown call_tmp[823041] "expr temp" "maybe param" "maybe type" "temp"
    (823044 'move' call_tmp[823041](154111 call qio_regex_string_piece_isnull p[154071]))
    unknown call_tmp[823046] "expr temp" "maybe param" "maybe type" "temp"
    (823049 'move' call_tmp[823046](154113 call _cond_test call_tmp[823041]))
    if call_tmp[823046]
    {
      unknown call_tmp[823051] "expr temp" "maybe param" "maybe type" "temp"
      (823054 'move' call_tmp[823051](154084 call - 1))
      unknown call_tmp[823056] "expr temp" "maybe param" "maybe type" "temp"
      (823059 'move' call_tmp[823056](154082 call : call_tmp[823051] byteIndex[18611]))
      unknown call_tmp[823061] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (823064 'move' call_tmp[823061](1000160 'new' regexMatch[154054] 0 call_tmp[823056] 0))
      (611690 'move' ret[611684](611689 'coerce' call_tmp[823061] regexMatch[154054]))
      gotoReturn _end__to_regexMatch[611682] _end__to_regexMatch[611682]
    }
    {
      unknown call_tmp[823068] "expr temp" "maybe param" "maybe type" "temp"
      (823071 'move' call_tmp[823068](154100 call offset _mt[203] p[154071]))
      unknown call_tmp[823073] "expr temp" "maybe param" "maybe type" "temp"
      (823076 'move' call_tmp[823073](154095 call : call_tmp[823068] byteIndex[18611]))
      unknown call_tmp[823080] "expr temp" "maybe param" "maybe type" "temp"
      (823083 'move' call_tmp[823080](154107 call len _mt[203] p[154071]))
      unknown call_tmp[823085] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (823088 'move' call_tmp[823085](1000161 'new' regexMatch[154054] 1 call_tmp[823073] call_tmp[823080]))
      (611696 'move' ret[611684](611695 'coerce' call_tmp[823085] regexMatch[154054]))
      gotoReturn _end__to_regexMatch[611682] _end__to_regexMatch[611682]
    }
    label _end__to_regexMatch[611682]
    (611686 return ret[611684])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regexMatch[154054].![154120](arg _mt[154130]:_MT[201], arg this[154123]:regexMatch[154054] :
  regexMatch[154054], arg m[154127]:regexMatch[154054]) : _unknown[42] "inline" "method" "operator"
  {
    unknown ret[611702] "RVV" "temp"
    unknown call_tmp[823092] "expr temp" "maybe param" "maybe type" "temp"
    (823095 'move' call_tmp[823092](154139 call matched _mt[203] m[154127]))
    unknown call_tmp[823097] "expr temp" "maybe param" "maybe type" "temp"
    (823100 'move' call_tmp[823097](154134 call ! call_tmp[823092]))
    (611707 'move' ret[611702](611706 'deref' call_tmp[823097]))
    (611704 return ret[611702])
  }
  function regexMatch[154054].chpl_cond_test_method[154144](arg _mt[154150]:_MT[201], arg this[154147]:regexMatch[154054] :
  regexMatch[154054]) : _unknown[42] "inline" "method"
  {
    unknown ret[611711] "RVV" "temp"
    unknown call_tmp[823104] "expr temp" "maybe param" "maybe type" "temp"
    (823107 'move' call_tmp[823104](154155 call matched _mt[203] this[154147]))
    (611716 'move' ret[611711](611715 'deref' call_tmp[823104]))
    (611713 return ret[611711])
  }
  function string[244].this[154160](arg _mt[154170]:_MT[201], arg this[154163]:string[244] :
  string[244], arg m[154167]:regexMatch[154054]) : _unknown[42] "method"
  {
    unknown ret[611720] "RVV" "temp"
    unknown call_tmp[823111] "expr temp" "maybe param" "maybe type" "temp"
    (823114 'move' call_tmp[823111](154196 call matched _mt[203] m[154167]))
    unknown call_tmp[823116] "expr temp" "maybe param" "maybe type" "temp"
    (823119 'move' call_tmp[823116](154199 call _cond_test call_tmp[823111]))
    if call_tmp[823116]
    {
      unknown call_tmp[823123] "expr temp" "maybe param" "maybe type" "temp"
      (823126 'move' call_tmp[823123](154181 call byteOffset _mt[203] m[154167]))
      unknown call_tmp[823128] "expr temp" "maybe param" "maybe type" "temp"
      (823131 'move' call_tmp[823128](154184 call chpl_build_low_bounded_range call_tmp[823123]))
      unknown call_tmp[823135] "expr temp" "maybe param" "maybe type" "temp"
      (823138 'move' call_tmp[823135](154187 call numBytes _mt[203] m[154167]))
      unknown call_tmp[823140] "expr temp" "maybe param" "maybe type" "temp"
      (823143 'move' call_tmp[823140](154176 call # call_tmp[823128] call_tmp[823135]))
      unknown call_tmp[823145] "expr temp" "maybe param" "maybe type" "temp"
      (823148 'move' call_tmp[823145](154175 call this[154163] call_tmp[823140]))
      (611725 'move' ret[611720](611724 'deref' call_tmp[823145]))
      gotoReturn _end_this[611718] _end_this[611718]
    }
    {
      (611730 'move' ret[611720](611729 'deref' ""))
      gotoReturn _end_this[611718] _end_this[611718]
    }
    label _end_this[611718]
    (611722 return ret[611720])
  }
  function bytes[232].this[154207](arg _mt[154217]:_MT[201], arg this[154210]:bytes[232] :
  bytes[232], arg m[154214]:regexMatch[154054]) : _unknown[42] "method"
  {
    unknown ret[611736] "RVV" "temp"
    unknown call_tmp[823152] "expr temp" "maybe param" "maybe type" "temp"
    (823155 'move' call_tmp[823152](154243 call matched _mt[203] m[154214]))
    unknown call_tmp[823157] "expr temp" "maybe param" "maybe type" "temp"
    (823160 'move' call_tmp[823157](154246 call _cond_test call_tmp[823152]))
    if call_tmp[823157]
    {
      unknown call_tmp[823164] "expr temp" "maybe param" "maybe type" "temp"
      (823167 'move' call_tmp[823164](154228 call byteOffset _mt[203] m[154214]))
      unknown call_tmp[823169] "expr temp" "maybe param" "maybe type" "temp"
      (823172 'move' call_tmp[823169](154225 call : call_tmp[823164] int(64)[10]))
      unknown call_tmp[823174] "expr temp" "maybe param" "maybe type" "temp"
      (823177 'move' call_tmp[823174](154232 call chpl_build_low_bounded_range call_tmp[823169]))
      unknown call_tmp[823181] "expr temp" "maybe param" "maybe type" "temp"
      (823184 'move' call_tmp[823181](154235 call numBytes _mt[203] m[154214]))
      unknown call_tmp[823186] "expr temp" "maybe param" "maybe type" "temp"
      (823189 'move' call_tmp[823186](154223 call # call_tmp[823174] call_tmp[823181]))
      unknown call_tmp[823191] "expr temp" "maybe param" "maybe type" "temp"
      (823194 'move' call_tmp[823191](154222 call this[154210] call_tmp[823186]))
      (611741 'move' ret[611736](611740 'deref' call_tmp[823191]))
      gotoReturn _end_this[611734] _end_this[611734]
    }
    {
      (611746 'move' ret[611736](611745 'deref' b""))
      gotoReturn _end_this[611734] _end_this[611734]
    }
    label _end_this[611734]
    (611738 return ret[611736])
  }
  function serializedType[154254](arg exprType[154256]:_any[141](?)) type : _unknown[42] "private"
  {
    unknown ret[611752] "RVV" "temp" "type variable"
    unknown expr[154260] "dead at end of block" "insert auto destroy"
    (646490 'default init var' expr[154260] exprType[154256])
    (154263 'end of statement')
    { scopeless type
      unknown call_type_tmp[577821] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[823198] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (823201 'move' call_tmp[823198](154269 call(154266 call (partial) chpl__serialize _mt[203] expr[154260])))
      (577825 'move' call_type_tmp[577821](154270 'typeof' call_tmp[823198]))
    }
    (611757 'move' ret[611752](611756 'deref' call_type_tmp[577821]))
    gotoReturn _end_serializedType[611750] _end_serializedType[611750]
    (555355 'end of statement' expr[154260])
    label _end_serializedType[611750]
    (611754 return ret[611752])
  }
  function chpl_serializeHelper[154290](?).exprType[1100909](arg _mt[1100911]:_MT[201], arg this[1100913]:chpl_serializeHelper[154290](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1100932] "RVV" "temp" "type variable"
    unknown call_tmp[1100946] "expr temp" "maybe param" "maybe type" "temp"
    (1100949 'move' call_tmp[1100946](1100918 'is bound' this[1100913] c"exprType"))
    if call_tmp[1100946]
    {
      unknown call_tmp[1100951] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1100954 'move' call_tmp[1100951](1100917 '.v' this[1100913] c"exprType"))
      (1100937 'move' ret[1100932](1100936 'deref' call_tmp[1100951]))
      gotoReturn _end_exprType[1100930] _end_exprType[1100930]
    }
    {
      (1100942 'move' ret[1100932](1100941 'deref' _uninstantiated[225]))
      gotoReturn _end_exprType[1100930] _end_exprType[1100930]
    }
    label _end_exprType[1100930]
    (1100934 return ret[1100932])
  }
  function chpl_serializeHelper[154290](?).exprType[1100956](arg _mt[1100958]:_MT[201], arg this[1100960]:chpl_serializeHelper[154290](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1100979] "RVV" "temp" "type variable"
    unknown call_tmp[1100993] "expr temp" "maybe param" "maybe type" "temp"
    (1100996 'move' call_tmp[1100993](1100965 'is bound' this[1100960] c"exprType"))
    if call_tmp[1100993]
    {
      unknown call_tmp[1100998] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1101001 'move' call_tmp[1100998](1100964 '.v' this[1100960] c"exprType"))
      (1100984 'move' ret[1100979](1100983 'deref' call_tmp[1100998]))
      gotoReturn _end_exprType[1100977] _end_exprType[1100977]
    }
    {
      (1100989 'move' ret[1100979](1100988 'deref' _uninstantiated[225]))
      gotoReturn _end_exprType[1100977] _end_exprType[1100977]
    }
    label _end_exprType[1100977]
    (1100981 return ret[1100979])
  }
  function chpl_serializeHelper[154290](?).pattern[1101003](arg _mt[1101005]:_MT[201], ref arg this[1101007]:chpl_serializeHelper[154290](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1101017] "RVV" "temp"
    unknown call_tmp[1101024] "expr temp" "maybe param" "maybe type" "temp"
    (1101027 'move' call_tmp[1101024](1101011 '.' this[1101007] c"pattern"))
    (1101022 'move' ret[1101017](1101021 'addr of' call_tmp[1101024]))
    (1101019 return ret[1101017])
  }
  function chpl_serializeHelper[154290](?).options[1101029](arg _mt[1101031]:_MT[201], ref arg this[1101033]:chpl_serializeHelper[154290](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1101043] "RVV" "temp"
    unknown call_tmp[1101050] "expr temp" "maybe param" "maybe type" "temp"
    (1101053 'move' call_tmp[1101050](1101037 '.' this[1101033] c"options"))
    (1101048 'move' ret[1101043](1101047 'addr of' call_tmp[1101050]))
    (1101045 return ret[1101043])
  }
  function chpl_serializeHelper[154290](?).init[1101055](arg _mt[1101057]:_MT[201], ref arg this[1101058]:chpl_serializeHelper[154290](?), arg exprType[1101061]:_any[141](?), in arg pattern[1101070] :
  (1101073 call serializedType exprType[1101061]) =
  _typeDefaultT[217], in arg options[1101085]:qio_regex_options_t[153655] =
  _typeDefaultT[217]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1101097 'init field' this[1101058] c"exprType" exprType[1101061])
    (1101100 'init field' this[1101058] c"pattern" pattern[1101070])
    (1101106 'end of statement')
    (1101103 'init field' this[1101058] c"options" options[1101085])
    (1101108 return _void[46])
  }
  function chpl_serializeHelper[154290](?).init[1101110](arg _mt[1101112]:_MT[201], ref arg this[1101113]:chpl_serializeHelper[154290](?), arg exprType[1101134]:_any[141](?), arg reader[1101114]:_any[141](?), ref arg deserializer[1101115]:_any[141](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1101231] "expr temp" "maybe param" "maybe type" "temp"
    (1101234 'move' call_tmp[1101231](1101125 'simple type name' this[1101113]))
    unknown call_tmp[1101236] "maybe param" "maybe type" "temp"
    (1101239 'move' call_tmp[1101236](1101127 call startRecord _mt[203] deserializer[1101115] reader[1101114] call_tmp[1101231]))
    unknown _chpl_des_helper[1101132] "dead at end of block" "insert auto destroy"
    (1101229 'init var' _chpl_des_helper[1101132] call_tmp[1101236])
    (1101219 'end of statement')
    unknown exprType[1101188] "temp" "type variable"
    (1101190 'move' exprType[1101188] exprType[1101134])
    (1101192 'init field' this[1101113] c"exprType" exprType[1101188])
    (1101220 'end of statement')
    unknown call_tmp[1101241] "expr temp" "maybe param" "maybe type" "temp"
    (1101244 'move' call_tmp[1101241](1101153 'field num to name' this[1101113] 2))
    unknown call_tmp[1101246] "expr temp" "maybe param" "maybe type" "temp"
    (1101249 'move' call_tmp[1101246](1101151 call serializedType exprType[1101134]))
    unknown call_tmp[1101251] "maybe param" "maybe type" "temp"
    (1101254 'move' call_tmp[1101251](1101156 call readField _mt[203] _chpl_des_helper[1101132] call_tmp[1101241] call_tmp[1101246]))
    unknown call_tmp[1101256] "expr temp" "maybe param" "maybe type" "temp"
    (1101259 'move' call_tmp[1101256](1101207 '.v' this[1101113] c"exprType"))
    unknown call_tmp[1101261] "maybe param" "maybe type" "temp"
    (1101264 'move' call_tmp[1101261](1101199 call serializedType call_tmp[1101256]))
    unknown pattern[1101196] "temp"
    (1101201 'init var' pattern[1101196] call_tmp[1101251] call_tmp[1101261])
    (1101203 'init field' this[1101113] c"pattern" pattern[1101196])
    (1101221 'end of statement' _chpl_des_helper[1101132])
    unknown call_tmp[1101266] "expr temp" "maybe param" "maybe type" "temp"
    (1101269 'move' call_tmp[1101266](1101170 'field num to name' this[1101113] 3))
    unknown call_tmp[1101271] "maybe param" "maybe type" "temp"
    (1101274 'move' call_tmp[1101271](1101173 call readField _mt[203] _chpl_des_helper[1101132] call_tmp[1101266] qio_regex_options_t[153655]))
    unknown options[1101210] "temp"
    (1101213 'init var' options[1101210] call_tmp[1101271] qio_regex_options_t[153655])
    (1101215 'init field' this[1101113] c"options" options[1101210])
    (1101223 'end of statement' _chpl_des_helper[1101132])
    (1101183 call endRecord _mt[203] _chpl_des_helper[1101132])
    (1101225 'end of statement' _chpl_des_helper[1101132])
    (1101227 return _void[46])
  }
  where {
    unknown call_tmp[1101276] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1101279 'move' call_tmp[1101276](1101116 'typeof' reader[1101114]))
    (1101118 call chpl__isFileReader call_tmp[1101276])
  }
  function chpl_serializeHelper[154290](?).init=[1101283](arg _mt[1101286]:_MT[201], ref arg this[1101287]:chpl_serializeHelper[154290](?), arg other[1101290] :
  (1101289 'typeof' this[1101287])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown exprType[1101325] "temp" "type variable"
    (1101327 'move' exprType[1101325](1101299 call exprType _mt[203] other[1101290]))
    (1101329 'init field' this[1101287] c"exprType" exprType[1101325])
    (1101356 'end of statement')
    unknown call_tmp[1101365] "maybe param" "maybe type" "temp"
    (1101368 'move' call_tmp[1101365](1101309 call pattern _mt[203] other[1101290]))
    unknown call_tmp[1101370] "expr temp" "maybe param" "maybe type" "temp"
    (1101373 'move' call_tmp[1101370](1101344 '.v' this[1101287] c"exprType"))
    unknown call_tmp[1101375] "maybe param" "maybe type" "temp"
    (1101378 'move' call_tmp[1101375](1101336 call serializedType call_tmp[1101370]))
    unknown pattern[1101333] "temp"
    (1101338 'init var' pattern[1101333] call_tmp[1101365] call_tmp[1101375])
    (1101340 'init field' this[1101287] c"pattern" pattern[1101333])
    (1101357 'end of statement')
    unknown call_tmp[1101382] "maybe param" "maybe type" "temp"
    (1101385 'move' call_tmp[1101382](1101319 call options _mt[203] other[1101290]))
    unknown options[1101347] "temp"
    (1101350 'init var' options[1101347] call_tmp[1101382] qio_regex_options_t[153655])
    (1101352 'init field' this[1101287] c"options" options[1101347])
    (1101358 'end of statement')
    (1101359 return _void[46])
  }
  function chpl_serializeHelper[154290](?).deinit[1101387](arg _mt[1101389]:_MT[201], arg this[1101391]:chpl_serializeHelper[154290](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1101399 return _void[46])
  }
  function chpl_serializeHelper[154290](?).serialize[1101401](arg _mt[1101405]:_MT[201], arg this[1101403]:chpl_serializeHelper[154290](?), arg writer[1101404]:_any[141](?), ref arg serializer[1101409]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1101412 call serializeDefaultImpl writer[1101404] serializer[1101409] this[1101403])
    (1101418 return _void[46])
  }
  function chpl_serializeHelper[154290](?).deserialize[1101420](arg _mt[1101424]:_MT[201], ref arg this[1101422]:chpl_serializeHelper[154290](?), arg reader[1101423]:_any[141](?), ref arg deserializer[1101429]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1101431] "temp"
    (1101433 'move' _deser_temp[1101431] this[1101422])
    (1101436 call deserializeDefaultImpl reader[1101423] deserializer[1101429] _deser_temp[1101431])
    (1101442 return _void[46])
  }
  function chpl_serializeHelper[154290](?).=[1101444](arg _mt[1101446]:_MT[201], arg this[1101448]:chpl_serializeHelper[154290](?), ref arg _arg1[1101450]:chpl_serializeHelper[154290](?), const?  ref arg _arg2[1101451]:chpl_serializeHelper[154290](?)) : void[4] "assignop" "compiler generated" "last resort" "method" "operator"
  {
    unknown call_tmp[1101488] "expr temp" "maybe param" "maybe type" "temp"
    (1101491 'move' call_tmp[1101488](1101461 call pattern _mt[203] _arg1[1101450]))
    unknown call_tmp[1101495] "expr temp" "maybe param" "maybe type" "temp"
    (1101498 'move' call_tmp[1101495](1101465 call pattern _mt[203] _arg2[1101451]))
    (1101469 call = call_tmp[1101488] call_tmp[1101495])
    (1101482 'end of statement')
    unknown call_tmp[1101502] "expr temp" "maybe param" "maybe type" "temp"
    (1101505 'move' call_tmp[1101502](1101471 call options _mt[203] _arg1[1101450]))
    unknown call_tmp[1101509] "expr temp" "maybe param" "maybe type" "temp"
    (1101512 'move' call_tmp[1101509](1101475 call options _mt[203] _arg2[1101451]))
    (1101479 call = call_tmp[1101502] call_tmp[1101509])
    (1101484 return _void[46])
  }
  where {
    unknown call_tmp[1101514] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1101517 'move' call_tmp[1101514](1101454 'typeof' _arg1[1101450]))
    unknown call_tmp[1101519] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1101522 'move' call_tmp[1101519](1101456 'typeof' _arg2[1101451]))
    (1101458 call == call_tmp[1101514] call_tmp[1101519])
  }
  function chpl_serializeHelper[154290](?).hash[1101524](arg _mt[1101527]:_MT[201], arg this[1101526]:chpl_serializeHelper[154290](?)) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1101551] "RVV" "temp"
    unknown call_tmp[1101558] "expr temp" "maybe param" "maybe type" "temp"
    (1101561 'move' call_tmp[1101558](1101536 call options _mt[203] this[1101526]))
    unknown call_tmp[1101563] "expr temp" "maybe param" "maybe type" "temp"
    (1101566 'move' call_tmp[1101563](1101540 call hash _mt[203] call_tmp[1101558]))
    unknown call_tmp[1101568] "expr temp" "maybe param" "maybe type" "temp"
    (1101571 'move' call_tmp[1101568](1101530 call pattern _mt[203] this[1101526]))
    unknown call_tmp[1101573] "expr temp" "maybe param" "maybe type" "temp"
    (1101576 'move' call_tmp[1101573](1101534 call chpl__defaultHashWrapperInner call_tmp[1101568]))
    unknown call_tmp[1101578] "expr temp" "maybe param" "maybe type" "temp"
    (1101581 'move' call_tmp[1101578](1101543 call chpl__defaultHashCombine call_tmp[1101563] call_tmp[1101573] 3))
    (1101556 'move' ret[1101551](1101555 'deref' call_tmp[1101578]))
    (1101553 return ret[1101551])
  }
  function chpl_fields_are_comparable[1101599](arg _arg1[1101601]:chpl_serializeHelper[154290](?), arg _arg2[1101602]:chpl_serializeHelper[154290](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1101631]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1101638] "expr temp" "maybe param" "maybe type" "temp"
    (1101641 'move' call_tmp[1101638](1101605 call pattern _mt[203] _arg1[1101601]))
    unknown call_tmp[1101643] "expr temp" "maybe param" "maybe type" "temp"
    (1101646 'move' call_tmp[1101643](1101609 call pattern _mt[203] _arg2[1101602]))
    unknown call_tmp[1101648] "expr temp" "maybe param" "maybe type" "temp"
    (1101651 'move' call_tmp[1101648](1101613 'call resolves' c"==" call_tmp[1101638] call_tmp[1101643]))
    unknown call_tmp[1101653] "expr temp" "maybe param" "maybe type" "temp"
    (1101656 'move' call_tmp[1101653](1101615 call options _mt[203] _arg1[1101601]))
    unknown call_tmp[1101658] "expr temp" "maybe param" "maybe type" "temp"
    (1101661 'move' call_tmp[1101658](1101619 call options _mt[203] _arg2[1101602]))
    unknown call_tmp[1101663] "expr temp" "maybe param" "maybe type" "temp"
    (1101666 'move' call_tmp[1101663](1101623 'call resolves' c"==" call_tmp[1101653] call_tmp[1101658]))
    unknown call_tmp[1101668] "expr temp" "maybe param" "maybe type" "temp"
    (1101671 'move' call_tmp[1101668](1101625 '&' call_tmp[1101648] call_tmp[1101663]))
    (1101636 'move' ret[1101631](1101635 'deref' call_tmp[1101668]))
    (1101633 return ret[1101631])
  }
  function chpl_serializeHelper[154290](?).==[1101583](arg _mt[1101585]:_MT[201], arg this[1101587]:chpl_serializeHelper[154290](?), arg _arg1[1101589]:chpl_serializeHelper[154290](?), arg _arg2[1101590]:chpl_serializeHelper[154290](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1101715]:bool[19] "RVV" "temp"
    unknown call_tmp[1101732] "expr temp" "maybe param" "maybe type" "temp"
    (1101735 'move' call_tmp[1101732](1101679 call pattern _mt[203] _arg1[1101589]))
    unknown call_tmp[1101737] "expr temp" "maybe param" "maybe type" "temp"
    (1101740 'move' call_tmp[1101737](1101683 call pattern _mt[203] _arg2[1101590]))
    unknown call_tmp[1101742] "expr temp" "maybe param" "maybe type" "temp"
    (1101745 'move' call_tmp[1101742](1101687 call chpl_field_neq call_tmp[1101732] call_tmp[1101737]))
    if call_tmp[1101742]
    {
      (1101720 'move' ret[1101715](1101719 'deref' 0))
      gotoReturn _end_==[1101713] _end_==[1101713]
    }
    unknown call_tmp[1101747] "expr temp" "maybe param" "maybe type" "temp"
    (1101750 'move' call_tmp[1101747](1101693 call options _mt[203] _arg1[1101589]))
    unknown call_tmp[1101752] "expr temp" "maybe param" "maybe type" "temp"
    (1101755 'move' call_tmp[1101752](1101697 call options _mt[203] _arg2[1101590]))
    unknown call_tmp[1101757] "expr temp" "maybe param" "maybe type" "temp"
    (1101760 'move' call_tmp[1101757](1101701 call chpl_field_neq call_tmp[1101747] call_tmp[1101752]))
    if call_tmp[1101757]
    {
      (1101725 'move' ret[1101715](1101724 'deref' 0))
      gotoReturn _end_==[1101713] _end_==[1101713]
    }
    (1101730 'move' ret[1101715](1101729 'deref' 1))
    label _end_==[1101713]
    (1101717 return ret[1101715])
  }
  where {
    unknown call_tmp[1101762] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1101765 'move' call_tmp[1101762](1101593 'typeof' _arg1[1101589]))
    unknown call_tmp[1101767] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1101770 'move' call_tmp[1101767](1101595 'typeof' _arg2[1101590]))
    unknown call_tmp[1101772] "expr temp" "maybe param" "maybe type" "temp"
    (1101775 'move' call_tmp[1101772](1101597 call == call_tmp[1101762] call_tmp[1101767]))
    unknown call_tmp[1101777] "expr temp" "maybe param" "maybe type" "temp"
    (1101780 'move' call_tmp[1101777](1101673 call chpl_fields_are_comparable[1101599] _arg1[1101589] _arg2[1101590]))
    (1101677 '&' call_tmp[1101772] call_tmp[1101777])
  }
  function chpl_fields_are_comparable[1101798](arg _arg1[1101800]:chpl_serializeHelper[154290](?), arg _arg2[1101801]:chpl_serializeHelper[154290](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1101830]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1101837] "expr temp" "maybe param" "maybe type" "temp"
    (1101840 'move' call_tmp[1101837](1101804 call pattern _mt[203] _arg1[1101800]))
    unknown call_tmp[1101842] "expr temp" "maybe param" "maybe type" "temp"
    (1101845 'move' call_tmp[1101842](1101808 call pattern _mt[203] _arg2[1101801]))
    unknown call_tmp[1101847] "expr temp" "maybe param" "maybe type" "temp"
    (1101850 'move' call_tmp[1101847](1101812 'call resolves' c"!=" call_tmp[1101837] call_tmp[1101842]))
    unknown call_tmp[1101852] "expr temp" "maybe param" "maybe type" "temp"
    (1101855 'move' call_tmp[1101852](1101814 call options _mt[203] _arg1[1101800]))
    unknown call_tmp[1101857] "expr temp" "maybe param" "maybe type" "temp"
    (1101860 'move' call_tmp[1101857](1101818 call options _mt[203] _arg2[1101801]))
    unknown call_tmp[1101862] "expr temp" "maybe param" "maybe type" "temp"
    (1101865 'move' call_tmp[1101862](1101822 'call resolves' c"!=" call_tmp[1101852] call_tmp[1101857]))
    unknown call_tmp[1101867] "expr temp" "maybe param" "maybe type" "temp"
    (1101870 'move' call_tmp[1101867](1101824 '&' call_tmp[1101847] call_tmp[1101862]))
    (1101835 'move' ret[1101830](1101834 'deref' call_tmp[1101867]))
    (1101832 return ret[1101830])
  }
  function chpl_serializeHelper[154290](?).!=[1101782](arg _mt[1101784]:_MT[201], arg this[1101786]:chpl_serializeHelper[154290](?), arg _arg1[1101788]:chpl_serializeHelper[154290](?), arg _arg2[1101789]:chpl_serializeHelper[154290](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1101914]:bool[19] "RVV" "temp"
    unknown call_tmp[1101931] "expr temp" "maybe param" "maybe type" "temp"
    (1101934 'move' call_tmp[1101931](1101878 call pattern _mt[203] _arg1[1101788]))
    unknown call_tmp[1101936] "expr temp" "maybe param" "maybe type" "temp"
    (1101939 'move' call_tmp[1101936](1101882 call pattern _mt[203] _arg2[1101789]))
    unknown call_tmp[1101941] "expr temp" "maybe param" "maybe type" "temp"
    (1101944 'move' call_tmp[1101941](1101886 call chpl_field_neq call_tmp[1101931] call_tmp[1101936]))
    if call_tmp[1101941]
    {
      (1101919 'move' ret[1101914](1101918 'deref' 1))
      gotoReturn _end_!=[1101912] _end_!=[1101912]
    }
    unknown call_tmp[1101946] "expr temp" "maybe param" "maybe type" "temp"
    (1101949 'move' call_tmp[1101946](1101892 call options _mt[203] _arg1[1101788]))
    unknown call_tmp[1101951] "expr temp" "maybe param" "maybe type" "temp"
    (1101954 'move' call_tmp[1101951](1101896 call options _mt[203] _arg2[1101789]))
    unknown call_tmp[1101956] "expr temp" "maybe param" "maybe type" "temp"
    (1101959 'move' call_tmp[1101956](1101900 call chpl_field_neq call_tmp[1101946] call_tmp[1101951]))
    if call_tmp[1101956]
    {
      (1101924 'move' ret[1101914](1101923 'deref' 1))
      gotoReturn _end_!=[1101912] _end_!=[1101912]
    }
    (1101929 'move' ret[1101914](1101928 'deref' 0))
    label _end_!=[1101912]
    (1101916 return ret[1101914])
  }
  where {
    unknown call_tmp[1101961] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1101964 'move' call_tmp[1101961](1101792 'typeof' _arg1[1101788]))
    unknown call_tmp[1101966] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1101969 'move' call_tmp[1101966](1101794 'typeof' _arg2[1101789]))
    unknown call_tmp[1101971] "expr temp" "maybe param" "maybe type" "temp"
    (1101974 'move' call_tmp[1101971](1101796 call == call_tmp[1101961] call_tmp[1101966]))
    unknown call_tmp[1101976] "expr temp" "maybe param" "maybe type" "temp"
    (1101979 'move' call_tmp[1101976](1101872 call chpl_fields_are_comparable[1101798] _arg1[1101788] _arg2[1101789]))
    (1101876 '&' call_tmp[1101971] call_tmp[1101976])
  }
  function chpl_fields_are_comparable[1101997](arg _arg1[1101999]:chpl_serializeHelper[154290](?), arg _arg2[1102000]:chpl_serializeHelper[154290](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1102029]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1102036] "expr temp" "maybe param" "maybe type" "temp"
    (1102039 'move' call_tmp[1102036](1102003 call pattern _mt[203] _arg1[1101999]))
    unknown call_tmp[1102041] "expr temp" "maybe param" "maybe type" "temp"
    (1102044 'move' call_tmp[1102041](1102007 call pattern _mt[203] _arg2[1102000]))
    unknown call_tmp[1102046] "expr temp" "maybe param" "maybe type" "temp"
    (1102049 'move' call_tmp[1102046](1102011 'call resolves' c"<" call_tmp[1102036] call_tmp[1102041]))
    unknown call_tmp[1102051] "expr temp" "maybe param" "maybe type" "temp"
    (1102054 'move' call_tmp[1102051](1102013 call options _mt[203] _arg1[1101999]))
    unknown call_tmp[1102056] "expr temp" "maybe param" "maybe type" "temp"
    (1102059 'move' call_tmp[1102056](1102017 call options _mt[203] _arg2[1102000]))
    unknown call_tmp[1102061] "expr temp" "maybe param" "maybe type" "temp"
    (1102064 'move' call_tmp[1102061](1102021 'call resolves' c"<" call_tmp[1102051] call_tmp[1102056]))
    unknown call_tmp[1102066] "expr temp" "maybe param" "maybe type" "temp"
    (1102069 'move' call_tmp[1102066](1102023 '&' call_tmp[1102046] call_tmp[1102061]))
    (1102034 'move' ret[1102029](1102033 'deref' call_tmp[1102066]))
    (1102031 return ret[1102029])
  }
  function chpl_serializeHelper[154290](?).<[1101981](arg _mt[1101983]:_MT[201], arg this[1101985]:chpl_serializeHelper[154290](?), arg _arg1[1101987]:chpl_serializeHelper[154290](?), arg _arg2[1101988]:chpl_serializeHelper[154290](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1102143]:bool[19] "RVV" "temp"
    unknown call_tmp[1102170] "expr temp" "maybe param" "maybe type" "temp"
    (1102173 'move' call_tmp[1102170](1102077 call pattern _mt[203] _arg1[1101987]))
    unknown call_tmp[1102175] "expr temp" "maybe param" "maybe type" "temp"
    (1102178 'move' call_tmp[1102175](1102081 call pattern _mt[203] _arg2[1101988]))
    unknown call_tmp[1102180] "expr temp" "maybe param" "maybe type" "temp"
    (1102183 'move' call_tmp[1102180](1102085 call chpl_field_lt call_tmp[1102170] call_tmp[1102175]))
    if call_tmp[1102180]
    {
      (1102148 'move' ret[1102143](1102147 'deref' 1))
      gotoReturn _end_<[1102141] _end_<[1102141]
    }
    unknown call_tmp[1102185] "expr temp" "maybe param" "maybe type" "temp"
    (1102188 'move' call_tmp[1102185](1102091 call pattern _mt[203] _arg1[1101987]))
    unknown call_tmp[1102190] "expr temp" "maybe param" "maybe type" "temp"
    (1102193 'move' call_tmp[1102190](1102095 call pattern _mt[203] _arg2[1101988]))
    unknown call_tmp[1102195] "expr temp" "maybe param" "maybe type" "temp"
    (1102198 'move' call_tmp[1102195](1102099 call chpl_field_gt call_tmp[1102185] call_tmp[1102190]))
    if call_tmp[1102195]
    {
      (1102153 'move' ret[1102143](1102152 'deref' 0))
      gotoReturn _end_<[1102141] _end_<[1102141]
    }
    unknown call_tmp[1102200] "expr temp" "maybe param" "maybe type" "temp"
    (1102203 'move' call_tmp[1102200](1102105 call options _mt[203] _arg1[1101987]))
    unknown call_tmp[1102205] "expr temp" "maybe param" "maybe type" "temp"
    (1102208 'move' call_tmp[1102205](1102109 call options _mt[203] _arg2[1101988]))
    unknown call_tmp[1102210] "expr temp" "maybe param" "maybe type" "temp"
    (1102213 'move' call_tmp[1102210](1102113 call chpl_field_lt call_tmp[1102200] call_tmp[1102205]))
    if call_tmp[1102210]
    {
      (1102158 'move' ret[1102143](1102157 'deref' 1))
      gotoReturn _end_<[1102141] _end_<[1102141]
    }
    unknown call_tmp[1102215] "expr temp" "maybe param" "maybe type" "temp"
    (1102218 'move' call_tmp[1102215](1102119 call options _mt[203] _arg1[1101987]))
    unknown call_tmp[1102220] "expr temp" "maybe param" "maybe type" "temp"
    (1102223 'move' call_tmp[1102220](1102123 call options _mt[203] _arg2[1101988]))
    unknown call_tmp[1102225] "expr temp" "maybe param" "maybe type" "temp"
    (1102228 'move' call_tmp[1102225](1102127 call chpl_field_gt call_tmp[1102215] call_tmp[1102220]))
    if call_tmp[1102225]
    {
      (1102163 'move' ret[1102143](1102162 'deref' 0))
      gotoReturn _end_<[1102141] _end_<[1102141]
    }
    (1102168 'move' ret[1102143](1102167 'deref' 0))
    label _end_<[1102141]
    (1102145 return ret[1102143])
  }
  where {
    unknown call_tmp[1102230] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1102233 'move' call_tmp[1102230](1101991 'typeof' _arg1[1101987]))
    unknown call_tmp[1102235] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1102238 'move' call_tmp[1102235](1101993 'typeof' _arg2[1101988]))
    unknown call_tmp[1102240] "expr temp" "maybe param" "maybe type" "temp"
    (1102243 'move' call_tmp[1102240](1101995 call == call_tmp[1102230] call_tmp[1102235]))
    unknown call_tmp[1102245] "expr temp" "maybe param" "maybe type" "temp"
    (1102248 'move' call_tmp[1102245](1102071 call chpl_fields_are_comparable[1101997] _arg1[1101987] _arg2[1101988]))
    (1102075 '&' call_tmp[1102240] call_tmp[1102245])
  }
  function chpl_fields_are_comparable[1102266](arg _arg1[1102268]:chpl_serializeHelper[154290](?), arg _arg2[1102269]:chpl_serializeHelper[154290](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1102298]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1102305] "expr temp" "maybe param" "maybe type" "temp"
    (1102308 'move' call_tmp[1102305](1102272 call pattern _mt[203] _arg1[1102268]))
    unknown call_tmp[1102310] "expr temp" "maybe param" "maybe type" "temp"
    (1102313 'move' call_tmp[1102310](1102276 call pattern _mt[203] _arg2[1102269]))
    unknown call_tmp[1102315] "expr temp" "maybe param" "maybe type" "temp"
    (1102318 'move' call_tmp[1102315](1102280 'call resolves' c"<=" call_tmp[1102305] call_tmp[1102310]))
    unknown call_tmp[1102320] "expr temp" "maybe param" "maybe type" "temp"
    (1102323 'move' call_tmp[1102320](1102282 call options _mt[203] _arg1[1102268]))
    unknown call_tmp[1102325] "expr temp" "maybe param" "maybe type" "temp"
    (1102328 'move' call_tmp[1102325](1102286 call options _mt[203] _arg2[1102269]))
    unknown call_tmp[1102330] "expr temp" "maybe param" "maybe type" "temp"
    (1102333 'move' call_tmp[1102330](1102290 'call resolves' c"<=" call_tmp[1102320] call_tmp[1102325]))
    unknown call_tmp[1102335] "expr temp" "maybe param" "maybe type" "temp"
    (1102338 'move' call_tmp[1102335](1102292 '&' call_tmp[1102315] call_tmp[1102330]))
    (1102303 'move' ret[1102298](1102302 'deref' call_tmp[1102335]))
    (1102300 return ret[1102298])
  }
  function chpl_serializeHelper[154290](?).<=[1102250](arg _mt[1102252]:_MT[201], arg this[1102254]:chpl_serializeHelper[154290](?), arg _arg1[1102256]:chpl_serializeHelper[154290](?), arg _arg2[1102257]:chpl_serializeHelper[154290](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1102412]:bool[19] "RVV" "temp"
    unknown call_tmp[1102439] "expr temp" "maybe param" "maybe type" "temp"
    (1102442 'move' call_tmp[1102439](1102346 call pattern _mt[203] _arg1[1102256]))
    unknown call_tmp[1102444] "expr temp" "maybe param" "maybe type" "temp"
    (1102447 'move' call_tmp[1102444](1102350 call pattern _mt[203] _arg2[1102257]))
    unknown call_tmp[1102449] "expr temp" "maybe param" "maybe type" "temp"
    (1102452 'move' call_tmp[1102449](1102354 call chpl_field_lt call_tmp[1102439] call_tmp[1102444]))
    if call_tmp[1102449]
    {
      (1102417 'move' ret[1102412](1102416 'deref' 1))
      gotoReturn _end_<=[1102410] _end_<=[1102410]
    }
    unknown call_tmp[1102454] "expr temp" "maybe param" "maybe type" "temp"
    (1102457 'move' call_tmp[1102454](1102360 call pattern _mt[203] _arg1[1102256]))
    unknown call_tmp[1102459] "expr temp" "maybe param" "maybe type" "temp"
    (1102462 'move' call_tmp[1102459](1102364 call pattern _mt[203] _arg2[1102257]))
    unknown call_tmp[1102464] "expr temp" "maybe param" "maybe type" "temp"
    (1102467 'move' call_tmp[1102464](1102368 call chpl_field_gt call_tmp[1102454] call_tmp[1102459]))
    if call_tmp[1102464]
    {
      (1102422 'move' ret[1102412](1102421 'deref' 0))
      gotoReturn _end_<=[1102410] _end_<=[1102410]
    }
    unknown call_tmp[1102469] "expr temp" "maybe param" "maybe type" "temp"
    (1102472 'move' call_tmp[1102469](1102374 call options _mt[203] _arg1[1102256]))
    unknown call_tmp[1102474] "expr temp" "maybe param" "maybe type" "temp"
    (1102477 'move' call_tmp[1102474](1102378 call options _mt[203] _arg2[1102257]))
    unknown call_tmp[1102479] "expr temp" "maybe param" "maybe type" "temp"
    (1102482 'move' call_tmp[1102479](1102382 call chpl_field_lt call_tmp[1102469] call_tmp[1102474]))
    if call_tmp[1102479]
    {
      (1102427 'move' ret[1102412](1102426 'deref' 1))
      gotoReturn _end_<=[1102410] _end_<=[1102410]
    }
    unknown call_tmp[1102484] "expr temp" "maybe param" "maybe type" "temp"
    (1102487 'move' call_tmp[1102484](1102388 call options _mt[203] _arg1[1102256]))
    unknown call_tmp[1102489] "expr temp" "maybe param" "maybe type" "temp"
    (1102492 'move' call_tmp[1102489](1102392 call options _mt[203] _arg2[1102257]))
    unknown call_tmp[1102494] "expr temp" "maybe param" "maybe type" "temp"
    (1102497 'move' call_tmp[1102494](1102396 call chpl_field_gt call_tmp[1102484] call_tmp[1102489]))
    if call_tmp[1102494]
    {
      (1102432 'move' ret[1102412](1102431 'deref' 0))
      gotoReturn _end_<=[1102410] _end_<=[1102410]
    }
    (1102437 'move' ret[1102412](1102436 'deref' 1))
    label _end_<=[1102410]
    (1102414 return ret[1102412])
  }
  where {
    unknown call_tmp[1102499] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1102502 'move' call_tmp[1102499](1102260 'typeof' _arg1[1102256]))
    unknown call_tmp[1102504] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1102507 'move' call_tmp[1102504](1102262 'typeof' _arg2[1102257]))
    unknown call_tmp[1102509] "expr temp" "maybe param" "maybe type" "temp"
    (1102512 'move' call_tmp[1102509](1102264 call == call_tmp[1102499] call_tmp[1102504]))
    unknown call_tmp[1102514] "expr temp" "maybe param" "maybe type" "temp"
    (1102517 'move' call_tmp[1102514](1102340 call chpl_fields_are_comparable[1102266] _arg1[1102256] _arg2[1102257]))
    (1102344 '&' call_tmp[1102509] call_tmp[1102514])
  }
  function chpl_fields_are_comparable[1102535](arg _arg1[1102537]:chpl_serializeHelper[154290](?), arg _arg2[1102538]:chpl_serializeHelper[154290](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1102567]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1102574] "expr temp" "maybe param" "maybe type" "temp"
    (1102577 'move' call_tmp[1102574](1102541 call pattern _mt[203] _arg1[1102537]))
    unknown call_tmp[1102579] "expr temp" "maybe param" "maybe type" "temp"
    (1102582 'move' call_tmp[1102579](1102545 call pattern _mt[203] _arg2[1102538]))
    unknown call_tmp[1102584] "expr temp" "maybe param" "maybe type" "temp"
    (1102587 'move' call_tmp[1102584](1102549 'call resolves' c">" call_tmp[1102574] call_tmp[1102579]))
    unknown call_tmp[1102589] "expr temp" "maybe param" "maybe type" "temp"
    (1102592 'move' call_tmp[1102589](1102551 call options _mt[203] _arg1[1102537]))
    unknown call_tmp[1102594] "expr temp" "maybe param" "maybe type" "temp"
    (1102597 'move' call_tmp[1102594](1102555 call options _mt[203] _arg2[1102538]))
    unknown call_tmp[1102599] "expr temp" "maybe param" "maybe type" "temp"
    (1102602 'move' call_tmp[1102599](1102559 'call resolves' c">" call_tmp[1102589] call_tmp[1102594]))
    unknown call_tmp[1102604] "expr temp" "maybe param" "maybe type" "temp"
    (1102607 'move' call_tmp[1102604](1102561 '&' call_tmp[1102584] call_tmp[1102599]))
    (1102572 'move' ret[1102567](1102571 'deref' call_tmp[1102604]))
    (1102569 return ret[1102567])
  }
  function chpl_serializeHelper[154290](?).>[1102519](arg _mt[1102521]:_MT[201], arg this[1102523]:chpl_serializeHelper[154290](?), arg _arg1[1102525]:chpl_serializeHelper[154290](?), arg _arg2[1102526]:chpl_serializeHelper[154290](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1102681]:bool[19] "RVV" "temp"
    unknown call_tmp[1102708] "expr temp" "maybe param" "maybe type" "temp"
    (1102711 'move' call_tmp[1102708](1102615 call pattern _mt[203] _arg1[1102525]))
    unknown call_tmp[1102713] "expr temp" "maybe param" "maybe type" "temp"
    (1102716 'move' call_tmp[1102713](1102619 call pattern _mt[203] _arg2[1102526]))
    unknown call_tmp[1102718] "expr temp" "maybe param" "maybe type" "temp"
    (1102721 'move' call_tmp[1102718](1102623 call chpl_field_gt call_tmp[1102708] call_tmp[1102713]))
    if call_tmp[1102718]
    {
      (1102686 'move' ret[1102681](1102685 'deref' 1))
      gotoReturn _end_>[1102679] _end_>[1102679]
    }
    unknown call_tmp[1102723] "expr temp" "maybe param" "maybe type" "temp"
    (1102726 'move' call_tmp[1102723](1102629 call pattern _mt[203] _arg1[1102525]))
    unknown call_tmp[1102728] "expr temp" "maybe param" "maybe type" "temp"
    (1102731 'move' call_tmp[1102728](1102633 call pattern _mt[203] _arg2[1102526]))
    unknown call_tmp[1102733] "expr temp" "maybe param" "maybe type" "temp"
    (1102736 'move' call_tmp[1102733](1102637 call chpl_field_lt call_tmp[1102723] call_tmp[1102728]))
    if call_tmp[1102733]
    {
      (1102691 'move' ret[1102681](1102690 'deref' 0))
      gotoReturn _end_>[1102679] _end_>[1102679]
    }
    unknown call_tmp[1102738] "expr temp" "maybe param" "maybe type" "temp"
    (1102741 'move' call_tmp[1102738](1102643 call options _mt[203] _arg1[1102525]))
    unknown call_tmp[1102743] "expr temp" "maybe param" "maybe type" "temp"
    (1102746 'move' call_tmp[1102743](1102647 call options _mt[203] _arg2[1102526]))
    unknown call_tmp[1102748] "expr temp" "maybe param" "maybe type" "temp"
    (1102751 'move' call_tmp[1102748](1102651 call chpl_field_gt call_tmp[1102738] call_tmp[1102743]))
    if call_tmp[1102748]
    {
      (1102696 'move' ret[1102681](1102695 'deref' 1))
      gotoReturn _end_>[1102679] _end_>[1102679]
    }
    unknown call_tmp[1102753] "expr temp" "maybe param" "maybe type" "temp"
    (1102756 'move' call_tmp[1102753](1102657 call options _mt[203] _arg1[1102525]))
    unknown call_tmp[1102758] "expr temp" "maybe param" "maybe type" "temp"
    (1102761 'move' call_tmp[1102758](1102661 call options _mt[203] _arg2[1102526]))
    unknown call_tmp[1102763] "expr temp" "maybe param" "maybe type" "temp"
    (1102766 'move' call_tmp[1102763](1102665 call chpl_field_lt call_tmp[1102753] call_tmp[1102758]))
    if call_tmp[1102763]
    {
      (1102701 'move' ret[1102681](1102700 'deref' 0))
      gotoReturn _end_>[1102679] _end_>[1102679]
    }
    (1102706 'move' ret[1102681](1102705 'deref' 0))
    label _end_>[1102679]
    (1102683 return ret[1102681])
  }
  where {
    unknown call_tmp[1102768] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1102771 'move' call_tmp[1102768](1102529 'typeof' _arg1[1102525]))
    unknown call_tmp[1102773] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1102776 'move' call_tmp[1102773](1102531 'typeof' _arg2[1102526]))
    unknown call_tmp[1102778] "expr temp" "maybe param" "maybe type" "temp"
    (1102781 'move' call_tmp[1102778](1102533 call == call_tmp[1102768] call_tmp[1102773]))
    unknown call_tmp[1102783] "expr temp" "maybe param" "maybe type" "temp"
    (1102786 'move' call_tmp[1102783](1102609 call chpl_fields_are_comparable[1102535] _arg1[1102525] _arg2[1102526]))
    (1102613 '&' call_tmp[1102778] call_tmp[1102783])
  }
  function chpl_fields_are_comparable[1102804](arg _arg1[1102806]:chpl_serializeHelper[154290](?), arg _arg2[1102807]:chpl_serializeHelper[154290](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1102836]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1102843] "expr temp" "maybe param" "maybe type" "temp"
    (1102846 'move' call_tmp[1102843](1102810 call pattern _mt[203] _arg1[1102806]))
    unknown call_tmp[1102848] "expr temp" "maybe param" "maybe type" "temp"
    (1102851 'move' call_tmp[1102848](1102814 call pattern _mt[203] _arg2[1102807]))
    unknown call_tmp[1102853] "expr temp" "maybe param" "maybe type" "temp"
    (1102856 'move' call_tmp[1102853](1102818 'call resolves' c">=" call_tmp[1102843] call_tmp[1102848]))
    unknown call_tmp[1102858] "expr temp" "maybe param" "maybe type" "temp"
    (1102861 'move' call_tmp[1102858](1102820 call options _mt[203] _arg1[1102806]))
    unknown call_tmp[1102863] "expr temp" "maybe param" "maybe type" "temp"
    (1102866 'move' call_tmp[1102863](1102824 call options _mt[203] _arg2[1102807]))
    unknown call_tmp[1102868] "expr temp" "maybe param" "maybe type" "temp"
    (1102871 'move' call_tmp[1102868](1102828 'call resolves' c">=" call_tmp[1102858] call_tmp[1102863]))
    unknown call_tmp[1102873] "expr temp" "maybe param" "maybe type" "temp"
    (1102876 'move' call_tmp[1102873](1102830 '&' call_tmp[1102853] call_tmp[1102868]))
    (1102841 'move' ret[1102836](1102840 'deref' call_tmp[1102873]))
    (1102838 return ret[1102836])
  }
  function chpl_serializeHelper[154290](?).>=[1102788](arg _mt[1102790]:_MT[201], arg this[1102792]:chpl_serializeHelper[154290](?), arg _arg1[1102794]:chpl_serializeHelper[154290](?), arg _arg2[1102795]:chpl_serializeHelper[154290](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1102950]:bool[19] "RVV" "temp"
    unknown call_tmp[1102977] "expr temp" "maybe param" "maybe type" "temp"
    (1102980 'move' call_tmp[1102977](1102884 call pattern _mt[203] _arg1[1102794]))
    unknown call_tmp[1102982] "expr temp" "maybe param" "maybe type" "temp"
    (1102985 'move' call_tmp[1102982](1102888 call pattern _mt[203] _arg2[1102795]))
    unknown call_tmp[1102987] "expr temp" "maybe param" "maybe type" "temp"
    (1102990 'move' call_tmp[1102987](1102892 call chpl_field_gt call_tmp[1102977] call_tmp[1102982]))
    if call_tmp[1102987]
    {
      (1102955 'move' ret[1102950](1102954 'deref' 1))
      gotoReturn _end_>=[1102948] _end_>=[1102948]
    }
    unknown call_tmp[1102992] "expr temp" "maybe param" "maybe type" "temp"
    (1102995 'move' call_tmp[1102992](1102898 call pattern _mt[203] _arg1[1102794]))
    unknown call_tmp[1102997] "expr temp" "maybe param" "maybe type" "temp"
    (1103000 'move' call_tmp[1102997](1102902 call pattern _mt[203] _arg2[1102795]))
    unknown call_tmp[1103002] "expr temp" "maybe param" "maybe type" "temp"
    (1103005 'move' call_tmp[1103002](1102906 call chpl_field_lt call_tmp[1102992] call_tmp[1102997]))
    if call_tmp[1103002]
    {
      (1102960 'move' ret[1102950](1102959 'deref' 0))
      gotoReturn _end_>=[1102948] _end_>=[1102948]
    }
    unknown call_tmp[1103007] "expr temp" "maybe param" "maybe type" "temp"
    (1103010 'move' call_tmp[1103007](1102912 call options _mt[203] _arg1[1102794]))
    unknown call_tmp[1103012] "expr temp" "maybe param" "maybe type" "temp"
    (1103015 'move' call_tmp[1103012](1102916 call options _mt[203] _arg2[1102795]))
    unknown call_tmp[1103017] "expr temp" "maybe param" "maybe type" "temp"
    (1103020 'move' call_tmp[1103017](1102920 call chpl_field_gt call_tmp[1103007] call_tmp[1103012]))
    if call_tmp[1103017]
    {
      (1102965 'move' ret[1102950](1102964 'deref' 1))
      gotoReturn _end_>=[1102948] _end_>=[1102948]
    }
    unknown call_tmp[1103022] "expr temp" "maybe param" "maybe type" "temp"
    (1103025 'move' call_tmp[1103022](1102926 call options _mt[203] _arg1[1102794]))
    unknown call_tmp[1103027] "expr temp" "maybe param" "maybe type" "temp"
    (1103030 'move' call_tmp[1103027](1102930 call options _mt[203] _arg2[1102795]))
    unknown call_tmp[1103032] "expr temp" "maybe param" "maybe type" "temp"
    (1103035 'move' call_tmp[1103032](1102934 call chpl_field_lt call_tmp[1103022] call_tmp[1103027]))
    if call_tmp[1103032]
    {
      (1102970 'move' ret[1102950](1102969 'deref' 0))
      gotoReturn _end_>=[1102948] _end_>=[1102948]
    }
    (1102975 'move' ret[1102950](1102974 'deref' 1))
    label _end_>=[1102948]
    (1102952 return ret[1102950])
  }
  where {
    unknown call_tmp[1103037] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103040 'move' call_tmp[1103037](1102798 'typeof' _arg1[1102794]))
    unknown call_tmp[1103042] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103045 'move' call_tmp[1103042](1102800 'typeof' _arg2[1102795]))
    unknown call_tmp[1103047] "expr temp" "maybe param" "maybe type" "temp"
    (1103050 'move' call_tmp[1103047](1102802 call == call_tmp[1103037] call_tmp[1103042]))
    unknown call_tmp[1103052] "expr temp" "maybe param" "maybe type" "temp"
    (1103055 'move' call_tmp[1103052](1102878 call chpl_fields_are_comparable[1102804] _arg1[1102794] _arg2[1102795]))
    (1102882 '&' call_tmp[1103047] call_tmp[1103052])
  }
  type chpl_serializeHelper[154290](?) unknown exprType[154275] "type variable" unknown pattern[154278](154280 call serializedType exprType[154275]) val options[154285]:qio_regex_options_t[153655] qio_regex_options_t[153655]
  function regex[156365](?).init[154313](arg _mt[154350]:_MT[201], ref arg this[154315]:regex[156365](?), arg pattern[154319]:_any[141](?), arg posix[154323] :
  0 =
  0, arg literal[154327] :
  0 =
  0, arg noCapture[154331] :
  0 =
  0, arg ignoreCase[154335] :
  0 =
  0, arg multiLine[154339] :
  posix[154323] =
  posix[154323], arg dotAll[154343] :
  0 =
  0, arg nonGreedy[154347] :
  0 =
  0) : void[4] throws "method" "primary method" "no return value for void"
  {
    unknown exprType[526308] "temp" "type variable"
    (526310 'move' exprType[526308](526298 'typeof' pattern[154319]))
    (526312 'init field' this[154315] c"exprType" exprType[526308])
    (555357 'end of statement')
    unknown call_tmp[823203] "maybe param" "maybe type" "temp"
    (823206 'move' call_tmp[823203](526317 call here[135591]))
    unknown home[526318] "temp"
    (526321 'init var' home[526318] call_tmp[823203] locale[234])
    (526323 'init field' this[154315] c"home" home[526318])
    (555358 'end of statement')
    unknown call_tmp[823208] "maybe param" "maybe type" "temp"
    (823211 'move' call_tmp[823208](526328 call qio_regex_null))
    unknown _regex[526329] "temp"
    (526332 'init var' _regex[526329] call_tmp[823208] qio_regex_t[153611])
    (526334 'init field' this[154315] c"_regex" _regex[526329])
    (555359 'end of statement')
    (526338 'init done')
    (555360 'end of statement')
    unknown call_tmp[823213] "expr temp" "maybe param" "maybe type" "temp"
    (823216 'move' call_tmp[823213](154386 call == CHPL_RE2[29893] "none"))
    unknown call_tmp[823218] "expr temp" "maybe param" "maybe type" "temp"
    (823221 'move' call_tmp[823218](154390 call _cond_test call_tmp[823213]))
    if call_tmp[823218]
    {
      (154382 call compilerError "Cannot use Regex with CHPL_RE2=none")
    }
    unknown opts[154395] "dead at end of block" "insert auto destroy"
    (646492 'default init var' opts[154395] qio_regex_options_t[153655])
    (154398 'end of statement')
    (154400 call qio_regex_init_default_options opts[154395])
    (555362 'end of statement' opts[154395])
    unknown call_tmp[823225] "expr temp" "maybe param" "maybe type" "temp"
    (823228 'move' call_tmp[823225](154407 call utf8 _mt[203] opts[154395]))
    unknown call_tmp[823230] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (823233 'move' call_tmp[823230](526300 'typeof' pattern[154319]))
    unknown call_tmp[823235] "expr temp" "maybe param" "maybe type" "temp"
    (823238 'move' call_tmp[823235](154410 call == call_tmp[823230] string[244]))
    (154402 call = call_tmp[823225] call_tmp[823235])
    (555364 'end of statement' opts[154395])
    unknown call_tmp[823242] "expr temp" "maybe param" "maybe type" "temp"
    (823245 'move' call_tmp[823242](154419 call posix _mt[203] opts[154395]))
    (154414 call = call_tmp[823242] posix[154323])
    (555366 'end of statement' opts[154395])
    unknown call_tmp[823249] "expr temp" "maybe param" "maybe type" "temp"
    (823252 'move' call_tmp[823249](154428 call literal _mt[203] opts[154395]))
    (154423 call = call_tmp[823249] literal[154327])
    (555368 'end of statement' opts[154395])
    unknown call_tmp[823256] "expr temp" "maybe param" "maybe type" "temp"
    (823259 'move' call_tmp[823256](154437 call nocapture _mt[203] opts[154395]))
    (154432 call = call_tmp[823256] noCapture[154331])
    (555370 'end of statement' opts[154395])
    unknown call_tmp[823263] "expr temp" "maybe param" "maybe type" "temp"
    (823266 'move' call_tmp[823263](154446 call ignorecase _mt[203] opts[154395]))
    (154441 call = call_tmp[823263] ignoreCase[154335])
    (555372 'end of statement' opts[154395])
    unknown call_tmp[823270] "expr temp" "maybe param" "maybe type" "temp"
    (823273 'move' call_tmp[823270](154455 call multiline _mt[203] opts[154395]))
    (154450 call = call_tmp[823270] multiLine[154339])
    (555374 'end of statement' opts[154395])
    unknown call_tmp[823277] "expr temp" "maybe param" "maybe type" "temp"
    (823280 'move' call_tmp[823277](154464 call dotnl _mt[203] opts[154395]))
    (154459 call = call_tmp[823277] dotAll[154343])
    (555376 'end of statement' opts[154395])
    unknown call_tmp[823284] "expr temp" "maybe param" "maybe type" "temp"
    (823287 'move' call_tmp[823284](154473 call nongreedy _mt[203] opts[154395]))
    (154468 call = call_tmp[823284] nonGreedy[154347])
    (555378 'end of statement' opts[154395])
    unknown call_tmp[823291] "expr temp" "maybe param" "maybe type" "temp"
    (823294 'move' call_tmp[823291](154483 call(154480 call (partial) localize _mt[203] pattern[154319])))
    unknown call_tmp[823298] "expr temp" "maybe param" "maybe type" "temp"
    (823301 'move' call_tmp[823298](154487 call(154484 call (partial) c_str _mt[203] call_tmp[823291])))
    unknown call_tmp[823305] "expr temp" "maybe param" "maybe type" "temp"
    (823308 'move' call_tmp[823305](154489 call numBytes _mt[203] pattern[154319]))
    unknown call_tmp[823312] "expr temp" "maybe param" "maybe type" "temp"
    (823315 'move' call_tmp[823312](154496 call _regex _mt[203] this[154315]))
    (154478 call qio_regex_create_compile call_tmp[823298] call_tmp[823305] opts[154395] call_tmp[823312])
    (555380 'end of statement' opts[154395])
    unknown call_tmp[823319] "expr temp" "maybe param" "maybe type" "temp"
    (823322 'move' call_tmp[823319](154582 call _regex _mt[203] this[154315]))
    unknown call_tmp[823324] "expr temp" "maybe param" "maybe type" "temp"
    (823327 'move' call_tmp[823324](154580 call qio_regex_ok call_tmp[823319]))
    unknown call_tmp[823329] "expr temp" "maybe param" "maybe type" "temp"
    (823332 'move' call_tmp[823329](154577 call ! call_tmp[823324]))
    unknown call_tmp[823334] "expr temp" "maybe param" "maybe type" "temp"
    (823337 'move' call_tmp[823334](154585 call _cond_test call_tmp[823329]))
    if call_tmp[823334]
    {
      const patternStr[154501] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[682384] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[682385] "maybe param" "temp"
      unknown call_tmp[823339] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (823342 'move' call_tmp[823339](526302 'typeof' pattern[154319]))
      unknown call_tmp[823344] "expr temp" "maybe param" "maybe type" "temp"
      (823347 'move' call_tmp[823344](154502 call == call_tmp[823339] string[244]))
      (682390 'move' tmp[682385](682388 call _cond_test call_tmp[823344]))
      if tmp[682385]
      {
        (682395 'move' tmp[682384](682392 '_paramFoldLogical' tmp[682385] pattern[154319]))
      }
      {
        unknown tmp[682397] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (682399 'move' tmp[682397](154511 call(154508 call (partial) decode _mt[203] pattern[154319]) replace[37978]))
        (682404 'move' tmp[682384](682401 '_paramFoldLogical' tmp[682385] tmp[682397]))
      }
      (646494 'init var' patternStr[154501] tmp[682384])
      (154520 'end of statement')
      unknown call_tmp[823353] "expr temp" "maybe param" "maybe type" "temp"
      (823356 'move' call_tmp[823353](154526 call _regex _mt[203] this[154315]))
      unknown call_tmp[823358] "maybe param" "maybe type" "temp"
      (823361 'move' call_tmp[823358](154524 call qio_regex_error call_tmp[823353]))
      unknown err_str[154522] "dead at end of block" "insert auto destroy"
      (646496 'init var' err_str[154522] call_tmp[823358])
      (154530 'end of statement')
      unknown err_msg[154532] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[646498] "maybe param" "maybe type" "temp"
      (646504 'move' type_tmp[646498] string[244])
      (646500 'init var split decl' err_msg[154532] type_tmp[646498])
      (154535 'end of statement')
      Try!
      {
        {
          unknown call_tmp[823365] "expr temp" "maybe param" "maybe type" "temp"
          (823368 'move' call_tmp[823365](154550 call(154547 call (partial) createAdoptingBuffer _mt[203] string[244]) err_str[154522]))
          unknown call_tmp[823370] "expr temp" "maybe param" "maybe type" "temp"
          (823373 'move' call_tmp[823370](154544 call + call_tmp[823365] " when compiling regex '"))
          unknown call_tmp[823375] "expr temp" "maybe param" "maybe type" "temp"
          (823378 'move' call_tmp[823375](154542 call + call_tmp[823370] patternStr[154501]))
          unknown call_tmp[823380] "maybe param" "maybe type" "temp"
          (823383 'move' call_tmp[823380](154540 call + call_tmp[823375] "'"))
          (646506 'init var split init' err_msg[154532] call_tmp[823380] type_tmp[646498])
          (555382 'end of statement' err_msg[154532] err_str[154522] patternStr[154501])
        }
      }
      (154561 call errorThrower err_msg[154532])
      (555386 'end of statement' err_msg[154532])
      function errorThrower[154563](arg msg[154565]:_any[141](?)) : _unknown[42] throws "inline" "no return value for void"
      {
        unknown call_tmp[823385] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (823388 'move' call_tmp[823385](1000162 'new' BadRegexError[434230](?) msg[154565](_chpl_manager = _owned[238](?))))
        unknown call_tmp[823390] "expr temp" "maybe param" "maybe type" "temp"
        (823393 'move' call_tmp[823390](542263 call chpl_fix_thrown_error call_tmp[823385]))
        (154568 'throw' call_tmp[823390])
        (611761 return _void[46])
      }
    }
    (611763 return _void[46])
    (396735 'used modules list'(154364 'use' ChplConfig[29952]))
  }
  where {
    unknown tmp[489387] "maybe param" "temp"
    unknown call_tmp[823395] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (823398 'move' call_tmp[823395](526304 'typeof' pattern[154319]))
    (489398 'move' tmp[489387](154354 call == call_tmp[823395] string[244]))
    unknown call_tmp[823400] "expr temp" "maybe param" "maybe type" "temp"
    (823403 'move' call_tmp[823400](489400 call _cond_invalid tmp[489387]))
    if call_tmp[823400]
    {
      (489403 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682411] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682412] "maybe param" "temp"
    unknown call_tmp[823405] "expr temp" "maybe param" "maybe type" "temp"
    (823408 'move' call_tmp[823405](489388 call isTrue tmp[489387]))
    (682417 'move' tmp[682412](682415 call _cond_test call_tmp[823405]))
    if tmp[682412]
    {
      (682422 'move' tmp[682411](682419 '_paramFoldLogical' tmp[682412] 1))
    }
    {
      unknown tmp[682424] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[823410] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (823413 'move' call_tmp[823410](526306 'typeof' pattern[154319]))
      unknown call_tmp[823415] "expr temp" "maybe param" "maybe type" "temp"
      (823418 'move' call_tmp[823415](154358 call == call_tmp[823410] bytes[232]))
      (682426 'move' tmp[682424](489392 call isTrue call_tmp[823415]))
      (682431 'move' tmp[682411](682428 '_paramFoldLogical' tmp[682412] tmp[682424]))
    }
    (1001454 call chpl_statementLevelSymbol tmp[682411])
  }
  function regex[156365](?).init=[154592](arg _mt[154602]:_MT[201], ref arg this[154594]:regex[156365](?), arg x[154599]:regex[156365](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown exprType[526346] "temp" "type variable"
    (526348 'move' exprType[526346](154612 call exprType _mt[203] x[154599]))
    (526350 'init field' this[154594] c"exprType" exprType[526346])
    (555389 'end of statement')
    unknown call_tmp[823422] "maybe param" "maybe type" "temp"
    (823425 'move' call_tmp[823422](434235 call here[135591]))
    unknown home[526354] "temp"
    (526357 'init var' home[526354] call_tmp[823422] locale[234])
    (526359 'init field' this[154594] c"home" home[526354])
    (555390 'end of statement')
    unknown call_tmp[823429] "expr temp" "maybe param" "maybe type" "temp"
    (823432 'move' call_tmp[823429](154674 call home _mt[203] x[154599]))
    unknown call_tmp[823434] "expr temp" "maybe param" "maybe type" "temp"
    (823437 'move' call_tmp[823434](434238 call here[135591]))
    unknown call_tmp[823439] "expr temp" "maybe param" "maybe type" "temp"
    (823442 'move' call_tmp[823439](154671 call == call_tmp[823429] call_tmp[823434]))
    unknown call_tmp[823444] "expr temp" "maybe param" "maybe type" "temp"
    (823447 'move' call_tmp[823444](154678 call _cond_test call_tmp[823439]))
    if call_tmp[823444]
    {
      unknown call_tmp[823451] "maybe param" "maybe type" "temp"
      (823454 'move' call_tmp[823451](154632 call _regex _mt[203] x[154599]))
      unknown _regex[526363] "temp"
      (526366 'init var' _regex[526363] call_tmp[823451] qio_regex_t[153611])
      (526368 'init field' this[154594] c"_regex" _regex[526363])
      (555391 'end of statement')
      (526372 'init done')
      (555392 'end of statement')
      unknown call_tmp[823458] "expr temp" "maybe param" "maybe type" "temp"
      (823461 'move' call_tmp[823458](154643 call _regex _mt[203] x[154599]))
      (154641 call qio_regex_retain call_tmp[823458])
    }
    {
      unknown call_tmp[823463] "maybe param" "maybe type" "temp"
      (823466 'move' call_tmp[823463](526374 call qio_regex_null))
      unknown _regex[526375] "temp"
      (526378 'init var' _regex[526375] call_tmp[823463] qio_regex_t[153611])
      (526380 'init field' this[154594] c"_regex" _regex[526375])
      (555394 'end of statement')
      (526384 'init done')
      (555395 'end of statement')
      unknown call_tmp[823470] "maybe param" "maybe type" "temp"
      (823473 'move' call_tmp[823470](154660 call(154657 call (partial) _serialize _mt[203] x[154599])))
      unknown serialized[154653] "dead at end of block" "insert auto destroy"
      (646509 'init var' serialized[154653] call_tmp[823470])
      (154662 'end of statement')
      (154669 call(154666 call (partial) _deserialize _mt[203] this[154594]) serialized[154653])
      (555396 'end of statement' serialized[154653])
    }
    (611765 return _void[46])
  }
  function regex[156365](?).init[154684](arg _mt[154690]:_MT[201], ref arg this[154686]:regex[156365](?), arg exprType[154688]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown exprType[526385] "temp" "type variable"
    (526387 'move' exprType[526385] exprType[154688])
    (526389 'init field' this[154686] c"exprType" exprType[526385])
    (555398 'end of statement')
    unknown call_tmp[823477] "maybe param" "maybe type" "temp"
    (823480 'move' call_tmp[823477](526395 call here[135591]))
    unknown home[526396] "temp"
    (526399 'init var' home[526396] call_tmp[823477] locale[234])
    (526401 'init field' this[154686] c"home" home[526396])
    (555399 'end of statement')
    unknown call_tmp[823482] "maybe param" "maybe type" "temp"
    (823485 'move' call_tmp[823482](526406 call qio_regex_null))
    unknown _regex[526407] "temp"
    (526410 'init var' _regex[526407] call_tmp[823482] qio_regex_t[153611])
    (526412 'init field' this[154686] c"_regex" _regex[526407])
    (555400 'end of statement')
    (611767 return _void[46])
  }
  function regex[156365](?)._serialize[154702](arg _mt[154706]:_MT[201], arg this[154704]:regex[156365](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611771] "RVV" "temp"
    unknown pattern[154710] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823489] "expr temp" "maybe param" "maybe type" "temp"
    (823492 'move' call_tmp[823489](434243 call exprType _mt[203] this[154704]))
    unknown call_tmp[823494] "expr temp" "maybe param" "maybe type" "temp"
    (823497 'move' call_tmp[823494](154712 call serializedType call_tmp[823489]))
    (646511 'default init var' pattern[154710] call_tmp[823494])
    (154715 'end of statement')
    unknown options[154717] "dead at end of block" "insert auto destroy"
    (646513 'default init var' options[154717] qio_regex_options_t[153655])
    (154720 'end of statement')
    unknown call_tmp[823501] "maybe param" "maybe type" "temp"
    (823504 'move' call_tmp[823501](434249 call _regex _mt[203] this[154704]))
    const _regexCopy[154722] "dead at end of block" "const" "insert auto destroy"
    (646515 'init var' _regexCopy[154722] call_tmp[823501])
    (154725 'end of statement')
    {
      const tmp[154782] "const" "temp"
      unknown call_tmp[823508] "expr temp" "maybe param" "maybe type" "temp"
      (823511 'move' call_tmp[823508](154727 call home _mt[203] this[154704]))
      unknown call_tmp[823513] "expr temp" "maybe param" "maybe type" "temp"
      (823516 'move' call_tmp[823513](154779 '_wide_get_locale' call_tmp[823508]))
      (154783 'move' tmp[154782](154780 'deref' call_tmp[823513]))
      {
        unknown patternTemp[154732] "dead at end of block" "insert auto destroy"
        unknown call_tmp[823518] "expr temp" "maybe param" "maybe type" "temp"
        (823521 'move' call_tmp[823518](154734 call c_ptrConst[46990](?) c_char[562]))
        (646517 'default init var' patternTemp[154732] call_tmp[823518])
        (154737 'end of statement')
        unknown len[154739] "dead at end of block" "insert auto destroy"
        (646519 'default init var' len[154739] int(64)[10])
        (154742 'end of statement')
        (154744 call qio_regex_borrow_pattern _regexCopy[154722] patternTemp[154732] len[154739])
        (555401 'end of statement' _regexCopy[154722] patternTemp[154732] len[154739])
        Try!
        {
          {
            unknown call_tmp[823525] "expr temp" "maybe param" "maybe type" "temp"
            (823528 'move' call_tmp[823525](403901 call exprType _mt[203] this[154704]))
            unknown call_tmp[823532] "expr temp" "maybe param" "maybe type" "temp"
            (823535 'move' call_tmp[823532](154756 call(154753 call (partial) createBorrowingBuffer _mt[203] call_tmp[823525]) patternTemp[154732] len[154739]))
            unknown call_tmp[823539] "expr temp" "maybe param" "maybe type" "temp"
            (823542 'move' call_tmp[823539](154762 call(154759 call (partial) chpl__serialize _mt[203] call_tmp[823532])))
            (154749 call = pattern[154710] call_tmp[823539])
            (555405 'end of statement' pattern[154710] patternTemp[154732] len[154739])
          }
        }
        unknown localOptions[154767] "dead at end of block" "insert auto destroy"
        (646521 'default init var' localOptions[154767] qio_regex_options_t[153655])
        (154770 'end of statement')
        (154772 call qio_regex_get_options _regexCopy[154722] localOptions[154767])
        (555409 'end of statement' _regexCopy[154722] localOptions[154767])
        (154775 call = options[154717] localOptions[154767])
        (555412 'end of statement' options[154717] localOptions[154767])
      }
      (154786 'elided on block' 0 tmp[154782])
    }
    unknown call_tmp[823546] "expr temp" "maybe param" "maybe type" "temp"
    (823549 'move' call_tmp[823546](434268 call exprType _mt[203] this[154704]))
    unknown call_tmp[823551] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (823554 'move' call_tmp[823551](1000163 'new' chpl_serializeHelper[154290](?) call_tmp[823546] pattern[154710] options[154717]))
    (611776 'move' ret[611771](611775 'deref' call_tmp[823551]))
    gotoReturn _end__serialize[611769] _end__serialize[611769]
    (555415 'end of statement' pattern[154710] options[154717])
    label _end__serialize[611769]
    (611773 return ret[611771])
  }
  function regex[156365](?)._deserialize[154799](arg _mt[154805]:_MT[201], ref arg this[154801]:regex[156365](?), arg data[154803]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[823558] "expr temp" "maybe param" "maybe type" "temp"
    (823561 'move' call_tmp[823558](403906 call exprType _mt[203] this[154801]))
    unknown call_tmp[823567] "expr temp" "maybe param" "maybe type" "temp"
    (823570 'move' call_tmp[823567](154818 call pattern _mt[203] data[154803]))
    unknown call_tmp[823572] "maybe param" "maybe type" "temp"
    (823575 'move' call_tmp[823572](154814 call(154811 call (partial) chpl__deserialize _mt[203] call_tmp[823558]) call_tmp[823567]))
    const pattern[154809] "dead at end of block" "const" "insert auto destroy"
    (646523 'init var' pattern[154809] call_tmp[823572])
    (154822 'end of statement')
    unknown call_tmp[823579] "expr temp" "maybe param" "maybe type" "temp"
    (823582 'move' call_tmp[823579](154829 call(154826 call (partial) c_str _mt[203] pattern[154809])))
    unknown call_tmp[823586] "expr temp" "maybe param" "maybe type" "temp"
    (823589 'move' call_tmp[823586](154831 call numBytes _mt[203] pattern[154809]))
    unknown call_tmp[823593] "expr temp" "maybe param" "maybe type" "temp"
    (823596 'move' call_tmp[823593](154837 call options _mt[203] data[154803]))
    unknown call_tmp[823600] "expr temp" "maybe param" "maybe type" "temp"
    (823603 'move' call_tmp[823600](154841 call _regex _mt[203] this[154801]))
    (154824 call qio_regex_create_compile call_tmp[823579] call_tmp[823586] call_tmp[823593] call_tmp[823600])
    (555418 'end of statement' pattern[154809])
    (611780 return _void[46])
  }
  function regex[156365](?).chpl__serialize[154846](arg _mt[154850]:_MT[201], arg this[154848]:regex[156365](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611784] "RVV" "temp"
    unknown call_tmp[823607] "expr temp" "maybe param" "maybe type" "temp"
    (823610 'move' call_tmp[823607](154855 call(434274 call (partial) _serialize _mt[203] this[154848])))
    (611789 'move' ret[611784](611788 'deref' call_tmp[823607]))
    (611786 return ret[611784])
  }
  function regex[156365](?).chpl__deserialize[154858](arg _mt[154864]:_MT[201], arg this[154860]:regex[156365](?), arg data[154862]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611793] "RVV" "temp"
    unknown ret[154868] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823614] "expr temp" "maybe param" "maybe type" "temp"
    (823617 'move' call_tmp[823614](434280 call exprType _mt[203] this[154860]))
    unknown call_tmp[823619] "expr temp" "maybe param" "maybe type" "temp"
    (823622 'move' call_tmp[823619](154870 call regex[156365](?) call_tmp[823614]))
    (646525 'default init var' ret[154868] call_tmp[823619])
    (154873 'end of statement')
    (154878 call(154875 call (partial) _deserialize _mt[203] ret[154868]) data[154862])
    (555421 'end of statement' ret[154868])
    (611798 'move' ret[611793](611797 'deref' ret[154868]))
    gotoReturn _end_chpl__deserialize[611791] _end_chpl__deserialize[611791]
    (555423 'end of statement' ret[154868])
    label _end_chpl__deserialize[611791]
    (611795 return ret[611793])
  }
  function regex[156365](?).deinit[154884](arg _mt[154888]:_MT[201], ref arg this[154886]:regex[156365](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[823628] "expr temp" "maybe param" "maybe type" "temp"
    (823631 'move' call_tmp[823628](434287 call _regex _mt[203] this[154886]))
    (154892 call qio_regex_release call_tmp[823628])
    (555425 'end of statement')
    unknown call_tmp[823635] "expr temp" "maybe param" "maybe type" "temp"
    (823638 'move' call_tmp[823635](434292 call _regex _mt[203] this[154886]))
    unknown call_tmp[823640] "expr temp" "maybe param" "maybe type" "temp"
    (823643 'move' call_tmp[823640](154898 call qio_regex_null))
    (154894 call = call_tmp[823635] call_tmp[823640])
    (611802 return _void[46])
  }
  function regex[156365](?)._handle_captures[154901](arg _mt[154919]:_MT[201], arg this[154903]:regex[156365](?), arg text[154906] :
  (434297 call exprType _mt[203] this[154903]), ref arg matches[154914]:c_array[47643](?), ref arg captures[154917]:_any[141](?)) : _unknown[42] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[823647] "expr temp" "maybe param" "maybe type" "temp"
    (823650 'move' call_tmp[823647](526432 'query' matches[154914] 2))
    unknown call_tmp[823654] "expr temp" "maybe param" "maybe type" "temp"
    (823657 'move' call_tmp[823654](154928 call size _mt[203] captures[154917]))
    unknown call_tmp[823659] "expr temp" "maybe param" "maybe type" "temp"
    (823662 'move' call_tmp[823659](154924 call >= call_tmp[823647] call_tmp[823654]))
    (154923 call assert call_tmp[823659])
    (555427 'end of statement')
    {
      unknown i[154931] "dead at end of block" "index var" "insert auto destroy"
      (646527 'init var' i[154931] 0)
      (555428 'end of statement')
      unknown tmp[155054] "maybe param" "temp"
      unknown call_tmp[823666] "expr temp" "maybe param" "maybe type" "temp"
      (823669 'move' call_tmp[823666](154937 call size _mt[203] captures[154917]))
      unknown call_tmp[823671] "expr temp" "maybe param" "maybe type" "temp"
      (823674 'move' call_tmp[823671](154934 call - call_tmp[823666] 1))
      (155066 'move' tmp[155054](155064 call chpl_compute_low_param_loop_bound 0 call_tmp[823671]))
      unknown tmp[155055] "maybe param" "temp"
      unknown call_tmp[823678] "expr temp" "maybe param" "maybe type" "temp"
      (823681 'move' call_tmp[823678](155073 call size _mt[203] captures[154917]))
      unknown call_tmp[823683] "expr temp" "maybe param" "maybe type" "temp"
      (823686 'move' call_tmp[823683](155071 call - call_tmp[823678] 1))
      (155079 'move' tmp[155055](155077 call chpl_compute_high_param_loop_bound 0 call_tmp[823683]))
      unknown tmp[155056] "maybe param" "temp"
      (155082 'move' tmp[155056] 1)
      ParamForLoop[155084]
      { i[154931] tmp[155054] tmp[155055] tmp[155056]
        {
          unknown call_tmp[823688] "expr temp" "maybe param" "maybe type" "temp"
          (823691 'move' call_tmp[823688](154950 call + i[154931] 1))
          unknown call_tmp[823693] "expr temp" "maybe param" "maybe type" "temp"
          (823696 'move' call_tmp[823693](154949 call matches[154914] call_tmp[823688]))
          unknown call_tmp[823698] "maybe param" "maybe type" "temp"
          (823701 'move' call_tmp[823698](154947 call _to_regexMatch call_tmp[823693]))
          unknown m[154945] "dead at end of block" "insert auto destroy"
          (646529 'init var' m[154945] call_tmp[823698])
          (154955 'end of statement' i[154931])
          { scopeless type
            unknown call_type_tmp[577827] "expr temp" "maybe type" "temp" "type variable"
            unknown call_tmp[823703] "expr temp" "maybe param" "used in type" "maybe type" "temp"
            (823706 'move' call_tmp[823703](155046 call captures[154917] i[154931]))
            (577831 'move' call_type_tmp[577827](155048 'typeof' call_tmp[823703]))
          }
          unknown call_tmp[823708] "expr temp" "maybe param" "maybe type" "temp"
          (823711 'move' call_tmp[823708](155043 call == call_type_tmp[577827] regexMatch[154054]))
          unknown call_tmp[823713] "expr temp" "maybe param" "maybe type" "temp"
          (823716 'move' call_tmp[823713](155050 call _cond_test call_tmp[823708]))
          if call_tmp[823713]
          {
            unknown call_tmp[823718] "expr temp" "maybe param" "maybe type" "temp"
            (823721 'move' call_tmp[823718](154960 call captures[154917] i[154931]))
            (154957 call = call_tmp[823718] m[154945])
            (555430 'end of statement' i[154931] m[154945])
          }
          {
            unknown call_tmp[823725] "expr temp" "maybe param" "maybe type" "temp"
            (823728 'move' call_tmp[823725](155036 call matched _mt[203] m[154945]))
            unknown call_tmp[823730] "expr temp" "maybe param" "maybe type" "temp"
            (823733 'move' call_tmp[823730](155039 call _cond_test call_tmp[823725]))
            if call_tmp[823730]
            {
              { scopeless type
                unknown call_type_tmp[577833] "expr temp" "maybe type" "temp" "type variable"
                unknown call_tmp[823735] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                (823738 'move' call_tmp[823735](155012 call captures[154917] i[154931]))
                (577837 'move' call_type_tmp[577833](155014 'typeof' call_tmp[823735]))
              }
              unknown call_tmp[823742] "expr temp" "maybe param" "maybe type" "temp"
              (823745 'move' call_tmp[823742](434327 call exprType _mt[203] this[154903]))
              unknown call_tmp[823747] "expr temp" "maybe param" "maybe type" "temp"
              (823750 'move' call_tmp[823747](155009 call == call_type_tmp[577833] call_tmp[823742]))
              unknown call_tmp[823752] "expr temp" "maybe param" "maybe type" "temp"
              (823755 'move' call_tmp[823752](155016 call _cond_test call_tmp[823747]))
              if call_tmp[823752]
              {
                unknown call_tmp[823757] "expr temp" "maybe param" "maybe type" "temp"
                (823760 'move' call_tmp[823757](154969 call captures[154917] i[154931]))
                unknown call_tmp[823762] "expr temp" "maybe param" "maybe type" "temp"
                (823765 'move' call_tmp[823762](154972 call text[154906] m[154945]))
                (154966 call = call_tmp[823757] call_tmp[823762])
                (555433 'end of statement' i[154931] m[154945])
              }
              {
                Try
                {
                  {
                    { scopeless type
                      unknown call_type_tmp[577839] "expr temp" "maybe type" "temp" "type variable"
                      unknown call_tmp[823767] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                      (823770 'move' call_tmp[823767](154987 call captures[154917] i[154931]))
                      (577843 'move' call_type_tmp[577839](154989 'typeof' call_tmp[823767]))
                    }
                    unknown call_tmp[823772] "expr temp" "maybe param" "maybe type" "temp"
                    (823775 'move' call_tmp[823772](154979 call captures[154917] i[154931]))
                    unknown call_tmp[823777] "expr temp" "maybe param" "maybe type" "temp"
                    (823780 'move' call_tmp[823777](154984 call text[154906] m[154945]))
                    unknown call_tmp[823782] "expr temp" "maybe param" "maybe type" "temp"
                    (823785 'move' call_tmp[823782](154981 call : call_tmp[823777] call_type_tmp[577839]))
                    (154976 call = call_tmp[823772] call_tmp[823782])
                    (555436 'end of statement' i[154931] m[154945])
                  }
                }
                Catch
                {
                  unknown call_tmp[823787] "maybe param" "maybe type" "temp"
                  (823790 'move' call_tmp[823787](394918 'current error'))
                  unknown tmp[394915] "dead at end of block" "insert auto destroy" "temp"
                  (646531 'init var' tmp[394915] call_tmp[823787])
                  unknown call_tmp[823792] "expr temp" "maybe param" "maybe type" "temp"
                  (823795 'move' call_tmp[823792](394923 'to non nilable class' tmp[394915]))
                  unknown call_tmp[823797] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                  (823800 'move' call_tmp[823797](1000164 'new' _owned[238](?) call_tmp[823792]))
                  unknown chpl_anon_error[394921] "dead at end of block" "insert auto destroy"
                  (646533 'init var' chpl_anon_error[394921] call_tmp[823797])
                  (555439 'end of statement')
                  {
                    { scopeless type
                      unknown call_type_tmp[577845] "expr temp" "maybe type" "temp" "type variable"
                      unknown call_tmp[823802] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                      (823805 'move' call_tmp[823802](154995 call captures[154917] i[154931]))
                      (577849 'move' call_type_tmp[577845](154997 'typeof' call_tmp[823802]))
                    }
                    unknown empty[154993] "dead at end of block" "insert auto destroy"
                    (646535 'default init var' empty[154993] call_type_tmp[577845])
                    (154999 'end of statement' i[154931])
                    unknown call_tmp[823807] "expr temp" "maybe param" "maybe type" "temp"
                    (823810 'move' call_tmp[823807](155003 call captures[154917] i[154931]))
                    (155000 call = call_tmp[823807] empty[154993])
                    (555441 'end of statement' i[154931] empty[154993])
                  }
                }
              }
            }
            {
              { scopeless type
                unknown call_type_tmp[577851] "expr temp" "maybe type" "temp" "type variable"
                unknown call_tmp[823812] "expr temp" "maybe param" "used in type" "maybe type" "temp"
                (823815 'move' call_tmp[823812](155024 call captures[154917] i[154931]))
                (577855 'move' call_type_tmp[577851](155026 'typeof' call_tmp[823812]))
              }
              unknown empty[155022] "dead at end of block" "insert auto destroy"
              (646537 'default init var' empty[155022] call_type_tmp[577851])
              (155028 'end of statement' i[154931])
              unknown call_tmp[823817] "expr temp" "maybe param" "maybe type" "temp"
              (823820 'move' call_tmp[823817](155032 call captures[154917] i[154931]))
              (155029 call = call_tmp[823817] empty[155022])
              (555445 'end of statement' i[154931] empty[155022])
            }
          }
        }
      }
      label _unused_continueLabel[155058]
      label _breakLabel[155057]
    }
    (611804 return _void[46])
  }
  where {
    unknown call_tmp[823822] "expr temp" "maybe param" "maybe type" "temp"
    (823825 'move' call_tmp[823822](526419 'query' matches[154914] 1))
    unknown call_tmp[823827] "expr temp" "maybe param" "maybe type" "temp"
    (823830 'move' call_tmp[823827](526423 call == qio_regex_string_piece_t[153880] call_tmp[823822]))
    (526427 call & 1 call_tmp[823827])
  }
  function regex[156365](?).search[155095](arg _mt[155108]:_MT[201], arg this[155097]:regex[156365](?), arg text[155100] :
  (434340 call exprType _mt[203] this[155097]), ref arg captures[155105]:_any[141](?) ...) : _unknown[42] "method" "primary method"
  {
    unknown ret[611808] "RVV" "temp"
    unknown call_tmp[823836] "expr temp" "maybe param" "maybe type" "temp"
    (823839 'move' call_tmp[823836](155114 call(434347 call (partial) _search_match _mt[203] this[155097]) text[155100] QIO_REGEX_ANCHOR_UNANCHORED[153850] 1 captures[155105]))
    (611814 'move' ret[611808](611813 'coerce' call_tmp[823836] regexMatch[154054]))
    (611810 return ret[611808])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).search[155122](arg _mt[155130]:_MT[201], arg this[155124]:regex[156365](?), arg text[155127] :
  (434355 call exprType _mt[203] this[155124])) : _unknown[42] "method" "primary method"
  {
    unknown ret[611818] "RVV" "temp"
    unknown dummy[155135] "dead at end of block" "insert auto destroy"
    (646539 'default init var' dummy[155135] int(64)[10])
    (155138 'end of statement')
    unknown call_tmp[823845] "expr temp" "maybe param" "maybe type" "temp"
    (823848 'move' call_tmp[823845](155141 call(434360 call (partial) _search_match _mt[203] this[155124]) text[155127] QIO_REGEX_ANCHOR_UNANCHORED[153850] 0 dummy[155135]))
    (611824 'move' ret[611818](611823 'coerce' call_tmp[823845] regexMatch[154054]))
    gotoReturn _end_search[611816] _end_search[611816]
    (555449 'end of statement' dummy[155135])
    label _end_search[611816]
    (611820 return ret[611818])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).match[155149](arg _mt[155162]:_MT[201], arg this[155151]:regex[156365](?), arg text[155154] :
  (434368 call exprType _mt[203] this[155151]), ref arg captures[155159]:_any[141](?) ...) : _unknown[42] "method" "primary method"
  {
    unknown ret[611830] "RVV" "temp"
    unknown call_tmp[823854] "expr temp" "maybe param" "maybe type" "temp"
    (823857 'move' call_tmp[823854](155168 call(434373 call (partial) _search_match _mt[203] this[155151]) text[155154] QIO_REGEX_ANCHOR_START[153855] 1 captures[155159]))
    (611836 'move' ret[611830](611835 'coerce' call_tmp[823854] regexMatch[154054]))
    (611832 return ret[611830])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).match[155176](arg _mt[155184]:_MT[201], arg this[155178]:regex[156365](?), arg text[155181] :
  (434381 call exprType _mt[203] this[155178])) : _unknown[42] "method" "primary method"
  {
    unknown ret[611840] "RVV" "temp"
    unknown dummy[155189] "dead at end of block" "insert auto destroy"
    (646541 'default init var' dummy[155189] int(64)[10])
    (155192 'end of statement')
    unknown call_tmp[823863] "expr temp" "maybe param" "maybe type" "temp"
    (823866 'move' call_tmp[823863](155195 call(434386 call (partial) _search_match _mt[203] this[155178]) text[155181] QIO_REGEX_ANCHOR_START[153855] 0 dummy[155189]))
    (611846 'move' ret[611840](611845 'coerce' call_tmp[823863] regexMatch[154054]))
    gotoReturn _end_match[611838] _end_match[611838]
    (555452 'end of statement' dummy[155189])
    label _end_match[611838]
    (611842 return ret[611840])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).fullMatch[155203](arg _mt[155216]:_MT[201], arg this[155205]:regex[156365](?), arg text[155208] :
  (434394 call exprType _mt[203] this[155205]), ref arg captures[155213]:_any[141](?) ...) : _unknown[42] "method" "primary method"
  {
    unknown ret[611852] "RVV" "temp"
    unknown call_tmp[823872] "expr temp" "maybe param" "maybe type" "temp"
    (823875 'move' call_tmp[823872](155222 call(434399 call (partial) _search_match _mt[203] this[155205]) text[155208] QIO_REGEX_ANCHOR_BOTH[153860] 1 captures[155213]))
    (611858 'move' ret[611852](611857 'coerce' call_tmp[823872] regexMatch[154054]))
    (611854 return ret[611852])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).fullMatch[155230](arg _mt[155238]:_MT[201], arg this[155232]:regex[156365](?), arg text[155235] :
  (434407 call exprType _mt[203] this[155232])) : _unknown[42] "method" "primary method"
  {
    unknown ret[611862] "RVV" "temp"
    unknown dummy[155243] "dead at end of block" "insert auto destroy"
    (646543 'default init var' dummy[155243] int(64)[10])
    (155246 'end of statement')
    unknown call_tmp[823881] "expr temp" "maybe param" "maybe type" "temp"
    (823884 'move' call_tmp[823881](155249 call(434412 call (partial) _search_match _mt[203] this[155232]) text[155235] QIO_REGEX_ANCHOR_BOTH[153860] 0 dummy[155243]))
    (611868 'move' ret[611862](611867 'coerce' call_tmp[823881] regexMatch[154054]))
    gotoReturn _end_fullMatch[611860] _end_fullMatch[611860]
    (555455 'end of statement' dummy[155243])
    label _end_fullMatch[611860]
    (611864 return ret[611862])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?)._search_match[155257](arg _mt[155273]:_MT[201], arg this[155259]:regex[156365](?), arg text[155262] :
  (434420 call exprType _mt[203] this[155259]), arg anchor[155266] :
  c_int[522], param arg has_captures[155269]:_any[141](?), ref arg captures[155271]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[611874] "RVV" "temp"
    unknown regexCopy[155278] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823890] "expr temp" "maybe param" "maybe type" "temp"
    (823893 'move' call_tmp[823890](434428 call exprType _mt[203] this[155259]))
    unknown call_tmp[823895] "expr temp" "maybe param" "maybe type" "temp"
    (823898 'move' call_tmp[823895](155280 call regex[156365](?) call_tmp[823890]))
    (646545 'default init var' regexCopy[155278] call_tmp[823895])
    (155283 'end of statement')
    unknown call_tmp[823902] "expr temp" "maybe param" "maybe type" "temp"
    (823905 'move' call_tmp[823902](434435 call home _mt[203] this[155259]))
    unknown call_tmp[823907] "expr temp" "maybe param" "maybe type" "temp"
    (823910 'move' call_tmp[823907](434438 call here[135591]))
    unknown call_tmp[823912] "expr temp" "maybe param" "maybe type" "temp"
    (823915 'move' call_tmp[823912](155289 call != call_tmp[823902] call_tmp[823907]))
    unknown call_tmp[823917] "expr temp" "maybe param" "maybe type" "temp"
    (823920 'move' call_tmp[823917](155293 call _cond_test call_tmp[823912]))
    if call_tmp[823917]
    {
      (155284 call = regexCopy[155278] this[155259])
      (555457 'end of statement' regexCopy[155278])
    }
    const localRegex[155299] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682438] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682439] "maybe param" "temp"
    unknown call_tmp[823924] "expr temp" "maybe param" "maybe type" "temp"
    (823927 'move' call_tmp[823924](434442 call home _mt[203] this[155259]))
    unknown call_tmp[823929] "expr temp" "maybe param" "maybe type" "temp"
    (823932 'move' call_tmp[823929](434445 call here[135591]))
    unknown call_tmp[823934] "expr temp" "maybe param" "maybe type" "temp"
    (823937 'move' call_tmp[823934](155300 call != call_tmp[823924] call_tmp[823929]))
    (682444 'move' tmp[682439](682442 call _cond_test call_tmp[823934]))
    if tmp[682439]
    {
      unknown tmp[682446] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682448 'move' tmp[682446](155305 call _regex _mt[203] regexCopy[155278]))
      (682453 'move' tmp[682438](682450 '_paramFoldLogical' tmp[682439] tmp[682446]))
    }
    {
      unknown tmp[682455] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682457 'move' tmp[682455](434449 call _regex _mt[203] this[155259]))
      (682462 'move' tmp[682438](682459 '_paramFoldLogical' tmp[682439] tmp[682455]))
    }
    (646547 'init var' localRegex[155299] tmp[682438])
    (155313 'end of statement')
    unknown ret[155315] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646549] "maybe param" "maybe type" "temp"
    (646555 'move' type_tmp[646549] regexMatch[154054])
    (646551 'init var split decl' ret[155315] type_tmp[646549])
    (155318 'end of statement')
    unknown pos[155320] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646560] "maybe param" "maybe type" "temp"
    (646566 'move' type_tmp[646560] byteIndex[18611])
    (646562 'init var split decl' pos[155320] type_tmp[646560])
    (155323 'end of statement')
    unknown endpos[155325] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646571] "maybe param" "maybe type" "temp"
    (646577 'move' type_tmp[646571] byteIndex[18611])
    (646573 'init var split decl' endpos[155325] type_tmp[646571])
    (155328 'end of statement')
    (646568 'init var split init' pos[155320] 0 type_tmp[646560])
    (555460 'end of statement' pos[155320])
    unknown call_tmp[823945] "expr temp" "maybe param" "maybe type" "temp"
    (823948 'move' call_tmp[823945](155340 call numBytes _mt[203] text[155262]))
    unknown call_tmp[823950] "maybe param" "maybe type" "temp"
    (823953 'move' call_tmp[823950](155336 call + pos[155320] call_tmp[823945]))
    (646579 'init var split init' endpos[155325] call_tmp[823950] type_tmp[646571])
    (555462 'end of statement' endpos[155325] pos[155320])
    unknown nmatches[155344] "dead at end of block" "param"
    unknown tmp[682469] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682470] "maybe param" "temp"
    (682475 'move' tmp[682470](682473 call _cond_test has_captures[155269]))
    if tmp[682470]
    {
      unknown tmp[682477] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[823957] "expr temp" "maybe param" "maybe type" "temp"
      (823960 'move' call_tmp[823957](155350 call size _mt[203] captures[155271]))
      (682479 'move' tmp[682477](155346 call + 1 call_tmp[823957]))
      (682484 'move' tmp[682469](682481 '_paramFoldLogical' tmp[682470] tmp[682477]))
    }
    {
      (682489 'move' tmp[682469](682486 '_paramFoldLogical' tmp[682470] 1))
    }
    (646582 'init var' nmatches[155344] tmp[682469])
    (155358 'end of statement')
    unknown matches[155360] "dead at end of block" "insert auto destroy"
    unknown call_tmp[823962] "expr temp" "maybe param" "maybe type" "temp"
    (823965 'move' call_tmp[823962](155362 call c_array[47643](?) qio_regex_string_piece_t[153880] nmatches[155344]))
    (646584 'default init var' matches[155360] call_tmp[823962])
    (155366 'end of statement')
    unknown got[155368] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646586] "maybe param" "maybe type" "temp"
    (646592 'move' type_tmp[646586] bool[19])
    (646588 'init var split decl' got[155368] type_tmp[646586])
    (155371 'end of statement' regexCopy[155278])
    unknown call_tmp[823969] "expr temp" "maybe param" "maybe type" "temp"
    (823972 'move' call_tmp[823969](155382 call(155379 call (partial) localize _mt[203] text[155262])))
    unknown call_tmp[823976] "expr temp" "maybe param" "maybe type" "temp"
    (823979 'move' call_tmp[823976](155386 call(155383 call (partial) c_str _mt[203] call_tmp[823969])))
    unknown call_tmp[823983] "expr temp" "maybe param" "maybe type" "temp"
    (823986 'move' call_tmp[823983](155388 call numBytes _mt[203] text[155262]))
    unknown call_tmp[823988] "expr temp" "maybe param" "maybe type" "temp"
    (823991 'move' call_tmp[823988](155391 call : pos[155320] int(64)[10]))
    unknown call_tmp[823993] "expr temp" "maybe param" "maybe type" "temp"
    (823996 'move' call_tmp[823993](155395 call : endpos[155325] int(64)[10]))
    unknown call_tmp[823998] "expr temp" "maybe param" "maybe type" "temp"
    (824001 'move' call_tmp[823998](155401 call matches[155360] 0))
    unknown call_tmp[824003] "maybe param" "maybe type" "temp"
    (824006 'move' call_tmp[824003](155376 call qio_regex_match localRegex[155299] call_tmp[823976] call_tmp[823983] call_tmp[823988] call_tmp[823993] anchor[155266] call_tmp[823998] nmatches[155344]))
    (646594 'init var split init' got[155368] call_tmp[824003] type_tmp[646586])
    (555465 'end of statement' got[155368] localRegex[155299] pos[155320] endpos[155325] matches[155360])
    unknown call_tmp[824008] "expr temp" "maybe param" "maybe type" "temp"
    (824011 'move' call_tmp[824008](155411 call _cond_test has_captures[155269]))
    if call_tmp[824008]
    {
      (155405 call(434473 call (partial) _handle_captures _mt[203] this[155259]) text[155262] matches[155360] captures[155271])
      (555471 'end of statement' matches[155360])
    }
    unknown call_tmp[824015] "expr temp" "maybe param" "maybe type" "temp"
    (824018 'move' call_tmp[824015](155426 call matches[155360] 0))
    unknown call_tmp[824022] "expr temp" "maybe param" "maybe type" "temp"
    (824025 'move' call_tmp[824022](155428 call offset _mt[203] call_tmp[824015]))
    unknown call_tmp[824027] "expr temp" "maybe param" "maybe type" "temp"
    (824030 'move' call_tmp[824027](155423 call : call_tmp[824022] byteIndex[18611]))
    unknown call_tmp[824032] "expr temp" "maybe param" "maybe type" "temp"
    (824035 'move' call_tmp[824032](155433 call matches[155360] 0))
    unknown call_tmp[824039] "expr temp" "maybe param" "maybe type" "temp"
    (824042 'move' call_tmp[824039](155435 call len _mt[203] call_tmp[824032]))
    unknown call_tmp[824044] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (824047 'move' call_tmp[824044](1000165 'new' regexMatch[154054] got[155368] call_tmp[824027] call_tmp[824039]))
    (646557 'init var split init' ret[155315] call_tmp[824044] type_tmp[646549])
    (555473 'end of statement' ret[155315] got[155368] matches[155360])
    (611880 'move' ret[611874](611879 'coerce' ret[155315] regexMatch[154054]))
    gotoReturn _end__search_match[611872] _end__search_match[611872]
    (555477 'end of statement' ret[155315])
    label _end__search_match[611872]
    (611876 return ret[611874])
  }
  { scopeless type
    regexMatch[154054]
  }
  function regex[156365](?).split[155443](arg _mt[155457]:_MT[201], arg this[155445]:regex[156365](?), arg text[155448] :
  (434489 call exprType _mt[203] this[155445]), arg maxsplit[155453]:int(64)[10] =
  0) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611886] "RVV" "temp"
    unknown regexCopy[155461] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824053] "expr temp" "maybe param" "maybe type" "temp"
    (824056 'move' call_tmp[824053](434495 call exprType _mt[203] this[155445]))
    unknown call_tmp[824058] "expr temp" "maybe param" "maybe type" "temp"
    (824061 'move' call_tmp[824058](155463 call regex[156365](?) call_tmp[824053]))
    (646597 'default init var' regexCopy[155461] call_tmp[824058])
    (155466 'end of statement')
    unknown call_tmp[824065] "expr temp" "maybe param" "maybe type" "temp"
    (824068 'move' call_tmp[824065](434502 call home _mt[203] this[155445]))
    unknown call_tmp[824070] "expr temp" "maybe param" "maybe type" "temp"
    (824073 'move' call_tmp[824070](434505 call here[135591]))
    unknown call_tmp[824075] "expr temp" "maybe param" "maybe type" "temp"
    (824078 'move' call_tmp[824075](155472 call != call_tmp[824065] call_tmp[824070]))
    unknown call_tmp[824080] "expr temp" "maybe param" "maybe type" "temp"
    (824083 'move' call_tmp[824080](155476 call _cond_test call_tmp[824075]))
    if call_tmp[824080]
    {
      (155467 call = regexCopy[155461] this[155445])
      (555479 'end of statement' regexCopy[155461])
    }
    const localRegex[155482] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682496] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682497] "maybe param" "temp"
    unknown call_tmp[824087] "expr temp" "maybe param" "maybe type" "temp"
    (824090 'move' call_tmp[824087](434509 call home _mt[203] this[155445]))
    unknown call_tmp[824092] "expr temp" "maybe param" "maybe type" "temp"
    (824095 'move' call_tmp[824092](434512 call here[135591]))
    unknown call_tmp[824097] "expr temp" "maybe param" "maybe type" "temp"
    (824100 'move' call_tmp[824097](155483 call != call_tmp[824087] call_tmp[824092]))
    (682502 'move' tmp[682497](682500 call _cond_test call_tmp[824097]))
    if tmp[682497]
    {
      unknown tmp[682504] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682506 'move' tmp[682504](155488 call _regex _mt[203] regexCopy[155461]))
      (682511 'move' tmp[682496](682508 '_paramFoldLogical' tmp[682497] tmp[682504]))
    }
    {
      unknown tmp[682513] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682515 'move' tmp[682513](434516 call _regex _mt[203] this[155445]))
      (682520 'move' tmp[682496](682517 '_paramFoldLogical' tmp[682497] tmp[682513]))
    }
    (646599 'init var' localRegex[155482] tmp[682496])
    (155496 'end of statement')
    unknown call_tmp[824106] "maybe param" "maybe type" "temp"
    (824109 'move' call_tmp[824106](155500 call qio_regex_get_ncaptures localRegex[155482]))
    unknown ncaptures[155498] "dead at end of block" "insert auto destroy"
    (646601 'init var' ncaptures[155498] call_tmp[824106])
    (155503 'end of statement')
    unknown call_tmp[824111] "maybe param" "maybe type" "temp"
    (824114 'move' call_tmp[824111](155506 call + 1 ncaptures[155498]))
    unknown nmatches[155505] "dead at end of block" "insert auto destroy"
    (646603 'init var' nmatches[155505] call_tmp[824111])
    (155511 'end of statement')
    unknown pos[155513] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646605] "maybe param" "maybe type" "temp"
    (646611 'move' type_tmp[646605] byteIndex[18611])
    (646607 'init var split decl' pos[155513] type_tmp[646605])
    (155516 'end of statement')
    unknown endpos[155518] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646616] "maybe param" "maybe type" "temp"
    (646622 'move' type_tmp[646616] byteIndex[18611])
    (646618 'init var split decl' endpos[155518] type_tmp[646616])
    (155521 'end of statement')
    unknown last[155523] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646627] "maybe param" "maybe type" "temp"
    (646633 'move' type_tmp[646627] byteIndex[18611])
    (646629 'init var split decl' last[155523] type_tmp[646627])
    (155526 'end of statement')
    unknown call_tmp[824118] "maybe param" "maybe type" "temp"
    (824121 'move' call_tmp[824118](155533 call(155530 call (partial) localize _mt[203] text[155448])))
    unknown localText[155528] "dead at end of block" "insert auto destroy"
    (646638 'init var' localText[155528] call_tmp[824118])
    (155535 'end of statement')
    unknown call_tmp[824125] "expr temp" "maybe param" "maybe type" "temp"
    (824128 'move' call_tmp[824125](155545 call(155542 call (partial) safeCast _mt[203] nmatches[155505]) c_size_t[614]))
    unknown call_tmp[824130] "maybe param" "maybe type" "temp"
    (824133 'move' call_tmp[824130](155539 call allocate qio_regex_string_piece_t[153880] call_tmp[824125]))
    unknown matches[155537] "dead at end of block" "insert auto destroy"
    (646640 'init var' matches[155537] call_tmp[824130])
    (155548 'end of statement')
    Defer
    {
      { scopeless
        (155550 call deallocate matches[155537])
        (555485 'end of statement' matches[155537])
      }
    }
    (646613 'init var split init' pos[155513] 0 type_tmp[646605])
    (555487 'end of statement' pos[155513])
    unknown call_tmp[824137] "expr temp" "maybe param" "maybe type" "temp"
    (824140 'move' call_tmp[824137](155566 call numBytes _mt[203] localText[155528]))
    unknown call_tmp[824142] "maybe param" "maybe type" "temp"
    (824145 'move' call_tmp[824142](155562 call + pos[155513] call_tmp[824137]))
    (646624 'init var split init' endpos[155518] call_tmp[824142] type_tmp[646616])
    (555489 'end of statement' endpos[155518] pos[155513] localText[155528])
    (646635 'init var split init' last[155523] 0 type_tmp[646627])
    (555493 'end of statement' last[155523])
    unknown splits[155574] "dead at end of block" "insert auto destroy"
    (646642 'init var' splits[155574] 0)
    (155577 'end of statement')
    unknown maxsplits[155579] "dead at end of block" "insert auto destroy"
    (646644 'init var' maxsplits[155579] maxsplit[155453])
    (155582 'end of statement' regexCopy[155461] localRegex[155482] ncaptures[155498] nmatches[155505])
    unknown call_tmp[824147] "expr temp" "maybe param" "maybe type" "temp"
    (824150 'move' call_tmp[824147](155590 call == maxsplit[155453] 0))
    unknown call_tmp[824152] "expr temp" "maybe param" "maybe type" "temp"
    (824155 'move' call_tmp[824152](155594 call _cond_test call_tmp[824147]))
    if call_tmp[824152]
    {
      unknown call_tmp[824157] "expr temp" "maybe param" "maybe type" "temp"
      (824160 'move' call_tmp[824157](155587 call max int(64)[10]))
      (155583 call = maxsplits[155579] call_tmp[824157])
      (555495 'end of statement' maxsplits[155579])
    }
    {
      unknown tmp[155781] "temp"
      unknown tmp[489429] "maybe param" "temp"
      (489440 'move' tmp[489429](155810 call < splits[155574] maxsplits[155579]))
      unknown call_tmp[824162] "expr temp" "maybe param" "maybe type" "temp"
      (824165 'move' call_tmp[824162](489442 call _cond_invalid tmp[489429]))
      if call_tmp[824162]
      {
        (489445 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[682527] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[682528] "maybe param" "temp"
      unknown call_tmp[824167] "expr temp" "maybe param" "maybe type" "temp"
      (824170 'move' call_tmp[824167](489430 call isTrue tmp[489429]))
      (682533 'move' tmp[682528](682531 call _cond_test call_tmp[824167]))
      if tmp[682528]
      {
        unknown tmp[682535] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[824172] "expr temp" "maybe param" "maybe type" "temp"
        (824175 'move' call_tmp[824172](155814 call <= pos[155513] endpos[155518]))
        (682537 'move' tmp[682535](489433 call isTrue call_tmp[824172]))
        (682542 'move' tmp[682527](682539 '_paramFoldLogical' tmp[682528] tmp[682535]))
      }
      {
        (682547 'move' tmp[682527](682544 '_paramFoldLogical' tmp[682528] 0))
      }
      (155817 'move' tmp[155781](155806 call _cond_test tmp[682527]))
      WhileDo[155786]
      {
        {
          unknown call_tmp[824179] "expr temp" "maybe param" "maybe type" "temp"
          (824182 'move' call_tmp[824179](155619 call(155616 call (partial) c_str _mt[203] localText[155528])))
          unknown call_tmp[824186] "expr temp" "maybe param" "maybe type" "temp"
          (824189 'move' call_tmp[824186](155621 call numBytes _mt[203] localText[155528]))
          unknown call_tmp[824191] "expr temp" "maybe param" "maybe type" "temp"
          (824194 'move' call_tmp[824191](155624 call : pos[155513] int(64)[10]))
          unknown call_tmp[824196] "expr temp" "maybe param" "maybe type" "temp"
          (824199 'move' call_tmp[824196](155628 call : endpos[155518] int(64)[10]))
          unknown call_tmp[824201] "expr temp" "maybe param" "maybe type" "temp"
          (824204 'move' call_tmp[824201](155634 call matches[155537] 0))
          unknown call_tmp[824206] "maybe param" "maybe type" "temp"
          (824209 'move' call_tmp[824206](155613 call qio_regex_match localRegex[155482] call_tmp[824179] call_tmp[824186] call_tmp[824191] call_tmp[824196] QIO_REGEX_ANCHOR_UNANCHORED[153850] call_tmp[824201] nmatches[155505]))
          unknown got[155611] "dead at end of block" "insert auto destroy"
          (646646 'init var' got[155611] call_tmp[824206])
          (155638 'end of statement')
          unknown call_tmp[824211] "expr temp" "maybe param" "maybe type" "temp"
          (824214 'move' call_tmp[824211](155642 call ! got[155611]))
          unknown call_tmp[824216] "expr temp" "maybe param" "maybe type" "temp"
          (824219 'move' call_tmp[824216](155645 call _cond_test call_tmp[824211]))
          if call_tmp[824216]
          {
            break _breakLabel[155785] _breakLabel[155785]
          }
          (155650 call += splits[155574] 1)
          (555504 'end of statement' splits[155574])
          unknown call_tmp[824221] "expr temp" "maybe param" "maybe type" "temp"
          (824224 'move' call_tmp[824221](155658 call matches[155537] 0))
          unknown call_tmp[824228] "maybe param" "maybe type" "temp"
          (824231 'move' call_tmp[824228](155660 call offset _mt[203] call_tmp[824221]))
          unknown splitstart[155655] "dead at end of block" "insert auto destroy"
          (646648 'init var' splitstart[155655] call_tmp[824228] byteIndex[18611])
          (155664 'end of statement' localRegex[155482] localText[155528] pos[155513] endpos[155518] matches[155537] nmatches[155505] matches[155537])
          Try!
          {
            {
              unknown yret[611890] "YVV" "temp"
              unknown call_tmp[824233] "expr temp" "maybe param" "maybe type" "temp"
              (824236 'move' call_tmp[824233](155671 call chpl__nudgeHighBound splitstart[155655]))
              unknown call_tmp[824238] "expr temp" "maybe param" "maybe type" "temp"
              (824241 'move' call_tmp[824238](155673 call chpl_build_bounded_range last[155523] call_tmp[824233]))
              unknown call_tmp[824243] "expr temp" "maybe param" "maybe type" "temp"
              (824246 'move' call_tmp[824243](155668 call text[155448] call_tmp[824238]))
              (611893 'move' yret[611890](611892 'deref' call_tmp[824243]))
              (155666 yield yret[611890])
              (555507 'end of statement' last[155523] splitstart[155655])
            }
          }
          unknown call_tmp[824248] "expr temp" "maybe param" "maybe type" "temp"
          (824251 'move' call_tmp[824248](155685 call matches[155537] 0))
          unknown call_tmp[824255] "expr temp" "maybe param" "maybe type" "temp"
          (824258 'move' call_tmp[824255](155687 call len _mt[203] call_tmp[824248]))
          unknown call_tmp[824260] "expr temp" "maybe param" "maybe type" "temp"
          (824263 'move' call_tmp[824260](155681 call + splitstart[155655] call_tmp[824255]))
          (155678 call = last[155523] call_tmp[824260])
          (555510 'end of statement' last[155523] splitstart[155655] matches[155537])
          {
            unknown _indexOfInterest[155725] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[155726] "expr temp" "temp"
            unknown call_tmp[824265] "expr temp" "maybe param" "maybe type" "temp"
            (824268 'move' call_tmp[824265](155739 call chpl_direct_range_iter 1 ncaptures[155498]))
            (155735 'move' _iterator[155726](155733 call _getIterator call_tmp[824265]))
            Defer
            {
              {
                (155754 call _freeIterator _iterator[155726])
              }
            }
            { scopeless type
              (155744 'move' _indexOfInterest[155725](155741 call iteratorIndex _iterator[155726]))
            }
            ForLoop[155727]
            {
              unknown i[155690] "index var" "insert auto destroy"
              (555515 'end of statement')
              (155749 'move' i[155690] _indexOfInterest[155725])
              (555516 'end of statement' i[155690])
              {
                unknown yret[611896] "YVV" "temp"
                unknown call_tmp[824270] "expr temp" "maybe param" "maybe type" "temp"
                (824273 'move' call_tmp[824270](155708 call matches[155537] i[155690]))
                unknown call_tmp[824275] "expr temp" "maybe param" "maybe type" "temp"
                (824278 'move' call_tmp[824275](155706 call qio_regex_string_piece_isnull call_tmp[824270]))
                unknown call_tmp[824280] "expr temp" "maybe param" "maybe type" "temp"
                (824283 'move' call_tmp[824280](155703 call ! call_tmp[824275]))
                unknown call_tmp[824285] "expr temp" "maybe param" "maybe type" "temp"
                (824288 'move' call_tmp[824285](155713 call matches[155537] i[155690]))
                unknown call_tmp[824292] "expr temp" "maybe param" "maybe type" "temp"
                (824295 'move' call_tmp[824292](155715 call offset _mt[203] call_tmp[824285]))
                unknown call_tmp[824297] "expr temp" "maybe param" "maybe type" "temp"
                (824300 'move' call_tmp[824297](155710 call : call_tmp[824292] byteIndex[18611]))
                unknown call_tmp[824302] "expr temp" "maybe param" "maybe type" "temp"
                (824305 'move' call_tmp[824302](155720 call matches[155537] i[155690]))
                unknown call_tmp[824309] "expr temp" "maybe param" "maybe type" "temp"
                (824312 'move' call_tmp[824309](155722 call len _mt[203] call_tmp[824302]))
                unknown call_tmp[824314] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (824317 'move' call_tmp[824314](1000166 'new' regexMatch[154054] call_tmp[824280] call_tmp[824297] call_tmp[824309]))
                unknown call_tmp[824319] "expr temp" "maybe param" "maybe type" "temp"
                (824322 'move' call_tmp[824319](155699 call text[155448] call_tmp[824314]))
                (611899 'move' yret[611896](611898 'deref' call_tmp[824319]))
                (155697 yield yret[611896])
                (555518 'end of statement' matches[155537] i[155690])
              }
              label _continueLabel[155730]
              _indexOfInterest[155725]
              _iterator[155726]
            }
            label _breakLabel[155731]
          }
          unknown call_tmp[824324] "expr temp" "maybe param" "maybe type" "temp"
          (824327 'move' call_tmp[824324](155767 call matches[155537] 0))
          unknown call_tmp[824331] "expr temp" "maybe param" "maybe type" "temp"
          (824334 'move' call_tmp[824331](155769 call offset _mt[203] call_tmp[824324]))
          unknown call_tmp[824336] "expr temp" "maybe param" "maybe type" "temp"
          (824339 'move' call_tmp[824336](155776 call matches[155537] 0))
          unknown call_tmp[824343] "expr temp" "maybe param" "maybe type" "temp"
          (824346 'move' call_tmp[824343](155778 call len _mt[203] call_tmp[824336]))
          unknown call_tmp[824348] "expr temp" "maybe param" "maybe type" "temp"
          (824351 'move' call_tmp[824348](155773 call max 1 call_tmp[824343]))
          unknown call_tmp[824353] "expr temp" "maybe param" "maybe type" "temp"
          (824356 'move' call_tmp[824353](155764 call + call_tmp[824331] call_tmp[824348]))
          (155761 call = pos[155513] call_tmp[824353])
          (555521 'end of statement' pos[155513] matches[155537])
        }
        label _continueLabel[155784]
        unknown tmp[489408] "maybe param" "temp"
        (489419 'move' tmp[489408](155794 call < splits[155574] maxsplits[155579]))
        unknown call_tmp[824358] "expr temp" "maybe param" "maybe type" "temp"
        (824361 'move' call_tmp[824358](489421 call _cond_invalid tmp[489408]))
        if call_tmp[824358]
        {
          (489424 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682554] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682555] "maybe param" "temp"
        unknown call_tmp[824363] "expr temp" "maybe param" "maybe type" "temp"
        (824366 'move' call_tmp[824363](489409 call isTrue tmp[489408]))
        (682560 'move' tmp[682555](682558 call _cond_test call_tmp[824363]))
        if tmp[682555]
        {
          unknown tmp[682562] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[824368] "expr temp" "maybe param" "maybe type" "temp"
          (824371 'move' call_tmp[824368](155798 call <= pos[155513] endpos[155518]))
          (682564 'move' tmp[682562](489412 call isTrue call_tmp[824368]))
          (682569 'move' tmp[682554](682566 '_paramFoldLogical' tmp[682555] tmp[682562]))
        }
        {
          (682574 'move' tmp[682554](682571 '_paramFoldLogical' tmp[682555] 0))
        }
        (155801 'move' tmp[155781](155790 call _cond_test tmp[682554]))
        tmp[155781]
      }
      label _breakLabel[155785]
    }
    unknown call_tmp[824373] "expr temp" "maybe param" "maybe type" "temp"
    (824376 'move' call_tmp[824373](155852 call <= last[155523] endpos[155518]))
    unknown call_tmp[824378] "expr temp" "maybe param" "maybe type" "temp"
    (824381 'move' call_tmp[824378](155856 call _cond_test call_tmp[824373]))
    if call_tmp[824378]
    {
      unknown call_tmp[824385] "expr temp" "maybe param" "maybe type" "temp"
      (824388 'move' call_tmp[824385](155845 call numBytes _mt[203] text[155448]))
      unknown call_tmp[824390] "expr temp" "maybe param" "maybe type" "temp"
      (824393 'move' call_tmp[824390](155841 call >= last[155523] call_tmp[824385]))
      unknown call_tmp[824395] "expr temp" "maybe param" "maybe type" "temp"
      (824398 'move' call_tmp[824395](155848 call _cond_test call_tmp[824390]))
      if call_tmp[824395]
      {
        unknown yret[611902] "YVV" "temp"
        unknown call_tmp[824402] "expr temp" "maybe param" "maybe type" "temp"
        (824405 'move' call_tmp[824402](434573 call exprType _mt[203] this[155445]))
        unknown call_tmp[824407] "expr temp" "maybe param" "maybe type" "temp"
        (824410 'move' call_tmp[824407](155823 call : "" call_tmp[824402]))
        (611905 'move' yret[611902](611904 'deref' call_tmp[824407]))
        (155822 yield yret[611902])
      }
      {
        Try!
        {
          {
            unknown yret[611908] "YVV" "temp"
            unknown call_tmp[824412] "expr temp" "maybe param" "maybe type" "temp"
            (824415 'move' call_tmp[824412](155834 call chpl__nudgeHighBound endpos[155518]))
            unknown call_tmp[824417] "expr temp" "maybe param" "maybe type" "temp"
            (824420 'move' call_tmp[824417](155836 call chpl_build_bounded_range last[155523] call_tmp[824412]))
            unknown call_tmp[824422] "expr temp" "maybe param" "maybe type" "temp"
            (824425 'move' call_tmp[824422](155831 call text[155448] call_tmp[824417]))
            (611911 'move' yret[611908](611910 'deref' call_tmp[824422]))
            (155829 yield yret[611908])
            (555526 'end of statement' last[155523] endpos[155518])
          }
        }
      }
    }
    (611888 return ret[611886])
  }
  function regex[156365](?).matches[155862](arg _mt[155882]:_MT[201], arg this[155864]:regex[156365](?), arg text[155867] :
  (434584 call exprType _mt[203] this[155864]), param arg numCaptures[155871] :
  0 =
  0, arg maxMatches[155878]:int(64)[10] =
  (155876 call max int(64)[10])) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611916] "RVV" "temp"
    unknown regexCopy[155886] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824431] "expr temp" "maybe param" "maybe type" "temp"
    (824434 'move' call_tmp[824431](434590 call exprType _mt[203] this[155864]))
    unknown call_tmp[824436] "expr temp" "maybe param" "maybe type" "temp"
    (824439 'move' call_tmp[824436](155888 call regex[156365](?) call_tmp[824431]))
    (646650 'default init var' regexCopy[155886] call_tmp[824436])
    (155891 'end of statement')
    unknown call_tmp[824443] "expr temp" "maybe param" "maybe type" "temp"
    (824446 'move' call_tmp[824443](434597 call home _mt[203] this[155864]))
    unknown call_tmp[824448] "expr temp" "maybe param" "maybe type" "temp"
    (824451 'move' call_tmp[824448](434600 call here[135591]))
    unknown call_tmp[824453] "expr temp" "maybe param" "maybe type" "temp"
    (824456 'move' call_tmp[824453](155897 call != call_tmp[824443] call_tmp[824448]))
    unknown call_tmp[824458] "expr temp" "maybe param" "maybe type" "temp"
    (824461 'move' call_tmp[824458](155901 call _cond_test call_tmp[824453]))
    if call_tmp[824458]
    {
      (155892 call = regexCopy[155886] this[155864])
      (555529 'end of statement' regexCopy[155886])
    }
    const localRegex[155907] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682581] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682582] "maybe param" "temp"
    unknown call_tmp[824465] "expr temp" "maybe param" "maybe type" "temp"
    (824468 'move' call_tmp[824465](434604 call home _mt[203] this[155864]))
    unknown call_tmp[824470] "expr temp" "maybe param" "maybe type" "temp"
    (824473 'move' call_tmp[824470](434607 call here[135591]))
    unknown call_tmp[824475] "expr temp" "maybe param" "maybe type" "temp"
    (824478 'move' call_tmp[824475](155908 call != call_tmp[824465] call_tmp[824470]))
    (682587 'move' tmp[682582](682585 call _cond_test call_tmp[824475]))
    if tmp[682582]
    {
      unknown tmp[682589] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682591 'move' tmp[682589](155913 call _regex _mt[203] regexCopy[155886]))
      (682596 'move' tmp[682581](682593 '_paramFoldLogical' tmp[682582] tmp[682589]))
    }
    {
      unknown tmp[682598] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682600 'move' tmp[682598](434611 call _regex _mt[203] this[155864]))
      (682605 'move' tmp[682581](682602 '_paramFoldLogical' tmp[682582] tmp[682598]))
    }
    (646652 'init var' localRegex[155907] tmp[682581])
    (155921 'end of statement')
    unknown call_tmp[824484] "maybe param" "maybe type" "temp"
    (824487 'move' call_tmp[824484](155924 call + 1 numCaptures[155871]))
    unknown nMatches[155923] "dead at end of block" "param"
    (646654 'init var' nMatches[155923] call_tmp[824484])
    (155929 'end of statement')
    unknown matches[155931] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824489] "expr temp" "maybe param" "maybe type" "temp"
    (824492 'move' call_tmp[824489](155933 call c_array[47643](?) qio_regex_string_piece_t[153880] nMatches[155923]))
    (646656 'default init var' matches[155931] call_tmp[824489])
    (155937 'end of statement')
    unknown call_tmp[824496] "maybe param" "maybe type" "temp"
    (824499 'move' call_tmp[824496](155944 call(155941 call (partial) localize _mt[203] text[155867])))
    const localText[155939] "dead at end of block" "const" "insert auto destroy"
    (646658 'init var' localText[155939] call_tmp[824496])
    (155946 'end of statement')
    unknown call_tmp[824503] "maybe param" "maybe type" "temp"
    (824506 'move' call_tmp[824503](155950 call numBytes _mt[203] localText[155939]))
    const textLength[155948] "dead at end of block" "const" "insert auto destroy"
    (646660 'init var' textLength[155948] call_tmp[824503])
    (155954 'end of statement')
    const endPos[155956] "dead at end of block" "const" "insert auto destroy"
    (646662 'init var' endPos[155956] textLength[155948])
    (155959 'end of statement')
    unknown nFound[155961] "dead at end of block" "insert auto destroy"
    (646664 'init var' nFound[155961] 0)
    (155964 'end of statement')
    unknown cur[155966] "dead at end of block" "insert auto destroy"
    (646666 'init var' cur[155966] 0)
    (155969 'end of statement' regexCopy[155886] localText[155939] textLength[155948])
    {
      unknown tmp[156119] "temp"
      unknown tmp[489471] "maybe param" "temp"
      (489482 'move' tmp[489471](156148 call < nFound[155961] maxMatches[155878]))
      unknown call_tmp[824508] "expr temp" "maybe param" "maybe type" "temp"
      (824511 'move' call_tmp[824508](489484 call _cond_invalid tmp[489471]))
      if call_tmp[824508]
      {
        (489487 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[682612] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[682613] "maybe param" "temp"
      unknown call_tmp[824513] "expr temp" "maybe param" "maybe type" "temp"
      (824516 'move' call_tmp[824513](489472 call isTrue tmp[489471]))
      (682618 'move' tmp[682613](682616 call _cond_test call_tmp[824513]))
      if tmp[682613]
      {
        unknown tmp[682620] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[824518] "expr temp" "maybe param" "maybe type" "temp"
        (824521 'move' call_tmp[824518](156152 call <= cur[155966] endPos[155956]))
        (682622 'move' tmp[682620](489475 call isTrue call_tmp[824518]))
        (682627 'move' tmp[682612](682624 '_paramFoldLogical' tmp[682613] tmp[682620]))
      }
      {
        (682632 'move' tmp[682612](682629 '_paramFoldLogical' tmp[682613] 0))
      }
      (156155 'move' tmp[156119](156144 call _cond_test tmp[682612]))
      WhileDo[156124]
      {
        {
          unknown call_tmp[824525] "expr temp" "maybe param" "maybe type" "temp"
          (824528 'move' call_tmp[824525](155990 call(155987 call (partial) c_str _mt[203] localText[155939])))
          unknown call_tmp[824530] "expr temp" "maybe param" "maybe type" "temp"
          (824533 'move' call_tmp[824530](155992 call : cur[155966] int(64)[10]))
          unknown call_tmp[824535] "expr temp" "maybe param" "maybe type" "temp"
          (824538 'move' call_tmp[824535](155996 call : endPos[155956] int(64)[10]))
          unknown call_tmp[824540] "expr temp" "maybe param" "maybe type" "temp"
          (824543 'move' call_tmp[824540](156002 call matches[155931] 0))
          unknown call_tmp[824545] "maybe param" "maybe type" "temp"
          (824548 'move' call_tmp[824545](155984 call qio_regex_match localRegex[155907] call_tmp[824525] textLength[155948] call_tmp[824530] call_tmp[824535] QIO_REGEX_ANCHOR_UNANCHORED[153850] call_tmp[824540] nMatches[155923]))
          unknown got[155982] "dead at end of block" "insert auto destroy"
          (646668 'init var' got[155982] call_tmp[824545])
          (156006 'end of statement')
          unknown call_tmp[824550] "expr temp" "maybe param" "maybe type" "temp"
          (824553 'move' call_tmp[824550](156010 call ! got[155982]))
          unknown call_tmp[824555] "expr temp" "maybe param" "maybe type" "temp"
          (824558 'move' call_tmp[824555](156013 call _cond_test call_tmp[824550]))
          if call_tmp[824555]
          {
            break _breakLabel[156123] _breakLabel[156123]
          }
          unknown ret[156019] "dead at end of block" "insert auto destroy"
          unknown call_tmp[824560] "expr temp" "maybe param" "maybe type" "temp"
          (824563 'move' call_tmp[824560](156020 call * nMatches[155923] regexMatch[154054]))
          (646670 'default init var' ret[156019] call_tmp[824560])
          (156025 'end of statement' localRegex[155907] localText[155939] textLength[155948] cur[155966] endPos[155956] matches[155931])
          {
            unknown _indexOfInterest[156057] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[156058] "expr temp" "temp"
            unknown call_tmp[824565] "expr temp" "maybe param" "maybe type" "temp"
            (824568 'move' call_tmp[824565](156071 call chpl_direct_range_iter 0 numCaptures[155871]))
            (156067 'move' _iterator[156058](156065 call _getIterator call_tmp[824565]))
            Defer
            {
              {
                (156086 call _freeIterator _iterator[156058])
              }
            }
            { scopeless type
              (156076 'move' _indexOfInterest[156057](156073 call iteratorIndex _iterator[156058]))
            }
            ForLoop[156059]
            {
              unknown i[156026] "index var" "insert auto destroy"
              (555542 'end of statement')
              (156081 'move' i[156026] _indexOfInterest[156057])
              (555543 'end of statement' i[156026])
              {
                unknown call_tmp[824570] "expr temp" "maybe param" "maybe type" "temp"
                (824573 'move' call_tmp[824570](156036 call ret[156019] i[156026]))
                unknown call_tmp[824575] "expr temp" "maybe param" "maybe type" "temp"
                (824578 'move' call_tmp[824575](156045 call matches[155931] i[156026]))
                unknown call_tmp[824582] "expr temp" "maybe param" "maybe type" "temp"
                (824585 'move' call_tmp[824582](156047 call offset _mt[203] call_tmp[824575]))
                unknown call_tmp[824587] "expr temp" "maybe param" "maybe type" "temp"
                (824590 'move' call_tmp[824587](156042 call : call_tmp[824582] byteIndex[18611]))
                unknown call_tmp[824592] "expr temp" "maybe param" "maybe type" "temp"
                (824595 'move' call_tmp[824592](156052 call matches[155931] i[156026]))
                unknown call_tmp[824599] "expr temp" "maybe param" "maybe type" "temp"
                (824602 'move' call_tmp[824599](156054 call len _mt[203] call_tmp[824592]))
                unknown call_tmp[824604] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (824607 'move' call_tmp[824604](1000167 'new' regexMatch[154054] got[155982] call_tmp[824587] call_tmp[824599]))
                (156033 call = call_tmp[824570] call_tmp[824604])
                (555545 'end of statement' ret[156019] i[156026] got[155982] matches[155931] i[156026] matches[155931] i[156026])
              }
              label _continueLabel[156062]
              _indexOfInterest[156057]
              _iterator[156058]
            }
            label _breakLabel[156063]
          }
          unknown yret[611920] "YVV" "temp"
          (611923 'move' yret[611920](611922 'deref' ret[156019]))
          (156093 yield yret[611920])
          (555553 'end of statement' ret[156019])
          unknown call_tmp[824609] "expr temp" "maybe param" "maybe type" "temp"
          (824612 'move' call_tmp[824609](156101 call matches[155931] 0))
          unknown call_tmp[824616] "expr temp" "maybe param" "maybe type" "temp"
          (824619 'move' call_tmp[824616](156103 call offset _mt[203] call_tmp[824609]))
          unknown call_tmp[824621] "expr temp" "maybe param" "maybe type" "temp"
          (824624 'move' call_tmp[824621](156110 call matches[155931] 0))
          unknown call_tmp[824628] "expr temp" "maybe param" "maybe type" "temp"
          (824631 'move' call_tmp[824628](156112 call len _mt[203] call_tmp[824621]))
          unknown call_tmp[824633] "expr temp" "maybe param" "maybe type" "temp"
          (824636 'move' call_tmp[824633](156107 call max 1 call_tmp[824628]))
          unknown call_tmp[824638] "expr temp" "maybe param" "maybe type" "temp"
          (824641 'move' call_tmp[824638](156098 call + call_tmp[824616] call_tmp[824633]))
          (156095 call = cur[155966] call_tmp[824638])
          (555555 'end of statement' cur[155966] matches[155931])
          (156115 call += nFound[155961] 1)
          (555558 'end of statement' nFound[155961])
        }
        label _continueLabel[156122]
        unknown tmp[489450] "maybe param" "temp"
        (489461 'move' tmp[489450](156132 call < nFound[155961] maxMatches[155878]))
        unknown call_tmp[824643] "expr temp" "maybe param" "maybe type" "temp"
        (824646 'move' call_tmp[824643](489463 call _cond_invalid tmp[489450]))
        if call_tmp[824643]
        {
          (489466 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682639] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682640] "maybe param" "temp"
        unknown call_tmp[824648] "expr temp" "maybe param" "maybe type" "temp"
        (824651 'move' call_tmp[824648](489451 call isTrue tmp[489450]))
        (682645 'move' tmp[682640](682643 call _cond_test call_tmp[824648]))
        if tmp[682640]
        {
          unknown tmp[682647] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[824653] "expr temp" "maybe param" "maybe type" "temp"
          (824656 'move' call_tmp[824653](156136 call <= cur[155966] endPos[155956]))
          (682649 'move' tmp[682647](489454 call isTrue call_tmp[824653]))
          (682654 'move' tmp[682639](682651 '_paramFoldLogical' tmp[682640] tmp[682647]))
        }
        {
          (682659 'move' tmp[682639](682656 '_paramFoldLogical' tmp[682640] 0))
        }
        (156139 'move' tmp[156119](156128 call _cond_test tmp[682639]))
        tmp[156119]
      }
      label _breakLabel[156123]
    }
    (611918 return ret[611916])
  }
  function regex[156365](?).serialize[156160](arg _mt[156168]:_MT[201], arg this[156162]:regex[156365](?), arg writer[156164]:_any[141](?), ref arg serializer[156166]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown pattern[156172] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824660] "expr temp" "maybe param" "maybe type" "temp"
    (824663 'move' call_tmp[824660](434654 call exprType _mt[203] this[156162]))
    (646672 'default init var' pattern[156172] call_tmp[824660])
    (156175 'end of statement')
    {
      const tmp[156218] "const" "temp"
      unknown call_tmp[824667] "expr temp" "maybe param" "maybe type" "temp"
      (824670 'move' call_tmp[824667](156177 call home _mt[203] this[156162]))
      unknown call_tmp[824672] "expr temp" "maybe param" "maybe type" "temp"
      (824675 'move' call_tmp[824672](156215 '_wide_get_locale' call_tmp[824667]))
      (156219 'move' tmp[156218](156216 'deref' call_tmp[824672]))
      {
        unknown patternTemp[156182] "dead at end of block" "insert auto destroy"
        unknown call_tmp[824677] "expr temp" "maybe param" "maybe type" "temp"
        (824680 'move' call_tmp[824677](156184 call c_ptrConst[46990](?) c_char[562]))
        (646674 'default init var' patternTemp[156182] call_tmp[824677])
        (156187 'end of statement')
        unknown len[156189] "dead at end of block" "insert auto destroy"
        (646676 'default init var' len[156189] int(64)[10])
        (156192 'end of statement')
        unknown call_tmp[824684] "expr temp" "maybe param" "maybe type" "temp"
        (824687 'move' call_tmp[824684](156196 call _regex _mt[203] this[156162]))
        (156194 call qio_regex_borrow_pattern call_tmp[824684] patternTemp[156182] len[156189])
        (555561 'end of statement' patternTemp[156182] len[156189])
        Try!
        {
          {
            unknown call_tmp[824691] "expr temp" "maybe param" "maybe type" "temp"
            (824694 'move' call_tmp[824691](403939 call exprType _mt[203] this[156162]))
            unknown call_tmp[824698] "expr temp" "maybe param" "maybe type" "temp"
            (824701 'move' call_tmp[824698](156209 call(156206 call (partial) createCopyingBuffer _mt[203] call_tmp[824691]) patternTemp[156182] len[156189]))
            (156202 call = pattern[156172] call_tmp[824698])
            (555564 'end of statement' pattern[156172] patternTemp[156182] len[156189])
          }
        }
      }
      (156222 'elided on block' 0 tmp[156218])
    }
    (156230 call(156227 call (partial) write _mt[203] writer[156164]) "new regex(\"" pattern[156172] "\")")
    (555568 'end of statement' pattern[156172])
    (611926 return _void[46])
  }
  function regex[156365](?).deserialize[156240](arg _mt[156248]:_MT[201], ref arg this[156242]:regex[156365](?), arg reader[156244]:_any[141](?), ref arg deserializer[156246]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown pattern[156252] "dead at end of block" "insert auto destroy"
    unknown call_tmp[824707] "expr temp" "maybe param" "maybe type" "temp"
    (824710 'move' call_tmp[824707](434667 call exprType _mt[203] this[156242]))
    (646678 'default init var' pattern[156252] call_tmp[824707])
    (156255 'end of statement')
    unknown tmp[489492] "maybe param" "temp"
    unknown tmp[489513] "maybe param" "temp"
    (489524 'move' tmp[489513](156313 call(156310 call (partial) matchLiteral _mt[203] reader[156244]) "new regex(\""))
    unknown call_tmp[824714] "expr temp" "maybe param" "maybe type" "temp"
    (824717 'move' call_tmp[824714](489526 call _cond_invalid tmp[489513]))
    if call_tmp[824714]
    {
      (489529 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[682666] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682667] "maybe param" "temp"
    unknown call_tmp[824719] "expr temp" "maybe param" "maybe type" "temp"
    (824722 'move' call_tmp[824719](489514 call isTrue tmp[489513]))
    (682672 'move' tmp[682667](682670 call _cond_test call_tmp[824719]))
    if tmp[682667]
    {
      unknown tmp[682674] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[824726] "expr temp" "maybe param" "maybe type" "temp"
      (824729 'move' call_tmp[824726](156319 call(156316 call (partial) read _mt[203] reader[156244]) pattern[156252]))
      (682676 'move' tmp[682674](489517 call isTrue call_tmp[824726]))
      (682681 'move' tmp[682666](682678 '_paramFoldLogical' tmp[682667] tmp[682674]))
    }
    {
      (682686 'move' tmp[682666](682683 '_paramFoldLogical' tmp[682667] 0))
    }
    (489503 'move' tmp[489492] tmp[682666])
    unknown call_tmp[824731] "expr temp" "maybe param" "maybe type" "temp"
    (824734 'move' call_tmp[824731](489505 call _cond_invalid tmp[489492]))
    if call_tmp[824731]
    {
      (489508 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[682693] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682694] "maybe param" "temp"
    unknown call_tmp[824736] "expr temp" "maybe param" "maybe type" "temp"
    (824739 'move' call_tmp[824736](489493 call isTrue tmp[489492]))
    (682699 'move' tmp[682694](682697 call _cond_test call_tmp[824736]))
    if tmp[682694]
    {
      unknown tmp[682701] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[824743] "expr temp" "maybe param" "maybe type" "temp"
      (824746 'move' call_tmp[824743](156325 call(156322 call (partial) matchLiteral _mt[203] reader[156244]) "\")"))
      (682703 'move' tmp[682701](489496 call isTrue call_tmp[824743]))
      (682708 'move' tmp[682693](682705 '_paramFoldLogical' tmp[682694] tmp[682701]))
    }
    {
      (682713 'move' tmp[682693](682710 '_paramFoldLogical' tmp[682694] 0))
    }
    unknown call_tmp[824748] "expr temp" "maybe param" "maybe type" "temp"
    (824751 'move' call_tmp[824748](156327 call _cond_test tmp[682693]))
    if call_tmp[824748]
    {
      {
        const tmp[156297] "const" "temp"
        unknown call_tmp[824755] "expr temp" "maybe param" "maybe type" "temp"
        (824758 'move' call_tmp[824755](156257 call home _mt[203] this[156242]))
        unknown call_tmp[824760] "expr temp" "maybe param" "maybe type" "temp"
        (824763 'move' call_tmp[824760](156294 '_wide_get_locale' call_tmp[824755]))
        (156298 'move' tmp[156297](156295 'deref' call_tmp[824760]))
        {
          unknown call_tmp[824767] "maybe param" "maybe type" "temp"
          (824770 'move' call_tmp[824767](156267 call(156264 call (partial) localize _mt[203] pattern[156252])))
          unknown localPattern[156262] "dead at end of block" "insert auto destroy"
          (646680 'init var' localPattern[156262] call_tmp[824767])
          (156269 'end of statement')
          unknown opts[156271] "dead at end of block" "insert auto destroy"
          (646682 'default init var' opts[156271] qio_regex_options_t[153655])
          (156274 'end of statement' pattern[156252])
          (156276 call qio_regex_init_default_options opts[156271])
          (555573 'end of statement' opts[156271])
          unknown call_tmp[824774] "expr temp" "maybe param" "maybe type" "temp"
          (824777 'move' call_tmp[824774](156284 call(156281 call (partial) c_str _mt[203] localPattern[156262])))
          unknown call_tmp[824781] "expr temp" "maybe param" "maybe type" "temp"
          (824784 'move' call_tmp[824781](156286 call numBytes _mt[203] localPattern[156262]))
          unknown call_tmp[824788] "expr temp" "maybe param" "maybe type" "temp"
          (824791 'move' call_tmp[824788](156291 call _regex _mt[203] this[156242]))
          (156279 call qio_regex_create_compile call_tmp[824774] call_tmp[824781] opts[156271] call_tmp[824788])
          (555575 'end of statement' localPattern[156262] opts[156271])
        }
        (156301 'elided on block' 0 tmp[156297])
      }
    }
    (611928 return _void[46])
  }
  function regex[156365](?).init[156334](arg _mt[156346]:_MT[201], ref arg this[156336]:regex[156365](?), arg exprType[156338]:_any[141](?), arg reader[156341]:fileReader[170893](?), ref arg deserializer[156344]:_any[141](?)) : void[4] throws "method" "primary method" "no return value for void"
  {
    (156353 call(156350 call (partial) init _mt[203] this[156336]) exprType[156338])
    (555578 'end of statement')
    (156359 call(156356 call (partial) deserialize _mt[203] this[156336]) reader[156341] deserializer[156344])
    (611930 return _void[46])
  }
  function regex[156365](?).exprType[1103057](arg _mt[1103059]:_MT[201], arg this[1103061]:regex[156365](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1103080] "RVV" "temp" "type variable"
    unknown call_tmp[1103094] "expr temp" "maybe param" "maybe type" "temp"
    (1103097 'move' call_tmp[1103094](1103066 'is bound' this[1103061] c"exprType"))
    if call_tmp[1103094]
    {
      unknown call_tmp[1103099] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1103102 'move' call_tmp[1103099](1103065 '.v' this[1103061] c"exprType"))
      (1103085 'move' ret[1103080](1103084 'deref' call_tmp[1103099]))
      gotoReturn _end_exprType[1103078] _end_exprType[1103078]
    }
    {
      (1103090 'move' ret[1103080](1103089 'deref' _uninstantiated[225]))
      gotoReturn _end_exprType[1103078] _end_exprType[1103078]
    }
    label _end_exprType[1103078]
    (1103082 return ret[1103080])
  }
  function regex[156365](?).exprType[1103104](arg _mt[1103106]:_MT[201], arg this[1103108]:regex[156365](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1103127] "RVV" "temp" "type variable"
    unknown call_tmp[1103141] "expr temp" "maybe param" "maybe type" "temp"
    (1103144 'move' call_tmp[1103141](1103113 'is bound' this[1103108] c"exprType"))
    if call_tmp[1103141]
    {
      unknown call_tmp[1103146] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1103149 'move' call_tmp[1103146](1103112 '.v' this[1103108] c"exprType"))
      (1103132 'move' ret[1103127](1103131 'deref' call_tmp[1103146]))
      gotoReturn _end_exprType[1103125] _end_exprType[1103125]
    }
    {
      (1103137 'move' ret[1103127](1103136 'deref' _uninstantiated[225]))
      gotoReturn _end_exprType[1103125] _end_exprType[1103125]
    }
    label _end_exprType[1103125]
    (1103129 return ret[1103127])
  }
  function regex[156365](?).home[1103151](arg _mt[1103153]:_MT[201], ref arg this[1103155]:regex[156365](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1103165] "RVV" "temp"
    unknown call_tmp[1103172] "expr temp" "maybe param" "maybe type" "temp"
    (1103175 'move' call_tmp[1103172](1103159 '.' this[1103155] c"home"))
    (1103170 'move' ret[1103165](1103169 'addr of' call_tmp[1103172]))
    (1103167 return ret[1103165])
  }
  function regex[156365](?)._regex[1103177](arg _mt[1103179]:_MT[201], ref arg this[1103181]:regex[156365](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1103191] "RVV" "temp"
    unknown call_tmp[1103198] "expr temp" "maybe param" "maybe type" "temp"
    (1103201 'move' call_tmp[1103198](1103185 '.' this[1103181] c"_regex"))
    (1103196 'move' ret[1103191](1103195 'addr of' call_tmp[1103198]))
    (1103193 return ret[1103191])
  }
  function regex[156365](?).=[1103203](arg _mt[1103205]:_MT[201], arg this[1103207]:regex[156365](?), ref arg _arg1[1103209]:regex[156365](?), const?  ref arg _arg2[1103210]:regex[156365](?)) : void[4] "assignop" "compiler generated" "last resort" "method" "operator"
  {
    unknown call_tmp[1103247] "expr temp" "maybe param" "maybe type" "temp"
    (1103250 'move' call_tmp[1103247](1103220 call home _mt[203] _arg1[1103209]))
    unknown call_tmp[1103254] "expr temp" "maybe param" "maybe type" "temp"
    (1103257 'move' call_tmp[1103254](1103224 call home _mt[203] _arg2[1103210]))
    (1103228 call = call_tmp[1103247] call_tmp[1103254])
    (1103241 'end of statement')
    unknown call_tmp[1103261] "expr temp" "maybe param" "maybe type" "temp"
    (1103264 'move' call_tmp[1103261](1103230 call _regex _mt[203] _arg1[1103209]))
    unknown call_tmp[1103268] "expr temp" "maybe param" "maybe type" "temp"
    (1103271 'move' call_tmp[1103268](1103234 call _regex _mt[203] _arg2[1103210]))
    (1103238 call = call_tmp[1103261] call_tmp[1103268])
    (1103243 return _void[46])
  }
  where {
    unknown call_tmp[1103273] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103276 'move' call_tmp[1103273](1103213 'typeof' _arg1[1103209]))
    unknown call_tmp[1103278] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103281 'move' call_tmp[1103278](1103215 'typeof' _arg2[1103210]))
    (1103217 call == call_tmp[1103273] call_tmp[1103278])
  }
  function regex[156365](?).hash[1103283](arg _mt[1103286]:_MT[201], arg this[1103285]:regex[156365](?)) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1103310] "RVV" "temp"
    unknown call_tmp[1103317] "expr temp" "maybe param" "maybe type" "temp"
    (1103320 'move' call_tmp[1103317](1103295 call _regex _mt[203] this[1103285]))
    unknown call_tmp[1103322] "expr temp" "maybe param" "maybe type" "temp"
    (1103325 'move' call_tmp[1103322](1103299 call hash _mt[203] call_tmp[1103317]))
    unknown call_tmp[1103327] "expr temp" "maybe param" "maybe type" "temp"
    (1103330 'move' call_tmp[1103327](1103289 call home _mt[203] this[1103285]))
    unknown call_tmp[1103332] "expr temp" "maybe param" "maybe type" "temp"
    (1103335 'move' call_tmp[1103332](1103293 call chpl__defaultHashWrapperInner call_tmp[1103327]))
    unknown call_tmp[1103337] "expr temp" "maybe param" "maybe type" "temp"
    (1103340 'move' call_tmp[1103337](1103302 call chpl__defaultHashCombine call_tmp[1103322] call_tmp[1103332] 3))
    (1103315 'move' ret[1103310](1103314 'deref' call_tmp[1103337]))
    (1103312 return ret[1103310])
  }
  function chpl_fields_are_comparable[1103358](arg _arg1[1103360]:regex[156365](?), arg _arg2[1103361]:regex[156365](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1103390]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1103397] "expr temp" "maybe param" "maybe type" "temp"
    (1103400 'move' call_tmp[1103397](1103364 call home _mt[203] _arg1[1103360]))
    unknown call_tmp[1103402] "expr temp" "maybe param" "maybe type" "temp"
    (1103405 'move' call_tmp[1103402](1103368 call home _mt[203] _arg2[1103361]))
    unknown call_tmp[1103407] "expr temp" "maybe param" "maybe type" "temp"
    (1103410 'move' call_tmp[1103407](1103372 'call resolves' c"==" call_tmp[1103397] call_tmp[1103402]))
    unknown call_tmp[1103412] "expr temp" "maybe param" "maybe type" "temp"
    (1103415 'move' call_tmp[1103412](1103374 call _regex _mt[203] _arg1[1103360]))
    unknown call_tmp[1103417] "expr temp" "maybe param" "maybe type" "temp"
    (1103420 'move' call_tmp[1103417](1103378 call _regex _mt[203] _arg2[1103361]))
    unknown call_tmp[1103422] "expr temp" "maybe param" "maybe type" "temp"
    (1103425 'move' call_tmp[1103422](1103382 'call resolves' c"==" call_tmp[1103412] call_tmp[1103417]))
    unknown call_tmp[1103427] "expr temp" "maybe param" "maybe type" "temp"
    (1103430 'move' call_tmp[1103427](1103384 '&' call_tmp[1103407] call_tmp[1103422]))
    (1103395 'move' ret[1103390](1103394 'deref' call_tmp[1103427]))
    (1103392 return ret[1103390])
  }
  function regex[156365](?).==[1103342](arg _mt[1103344]:_MT[201], arg this[1103346]:regex[156365](?), arg _arg1[1103348]:regex[156365](?), arg _arg2[1103349]:regex[156365](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1103474]:bool[19] "RVV" "temp"
    unknown call_tmp[1103491] "expr temp" "maybe param" "maybe type" "temp"
    (1103494 'move' call_tmp[1103491](1103438 call home _mt[203] _arg1[1103348]))
    unknown call_tmp[1103496] "expr temp" "maybe param" "maybe type" "temp"
    (1103499 'move' call_tmp[1103496](1103442 call home _mt[203] _arg2[1103349]))
    unknown call_tmp[1103501] "expr temp" "maybe param" "maybe type" "temp"
    (1103504 'move' call_tmp[1103501](1103446 call chpl_field_neq call_tmp[1103491] call_tmp[1103496]))
    if call_tmp[1103501]
    {
      (1103479 'move' ret[1103474](1103478 'deref' 0))
      gotoReturn _end_==[1103472] _end_==[1103472]
    }
    unknown call_tmp[1103506] "expr temp" "maybe param" "maybe type" "temp"
    (1103509 'move' call_tmp[1103506](1103452 call _regex _mt[203] _arg1[1103348]))
    unknown call_tmp[1103511] "expr temp" "maybe param" "maybe type" "temp"
    (1103514 'move' call_tmp[1103511](1103456 call _regex _mt[203] _arg2[1103349]))
    unknown call_tmp[1103516] "expr temp" "maybe param" "maybe type" "temp"
    (1103519 'move' call_tmp[1103516](1103460 call chpl_field_neq call_tmp[1103506] call_tmp[1103511]))
    if call_tmp[1103516]
    {
      (1103484 'move' ret[1103474](1103483 'deref' 0))
      gotoReturn _end_==[1103472] _end_==[1103472]
    }
    (1103489 'move' ret[1103474](1103488 'deref' 1))
    label _end_==[1103472]
    (1103476 return ret[1103474])
  }
  where {
    unknown call_tmp[1103521] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103524 'move' call_tmp[1103521](1103352 'typeof' _arg1[1103348]))
    unknown call_tmp[1103526] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103529 'move' call_tmp[1103526](1103354 'typeof' _arg2[1103349]))
    unknown call_tmp[1103531] "expr temp" "maybe param" "maybe type" "temp"
    (1103534 'move' call_tmp[1103531](1103356 call == call_tmp[1103521] call_tmp[1103526]))
    unknown call_tmp[1103536] "expr temp" "maybe param" "maybe type" "temp"
    (1103539 'move' call_tmp[1103536](1103432 call chpl_fields_are_comparable[1103358] _arg1[1103348] _arg2[1103349]))
    (1103436 '&' call_tmp[1103531] call_tmp[1103536])
  }
  function chpl_fields_are_comparable[1103557](arg _arg1[1103559]:regex[156365](?), arg _arg2[1103560]:regex[156365](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1103589]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1103596] "expr temp" "maybe param" "maybe type" "temp"
    (1103599 'move' call_tmp[1103596](1103563 call home _mt[203] _arg1[1103559]))
    unknown call_tmp[1103601] "expr temp" "maybe param" "maybe type" "temp"
    (1103604 'move' call_tmp[1103601](1103567 call home _mt[203] _arg2[1103560]))
    unknown call_tmp[1103606] "expr temp" "maybe param" "maybe type" "temp"
    (1103609 'move' call_tmp[1103606](1103571 'call resolves' c"!=" call_tmp[1103596] call_tmp[1103601]))
    unknown call_tmp[1103611] "expr temp" "maybe param" "maybe type" "temp"
    (1103614 'move' call_tmp[1103611](1103573 call _regex _mt[203] _arg1[1103559]))
    unknown call_tmp[1103616] "expr temp" "maybe param" "maybe type" "temp"
    (1103619 'move' call_tmp[1103616](1103577 call _regex _mt[203] _arg2[1103560]))
    unknown call_tmp[1103621] "expr temp" "maybe param" "maybe type" "temp"
    (1103624 'move' call_tmp[1103621](1103581 'call resolves' c"!=" call_tmp[1103611] call_tmp[1103616]))
    unknown call_tmp[1103626] "expr temp" "maybe param" "maybe type" "temp"
    (1103629 'move' call_tmp[1103626](1103583 '&' call_tmp[1103606] call_tmp[1103621]))
    (1103594 'move' ret[1103589](1103593 'deref' call_tmp[1103626]))
    (1103591 return ret[1103589])
  }
  function regex[156365](?).!=[1103541](arg _mt[1103543]:_MT[201], arg this[1103545]:regex[156365](?), arg _arg1[1103547]:regex[156365](?), arg _arg2[1103548]:regex[156365](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1103673]:bool[19] "RVV" "temp"
    unknown call_tmp[1103690] "expr temp" "maybe param" "maybe type" "temp"
    (1103693 'move' call_tmp[1103690](1103637 call home _mt[203] _arg1[1103547]))
    unknown call_tmp[1103695] "expr temp" "maybe param" "maybe type" "temp"
    (1103698 'move' call_tmp[1103695](1103641 call home _mt[203] _arg2[1103548]))
    unknown call_tmp[1103700] "expr temp" "maybe param" "maybe type" "temp"
    (1103703 'move' call_tmp[1103700](1103645 call chpl_field_neq call_tmp[1103690] call_tmp[1103695]))
    if call_tmp[1103700]
    {
      (1103678 'move' ret[1103673](1103677 'deref' 1))
      gotoReturn _end_!=[1103671] _end_!=[1103671]
    }
    unknown call_tmp[1103705] "expr temp" "maybe param" "maybe type" "temp"
    (1103708 'move' call_tmp[1103705](1103651 call _regex _mt[203] _arg1[1103547]))
    unknown call_tmp[1103710] "expr temp" "maybe param" "maybe type" "temp"
    (1103713 'move' call_tmp[1103710](1103655 call _regex _mt[203] _arg2[1103548]))
    unknown call_tmp[1103715] "expr temp" "maybe param" "maybe type" "temp"
    (1103718 'move' call_tmp[1103715](1103659 call chpl_field_neq call_tmp[1103705] call_tmp[1103710]))
    if call_tmp[1103715]
    {
      (1103683 'move' ret[1103673](1103682 'deref' 1))
      gotoReturn _end_!=[1103671] _end_!=[1103671]
    }
    (1103688 'move' ret[1103673](1103687 'deref' 0))
    label _end_!=[1103671]
    (1103675 return ret[1103673])
  }
  where {
    unknown call_tmp[1103720] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103723 'move' call_tmp[1103720](1103551 'typeof' _arg1[1103547]))
    unknown call_tmp[1103725] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103728 'move' call_tmp[1103725](1103553 'typeof' _arg2[1103548]))
    unknown call_tmp[1103730] "expr temp" "maybe param" "maybe type" "temp"
    (1103733 'move' call_tmp[1103730](1103555 call == call_tmp[1103720] call_tmp[1103725]))
    unknown call_tmp[1103735] "expr temp" "maybe param" "maybe type" "temp"
    (1103738 'move' call_tmp[1103735](1103631 call chpl_fields_are_comparable[1103557] _arg1[1103547] _arg2[1103548]))
    (1103635 '&' call_tmp[1103730] call_tmp[1103735])
  }
  function chpl_fields_are_comparable[1103756](arg _arg1[1103758]:regex[156365](?), arg _arg2[1103759]:regex[156365](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1103788]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1103795] "expr temp" "maybe param" "maybe type" "temp"
    (1103798 'move' call_tmp[1103795](1103762 call home _mt[203] _arg1[1103758]))
    unknown call_tmp[1103800] "expr temp" "maybe param" "maybe type" "temp"
    (1103803 'move' call_tmp[1103800](1103766 call home _mt[203] _arg2[1103759]))
    unknown call_tmp[1103805] "expr temp" "maybe param" "maybe type" "temp"
    (1103808 'move' call_tmp[1103805](1103770 'call resolves' c"<" call_tmp[1103795] call_tmp[1103800]))
    unknown call_tmp[1103810] "expr temp" "maybe param" "maybe type" "temp"
    (1103813 'move' call_tmp[1103810](1103772 call _regex _mt[203] _arg1[1103758]))
    unknown call_tmp[1103815] "expr temp" "maybe param" "maybe type" "temp"
    (1103818 'move' call_tmp[1103815](1103776 call _regex _mt[203] _arg2[1103759]))
    unknown call_tmp[1103820] "expr temp" "maybe param" "maybe type" "temp"
    (1103823 'move' call_tmp[1103820](1103780 'call resolves' c"<" call_tmp[1103810] call_tmp[1103815]))
    unknown call_tmp[1103825] "expr temp" "maybe param" "maybe type" "temp"
    (1103828 'move' call_tmp[1103825](1103782 '&' call_tmp[1103805] call_tmp[1103820]))
    (1103793 'move' ret[1103788](1103792 'deref' call_tmp[1103825]))
    (1103790 return ret[1103788])
  }
  function regex[156365](?).<[1103740](arg _mt[1103742]:_MT[201], arg this[1103744]:regex[156365](?), arg _arg1[1103746]:regex[156365](?), arg _arg2[1103747]:regex[156365](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1103902]:bool[19] "RVV" "temp"
    unknown call_tmp[1103929] "expr temp" "maybe param" "maybe type" "temp"
    (1103932 'move' call_tmp[1103929](1103836 call home _mt[203] _arg1[1103746]))
    unknown call_tmp[1103934] "expr temp" "maybe param" "maybe type" "temp"
    (1103937 'move' call_tmp[1103934](1103840 call home _mt[203] _arg2[1103747]))
    unknown call_tmp[1103939] "expr temp" "maybe param" "maybe type" "temp"
    (1103942 'move' call_tmp[1103939](1103844 call chpl_field_lt call_tmp[1103929] call_tmp[1103934]))
    if call_tmp[1103939]
    {
      (1103907 'move' ret[1103902](1103906 'deref' 1))
      gotoReturn _end_<[1103900] _end_<[1103900]
    }
    unknown call_tmp[1103944] "expr temp" "maybe param" "maybe type" "temp"
    (1103947 'move' call_tmp[1103944](1103850 call home _mt[203] _arg1[1103746]))
    unknown call_tmp[1103949] "expr temp" "maybe param" "maybe type" "temp"
    (1103952 'move' call_tmp[1103949](1103854 call home _mt[203] _arg2[1103747]))
    unknown call_tmp[1103954] "expr temp" "maybe param" "maybe type" "temp"
    (1103957 'move' call_tmp[1103954](1103858 call chpl_field_gt call_tmp[1103944] call_tmp[1103949]))
    if call_tmp[1103954]
    {
      (1103912 'move' ret[1103902](1103911 'deref' 0))
      gotoReturn _end_<[1103900] _end_<[1103900]
    }
    unknown call_tmp[1103959] "expr temp" "maybe param" "maybe type" "temp"
    (1103962 'move' call_tmp[1103959](1103864 call _regex _mt[203] _arg1[1103746]))
    unknown call_tmp[1103964] "expr temp" "maybe param" "maybe type" "temp"
    (1103967 'move' call_tmp[1103964](1103868 call _regex _mt[203] _arg2[1103747]))
    unknown call_tmp[1103969] "expr temp" "maybe param" "maybe type" "temp"
    (1103972 'move' call_tmp[1103969](1103872 call chpl_field_lt call_tmp[1103959] call_tmp[1103964]))
    if call_tmp[1103969]
    {
      (1103917 'move' ret[1103902](1103916 'deref' 1))
      gotoReturn _end_<[1103900] _end_<[1103900]
    }
    unknown call_tmp[1103974] "expr temp" "maybe param" "maybe type" "temp"
    (1103977 'move' call_tmp[1103974](1103878 call _regex _mt[203] _arg1[1103746]))
    unknown call_tmp[1103979] "expr temp" "maybe param" "maybe type" "temp"
    (1103982 'move' call_tmp[1103979](1103882 call _regex _mt[203] _arg2[1103747]))
    unknown call_tmp[1103984] "expr temp" "maybe param" "maybe type" "temp"
    (1103987 'move' call_tmp[1103984](1103886 call chpl_field_gt call_tmp[1103974] call_tmp[1103979]))
    if call_tmp[1103984]
    {
      (1103922 'move' ret[1103902](1103921 'deref' 0))
      gotoReturn _end_<[1103900] _end_<[1103900]
    }
    (1103927 'move' ret[1103902](1103926 'deref' 0))
    label _end_<[1103900]
    (1103904 return ret[1103902])
  }
  where {
    unknown call_tmp[1103989] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103992 'move' call_tmp[1103989](1103750 'typeof' _arg1[1103746]))
    unknown call_tmp[1103994] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1103997 'move' call_tmp[1103994](1103752 'typeof' _arg2[1103747]))
    unknown call_tmp[1103999] "expr temp" "maybe param" "maybe type" "temp"
    (1104002 'move' call_tmp[1103999](1103754 call == call_tmp[1103989] call_tmp[1103994]))
    unknown call_tmp[1104004] "expr temp" "maybe param" "maybe type" "temp"
    (1104007 'move' call_tmp[1104004](1103830 call chpl_fields_are_comparable[1103756] _arg1[1103746] _arg2[1103747]))
    (1103834 '&' call_tmp[1103999] call_tmp[1104004])
  }
  function chpl_fields_are_comparable[1104025](arg _arg1[1104027]:regex[156365](?), arg _arg2[1104028]:regex[156365](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1104057]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1104064] "expr temp" "maybe param" "maybe type" "temp"
    (1104067 'move' call_tmp[1104064](1104031 call home _mt[203] _arg1[1104027]))
    unknown call_tmp[1104069] "expr temp" "maybe param" "maybe type" "temp"
    (1104072 'move' call_tmp[1104069](1104035 call home _mt[203] _arg2[1104028]))
    unknown call_tmp[1104074] "expr temp" "maybe param" "maybe type" "temp"
    (1104077 'move' call_tmp[1104074](1104039 'call resolves' c"<=" call_tmp[1104064] call_tmp[1104069]))
    unknown call_tmp[1104079] "expr temp" "maybe param" "maybe type" "temp"
    (1104082 'move' call_tmp[1104079](1104041 call _regex _mt[203] _arg1[1104027]))
    unknown call_tmp[1104084] "expr temp" "maybe param" "maybe type" "temp"
    (1104087 'move' call_tmp[1104084](1104045 call _regex _mt[203] _arg2[1104028]))
    unknown call_tmp[1104089] "expr temp" "maybe param" "maybe type" "temp"
    (1104092 'move' call_tmp[1104089](1104049 'call resolves' c"<=" call_tmp[1104079] call_tmp[1104084]))
    unknown call_tmp[1104094] "expr temp" "maybe param" "maybe type" "temp"
    (1104097 'move' call_tmp[1104094](1104051 '&' call_tmp[1104074] call_tmp[1104089]))
    (1104062 'move' ret[1104057](1104061 'deref' call_tmp[1104094]))
    (1104059 return ret[1104057])
  }
  function regex[156365](?).<=[1104009](arg _mt[1104011]:_MT[201], arg this[1104013]:regex[156365](?), arg _arg1[1104015]:regex[156365](?), arg _arg2[1104016]:regex[156365](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1104171]:bool[19] "RVV" "temp"
    unknown call_tmp[1104198] "expr temp" "maybe param" "maybe type" "temp"
    (1104201 'move' call_tmp[1104198](1104105 call home _mt[203] _arg1[1104015]))
    unknown call_tmp[1104203] "expr temp" "maybe param" "maybe type" "temp"
    (1104206 'move' call_tmp[1104203](1104109 call home _mt[203] _arg2[1104016]))
    unknown call_tmp[1104208] "expr temp" "maybe param" "maybe type" "temp"
    (1104211 'move' call_tmp[1104208](1104113 call chpl_field_lt call_tmp[1104198] call_tmp[1104203]))
    if call_tmp[1104208]
    {
      (1104176 'move' ret[1104171](1104175 'deref' 1))
      gotoReturn _end_<=[1104169] _end_<=[1104169]
    }
    unknown call_tmp[1104213] "expr temp" "maybe param" "maybe type" "temp"
    (1104216 'move' call_tmp[1104213](1104119 call home _mt[203] _arg1[1104015]))
    unknown call_tmp[1104218] "expr temp" "maybe param" "maybe type" "temp"
    (1104221 'move' call_tmp[1104218](1104123 call home _mt[203] _arg2[1104016]))
    unknown call_tmp[1104223] "expr temp" "maybe param" "maybe type" "temp"
    (1104226 'move' call_tmp[1104223](1104127 call chpl_field_gt call_tmp[1104213] call_tmp[1104218]))
    if call_tmp[1104223]
    {
      (1104181 'move' ret[1104171](1104180 'deref' 0))
      gotoReturn _end_<=[1104169] _end_<=[1104169]
    }
    unknown call_tmp[1104228] "expr temp" "maybe param" "maybe type" "temp"
    (1104231 'move' call_tmp[1104228](1104133 call _regex _mt[203] _arg1[1104015]))
    unknown call_tmp[1104233] "expr temp" "maybe param" "maybe type" "temp"
    (1104236 'move' call_tmp[1104233](1104137 call _regex _mt[203] _arg2[1104016]))
    unknown call_tmp[1104238] "expr temp" "maybe param" "maybe type" "temp"
    (1104241 'move' call_tmp[1104238](1104141 call chpl_field_lt call_tmp[1104228] call_tmp[1104233]))
    if call_tmp[1104238]
    {
      (1104186 'move' ret[1104171](1104185 'deref' 1))
      gotoReturn _end_<=[1104169] _end_<=[1104169]
    }
    unknown call_tmp[1104243] "expr temp" "maybe param" "maybe type" "temp"
    (1104246 'move' call_tmp[1104243](1104147 call _regex _mt[203] _arg1[1104015]))
    unknown call_tmp[1104248] "expr temp" "maybe param" "maybe type" "temp"
    (1104251 'move' call_tmp[1104248](1104151 call _regex _mt[203] _arg2[1104016]))
    unknown call_tmp[1104253] "expr temp" "maybe param" "maybe type" "temp"
    (1104256 'move' call_tmp[1104253](1104155 call chpl_field_gt call_tmp[1104243] call_tmp[1104248]))
    if call_tmp[1104253]
    {
      (1104191 'move' ret[1104171](1104190 'deref' 0))
      gotoReturn _end_<=[1104169] _end_<=[1104169]
    }
    (1104196 'move' ret[1104171](1104195 'deref' 1))
    label _end_<=[1104169]
    (1104173 return ret[1104171])
  }
  where {
    unknown call_tmp[1104258] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1104261 'move' call_tmp[1104258](1104019 'typeof' _arg1[1104015]))
    unknown call_tmp[1104263] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1104266 'move' call_tmp[1104263](1104021 'typeof' _arg2[1104016]))
    unknown call_tmp[1104268] "expr temp" "maybe param" "maybe type" "temp"
    (1104271 'move' call_tmp[1104268](1104023 call == call_tmp[1104258] call_tmp[1104263]))
    unknown call_tmp[1104273] "expr temp" "maybe param" "maybe type" "temp"
    (1104276 'move' call_tmp[1104273](1104099 call chpl_fields_are_comparable[1104025] _arg1[1104015] _arg2[1104016]))
    (1104103 '&' call_tmp[1104268] call_tmp[1104273])
  }
  function chpl_fields_are_comparable[1104294](arg _arg1[1104296]:regex[156365](?), arg _arg2[1104297]:regex[156365](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1104326]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1104333] "expr temp" "maybe param" "maybe type" "temp"
    (1104336 'move' call_tmp[1104333](1104300 call home _mt[203] _arg1[1104296]))
    unknown call_tmp[1104338] "expr temp" "maybe param" "maybe type" "temp"
    (1104341 'move' call_tmp[1104338](1104304 call home _mt[203] _arg2[1104297]))
    unknown call_tmp[1104343] "expr temp" "maybe param" "maybe type" "temp"
    (1104346 'move' call_tmp[1104343](1104308 'call resolves' c">" call_tmp[1104333] call_tmp[1104338]))
    unknown call_tmp[1104348] "expr temp" "maybe param" "maybe type" "temp"
    (1104351 'move' call_tmp[1104348](1104310 call _regex _mt[203] _arg1[1104296]))
    unknown call_tmp[1104353] "expr temp" "maybe param" "maybe type" "temp"
    (1104356 'move' call_tmp[1104353](1104314 call _regex _mt[203] _arg2[1104297]))
    unknown call_tmp[1104358] "expr temp" "maybe param" "maybe type" "temp"
    (1104361 'move' call_tmp[1104358](1104318 'call resolves' c">" call_tmp[1104348] call_tmp[1104353]))
    unknown call_tmp[1104363] "expr temp" "maybe param" "maybe type" "temp"
    (1104366 'move' call_tmp[1104363](1104320 '&' call_tmp[1104343] call_tmp[1104358]))
    (1104331 'move' ret[1104326](1104330 'deref' call_tmp[1104363]))
    (1104328 return ret[1104326])
  }
  function regex[156365](?).>[1104278](arg _mt[1104280]:_MT[201], arg this[1104282]:regex[156365](?), arg _arg1[1104284]:regex[156365](?), arg _arg2[1104285]:regex[156365](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1104440]:bool[19] "RVV" "temp"
    unknown call_tmp[1104467] "expr temp" "maybe param" "maybe type" "temp"
    (1104470 'move' call_tmp[1104467](1104374 call home _mt[203] _arg1[1104284]))
    unknown call_tmp[1104472] "expr temp" "maybe param" "maybe type" "temp"
    (1104475 'move' call_tmp[1104472](1104378 call home _mt[203] _arg2[1104285]))
    unknown call_tmp[1104477] "expr temp" "maybe param" "maybe type" "temp"
    (1104480 'move' call_tmp[1104477](1104382 call chpl_field_gt call_tmp[1104467] call_tmp[1104472]))
    if call_tmp[1104477]
    {
      (1104445 'move' ret[1104440](1104444 'deref' 1))
      gotoReturn _end_>[1104438] _end_>[1104438]
    }
    unknown call_tmp[1104482] "expr temp" "maybe param" "maybe type" "temp"
    (1104485 'move' call_tmp[1104482](1104388 call home _mt[203] _arg1[1104284]))
    unknown call_tmp[1104487] "expr temp" "maybe param" "maybe type" "temp"
    (1104490 'move' call_tmp[1104487](1104392 call home _mt[203] _arg2[1104285]))
    unknown call_tmp[1104492] "expr temp" "maybe param" "maybe type" "temp"
    (1104495 'move' call_tmp[1104492](1104396 call chpl_field_lt call_tmp[1104482] call_tmp[1104487]))
    if call_tmp[1104492]
    {
      (1104450 'move' ret[1104440](1104449 'deref' 0))
      gotoReturn _end_>[1104438] _end_>[1104438]
    }
    unknown call_tmp[1104497] "expr temp" "maybe param" "maybe type" "temp"
    (1104500 'move' call_tmp[1104497](1104402 call _regex _mt[203] _arg1[1104284]))
    unknown call_tmp[1104502] "expr temp" "maybe param" "maybe type" "temp"
    (1104505 'move' call_tmp[1104502](1104406 call _regex _mt[203] _arg2[1104285]))
    unknown call_tmp[1104507] "expr temp" "maybe param" "maybe type" "temp"
    (1104510 'move' call_tmp[1104507](1104410 call chpl_field_gt call_tmp[1104497] call_tmp[1104502]))
    if call_tmp[1104507]
    {
      (1104455 'move' ret[1104440](1104454 'deref' 1))
      gotoReturn _end_>[1104438] _end_>[1104438]
    }
    unknown call_tmp[1104512] "expr temp" "maybe param" "maybe type" "temp"
    (1104515 'move' call_tmp[1104512](1104416 call _regex _mt[203] _arg1[1104284]))
    unknown call_tmp[1104517] "expr temp" "maybe param" "maybe type" "temp"
    (1104520 'move' call_tmp[1104517](1104420 call _regex _mt[203] _arg2[1104285]))
    unknown call_tmp[1104522] "expr temp" "maybe param" "maybe type" "temp"
    (1104525 'move' call_tmp[1104522](1104424 call chpl_field_lt call_tmp[1104512] call_tmp[1104517]))
    if call_tmp[1104522]
    {
      (1104460 'move' ret[1104440](1104459 'deref' 0))
      gotoReturn _end_>[1104438] _end_>[1104438]
    }
    (1104465 'move' ret[1104440](1104464 'deref' 0))
    label _end_>[1104438]
    (1104442 return ret[1104440])
  }
  where {
    unknown call_tmp[1104527] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1104530 'move' call_tmp[1104527](1104288 'typeof' _arg1[1104284]))
    unknown call_tmp[1104532] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1104535 'move' call_tmp[1104532](1104290 'typeof' _arg2[1104285]))
    unknown call_tmp[1104537] "expr temp" "maybe param" "maybe type" "temp"
    (1104540 'move' call_tmp[1104537](1104292 call == call_tmp[1104527] call_tmp[1104532]))
    unknown call_tmp[1104542] "expr temp" "maybe param" "maybe type" "temp"
    (1104545 'move' call_tmp[1104542](1104368 call chpl_fields_are_comparable[1104294] _arg1[1104284] _arg2[1104285]))
    (1104372 '&' call_tmp[1104537] call_tmp[1104542])
  }
  function chpl_fields_are_comparable[1104563](arg _arg1[1104565]:regex[156365](?), arg _arg2[1104566]:regex[156365](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1104595]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1104602] "expr temp" "maybe param" "maybe type" "temp"
    (1104605 'move' call_tmp[1104602](1104569 call home _mt[203] _arg1[1104565]))
    unknown call_tmp[1104607] "expr temp" "maybe param" "maybe type" "temp"
    (1104610 'move' call_tmp[1104607](1104573 call home _mt[203] _arg2[1104566]))
    unknown call_tmp[1104612] "expr temp" "maybe param" "maybe type" "temp"
    (1104615 'move' call_tmp[1104612](1104577 'call resolves' c">=" call_tmp[1104602] call_tmp[1104607]))
    unknown call_tmp[1104617] "expr temp" "maybe param" "maybe type" "temp"
    (1104620 'move' call_tmp[1104617](1104579 call _regex _mt[203] _arg1[1104565]))
    unknown call_tmp[1104622] "expr temp" "maybe param" "maybe type" "temp"
    (1104625 'move' call_tmp[1104622](1104583 call _regex _mt[203] _arg2[1104566]))
    unknown call_tmp[1104627] "expr temp" "maybe param" "maybe type" "temp"
    (1104630 'move' call_tmp[1104627](1104587 'call resolves' c">=" call_tmp[1104617] call_tmp[1104622]))
    unknown call_tmp[1104632] "expr temp" "maybe param" "maybe type" "temp"
    (1104635 'move' call_tmp[1104632](1104589 '&' call_tmp[1104612] call_tmp[1104627]))
    (1104600 'move' ret[1104595](1104599 'deref' call_tmp[1104632]))
    (1104597 return ret[1104595])
  }
  function regex[156365](?).>=[1104547](arg _mt[1104549]:_MT[201], arg this[1104551]:regex[156365](?), arg _arg1[1104553]:regex[156365](?), arg _arg2[1104554]:regex[156365](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1104709]:bool[19] "RVV" "temp"
    unknown call_tmp[1104736] "expr temp" "maybe param" "maybe type" "temp"
    (1104739 'move' call_tmp[1104736](1104643 call home _mt[203] _arg1[1104553]))
    unknown call_tmp[1104741] "expr temp" "maybe param" "maybe type" "temp"
    (1104744 'move' call_tmp[1104741](1104647 call home _mt[203] _arg2[1104554]))
    unknown call_tmp[1104746] "expr temp" "maybe param" "maybe type" "temp"
    (1104749 'move' call_tmp[1104746](1104651 call chpl_field_gt call_tmp[1104736] call_tmp[1104741]))
    if call_tmp[1104746]
    {
      (1104714 'move' ret[1104709](1104713 'deref' 1))
      gotoReturn _end_>=[1104707] _end_>=[1104707]
    }
    unknown call_tmp[1104751] "expr temp" "maybe param" "maybe type" "temp"
    (1104754 'move' call_tmp[1104751](1104657 call home _mt[203] _arg1[1104553]))
    unknown call_tmp[1104756] "expr temp" "maybe param" "maybe type" "temp"
    (1104759 'move' call_tmp[1104756](1104661 call home _mt[203] _arg2[1104554]))
    unknown call_tmp[1104761] "expr temp" "maybe param" "maybe type" "temp"
    (1104764 'move' call_tmp[1104761](1104665 call chpl_field_lt call_tmp[1104751] call_tmp[1104756]))
    if call_tmp[1104761]
    {
      (1104719 'move' ret[1104709](1104718 'deref' 0))
      gotoReturn _end_>=[1104707] _end_>=[1104707]
    }
    unknown call_tmp[1104766] "expr temp" "maybe param" "maybe type" "temp"
    (1104769 'move' call_tmp[1104766](1104671 call _regex _mt[203] _arg1[1104553]))
    unknown call_tmp[1104771] "expr temp" "maybe param" "maybe type" "temp"
    (1104774 'move' call_tmp[1104771](1104675 call _regex _mt[203] _arg2[1104554]))
    unknown call_tmp[1104776] "expr temp" "maybe param" "maybe type" "temp"
    (1104779 'move' call_tmp[1104776](1104679 call chpl_field_gt call_tmp[1104766] call_tmp[1104771]))
    if call_tmp[1104776]
    {
      (1104724 'move' ret[1104709](1104723 'deref' 1))
      gotoReturn _end_>=[1104707] _end_>=[1104707]
    }
    unknown call_tmp[1104781] "expr temp" "maybe param" "maybe type" "temp"
    (1104784 'move' call_tmp[1104781](1104685 call _regex _mt[203] _arg1[1104553]))
    unknown call_tmp[1104786] "expr temp" "maybe param" "maybe type" "temp"
    (1104789 'move' call_tmp[1104786](1104689 call _regex _mt[203] _arg2[1104554]))
    unknown call_tmp[1104791] "expr temp" "maybe param" "maybe type" "temp"
    (1104794 'move' call_tmp[1104791](1104693 call chpl_field_lt call_tmp[1104781] call_tmp[1104786]))
    if call_tmp[1104791]
    {
      (1104729 'move' ret[1104709](1104728 'deref' 0))
      gotoReturn _end_>=[1104707] _end_>=[1104707]
    }
    (1104734 'move' ret[1104709](1104733 'deref' 1))
    label _end_>=[1104707]
    (1104711 return ret[1104709])
  }
  where {
    unknown call_tmp[1104796] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1104799 'move' call_tmp[1104796](1104557 'typeof' _arg1[1104553]))
    unknown call_tmp[1104801] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1104804 'move' call_tmp[1104801](1104559 'typeof' _arg2[1104554]))
    unknown call_tmp[1104806] "expr temp" "maybe param" "maybe type" "temp"
    (1104809 'move' call_tmp[1104806](1104561 call == call_tmp[1104796] call_tmp[1104801]))
    unknown call_tmp[1104811] "expr temp" "maybe param" "maybe type" "temp"
    (1104814 'move' call_tmp[1104811](1104637 call chpl_fields_are_comparable[1104563] _arg1[1104553] _arg2[1104554]))
    (1104641 '&' call_tmp[1104806] call_tmp[1104811])
  }
  type regex[156365](?) unknown exprType[154298] "type variable" val home[154301]:locale[234](434204 call here[135591]) locale[234] val _regex[154307]:qio_regex_t[153611](154310 call qio_regex_null) qio_regex_t[153611]
  function regex[156365](?).=[156367](arg _mt[156386]:_MT[201], arg this[156370]:regex[156365](?) :
  regex[156365](?), ref arg ret[156377]:regex[156365](?), arg x[156383] :
  unknown call_tmp[824797] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "assignop" "method" "operator" "no return value for void"
  {
    unknown call_tmp[824804] "expr temp" "maybe param" "maybe type" "temp"
    (824807 'move' call_tmp[824804](156469 call home _mt[203] x[156383]))
    unknown call_tmp[824811] "expr temp" "maybe param" "maybe type" "temp"
    (824814 'move' call_tmp[824811](156473 call home _mt[203] ret[156377]))
    unknown call_tmp[824816] "expr temp" "maybe param" "maybe type" "temp"
    (824819 'move' call_tmp[824816](156466 call == call_tmp[824804] call_tmp[824811]))
    unknown call_tmp[824821] "expr temp" "maybe param" "maybe type" "temp"
    (824824 'move' call_tmp[824821](156476 call _cond_test call_tmp[824816]))
    if call_tmp[824821]
    {
      {
        const tmp[156410] "const" "temp"
        unknown call_tmp[824828] "expr temp" "maybe param" "maybe type" "temp"
        (824831 'move' call_tmp[824828](156391 call home _mt[203] x[156383]))
        unknown call_tmp[824833] "expr temp" "maybe param" "maybe type" "temp"
        (824836 'move' call_tmp[824833](156407 '_wide_get_locale' call_tmp[824828]))
        (156411 'move' tmp[156410](156408 'deref' call_tmp[824833]))
        {
          unknown call_tmp[824840] "expr temp" "maybe param" "maybe type" "temp"
          (824843 'move' call_tmp[824840](156398 call _regex _mt[203] x[156383]))
          (156396 call qio_regex_retain call_tmp[824840])
          (555580 'end of statement')
          unknown call_tmp[824847] "expr temp" "maybe param" "maybe type" "temp"
          (824850 'move' call_tmp[824847](156404 call _regex _mt[203] ret[156377]))
          (156402 call qio_regex_release call_tmp[824847])
        }
        (156414 'elided on block' 0 tmp[156410])
      }
      unknown call_tmp[824854] "expr temp" "maybe param" "maybe type" "temp"
      (824857 'move' call_tmp[824854](156421 call _regex _mt[203] ret[156377]))
      unknown call_tmp[824861] "expr temp" "maybe param" "maybe type" "temp"
      (824864 'move' call_tmp[824861](156425 call _regex _mt[203] x[156383]))
      (156418 call = call_tmp[824854] call_tmp[824861])
    }
    {
      {
        const tmp[156458] "const" "temp"
        unknown call_tmp[824868] "expr temp" "maybe param" "maybe type" "temp"
        (824871 'move' call_tmp[824868](156430 call home _mt[203] ret[156377]))
        unknown call_tmp[824873] "expr temp" "maybe param" "maybe type" "temp"
        (824876 'move' call_tmp[824873](156455 '_wide_get_locale' call_tmp[824868]))
        (156459 'move' tmp[156458](156456 'deref' call_tmp[824873]))
        {
          unknown call_tmp[824880] "expr temp" "maybe param" "maybe type" "temp"
          (824883 'move' call_tmp[824880](156437 call _regex _mt[203] ret[156377]))
          (156435 call qio_regex_release call_tmp[824880])
          (555583 'end of statement')
          unknown call_tmp[824887] "maybe param" "maybe type" "temp"
          (824890 'move' call_tmp[824887](156446 call(156443 call (partial) _serialize _mt[203] x[156383])))
          unknown serialized[156441] "dead at end of block" "insert auto destroy"
          (646684 'init var' serialized[156441] call_tmp[824887])
          (156448 'end of statement')
          (156453 call(156450 call (partial) _deserialize _mt[203] ret[156377]) serialized[156441])
          (555584 'end of statement' serialized[156441])
        }
        (156462 'elided on block' 0 tmp[156458])
      }
    }
    (611932 return _void[46])
  }
  function :[156482](arg x[156488]:regex[156365](?), arg t[156492] :
  (526452 'query' x[156488] 1)) : _unknown[42] "inline" "operator"
  {
    unknown ret[611936] "RVV" "temp"
    unknown pattern[156497] "dead at end of block" "insert auto destroy"
    (646686 'default init var' pattern[156497] t[156492])
    (156500 'end of statement')
    {
      const tmp[156543] "const" "temp"
      unknown call_tmp[824896] "expr temp" "maybe param" "maybe type" "temp"
      (824899 'move' call_tmp[824896](156502 call home _mt[203] x[156488]))
      unknown call_tmp[824901] "expr temp" "maybe param" "maybe type" "temp"
      (824904 'move' call_tmp[824901](156540 '_wide_get_locale' call_tmp[824896]))
      (156544 'move' tmp[156543](156541 'deref' call_tmp[824901]))
      {
        unknown cs[156507] "dead at end of block" "insert auto destroy"
        unknown call_tmp[824906] "expr temp" "maybe param" "maybe type" "temp"
        (824909 'move' call_tmp[824906](156509 call c_ptrConst[46990](?) c_char[562]))
        (646688 'default init var' cs[156507] call_tmp[824906])
        (156512 'end of statement')
        unknown len[156514] "dead at end of block" "insert auto destroy"
        (646690 'default init var' len[156514] int(64)[10])
        (156517 'end of statement')
        unknown call_tmp[824913] "expr temp" "maybe param" "maybe type" "temp"
        (824916 'move' call_tmp[824913](156521 call _regex _mt[203] x[156488]))
        (156519 call qio_regex_borrow_pattern call_tmp[824913] cs[156507] len[156514])
        (555586 'end of statement' cs[156507] len[156514])
        Try!
        {
          {
            unknown call_tmp[824920] "expr temp" "maybe param" "maybe type" "temp"
            (824923 'move' call_tmp[824920](156534 call(156531 call (partial) createCopyingBuffer _mt[203] t[156492]) cs[156507] len[156514]))
            (156527 call = pattern[156497] call_tmp[824920])
            (555589 'end of statement' pattern[156497] cs[156507] len[156514])
          }
        }
      }
      (156547 'elided on block' 0 tmp[156543])
    }
    (611941 'move' ret[611936](611940 'deref' pattern[156497]))
    gotoReturn _end_:[611934] _end_:[611934]
    (555593 'end of statement' pattern[156497])
    label _end_:[611934]
    (611938 return ret[611936])
  }
  function string[244].find[156555](arg _mt[156567]:_MT[201], arg this[156558]:string[244] :
  string[244], arg pattern[156564] :
  (156562 call regex[156365](?) string[244])) : _unknown[42] "method"
  {
    unknown ret[611947] "RVV" "temp"
    unknown call_tmp[824927] "expr temp" "maybe param" "maybe type" "temp"
    (824930 'move' call_tmp[824927](156578 call(156575 call (partial) search _mt[203] pattern[156564]) this[156558]))
    unknown call_tmp[824934] "expr temp" "maybe param" "maybe type" "temp"
    (824937 'move' call_tmp[824934](156580 call byteOffset _mt[203] call_tmp[824927]))
    (611953 'move' ret[611947](611952 'coerce' call_tmp[824934] byteIndex[18611]))
    (611949 return ret[611947])
  }
  { scopeless type
    byteIndex[18611]
  }
  function bytes[232].find[156586](arg _mt[156598]:_MT[201], arg this[156589]:bytes[232] :
  bytes[232], arg pattern[156595] :
  (156593 call regex[156365](?) bytes[232])) : _unknown[42] "method"
  {
    unknown ret[611957] "RVV" "temp"
    unknown call_tmp[824941] "expr temp" "maybe param" "maybe type" "temp"
    (824944 'move' call_tmp[824941](156607 call(156604 call (partial) search _mt[203] pattern[156595]) this[156589]))
    unknown call_tmp[824948] "expr temp" "maybe param" "maybe type" "temp"
    (824951 'move' call_tmp[824948](156609 call byteOffset _mt[203] call_tmp[824941]))
    (611963 'move' ret[611957](611962 'coerce' call_tmp[824948] byteIndex[18611]))
    (611959 return ret[611957])
  }
  { scopeless type
    byteIndex[18611]
  }
  function string[244].replace[156615](arg _mt[156637]:_MT[201], arg this[156618]:string[244] :
  string[244], arg pattern[156624] :
  (156622 call regex[156365](?) string[244]), arg replacement[156628]:string[244], arg count[156634] :
  (1001953 call - 1) =
  (156631 call - 1)) : _unknown[42] "method"
  {
    unknown ret[611967] "RVV" "temp"
    unknown call_tmp[824953] "maybe param" "maybe type" "temp"
    (824956 'move' call_tmp[824953](156647 call doReplaceAndCount this[156618] pattern[156624] replacement[156628] count[156634]))
    unknown tmp[156652] "dead at end of block" "insert auto destroy" "temp"
    (646692 'init var' tmp[156652] call_tmp[824953])
    (156659 call _check_tuple_var_decl tmp[156652] 2)
    (555597 'end of statement')
    unknown call_tmp[824958] "maybe param" "maybe type" "temp"
    (824961 'move' call_tmp[824958](156653 call tmp[156652] 0))
    unknown str[156642] "dead at end of block" "insert auto destroy"
    (646694 'init var' str[156642] call_tmp[824958])
    unknown call_tmp[824963] "maybe param" "maybe type" "temp"
    (824966 'move' call_tmp[824963](156656 call tmp[156652] 1))
    unknown dummy[156644] "dead at end of block" "insert auto destroy"
    (646696 'init var' dummy[156644] call_tmp[824963])
    (156664 'end of statement')
    (611973 'move' ret[611967](611972 'coerce' str[156642] string[244]))
    gotoReturn _end_replace[611965] _end_replace[611965]
    (555598 'end of statement' str[156642])
    label _end_replace[611965]
    (611969 return ret[611967])
  }
  { scopeless type
    string[244]
  }
  function bytes[232].replace[156670](arg _mt[156692]:_MT[201], arg this[156673]:bytes[232] :
  bytes[232], arg pattern[156679] :
  (156677 call regex[156365](?) bytes[232]), arg replacement[156683]:bytes[232], arg count[156689] :
  (1001957 call - 1) =
  (156686 call - 1)) : _unknown[42] "method"
  {
    unknown ret[611979] "RVV" "temp"
    unknown call_tmp[824968] "maybe param" "maybe type" "temp"
    (824971 'move' call_tmp[824968](156702 call doReplaceAndCount this[156673] pattern[156679] replacement[156683] count[156689]))
    unknown tmp[156707] "dead at end of block" "insert auto destroy" "temp"
    (646698 'init var' tmp[156707] call_tmp[824968])
    (156714 call _check_tuple_var_decl tmp[156707] 2)
    (555600 'end of statement')
    unknown call_tmp[824973] "maybe param" "maybe type" "temp"
    (824976 'move' call_tmp[824973](156708 call tmp[156707] 0))
    unknown str[156697] "dead at end of block" "insert auto destroy"
    (646700 'init var' str[156697] call_tmp[824973])
    unknown call_tmp[824978] "maybe param" "maybe type" "temp"
    (824981 'move' call_tmp[824978](156711 call tmp[156707] 1))
    unknown dummy[156699] "dead at end of block" "insert auto destroy"
    (646702 'init var' dummy[156699] call_tmp[824978])
    (156719 'end of statement')
    (611985 'move' ret[611979](611984 'coerce' str[156697] bytes[232]))
    gotoReturn _end_replace[611977] _end_replace[611977]
    (555601 'end of statement' str[156697])
    label _end_replace[611977]
    (611981 return ret[611979])
  }
  { scopeless type
    bytes[232]
  }
  function string[244].replaceAndCount[156725](arg _mt[156747]:_MT[201], arg this[156728]:string[244] :
  string[244], arg pattern[156734] :
  (156732 call regex[156365](?) string[244]), arg replacement[156738]:string[244], arg count[156744] :
  (1001961 call - 1) =
  (156741 call - 1)) : _unknown[42] "method"
  {
    unknown ret[611991] "RVV" "temp"
    unknown call_tmp[824983] "expr temp" "maybe param" "maybe type" "temp"
    (824986 'move' call_tmp[824983](156757 call doReplaceAndCount this[156728] pattern[156734] replacement[156738] count[156744]))
    unknown call_tmp[824988] "expr temp" "maybe param" "maybe type" "temp"
    (824991 'move' call_tmp[824988](611996 call _build_tuple string[244] int(64)[10]))
    (612000 'move' ret[611991](611999 'coerce' call_tmp[824983] call_tmp[824988]))
    (611993 return ret[611991])
  }
  { scopeless type
    (156752 call _build_tuple string[244] int(64)[10])
  }
  function bytes[232].replaceAndCount[156765](arg _mt[156787]:_MT[201], arg this[156768]:bytes[232] :
  bytes[232], arg pattern[156774] :
  (156772 call regex[156365](?) bytes[232]), arg replacement[156778]:bytes[232], arg count[156784] :
  (1001965 call - 1) =
  (156781 call - 1)) : _unknown[42] "method"
  {
    unknown ret[612004] "RVV" "temp"
    unknown call_tmp[824993] "expr temp" "maybe param" "maybe type" "temp"
    (824996 'move' call_tmp[824993](156797 call doReplaceAndCount this[156768] pattern[156774] replacement[156778] count[156784]))
    unknown call_tmp[824998] "expr temp" "maybe param" "maybe type" "temp"
    (825001 'move' call_tmp[824998](612009 call _build_tuple bytes[232] int(64)[10]))
    (612013 'move' ret[612004](612012 'coerce' call_tmp[824993] call_tmp[824998]))
    (612006 return ret[612004])
  }
  { scopeless type
    (156792 call _build_tuple bytes[232] int(64)[10])
  }
  function doReplaceAndCount[156805](arg x[156809]:_any[141](?), arg pattern[156815] :
  unknown call_tmp[825003] "expr temp" "maybe param" "maybe type" "temp" "type variable", arg replacement[156819] :
  (526458 'typeof' x[156809]), arg count[156825] :
  (1001969 call - 1) =
  (156822 call - 1)) : _unknown[42] "inline" "private"
  {
    unknown ret[612017] "RVV" "temp"
    unknown regexCopy[156840] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825008] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (825011 'move' call_tmp[825008](526460 'typeof' x[156809]))
    unknown call_tmp[825013] "expr temp" "maybe param" "maybe type" "temp"
    (825016 'move' call_tmp[825013](156842 call regex[156365](?) call_tmp[825008]))
    (646704 'default init var' regexCopy[156840] call_tmp[825013])
    (156845 'end of statement')
    unknown call_tmp[825020] "expr temp" "maybe param" "maybe type" "temp"
    (825023 'move' call_tmp[825020](156854 call home _mt[203] pattern[156815]))
    unknown call_tmp[825025] "expr temp" "maybe param" "maybe type" "temp"
    (825028 'move' call_tmp[825025](434730 call here[135591]))
    unknown call_tmp[825030] "expr temp" "maybe param" "maybe type" "temp"
    (825033 'move' call_tmp[825030](156851 call != call_tmp[825020] call_tmp[825025]))
    unknown call_tmp[825035] "expr temp" "maybe param" "maybe type" "temp"
    (825038 'move' call_tmp[825035](156858 call _cond_test call_tmp[825030]))
    if call_tmp[825035]
    {
      (156846 call = regexCopy[156840] pattern[156815])
      (555605 'end of statement' regexCopy[156840])
    }
    const localRegex[156864] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[682720] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682721] "maybe param" "temp"
    unknown call_tmp[825042] "expr temp" "maybe param" "maybe type" "temp"
    (825045 'move' call_tmp[825042](156868 call home _mt[203] pattern[156815]))
    unknown call_tmp[825047] "expr temp" "maybe param" "maybe type" "temp"
    (825050 'move' call_tmp[825047](434732 call here[135591]))
    unknown call_tmp[825052] "expr temp" "maybe param" "maybe type" "temp"
    (825055 'move' call_tmp[825052](156865 call != call_tmp[825042] call_tmp[825047]))
    (682726 'move' tmp[682721](682724 call _cond_test call_tmp[825052]))
    if tmp[682721]
    {
      unknown tmp[682728] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682730 'move' tmp[682728](156873 call _regex _mt[203] regexCopy[156840]))
      (682735 'move' tmp[682720](682732 '_paramFoldLogical' tmp[682721] tmp[682728]))
    }
    {
      unknown tmp[682737] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (682739 'move' tmp[682737](156877 call _regex _mt[203] pattern[156815]))
      (682744 'move' tmp[682720](682741 '_paramFoldLogical' tmp[682721] tmp[682737]))
    }
    (646706 'init var' localRegex[156864] tmp[682720])
    (156884 'end of statement')
    unknown pos[156886] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646708] "maybe param" "maybe type" "temp"
    (646714 'move' type_tmp[646708] byteIndex[18611])
    (646710 'init var split decl' pos[156886] type_tmp[646708])
    (156889 'end of statement')
    unknown endpos[156891] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[646719] "maybe param" "maybe type" "temp"
    (646725 'move' type_tmp[646719] byteIndex[18611])
    (646721 'init var split decl' endpos[156891] type_tmp[646719])
    (156894 'end of statement')
    (646716 'init var split init' pos[156886] 0 type_tmp[646708])
    (555608 'end of statement' pos[156886])
    unknown call_tmp[825063] "expr temp" "maybe param" "maybe type" "temp"
    (825066 'move' call_tmp[825063](156906 call numBytes _mt[203] x[156809]))
    unknown call_tmp[825068] "maybe param" "maybe type" "temp"
    (825071 'move' call_tmp[825068](156902 call + pos[156886] call_tmp[825063]))
    (646727 'init var split init' endpos[156891] call_tmp[825068] type_tmp[646719])
    (555610 'end of statement' endpos[156891] pos[156886])
    unknown replaced[156910] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825073] "expr temp" "maybe param" "maybe type" "temp"
    (825076 'move' call_tmp[825073](156912 call c_ptrConst[46990](?) c_char[562]))
    (646730 'default init var' replaced[156910] call_tmp[825073])
    (156915 'end of statement')
    unknown replaced_len[156917] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825078] "expr temp" "maybe param" "maybe type" "temp"
    (825081 'move' call_tmp[825078](156919 call int(64)[10] 64))
    (646732 'default init var' replaced_len[156917] call_tmp[825078])
    (156922 'end of statement')
    unknown call_tmp[825085] "expr temp" "maybe param" "maybe type" "temp"
    (825088 'move' call_tmp[825085](156933 call(156930 call (partial) localize _mt[203] replacement[156819])))
    unknown call_tmp[825092] "expr temp" "maybe param" "maybe type" "temp"
    (825095 'move' call_tmp[825092](156937 call(156934 call (partial) c_str _mt[203] call_tmp[825085])))
    unknown call_tmp[825099] "expr temp" "maybe param" "maybe type" "temp"
    (825102 'move' call_tmp[825099](156939 call numBytes _mt[203] replacement[156819]))
    unknown call_tmp[825106] "expr temp" "maybe param" "maybe type" "temp"
    (825109 'move' call_tmp[825106](156946 call(156943 call (partial) localize _mt[203] x[156809])))
    unknown call_tmp[825113] "expr temp" "maybe param" "maybe type" "temp"
    (825116 'move' call_tmp[825113](156950 call(156947 call (partial) c_str _mt[203] call_tmp[825106])))
    unknown call_tmp[825120] "expr temp" "maybe param" "maybe type" "temp"
    (825123 'move' call_tmp[825120](156952 call numBytes _mt[203] x[156809]))
    unknown call_tmp[825125] "maybe param" "maybe type" "temp"
    (825128 'move' call_tmp[825125](156927 call qio_regex_replace localRegex[156864] call_tmp[825092] call_tmp[825099] call_tmp[825113] call_tmp[825120] count[156825] replaced[156910] replaced_len[156917]))
    unknown nreplaced[156924] "dead at end of block" "insert auto destroy"
    (646734 'init var' nreplaced[156924] call_tmp[825125] int(64)[10])
    (156959 'end of statement')
    unknown call_tmp[825130] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (825133 'move' call_tmp[825130](526462 'typeof' x[156809]))
    unknown call_tmp[825137] "maybe param" "maybe type" "temp"
    (825140 'move' call_tmp[825137](156966 call(156963 call (partial) createAdoptingBuffer _mt[203] call_tmp[825130]) replaced[156910] replaced_len[156917]))
    unknown ret[156961] "dead at end of block" "insert auto destroy"
    (646736 'init var' ret[156961] call_tmp[825137])
    (156971 'end of statement' regexCopy[156840] localRegex[156864] replaced[156910] replaced_len[156917] replaced[156910] replaced_len[156917])
    unknown call_tmp[825142] "expr temp" "maybe param" "maybe type" "temp"
    (825145 'move' call_tmp[825142](156976 call _build_tuple ret[156961] nreplaced[156924]))
    (612022 'move' ret[612017](612021 'deref' call_tmp[825142]))
    gotoReturn _end_doReplaceAndCount[612015] _end_doReplaceAndCount[612015]
    (555618 'end of statement' ret[156961] nreplaced[156924])
    label _end_doReplaceAndCount[612015]
    (612019 return ret[612017])
  }
  where {
    unknown tmp[489534] "maybe param" "temp"
    unknown call_tmp[825147] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (825150 'move' call_tmp[825147](526464 'typeof' x[156809]))
    (489545 'move' tmp[489534](156830 call == call_tmp[825147] string[244]))
    unknown call_tmp[825152] "expr temp" "maybe param" "maybe type" "temp"
    (825155 'move' call_tmp[825152](489547 call _cond_invalid tmp[489534]))
    if call_tmp[825152]
    {
      (489550 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682751] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682752] "maybe param" "temp"
    unknown call_tmp[825157] "expr temp" "maybe param" "maybe type" "temp"
    (825160 'move' call_tmp[825157](489535 call isTrue tmp[489534]))
    (682757 'move' tmp[682752](682755 call _cond_test call_tmp[825157]))
    if tmp[682752]
    {
      (682762 'move' tmp[682751](682759 '_paramFoldLogical' tmp[682752] 1))
    }
    {
      unknown tmp[682764] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[825162] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (825165 'move' call_tmp[825162](526466 'typeof' x[156809]))
      unknown call_tmp[825167] "expr temp" "maybe param" "maybe type" "temp"
      (825170 'move' call_tmp[825167](156834 call == call_tmp[825162] bytes[232]))
      (682766 'move' tmp[682764](489539 call isTrue call_tmp[825167]))
      (682771 'move' tmp[682751](682768 '_paramFoldLogical' tmp[682752] tmp[682764]))
    }
    (1001456 call chpl_statementLevelSymbol tmp[682751])
  }
  function string[244].startsWith[156981](arg _mt[156993]:_MT[201], arg this[156984]:string[244] :
  string[244], arg pattern[156990] :
  (156988 call regex[156365](?) string[244])) : _unknown[42] "method"
  {
    unknown ret[612028] "RVV" "temp"
    unknown call_tmp[825174] "maybe param" "maybe type" "temp"
    (825177 'move' call_tmp[825174](157005 call(157002 call (partial) match _mt[203] pattern[156990]) this[156984]))
    unknown rm[156998] "dead at end of block" "insert auto destroy"
    (646738 'init var' rm[156998] call_tmp[825174])
    (157008 'end of statement')
    unknown call_tmp[825181] "expr temp" "maybe param" "maybe type" "temp"
    (825184 'move' call_tmp[825181](157013 call byteOffset _mt[203] rm[156998]))
    unknown call_tmp[825186] "expr temp" "maybe param" "maybe type" "temp"
    (825189 'move' call_tmp[825186](157010 call == call_tmp[825181] 0))
    (612034 'move' ret[612028](612033 'coerce' call_tmp[825186] bool[19]))
    gotoReturn _end_startsWith[612026] _end_startsWith[612026]
    (555621 'end of statement' rm[156998])
    label _end_startsWith[612026]
    (612030 return ret[612028])
  }
  { scopeless type
    bool[19]
  }
  function bytes[232].startsWith[157020](arg _mt[157032]:_MT[201], arg this[157023]:bytes[232] :
  bytes[232], arg pattern[157029] :
  (157027 call regex[156365](?) bytes[232])) : _unknown[42] "method"
  {
    unknown ret[612040] "RVV" "temp"
    unknown call_tmp[825193] "maybe param" "maybe type" "temp"
    (825196 'move' call_tmp[825193](157042 call(157039 call (partial) match _mt[203] pattern[157029]) this[157023]))
    unknown rm[157037] "dead at end of block" "insert auto destroy"
    (646740 'init var' rm[157037] call_tmp[825193])
    (157045 'end of statement')
    unknown call_tmp[825200] "expr temp" "maybe param" "maybe type" "temp"
    (825203 'move' call_tmp[825200](157050 call byteOffset _mt[203] rm[157037]))
    unknown call_tmp[825205] "expr temp" "maybe param" "maybe type" "temp"
    (825208 'move' call_tmp[825205](157047 call == call_tmp[825200] 0))
    (612046 'move' ret[612040](612045 'coerce' call_tmp[825205] bool[19]))
    gotoReturn _end_startsWith[612038] _end_startsWith[612038]
    (555623 'end of statement' rm[157037])
    label _end_startsWith[612038]
    (612042 return ret[612040])
  }
  { scopeless type
    bool[19]
  }
  function string[244].split[157057](arg _mt[157075]:_MT[201], arg this[157060]:string[244] :
  string[244], arg sep[157066] :
  (157064 call regex[156365](?) string[244]), arg maxsplit[157071]:int(64)[10] =
  0) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[612052] "RVV" "temp"
    {
      unknown _indexOfInterest[157090] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[157091] "expr temp" "temp"
      unknown call_tmp[825212] "expr temp" "maybe param" "maybe type" "temp"
      (825215 'move' call_tmp[825212](157084 call(157081 call (partial) split _mt[203] sep[157066]) this[157060] maxsplit[157071]))
      (157100 'move' _iterator[157091](157098 call _getIterator call_tmp[825212]))
      Defer
      {
        {
          (157115 call _freeIterator _iterator[157091])
        }
      }
      { scopeless type
        (157105 'move' _indexOfInterest[157090](157102 call iteratorIndex _iterator[157091]))
      }
      ForLoop[157092]
      {
        unknown v[157078] "index var" "insert auto destroy"
        (555626 'end of statement')
        (157110 'move' v[157078] _indexOfInterest[157090])
        (555627 'end of statement' v[157078])
        {
          unknown yret[612056] "YVV" "temp"
          (612059 'move' yret[612056](612058 'deref' v[157078]))
          (157088 yield yret[612056])
          (555629 'end of statement' v[157078])
        }
        label _continueLabel[157095]
        _indexOfInterest[157090]
        _iterator[157091]
      }
      label _breakLabel[157096]
    }
    (612054 return ret[612052])
  }
  function bytes[232].split[157124](arg _mt[157142]:_MT[201], arg this[157127]:bytes[232] :
  bytes[232], arg sep[157133] :
  (157131 call regex[156365](?) bytes[232]), arg maxsplit[157138]:int(64)[10] =
  0) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[612064] "RVV" "temp"
    {
      unknown _indexOfInterest[157157] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[157158] "expr temp" "temp"
      unknown call_tmp[825219] "expr temp" "maybe param" "maybe type" "temp"
      (825222 'move' call_tmp[825219](157151 call(157148 call (partial) split _mt[203] sep[157133]) this[157127] maxsplit[157138]))
      (157167 'move' _iterator[157158](157165 call _getIterator call_tmp[825219]))
      Defer
      {
        {
          (157182 call _freeIterator _iterator[157158])
        }
      }
      { scopeless type
        (157172 'move' _indexOfInterest[157157](157169 call iteratorIndex _iterator[157158]))
      }
      ForLoop[157159]
      {
        unknown v[157145] "index var" "insert auto destroy"
        (555632 'end of statement')
        (157177 'move' v[157145] _indexOfInterest[157157])
        (555633 'end of statement' v[157145])
        {
          unknown yret[612068] "YVV" "temp"
          (612071 'move' yret[612068](612070 'deref' v[157145]))
          (157155 yield yret[612068])
          (555635 'end of statement' v[157145])
        }
        label _continueLabel[157162]
        _indexOfInterest[157157]
        _iterator[157158]
      }
      label _breakLabel[157163]
    }
    (612066 return ret[612064])
  }
  function fileReader[170893](?).readThrough[157191](arg _mt[157214]:_MT[201], arg this[157194]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157201]:regex[156365](?), arg maxSize[157207] :
  (1001973 call - 1) =
  (157204 call - 1), arg stripSeparator[157211] :
  0 =
  0) : _unknown[42] throws "method"
  {
    unknown ret[612076] "RVV" "temp"
    unknown s[157229] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825224] "expr temp" "maybe param" "maybe type" "temp"
    (825227 'move' call_tmp[825224](526474 'query' separator[157201] 1))
    (646742 'default init var' s[157229] call_tmp[825224])
    (157232 'end of statement')
    unknown call_tmp[825231] "expr temp" "maybe param" "maybe type" "temp"
    (825234 'move' call_tmp[825231](157258 call(157255 call (partial) readThrough _mt[203] this[157194]) separator[157201] s[157229] maxSize[157207] stripSeparator[157211]))
    unknown call_tmp[825236] "expr temp" "maybe param" "maybe type" "temp"
    (825239 'move' call_tmp[825236](157250 call ! call_tmp[825231]))
    unknown call_tmp[825241] "expr temp" "maybe param" "maybe type" "temp"
    (825244 'move' call_tmp[825241](157263 call _cond_test call_tmp[825236]))
    if call_tmp[825241]
    {
      unknown call_tmp[825246] "expr temp" "maybe param" "maybe type" "temp"
      (825249 'move' call_tmp[825246](526477 'query' separator[157201] 1))
      unknown call_tmp[825251] "expr temp" "maybe param" "maybe type" "temp"
      (825254 'move' call_tmp[825251](157244 call : call_tmp[825246] string[244]))
      unknown call_tmp[825256] "expr temp" "maybe param" "maybe type" "temp"
      (825259 'move' call_tmp[825256](157239 call + "reached EOF in readThrough(" call_tmp[825251]))
      unknown call_tmp[825261] "expr temp" "maybe param" "maybe type" "temp"
      (825264 'move' call_tmp[825261](157237 call + call_tmp[825256] ")"))
      unknown call_tmp[825266] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (825269 'move' call_tmp[825266](1000168 'new' EofError[414412](?) call_tmp[825261]))
      unknown call_tmp[825271] "expr temp" "maybe param" "maybe type" "temp"
      (825274 'move' call_tmp[825271](542265 call chpl_fix_thrown_error call_tmp[825266]))
      (157233 'throw' call_tmp[825271])
    }
    unknown call_tmp[825276] "expr temp" "maybe param" "maybe type" "temp"
    (825279 'move' call_tmp[825276](612080 'query' separator[157201] 1))
    (612084 'move' ret[612076](612083 'coerce' s[157229] call_tmp[825276]))
    gotoReturn _end_readThrough[612074] _end_readThrough[612074]
    (555638 'end of statement' s[157229])
    label _end_readThrough[612074]
    (612078 return ret[612076])
  }
  where {
    unknown tmp[489555] "maybe param" "temp"
    unknown call_tmp[825281] "expr temp" "maybe param" "maybe type" "temp"
    (825284 'move' call_tmp[825281](526480 'query' separator[157201] 1))
    (489566 'move' tmp[489555](157219 call == call_tmp[825281] string[244]))
    unknown call_tmp[825286] "expr temp" "maybe param" "maybe type" "temp"
    (825289 'move' call_tmp[825286](489568 call _cond_invalid tmp[489555]))
    if call_tmp[825286]
    {
      (489571 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682778] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682779] "maybe param" "temp"
    unknown call_tmp[825291] "expr temp" "maybe param" "maybe type" "temp"
    (825294 'move' call_tmp[825291](489556 call isTrue tmp[489555]))
    (682784 'move' tmp[682779](682782 call _cond_test call_tmp[825291]))
    if tmp[682779]
    {
      (682789 'move' tmp[682778](682786 '_paramFoldLogical' tmp[682779] 1))
    }
    {
      unknown tmp[682791] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[825296] "expr temp" "maybe param" "maybe type" "temp"
      (825299 'move' call_tmp[825296](526483 'query' separator[157201] 1))
      unknown call_tmp[825301] "expr temp" "maybe param" "maybe type" "temp"
      (825304 'move' call_tmp[825301](157223 call == call_tmp[825296] bytes[232]))
      (682793 'move' tmp[682791](489560 call isTrue call_tmp[825301]))
      (682798 'move' tmp[682778](682795 '_paramFoldLogical' tmp[682779] tmp[682791]))
    }
    (1001458 call chpl_statementLevelSymbol tmp[682778])
  }
  { scopeless type
    (526486 'query' separator[157201] 1)
  }
  function fileReader[170893](?).readThrough[157274](arg _mt[157300]:_MT[201], arg this[157277]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157283] :
  (157281 call regex[156365](?) string[244]), ref arg s[157287]:string[244], arg maxSize[157293] :
  (1001979 call - 1) =
  (157290 call - 1), arg stripSeparator[157297] :
  0 =
  0) : _unknown[42] throws "method"
  {
    unknown ret[612090] "RVV" "temp"
    {
      const tmp[157568] "const" "temp"
      unknown call_tmp[825308] "expr temp" "maybe param" "maybe type" "temp"
      (825311 'move' call_tmp[825308](157315 call _home _mt[203] this[157277]))
      unknown call_tmp[825313] "expr temp" "maybe param" "maybe type" "temp"
      (825316 'move' call_tmp[825313](157565 '_wide_get_locale' call_tmp[825308]))
      (157569 'move' tmp[157568](157566 'deref' call_tmp[825313]))
      {
        Try
        {
          {
            (157324 call(157321 call (partial) lock _mt[203] this[157277]))
          }
        }
        Defer
        {
          {
            (157333 call(157330 call (partial) unlock _mt[203] this[157277]))
          }
        }
        unknown call_tmp[825322] "expr temp" "maybe param" "maybe type" "temp"
        (825325 'move' call_tmp[825322](157348 call * 4 maxSize[157293]))
        unknown call_tmp[825327] "maybe param" "maybe type" "temp"
        (825330 'move' call_tmp[825327](157346 call _findSeparator separator[157283] call_tmp[825322] this[157277]))
        const tmp[157353] "dead at end of block" "const" "insert auto destroy" "temp"
        (646744 'init var' tmp[157353] call_tmp[825327])
        (157366 call _check_tuple_var_decl tmp[157353] 4)
        (555642 'end of statement')
        unknown call_tmp[825332] "maybe param" "maybe type" "temp"
        (825335 'move' call_tmp[825332](157354 call tmp[157353] 0))
        const searchErr[157337] "dead at end of block" "const" "insert auto destroy"
        (646746 'init var' searchErr[157337] call_tmp[825332])
        unknown call_tmp[825337] "maybe param" "maybe type" "temp"
        (825340 'move' call_tmp[825337](157357 call tmp[157353] 1))
        const found[157339] "dead at end of block" "const" "insert auto destroy"
        (646748 'init var' found[157339] call_tmp[825337])
        unknown call_tmp[825342] "maybe param" "maybe type" "temp"
        (825345 'move' call_tmp[825342](157360 call tmp[157353] 2))
        const relByteOffset[157341] "dead at end of block" "const" "insert auto destroy"
        (646750 'init var' relByteOffset[157341] call_tmp[825342])
        unknown call_tmp[825347] "maybe param" "maybe type" "temp"
        (825350 'move' call_tmp[825347](157363 call tmp[157353] 3))
        const match[157343] "dead at end of block" "const" "insert auto destroy"
        (646752 'init var' match[157343] call_tmp[825347])
        (157371 'end of statement')
        unknown tmp[489576] "maybe param" "temp"
        (489587 'move' tmp[489576](157389 call != searchErr[157337] 0))
        unknown call_tmp[825352] "expr temp" "maybe param" "maybe type" "temp"
        (825355 'move' call_tmp[825352](489589 call _cond_invalid tmp[489576]))
        if call_tmp[825352]
        {
          (489592 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682805] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682806] "maybe param" "temp"
        unknown call_tmp[825357] "expr temp" "maybe param" "maybe type" "temp"
        (825360 'move' call_tmp[825357](489577 call isTrue tmp[489576]))
        (682811 'move' tmp[682806](682809 call _cond_test call_tmp[825357]))
        if tmp[682806]
        {
          unknown tmp[682813] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[825362] "expr temp" "maybe param" "maybe type" "temp"
          (825365 'move' call_tmp[825362](434783 call EEOF[158629]))
          unknown call_tmp[825367] "expr temp" "maybe param" "maybe type" "temp"
          (825370 'move' call_tmp[825367](157393 call != searchErr[157337] call_tmp[825362]))
          (682815 'move' tmp[682813](489580 call isTrue call_tmp[825367]))
          (682820 'move' tmp[682805](682817 '_paramFoldLogical' tmp[682806] tmp[682813]))
        }
        {
          (682825 'move' tmp[682805](682822 '_paramFoldLogical' tmp[682806] 0))
        }
        unknown call_tmp[825372] "expr temp" "maybe param" "maybe type" "temp"
        (825375 'move' call_tmp[825372](157397 call _cond_test tmp[682805]))
        if call_tmp[825372]
        {
          Try
          {
            {
              (157379 call(157376 call (partial) _ch_ioerror _mt[203] this[157277]) searchErr[157337] "in readThrough(regex(string))")
              (555644 'end of statement' searchErr[157337])
            }
          }
        }
        unknown call_tmp[825379] "expr temp" "maybe param" "maybe type" "temp"
        (825382 'move' call_tmp[825379](157412 call >= maxSize[157293] 0))
        unknown call_tmp[825384] "expr temp" "maybe param" "maybe type" "temp"
        (825387 'move' call_tmp[825384](157416 call _cond_test call_tmp[825379]))
        if call_tmp[825384]
        {
          unknown call_tmp[825391] "expr temp" "maybe param" "maybe type" "temp"
          (825394 'move' call_tmp[825391](157408 call _channel_internal _mt[203] this[157277]))
          (157403 call qio_channel_mark 0 call_tmp[825391])
        }
        unknown call_tmp[825398] "expr temp" "maybe param" "maybe type" "temp"
        (825401 'move' call_tmp[825398](157427 call _channel_internal _mt[203] this[157277]))
        unknown call_tmp[825403] "expr temp" "maybe param" "maybe type" "temp"
        (825406 'move' call_tmp[825403](157431 call - 1))
        unknown call_tmp[825408] "maybe param" "maybe type" "temp"
        (825411 'move' call_tmp[825408](157424 call readStringBytesData s[157287] call_tmp[825398] relByteOffset[157341] call_tmp[825403]))
        const err[157422] "dead at end of block" "const" "insert auto destroy"
        (646754 'init var' err[157422] call_tmp[825408])
        (157435 'end of statement' relByteOffset[157341])
        unknown call_tmp[825413] "expr temp" "maybe param" "maybe type" "temp"
        (825416 'move' call_tmp[825413](157531 call _cond_test err[157422]))
        if call_tmp[825413]
        {
          unknown call_tmp[825418] "expr temp" "maybe param" "maybe type" "temp"
          (825421 'move' call_tmp[825418](157444 call >= maxSize[157293] 0))
          unknown call_tmp[825423] "expr temp" "maybe param" "maybe type" "temp"
          (825426 'move' call_tmp[825423](157448 call _cond_test call_tmp[825418]))
          if call_tmp[825423]
          {
            unknown call_tmp[825430] "expr temp" "maybe param" "maybe type" "temp"
            (825433 'move' call_tmp[825430](157440 call _channel_internal _mt[203] this[157277]))
            (157438 call qio_channel_revert_unlocked call_tmp[825430])
          }
          Try
          {
            {
              (157458 call(157455 call (partial) _ch_ioerror _mt[203] this[157277]) err[157422] "in readThrough(regex(string))")
              (555649 'end of statement' err[157422])
            }
          }
        }
        {
          unknown tmp[489597] "maybe param" "temp"
          (489608 'move' tmp[489597](157503 call >= maxSize[157293] 0))
          unknown call_tmp[825437] "expr temp" "maybe param" "maybe type" "temp"
          (825440 'move' call_tmp[825437](489610 call _cond_invalid tmp[489597]))
          if call_tmp[825437]
          {
            (489613 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[682859] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[682860] "maybe param" "temp"
          unknown call_tmp[825442] "expr temp" "maybe param" "maybe type" "temp"
          (825445 'move' call_tmp[825442](489598 call isTrue tmp[489597]))
          (682865 'move' tmp[682860](682863 call _cond_test call_tmp[825442]))
          if tmp[682860]
          {
            unknown tmp[682832] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[682833] "maybe param" "temp"
            (682838 'move' tmp[682833](682836 call _cond_test stripSeparator[157297]))
            if tmp[682833]
            {
              unknown tmp[682840] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              (682842 'move' tmp[682840](157517 call numCodepoints _mt[203] match[157343]))
              (682847 'move' tmp[682832](682844 '_paramFoldLogical' tmp[682833] tmp[682840]))
            }
            {
              (682852 'move' tmp[682832](682849 '_paramFoldLogical' tmp[682833] 0))
            }
            unknown tmp[682867] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[825451] "expr temp" "maybe param" "maybe type" "temp"
            (825454 'move' call_tmp[825451](157512 call numCodepoints _mt[203] s[157287]))
            unknown call_tmp[825456] "expr temp" "maybe param" "maybe type" "temp"
            (825459 'move' call_tmp[825456](157509 call - call_tmp[825451] tmp[682832]))
            unknown call_tmp[825461] "expr temp" "maybe param" "maybe type" "temp"
            (825464 'move' call_tmp[825461](157507 call > call_tmp[825456] maxSize[157293]))
            (682869 'move' tmp[682867](489601 call isTrue call_tmp[825461]))
            (682874 'move' tmp[682859](682871 '_paramFoldLogical' tmp[682860] tmp[682867]))
          }
          {
            (682879 'move' tmp[682859](682876 '_paramFoldLogical' tmp[682860] 0))
          }
          unknown call_tmp[825466] "expr temp" "maybe param" "maybe type" "temp"
          (825469 'move' call_tmp[825466](157525 call _cond_test tmp[682859]))
          if call_tmp[825466]
          {
            unknown call_tmp[825473] "expr temp" "maybe param" "maybe type" "temp"
            (825476 'move' call_tmp[825473](157469 call _channel_internal _mt[203] this[157277]))
            (157467 call qio_channel_revert_unlocked call_tmp[825473])
            (555652 'end of statement')
            Try
            {
              {
                unknown call_tmp[825480] "expr temp" "maybe param" "maybe type" "temp"
                (825483 'move' call_tmp[825480](434790 call EFORMAT[158612]))
                unknown call_tmp[825485] "expr temp" "maybe param" "maybe type" "temp"
                (825488 'move' call_tmp[825485](157478 call : call_tmp[825480] errorCode[12828]))
                (157477 call(157474 call (partial) _ch_ioerror _mt[203] this[157277]) call_tmp[825485] "in readThrough(regex(string))")
              }
            }
          }
          {
            unknown call_tmp[825490] "expr temp" "maybe param" "maybe type" "temp"
            (825493 'move' call_tmp[825490](157493 call > maxSize[157293] 0))
            unknown call_tmp[825495] "expr temp" "maybe param" "maybe type" "temp"
            (825498 'move' call_tmp[825495](157497 call _cond_test call_tmp[825490]))
            if call_tmp[825495]
            {
              unknown call_tmp[825502] "expr temp" "maybe param" "maybe type" "temp"
              (825505 'move' call_tmp[825502](157490 call _channel_internal _mt[203] this[157277]))
              (157488 call qio_channel_commit_unlocked call_tmp[825502])
            }
          }
        }
        unknown tmp[489618] "maybe param" "temp"
        (489629 'move' tmp[489618] found[157339])
        unknown call_tmp[825507] "expr temp" "maybe param" "maybe type" "temp"
        (825510 'move' call_tmp[825507](489631 call _cond_invalid tmp[489618]))
        if call_tmp[825507]
        {
          (489634 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682886] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682887] "maybe param" "temp"
        unknown call_tmp[825512] "expr temp" "maybe param" "maybe type" "temp"
        (825515 'move' call_tmp[825512](489619 call isTrue tmp[489618]))
        (682892 'move' tmp[682887](682890 call _cond_test call_tmp[825512]))
        if tmp[682887]
        {
          unknown tmp[682894] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (682896 'move' tmp[682894](489622 call isTrue stripSeparator[157297]))
          (682901 'move' tmp[682886](682898 '_paramFoldLogical' tmp[682887] tmp[682894]))
        }
        {
          (682906 'move' tmp[682886](682903 '_paramFoldLogical' tmp[682887] 0))
        }
        unknown call_tmp[825517] "expr temp" "maybe param" "maybe type" "temp"
        (825520 'move' call_tmp[825517](157560 call _cond_test tmp[682886]))
        if call_tmp[825517]
        {
          unknown call_tmp[825524] "expr temp" "maybe param" "maybe type" "temp"
          (825527 'move' call_tmp[825524](157544 call size _mt[203] s[157287]))
          unknown call_tmp[825531] "expr temp" "maybe param" "maybe type" "temp"
          (825534 'move' call_tmp[825531](157548 call numCodepoints _mt[203] match[157343]))
          unknown call_tmp[825536] "expr temp" "maybe param" "maybe type" "temp"
          (825539 'move' call_tmp[825536](157541 call - call_tmp[825524] call_tmp[825531]))
          unknown call_tmp[825541] "expr temp" "maybe param" "maybe type" "temp"
          (825544 'move' call_tmp[825541](157551 call chpl__nudgeHighBound call_tmp[825536]))
          unknown call_tmp[825546] "expr temp" "maybe param" "maybe type" "temp"
          (825549 'move' call_tmp[825546](157553 call chpl_build_bounded_range 0 call_tmp[825541]))
          unknown call_tmp[825551] "expr temp" "maybe param" "maybe type" "temp"
          (825554 'move' call_tmp[825551](157539 call s[157287] call_tmp[825546]))
          (157535 call = s[157287] call_tmp[825551])
          (555656 'end of statement' match[157343])
        }
      }
      (157572 'elided on block' 0 tmp[157568])
    }
    unknown call_tmp[825558] "expr temp" "maybe param" "maybe type" "temp"
    (825561 'move' call_tmp[825558](157580 call size _mt[203] s[157287]))
    unknown call_tmp[825563] "expr temp" "maybe param" "maybe type" "temp"
    (825566 'move' call_tmp[825563](157577 call > call_tmp[825558] 0))
    (612096 'move' ret[612090](612095 'coerce' call_tmp[825563] bool[19]))
    (612092 return ret[612090])
    (396737 'used modules list'(157310 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function fileReader[170893](?).readThrough[157587](arg _mt[157613]:_MT[201], arg this[157590]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157596] :
  (157594 call regex[156365](?) bytes[232]), ref arg b[157600]:bytes[232], arg maxSize[157606] :
  (1001985 call - 1) =
  (157603 call - 1), arg stripSeparator[157610] :
  0 =
  0) : _unknown[42] throws "method"
  {
    unknown ret[612100] "RVV" "temp"
    {
      const tmp[157774] "const" "temp"
      unknown call_tmp[825570] "expr temp" "maybe param" "maybe type" "temp"
      (825573 'move' call_tmp[825570](157624 call _home _mt[203] this[157590]))
      unknown call_tmp[825575] "expr temp" "maybe param" "maybe type" "temp"
      (825578 'move' call_tmp[825575](157771 '_wide_get_locale' call_tmp[825570]))
      (157775 'move' tmp[157774](157772 'deref' call_tmp[825575]))
      {
        Try
        {
          {
            (157633 call(157630 call (partial) lock _mt[203] this[157590]))
          }
        }
        Defer
        {
          {
            (157642 call(157639 call (partial) unlock _mt[203] this[157590]))
          }
        }
        unknown call_tmp[825584] "maybe param" "maybe type" "temp"
        (825587 'move' call_tmp[825584](157655 call _findSeparator separator[157596] maxSize[157606] this[157590]))
        const tmp[157659] "dead at end of block" "const" "insert auto destroy" "temp"
        (646756 'init var' tmp[157659] call_tmp[825584])
        (157672 call _check_tuple_var_decl tmp[157659] 4)
        (555661 'end of statement')
        unknown call_tmp[825589] "maybe param" "maybe type" "temp"
        (825592 'move' call_tmp[825589](157660 call tmp[157659] 0))
        const searchErr[157646] "dead at end of block" "const" "insert auto destroy"
        (646758 'init var' searchErr[157646] call_tmp[825589])
        unknown call_tmp[825594] "maybe param" "maybe type" "temp"
        (825597 'move' call_tmp[825594](157663 call tmp[157659] 1))
        const found[157648] "dead at end of block" "const" "insert auto destroy"
        (646760 'init var' found[157648] call_tmp[825594])
        unknown call_tmp[825599] "maybe param" "maybe type" "temp"
        (825602 'move' call_tmp[825599](157666 call tmp[157659] 2))
        const relByteOffset[157650] "dead at end of block" "const" "insert auto destroy"
        (646762 'init var' relByteOffset[157650] call_tmp[825599])
        unknown call_tmp[825604] "maybe param" "maybe type" "temp"
        (825607 'move' call_tmp[825604](157669 call tmp[157659] 3))
        const match[157652] "dead at end of block" "const" "insert auto destroy"
        (646764 'init var' match[157652] call_tmp[825604])
        (157677 'end of statement')
        unknown tmp[489639] "maybe param" "temp"
        (489650 'move' tmp[489639](157693 call != searchErr[157646] 0))
        unknown call_tmp[825609] "expr temp" "maybe param" "maybe type" "temp"
        (825612 'move' call_tmp[825609](489652 call _cond_invalid tmp[489639]))
        if call_tmp[825609]
        {
          (489655 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682913] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682914] "maybe param" "temp"
        unknown call_tmp[825614] "expr temp" "maybe param" "maybe type" "temp"
        (825617 'move' call_tmp[825614](489640 call isTrue tmp[489639]))
        (682919 'move' tmp[682914](682917 call _cond_test call_tmp[825614]))
        if tmp[682914]
        {
          unknown tmp[682921] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[825619] "expr temp" "maybe param" "maybe type" "temp"
          (825622 'move' call_tmp[825619](434810 call EEOF[158629]))
          unknown call_tmp[825624] "expr temp" "maybe param" "maybe type" "temp"
          (825627 'move' call_tmp[825624](157697 call != searchErr[157646] call_tmp[825619]))
          (682923 'move' tmp[682921](489643 call isTrue call_tmp[825624]))
          (682928 'move' tmp[682913](682925 '_paramFoldLogical' tmp[682914] tmp[682921]))
        }
        {
          (682933 'move' tmp[682913](682930 '_paramFoldLogical' tmp[682914] 0))
        }
        unknown call_tmp[825629] "expr temp" "maybe param" "maybe type" "temp"
        (825632 'move' call_tmp[825629](157701 call _cond_test tmp[682913]))
        if call_tmp[825629]
        {
          Try
          {
            {
              (157683 call(157680 call (partial) _ch_ioerror _mt[203] this[157590]) searchErr[157646] "in readThrough(regex(bytes))")
              (555663 'end of statement' searchErr[157646])
            }
          }
        }
        unknown call_tmp[825638] "expr temp" "maybe param" "maybe type" "temp"
        (825641 'move' call_tmp[825638](157717 call _channel_internal _mt[203] this[157590]))
        unknown call_tmp[825643] "maybe param" "maybe type" "temp"
        (825646 'move' call_tmp[825643](157714 call readStringBytesData module=[222] IO[208303] b[157600] call_tmp[825638] relByteOffset[157650] 0))
        const err[157707] "dead at end of block" "const" "insert auto destroy"
        (646766 'init var' err[157707] call_tmp[825643])
        (157723 'end of statement' relByteOffset[157650])
        unknown call_tmp[825648] "expr temp" "maybe param" "maybe type" "temp"
        (825651 'move' call_tmp[825648](157736 call _cond_test err[157707]))
        if call_tmp[825648]
        {
          Try
          {
            {
              (157729 call(157726 call (partial) _ch_ioerror _mt[203] this[157590]) err[157707] "in readThrough(regex(bytes))")
              (555666 'end of statement' err[157707])
            }
          }
        }
        unknown tmp[489660] "maybe param" "temp"
        (489671 'move' tmp[489660] found[157648])
        unknown call_tmp[825655] "expr temp" "maybe param" "maybe type" "temp"
        (825658 'move' call_tmp[825655](489673 call _cond_invalid tmp[489660]))
        if call_tmp[825655]
        {
          (489676 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682940] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682941] "maybe param" "temp"
        unknown call_tmp[825660] "expr temp" "maybe param" "maybe type" "temp"
        (825663 'move' call_tmp[825660](489661 call isTrue tmp[489660]))
        (682946 'move' tmp[682941](682944 call _cond_test call_tmp[825660]))
        if tmp[682941]
        {
          unknown tmp[682948] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (682950 'move' tmp[682948](489664 call isTrue stripSeparator[157610]))
          (682955 'move' tmp[682940](682952 '_paramFoldLogical' tmp[682941] tmp[682948]))
        }
        {
          (682960 'move' tmp[682940](682957 '_paramFoldLogical' tmp[682941] 0))
        }
        unknown call_tmp[825665] "expr temp" "maybe param" "maybe type" "temp"
        (825668 'move' call_tmp[825665](157766 call _cond_test tmp[682940]))
        if call_tmp[825665]
        {
          unknown call_tmp[825672] "expr temp" "maybe param" "maybe type" "temp"
          (825675 'move' call_tmp[825672](157750 call size _mt[203] b[157600]))
          unknown call_tmp[825679] "expr temp" "maybe param" "maybe type" "temp"
          (825682 'move' call_tmp[825679](157754 call numBytes _mt[203] match[157652]))
          unknown call_tmp[825684] "expr temp" "maybe param" "maybe type" "temp"
          (825687 'move' call_tmp[825684](157747 call - call_tmp[825672] call_tmp[825679]))
          unknown call_tmp[825689] "expr temp" "maybe param" "maybe type" "temp"
          (825692 'move' call_tmp[825689](157757 call chpl__nudgeHighBound call_tmp[825684]))
          unknown call_tmp[825694] "expr temp" "maybe param" "maybe type" "temp"
          (825697 'move' call_tmp[825694](157759 call chpl_build_bounded_range 0 call_tmp[825689]))
          unknown call_tmp[825699] "expr temp" "maybe param" "maybe type" "temp"
          (825702 'move' call_tmp[825699](157745 call b[157600] call_tmp[825694]))
          (157741 call = b[157600] call_tmp[825699])
          (555669 'end of statement' match[157652])
        }
        (404007 'referenced modules list' IO[208303])
      }
      (157778 'elided on block' 0 tmp[157774])
    }
    unknown call_tmp[825706] "expr temp" "maybe param" "maybe type" "temp"
    (825709 'move' call_tmp[825706](157786 call size _mt[203] b[157600]))
    unknown call_tmp[825711] "expr temp" "maybe param" "maybe type" "temp"
    (825714 'move' call_tmp[825711](157783 call > call_tmp[825706] 0))
    (612106 'move' ret[612100](612105 'coerce' call_tmp[825711] bool[19]))
    (612102 return ret[612100])
    (396739 'used modules list'(157621 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function fileReader[170893](?).readTo[157793](arg _mt[157812]:_MT[201], arg this[157796]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157803]:regex[156365](?), arg maxSize[157809] :
  (1001991 call - 1) =
  (157806 call - 1)) : _unknown[42] throws "method"
  {
    unknown ret[612110] "RVV" "temp"
    unknown s[157827] "dead at end of block" "insert auto destroy"
    unknown call_tmp[825716] "expr temp" "maybe param" "maybe type" "temp"
    (825719 'move' call_tmp[825716](526496 'query' separator[157803] 1))
    (646768 'default init var' s[157827] call_tmp[825716])
    (157830 'end of statement')
    unknown call_tmp[825723] "expr temp" "maybe param" "maybe type" "temp"
    (825726 'move' call_tmp[825723](157856 call(157853 call (partial) readTo _mt[203] this[157796]) separator[157803] s[157827] maxSize[157809]))
    unknown call_tmp[825728] "expr temp" "maybe param" "maybe type" "temp"
    (825731 'move' call_tmp[825728](157848 call ! call_tmp[825723]))
    unknown call_tmp[825733] "expr temp" "maybe param" "maybe type" "temp"
    (825736 'move' call_tmp[825733](157860 call _cond_test call_tmp[825728]))
    if call_tmp[825733]
    {
      unknown call_tmp[825738] "expr temp" "maybe param" "maybe type" "temp"
      (825741 'move' call_tmp[825738](526499 'query' separator[157803] 1))
      unknown call_tmp[825743] "expr temp" "maybe param" "maybe type" "temp"
      (825746 'move' call_tmp[825743](157842 call : call_tmp[825738] string[244]))
      unknown call_tmp[825748] "expr temp" "maybe param" "maybe type" "temp"
      (825751 'move' call_tmp[825748](157837 call + "reached EOF in readTo(" call_tmp[825743]))
      unknown call_tmp[825753] "expr temp" "maybe param" "maybe type" "temp"
      (825756 'move' call_tmp[825753](157835 call + call_tmp[825748] ")"))
      unknown call_tmp[825758] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (825761 'move' call_tmp[825758](1000169 'new' EofError[414412](?) call_tmp[825753]))
      unknown call_tmp[825763] "expr temp" "maybe param" "maybe type" "temp"
      (825766 'move' call_tmp[825763](542267 call chpl_fix_thrown_error call_tmp[825758]))
      (157831 'throw' call_tmp[825763])
    }
    unknown call_tmp[825768] "expr temp" "maybe param" "maybe type" "temp"
    (825771 'move' call_tmp[825768](612114 'query' separator[157803] 1))
    (612118 'move' ret[612110](612117 'coerce' s[157827] call_tmp[825768]))
    gotoReturn _end_readTo[612108] _end_readTo[612108]
    (555673 'end of statement' s[157827])
    label _end_readTo[612108]
    (612112 return ret[612110])
  }
  where {
    unknown tmp[489681] "maybe param" "temp"
    unknown call_tmp[825773] "expr temp" "maybe param" "maybe type" "temp"
    (825776 'move' call_tmp[825773](526502 'query' separator[157803] 1))
    (489692 'move' tmp[489681](157817 call == call_tmp[825773] string[244]))
    unknown call_tmp[825778] "expr temp" "maybe param" "maybe type" "temp"
    (825781 'move' call_tmp[825778](489694 call _cond_invalid tmp[489681]))
    if call_tmp[825778]
    {
      (489697 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[682967] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[682968] "maybe param" "temp"
    unknown call_tmp[825783] "expr temp" "maybe param" "maybe type" "temp"
    (825786 'move' call_tmp[825783](489682 call isTrue tmp[489681]))
    (682973 'move' tmp[682968](682971 call _cond_test call_tmp[825783]))
    if tmp[682968]
    {
      (682978 'move' tmp[682967](682975 '_paramFoldLogical' tmp[682968] 1))
    }
    {
      unknown tmp[682980] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[825788] "expr temp" "maybe param" "maybe type" "temp"
      (825791 'move' call_tmp[825788](526505 'query' separator[157803] 1))
      unknown call_tmp[825793] "expr temp" "maybe param" "maybe type" "temp"
      (825796 'move' call_tmp[825793](157821 call == call_tmp[825788] bytes[232]))
      (682982 'move' tmp[682980](489686 call isTrue call_tmp[825793]))
      (682987 'move' tmp[682967](682984 '_paramFoldLogical' tmp[682968] tmp[682980]))
    }
    (1001460 call chpl_statementLevelSymbol tmp[682967])
  }
  { scopeless type
    (526508 'query' separator[157803] 1)
  }
  function fileReader[170893](?).readTo[157871](arg _mt[157893]:_MT[201], arg this[157874]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[157880] :
  (157878 call regex[156365](?) string[244]), ref arg s[157884]:string[244], arg maxSize[157890] :
  (1001995 call - 1) =
  (157887 call - 1)) : _unknown[42] throws "method"
  {
    unknown ret[612124] "RVV" "temp"
    {
      const tmp[158139] "const" "temp"
      unknown call_tmp[825800] "expr temp" "maybe param" "maybe type" "temp"
      (825803 'move' call_tmp[825800](157904 call _home _mt[203] this[157874]))
      unknown call_tmp[825805] "expr temp" "maybe param" "maybe type" "temp"
      (825808 'move' call_tmp[825805](158136 '_wide_get_locale' call_tmp[825800]))
      (158140 'move' tmp[158139](158137 'deref' call_tmp[825805]))
      {
        Try
        {
          {
            (157913 call(157910 call (partial) lock _mt[203] this[157874]))
          }
        }
        Defer
        {
          {
            (157922 call(157919 call (partial) unlock _mt[203] this[157874]))
          }
        }
        unknown call_tmp[825814] "expr temp" "maybe param" "maybe type" "temp"
        (825817 'move' call_tmp[825814](157937 call * 4 maxSize[157890]))
        unknown call_tmp[825819] "maybe param" "maybe type" "temp"
        (825822 'move' call_tmp[825819](157935 call _findSeparator separator[157880] call_tmp[825814] this[157874]))
        const tmp[157942] "dead at end of block" "const" "insert auto destroy" "temp"
        (646770 'init var' tmp[157942] call_tmp[825819])
        (157955 call _check_tuple_var_decl tmp[157942] 4)
        (555677 'end of statement')
        unknown call_tmp[825824] "maybe param" "maybe type" "temp"
        (825827 'move' call_tmp[825824](157943 call tmp[157942] 0))
        const searchErr[157926] "dead at end of block" "const" "insert auto destroy"
        (646772 'init var' searchErr[157926] call_tmp[825824])
        unknown call_tmp[825829] "maybe param" "maybe type" "temp"
        (825832 'move' call_tmp[825829](157946 call tmp[157942] 1))
        const found[157928] "dead at end of block" "const" "insert auto destroy"
        (646774 'init var' found[157928] call_tmp[825829])
        unknown call_tmp[825834] "maybe param" "maybe type" "temp"
        (825837 'move' call_tmp[825834](157949 call tmp[157942] 2))
        const relByteOffset[157930] "dead at end of block" "const" "insert auto destroy"
        (646776 'init var' relByteOffset[157930] call_tmp[825834])
        unknown call_tmp[825839] "maybe param" "maybe type" "temp"
        (825842 'move' call_tmp[825839](157952 call tmp[157942] 3))
        const match[157932] "dead at end of block" "const" "insert auto destroy"
        (646778 'init var' match[157932] call_tmp[825839])
        (157960 'end of statement')
        unknown tmp[489702] "maybe param" "temp"
        (489713 'move' tmp[489702](157976 call != searchErr[157926] 0))
        unknown call_tmp[825844] "expr temp" "maybe param" "maybe type" "temp"
        (825847 'move' call_tmp[825844](489715 call _cond_invalid tmp[489702]))
        if call_tmp[825844]
        {
          (489718 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[682994] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[682995] "maybe param" "temp"
        unknown call_tmp[825849] "expr temp" "maybe param" "maybe type" "temp"
        (825852 'move' call_tmp[825849](489703 call isTrue tmp[489702]))
        (683000 'move' tmp[682995](682998 call _cond_test call_tmp[825849]))
        if tmp[682995]
        {
          unknown tmp[683002] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[825854] "expr temp" "maybe param" "maybe type" "temp"
          (825857 'move' call_tmp[825854](434839 call EEOF[158629]))
          unknown call_tmp[825859] "expr temp" "maybe param" "maybe type" "temp"
          (825862 'move' call_tmp[825859](157980 call != searchErr[157926] call_tmp[825854]))
          (683004 'move' tmp[683002](489706 call isTrue call_tmp[825859]))
          (683009 'move' tmp[682994](683006 '_paramFoldLogical' tmp[682995] tmp[683002]))
        }
        {
          (683014 'move' tmp[682994](683011 '_paramFoldLogical' tmp[682995] 0))
        }
        unknown call_tmp[825864] "expr temp" "maybe param" "maybe type" "temp"
        (825867 'move' call_tmp[825864](157984 call _cond_test tmp[682994]))
        if call_tmp[825864]
        {
          Try
          {
            {
              (157966 call(157963 call (partial) _ch_ioerror _mt[203] this[157874]) searchErr[157926] "in readTo(regex(string))")
              (555679 'end of statement' searchErr[157926])
            }
          }
        }
        const numBytesToRead[157990] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[683021] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[683022] "maybe param" "temp"
        (683027 'move' tmp[683022](683025 call _cond_test found[157928]))
        if tmp[683022]
        {
          unknown tmp[683029] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (683031 'move' tmp[683029](157996 call numBytes _mt[203] match[157932]))
          (683036 'move' tmp[683021](683033 '_paramFoldLogical' tmp[683022] tmp[683029]))
        }
        {
          (683041 'move' tmp[683021](683038 '_paramFoldLogical' tmp[683022] 0))
        }
        unknown call_tmp[825873] "maybe param" "maybe type" "temp"
        (825876 'move' call_tmp[825873](157991 call - relByteOffset[157930] tmp[683021]))
        (646780 'init var' numBytesToRead[157990] call_tmp[825873])
        (158004 'end of statement')
        unknown call_tmp[825878] "expr temp" "maybe param" "maybe type" "temp"
        (825881 'move' call_tmp[825878](158013 call >= maxSize[157890] 0))
        unknown call_tmp[825883] "expr temp" "maybe param" "maybe type" "temp"
        (825886 'move' call_tmp[825883](158017 call _cond_test call_tmp[825878]))
        if call_tmp[825883]
        {
          unknown call_tmp[825890] "expr temp" "maybe param" "maybe type" "temp"
          (825893 'move' call_tmp[825890](158009 call _channel_internal _mt[203] this[157874]))
          (158006 call qio_channel_mark 0 call_tmp[825890])
        }
        unknown call_tmp[825897] "expr temp" "maybe param" "maybe type" "temp"
        (825900 'move' call_tmp[825897](158028 call _channel_internal _mt[203] this[157874]))
        unknown call_tmp[825902] "expr temp" "maybe param" "maybe type" "temp"
        (825905 'move' call_tmp[825902](158032 call - 1))
        unknown call_tmp[825907] "maybe param" "maybe type" "temp"
        (825910 'move' call_tmp[825907](158025 call readStringBytesData s[157884] call_tmp[825897] numBytesToRead[157990] call_tmp[825902]))
        const err[158023] "dead at end of block" "const" "insert auto destroy"
        (646782 'init var' err[158023] call_tmp[825907])
        (158036 'end of statement' relByteOffset[157930] found[157928] match[157932] numBytesToRead[157990])
        unknown call_tmp[825912] "expr temp" "maybe param" "maybe type" "temp"
        (825915 'move' call_tmp[825912](158132 call _cond_test err[158023]))
        if call_tmp[825912]
        {
          unknown call_tmp[825917] "expr temp" "maybe param" "maybe type" "temp"
          (825920 'move' call_tmp[825917](158045 call >= maxSize[157890] 0))
          unknown call_tmp[825922] "expr temp" "maybe param" "maybe type" "temp"
          (825925 'move' call_tmp[825922](158049 call _cond_test call_tmp[825917]))
          if call_tmp[825922]
          {
            unknown call_tmp[825929] "expr temp" "maybe param" "maybe type" "temp"
            (825932 'move' call_tmp[825929](158041 call _channel_internal _mt[203] this[157874]))
            (158039 call qio_channel_revert_unlocked call_tmp[825929])
          }
          Try
          {
            {
              (158059 call(158056 call (partial) _ch_ioerror _mt[203] this[157874]) err[158023] "in readTo(regex(string))")
              (555687 'end of statement' err[158023])
            }
          }
        }
        {
          unknown tmp[489723] "maybe param" "temp"
          (489734 'move' tmp[489723](158104 call >= maxSize[157890] 0))
          unknown call_tmp[825936] "expr temp" "maybe param" "maybe type" "temp"
          (825939 'move' call_tmp[825936](489736 call _cond_invalid tmp[489723]))
          if call_tmp[825936]
          {
            (489739 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[683075] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[683076] "maybe param" "temp"
          unknown call_tmp[825941] "expr temp" "maybe param" "maybe type" "temp"
          (825944 'move' call_tmp[825941](489724 call isTrue tmp[489723]))
          (683081 'move' tmp[683076](683079 call _cond_test call_tmp[825941]))
          if tmp[683076]
          {
            unknown tmp[683048] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[683049] "maybe param" "temp"
            (683054 'move' tmp[683049](683052 call _cond_test found[157928]))
            if tmp[683049]
            {
              unknown tmp[683056] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              (683058 'move' tmp[683056](158118 call numCodepoints _mt[203] match[157932]))
              (683063 'move' tmp[683048](683060 '_paramFoldLogical' tmp[683049] tmp[683056]))
            }
            {
              (683068 'move' tmp[683048](683065 '_paramFoldLogical' tmp[683049] 0))
            }
            unknown tmp[683083] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[825950] "expr temp" "maybe param" "maybe type" "temp"
            (825953 'move' call_tmp[825950](158113 call numCodepoints _mt[203] s[157884]))
            unknown call_tmp[825955] "expr temp" "maybe param" "maybe type" "temp"
            (825958 'move' call_tmp[825955](158110 call - call_tmp[825950] tmp[683048]))
            unknown call_tmp[825960] "expr temp" "maybe param" "maybe type" "temp"
            (825963 'move' call_tmp[825960](158108 call >= call_tmp[825955] maxSize[157890]))
            (683085 'move' tmp[683083](489727 call isTrue call_tmp[825960]))
            (683090 'move' tmp[683075](683087 '_paramFoldLogical' tmp[683076] tmp[683083]))
          }
          {
            (683095 'move' tmp[683075](683092 '_paramFoldLogical' tmp[683076] 0))
          }
          unknown call_tmp[825965] "expr temp" "maybe param" "maybe type" "temp"
          (825968 'move' call_tmp[825965](158126 call _cond_test tmp[683075]))
          if call_tmp[825965]
          {
            unknown call_tmp[825972] "expr temp" "maybe param" "maybe type" "temp"
            (825975 'move' call_tmp[825972](158070 call _channel_internal _mt[203] this[157874]))
            (158068 call qio_channel_revert_unlocked call_tmp[825972])
            (555690 'end of statement')
            Try
            {
              {
                unknown call_tmp[825979] "expr temp" "maybe param" "maybe type" "temp"
                (825982 'move' call_tmp[825979](434848 call EFORMAT[158612]))
                unknown call_tmp[825984] "expr temp" "maybe param" "maybe type" "temp"
                (825987 'move' call_tmp[825984](158079 call : call_tmp[825979] errorCode[12828]))
                (158078 call(158075 call (partial) _ch_ioerror _mt[203] this[157874]) call_tmp[825984] "in readTo(regex(string))")
              }
            }
          }
          {
            unknown call_tmp[825989] "expr temp" "maybe param" "maybe type" "temp"
            (825992 'move' call_tmp[825989](158094 call > maxSize[157890] 0))
            unknown call_tmp[825994] "expr temp" "maybe param" "maybe type" "temp"
            (825997 'move' call_tmp[825994](158098 call _cond_test call_tmp[825989]))
            if call_tmp[825994]
            {
              unknown call_tmp[826001] "expr temp" "maybe param" "maybe type" "temp"
              (826004 'move' call_tmp[826001](158091 call _channel_internal _mt[203] this[157874]))
              (158089 call qio_channel_commit_unlocked call_tmp[826001])
            }
          }
        }
      }
      (158143 'elided on block' 0 tmp[158139])
    }
    unknown call_tmp[826008] "expr temp" "maybe param" "maybe type" "temp"
    (826011 'move' call_tmp[826008](158151 call size _mt[203] s[157884]))
    unknown call_tmp[826013] "expr temp" "maybe param" "maybe type" "temp"
    (826016 'move' call_tmp[826013](158148 call > call_tmp[826008] 0))
    (612130 'move' ret[612124](612129 'coerce' call_tmp[826013] bool[19]))
    (612126 return ret[612124])
    (396741 'used modules list'(157901 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function fileReader[170893](?).readTo[158158](arg _mt[158180]:_MT[201], arg this[158161]:fileReader[170893](?) :
  fileReader[170893](?), arg separator[158167] :
  (158165 call regex[156365](?) bytes[232]), ref arg b[158171]:bytes[232], arg maxSize[158177] :
  (1001999 call - 1) =
  (158174 call - 1)) : _unknown[42] throws "method"
  {
    unknown ret[612134] "RVV" "temp"
    {
      const tmp[158325] "const" "temp"
      unknown call_tmp[826020] "expr temp" "maybe param" "maybe type" "temp"
      (826023 'move' call_tmp[826020](158191 call _home _mt[203] this[158161]))
      unknown call_tmp[826025] "expr temp" "maybe param" "maybe type" "temp"
      (826028 'move' call_tmp[826025](158322 '_wide_get_locale' call_tmp[826020]))
      (158326 'move' tmp[158325](158323 'deref' call_tmp[826025]))
      {
        Try
        {
          {
            (158200 call(158197 call (partial) lock _mt[203] this[158161]))
          }
        }
        Defer
        {
          {
            (158209 call(158206 call (partial) unlock _mt[203] this[158161]))
          }
        }
        unknown call_tmp[826034] "maybe param" "maybe type" "temp"
        (826037 'move' call_tmp[826034](158222 call _findSeparator separator[158167] maxSize[158177] this[158161]))
        const tmp[158226] "dead at end of block" "const" "insert auto destroy" "temp"
        (646784 'init var' tmp[158226] call_tmp[826034])
        (158239 call _check_tuple_var_decl tmp[158226] 4)
        (555696 'end of statement')
        unknown call_tmp[826039] "maybe param" "maybe type" "temp"
        (826042 'move' call_tmp[826039](158227 call tmp[158226] 0))
        const searchErr[158213] "dead at end of block" "const" "insert auto destroy"
        (646786 'init var' searchErr[158213] call_tmp[826039])
        unknown call_tmp[826044] "maybe param" "maybe type" "temp"
        (826047 'move' call_tmp[826044](158230 call tmp[158226] 1))
        const found[158215] "dead at end of block" "const" "insert auto destroy"
        (646788 'init var' found[158215] call_tmp[826044])
        unknown call_tmp[826049] "maybe param" "maybe type" "temp"
        (826052 'move' call_tmp[826049](158233 call tmp[158226] 2))
        const relByteOffset[158217] "dead at end of block" "const" "insert auto destroy"
        (646790 'init var' relByteOffset[158217] call_tmp[826049])
        unknown call_tmp[826054] "maybe param" "maybe type" "temp"
        (826057 'move' call_tmp[826054](158236 call tmp[158226] 3))
        const match[158219] "dead at end of block" "const" "insert auto destroy"
        (646792 'init var' match[158219] call_tmp[826054])
        (158244 'end of statement')
        unknown tmp[489744] "maybe param" "temp"
        (489755 'move' tmp[489744](158260 call != searchErr[158213] 0))
        unknown call_tmp[826059] "expr temp" "maybe param" "maybe type" "temp"
        (826062 'move' call_tmp[826059](489757 call _cond_invalid tmp[489744]))
        if call_tmp[826059]
        {
          (489760 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[683102] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[683103] "maybe param" "temp"
        unknown call_tmp[826064] "expr temp" "maybe param" "maybe type" "temp"
        (826067 'move' call_tmp[826064](489745 call isTrue tmp[489744]))
        (683108 'move' tmp[683103](683106 call _cond_test call_tmp[826064]))
        if tmp[683103]
        {
          unknown tmp[683110] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[826069] "expr temp" "maybe param" "maybe type" "temp"
          (826072 'move' call_tmp[826069](434864 call EEOF[158629]))
          unknown call_tmp[826074] "expr temp" "maybe param" "maybe type" "temp"
          (826077 'move' call_tmp[826074](158264 call != searchErr[158213] call_tmp[826069]))
          (683112 'move' tmp[683110](489748 call isTrue call_tmp[826074]))
          (683117 'move' tmp[683102](683114 '_paramFoldLogical' tmp[683103] tmp[683110]))
        }
        {
          (683122 'move' tmp[683102](683119 '_paramFoldLogical' tmp[683103] 0))
        }
        unknown call_tmp[826079] "expr temp" "maybe param" "maybe type" "temp"
        (826082 'move' call_tmp[826079](158268 call _cond_test tmp[683102]))
        if call_tmp[826079]
        {
          Try
          {
            {
              (158250 call(158247 call (partial) _ch_ioerror _mt[203] this[158161]) searchErr[158213] "in readTo(regex(bytes))")
              (555698 'end of statement' searchErr[158213])
            }
          }
        }
        const numBytesToRead[158274] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[683129] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[683130] "maybe param" "temp"
        (683135 'move' tmp[683130](683133 call _cond_test found[158215]))
        if tmp[683130]
        {
          unknown tmp[683137] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (683139 'move' tmp[683137](158280 call numBytes _mt[203] match[158219]))
          (683144 'move' tmp[683129](683141 '_paramFoldLogical' tmp[683130] tmp[683137]))
        }
        {
          (683149 'move' tmp[683129](683146 '_paramFoldLogical' tmp[683130] 0))
        }
        unknown call_tmp[826088] "maybe param" "maybe type" "temp"
        (826091 'move' call_tmp[826088](158275 call - relByteOffset[158217] tmp[683129]))
        (646794 'init var' numBytesToRead[158274] call_tmp[826088])
        (158288 'end of statement')
        unknown call_tmp[826095] "expr temp" "maybe param" "maybe type" "temp"
        (826098 'move' call_tmp[826095](158298 call _channel_internal _mt[203] this[158161]))
        unknown call_tmp[826100] "maybe param" "maybe type" "temp"
        (826103 'move' call_tmp[826100](158295 call readStringBytesData module=[222] IO[208303] b[158171] call_tmp[826095] numBytesToRead[158274] 0))
        const err[158290] "dead at end of block" "const" "insert auto destroy"
        (646796 'init var' err[158290] call_tmp[826100])
        (158304 'end of statement' relByteOffset[158217] found[158215] match[158219] numBytesToRead[158274])
        unknown call_tmp[826105] "expr temp" "maybe param" "maybe type" "temp"
        (826108 'move' call_tmp[826105](158317 call _cond_test err[158290]))
        if call_tmp[826105]
        {
          Try
          {
            {
              (158310 call(158307 call (partial) _ch_ioerror _mt[203] this[158161]) err[158290] "in readTo(regex(bytes))")
              (555704 'end of statement' err[158290])
            }
          }
        }
        (404039 'referenced modules list' IO[208303])
      }
      (158329 'elided on block' 0 tmp[158325])
    }
    unknown call_tmp[826114] "expr temp" "maybe param" "maybe type" "temp"
    (826117 'move' call_tmp[826114](158337 call size _mt[203] b[158171]))
    unknown call_tmp[826119] "expr temp" "maybe param" "maybe type" "temp"
    (826122 'move' call_tmp[826119](158334 call > call_tmp[826114] 0))
    (612140 'move' ret[612134](612139 'coerce' call_tmp[826119] bool[19]))
    (612136 return ret[612134])
    (396743 'used modules list'(158188 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    bool[19]
  }
  function _findSeparator[158344](arg separator[158350]:regex[156365](?), arg maxBytes[158356] :
  (1002003 call - 1) =
  (158353 call - 1), arg ch[158359]:_any[141](?)) : _unknown[42] throws "private"
  {
    unknown ret[612144] "RVV" "temp"
    (158381 call(158378 call (partial) mark _mt[203] ch[158359]))
    (555707 'end of statement')
    const maxNumBytes[158388] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[683156] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683157] "maybe param" "temp"
    unknown call_tmp[826126] "expr temp" "maybe param" "maybe type" "temp"
    (826129 'move' call_tmp[826126](158389 call < maxBytes[158356] 0))
    (683162 'move' tmp[683157](683160 call _cond_test call_tmp[826126]))
    if tmp[683157]
    {
      unknown tmp[683164] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (683166 'move' tmp[683164](158394 call max int(64)[10]))
      (683171 'move' tmp[683156](683168 '_paramFoldLogical' tmp[683157] tmp[683164]))
    }
    {
      (683176 'move' tmp[683156](683173 '_paramFoldLogical' tmp[683157] maxBytes[158356]))
    }
    (646798 'init var' maxNumBytes[158388] tmp[683156])
    const nm[158384] "dead at end of block" "const" "insert auto destroy"
    (646800 'init var' nm[158384] 1)
    (158401 'end of statement')
    unknown call_tmp[826131] "maybe param" "maybe type" "temp"
    (826134 'move' call_tmp[826131](158415 call _ddata_allocate qio_regex_string_piece_t[153880] nm[158384]))
    unknown matches[158413] "dead at end of block" "insert auto destroy"
    (646802 'init var' matches[158413] call_tmp[826131])
    unknown err[158408] "dead at end of block" "insert auto destroy"
    (646804 'init var' err[158408] 0 errorCode[12828])
    unknown separatorMatch[158404] "dead at end of block" "insert auto destroy"
    unknown call_tmp[826136] "expr temp" "maybe param" "maybe type" "temp"
    (826139 'move' call_tmp[826136](526518 'query' separator[158350] 1))
    (646806 'default init var' separatorMatch[158404] call_tmp[826136])
    (158419 'end of statement')
    unknown call_tmp[826143] "expr temp" "maybe param" "maybe type" "temp"
    (826146 'move' call_tmp[826143](158426 call _regex _mt[203] separator[158350]))
    unknown call_tmp[826150] "expr temp" "maybe param" "maybe type" "temp"
    (826153 'move' call_tmp[826150](158431 call _channel_internal _mt[203] ch[158359]))
    unknown call_tmp[826155] "expr temp" "maybe param" "maybe type" "temp"
    (826158 'move' call_tmp[826155](158424 call qio_regex_channel_match call_tmp[826143] 0 call_tmp[826150] maxNumBytes[158388] QIO_REGEX_ANCHOR_UNANCHORED[153850] 0 0 1 matches[158413] nm[158384]))
    (158420 call = err[158408] call_tmp[826155])
    (555709 'end of statement' err[158408] maxNumBytes[158388] matches[158413] nm[158384])
    unknown tmp[489765] "maybe param" "temp"
    unknown tmp[489786] "maybe param" "temp"
    (489797 'move' tmp[489786](158461 call != err[158408] 0))
    unknown call_tmp[826160] "expr temp" "maybe param" "maybe type" "temp"
    (826163 'move' call_tmp[826160](489799 call _cond_invalid tmp[489786]))
    if call_tmp[826160]
    {
      (489802 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683183] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683184] "maybe param" "temp"
    unknown call_tmp[826165] "expr temp" "maybe param" "maybe type" "temp"
    (826168 'move' call_tmp[826165](489787 call isTrue tmp[489786]))
    (683189 'move' tmp[683184](683187 call _cond_test call_tmp[826165]))
    if tmp[683184]
    {
      unknown tmp[683191] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826170] "expr temp" "maybe param" "maybe type" "temp"
      (826173 'move' call_tmp[826170](434891 call EEOF[158629]))
      unknown call_tmp[826175] "expr temp" "maybe param" "maybe type" "temp"
      (826178 'move' call_tmp[826175](158465 call != err[158408] call_tmp[826170]))
      (683193 'move' tmp[683191](489790 call isTrue call_tmp[826175]))
      (683198 'move' tmp[683183](683195 '_paramFoldLogical' tmp[683184] tmp[683191]))
    }
    {
      (683203 'move' tmp[683183](683200 '_paramFoldLogical' tmp[683184] 0))
    }
    (489776 'move' tmp[489765] tmp[683183])
    unknown call_tmp[826180] "expr temp" "maybe param" "maybe type" "temp"
    (826183 'move' call_tmp[826180](489778 call _cond_invalid tmp[489765]))
    if call_tmp[826180]
    {
      (489781 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683210] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683211] "maybe param" "temp"
    unknown call_tmp[826185] "expr temp" "maybe param" "maybe type" "temp"
    (826188 'move' call_tmp[826185](489766 call isTrue tmp[489765]))
    (683216 'move' tmp[683211](683214 call _cond_test call_tmp[826185]))
    if tmp[683211]
    {
      unknown tmp[683218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826190] "expr temp" "maybe param" "maybe type" "temp"
      (826193 'move' call_tmp[826190](434894 call EFORMAT[158612]))
      unknown call_tmp[826195] "expr temp" "maybe param" "maybe type" "temp"
      (826198 'move' call_tmp[826195](158469 call != err[158408] call_tmp[826190]))
      (683220 'move' tmp[683218](489769 call isTrue call_tmp[826195]))
      (683225 'move' tmp[683210](683222 '_paramFoldLogical' tmp[683211] tmp[683218]))
    }
    {
      (683230 'move' tmp[683210](683227 '_paramFoldLogical' tmp[683211] 0))
    }
    unknown call_tmp[826200] "expr temp" "maybe param" "maybe type" "temp"
    (826203 'move' call_tmp[826200](158473 call _cond_test tmp[683210]))
    if call_tmp[826200]
    {
      (158448 call(158445 call (partial) revert _mt[203] ch[158359]))
      (555716 'end of statement')
      unknown call_tmp[826207] "expr temp" "maybe param" "maybe type" "temp"
      (826210 'move' call_tmp[826207](158455 call _build_tuple err[158408] 0 0 separatorMatch[158404]))
      unknown call_tmp[826212] "expr temp" "maybe param" "maybe type" "temp"
      (826215 'move' call_tmp[826212](612153 'query' separator[158350] 1))
      unknown call_tmp[826217] "expr temp" "maybe param" "maybe type" "temp"
      (826220 'move' call_tmp[826217](612149 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826212]))
      (612157 'move' ret[612144](612156 'coerce' call_tmp[826207] call_tmp[826217]))
      gotoReturn _end__findSeparator[612142] _end__findSeparator[612142]
      (555717 'end of statement' err[158408] separatorMatch[158404])
    }
    unknown call_tmp[826222] "expr temp" "maybe param" "maybe type" "temp"
    (826225 'move' call_tmp[826222](158483 call matches[158413] 0))
    unknown call_tmp[826227] "maybe param" "maybe type" "temp"
    (826230 'move' call_tmp[826227](158481 call _to_regexMatch call_tmp[826222]))
    const m[158478] "dead at end of block" "const" "insert auto destroy"
    (646808 'init var' m[158478] call_tmp[826227] regexMatch[154054])
    (158486 'end of statement')
    (158493 call(158490 call (partial) _extractMatch _mt[203] ch[158359]) m[158478] separatorMatch[158404] err[158408])
    (555721 'end of statement' m[158478] separatorMatch[158404] err[158408])
    unknown tmp[489807] "maybe param" "temp"
    unknown tmp[489828] "maybe param" "temp"
    (489839 'move' tmp[489828](158515 call != err[158408] 0))
    unknown call_tmp[826234] "expr temp" "maybe param" "maybe type" "temp"
    (826237 'move' call_tmp[826234](489841 call _cond_invalid tmp[489828]))
    if call_tmp[826234]
    {
      (489844 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683237] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683238] "maybe param" "temp"
    unknown call_tmp[826239] "expr temp" "maybe param" "maybe type" "temp"
    (826242 'move' call_tmp[826239](489829 call isTrue tmp[489828]))
    (683243 'move' tmp[683238](683241 call _cond_test call_tmp[826239]))
    if tmp[683238]
    {
      unknown tmp[683245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826244] "expr temp" "maybe param" "maybe type" "temp"
      (826247 'move' call_tmp[826244](434905 call EEOF[158629]))
      unknown call_tmp[826249] "expr temp" "maybe param" "maybe type" "temp"
      (826252 'move' call_tmp[826249](158519 call != err[158408] call_tmp[826244]))
      (683247 'move' tmp[683245](489832 call isTrue call_tmp[826249]))
      (683252 'move' tmp[683237](683249 '_paramFoldLogical' tmp[683238] tmp[683245]))
    }
    {
      (683257 'move' tmp[683237](683254 '_paramFoldLogical' tmp[683238] 0))
    }
    (489818 'move' tmp[489807] tmp[683237])
    unknown call_tmp[826254] "expr temp" "maybe param" "maybe type" "temp"
    (826257 'move' call_tmp[826254](489820 call _cond_invalid tmp[489807]))
    if call_tmp[826254]
    {
      (489823 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683264] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683265] "maybe param" "temp"
    unknown call_tmp[826259] "expr temp" "maybe param" "maybe type" "temp"
    (826262 'move' call_tmp[826259](489808 call isTrue tmp[489807]))
    (683270 'move' tmp[683265](683268 call _cond_test call_tmp[826259]))
    if tmp[683265]
    {
      unknown tmp[683272] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826264] "expr temp" "maybe param" "maybe type" "temp"
      (826267 'move' call_tmp[826264](434908 call EFORMAT[158612]))
      unknown call_tmp[826269] "expr temp" "maybe param" "maybe type" "temp"
      (826272 'move' call_tmp[826269](158523 call != err[158408] call_tmp[826264]))
      (683274 'move' tmp[683272](489811 call isTrue call_tmp[826269]))
      (683279 'move' tmp[683264](683276 '_paramFoldLogical' tmp[683265] tmp[683272]))
    }
    {
      (683284 'move' tmp[683264](683281 '_paramFoldLogical' tmp[683265] 0))
    }
    unknown call_tmp[826274] "expr temp" "maybe param" "maybe type" "temp"
    (826277 'move' call_tmp[826274](158527 call _cond_test tmp[683264]))
    if call_tmp[826274]
    {
      (158502 call(158499 call (partial) revert _mt[203] ch[158359]))
      (555727 'end of statement')
      unknown call_tmp[826281] "expr temp" "maybe param" "maybe type" "temp"
      (826284 'move' call_tmp[826281](158509 call _build_tuple err[158408] 0 0 separatorMatch[158404]))
      unknown call_tmp[826286] "expr temp" "maybe param" "maybe type" "temp"
      (826289 'move' call_tmp[826286](612166 'query' separator[158350] 1))
      unknown call_tmp[826291] "expr temp" "maybe param" "maybe type" "temp"
      (826294 'move' call_tmp[826291](612162 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826286]))
      (612170 'move' ret[612144](612169 'coerce' call_tmp[826281] call_tmp[826291]))
      gotoReturn _end__findSeparator[612142] _end__findSeparator[612142]
      (555728 'end of statement' err[158408] separatorMatch[158404])
    }
    unknown call_tmp[826298] "maybe param" "maybe type" "temp"
    (826301 'move' call_tmp[826298](158537 call(158534 call (partial) offset _mt[203] ch[158359])))
    const endOffset[158532] "dead at end of block" "const" "insert auto destroy"
    (646810 'init var' endOffset[158532] call_tmp[826298])
    (158539 'end of statement')
    (158544 call(158541 call (partial) revert _mt[203] ch[158359]))
    (555731 'end of statement')
    unknown call_tmp[826307] "expr temp" "maybe param" "maybe type" "temp"
    (826310 'move' call_tmp[826307](158555 call(158552 call (partial) offset _mt[203] ch[158359])))
    unknown call_tmp[826312] "maybe param" "maybe type" "temp"
    (826315 'move' call_tmp[826312](158548 call - endOffset[158532] call_tmp[826307]))
    const numBytesRead[158546] "dead at end of block" "const" "insert auto destroy"
    (646812 'init var' numBytesRead[158546] call_tmp[826312] int(64)[10])
    (158557 'end of statement' nm[158384] matches[158413] endOffset[158532])
    (158559 call _ddata_free matches[158413] nm[158384])
    (555733 'end of statement' matches[158413] nm[158384])
    unknown tmp[489849] "maybe param" "temp"
    unknown call_tmp[826317] "expr temp" "maybe param" "maybe type" "temp"
    (826320 'move' call_tmp[826317](434915 call EFORMAT[158612]))
    (489860 'move' tmp[489849](158569 call == err[158408] call_tmp[826317]))
    unknown call_tmp[826322] "expr temp" "maybe param" "maybe type" "temp"
    (826325 'move' call_tmp[826322](489862 call _cond_invalid tmp[489849]))
    if call_tmp[826322]
    {
      (489865 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[683291] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[683292] "maybe param" "temp"
    unknown call_tmp[826327] "expr temp" "maybe param" "maybe type" "temp"
    (826330 'move' call_tmp[826327](489850 call isTrue tmp[489849]))
    (683297 'move' tmp[683292](683295 call _cond_test call_tmp[826327]))
    if tmp[683292]
    {
      unknown tmp[683299] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[826332] "expr temp" "maybe param" "maybe type" "temp"
      (826335 'move' call_tmp[826332](158573 call < numBytesRead[158546] maxNumBytes[158388]))
      (683301 'move' tmp[683299](489853 call isTrue call_tmp[826332]))
      (683306 'move' tmp[683291](683303 '_paramFoldLogical' tmp[683292] tmp[683299]))
    }
    {
      (683311 'move' tmp[683291](683308 '_paramFoldLogical' tmp[683292] 0))
    }
    unknown call_tmp[826337] "expr temp" "maybe param" "maybe type" "temp"
    (826340 'move' call_tmp[826337](158577 call _cond_test tmp[683291]))
    if call_tmp[826337]
    {
      (158562 call = err[158408] 0)
      (555737 'end of statement' err[158408])
    }
    unknown call_tmp[826344] "expr temp" "maybe param" "maybe type" "temp"
    (826347 'move' call_tmp[826344](158586 call matched _mt[203] m[158478]))
    unknown call_tmp[826349] "expr temp" "maybe param" "maybe type" "temp"
    (826352 'move' call_tmp[826349](158591 call _build_tuple err[158408] call_tmp[826344] numBytesRead[158546] separatorMatch[158404]))
    unknown call_tmp[826354] "expr temp" "maybe param" "maybe type" "temp"
    (826357 'move' call_tmp[826354](612179 'query' separator[158350] 1))
    unknown call_tmp[826359] "expr temp" "maybe param" "maybe type" "temp"
    (826362 'move' call_tmp[826359](612175 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826354]))
    (612183 'move' ret[612144](612182 'coerce' call_tmp[826349] call_tmp[826359]))
    gotoReturn _end__findSeparator[612142] _end__findSeparator[612142]
    (555739 'end of statement' err[158408] m[158478] numBytesRead[158546] separatorMatch[158404])
    label _end__findSeparator[612142]
    (612146 return ret[612144])
    (396745 'used modules list'(158373 'use' RegexIoSupport[158722]))
  }
  { scopeless type
    unknown call_tmp[826364] "expr temp" "maybe param" "maybe type" "temp"
    (826367 'move' call_tmp[826364](526521 'query' separator[158350] 1))
    (158366 call _build_tuple errorCode[12828] bool[19] int(64)[10] call_tmp[826364])
  }
  function |serializable[475232]() : _unknown[42] "ImplementsStmt wrapper"
  { serializable[310094] regex[156365](?)
    {
    }
    (612189 return _void[46])
  }
  (396730 'used modules list'(387020 'use' ChapelStandard[315387])(153599 'use' OS[15571])(153601 'use' CTypes[51217])(154293 'use' IO[208303]))
}
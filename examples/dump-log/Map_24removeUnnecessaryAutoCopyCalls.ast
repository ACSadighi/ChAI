AST dump for Map after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard ChapelLocks ChapelHashtable HaltWrappers IO FormattedIO Reflection 

{
  function chpl__init_Map[468660]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (637521 return _void[46])
  }
  function _checkKeyAndValType[1935939]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5478499]:Module(real(32))[1935500] "temp"
    val _formal_type_tmp_[5478497]:string[244] "temp"
    val call_tmp[1935951]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1935958]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1936080]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1936087]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1936209 return _void[46])
  }
  function _checkKeyAndValType[3312968]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5479845]:int(64)[10] "temp"
    val _formal_type_tmp_[5479843]:string[244] "temp"
    val call_tmp[3312980]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3312987]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3313109]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3313116]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3313238 return _void[46])
  }
  function _checkKeyAndValType[3339425]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5479889]:string[244] "temp"
    val _formal_type_tmp_[5479887]:string[244] "temp"
    val call_tmp[3339437]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3339444]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3339566]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3339573]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3339695 return _void[46])
  }
  function _checkKeyAndValType[3354484]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5479932]:owned ModuleSpecification?[3283604] "temp"
    val _formal_type_tmp_[5479930]:string[244] "temp"
    val call_tmp[3354496]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3354503]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3354625]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3354632]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3354754 return _void[46])
  }
  function _checkKeyAndValType[3391494]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val _formal_type_tmp_[5480027]:shared Module(real(32))[1955038] "temp"
    val _formal_type_tmp_[5480025]:string[244] "temp"
    val call_tmp[3391506]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3391513]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3391635]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3391642]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3391764 return _void[46])
  }
  function _checkKeyAndValType[3828211]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480524]:Module(real(64))[3405063] "temp"
    val _formal_type_tmp_[5480522]:string[244] "temp"
    val call_tmp[3828223]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3828230]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3828352]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3828359]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3828481 return _void[46])
  }
  function _ref(map(string,Module(real(32)),false))[1941017]._enter[3256798](const  ref arg this[3256802]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3256808]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3256816]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3256839 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803]._enter[3301095](const  ref arg this[3301099]:_ref(map(string,int(64),false))[3288803]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3301105]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3301113]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3301136 return _void[46])
  }
  function _ref(map(string,string,false))[3283395]._enter[3344461](const  ref arg this[3344465]:_ref(map(string,string,false))[3283395]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3344471]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3344479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3344502 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._enter[3359546](const  ref arg this[3359550]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3359556]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3359564]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3359587 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869]._enter[3400638](const  ref arg this[3400642]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3400648]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3400656]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3400679 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193]._enter[3860187](const  ref arg this[3860191]:_ref(map(string,Module(real(64)),false))[3405193]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[3860197]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3860205]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3860228 return _void[46])
  }
  function _ref(map(string,Module(real(32)),false))[1941017]._leave[3256899](const  ref arg this[3256903]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3256909]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3256917]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3256940 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803]._leave[3301196](const  ref arg this[3301200]:_ref(map(string,int(64),false))[3288803]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3301206]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3301214]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3301237 return _void[46])
  }
  function _ref(map(string,string,false))[3283395]._leave[3344562](const  ref arg this[3344566]:_ref(map(string,string,false))[3283395]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3344572]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3344580]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3344603 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._leave[3359647](const  ref arg this[3359651]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3359657]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3359665]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3359688 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869]._leave[3400739](const  ref arg this[3400743]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3400749]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3400757]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3400780 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193]._leave[3860288](const  ref arg this[3860292]:_ref(map(string,Module(real(64)),false))[3405193]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[3860298]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3860306]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3860329 return _void[46])
  }
  function map(string,Module(real(32)),false)[1936356].init[1935675](ref arg this[1935679]:map(string,Module(real(32)),false)[1936356], const in arg resizeThreshold[1935689]:real(64)[13], const in arg initialCapacity[1935695]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5478495]:Module(real(32))[1935500] "temp"
    val _formal_type_tmp_[5478493]:string[244] "temp"
    (1935704 call _checkKeyAndValType[1935939])
    val keyType[1935708]:string[244] "dead after last mention" "temp" "type variable"
    val valType[1935718]:Module(real(32))[1935500] "dead after last mention" "temp" "type variable"
    val parSafe[1935728]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[1935738]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[1936365]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1936371 'move' coerce_tmp[1936365](1936367 'cast' real(64)[13] 0))
    (1935740 'move' tmp[1935738](1935743 call <=[54490] resizeThreshold[1935689] coerce_tmp[1936365]))
    val call_tmp[1935746]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[1935759]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1935761]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1935763]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1935765 'move' call_tmp[1935763] tmp[1935738])
    (1935770 'move' tmp[1935761] call_tmp[1935763])
    if tmp[1935761]
    {
      (1935777 'move' tmp[1935759] 1)
    }
    {
      const-val tmp[1935783]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1935785]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1936377]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1936383 'move' coerce_tmp[1936377](1936379 'cast' real(64)[13] 1))
      (1935787 'move' call_tmp[1935785](1935790 call >=[54753] resizeThreshold[1935689] coerce_tmp[1936377]))
      (1935793 'move' tmp[1935783] call_tmp[1935785])
      (1935798 'move' tmp[1935759] tmp[1935783])
    }
    const-val call_tmp[1935804]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1935806 'move' call_tmp[1935804] tmp[1935759])
    if call_tmp[1935804]
    {
      (1935814 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[1935818]:real(64)[13] "dead after last mention" "temp"
      (1935820 'move' resizeThreshold[1935818] 0.5)
      (1935823 '.=' this[1935679] resizeThreshold[1936338] resizeThreshold[1935818])
    }
    {
      val resizeThreshold[1935829]:real(64)[13] "dead after last mention" "temp"
      (1935831 'move' resizeThreshold[1935829] resizeThreshold[1935689])
      (1935834 '.=' this[1935679] resizeThreshold[1936338] resizeThreshold[1935829])
    }
    const-ref call_tmp[1935840]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (1935842 'move' call_tmp[1935840](1935844 '.' this[1935679] resizeThreshold[1936338]))
    const-val call_tmp[1935847]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1941023]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[1949594]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1949598 'move' coerce_tmp[1949594](1949596 'deref' call_tmp[1935840]))
    const-val default_arg_rehashHelpers[1950019]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5557827]:owned chpl__rehashHelpers?[1941081] "temp"
    (1950021 call init_default_rehashHelpers[1949601] ret_tmp[5557827])
    (5557830 'move' default_arg_rehashHelpers[1950019] ret_tmp[5557827])
    (1941026 call init[1941108] initTemp[1941023] coerce_tmp[1949594] initialCapacity[1935695] default_arg_rehashHelpers[1950019])
    (1935849 'move' call_tmp[1935847] initTemp[1941023])
    val call_tmp[1935857]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1935864]:Module(real(32))[1935500] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1935871]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "maybe param" "temp" "type variable"
    val table[1935879]:chpl__hashtable(string,Module(real(32)))[1941492] "dead after last mention" "delay instantiation" "temp"
    (1935881 'move' table[1935879] call_tmp[1935847])
    (1935885 '.=' this[1935679] table[1936341] table[1935879])
    val tmp[1935894]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1935896]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (1935936 return _void[46])
  }
  function init_default_resizeThreshold[1950079]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1950081]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[1950086]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1950090 'move' resizeThreshold[1950086] defaultHashTableResizeThreshold[209951])
    (1950093 'move' ret[1950081] resizeThreshold[1950086])
    (1950084 return ret[1950081])
  }
  function map(string,int(64),false)[3288794].init[3312704](ref arg this[3312708]:map(string,int(64),false)[3288794], const in arg resizeThreshold[3312718]:real(64)[13], const in arg initialCapacity[3312724]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5479841]:int(64)[10] "temp"
    val _formal_type_tmp_[5479839]:string[244] "temp"
    (3312733 call _checkKeyAndValType[3312968])
    val keyType[3312737]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3312747]:int(64)[10] "dead after last mention" "temp" "type variable"
    val parSafe[3312757]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3312767]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3313258]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3313264 'move' coerce_tmp[3313258](3313260 'cast' real(64)[13] 0))
    (3312769 'move' tmp[3312767](3312772 call <=[54490] resizeThreshold[3312718] coerce_tmp[3313258]))
    val call_tmp[3312775]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3312788]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3312790]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3312792]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312794 'move' call_tmp[3312792] tmp[3312767])
    (3312799 'move' tmp[3312790] call_tmp[3312792])
    if tmp[3312790]
    {
      (3312806 'move' tmp[3312788] 1)
    }
    {
      const-val tmp[3312812]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3312814]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3313270]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3313276 'move' coerce_tmp[3313270](3313272 'cast' real(64)[13] 1))
      (3312816 'move' call_tmp[3312814](3312819 call >=[54753] resizeThreshold[3312718] coerce_tmp[3313270]))
      (3312822 'move' tmp[3312812] call_tmp[3312814])
      (3312827 'move' tmp[3312788] tmp[3312812])
    }
    const-val call_tmp[3312833]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312835 'move' call_tmp[3312833] tmp[3312788])
    if call_tmp[3312833]
    {
      (3312843 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3312847]:real(64)[13] "dead after last mention" "temp"
      (3312849 'move' resizeThreshold[3312847] 0.5)
      (3312852 '.=' this[3312708] resizeThreshold[3288776] resizeThreshold[3312847])
    }
    {
      val resizeThreshold[3312858]:real(64)[13] "dead after last mention" "temp"
      (3312860 'move' resizeThreshold[3312858] resizeThreshold[3312718])
      (3312863 '.=' this[3312708] resizeThreshold[3288776] resizeThreshold[3312858])
    }
    const-ref call_tmp[3312869]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3312871 'move' call_tmp[3312869](3312873 '.' this[3312708] resizeThreshold[3288776]))
    const-val call_tmp[3312876]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3313283]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3313309]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3313313 'move' coerce_tmp[3313309](3313311 'deref' call_tmp[3312869]))
    const-val default_arg_rehashHelpers[3313316]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5588829]:owned chpl__rehashHelpers?[1941081] "temp"
    (3313318 call init_default_rehashHelpers[3310958] ret_tmp[5588829])
    (5588832 'move' default_arg_rehashHelpers[3313316] ret_tmp[5588829])
    (3313286 call init[3310554] initTemp[3313283] coerce_tmp[3313309] initialCapacity[3312724] default_arg_rehashHelpers[3313316])
    (3312878 'move' call_tmp[3312876] initTemp[3313283])
    val call_tmp[3312886]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3312893]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3312900]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3312908]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    (3312910 'move' table[3312908] call_tmp[3312876])
    (3312914 '.=' this[3312708] table[3288779] table[3312908])
    val tmp[3312923]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3312925]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3312965 return _void[46])
  }
  function init_default_resizeThreshold[3313349]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3313351]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3313356]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3313360 'move' resizeThreshold[3313356] defaultHashTableResizeThreshold[209951])
    (3313363 'move' ret[3313351] resizeThreshold[3313356])
    (3313354 return ret[3313351])
  }
  function map(string,shared Module(real(32)),false)[3391831].init[3391230](ref arg this[3391234]:map(string,shared Module(real(32)),false)[3391831], const in arg resizeThreshold[3391244]:real(64)[13], const in arg initialCapacity[3391250]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480023]:shared Module(real(32))[1955038] "temp"
    val _formal_type_tmp_[5480021]:string[244] "temp"
    (3391259 call _checkKeyAndValType[3391494])
    val keyType[3391263]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3391273]:shared Module(real(32))[1955038] "dead after last mention" "temp" "type variable"
    val parSafe[3391283]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3391293]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3391840]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3391846 'move' coerce_tmp[3391840](3391842 'cast' real(64)[13] 0))
    (3391295 'move' tmp[3391293](3391298 call <=[54490] resizeThreshold[3391244] coerce_tmp[3391840]))
    val call_tmp[3391301]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3391314]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3391316]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3391318]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3391320 'move' call_tmp[3391318] tmp[3391293])
    (3391325 'move' tmp[3391316] call_tmp[3391318])
    if tmp[3391316]
    {
      (3391332 'move' tmp[3391314] 1)
    }
    {
      const-val tmp[3391338]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3391340]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3391852]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3391858 'move' coerce_tmp[3391852](3391854 'cast' real(64)[13] 1))
      (3391342 'move' call_tmp[3391340](3391345 call >=[54753] resizeThreshold[3391244] coerce_tmp[3391852]))
      (3391348 'move' tmp[3391338] call_tmp[3391340])
      (3391353 'move' tmp[3391314] tmp[3391338])
    }
    const-val call_tmp[3391359]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3391361 'move' call_tmp[3391359] tmp[3391314])
    if call_tmp[3391359]
    {
      (3391369 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3391373]:real(64)[13] "dead after last mention" "temp"
      (3391375 'move' resizeThreshold[3391373] 0.5)
      (3391378 '.=' this[3391234] resizeThreshold[3391813] resizeThreshold[3391373])
    }
    {
      val resizeThreshold[3391384]:real(64)[13] "dead after last mention" "temp"
      (3391386 'move' resizeThreshold[3391384] resizeThreshold[3391244])
      (3391389 '.=' this[3391234] resizeThreshold[3391813] resizeThreshold[3391384])
    }
    const-ref call_tmp[3391395]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3391397 'move' call_tmp[3391395](3391399 '.' this[3391234] resizeThreshold[3391813]))
    const-val call_tmp[3391402]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3391875]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3395921]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3395925 'move' coerce_tmp[3395921](3395923 'deref' call_tmp[3391395]))
    const-val default_arg_rehashHelpers[3395965]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589746]:owned chpl__rehashHelpers?[1941081] "temp"
    (3395967 call init_default_rehashHelpers[3395928] ret_tmp[5589746])
    (5589749 'move' default_arg_rehashHelpers[3395965] ret_tmp[5589746])
    (3391878 call init[3391886] initTemp[3391875] coerce_tmp[3395921] initialCapacity[3391250] default_arg_rehashHelpers[3395965])
    (3391404 'move' call_tmp[3391402] initTemp[3391875])
    val call_tmp[3391412]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3391419]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3391426]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3391434]:chpl__hashtable(string,shared Module(real(32)))[3392205] "dead after last mention" "delay instantiation" "temp"
    (3391436 'move' table[3391434] call_tmp[3391402])
    (3391440 '.=' this[3391234] table[3391816] table[3391434])
    val tmp[3391449]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3391451]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3391491 return _void[46])
  }
  function init_default_resizeThreshold[3396005]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3396007]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3396012]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3396016 'move' resizeThreshold[3396012] defaultHashTableResizeThreshold[209951])
    (3396019 'move' ret[3396007] resizeThreshold[3396012])
    (3396010 return ret[3396007])
  }
  function map(string,Module(real(64)),false)[3405184].init[3827947](ref arg this[3827951]:map(string,Module(real(64)),false)[3405184], const in arg resizeThreshold[3827961]:real(64)[13], const in arg initialCapacity[3827967]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480520]:Module(real(64))[3405063] "temp"
    val _formal_type_tmp_[5480518]:string[244] "temp"
    (3827976 call _checkKeyAndValType[3828211])
    val keyType[3827980]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3827990]:Module(real(64))[3405063] "dead after last mention" "temp" "type variable"
    val parSafe[3828000]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3828010]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3828527]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3828533 'move' coerce_tmp[3828527](3828529 'cast' real(64)[13] 0))
    (3828012 'move' tmp[3828010](3828015 call <=[54490] resizeThreshold[3827961] coerce_tmp[3828527]))
    val call_tmp[3828018]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3828031]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3828033]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3828035]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828037 'move' call_tmp[3828035] tmp[3828010])
    (3828042 'move' tmp[3828033] call_tmp[3828035])
    if tmp[3828033]
    {
      (3828049 'move' tmp[3828031] 1)
    }
    {
      const-val tmp[3828055]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3828057]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3828539]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3828545 'move' coerce_tmp[3828539](3828541 'cast' real(64)[13] 1))
      (3828059 'move' call_tmp[3828057](3828062 call >=[54753] resizeThreshold[3827961] coerce_tmp[3828539]))
      (3828065 'move' tmp[3828055] call_tmp[3828057])
      (3828070 'move' tmp[3828031] tmp[3828055])
    }
    const-val call_tmp[3828076]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3828078 'move' call_tmp[3828076] tmp[3828031])
    if call_tmp[3828076]
    {
      (3828086 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3828090]:real(64)[13] "dead after last mention" "temp"
      (3828092 'move' resizeThreshold[3828090] 0.5)
      (3828095 '.=' this[3827951] resizeThreshold[3405166] resizeThreshold[3828090])
    }
    {
      val resizeThreshold[3828101]:real(64)[13] "dead after last mention" "temp"
      (3828103 'move' resizeThreshold[3828101] resizeThreshold[3827961])
      (3828106 '.=' this[3827951] resizeThreshold[3405166] resizeThreshold[3828101])
    }
    const-ref call_tmp[3828112]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3828114 'move' call_tmp[3828112](3828116 '.' this[3827951] resizeThreshold[3405166]))
    const-val call_tmp[3828119]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3828552]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3832514]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3832518 'move' coerce_tmp[3832514](3832516 'deref' call_tmp[3828112]))
    const-val default_arg_rehashHelpers[3832558]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5595767]:owned chpl__rehashHelpers?[1941081] "temp"
    (3832560 call init_default_rehashHelpers[3832521] ret_tmp[5595767])
    (5595770 'move' default_arg_rehashHelpers[3832558] ret_tmp[5595767])
    (3828555 call init[3828563] initTemp[3828552] coerce_tmp[3832514] initialCapacity[3827967] default_arg_rehashHelpers[3832558])
    (3828121 'move' call_tmp[3828119] initTemp[3828552])
    val call_tmp[3828129]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3828136]:Module(real(64))[3405063] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3828143]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3828151]:chpl__hashtable(string,Module(real(64)))[3405239] "dead after last mention" "delay instantiation" "temp"
    (3828153 'move' table[3828151] call_tmp[3828119])
    (3828157 '.=' this[3827951] table[3405169] table[3828151])
    val tmp[3828166]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3828168]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3828208 return _void[46])
  }
  function init_default_resizeThreshold[3832598]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[3832600]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3832605]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3832609 'move' resizeThreshold[3832605] defaultHashTableResizeThreshold[209951])
    (3832612 'move' ret[3832600] resizeThreshold[3832605])
    (3832603 return ret[3832600])
  }
  function map(string,string,false)[3283386].init[3339157](ref arg this[3339161]:map(string,string,false)[3283386], const in arg resizeThreshold[3339173]:real(64)[13], const in arg initialCapacity[3339179]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479885]:string[244] "temp"
    val _formal_type_tmp_[5479883]:string[244] "temp"
    (3339190 call _checkKeyAndValType[3339425])
    val keyType[3339194]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3339204]:string[244] "dead after last mention" "temp" "type variable"
    val parSafe[3339214]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3339224]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3339715]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3339721 'move' coerce_tmp[3339715](3339717 'cast' real(64)[13] 0))
    (3339226 'move' tmp[3339224](3339229 call <=[54490] resizeThreshold[3339173] coerce_tmp[3339715]))
    val call_tmp[3339232]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3339245]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3339247]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3339249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339251 'move' call_tmp[3339249] tmp[3339224])
    (3339256 'move' tmp[3339247] call_tmp[3339249])
    if tmp[3339247]
    {
      (3339263 'move' tmp[3339245] 1)
    }
    {
      const-val tmp[3339269]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3339271]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3339727]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3339733 'move' coerce_tmp[3339727](3339729 'cast' real(64)[13] 1))
      (3339273 'move' call_tmp[3339271](3339276 call >=[54753] resizeThreshold[3339173] coerce_tmp[3339727]))
      (3339279 'move' tmp[3339269] call_tmp[3339271])
      (3339284 'move' tmp[3339245] tmp[3339269])
    }
    const-val call_tmp[3339290]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3339292 'move' call_tmp[3339290] tmp[3339245])
    if call_tmp[3339290]
    {
      (3339300 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3339304]:real(64)[13] "dead after last mention" "temp"
      (3339306 'move' resizeThreshold[3339304] 0.5)
      (3339309 '.=' this[3339161] resizeThreshold[3283368] resizeThreshold[3339304])
    }
    {
      val resizeThreshold[3339315]:real(64)[13] "dead after last mention" "temp"
      (3339317 'move' resizeThreshold[3339315] resizeThreshold[3339173])
      (3339320 '.=' this[3339161] resizeThreshold[3283368] resizeThreshold[3339315])
    }
    const-ref call_tmp[3339326]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3339328 'move' call_tmp[3339326](3339330 '.' this[3339161] resizeThreshold[3283368]))
    const-val call_tmp[3339333]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3339740]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3343702]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3343706 'move' coerce_tmp[3343702](3343704 'deref' call_tmp[3339326]))
    const-val default_arg_rehashHelpers[3343746]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589230]:owned chpl__rehashHelpers?[1941081] "temp"
    (3343748 call init_default_rehashHelpers[3343709] ret_tmp[5589230])
    (5589233 'move' default_arg_rehashHelpers[3343746] ret_tmp[5589230])
    (3339743 call init[3339751] initTemp[3339740] coerce_tmp[3343702] initialCapacity[3339179] default_arg_rehashHelpers[3343746])
    (3339335 'move' call_tmp[3339333] initTemp[3339740])
    val call_tmp[3339343]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3339350]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3339357]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3339365]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    (3339367 'move' table[3339365] call_tmp[3339333])
    (3339371 '.=' this[3339161] table[3283371] table[3339365])
    val tmp[3339380]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3339382]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3339422 return _void[46])
  }
  function init_default_resizeThreshold[3343780]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3343782]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3343787]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3343791 'move' resizeThreshold[3343787] defaultHashTableResizeThreshold[209951])
    (3343794 'move' ret[3343782] resizeThreshold[3343787])
    (3343785 return ret[3343782])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].init[3354216](ref arg this[3354220]:map(string,owned ModuleSpecification?,false)[3283686], const in arg resizeThreshold[3354232]:real(64)[13], const in arg initialCapacity[3354238]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479928]:owned ModuleSpecification?[3283604] "temp"
    val _formal_type_tmp_[5479926]:string[244] "temp"
    (3354249 call _checkKeyAndValType[3354484])
    val keyType[3354253]:string[244] "dead after last mention" "temp" "type variable"
    val valType[3354263]:owned ModuleSpecification?[3283604] "dead after last mention" "temp" "type variable"
    val parSafe[3354273]:bool[19] "dead after last mention" "param" "temp"
    const-val tmp[3354283]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[3354800]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3354806 'move' coerce_tmp[3354800](3354802 'cast' real(64)[13] 0))
    (3354285 'move' tmp[3354283](3354288 call <=[54490] resizeThreshold[3354232] coerce_tmp[3354800]))
    val call_tmp[3354291]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3354304]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3354306]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3354308]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3354310 'move' call_tmp[3354308] tmp[3354283])
    (3354315 'move' tmp[3354306] call_tmp[3354308])
    if tmp[3354306]
    {
      (3354322 'move' tmp[3354304] 1)
    }
    {
      const-val tmp[3354328]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[3354330]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3354812]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3354818 'move' coerce_tmp[3354812](3354814 'cast' real(64)[13] 1))
      (3354332 'move' call_tmp[3354330](3354335 call >=[54753] resizeThreshold[3354232] coerce_tmp[3354812]))
      (3354338 'move' tmp[3354328] call_tmp[3354330])
      (3354343 'move' tmp[3354304] tmp[3354328])
    }
    const-val call_tmp[3354349]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3354351 'move' call_tmp[3354349] tmp[3354304])
    if call_tmp[3354349]
    {
      (3354359 call warning[1936426] "'resizeThreshold' must be between 0 and 1." " 'resizeThreshold' will be set to 0.5")
      val resizeThreshold[3354363]:real(64)[13] "dead after last mention" "temp"
      (3354365 'move' resizeThreshold[3354363] 0.5)
      (3354368 '.=' this[3354220] resizeThreshold[3283668] resizeThreshold[3354363])
    }
    {
      val resizeThreshold[3354374]:real(64)[13] "dead after last mention" "temp"
      (3354376 'move' resizeThreshold[3354374] resizeThreshold[3354232])
      (3354379 '.=' this[3354220] resizeThreshold[3283668] resizeThreshold[3354374])
    }
    const-ref call_tmp[3354385]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3354387 'move' call_tmp[3354385](3354389 '.' this[3354220] resizeThreshold[3283668]))
    const-val call_tmp[3354392]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3354825]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3358787]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3358791 'move' coerce_tmp[3358787](3358789 'deref' call_tmp[3354385]))
    const-val default_arg_rehashHelpers[3358831]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589424]:owned chpl__rehashHelpers?[1941081] "temp"
    (3358833 call init_default_rehashHelpers[3358794] ret_tmp[5589424])
    (5589427 'move' default_arg_rehashHelpers[3358831] ret_tmp[5589424])
    (3354828 call init[3354836] initTemp[3354825] coerce_tmp[3358787] initialCapacity[3354238] default_arg_rehashHelpers[3358831])
    (3354394 'move' call_tmp[3354392] initTemp[3354825])
    val call_tmp[3354402]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3354409]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3354416]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3354424]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "dead after last mention" "delay instantiation" "temp"
    (3354426 'move' table[3354424] call_tmp[3354392])
    (3354430 '.=' this[3354220] table[3283671] table[3354424])
    val tmp[3354439]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3354441]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3354481 return _void[46])
  }
  function init_default_resizeThreshold[3358865]() : real(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3358867]:real(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val resizeThreshold[3358872]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (3358876 'move' resizeThreshold[3358872] defaultHashTableResizeThreshold[209951])
    (3358879 'move' ret[3358867] resizeThreshold[3358872])
    (3358870 return ret[3358867])
  }
  function _ref(map(string,int(64),false))[3288803].init=[3309171](ref arg this[3309175]:_ref(map(string,int(64),false))[3288803], ref arg other[3309177]:_ref(map(string,int(64),false))[3288803]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[3309192]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[3309194]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3309196]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309198]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309204]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309212]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3309227]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3309229]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[3309268]:int(64)[10] "dead after last mention" "temp" "type variable"
    val tmp[3309270]:int(64)[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3309272]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309274]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309280]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309288]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3309303]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3309305]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[3309344]:bool[19] "dead after last mention" "param" "temp"
    val tmp[3309346]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3309348]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309350]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309356]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309364]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3309379]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3309381]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[3309420]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309422]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309429]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309443]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3309456]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3309458]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309460]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309493]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[3309530]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (3309532 'move' call_tmp[3309530](3309535 call resizeThreshold[3310502] other[3309177]))
    val resizeThreshold[3309538]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[3310533]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3310537 'move' coerce_tmp[3310533](3310535 'deref' call_tmp[3309530]))
    (5632648 '=' resizeThreshold[3309538] coerce_tmp[3310533])
    (3309540 'noop')
    (3309543 '.=' this[3309175] resizeThreshold[3288776] resizeThreshold[3309538])
    val call_tmp[3309548]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309555]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[3309562]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3309564 'move' call_tmp[3309562](3309566 '.' this[3309175] resizeThreshold[3288776]))
    const-val call_tmp[3309569]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3310544]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3310924]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3310928 'move' coerce_tmp[3310924](3310926 'deref' call_tmp[3309562]))
    val default_arg_initialCapacity[3310949]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[3310995]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5588823]:owned chpl__rehashHelpers?[1941081] "temp"
    (3310997 call init_default_rehashHelpers[3310958] ret_tmp[5588823])
    (5588826 'move' default_arg_rehashHelpers[3310995] ret_tmp[5588823])
    (3310547 call init[3310554] initTemp[3310544] coerce_tmp[3310924] 16 default_arg_rehashHelpers[3310995])
    (3309571 'move' call_tmp[3309569] initTemp[3310544])
    val call_tmp[3309578]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309585]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309592]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3309600]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "delay instantiation" "temp"
    (3309602 'move' table[3309600] call_tmp[3309569])
    (3309606 '.=' this[3309175] table[3288779] table[3309600])
    val tmp[3309615]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3309617]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309659]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309667]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3309674]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3309682]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3309727]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3309735]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3309742]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3309750]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[3309795]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[3309803]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3309810]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3309817]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[3309880]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[3309888]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3309895]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3309902]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[3309966]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[3309968]:_ic_keys__ref_map_string_int64_t_F[3311955] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[3309970]:_ir_keys__ref_map_string_int64_t_F[3311961] "dead at end of block" "expr temp" "maybe param" "reference to a const" "temp"
              const-val ret_tmp[5588841]:_ir_keys__ref_map_string_int64_t_F[3311961] "temp"
              (3309978 call keys[3311117] other[3309177] ret_tmp[5588841])
              (5588844 'move' call_tmp[3309970] ret_tmp[5588841])
              (3309979 'move' _iterator[3309968](3309982 call _getIterator[3311970] call_tmp[3309970]))
              {
                val ret[6055239]:_ir_keys__ref_map_string_int64_t_F[3311961] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6055241]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6055243]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6055245]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead at end of block" "maybe param" "temp"
                const-ref this[6055533]:_ref(map(string,int(64),false))[3288803] "temp"
                (6055538 'move' this[6055533](6055535 '.v' _iterator[3309968] F0_this[7079744]))
                (6055247 'move' call_tmp[6055245](6055250 call table[3301244] this[6055533]))
                const-val call_tmp[6055252]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6055254]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "temp"
                (6055257 call allSlots[3311253] call_tmp[6055245] ret_tmp[6055254])
                (6055260 'move' call_tmp[6055252] ret_tmp[6055254])
                (6055263 'move' _iterator[6055243](6055266 call _getIterator[3311359] call_tmp[6055252]))
                const-ref table_ref[6055268]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "temp"
                const-ref this[6055540]:_ref(map(string,int(64),false))[3288803] "temp"
                (6055545 'move' this[6055540](6055542 '.v' _iterator[3309968] F0_this[7079744]))
                (6055270 'move' table_ref[6055268](6055273 call table[3301244] this[6055540]))
                {
                  val ret[6384803]:_ir_allSlots__ref_chpl__hashtable_string_int64_t[3311350] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6384805]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6384807]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6384809]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6385235]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
                  (6385240 'move' this[6385235](6385237 '.v' _iterator[6055243] F0_this[7080176]))
                  (6384811 'move' call_tmp[6384809](6384814 call tableSize[3301883] this[6385235]))
                  const-val call_tmp[6384816]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6384818]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6384820 'move' coerce_tmp[6384818](6384822 'deref' call_tmp[6384809]))
                  const-val ret_tmp[6384824]:_ir__allSlots[1946137] "temp"
                  (6384827 call _allSlots[265237] coerce_tmp[6384818] ret_tmp[6384824])
                  (6384830 'move' call_tmp[6384816] ret_tmp[6384824])
                  (6384833 'move' _iterator[6384807](6384836 call _getIterator[1946146] call_tmp[6384816]))
                  {
                    val ret[6384839]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6384841]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6384843]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6384845]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6384847]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6384849]:int(64)[10] "temp"
                    (6384851 'move' size[6384849](6384853 '.v' _iterator[6384807] F0_size[6829964]))
                    (6384857 call chpl_direct_counted_range_iter[1468903] 0 size[6384849] ret_tmp[6384847])
                    (6384861 'move' call_tmp[6384845] ret_tmp[6384847])
                    (6384864 'move' _iterator[6384843](6384867 call _getIterator[1520079] call_tmp[6384845]))
                    {
                      val ret[6384870]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6384872]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6384874]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6384876]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6384878]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6384880]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6384882]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6384884]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6384886]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6384888]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6384890]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6384892]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6384894]:int(64)[10] "temp"
                      (6384896 'move' low[6384894](6384898 '.v' _iterator[6384843] F0_low[6832410]))
                      const-val count[6384901]:int(64)[10] "temp"
                      (6384903 'move' count[6384901](6384905 '.v' _iterator[6384843] F1_count[6832414]))
                      (6384909 call chpl_direct_counted_range_iter_helper[1469227] low[6384894] count[6384901] ret_tmp[6384892])
                      (6384913 'move' call_tmp[6384890] ret_tmp[6384892])
                      (6384916 'move' _iterator[6384888](6384919 call _getIterator[1519812] call_tmp[6384890]))
                      {
                        val ret[6653885]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6653887]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6653889]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6653891]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6653893]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6653895]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6653897]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6653899]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6653901]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6653903]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6653905]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6653907]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6653909]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6653911]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6653913]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6653915]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6654490]:int(64)[10] "temp"
                        (6654495 'move' count[6654490](6654492 '.v' _iterator[6384888] F1_count[6834178]))
                        (6653917 'move' call_tmp[6653915](6653920 call <[1469576] count[6654490] 0))
                        (6653923 'move' tmp[6653913] call_tmp[6653915])
                        (6653926 'move' tmp[6653907] call_tmp[6653915])
                        const-val call_tmp[6653929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6653931 'move' call_tmp[6653929] call_tmp[6653915])
                        if call_tmp[6653915]
                        {
                          (6653937 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6653940]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6654497]:int(64)[10] "temp"
                        (6654502 'move' low[6654497](6654499 '.v' _iterator[6384888] F0_low[6834174]))
                        (6653942 'move' start[6653940] low[6654497])
                        const-val end[6653945]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6653947]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6653949]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6653951]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6654504]:int(64)[10] "temp"
                        (6654509 'move' count[6654504](6654506 '.v' _iterator[6384888] F1_count[6834178]))
                        (6653953 'move' call_tmp[6653951](6653956 call ==[52746] count[6654504] 0))
                        (6653959 'move' tmp[6653949] call_tmp[6653951])
                        if call_tmp[6653951]
                        {
                          const-val tmp[6653964]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6653966]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6654511]:int(64)[10] "temp"
                          (6654516 'move' low[6654511](6654513 '.v' _iterator[6384888] F0_low[6834174]))
                          (6653968 'move' call_tmp[6653966](6653970 'cast' uint(64)[86] low[6654511]))
                          const-val call_tmp[6653973]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6653975]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6653977 'move' coerce_tmp[6653975](6653979 'cast' uint(64)[86] 1))
                          (6653982 'move' call_tmp[6653973](6653985 call -[1487313] call_tmp[6653966]))
                          val call_tmp[6653987]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6653989 'move' tmp[6653964](6653992 call :[1482043] call_tmp[6653973]))
                          (6653994 'move' tmp[6653947] tmp[6653964])
                        }
                        {
                          const-val tmp[6653998]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6654000]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6654002]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6654518]:int(64)[10] "temp"
                          (6654523 'move' count[6654518](6654520 '.v' _iterator[6384888] F1_count[6834178]))
                          (6654004 'move' call_tmp[6654002] count[6654518])
                          const-val call_tmp[6654007]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6654525]:int(64)[10] "temp"
                          (6654530 'move' count[6654525](6654527 '.v' _iterator[6384888] F1_count[6834178]))
                          (6654009 'move' call_tmp[6654007](6654012 call -[1487343] count[6654525]))
                          const-val call_tmp[6654014]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6654532]:int(64)[10] "temp"
                          (6654537 'move' low[6654532](6654534 '.v' _iterator[6384888] F0_low[6834174]))
                          (6654016 'move' call_tmp[6654014](6654019 call +[56587] low[6654532] call_tmp[6654007]))
                          val call_tmp[6654022]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6654024 'move' tmp[6653998] call_tmp[6654014])
                          (6654027 'move' tmp[6653947] call_tmp[6654014])
                        }
                        (6654031 'move' end[6653945] tmp[6653947])
                        val _indexOfInterest[6654034]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6654036]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6654038]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6654040]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6654043 call chpl_direct_param_stride_range_iter[1517410] start[6653940] tmp[6653947] ret_tmp[6654040])
                        (6654047 'move' call_tmp[6654038] ret_tmp[6654040])
                        (6654050 'move' _iterator[6654036](6654053 call _getIterator[1519541] call_tmp[6654038]))
                        {
                          val ret[6654056]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6654058]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654060]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6654063 call chpl_range_check_stride[1517730])
                          val i[6654064]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6654066]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6654068 'move' i[6654064] 0)
                          val call_tmp[6654071]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654073]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654075]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6654077]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6654079]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6654081]:int(64)[10] "temp"
                          (6654083 'move' low[6654081](6654085 '.v' _iterator[6654036] F0_low[6835591]))
                          (6654088 'move' default_arg_first[6654079](6654091 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6654081]))
                          const-val default_arg_last[6654093]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6654095]:int(64)[10] "temp"
                          (6654097 'move' high[6654095](6654099 '.v' _iterator[6654036] F1_high[6835595]))
                          (6654102 'move' default_arg_last[6654093](6654105 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6654095]))
                          val default_arg_shouldHalt[6654107]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6654109]:bool[19] "dead after last mention" "temp"
                          const-val low[6654111]:int(64)[10] "temp"
                          (6654113 'move' low[6654111](6654115 '.v' _iterator[6654036] F0_low[6835591]))
                          const-val high[6654118]:int(64)[10] "temp"
                          (6654120 'move' high[6654118](6654122 '.v' _iterator[6654036] F1_high[6835595]))
                          (6654125 'move' _return_tmp_[6654109](6654128 call chpl_checkIfRangeIterWillOverflow[1518856] low[6654111] high[6654118] 1 default_arg_first[6654079] default_arg_last[6654093] 1))
                          CForLoop[6654135] hazard
                          {
                            const-val yret[6654166]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6654168 'move' yret[6654166] i[6654064])
                            const-val _yieldedIndex[6654171]:int(64)[10] "temp"
                            (6654173 'move' _yieldedIndex[6654171] i[6654064])
                            {
                              const-val i[6654177]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6654179 'move' i[6654177] _yieldedIndex[6654171])
                              const-val yret[6654182]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6654184 'move' yret[6654182] _yieldedIndex[6654171])
                              const-val _yieldedIndex[6654206]:int(64)[10] "temp"
                              (6654488 'move' _yieldedIndex[6654206] _yieldedIndex[6654171])
                              {
                                const-val i[6654208]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6654210 'move' i[6654208] _yieldedIndex[6654206])
                                const-val yret[6654213]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6654215 'move' yret[6654213] _yieldedIndex[6654206])
                                const-val _yieldedIndex[6654218]:int(64)[10] "temp"
                                (6654220 'move' _yieldedIndex[6654218] _yieldedIndex[6654206])
                                {
                                  const-val slot[6654224]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6654226 'move' slot[6654224] _yieldedIndex[6654218])
                                  const-val yret[6654229]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6654231 'move' yret[6654229] _yieldedIndex[6654218])
                                  const-val _yieldedIndex[6654234]:int(64)[10] "temp"
                                  (6654236 'move' _yieldedIndex[6654234] _yieldedIndex[6654218])
                                  {
                                    const-val slot[6654240]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6654242 'move' slot[6654240] _yieldedIndex[6654234])
                                    const-val yret[6654245]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6654247 'move' yret[6654245] _yieldedIndex[6654234])
                                    const-val _yieldedIndex[6654250]:int(64)[10] "temp"
                                    (6654252 'move' _yieldedIndex[6654250] _yieldedIndex[6654234])
                                    {
                                      const-val slot[6654256]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6654258 'move' slot[6654256] _yieldedIndex[6654250])
                                      const-val call_tmp[6654261]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6654263 'move' call_tmp[6654261] table_ref[6055268])
                                      const-val call_tmp[6654266]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6654268 'move' call_tmp[6654266](6654271 call isSlotFull[3311860] call_tmp[6654261] _yieldedIndex[6654250]))
                                      const-val call_tmp[6654274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6654276 'move' call_tmp[6654274] call_tmp[6654266])
                                      if call_tmp[6654266]
                                      {
                                        const-ref yret[6654281]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6654283]:chpl__hashtable(string,int(64))[3288849] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6654285 'move' call_tmp[6654283] table_ref[6055268])
                                        ref call_tmp[6654288]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6654290]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
                                        (6654292 'move' _this_tmp_[6654290](6654295 call table[3303003] call_tmp[6654283]))
                                        val coerce_tmp[6654297]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6654299 'move' coerce_tmp[6654297](6654301 'deref' _this_tmp_[6654290]))
                                        (6654303 'move' call_tmp[6654288](6654306 call this[3306115] coerce_tmp[6654297] slot[6654256]))
                                        const-ref call_tmp[6654309]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6654311 'move' call_tmp[6654309](6654314 call key[3306645] call_tmp[6654288]))
                                        const-ref _yieldedIndex[6654316]:_ref(string)[1466327] "temp"
                                        (6654318 'move' _yieldedIndex[6654316] call_tmp[6654309])
                                        {
                                          const-ref key[6654322]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6654324 'move' key[6654322] _yieldedIndex[6654316])
                                          {
                                            ref call_tmp[6654328]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654330 'move' call_tmp[6654328](6654333 call table[3301244] this[3309175]))
                                            const-val call_tmp[6654335]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6654337]:(bool,int(64))[3257010] "temp"
                                            (6654340 call findAvailableSlot[3301272] call_tmp[6654328] key[6654322] ret_tmp[6654337])
                                            (6654344 'move' call_tmp[6654335] ret_tmp[6654337])
                                            const-val tmp[6654347]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6654349 'move' tmp[6654347] call_tmp[6654335])
                                            1
                                            const-ref call_tmp[6654353]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6654355 'move' call_tmp[6654353](6654357 '.' tmp[6654347] x1[3257008]))
                                            const-val slot[6654360]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6654362]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6654364 'move' coerce_tmp[6654362](6654366 'deref' call_tmp[6654353]))
                                            (6654368 '=' slot[6654360] coerce_tmp[6654362])
                                            (6654371 'noop')
                                            const-ref call_tmp[6654372]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654374 'move' call_tmp[6654372](6654377 call table[3301244] other[3309177]))
                                            const-val call_tmp[6654379]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6654381]:(bool,int(64))[3257010] "temp"
                                            (6654384 call findFullSlot[3312245] call_tmp[6654372] key[6654322] ret_tmp[6654381])
                                            (6654388 'move' call_tmp[6654379] ret_tmp[6654381])
                                            const-val tmp[6654391]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6654393 'move' tmp[6654391] call_tmp[6654379])
                                            1
                                            const-ref call_tmp[6654397]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6654399 'move' call_tmp[6654397](6654401 '.' tmp[6654391] x1[3257008]))
                                            const-val slot2[6654404]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6654406]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6654408 'move' coerce_tmp[6654406](6654410 'deref' call_tmp[6654397]))
                                            (6654412 '=' slot2[6654404] coerce_tmp[6654406])
                                            (6654415 'noop')
                                            ref call_tmp[6654416]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654418 'move' call_tmp[6654416](6654421 call table[3301244] this[3309175]))
                                            ref call_tmp[6654423]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
                                            (6654425 'move' call_tmp[6654423](6654428 call table[3301244] other[3309177]))
                                            ref call_tmp[6654430]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6654432]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead after last mention" "temp"
                                            (6654434 'move' _this_tmp_[6654432](6654437 call table[3303003] call_tmp[6654423]))
                                            val coerce_tmp[6654439]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6654441 'move' coerce_tmp[6654439](6654443 'deref' _this_tmp_[6654432]))
                                            (6654445 'move' call_tmp[6654430](6654448 call this[3306115] coerce_tmp[6654439] slot2[6654404]))
                                            const-ref call_tmp[6654451]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                                            (6654453 'move' call_tmp[6654451](6654456 call val[3307792] call_tmp[6654430]))
                                            const-val _formal_tmp_in_key[6654458]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6654460 'move' _formal_tmp_in_key[6654458](6654463 call chpl__initCopy[1480493] key[6654322] 0))
                                            const-val coerce_tmp[6654466]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6654468 'move' coerce_tmp[6654466](6654470 'deref' call_tmp[6654451]))
                                            (6654473 call fillSlot[3308541] call_tmp[6654416] slot[6654360] _formal_tmp_in_key[6654458] coerce_tmp[6654466])
                                            (6654479 call chpl__autoDestroy[4207177] tmp[6654391])
                                            (6654482 call chpl__autoDestroy[4207177] tmp[6654347])
                                          }
                                          label _continueLabel[6654484]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6654137]:int(64)[10] "temp"
                              (6654139 'move' low[6654137](6654141 '.v' _iterator[6654036] F0_low[6835591]))
                              (6654144 '=' i[6654064] low[6654137])
                            }
                            {
                              const-val high[6654148]:int(64)[10] "temp"
                              (6654150 'move' high[6654148](6654152 '.v' _iterator[6654036] F1_high[6835595]))
                              (6654155 '<=' i[6654064] high[6654148])
                            }
                            {
                              val call_tmp[6654159]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6654161]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6654163 '+=' i[6654064] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6654197]
                        }
                        (6654200 call _freeIterator[1519714] _iterator[6654036])
                        label _endchpl_direct_counted_range_iter_helper[6654202]
                      }
                      (6384983 call _freeIterator[1519981] _iterator[6384888])
                      label _endchpl_direct_counted_range_iter[6384985]
                    }
                    (6384988 call _freeIterator[1520248] _iterator[6384843])
                    label _end_allSlots[6384990]
                  }
                  (6384993 call _freeIterator[1947321] _iterator[6384807])
                  label _endallSlots[6384995]
                }
                (6055360 call _freeIterator[3311756] _iterator[6055243])
                label _endkeys[6055362]
              }
              label _breakLabel[3310137]
              (5632667 call _freeIterator[3312139] _iterator[3309968])
            }
          }
        }
      }
    }
    (3310143 return _void[46])
  }
  function _ref(map(string,string,false))[3283395].init=[3381988](ref arg this[3381992]:_ref(map(string,string,false))[3283395], ref arg other[3381994]:_ref(map(string,string,false))[3283395]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val keyType[3382009]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[3382011]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3382013]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382015]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382021]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382029]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3382044]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3382046]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val valType[3382085]:string[244] "dead after last mention" "temp" "type variable"
    val tmp[3382087]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp" "type variable"
    val tmp[3382089]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382091]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382097]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382105]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3382120]:string[244] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp" "type variable"
    val call_tmp[3382122]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val parSafe[3382161]:bool[19] "dead after last mention" "param" "temp"
    val tmp[3382163]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3382165]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382167]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382173]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382181]:bool[19] "dead after last mention" "expr temp" "marked generic" "maybe param" "maybe type" "temp"
    val tmp[3382196]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3382198]:map(string,string,false)[3283386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[3382237]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382239]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382246]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382260]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3382273]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3382275]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382277]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382310]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[3382347]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "reference to a const" "temp"
    (3382349 'move' call_tmp[3382347](3382352 call resizeThreshold[3383152] other[3381994]))
    val resizeThreshold[3382355]:real(64)[13] "dead after last mention" "temp"
    const-val coerce_tmp[3383183]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3383187 'move' coerce_tmp[3383183](3383185 'deref' call_tmp[3382347]))
    (5635511 '=' resizeThreshold[3382355] coerce_tmp[3383183])
    (3382357 'noop')
    (3382360 '.=' this[3381992] resizeThreshold[3283368] resizeThreshold[3382355])
    val call_tmp[3382365]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382372]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[3382379]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3382381 'move' call_tmp[3382379](3382383 '.' this[3381992] resizeThreshold[3283368]))
    const-val call_tmp[3382386]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "maybe param" "temp"
    const-val initTemp[3383194]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    const-val coerce_tmp[3383219]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3383223 'move' coerce_tmp[3383219](3383221 'deref' call_tmp[3382379]))
    val default_arg_initialCapacity[3383244]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_rehashHelpers[3383253]:owned chpl__rehashHelpers?[1941081] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[5589236]:owned chpl__rehashHelpers?[1941081] "temp"
    (3383255 call init_default_rehashHelpers[3343709] ret_tmp[5589236])
    (5589239 'move' default_arg_rehashHelpers[3383253] ret_tmp[5589236])
    (3383197 call init[3339751] initTemp[3383194] coerce_tmp[3383219] 16 default_arg_rehashHelpers[3383253])
    (3382388 'move' call_tmp[3382386] initTemp[3383194])
    val call_tmp[3382395]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382402]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382409]:chpl__hashtable(string,string)[3283441] "dead after last mention" "maybe param" "temp" "type variable"
    val table[3382417]:chpl__hashtable(string,string)[3283441] "dead after last mention" "delay instantiation" "temp"
    (3382419 'move' table[3382417] call_tmp[3382386])
    (3382423 '.=' this[3381992] table[3283371] table[3382417])
    val tmp[3382432]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3382434]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382476]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382484]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3382491]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3382499]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      val call_tmp[3382544]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3382552]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[3382559]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      val call_tmp[3382567]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
      {
        val call_tmp[3382612]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[3382620]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3382627]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val call_tmp[3382634]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        {
          val call_tmp[3382697]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[3382705]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3382712]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3382719]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          {
            {
              ref _indexOfInterest[3382783]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[3382785]:_ic_keys__ref_map_string_string_F[3381529] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[3382787]:_ir_keys__ref_map_string_string_F[3381535] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[5589708]:_ir_keys__ref_map_string_string_F[3381535] "temp"
              (3382795 call keys[3381349] other[3381994] ret_tmp[5589708])
              (5589711 'move' call_tmp[3382787] ret_tmp[5589708])
              (3382796 'move' _iterator[3382785](3382799 call _getIterator[3381544] call_tmp[3382787]))
              {
                val ret[6060792]:_ir_keys__ref_map_string_string_F[3381535] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[6060794]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[6060796]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "dead at end of block" "expr temp" "temp"
                const-ref call_tmp[6060798]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "temp"
                const-ref this[6061279]:_ref(map(string,string,false))[3283395] "temp"
                (6061284 'move' this[6061279](6061281 '.v' _iterator[3382785] F0_this[7087442]))
                (6060800 'move' call_tmp[6060798](6060803 call table[3344610] this[6061279]))
                const-val call_tmp[6060805]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[6060807]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "temp"
                (6060810 call allSlots[3344638] call_tmp[6060798] ret_tmp[6060807])
                (6060813 'move' call_tmp[6060805] ret_tmp[6060807])
                (6060816 'move' _iterator[6060796](6060819 call _getIterator[3344744] call_tmp[6060805]))
                const-ref table_ref[6060821]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "temp"
                const-ref this[6061286]:_ref(map(string,string,false))[3283395] "temp"
                (6061291 'move' this[6061286](6061288 '.v' _iterator[3382785] F0_this[7087442]))
                (6060823 'move' table_ref[6060821](6060826 call table[3344610] this[6061286]))
                {
                  val ret[6060829]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[6060831]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[6060833]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[6060835]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  const-ref this[6060837]:_ref(chpl__hashtable(string,string))[3283450] "temp"
                  (6060839 'move' this[6060837](6060841 '.v' _iterator[6060796] F0_this[7082328]))
                  (6060844 'move' call_tmp[6060835](6060847 call tableSize[3340120] this[6060837]))
                  const-val call_tmp[6060849]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[6060851]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (6060853 'move' coerce_tmp[6060851](6060855 'deref' call_tmp[6060835]))
                  const-val ret_tmp[6060857]:_ir__allSlots[1946137] "temp"
                  (6060860 call _allSlots[265237] coerce_tmp[6060851] ret_tmp[6060857])
                  (6060863 'move' call_tmp[6060849] ret_tmp[6060857])
                  (6060866 'move' _iterator[6060833](6060869 call _getIterator[1946146] call_tmp[6060849]))
                  {
                    val ret[6060872]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
                    val _indexOfInterest[6060874]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6060876]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6060878]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6060880]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                    const-val size[6060882]:int(64)[10] "temp"
                    (6060884 'move' size[6060882](6060886 '.v' _iterator[6060833] F0_size[6829964]))
                    (6060890 call chpl_direct_counted_range_iter[1468903] 0 size[6060882] ret_tmp[6060880])
                    (6060894 'move' call_tmp[6060878] ret_tmp[6060880])
                    (6060897 'move' _iterator[6060876](6060900 call _getIterator[1520079] call_tmp[6060878]))
                    {
                      val ret[6060903]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                      val tmp[6060905]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6060907]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6060909]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val tmp[6060911]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                      val tmp[6060913]:bool[19] "dead after last mention" "maybe param" "temp"
                      val call_tmp[6060915]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6060917]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val _indexOfInterest[6060919]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[6060921]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[6060923]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[6060925]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                      const-val low[6060927]:int(64)[10] "temp"
                      (6060929 'move' low[6060927](6060931 '.v' _iterator[6060876] F0_low[6832410]))
                      const-val count[6060934]:int(64)[10] "temp"
                      (6060936 'move' count[6060934](6060938 '.v' _iterator[6060876] F1_count[6832414]))
                      (6060942 call chpl_direct_counted_range_iter_helper[1469227] low[6060927] count[6060934] ret_tmp[6060925])
                      (6060946 'move' call_tmp[6060923] ret_tmp[6060925])
                      (6060949 'move' _iterator[6060921](6060952 call _getIterator[1519812] call_tmp[6060923]))
                      {
                        val ret[6393850]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                        val tmp[6393852]:bool[19] "dead after last mention" "maybe param" "temp"
                        val tmp[6393854]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6393856]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6393858]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                        val tmp[6393860]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6393862]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val tmp[6393864]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        val call_tmp[6393866]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        val call_tmp[6393868]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        val call_tmp[6393870]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6393872]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val tmp[6393874]:bool[19] "dead after last mention" "maybe param" "temp"
                        val call_tmp[6393876]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                        const-val tmp[6393878]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[6393880]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6394457]:int(64)[10] "temp"
                        (6394462 'move' count[6394457](6394459 '.v' _iterator[6060921] F1_count[6834178]))
                        (6393882 'move' call_tmp[6393880](6393885 call <[1469576] count[6394457] 0))
                        (6393888 'move' tmp[6393878] call_tmp[6393880])
                        (6393891 'move' tmp[6393872] call_tmp[6393880])
                        const-val call_tmp[6393894]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6393896 'move' call_tmp[6393894] call_tmp[6393880])
                        if call_tmp[6393880]
                        {
                          (6393902 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                        }
                        const-val start[6393905]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        const-val low[6394464]:int(64)[10] "temp"
                        (6394469 'move' low[6394464](6394466 '.v' _iterator[6060921] F0_low[6834174]))
                        (6393907 'move' start[6393905] low[6394464])
                        const-val end[6393910]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                        val tmp[6393912]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[6393914]:bool[19] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[6393916]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[6394471]:int(64)[10] "temp"
                        (6394476 'move' count[6394471](6394473 '.v' _iterator[6060921] F1_count[6834178]))
                        (6393918 'move' call_tmp[6393916](6393921 call ==[52746] count[6394471] 0))
                        (6393924 'move' tmp[6393914] call_tmp[6393916])
                        if call_tmp[6393916]
                        {
                          const-val tmp[6393929]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[6393931]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6394478]:int(64)[10] "temp"
                          (6394483 'move' low[6394478](6394480 '.v' _iterator[6060921] F0_low[6834174]))
                          (6393933 'move' call_tmp[6393931](6393935 'cast' uint(64)[86] low[6394478]))
                          const-val call_tmp[6393938]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[6393940]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (6393942 'move' coerce_tmp[6393940](6393944 'cast' uint(64)[86] 1))
                          (6393947 'move' call_tmp[6393938](6393950 call -[1487313] call_tmp[6393931]))
                          val call_tmp[6393952]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6393954 'move' tmp[6393929](6393957 call :[1482043] call_tmp[6393938]))
                          (6393959 'move' tmp[6393912] tmp[6393929])
                        }
                        {
                          const-val tmp[6393963]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          val call_tmp[6393965]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[6393967]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6394485]:int(64)[10] "temp"
                          (6394490 'move' count[6394485](6394487 '.v' _iterator[6060921] F1_count[6834178]))
                          (6393969 'move' call_tmp[6393967] count[6394485])
                          const-val call_tmp[6393972]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[6394492]:int(64)[10] "temp"
                          (6394497 'move' count[6394492](6394494 '.v' _iterator[6060921] F1_count[6834178]))
                          (6393974 'move' call_tmp[6393972](6393977 call -[1487343] count[6394492]))
                          const-val call_tmp[6393979]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val low[6394499]:int(64)[10] "temp"
                          (6394504 'move' low[6394499](6394501 '.v' _iterator[6060921] F0_low[6834174]))
                          (6393981 'move' call_tmp[6393979](6393984 call +[56587] low[6394499] call_tmp[6393972]))
                          val call_tmp[6393987]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6393989 'move' tmp[6393963] call_tmp[6393979])
                          (6393992 'move' tmp[6393912] call_tmp[6393979])
                        }
                        (6393996 'move' end[6393910] tmp[6393912])
                        val _indexOfInterest[6393999]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[6394001]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[6394003]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[6394005]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                        (6394008 call chpl_direct_param_stride_range_iter[1517410] start[6393905] tmp[6393912] ret_tmp[6394005])
                        (6394012 'move' call_tmp[6394003] ret_tmp[6394005])
                        (6394015 'move' _iterator[6394001](6394018 call _getIterator[1519541] call_tmp[6394003]))
                        {
                          val ret[6394021]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                          val call_tmp[6394023]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394025]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6394028 call chpl_range_check_stride[1517730])
                          val i[6394029]:int(64)[10] "dead at end of block" "insert auto destroy"
                          val call_tmp[6394031]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (6394033 'move' i[6394029] 0)
                          val call_tmp[6394036]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394038]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394040]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          val call_tmp[6394042]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[6394044]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[6394046]:int(64)[10] "temp"
                          (6394048 'move' low[6394046](6394050 '.v' _iterator[6394001] F0_low[6835591]))
                          (6394053 'move' default_arg_first[6394044](6394056 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6394046]))
                          const-val default_arg_last[6394058]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[6394060]:int(64)[10] "temp"
                          (6394062 'move' high[6394060](6394064 '.v' _iterator[6394001] F1_high[6835595]))
                          (6394067 'move' default_arg_last[6394058](6394070 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6394060]))
                          val default_arg_shouldHalt[6394072]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                          const-val _return_tmp_[6394074]:bool[19] "dead after last mention" "temp"
                          const-val low[6394076]:int(64)[10] "temp"
                          (6394078 'move' low[6394076](6394080 '.v' _iterator[6394001] F0_low[6835591]))
                          const-val high[6394083]:int(64)[10] "temp"
                          (6394085 'move' high[6394083](6394087 '.v' _iterator[6394001] F1_high[6835595]))
                          (6394090 'move' _return_tmp_[6394074](6394093 call chpl_checkIfRangeIterWillOverflow[1518856] low[6394076] high[6394083] 1 default_arg_first[6394044] default_arg_last[6394058] 1))
                          CForLoop[6394100] hazard
                          {
                            const-val yret[6394131]:int(64)[10] "dead after last mention" "YVV" "temp"
                            (6394133 'move' yret[6394131] i[6394029])
                            const-val _yieldedIndex[6394136]:int(64)[10] "temp"
                            (6394138 'move' _yieldedIndex[6394136] i[6394029])
                            {
                              const-val i[6394142]:int(64)[10] "const" "index var" "insert auto destroy"
                              (6394144 'move' i[6394142] _yieldedIndex[6394136])
                              const-val yret[6394147]:int(64)[10] "dead after last mention" "YVV" "temp"
                              (6394149 'move' yret[6394147] _yieldedIndex[6394136])
                              const-val _yieldedIndex[6394171]:int(64)[10] "temp"
                              (6394455 'move' _yieldedIndex[6394171] _yieldedIndex[6394136])
                              {
                                const-val i[6394173]:int(64)[10] "const" "index var" "insert auto destroy"
                                (6394175 'move' i[6394173] _yieldedIndex[6394171])
                                const-val yret[6394178]:int(64)[10] "dead after last mention" "YVV" "temp"
                                (6394180 'move' yret[6394178] _yieldedIndex[6394171])
                                const-val _yieldedIndex[6394183]:int(64)[10] "temp"
                                (6394185 'move' _yieldedIndex[6394183] _yieldedIndex[6394171])
                                {
                                  const-val slot[6394189]:int(64)[10] "const" "index var" "insert auto destroy"
                                  (6394191 'move' slot[6394189] _yieldedIndex[6394183])
                                  const-val yret[6394194]:int(64)[10] "dead after last mention" "YVV" "temp"
                                  (6394196 'move' yret[6394194] _yieldedIndex[6394183])
                                  const-val _yieldedIndex[6394199]:int(64)[10] "temp"
                                  (6394201 'move' _yieldedIndex[6394199] _yieldedIndex[6394183])
                                  {
                                    const-val slot[6394205]:int(64)[10] "const" "index var" "insert auto destroy"
                                    (6394207 'move' slot[6394205] _yieldedIndex[6394199])
                                    const-val yret[6394210]:int(64)[10] "dead after last mention" "YVV" "temp"
                                    (6394212 'move' yret[6394210] _yieldedIndex[6394199])
                                    const-val _yieldedIndex[6394215]:int(64)[10] "temp"
                                    (6394217 'move' _yieldedIndex[6394215] _yieldedIndex[6394199])
                                    {
                                      const-val slot[6394221]:int(64)[10] "const" "index var" "insert auto destroy"
                                      (6394223 'move' slot[6394221] _yieldedIndex[6394215])
                                      const-val call_tmp[6394226]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6394228 'move' call_tmp[6394226] table_ref[6060821])
                                      const-val call_tmp[6394231]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6394233 'move' call_tmp[6394231](6394236 call isSlotFull[3345224] call_tmp[6394226] _yieldedIndex[6394215]))
                                      const-val call_tmp[6394239]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (6394241 'move' call_tmp[6394239] call_tmp[6394231])
                                      if call_tmp[6394231]
                                      {
                                        const-ref yret[6394246]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                                        val call_tmp[6394248]:chpl__hashtable(string,string)[3283441] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (6394250 'move' call_tmp[6394248] table_ref[6060821])
                                        ref call_tmp[6394253]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
                                        const-ref _this_tmp_[6394255]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
                                        (6394257 'move' _this_tmp_[6394255](6394260 call table[3340092] call_tmp[6394248]))
                                        val coerce_tmp[6394262]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                        (6394264 'move' coerce_tmp[6394262](6394266 'deref' _this_tmp_[6394255]))
                                        (6394268 'move' call_tmp[6394253](6394271 call this[3343256] coerce_tmp[6394262] slot[6394221]))
                                        const-ref call_tmp[6394274]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                        (6394276 'move' call_tmp[6394274](6394279 call key[3345732] call_tmp[6394253]))
                                        const-ref _yieldedIndex[6394281]:_ref(string)[1466327] "temp"
                                        (6394283 'move' _yieldedIndex[6394281] call_tmp[6394274])
                                        {
                                          const-ref key[6394287]:_ref(string)[1466327] "index var" "insert auto destroy"
                                          (6394289 'move' key[6394287] _yieldedIndex[6394281])
                                          {
                                            ref call_tmp[6394293]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394295 'move' call_tmp[6394293](6394298 call table[3344610] this[3381992]))
                                            const-val call_tmp[6394300]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6394302]:(bool,int(64))[3257010] "temp"
                                            (6394305 call findAvailableSlot[3349576] call_tmp[6394293] key[6394287] ret_tmp[6394302])
                                            (6394309 'move' call_tmp[6394300] ret_tmp[6394302])
                                            const-val tmp[6394312]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6394314 'move' tmp[6394312] call_tmp[6394300])
                                            1
                                            const-ref call_tmp[6394318]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6394320 'move' call_tmp[6394318](6394322 '.' tmp[6394312] x1[3257008]))
                                            const-val slot[6394325]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6394327]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6394329 'move' coerce_tmp[6394327](6394331 'deref' call_tmp[6394318]))
                                            (6394333 '=' slot[6394325] coerce_tmp[6394327])
                                            (6394336 'noop')
                                            const-ref call_tmp[6394337]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394339 'move' call_tmp[6394337](6394342 call table[3344610] other[3381994]))
                                            const-val call_tmp[6394344]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
                                            const-val ret_tmp[6394346]:(bool,int(64))[3257010] "temp"
                                            (6394349 call findFullSlot[3383343] call_tmp[6394337] key[6394287] ret_tmp[6394346])
                                            (6394353 'move' call_tmp[6394344] ret_tmp[6394346])
                                            const-val tmp[6394356]:(bool,int(64))[3257010] "dead at end of block" "const" "insert auto destroy" "temp"
                                            (6394358 'move' tmp[6394356] call_tmp[6394344])
                                            1
                                            const-ref call_tmp[6394362]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const" "temp"
                                            (6394364 'move' call_tmp[6394362](6394366 '.' tmp[6394356] x1[3257008]))
                                            const-val slot2[6394369]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                                            const-val coerce_tmp[6394371]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                            (6394373 'move' coerce_tmp[6394371](6394375 'deref' call_tmp[6394362]))
                                            (6394377 '=' slot2[6394369] coerce_tmp[6394371])
                                            (6394380 'noop')
                                            ref call_tmp[6394381]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394383 'move' call_tmp[6394381](6394386 call table[3344610] this[3381992]))
                                            ref call_tmp[6394388]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                            (6394390 'move' call_tmp[6394388](6394393 call table[3344610] other[3381994]))
                                            ref call_tmp[6394395]:_ref(chpl_TableEntry(string,string))[3283482] "dead after last mention" "maybe param" "temp"
                                            const-ref _this_tmp_[6394397]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead after last mention" "temp"
                                            (6394399 'move' _this_tmp_[6394397](6394402 call table[3340092] call_tmp[6394388]))
                                            val coerce_tmp[6394404]:_ddata(chpl_TableEntry(string,string))[3283496] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                            (6394406 'move' coerce_tmp[6394404](6394408 'deref' _this_tmp_[6394397]))
                                            (6394410 'move' call_tmp[6394395](6394413 call this[3343256] coerce_tmp[6394404] slot2[6394369]))
                                            const-ref call_tmp[6394416]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                                            (6394418 'move' call_tmp[6394416](6394421 call val[3345762] call_tmp[6394395]))
                                            const-val _formal_tmp_in_key[6394423]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6394425 'move' _formal_tmp_in_key[6394423](6394428 call chpl__initCopy[1480493] key[6394287] 0))
                                            const-val _formal_tmp_in_val[6394431]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
                                            (6394433 'move' _formal_tmp_in_val[6394431](6394436 call chpl__initCopy[1480493] call_tmp[6394416] 0))
                                            (6394440 call fillSlot[3350263] call_tmp[6394381] slot[6394325] _formal_tmp_in_key[6394423] _formal_tmp_in_val[6394431])
                                            (6394446 call chpl__autoDestroy[4207177] tmp[6394356])
                                            (6394449 call chpl__autoDestroy[4207177] tmp[6394312])
                                          }
                                          label _continueLabel[6394451]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              const-val low[6394102]:int(64)[10] "temp"
                              (6394104 'move' low[6394102](6394106 '.v' _iterator[6394001] F0_low[6835591]))
                              (6394109 '=' i[6394029] low[6394102])
                            }
                            {
                              const-val high[6394113]:int(64)[10] "temp"
                              (6394115 'move' high[6394113](6394117 '.v' _iterator[6394001] F1_high[6835595]))
                              (6394120 '<=' i[6394029] high[6394113])
                            }
                            {
                              val call_tmp[6394124]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[6394126]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              (6394128 '+=' i[6394029] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[6394162]
                        }
                        (6394165 call _freeIterator[1519714] _iterator[6394001])
                        label _endchpl_direct_counted_range_iter_helper[6394167]
                      }
                      (6061089 call _freeIterator[1519981] _iterator[6060921])
                      label _endchpl_direct_counted_range_iter[6061091]
                    }
                    (6061094 call _freeIterator[1520248] _iterator[6060876])
                    label _end_allSlots[6061096]
                  }
                  (6061099 call _freeIterator[1947321] _iterator[6060833])
                  label _endallSlots[6061101]
                }
                (6061104 call _freeIterator[3345141] _iterator[6060796])
                label _endkeys[6061106]
              }
              label _breakLabel[3382954]
              (5635530 call _freeIterator[3381713] _iterator[3382785])
            }
          }
        }
      }
    }
    (3382960 return _void[46])
  }
  function _ref(map(string,string,false))[3283395].clear[3344292](ref arg this[3344296]:_ref(map(string,string,false))[3283395]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3344306 call _enter[3344461] this[3344296])
    {
      val _indexOfInterest[3344316]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3344318]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[3344320]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "temp"
      (3344322 'move' call_tmp[3344320](3344325 call table[3344610] this[3344296]))
      const-val call_tmp[3344328]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[5589248]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "temp"
      (3344336 call allSlots[3344638] call_tmp[3344320] ret_tmp[5589248])
      (5589251 'move' call_tmp[3344328] ret_tmp[5589248])
      (3344337 'move' _iterator[3344318](3344340 call _getIterator[3344744] call_tmp[3344328]))
      {
        val ret[6056273]:_ir_allSlots__ref_chpl__hashtable_string_string[3344735] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[6056275]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[6056277]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        const-ref call_tmp[6056279]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
        const-ref this[6056411]:_ref(chpl__hashtable(string,string))[3283450] "temp"
        (6056416 'move' this[6056411](6056413 '.v' _iterator[3344318] F0_this[7082328]))
        (6056281 'move' call_tmp[6056279](6056284 call tableSize[3340120] this[6056411]))
        const-val call_tmp[6056286]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[6056288]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (6056290 'move' coerce_tmp[6056288](6056292 'deref' call_tmp[6056279]))
        const-val ret_tmp[6056294]:_ir__allSlots[1946137] "temp"
        (6056297 call _allSlots[265237] coerce_tmp[6056288] ret_tmp[6056294])
        (6056300 'move' call_tmp[6056286] ret_tmp[6056294])
        (6056303 'move' _iterator[6056277](6056306 call _getIterator[1946146] call_tmp[6056286]))
        {
          val ret[6386749]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[6386751]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[6386753]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[6386755]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[6386757]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          const-val size[6387332]:int(64)[10] "temp"
          (6387337 'move' size[6387332](6387334 '.v' _iterator[6056277] F0_size[6829964]))
          (6386760 call chpl_direct_counted_range_iter[1468903] 0 size[6387332] ret_tmp[6386757])
          (6386764 'move' call_tmp[6386755] ret_tmp[6386757])
          (6386767 'move' _iterator[6386753](6386770 call _getIterator[1520079] call_tmp[6386755]))
          {
            val ret[6386773]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6386775]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6386777]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6386779]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6386781]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6386783]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6386785]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6386787]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6386789]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6386791]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6386793]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6386795]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6386797]:int(64)[10] "temp"
            (6386799 'move' low[6386797](6386801 '.v' _iterator[6386753] F0_low[6832410]))
            const-val count[6386804]:int(64)[10] "temp"
            (6386806 'move' count[6386804](6386808 '.v' _iterator[6386753] F1_count[6832414]))
            (6386812 call chpl_direct_counted_range_iter_helper[1469227] low[6386797] count[6386804] ret_tmp[6386795])
            (6386816 'move' call_tmp[6386793] ret_tmp[6386795])
            (6386819 'move' _iterator[6386791](6386822 call _getIterator[1519812] call_tmp[6386793]))
            {
              val ret[6386825]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
              val tmp[6386827]:bool[19] "dead after last mention" "maybe param" "temp"
              val tmp[6386829]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6386831]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6386833]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6386835]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6386837]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6386839]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              val call_tmp[6386841]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6386843]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6386845]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6386847]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val tmp[6386849]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6386851]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6386853]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6386855]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6386857]:int(64)[10] "temp"
              (6386859 'move' count[6386857](6386861 '.v' _iterator[6386791] F1_count[6834178]))
              (6386864 'move' call_tmp[6386855](6386867 call <[1469576] count[6386857] 0))
              (6386870 'move' tmp[6386853] call_tmp[6386855])
              (6386873 'move' tmp[6386847] call_tmp[6386855])
              const-val call_tmp[6386876]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (6386878 'move' call_tmp[6386876] call_tmp[6386855])
              if call_tmp[6386855]
              {
                (6386884 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
              }
              const-val start[6386887]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              const-val low[6386889]:int(64)[10] "temp"
              (6386891 'move' low[6386889](6386893 '.v' _iterator[6386791] F0_low[6834174]))
              (6386896 'move' start[6386887] low[6386889])
              const-val end[6386899]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              val tmp[6386901]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[6386903]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[6386905]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6386907]:int(64)[10] "temp"
              (6386909 'move' count[6386907](6386911 '.v' _iterator[6386791] F1_count[6834178]))
              (6386914 'move' call_tmp[6386905](6386917 call ==[52746] count[6386907] 0))
              (6386920 'move' tmp[6386903] call_tmp[6386905])
              if call_tmp[6386905]
              {
                const-val tmp[6386925]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6386927]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6386929]:int(64)[10] "temp"
                (6386931 'move' low[6386929](6386933 '.v' _iterator[6386791] F0_low[6834174]))
                (6386936 'move' call_tmp[6386927](6386938 'cast' uint(64)[86] low[6386929]))
                const-val call_tmp[6386941]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[6386943]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (6386945 'move' coerce_tmp[6386943](6386947 'cast' uint(64)[86] 1))
                (6386950 'move' call_tmp[6386941](6386953 call -[1487313] call_tmp[6386927]))
                val call_tmp[6386955]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6386957 'move' tmp[6386925](6386960 call :[1482043] call_tmp[6386941]))
                (6386962 'move' tmp[6386901] tmp[6386925])
              }
              {
                const-val tmp[6386966]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[6386968]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[6386970]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6386972]:int(64)[10] "temp"
                (6386974 'move' count[6386972](6386976 '.v' _iterator[6386791] F1_count[6834178]))
                (6386979 'move' call_tmp[6386970] count[6386972])
                const-val call_tmp[6386982]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6386984]:int(64)[10] "temp"
                (6386986 'move' count[6386984](6386988 '.v' _iterator[6386791] F1_count[6834178]))
                (6386991 'move' call_tmp[6386982](6386994 call -[1487343] count[6386984]))
                const-val call_tmp[6386996]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6386998]:int(64)[10] "temp"
                (6387000 'move' low[6386998](6387002 '.v' _iterator[6386791] F0_low[6834174]))
                (6387005 'move' call_tmp[6386996](6387008 call +[56587] low[6386998] call_tmp[6386982]))
                val call_tmp[6387011]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6387013 'move' tmp[6386966] call_tmp[6386996])
                (6387016 'move' tmp[6386901] call_tmp[6386996])
              }
              (6387020 'move' end[6386899] tmp[6386901])
              val _indexOfInterest[6387023]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6387025]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6387027]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6387029]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
              (6387032 call chpl_direct_param_stride_range_iter[1517410] start[6386887] tmp[6386901] ret_tmp[6387029])
              (6387036 'move' call_tmp[6387027] ret_tmp[6387029])
              (6387039 'move' _iterator[6387025](6387042 call _getIterator[1519541] call_tmp[6387027]))
              {
                val ret[6387045]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                val call_tmp[6387047]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387049]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6387052 call chpl_range_check_stride[1517730])
                val i[6387053]:int(64)[10] "dead at end of block" "insert auto destroy"
                val call_tmp[6387055]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6387057 'move' i[6387053] 0)
                val call_tmp[6387060]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387062]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387064]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6387066]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[6387068]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[6387070]:int(64)[10] "temp"
                (6387072 'move' low[6387070](6387074 '.v' _iterator[6387025] F0_low[6835591]))
                (6387077 'move' default_arg_first[6387068](6387080 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6387070]))
                const-val default_arg_last[6387082]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[6387084]:int(64)[10] "temp"
                (6387086 'move' high[6387084](6387088 '.v' _iterator[6387025] F1_high[6835595]))
                (6387091 'move' default_arg_last[6387082](6387094 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6387084]))
                val default_arg_shouldHalt[6387096]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                const-val _return_tmp_[6387098]:bool[19] "dead after last mention" "temp"
                const-val low[6387100]:int(64)[10] "temp"
                (6387102 'move' low[6387100](6387104 '.v' _iterator[6387025] F0_low[6835591]))
                const-val high[6387107]:int(64)[10] "temp"
                (6387109 'move' high[6387107](6387111 '.v' _iterator[6387025] F1_high[6835595]))
                (6387114 'move' _return_tmp_[6387098](6387117 call chpl_checkIfRangeIterWillOverflow[1518856] low[6387100] high[6387107] 1 default_arg_first[6387068] default_arg_last[6387082] 1))
                CForLoop[6387124]
                {
                  const-val yret[6387155]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6387157 'move' yret[6387155] i[6387053])
                  const-val _yieldedIndex[6387160]:int(64)[10] "temp"
                  (6387162 'move' _yieldedIndex[6387160] i[6387053])
                  {
                    const-val i[6387166]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6387168 'move' i[6387166] _yieldedIndex[6387160])
                    const-val yret[6387171]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6387173 'move' yret[6387171] _yieldedIndex[6387160])
                    const-val _yieldedIndex[6387176]:int(64)[10] "temp"
                    (6387178 'move' _yieldedIndex[6387176] _yieldedIndex[6387160])
                    {
                      const-val i[6387182]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6387184 'move' i[6387182] _yieldedIndex[6387176])
                      const-val yret[6387187]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6387189 'move' yret[6387187] _yieldedIndex[6387176])
                      const-val _yieldedIndex[6387192]:int(64)[10] "temp"
                      (6387194 'move' _yieldedIndex[6387192] _yieldedIndex[6387176])
                      {
                        const-val slot[6387198]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6387200 'move' slot[6387198] _yieldedIndex[6387192])
                        const-val yret[6387203]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6387205 'move' yret[6387203] _yieldedIndex[6387192])
                        const-val _yieldedIndex[6387243]:int(64)[10] "temp"
                        (6387330 'move' _yieldedIndex[6387243] _yieldedIndex[6387192])
                        {
                          const-val slot[6387245]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6387247 'move' slot[6387245] _yieldedIndex[6387243])
                          const-val yret[6387250]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6387252 'move' yret[6387250] _yieldedIndex[6387243])
                          const-val _yieldedIndex[6387255]:int(64)[10] "temp"
                          (6387257 'move' _yieldedIndex[6387255] _yieldedIndex[6387243])
                          {
                            const-val slot[6387261]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6387263 'move' slot[6387261] _yieldedIndex[6387255])
                            {
                              const-ref call_tmp[6387267]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                              (6387269 'move' call_tmp[6387267](6387272 call table[3344610] this[3344296]))
                              const-val call_tmp[6387274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6387276 'move' call_tmp[6387274](6387279 call isSlotFull[3345224] call_tmp[6387267] slot[6387261]))
                              const-val call_tmp[6387282]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6387284 'move' call_tmp[6387282] call_tmp[6387274])
                              if call_tmp[6387282]
                              {
                                const-val key[6387289]:string[244] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6387291]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val val[6387293]:string[244] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6387295]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                ref call_tmp[6387297]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
                                (6387299 'move' call_tmp[6387297](6387302 call table[3344610] this[3344296]))
                                val _formal_tmp_out_key[6387304]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                val _formal_tmp_out_val[6387306]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                (6387309 call clearSlot[3345500] call_tmp[6387297] slot[6387261] _formal_tmp_out_key[6387304] _formal_tmp_out_val[6387306])
                                (6387314 'move' key[6387289] _formal_tmp_out_key[6387304])
                                (6387317 'move' val[6387293] _formal_tmp_out_val[6387306])
                                (6387321 call chpl__autoDestroy[3262688] val[6387293])
                                (6387324 call chpl__autoDestroy[3262688] key[6387289])
                              }
                            }
                            label _continueLabel[6387327]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[6387126]:int(64)[10] "temp"
                    (6387128 'move' low[6387126](6387130 '.v' _iterator[6387025] F0_low[6835591]))
                    (6387133 '=' i[6387053] low[6387126])
                  }
                  {
                    const-val high[6387137]:int(64)[10] "temp"
                    (6387139 'move' high[6387137](6387141 '.v' _iterator[6387025] F1_high[6835595]))
                    (6387144 '<=' i[6387053] high[6387137])
                  }
                  {
                    val call_tmp[6387148]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6387150]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    (6387152 '+=' i[6387053] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[6387224]
              }
              (6387227 call _freeIterator[1519714] _iterator[6387025])
              label _endchpl_direct_counted_range_iter_helper[6387229]
            }
            (6387232 call _freeIterator[1519981] _iterator[6386791])
            label _endchpl_direct_counted_range_iter[6387234]
          }
          (6387237 call _freeIterator[1520248] _iterator[6386753])
          label _end_allSlots[6387239]
        }
        (6056332 call _freeIterator[1947321] _iterator[6056277])
        label _endallSlots[6056334]
      }
      label _breakLabel[3344443]
      (5634955 call _freeIterator[3345141] _iterator[3344318])
    }
    ref call_tmp[3344445]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3344447 'move' call_tmp[3344445](3344450 call table[3344610] this[3344296]))
    (3344457 call maybeShrinkAfterRemove[3345869] call_tmp[3344445])
    (5634959 call _leave[3344562] this[3344296])
    (3344458 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].clear[3359377](ref arg this[3359381]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3359391 call _enter[3359546] this[3359381])
    {
      val _indexOfInterest[3359401]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[3359403]:_ic_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359814] "dead at end of block" "expr temp" "temp"
      const-ref call_tmp[3359405]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead at end of block" "maybe param" "temp"
      (3359407 'move' call_tmp[3359405](3359410 call table[3359695] this[3359381]))
      const-val call_tmp[3359413]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[5589442]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "temp"
      (3359421 call allSlots[3359723] call_tmp[3359405] ret_tmp[5589442])
      (5589445 'move' call_tmp[3359413] ret_tmp[5589442])
      (3359422 'move' _iterator[3359403](3359425 call _getIterator[3359829] call_tmp[3359413]))
      {
        val ret[6057918]:_ir_allSlots__ref_chpl__hashtable_string__owned_ModuleSpecification[3359820] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[6057920]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[6057922]:_ic__allSlots[1946131] "dead at end of block" "expr temp" "temp"
        const-ref call_tmp[6057924]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
        const-ref this[6058056]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
        (6058061 'move' this[6058056](6058058 '.v' _iterator[3359403] F0_this[7084885]))
        (6057926 'move' call_tmp[6057924](6057929 call tableSize[3355205] this[6058056]))
        const-val call_tmp[6057931]:_ir__allSlots[1946137] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[6057933]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (6057935 'move' coerce_tmp[6057933](6057937 'deref' call_tmp[6057924]))
        const-val ret_tmp[6057939]:_ir__allSlots[1946137] "temp"
        (6057942 call _allSlots[265237] coerce_tmp[6057933] ret_tmp[6057939])
        (6057945 'move' call_tmp[6057931] ret_tmp[6057939])
        (6057948 'move' _iterator[6057922](6057951 call _getIterator[1946146] call_tmp[6057931]))
        {
          val ret[6389441]:_ir__allSlots[1946137] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[6389443]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[6389445]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[6389447]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[6389449]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          const-val size[6390024]:int(64)[10] "temp"
          (6390029 'move' size[6390024](6390026 '.v' _iterator[6057922] F0_size[6829964]))
          (6389452 call chpl_direct_counted_range_iter[1468903] 0 size[6390024] ret_tmp[6389449])
          (6389456 'move' call_tmp[6389447] ret_tmp[6389449])
          (6389459 'move' _iterator[6389445](6389462 call _getIterator[1520079] call_tmp[6389447]))
          {
            val ret[6389465]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6389467]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6389469]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6389471]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6389473]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6389475]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6389477]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6389479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6389481]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6389483]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6389485]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6389487]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6389489]:int(64)[10] "temp"
            (6389491 'move' low[6389489](6389493 '.v' _iterator[6389445] F0_low[6832410]))
            const-val count[6389496]:int(64)[10] "temp"
            (6389498 'move' count[6389496](6389500 '.v' _iterator[6389445] F1_count[6832414]))
            (6389504 call chpl_direct_counted_range_iter_helper[1469227] low[6389489] count[6389496] ret_tmp[6389487])
            (6389508 'move' call_tmp[6389485] ret_tmp[6389487])
            (6389511 'move' _iterator[6389483](6389514 call _getIterator[1519812] call_tmp[6389485]))
            {
              val ret[6389517]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
              val tmp[6389519]:bool[19] "dead after last mention" "maybe param" "temp"
              val tmp[6389521]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6389523]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6389525]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6389527]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6389529]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6389531]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              val call_tmp[6389533]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6389535]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6389537]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6389539]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val tmp[6389541]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6389543]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6389545]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6389547]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6389549]:int(64)[10] "temp"
              (6389551 'move' count[6389549](6389553 '.v' _iterator[6389483] F1_count[6834178]))
              (6389556 'move' call_tmp[6389547](6389559 call <[1469576] count[6389549] 0))
              (6389562 'move' tmp[6389545] call_tmp[6389547])
              (6389565 'move' tmp[6389539] call_tmp[6389547])
              const-val call_tmp[6389568]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (6389570 'move' call_tmp[6389568] call_tmp[6389547])
              if call_tmp[6389547]
              {
                (6389576 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
              }
              const-val start[6389579]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              const-val low[6389581]:int(64)[10] "temp"
              (6389583 'move' low[6389581](6389585 '.v' _iterator[6389483] F0_low[6834174]))
              (6389588 'move' start[6389579] low[6389581])
              const-val end[6389591]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              val tmp[6389593]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[6389595]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[6389597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6389599]:int(64)[10] "temp"
              (6389601 'move' count[6389599](6389603 '.v' _iterator[6389483] F1_count[6834178]))
              (6389606 'move' call_tmp[6389597](6389609 call ==[52746] count[6389599] 0))
              (6389612 'move' tmp[6389595] call_tmp[6389597])
              if call_tmp[6389597]
              {
                const-val tmp[6389617]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6389619]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6389621]:int(64)[10] "temp"
                (6389623 'move' low[6389621](6389625 '.v' _iterator[6389483] F0_low[6834174]))
                (6389628 'move' call_tmp[6389619](6389630 'cast' uint(64)[86] low[6389621]))
                const-val call_tmp[6389633]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[6389635]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (6389637 'move' coerce_tmp[6389635](6389639 'cast' uint(64)[86] 1))
                (6389642 'move' call_tmp[6389633](6389645 call -[1487313] call_tmp[6389619]))
                val call_tmp[6389647]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389649 'move' tmp[6389617](6389652 call :[1482043] call_tmp[6389633]))
                (6389654 'move' tmp[6389593] tmp[6389617])
              }
              {
                const-val tmp[6389658]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[6389660]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[6389662]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6389664]:int(64)[10] "temp"
                (6389666 'move' count[6389664](6389668 '.v' _iterator[6389483] F1_count[6834178]))
                (6389671 'move' call_tmp[6389662] count[6389664])
                const-val call_tmp[6389674]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6389676]:int(64)[10] "temp"
                (6389678 'move' count[6389676](6389680 '.v' _iterator[6389483] F1_count[6834178]))
                (6389683 'move' call_tmp[6389674](6389686 call -[1487343] count[6389676]))
                const-val call_tmp[6389688]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6389690]:int(64)[10] "temp"
                (6389692 'move' low[6389690](6389694 '.v' _iterator[6389483] F0_low[6834174]))
                (6389697 'move' call_tmp[6389688](6389700 call +[56587] low[6389690] call_tmp[6389674]))
                val call_tmp[6389703]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389705 'move' tmp[6389658] call_tmp[6389688])
                (6389708 'move' tmp[6389593] call_tmp[6389688])
              }
              (6389712 'move' end[6389591] tmp[6389593])
              val _indexOfInterest[6389715]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6389717]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6389719]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6389721]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
              (6389724 call chpl_direct_param_stride_range_iter[1517410] start[6389579] tmp[6389593] ret_tmp[6389721])
              (6389728 'move' call_tmp[6389719] ret_tmp[6389721])
              (6389731 'move' _iterator[6389717](6389734 call _getIterator[1519541] call_tmp[6389719]))
              {
                val ret[6389737]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                val call_tmp[6389739]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389741]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389744 call chpl_range_check_stride[1517730])
                val i[6389745]:int(64)[10] "dead at end of block" "insert auto destroy"
                val call_tmp[6389747]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6389749 'move' i[6389745] 0)
                val call_tmp[6389752]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389754]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389756]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6389758]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[6389760]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[6389762]:int(64)[10] "temp"
                (6389764 'move' low[6389762](6389766 '.v' _iterator[6389717] F0_low[6835591]))
                (6389769 'move' default_arg_first[6389760](6389772 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6389762]))
                const-val default_arg_last[6389774]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[6389776]:int(64)[10] "temp"
                (6389778 'move' high[6389776](6389780 '.v' _iterator[6389717] F1_high[6835595]))
                (6389783 'move' default_arg_last[6389774](6389786 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6389776]))
                val default_arg_shouldHalt[6389788]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                const-val _return_tmp_[6389790]:bool[19] "dead after last mention" "temp"
                const-val low[6389792]:int(64)[10] "temp"
                (6389794 'move' low[6389792](6389796 '.v' _iterator[6389717] F0_low[6835591]))
                const-val high[6389799]:int(64)[10] "temp"
                (6389801 'move' high[6389799](6389803 '.v' _iterator[6389717] F1_high[6835595]))
                (6389806 'move' _return_tmp_[6389790](6389809 call chpl_checkIfRangeIterWillOverflow[1518856] low[6389792] high[6389799] 1 default_arg_first[6389760] default_arg_last[6389774] 1))
                CForLoop[6389816] hazard
                {
                  const-val yret[6389847]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6389849 'move' yret[6389847] i[6389745])
                  const-val _yieldedIndex[6389852]:int(64)[10] "temp"
                  (6389854 'move' _yieldedIndex[6389852] i[6389745])
                  {
                    const-val i[6389858]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6389860 'move' i[6389858] _yieldedIndex[6389852])
                    const-val yret[6389863]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6389865 'move' yret[6389863] _yieldedIndex[6389852])
                    const-val _yieldedIndex[6389868]:int(64)[10] "temp"
                    (6389870 'move' _yieldedIndex[6389868] _yieldedIndex[6389852])
                    {
                      const-val i[6389874]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6389876 'move' i[6389874] _yieldedIndex[6389868])
                      const-val yret[6389879]:int(64)[10] "dead after last mention" "YVV" "temp"
                      (6389881 'move' yret[6389879] _yieldedIndex[6389868])
                      const-val _yieldedIndex[6389884]:int(64)[10] "temp"
                      (6389886 'move' _yieldedIndex[6389884] _yieldedIndex[6389868])
                      {
                        const-val slot[6389890]:int(64)[10] "const" "index var" "insert auto destroy"
                        (6389892 'move' slot[6389890] _yieldedIndex[6389884])
                        const-val yret[6389895]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6389897 'move' yret[6389895] _yieldedIndex[6389884])
                        const-val _yieldedIndex[6389935]:int(64)[10] "temp"
                        (6390022 'move' _yieldedIndex[6389935] _yieldedIndex[6389884])
                        {
                          const-val slot[6389937]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6389939 'move' slot[6389937] _yieldedIndex[6389935])
                          const-val yret[6389942]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6389944 'move' yret[6389942] _yieldedIndex[6389935])
                          const-val _yieldedIndex[6389947]:int(64)[10] "temp"
                          (6389949 'move' _yieldedIndex[6389947] _yieldedIndex[6389935])
                          {
                            const-val slot[6389953]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6389955 'move' slot[6389953] _yieldedIndex[6389947])
                            {
                              const-ref call_tmp[6389959]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                              (6389961 'move' call_tmp[6389959](6389964 call table[3359695] this[3359381]))
                              const-val call_tmp[6389966]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6389968 'move' call_tmp[6389966](6389971 call isSlotFull[3360309] call_tmp[6389959] slot[6389953]))
                              const-val call_tmp[6389974]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (6389976 'move' call_tmp[6389974] call_tmp[6389966])
                              if call_tmp[6389974]
                              {
                                const-val key[6389981]:string[244] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6389983]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val val[6389985]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "split inited"
                                val call_tmp[6389987]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                ref call_tmp[6389989]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
                                (6389991 'move' call_tmp[6389989](6389994 call table[3359695] this[3359381]))
                                val _formal_tmp_out_key[6389996]:string[244] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                val _formal_tmp_out_val[6389998]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "no auto destroy" "suppress lvalue error" "temp"
                                (6390001 call clearSlot[3360585] call_tmp[6389989] slot[6389953] _formal_tmp_out_key[6389996] _formal_tmp_out_val[6389998])
                                (6390006 'move' key[6389981] _formal_tmp_out_key[6389996])
                                (6390009 'move' val[6389985] _formal_tmp_out_val[6389998])
                                (6390013 call chpl__autoDestroy[3373663] val[6389985])
                                (6390016 call chpl__autoDestroy[3262688] key[6389981])
                              }
                            }
                            label _continueLabel[6390019]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[6389818]:int(64)[10] "temp"
                    (6389820 'move' low[6389818](6389822 '.v' _iterator[6389717] F0_low[6835591]))
                    (6389825 '=' i[6389745] low[6389818])
                  }
                  {
                    const-val high[6389829]:int(64)[10] "temp"
                    (6389831 'move' high[6389829](6389833 '.v' _iterator[6389717] F1_high[6835595]))
                    (6389836 '<=' i[6389745] high[6389829])
                  }
                  {
                    val call_tmp[6389840]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6389842]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    (6389844 '+=' i[6389745] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[6389916]
              }
              (6389919 call _freeIterator[1519714] _iterator[6389717])
              label _endchpl_direct_counted_range_iter_helper[6389921]
            }
            (6389924 call _freeIterator[1519981] _iterator[6389483])
            label _endchpl_direct_counted_range_iter[6389926]
          }
          (6389929 call _freeIterator[1520248] _iterator[6389445])
          label _end_allSlots[6389931]
        }
        (6057977 call _freeIterator[1947321] _iterator[6057922])
        label _endallSlots[6057979]
      }
      label _breakLabel[3359528]
      (5635207 call _freeIterator[3360226] _iterator[3359403])
    }
    ref call_tmp[3359530]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3359532 'move' call_tmp[3359530](3359535 call table[3359695] this[3359381]))
    (3359542 call maybeShrinkAfterRemove[3363395] call_tmp[3359530])
    (5635211 call _leave[3359647] this[3359381])
    (3359543 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].contains[3315108](const  ref arg this[3315112]:_ref(map(string,int(64),false))[3288803], const  ref arg k[3315119]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3315123]:bool[19] "dead after last mention" "RVV" "temp"
    (3315137 call _enter[3301095] this[3315112])
    const-ref call_tmp[3315146]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3315148 'move' call_tmp[3315146](3315151 call table[3301244] this[3315112]))
    const-val call_tmp[3315154]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588867]:(bool,int(64))[3257010] "temp"
    (3315162 call findFullSlot[3312245] call_tmp[3315146] k[3315119] ret_tmp[5588867])
    (5588870 'move' call_tmp[3315154] ret_tmp[5588867])
    const-val tmp[3315164]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3315166 'move' tmp[3315164] call_tmp[3315154])
    1
    const-ref call_tmp[3315174]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3315176 'move' call_tmp[3315174](3315213 '.' tmp[3315164] x0[3257006]))
    const-val result[3315181]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315219]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315223 'move' coerce_tmp[3315219](3315221 'deref' call_tmp[3315174]))
    (5632718 '=' result[3315181] coerce_tmp[3315219])
    (3315183 'noop')
    (3315227 '=' ret[3315123] result[3315181])
    (5632721 call chpl__autoDestroy[4207177] tmp[3315164])
    (5632726 call _leave[3301196] this[3315112])
    gotoReturn _end_contains[3315196] _end_contains[3315196]
    label _end_contains[3315196]
    (3315198 return ret[3315123])
  }
  function _ref(map(string,int(64),false))[3288803]._warnForParSafeIndexing[3315729](const  ref arg this[3315733]:_ref(map(string,int(64),false))[3288803]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3315739]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3315747]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3315762 return _void[46])
  }
  function _ref(map(string,string,false))[3283395]._warnForParSafeIndexing[3386782](const  ref arg this[3386786]:_ref(map(string,string,false))[3283395]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3386792]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3386800]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3386815 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._warnForParSafeIndexing[3396609](const  ref arg this[3396613]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3396619]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3396627]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3396642 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869]._warnForParSafeIndexing[3406884](const  ref arg this[3406888]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3406894]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3406902]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3406917 return _void[46])
  }
  function _ref(map(string,Module(real(32)),false))[1941017]._warnForParSafeIndexing[3421333](const  ref arg this[3421337]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3421343]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3421351]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3421366 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].this[3396146](ref arg this[3396150]:_ref(map(string,owned ModuleSpecification?,false))[3283695], const  ref arg k[3396157]:string[244]) ref : _ref(owned ModuleSpecification?)[3283613] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3396171]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "RVV" "temp"
    (3396283 call _warnForParSafeIndexing[3396609] this[3396150])
    (3396289 call _enter[3359546] this[3396150])
    ref call_tmp[3396298]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3396300 'move' call_tmp[3396298](3396303 call table[3359695] this[3396150]))
    const-val call_tmp[3396306]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589594]:(bool,int(64))[3257010] "temp"
    (3396314 call findAvailableSlot[3372171] call_tmp[3396298] k[3396157] ret_tmp[5589594])
    (5589597 'move' call_tmp[3396306] ret_tmp[5589594])
    const-val tmp[3396316]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3396318 'move' tmp[3396316] call_tmp[3396306])
    1
    const-ref call_tmp[3396326]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3396328 'move' call_tmp[3396326](3397188 '.' tmp[3396316] x1[3257008]))
    const-val slot[3396333]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3397194]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3397198 'move' coerce_tmp[3397194](3397196 'deref' call_tmp[3396326]))
    (5635631 '=' slot[3396333] coerce_tmp[3397194])
    (3396335 'noop')
    const-ref call_tmp[3396339]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3396341 'move' call_tmp[3396339](3396344 call table[3359695] this[3396150]))
    const-val call_tmp[3396347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396349 'move' call_tmp[3396347](3396355 call isSlotFull[3360309] call_tmp[3396339] slot[3396333]))
    const-val call_tmp[3396357]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396359 'move' call_tmp[3396357](3396362 call ![63126] call_tmp[3396347]))
    const-val call_tmp[3396364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3396366 'move' call_tmp[3396364] call_tmp[3396357])
    if call_tmp[3396364]
    {
      const-val val[3396373]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "maybe copy elided"
      val call_tmp[3396375]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (3397245 call init[3367941] val[3396373])
      ref call_tmp[3396387]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
      (3396389 'move' call_tmp[3396387](3396392 call table[3359695] this[3396150]))
      const-val _formal_tmp_in_key[3397207]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3397212 'move' _formal_tmp_in_key[3397207](3397208 call chpl__initCopy[1480493] k[3396157] 0))
      const-val _formal_tmp_in_val[3397216]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (5635628 '=' _formal_tmp_in_val[3397216] val[3396373])
      (3397221 'noop')
      (3396399 call fillSlot[3372858] call_tmp[3396387] slot[3396333] _formal_tmp_in_key[3397207] _formal_tmp_in_val[3397216])
    }
    ref call_tmp[3396407]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3396409 'move' call_tmp[3396407](3396412 call table[3359695] this[3396150]))
    ref call_tmp[3396415]:_ref(chpl_TableEntry(string,owned ModuleSpecification?))[3283782] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3397228]:_ref(_ddata(chpl_TableEntry(string,owned ModuleSpecification?)))[3283805] "dead after last mention" "temp"
    (3397230 'move' _this_tmp_[3397228](3396420 call table[3355177] call_tmp[3396407]))
    val coerce_tmp[3397235]:_ddata(chpl_TableEntry(string,owned ModuleSpecification?))[3283796] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3397239 'move' coerce_tmp[3397235](3397237 'deref' _this_tmp_[3397228]))
    (3396417 'move' call_tmp[3396415](3396423 call this[3358341] coerce_tmp[3397235] slot[3396333]))
    ref call_tmp[3396425]:_ref(owned ModuleSpecification?)[3283613] "dead after last mention" "maybe param" "temp"
    (3396427 'move' call_tmp[3396425](3396430 call val[3360847] call_tmp[3396415]))
    (3396433 'move' ret[3396171] call_tmp[3396425])
    (5635635 call chpl__autoDestroy[4207177] tmp[3396316])
    (5635640 call _leave[3359647] this[3396150])
    gotoReturn _end_this[3396441] _end_this[3396441]
    label _end_this[3396441]
    (3396443 return ret[3396171])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].this[3406518](ref arg this[3406522]:_ref(map(string,shared Module(real(32)),false))[3391869], const  ref arg k[3406529]:string[244], ref arg error_out[5510739]:Error[85511]) ref : _ref(shared Module(real(32)))[1955047] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3406531]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "RVV" "temp"
    (3406565 call _warnForParSafeIndexing[3406884] this[3406522])
    (3406571 call _enter[3400638] this[3406522])
    ref call_tmp[3406580]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3406582 'move' call_tmp[3406580](3406585 call table[3400787] this[3406522]))
    const-val call_tmp[3406588]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589812]:(bool,int(64))[3257010] "temp"
    (3406596 call findAvailableSlot[3400815] call_tmp[3406580] k[3406529] ret_tmp[5589812])
    (5589815 'move' call_tmp[3406588] ret_tmp[5589812])
    const-val tmp[3406598]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3406600 'move' tmp[3406598] call_tmp[3406588])
    1
    const-ref call_tmp[3406608]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3406610 'move' call_tmp[3406608](3407463 '.' tmp[3406598] x1[3257008]))
    const-val slot[3406615]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3407469]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3407473 'move' coerce_tmp[3407469](3407471 'deref' call_tmp[3406608]))
    (5635799 '=' slot[3406615] coerce_tmp[3407469])
    (3406617 'noop')
    const-ref call_tmp[3406621]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3406623 'move' call_tmp[3406621](3406626 call table[3400787] this[3406522]))
    const-val call_tmp[3406629]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406631 'move' call_tmp[3406629](3406637 call isSlotFull[3407477] call_tmp[3406621] slot[3406615]))
    const-val call_tmp[3406639]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406641 'move' call_tmp[3406639](3406644 call ![63126] call_tmp[3406629]))
    const-val call_tmp[3406646]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3406648 'move' call_tmp[3406646] call_tmp[3406639])
    if call_tmp[3406646]
    {
      const-val call_tmp[3406655]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3407573]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3407575 'move' new_temp[3407573](3407560 call _new[3333701] k[3406529]))
      }
      const-val initTemp[3407582]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3407585 call init[3333806] initTemp[3407582] new_temp[3407573])
      (3406657 'move' call_tmp[3406655] initTemp[3407582])
      val call_tmp[3406662]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3407599]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589158]:owned Error[1498203] "temp"
      (3407601 call :[3334380] call_tmp[3406655] ret_tmp[5589158])
      (5589161 'move' coerce_tmp[3407599] ret_tmp[5589158])
      const-val _formal_tmp_in_err[3407818]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3407823 'move' _formal_tmp_in_err[3407818] coerce_tmp[3407599])
      (3406664 'move' call_tmp[3406662](3406667 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3407818]))
      {
        val castedError[5510742]:Error[85511] "temp"
        (5510748 'move' castedError[5510742] call_tmp[3406662])
        (5510750 '=' error_out[5510739] castedError[5510742])
        (5635802 call chpl__autoDestroy[4207177] tmp[3406598])
        (5635807 call _leave[3400739] this[3406522])
        gotoErrorHandlingReturn _end_this[3406716] _end_this[3406716]
      }
    }
    ref result[3406672]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "ref var"
    ref call_tmp[3406676]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead at end of block" "maybe param" "temp"
    (3406678 'move' call_tmp[3406676](3406681 call table[3400787] this[3406522]))
    ref call_tmp[3406684]:_ref(chpl_TableEntry(string,shared Module(real(32))))[3392247] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3407830]:_ref(_ddata(chpl_TableEntry(string,shared Module(real(32)))))[3392270] "dead at end of block" "temp"
    (3407832 'move' _this_tmp_[3407830](3406689 call table[3392311] call_tmp[3406676]))
    val coerce_tmp[3407837]:_ddata(chpl_TableEntry(string,shared Module(real(32))))[3392261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3407841 'move' coerce_tmp[3407837](3407839 'deref' _this_tmp_[3407830]))
    (3406686 'move' call_tmp[3406684](3406692 call this[3395475] coerce_tmp[3407837] slot[3406615]))
    ref call_tmp[3406694]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "maybe param" "temp"
    (3406696 'move' call_tmp[3406694](3406699 call val[3403754] call_tmp[3406684]))
    (3406702 'move' result[3406672] call_tmp[3406694])
    (3406708 'move' ret[3406531] result[3406672])
    (5635809 call chpl__autoDestroy[4207177] tmp[3406598])
    (5635814 call _leave[3400739] this[3406522])
    gotoReturn _end_this[3406716] _end_this[3406716]
    label _end_this[3406716]
    (3406718 return ret[3406531])
  }
  function _ref(map(string,int(64),false))[3288803].this[3315376](const  ref arg this[3315380]:_ref(map(string,int(64),false))[3288803], const  ref arg k[3315387]:string[244], ref arg error_out[5508019]:Error[85511]) const ref : _ref(int(64))[1465689] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3315389]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    (3315577 call _warnForParSafeIndexing[3315729] this[3315380])
    (3315583 call _enter[3301095] this[3315380])
    const-ref call_tmp[3315592]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3315594 'move' call_tmp[3315592](3315597 call table[3301244] this[3315380]))
    const-val call_tmp[3315600]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588873]:(bool,int(64))[3257010] "temp"
    (3315608 call findFullSlot[3312245] call_tmp[3315592] k[3315387] ret_tmp[5588873])
    (5588876 'move' call_tmp[3315600] ret_tmp[5588873])
    const-val tmp[3315610]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3315612 'move' tmp[3315610] call_tmp[3315600])
    1
    const-ref call_tmp[3315620]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3315622 'move' call_tmp[3315620](3315781 '.' tmp[3315610] x0[3257006]))
    const-val found[3315627]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315787]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315791 'move' coerce_tmp[3315787](3315789 'deref' call_tmp[3315620]))
    (5632738 '=' found[3315627] coerce_tmp[3315787])
    (3315629 'noop')
    const-ref call_tmp[3315632]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3315634 'move' call_tmp[3315632](3315796 '.' tmp[3315610] x1[3257008]))
    const-val slot[3315639]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3315802]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3315806 'move' coerce_tmp[3315802](3315804 'deref' call_tmp[3315632]))
    (5632741 '=' slot[3315639] coerce_tmp[3315802])
    (3315641 'noop')
    const-val call_tmp[3315645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315647 'move' call_tmp[3315645](3315650 call ![63126] found[3315627]))
    const-val call_tmp[3315652]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315654 'move' call_tmp[3315652] call_tmp[3315645])
    if call_tmp[3315652]
    {
      const-val call_tmp[3315661]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3333755]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3333757 'move' new_temp[3333755](3315849 call _new[3333701] k[3315387]))
      }
      const-val initTemp[3333785]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3333788 call init[3333806] initTemp[3333785] new_temp[3333755])
      (3315663 'move' call_tmp[3315661] initTemp[3333785])
      val call_tmp[3315668]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3334275]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589134]:owned Error[1498203] "temp"
      (3334277 call :[3334380] call_tmp[3315661] ret_tmp[5589134])
      (5589137 'move' coerce_tmp[3334275] ret_tmp[5589134])
      const-val _formal_tmp_in_err[3335146]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3335151 'move' _formal_tmp_in_err[3335146] coerce_tmp[3334275])
      (3315670 'move' call_tmp[3315668](3315673 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3335146]))
      {
        val castedError[5508022]:Error[85511] "temp"
        (5508028 'move' castedError[5508022] call_tmp[3315668])
        (5508030 '=' error_out[5508019] castedError[5508022])
        (5632744 call chpl__autoDestroy[4207177] tmp[3315610])
        (5632749 call _leave[3301196] this[3315380])
        gotoErrorHandlingReturn _end_this[3315722] _end_this[3315722]
      }
    }
    const-ref result[3315678]:_ref(int(64))[1465689] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3315682]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3315684 'move' call_tmp[3315682](3315687 call table[3301244] this[3315380]))
    ref call_tmp[3315690]:_ref(chpl_TableEntry(string,int(64)))[3288890] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3335158]:_ref(_ddata(chpl_TableEntry(string,int(64))))[3288913] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3335160 'move' _this_tmp_[3335158](3315695 call table[3303003] call_tmp[3315682]))
    val coerce_tmp[3335165]:_ddata(chpl_TableEntry(string,int(64)))[3288904] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3335169 'move' coerce_tmp[3335165](3335167 'deref' _this_tmp_[3335158]))
    (3315692 'move' call_tmp[3315690](3315698 call this[3306115] coerce_tmp[3335165] slot[3315639]))
    ref call_tmp[3315700]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    (3315702 'move' call_tmp[3315700](3315705 call val[3307792] call_tmp[3315690]))
    (3315708 'move' result[3315678] call_tmp[3315700])
    (3315714 'move' ret[3315389] result[3315678])
    (5632751 call chpl__autoDestroy[4207177] tmp[3315610])
    (5632756 call _leave[3301196] this[3315380])
    gotoReturn _end_this[3315722] _end_this[3315722]
    label _end_this[3315722]
    (3315724 return ret[3315389])
  }
  function _ref(map(string,string,false))[3283395].this[3386412](const  ref arg this[3386416]:_ref(map(string,string,false))[3283395], const  ref arg k[3386423]:string[244], ref arg error_out[5510668]:Error[85511]) const ref : _ref(string)[1466327] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3386425]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    (3386613 call _warnForParSafeIndexing[3386782] this[3386416])
    (3386619 call _enter[3344461] this[3386416])
    const-ref call_tmp[3386628]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3386630 'move' call_tmp[3386628](3386633 call table[3344610] this[3386416]))
    const-val call_tmp[3386636]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589724]:(bool,int(64))[3257010] "temp"
    (3386644 call findFullSlot[3383343] call_tmp[3386628] k[3386423] ret_tmp[5589724])
    (5589727 'move' call_tmp[3386636] ret_tmp[5589724])
    const-val tmp[3386646]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3386648 'move' tmp[3386646] call_tmp[3386636])
    1
    const-ref call_tmp[3386656]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3386658 'move' call_tmp[3386656](3386834 '.' tmp[3386646] x0[3257006]))
    const-val found[3386663]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3386840]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3386844 'move' coerce_tmp[3386840](3386842 'deref' call_tmp[3386656]))
    (5635563 '=' found[3386663] coerce_tmp[3386840])
    (3386665 'noop')
    const-ref call_tmp[3386668]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3386670 'move' call_tmp[3386668](3386849 '.' tmp[3386646] x1[3257008]))
    const-val slot[3386675]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3386855]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3386859 'move' coerce_tmp[3386855](3386857 'deref' call_tmp[3386668]))
    (5635566 '=' slot[3386675] coerce_tmp[3386855])
    (3386677 'noop')
    const-val call_tmp[3386681]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386683 'move' call_tmp[3386681](3386686 call ![63126] found[3386663]))
    const-val call_tmp[3386688]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3386690 'move' call_tmp[3386688] call_tmp[3386681])
    if call_tmp[3386688]
    {
      const-val call_tmp[3386697]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3386880]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3386882 'move' new_temp[3386880](3386867 call _new[3333701] k[3386423]))
      }
      const-val initTemp[3386889]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3386892 call init[3333806] initTemp[3386889] new_temp[3386880])
      (3386699 'move' call_tmp[3386697] initTemp[3386889])
      val call_tmp[3386704]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3386906]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589140]:owned Error[1498203] "temp"
      (3386908 call :[3334380] call_tmp[3386697] ret_tmp[5589140])
      (5589143 'move' coerce_tmp[3386906] ret_tmp[5589140])
      const-val _formal_tmp_in_err[3387125]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3387130 'move' _formal_tmp_in_err[3387125] coerce_tmp[3386906])
      (3386706 'move' call_tmp[3386704](3386709 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3387125]))
      {
        val castedError[5510671]:Error[85511] "temp"
        (5510677 'move' castedError[5510671] call_tmp[3386704])
        (5510679 '=' error_out[5510668] castedError[5510671])
        (5635569 call chpl__autoDestroy[4207177] tmp[3386646])
        (5635574 call _leave[3344562] this[3386416])
        gotoErrorHandlingReturn _end_this[3386758] _end_this[3386758]
      }
    }
    const-ref result[3386714]:_ref(string)[1466327] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3386718]:_ref(chpl__hashtable(string,string))[3283450] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3386720 'move' call_tmp[3386718](3386723 call table[3344610] this[3386416]))
    ref call_tmp[3386726]:_ref(chpl_TableEntry(string,string))[3283482] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3387137]:_ref(_ddata(chpl_TableEntry(string,string)))[3283505] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3387139 'move' _this_tmp_[3387137](3386731 call table[3340092] call_tmp[3386718]))
    val coerce_tmp[3387144]:_ddata(chpl_TableEntry(string,string))[3283496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3387148 'move' coerce_tmp[3387144](3387146 'deref' _this_tmp_[3387137]))
    (3386728 'move' call_tmp[3386726](3386734 call this[3343256] coerce_tmp[3387144] slot[3386675]))
    ref call_tmp[3386736]:_ref(string)[1466327] "dead at end of block" "maybe param" "temp"
    (3386738 'move' call_tmp[3386736](3386741 call val[3345762] call_tmp[3386726]))
    (3386744 'move' result[3386714] call_tmp[3386736])
    (3386750 'move' ret[3386425] result[3386714])
    (5635576 call chpl__autoDestroy[4207177] tmp[3386646])
    (5635581 call _leave[3344562] this[3386416])
    gotoReturn _end_this[3386758] _end_this[3386758]
    label _end_this[3386758]
    (3386760 return ret[3386425])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].this[3420987](const  ref arg this[3420991]:_ref(map(string,Module(real(32)),false))[1941017], const  ref arg k[3420998]:string[244], ref arg error_out[5510797]:Error[85511]) const ref : _ref(Module(real(32)))[1935660] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3421000]:_ref(Module(real(32)))[1935660] "dead after last mention" "RVV" "temp"
    (3421181 call _warnForParSafeIndexing[3421333] this[3420991])
    (3421187 call _enter[3256798] this[3420991])
    const-ref call_tmp[3421196]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3421198 'move' call_tmp[3421196](3421201 call table[3256947] this[3420991]))
    const-val call_tmp[3421204]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589960]:(bool,int(64))[3257010] "temp"
    (3421212 call findFullSlot[3421376] call_tmp[3421196] k[3420998] ret_tmp[5589960])
    (5589963 'move' call_tmp[3421204] ret_tmp[5589960])
    const-val tmp[3421214]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3421216 'move' tmp[3421214] call_tmp[3421204])
    1
    const-ref call_tmp[3421224]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3421226 'move' call_tmp[3421224](3421581 '.' tmp[3421214] x0[3257006]))
    const-val found[3421231]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3421587]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3421591 'move' coerce_tmp[3421587](3421589 'deref' call_tmp[3421224]))
    (5636003 '=' found[3421231] coerce_tmp[3421587])
    (3421233 'noop')
    const-ref call_tmp[3421236]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3421238 'move' call_tmp[3421236](3421596 '.' tmp[3421214] x1[3257008]))
    const-val slot[3421243]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3421602]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3421606 'move' coerce_tmp[3421602](3421604 'deref' call_tmp[3421236]))
    (5636006 '=' slot[3421243] coerce_tmp[3421602])
    (3421245 'noop')
    const-val call_tmp[3421249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421251 'move' call_tmp[3421249](3421254 call ![63126] found[3421231]))
    const-val call_tmp[3421256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3421258 'move' call_tmp[3421256] call_tmp[3421249])
    if call_tmp[3421256]
    {
      const-val call_tmp[3421265]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      { scopeless
        val new_temp[3421627]:KeyNotFoundError[352856] "dead after last mention" "temp"
        (3421629 'move' new_temp[3421627](3421614 call _new[3333701] k[3420998]))
      }
      const-val initTemp[3421636]:owned KeyNotFoundError[3334157] "dead after last mention" "delay instantiation" "temp"
      (3421639 call init[3333806] initTemp[3421636] new_temp[3421627])
      (3421267 'move' call_tmp[3421265] initTemp[3421636])
      val call_tmp[3421272]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3421653]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589164]:owned Error[1498203] "temp"
      (3421655 call :[3334380] call_tmp[3421265] ret_tmp[5589164])
      (5589167 'move' coerce_tmp[3421653] ret_tmp[5589164])
      const-val _formal_tmp_in_err[3421872]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3421877 'move' _formal_tmp_in_err[3421872] coerce_tmp[3421653])
      (3421274 'move' call_tmp[3421272](3421277 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3421872]))
      {
        val castedError[5510800]:Error[85511] "temp"
        (5510806 'move' castedError[5510800] call_tmp[3421272])
        (5510808 '=' error_out[5510797] castedError[5510800])
        (5636009 call chpl__autoDestroy[4207177] tmp[3421214])
        (5636014 call _leave[3256899] this[3420991])
        gotoErrorHandlingReturn _end_this[3421326] _end_this[3421326]
      }
    }
    const-ref result[3421282]:_ref(Module(real(32)))[1935660] "dead at end of block" "const" "ref var"
    const-ref call_tmp[3421286]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (3421288 'move' call_tmp[3421286](3421291 call table[3256947] this[3420991]))
    ref call_tmp[3421294]:_ref(chpl_TableEntry(string,Module(real(32))))[1941545] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[3421884]:_ref(_ddata(chpl_TableEntry(string,Module(real(32)))))[1941568] "dead at end of block" "reference to a const field of 'this'" "reference to a const" "temp"
    (3421886 'move' _this_tmp_[3421884](3421299 call table[1942967] call_tmp[3421286]))
    val coerce_tmp[3421891]:_ddata(chpl_TableEntry(string,Module(real(32))))[1941559] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3421895 'move' coerce_tmp[3421891](3421893 'deref' _this_tmp_[3421884]))
    (3421296 'move' call_tmp[3421294](3421302 call this[1947405] coerce_tmp[3421891] slot[3421243]))
    ref call_tmp[3421304]:_ref(Module(real(32)))[1935660] "dead at end of block" "maybe param" "temp"
    (3421306 'move' call_tmp[3421304](3421309 call val[3261562] call_tmp[3421294]))
    (3421312 'move' result[3421282] call_tmp[3421304])
    (3421318 'move' ret[3421000] result[3421282])
    (5636016 call chpl__autoDestroy[4207177] tmp[3421214])
    (5636021 call _leave[3256899] this[3420991])
    gotoReturn _end_this[3421326] _end_this[3421326]
    label _end_this[3421326]
    (3421328 return ret[3421000])
  }
  function _ref(map(string,int(64),false))[3288803].keys[3311117](const  ref arg this[3311121]:_ref(map(string,int(64),false))[3288803], ref arg _retArg[5588847]:_ref(_ir_keys__ref_map_string_int64_t_F)[3312072]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[7080149]:_ir_keys__ref_map_string_int64_t_F[3311961] "temp"
    (7080151 '.=' _ir[7080149] F0_this[7079746] this[3311121])
    (7080155 '=' _retArg[5588847] _ir[7080149])
    (7080158 return _void[46])
  }
  type _ic_keys__ref_map_string_int64_t_F[3311955] val super[3311956]:RootClass[236] "super class" val more[3311958]:int(64)[10] const-ref F0_this[7079744]:_ref(map(string,int(64),false))[3288803] val F1__iterator[7079748]:_ic_allSlots__ref_chpl__hashtable_string_int64_t[3311344] const-ref F2_table_ref[7079750]:_ref(chpl__hashtable(string,int(64)))[3288858] val F3__iterator[7079752]:_ic__allSlots[1946131] val F4__iterator[7079754]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7079756]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7079758]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7079760]:int(64)[10] const-ref value[7079762]:_ref(string)[1466327]
  type _ir_keys__ref_map_string_int64_t_F[3311961] const-ref F0_this[7079746]:_ref(map(string,int(64),false))[3288803]
  function _getIterator[3311970](const  ref arg ir[3311972]:_ir_keys__ref_map_string_int64_t_F[3311961]) : _ic_keys__ref_map_string_int64_t_F[3311955] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[3312079]:_ic_keys__ref_map_string_int64_t_F[3311955] "dead after last mention" "RVV" "temp"
    val _ic_[3311962]:_ic_keys__ref_map_string_int64_t_F[3311955] "dead after last mention" "temp"
    const-val call_tmp[3312086]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3312089 'move' call_tmp[3312086](3312101 'sizeof_bundle' _ic_keys__ref_map_string_int64_t_F[3311955]))
    val cast_tmp[3312104]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3312106 'move' cast_tmp[3312104](3311967 call chpl_here_alloc[308303] call_tmp[3312086] 326))
    (3311975 'move' _ic_[3311962](3312108 'cast' _ic_keys__ref_map_string_int64_t_F[3311955] cast_tmp[3312104]))
    (3311977 'setcid' _ic_[3311962])
    (3312084 'move' ret[3312079] _ic_[3311962])
    (7080161 '.=' ret[3312079] more[3311958] 1)
    const-ref tmp[7080165]:_ref(map(string,int(64),false))[3288803] "temp"
    (7080170 'move' tmp[7080165](7080166 '.v' ir[3311972] F0_this[7079746]))
    (7080172 '.=' ret[3312079] F0_this[7079744] tmp[7080165])
    (3312081 return ret[3312079])
  }
  function _ref(map(string,string,false))[3283395].keys[3381349](const  ref arg this[3381353]:_ref(map(string,string,false))[3283395], ref arg _retArg[5589714]:_ref(_ir_keys__ref_map_string_string_F)[3381646]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[7087847]:_ir_keys__ref_map_string_string_F[3381535] "temp"
    (7087849 '.=' _ir[7087847] F0_this[7087444] this[3381353])
    (7087853 '=' _retArg[5589714] _ir[7087847])
    (7087856 return _void[46])
  }
  type _ic_keys__ref_map_string_string_F[3381529] val super[3381530]:RootClass[236] "super class" val more[3381532]:int(64)[10] const-ref F0_this[7087442]:_ref(map(string,string,false))[3283395] val F1__iterator[7087446]:_ic_allSlots__ref_chpl__hashtable_string_string[3344729] const-ref F2_table_ref[7087448]:_ref(chpl__hashtable(string,string))[3283450] val F3__iterator[7087450]:_ic__allSlots[1946131] val F4__iterator[7087452]:_ic_chpl_direct_counted_range_iter[1520064] val F5__iterator[7087454]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F6__iterator[7087456]:_ic_chpl_direct_param_stride_range_iter[1519526] val F7_i[7087458]:int(64)[10] const-ref value[7087460]:_ref(string)[1466327]
  type _ir_keys__ref_map_string_string_F[3381535] const-ref F0_this[7087444]:_ref(map(string,string,false))[3283395]
  function _getIterator[3381544](const  ref arg ir[3381546]:_ir_keys__ref_map_string_string_F[3381535]) : _ic_keys__ref_map_string_string_F[3381529] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[3381653]:_ic_keys__ref_map_string_string_F[3381529] "dead after last mention" "RVV" "temp"
    val _ic_[3381536]:_ic_keys__ref_map_string_string_F[3381529] "dead after last mention" "temp"
    const-val call_tmp[3381660]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3381663 'move' call_tmp[3381660](3381675 'sizeof_bundle' _ic_keys__ref_map_string_string_F[3381529]))
    val cast_tmp[3381678]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3381680 'move' cast_tmp[3381678](3381541 call chpl_here_alloc[308303] call_tmp[3381660] 333))
    (3381549 'move' _ic_[3381536](3381682 'cast' _ic_keys__ref_map_string_string_F[3381529] cast_tmp[3381678]))
    (3381551 'setcid' _ic_[3381536])
    (3381658 'move' ret[3381653] _ic_[3381536])
    (7087859 '.=' ret[3381653] more[3381532] 1)
    const-ref tmp[7087863]:_ref(map(string,string,false))[3283395] "temp"
    (7087868 'move' tmp[7087863](7087864 '.v' ir[3381546] F0_this[7087444]))
    (7087870 '.=' ret[3381653] F0_this[7087442] tmp[7087863])
    (3381655 return ret[3381653])
  }
  function _ref(map(string,string,false))[3283395]._readHelper[3343832](ref arg this[3343836]:_ref(map(string,string,false))[3283395], const  ref arg r[3343838]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3343840]:_ref(jsonDeserializer)[1922054], ref arg error_out[5509584]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[3343850]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3343852]:jsonDeserializer[356412] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3343864]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3343877]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3343879]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3343881]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3344138]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3344155 call clear[3344292] this[3343836])
    (3344161 call _enter[3344461] this[3343836])
    const-val call_tmp[3344170]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "maybe param" "temp"
    val error[5509589]:Error[85511] "error variable" "temp"
    (5509591 'move' error[5509589] nil[32])
    const-val ret_tmp[5589304]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "temp"
    (3344178 call startMap[3348715] deserializer[3343840] r[3343838] error[5509589] ret_tmp[5589304])
    (5589307 'move' call_tmp[3344170] ret_tmp[5589304])
    val errorExists[7302568]:bool[19] "temp"
    (7302573 'move' errorExists[7302568](7302570 '!=' error[5509589] nil[32]))
    if errorExists[7302568]
    {
      (5509595 '=' error_out[5509584] error[5509589])
      (5634901 call _leave[3344562] this[3343836])
      gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
    }
    val des[3344180]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "insert auto destroy"
    (3344182 'move' des[3344180] call_tmp[3344170])
    const-val done[3344186]:bool[19] "dead at end of block" "insert auto destroy"
    (3344188 'move' done[3344186] 0)
    {
      val tmp[3344193]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3344195]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509604]:Error[85511] "error variable" "temp"
      (5509606 'move' error[5509604] nil[32])
      (3344197 'move' call_tmp[3344195](3344203 call hasMore[3348903] des[3344180] error[5509604]))
      val errorExists[7302576]:bool[19] "temp"
      (7302581 'move' errorExists[7302576](7302578 '!=' error[5509604] nil[32]))
      if errorExists[7302576]
      {
        (5509610 '=' error_out[5509584] error[5509604])
        (5634903 call chpl__autoDestroy[4224735] des[3344180])
        (5634908 call _leave[3344562] this[3343836])
        gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
      }
      (3344204 'move' tmp[3344193] call_tmp[3344195])
      WhileDo[3344209] hazard
      {
        {
          val call_tmp[3344212]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3344220]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5509619]:Error[85511] "error variable" "temp"
          (5509621 'move' error[5509619] nil[32])
          const-val ret_tmp[5589322]:string[244] "temp"
          (3344228 call readKey[3349035] des[3344180] error[5509619] ret_tmp[5589322])
          (5589325 'move' call_tmp[3344220] ret_tmp[5589322])
          val errorExists[7302584]:bool[19] "temp"
          (7302589 'move' errorExists[7302584](7302586 '!=' error[5509619] nil[32]))
          if errorExists[7302584]
          {
            (5509625 '=' error_out[5509584] error[5509619])
            (5634910 call chpl__autoDestroy[4224735] des[3344180])
            (5634915 call _leave[3344562] this[3343836])
            gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
          }
          val call_tmp[3344230]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3344238]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5509634]:Error[85511] "error variable" "temp"
          (5509636 'move' error[5509634] nil[32])
          const-val ret_tmp[5589340]:string[244] "temp"
          (3344246 call readValue[3349327] des[3344180] error[5509634] ret_tmp[5589340])
          (5589343 'move' call_tmp[3344238] ret_tmp[5589340])
          val errorExists[7302592]:bool[19] "temp"
          (7302597 'move' errorExists[7302592](7302594 '!=' error[5509634] nil[32]))
          if errorExists[7302592]
          {
            (5509640 '=' error_out[5509584] error[5509634])
            (5634917 call chpl__autoDestroy[4224735] des[3344180])
            (5634922 call _leave[3344562] this[3343836])
            gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
          }
          const-val _return_tmp_[5468827]:bool[19] "dead after last mention" "temp"
          (5468829 'move' _return_tmp_[5468827](3344252 call add[3349410] this[3343836] call_tmp[3344220] call_tmp[3344238]))
        }
        label _continueLabel[3344257]
        const-val call_tmp[3344259]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val error[5509649]:Error[85511] "error variable" "temp"
        (5509651 'move' error[5509649] nil[32])
        (3344261 'move' call_tmp[3344259](3344267 call hasMore[3348903] des[3344180] error[5509649]))
        val errorExists[7302600]:bool[19] "temp"
        (7302605 'move' errorExists[7302600](7302602 '!=' error[5509649] nil[32]))
        if errorExists[7302600]
        {
          (5509655 '=' error_out[5509584] error[5509649])
          (5634924 call chpl__autoDestroy[4224735] des[3344180])
          (5634929 call _leave[3344562] this[3343836])
          gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
        }
        (3344268 'move' tmp[3344193] call_tmp[3344259])
        tmp[3344193]
      }
      label _breakLabel[3344273]
    }
    val error[5509664]:Error[85511] "error variable" "temp"
    (5509666 'move' error[5509664] nil[32])
    (3344279 call endMap[3350681] des[3344180] error[5509664])
    val errorExists[7302608]:bool[19] "temp"
    (7302613 'move' errorExists[7302608](7302610 '!=' error[5509664] nil[32]))
    if errorExists[7302608]
    {
      (5509670 '=' error_out[5509584] error[5509664])
      (5634931 call chpl__autoDestroy[4224735] des[3344180])
      (5634936 call _leave[3344562] this[3343836])
      gotoErrorHandlingReturn _end_readHelper[5509586] _end_readHelper[5509586]
    }
    (5634938 call chpl__autoDestroy[4224735] des[3344180])
    (5634943 call _leave[3344562] this[3343836])
    label _end_readHelper[5509586]
    (3344282 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695]._readHelper[3358917](ref arg this[3358921]:_ref(map(string,owned ModuleSpecification?,false))[3283695], const  ref arg r[3358923]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3358925]:_ref(jsonDeserializer)[1922054], ref arg error_out[5510004]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[3358935]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3358937]:jsonDeserializer[356412] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3358949]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3358962]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3358964]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3358966]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3359223]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3359240 call clear[3359377] this[3358921])
    (3359246 call _enter[3359546] this[3358921])
    const-val call_tmp[3359255]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "maybe param" "temp"
    val error[5510009]:Error[85511] "error variable" "temp"
    (5510011 'move' error[5510009] nil[32])
    const-val ret_tmp[5589310]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "temp"
    (3359263 call startMap[3348715] deserializer[3358925] r[3358923] error[5510009] ret_tmp[5589310])
    (5589313 'move' call_tmp[3359255] ret_tmp[5589310])
    val errorExists[7302768]:bool[19] "temp"
    (7302773 'move' errorExists[7302768](7302770 '!=' error[5510009] nil[32]))
    if errorExists[7302768]
    {
      (5510015 '=' error_out[5510004] error[5510009])
      (5635153 call _leave[3359647] this[3358921])
      gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
    }
    val des[3359265]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead at end of block" "insert auto destroy"
    (3359267 'move' des[3359265] call_tmp[3359255])
    const-val done[3359271]:bool[19] "dead at end of block" "insert auto destroy"
    (3359273 'move' done[3359271] 0)
    {
      val tmp[3359278]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3359280]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5510024]:Error[85511] "error variable" "temp"
      (5510026 'move' error[5510024] nil[32])
      (3359282 'move' call_tmp[3359280](3359288 call hasMore[3348903] des[3359265] error[5510024]))
      val errorExists[7302776]:bool[19] "temp"
      (7302781 'move' errorExists[7302776](7302778 '!=' error[5510024] nil[32]))
      if errorExists[7302776]
      {
        (5510030 '=' error_out[5510004] error[5510024])
        (5635155 call chpl__autoDestroy[4224735] des[3359265])
        (5635160 call _leave[3359647] this[3358921])
        gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
      }
      (3359289 'move' tmp[3359278] call_tmp[3359280])
      WhileDo[3359294] hazard
      {
        {
          val call_tmp[3359297]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3359305]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5510039]:Error[85511] "error variable" "temp"
          (5510041 'move' error[5510039] nil[32])
          const-val ret_tmp[5589328]:string[244] "temp"
          (3359313 call readKey[3349035] des[3359265] error[5510039] ret_tmp[5589328])
          (5589331 'move' call_tmp[3359305] ret_tmp[5589328])
          val errorExists[7302784]:bool[19] "temp"
          (7302789 'move' errorExists[7302784](7302786 '!=' error[5510039] nil[32]))
          if errorExists[7302784]
          {
            (5510045 '=' error_out[5510004] error[5510039])
            (5635162 call chpl__autoDestroy[4224735] des[3359265])
            (5635167 call _leave[3359647] this[3358921])
            gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
          }
          val call_tmp[3359315]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3359323]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val error[5510054]:Error[85511] "error variable" "temp"
          (5510056 'move' error[5510054] nil[32])
          const-val ret_tmp[5589516]:owned ModuleSpecification?[3283604] "temp"
          (3359331 call readValue[3366403] des[3359265] error[5510054] ret_tmp[5589516])
          (5589519 'move' call_tmp[3359323] ret_tmp[5589516])
          val errorExists[7302792]:bool[19] "temp"
          (7302797 'move' errorExists[7302792](7302794 '!=' error[5510054] nil[32]))
          if errorExists[7302792]
          {
            (5510060 '=' error_out[5510004] error[5510054])
            (5635169 call chpl__autoDestroy[4224735] des[3359265])
            (5635174 call _leave[3359647] this[3358921])
            gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
          }
          const-val _return_tmp_[5468855]:bool[19] "dead after last mention" "temp"
          (5468857 'move' _return_tmp_[5468855](3359337 call add[3372005] this[3358921] call_tmp[3359305] call_tmp[3359323]))
        }
        label _continueLabel[3359342]
        const-val call_tmp[3359344]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val error[5510069]:Error[85511] "error variable" "temp"
        (5510071 'move' error[5510069] nil[32])
        (3359346 'move' call_tmp[3359344](3359352 call hasMore[3348903] des[3359265] error[5510069]))
        val errorExists[7302800]:bool[19] "temp"
        (7302805 'move' errorExists[7302800](7302802 '!=' error[5510069] nil[32]))
        if errorExists[7302800]
        {
          (5510075 '=' error_out[5510004] error[5510069])
          (5635176 call chpl__autoDestroy[4224735] des[3359265])
          (5635181 call _leave[3359647] this[3358921])
          gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
        }
        (3359353 'move' tmp[3359278] call_tmp[3359344])
        tmp[3359278]
      }
      label _breakLabel[3359358]
    }
    val error[5510084]:Error[85511] "error variable" "temp"
    (5510086 'move' error[5510084] nil[32])
    (3359364 call endMap[3350681] des[3359265] error[5510084])
    val errorExists[7302808]:bool[19] "temp"
    (7302813 'move' errorExists[7302808](7302810 '!=' error[5510084] nil[32]))
    if errorExists[7302808]
    {
      (5510090 '=' error_out[5510004] error[5510084])
      (5635183 call chpl__autoDestroy[4224735] des[3359265])
      (5635188 call _leave[3359647] this[3358921])
      gotoErrorHandlingReturn _end_readHelper[5510006] _end_readHelper[5510006]
    }
    (5635190 call chpl__autoDestroy[4224735] des[3359265])
    (5635195 call _leave[3359647] this[3358921])
    label _end_readHelper[5510006]
    (3359367 return _void[46])
  }
  function map(string,string,false)[3283386].init[3339110](ref arg this[3339114]:map(string,string,false)[3283386], const  ref arg reader[3339122]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3339124]:_ref(jsonDeserializer)[1922054], ref arg error_out[5509565]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479881]:string[244] "temp"
    val _formal_type_tmp_[5479879]:string[244] "temp"
    const-val default_arg_resizeThreshold[3343797]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3343801 'move' default_arg_resizeThreshold[3343797](3343799 call init_default_resizeThreshold[3343780]))
    val default_arg_initialCapacity[3343823]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (3339142 call init[3339157] this[3339114] default_arg_resizeThreshold[3343797] 16)
    val error[5509570]:Error[85511] "error variable" "temp"
    (5509572 'move' error[5509570] nil[32])
    (3339151 call _readHelper[3343832] this[3339114] reader[3339122] deserializer[3339124] error[5509570])
    val errorExists[7302560]:bool[19] "temp"
    (7302565 'move' errorExists[7302560](7302562 '!=' error[5509570] nil[32]))
    if errorExists[7302560]
    {
      (5509576 '=' error_out[5509565] error[5509570])
      gotoErrorHandlingReturn _endinit[5509567] _endinit[5509567]
    }
    label _endinit[5509567]
    (3339154 return _void[46])
  }
  function map(string,owned ModuleSpecification?,false)[3283686].init[3354169](ref arg this[3354173]:map(string,owned ModuleSpecification?,false)[3283686], const  ref arg reader[3354181]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3354183]:_ref(jsonDeserializer)[1922054], ref arg error_out[5509985]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479924]:owned ModuleSpecification?[3283604] "temp"
    val _formal_type_tmp_[5479922]:string[244] "temp"
    const-val default_arg_resizeThreshold[3358882]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3358886 'move' default_arg_resizeThreshold[3358882](3358884 call init_default_resizeThreshold[3358865]))
    val default_arg_initialCapacity[3358908]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (3354201 call init[3354216] this[3354173] default_arg_resizeThreshold[3358882] 16)
    val error[5509990]:Error[85511] "error variable" "temp"
    (5509992 'move' error[5509990] nil[32])
    (3354210 call _readHelper[3358917] this[3354173] reader[3354181] deserializer[3354183] error[5509990])
    val errorExists[7302760]:bool[19] "temp"
    (7302765 'move' errorExists[7302760](7302762 '!=' error[5509990] nil[32]))
    if errorExists[7302760]
    {
      (5509996 '=' error_out[5509985] error[5509990])
      gotoErrorHandlingReturn _endinit[5509987] _endinit[5509987]
    }
    label _endinit[5509987]
    (3354213 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].add[3300824](ref arg this[3300828]:_ref(map(string,int(64),false))[3288803], const  ref arg k[3300835]:string[244], const in arg v[3300842]:int(64)[10]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3301089]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3301092 'move' _formal_tmp_k[3301089] k[3300835])
    val ret[3300853]:bool[19] "dead after last mention" "RVV" "temp"
    (3300973 call _enter[3301095] this[3300828])
    ref call_tmp[3300982]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3300984 'move' call_tmp[3300982](3300987 call table[3301244] this[3300828]))
    const-val call_tmp[3300990]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5588735]:(bool,int(64))[3257010] "temp"
    (3300998 call findAvailableSlot[3301272] call_tmp[3300982] _formal_tmp_k[3301089] ret_tmp[5588735])
    (5588738 'move' call_tmp[3300990] ret_tmp[5588735])
    const-val tmp[3301000]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3301002 'move' tmp[3301000] call_tmp[3300990])
    1
    const-ref call_tmp[3301010]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3301012 'move' call_tmp[3301010](3308448 '.' tmp[3301000] x0[3257006]))
    const-val found[3301017]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3308454]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3308458 'move' coerce_tmp[3308454](3308456 'deref' call_tmp[3301010]))
    (5632556 '=' found[3301017] coerce_tmp[3308454])
    (3301019 'noop')
    const-ref call_tmp[3301022]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3301024 'move' call_tmp[3301022](3308463 '.' tmp[3301000] x1[3257008]))
    const-val slot[3301029]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3308469]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3308473 'move' coerce_tmp[3308469](3308471 'deref' call_tmp[3301022]))
    (5632559 '=' slot[3301029] coerce_tmp[3308469])
    (3301031 'noop')
    const-val call_tmp[3301035]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3301037 'move' call_tmp[3301035] found[3301017])
    if call_tmp[3301035]
    {
      (3301044 'move' ret[3300853] 0)
      (5632562 call chpl__autoDestroy[4207177] tmp[3301000])
      (5632567 call _leave[3301196] this[3300828])
      (5632569 call chpl__autoDestroy[3262688] _formal_tmp_k[3301089])
      gotoReturn _end_add[3301075] _end_add[3301075]
    }
    ref call_tmp[3301052]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3301054 'move' call_tmp[3301052](3301057 call table[3301244] this[3300828]))
    const-val _formal_tmp_in_key[3308602]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632553 '=' _formal_tmp_in_key[3308602] _formal_tmp_k[3301089])
    (3308607 'noop')
    (3301064 call fillSlot[3308541] call_tmp[3301052] slot[3301029] _formal_tmp_in_key[3308602] v[3300842])
    (3301070 'move' ret[3300853] 1)
    (5632572 call chpl__autoDestroy[4207177] tmp[3301000])
    (5632577 call _leave[3301196] this[3300828])
    label _end_add[3301075]
    (3301077 return ret[3300853])
  }
  function _ref(map(string,string,false))[3283395].add[3349410](ref arg this[3349414]:_ref(map(string,string,false))[3283395], const  ref arg k[3349421]:string[244], const  ref arg v[3349428]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3349562]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3349566 'move' _formal_tmp_k[3349562] k[3349421])
    const-val _formal_tmp_v[3349563]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3349570 'move' _formal_tmp_v[3349563] v[3349428])
    val ret[3349439]:bool[19] "dead after last mention" "RVV" "temp"
    (3349455 call _enter[3344461] this[3349414])
    ref call_tmp[3349464]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3349466 'move' call_tmp[3349464](3349469 call table[3344610] this[3349414]))
    const-val call_tmp[3349472]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589352]:(bool,int(64))[3257010] "temp"
    (3349480 call findAvailableSlot[3349576] call_tmp[3349464] _formal_tmp_k[3349562] ret_tmp[5589352])
    (5589355 'move' call_tmp[3349472] ret_tmp[5589352])
    const-val tmp[3349482]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3349484 'move' tmp[3349482] call_tmp[3349472])
    1
    const-ref call_tmp[3349492]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3349494 'move' call_tmp[3349492](3350170 '.' tmp[3349482] x0[3257006]))
    const-val found[3349499]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3350176]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3350180 'move' coerce_tmp[3350176](3350178 'deref' call_tmp[3349492]))
    (5635056 '=' found[3349499] coerce_tmp[3350176])
    (3349501 'noop')
    const-ref call_tmp[3349504]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3349506 'move' call_tmp[3349504](3350185 '.' tmp[3349482] x1[3257008]))
    const-val slot[3349511]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3350191]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3350195 'move' coerce_tmp[3350191](3350193 'deref' call_tmp[3349504]))
    (5635059 '=' slot[3349511] coerce_tmp[3350191])
    (3349513 'noop')
    const-val call_tmp[3349517]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349519 'move' call_tmp[3349517] found[3349499])
    if call_tmp[3349517]
    {
      (3349526 'move' ret[3349439] 0)
      (5635062 call chpl__autoDestroy[4207177] tmp[3349482])
      (5635067 call _leave[3344562] this[3349414])
      (5635069 call chpl__autoDestroy[3262688] _formal_tmp_v[3349563])
      (5635072 call chpl__autoDestroy[3262688] _formal_tmp_k[3349562])
      gotoReturn _end_add[3349557] _end_add[3349557]
    }
    ref call_tmp[3349534]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3349536 'move' call_tmp[3349534](3349539 call table[3344610] this[3349414]))
    const-val _formal_tmp_in_key[3350324]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635050 '=' _formal_tmp_in_key[3350324] _formal_tmp_k[3349562])
    (3350329 'noop')
    const-val _formal_tmp_in_val[3350333]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635053 '=' _formal_tmp_in_val[3350333] _formal_tmp_v[3349563])
    (3350338 'noop')
    (3349546 call fillSlot[3350263] call_tmp[3349534] slot[3349511] _formal_tmp_in_key[3350324] _formal_tmp_in_val[3350333])
    (3349552 'move' ret[3349439] 1)
    (5635075 call chpl__autoDestroy[4207177] tmp[3349482])
    (5635080 call _leave[3344562] this[3349414])
    label _end_add[3349557]
    (3349559 return ret[3349439])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].add[3372005](ref arg this[3372009]:_ref(map(string,owned ModuleSpecification?,false))[3283695], const  ref arg k[3372016]:string[244], const  ref arg v[3372023]:owned ModuleSpecification?[3283604]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_k[3372157]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3372161 'move' _formal_tmp_k[3372157] k[3372016])
    const-val _formal_tmp_v[3372158]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3372165 'move' _formal_tmp_v[3372158] v[3372023])
    val ret[3372034]:bool[19] "dead after last mention" "RVV" "temp"
    (3372050 call _enter[3359546] this[3372009])
    ref call_tmp[3372059]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3372061 'move' call_tmp[3372059](3372064 call table[3359695] this[3372009]))
    const-val call_tmp[3372067]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589588]:(bool,int(64))[3257010] "temp"
    (3372075 call findAvailableSlot[3372171] call_tmp[3372059] _formal_tmp_k[3372157] ret_tmp[5589588])
    (5589591 'move' call_tmp[3372067] ret_tmp[5589588])
    const-val tmp[3372077]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3372079 'move' tmp[3372077] call_tmp[3372067])
    1
    const-ref call_tmp[3372087]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3372089 'move' call_tmp[3372087](3372765 '.' tmp[3372077] x0[3257006]))
    const-val found[3372094]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3372771]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3372775 'move' coerce_tmp[3372771](3372773 'deref' call_tmp[3372087]))
    (5635322 '=' found[3372094] coerce_tmp[3372771])
    (3372096 'noop')
    const-ref call_tmp[3372099]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3372101 'move' call_tmp[3372099](3372780 '.' tmp[3372077] x1[3257008]))
    const-val slot[3372106]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3372786]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3372790 'move' coerce_tmp[3372786](3372788 'deref' call_tmp[3372099]))
    (5635325 '=' slot[3372106] coerce_tmp[3372786])
    (3372108 'noop')
    const-val call_tmp[3372112]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3372114 'move' call_tmp[3372112] found[3372094])
    if call_tmp[3372112]
    {
      (3372121 'move' ret[3372034] 0)
      (5635328 call chpl__autoDestroy[4207177] tmp[3372077])
      (5635333 call _leave[3359647] this[3372009])
      (5635335 call chpl__autoDestroy[3373663] _formal_tmp_v[3372158])
      (5635338 call chpl__autoDestroy[3262688] _formal_tmp_k[3372157])
      gotoReturn _end_add[3372152] _end_add[3372152]
    }
    ref call_tmp[3372129]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3372131 'move' call_tmp[3372129](3372134 call table[3359695] this[3372009]))
    const-val _formal_tmp_in_key[3372919]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635316 '=' _formal_tmp_in_key[3372919] _formal_tmp_k[3372157])
    (3372924 'noop')
    const-val _formal_tmp_in_val[3372928]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635319 '=' _formal_tmp_in_val[3372928] _formal_tmp_v[3372158])
    (3372933 'noop')
    (3372141 call fillSlot[3372858] call_tmp[3372129] slot[3372106] _formal_tmp_in_key[3372919] _formal_tmp_in_val[3372928])
    (3372147 'move' ret[3372034] 1)
    (5635341 call chpl__autoDestroy[4207177] tmp[3372077])
    (5635346 call _leave[3359647] this[3372009])
    label _end_add[3372152]
    (3372154 return ret[3372034])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].addOrReplace[3256564](ref arg this[3256568]:_ref(map(string,Module(real(32)),false))[1941017], const  ref arg k[3256575]:string[244], in arg v[3256582]:Module(real(32))[1935500]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3256792]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3256795 'move' _formal_tmp_k[3256792] k[3256575])
    (3256700 call _enter[3256798] this[3256568])
    ref call_tmp[3256709]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3256711 'move' call_tmp[3256709](3256714 call table[3256947] this[3256568]))
    const-val call_tmp[3256717]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5587913]:(bool,int(64))[3257010] "temp"
    (3256725 call findAvailableSlot[3256975] call_tmp[3256709] _formal_tmp_k[3256792] ret_tmp[5587913])
    (5587916 'move' call_tmp[3256717] ret_tmp[5587913])
    const-val tmp[3256727]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3256729 'move' tmp[3256727] call_tmp[3256717])
    1
    const-ref call_tmp[3256737]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3256739 'move' call_tmp[3256737](3262220 '.' tmp[3256727] x0[3257006]))
    const-val found[3256744]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3262226]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3262230 'move' coerce_tmp[3262226](3262228 'deref' call_tmp[3256737]))
    (5632016 '=' found[3256744] coerce_tmp[3262226])
    (3256746 'noop')
    const-ref call_tmp[3256749]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3256751 'move' call_tmp[3256749](3262235 '.' tmp[3256727] x1[3257008]))
    const-val slot[3256756]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3262241]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3262245 'move' coerce_tmp[3262241](3262243 'deref' call_tmp[3256749]))
    (5632019 '=' slot[3256756] coerce_tmp[3262241])
    (3256758 'noop')
    ref call_tmp[3256762]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3256764 'move' call_tmp[3256762](3256767 call table[3256947] this[3256568]))
    const-val _formal_tmp_in_key[3262372]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632013 '=' _formal_tmp_in_key[3262372] _formal_tmp_k[3256792])
    (3262377 'noop')
    (3256774 call fillSlot[3262311] call_tmp[3256762] slot[3256756] _formal_tmp_in_key[3262372] v[3256582])
    (5632022 call chpl__autoDestroy[4207177] tmp[3256727])
    (5632027 call _leave[3256899] this[3256568])
    (3256780 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].addOrReplace[3400390](ref arg this[3400394]:_ref(map(string,shared Module(real(32)),false))[3391869], const  ref arg k[3400401]:string[244], const  ref arg v[3400408]:shared Module(real(32))[1955038]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3400627]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400631 'move' _formal_tmp_k[3400627] k[3400401])
    const-val _formal_tmp_v[3400628]:shared Module(real(32))[1955038] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3400635 'move' _formal_tmp_v[3400628] v[3400408])
    (3400526 call _enter[3400638] this[3400394])
    ref call_tmp[3400535]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3400537 'move' call_tmp[3400535](3400540 call table[3400787] this[3400394]))
    const-val call_tmp[3400543]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5589806]:(bool,int(64))[3257010] "temp"
    (3400551 call findAvailableSlot[3400815] call_tmp[3400535] _formal_tmp_k[3400627] ret_tmp[5589806])
    (5589809 'move' call_tmp[3400543] ret_tmp[5589806])
    const-val tmp[3400553]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3400555 'move' tmp[3400553] call_tmp[3400543])
    1
    const-ref call_tmp[3400563]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3400565 'move' call_tmp[3400563](3404412 '.' tmp[3400553] x0[3257006]))
    const-val found[3400570]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3404418]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3404422 'move' coerce_tmp[3404418](3404420 'deref' call_tmp[3400563]))
    (5635694 '=' found[3400570] coerce_tmp[3404418])
    (3400572 'noop')
    const-ref call_tmp[3400575]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3400577 'move' call_tmp[3400575](3404427 '.' tmp[3400553] x1[3257008]))
    const-val slot[3400582]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3404433]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3404437 'move' coerce_tmp[3404433](3404435 'deref' call_tmp[3400575]))
    (5635697 '=' slot[3400582] coerce_tmp[3404433])
    (3400584 'noop')
    ref call_tmp[3400588]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3400590 'move' call_tmp[3400588](3400593 call table[3400787] this[3400394]))
    const-val _formal_tmp_in_key[3404564]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635688 '=' _formal_tmp_in_key[3404564] _formal_tmp_k[3400627])
    (3404569 'noop')
    const-val _formal_tmp_in_val[3404573]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635691 '=' _formal_tmp_in_val[3404573] _formal_tmp_v[3400628])
    (3404578 'noop')
    (3400600 call fillSlot[3404503] call_tmp[3400588] slot[3400582] _formal_tmp_in_key[3404564] _formal_tmp_in_val[3404573])
    (5635700 call chpl__autoDestroy[4207177] tmp[3400553])
    (5635705 call _leave[3400739] this[3400394])
    (3400606 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].addOrReplace[3859953](ref arg this[3859957]:_ref(map(string,Module(real(64)),false))[3405193], const  ref arg k[3859964]:string[244], in arg v[3859971]:Module(real(64))[3405063]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val _formal_tmp_k[3860181]:string[244] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (3860184 'move' _formal_tmp_k[3860181] k[3859964])
    (3860089 call _enter[3860187] this[3859957])
    ref call_tmp[3860098]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
    (3860100 'move' call_tmp[3860098](3860103 call table[3860336] this[3859957]))
    const-val call_tmp[3860106]:(bool,int(64))[3257010] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5596133]:(bool,int(64))[3257010] "temp"
    (3860114 call findAvailableSlot[3860364] call_tmp[3860098] _formal_tmp_k[3860181] ret_tmp[5596133])
    (5596136 'move' call_tmp[3860106] ret_tmp[5596133])
    const-val tmp[3860116]:(bool,int(64))[3257010] "dead at end of block" "insert auto destroy" "temp"
    (3860118 'move' tmp[3860116] call_tmp[3860106])
    1
    const-ref call_tmp[3860126]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
    (3860128 'move' call_tmp[3860126](3863961 '.' tmp[3860116] x0[3257006]))
    const-val found[3860133]:bool[19] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3863967]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3863971 'move' coerce_tmp[3863967](3863969 'deref' call_tmp[3860126]))
    (5642101 '=' found[3860133] coerce_tmp[3863967])
    (3860135 'noop')
    const-ref call_tmp[3860138]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3860140 'move' call_tmp[3860138](3863976 '.' tmp[3860116] x1[3257008]))
    const-val slot[3860145]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3863982]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3863986 'move' coerce_tmp[3863982](3863984 'deref' call_tmp[3860138]))
    (5642104 '=' slot[3860145] coerce_tmp[3863982])
    (3860147 'noop')
    ref call_tmp[3860151]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
    (3860153 'move' call_tmp[3860151](3860156 call table[3860336] this[3859957]))
    const-val _formal_tmp_in_key[3864113]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5642098 '=' _formal_tmp_in_key[3864113] _formal_tmp_k[3860181])
    (3864118 'noop')
    (3860163 call fillSlot[3864052] call_tmp[3860151] slot[3860145] _formal_tmp_in_key[3864113] v[3859971])
    (5642107 call chpl__autoDestroy[4207177] tmp[3860116])
    (5642112 call _leave[3860288] this[3859957])
    (3860169 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].resizeThreshold[3310502](const  ref arg this[3310506]:_ref(map(string,int(64),false))[3288803]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved" "fn synchronization free"
  {
    const-ref ret[3310508]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3310516]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3310518 'move' call_tmp[3310516](3310520 '.' this[3310506] resizeThreshold[3288776]))
    (3310523 'move' ret[3310508] call_tmp[3310516])
    (3310527 return ret[3310508])
  }
  function _ref(map(string,string,false))[3283395].resizeThreshold[3383152](const  ref arg this[3383156]:_ref(map(string,string,false))[3283395]) const ref : _ref(real(64))[1465874] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved" "fn synchronization free"
  {
    const-ref ret[3383158]:_ref(real(64))[1465874] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3383166]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
    (3383168 'move' call_tmp[3383166](3383170 '.' this[3383156] resizeThreshold[3283368]))
    (3383173 'move' ret[3383158] call_tmp[3383166])
    (3383177 return ret[3383158])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].table[3256947](ref arg this[3256951]:_ref(map(string,Module(real(32)),false))[1941017]) ref : _ref(chpl__hashtable(string,Module(real(32))))[1941508] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3256953]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "RVV" "temp"
    ref call_tmp[3256961]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "dead after last mention" "maybe param" "temp"
    (3256963 'move' call_tmp[3256961](3256965 '.' this[3256951] table[1936341]))
    (3256968 'move' ret[3256953] call_tmp[3256961])
    (3256972 return ret[3256953])
  }
  function _ref(map(string,int(64),false))[3288803].table[3301244](ref arg this[3301248]:_ref(map(string,int(64),false))[3288803]) ref : _ref(chpl__hashtable(string,int(64)))[3288858] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3301250]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "RVV" "temp"
    ref call_tmp[3301258]:_ref(chpl__hashtable(string,int(64)))[3288858] "dead after last mention" "maybe param" "temp"
    (3301260 'move' call_tmp[3301258](3301262 '.' this[3301248] table[3288779]))
    (3301265 'move' ret[3301250] call_tmp[3301258])
    (3301269 return ret[3301250])
  }
  function _ref(map(string,string,false))[3283395].table[3344610](ref arg this[3344614]:_ref(map(string,string,false))[3283395]) ref : _ref(chpl__hashtable(string,string))[3283450] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3344616]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "RVV" "temp"
    ref call_tmp[3344624]:_ref(chpl__hashtable(string,string))[3283450] "dead after last mention" "maybe param" "temp"
    (3344626 'move' call_tmp[3344624](3344628 '.' this[3344614] table[3283371]))
    (3344631 'move' ret[3344616] call_tmp[3344624])
    (3344635 return ret[3344616])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].table[3359695](ref arg this[3359699]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) ref : _ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3359701]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "RVV" "temp"
    ref call_tmp[3359709]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "dead after last mention" "maybe param" "temp"
    (3359711 'move' call_tmp[3359709](3359713 '.' this[3359699] table[3283671]))
    (3359716 'move' ret[3359701] call_tmp[3359709])
    (3359720 return ret[3359701])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].table[3400787](ref arg this[3400791]:_ref(map(string,shared Module(real(32)),false))[3391869]) ref : _ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3400793]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "RVV" "temp"
    ref call_tmp[3400801]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "dead after last mention" "maybe param" "temp"
    (3400803 'move' call_tmp[3400801](3400805 '.' this[3400791] table[3391816]))
    (3400808 'move' ret[3400793] call_tmp[3400801])
    (3400812 return ret[3400793])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].table[3860336](ref arg this[3860340]:_ref(map(string,Module(real(64)),false))[3405193]) ref : _ref(chpl__hashtable(string,Module(real(64))))[3405248] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3860342]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "RVV" "temp"
    ref call_tmp[3860350]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "dead after last mention" "maybe param" "temp"
    (3860352 'move' call_tmp[3860350](3860354 '.' this[3860340] table[3405169]))
    (3860357 'move' ret[3860342] call_tmp[3860350])
    (3860361 return ret[3860342])
  }
  function _ref(map(string,Module(real(32)),false))[1941017].deinit[4030137](const  ref arg this[4030141]:_ref(map(string,Module(real(32)),false))[1941017]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5528758]
    const-ref _field_destructor_tmp_[5528756]:_ref(chpl__hashtable(string,Module(real(32))))[1941508] "temp"
    (5528763 'move' _field_destructor_tmp_[5528756](5528760 '.' this[4030141] table[1936341]))
    (5528765 call deinit[4032607] _field_destructor_tmp_[5528756])
    (4030147 return _void[46])
  }
  function _ref(map(string,string,false))[3283395].deinit[4211586](const  ref arg this[4211590]:_ref(map(string,string,false))[3283395]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5530948]
    const-ref _field_destructor_tmp_[5530946]:_ref(chpl__hashtable(string,string))[3283450] "temp"
    (5530953 'move' _field_destructor_tmp_[5530946](5530950 '.' this[4211590] table[3283371]))
    (5530955 call deinit[4211999] _field_destructor_tmp_[5530946])
    (4211596 return _void[46])
  }
  function _ref(map(string,owned ModuleSpecification?,false))[3283695].deinit[4215160](const  ref arg this[4215164]:_ref(map(string,owned ModuleSpecification?,false))[3283695]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5530994]
    const-ref _field_destructor_tmp_[5530992]:_ref(chpl__hashtable(string,owned ModuleSpecification?))[3283750] "temp"
    (5530999 'move' _field_destructor_tmp_[5530992](5530996 '.' this[4215164] table[3283671]))
    (5531001 call deinit[4215573] _field_destructor_tmp_[5530992])
    (4215170 return _void[46])
  }
  function _ref(map(string,int(64),false))[3288803].deinit[4217177](const  ref arg this[4217181]:_ref(map(string,int(64),false))[3288803]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531040]
    const-ref _field_destructor_tmp_[5531038]:_ref(chpl__hashtable(string,int(64)))[3288858] "temp"
    (5531045 'move' _field_destructor_tmp_[5531038](5531042 '.' this[4217181] table[3288779]))
    (5531047 call deinit[4217590] _field_destructor_tmp_[5531038])
    (4217187 return _void[46])
  }
  function _ref(map(string,shared Module(real(32)),false))[3391869].deinit[4233260](const  ref arg this[4233264]:_ref(map(string,shared Module(real(32)),false))[3391869]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531202]
    const-ref _field_destructor_tmp_[5531200]:_ref(chpl__hashtable(string,shared Module(real(32))))[3392221] "temp"
    (5531207 'move' _field_destructor_tmp_[5531200](5531204 '.' this[4233264] table[3391816]))
    (5531209 call deinit[4233673] _field_destructor_tmp_[5531200])
    (4233270 return _void[46])
  }
  function _ref(map(string,Module(real(64)),false))[3405193].deinit[4239277](const  ref arg this[4239281]:_ref(map(string,Module(real(64)),false))[3405193]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5531270]
    const-ref _field_destructor_tmp_[5531268]:_ref(chpl__hashtable(string,Module(real(64))))[3405248] "temp"
    (5531275 'move' _field_destructor_tmp_[5531268](5531272 '.' this[4239281] table[3405169]))
    (5531277 call deinit[4239690] _field_destructor_tmp_[5531268])
    (4239287 return _void[46])
  }
  type map(string,Module(real(32)),false)[1936356] const resizeThreshold[1936338]:real(64)[13] "const" val table[1936341]:chpl__hashtable(string,Module(real(32)))[1941492]
  type map(string,string,false)[3283386] const resizeThreshold[3283368]:real(64)[13] "const" val table[3283371]:chpl__hashtable(string,string)[3283441]
  type map(string,owned ModuleSpecification?,false)[3283686] const resizeThreshold[3283668]:real(64)[13] "const" val table[3283671]:chpl__hashtable(string,owned ModuleSpecification?)[3283741]
  type map(string,int(64),false)[3288794] const resizeThreshold[3288776]:real(64)[13] "const" val table[3288779]:chpl__hashtable(string,int(64))[3288849]
  type map(string,shared Module(real(32)),false)[3391831] const resizeThreshold[3391813]:real(64)[13] "const" val table[3391816]:chpl__hashtable(string,shared Module(real(32)))[3392205]
  type map(string,Module(real(64)),false)[3405184] const resizeThreshold[3405166]:real(64)[13] "const" val table[3405169]:chpl__hashtable(string,Module(real(64)))[3405239]
  function KeyNotFoundError[352856].init[3315854](const in arg this[3315858]:KeyNotFoundError[352856], const  ref arg k[3315860]:string[244]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[3315866]:Error[85511] "dead after last mention" "temporary of super field" "temp"
    (3315868 'move' super_tmp[3315866](3315870 '.v' this[3315858] super[397916]))
    const-val call_tmp[3315873]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[5508035]:Error[85511] "error variable" "temp"
    (5508037 'move' error[5508035] nil[32])
    const-val ret_tmp[5588897]:string[244] "temp"
    (3315881 call format[3316409] "key '%\?' not found" k[3315860] error[5508035] ret_tmp[5588897])
    (5588900 'move' call_tmp[3315873] ret_tmp[5588897])
    val errorExists[7301848]:bool[19] "temp"
    (7301853 'move' errorExists[7301848](7301850 '!=' error[5508035] nil[32]))
    if errorExists[7301848]
    {
      (5508040 call chpl_uncaught_error[87456] error[5508035])
    }
    (3315887 call init[85477] super_tmp[3315866] call_tmp[3315873])
    (5632758 call chpl__autoDestroy[3262688] call_tmp[3315873])
    val tmp[3315890]:Error[85511] "dead after last mention" "temp" "type variable"
    val call_tmp[3315909]:Error[85511] "dead after last mention" "maybe param" "temp"
    (3315911 'move' call_tmp[3315909](3315913 'cast' Error[85511] this[3315858]))
    val chpl__thisAsParent[3315916]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
    (3315918 'move' chpl__thisAsParent[3315916] call_tmp[3315909])
    (3315922 'setcid' chpl__thisAsParent[3315916])
    (3315925 'setcid' this[3315858])
    (3315927 return _void[46])
  }
  function KeyNotFoundError[352856].deinit[1390661](const in arg this[1390665]:KeyNotFoundError[352856]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[5526569]
    val _parent_destructor_tmp_[5526564]:Error[85511] "temp"
    (5526571 'move' _parent_destructor_tmp_[5526564](5526565 'cast' Error[85511] this[1390665]))
    (5526573 call deinit[1061344] _parent_destructor_tmp_[5526564])
    (1390673 return _void[46])
  }
  function _new[3333701](const  ref arg k[3333712]:string[244]) : KeyNotFoundError[352856] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[5479865]:KeyNotFoundError[352856] "temp"
    val ret[3333742]:KeyNotFoundError[352856] "dead after last mention" "RVV" "temp"
    val initTemp[3333703]:KeyNotFoundError[352856] "dead after last mention" "temp"
    const-val call_tmp[3333749]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3333752 'move' call_tmp[3333749](3333763 'sizeof_bundle' KeyNotFoundError[352856]))
    val cast_tmp[3333766]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3333768 'move' cast_tmp[3333766](3333720 call chpl_here_alloc[308303] call_tmp[3333749] 327))
    (3333723 'move' initTemp[3333703](3333770 'cast' KeyNotFoundError[352856] cast_tmp[3333766]))
    (3333704 call init[3315854] initTemp[3333703] k[3333712])
    val tmp[3333725]:KeyNotFoundError[352856] "dead after last mention" "temp"
    (3333732 'move' tmp[3333725] initTemp[3333703])
    (3333747 'move' ret[3333742] tmp[3333725])
    (3333744 return ret[3333742])
  }
  type KeyNotFoundError[352856] val super[397916]:Error[85511] "super class"
}
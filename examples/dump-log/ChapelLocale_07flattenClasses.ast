AST dump for ChapelLocale after pass flattenClasses.
Module use list: LocaleModel HaltWrappers CTypes 

{
  (135167 call compilerAssert(135168 call !(135170 call &&(135172 call ! localeModelHasSublocales[306867]) localeModelPartitionsIterationOnSublocales[306872]))(135176 call + "Locale model without sublocales can not have " "localeModelPartitionsIterationOnSublocales set to true."))
  unknown chpl_nodeID_t[135185] "type variable"(135187 call int(64)[10] 32)
  unknown chpl_sublocID_t[135191] "type variable"(135193 call int(64)[10] 32)
  const c_sublocid_none[135197] "const" "extern" chpl_sublocID_t[135191]
  (135200 'end of statement')
  const c_sublocid_any[135202] "const" "extern" chpl_sublocID_t[135191]
  (135205 'end of statement')
  const c_sublocid_all[135207] "const" "extern" chpl_sublocID_t[135191]
  (135210 'end of statement')
  function chpl_isActualSublocID[135211](arg subloc[135214] :
  chpl_sublocID_t[135191]) : _unknown[42] "inline"
  {
    (135218 return(135219 call &&(135221 call &&(135223 call != subloc[135214] c_sublocid_none[135197])(135227 call != subloc[135214] c_sublocid_any[135202]))(135231 call != subloc[135214] c_sublocid_all[135207])))
  }
  type localeKind[135248] def regular[135238]:localeKind[135248] def any[135240]:localeKind[135248] def nilLocale[135242]:localeKind[135248] def dummy[135244]:localeKind[135248] def default[135246]:localeKind[135248]
  {
  }
  const nilLocale[135253] "const" "locale private"(135254 'new'(135256 call locale[234] nilLocale[135242]))
  (135264 'end of statement')
  unknown defaultLocale[135266] "locale private"(135267 'new'(135269 call locale[234] default[135246]))
  (135277 'end of statement')
  unknown dummyLocale[135279](135280 'new'(135282 call locale[234] dummy[135244]))
  (135290 'end of statement')
  function locale[234]._value[135299](arg _mt[135303]:_MT[201], arg this[135301]:locale[234]) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    (135306 return(135307 call postfix!(430787 call . this[135301] c"_instance")))
  }
  function locale[234].chpl_forwarding_expr1[135313](arg _mt[135318]:_MT[201], arg this[135316]:locale[234]) : _unknown[42] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (135322 return(430791 call . this[135316] c"_value"))
  }
  function locale[234].init[135325](arg _mt[135329]:_MT[201], arg this[135327]:locale[234]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    if(135352 call _cond_test rootLocaleInitialized[52042])
    {
      (135333 call =(135336 call . this[135327] c"_instance")(135340 call . defaultLocale[135266] c"_instance"))
    }
    {
      (135344 call =(135347 call . this[135327] c"_instance") nil[32])
    }
  }
  function locale[234].init[135358](arg _mt[135366]:_MT[201], arg this[135360]:locale[234], arg _instance[135363] :
  BaseLocale[397505](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (135369 call =(135372 call . this[135360] c"_instance")(135376 call _to_unmanaged _instance[135363]))
  }
  function locale[234].init[135380](arg _mt[135386]:_MT[201], arg this[135382]:locale[234], param arg kind[135384]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    if(135452 call _cond_test(135443 call == kind[135384] regular[135238]))
    {
      (135390 call compilerError "locale.init(kind) can not be used to create " "a regular locale instance")
    }
    {
      if(135437 call _cond_test(135430 call == kind[135384] dummy[135244]))
      {
        (135398 call =(135401 call . this[135382] c"_instance")(135404 'new'(_chpl_manager = unmanaged[183](?))(135408 call DummyLocale[430798](?))))
      }
      {
        if(135425 call _cond_test(135418 call == kind[135384] default[135246]))
        {
          (135410 call =(135413 call . this[135382] c"_instance") nil[32])
        }
      }
    }
  }
  function locale[234].init=[135460](arg _mt[135468]:_MT[201], arg this[135462]:locale[234], arg other[135465] :
  locale[234]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (135471 call =(135474 call . this[135462] c"_instance")(135478 call . other[135465] c"_instance"))
  }
  function locale[234].deinit[135483](arg _mt[135487]:_MT[201], arg this[135485]:locale[234]) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
  }
  function locale[234].localeid[135492](arg _mt[135496]:_MT[201], arg this[135494]:locale[234]) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    (135499 return(135506 call .(135501 call . this[135494] c"_value") c"localeid"))
  }
  function locale[234].chpl_id[135511](arg _mt[135515]:_MT[201], arg this[135513]:locale[234]) : _unknown[42] "inline" "method" "primary method"
  {
    (135518 return(135528 call(135525 call .(135520 call . this[135513] c"_value") c"chpl_id")))
  }
  function locale[234].chpl_localeid[135531](arg _mt[135535]:_MT[201], arg this[135533]:locale[234]) : _unknown[42] "inline" "method" "primary method"
  {
    (135538 return(135548 call(135545 call .(135540 call . this[135533] c"_value") c"chpl_localeid")))
  }
  function locale[234].chpl_name[135551](arg _mt[135555]:_MT[201], arg this[135553]:locale[234]) : _unknown[42] "inline" "method" "primary method"
  {
    (135558 return(135568 call(135565 call .(135560 call . this[135553] c"_value") c"chpl_name")))
  }
  function locale[234]._getChildCount[135571](arg _mt[135575]:_MT[201], arg this[135573]:locale[234]) : _unknown[42] "inline" "method" "primary method"
  {
    (135578 return(135586 call(135583 call .(135580 call . this[135573] c"_value") c"_getChildCount")))
  }
  type locale[234] unknown _instance[135293] unmanaged BaseLocale?[468079] forwarding ( )
  function here[135591]() : _unknown[42] "inline" "no parens"
  {
    (135594 return(135596 call chpl_localeID_to_locale(430804 call here_id[137226])))
  }
  function locale[234].hostname[135600](arg _mt[135606]:_MT[201], arg this[135603]:locale[234] :
  locale[234]) : _unknown[42] "inline" "method" "no parens"
  {
    (135610 return(135617 call .(135612 call . this[135603] c"_value") c"hostname"))
  }
  { scopeless type
    string[244]
  }
  function locale[234].name[135623](arg _mt[135629]:_MT[201], arg this[135626]:locale[234] :
  locale[234]) : _unknown[42] "inline" "method" "no parens"
  {
    (135633 return(135640 call .(135635 call . this[135626] c"_value") c"name"))
  }
  { scopeless type
    string[244]
  }
  function locale[234].id[135646](arg _mt[135652]:_MT[201], arg this[135649]:locale[234] :
  locale[234]) : _unknown[42] "inline" "method" "no parens"
  {
    (135656 return(135661 call .(135658 call . this[135649] c"_value") c"id"))
  }
  { scopeless type
    int(64)[10]
  }
  function locale[234].maxTaskPar[135667](arg _mt[135673]:_MT[201], arg this[135670]:locale[234] :
  locale[234]) : _unknown[42] "inline" "method" "no parens"
  {
    (135677 return(135682 call .(135679 call . this[135670] c"_value") c"maxTaskPar"))
  }
  { scopeless type
    int(64)[10]
  }
  function locale[234].numPUs[135688](arg _mt[135706]:_MT[201], arg this[135691]:locale[234] :
  locale[234], arg logical[135696] :
  bool[19] =
  0, arg accessible[135702] :
  bool[19] =
  1) : _unknown[42] "inline" "method" "@unstable"
  {
    (135710 return(135720 call(135717 call .(135712 call . this[135691] c"_value") c"numPUs") logical[135696] accessible[135702]))
  }
  { scopeless type
    int(64)[10]
  }
  function locale[234].runningTasks[135726](arg _mt[135732]:_MT[201], arg this[135729]:locale[234] :
  locale[234]) : _unknown[42] "method" "fn synchronization free"
  {
    (135736 return(135743 call(135740 call . this[135729] c"runningTaskCnt")))
  }
  { scopeless type
    int(64)[10]
  }
  function locale[234].=[135747](arg _mt[135761]:_MT[201], arg this[135750]:locale[234] :
  locale[234], ref arg l1[135754] :
  locale[234], const  ref arg l2[135758] :
  locale[234]) : _unknown[42] "assignop" "method" "operator" "no return value for void"
  {
    (135764 call =(135767 call . l1[135754] c"_instance")(135771 call . l2[135758] c"_instance"))
  }
  function BaseLocale[136243].init[135778](arg _mt[135782]:_MT[201], arg this[135780]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no return value for void"
  {
  }
  function BaseLocale[136243].init[135787](arg _mt[135795]:_MT[201], arg this[135789]:BaseLocale[136243], arg parent[135792] :
  locale[234]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (135798 call =(135803 call . this[135789] c"parent") parent[135792])
  }
  function BaseLocale[136243].numPUs[135835](arg _mt[135851]:_MT[201], arg this[135837]:BaseLocale[136243], arg logical[135841] :
  bool[19] =
  0, arg accessible[135847] :
  bool[19] =
  1) : _unknown[42] "inline" "method" "primary method"
  {
    (135854 return(135868 IfExpr  logical[135841] then
    { scopeless(135859 IfExpr  accessible[135847] then
      { scopeless
        (430818 call . this[135837] c"nPUsLogAcc")
      } else
      { scopeless
        (430823 call . this[135837] c"nPUsLogAll")
      } )
    } else
    { scopeless(135865 IfExpr  accessible[135847] then
      { scopeless
        (430829 call . this[135837] c"nPUsPhysAcc")
      } else
      { scopeless
        (430834 call . this[135837] c"nPUsPhysAll")
      } )
    } ))
  }
  function BaseLocale[136243].id[135878](arg _mt[135882]:_MT[201], arg this[135880]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no parens"
  {
    (135886 return(135888 call chpl_nodeFromLocaleID(135889 '_wide_get_locale' this[135880])))
  }
  { scopeless type
    int(64)[10]
  }
  function BaseLocale[136243].localeid[135894](arg _mt[135898]:_MT[201], arg this[135896]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no parens"
  {
    (135902 return(135903 '_wide_get_locale' this[135896]))
  }
  { scopeless type
    chpl_localeID_t[306449]
  }
  function BaseLocale[136243].hostname[135908](arg _mt[135912]:_MT[201], arg this[135910]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no parens"
  {
    function chpl_nodeName[135916]() : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (135919 call c_ptrConst[46990](?) c_char[562])
    }
    unknown hname[135925] string[244]
    (135928 'end of statement')
    {
      const tmp[135948] "const" "temp"
      (135949 'move' tmp[135948](135946 'deref'(135945 '_wide_get_locale' this[135910])))
      {
        Try!
        {
          {
            (135932 call = hname[135925](135939 call(135936 call . string[244] c"createCopyingBuffer")(135941 call chpl_nodeName)))
          }
        }
      }
      (135952 'elided on block' 0 tmp[135948])
    }
    (135956 return hname[135925])
  }
  { scopeless type
    string[244]
  }
  function BaseLocale[136243].serialize[135961](arg _mt[135969]:_MT[201], arg this[135963]:BaseLocale[136243], arg writer[135965]:_any[141](?), ref arg serializer[135967]:_any[141](?)) : _unknown[42] throws "method" "primary method" "method overrides" "no return value for void"
  {
    (135978 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402441 'referenced modules list' HaltWrappers[518])
  }
  function BaseLocale[136243].name[135981](arg _mt[135985]:_MT[201], arg this[135983]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no parens"
  {
    (135988 return(135989 call :(135992 call(430846 call . this[135983] c"chpl_name")) string[244]))
  }
  function BaseLocale[136243].runningTaskCntSet[136003](arg _mt[136011]:_MT[201], arg this[136005]:BaseLocale[136243], arg val[136008] :
  int(64)[10]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    (136018 call(136015 call .(402450 call . this[136005] c"runningTaskCounter") c"write") val[136008] relaxed[81224])
  }
  function BaseLocale[136243].runningTaskCntAdd[136026](arg _mt[136034]:_MT[201], arg this[136028]:BaseLocale[136243], arg val[136031] :
  int(64)[10]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    (136041 call(136038 call .(402456 call . this[136028] c"runningTaskCounter") c"add") val[136031] relaxed[81224])
  }
  function BaseLocale[136243].runningTaskCntSub[136049](arg _mt[136057]:_MT[201], arg this[136051]:BaseLocale[136243], arg val[136054] :
  int(64)[10]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    (136064 call(136061 call .(402462 call . this[136051] c"runningTaskCounter") c"sub") val[136054] relaxed[81224])
  }
  function BaseLocale[136243].runningTaskCnt[136072](arg _mt[136076]:_MT[201], arg this[136074]:BaseLocale[136243]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown rtc[136080](136085 call(136082 call .(402468 call . this[136074] c"runningTaskCounter") c"read") relaxed[81224])
    (136091 'end of statement')
    (136092 return(136099 IfExpr (136093 call <= rtc[136080] 0) then
    { scopeless
      1
    } else
    { scopeless
      rtc[136080]
    } ))
  }
  function BaseLocale[136243].chpl_id[136104](arg _mt[136108]:_MT[201], arg this[136106]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136116 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402473 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    int(64)[10]
  }
  function BaseLocale[136243].chpl_localeid[136120](arg _mt[136124]:_MT[201], arg this[136122]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136132 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402479 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    chpl_localeID_t[306449]
  }
  function BaseLocale[136243].chpl_name[136136](arg _mt[136140]:_MT[201], arg this[136138]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136148 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402485 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    string[244]
  }
  function BaseLocale[136243]._getChildCount[136152](arg _mt[136156]:_MT[201], arg this[136154]:BaseLocale[136243]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136164 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402491 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    int(64)[10]
  }
  function BaseLocale[136243].addChild[136168](arg _mt[136176]:_MT[201], arg this[136170]:BaseLocale[136243], arg loc[136173] :
  locale[234]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136183 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402497 'referenced modules list' HaltWrappers[518])
  }
  function BaseLocale[136243]._getChild[136186](arg _mt[136194]:_MT[201], arg this[136188]:BaseLocale[136243], arg idx[136191] :
  int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136202 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402503 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    locale[234]
  }
  function BaseLocale[136243].gpus[136206](arg _mt[136210]:_MT[201], arg this[136208]:BaseLocale[136243]) const ref : _unknown[42] "method" "primary method" "no parens"
  {
    (136213 return(136215 call(430858 call . this[136208] c"gpusImpl")))
  }
  function BaseLocale[136243].gpusImpl[136218](arg _mt[136222]:_MT[201], arg this[136220]:BaseLocale[136243]) const ref : _unknown[42] "method" "primary method"
  {
    (136225 return chpl_emptyLocales[308774])
  }
  function BaseLocale[136243].isGpu[136229](arg _mt[136233]:_MT[201], arg this[136231]:BaseLocale[136243]) : _unknown[42] "method" "primary method"
  {
    (136237 return 0)
  }
  { scopeless type
    bool[19]
  }
  type BaseLocale[136243] val super[397513]:RootClass[236] "super class" const parent[135810] "const" nilLocale[135253] locale[234] unknown nPUsLogAcc[135816] int(64)[10] unknown nPUsLogAll[135821] int(64)[10] unknown nPUsPhysAcc[135826] int(64)[10] unknown nPUsPhysAll[135831] int(64)[10] unknown maxTaskPar[135874] int(64)[10] unknown runningTaskCounter[135997](135999 call chpl__processorAtomicType int(64)[10])
  type unmanaged BaseLocale?[468079]
  type BaseLocale?[468076](?)
  type BaseLocale[397505](?)
  function DummyLocale[136365].init[136247](arg _mt[136251]:_MT[201], arg this[136249]:DummyLocale[136365]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136258 call(136255 call .(402510 call . this[136249] c"super") c"init") nilLocale[135253])
  }
  function DummyLocale[136365].chpl_id[136262](arg _mt[136266]:_MT[201], arg this[136264]:DummyLocale[136365]) : _unknown[42] "method" "primary method" "method overrides"
  {
    (136270 return(136271 call - 1))
  }
  { scopeless type
    int(64)[10]
  }
  function DummyLocale[136365].chpl_localeid[136277](arg _mt[136281]:_MT[201], arg this[136279]:DummyLocale[136365]) : _unknown[42] "method" "primary method" "method overrides"
  {
    (136285 return(136287 call chpl_buildLocaleID(136288 call -(136290 call : 1 chpl_nodeID_t[135185])) c_sublocid_none[135197]))
  }
  { scopeless type
    chpl_localeID_t[306449]
  }
  function DummyLocale[136365].chpl_name[136298](arg _mt[136302]:_MT[201], arg this[136300]:DummyLocale[136365]) : _unknown[42] "method" "primary method" "method overrides"
  {
    (136306 return "dummy-locale")
  }
  { scopeless type
    string[244]
  }
  function DummyLocale[136365]._getChildCount[136313](arg _mt[136317]:_MT[201], arg this[136315]:DummyLocale[136365]) : _unknown[42] "method" "primary method" "method overrides"
  {
    (136321 return 0)
  }
  { scopeless type
    int(64)[10]
  }
  function DummyLocale[136365]._getChild[136326](arg _mt[136334]:_MT[201], arg this[136328]:DummyLocale[136365], arg idx[136331] :
  int(64)[10]) : _unknown[42] "method" "primary method" "method overrides"
  {
    (136338 return(136339 'new'(136341 call locale[234] this[136328])))
  }
  { scopeless type
    locale[234]
  }
  function DummyLocale[136365].addChild[136346](arg _mt[136354]:_MT[201], arg this[136348]:DummyLocale[136365], arg loc[136351] :
  locale[234]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    (136358 call halt "addChild on DummyLocale")
  }
  type DummyLocale[136365] val super[397515]:BaseLocale[136243] "super class"
  type DummyLocale[430798](?)
  function chpl_getSingletonLocaleArray[136367](arg arg[136370] :
  locale[234]) const ref : _unknown[42]
  {
    unknown casted[136378](136379 call :(136382 call . arg[136370] c"_instance") borrowed AbstractLocaleModel?[468085])
    (136389 'end of statement')
    if(136400 call _cond_test(136396 call == casted[136378] nil[32]))
    {
      (136391 call halt "cannot call chpl_getSingletonCurrentLocaleArray on nil or rootLocale")
    }
    (136405 return(136411 call .(136406 call postfix! casted[136378]) c"chpl_singletonThisLocaleArray"))
  }
  {
    (136375 return(136374 'lifetime_of' c_sublocid_none[135197]))
  }
  function AbstractLocaleModel[136461].init[136432](arg _mt[136440]:_MT[201], arg this[136434]:AbstractLocaleModel[136461], arg parent_loc[136437] :
  locale[234]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136447 call(136444 call .(402516 call . this[136434] c"super") c"init") parent_loc[136437])
  }
  function AbstractLocaleModel[136461].init[136451](arg _mt[136455]:_MT[201], arg this[136453]:AbstractLocaleModel[136461]) : _unknown[42] "method" "primary method" "no return value for void"
  {
  }
  type AbstractLocaleModel[136461] val super[397517]:BaseLocale[136243] "super class" unknown chpl_singletonThisLocaleArray[136420](136428 call chpl__buildArrayRuntimeType(136425 call chpl__ensureDomainExpr(136423 call chpl_build_bounded_range 0 0)) locale[234])
  type unmanaged AbstractLocaleModel?[468094]
  type borrowed AbstractLocaleModel?[468085]
  type AbstractLocaleModel?[468082](?)
  type AbstractLocaleModel[430870](?)
  unknown rootLocale[136464] "locale private" nilLocale[135253]
  (136467 'end of statement')
  unknown replicateRootLocale[136469] "config" "param" 1
  (136472 'end of statement')
  unknown origRootLocale[136474] nilLocale[135253]
  (136477 'end of statement')
  function AbstractRootLocale[136746].init[136480](arg _mt[136484]:_MT[201], arg this[136482]:AbstractRootLocale[136746]) : _unknown[42] "method" "primary method" "no return value for void"
  {
  }
  function AbstractRootLocale[136746].init[136489](arg _mt[136497]:_MT[201], arg this[136491]:AbstractRootLocale[136746], arg parent_loc[136494] :
  locale[234]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136504 call(136501 call .(402521 call . this[136491] c"super") c"init") parent_loc[136494])
  }
  function AbstractRootLocale[136746].getDefaultLocaleSpace[136508](arg _mt[136512]:_MT[201], arg this[136510]:AbstractRootLocale[136746]) const ref : _unknown[42] "method" "primary method"
  {
    (136521 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (136522 return chpl_emptyLocaleSpace[308758])
    (402525 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    (136515 'typeof' chpl_emptyLocaleSpace[308758])
  }
  function AbstractRootLocale[136746].getDefaultLocaleArray[136527](arg _mt[136531]:_MT[201], arg this[136529]:AbstractRootLocale[136746]) const ref : _unknown[42] "method" "primary method"
  {
    (136540 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (136541 return chpl_emptyLocales[308774])
    (402531 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    (136534 'typeof' chpl_emptyLocales[308774])
  }
  function AbstractRootLocale[136746].localeIDtoLocale[136546](arg _mt[136554]:_MT[201], arg this[136548]:AbstractRootLocale[136746], arg id[136551] :
  chpl_localeID_t[306449]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (136562 call pureVirtualMethodHalt module=[222] HaltWrappers[518])
    (402537 'referenced modules list' HaltWrappers[518])
  }
  { scopeless type
    locale[234]
  }
  function AbstractRootLocale[136746].chpl_initOnLocales[136566](arg _mt[136570]:_MT[201], arg this[136568]:AbstractRootLocale[136746]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(136583 call _cond_test(136579 call > numLocales[305007] 1))
    {
      (136574 call halt "The locales must be initialized in parallel")
    }
    {
      unknown _indexOfInterest[136618] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[136619] "expr temp" "temp"
      (136628 'move' _iterator[136619](136626 call _getIterator(136606 call(136603 call .(136590 call postfix!(136592 call :(136595 call . origRootLocale[136474] c"_instance") borrowed RootLocale?[468091])) c"getDefaultLocaleSpace"))))
      Defer
      {
        {
          (136643 call _freeIterator _iterator[136619])
        }
      }
      { scopeless type
        (136633 'move' _indexOfInterest[136618](136630 call iteratorIndex _iterator[136619]))
      }
      ForLoop[136620]
      {
        unknown locIdx[136588] "index var" "insert auto destroy"
        (136638 'move' locIdx[136588] _indexOfInterest[136618])
        {
          (136608 yield locIdx[136588])
          (136610 call = rootLocale[136464] origRootLocale[136474])
          (136614 call = rootLocaleInitialized[52042] 1)
        }
        label _continueLabel[136623]
        _indexOfInterest[136618]
        _iterator[136619]
      }
      label _breakLabel[136624]
    }
  }
  function AbstractRootLocale[136746].chpl_initOnLocales[136652](arg _mt[136660]:_MT[201], arg this[136654]:AbstractRootLocale[136746], param arg tag[136657] :
  iterKind[52144]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown tmpIter[388605] "expr temp" "maybe ref" "no copy" "temp"
      (388608 'move' tmpIter[388605](136672 call #(136675 call chpl_build_low_bounded_range 0) numLocales[305007]))
      unknown isBounded[388768] "maybe param" "temp"
      (388774 'move' isBounded[388768](388770 call chpl_supportsBoundedCoforall tmpIter[388605] 0))
      if isBounded[388768]
      {
        const _coforallCount[388637] "const" "end count" "temp"
        (388705 'move' _coforallCount[388637](388702 call _endCountAlloc 1))
        unknown numTasks[388638] "temp"
        (388689 'move' numTasks[388638](388685 call chpl_boundedCoforallSize tmpIter[388605] 0))
        (388680 call _upEndCount _coforallCount[388637] 1 numTasks[388638])
        (388677 call chpl_resetTaskSpawn numTasks[388638])
        unknown _indexOfInterest[388645] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[388646] "expr temp" "temp"
        (388655 'move' _iterator[388646](388653 call _getIterator tmpIter[388605]))
        Defer
        {
          {
            (388670 call _freeIterator _iterator[388646])
          }
        }
        { scopeless type
          (388660 'move' _indexOfInterest[388645](388657 call iteratorIndex _iterator[388646]))
        }
        ForLoop[388647]
        {
          unknown locIdx[388612] "coforall index var" "index var" "insert auto destroy"
          (388665 'move' locIdx[388612] _indexOfInterest[388645])
          {
            {
              const tmp[388618] "const" "temp"
              (388620 'move' tmp[388618](388622 'deref'(388623 'chpl_on_locale_num'(388625 call chpl_buildLocaleID(388627 call : locIdx[388612] chpl_nodeID_t[135185]) c_sublocid_any[135202]))))
              {
                (388633 call chpl_defaultDistInitPrivate)
                (388634 yield locIdx[388612])
              }
              (388615 'elided on block' 0 tmp[388618])
            }
            (388640 call _downEndCount _coforallCount[388637] nil[32])
            (388639 'coforall loop')
          }
          label _continueLabel[388650]
          _indexOfInterest[388645]
          _iterator[388646]
        }
        label _breakLabel[388651]
        Defer
        {
          {
            (388692 call _endCountFree _coforallCount[388637])
          }
        }
        (388697 call _waitEndCount _coforallCount[388637] 1 numTasks[388638])
      }
      {
        const _coforallCount[388709] "const" "end count" "temp"
        (388765 'move' _coforallCount[388709](388762 call _endCountAlloc 1))
        unknown _indexOfInterest[388717] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[388718] "expr temp" "temp"
        (388727 'move' _iterator[388718](388725 call _getIterator tmpIter[388605]))
        Defer
        {
          {
            (388742 call _freeIterator _iterator[388718])
          }
        }
        { scopeless type
          (388732 'move' _indexOfInterest[388717](388729 call iteratorIndex _iterator[388718]))
        }
        ForLoop[388719]
        {
          unknown locIdx[136670] "coforall index var" "index var" "insert auto destroy"
          (388737 'move' locIdx[136670] _indexOfInterest[388717])
          (388749 call _upEndCount _coforallCount[388709] 1)
          {
            {
              const tmp[136694] "const" "temp"
              (136695 'move' tmp[136694](136692 'deref'(136679 'chpl_on_locale_num'(136681 call chpl_buildLocaleID(136682 call : locIdx[136670] chpl_nodeID_t[135185]) c_sublocid_any[135202]))))
              {
                (136689 call chpl_defaultDistInitPrivate)
                (136690 yield locIdx[136670])
              }
              (136698 'elided on block' 0 tmp[136694])
            }
            (388712 call _downEndCount _coforallCount[388709] nil[32])
            (388711 'coforall loop')
          }
          label _continueLabel[388722]
          _indexOfInterest[388717]
          _iterator[388718]
        }
        label _breakLabel[388723]
        Defer
        {
          {
            (388753 call _endCountFree _coforallCount[388709])
          }
        }
        (388758 call _waitEndCount _coforallCount[388709] 1)
      }
    }
    {
      unknown tmpIter[388778] "expr temp" "maybe ref" "no copy" "temp"
      (388781 'move' tmpIter[388778](136705 call #(136708 call chpl_build_low_bounded_range 0) numLocales[305007]))
      unknown isBounded[388947] "maybe param" "temp"
      (388953 'move' isBounded[388947](388949 call chpl_supportsBoundedCoforall tmpIter[388778] 0))
      if isBounded[388947]
      {
        const _coforallCount[388816] "const" "end count" "temp"
        (388884 'move' _coforallCount[388816](388881 call _endCountAlloc 1))
        unknown numTasks[388817] "temp"
        (388868 'move' numTasks[388817](388864 call chpl_boundedCoforallSize tmpIter[388778] 0))
        (388859 call _upEndCount _coforallCount[388816] 1 numTasks[388817])
        (388856 call chpl_resetTaskSpawn numTasks[388817])
        unknown _indexOfInterest[388824] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[388825] "expr temp" "temp"
        (388834 'move' _iterator[388825](388832 call _getIterator tmpIter[388778]))
        Defer
        {
          {
            (388849 call _freeIterator _iterator[388825])
          }
        }
        { scopeless type
          (388839 'move' _indexOfInterest[388824](388836 call iteratorIndex _iterator[388825]))
        }
        ForLoop[388826]
        {
          unknown locIdx[388785] "coforall index var" "index var" "insert auto destroy"
          (388844 'move' locIdx[388785] _indexOfInterest[388824])
          {
            {
              const tmp[388791] "const" "temp"
              (388793 'move' tmp[388791](388795 'deref'(388796 'chpl_on_locale_num'(388798 call chpl_buildLocaleID(388800 call : locIdx[388785] chpl_nodeID_t[135185]) c_sublocid_any[135202]))))
              {
                (388806 call chpl_rootLocaleInitPrivate locIdx[388785])
                (388809 call chpl_defaultLocaleInitPrivate)
                (388811 call chpl_singletonCurrentLocaleInitPrivate locIdx[388785])
                (388814 call warmupRuntime)
              }
              (388788 'elided on block' 0 tmp[388791])
            }
            (388819 call _downEndCount _coforallCount[388816] nil[32])
            (388818 'coforall loop')
          }
          label _continueLabel[388829]
          _indexOfInterest[388824]
          _iterator[388825]
        }
        label _breakLabel[388830]
        Defer
        {
          {
            (388871 call _endCountFree _coforallCount[388816])
          }
        }
        (388876 call _waitEndCount _coforallCount[388816] 1 numTasks[388817])
      }
      {
        const _coforallCount[388888] "const" "end count" "temp"
        (388944 'move' _coforallCount[388888](388941 call _endCountAlloc 1))
        unknown _indexOfInterest[388896] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[388897] "expr temp" "temp"
        (388906 'move' _iterator[388897](388904 call _getIterator tmpIter[388778]))
        Defer
        {
          {
            (388921 call _freeIterator _iterator[388897])
          }
        }
        { scopeless type
          (388911 'move' _indexOfInterest[388896](388908 call iteratorIndex _iterator[388897]))
        }
        ForLoop[388898]
        {
          unknown locIdx[136703] "coforall index var" "index var" "insert auto destroy"
          (388916 'move' locIdx[136703] _indexOfInterest[388896])
          (388928 call _upEndCount _coforallCount[388888] 1)
          {
            {
              const tmp[136733] "const" "temp"
              (136734 'move' tmp[136733](136731 'deref'(136712 'chpl_on_locale_num'(136714 call chpl_buildLocaleID(136715 call : locIdx[136703] chpl_nodeID_t[135185]) c_sublocid_any[135202]))))
              {
                (136722 call chpl_rootLocaleInitPrivate locIdx[136703])
                (136725 call chpl_defaultLocaleInitPrivate)
                (136727 call chpl_singletonCurrentLocaleInitPrivate locIdx[136703])
                (136730 call warmupRuntime)
              }
              (136737 'elided on block' 0 tmp[136733])
            }
            (388891 call _downEndCount _coforallCount[388888] nil[32])
            (388890 'coforall loop')
          }
          label _continueLabel[388901]
          _indexOfInterest[388896]
          _iterator[388897]
        }
        label _breakLabel[388902]
        Defer
        {
          {
            (388932 call _endCountFree _coforallCount[388888])
          }
        }
        (388937 call _waitEndCount _coforallCount[388888] 1)
      }
    }
  }
  where {
    (136662 call == tag[136657] standalone[52142])
  }
  type AbstractRootLocale[136746] val super[397519]:BaseLocale[136243] "super class"
  type borrowed AbstractRootLocale?[468100]
  type AbstractRootLocale?[468097](?)
  type AbstractRootLocale[430955](?)
  function warmupRuntime[136748]() : _unknown[42] "private" "no return value for void"
  {
    function chpl_task_getFixedNumThreads[136751]() : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (136754 call uint(64)[86] 32)
    }
    {
      unknown tmpIter[388957] "expr temp" "maybe ref" "no copy" "temp"
      (388960 'move' tmpIter[388957](136761 call #(136764 call chpl_build_low_bounded_range 0)(136767 call chpl_task_getFixedNumThreads)))
      unknown isBounded[389116] "maybe param" "temp"
      (389122 'move' isBounded[389116](389118 call chpl_supportsBoundedCoforall tmpIter[388957] 0))
      if isBounded[389116]
      {
        const _coforallCount[388985] "const" "end count" "temp"
        (389053 'move' _coforallCount[388985](389050 call _endCountAlloc 1))
        unknown numTasks[388986] "temp"
        (389037 'move' numTasks[388986](389033 call chpl_boundedCoforallSize tmpIter[388957] 0))
        (389028 call _upEndCount _coforallCount[388985] 1 numTasks[388986])
        (389025 call chpl_resetTaskSpawn numTasks[388986])
        unknown _indexOfInterest[388993] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[388994] "expr temp" "temp"
        (389003 'move' _iterator[388994](389001 call _getIterator tmpIter[388957]))
        Defer
        {
          {
            (389018 call _freeIterator _iterator[388994])
          }
        }
        { scopeless type
          (389008 'move' _indexOfInterest[388993](389005 call iteratorIndex _iterator[388994]))
        }
        ForLoop[388995]
        {
          unknown i[388964] "coforall index var" "index var" "insert auto destroy"
          (389013 'move' i[388964] _indexOfInterest[388993])
          {
            {
              unknown p[388968](388970 call allocate int(64)[10] 1)
              (388974 'end of statement')
              (388976 call =(388978 call p[388968] 0) i[388964])
              (388982 call deallocate p[388968])
            }
            (388988 call _downEndCount _coforallCount[388985] nil[32])
            (388987 'coforall loop')
          }
          label _continueLabel[388998]
          _indexOfInterest[388993]
          _iterator[388994]
        }
        label _breakLabel[388999]
        Defer
        {
          {
            (389040 call _endCountFree _coforallCount[388985])
          }
        }
        (389045 call _waitEndCount _coforallCount[388985] 1 numTasks[388986])
      }
      {
        const _coforallCount[389057] "const" "end count" "temp"
        (389113 'move' _coforallCount[389057](389110 call _endCountAlloc 1))
        unknown _indexOfInterest[389065] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[389066] "expr temp" "temp"
        (389075 'move' _iterator[389066](389073 call _getIterator tmpIter[388957]))
        Defer
        {
          {
            (389090 call _freeIterator _iterator[389066])
          }
        }
        { scopeless type
          (389080 'move' _indexOfInterest[389065](389077 call iteratorIndex _iterator[389066]))
        }
        ForLoop[389067]
        {
          unknown i[136759] "coforall index var" "index var" "insert auto destroy"
          (389085 'move' i[136759] _indexOfInterest[389065])
          (389097 call _upEndCount _coforallCount[389057] 1)
          {
            {
              unknown p[136770](136772 call allocate int(64)[10] 1)
              (136776 'end of statement')
              (136777 call =(136780 call p[136770] 0) i[136759])
              (136784 call deallocate p[136770])
            }
            (389060 call _downEndCount _coforallCount[389057] nil[32])
            (389059 'coforall loop')
          }
          label _continueLabel[389070]
          _indexOfInterest[389065]
          _iterator[389066]
        }
        label _breakLabel[389071]
        Defer
        {
          {
            (389101 call _endCountFree _coforallCount[389057])
          }
        }
        (389106 call _waitEndCount _coforallCount[389057] 1)
      }
    }
  }
  function chpl_init_rootLocale[136789]() : _unknown[42] "no return value for void"
  {
    if(136805 call _cond_test(136798 call &&(136800 call > numLocales[305007] 1) 1))
    {
      (136793 call halt "Cannot run a program compiled with --local in more than 1 locale")
    }
    (136810 call =(136813 call . origRootLocale[136474] c"_instance")(136816 'new'(_chpl_manager = unmanaged[183](?))(136820 call RootLocale[397722](?))))
    (136837 call(136834 call .(136821 call postfix!(136823 call :(136826 call . origRootLocale[136474] c"_instance") borrowed RootLocale?[468091])) c"setup"))
  }
  function chpl_rootLocaleInitPrivate[136840](arg locIdx[136842]:_any[141](?)) : _unknown[42] "no return value for void"
  {
    (136845 call = rootLocale[136464] origRootLocale[136474])
    if(136934 call _cond_test(136927 call && replicateRootLocale[136469](136930 call != locIdx[136842] 0)))
    {
      unknown newRootLocale[136851](136852 'new'(_chpl_manager = unmanaged[183](?))(136856 call RootLocale[397722](?)))
      (136858 'end of statement')
      const origLocales[136860] "const" "no auto destroy" "no copy" "ref var"(136877 call(136874 call .(136861 call postfix!(136863 call :(136866 call . origRootLocale[136474] c"_instance") borrowed RootLocale?[468091])) c"getDefaultLocaleArray"))
      (136879 'end of statement')
      unknown origRL[136881](136888 call .(136883 call . origLocales[136860] c"_value") c"theData")
      (136892 'end of statement')
      unknown newRL[136894](136903 call .(136900 call .(136899 call(136896 call . newRootLocale[136851] c"getDefaultLocaleArray")) c"_value") c"theData")
      (136907 'end of statement')
      (136908 'chpl_comm_array_get'(136909 'array_get' newRL[136894] 0) 0(136913 'array_get' origRL[136881] 0)(136916 call : numLocales[305007] c_size_t[614]))
      (136920 call =(136923 call . rootLocale[136464] c"_instance") newRootLocale[136851])
    }
    if(136965 call _cond_test(136961 call != locIdx[136842] 0))
    {
      const tmp[136940] "const" "no auto destroy" "ref var"(136955 call(136952 call .(136941 call postfix!(136943 call :(136946 call . rootLocale[136464] c"_instance") borrowed RootLocale?[468091])) c"getDefaultLocaleArray"))
      (136957 'end of statement')
      (136958 'move' Locales[309572] tmp[136940])
    }
    (136969 call = rootLocaleInitialized[52042] 1)
  }
  function chpl_defaultLocaleInitPrivate[136975]() : _unknown[42] "no return value for void"
  {
    const rl[136979] "const" "no auto destroy" "no copy" "ref var"(136994 call(136991 call .(136980 call postfix!(136982 call :(136985 call . rootLocale[136464] c"_instance") borrowed RootLocale?[468091])) c"getDefaultLocaleArray"))
    (136996 'end of statement')
    (136997 call =(137000 call . defaultLocale[135266] c"_instance")(137006 call .(137004 call rl[136979] 0) c"_instance"))
  }
  function chpl_singletonCurrentLocaleInitPrivateSublocs[137011](arg arg[137014] :
  locale[234]) : _unknown[42] "no return value for void"
  {
    {
      unknown _indexOfInterest[137086] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[137087] "expr temp" "temp"
      (137096 'move' _iterator[137087](137094 call _getIterator(137107 call chpl_direct_counted_range_iter 0(137105 call(137102 call . arg[137014] c"_getChildCount")))))
      Defer
      {
        {
          (137122 call _freeIterator _iterator[137087])
        }
      }
      { scopeless type
        (137112 'move' _indexOfInterest[137086](137109 call iteratorIndex _iterator[137087]))
      }
      ForLoop[137088]
      {
        unknown i[137018] "index var" "insert auto destroy"
        (137117 'move' i[137018] _indexOfInterest[137086])
        {
          unknown subloc[137032](137037 call(137034 call . arg[137014] c"_getChild") i[137018])
          (137040 'end of statement')
          unknown val[137042](137043 call :(137046 call . subloc[137032] c"_instance") unmanaged AbstractLocaleModel?[468094])
          (137053 'end of statement')
          if(137064 call _cond_test(137060 call == val[137042] nil[32]))
          {
            (137055 call halt "error in locale initialization")
          }
          (137069 call =(137079 call .(137077 call(137074 call .(137071 call postfix! val[137042]) c"chpl_singletonThisLocaleArray") 0) c"_instance") val[137042])
          (137084 call chpl_singletonCurrentLocaleInitPrivateSublocs subloc[137032])
        }
        label _continueLabel[137091]
        _indexOfInterest[137086]
        _iterator[137087]
      }
      label _breakLabel[137092]
    }
  }
  function chpl_singletonCurrentLocaleInitPrivate[137131](arg locIdx[137133]:_any[141](?)) : _unknown[42] "no return value for void"
  {
    const rl[137137] "const" "no auto destroy" "no copy" "ref var"(137152 call(137149 call .(137138 call postfix!(137140 call :(137143 call . rootLocale[136464] c"_instance") borrowed RootLocale?[468091])) c"getDefaultLocaleArray"))
    (137154 'end of statement')
    unknown loc[137156](137158 call rl[137137] locIdx[137133])
    (137161 'end of statement')
    unknown val[137163](137164 call :(137167 call . loc[137156] c"_instance") unmanaged AbstractLocaleModel?[468094])
    (137174 'end of statement')
    if(137183 call _cond_test(137179 call == val[137163] nil[32]))
    {
      (137176 call halt "error in locale initialization")
    }
    (137188 call =(137198 call .(137196 call(137193 call .(137190 call postfix! val[137163]) c"chpl_singletonThisLocaleArray") 0) c"_instance") val[137163])
    (137203 call chpl_singletonCurrentLocaleInitPrivateSublocs loc[137156])
  }
  function chpl_task_getRequestedSubloc[137207]() : _unknown[42] "extern" "codegen for CPU and GPU" "local args" "no fn body" "fn synchronization free"
  {
  }
  { scopeless type
    chpl_sublocID_t[135191]
  }
  function chpl_getLocaleID[137213](ref arg localeID[137216] :
  chpl_localeID_t[306449]) : _unknown[42] "export" "insert line file info" "local args" "no return value for void"
  {
    (137220 call = localeID[137216](430945 call here_id[137226]))
  }
  function here_id[137226]() : _unknown[42] "inline" "no parens"
  {
    if(137243 call _cond_test localeModelHasSublocales[306867])
    {
      (137229 return(137231 call chpl_rt_buildLocaleID(430947 call chpl_nodeID[305038])(137234 call chpl_task_getRequestedSubloc)))
    }
    {
      (137236 return(137238 call chpl_rt_buildLocaleID(430949 call chpl_nodeID[305038]) c_sublocid_any[135202]))
    }
  }
  function chpl_localeID_to_locale[137251](arg id[137254] :
  chpl_localeID_t[306449]) : _unknown[42] "fn returns infinite lifetime"
  {
    if(137312 call _cond_test(137305 call !=(137308 call . rootLocale[136464] c"_instance") nil[32]))
    {
      (137259 return(137276 call(137273 call .(137260 call postfix!(137262 call :(137265 call . rootLocale[136464] c"_instance") borrowed AbstractRootLocale?[468100])) c"localeIDtoLocale") id[137254]))
    }
    {
      if(137299 call _cond_test(137292 call ==(137295 call . dummyLocale[135279] c"_instance") nil[32]))
      {
        (137281 call =(137284 call . dummyLocale[135279] c"_instance")(137287 'new'(_chpl_manager = unmanaged[183](?))(137291 call DummyLocale[430798](?))))
      }
      (137303 return dummyLocale[135279])
    }
  }
  { scopeless type
    locale[234]
  }
  function chpl_taskRunningCntInc[137320]() : _unknown[42] "export" "insert line file info" "inc running task" "local args" "no return value for void"
  {
    if(137331 call _cond_test rootLocaleInitialized[52042])
    {
      (137328 call(137325 call .(402562 call here[135591]) c"runningTaskCntAdd") 1)
    }
  }
  function chpl_taskRunningCntDec[137337]() : _unknown[42] "export" "insert line file info" "dec running task" "local args" "no return value for void"
  {
    if(137348 call _cond_test rootLocaleInitialized[52042])
    {
      (137345 call(137342 call .(402564 call here[135591]) c"runningTaskCntSub") 1)
    }
  }
  function chpl_taskRunningCntReset[137354]() : _unknown[42] "export" "insert line file info" "local args" "no return value for void"
  {
    (137363 call(137360 call .(402566 call here[135591]) c"runningTaskCntSet") 0)
  }
  function deinit[137367]() : _unknown[42] "destructor" "no return value for void"
  {
    (137375 call chpl__delete(137372 call . origRootLocale[136474] c"_instance"))
    (137383 call chpl__delete(137380 call . dummyLocale[135279] c"_instance"))
  } writeSerializable[310070] BaseLocale[397505](?)
  {
  }
  (396156 'used modules list'(135158 'use' LocaleModel[309563] 'as' _)(135162 'import' HaltWrappers[518])(135164 'use' CTypes[51217]))
}
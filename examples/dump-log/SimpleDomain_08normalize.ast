AST dump for SimpleDomain after pass normalize.
Module use list: ChapelStandard Utilities IO Types FormattedIO 

{
  function chpl__init_SimpleDomain[468636]() : void[4] "insert line file info" "module init"
  {
    (654554 'move' tuple[320519](654552 call _tuple[246](?) ?[227]))
    (569743 'end of statement')
    (1001151 'resolution point' |serializable[475337])
    (1001153 'end of statement')
    (633650 return _void[46])
  }
  function isDomain[320406](arg d[320410]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[632871] "RVV" "param" "temp"
    unknown tmp[504906] "maybe param" "temp"
    unknown call_tmp[944495] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (944498 'move' call_tmp[944495](534398 'typeof' d[320410]))
    (504917 'move' tmp[504906](320424 call isDomainType call_tmp[944495]))
    unknown call_tmp[944500] "expr temp" "maybe param" "maybe type" "temp"
    (944503 'move' call_tmp[944500](504919 call _cond_invalid tmp[504906]))
    if call_tmp[944500]
    {
      (504922 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[707915] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707916] "maybe param" "temp"
    unknown call_tmp[944505] "expr temp" "maybe param" "maybe type" "temp"
    (944508 'move' call_tmp[944505](504907 call isTrue tmp[504906]))
    (707921 'move' tmp[707916](707919 call _cond_test call_tmp[944505]))
    if tmp[707916]
    {
      unknown tmp[707923] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[944512] "expr temp" "maybe param" "maybe type" "temp"
      (944515 'move' call_tmp[944512](320430 call(320427 call (partial) isRectangular _mt[203] d[320410])))
      (707925 'move' tmp[707923](504910 call isTrue call_tmp[944512]))
      (707930 'move' tmp[707915](707927 '_paramFoldLogical' tmp[707916] tmp[707923]))
    }
    {
      (707935 'move' tmp[707915](707932 '_paramFoldLogical' tmp[707916] 0))
    }
    (632877 'move' ret[632871](632876 'coerce' tmp[707915] bool[19]))
    (632873 return ret[632871])
    (397115 'used modules list'(320418 'use' Types[164047] 'only' isDomainType))
  }
  { scopeless type
    bool[19]
  }
  function isRegularDomain[320434](arg d[320438]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[632881] "RVV" "param" "temp"
    unknown tmp[504927] "maybe param" "temp"
    unknown call_tmp[944517] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (944520 'move' call_tmp[944517](534400 'typeof' d[320438]))
    (504938 'move' tmp[504927](320452 call isDomainType call_tmp[944517]))
    unknown call_tmp[944522] "expr temp" "maybe param" "maybe type" "temp"
    (944525 'move' call_tmp[944522](504940 call _cond_invalid tmp[504927]))
    if call_tmp[944522]
    {
      (504943 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[707942] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707943] "maybe param" "temp"
    unknown call_tmp[944527] "expr temp" "maybe param" "maybe type" "temp"
    (944530 'move' call_tmp[944527](504928 call isTrue tmp[504927]))
    (707948 'move' tmp[707943](707946 call _cond_test call_tmp[944527]))
    if tmp[707943]
    {
      unknown tmp[707950] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[944534] "expr temp" "maybe param" "maybe type" "temp"
      (944537 'move' call_tmp[944534](320458 call(320455 call (partial) isRectangular _mt[203] d[320438])))
      (707952 'move' tmp[707950](504931 call isTrue call_tmp[944534]))
      (707957 'move' tmp[707942](707954 '_paramFoldLogical' tmp[707943] tmp[707950]))
    }
    {
      (707962 'move' tmp[707942](707959 '_paramFoldLogical' tmp[707943] 0))
    }
    (632887 'move' ret[632881](632886 'coerce' tmp[707942] bool[19]))
    (632883 return ret[632881])
    (397117 'used modules list'(320446 'use' Types[164047] 'only' isDomainType))
  }
  { scopeless type
    bool[19]
  }
  function zeroTup[320462](param arg rank[320465]:int(64)[10]) : _unknown[42] "inline"
  {
    unknown ret[632891] "RVV" "temp"
    const t[320474] "dead at end of block" "const" "insert auto destroy"
    unknown call_tmp[944539] "expr temp" "maybe param" "maybe type" "temp"
    (944542 'move' call_tmp[944539](320475 call * rank[320465] int(64)[10]))
    (654549 'default init var' t[320474] call_tmp[944539])
    (320480 'end of statement')
    unknown call_tmp[944544] "expr temp" "maybe param" "maybe type" "temp"
    (944547 'move' call_tmp[944544](632896 call * rank[320465] int(64)[10]))
    (632900 'move' ret[632891](632899 'coerce' t[320474] call_tmp[944544]))
    gotoReturn _end_zeroTup[632889] _end_zeroTup[632889]
    (569739 'end of statement' t[320474])
    label _end_zeroTup[632889]
    (632893 return ret[632891])
  }
  { scopeless type
    (320468 call * rank[320465] int(64)[10])
  }
  function simpleTupleType[320486](param arg rank[320489]:int(64)[10], arg eltType[320493]:_any[141](?) =
  int(64)[10]) type : _unknown[42]
  {
    unknown ret[632906] "RVV" "temp" "type variable"
    unknown call_tmp[944549] "expr temp" "maybe param" "maybe type" "temp"
    (944552 'move' call_tmp[944549](320506 call == rank[320489] 1))
    unknown call_tmp[944554] "expr temp" "maybe param" "maybe type" "temp"
    (944557 'move' call_tmp[944554](320510 call _cond_test call_tmp[944549]))
    if call_tmp[944554]
    {
      (632911 'move' ret[632906](632910 'deref' eltType[320493]))
      gotoReturn _end_simpleTupleType[632904] _end_simpleTupleType[632904]
    }
    {
      unknown call_tmp[944559] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (944562 'move' call_tmp[944559](320501 call * rank[320489] eltType[320493]))
      (632916 'move' ret[632906](632915 'deref' call_tmp[944559]))
      gotoReturn _end_simpleTupleType[632904] _end_simpleTupleType[632904]
    }
    label _end_simpleTupleType[632904]
    (632908 return ret[632906])
  }
  unknown tuple[320519] "dead at end of block" "insert auto destroy" "type variable"
  function _unknown[42].first[320524](arg _mt[320530]:_MT[201], arg this[320527] :
  tuple[320519]) ref : _unknown[42] "inline" "method" "no parens" "reference to const when const this"
  {
    unknown ret[632922] "RVV" "temp"
    unknown call_tmp[944564] "expr temp" "maybe param" "maybe type" "temp"
    (944567 'move' call_tmp[944564](320535 call this[320527] 0))
    (632927 'move' ret[632922](632926 'addr of' call_tmp[944564]))
    (632924 return ret[632922])
  }
  function _unknown[42].last[320539](arg _mt[320545]:_MT[201], arg this[320542] :
  tuple[320519]) ref : _unknown[42] "inline" "method" "no parens" "reference to const when const this"
  {
    unknown ret[632931] "RVV" "temp"
    unknown call_tmp[944571] "expr temp" "maybe param" "maybe type" "temp"
    (944574 'move' call_tmp[944571](320554 call size _mt[203] this[320542]))
    unknown call_tmp[944576] "expr temp" "maybe param" "maybe type" "temp"
    (944579 'move' call_tmp[944576](320551 call - call_tmp[944571] 1))
    unknown call_tmp[944581] "expr temp" "maybe param" "maybe type" "temp"
    (944584 'move' call_tmp[944581](320550 call this[320542] call_tmp[944576]))
    (632936 'move' ret[632931](632935 'addr of' call_tmp[944581]))
    (632933 return ret[632931])
  }
  function _unknown[42].eltType[320560](arg _mt[320566]:_MT[201], arg this[320563] :
  tuple[320519]) type : _unknown[42] "method" "no parens"
  {
    unknown ret[632940] "RVV" "temp" "type variable"
    unknown call_tmp[944586] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (944589 'move' call_tmp[944586](320584 'typeof' this[320563]))
    unknown call_tmp[944591] "expr temp" "maybe param" "maybe type" "temp"
    (944594 'move' call_tmp[944591](320582 call isHomogeneousTuple call_tmp[944586]))
    unknown call_tmp[944596] "expr temp" "maybe param" "maybe type" "temp"
    (944599 'move' call_tmp[944596](320585 call _cond_test call_tmp[944591]))
    if call_tmp[944596]
    {
      { scopeless type
        unknown call_type_tmp[579093] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[944601] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (944604 'move' call_tmp[944601](320571 call this[320563] 0))
        (579097 'move' call_type_tmp[579093](320573 'typeof' call_tmp[944601]))
      }
      (632945 'move' ret[632940](632944 'deref' call_type_tmp[579093]))
      gotoReturn _end_eltType[632938] _end_eltType[632938]
    }
    {
      (320576 call compilerError "Not homogeneous.")
    }
    label _end_eltType[632938]
    (632942 return ret[632940])
  }
  function _unknown[42].uncons[320593](arg _mt[320599]:_MT[201], arg this[320596] :
  tuple[320519]) ref : _unknown[42] "inline" "method" "no parens" "reference to const when const this"
  {
    unknown ret[632960] "RVV" "temp"
    function firstRest[320619](arg first[320621]:_any[141](?), arg rest[320624]:_any[141](?) ...) : _unknown[42] "inline"
    {
      unknown ret[632951] "RVV" "temp"
      unknown call_tmp[944606] "expr temp" "maybe param" "maybe type" "temp"
      (944609 'move' call_tmp[944606](320632 call _build_tuple first[320621] rest[320624]))
      (632956 'move' ret[632951](632955 'deref' call_tmp[944606]))
      (632953 return ret[632951])
    }
    unknown call_tmp[944611] "expr temp" "maybe param" "maybe type" "temp"
    (944614 'move' call_tmp[944611](320638 call firstRest(320640 'expand_tuple' this[320596])))
    (632965 'move' ret[632960](632964 'addr of' call_tmp[944611]))
    (632962 return ret[632960])
  }
  { scopeless type
    unknown call_tmp[944618] "expr temp" "maybe param" "maybe type" "temp"
    (944621 'move' call_tmp[944618](320604 call head _mt[203] this[320596]))
    unknown call_tmp[944623] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (944626 'move' call_tmp[944623](320608 'typeof' call_tmp[944618]))
    unknown call_tmp[944630] "expr temp" "maybe param" "maybe type" "temp"
    (944633 'move' call_tmp[944630](320611 call tail _mt[203] this[320596]))
    unknown call_tmp[944635] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (944638 'move' call_tmp[944635](320615 'typeof' call_tmp[944630]))
    (320616 call _build_tuple call_tmp[944623] call_tmp[944635])
  }
  function _unknown[42].head[320644](arg _mt[320650]:_MT[201], arg this[320647] :
  tuple[320519]) ref : _unknown[42] "inline" "method" "no parens" "reference to const when const this"
  {
    unknown ret[632969] "RVV" "temp"
    unknown call_tmp[944640] "expr temp" "maybe param" "maybe type" "temp"
    (944643 'move' call_tmp[944640](320655 call this[320647] 0))
    (632974 'move' ret[632969](632973 'addr of' call_tmp[944640]))
    (632971 return ret[632969])
  }
  function _unknown[42].tail[320659](arg _mt[320665]:_MT[201], arg this[320662] :
  tuple[320519]) : _unknown[42] "inline" "method" "no parens" "reference to const when const this"
  {
    unknown ret[632987] "RVV" "temp"
    function rest[320668](arg first[320670]:_any[141](?), arg rst[320673]:_any[141](?) ...) : _unknown[42] "inline"
    {
      unknown ret[632978] "RVV" "temp"
      (632983 'move' ret[632978](632982 'deref' rst[320673]))
      (632980 return ret[632978])
    }
    unknown call_tmp[944647] "expr temp" "maybe param" "maybe type" "temp"
    (944650 'move' call_tmp[944647](320697 call size _mt[203] this[320662]))
    unknown call_tmp[944652] "expr temp" "maybe param" "maybe type" "temp"
    (944655 'move' call_tmp[944652](320694 call > call_tmp[944647] 1))
    unknown call_tmp[944657] "expr temp" "maybe param" "maybe type" "temp"
    (944660 'move' call_tmp[944657](320701 call _cond_test call_tmp[944652]))
    if call_tmp[944657]
    {
      unknown call_tmp[944662] "expr temp" "maybe param" "maybe type" "temp"
      (944665 'move' call_tmp[944662](320683 call rest(320685 'expand_tuple' this[320662])))
      (632992 'move' ret[632987](632991 'deref' call_tmp[944662]))
      gotoReturn _end_tail[632985] _end_tail[632985]
    }
    {
      unknown call_tmp[944667] "expr temp" "maybe param" "maybe type" "temp"
      (944670 'move' call_tmp[944667](320689 call compilerError "Taking the tail of a tuple must require it to have more than one elements."))
      (632997 'move' ret[632987](632996 'deref' call_tmp[944667]))
      gotoReturn _end_tail[632985] _end_tail[632985]
    }
    label _end_tail[632985]
    (632989 return ret[632987])
  }
  function isTupleOfOrder[320709](arg leafType[320711]:_any[141](?), param arg order[320714]:int(64)[10], arg tup[320719]:_any[141](?)) param : _unknown[42] "inline"
  {
    unknown ret[633025] "RVV" "param" "temp"
    function isTupleOfOrderHelp[320724](param arg level[320727]:int(64)[10], arg tup[320732]:_any[141](?)) param : _unknown[42] "inline"
    {
      unknown ret[633003] "RVV" "param" "temp"
      unknown call_tmp[944672] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (944675 'move' call_tmp[944672](534402 'typeof' tup[320732]))
      unknown call_tmp[944677] "expr temp" "maybe param" "maybe type" "temp"
      (944680 'move' call_tmp[944677](320752 call isTuple call_tmp[944672]))
      unknown call_tmp[944682] "expr temp" "maybe param" "maybe type" "temp"
      (944685 'move' call_tmp[944682](320749 call ! call_tmp[944677]))
      unknown call_tmp[944687] "expr temp" "maybe param" "maybe type" "temp"
      (944690 'move' call_tmp[944687](320754 call _cond_test call_tmp[944682]))
      if call_tmp[944687]
      {
        unknown tmp[504948] "maybe param" "temp"
        unknown call_tmp[944692] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (944695 'move' call_tmp[944692](534404 'typeof' tup[320732]))
        (504959 'move' tmp[504948](320740 call == call_tmp[944692] leafType[320711]))
        unknown call_tmp[944697] "expr temp" "maybe param" "maybe type" "temp"
        (944700 'move' call_tmp[944697](504961 call _cond_invalid tmp[504948]))
        if call_tmp[944697]
        {
          (504964 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[707969] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[707970] "maybe param" "temp"
        unknown call_tmp[944702] "expr temp" "maybe param" "maybe type" "temp"
        (944705 'move' call_tmp[944702](504949 call isTrue tmp[504948]))
        (707975 'move' tmp[707970](707973 call _cond_test call_tmp[944702]))
        if tmp[707970]
        {
          unknown tmp[707977] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[944707] "expr temp" "maybe param" "maybe type" "temp"
          (944710 'move' call_tmp[944707](320744 call == level[320727] 0))
          (707979 'move' tmp[707977](504952 call isTrue call_tmp[944707]))
          (707984 'move' tmp[707969](707981 '_paramFoldLogical' tmp[707970] tmp[707977]))
        }
        {
          (707989 'move' tmp[707969](707986 '_paramFoldLogical' tmp[707970] 0))
        }
        (633009 'move' ret[633003](633008 'coerce' tmp[707969] bool[19]))
        gotoReturn _end_isTupleOfOrderHelp[633001] _end_isTupleOfOrderHelp[633001]
      }
      unknown call_tmp[944712] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (944715 'move' call_tmp[944712](534406 'typeof' tup[320732]))
      unknown call_tmp[944717] "expr temp" "maybe param" "maybe type" "temp"
      (944720 'move' call_tmp[944717](320765 call isHomogeneousTuple call_tmp[944712]))
      unknown call_tmp[944722] "expr temp" "maybe param" "maybe type" "temp"
      (944725 'move' call_tmp[944722](320762 call ! call_tmp[944717]))
      unknown call_tmp[944727] "expr temp" "maybe param" "maybe type" "temp"
      (944730 'move' call_tmp[944727](320767 call _cond_test call_tmp[944722]))
      if call_tmp[944727]
      {
        (633015 'move' ret[633003](633014 'coerce' 0 bool[19]))
        gotoReturn _end_isTupleOfOrderHelp[633001] _end_isTupleOfOrderHelp[633001]
      }
      unknown call_tmp[944732] "expr temp" "maybe param" "maybe type" "temp"
      (944735 'move' call_tmp[944732](320775 call - level[320727] 1))
      unknown call_tmp[944737] "expr temp" "maybe param" "maybe type" "temp"
      (944740 'move' call_tmp[944737](320780 call tup[320732] 0))
      unknown call_tmp[944742] "expr temp" "maybe param" "maybe type" "temp"
      (944745 'move' call_tmp[944742](320774 call isTupleOfOrderHelp call_tmp[944732] call_tmp[944737]))
      (633021 'move' ret[633003](633020 'coerce' call_tmp[944742] bool[19]))
      label _end_isTupleOfOrderHelp[633001]
      (633005 return ret[633003])
    }
    { scopeless type
      bool[19]
    }
    unknown call_tmp[944747] "expr temp" "maybe param" "maybe type" "temp"
    (944750 'move' call_tmp[944747](320787 call isTupleOfOrderHelp order[320714] tup[320719]))
    (633031 'move' ret[633025](633030 'coerce' call_tmp[944747] bool[19]))
    (633027 return ret[633025])
  }
  { scopeless type
    bool[19]
  }
  function computeStrides[320793](arg shape[320800]:_tuple[246](?)) : _unknown[42] "compiler added where" "inline"
  {
    unknown ret[633035] "RVV" "temp"
    unknown strides[320808] "dead at end of block" "insert auto destroy"
    unknown call_tmp[944752] "expr temp" "maybe param" "maybe type" "temp"
    (944755 'move' call_tmp[944752](534420 'query' shape[320800] 1))
    unknown call_tmp[944757] "expr temp" "maybe param" "maybe type" "temp"
    (944760 'move' call_tmp[944757](320809 call * call_tmp[944752] int(64)[10]))
    (654556 'default init var' strides[320808] call_tmp[944757])
    (320814 'end of statement')
    unknown prod[320816] "dead at end of block" "insert auto destroy"
    (654558 'init var' prod[320816] 1)
    (320819 'end of statement')
    {
      unknown j[320820] "dead at end of block" "index var" "insert auto destroy"
      (654560 'init var' j[320820] 0)
      (569759 'end of statement')
      unknown tmp[320852] "maybe param" "temp"
      unknown call_tmp[944762] "expr temp" "maybe param" "maybe type" "temp"
      (944765 'move' call_tmp[944762](534423 'query' shape[320800] 1))
      unknown call_tmp[944767] "expr temp" "maybe param" "maybe type" "temp"
      (944770 'move' call_tmp[944767](320824 call chpl__nudgeHighBound call_tmp[944762]))
      (320864 'move' tmp[320852](320862 call chpl_compute_low_param_loop_bound 0 call_tmp[944767]))
      unknown tmp[320853] "maybe param" "temp"
      unknown call_tmp[944772] "expr temp" "maybe param" "maybe type" "temp"
      (944775 'move' call_tmp[944772](534426 'query' shape[320800] 1))
      unknown call_tmp[944777] "expr temp" "maybe param" "maybe type" "temp"
      (944780 'move' call_tmp[944777](320869 call chpl__nudgeHighBound call_tmp[944772]))
      (320873 'move' tmp[320853](320871 call chpl_compute_high_param_loop_bound 0 call_tmp[944777]))
      unknown tmp[320854] "maybe param" "temp"
      (320876 'move' tmp[320854] 1)
      ParamForLoop[320878]
      { j[320820] tmp[320852] tmp[320853] tmp[320854]
        {
          unknown call_tmp[944782] "expr temp" "maybe param" "maybe type" "temp"
          (944785 'move' call_tmp[944782](534429 'query' shape[320800] 1))
          unknown call_tmp[944787] "expr temp" "maybe param" "maybe type" "temp"
          (944790 'move' call_tmp[944787](320833 call - call_tmp[944782] j[320820]))
          unknown call_tmp[944792] "maybe param" "maybe type" "temp"
          (944795 'move' call_tmp[944792](320831 call - call_tmp[944787] 1))
          unknown i[320830] "dead at end of block" "param"
          (654562 'init var' i[320830] call_tmp[944792])
          (320839 'end of statement' j[320820])
          unknown call_tmp[944797] "expr temp" "maybe param" "maybe type" "temp"
          (944800 'move' call_tmp[944797](320843 call strides[320808] i[320830]))
          (320840 call = call_tmp[944797] prod[320816])
          (569761 'end of statement' strides[320808] prod[320816])
          unknown call_tmp[944802] "expr temp" "maybe param" "maybe type" "temp"
          (944805 'move' call_tmp[944802](320850 call shape[320800] i[320830]))
          (320846 call *= prod[320816] call_tmp[944802])
          (569764 'end of statement' prod[320816])
        }
      }
      label _unused_continueLabel[320856]
      label _breakLabel[320855]
    }
    unknown call_tmp[944807] "expr temp" "maybe param" "maybe type" "temp"
    (944810 'move' call_tmp[944807](633041 'query' shape[320800] 1))
    unknown call_tmp[944812] "expr temp" "maybe param" "maybe type" "temp"
    (944815 'move' call_tmp[944812](633040 call simpleTupleType call_tmp[944807]))
    (633045 'move' ret[633035](633044 'coerce' strides[320808] call_tmp[944812]))
    gotoReturn _end_computeStrides[633033] _end_computeStrides[633033]
    (569766 'end of statement' strides[320808])
    label _end_computeStrides[633033]
    (633037 return ret[633035])
  }
  where {
    unknown call_tmp[944817] "expr temp" "maybe param" "maybe type" "temp"
    (944820 'move' call_tmp[944817](534410 'is star tuple type' shape[320800]))
    unknown call_tmp[944822] "expr temp" "maybe param" "maybe type" "temp"
    (944825 'move' call_tmp[944822](534413 call & 1 call_tmp[944817]))
    unknown call_tmp[944827] "expr temp" "maybe param" "maybe type" "temp"
    (944830 'move' call_tmp[944827](534435 'query' shape[320800] 2))
    unknown call_tmp[944832] "expr temp" "maybe param" "maybe type" "temp"
    (944835 'move' call_tmp[944832](534439 call == int(64)[10] call_tmp[944827]))
    (534441 call & call_tmp[944822] call_tmp[944832])
  }
  { scopeless type
    unknown call_tmp[944837] "expr temp" "maybe param" "maybe type" "temp"
    (944840 'move' call_tmp[944837](534432 'query' shape[320800] 1))
    (320804 call simpleTupleType call_tmp[944837])
  }
  function computeSize[320892](arg shape[320899]:_tuple[246](?)) : _unknown[42] "compiler added where" "inline"
  {
    unknown ret[633051] "RVV" "temp"
    unknown s[320905] "dead at end of block" "insert auto destroy"
    (654564 'init var' s[320905] 1 int(64)[10])
    (320909 'end of statement')
    {
      unknown i[320910] "dead at end of block" "index var" "insert auto destroy"
      (654566 'init var' i[320910] 0)
      (569768 'end of statement')
      unknown tmp[320925] "maybe param" "temp"
      unknown call_tmp[944842] "expr temp" "maybe param" "maybe type" "temp"
      (944845 'move' call_tmp[944842](534457 'query' shape[320899] 1))
      unknown call_tmp[944847] "expr temp" "maybe param" "maybe type" "temp"
      (944850 'move' call_tmp[944847](320914 call chpl__nudgeHighBound call_tmp[944842]))
      (320937 'move' tmp[320925](320935 call chpl_compute_low_param_loop_bound 0 call_tmp[944847]))
      unknown tmp[320926] "maybe param" "temp"
      unknown call_tmp[944852] "expr temp" "maybe param" "maybe type" "temp"
      (944855 'move' call_tmp[944852](534460 'query' shape[320899] 1))
      unknown call_tmp[944857] "expr temp" "maybe param" "maybe type" "temp"
      (944860 'move' call_tmp[944857](320942 call chpl__nudgeHighBound call_tmp[944852]))
      (320946 'move' tmp[320926](320944 call chpl_compute_high_param_loop_bound 0 call_tmp[944857]))
      unknown tmp[320927] "maybe param" "temp"
      (320949 'move' tmp[320927] 1)
      ParamForLoop[320951]
      { i[320910] tmp[320925] tmp[320926] tmp[320927]
        unknown call_tmp[944862] "expr temp" "maybe param" "maybe type" "temp"
        (944865 'move' call_tmp[944862](320922 call shape[320899] i[320910]))
        (320918 call *= s[320905] call_tmp[944862])
        (569769 'end of statement' s[320905] i[320910])
      }
      label _unused_continueLabel[320929]
      label _breakLabel[320928]
    }
    (633057 'move' ret[633051](633056 'coerce' s[320905] int(64)[10]))
    gotoReturn _end_computeSize[633049] _end_computeSize[633049]
    (569772 'end of statement' s[320905])
    label _end_computeSize[633049]
    (633053 return ret[633051])
  }
  where {
    unknown call_tmp[944867] "expr temp" "maybe param" "maybe type" "temp"
    (944870 'move' call_tmp[944867](534447 'is star tuple type' shape[320899]))
    unknown call_tmp[944872] "expr temp" "maybe param" "maybe type" "temp"
    (944875 'move' call_tmp[944872](534450 call & 1 call_tmp[944867]))
    unknown call_tmp[944877] "expr temp" "maybe param" "maybe type" "temp"
    (944880 'move' call_tmp[944877](534463 'query' shape[320899] 2))
    unknown call_tmp[944882] "expr temp" "maybe param" "maybe type" "temp"
    (944885 'move' call_tmp[944882](534467 call == int(64)[10] call_tmp[944877]))
    (534469 call & call_tmp[944872] call_tmp[944882])
  }
  { scopeless type
    int(64)[10]
  }
  function rect[323492](?).init[321002](arg _mt[321036]:_MT[201], ref arg this[321004]:rect[323492](?), const arg shape[321011]:_tuple[246](?), const arg offset[321018] :
  unknown call_tmp[944887] "expr temp" "maybe param" "maybe type" "temp", const arg size[321022]:int(64)[10], const arg strides[321032] :
  unknown call_tmp[944892] "expr temp" "maybe param" "maybe type" "temp" =
  (321030 call computeStrides shape[321011])) : void[4] "compiler added where" "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[944897] "expr temp" "maybe param" "maybe type" "temp"
    (944900 'move' call_tmp[944897](534491 'query' shape[321011] 1))
    unknown call_tmp[944902] "expr temp" "maybe param" "maybe type" "temp"
    (944905 'move' call_tmp[944902](534505 call : call_tmp[944897] int(64)[10]))
    (534507 'init field' this[321004] c"rank" call_tmp[944902])
    (569774 'end of statement')
    unknown call_tmp[944907] "expr temp" "maybe param" "maybe type" "temp"
    (944910 'move' call_tmp[944907](534522 '.v' this[321004] c"rank"))
    unknown call_tmp[944912] "maybe param" "maybe type" "temp"
    (944915 'move' call_tmp[944912](534513 call * call_tmp[944907] int(64)[10]))
    unknown shape[534510] "temp"
    (534516 'init var' shape[534510] shape[321011] call_tmp[944912])
    (534518 'init field' this[321004] c"shape" shape[534510])
    (569775 'end of statement')
    unknown call_tmp[944917] "expr temp" "maybe param" "maybe type" "temp"
    (944920 'move' call_tmp[944917](534537 '.v' this[321004] c"rank"))
    unknown call_tmp[944922] "maybe param" "maybe type" "temp"
    (944925 'move' call_tmp[944922](534528 call * call_tmp[944917] int(64)[10]))
    unknown offset[534525] "temp"
    (534531 'init var' offset[534525] offset[321018] call_tmp[944922])
    (534533 'init field' this[321004] c"offset" offset[534525])
    (569776 'end of statement')
    unknown size[534540] "temp"
    (534543 'init var' size[534540] size[321022] int(64)[10])
    (534545 'init field' this[321004] c"size" size[534540])
    (569777 'end of statement')
    unknown call_tmp[944927] "expr temp" "maybe param" "maybe type" "temp"
    (944930 'move' call_tmp[944927](534561 '.v' this[321004] c"rank"))
    unknown call_tmp[944932] "maybe param" "maybe type" "temp"
    (944935 'move' call_tmp[944932](534552 call * call_tmp[944927] int(64)[10]))
    unknown strides[534549] "temp"
    (534555 'init var' strides[534549] strides[321032] call_tmp[944932])
    (534557 'init field' this[321004] c"strides" strides[534549])
    (569778 'end of statement')
    (633061 return _void[46])
  }
  where {
    unknown call_tmp[944937] "expr temp" "maybe param" "maybe type" "temp"
    (944940 'move' call_tmp[944937](534475 'is star tuple type' shape[321011]))
    unknown call_tmp[944942] "expr temp" "maybe param" "maybe type" "temp"
    (944945 'move' call_tmp[944942](534478 call & 1 call_tmp[944937]))
    unknown call_tmp[944947] "expr temp" "maybe param" "maybe type" "temp"
    (944950 'move' call_tmp[944947](534494 'query' shape[321011] 2))
    unknown call_tmp[944952] "expr temp" "maybe param" "maybe type" "temp"
    (944955 'move' call_tmp[944952](534498 call == int(64)[10] call_tmp[944947]))
    (534500 call & call_tmp[944942] call_tmp[944952])
  }
  function rect[323492](?).init[321076](arg _mt[321099]:_MT[201], ref arg this[321078]:rect[323492](?), const arg shape[321085]:_tuple[246](?), const arg offset[321095] :
  unknown call_tmp[944957] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[944962] "expr temp" "maybe param" "maybe type" "temp") : void[4] "compiler added where" "inline" "method" "primary method" "no return value for void"
  {
    unknown strides[321103] "dead at end of block" "insert auto destroy"
    unknown call_tmp[944967] "expr temp" "maybe param" "maybe type" "temp"
    (944970 'move' call_tmp[944967](534582 'query' shape[321085] 1))
    unknown call_tmp[944972] "expr temp" "maybe param" "maybe type" "temp"
    (944975 'move' call_tmp[944972](321104 call * call_tmp[944967] int(64)[10]))
    (654568 'default init var' strides[321103] call_tmp[944972])
    (321109 'end of statement')
    unknown size[321111] "dead at end of block" "insert auto destroy"
    (654570 'init var' size[321111] 1)
    (321114 'end of statement')
    {
      unknown j[321115] "dead at end of block" "index var" "insert auto destroy"
      (654572 'init var' j[321115] 0)
      (569779 'end of statement')
      unknown tmp[321147] "maybe param" "temp"
      unknown call_tmp[944977] "expr temp" "maybe param" "maybe type" "temp"
      (944980 'move' call_tmp[944977](534585 'query' shape[321085] 1))
      unknown call_tmp[944982] "expr temp" "maybe param" "maybe type" "temp"
      (944985 'move' call_tmp[944982](321119 call chpl__nudgeHighBound call_tmp[944977]))
      (321159 'move' tmp[321147](321157 call chpl_compute_low_param_loop_bound 0 call_tmp[944982]))
      unknown tmp[321148] "maybe param" "temp"
      unknown call_tmp[944987] "expr temp" "maybe param" "maybe type" "temp"
      (944990 'move' call_tmp[944987](534588 'query' shape[321085] 1))
      unknown call_tmp[944992] "expr temp" "maybe param" "maybe type" "temp"
      (944995 'move' call_tmp[944992](321164 call chpl__nudgeHighBound call_tmp[944987]))
      (321168 'move' tmp[321148](321166 call chpl_compute_high_param_loop_bound 0 call_tmp[944992]))
      unknown tmp[321149] "maybe param" "temp"
      (321171 'move' tmp[321149] 1)
      ParamForLoop[321173]
      { j[321115] tmp[321147] tmp[321148] tmp[321149]
        {
          unknown call_tmp[944997] "expr temp" "maybe param" "maybe type" "temp"
          (945000 'move' call_tmp[944997](534591 'query' shape[321085] 1))
          unknown call_tmp[945002] "expr temp" "maybe param" "maybe type" "temp"
          (945005 'move' call_tmp[945002](321128 call - call_tmp[944997] j[321115]))
          unknown call_tmp[945007] "maybe param" "maybe type" "temp"
          (945010 'move' call_tmp[945007](321126 call - call_tmp[945002] 1))
          unknown i[321125] "dead at end of block" "param"
          (654574 'init var' i[321125] call_tmp[945007])
          (321134 'end of statement' j[321115])
          unknown call_tmp[945012] "expr temp" "maybe param" "maybe type" "temp"
          (945015 'move' call_tmp[945012](321138 call strides[321103] i[321125]))
          (321135 call = call_tmp[945012] size[321111])
          (569781 'end of statement' strides[321103] size[321111])
          unknown call_tmp[945017] "expr temp" "maybe param" "maybe type" "temp"
          (945020 'move' call_tmp[945017](321145 call shape[321085] i[321125]))
          (321141 call *= size[321111] call_tmp[945017])
          (569784 'end of statement' size[321111])
        }
      }
      label _unused_continueLabel[321151]
      label _breakLabel[321150]
    }
    (321186 call(321183 call (partial) init _mt[203] this[321078]) shape[321085] offset[321095] size[321111] strides[321103])
    (569786 'end of statement' size[321111] strides[321103])
    (633063 return _void[46])
  }
  where {
    unknown call_tmp[945024] "expr temp" "maybe param" "maybe type" "temp"
    (945027 'move' call_tmp[945024](534566 'is star tuple type' shape[321085]))
    unknown call_tmp[945029] "expr temp" "maybe param" "maybe type" "temp"
    (945032 'move' call_tmp[945029](534569 call & 1 call_tmp[945024]))
    unknown call_tmp[945034] "expr temp" "maybe param" "maybe type" "temp"
    (945037 'move' call_tmp[945034](534594 'query' shape[321085] 2))
    unknown call_tmp[945039] "expr temp" "maybe param" "maybe type" "temp"
    (945042 'move' call_tmp[945039](534598 call == int(64)[10] call_tmp[945034]))
    (534600 call & call_tmp[945029] call_tmp[945039])
  }
  function rect[323492](?).init[321193](arg _mt[321204]:_MT[201], ref arg this[321195]:rect[323492](?), const arg shape[321200]:int(64)[10] ...) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    (321211 call(321208 call (partial) init _mt[203] this[321195]) shape[321200])
    (633065 return _void[46])
  }
  function rect[323492](?).init[321215](arg _mt[321227]:_MT[201], ref arg this[321217]:rect[323492](?), const arg ranges[321224]:_tuple[246](?)) : void[4] "compiler added where" "inline" "method" "primary method" "no return value for void"
  {
    unknown type_tmp[321240] "dead at end of block" "insert auto destroy" "temp" "type variable"
    unknown call_tmp[945046] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (945049 'move' call_tmp[945046](654578 'query' ranges[321224] 1))
    (654582 'move' type_tmp[321240](654577 call * call_tmp[945046] int(64)[10]))
    unknown shape[321239] "dead at end of block" "insert auto destroy"
    (654584 'default init var' shape[321239] type_tmp[321240])
    unknown offset[321232] "dead at end of block" "insert auto destroy"
    (654586 'default init var' offset[321232] type_tmp[321240])
    (321245 'end of statement')
    {
      unknown i[321246] "dead at end of block" "index var" "insert auto destroy"
      (654588 'init var' i[321246] 0)
      (569790 'end of statement')
      unknown tmp[321296] "maybe param" "temp"
      unknown call_tmp[945051] "expr temp" "maybe param" "maybe type" "temp"
      (945054 'move' call_tmp[945051](534619 'query' ranges[321224] 1))
      unknown call_tmp[945056] "expr temp" "maybe param" "maybe type" "temp"
      (945059 'move' call_tmp[945056](321250 call chpl__nudgeHighBound call_tmp[945051]))
      (321308 'move' tmp[321296](321306 call chpl_compute_low_param_loop_bound 0 call_tmp[945056]))
      unknown tmp[321297] "maybe param" "temp"
      unknown call_tmp[945061] "expr temp" "maybe param" "maybe type" "temp"
      (945064 'move' call_tmp[945061](534622 'query' ranges[321224] 1))
      unknown call_tmp[945066] "expr temp" "maybe param" "maybe type" "temp"
      (945069 'move' call_tmp[945066](321313 call chpl__nudgeHighBound call_tmp[945061]))
      (321317 'move' tmp[321297](321315 call chpl_compute_high_param_loop_bound 0 call_tmp[945066]))
      unknown tmp[321298] "maybe param" "temp"
      (321320 'move' tmp[321298] 1)
      ParamForLoop[321322]
      { i[321246] tmp[321296] tmp[321297] tmp[321298]
        {
          const dm[321256] "dead at end of block" "const" "ref var"
          (654593 'init ref decl' dm[321256])
          unknown call_tmp[945071] "expr temp" "maybe param" "maybe type" "temp"
          (945074 'move' call_tmp[945071](321258 call ranges[321224] i[321246]))
          (654591 'move' dm[321256](654590 'addr of' call_tmp[945071]))
          (321261 'end of statement')
          unknown call_tmp[945078] "maybe param" "maybe type" "temp"
          (945081 'move' call_tmp[945078](321265 call highBound _mt[203] dm[321256]))
          const hb[321263] "dead at end of block" "const" "insert auto destroy"
          (654595 'init var' hb[321263] call_tmp[945078])
          (321269 'end of statement')
          unknown call_tmp[945085] "maybe param" "maybe type" "temp"
          (945088 'move' call_tmp[945085](321273 call lowBound _mt[203] dm[321256]))
          const lb[321271] "dead at end of block" "const" "insert auto destroy"
          (654597 'init var' lb[321271] call_tmp[945085])
          (321277 'end of statement' i[321246] dm[321256])
          unknown call_tmp[945090] "expr temp" "maybe param" "maybe type" "temp"
          (945093 'move' call_tmp[945090](321281 call offset[321232] i[321246]))
          (321278 call = call_tmp[945090] lb[321271])
          (569793 'end of statement' offset[321232] i[321246] lb[321271])
          unknown call_tmp[945095] "expr temp" "maybe param" "maybe type" "temp"
          (945098 'move' call_tmp[945095](321287 call shape[321239] i[321246]))
          unknown call_tmp[945100] "expr temp" "maybe param" "maybe type" "temp"
          (945103 'move' call_tmp[945100](321291 call - hb[321263] lb[321271]))
          unknown call_tmp[945105] "expr temp" "maybe param" "maybe type" "temp"
          (945108 'move' call_tmp[945105](321289 call + call_tmp[945100] 1))
          (321284 call = call_tmp[945095] call_tmp[945105])
          (569797 'end of statement' shape[321239] i[321246] hb[321263] lb[321271])
        }
      }
      label _unused_continueLabel[321300]
      label _breakLabel[321299]
    }
    (321335 call(321332 call (partial) init _mt[203] this[321217]) shape[321239] offset[321232])
    (569802 'end of statement' shape[321239] offset[321232])
    (633067 return _void[46])
  }
  where {
    unknown call_tmp[945112] "expr temp" "maybe param" "maybe type" "temp"
    (945115 'move' call_tmp[945112](534606 'is star tuple type' ranges[321224]))
    unknown call_tmp[945117] "expr temp" "maybe param" "maybe type" "temp"
    (945120 'move' call_tmp[945117](534609 call & 1 call_tmp[945112]))
    unknown call_tmp[945122] "expr temp" "maybe param" "maybe type" "temp"
    (945125 'move' call_tmp[945122](534629 'query' ranges[321224] 2))
    unknown call_tmp[945127] "expr temp" "maybe param" "maybe type" "temp"
    (945130 'move' call_tmp[945127](534632 'is_instantiation_allow_values' range[240](?) call_tmp[945122]))
    (534633 call & call_tmp[945117] call_tmp[945127])
  }
  function rect[323492](?).init[321340](arg _mt[321353]:_MT[201], ref arg this[321342]:rect[323492](?), const arg ranges[321349]:range[240](?) ...) : void[4] "compiler added where" "inline" "method" "primary method" "no return value for void"
  {
    (321360 call(321357 call (partial) init _mt[203] this[321342]) ranges[321349])
    (633069 return _void[46])
  }
  where {
    unknown call_tmp[945134] "expr temp" "maybe param" "maybe type" "temp"
    (945137 'move' call_tmp[945134](534641 'is star tuple type' ranges[321349]))
    (534645 call & 1 call_tmp[945134])
  }
  function rect[323492](?).init[321364](arg _mt[321374]:_MT[201], ref arg this[321366]:rect[323492](?), const arg dom[321371]:_domain[225034](?)) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[945143] "expr temp" "maybe param" "maybe type" "temp"
    (945146 'move' call_tmp[945143](321396 call(321393 call (partial) dims _mt[203] dom[321371])))
    (321391 call(321388 call (partial) init _mt[203] this[321366]) call_tmp[945143])
    (633071 return _void[46])
  }
  where {
    unknown tmp[504969] "maybe param" "temp"
    (504980 'move' tmp[504969](321379 call isDomain dom[321371]))
    unknown call_tmp[945148] "expr temp" "maybe param" "maybe type" "temp"
    (945151 'move' call_tmp[945148](504982 call _cond_invalid tmp[504969]))
    if call_tmp[945148]
    {
      (504985 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[707996] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707997] "maybe param" "temp"
    unknown call_tmp[945153] "expr temp" "maybe param" "maybe type" "temp"
    (945156 'move' call_tmp[945153](504970 call isTrue tmp[504969]))
    (708002 'move' tmp[707997](708000 call _cond_test call_tmp[945153]))
    if tmp[707997]
    {
      unknown tmp[708004] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[945160] "expr temp" "maybe param" "maybe type" "temp"
      (945163 'move' call_tmp[945160](321385 call(321382 call (partial) isRectangular _mt[203] dom[321371])))
      (708006 'move' tmp[708004](504973 call isTrue call_tmp[945160]))
      (708011 'move' tmp[707996](708008 '_paramFoldLogical' tmp[707997] tmp[708004]))
    }
    {
      (708016 'move' tmp[707996](708013 '_paramFoldLogical' tmp[707997] 0))
    }
    (1001674 call chpl_statementLevelSymbol tmp[707996])
  }
  function rect[323492](?).init[321400](arg _mt[321412]:_MT[201], ref arg this[321402]:rect[323492](?), const arg other[321409]:rect[323492](?)) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[945169] "expr temp" "maybe param" "maybe type" "temp"
    (945172 'move' call_tmp[945169](321421 call shape _mt[203] other[321409]))
    unknown call_tmp[945176] "expr temp" "maybe param" "maybe type" "temp"
    (945179 'move' call_tmp[945176](321425 call offset _mt[203] other[321409]))
    unknown call_tmp[945183] "expr temp" "maybe param" "maybe type" "temp"
    (945186 'move' call_tmp[945183](321429 call size _mt[203] other[321409]))
    unknown call_tmp[945190] "expr temp" "maybe param" "maybe type" "temp"
    (945193 'move' call_tmp[945190](321433 call strides _mt[203] other[321409]))
    (321419 call(321416 call (partial) init _mt[203] this[321402]) call_tmp[945169] call_tmp[945176] call_tmp[945183] call_tmp[945190])
    (633073 return _void[46])
  }
  function rect[323492](?).init=[321438](arg _mt[321450]:_MT[201], ref arg this[321440]:rect[323492](?), const arg other[321447]:rect[323492](?)) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    (321457 call(321454 call (partial) init _mt[203] this[321440]) other[321447])
    (633075 return _void[46])
  }
  function rect[323492](?).init=[321461](arg _mt[321473]:_MT[201], ref arg this[321463]:rect[323492](?), const arg shape[321470]:_tuple[246](?)) : void[4] "compiler added where" "inline" "method" "primary method" "no return value for void"
  {
    (321480 call(321477 call (partial) init _mt[203] this[321463]) shape[321470])
    (633077 return _void[46])
  }
  where {
    unknown call_tmp[945199] "expr temp" "maybe param" "maybe type" "temp"
    (945202 'move' call_tmp[945199](534680 'is star tuple type' shape[321470]))
    unknown call_tmp[945204] "expr temp" "maybe param" "maybe type" "temp"
    (945207 'move' call_tmp[945204](534683 call & 1 call_tmp[945199]))
    unknown call_tmp[945209] "expr temp" "maybe param" "maybe type" "temp"
    (945212 'move' call_tmp[945209](534690 'query' shape[321470] 2))
    unknown call_tmp[945214] "expr temp" "maybe param" "maybe type" "temp"
    (945217 'move' call_tmp[945214](534694 call == int(64)[10] call_tmp[945209]))
    (534696 call & call_tmp[945204] call_tmp[945214])
  }
  function rect[323492](?).:[321484](arg _mt[321503]:_MT[201], arg this[321486]:rect[323492](?), const arg shape[321493]:_tuple[246](?), arg toType[321500] :
  unknown call_tmp[945219] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "compiler added where" "inline" "method" "primary method" "operator"
  {
    unknown ret[633081] "RVV" "temp"
    unknown call_tmp[945224] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (945227 'move' call_tmp[945224](1000532 'new' rect[323492](?) shape[321493]))
    unknown call_tmp[945229] "expr temp" "maybe param" "maybe type" "temp"
    (945232 'move' call_tmp[945229](633087 'query' shape[321493] 1))
    unknown call_tmp[945234] "expr temp" "maybe param" "maybe type" "temp"
    (945237 'move' call_tmp[945234](633086 call rect[323492](?) call_tmp[945229]))
    (633091 'move' ret[633081](633090 'coerce' call_tmp[945224] call_tmp[945234]))
    (633083 return ret[633081])
  }
  where {
    unknown call_tmp[945239] "expr temp" "maybe param" "maybe type" "temp"
    (945242 'move' call_tmp[945239](534702 'is star tuple type' shape[321493]))
    unknown call_tmp[945244] "expr temp" "maybe param" "maybe type" "temp"
    (945247 'move' call_tmp[945244](534705 call & 1 call_tmp[945239]))
    unknown call_tmp[945249] "expr temp" "maybe param" "maybe type" "temp"
    (945252 'move' call_tmp[945249](534718 'query' shape[321493] 2))
    unknown call_tmp[945254] "expr temp" "maybe param" "maybe type" "temp"
    (945257 'move' call_tmp[945254](534722 call == int(64)[10] call_tmp[945249]))
    (534724 call & call_tmp[945244] call_tmp[945254])
  }
  { scopeless type
    unknown call_tmp[945259] "expr temp" "maybe param" "maybe type" "temp"
    (945262 'move' call_tmp[945259](534715 'query' shape[321493] 1))
    (321507 call rect[323492](?) call_tmp[945259])
  }
  function rect[323492](?).init=[321519](arg _mt[321532]:_MT[201], ref arg this[321521]:rect[323492](?), const arg shapeOffset[321529]:_tuple[246](?)) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    (321544 call(321541 call (partial) init _mt[203] this[321521])(321546 'expand_tuple' shapeOffset[321529]))
    (633093 return _void[46])
  }
  where {
    unknown call_tmp[945266] "expr temp" "maybe param" "maybe type" "temp"
    (945269 'move' call_tmp[945266](321535 call isTupleOfOrder int(64)[10] 2 shapeOffset[321529]))
    unknown call_tmp[945271] "expr temp" "maybe param" "maybe type" "temp"
    (945274 'move' call_tmp[945271](534730 'is star tuple type' shapeOffset[321529]))
    unknown call_tmp[945276] "expr temp" "maybe param" "maybe type" "temp"
    (945279 'move' call_tmp[945276](534731 call & call_tmp[945266] call_tmp[945271]))
    unknown call_tmp[945281] "expr temp" "maybe param" "maybe type" "temp"
    (945284 'move' call_tmp[945281](534735 'query' shapeOffset[321529] 1))
    unknown call_tmp[945286] "expr temp" "maybe param" "maybe type" "temp"
    (945289 'move' call_tmp[945286](534739 call == 2 call_tmp[945281]))
    unknown call_tmp[945291] "expr temp" "maybe param" "maybe type" "temp"
    (945294 'move' call_tmp[945291](534741 call & call_tmp[945276] call_tmp[945286]))
    unknown call_tmp[945296] "expr temp" "maybe param" "maybe type" "temp"
    (945299 'move' call_tmp[945296](534747 'query' shapeOffset[321529] 2))
    unknown call_tmp[945301] "expr temp" "maybe param" "maybe type" "temp"
    (945304 'move' call_tmp[945301](534750 'is_instantiation_allow_values' tuple[320519] call_tmp[945296]))
    (534751 call & call_tmp[945291] call_tmp[945301])
  }
  function rect[323492](?).:[321550](arg _mt[321570]:_MT[201], arg this[321552]:rect[323492](?), const arg shapeOffset[321560]:_tuple[246](?), arg toType[321567]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method" "operator"
  {
    unknown ret[633097] "RVV" "temp"
    unknown call_tmp[945306] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (945309 'move' call_tmp[945306](1000533 'new' rect[323492](?)(321584 'expand_tuple' shapeOffset[321560])))
    (633102 'move' ret[633097](633101 'deref' call_tmp[945306]))
    (633099 return ret[633097])
  }
  where {
    unknown call_tmp[945311] "expr temp" "maybe param" "maybe type" "temp"
    (945314 'move' call_tmp[945311](321573 call isTupleOfOrder int(64)[10] 2 shapeOffset[321560]))
    unknown call_tmp[945316] "expr temp" "maybe param" "maybe type" "temp"
    (945319 'move' call_tmp[945316](534766 'is star tuple type' shapeOffset[321560]))
    unknown call_tmp[945321] "expr temp" "maybe param" "maybe type" "temp"
    (945324 'move' call_tmp[945321](534767 call & call_tmp[945311] call_tmp[945316]))
    unknown call_tmp[945326] "expr temp" "maybe param" "maybe type" "temp"
    (945329 'move' call_tmp[945326](534771 'query' shapeOffset[321560] 1))
    unknown call_tmp[945331] "expr temp" "maybe param" "maybe type" "temp"
    (945334 'move' call_tmp[945331](534775 call == 2 call_tmp[945326]))
    unknown call_tmp[945336] "expr temp" "maybe param" "maybe type" "temp"
    (945339 'move' call_tmp[945336](534777 call & call_tmp[945321] call_tmp[945331]))
    unknown call_tmp[945341] "expr temp" "maybe param" "maybe type" "temp"
    (945344 'move' call_tmp[945341](534783 'query' shapeOffset[321560] 2))
    unknown call_tmp[945346] "expr temp" "maybe param" "maybe type" "temp"
    (945349 'move' call_tmp[945346](534786 'is_instantiation_allow_values' tuple[320519] call_tmp[945341]))
    (534787 call & call_tmp[945336] call_tmp[945346])
  }
  function rect[323492](?).init=[321588](arg _mt[321598]:_MT[201], ref arg this[321590]:rect[323492](?), const  ref arg dom[321595]:_domain[225034](?)) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    (321615 call(321612 call (partial) init _mt[203] this[321590]) dom[321595])
    (633104 return _void[46])
  }
  where {
    unknown tmp[504990] "maybe param" "temp"
    (505001 'move' tmp[504990](321603 call isDomain dom[321595]))
    unknown call_tmp[945353] "expr temp" "maybe param" "maybe type" "temp"
    (945356 'move' call_tmp[945353](505003 call _cond_invalid tmp[504990]))
    if call_tmp[945353]
    {
      (505006 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[708023] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[708024] "maybe param" "temp"
    unknown call_tmp[945358] "expr temp" "maybe param" "maybe type" "temp"
    (945361 'move' call_tmp[945358](504991 call isTrue tmp[504990]))
    (708029 'move' tmp[708024](708027 call _cond_test call_tmp[945358]))
    if tmp[708024]
    {
      unknown tmp[708031] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[945365] "expr temp" "maybe param" "maybe type" "temp"
      (945368 'move' call_tmp[945365](321609 call(321606 call (partial) isRectangular _mt[203] dom[321595])))
      (708033 'move' tmp[708031](504994 call isTrue call_tmp[945365]))
      (708038 'move' tmp[708023](708035 '_paramFoldLogical' tmp[708024] tmp[708031]))
    }
    {
      (708043 'move' tmp[708023](708040 '_paramFoldLogical' tmp[708024] 0))
    }
    (1001676 call chpl_statementLevelSymbol tmp[708023])
  }
  function rect[323492](?).:[321620](arg _mt[321637]:_MT[201], arg this[321622]:rect[323492](?), const  ref arg dom[321627]:_domain[225034](?), arg toType[321634]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method" "operator"
  {
    unknown ret[633108] "RVV" "temp"
    unknown call_tmp[945370] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (945373 'move' call_tmp[945370](1000534 'new' rect[323492](?) dom[321627]))
    (633113 'move' ret[633108](633112 'deref' call_tmp[945370]))
    (633110 return ret[633108])
  }
  where {
    unknown tmp[505011] "maybe param" "temp"
    (505022 'move' tmp[505011](321642 call isDomain dom[321627]))
    unknown call_tmp[945375] "expr temp" "maybe param" "maybe type" "temp"
    (945378 'move' call_tmp[945375](505024 call _cond_invalid tmp[505011]))
    if call_tmp[945375]
    {
      (505027 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[708050] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[708051] "maybe param" "temp"
    unknown call_tmp[945380] "expr temp" "maybe param" "maybe type" "temp"
    (945383 'move' call_tmp[945380](505012 call isTrue tmp[505011]))
    (708056 'move' tmp[708051](708054 call _cond_test call_tmp[945380]))
    if tmp[708051]
    {
      unknown tmp[708058] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[945387] "expr temp" "maybe param" "maybe type" "temp"
      (945390 'move' call_tmp[945387](321648 call(321645 call (partial) isRectangular _mt[203] dom[321627])))
      (708060 'move' tmp[708058](505015 call isTrue call_tmp[945387]))
      (708065 'move' tmp[708050](708062 '_paramFoldLogical' tmp[708051] tmp[708058]))
    }
    {
      (708070 'move' tmp[708050](708067 '_paramFoldLogical' tmp[708051] 0))
    }
    (1001678 call chpl_statementLevelSymbol tmp[708050])
  }
  function rect[323492](?).low[321659](arg _mt[321663]:_MT[201], arg this[321661]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[633117] "RVV" "temp"
    unknown call_tmp[945394] "expr temp" "maybe param" "maybe type" "temp"
    (945397 'move' call_tmp[945394](460929 call offset _mt[203] this[321661]))
    unknown call_tmp[945401] "expr temp" "maybe param" "maybe type" "temp"
    (945404 'move' call_tmp[945401](633124 call rank _mt[203] this[321661]))
    unknown call_tmp[945406] "expr temp" "maybe param" "maybe type" "temp"
    (945409 'move' call_tmp[945406](633122 call * call_tmp[945401] int(64)[10]))
    (633129 'move' ret[633117](633128 'coerce' call_tmp[945394] call_tmp[945406]))
    (633119 return ret[633117])
  }
  { scopeless type
    unknown call_tmp[945413] "expr temp" "maybe param" "maybe type" "temp"
    (945416 'move' call_tmp[945413](321667 call rank _mt[203] this[321661]))
    (321665 call * call_tmp[945413] int(64)[10])
  }
  function rect[323492](?).high[321678](arg _mt[321682]:_MT[201], arg this[321680]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[633133] "RVV" "temp"
    unknown call_tmp[945420] "maybe param" "maybe type" "temp"
    (945423 'move' call_tmp[945420](321694 call offset _mt[203] this[321680]))
    unknown his[321693] "dead at end of block" "insert auto destroy"
    (654599 'init var' his[321693] call_tmp[945420])
    (321699 'end of statement')
    {
      unknown i[321700] "dead at end of block" "index var" "insert auto destroy"
      (654601 'init var' i[321700] 0)
      (569816 'end of statement')
      unknown tmp[321726] "maybe param" "temp"
      unknown call_tmp[945427] "expr temp" "maybe param" "maybe type" "temp"
      (945430 'move' call_tmp[945427](321703 call rank _mt[203] this[321680]))
      unknown call_tmp[945432] "expr temp" "maybe param" "maybe type" "temp"
      (945435 'move' call_tmp[945432](321707 call chpl__nudgeHighBound call_tmp[945427]))
      (321738 'move' tmp[321726](321736 call chpl_compute_low_param_loop_bound 0 call_tmp[945432]))
      unknown tmp[321727] "maybe param" "temp"
      unknown call_tmp[945439] "expr temp" "maybe param" "maybe type" "temp"
      (945442 'move' call_tmp[945439](321745 call rank _mt[203] this[321680]))
      unknown call_tmp[945444] "expr temp" "maybe param" "maybe type" "temp"
      (945447 'move' call_tmp[945444](321743 call chpl__nudgeHighBound call_tmp[945439]))
      (321750 'move' tmp[321727](321748 call chpl_compute_high_param_loop_bound 0 call_tmp[945444]))
      unknown tmp[321728] "maybe param" "temp"
      (321753 'move' tmp[321728] 1)
      ParamForLoop[321755]
      { i[321700] tmp[321726] tmp[321727] tmp[321728]
        unknown call_tmp[945449] "expr temp" "maybe param" "maybe type" "temp"
        (945452 'move' call_tmp[945449](321714 call his[321693] i[321700]))
        unknown call_tmp[945456] "expr temp" "maybe param" "maybe type" "temp"
        (945459 'move' call_tmp[945456](321722 call(321718 call (partial) shape _mt[203] this[321680]) i[321700]))
        unknown call_tmp[945461] "expr temp" "maybe param" "maybe type" "temp"
        (945464 'move' call_tmp[945461](321716 call - call_tmp[945456] 1))
        (321711 call += call_tmp[945449] call_tmp[945461])
        (569817 'end of statement' his[321693] i[321700])
      }
      label _unused_continueLabel[321730]
      label _breakLabel[321729]
    }
    unknown call_tmp[945468] "expr temp" "maybe param" "maybe type" "temp"
    (945471 'move' call_tmp[945468](633140 call rank _mt[203] this[321680]))
    unknown call_tmp[945473] "expr temp" "maybe param" "maybe type" "temp"
    (945476 'move' call_tmp[945473](633138 call * call_tmp[945468] int(64)[10]))
    (633145 'move' ret[633133](633144 'coerce' his[321693] call_tmp[945473]))
    gotoReturn _end_high[633131] _end_high[633131]
    (569820 'end of statement' his[321693])
    label _end_high[633131]
    (633135 return ret[633133])
  }
  { scopeless type
    unknown call_tmp[945480] "expr temp" "maybe param" "maybe type" "temp"
    (945483 'move' call_tmp[945480](321686 call rank _mt[203] this[321680]))
    (321684 call * call_tmp[945480] int(64)[10])
  }
  function rect[323492](?).coords[321769](arg _mt[321773]:_MT[201], arg this[321771]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[633151] "RVV" "temp"
    unknown call_tmp[945487] "maybe param" "maybe type" "temp"
    (945490 'move' call_tmp[945487](321789 call offset _mt[203] this[321771]))
    unknown l[321795] "dead at end of block" "insert auto destroy"
    (654603 'init var' l[321795] call_tmp[945487])
    unknown h[321788] "dead at end of block" "insert auto destroy"
    (654605 'init var' h[321788] l[321795])
    (321798 'end of statement' l[321795])
    {
      unknown i[321799] "dead at end of block" "index var" "insert auto destroy"
      (654607 'init var' i[321799] 0)
      (569823 'end of statement')
      unknown tmp[321822] "maybe param" "temp"
      unknown call_tmp[945494] "expr temp" "maybe param" "maybe type" "temp"
      (945497 'move' call_tmp[945494](321802 call rank _mt[203] this[321771]))
      unknown call_tmp[945499] "expr temp" "maybe param" "maybe type" "temp"
      (945502 'move' call_tmp[945499](321806 call chpl__nudgeHighBound call_tmp[945494]))
      (321834 'move' tmp[321822](321832 call chpl_compute_low_param_loop_bound 0 call_tmp[945499]))
      unknown tmp[321823] "maybe param" "temp"
      unknown call_tmp[945506] "expr temp" "maybe param" "maybe type" "temp"
      (945509 'move' call_tmp[945506](321841 call rank _mt[203] this[321771]))
      unknown call_tmp[945511] "expr temp" "maybe param" "maybe type" "temp"
      (945514 'move' call_tmp[945511](321839 call chpl__nudgeHighBound call_tmp[945506]))
      (321846 'move' tmp[321823](321844 call chpl_compute_high_param_loop_bound 0 call_tmp[945511]))
      unknown tmp[321824] "maybe param" "temp"
      (321849 'move' tmp[321824] 1)
      ParamForLoop[321851]
      { i[321799] tmp[321822] tmp[321823] tmp[321824]
        unknown call_tmp[945516] "expr temp" "maybe param" "maybe type" "temp"
        (945519 'move' call_tmp[945516](321813 call h[321788] i[321799]))
        unknown call_tmp[945523] "expr temp" "maybe param" "maybe type" "temp"
        (945526 'move' call_tmp[945523](321819 call(321815 call (partial) shape _mt[203] this[321771]) i[321799]))
        (321810 call += call_tmp[945516] call_tmp[945523])
        (569824 'end of statement' h[321788] i[321799])
      }
      label _unused_continueLabel[321826]
      label _breakLabel[321825]
    }
    unknown call_tmp[945528] "expr temp" "maybe param" "maybe type" "temp"
    (945531 'move' call_tmp[945528](321864 call _build_tuple l[321795] h[321788]))
    unknown call_tmp[945535] "expr temp" "maybe param" "maybe type" "temp"
    (945538 'move' call_tmp[945535](633161 call rank _mt[203] this[321771]))
    unknown call_tmp[945540] "expr temp" "maybe param" "maybe type" "temp"
    (945543 'move' call_tmp[945540](633159 call * call_tmp[945535] int(64)[10]))
    unknown call_tmp[945545] "expr temp" "maybe param" "maybe type" "temp"
    (945548 'move' call_tmp[945545](633156 call * 2 call_tmp[945540]))
    (633166 'move' ret[633151](633165 'coerce' call_tmp[945528] call_tmp[945545]))
    gotoReturn _end_coords[633149] _end_coords[633149]
    (569827 'end of statement' l[321795] h[321788])
    label _end_coords[633149]
    (633153 return ret[633151])
  }
  { scopeless type
    unknown call_tmp[945552] "expr temp" "maybe param" "maybe type" "temp"
    (945555 'move' call_tmp[945552](321780 call rank _mt[203] this[321771]))
    unknown call_tmp[945557] "expr temp" "maybe param" "maybe type" "temp"
    (945560 'move' call_tmp[945557](321778 call * call_tmp[945552] int(64)[10]))
    (321775 call * 2 call_tmp[945557])
  }
  function rect[323492](?).shiftedShape[321869](arg _mt[321873]:_MT[201], arg this[321871]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[633172] "RVV" "temp"
    unknown call_tmp[945564] "maybe param" "maybe type" "temp"
    (945567 'move' call_tmp[945564](321885 call shape _mt[203] this[321871]))
    unknown ss[321884] "dead at end of block" "insert auto destroy"
    (654609 'init var' ss[321884] call_tmp[945564])
    (321890 'end of statement')
    {
      unknown i[321891] "dead at end of block" "index var" "insert auto destroy"
      (654611 'init var' i[321891] 0)
      (569830 'end of statement')
      unknown tmp[321911] "maybe param" "temp"
      unknown call_tmp[945571] "expr temp" "maybe param" "maybe type" "temp"
      (945574 'move' call_tmp[945571](321894 call rank _mt[203] this[321871]))
      unknown call_tmp[945576] "expr temp" "maybe param" "maybe type" "temp"
      (945579 'move' call_tmp[945576](321898 call chpl__nudgeHighBound call_tmp[945571]))
      (321923 'move' tmp[321911](321921 call chpl_compute_low_param_loop_bound 0 call_tmp[945576]))
      unknown tmp[321912] "maybe param" "temp"
      unknown call_tmp[945583] "expr temp" "maybe param" "maybe type" "temp"
      (945586 'move' call_tmp[945583](321930 call rank _mt[203] this[321871]))
      unknown call_tmp[945588] "expr temp" "maybe param" "maybe type" "temp"
      (945591 'move' call_tmp[945588](321928 call chpl__nudgeHighBound call_tmp[945583]))
      (321935 'move' tmp[321912](321933 call chpl_compute_high_param_loop_bound 0 call_tmp[945588]))
      unknown tmp[321913] "maybe param" "temp"
      (321938 'move' tmp[321913] 1)
      ParamForLoop[321940]
      { i[321891] tmp[321911] tmp[321912] tmp[321913]
        unknown call_tmp[945593] "expr temp" "maybe param" "maybe type" "temp"
        (945596 'move' call_tmp[945593](321905 call ss[321884] i[321891]))
        unknown call_tmp[945600] "expr temp" "maybe param" "maybe type" "temp"
        (945603 'move' call_tmp[945600](321908 call(460934 call (partial) offset _mt[203] this[321871]) i[321891]))
        (321902 call += call_tmp[945593] call_tmp[945600])
        (569831 'end of statement' ss[321884] i[321891])
      }
      label _unused_continueLabel[321915]
      label _breakLabel[321914]
    }
    unknown call_tmp[945607] "expr temp" "maybe param" "maybe type" "temp"
    (945610 'move' call_tmp[945607](633179 call rank _mt[203] this[321871]))
    unknown call_tmp[945612] "expr temp" "maybe param" "maybe type" "temp"
    (945615 'move' call_tmp[945612](633177 call * call_tmp[945607] int(64)[10]))
    (633184 'move' ret[633172](633183 'coerce' ss[321884] call_tmp[945612]))
    gotoReturn _end_shiftedShape[633170] _end_shiftedShape[633170]
    (569834 'end of statement' ss[321884])
    label _end_shiftedShape[633170]
    (633174 return ret[633172])
  }
  { scopeless type
    unknown call_tmp[945619] "expr temp" "maybe param" "maybe type" "temp"
    (945622 'move' call_tmp[945619](321877 call rank _mt[203] this[321871]))
    (321875 call * call_tmp[945619] int(64)[10])
  }
  function rect[323492](?).dims[321954](arg _mt[321958]:_MT[201], arg this[321956]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633190] "RVV" "temp"
    unknown dms[321969] "dead at end of block" "insert auto destroy"
    unknown call_tmp[945626] "expr temp" "maybe param" "maybe type" "temp"
    (945629 'move' call_tmp[945626](321972 call rank _mt[203] this[321956]))
    unknown call_tmp[945631] "expr temp" "maybe param" "maybe type" "temp"
    (945634 'move' call_tmp[945631](321970 call * call_tmp[945626] range[240](?)))
    (654613 'default init var' dms[321969] call_tmp[945631])
    (321978 'end of statement')
    {
      unknown i[321979] "dead at end of block" "index var" "insert auto destroy"
      (654615 'init var' i[321979] 0)
      (569836 'end of statement')
      unknown tmp[322009] "maybe param" "temp"
      unknown call_tmp[945638] "expr temp" "maybe param" "maybe type" "temp"
      (945641 'move' call_tmp[945638](321982 call rank _mt[203] this[321956]))
      unknown call_tmp[945643] "expr temp" "maybe param" "maybe type" "temp"
      (945646 'move' call_tmp[945643](321986 call chpl__nudgeHighBound call_tmp[945638]))
      (322021 'move' tmp[322009](322019 call chpl_compute_low_param_loop_bound 0 call_tmp[945643]))
      unknown tmp[322010] "maybe param" "temp"
      unknown call_tmp[945650] "expr temp" "maybe param" "maybe type" "temp"
      (945653 'move' call_tmp[945650](322028 call rank _mt[203] this[321956]))
      unknown call_tmp[945655] "expr temp" "maybe param" "maybe type" "temp"
      (945658 'move' call_tmp[945655](322026 call chpl__nudgeHighBound call_tmp[945650]))
      (322033 'move' tmp[322010](322031 call chpl_compute_high_param_loop_bound 0 call_tmp[945655]))
      unknown tmp[322011] "maybe param" "temp"
      (322036 'move' tmp[322011] 1)
      ParamForLoop[322038]
      { i[321979] tmp[322009] tmp[322010] tmp[322011]
        unknown call_tmp[945660] "expr temp" "maybe param" "maybe type" "temp"
        (945663 'move' call_tmp[945660](321993 call dms[321969] i[321979]))
        unknown call_tmp[945667] "expr temp" "maybe param" "maybe type" "temp"
        (945670 'move' call_tmp[945667](321998 call(460941 call (partial) offset _mt[203] this[321956]) i[321979]))
        unknown call_tmp[945672] "expr temp" "maybe param" "maybe type" "temp"
        (945675 'move' call_tmp[945672](322000 call chpl_build_low_bounded_range call_tmp[945667]))
        unknown call_tmp[945679] "expr temp" "maybe param" "maybe type" "temp"
        (945682 'move' call_tmp[945679](322006 call(322002 call (partial) shape _mt[203] this[321956]) i[321979]))
        unknown call_tmp[945684] "expr temp" "maybe param" "maybe type" "temp"
        (945687 'move' call_tmp[945684](321995 call # call_tmp[945672] call_tmp[945679]))
        (321990 call = call_tmp[945660] call_tmp[945684])
        (569837 'end of statement' dms[321969] i[321979])
      }
      label _unused_continueLabel[322013]
      label _breakLabel[322012]
    }
    unknown call_tmp[945691] "expr temp" "maybe param" "maybe type" "temp"
    (945694 'move' call_tmp[945691](633197 call rank _mt[203] this[321956]))
    unknown call_tmp[945696] "expr temp" "maybe param" "maybe type" "temp"
    (945699 'move' call_tmp[945696](633195 call * call_tmp[945691] range[240](?)))
    (633202 'move' ret[633190](633201 'coerce' dms[321969] call_tmp[945696]))
    gotoReturn _end_dims[633188] _end_dims[633188]
    (569840 'end of statement' dms[321969])
    label _end_dims[633188]
    (633192 return ret[633190])
  }
  { scopeless type
    unknown call_tmp[945703] "expr temp" "maybe param" "maybe type" "temp"
    (945706 'move' call_tmp[945703](321962 call rank _mt[203] this[321956]))
    (321960 call * call_tmp[945703] range[240](?))
  }
  function rect[323492](?).indexAt[322052](arg _mt[322060]:_MT[201], arg this[322054]:rect[323492](?), const arg order[322057]:int(64)[10]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633208] "RVV" "temp"
    unknown call_tmp[945710] "expr temp" "maybe param" "maybe type" "temp"
    (945713 'move' call_tmp[945710](322074 call rank _mt[203] this[322054]))
    unknown call_tmp[945715] "expr temp" "maybe param" "maybe type" "temp"
    (945718 'move' call_tmp[945715](322072 call == call_tmp[945710] 1))
    unknown call_tmp[945720] "expr temp" "maybe param" "maybe type" "temp"
    (945723 'move' call_tmp[945720](322079 call _cond_test call_tmp[945715]))
    if call_tmp[945720]
    {
      unknown call_tmp[945727] "expr temp" "maybe param" "maybe type" "temp"
      (945730 'move' call_tmp[945727](633215 call rank _mt[203] this[322054]))
      unknown call_tmp[945732] "expr temp" "maybe param" "maybe type" "temp"
      (945735 'move' call_tmp[945732](633213 call simpleTupleType call_tmp[945727]))
      (633219 'move' ret[633208](633218 'coerce' order[322057] call_tmp[945732]))
      gotoReturn _end_indexAt[633206] _end_indexAt[633206]
    }
    unknown result[322085] "dead at end of block" "insert auto destroy"
    unknown call_tmp[945739] "expr temp" "maybe param" "maybe type" "temp"
    (945742 'move' call_tmp[945739](322088 call rank _mt[203] this[322054]))
    unknown call_tmp[945744] "expr temp" "maybe param" "maybe type" "temp"
    (945747 'move' call_tmp[945744](322086 call * call_tmp[945739] int(64)[10]))
    (654617 'default init var' result[322085] call_tmp[945744])
    (322094 'end of statement')
    unknown idx[322096] "dead at end of block" "insert auto destroy"
    (654619 'init var' idx[322096] order[322057])
    (322099 'end of statement')
    {
      unknown i[322100] "dead at end of block" "index var" "insert auto destroy"
      (654621 'init var' i[322100] 0)
      (569843 'end of statement')
      unknown tmp[322140] "maybe param" "temp"
      unknown call_tmp[945751] "expr temp" "maybe param" "maybe type" "temp"
      (945754 'move' call_tmp[945751](322103 call rank _mt[203] this[322054]))
      unknown call_tmp[945756] "expr temp" "maybe param" "maybe type" "temp"
      (945759 'move' call_tmp[945756](322107 call chpl__nudgeHighBound call_tmp[945751]))
      (322152 'move' tmp[322140](322150 call chpl_compute_low_param_loop_bound 0 call_tmp[945756]))
      unknown tmp[322141] "maybe param" "temp"
      unknown call_tmp[945763] "expr temp" "maybe param" "maybe type" "temp"
      (945766 'move' call_tmp[945763](322159 call rank _mt[203] this[322054]))
      unknown call_tmp[945768] "expr temp" "maybe param" "maybe type" "temp"
      (945771 'move' call_tmp[945768](322157 call chpl__nudgeHighBound call_tmp[945763]))
      (322164 'move' tmp[322141](322162 call chpl_compute_high_param_loop_bound 0 call_tmp[945768]))
      unknown tmp[322142] "maybe param" "temp"
      (322167 'move' tmp[322142] 1)
      ParamForLoop[322169]
      { i[322100] tmp[322140] tmp[322141] tmp[322142]
        {
          unknown call_tmp[945775] "maybe param" "maybe type" "temp"
          (945778 'move' call_tmp[945775](322118 call(322114 call (partial) strides _mt[203] this[322054]) i[322100]))
          const strideI[322113] "dead at end of block" "const" "insert auto destroy"
          (654623 'init var' strideI[322113] call_tmp[945775])
          (322121 'end of statement' i[322100])
          unknown call_tmp[945780] "expr temp" "maybe param" "maybe type" "temp"
          (945783 'move' call_tmp[945780](322125 call result[322085] i[322100]))
          unknown call_tmp[945785] "expr temp" "maybe param" "maybe type" "temp"
          (945788 'move' call_tmp[945785](322129 call / idx[322096] strideI[322113]))
          unknown call_tmp[945792] "expr temp" "maybe param" "maybe type" "temp"
          (945795 'move' call_tmp[945792](322134 call(460946 call (partial) offset _mt[203] this[322054]) i[322100]))
          unknown call_tmp[945797] "expr temp" "maybe param" "maybe type" "temp"
          (945800 'move' call_tmp[945797](322127 call + call_tmp[945785] call_tmp[945792]))
          (322122 call = call_tmp[945780] call_tmp[945797])
          (569845 'end of statement' result[322085] i[322100] idx[322096] strideI[322113] i[322100])
          (322136 call %= idx[322096] strideI[322113])
          (569851 'end of statement' idx[322096] strideI[322113])
        }
      }
      label _unused_continueLabel[322144]
      label _breakLabel[322143]
    }
    unknown call_tmp[945804] "expr temp" "maybe param" "maybe type" "temp"
    (945807 'move' call_tmp[945804](633226 call rank _mt[203] this[322054]))
    unknown call_tmp[945809] "expr temp" "maybe param" "maybe type" "temp"
    (945812 'move' call_tmp[945809](633224 call simpleTupleType call_tmp[945804]))
    (633230 'move' ret[633208](633229 'coerce' result[322085] call_tmp[945809]))
    gotoReturn _end_indexAt[633206] _end_indexAt[633206]
    (569854 'end of statement' result[322085])
    label _end_indexAt[633206]
    (633210 return ret[633208])
  }
  { scopeless type
    unknown call_tmp[945816] "expr temp" "maybe param" "maybe type" "temp"
    (945819 'move' call_tmp[945816](322064 call rank _mt[203] this[322054]))
    (322063 call simpleTupleType call_tmp[945816])
  }
  function rect[323492](?).atIndex[322183](arg _mt[322191]:_MT[201], arg this[322185]:rect[323492](?), const arg idx[322188]:int(64)[10]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633236] "RVV" "temp"
    (633242 'move' ret[633236](633241 'coerce' idx[322188] int(64)[10]))
    (633238 return ret[633236])
  }
  { scopeless type
    int(64)[10]
  }
  function rect[323492](?).atIndex[322200](arg _mt[322214]:_MT[201], arg this[322202]:rect[323492](?), const arg idx[322211] :
  unknown call_tmp[945823] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633246] "RVV" "temp"
    unknown call_tmp[945830] "expr temp" "maybe param" "maybe type" "temp"
    (945833 'move' call_tmp[945830](322223 call rank _mt[203] this[322202]))
    unknown call_tmp[945835] "expr temp" "maybe param" "maybe type" "temp"
    (945838 'move' call_tmp[945835](322221 call == call_tmp[945830] 1))
    unknown call_tmp[945840] "expr temp" "maybe param" "maybe type" "temp"
    (945843 'move' call_tmp[945840](322228 call _cond_test call_tmp[945835]))
    if call_tmp[945840]
    {
      (633252 'move' ret[633246](633251 'coerce' idx[322211] int(64)[10]))
      gotoReturn _end_atIndex[633244] _end_atIndex[633244]
    }
    unknown i[322234] "dead at end of block" "insert auto destroy"
    (654625 'default init var' i[322234] int(64)[10])
    (322237 'end of statement')
    {
      unknown j[322238] "dead at end of block" "index var" "insert auto destroy"
      (654627 'init var' j[322238] 0)
      (569858 'end of statement')
      unknown tmp[322269] "maybe param" "temp"
      unknown call_tmp[945847] "expr temp" "maybe param" "maybe type" "temp"
      (945850 'move' call_tmp[945847](322241 call rank _mt[203] this[322202]))
      unknown call_tmp[945852] "expr temp" "maybe param" "maybe type" "temp"
      (945855 'move' call_tmp[945852](322245 call chpl__nudgeHighBound call_tmp[945847]))
      (322281 'move' tmp[322269](322279 call chpl_compute_low_param_loop_bound 0 call_tmp[945852]))
      unknown tmp[322270] "maybe param" "temp"
      unknown call_tmp[945859] "expr temp" "maybe param" "maybe type" "temp"
      (945862 'move' call_tmp[945859](322288 call rank _mt[203] this[322202]))
      unknown call_tmp[945864] "expr temp" "maybe param" "maybe type" "temp"
      (945867 'move' call_tmp[945864](322286 call chpl__nudgeHighBound call_tmp[945859]))
      (322293 'move' tmp[322270](322291 call chpl_compute_high_param_loop_bound 0 call_tmp[945864]))
      unknown tmp[322271] "maybe param" "temp"
      (322296 'move' tmp[322271] 1)
      ParamForLoop[322298]
      { j[322238] tmp[322269] tmp[322270] tmp[322271]
        unknown call_tmp[945869] "expr temp" "maybe param" "maybe type" "temp"
        (945872 'move' call_tmp[945869](322257 call idx[322211] j[322238]))
        unknown call_tmp[945876] "expr temp" "maybe param" "maybe type" "temp"
        (945879 'move' call_tmp[945876](322260 call(460951 call (partial) offset _mt[203] this[322202]) j[322238]))
        unknown call_tmp[945881] "expr temp" "maybe param" "maybe type" "temp"
        (945884 'move' call_tmp[945881](322254 call - call_tmp[945869] call_tmp[945876]))
        unknown call_tmp[945888] "expr temp" "maybe param" "maybe type" "temp"
        (945891 'move' call_tmp[945888](322266 call(322262 call (partial) strides _mt[203] this[322202]) j[322238]))
        unknown call_tmp[945893] "expr temp" "maybe param" "maybe type" "temp"
        (945896 'move' call_tmp[945893](322252 call * call_tmp[945881] call_tmp[945888]))
        (322249 call += i[322234] call_tmp[945893])
        (569859 'end of statement' i[322234] j[322238])
      }
      label _unused_continueLabel[322273]
      label _breakLabel[322272]
    }
    (633258 'move' ret[633246](633257 'coerce' i[322234] int(64)[10]))
    gotoReturn _end_atIndex[633244] _end_atIndex[633244]
    (569862 'end of statement' i[322234])
    label _end_atIndex[633244]
    (633248 return ret[633246])
  }
  { scopeless type
    int(64)[10]
  }
  function rect[323492](?).toDomain[322312](arg _mt[322316]:_MT[201], arg this[322314]:rect[323492](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633264] "RVV" "temp"
    unknown call_tmp[945900] "expr temp" "maybe param" "maybe type" "temp"
    (945903 'move' call_tmp[945900](322333 call(322329 call (partial) dims _mt[203] this[322314])))
    unknown call_tmp[945905] "expr temp" "maybe param" "maybe type" "temp"
    (945908 'move' call_tmp[945905](322336 call chpl__buildDomainExpr(322334 'expand_tuple' call_tmp[945900]) 1))
    unknown call_tmp[945912] "expr temp" "maybe param" "maybe type" "temp"
    (945915 'move' call_tmp[945912](633272 call rank _mt[203] this[322314]))
    unknown call_tmp[945917] "expr temp" "maybe param" "maybe type" "temp"
    (945920 'move' call_tmp[945917](633269 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[945912] int(64)[10]))
    (633277 'move' ret[633264](633276 'coerce' call_tmp[945905] call_tmp[945917]))
    (633266 return ret[633264])
  }
  { scopeless type
    unknown call_tmp[945924] "expr temp" "maybe param" "maybe type" "temp"
    (945927 'move' call_tmp[945924](322321 call rank _mt[203] this[322314]))
    (322319 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[945924] int(64)[10])
  }
  function rect[323492](?).:[322341](arg _mt[322361]:_MT[201], arg this[322343]:rect[323492](?), const in arg sd[322350]:rect[323492](?), arg toType[322358] :
  unknown call_tmp[945929] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "primary method" "operator"
  {
    unknown ret[633281] "RVV" "temp"
    unknown call_tmp[945936] "expr temp" "maybe param" "maybe type" "temp"
    (945939 'move' call_tmp[945936](322371 call(322368 call (partial) toDomain _mt[203] sd[322350])))
    (633286 'move' ret[633281](633285 'deref' call_tmp[945936]))
    (633283 return ret[633281])
  }
  function rect[323492](?).serialIter[322374](arg _mt[322378]:_MT[201], arg this[322376]:rect[323492](?)) : _unknown[42] "inline" "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[633290] "RVV" "temp"
    {
      unknown _indexOfInterest[322405] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[322406] "expr temp" "temp"
      unknown call_tmp[945943] "expr temp" "maybe param" "maybe type" "temp"
      (945946 'move' call_tmp[945943](460958 call size _mt[203] this[322376]))
      unknown call_tmp[945948] "expr temp" "maybe param" "maybe type" "temp"
      (945951 'move' call_tmp[945948](322419 call chpl__nudgeHighBound call_tmp[945943]))
      unknown call_tmp[945953] "expr temp" "maybe param" "maybe type" "temp"
      (945956 'move' call_tmp[945953](322421 call chpl_direct_range_iter 0 call_tmp[945948]))
      (322415 'move' _iterator[322406](322413 call _getIterator call_tmp[945953]))
      Defer
      {
        {
          (322436 call _freeIterator _iterator[322406])
        }
      }
      { scopeless type
        (322426 'move' _indexOfInterest[322405](322423 call iteratorIndex _iterator[322406]))
      }
      ForLoop[322407]
      {
        unknown i[322387] "index var" "insert auto destroy"
        (569867 'end of statement')
        (322431 'move' i[322387] _indexOfInterest[322405])
        (569868 'end of statement' i[322387])
        unknown yret[633294] "YVV" "temp"
        unknown call_tmp[945960] "expr temp" "maybe param" "maybe type" "temp"
        (945963 'move' call_tmp[945960](322402 call(322398 call (partial) indexAt _mt[203] this[322376]) i[322387]))
        unknown call_tmp[945967] "expr temp" "maybe param" "maybe type" "temp"
        (945970 'move' call_tmp[945967](633299 call rank _mt[203] this[322376]))
        unknown call_tmp[945972] "expr temp" "maybe param" "maybe type" "temp"
        (945975 'move' call_tmp[945972](633297 call simpleTupleType call_tmp[945967]))
        (633303 'move' yret[633294](633302 'coerce' call_tmp[945960] call_tmp[945972]))
        (322395 yield yret[633294])
        (569870 'end of statement' i[322387])
        label _continueLabel[322410]
        _indexOfInterest[322405]
        _iterator[322406]
      }
      label _breakLabel[322411]
    }
    (633292 return ret[633290])
  }
  { scopeless type
    unknown call_tmp[945979] "expr temp" "maybe param" "maybe type" "temp"
    (945982 'move' call_tmp[945979](322382 call rank _mt[203] this[322376]))
    (322381 call simpleTupleType call_tmp[945979])
  }
  function rect[323492](?).these[322446](arg _mt[322450]:_MT[201], arg this[322448]:rect[323492](?)) : _unknown[42] "inline" "iterator fn" "method" "primary method" "order independent yielding loops" "no return value for void"
  {
    unknown ret[633308] "RVV" "temp"
    unknown call_tmp[945984] "expr temp" "maybe param" "maybe type" "temp"
    (945987 'move' call_tmp[945984](322570 call targetGpu module=[222] Utilities[320397]))
    unknown call_tmp[945989] "expr temp" "maybe param" "maybe type" "temp"
    (945992 'move' call_tmp[945989](322573 call _cond_test call_tmp[945984]))
    if call_tmp[945989]
    {
      unknown _indexOfInterest[322479] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[322480] "expr temp" "temp"
      unknown call_tmp[945996] "expr temp" "maybe param" "maybe type" "temp"
      (945999 'move' call_tmp[945996](460963 call size _mt[203] this[322448]))
      unknown call_tmp[946001] "expr temp" "maybe param" "maybe type" "temp"
      (946004 'move' call_tmp[946001](322493 call chpl__nudgeHighBound call_tmp[945996]))
      unknown call_tmp[946006] "expr temp" "maybe param" "maybe type" "temp"
      (946009 'move' call_tmp[946006](322495 call chpl_direct_range_iter 0 call_tmp[946001]))
      (322489 'move' _iterator[322480](322487 call _getIterator call_tmp[946006]))
      Defer
      {
        {
          (322510 call _freeIterator _iterator[322480])
        }
      }
      { scopeless type
        (322500 'move' _indexOfInterest[322479](322497 call iteratorIndex _iterator[322480]))
      }
      ForLoop[322481] order-independent
      {
        unknown i[322459] "index var" "insert auto destroy"
        (569873 'end of statement')
        (322505 'move' i[322459] _indexOfInterest[322479])
        (569874 'end of statement' i[322459])
        { scopeless
          (322476 'gpu primitive block')
          (569876 'end of statement')
          (322478 'chpl_assert_on_gpu' 1)
        }
        unknown yret[633312] "YVV" "temp"
        unknown call_tmp[946013] "expr temp" "maybe param" "maybe type" "temp"
        (946016 'move' call_tmp[946013](322472 call(322468 call (partial) indexAt _mt[203] this[322448]) i[322459]))
        unknown call_tmp[946020] "expr temp" "maybe param" "maybe type" "temp"
        (946023 'move' call_tmp[946020](633317 call rank _mt[203] this[322448]))
        unknown call_tmp[946025] "expr temp" "maybe param" "maybe type" "temp"
        (946028 'move' call_tmp[946025](633315 call simpleTupleType call_tmp[946020]))
        (633321 'move' yret[633312](633320 'coerce' call_tmp[946013] call_tmp[946025]))
        (322467 yield yret[633312])
        (569878 'end of statement' i[322459])
        label _continueLabel[322484]
        _indexOfInterest[322479]
        _iterator[322480]
      }
      label _breakLabel[322485]
    }
    {
      unknown call_tmp[946032] "maybe param" "maybe type" "temp"
      (946035 'move' call_tmp[946032](322524 call(322520 call (partial) toDomain _mt[203] this[322448])))
      const dom[322519] "dead at end of block" "const" "insert auto destroy"
      (654629 'init var' dom[322519] call_tmp[946032])
      (322526 'end of statement')
      {
        unknown _indexOfInterest[322535] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[322536] "expr temp" "temp"
        (322545 'move' _iterator[322536](322543 call _getIterator dom[322519]))
        Defer
        {
          {
            (322560 call _freeIterator _iterator[322536])
          }
        }
        { scopeless type
          (322550 'move' _indexOfInterest[322535](322547 call iteratorIndex _iterator[322536]))
        }
        ForLoop[322537] order-independent
        {
          unknown idx[322527] "index var" "insert auto destroy"
          (569881 'end of statement')
          (322555 'move' idx[322527] _indexOfInterest[322535])
          (569882 'end of statement' idx[322527])
          unknown yret[633324] "YVV" "temp"
          unknown call_tmp[946039] "expr temp" "maybe param" "maybe type" "temp"
          (946042 'move' call_tmp[946039](633329 call rank _mt[203] this[322448]))
          unknown call_tmp[946044] "expr temp" "maybe param" "maybe type" "temp"
          (946047 'move' call_tmp[946044](633327 call simpleTupleType call_tmp[946039]))
          (633333 'move' yret[633324](633332 'coerce' idx[322527] call_tmp[946044]))
          (322530 yield yret[633324])
          (569884 'end of statement' idx[322527])
          label _continueLabel[322540]
          _indexOfInterest[322535]
          _iterator[322536]
        }
        label _breakLabel[322541]
      }
    }
    (633310 return ret[633308])
    (322578 'referenced modules list' Utilities[320397])
  }
  { scopeless type
    unknown call_tmp[946051] "expr temp" "maybe param" "maybe type" "temp"
    (946054 'move' call_tmp[946051](322454 call rank _mt[203] this[322448]))
    (322453 call simpleTupleType call_tmp[946051])
  }
  function rect[323492](?).these[322582](arg _mt[322590]:_MT[201], arg this[322584]:rect[323492](?), param arg tag[322587]:iterKind[52144]) : _unknown[42] "inline" "iterator fn" "method" "primary method" "order independent yielding loops" "no return value for void"
  {
    unknown ret[633338] "RVV" "temp"
    unknown call_tmp[946056] "expr temp" "maybe param" "maybe type" "temp"
    (946059 'move' call_tmp[946056](322653 call targetGpu module=[222] Utilities[320397]))
    unknown call_tmp[946061] "expr temp" "maybe param" "maybe type" "temp"
    (946064 'move' call_tmp[946061](322656 call _cond_test call_tmp[946056]))
    if call_tmp[946061]
    {
      unknown call_tmp[470486] "expr temp" "maybe param" "maybe type" "temp"
      unknown call_tmp[946068] "expr temp" "maybe param" "maybe type" "temp"
      (946071 'move' call_tmp[946068](460968 call size _mt[203] this[322584]))
      unknown call_tmp[946073] "expr temp" "maybe param" "maybe type" "temp"
      (946076 'move' call_tmp[946073](322610 call chpl__nudgeHighBound call_tmp[946068]))
      (470489 'move' call_tmp[470486](322612 call chpl_build_bounded_range 0 call_tmp[946073]))
      Forall[322626] {
        induction variables:
          
          unknown i[322606] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[470486]
        shadow variables:
        other variables
          forall body
        {
          { scopeless
            (322623 'gpu primitive block')
            (569886 'end of statement')
            (322625 'chpl_assert_on_gpu' 1)
          }
          unknown yret[633342] "YVV" "temp"
          unknown call_tmp[946080] "expr temp" "maybe param" "maybe type" "temp"
          (946083 'move' call_tmp[946080](322619 call(322615 call (partial) indexAt _mt[203] this[322584]) i[322606]))
          unknown call_tmp[946087] "expr temp" "maybe param" "maybe type" "temp"
          (946090 'move' call_tmp[946087](633347 call rank _mt[203] this[322584]))
          unknown call_tmp[946092] "expr temp" "maybe param" "maybe type" "temp"
          (946095 'move' call_tmp[946092](633345 call simpleTupleType call_tmp[946087]))
          (633351 'move' yret[633342](633350 'coerce' call_tmp[946080] call_tmp[946092]))
          (322614 yield yret[633342])
          (569888 'end of statement' i[322606])
        }
      }
    }
    {
      unknown call_tmp[946099] "maybe param" "maybe type" "temp"
      (946102 'move' call_tmp[946099](322636 call(322632 call (partial) toDomain _mt[203] this[322584])))
      const dom[322631] "dead at end of block" "const" "insert auto destroy"
      (654631 'init var' dom[322631] call_tmp[946099])
      (322638 'end of statement')
      Forall[322647] {
        induction variables:
          
          unknown idx[322639] "index var" "insert auto destroy"
        iterated expressions:
          dom[322631]
        shadow variables:
        other variables
          forall body
        {
          unknown yret[633354] "YVV" "temp"
          unknown call_tmp[946106] "expr temp" "maybe param" "maybe type" "temp"
          (946109 'move' call_tmp[946106](633359 call rank _mt[203] this[322584]))
          unknown call_tmp[946111] "expr temp" "maybe param" "maybe type" "temp"
          (946114 'move' call_tmp[946111](633357 call simpleTupleType call_tmp[946106]))
          (633363 'move' yret[633354](633362 'coerce' idx[322639] call_tmp[946111]))
          (322642 yield yret[633354])
          (569890 'end of statement' idx[322639])
        }
      }
    }
    (633340 return ret[633338])
    (322663 'referenced modules list' Utilities[320397])
  }
  where {
    (322598 call == tag[322587] standalone[52142])
  }
  { scopeless type
    unknown call_tmp[946118] "expr temp" "maybe param" "maybe type" "temp"
    (946121 'move' call_tmp[946118](322594 call rank _mt[203] this[322584]))
    (322593 call simpleTupleType call_tmp[946118])
  }
  function rect[323492](?).eachOrder[322667](arg _mt[322671]:_MT[201], arg this[322669]:rect[323492](?)) : _unknown[42] "inline" "iterator fn" "method" "primary method" "order independent yielding loops" "no return value for void"
  {
    unknown ret[633368] "RVV" "temp"
    unknown call_tmp[946123] "expr temp" "maybe param" "maybe type" "temp"
    (946126 'move' call_tmp[946123](322805 call targetGpu module=[222] Utilities[320397]))
    unknown call_tmp[946128] "expr temp" "maybe param" "maybe type" "temp"
    (946131 'move' call_tmp[946128](322808 call _cond_test call_tmp[946123]))
    if call_tmp[946128]
    {
      unknown _indexOfInterest[322708] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[322709] "expr temp" "temp"
      unknown call_tmp[946135] "expr temp" "maybe param" "maybe type" "temp"
      (946138 'move' call_tmp[946135](460973 call size _mt[203] this[322669]))
      unknown call_tmp[946140] "expr temp" "maybe param" "maybe type" "temp"
      (946143 'move' call_tmp[946140](322722 call chpl__nudgeHighBound call_tmp[946135]))
      unknown call_tmp[946145] "expr temp" "maybe param" "maybe type" "temp"
      (946148 'move' call_tmp[946145](322724 call chpl_direct_range_iter 0 call_tmp[946140]))
      (322718 'move' _iterator[322709](322716 call _getIterator call_tmp[946145]))
      Defer
      {
        {
          (322739 call _freeIterator _iterator[322709])
        }
      }
      { scopeless type
        (322729 'move' _indexOfInterest[322708](322726 call iteratorIndex _iterator[322709]))
      }
      ForLoop[322710] order-independent
      {
        unknown i[322684] "index var" "insert auto destroy"
        (569893 'end of statement')
        (322734 'move' i[322684] _indexOfInterest[322708])
        (569894 'end of statement' i[322684])
        { scopeless
          (322705 'gpu primitive block')
          (569896 'end of statement')
          (322707 'chpl_assert_on_gpu' 1)
        }
        unknown yret[633372] "YVV" "temp"
        unknown call_tmp[946152] "expr temp" "maybe param" "maybe type" "temp"
        (946155 'move' call_tmp[946152](322699 call(322695 call (partial) indexAt _mt[203] this[322669]) i[322684]))
        unknown call_tmp[946157] "expr temp" "maybe param" "maybe type" "temp"
        (946160 'move' call_tmp[946157](322701 call _build_tuple i[322684] call_tmp[946152]))
        unknown call_tmp[946164] "expr temp" "maybe param" "maybe type" "temp"
        (946167 'move' call_tmp[946164](633380 call rank _mt[203] this[322669]))
        unknown call_tmp[946169] "expr temp" "maybe param" "maybe type" "temp"
        (946172 'move' call_tmp[946169](633378 call simpleTupleType call_tmp[946164]))
        unknown call_tmp[946174] "expr temp" "maybe param" "maybe type" "temp"
        (946177 'move' call_tmp[946174](633375 call _build_tuple int(64)[10] call_tmp[946169]))
        (633384 'move' yret[633372](633383 'coerce' call_tmp[946157] call_tmp[946174]))
        (322692 yield yret[633372])
        (569898 'end of statement' i[322684])
        label _continueLabel[322713]
        _indexOfInterest[322708]
        _iterator[322709]
      }
      label _breakLabel[322714]
    }
    {
      unknown call_tmp[946181] "maybe param" "maybe type" "temp"
      (946184 'move' call_tmp[946181](322753 call(322749 call (partial) toDomain _mt[203] this[322669])))
      const dom[322748] "dead at end of block" "const" "insert auto destroy"
      (654633 'init var' dom[322748] call_tmp[946181])
      (322755 'end of statement')
      {
        unknown _indexOfInterest[322770] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[322771] "expr temp" "temp"
        (322780 'move' _iterator[322771](322778 call _getIterator dom[322748]))
        Defer
        {
          {
            (322795 call _freeIterator _iterator[322771])
          }
        }
        { scopeless type
          (322785 'move' _indexOfInterest[322770](322782 call iteratorIndex _iterator[322771]))
        }
        ForLoop[322772] order-independent
        {
          unknown idx[322756] "index var" "insert auto destroy"
          (569901 'end of statement')
          (322790 'move' idx[322756] _indexOfInterest[322770])
          (569902 'end of statement' idx[322756])
          unknown yret[633387] "YVV" "temp"
          unknown call_tmp[946188] "expr temp" "maybe param" "maybe type" "temp"
          (946191 'move' call_tmp[946188](322762 call(460979 call (partial) atIndex _mt[203] this[322669]) idx[322756]))
          unknown call_tmp[946193] "expr temp" "maybe param" "maybe type" "temp"
          (946196 'move' call_tmp[946193](322765 call _build_tuple call_tmp[946188] idx[322756]))
          unknown call_tmp[946200] "expr temp" "maybe param" "maybe type" "temp"
          (946203 'move' call_tmp[946200](633395 call rank _mt[203] this[322669]))
          unknown call_tmp[946205] "expr temp" "maybe param" "maybe type" "temp"
          (946208 'move' call_tmp[946205](633393 call simpleTupleType call_tmp[946200]))
          unknown call_tmp[946210] "expr temp" "maybe param" "maybe type" "temp"
          (946213 'move' call_tmp[946210](633390 call _build_tuple int(64)[10] call_tmp[946205]))
          (633399 'move' yret[633387](633398 'coerce' call_tmp[946193] call_tmp[946210]))
          (322759 yield yret[633387])
          (569904 'end of statement' idx[322756])
          label _continueLabel[322775]
          _indexOfInterest[322770]
          _iterator[322771]
        }
        label _breakLabel[322776]
      }
    }
    (633370 return ret[633368])
    (322813 'referenced modules list' Utilities[320397])
  }
  { scopeless type
    unknown call_tmp[946217] "expr temp" "maybe param" "maybe type" "temp"
    (946220 'move' call_tmp[946217](322677 call rank _mt[203] this[322669]))
    unknown call_tmp[946222] "expr temp" "maybe param" "maybe type" "temp"
    (946225 'move' call_tmp[946222](322676 call simpleTupleType call_tmp[946217]))
    (322681 call _build_tuple int(64)[10] call_tmp[946222])
  }
  function rect[323492](?).eachOrder[322817](arg _mt[322825]:_MT[201], arg this[322819]:rect[323492](?), param arg tag[322822]:iterKind[52144]) : _unknown[42] "inline" "iterator fn" "method" "primary method" "order independent yielding loops" "no return value for void"
  {
    unknown ret[633404] "RVV" "temp"
    unknown call_tmp[946227] "expr temp" "maybe param" "maybe type" "temp"
    (946230 'move' call_tmp[946227](322902 call targetGpu module=[222] Utilities[320397]))
    unknown call_tmp[946232] "expr temp" "maybe param" "maybe type" "temp"
    (946235 'move' call_tmp[946232](322905 call _cond_test call_tmp[946227]))
    if call_tmp[946232]
    {
      unknown call_tmp[470491] "expr temp" "maybe param" "maybe type" "temp"
      unknown call_tmp[946239] "expr temp" "maybe param" "maybe type" "temp"
      (946242 'move' call_tmp[946239](460984 call size _mt[203] this[322819]))
      unknown call_tmp[946244] "expr temp" "maybe param" "maybe type" "temp"
      (946247 'move' call_tmp[946244](322849 call chpl__nudgeHighBound call_tmp[946239]))
      (470494 'move' call_tmp[470491](322851 call chpl_build_bounded_range 0 call_tmp[946244]))
      Forall[322869] {
        induction variables:
          
          unknown i[322845] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[470491]
        shadow variables:
        other variables
          forall body
        {
          { scopeless
            (322866 'gpu primitive block')
            (569906 'end of statement')
            (322868 'chpl_assert_on_gpu' 1)
          }
          unknown yret[633408] "YVV" "temp"
          unknown call_tmp[946251] "expr temp" "maybe param" "maybe type" "temp"
          (946254 'move' call_tmp[946251](322860 call(322856 call (partial) indexAt _mt[203] this[322819]) i[322845]))
          unknown call_tmp[946256] "expr temp" "maybe param" "maybe type" "temp"
          (946259 'move' call_tmp[946256](322862 call _build_tuple i[322845] call_tmp[946251]))
          unknown call_tmp[946263] "expr temp" "maybe param" "maybe type" "temp"
          (946266 'move' call_tmp[946263](633416 call rank _mt[203] this[322819]))
          unknown call_tmp[946268] "expr temp" "maybe param" "maybe type" "temp"
          (946271 'move' call_tmp[946268](633414 call simpleTupleType call_tmp[946263]))
          unknown call_tmp[946273] "expr temp" "maybe param" "maybe type" "temp"
          (946276 'move' call_tmp[946273](633411 call _build_tuple int(64)[10] call_tmp[946268]))
          (633420 'move' yret[633408](633419 'coerce' call_tmp[946256] call_tmp[946273]))
          (322853 yield yret[633408])
          (569908 'end of statement' i[322845])
        }
      }
    }
    {
      unknown call_tmp[946280] "maybe param" "maybe type" "temp"
      (946283 'move' call_tmp[946280](322879 call(322875 call (partial) toDomain _mt[203] this[322819])))
      const dom[322874] "dead at end of block" "const" "insert auto destroy"
      (654635 'init var' dom[322874] call_tmp[946280])
      (322881 'end of statement')
      Forall[322896] {
        induction variables:
          
          unknown idx[322882] "index var" "insert auto destroy"
        iterated expressions:
          dom[322874]
        shadow variables:
        other variables
          forall body
        {
          unknown yret[633423] "YVV" "temp"
          unknown call_tmp[946287] "expr temp" "maybe param" "maybe type" "temp"
          (946290 'move' call_tmp[946287](322888 call(460988 call (partial) atIndex _mt[203] this[322819]) idx[322882]))
          unknown call_tmp[946292] "expr temp" "maybe param" "maybe type" "temp"
          (946295 'move' call_tmp[946292](322891 call _build_tuple call_tmp[946287] idx[322882]))
          unknown call_tmp[946299] "expr temp" "maybe param" "maybe type" "temp"
          (946302 'move' call_tmp[946299](633431 call rank _mt[203] this[322819]))
          unknown call_tmp[946304] "expr temp" "maybe param" "maybe type" "temp"
          (946307 'move' call_tmp[946304](633429 call simpleTupleType call_tmp[946299]))
          unknown call_tmp[946309] "expr temp" "maybe param" "maybe type" "temp"
          (946312 'move' call_tmp[946309](633426 call _build_tuple int(64)[10] call_tmp[946304]))
          (633435 'move' yret[633423](633434 'coerce' call_tmp[946292] call_tmp[946309]))
          (322885 yield yret[633423])
          (569910 'end of statement' idx[322882])
        }
      }
    }
    (633406 return ret[633404])
    (322912 'referenced modules list' Utilities[320397])
  }
  where {
    (322837 call == tag[322822] standalone[52142])
  }
  { scopeless type
    unknown call_tmp[946316] "expr temp" "maybe param" "maybe type" "temp"
    (946319 'move' call_tmp[946316](322831 call rank _mt[203] this[322819]))
    unknown call_tmp[946321] "expr temp" "maybe param" "maybe type" "temp"
    (946324 'move' call_tmp[946321](322830 call simpleTupleType call_tmp[946316]))
    (322835 call _build_tuple int(64)[10] call_tmp[946321])
  }
  function rect[323492](?).originate[322916](arg _mt[322930]:_MT[201], arg this[322918]:rect[323492](?), const arg origin[322927] :
  unknown call_tmp[946328] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633440] "RVV" "temp"
    unknown call_tmp[946335] "expr temp" "maybe param" "maybe type" "temp"
    (946338 'move' call_tmp[946335](322938 call shape _mt[203] this[322918]))
    unknown call_tmp[946342] "expr temp" "maybe param" "maybe type" "temp"
    (946345 'move' call_tmp[946342](460993 call size _mt[203] this[322918]))
    unknown call_tmp[946349] "expr temp" "maybe param" "maybe type" "temp"
    (946352 'move' call_tmp[946349](322944 call strides _mt[203] this[322918]))
    unknown call_tmp[946354] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (946357 'move' call_tmp[946354](1000535 'new' rect[323492](?) call_tmp[946335] origin[322927] call_tmp[946342] call_tmp[946349]))
    (633445 'move' ret[633440](633444 'deref' call_tmp[946354]))
    (633442 return ret[633440])
  }
  function rect[323492](?).translate[322950](arg _mt[322964]:_MT[201], arg this[322952]:rect[323492](?), const arg change[322961] :
  unknown call_tmp[946361] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633449] "RVV" "temp"
    unknown call_tmp[946368] "maybe param" "maybe type" "temp"
    (946371 'move' call_tmp[946368](322969 call offset _mt[203] this[322952]))
    unknown off[322968] "dead at end of block" "insert auto destroy"
    (654637 'init var' off[322968] call_tmp[946368])
    (322974 'end of statement')
    {
      unknown i[322975] "dead at end of block" "index var" "insert auto destroy"
      (654639 'init var' i[322975] 0)
      (569913 'end of statement')
      unknown tmp[322995] "maybe param" "temp"
      unknown call_tmp[946375] "expr temp" "maybe param" "maybe type" "temp"
      (946378 'move' call_tmp[946375](322978 call rank _mt[203] this[322952]))
      unknown call_tmp[946380] "expr temp" "maybe param" "maybe type" "temp"
      (946383 'move' call_tmp[946380](322982 call chpl__nudgeHighBound call_tmp[946375]))
      (323007 'move' tmp[322995](323005 call chpl_compute_low_param_loop_bound 0 call_tmp[946380]))
      unknown tmp[322996] "maybe param" "temp"
      unknown call_tmp[946387] "expr temp" "maybe param" "maybe type" "temp"
      (946390 'move' call_tmp[946387](323014 call rank _mt[203] this[322952]))
      unknown call_tmp[946392] "expr temp" "maybe param" "maybe type" "temp"
      (946395 'move' call_tmp[946392](323012 call chpl__nudgeHighBound call_tmp[946387]))
      (323019 'move' tmp[322996](323017 call chpl_compute_high_param_loop_bound 0 call_tmp[946392]))
      unknown tmp[322997] "maybe param" "temp"
      (323022 'move' tmp[322997] 1)
      ParamForLoop[323024]
      { i[322975] tmp[322995] tmp[322996] tmp[322997]
        unknown call_tmp[946397] "expr temp" "maybe param" "maybe type" "temp"
        (946400 'move' call_tmp[946397](322989 call off[322968] i[322975]))
        unknown call_tmp[946402] "expr temp" "maybe param" "maybe type" "temp"
        (946405 'move' call_tmp[946402](322992 call change[322961] i[322975]))
        (322986 call += call_tmp[946397] call_tmp[946402])
        (569914 'end of statement' off[322968] i[322975])
      }
      label _unused_continueLabel[322999]
      label _breakLabel[322998]
    }
    unknown call_tmp[946409] "expr temp" "maybe param" "maybe type" "temp"
    (946412 'move' call_tmp[946409](323040 call(323036 call (partial) originate _mt[203] this[322952]) off[322968]))
    (633454 'move' ret[633449](633453 'deref' call_tmp[946409]))
    gotoReturn _end_translate[633447] _end_translate[633447]
    (569917 'end of statement' off[322968])
    label _end_translate[633447]
    (633451 return ret[633449])
  }
  function rect[323492](?).contains[323044](arg _mt[323058]:_MT[201], arg this[323046]:rect[323492](?), const arg rct[323055] :
  unknown call_tmp[946416] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633460] "RVV" "temp"
    unknown tmp[505032] "maybe param" "temp"
    unknown call_tmp[946423] "expr temp" "maybe param" "maybe type" "temp"
    (946426 'move' call_tmp[946423](460998 call offset _mt[203] this[323046]))
    unknown call_tmp[946430] "expr temp" "maybe param" "maybe type" "temp"
    (946433 'move' call_tmp[946430](323069 call offset _mt[203] rct[323055]))
    (505043 'move' tmp[505032](323065 call <= call_tmp[946423] call_tmp[946430]))
    unknown call_tmp[946435] "expr temp" "maybe param" "maybe type" "temp"
    (946438 'move' call_tmp[946435](505045 call _cond_invalid tmp[505032]))
    if call_tmp[946435]
    {
      (505048 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[708077] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[708078] "maybe param" "temp"
    unknown call_tmp[946440] "expr temp" "maybe param" "maybe type" "temp"
    (946443 'move' call_tmp[946440](505033 call isTrue tmp[505032]))
    (708083 'move' tmp[708078](708081 call _cond_test call_tmp[946440]))
    if tmp[708078]
    {
      unknown tmp[708085] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[946447] "expr temp" "maybe param" "maybe type" "temp"
      (946450 'move' call_tmp[946447](323075 call shape _mt[203] rct[323055]))
      unknown call_tmp[946454] "expr temp" "maybe param" "maybe type" "temp"
      (946457 'move' call_tmp[946454](323078 call shape _mt[203] this[323046]))
      unknown call_tmp[946459] "expr temp" "maybe param" "maybe type" "temp"
      (946462 'move' call_tmp[946459](323072 call <= call_tmp[946447] call_tmp[946454]))
      (708087 'move' tmp[708085](505036 call isTrue call_tmp[946459]))
      (708092 'move' tmp[708077](708089 '_paramFoldLogical' tmp[708078] tmp[708085]))
    }
    {
      (708097 'move' tmp[708077](708094 '_paramFoldLogical' tmp[708078] 0))
    }
    (633466 'move' ret[633460](633465 'coerce' tmp[708077] bool[19]))
    (633462 return ret[633460])
  }
  { scopeless type
    bool[19]
  }
  function rect[323492](?).contains[323085](arg _mt[323099]:_MT[201], arg this[323087]:rect[323492](?), const arg idx[323096] :
  unknown call_tmp[946466] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[633470] "RVV" "temp"
    unknown res[323104] "dead at end of block" "insert auto destroy"
    (654641 'init var' res[323104] 1 bool[19])
    (323108 'end of statement')
    {
      unknown i[323109] "dead at end of block" "index var" "insert auto destroy"
      (654643 'init var' i[323109] 0)
      (569921 'end of statement')
      unknown tmp[323145] "maybe param" "temp"
      unknown call_tmp[946473] "expr temp" "maybe param" "maybe type" "temp"
      (946476 'move' call_tmp[946473](323112 call rank _mt[203] this[323087]))
      unknown call_tmp[946478] "expr temp" "maybe param" "maybe type" "temp"
      (946481 'move' call_tmp[946478](323116 call chpl__nudgeHighBound call_tmp[946473]))
      (323157 'move' tmp[323145](323155 call chpl_compute_low_param_loop_bound 0 call_tmp[946478]))
      unknown tmp[323146] "maybe param" "temp"
      unknown call_tmp[946485] "expr temp" "maybe param" "maybe type" "temp"
      (946488 'move' call_tmp[946485](323164 call rank _mt[203] this[323087]))
      unknown call_tmp[946490] "expr temp" "maybe param" "maybe type" "temp"
      (946493 'move' call_tmp[946490](323162 call chpl__nudgeHighBound call_tmp[946485]))
      (323169 'move' tmp[323146](323167 call chpl_compute_high_param_loop_bound 0 call_tmp[946490]))
      unknown tmp[323147] "maybe param" "temp"
      (323172 'move' tmp[323147] 1)
      ParamForLoop[323174]
      { i[323109] tmp[323145] tmp[323146] tmp[323147]
        unknown tmp[505053] "maybe param" "temp"
        unknown call_tmp[946497] "expr temp" "maybe param" "maybe type" "temp"
        (946500 'move' call_tmp[946497](323128 call(461003 call (partial) offset _mt[203] this[323087]) i[323109]))
        unknown call_tmp[946502] "expr temp" "maybe param" "maybe type" "temp"
        (946505 'move' call_tmp[946502](323131 call idx[323096] i[323109]))
        (505064 'move' tmp[505053](323125 call <= call_tmp[946497] call_tmp[946502]))
        unknown call_tmp[946507] "expr temp" "maybe param" "maybe type" "temp"
        (946510 'move' call_tmp[946507](505066 call _cond_invalid tmp[505053]))
        if call_tmp[946507]
        {
          (505069 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[708104] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[708105] "maybe param" "temp"
        unknown call_tmp[946512] "expr temp" "maybe param" "maybe type" "temp"
        (946515 'move' call_tmp[946512](505054 call isTrue tmp[505053]))
        (708110 'move' tmp[708105](708108 call _cond_test call_tmp[946512]))
        if tmp[708105]
        {
          unknown tmp[708112] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[946517] "expr temp" "maybe param" "maybe type" "temp"
          (946520 'move' call_tmp[946517](323136 call idx[323096] i[323109]))
          unknown call_tmp[946524] "expr temp" "maybe param" "maybe type" "temp"
          (946527 'move' call_tmp[946524](323142 call(323138 call (partial) shape _mt[203] this[323087]) i[323109]))
          unknown call_tmp[946529] "expr temp" "maybe param" "maybe type" "temp"
          (946532 'move' call_tmp[946529](323133 call < call_tmp[946517] call_tmp[946524]))
          (708114 'move' tmp[708112](505057 call isTrue call_tmp[946529]))
          (708119 'move' tmp[708104](708116 '_paramFoldLogical' tmp[708105] tmp[708112]))
        }
        {
          (708124 'move' tmp[708104](708121 '_paramFoldLogical' tmp[708105] 0))
        }
        (323120 call &= res[323104] tmp[708104])
        (569923 'end of statement' res[323104] i[323109])
      }
      label _unused_continueLabel[323149]
      label _breakLabel[323148]
    }
    (633476 'move' ret[633470](633475 'coerce' res[323104] bool[19]))
    gotoReturn _end_contains[633468] _end_contains[633468]
    (569926 'end of statement' res[323104])
    label _end_contains[633468]
    (633472 return ret[633470])
  }
  { scopeless type
    bool[19]
  }
  function rect[323492](?).toString[323188](arg _mt[323192]:_MT[201], arg this[323190]:rect[323492](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[633482] "RVV" "temp"
    unknown call_tmp[946536] "maybe param" "maybe type" "temp"
    (946539 'move' call_tmp[946536](323210 call(323206 call (partial) dims _mt[203] this[323190])))
    const dms[323205] "dead at end of block" "const" "insert auto destroy"
    (654645 'init var' dms[323205] call_tmp[946536])
    (323212 'end of statement')
    unknown content[323214] "dead at end of block" "insert auto destroy"
    (654647 'init var' content[323214] "" string[244])
    (323218 'end of statement')
    {
      unknown i[323219] "dead at end of block" "index var" "insert auto destroy"
      (654649 'init var' i[323219] 0)
      (569928 'end of statement')
      unknown tmp[323255] "maybe param" "temp"
      unknown call_tmp[946543] "expr temp" "maybe param" "maybe type" "temp"
      (946546 'move' call_tmp[946543](323222 call rank _mt[203] this[323190]))
      unknown call_tmp[946548] "expr temp" "maybe param" "maybe type" "temp"
      (946551 'move' call_tmp[946548](323226 call chpl__nudgeHighBound call_tmp[946543]))
      (323267 'move' tmp[323255](323265 call chpl_compute_low_param_loop_bound 0 call_tmp[946548]))
      unknown tmp[323256] "maybe param" "temp"
      unknown call_tmp[946555] "expr temp" "maybe param" "maybe type" "temp"
      (946558 'move' call_tmp[946555](323274 call rank _mt[203] this[323190]))
      unknown call_tmp[946560] "expr temp" "maybe param" "maybe type" "temp"
      (946563 'move' call_tmp[946560](323272 call chpl__nudgeHighBound call_tmp[946555]))
      (323279 'move' tmp[323256](323277 call chpl_compute_high_param_loop_bound 0 call_tmp[946560]))
      unknown tmp[323257] "maybe param" "temp"
      (323282 'move' tmp[323257] 1)
      ParamForLoop[323284]
      { i[323219] tmp[323255] tmp[323256] tmp[323257]
        unknown tmp[708131] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[708132] "maybe param" "temp"
        unknown call_tmp[946565] "expr temp" "maybe param" "maybe type" "temp"
        (946568 'move' call_tmp[946565](323233 call > i[323219] 0))
        (708137 'move' tmp[708132](708135 call _cond_test call_tmp[946565]))
        if tmp[708132]
        {
          (708142 'move' tmp[708131](708139 '_paramFoldLogical' tmp[708132] ", %\?"))
        }
        {
          (708147 'move' tmp[708131](708144 '_paramFoldLogical' tmp[708132] "%\?"))
        }
        unknown call_tmp[946574] "expr temp" "maybe param" "maybe type" "temp"
        (946577 'move' call_tmp[946574](323252 call(323248 call (partial) shape _mt[203] this[323190]) i[323219]))
        unknown call_tmp[946579] "expr temp" "maybe param" "maybe type" "temp"
        (946582 'move' call_tmp[946579](323247 call(323244 call (partial) format _mt[203] tmp[708131]) call_tmp[946574]))
        (323230 call += content[323214] call_tmp[946579])
        (569929 'end of statement' content[323214] i[323219])
      }
      label _unused_continueLabel[323259]
      label _breakLabel[323258]
    }
    unknown call_tmp[946586] "expr temp" "maybe param" "maybe type" "temp"
    (946589 'move' call_tmp[946586](323311 call offset _mt[203] this[323190]))
    unknown call_tmp[946593] "expr temp" "maybe param" "maybe type" "temp"
    (946596 'move' call_tmp[946593](323317 call rank _mt[203] this[323190]))
    unknown call_tmp[946598] "expr temp" "maybe param" "maybe type" "temp"
    (946601 'move' call_tmp[946598](323316 call zeroTup call_tmp[946593]))
    unknown call_tmp[946603] "expr temp" "maybe param" "maybe type" "temp"
    (946606 'move' call_tmp[946603](323309 call != call_tmp[946586] call_tmp[946598]))
    unknown call_tmp[946608] "expr temp" "maybe param" "maybe type" "temp"
    (946611 'move' call_tmp[946608](323321 call _cond_test call_tmp[946603]))
    if call_tmp[946608]
    {
      unknown call_tmp[946617] "expr temp" "maybe param" "maybe type" "temp"
      (946620 'move' call_tmp[946617](323304 call offset _mt[203] this[323190]))
      unknown call_tmp[946622] "expr temp" "maybe param" "maybe type" "temp"
      (946625 'move' call_tmp[946622](323302 call(323299 call (partial) format _mt[203] "(%s) + %\?") content[323214] call_tmp[946617]))
      (323293 call = content[323214] call_tmp[946622])
      (569932 'end of statement' content[323214])
    }
    unknown call_tmp[946627] "expr temp" "maybe param" "maybe type" "temp"
    (946630 'move' call_tmp[946627](323329 call + "{ " content[323214]))
    unknown call_tmp[946632] "expr temp" "maybe param" "maybe type" "temp"
    (946635 'move' call_tmp[946632](323327 call + call_tmp[946627] " }"))
    (633487 'move' ret[633482](633486 'deref' call_tmp[946632]))
    gotoReturn _end_toString[633480] _end_toString[633480]
    (569934 'end of statement' content[323214])
    label _end_toString[633480]
    (633484 return ret[633482])
    (397119 'used modules list'(323196 'use' IO[208303])(323202 'use' FormattedIO[208298]))
  }
  function rect[323492](?).serialize[323340](arg _mt[323354]:_MT[201], arg this[323342]:rect[323492](?), arg writer[323349] :
  (323348 'typeof' stdout[196765]), ref arg serializer[323352]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[946637] "expr temp" "maybe param" "maybe type" "temp"
    (946640 'move' call_tmp[946637](323376 call == writer[323349] stdout[196765]))
    unknown call_tmp[946642] "expr temp" "maybe param" "maybe type" "temp"
    (946645 'move' call_tmp[946642](323383 call _cond_test call_tmp[946637]))
    if call_tmp[946642]
    {
      unknown call_tmp[946651] "expr temp" "maybe param" "maybe type" "temp"
      (946654 'move' call_tmp[946651](323368 call(323364 call (partial) toString _mt[203] this[323342])))
      (323361 call(323358 call (partial) write _mt[203] writer[323349]) call_tmp[946651])
    }
    {
      (323371 call halt "This should not happen.")
    }
    (633491 return _void[46])
    (323389 'referenced modules list' IO[208303])
  }
  function rect[323492](?).serialize[323393](arg _mt[323407]:_MT[201], arg this[323395]:rect[323492](?), arg writer[323402]:fileWriter[170987](?), ref arg serializer[323405]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[946658] "maybe param" "maybe type" "temp"
    (946661 'move' call_tmp[946658](323416 call(323413 call (partial) startRecord _mt[203] serializer[323405]) writer[323402] "rect" 5))
    unknown rh[323411] "dead at end of block" "insert auto destroy"
    (654651 'init var' rh[323411] call_tmp[946658])
    (323423 'end of statement')
    unknown call_tmp[946667] "expr temp" "maybe param" "maybe type" "temp"
    (946670 'move' call_tmp[946667](323432 call rank _mt[203] this[323395]))
    (323428 call(323425 call (partial) writeField _mt[203] rh[323411]) "rank" call_tmp[946667])
    (569938 'end of statement' rh[323411])
    unknown call_tmp[946676] "expr temp" "maybe param" "maybe type" "temp"
    (946679 'move' call_tmp[946676](323444 call shape _mt[203] this[323395]))
    (323440 call(323437 call (partial) writeField _mt[203] rh[323411]) "shape" call_tmp[946676])
    (569940 'end of statement' rh[323411])
    unknown call_tmp[946685] "expr temp" "maybe param" "maybe type" "temp"
    (946688 'move' call_tmp[946685](323456 call offset _mt[203] this[323395]))
    (323452 call(323449 call (partial) writeField _mt[203] rh[323411]) "offset" call_tmp[946685])
    (569942 'end of statement' rh[323411])
    unknown call_tmp[946694] "expr temp" "maybe param" "maybe type" "temp"
    (946697 'move' call_tmp[946694](323468 call strides _mt[203] this[323395]))
    (323464 call(323461 call (partial) writeField _mt[203] rh[323411]) "strides" call_tmp[946694])
    (569944 'end of statement' rh[323411])
    unknown call_tmp[946703] "expr temp" "maybe param" "maybe type" "temp"
    (946706 'move' call_tmp[946703](323480 call size _mt[203] this[323395]))
    (323476 call(323473 call (partial) writeField _mt[203] rh[323411]) "size" call_tmp[946703])
    (569946 'end of statement' rh[323411])
    (323488 call(323485 call (partial) endRecord _mt[203] rh[323411]))
    (569948 'end of statement' rh[323411])
    (633493 return _void[46])
  }
  type rect[323492](?) unknown rank[320969] "param" int(64)[10] unknown shape[320974](320975 call * rank[320969] int(64)[10]) unknown offset[320982](320983 call * rank[320969] int(64)[10]) val size[320990]:int(64)[10] int(64)[10] unknown strides[320995](320996 call * rank[320969] int(64)[10])
  function =[323494](ref arg me[323500]:rect[323492](?), const arg other[323506] :
  unknown call_tmp[946710] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "assignop" "inline" "operator" "no return value for void"
  {
    unknown call_tmp[946717] "expr temp" "maybe param" "maybe type" "temp"
    (946720 'move' call_tmp[946717](323513 call shape _mt[203] me[323500]))
    unknown call_tmp[946724] "expr temp" "maybe param" "maybe type" "temp"
    (946727 'move' call_tmp[946724](323517 call shape _mt[203] other[323506]))
    (323510 call = call_tmp[946717] call_tmp[946724])
    (569950 'end of statement')
    unknown call_tmp[946731] "expr temp" "maybe param" "maybe type" "temp"
    (946734 'move' call_tmp[946731](323523 call offset _mt[203] me[323500]))
    unknown call_tmp[946738] "expr temp" "maybe param" "maybe type" "temp"
    (946741 'move' call_tmp[946738](323527 call offset _mt[203] other[323506]))
    (323520 call = call_tmp[946731] call_tmp[946738])
    (569951 'end of statement')
    unknown call_tmp[946745] "expr temp" "maybe param" "maybe type" "temp"
    (946748 'move' call_tmp[946745](323533 call size _mt[203] me[323500]))
    unknown call_tmp[946752] "expr temp" "maybe param" "maybe type" "temp"
    (946755 'move' call_tmp[946752](323537 call size _mt[203] other[323506]))
    (323530 call = call_tmp[946745] call_tmp[946752])
    (569952 'end of statement')
    unknown call_tmp[946759] "expr temp" "maybe param" "maybe type" "temp"
    (946762 'move' call_tmp[946759](323543 call strides _mt[203] me[323500]))
    unknown call_tmp[946766] "expr temp" "maybe param" "maybe type" "temp"
    (946769 'move' call_tmp[946766](323547 call strides _mt[203] other[323506]))
    (323540 call = call_tmp[946759] call_tmp[946766])
    (633495 return _void[46])
  }
  function +[323552](const arg d[323558]:rect[323492](?), const arg offset[323565] :
  unknown call_tmp[946771] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "operator"
  {
    unknown ret[633499] "RVV" "temp"
    unknown call_tmp[946778] "expr temp" "maybe param" "maybe type" "temp"
    (946781 'move' call_tmp[946778](323577 call(323574 call (partial) translate _mt[203] d[323558]) offset[323565]))
    unknown call_tmp[946783] "expr temp" "maybe param" "maybe type" "temp"
    (946786 'move' call_tmp[946783](633505 'query' d[323558] 1))
    unknown call_tmp[946788] "expr temp" "maybe param" "maybe type" "temp"
    (946791 'move' call_tmp[946788](633504 call rect[323492](?) call_tmp[946783]))
    (633509 'move' ret[633499](633508 'coerce' call_tmp[946778] call_tmp[946788]))
    (633501 return ret[633499])
  }
  { scopeless type
    unknown call_tmp[946793] "expr temp" "maybe param" "maybe type" "temp"
    (946796 'move' call_tmp[946793](534864 'query' d[323558] 1))
    (323569 call rect[323492](?) call_tmp[946793])
  }
  function -[323582](const arg d[323588]:rect[323492](?), const arg offset[323595] :
  unknown call_tmp[946798] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "operator"
  {
    unknown ret[633513] "RVV" "temp"
    unknown call_tmp[946805] "expr temp" "maybe param" "maybe type" "temp"
    (946808 'move' call_tmp[946805](323608 call - offset[323595]))
    unknown call_tmp[946810] "expr temp" "maybe param" "maybe type" "temp"
    (946813 'move' call_tmp[946810](323607 call(323604 call (partial) translate _mt[203] d[323588]) call_tmp[946805]))
    unknown call_tmp[946815] "expr temp" "maybe param" "maybe type" "temp"
    (946818 'move' call_tmp[946815](633519 'query' d[323588] 1))
    unknown call_tmp[946820] "expr temp" "maybe param" "maybe type" "temp"
    (946823 'move' call_tmp[946820](633518 call rect[323492](?) call_tmp[946815]))
    (633523 'move' ret[633513](633522 'coerce' call_tmp[946810] call_tmp[946820]))
    (633515 return ret[633513])
  }
  { scopeless type
    unknown call_tmp[946825] "expr temp" "maybe param" "maybe type" "temp"
    (946828 'move' call_tmp[946825](534877 'query' d[323588] 1))
    (323599 call rect[323492](?) call_tmp[946825])
  }
  function &[323614](const arg a[323620]:rect[323492](?), const arg b[323626] :
  unknown call_tmp[946830] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "operator"
  {
    unknown ret[633527] "RVV" "temp"
    unknown call_tmp[946837] "expr temp" "maybe param" "maybe type" "temp"
    (946840 'move' call_tmp[946837](323638 call shape _mt[203] a[323620]))
    unknown call_tmp[946844] "expr temp" "maybe param" "maybe type" "temp"
    (946847 'move' call_tmp[946844](323642 call shape _mt[203] b[323626]))
    unknown call_tmp[946849] "maybe param" "maybe type" "temp"
    (946852 'move' call_tmp[946849](323636 call min call_tmp[946837] call_tmp[946844]))
    const shape[323634] "dead at end of block" "const" "insert auto destroy"
    (654653 'init var' shape[323634] call_tmp[946849])
    (323646 'end of statement')
    unknown call_tmp[946856] "expr temp" "maybe param" "maybe type" "temp"
    (946859 'move' call_tmp[946856](323652 call offset _mt[203] a[323620]))
    unknown call_tmp[946863] "expr temp" "maybe param" "maybe type" "temp"
    (946866 'move' call_tmp[946863](323656 call offset _mt[203] b[323626]))
    unknown call_tmp[946868] "maybe param" "maybe type" "temp"
    (946871 'move' call_tmp[946868](323650 call max call_tmp[946856] call_tmp[946863]))
    const offset[323648] "dead at end of block" "const" "insert auto destroy"
    (654655 'init var' offset[323648] call_tmp[946868])
    (323660 'end of statement')
    unknown call_tmp[946873] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (946876 'move' call_tmp[946873](1000536 'new' rect[323492](?) shape[323634] offset[323648]))
    unknown call_tmp[946878] "expr temp" "maybe param" "maybe type" "temp"
    (946881 'move' call_tmp[946878](633533 'query' a[323620] 1))
    unknown call_tmp[946883] "expr temp" "maybe param" "maybe type" "temp"
    (946886 'move' call_tmp[946883](633532 call rect[323492](?) call_tmp[946878]))
    (633537 'move' ret[633527](633536 'coerce' call_tmp[946873] call_tmp[946883]))
    gotoReturn _end_&[633525] _end_&[633525]
    (569956 'end of statement' shape[323634] offset[323648])
    label _end_&[633525]
    (633529 return ret[633527])
  }
  { scopeless type
    unknown call_tmp[946888] "expr temp" "maybe param" "maybe type" "temp"
    (946891 'move' call_tmp[946888](534890 'query' a[323620] 1))
    (323630 call rect[323492](?) call_tmp[946888])
  }
  function computeBlocks[323670](arg shape[323677]:_tuple[246](?)) : _unknown[42] "compiler added where" "inline"
  {
    unknown ret[633543] "RVV" "temp"
    unknown blks[323686] "dead at end of block" "insert auto destroy"
    unknown call_tmp[946893] "expr temp" "maybe param" "maybe type" "temp"
    (946896 'move' call_tmp[946893](534906 'query' shape[323677] 1))
    unknown call_tmp[946898] "expr temp" "maybe param" "maybe type" "temp"
    (946901 'move' call_tmp[946898](323687 call * call_tmp[946893] int(64)[10]))
    (654657 'default init var' blks[323686] call_tmp[946898])
    (323692 'end of statement')
    {
      unknown j[323693] "dead at end of block" "index var" "insert auto destroy"
      (654659 'init var' j[323693] 0)
      (569959 'end of statement')
      unknown tmp[323753] "maybe param" "temp"
      unknown call_tmp[946903] "expr temp" "maybe param" "maybe type" "temp"
      (946906 'move' call_tmp[946903](534909 'query' shape[323677] 1))
      unknown call_tmp[946908] "expr temp" "maybe param" "maybe type" "temp"
      (946911 'move' call_tmp[946908](323697 call chpl__nudgeHighBound call_tmp[946903]))
      (323765 'move' tmp[323753](323763 call chpl_compute_low_param_loop_bound 0 call_tmp[946908]))
      unknown tmp[323754] "maybe param" "temp"
      unknown call_tmp[946913] "expr temp" "maybe param" "maybe type" "temp"
      (946916 'move' call_tmp[946913](534912 'query' shape[323677] 1))
      unknown call_tmp[946918] "expr temp" "maybe param" "maybe type" "temp"
      (946921 'move' call_tmp[946918](323770 call chpl__nudgeHighBound call_tmp[946913]))
      (323774 'move' tmp[323754](323772 call chpl_compute_high_param_loop_bound 0 call_tmp[946918]))
      unknown tmp[323755] "maybe param" "temp"
      (323777 'move' tmp[323755] 1)
      ParamForLoop[323779]
      { j[323693] tmp[323753] tmp[323754] tmp[323755]
        {
          unknown call_tmp[946923] "expr temp" "maybe param" "maybe type" "temp"
          (946926 'move' call_tmp[946923](534915 'query' shape[323677] 1))
          unknown call_tmp[946928] "expr temp" "maybe param" "maybe type" "temp"
          (946931 'move' call_tmp[946928](323706 call - call_tmp[946923] j[323693]))
          unknown call_tmp[946933] "maybe param" "maybe type" "temp"
          (946936 'move' call_tmp[946933](323704 call - call_tmp[946928] 1))
          unknown i[323703] "dead at end of block" "param"
          (654661 'init var' i[323703] call_tmp[946933])
          (323712 'end of statement' j[323693])
          unknown call_tmp[946938] "expr temp" "maybe param" "maybe type" "temp"
          (946941 'move' call_tmp[946938](534918 'query' shape[323677] 1))
          unknown call_tmp[946943] "expr temp" "maybe param" "maybe type" "temp"
          (946946 'move' call_tmp[946943](323743 call - call_tmp[946938] 1))
          unknown call_tmp[946948] "expr temp" "maybe param" "maybe type" "temp"
          (946951 'move' call_tmp[946948](323740 call == i[323703] call_tmp[946943]))
          unknown call_tmp[946953] "expr temp" "maybe param" "maybe type" "temp"
          (946956 'move' call_tmp[946953](323747 call _cond_test call_tmp[946948]))
          if call_tmp[946953]
          {
            unknown call_tmp[946958] "expr temp" "maybe param" "maybe type" "temp"
            (946961 'move' call_tmp[946958](323716 call blks[323686] i[323703]))
            (323713 call = call_tmp[946958] 1)
            (569961 'end of statement' blks[323686])
          }
          {
            unknown call_tmp[946963] "expr temp" "maybe param" "maybe type" "temp"
            (946966 'move' call_tmp[946963](323723 call blks[323686] i[323703]))
            unknown call_tmp[946968] "expr temp" "maybe param" "maybe type" "temp"
            (946971 'move' call_tmp[946968](323729 call + i[323703] 1))
            unknown call_tmp[946973] "expr temp" "maybe param" "maybe type" "temp"
            (946976 'move' call_tmp[946973](323728 call shape[323677] call_tmp[946968]))
            unknown call_tmp[946978] "expr temp" "maybe param" "maybe type" "temp"
            (946981 'move' call_tmp[946978](323735 call + i[323703] 1))
            unknown call_tmp[946983] "expr temp" "maybe param" "maybe type" "temp"
            (946986 'move' call_tmp[946983](323734 call blks[323686] call_tmp[946978]))
            unknown call_tmp[946988] "expr temp" "maybe param" "maybe type" "temp"
            (946991 'move' call_tmp[946988](323725 call * call_tmp[946973] call_tmp[946983]))
            (323720 call = call_tmp[946963] call_tmp[946988])
            (569963 'end of statement' blks[323686])
          }
        }
      }
      label _unused_continueLabel[323757]
      label _breakLabel[323756]
    }
    unknown call_tmp[946993] "expr temp" "maybe param" "maybe type" "temp"
    (946996 'move' call_tmp[946993](633549 'query' shape[323677] 1))
    unknown call_tmp[946998] "expr temp" "maybe param" "maybe type" "temp"
    (947001 'move' call_tmp[946998](633548 call * call_tmp[946993] int(64)[10]))
    (633554 'move' ret[633543](633553 'coerce' blks[323686] call_tmp[946998]))
    gotoReturn _end_computeBlocks[633541] _end_computeBlocks[633541]
    (569965 'end of statement' blks[323686])
    label _end_computeBlocks[633541]
    (633545 return ret[633543])
  }
  where {
    unknown call_tmp[947003] "expr temp" "maybe param" "maybe type" "temp"
    (947006 'move' call_tmp[947003](534896 'is star tuple type' shape[323677]))
    unknown call_tmp[947008] "expr temp" "maybe param" "maybe type" "temp"
    (947011 'move' call_tmp[947008](534899 call & 1 call_tmp[947003]))
    unknown call_tmp[947013] "expr temp" "maybe param" "maybe type" "temp"
    (947016 'move' call_tmp[947013](534924 'query' shape[323677] 2))
    unknown call_tmp[947018] "expr temp" "maybe param" "maybe type" "temp"
    (947021 'move' call_tmp[947018](534928 call == int(64)[10] call_tmp[947013]))
    (534930 call & call_tmp[947008] call_tmp[947018])
  }
  { scopeless type
    unknown call_tmp[947023] "expr temp" "maybe param" "maybe type" "temp"
    (947026 'move' call_tmp[947023](534921 'query' shape[323677] 1))
    (323680 call * call_tmp[947023] int(64)[10])
  }
  function wrap[323793](arg x[323796]:int(64)[10]) : _unknown[42] "inline"
  {
    unknown ret[633560] "RVV" "temp"
    unknown call_tmp[947028] "expr temp" "maybe param" "maybe type" "temp"
    (947031 'move' call_tmp[947028](323807 call _build_tuple x[323796]))
    unknown call_tmp[947033] "expr temp" "maybe param" "maybe type" "temp"
    (947036 'move' call_tmp[947033](633565 call * 1 int(64)[10]))
    (633569 'move' ret[633560](633568 'coerce' call_tmp[947028] call_tmp[947033]))
    (633562 return ret[633560])
  }
  { scopeless type
    (323799 call * 1 int(64)[10])
  }
  function wrap[323812](arg tup[323819]:_tuple[246](?)) : _unknown[42] "compiler added where" "inline"
  {
    unknown ret[633573] "RVV" "temp"
    unknown call_tmp[947038] "expr temp" "maybe param" "maybe type" "temp"
    (947041 'move' call_tmp[947038](633579 'query' tup[323819] 1))
    unknown call_tmp[947043] "expr temp" "maybe param" "maybe type" "temp"
    (947046 'move' call_tmp[947043](633578 call * call_tmp[947038] int(64)[10]))
    (633584 'move' ret[633573](633583 'coerce' tup[323819] call_tmp[947043]))
    (633575 return ret[633573])
  }
  where {
    unknown call_tmp[947048] "expr temp" "maybe param" "maybe type" "temp"
    (947051 'move' call_tmp[947048](534936 'is star tuple type' tup[323819]))
    unknown call_tmp[947053] "expr temp" "maybe param" "maybe type" "temp"
    (947056 'move' call_tmp[947053](534939 call & 1 call_tmp[947048]))
    unknown call_tmp[947058] "expr temp" "maybe param" "maybe type" "temp"
    (947061 'move' call_tmp[947058](534949 'query' tup[323819] 2))
    unknown call_tmp[947063] "expr temp" "maybe param" "maybe type" "temp"
    (947066 'move' call_tmp[947063](534953 call == int(64)[10] call_tmp[947058]))
    (534955 call & call_tmp[947053] call_tmp[947063])
  }
  { scopeless type
    unknown call_tmp[947068] "expr temp" "maybe param" "maybe type" "temp"
    (947071 'move' call_tmp[947068](534946 'query' tup[323819] 1))
    (323822 call * call_tmp[947068] int(64)[10])
  }
  function unwrap[323832](arg tup[323839]:_tuple[246](?)) : _unknown[42] "compiler added where" "inline"
  {
    unknown ret[633588] "RVV" "temp"
    unknown call_tmp[947073] "expr temp" "maybe param" "maybe type" "temp"
    (947076 'move' call_tmp[947073](534971 'query' tup[323839] 1))
    unknown call_tmp[947078] "expr temp" "maybe param" "maybe type" "temp"
    (947081 'move' call_tmp[947078](323851 call == call_tmp[947073] 1))
    unknown call_tmp[947083] "expr temp" "maybe param" "maybe type" "temp"
    (947086 'move' call_tmp[947083](323855 call _cond_test call_tmp[947078]))
    if call_tmp[947083]
    {
      unknown call_tmp[947088] "expr temp" "maybe param" "maybe type" "temp"
      (947091 'move' call_tmp[947088](323845 call tup[323839] 0))
      (633593 'move' ret[633588](633592 'deref' call_tmp[947088]))
      gotoReturn _end_unwrap[633586] _end_unwrap[633586]
    }
    {
      (633598 'move' ret[633588](633597 'deref' tup[323839]))
      gotoReturn _end_unwrap[633586] _end_unwrap[633586]
    }
    label _end_unwrap[633586]
    (633590 return ret[633588])
  }
  where {
    unknown call_tmp[947093] "expr temp" "maybe param" "maybe type" "temp"
    (947096 'move' call_tmp[947093](534961 'is star tuple type' tup[323839]))
    unknown call_tmp[947098] "expr temp" "maybe param" "maybe type" "temp"
    (947101 'move' call_tmp[947098](534964 call & 1 call_tmp[947093]))
    unknown call_tmp[947103] "expr temp" "maybe param" "maybe type" "temp"
    (947106 'move' call_tmp[947103](534974 'query' tup[323839] 2))
    unknown call_tmp[947108] "expr temp" "maybe param" "maybe type" "temp"
    (947111 'move' call_tmp[947108](534978 call == int(64)[10] call_tmp[947103]))
    (534980 call & call_tmp[947098] call_tmp[947108])
  }
  function isTupleOfOrder[323863](param arg order[323866]:int(64)[10], arg tup[323871]:_any[141](?)) param : _unknown[42] "inline"
  {
    unknown ret[633632] "RVV" "param" "temp"
    unknown call_tmp[947113] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (947116 'move' call_tmp[947113](534984 'typeof' tup[323871]))
    unknown call_tmp[947118] "expr temp" "maybe param" "maybe type" "temp"
    (947121 'move' call_tmp[947118](323882 call isTuple call_tmp[947113]))
    unknown call_tmp[947123] "expr temp" "maybe param" "maybe type" "temp"
    (947126 'move' call_tmp[947123](323879 call ! call_tmp[947118]))
    unknown call_tmp[947128] "expr temp" "maybe param" "maybe type" "temp"
    (947131 'move' call_tmp[947128](323884 call _cond_test call_tmp[947123]))
    if call_tmp[947128]
    {
      (633638 'move' ret[633632](633637 'coerce' 0 bool[19]))
      gotoReturn _end_isTupleOfOrder[633630] _end_isTupleOfOrder[633630]
    }
    function isTupleOfOrderHelp[323889](param arg level[323892]:int(64)[10], arg tup[323897]:_any[141](?)) param : _unknown[42] "inline"
    {
      unknown ret[633604] "RVV" "param" "temp"
      unknown call_tmp[947133] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (947136 'move' call_tmp[947133](534986 'typeof' tup[323897]))
      unknown call_tmp[947138] "expr temp" "maybe param" "maybe type" "temp"
      (947141 'move' call_tmp[947138](323911 call isTuple call_tmp[947133]))
      unknown call_tmp[947143] "expr temp" "maybe param" "maybe type" "temp"
      (947146 'move' call_tmp[947143](323908 call ! call_tmp[947138]))
      unknown call_tmp[947148] "expr temp" "maybe param" "maybe type" "temp"
      (947151 'move' call_tmp[947148](323913 call _cond_test call_tmp[947143]))
      if call_tmp[947148]
      {
        unknown call_tmp[947153] "expr temp" "maybe param" "maybe type" "temp"
        (947156 'move' call_tmp[947153](323903 call == level[323892] 0))
        (633610 'move' ret[633604](633609 'coerce' call_tmp[947153] bool[19]))
        gotoReturn _end_isTupleOfOrderHelp[633602] _end_isTupleOfOrderHelp[633602]
      }
      unknown call_tmp[947158] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (947161 'move' call_tmp[947158](534988 'typeof' tup[323897]))
      unknown call_tmp[947163] "expr temp" "maybe param" "maybe type" "temp"
      (947166 'move' call_tmp[947163](323932 call isHomogeneousTuple call_tmp[947158]))
      unknown call_tmp[947168] "expr temp" "maybe param" "maybe type" "temp"
      (947171 'move' call_tmp[947168](323929 call ! call_tmp[947163]))
      unknown call_tmp[947173] "expr temp" "maybe param" "maybe type" "temp"
      (947176 'move' call_tmp[947173](323934 call _cond_test call_tmp[947168]))
      if call_tmp[947173]
      {
        unknown call_tmp[947178] "expr temp" "maybe param" "maybe type" "temp"
        (947181 'move' call_tmp[947178](323921 call - level[323892] 1))
        unknown call_tmp[947183] "expr temp" "maybe param" "maybe type" "temp"
        (947186 'move' call_tmp[947183](323926 call tup[323897] 0))
        unknown call_tmp[947188] "expr temp" "maybe param" "maybe type" "temp"
        (947191 'move' call_tmp[947188](323920 call isTupleOfOrderHelp call_tmp[947178] call_tmp[947183]))
        (633616 'move' ret[633604](633615 'coerce' call_tmp[947188] bool[19]))
        gotoReturn _end_isTupleOfOrderHelp[633602] _end_isTupleOfOrderHelp[633602]
      }
      {
        unknown i[323939] "dead at end of block" "index var" "insert auto destroy"
        (654663 'init var' i[323939] 0)
        (569974 'end of statement')
        unknown tmp[323969] "maybe param" "temp"
        unknown call_tmp[947195] "expr temp" "maybe param" "maybe type" "temp"
        (947198 'move' call_tmp[947195](323943 call size _mt[203] tup[323897]))
        unknown call_tmp[947200] "expr temp" "maybe param" "maybe type" "temp"
        (947203 'move' call_tmp[947200](323946 call chpl__nudgeHighBound call_tmp[947195]))
        (323981 'move' tmp[323969](323979 call chpl_compute_low_param_loop_bound 0 call_tmp[947200]))
        unknown tmp[323970] "maybe param" "temp"
        unknown call_tmp[947207] "expr temp" "maybe param" "maybe type" "temp"
        (947210 'move' call_tmp[947207](323988 call size _mt[203] tup[323897]))
        unknown call_tmp[947212] "expr temp" "maybe param" "maybe type" "temp"
        (947215 'move' call_tmp[947212](323986 call chpl__nudgeHighBound call_tmp[947207]))
        (323993 'move' tmp[323970](323991 call chpl_compute_high_param_loop_bound 0 call_tmp[947212]))
        unknown tmp[323971] "maybe param" "temp"
        (323996 'move' tmp[323971] 1)
        ParamForLoop[323998]
        { i[323939] tmp[323969] tmp[323970] tmp[323971]
          unknown call_tmp[947217] "expr temp" "maybe param" "maybe type" "temp"
          (947220 'move' call_tmp[947217](323957 call - level[323892] 1))
          unknown call_tmp[947222] "expr temp" "maybe param" "maybe type" "temp"
          (947225 'move' call_tmp[947222](323962 call tup[323897] i[323939]))
          unknown call_tmp[947227] "expr temp" "maybe param" "maybe type" "temp"
          (947230 'move' call_tmp[947227](323956 call isTupleOfOrderHelp call_tmp[947217] call_tmp[947222]))
          unknown call_tmp[947232] "expr temp" "maybe param" "maybe type" "temp"
          (947235 'move' call_tmp[947232](323953 call ! call_tmp[947227]))
          unknown call_tmp[947237] "expr temp" "maybe param" "maybe type" "temp"
          (947240 'move' call_tmp[947237](323964 call _cond_test call_tmp[947232]))
          if call_tmp[947237]
          {
            (633622 'move' ret[633604](633621 'coerce' 0 bool[19]))
            gotoReturn _end_isTupleOfOrderHelp[633602] _end_isTupleOfOrderHelp[633602]
          }
        }
        label _unused_continueLabel[323973]
        label _breakLabel[323972]
      }
      (633628 'move' ret[633604](633627 'coerce' 1 bool[19]))
      label _end_isTupleOfOrderHelp[633602]
      (633606 return ret[633604])
    }
    { scopeless type
      bool[19]
    }
    unknown call_tmp[947242] "expr temp" "maybe param" "maybe type" "temp"
    (947245 'move' call_tmp[947242](324014 call isTupleOfOrderHelp order[323866] tup[323871]))
    (633644 'move' ret[633632](633643 'coerce' call_tmp[947242] bool[19]))
    label _end_isTupleOfOrder[633630]
    (633634 return ret[633632])
  }
  { scopeless type
    bool[19]
  }
  function |serializable[475337]() : _unknown[42] "ImplementsStmt wrapper"
  { serializable[310094] rect[323492](?)
    {
    }
    (633648 return _void[46])
  }
  (397111 'used modules list'(387070 'use' ChapelStandard[315387])(320402 'import' Utilities[320397] 'as' util)(320404 'use' IO[208303]))
}
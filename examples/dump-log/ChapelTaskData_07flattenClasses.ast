AST dump for ChapelTaskData after pass flattenClasses.
Module use list: ChapelStandard CTypes POSIX 

{
  const chpl_offset_endCount[51231] "const" "private"(51232 call : 0 c_size_t[614])
  (51237 'end of statement')
  const chpl_offset_serial[51239] "const" "private"(51241 call sizeof_endcount_ptr)
  (51243 'end of statement')
  const chpl_offset_nextCoStmtSerial[51245] "const" "private"(51246 call + chpl_offset_serial[51239] 1)
  (51251 'end of statement')
  const chpl_offset_commDiagsTemporarilyDisabled[51253] "const" "private"(51254 call + chpl_offset_nextCoStmtSerial[51245] 1)
  (51259 'end of statement')
  const chpl_offset_end[51261] "const" "private"(51262 call + chpl_offset_commDiagsTemporarilyDisabled[51253] 1)
  (51267 'end of statement')
  function sizeof_endcount_ptr[51268]() : _unknown[42] "private"
  {
    (51271 return(51272 call +(51275 call c_sizeof chpl_localeID_t[306449])(51278 call c_sizeof(51280 call c_ptr[46891](?) void[4]))))
  }
  function chpl_task_data_setDynamicEndCount[51284](arg tls[51289] :
  (51287 call c_ptr[46891](?) chpl_task_infoChapel_t[135029]), arg end[51293] :
  _remoteEndCountType[69265]) : _unknown[42] "no return value for void"
  {
    unknown prv[51298](51299 call : tls[51289](51303 call c_ptr[46891](?) c_uchar[576]))
    (51306 'end of statement')
    unknown i[51308] c_size_t[614]
    (51311 'end of statement')
    unknown loc[51313](51314 '_wide_get_locale' end[51293])
    (51317 'end of statement')
    unknown adr[51319](51320 '_wide_get_addr' end[51293])
    (51323 'end of statement')
    (51324 call = i[51308] chpl_offset_endCount[51231])
    (51329 call memcpy(51331 call c_ptrTo(51333 call prv[51298] i[51308]))(51336 call c_ptrTo loc[51313])(51339 call c_sizeof chpl_localeID_t[306449]))
    (51341 call += i[51308](51345 call c_sizeof chpl_localeID_t[306449]))
    (51348 call memcpy(51350 call c_ptrTo(51352 call prv[51298] i[51308]))(51355 call c_ptrTo adr[51319])(51358 call c_sizeof(51360 call c_ptr[46891](?) void[4])))
  }
  function chpl_task_data_getDynamicEndCount[51364](arg tls[51369] :
  (51367 call c_ptr[46891](?) chpl_task_infoChapel_t[135029])) : _unknown[42]
  {
    unknown prv[51374](51375 call : tls[51369](51379 call c_ptr[46891](?) c_uchar[576]))
    (51382 'end of statement')
    unknown i[51384] c_size_t[614]
    (51387 'end of statement')
    unknown loc[51389] chpl_localeID_t[306449]
    (51392 'end of statement')
    unknown adr[51394](51396 call c_ptr[46891](?) void[4])
    (51399 'end of statement')
    (51400 call = i[51384] chpl_offset_endCount[51231])
    (51405 call memcpy(51407 call c_ptrTo loc[51389])(51410 call c_ptrTo(51412 call prv[51374] i[51384]))(51415 call c_sizeof chpl_localeID_t[306449]))
    (51417 call += i[51384](51421 call c_sizeof chpl_localeID_t[306449]))
    (51424 call memcpy(51426 call c_ptrTo adr[51394])(51429 call c_ptrTo(51431 call prv[51374] i[51384]))(51434 call c_sizeof(51436 call c_ptr[46891](?) void[4])))
    unknown ret[51439](51440 '_wide_make' _remoteEndCountType[69265] loc[51389] adr[51394])
    (51445 'end of statement')
    (51446 return ret[51439])
  }
  function chpl_task_data_setSerial[51450](arg tls[51455] :
  (51453 call c_ptr[46891](?) chpl_task_infoChapel_t[135029]), arg makeSerial[51459] :
  bool[19]) : _unknown[42] "no return value for void"
  {
    unknown prv[51465](51466 call : tls[51455](51470 call c_ptr[46891](?) c_uchar[576]))
    (51473 'end of statement')
    unknown i[51475] chpl_offset_serial[51239]
    (51478 'end of statement')
    unknown v[51480] 0(51482 call uint(64)[86] 8)
    (51486 'end of statement')
    if(51493 call _cond_test makeSerial[51459])
    {
      (51487 call = v[51480] 1)
    }
    (51499 call memcpy(51501 call c_ptrTo(51503 call prv[51465] i[51475]))(51506 call c_ptrTo v[51480])(51509 call c_sizeof(51511 call uint(64)[86] 8)))
  }
  { scopeless type
    void[4]
  }
  function chpl_task_data_getSerial[51516](arg tls[51521] :
  (51519 call c_ptr[46891](?) chpl_task_infoChapel_t[135029])) : _unknown[42]
  {
    unknown prv[51527](51528 call : tls[51521](51532 call c_ptr[46891](?) c_uchar[576]))
    (51535 'end of statement')
    unknown i[51537] chpl_offset_serial[51239]
    (51540 'end of statement')
    unknown v[51542] 0(51544 call uint(64)[86] 8)
    (51548 'end of statement')
    (51550 call memcpy(51552 call c_ptrTo v[51542])(51555 call c_ptrTo(51557 call prv[51527] i[51537]))(51560 call c_sizeof(51562 call uint(64)[86] 8)))
    if(51578 call _cond_test 1)
    {
      (51565 call assert(51566 call ||(51568 call == v[51542] 0)(51572 call == v[51542] 1)))
    }
    (51583 return(51584 call == v[51542] 1))
  }
  { scopeless type
    bool[19]
  }
  function chpl_task_data_setNextCoStmtSerial[51591](arg tls[51596] :
  (51594 call c_ptr[46891](?) chpl_task_infoChapel_t[135029]), arg makeSerial[51600] :
  bool[19]) : _unknown[42] "no return value for void"
  {
    unknown prv[51606](51607 call : tls[51596](51611 call c_ptr[46891](?) c_uchar[576]))
    (51614 'end of statement')
    unknown i[51616] chpl_offset_nextCoStmtSerial[51245]
    (51619 'end of statement')
    unknown v[51621] 0(51623 call uint(64)[86] 8)
    (51627 'end of statement')
    if(51634 call _cond_test makeSerial[51600])
    {
      (51628 call = v[51621] 1)
    }
    (51640 call memcpy(51642 call c_ptrTo(51644 call prv[51606] i[51616]))(51647 call c_ptrTo v[51621])(51650 call c_sizeof(51652 call uint(64)[86] 8)))
  }
  { scopeless type
    void[4]
  }
  function chpl_task_data_getNextCoStmtSerial[51657](arg tls[51662] :
  (51660 call c_ptr[46891](?) chpl_task_infoChapel_t[135029])) : _unknown[42]
  {
    unknown prv[51668](51669 call : tls[51662](51673 call c_ptr[46891](?) c_uchar[576]))
    (51676 'end of statement')
    unknown i[51678] chpl_offset_nextCoStmtSerial[51245]
    (51681 'end of statement')
    unknown v[51683] 0(51685 call uint(64)[86] 8)
    (51689 'end of statement')
    (51691 call memcpy(51693 call c_ptrTo v[51683])(51696 call c_ptrTo(51698 call prv[51668] i[51678]))(51701 call c_sizeof(51703 call uint(64)[86] 8)))
    if(51719 call _cond_test 1)
    {
      (51706 call assert(51707 call ||(51709 call == v[51683] 0)(51713 call == v[51683] 1)))
    }
    (51724 return(51725 call == v[51683] 1))
  }
  { scopeless type
    bool[19]
  }
  function chpl_task_data_setCommDiagsTemporarilyDisabled[51732](arg tls[51737] :
  (51735 call c_ptr[46891](?) chpl_task_infoChapel_t[135029]), arg disabled[51741] :
  bool[19]) : _unknown[42]
  {
    unknown ret[51747](51749 call chpl_task_data_getCommDiagsTemporarilyDisabled tls[51737])
    (51752 'end of statement')
    unknown prv[51754](51755 call : tls[51737](51759 call c_ptr[46891](?) c_uchar[576]))
    (51762 'end of statement')
    unknown i[51764] chpl_offset_commDiagsTemporarilyDisabled[51253]
    (51767 'end of statement')
    unknown v[51769] 0(51771 call uint(64)[86] 8)
    (51775 'end of statement')
    if(51782 call _cond_test disabled[51741])
    {
      (51776 call = v[51769] 1)
    }
    (51788 call memcpy(51790 call c_ptrTo(51792 call prv[51754] i[51764]))(51795 call c_ptrTo v[51769])(51798 call c_sizeof(51800 call uint(64)[86] 8)))
    (51802 return ret[51747])
  }
  { scopeless type
    bool[19]
  }
  function chpl_task_data_getCommDiagsTemporarilyDisabled[51807](arg tls[51812] :
  (51810 call c_ptr[46891](?) chpl_task_infoChapel_t[135029])) : _unknown[42]
  {
    unknown prv[51818](51819 call : tls[51812](51823 call c_ptr[46891](?) c_uchar[576]))
    (51826 'end of statement')
    unknown i[51828] chpl_offset_commDiagsTemporarilyDisabled[51253]
    (51831 'end of statement')
    unknown v[51833] 0(51835 call uint(64)[86] 8)
    (51839 'end of statement')
    (51841 call memcpy(51843 call c_ptrTo v[51833])(51846 call c_ptrTo(51848 call prv[51818] i[51828]))(51851 call c_sizeof(51853 call uint(64)[86] 8)))
    if(51869 call _cond_test 1)
    {
      (51856 call assert(51857 call ||(51859 call == v[51833] 0)(51863 call == v[51833] 1)))
    }
    (51874 return(51875 call == v[51833] 1))
  }
  { scopeless type
    bool[19]
  }
  function chpl_task_setDynamicEndCount[51882](arg end[51885] :
  _remoteEndCountType[69265]) : _unknown[42] "no return value for void"
  {
    (51890 call chpl_task_data_setDynamicEndCount(51892 call chpl_task_getInfoChapel) end[51885])
  }
  function chpl_task_getDynamicEndCount[51896]() : _unknown[42]
  {
    (51900 return(51902 call chpl_task_data_getDynamicEndCount(51904 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    _remoteEndCountType[69265]
  }
  function chpl_task_setSerial[51908](arg makeSerial[51911] :
  bool[19]) : _unknown[42] "export" "local args" "no return value for void"
  {
    (51917 call chpl_task_data_setSerial(51919 call chpl_task_getInfoChapel) makeSerial[51911])
  }
  { scopeless type
    void[4]
  }
  function chpl_task_getSerial[51924]() : _unknown[42] "export" "local args"
  {
    (51928 return(51930 call chpl_task_data_getSerial(51932 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    bool[19]
  }
  function chpl_task_setCommDiagsTemporarilyDisabled[51936](arg disabled[51939] :
  bool[19]) : _unknown[42] "export" "local args"
  {
    (51944 return(51946 call chpl_task_data_setCommDiagsTemporarilyDisabled(51948 call chpl_task_getInfoChapel) disabled[51939]))
  }
  { scopeless type
    bool[19]
  }
  function chpl_task_getCommDiagsTemporarilyDisabled[51953]() : _unknown[42] "export" "local args"
  {
    (51957 return(51959 call chpl_task_data_getCommDiagsTemporarilyDisabled(51961 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    bool[19]
  }
  {
    (51967 call assert(51968 call <= chpl_offset_end[51261](51972 call c_sizeof chpl_task_infoChapel_t[135029])))
  }
  (396050 'used modules list'(51226 'use' ChapelStandard[315387])(51228 'use' CTypes[51217])(51229 'use' POSIX[12822]))
}
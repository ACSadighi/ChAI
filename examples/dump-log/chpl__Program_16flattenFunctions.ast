AST dump for chpl__Program after pass flattenFunctions.
Module use list: 

{
  def module ChapelStringLiterals[251]  
  def module ChapelBase[77907]  
  def module ChapelStandard[315387]  
  def module PrintModuleInitOrder[386981]  
  def module ChapelSysCTypes[826]  
  def module Errors[88218]  
  def module HaltWrappers[518]  
  def module Reflection[1804]  
  def module AutoMath[4943]  
  def module Math[10521]  
  def module OS[15571]  
  def module CString[16534]  
  def module StringCasts[18362]  
  def module String[29578]  
  def module ChplConfig[29952]  
  def module Communication[30185]  
  def module ByteBufferHelpers[31230]  
  def module BytesCasts[32924]  
  def module Bytes[37887]  
  def module BytesStringCommon[46748]  
  def module CTypes[51217]  
  def module ChapelTaskData[51974]  
  def module CommDiagnostics[78994]  
  def module startInitCommDiags[79019]  
  def module OwnedObject[80948]  
  def module MemConsistency[81470]  
  def module Atomics[85230]  
  def module ChapelLocks[85420]  
  def module WeakPointer[89444]  
  def module SharedObject[91782]  
  def module NetworkAtomics[91835]  
  def module NetworkAtomicTypes[91838]  
  def module AtomicsCommon[92035]  
  def module ChapelIteratorSupport[94309]  
  def module ChapelThreads[94327]  
  def module DSIUtil[99447]  
  def module ChapelTuple[106204]  
  def module ChapelIOStringifyHelper[106720]  
  def module ChapelDebugPrint[107066]  
  def module ChapelRange[129915]  
  def module ChapelReduce[131971]  
  def module ChapelSyncvar[134549]  
  def module SyncVarRuntimeSupport[134806]  
  def module AlignedTSupport[135010]  
  def module ChapelTaskDataHelp[135153]  
  def module ChapelLocale[137388]  
  def module ArrayViewSlice[138924]  
  def module ArrayViewRankChange[143254]  
  def module ArrayViewReindex[147214]  
  def module ChapelPrivatization[147262]  
  def module ChapelArrayViewElision[149516]  
  def module ChapelIO[153594]  
  def module Regex[158724]  
  def module PrecisionSerializer[159849]  
  def module Types[164047]  
  def module IO[208303]  
  def module MemMove[209934]  
  def module ChapelDomain[225833]  
  def module List[232161]  
  def module Sort[247204]  
  def module ChapelShortArrayTransfer[247436]  
  def module ChapelArray[264652]  
  def module ChapelHashtable[267646]  
  def module ChapelDistribution[273773]  
  def module RangeChunk[275188]  
  def module Search[275940]  
  def module DefaultSparse[279711]  
  def module ChapelHashing[280584]  
  def module DefaultAssociative[286494]  
  def module ExternalArray[287575]  
  def module DefaultRectangular[304994]  
  def module ChapelNumLocales[305012]  
  def module LocaleModelHelpSetup[306439]  
  def module LocaleModelHelpRuntime[306863]  
  def module LocaleModelHelpFlat[307135]  
  def module Allocators[308289]  
  def module LocaleModelHelpMem[308719]  
  def module LocaleModel[309563]  
  def module LocalesArray[309598]  
  def module ChapelAutoLocalAccess[310059]  
  def module ChapelIOSerialize[310097]  
  def module ChapelTaskID[310188]  
  def module ChapelTaskTable[310267]  
  def module MemTracking[310565]  
  def module ChapelUtil[311516]  
  def module ChapelSerializedBroadcast[311743]  
  def module ExportWrappers[312090]  
  def module CopyAggregation[313662]  
  def module AggregationPrimitives[314392]  
  def module ChapelAutoAggregation[314557]  
  def module ChapelGpuSupport[314560]  
  def module ChapelContext[314664]  
  def module ChapelStaticVars[314950]  
  def module ChapelRemoteVars[315205]  
  def module stopInitCommDiags[315236]  
  def module Remote[316227]  
  def module Utilities[320397]  
  def module SimpleDomain[324020]  
  def module NDArray[333437]  
  def module Autograd[338449]  
  def module GpuDiagnostics[339078]  
  def module StaticTensor[343686]  
  def module LoadNumpy[344512]  
  def module DynamicTensor[348676]  
  def module Tensor[348703]  
  def module Map[352858]  
  def module OrderedDict[353405]  
  def module JSON[356500]  
  def module ObjectSerialization[358894]  
  def module Network[365327]  
  def module Time[377133]  
  def module TOML[385119]  
  def module MNISTNet[386863]  
  type _RuntimeTypeInfo[1766589] val dist[1766590]:DefaultDist[1758950]
  type _RuntimeTypeInfo[1780641] val dom[1780642]:domain(1,int(64),one)[1765496]
  type _RuntimeTypeInfo[1965805] val dist[1965806]:DefaultDist[1758950]
  type _RuntimeTypeInfo[1976616] val dom[1976617]:domain(4,int(64),one)[1964360]
  type _RuntimeTypeInfo[2048589] val dom[2048590]:domain(1,int(64),one)[1765496]
  type _RuntimeTypeInfo[2067150] val dom[2067151]:domain(1,int(64),one)[1765496]
  type _RuntimeTypeInfo[2166485] val dom[2166486]:domain(1,int(64),one)[1765496]
  type _RuntimeTypeInfo[2178757] val dom[2178758]:domain(1,int(64),one)[1765496]
  function _ref(_ir_chpl_promo1_:)[2225581]._shape_[2225802](const?  ref arg this[2225806]:_ref(_ir_chpl_promo1_:)[2225581]) const ref : _ref(unmanaged domain(1,int(64),one))[1764096] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[2225816]:_ref(unmanaged domain(1,int(64),one))[1764096] "dead after last mention" "RVV" "temp"
    ref call_tmp[2225823]:_ref(unmanaged domain(1,int(64),one))[1764096] "dead after last mention" "maybe param" "temp"
    (2225826 'move' call_tmp[2225823](2225810 '.' this[2225806] _shape_[2225800]))
    (2225821 'move' ret[2225816] call_tmp[2225823])
    (2225818 return ret[2225816])
  }
  type _RuntimeTypeInfo[2290946] val dist[2290947]:DefaultDist[1758950]
  type _RuntimeTypeInfo[2299432] val dom[2299433]:domain(2,int(64),one)[2289710]
  type _RuntimeTypeInfo[2309698] val dom[2309699]:domain(2,int(64),one)[2289710]
  function _ref(_ir_chpl_promo2_:)[2375865]._shape_[2376086](const?  ref arg this[2376090]:_ref(_ir_chpl_promo2_:)[2375865]) const ref : _ref(unmanaged domain(2,int(64),one))[2288765] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[2376100]:_ref(unmanaged domain(2,int(64),one))[2288765] "dead after last mention" "RVV" "temp"
    ref call_tmp[2376107]:_ref(unmanaged domain(2,int(64),one))[2288765] "dead after last mention" "maybe param" "temp"
    (2376110 'move' call_tmp[2376107](2376094 '.' this[2376090] _shape_[2376084]))
    (2376105 'move' ret[2376100] call_tmp[2376107])
    (2376102 return ret[2376100])
  }
  type _RuntimeTypeInfo[2440261] val dist[2440262]:DefaultDist[1758950]
  type _RuntimeTypeInfo[2449256] val dom[2449257]:domain(3,int(64),one)[2438803]
  type _RuntimeTypeInfo[2459922] val dom[2459923]:domain(3,int(64),one)[2438803]
  function _ref(_ir_chpl_promo3_:)[2529869]._shape_[2530090](const?  ref arg this[2530094]:_ref(_ir_chpl_promo3_:)[2529869]) const ref : _ref(unmanaged domain(3,int(64),one))[2437820] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[2530104]:_ref(unmanaged domain(3,int(64),one))[2437820] "dead after last mention" "RVV" "temp"
    ref call_tmp[2530111]:_ref(unmanaged domain(3,int(64),one))[2437820] "dead after last mention" "maybe param" "temp"
    (2530114 'move' call_tmp[2530111](2530098 '.' this[2530094] _shape_[2530088]))
    (2530109 'move' ret[2530104] call_tmp[2530111])
    (2530106 return ret[2530104])
  }
  type _RuntimeTypeInfo[2601465] val dom[2601466]:domain(4,int(64),one)[1964360]
  function _ref(_ir_chpl_promo4_:)[2603449]._shape_[2603634](const?  ref arg this[2603638]:_ref(_ir_chpl_promo4_:)[2603449]) const ref : _ref(unmanaged domain(4,int(64),one))[1963117] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[2603648]:_ref(unmanaged domain(4,int(64),one))[1963117] "dead after last mention" "RVV" "temp"
    ref call_tmp[2603655]:_ref(unmanaged domain(4,int(64),one))[1963117] "dead after last mention" "maybe param" "temp"
    (2603658 'move' call_tmp[2603655](2603642 '.' this[2603638] _shape_[2603632]))
    (2603653 'move' ret[2603648] call_tmp[2603655])
    (2603650 return ret[2603648])
  }
  type _RuntimeTypeInfo[2665008] val dist[2665009]:DefaultDist[1758950]
  type _RuntimeTypeInfo[2675243] val dom[2675244]:domain(5,int(64),one)[2663397]
  type _RuntimeTypeInfo[2686711] val dom[2686712]:domain(5,int(64),one)[2663397]
  function _ref(_ir_chpl_promo5_:)[2765037]._shape_[2765258](const?  ref arg this[2765262]:_ref(_ir_chpl_promo5_:)[2765037]) const ref : _ref(unmanaged domain(5,int(64),one))[2662116] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[2765272]:_ref(unmanaged domain(5,int(64),one))[2662116] "dead after last mention" "RVV" "temp"
    ref call_tmp[2765279]:_ref(unmanaged domain(5,int(64),one))[2662116] "dead after last mention" "maybe param" "temp"
    (2765282 'move' call_tmp[2765279](2765266 '.' this[2765262] _shape_[2765256]))
    (2765277 'move' ret[2765272] call_tmp[2765279])
    (2765274 return ret[2765272])
  }
  type _RuntimeTypeInfo[2835810] val dist[2835811]:DefaultDist[1758950]
  type _RuntimeTypeInfo[2846584] val dom[2846585]:domain(6,int(64),one)[2834180]
  type _RuntimeTypeInfo[2858452] val dom[2858453]:domain(6,int(64),one)[2834180]
  function _ref(_ir_chpl_promo6_:)[2940399]._shape_[2940620](const?  ref arg this[2940624]:_ref(_ir_chpl_promo6_:)[2940399]) const ref : _ref(unmanaged domain(6,int(64),one))[2831477] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[2940634]:_ref(unmanaged domain(6,int(64),one))[2831477] "dead after last mention" "RVV" "temp"
    ref call_tmp[2940641]:_ref(unmanaged domain(6,int(64),one))[2831477] "dead after last mention" "maybe param" "temp"
    (2940644 'move' call_tmp[2940641](2940628 '.' this[2940624] _shape_[2940618]))
    (2940639 'move' ret[2940634] call_tmp[2940641])
    (2940636 return ret[2940634])
  }
  function _ref(_ir_chpl__loopexpr_iter18)[3786945]._shape_[3787376](const?  ref arg this[3787380]:_ref(_ir_chpl__loopexpr_iter18)[3786945]) const ref : _ref(range(int(64),both,one))[1610048] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[3787390]:_ref(range(int(64),both,one))[1610048] "dead after last mention" "RVV" "temp"
    ref call_tmp[3787397]:_ref(range(int(64),both,one))[1610048] "dead after last mention" "maybe param" "temp"
    (3787400 'move' call_tmp[3787397](3787384 '.' this[3787380] _shape_[3787374]))
    (3787395 'move' ret[3787390] call_tmp[3787397])
    (3787392 return ret[3787390])
  }
  type _RuntimeTypeInfo[3798532] val dom[3798533]:domain(1,int(64),one)[1765496]
}
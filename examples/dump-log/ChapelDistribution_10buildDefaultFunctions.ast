AST dump for ChapelDistribution after pass buildDefaultFunctions.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Math Sort 

{
  function chpl__init_ChapelDistribution[468525]() : void[4] "insert line file info" "module init"
  {
    (1001082 'resolution point' |writeSerializable[475302])
    (1001084 'end of statement')
    (1001085 'resolution point' |readDeserializable[475307])
    (1001087 'end of statement')
    (627294 return _void[46])
  }
  function _distribution[268253](?).init[267677](arg _mt[267691]:_MT[201], ref arg this[267679]:_distribution[268253](?), arg _pid[267682]:int(64)[10], arg _instance[267685]:_any[141](?), arg _unowned[267688]:bool[19]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown _pid[532212] "temp"
    (532215 'init var' _pid[532212] _pid[267682] int(64)[10])
    (532217 'init field' this[267679] c"_pid" _pid[532212])
    (564983 'end of statement')
    unknown _instance[532221] "temp"
    (532223 'init var' _instance[532221] _instance[267685])
    (532225 'init field' this[267679] c"_instance" _instance[532221])
    (564984 'end of statement')
    unknown _unowned[532229] "temp"
    (532232 'init var' _unowned[532229] _unowned[267688] bool[19])
    (532234 'init field' this[267679] c"_unowned" _unowned[532229])
    (564985 'end of statement')
    (626227 return _void[46])
  }
  function _distribution[268253](?).init[267717](arg _mt[267723]:_MT[201], ref arg this[267719]:_distribution[268253](?), arg value[267721]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown _pid[532238] "temp"
    unknown tmp[702385] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702386] "maybe param" "temp"
    unknown call_tmp[906570] "expr temp" "maybe param" "maybe type" "temp"
    (906573 'move' call_tmp[906570](267733 call _isPrivatized value[267721]))
    (702391 'move' tmp[702386](702389 call _cond_test call_tmp[906570]))
    if tmp[702386]
    {
      unknown tmp[702393] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (702395 'move' tmp[702393](267736 call _newPrivatizedClass value[267721]))
      (702400 'move' tmp[702385](702397 '_paramFoldLogical' tmp[702386] tmp[702393]))
    }
    {
      (702405 'move' tmp[702385](702402 '_paramFoldLogical' tmp[702386] nullPid[247489]))
    }
    (532241 'init var' _pid[532238] tmp[702385] int(64)[10])
    (532243 'init field' this[267719] c"_pid" _pid[532238])
    (564986 'end of statement')
    unknown call_tmp[906575] "maybe param" "maybe type" "temp"
    (906578 'move' call_tmp[906575](267749 call _to_unmanaged value[267721]))
    unknown _instance[532247] "temp"
    (532249 'init var' _instance[532247] call_tmp[906575])
    (532251 'init field' this[267719] c"_instance" _instance[532247])
    (564987 'end of statement')
    val _unowned[532256]:bool[19] "temp"
    (532259 'default init var' _unowned[532256] bool[19])
    (532261 '.=' this[267719] c"_unowned" _unowned[532256])
    (564988 'end of statement')
    (626229 return _void[46])
  }
  function _distribution[268253](?).init=[267753](arg _mt[267761]:_MT[201], ref arg this[267755]:_distribution[268253](?), const  ref arg other[267758]:_distribution[268253](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[906582] "expr temp" "maybe param" "maybe type" "temp"
    (906585 'move' call_tmp[906582](267767 call _value _mt[203] other[267758]))
    unknown call_tmp[906589] "maybe param" "maybe type" "temp"
    (906592 'move' call_tmp[906589](267775 call(267772 call (partial) dsiClone _mt[203] call_tmp[906582])))
    unknown value[267765] "dead at end of block" "insert auto destroy"
    (651993 'init var' value[267765] call_tmp[906589])
    (267777 'end of statement')
    (267782 call(267779 call (partial) init _mt[203] this[267755]) value[267765])
    (564989 'end of statement' value[267765])
    (626231 return _void[46])
  }
  function _distribution[268253](?)._value[267786](arg _mt[267790]:_MT[201], arg this[267788]:_distribution[268253](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[626235] "RVV" "temp"
    unknown call_tmp[906598] "expr temp" "maybe param" "maybe type" "temp"
    (906601 'move' call_tmp[906598](451929 call _instance _mt[203] this[267788]))
    unknown call_tmp[906603] "expr temp" "maybe param" "maybe type" "temp"
    (906606 'move' call_tmp[906603](267804 call _isPrivatized call_tmp[906598]))
    unknown call_tmp[906608] "expr temp" "maybe param" "maybe type" "temp"
    (906611 'move' call_tmp[906608](267806 call _cond_test call_tmp[906603]))
    if call_tmp[906608]
    {
      { scopeless type
        unknown call_type_tmp[578849] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[906615] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (906618 'move' call_tmp[906615](451914 call _instance _mt[203] this[267788]))
        (578853 'move' call_type_tmp[578849](267798 'typeof' call_tmp[906615]))
      }
      unknown call_tmp[906622] "expr temp" "maybe param" "maybe type" "temp"
      (906625 'move' call_tmp[906622](451919 call _pid _mt[203] this[267788]))
      unknown call_tmp[906627] "expr temp" "maybe param" "maybe type" "temp"
      (906630 'move' call_tmp[906627](267796 call chpl_getPrivatizedCopy call_type_tmp[578849] call_tmp[906622]))
      (626240 'move' ret[626235](626239 'deref' call_tmp[906627]))
      gotoReturn _end__value[626233] _end__value[626233]
    }
    {
      unknown call_tmp[906634] "expr temp" "maybe param" "maybe type" "temp"
      (906637 'move' call_tmp[906634](451924 call _instance _mt[203] this[267788]))
      (626245 'move' ret[626235](626244 'deref' call_tmp[906634]))
      gotoReturn _end__value[626233] _end__value[626233]
    }
    label _end__value[626233]
    (626237 return ret[626235])
  }
  function _distribution[268253](?).chpl_forwarding_expr1[267813](arg _mt[267818]:_MT[201], arg this[267816]:_distribution[268253](?)) : _unknown[42] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[626251] "RVV" "temp"
    (626255 'move' ret[626251](451933 call _value _mt[203] this[267816]))
    (626253 return ret[626251])
  }
  function _distribution[268253](?)._do_destroy[267826](arg _mt[267830]:_MT[201], arg this[267828]:_distribution[268253](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown tmp[502008] "maybe param" "temp"
    unknown call_tmp[906643] "expr temp" "maybe param" "maybe type" "temp"
    (906646 'move' call_tmp[906643](451950 call _unowned _mt[203] this[267828]))
    (502019 'move' tmp[502008](267875 call ! call_tmp[906643]))
    unknown call_tmp[906648] "expr temp" "maybe param" "maybe type" "temp"
    (906651 'move' call_tmp[906648](502021 call _cond_invalid tmp[502008]))
    if call_tmp[906648]
    {
      (502024 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[702412] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702413] "maybe param" "temp"
    unknown call_tmp[906653] "expr temp" "maybe param" "maybe type" "temp"
    (906656 'move' call_tmp[906653](502009 call isTrue tmp[502008]))
    (702418 'move' tmp[702413](702416 call _cond_test call_tmp[906653]))
    if tmp[702413]
    {
      unknown tmp[702420] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[906660] "expr temp" "maybe param" "maybe type" "temp"
      (906663 'move' call_tmp[906660](408489 call _instance _mt[203] this[267828]))
      unknown call_tmp[906667] "expr temp" "maybe param" "maybe type" "temp"
      (906670 'move' call_tmp[906667](267884 call(267881 call (partial) singleton _mt[203] call_tmp[906660])))
      unknown call_tmp[906672] "expr temp" "maybe param" "maybe type" "temp"
      (906675 'move' call_tmp[906672](267878 call ! call_tmp[906667]))
      (702422 'move' tmp[702420](502012 call isTrue call_tmp[906672]))
      (702427 'move' tmp[702412](702424 '_paramFoldLogical' tmp[702413] tmp[702420]))
    }
    {
      (702432 'move' tmp[702412](702429 '_paramFoldLogical' tmp[702413] 0))
    }
    unknown call_tmp[906677] "expr temp" "maybe param" "maybe type" "temp"
    (906680 'move' call_tmp[906677](267885 call _cond_test tmp[702412]))
    if call_tmp[906677]
    {
      {
        const tmp[267865] "const" "temp"
        unknown call_tmp[906684] "expr temp" "maybe param" "maybe type" "temp"
        (906687 'move' call_tmp[906684](451938 call _instance _mt[203] this[267828]))
        unknown call_tmp[906689] "expr temp" "maybe param" "maybe type" "temp"
        (906692 'move' call_tmp[906689](267862 '_wide_get_locale' call_tmp[906684]))
        (267866 'move' tmp[267865](267863 'deref' call_tmp[906689]))
        {
          unknown call_tmp[906696] "expr temp" "maybe param" "maybe type" "temp"
          (906699 'move' call_tmp[906696](408484 call _instance _mt[203] this[267828]))
          unknown call_tmp[906703] "maybe param" "maybe type" "temp"
          (906706 'move' call_tmp[906703](267842 call(267839 call (partial) remove _mt[203] call_tmp[906696])))
          unknown distToFree[267837] "dead at end of block" "insert auto destroy"
          (651995 'init var' distToFree[267837] call_tmp[906703])
          (267844 'end of statement')
          unknown call_tmp[906708] "expr temp" "maybe param" "maybe type" "temp"
          (906711 'move' call_tmp[906708](267854 call != distToFree[267837] nil[32]))
          unknown call_tmp[906713] "expr temp" "maybe param" "maybe type" "temp"
          (906716 'move' call_tmp[906713](267858 call _cond_test call_tmp[906708]))
          if call_tmp[906713]
          {
            unknown call_tmp[906718] "expr temp" "maybe param" "maybe type" "temp"
            (906721 'move' call_tmp[906718](267848 call postfix! distToFree[267837]))
            unknown call_tmp[906725] "expr temp" "maybe param" "maybe type" "temp"
            (906728 'move' call_tmp[906725](451944 call _instance _mt[203] this[267828]))
            unknown call_tmp[906730] "expr temp" "maybe param" "maybe type" "temp"
            (906733 'move' call_tmp[906730](267852 call _isPrivatized call_tmp[906725]))
            (267847 call _delete_dist call_tmp[906718] call_tmp[906730])
            (564994 'end of statement' distToFree[267837])
          }
        }
        (267869 'elided on block' 0 tmp[267865])
      }
    }
    (626257 return _void[46])
  }
  function _distribution[268253](?).deinit[267891](arg _mt[267895]:_MT[201], arg this[267893]:_distribution[268253](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (267899 call(451954 call (partial) _do_destroy _mt[203] this[267893]))
    (626259 return _void[46])
  }
  function _distribution[268253](?).clone[267902](arg _mt[267906]:_MT[201], arg this[267904]:_distribution[268253](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[626263] "RVV" "temp"
    unknown call_tmp[906739] "expr temp" "maybe param" "maybe type" "temp"
    (906742 'move' call_tmp[906739](408493 call _value _mt[203] this[267904]))
    unknown call_tmp[906746] "expr temp" "maybe param" "maybe type" "temp"
    (906749 'move' call_tmp[906746](267917 call(267914 call (partial) dsiClone _mt[203] call_tmp[906739])))
    unknown call_tmp[906751] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (906754 'move' call_tmp[906751](1000454 'new' _distribution[268253](?) call_tmp[906746]))
    (626268 'move' ret[626263](626267 'deref' call_tmp[906751]))
    (626265 return ret[626263])
  }
  function _distribution[268253](?).newRectangularDom[267920](arg _mt[267954]:_MT[201], arg this[267922]:_distribution[268253](?), param arg rank[267925]:int(64)[10], arg idxType[267928]:_any[141](?), param arg strides[267931]:strideKind[107137], arg ranges[267945] :
  unknown call_tmp[906756] "expr temp" "maybe param" "maybe type" "temp", arg definedConst[267950]:bool[19] =
  0) : _unknown[42] "method" "primary method"
  {
    unknown ret[626272] "RVV" "temp"
    unknown call_tmp[906763] "expr temp" "maybe param" "maybe type" "temp"
    (906766 'move' call_tmp[906763](408498 call _value _mt[203] this[267922]))
    unknown call_tmp[906770] "maybe param" "maybe type" "temp"
    (906773 'move' call_tmp[906770](267963 call(267960 call (partial) dsiNewRectangularDom _mt[203] call_tmp[906763]) rank[267925] idxType[267928] strides[267931] ranges[267945]))
    unknown x[267958] "dead at end of block" "insert auto destroy"
    (651997 'init var' x[267958] call_tmp[906770])
    (267969 'end of statement')
    unknown call_tmp[906777] "expr temp" "maybe param" "maybe type" "temp"
    (906780 'move' call_tmp[906777](267973 call definedConst _mt[203] x[267958]))
    (267970 call = call_tmp[906777] definedConst[267950])
    (564998 'end of statement' x[267958])
    unknown call_tmp[906784] "expr temp" "maybe param" "maybe type" "temp"
    (906787 'move' call_tmp[906784](267988 call(267985 call (partial) linksDistribution _mt[203] x[267958])))
    unknown call_tmp[906789] "expr temp" "maybe param" "maybe type" "temp"
    (906792 'move' call_tmp[906789](267989 call _cond_test call_tmp[906784]))
    if call_tmp[906789]
    {
      unknown call_tmp[906796] "expr temp" "maybe param" "maybe type" "temp"
      (906799 'move' call_tmp[906796](408503 call _value _mt[203] this[267922]))
      (267982 call(267979 call (partial) add_dom _mt[203] call_tmp[906796]) x[267958])
      (565000 'end of statement' x[267958])
    }
    (626277 'move' ret[626272](626276 'deref' x[267958]))
    gotoReturn _end_newRectangularDom[626270] _end_newRectangularDom[626270]
    (565002 'end of statement' x[267958])
    label _end_newRectangularDom[626270]
    (626274 return ret[626272])
  }
  function _distribution[268253](?).newRectangularDom[267997](arg _mt[268017]:_MT[201], arg this[267999]:_distribution[268253](?), param arg rank[268002]:int(64)[10], arg idxType[268005]:_any[141](?), param arg strides[268008]:strideKind[107137], arg definedConst[268013]:bool[19] =
  0) : _unknown[42] "method" "primary method"
  {
    unknown ret[626283] "RVV" "temp"
    unknown ranges[268021] "dead at end of block" "insert auto destroy"
    unknown call_tmp[906803] "expr temp" "maybe param" "maybe type" "temp"
    (906806 'move' call_tmp[906803](268026 call range[240](?) idxType[268005] both[107114] strides[268008]))
    unknown call_tmp[906808] "expr temp" "maybe param" "maybe type" "temp"
    (906811 'move' call_tmp[906808](268022 call * rank[268002] call_tmp[906803]))
    (651999 'default init var' ranges[268021] call_tmp[906808])
    (268034 'end of statement')
    unknown call_tmp[906815] "expr temp" "maybe param" "maybe type" "temp"
    (906818 'move' call_tmp[906815](268037 call(451978 call (partial) newRectangularDom _mt[203] this[267999]) rank[268002] idxType[268005] strides[268008] ranges[268021] definedConst[268013]))
    (626288 'move' ret[626283](626287 'deref' call_tmp[906815]))
    gotoReturn _end_newRectangularDom[626281] _end_newRectangularDom[626281]
    (565004 'end of statement' ranges[268021])
    label _end_newRectangularDom[626281]
    (626285 return ret[626283])
  }
  function _distribution[268253](?).newAssociativeDom[268045](arg _mt[268057]:_MT[201], arg this[268047]:_distribution[268253](?), arg idxType[268049]:_any[141](?), param arg parSafe[268053]:bool[19] =
  1) : _unknown[42] "method" "primary method"
  {
    unknown ret[626294] "RVV" "temp"
    unknown call_tmp[906822] "expr temp" "maybe param" "maybe type" "temp"
    (906825 'move' call_tmp[906822](408509 call _value _mt[203] this[268047]))
    unknown call_tmp[906829] "maybe param" "maybe type" "temp"
    (906832 'move' call_tmp[906829](268066 call(268063 call (partial) dsiNewAssociativeDom _mt[203] call_tmp[906822]) idxType[268049] parSafe[268053]))
    unknown x[268061] "dead at end of block" "insert auto destroy"
    (652001 'init var' x[268061] call_tmp[906829])
    (268070 'end of statement')
    unknown call_tmp[906836] "expr temp" "maybe param" "maybe type" "temp"
    (906839 'move' call_tmp[906836](268082 call(268079 call (partial) linksDistribution _mt[203] x[268061])))
    unknown call_tmp[906841] "expr temp" "maybe param" "maybe type" "temp"
    (906844 'move' call_tmp[906841](268083 call _cond_test call_tmp[906836]))
    if call_tmp[906841]
    {
      unknown call_tmp[906848] "expr temp" "maybe param" "maybe type" "temp"
      (906851 'move' call_tmp[906848](408513 call _value _mt[203] this[268047]))
      (268076 call(268073 call (partial) add_dom _mt[203] call_tmp[906848]) x[268061])
      (565006 'end of statement' x[268061])
    }
    (626299 'move' ret[626294](626298 'deref' x[268061]))
    gotoReturn _end_newAssociativeDom[626292] _end_newAssociativeDom[626292]
    (565008 'end of statement' x[268061])
    label _end_newAssociativeDom[626292]
    (626296 return ret[626294])
  }
  function _distribution[268253](?).newSparseDom[268091](arg _mt[268105]:_MT[201], arg this[268093]:_distribution[268253](?), param arg rank[268096]:int(64)[10], arg idxType[268099]:_any[141](?), arg dom[268102]:_domain[225034](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[626305] "RVV" "temp"
    unknown call_tmp[906857] "expr temp" "maybe param" "maybe type" "temp"
    (906860 'move' call_tmp[906857](408518 call _value _mt[203] this[268093]))
    unknown call_tmp[906864] "maybe param" "maybe type" "temp"
    (906867 'move' call_tmp[906864](268114 call(268111 call (partial) dsiNewSparseDom _mt[203] call_tmp[906857]) rank[268096] idxType[268099] dom[268102]))
    unknown x[268109] "dead at end of block" "insert auto destroy"
    (652003 'init var' x[268109] call_tmp[906864])
    (268119 'end of statement')
    unknown call_tmp[906871] "expr temp" "maybe param" "maybe type" "temp"
    (906874 'move' call_tmp[906871](268131 call(268128 call (partial) linksDistribution _mt[203] x[268109])))
    unknown call_tmp[906876] "expr temp" "maybe param" "maybe type" "temp"
    (906879 'move' call_tmp[906876](268132 call _cond_test call_tmp[906871]))
    if call_tmp[906876]
    {
      unknown call_tmp[906883] "expr temp" "maybe param" "maybe type" "temp"
      (906886 'move' call_tmp[906883](408522 call _value _mt[203] this[268093]))
      (268125 call(268122 call (partial) add_dom _mt[203] call_tmp[906883]) x[268109])
      (565010 'end of statement' x[268109])
    }
    (626310 'move' ret[626305](626309 'deref' x[268109]))
    gotoReturn _end_newSparseDom[626303] _end_newSparseDom[626303]
    (565012 'end of statement' x[268109])
    label _end_newSparseDom[626303]
    (626307 return ret[626305])
  }
  function _distribution[268253](?).idxToLocale[268140](arg _mt[268146]:_MT[201], arg this[268142]:_distribution[268253](?), arg ind[268144]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[626316] "RVV" "temp"
    unknown call_tmp[906892] "expr temp" "maybe param" "maybe type" "temp"
    (906895 'move' call_tmp[906892](408527 call _value _mt[203] this[268142]))
    unknown call_tmp[906899] "expr temp" "maybe param" "maybe type" "temp"
    (906902 'move' call_tmp[906899](268154 call(268151 call (partial) dsiIndexToLocale _mt[203] call_tmp[906892]) ind[268144]))
    (626321 'move' ret[626316](626320 'deref' call_tmp[906899]))
    (626318 return ret[626316])
  }
  function _distribution[268253](?).deserialize[268158](arg _mt[268166]:_MT[201], ref arg this[268160]:_distribution[268253](?), arg reader[268162]:_any[141](?), ref arg deserializer[268164]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[906908] "expr temp" "maybe param" "maybe type" "temp"
    (906911 'move' call_tmp[906908](451999 call _value _mt[203] this[268160]))
    (268173 call(268170 call (partial) read _mt[203] reader[268162]) call_tmp[906908])
    (626323 return _void[46])
  }
  function _distribution[268253](?).deserializeFrom[268177](arg _mt[268185]:_MT[201], arg this[268179]:_distribution[268253](?), arg reader[268181]:_any[141](?), ref arg deserializer[268183]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    unknown ret[626327] "RVV" "temp"
    unknown ret[268189] "dead at end of block" "insert auto destroy"
    (652005 'default init var' ret[268189] this[268179])
    (268192 'end of statement')
    (268197 call(268194 call (partial) deserialize _mt[203] ret[268189]) reader[268181] deserializer[268183])
    (565016 'end of statement' ret[268189])
    (626332 'move' ret[626327](626331 'deref' ret[268189]))
    gotoReturn _end_deserializeFrom[626325] _end_deserializeFrom[626325]
    (565018 'end of statement' ret[268189])
    label _end_deserializeFrom[626325]
    (626329 return ret[626327])
  }
  function _distribution[268253](?).serialize[268204](arg _mt[268212]:_MT[201], arg this[268206]:_distribution[268253](?), arg writer[268208]:_any[141](?), ref arg serializer[268210]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[906919] "expr temp" "maybe param" "maybe type" "temp"
    (906922 'move' call_tmp[906919](452007 call _value _mt[203] this[268206]))
    (268219 call(268216 call (partial) write _mt[203] writer[268208]) call_tmp[906919])
    (626336 return _void[46])
  }
  function _distribution[268253](?).displayRepresentation[268223](arg _mt[268227]:_MT[201], arg this[268225]:_distribution[268253](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[906926] "expr temp" "maybe param" "maybe type" "temp"
    (906929 'move' call_tmp[906926](408534 call _value _mt[203] this[268225]))
    (268234 call(268231 call (partial) dsiDisplayRepresentation _mt[203] call_tmp[906926]))
    (626338 return _void[46])
  }
  function _distribution[268253](?).targetLocales[268237](arg _mt[268241]:_MT[201], arg this[268239]:_distribution[268253](?)) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[626342] "RVV" "temp"
    unknown call_tmp[906935] "expr temp" "maybe param" "maybe type" "temp"
    (906938 'move' call_tmp[906935](408538 call _value _mt[203] this[268239]))
    unknown call_tmp[906942] "expr temp" "maybe param" "maybe type" "temp"
    (906945 'move' call_tmp[906942](268249 call(268246 call (partial) dsiTargetLocales _mt[203] call_tmp[906935])))
    (626347 'move' ret[626342](626346 'addr of' call_tmp[906942]))
    (626344 return ret[626342])
  }
  function _distribution[268253](?)._pid[1265867](arg _mt[1265869]:_MT[201], ref arg this[1265871]:_distribution[268253](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1265881] "RVV" "temp"
    unknown call_tmp[1265888] "expr temp" "maybe param" "maybe type" "temp"
    (1265891 'move' call_tmp[1265888](1265875 '.' this[1265871] c"_pid"))
    (1265886 'move' ret[1265881](1265885 'addr of' call_tmp[1265888]))
    (1265883 return ret[1265881])
  }
  function _distribution[268253](?)._instance[1265893](arg _mt[1265895]:_MT[201], ref arg this[1265897]:_distribution[268253](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1265907] "RVV" "temp"
    unknown call_tmp[1265914] "expr temp" "maybe param" "maybe type" "temp"
    (1265917 'move' call_tmp[1265914](1265901 '.' this[1265897] c"_instance"))
    (1265912 'move' ret[1265907](1265911 'addr of' call_tmp[1265914]))
    (1265909 return ret[1265907])
  }
  function _distribution[268253](?)._unowned[1265919](arg _mt[1265921]:_MT[201], ref arg this[1265923]:_distribution[268253](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1265933] "RVV" "temp"
    unknown call_tmp[1265940] "expr temp" "maybe param" "maybe type" "temp"
    (1265943 'move' call_tmp[1265940](1265927 '.' this[1265923] c"_unowned"))
    (1265938 'move' ret[1265933](1265937 'addr of' call_tmp[1265940]))
    (1265935 return ret[1265933])
  }
  type _distribution[268253](?) val _pid[267664]:int(64)[10] int(64)[10] unknown _instance[267669] "owned" val _unowned[267673]:bool[19] bool[19] forwarding ( )
  function BaseDist[268671].deinit[268277](arg _mt[268281]:_MT[201], arg this[268279]:BaseDist[268671]) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (626349 return _void[46])
  }
  function BaseDist[268671].remove[268286](arg _mt[268290]:_MT[201], arg this[268288]:BaseDist[268671]) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[626353] "RVV" "temp"
    unknown free_dist[268297] "dead at end of block" "insert auto destroy"
    (652007 'init var' free_dist[268297] 0)
    (268300 'end of statement')
    unknown call_tmp[906949] "expr temp" "maybe param" "maybe type" "temp"
    (906952 'move' call_tmp[906949](268362 call(452034 call (partial) dsiTrackDomains _mt[203] this[268288])))
    unknown call_tmp[906954] "expr temp" "maybe param" "maybe type" "temp"
    (906957 'move' call_tmp[906954](268363 call _cond_test call_tmp[906949]))
    if call_tmp[906954]
    {
      {
        const tmp[268348] "const" "temp"
        unknown call_tmp[906959] "expr temp" "maybe param" "maybe type" "temp"
        (906962 'move' call_tmp[906959](268345 '_wide_get_locale' this[268288]))
        (268349 'move' tmp[268348](268346 'deref' call_tmp[906959]))
        {
          unknown call_tmp[906964] "maybe param" "maybe type" "temp"
          (906967 'move' call_tmp[906964](268306 call - 1))
          unknown dom_count[268305] "dead at end of block" "insert auto destroy"
          (652009 'init var' dom_count[268305] call_tmp[906964])
          (268310 'end of statement')
          {
            unknown call_tmp[906971] "expr temp" "maybe param" "maybe type" "temp"
            (906974 'move' call_tmp[906971](408545 call _domsLock _mt[203] this[268288]))
            (268316 call(268313 call (partial) lock _mt[203] call_tmp[906971]))
            (565023 'end of statement')
            unknown call_tmp[906980] "expr temp" "maybe param" "maybe type" "temp"
            (906983 'move' call_tmp[906980](452019 call _free_when_no_doms _mt[203] this[268288]))
            (268317 call = call_tmp[906980] 1)
            (565024 'end of statement')
            unknown call_tmp[906987] "expr temp" "maybe param" "maybe type" "temp"
            (906990 'move' call_tmp[906987](452027 call _doms_containing_dist _mt[203] this[268288]))
            (268321 call = dom_count[268305] call_tmp[906987])
            (565025 'end of statement' dom_count[268305])
            unknown call_tmp[906994] "expr temp" "maybe param" "maybe type" "temp"
            (906997 'move' call_tmp[906994](408550 call _domsLock _mt[203] this[268288]))
            (268329 call(268326 call (partial) unlock _mt[203] call_tmp[906994]))
          }
          unknown call_tmp[907001] "expr temp" "maybe param" "maybe type" "temp"
          (907004 'move' call_tmp[907001](268336 call == dom_count[268305] 0))
          unknown call_tmp[907006] "expr temp" "maybe param" "maybe type" "temp"
          (907009 'move' call_tmp[907006](268340 call _cond_test call_tmp[907001]))
          if call_tmp[907006]
          {
            (268331 call = free_dist[268297] 1)
            (565028 'end of statement' free_dist[268297])
          }
        }
        (268352 'elided on block' 0 tmp[268348])
      }
    }
    {
      (268357 call = free_dist[268297] 1)
      (565030 'end of statement' free_dist[268297])
    }
    unknown call_tmp[907011] "expr temp" "maybe param" "maybe type" "temp"
    (907014 'move' call_tmp[907011](268376 call _cond_test free_dist[268297]))
    if call_tmp[907011]
    {
      unknown call_tmp[907016] "expr temp" "maybe param" "maybe type" "temp"
      (907019 'move' call_tmp[907016](268369 call _to_unmanaged this[268288]))
      (626359 'move' ret[626353](626358 'coerce' call_tmp[907016] unmanaged BaseDist?[468142]))
      gotoReturn _end_remove[626351] _end_remove[626351]
    }
    {
      (626365 'move' ret[626353](626364 'coerce' nil[32] unmanaged BaseDist?[468142]))
      gotoReturn _end_remove[626351] _end_remove[626351]
    }
    label _end_remove[626351]
    (626355 return ret[626353])
  }
  { scopeless type
    unmanaged BaseDist?[468142]
  }
  function BaseDist[268671].remove_dom[268385](arg _mt[268394]:_MT[201], arg this[268387]:BaseDist[268671], arg x[268391]:unmanaged BaseDom[468061]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[626371] "RVV" "temp"
    unknown call_tmp[907021] "maybe param" "maybe type" "temp"
    (907024 'move' call_tmp[907021](268400 call - 1))
    unknown count[268399] "dead at end of block" "insert auto destroy"
    (652011 'init var' count[268399] call_tmp[907021])
    (268404 'end of statement')
    {
      const tmp[268454] "const" "temp"
      unknown call_tmp[907026] "expr temp" "maybe param" "maybe type" "temp"
      (907029 'move' call_tmp[907026](268451 '_wide_get_locale' this[268387]))
      (268455 'move' tmp[268454](268452 'deref' call_tmp[907026]))
      {
        unknown call_tmp[907031] "maybe param" "maybe type" "temp"
        (907034 'move' call_tmp[907031](268409 call - 1))
        unknown cnt[268408] "dead at end of block" "insert auto destroy"
        (652013 'init var' cnt[268408] call_tmp[907031])
        (268413 'end of statement')
        {
          unknown call_tmp[907038] "expr temp" "maybe param" "maybe type" "temp"
          (907041 'move' call_tmp[907038](408555 call _domsLock _mt[203] this[268387]))
          (268419 call(268416 call (partial) lock _mt[203] call_tmp[907038]))
          (565034 'end of statement')
          unknown call_tmp[907047] "expr temp" "maybe param" "maybe type" "temp"
          (907050 'move' call_tmp[907047](452044 call _doms_containing_dist _mt[203] this[268387]))
          (268420 call -= call_tmp[907047] 1)
          (565035 'end of statement')
          unknown call_tmp[907054] "expr temp" "maybe param" "maybe type" "temp"
          (907057 'move' call_tmp[907054](452050 call _doms_containing_dist _mt[203] this[268387]))
          (268424 call = cnt[268408] call_tmp[907054])
          (565036 'end of statement' cnt[268408])
          unknown call_tmp[907061] "expr temp" "maybe param" "maybe type" "temp"
          (907064 'move' call_tmp[907061](452056 call _free_when_no_doms _mt[203] this[268387]))
          unknown call_tmp[907066] "expr temp" "maybe param" "maybe type" "temp"
          (907069 'move' call_tmp[907066](268433 call ! call_tmp[907061]))
          unknown call_tmp[907071] "expr temp" "maybe param" "maybe type" "temp"
          (907074 'move' call_tmp[907071](268436 call _cond_test call_tmp[907066]))
          if call_tmp[907071]
          {
            (268428 call += cnt[268408] 1)
            (565038 'end of statement' cnt[268408])
          }
          unknown call_tmp[907078] "expr temp" "maybe param" "maybe type" "temp"
          (907081 'move' call_tmp[907078](408560 call _domsLock _mt[203] this[268387]))
          (268445 call(268442 call (partial) unlock _mt[203] call_tmp[907078]))
        }
        (268447 call = count[268399] cnt[268408])
        (565041 'end of statement' count[268399] cnt[268408])
      }
      (268458 'elided on block' 0 tmp[268454])
    }
    unknown call_tmp[907085] "expr temp" "maybe param" "maybe type" "temp"
    (907088 'move' call_tmp[907085](268463 call == count[268399] 0))
    (626377 'move' ret[626371](626376 'coerce' call_tmp[907085] bool[19]))
    gotoReturn _end_remove_dom[626369] _end_remove_dom[626369]
    (565044 'end of statement' count[268399])
    label _end_remove_dom[626369]
    (626373 return ret[626371])
  }
  { scopeless type
    bool[19]
  }
  function BaseDist[268671].add_dom[268470](arg _mt[268479]:_MT[201], arg this[268472]:BaseDist[268671], arg x[268476]:unmanaged BaseDom[468061]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    {
      const tmp[268501] "const" "temp"
      unknown call_tmp[907090] "expr temp" "maybe param" "maybe type" "temp"
      (907093 'move' call_tmp[907090](268498 '_wide_get_locale' this[268472]))
      (268502 'move' tmp[268501](268499 'deref' call_tmp[907090]))
      {
        unknown call_tmp[907097] "expr temp" "maybe param" "maybe type" "temp"
        (907100 'move' call_tmp[907097](408565 call _domsLock _mt[203] this[268472]))
        (268488 call(268485 call (partial) lock _mt[203] call_tmp[907097]))
        (565046 'end of statement')
        unknown call_tmp[907106] "expr temp" "maybe param" "maybe type" "temp"
        (907109 'move' call_tmp[907106](452066 call _doms_containing_dist _mt[203] this[268472]))
        (268489 call += call_tmp[907106] 1)
        (565047 'end of statement')
        unknown call_tmp[907113] "expr temp" "maybe param" "maybe type" "temp"
        (907116 'move' call_tmp[907113](408570 call _domsLock _mt[203] this[268472]))
        (268497 call(268494 call (partial) unlock _mt[203] call_tmp[907113]))
      }
      (268505 'elided on block' 0 tmp[268501])
    }
    (626381 return _void[46])
  }
  function BaseDist[268671].dsiDisplayRepresentation[268511](arg _mt[268515]:_MT[201], arg this[268513]:BaseDist[268671]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (268519 call writeln "<no way to display representation>")
    (626383 return _void[46])
  }
  function BaseDist[268671].dsiNewRectangularDom[268525](arg _mt[268541]:_MT[201], arg this[268527]:BaseDist[268671], param arg rank[268530]:int(64)[10], arg idxType[268533]:_any[141](?), param arg strides[268536]:strideKind[107137], arg inds[268539]:_any[141](?)) : _unknown[42] "last resort" "method" "primary method" "no return value for void"
  {
    (268545 call compilerError "rectangular domains not supported by this distribution")
    (626385 return _void[46])
  }
  function BaseDist[268671].dsiNewAssociativeDom[268551](arg _mt[268561]:_MT[201], arg this[268553]:BaseDist[268671], arg idxType[268555]:_any[141](?), param arg parSafe[268558]:bool[19]) : _unknown[42] "last resort" "method" "primary method" "no return value for void"
  {
    (268565 call compilerError "associative domains not supported by this distribution")
    (626387 return _void[46])
  }
  function BaseDist[268671].dsiNewSparseDom[268571](arg _mt[268585]:_MT[201], arg this[268573]:BaseDist[268671], param arg rank[268576]:int(64)[10], arg idxType[268579]:_any[141](?), arg dom[268582]:_domain[225034](?)) : _unknown[42] "last resort" "method" "primary method" "no return value for void"
  {
    (268589 call compilerError "sparse domains not supported by this distribution")
    (626389 return _void[46])
  }
  function BaseDist[268671].dsiSupportsPrivatization[268595](arg _mt[268599]:_MT[201], arg this[268597]:BaseDist[268671]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626393] "RVV" "param" "temp"
    (626398 'move' ret[626393](626397 'deref' 0))
    (626395 return ret[626393])
  }
  function BaseDist[268671].dsiRequiresPrivatization[268606](arg _mt[268610]:_MT[201], arg this[268608]:BaseDist[268671]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626402] "RVV" "param" "temp"
    (626407 'move' ret[626402](626406 'deref' 0))
    (626404 return ret[626402])
  }
  function BaseDist[268671].dsiDestroyDist[268617](arg _mt[268621]:_MT[201], arg this[268619]:BaseDist[268671]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (626409 return _void[46])
  }
  function BaseDist[268671].trackDomains[268626](arg _mt[268630]:_MT[201], arg this[268628]:BaseDist[268671]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626413] "RVV" "param" "temp"
    (626418 'move' ret[626413](626417 'deref' 1))
    (626415 return ret[626413])
  }
  function BaseDist[268671].dsiTrackDomains[268637](arg _mt[268641]:_MT[201], arg this[268639]:BaseDist[268671]) : _unknown[42] "method" "primary method"
  {
    unknown ret[626422] "RVV" "temp"
    (626427 'move' ret[626422](626426 'deref' 1))
    (626424 return ret[626422])
  }
  function BaseDist[268671].singleton[268648](arg _mt[268652]:_MT[201], arg this[268650]:BaseDist[268671]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626431] "RVV" "param" "temp"
    (626436 'move' ret[626431](626435 'deref' 0))
    (626433 return ret[626431])
  }
  function BaseDist[268671].dsiIsLayout[268659](arg _mt[268663]:_MT[201], arg this[268661]:BaseDist[268671]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626440] "RVV" "param" "temp"
    (626445 'move' ret[626440](626444 'deref' 0))
    (626442 return ret[626440])
  }
  function BaseDist[268671].init[1084504](arg _mt[1084506]:_MT[201], arg this[1084507]:BaseDist[268671], in arg _doms_containing_dist[1084518]:int(64)[10] =
  _typeDefaultT[217], in arg _domsLock[1084529]:chpl_LocalSpinlock[85418] =
  _typeDefaultT[217], in arg _free_when_no_doms[1084540]:bool[19] =
  _typeDefaultT[217], in arg pid[1084551]:int(64)[10] :
  int(64)[10] =
  nullPid[247489]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1084566] "temporary of super field" "temp"
    (1084568 'move' super_tmp[1084566](1084565 '.v' this[1084507] c"super"))
    (1084517 call(1084515 call (partial) init _mt[203] super_tmp[1084566]))
    (1084601 'end of statement')
    unknown tmp[1084571] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1084606] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1084618] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1084621 'move' call_tmp[1084618](1084573 '.v' this[1084507] c"super"))
      (1084610 'move' call_type_tmp[1084606](1084576 'typeof' call_tmp[1084618]))
    }
    (1084577 'move' tmp[1084571] call_type_tmp[1084606])
    unknown call_tmp[1084623] "maybe param" "maybe type" "temp"
    (1084626 'move' call_tmp[1084623](1084582 'cast' tmp[1084571] this[1084507]))
    unknown chpl__thisAsParent[1084579] "dead at end of block" "insert auto destroy" "temp"
    (1084614 'init var' chpl__thisAsParent[1084579] call_tmp[1084623] tmp[1084571])
    (1084585 'setcid' chpl__thisAsParent[1084579])
    (1084587 'init field' this[1084507] c"_doms_containing_dist" _doms_containing_dist[1084518])
    (1084602 'end of statement')
    (1084590 'init field' this[1084507] c"_domsLock" _domsLock[1084529])
    (1084593 'init field' this[1084507] c"_free_when_no_doms" _free_when_no_doms[1084540])
    (1084603 'end of statement')
    (1084596 'init field' this[1084507] c"pid" pid[1084551])
    (1084604 'end of statement')
    (1084599 'setcid' this[1084507])
    (1084612 return _void[46])
  }
  function BaseDist[268671].super[1265945](arg _mt[1265947]:_MT[201], arg this[1265949]:BaseDist[268671]) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1265959] "RVV" "temp"
    unknown call_tmp[1265966] "expr temp" "maybe param" "maybe type" "temp"
    (1265969 'move' call_tmp[1265966](1265953 '.v' this[1265949] c"super"))
    (1265964 'move' ret[1265959](1265963 'deref' call_tmp[1265966]))
    (1265961 return ret[1265959])
  }
  function BaseDist[268671]._doms_containing_dist[1265971](arg _mt[1265973]:_MT[201], arg this[1265975]:BaseDist[268671]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1265985] "RVV" "temp"
    unknown call_tmp[1265992] "expr temp" "maybe param" "maybe type" "temp"
    (1265995 'move' call_tmp[1265992](1265979 '.' this[1265975] c"_doms_containing_dist"))
    (1265990 'move' ret[1265985](1265989 'addr of' call_tmp[1265992]))
    (1265987 return ret[1265985])
  }
  function BaseDist[268671]._domsLock[1265997](arg _mt[1265999]:_MT[201], arg this[1266001]:BaseDist[268671]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266011] "RVV" "temp"
    unknown call_tmp[1266018] "expr temp" "maybe param" "maybe type" "temp"
    (1266021 'move' call_tmp[1266018](1266005 '.' this[1266001] c"_domsLock"))
    (1266016 'move' ret[1266011](1266015 'addr of' call_tmp[1266018]))
    (1266013 return ret[1266011])
  }
  function BaseDist[268671]._free_when_no_doms[1266023](arg _mt[1266025]:_MT[201], arg this[1266027]:BaseDist[268671]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266037] "RVV" "temp"
    unknown call_tmp[1266044] "expr temp" "maybe param" "maybe type" "temp"
    (1266047 'move' call_tmp[1266044](1266031 '.' this[1266027] c"_free_when_no_doms"))
    (1266042 'move' ret[1266037](1266041 'addr of' call_tmp[1266044]))
    (1266039 return ret[1266037])
  }
  function BaseDist[268671].pid[1266049](arg _mt[1266051]:_MT[201], arg this[1266053]:BaseDist[268671]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266063] "RVV" "temp"
    unknown call_tmp[1266070] "expr temp" "maybe param" "maybe type" "temp"
    (1266073 'move' call_tmp[1266070](1266057 '.' this[1266053] c"pid"))
    (1266068 'move' ret[1266063](1266067 'addr of' call_tmp[1266070]))
    (1266065 return ret[1266063])
  }
  function BaseDist[268671].serialize[1266075](arg _mt[1266079]:_MT[201], arg this[1266077]:BaseDist[268671], arg writer[1266078]:_any[141](?), ref arg serializer[1266083]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1266086 call serializeDefaultImpl writer[1266078] serializer[1266083] this[1266077])
    (1266092 return _void[46])
  }
  function BaseDist[268671].deserialize[1266094](arg _mt[1266098]:_MT[201], arg this[1266096]:BaseDist[268671], arg reader[1266097]:_any[141](?), ref arg deserializer[1266103]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1266105] "temp"
    (1266107 'move' _deser_temp[1266105] this[1266096])
    (1266110 call deserializeDefaultImpl reader[1266097] deserializer[1266103] _deser_temp[1266105])
    (1266116 return _void[46])
  }
  type BaseDist[268671] val super[397527]:RootClass[236] "super class" val _doms_containing_dist[268257]:int(64)[10] int(64)[10] val _domsLock[268262]:chpl_LocalSpinlock[85418] chpl_LocalSpinlock[85418] val _free_when_no_doms[268267]:bool[19] bool[19] val pid[268272]:int(64)[10] nullPid[247489] int(64)[10]
  type unmanaged BaseDist[468172]
  type unmanaged BaseDist?[468142]
  type BaseDist?[468139](?)
  type BaseDist[443581](?)
  function BaseDom[269761].init[268707](arg _mt[268711]:_MT[201], arg this[268709]:BaseDom[269761]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[532341] "temporary of super field" "temp"
    (532349 'move' super_tmp[532341](532342 '.v' this[268709] c"super"))
    (532345 call init _mt[203] super_tmp[532341])
    (565059 'end of statement')
    unknown tmp[532269] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[578855] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[907120] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (907123 'move' call_tmp[907120](532271 '.v' this[268709] c"super"))
      (578859 'move' call_type_tmp[578855](532274 'typeof' call_tmp[907120]))
    }
    (532275 'move' tmp[532269] call_type_tmp[578855])
    unknown call_tmp[907125] "maybe param" "maybe type" "temp"
    (907128 'move' call_tmp[907125](532280 'cast' tmp[532269] this[268709]))
    unknown chpl__thisAsParent[532277] "dead at end of block" "insert auto destroy" "temp"
    (652015 'init var' chpl__thisAsParent[532277] call_tmp[907125] tmp[532269])
    (532283 'setcid' chpl__thisAsParent[532277])
    (565060 'end of statement')
    val _arrs_head[532286]:unmanaged BaseArr?[468169] "temp"
    (532289 'default init var' _arrs_head[532286] unmanaged BaseArr?[468169])
    (532291 '.=' this[268709] c"_arrs_head" _arrs_head[532286])
    (565061 'end of statement')
    val _arrs_containing_dom[532295]:int(64)[10] "temp"
    (532298 'default init var' _arrs_containing_dom[532295] int(64)[10])
    (532300 '.=' this[268709] c"_arrs_containing_dom" _arrs_containing_dom[532295])
    (565062 'end of statement')
    val _arrsLock[532304]:chpl_LocalSpinlock[85418] "temp"
    (532307 'default init var' _arrsLock[532304] chpl_LocalSpinlock[85418])
    (532309 '.=' this[268709] c"_arrsLock" _arrsLock[532304])
    (565063 'end of statement')
    val _free_when_no_arrs[532313]:bool[19] "temp"
    (532316 'default init var' _free_when_no_arrs[532313] bool[19])
    (532318 '.=' this[268709] c"_free_when_no_arrs" _free_when_no_arrs[532313])
    (565064 'end of statement')
    unknown pid[532323] "temp"
    (532326 'init var' pid[532323] nullPid[247489] int(64)[10])
    (532328 'init field' this[268709] c"pid" pid[532323])
    (565065 'end of statement')
    val definedConst[532332]:bool[19] "temp"
    (532335 'default init var' definedConst[532332] bool[19])
    (532337 '.=' this[268709] c"definedConst" definedConst[532332])
    (565066 'end of statement')
    (532352 'setcid' this[268709])
    (626447 return _void[46])
  }
  function BaseDom[269761].deinit[268716](arg _mt[268720]:_MT[201], arg this[268718]:BaseDom[269761]) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (626449 return _void[46])
  }
  function BaseDom[269761]._arrs[268725](arg _mt[268729]:_MT[201], arg this[268727]:BaseDom[269761]) : _unknown[42] "iterator fn" "method" "primary method" "no parens" "no return value for void"
  {
    unknown ret[626453] "RVV" "temp"
    unknown call_tmp[907132] "maybe param" "maybe type" "temp"
    (907135 'move' call_tmp[907132](452082 call _arrs_head _mt[203] this[268727]))
    unknown tmp[268735] "dead at end of block" "insert auto destroy"
    (652017 'init var' tmp[268735] call_tmp[907132])
    (268738 'end of statement')
    {
      unknown tmp[268759] "temp"
      unknown call_tmp[907137] "expr temp" "maybe param" "maybe type" "temp"
      (907140 'move' call_tmp[907137](268780 call != tmp[268735] nil[32]))
      (268783 'move' tmp[268759](268778 call _cond_test call_tmp[907137]))
      WhileDo[268764]
      {
        {
          unknown yret[626457] "YVV" "temp"
          unknown call_tmp[907142] "expr temp" "maybe param" "maybe type" "temp"
          (907145 'move' call_tmp[907142](268745 call postfix! tmp[268735]))
          (626461 'move' yret[626457](626460 'coerce' call_tmp[907142] unmanaged BaseArr[468148]))
          (268744 yield yret[626457])
          (565068 'end of statement' tmp[268735])
          unknown call_tmp[907147] "expr temp" "maybe param" "maybe type" "temp"
          (907150 'move' call_tmp[907147](268751 call postfix! tmp[268735]))
          unknown call_tmp[907154] "expr temp" "maybe param" "maybe type" "temp"
          (907157 'move' call_tmp[907154](268756 call next _mt[203] call_tmp[907147]))
          (268748 call = tmp[268735] call_tmp[907154])
          (565070 'end of statement' tmp[268735])
        }
        label _continueLabel[268762]
        unknown call_tmp[907159] "expr temp" "maybe param" "maybe type" "temp"
        (907162 'move' call_tmp[907159](268770 call != tmp[268735] nil[32]))
        (268773 'move' tmp[268759](268768 call _cond_test call_tmp[907159]))
        tmp[268759]
      }
      label _breakLabel[268763]
    }
    (626455 return ret[626453])
  }
  { scopeless type
    unmanaged BaseArr[468148]
  }
  function BaseDom[269761].dsiMyDist[268789](arg _mt[268793]:_MT[201], arg this[268791]:BaseDom[269761]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown ret[626466] "RVV" "temp"
    (268799 call halt "internal error: dsiMyDist is not implemented")
    (626468 return ret[626466])
  }
  { scopeless type
    unmanaged BaseDist[468172]
  }
  function BaseDom[269761].dnsError[268806](arg _mt[268814]:_MT[201], arg this[268808]:BaseDom[269761], param arg op[268811]:string[244]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (268818 call compilerError "this domain type does not support '" op[268811] "'")
    (626470 return _void[46])
  }
  function BaseDom[269761].dsiLow[268826](arg _mt[268830]:_MT[201], arg this[268828]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268834 call(452095 call (partial) dnsError _mt[203] this[268828]) "low")
    (626472 return _void[46])
  }
  function BaseDom[269761].dsiHigh[268840](arg _mt[268844]:_MT[201], arg this[268842]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268848 call(452099 call (partial) dnsError _mt[203] this[268842]) "high")
    (626474 return _void[46])
  }
  function BaseDom[269761].dsiAlignedLow[268854](arg _mt[268858]:_MT[201], arg this[268856]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268862 call(452103 call (partial) dnsError _mt[203] this[268856]) "alignedLow")
    (626476 return _void[46])
  }
  function BaseDom[269761].dsiAlignedHigh[268868](arg _mt[268872]:_MT[201], arg this[268870]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268876 call(452107 call (partial) dnsError _mt[203] this[268870]) "alignedHigh")
    (626478 return _void[46])
  }
  function BaseDom[269761].dsiFirst[268882](arg _mt[268886]:_MT[201], arg this[268884]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268890 call(452111 call (partial) dnsError _mt[203] this[268884]) "first")
    (626480 return _void[46])
  }
  function BaseDom[269761].dsiLast[268896](arg _mt[268900]:_MT[201], arg this[268898]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268904 call(452115 call (partial) dnsError _mt[203] this[268898]) "last")
    (626482 return _void[46])
  }
  function BaseDom[269761].dsiStride[268910](arg _mt[268914]:_MT[201], arg this[268912]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268918 call(452119 call (partial) dnsError _mt[203] this[268912]) "stride")
    (626484 return _void[46])
  }
  function BaseDom[269761].dsiAlignment[268924](arg _mt[268928]:_MT[201], arg this[268926]:BaseDom[269761]) : _unknown[42] "last resort" "method" "primary method" "no parens" "no return value for void"
  {
    (268932 call(452123 call (partial) dnsError _mt[203] this[268926]) "alignment")
    (626486 return _void[46])
  }
  function BaseDom[269761].dsiIndexOrder[268936](arg _mt[268942]:_MT[201], arg this[268938]:BaseDom[269761], arg i[268940]:_any[141](?)) : _unknown[42] "last resort" "method" "primary method" "no return value for void"
  {
    (268946 call(452127 call (partial) dnsError _mt[203] this[268938]) "indexOrder")
    (626488 return _void[46])
  }
  function BaseDom[269761].dsiCreateIndexBuffer[268952](arg _mt[268958]:_MT[201], arg this[268954]:BaseDom[269761], arg size[268956]:_any[141](?)) : _unknown[42] "last resort" "method" "primary method" "no return value for void"
  {
    (268962 call(452131 call (partial) dnsError _mt[203] this[268954]) "createIndexBuffer")
    (626490 return _void[46])
  }
  function BaseDom[269761].trackArrays[268968](arg _mt[268972]:_MT[201], arg this[268970]:BaseDom[269761]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[626494] "RVV" "temp"
    unknown tmp[502029] "maybe param" "temp"
    (502040 'move' tmp[502029] disableConstDomainOpt[247516])
    unknown call_tmp[907184] "expr temp" "maybe param" "maybe type" "temp"
    (907187 'move' call_tmp[907184](502042 call _cond_invalid tmp[502029]))
    if call_tmp[907184]
    {
      (502045 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[702439] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702440] "maybe param" "temp"
    unknown call_tmp[907189] "expr temp" "maybe param" "maybe type" "temp"
    (907192 'move' call_tmp[907189](502030 call isTrue tmp[502029]))
    (702445 'move' tmp[702440](702443 call _cond_test call_tmp[907189]))
    if tmp[702440]
    {
      (702450 'move' tmp[702439](702447 '_paramFoldLogical' tmp[702440] 1))
    }
    {
      unknown tmp[702452] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[907196] "expr temp" "maybe param" "maybe type" "temp"
      (907199 'move' call_tmp[907196](268982 call definedConst _mt[203] this[268970]))
      unknown call_tmp[907201] "expr temp" "maybe param" "maybe type" "temp"
      (907204 'move' call_tmp[907201](268979 call ! call_tmp[907196]))
      (702454 'move' tmp[702452](502034 call isTrue call_tmp[907201]))
      (702459 'move' tmp[702439](702456 '_paramFoldLogical' tmp[702440] tmp[702452]))
    }
    (626499 'move' ret[626494](626498 'deref' tmp[702439]))
    (626496 return ret[626494])
  }
  function BaseDom[269761].remove[268987](arg _mt[268991]:_MT[201], arg this[268989]:BaseDom[269761]) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[626503] "RVV" "temp"
    unknown call_tmp[907206] "expr temp" "maybe param" "maybe type" "temp"
    (907209 'move' call_tmp[907206](269019 call _cond_test 1))
    if call_tmp[907206]
    {
      unknown call_tmp[907213] "expr temp" "maybe param" "maybe type" "temp"
      (907216 'move' call_tmp[907213](269009 call(452140 call (partial) dsiMyDist _mt[203] this[268989])))
      unknown call_tmp[907220] "expr temp" "maybe param" "maybe type" "temp"
      (907223 'move' call_tmp[907220](269015 call(269012 call (partial) dsiTrackDomains _mt[203] call_tmp[907213])))
      unknown call_tmp[907227] "expr temp" "maybe param" "maybe type" "temp"
      (907230 'move' call_tmp[907227](269017 call(452146 call (partial) dsiLinksDistribution _mt[203] this[268989])))
      unknown call_tmp[907232] "expr temp" "maybe param" "maybe type" "temp"
      (907235 'move' call_tmp[907232](269006 call == call_tmp[907220] call_tmp[907227]))
      (269005 call assert call_tmp[907232])
    }
    unknown ret_dom[269024] "dead at end of block" "insert auto destroy"
    (652019 'init var' ret_dom[269024] nil[32] unmanaged BaseDom?[468157])
    (269030 'end of statement')
    unknown ret_dist[269032] "dead at end of block" "insert auto destroy"
    (652021 'init var' ret_dist[269032] nil[32] unmanaged BaseDist?[468142])
    (269038 'end of statement')
    unknown call_tmp[907239] "maybe param" "maybe type" "temp"
    (907242 'move' call_tmp[907239](269042 call(452153 call (partial) dsiMyDist _mt[203] this[268989])))
    unknown dist[269040] "dead at end of block" "insert auto destroy"
    (652023 'init var' dist[269040] call_tmp[907239])
    (269044 'end of statement')
    unknown free_dom[269046] "dead at end of block" "insert auto destroy"
    (652025 'init var' free_dom[269046] 0)
    (269049 'end of statement')
    unknown remove_dist[269051] "dead at end of block" "insert auto destroy"
    (652027 'init var' remove_dist[269051] 0)
    (269054 'end of statement')
    {
      const tmp[269118] "const" "temp"
      unknown call_tmp[907244] "expr temp" "maybe param" "maybe type" "temp"
      (907247 'move' call_tmp[907244](269115 '_wide_get_locale' this[268989]))
      (269119 'move' tmp[269118](269116 'deref' call_tmp[907244]))
      {
        unknown arr_count[269058] "dead at end of block" "insert auto destroy"
        (652029 'init var' arr_count[269058] 0)
        (269061 'end of statement')
        {
          unknown call_tmp[907251] "expr temp" "maybe param" "maybe type" "temp"
          (907254 'move' call_tmp[907251](408578 call _arrsLock _mt[203] this[268989]))
          (269067 call(269064 call (partial) lock _mt[203] call_tmp[907251]))
          (565087 'end of statement')
          unknown call_tmp[907260] "expr temp" "maybe param" "maybe type" "temp"
          (907263 'move' call_tmp[907260](452162 call _arrs_containing_dom _mt[203] this[268989]))
          (269068 call = arr_count[269058] call_tmp[907260])
          (565088 'end of statement' arr_count[269058])
          unknown call_tmp[907267] "expr temp" "maybe param" "maybe type" "temp"
          (907270 'move' call_tmp[907267](452167 call _free_when_no_arrs _mt[203] this[268989]))
          (269072 call = call_tmp[907267] 1)
          (565090 'end of statement')
          unknown call_tmp[907274] "expr temp" "maybe param" "maybe type" "temp"
          (907277 'move' call_tmp[907274](408583 call _arrsLock _mt[203] this[268989]))
          (269080 call(269077 call (partial) unlock _mt[203] call_tmp[907274]))
        }
        unknown call_tmp[907281] "expr temp" "maybe param" "maybe type" "temp"
        (907284 'move' call_tmp[907281](269107 call == arr_count[269058] 0))
        unknown call_tmp[907286] "expr temp" "maybe param" "maybe type" "temp"
        (907289 'move' call_tmp[907286](269111 call _cond_test call_tmp[907281]))
        if call_tmp[907286]
        {
          (269083 call = free_dom[269046] 1)
          (565092 'end of statement' free_dom[269046])
          unknown call_tmp[907293] "expr temp" "maybe param" "maybe type" "temp"
          (907296 'move' call_tmp[907293](269102 call(452174 call (partial) dsiLinksDistribution _mt[203] this[268989])))
          unknown call_tmp[907298] "expr temp" "maybe param" "maybe type" "temp"
          (907301 'move' call_tmp[907298](269103 call _cond_test call_tmp[907293]))
          if call_tmp[907298]
          {
            unknown call_tmp[907305] "expr temp" "maybe param" "maybe type" "temp"
            (907308 'move' call_tmp[907305](269099 call _to_unmanaged this[268989]))
            unknown call_tmp[907310] "expr temp" "maybe param" "maybe type" "temp"
            (907313 'move' call_tmp[907310](269097 call(269094 call (partial) remove_dom _mt[203] dist[269040]) call_tmp[907305]))
            (269088 call = remove_dist[269051] call_tmp[907310])
            (565094 'end of statement' remove_dist[269051] dist[269040])
          }
        }
      }
      (269122 'elided on block' 0 tmp[269118])
    }
    unknown call_tmp[907315] "expr temp" "maybe param" "maybe type" "temp"
    (907318 'move' call_tmp[907315](269134 call _cond_test free_dom[269046]))
    if call_tmp[907315]
    {
      unknown call_tmp[907320] "expr temp" "maybe param" "maybe type" "temp"
      (907323 'move' call_tmp[907320](269130 call _to_unmanaged this[268989]))
      (269126 call = ret_dom[269024] call_tmp[907320])
      (565097 'end of statement' ret_dom[269024])
    }
    unknown call_tmp[907325] "expr temp" "maybe param" "maybe type" "temp"
    (907328 'move' call_tmp[907325](269145 call _cond_test remove_dist[269051]))
    if call_tmp[907325]
    {
      (269139 call = ret_dist[269032] dist[269040])
      (565099 'end of statement' ret_dist[269032] dist[269040])
    }
    unknown call_tmp[907330] "expr temp" "maybe param" "maybe type" "temp"
    (907333 'move' call_tmp[907330](269154 call _build_tuple ret_dom[269024] ret_dist[269032]))
    unknown call_tmp[907335] "expr temp" "maybe param" "maybe type" "temp"
    (907338 'move' call_tmp[907335](626508 call _build_tuple unmanaged BaseDom?[468157] unmanaged BaseDist?[468142]))
    (626512 'move' ret[626503](626511 'coerce' call_tmp[907330] call_tmp[907335]))
    gotoReturn _end_remove[626501] _end_remove[626501]
    (565102 'end of statement' ret_dom[269024] ret_dist[269032])
    label _end_remove[626501]
    (626505 return ret[626503])
  }
  { scopeless type
    (269000 call _build_tuple unmanaged BaseDom?[468157] unmanaged BaseDist?[468142])
  }
  function BaseDom[269761].remove_arr[269159](arg _mt[269172]:_MT[201], arg this[269161]:BaseDom[269761], arg x[269165]:unmanaged BaseArr[468148], param arg rmFromList[269169] :
  1 =
  1) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[626518] "RVV" "temp"
    unknown call_tmp[907340] "maybe param" "maybe type" "temp"
    (907343 'move' call_tmp[907340](269178 call - 1))
    unknown count[269177] "dead at end of block" "insert auto destroy"
    (652031 'init var' count[269177] call_tmp[907340])
    (269182 'end of statement')
    {
      const tmp[269305] "const" "temp"
      unknown call_tmp[907345] "expr temp" "maybe param" "maybe type" "temp"
      (907348 'move' call_tmp[907345](269302 '_wide_get_locale' this[269161]))
      (269306 'move' tmp[269305](269303 'deref' call_tmp[907345]))
      {
        unknown call_tmp[907350] "maybe param" "maybe type" "temp"
        (907353 'move' call_tmp[907350](269187 call - 1))
        unknown cnt[269186] "dead at end of block" "insert auto destroy"
        (652033 'init var' cnt[269186] call_tmp[907350])
        (269191 'end of statement')
        unknown call_tmp[907357] "expr temp" "maybe param" "maybe type" "temp"
        (907360 'move' call_tmp[907357](408589 call _arrsLock _mt[203] this[269161]))
        (269196 call(269193 call (partial) lock _mt[203] call_tmp[907357]))
        (565105 'end of statement')
        unknown call_tmp[907366] "expr temp" "maybe param" "maybe type" "temp"
        (907369 'move' call_tmp[907366](452191 call _arrs_containing_dom _mt[203] this[269161]))
        (269197 call -= call_tmp[907366] 1)
        (565106 'end of statement')
        unknown tmp[502050] "maybe param" "temp"
        (502061 'move' tmp[502050] rmFromList[269169])
        unknown call_tmp[907371] "expr temp" "maybe param" "maybe type" "temp"
        (907374 'move' call_tmp[907371](502063 call _cond_invalid tmp[502050]))
        if call_tmp[907371]
        {
          (502066 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[702466] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[702467] "maybe param" "temp"
        unknown call_tmp[907376] "expr temp" "maybe param" "maybe type" "temp"
        (907379 'move' call_tmp[907376](502051 call isTrue tmp[502050]))
        (702472 'move' tmp[702467](702470 call _cond_test call_tmp[907376]))
        if tmp[702467]
        {
          unknown tmp[702474] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[907383] "expr temp" "maybe param" "maybe type" "temp"
          (907386 'move' call_tmp[907383](269271 call(452209 call (partial) trackArrays _mt[203] this[269161])))
          (702476 'move' tmp[702474](502054 call isTrue call_tmp[907383]))
          (702481 'move' tmp[702466](702478 '_paramFoldLogical' tmp[702467] tmp[702474]))
        }
        {
          (702486 'move' tmp[702466](702483 '_paramFoldLogical' tmp[702467] 0))
        }
        unknown call_tmp[907388] "expr temp" "maybe param" "maybe type" "temp"
        (907391 'move' call_tmp[907388](269272 call _cond_test tmp[702466]))
        if call_tmp[907388]
        {
          unknown call_tmp[907395] "expr temp" "maybe param" "maybe type" "temp"
          (907398 'move' call_tmp[907395](452201 call _arrs_head _mt[203] this[269161]))
          unknown call_tmp[907400] "expr temp" "maybe param" "maybe type" "temp"
          (907403 'move' call_tmp[907400](269210 call == call_tmp[907395] x[269165]))
          unknown call_tmp[907405] "expr temp" "maybe param" "maybe type" "temp"
          (907408 'move' call_tmp[907405](269214 call _cond_test call_tmp[907400]))
          if call_tmp[907405]
          {
            unknown call_tmp[907412] "expr temp" "maybe param" "maybe type" "temp"
            (907415 'move' call_tmp[907412](452196 call _arrs_head _mt[203] this[269161]))
            unknown call_tmp[907419] "expr temp" "maybe param" "maybe type" "temp"
            (907422 'move' call_tmp[907419](269206 call next _mt[203] x[269165]))
            (269202 call = call_tmp[907412] call_tmp[907419])
          }
          unknown call_tmp[907426] "expr temp" "maybe param" "maybe type" "temp"
          (907429 'move' call_tmp[907426](269233 call next _mt[203] x[269165]))
          unknown ifvar_borrow[907431] "temp"
          (907433 'move' ifvar_borrow[907431](907436 call chpl_checkBorrowIfVar call_tmp[907426] 0))
          unknown call_tmp[907443] "expr temp" "maybe param" "maybe type" "temp"
          (907446 'move' call_tmp[907443](269239 call _cond_test ifvar_borrow[907431]))
          if call_tmp[907443]
          {
            const xnext[269236] "const"
            (907439 'move' xnext[269236](907441 'to non nilable class' ifvar_borrow[907431]))
            unknown call_tmp[907450] "expr temp" "maybe param" "maybe type" "temp"
            (907453 'move' call_tmp[907450](269224 call prev _mt[203] xnext[269236]))
            unknown call_tmp[907457] "expr temp" "maybe param" "maybe type" "temp"
            (907460 'move' call_tmp[907457](269228 call prev _mt[203] x[269165]))
            (269219 call = call_tmp[907450] call_tmp[907457])
            (565109 'end of statement' xnext[269236])
          }
          unknown call_tmp[907464] "expr temp" "maybe param" "maybe type" "temp"
          (907467 'move' call_tmp[907464](269256 call prev _mt[203] x[269165]))
          unknown ifvar_borrow[907469] "temp"
          (907471 'move' ifvar_borrow[907469](907474 call chpl_checkBorrowIfVar call_tmp[907464] 0))
          unknown call_tmp[907481] "expr temp" "maybe param" "maybe type" "temp"
          (907484 'move' call_tmp[907481](269262 call _cond_test ifvar_borrow[907469]))
          if call_tmp[907481]
          {
            const xprev[269259] "const"
            (907477 'move' xprev[269259](907479 'to non nilable class' ifvar_borrow[907469]))
            unknown call_tmp[907488] "expr temp" "maybe param" "maybe type" "temp"
            (907491 'move' call_tmp[907488](269247 call next _mt[203] xprev[269259]))
            unknown call_tmp[907495] "expr temp" "maybe param" "maybe type" "temp"
            (907498 'move' call_tmp[907495](269251 call next _mt[203] x[269165]))
            (269244 call = call_tmp[907488] call_tmp[907495])
            (565111 'end of statement' xprev[269259])
          }
        }
        unknown call_tmp[907502] "expr temp" "maybe param" "maybe type" "temp"
        (907505 'move' call_tmp[907502](452215 call _arrs_containing_dom _mt[203] this[269161]))
        (269276 call = cnt[269186] call_tmp[907502])
        (565113 'end of statement' cnt[269186])
        unknown call_tmp[907509] "expr temp" "maybe param" "maybe type" "temp"
        (907512 'move' call_tmp[907509](452221 call _free_when_no_arrs _mt[203] this[269161]))
        unknown call_tmp[907514] "expr temp" "maybe param" "maybe type" "temp"
        (907517 'move' call_tmp[907514](269285 call ! call_tmp[907509]))
        unknown call_tmp[907519] "expr temp" "maybe param" "maybe type" "temp"
        (907522 'move' call_tmp[907519](269288 call _cond_test call_tmp[907514]))
        if call_tmp[907519]
        {
          (269280 call += cnt[269186] 1)
          (565115 'end of statement' cnt[269186])
        }
        unknown call_tmp[907526] "expr temp" "maybe param" "maybe type" "temp"
        (907529 'move' call_tmp[907526](408601 call _arrsLock _mt[203] this[269161]))
        (269297 call(269294 call (partial) unlock _mt[203] call_tmp[907526]))
        (565117 'end of statement')
        (269298 call = count[269177] cnt[269186])
        (565118 'end of statement' count[269177] cnt[269186])
      }
      (269309 'elided on block' 0 tmp[269305])
    }
    unknown call_tmp[907533] "expr temp" "maybe param" "maybe type" "temp"
    (907536 'move' call_tmp[907533](269314 call == count[269177] 0))
    (626524 'move' ret[626518](626523 'coerce' call_tmp[907533] bool[19]))
    gotoReturn _end_remove_arr[626516] _end_remove_arr[626516]
    (565121 'end of statement' count[269177])
    label _end_remove_arr[626516]
    (626520 return ret[626518])
  }
  { scopeless type
    bool[19]
  }
  function BaseDom[269761].add_arr[269321](arg _mt[269338]:_MT[201], arg this[269323]:BaseDom[269761], arg x[269327]:unmanaged BaseArr[468148], param arg locking[269331] :
  1 =
  1, param arg addToList[269335] :
  1 =
  1) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    {
      const tmp[269429] "const" "temp"
      unknown call_tmp[907538] "expr temp" "maybe param" "maybe type" "temp"
      (907541 'move' call_tmp[907538](269426 '_wide_get_locale' this[269323]))
      (269430 'move' tmp[269429](269427 'deref' call_tmp[907538]))
      {
        unknown call_tmp[907543] "expr temp" "maybe param" "maybe type" "temp"
        (907546 'move' call_tmp[907543](269350 call _cond_test locking[269331]))
        if call_tmp[907543]
        {
          unknown call_tmp[907550] "expr temp" "maybe param" "maybe type" "temp"
          (907553 'move' call_tmp[907550](408606 call _arrsLock _mt[203] this[269323]))
          (269347 call(269344 call (partial) lock _mt[203] call_tmp[907550]))
        }
        unknown call_tmp[907559] "expr temp" "maybe param" "maybe type" "temp"
        (907562 'move' call_tmp[907559](452232 call _arrs_containing_dom _mt[203] this[269323]))
        (269355 call += call_tmp[907559] 1)
        (565124 'end of statement')
        unknown tmp[502092] "maybe param" "temp"
        (502103 'move' tmp[502092] addToList[269335])
        unknown call_tmp[907564] "expr temp" "maybe param" "maybe type" "temp"
        (907567 'move' call_tmp[907564](502105 call _cond_invalid tmp[502092]))
        if call_tmp[907564]
        {
          (502108 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[702493] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[702494] "maybe param" "temp"
        unknown call_tmp[907569] "expr temp" "maybe param" "maybe type" "temp"
        (907572 'move' call_tmp[907569](502093 call isTrue tmp[502092]))
        (702499 'move' tmp[702494](702497 call _cond_test call_tmp[907569]))
        if tmp[702494]
        {
          unknown tmp[702501] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[907576] "expr temp" "maybe param" "maybe type" "temp"
          (907579 'move' call_tmp[907576](269409 call(452250 call (partial) trackArrays _mt[203] this[269323])))
          (702503 'move' tmp[702501](502096 call isTrue call_tmp[907576]))
          (702508 'move' tmp[702493](702505 '_paramFoldLogical' tmp[702494] tmp[702501]))
        }
        {
          (702513 'move' tmp[702493](702510 '_paramFoldLogical' tmp[702494] 0))
        }
        unknown call_tmp[907581] "expr temp" "maybe param" "maybe type" "temp"
        (907584 'move' call_tmp[907581](269410 call _cond_test tmp[702493]))
        if call_tmp[907581]
        {
          unknown tmp[502071] "maybe param" "temp"
          unknown call_tmp[907588] "expr temp" "maybe param" "maybe type" "temp"
          (907591 'move' call_tmp[907588](269367 call prev _mt[203] x[269327]))
          (502082 'move' tmp[502071](269364 call == call_tmp[907588] nil[32]))
          unknown call_tmp[907593] "expr temp" "maybe param" "maybe type" "temp"
          (907596 'move' call_tmp[907593](502084 call _cond_invalid tmp[502071]))
          if call_tmp[907593]
          {
            (502087 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[702520] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[702521] "maybe param" "temp"
          unknown call_tmp[907598] "expr temp" "maybe param" "maybe type" "temp"
          (907601 'move' call_tmp[907598](502072 call isTrue tmp[502071]))
          (702526 'move' tmp[702521](702524 call _cond_test call_tmp[907598]))
          if tmp[702521]
          {
            unknown tmp[702528] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[907605] "expr temp" "maybe param" "maybe type" "temp"
            (907608 'move' call_tmp[907605](269374 call next _mt[203] x[269327]))
            unknown call_tmp[907610] "expr temp" "maybe param" "maybe type" "temp"
            (907613 'move' call_tmp[907610](269371 call == call_tmp[907605] nil[32]))
            (702530 'move' tmp[702528](502075 call isTrue call_tmp[907610]))
            (702535 'move' tmp[702520](702532 '_paramFoldLogical' tmp[702521] tmp[702528]))
          }
          {
            (702540 'move' tmp[702520](702537 '_paramFoldLogical' tmp[702521] 0))
          }
          (269361 call assert tmp[702520])
          (565127 'end of statement')
          unknown call_tmp[907617] "expr temp" "maybe param" "maybe type" "temp"
          (907620 'move' call_tmp[907617](452239 call _arrs_head _mt[203] this[269323]))
          unknown ifvar_borrow[907622] "temp"
          (907624 'move' ifvar_borrow[907622](907627 call chpl_checkBorrowIfVar call_tmp[907617] 0))
          unknown call_tmp[907634] "expr temp" "maybe param" "maybe type" "temp"
          (907637 'move' call_tmp[907634](269397 call _cond_test ifvar_borrow[907622]))
          if call_tmp[907634]
          {
            const ahead[269394] "const"
            (907630 'move' ahead[269394](907632 'to non nilable class' ifvar_borrow[907622]))
            unknown call_tmp[907641] "expr temp" "maybe param" "maybe type" "temp"
            (907644 'move' call_tmp[907641](269382 call next _mt[203] x[269327]))
            (269379 call = call_tmp[907641] ahead[269394])
            (565128 'end of statement' ahead[269394])
            unknown call_tmp[907648] "expr temp" "maybe param" "maybe type" "temp"
            (907651 'move' call_tmp[907648](269389 call prev _mt[203] ahead[269394]))
            (269386 call = call_tmp[907648] x[269327])
            (565130 'end of statement' ahead[269394])
          }
          unknown call_tmp[907655] "expr temp" "maybe param" "maybe type" "temp"
          (907658 'move' call_tmp[907655](452244 call _arrs_head _mt[203] this[269323]))
          (269401 call = call_tmp[907655] x[269327])
        }
        unknown call_tmp[907660] "expr temp" "maybe param" "maybe type" "temp"
        (907663 'move' call_tmp[907660](269421 call _cond_test locking[269331]))
        if call_tmp[907660]
        {
          unknown call_tmp[907667] "expr temp" "maybe param" "maybe type" "temp"
          (907670 'move' call_tmp[907667](408615 call _arrsLock _mt[203] this[269323]))
          (269418 call(269415 call (partial) unlock _mt[203] call_tmp[907667]))
        }
      }
      (269433 'elided on block' 0 tmp[269429])
    }
    (626528 return _void[46])
  }
  function BaseDom[269761].remove_containing_arr[269439](arg _mt[269448]:_MT[201], arg this[269441]:BaseDom[269761], arg x[269445]:unmanaged BaseArr[468148]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[626532] "RVV" "temp"
    unknown call_tmp[907674] "maybe param" "maybe type" "temp"
    (907677 'move' call_tmp[907674](269453 call - 1))
    unknown count[269452] "dead at end of block" "insert auto destroy"
    (652035 'init var' count[269452] call_tmp[907674])
    (269457 'end of statement')
    {
      const tmp[269505] "const" "temp"
      unknown call_tmp[907679] "expr temp" "maybe param" "maybe type" "temp"
      (907682 'move' call_tmp[907679](269502 '_wide_get_locale' this[269441]))
      (269506 'move' tmp[269505](269503 'deref' call_tmp[907679]))
      {
        unknown call_tmp[907684] "maybe param" "maybe type" "temp"
        (907687 'move' call_tmp[907684](269462 call - 1))
        unknown cnt[269461] "dead at end of block" "insert auto destroy"
        (652037 'init var' cnt[269461] call_tmp[907684])
        (269466 'end of statement')
        unknown call_tmp[907691] "expr temp" "maybe param" "maybe type" "temp"
        (907694 'move' call_tmp[907691](408620 call _arrsLock _mt[203] this[269441]))
        (269471 call(269468 call (partial) lock _mt[203] call_tmp[907691]))
        (565134 'end of statement')
        unknown call_tmp[907700] "expr temp" "maybe param" "maybe type" "temp"
        (907703 'move' call_tmp[907700](452258 call _arrs_containing_dom _mt[203] this[269441]))
        (269472 call -= call_tmp[907700] 1)
        (565135 'end of statement')
        unknown call_tmp[907707] "expr temp" "maybe param" "maybe type" "temp"
        (907710 'move' call_tmp[907707](452264 call _arrs_containing_dom _mt[203] this[269441]))
        (269476 call = cnt[269461] call_tmp[907707])
        (565136 'end of statement' cnt[269461])
        unknown call_tmp[907714] "expr temp" "maybe param" "maybe type" "temp"
        (907717 'move' call_tmp[907714](452270 call _free_when_no_arrs _mt[203] this[269441]))
        unknown call_tmp[907719] "expr temp" "maybe param" "maybe type" "temp"
        (907722 'move' call_tmp[907719](269485 call ! call_tmp[907714]))
        unknown call_tmp[907724] "expr temp" "maybe param" "maybe type" "temp"
        (907727 'move' call_tmp[907724](269488 call _cond_test call_tmp[907719]))
        if call_tmp[907724]
        {
          (269480 call += cnt[269461] 1)
          (565138 'end of statement' cnt[269461])
        }
        unknown call_tmp[907731] "expr temp" "maybe param" "maybe type" "temp"
        (907734 'move' call_tmp[907731](408625 call _arrsLock _mt[203] this[269441]))
        (269497 call(269494 call (partial) unlock _mt[203] call_tmp[907731]))
        (565140 'end of statement')
        (269498 call = count[269452] cnt[269461])
        (565141 'end of statement' count[269452] cnt[269461])
      }
      (269509 'elided on block' 0 tmp[269505])
    }
    unknown call_tmp[907738] "expr temp" "maybe param" "maybe type" "temp"
    (907741 'move' call_tmp[907738](269514 call == count[269452] 0))
    (626537 'move' ret[626532](626536 'deref' call_tmp[907738]))
    gotoReturn _end_remove_containing_arr[626530] _end_remove_containing_arr[626530]
    (565144 'end of statement' count[269452])
    label _end_remove_containing_arr[626530]
    (626534 return ret[626532])
  }
  function BaseDom[269761].add_containing_arr[269520](arg _mt[269529]:_MT[201], arg this[269522]:BaseDom[269761], arg x[269526]:unmanaged BaseArr[468148]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    {
      const tmp[269551] "const" "temp"
      unknown call_tmp[907743] "expr temp" "maybe param" "maybe type" "temp"
      (907746 'move' call_tmp[907743](269548 '_wide_get_locale' this[269522]))
      (269552 'move' tmp[269551](269549 'deref' call_tmp[907743]))
      {
        unknown call_tmp[907750] "expr temp" "maybe param" "maybe type" "temp"
        (907753 'move' call_tmp[907750](408630 call _arrsLock _mt[203] this[269522]))
        (269538 call(269535 call (partial) lock _mt[203] call_tmp[907750]))
        (565146 'end of statement')
        unknown call_tmp[907759] "expr temp" "maybe param" "maybe type" "temp"
        (907762 'move' call_tmp[907759](452280 call _arrs_containing_dom _mt[203] this[269522]))
        (269539 call += call_tmp[907759] 1)
        (565147 'end of statement')
        unknown call_tmp[907766] "expr temp" "maybe param" "maybe type" "temp"
        (907769 'move' call_tmp[907766](408635 call _arrsLock _mt[203] this[269522]))
        (269547 call(269544 call (partial) unlock _mt[203] call_tmp[907766]))
      }
      (269555 'elided on block' 0 tmp[269551])
    }
    (626541 return _void[46])
  }
  function BaseDom[269761].dsiSupportsPrivatization[269561](arg _mt[269565]:_MT[201], arg this[269563]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626545] "RVV" "param" "temp"
    (626550 'move' ret[626545](626549 'deref' 0))
    (626547 return ret[626545])
  }
  function BaseDom[269761].dsiRequiresPrivatization[269572](arg _mt[269576]:_MT[201], arg this[269574]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626554] "RVV" "param" "temp"
    (626559 'move' ret[626554](626558 'deref' 0))
    (626556 return ret[626554])
  }
  function BaseDom[269761].linksDistribution[269583](arg _mt[269587]:_MT[201], arg this[269585]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626563] "RVV" "param" "temp"
    (626568 'move' ret[626563](626567 'deref' 1))
    (626565 return ret[626563])
  }
  function BaseDom[269761].dsiLinksDistribution[269594](arg _mt[269598]:_MT[201], arg this[269596]:BaseDom[269761]) : _unknown[42] "method" "primary method"
  {
    unknown ret[626572] "RVV" "temp"
    (626577 'move' ret[626572](626576 'deref' 1))
    (626574 return ret[626572])
  }
  function BaseDom[269761].dsiDestroyDom[269605](arg _mt[269609]:_MT[201], arg this[269607]:BaseDom[269761]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (626579 return _void[46])
  }
  function BaseDom[269761].dsiDisplayRepresentation[269614](arg _mt[269618]:_MT[201], arg this[269616]:BaseDom[269761]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (269622 call writeln "<no way to display representation>")
    (626581 return _void[46])
  }
  function BaseDom[269761].dsiSupportsAutoLocalAccess[269626](arg _mt[269630]:_MT[201], arg this[269628]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626585] "RVV" "param" "temp"
    (626590 'move' ret[626585](626589 'deref' 0))
    (626587 return ret[626585])
  }
  function BaseDom[269761].dsiSupportsOffsetAutoLocalAccess[269637](arg _mt[269641]:_MT[201], arg this[269639]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626594] "RVV" "param" "temp"
    (626599 'move' ret[626594](626598 'deref' 0))
    (626596 return ret[626594])
  }
  function BaseDom[269761].dsiAutoLocalAccessOffsetCheck[269648](arg _mt[269654]:_MT[201], arg this[269650]:BaseDom[269761], arg offsets[269652]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[626603] "RVV" "temp"
    (626608 'move' ret[626603](626607 'deref' 0))
    (626605 return ret[626603])
  }
  function BaseDom[269761].dsiIteratorYieldsLocalElements[269661](arg _mt[269665]:_MT[201], arg this[269663]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626612] "RVV" "param" "temp"
    (626617 'move' ret[626612](626616 'deref' 0))
    (626614 return ret[626612])
  }
  function BaseDom[269761].isRectangular[269672](arg _mt[269676]:_MT[201], arg this[269674]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626621] "RVV" "param" "temp"
    (626626 'move' ret[626621](626625 'deref' 0))
    (626623 return ret[626621])
  }
  function BaseDom[269761].isAssociative[269683](arg _mt[269687]:_MT[201], arg this[269685]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626630] "RVV" "param" "temp"
    (626635 'move' ret[626630](626634 'deref' 0))
    (626632 return ret[626630])
  }
  function BaseDom[269761].isSparse[269694](arg _mt[269698]:_MT[201], arg this[269696]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626639] "RVV" "param" "temp"
    (626644 'move' ret[626639](626643 'deref' 0))
    (626641 return ret[626639])
  }
  function BaseDom[467897](?).isDefaultRectangular[269705](arg _mt[269709]:_MT[201], arg this[269707]:BaseDom[467897](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626648] "RVV" "param" "temp"
    (626653 'move' ret[626648](626652 'deref' 0))
    (626650 return ret[626648])
  }
  function BaseDom[269761].isDefaultRectangular[269716](arg _mt[269720]:_MT[201], arg this[269718]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626657] "RVV" "param" "temp"
    (626662 'move' ret[626657](626661 'deref' 0))
    (626659 return ret[626657])
  }
  function BaseDom[269761].isSliceDomainView[269727](arg _mt[269731]:_MT[201], arg this[269729]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626666] "RVV" "param" "temp"
    (626671 'move' ret[626666](626670 'deref' 0))
    (626668 return ret[626666])
  }
  function BaseDom[269761].isRankChangeDomainView[269738](arg _mt[269742]:_MT[201], arg this[269740]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626675] "RVV" "param" "temp"
    (626680 'move' ret[626675](626679 'deref' 0))
    (626677 return ret[626675])
  }
  function BaseDom[269761].isReindexDomainView[269749](arg _mt[269753]:_MT[201], arg this[269751]:BaseDom[269761]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626684] "RVV" "param" "temp"
    (626689 'move' ret[626684](626688 'deref' 0))
    (626686 return ret[626684])
  }
  function BaseDom[269761].super[1266118](arg _mt[1266120]:_MT[201], arg this[1266122]:BaseDom[269761]) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266132] "RVV" "temp"
    unknown call_tmp[1266139] "expr temp" "maybe param" "maybe type" "temp"
    (1266142 'move' call_tmp[1266139](1266126 '.v' this[1266122] c"super"))
    (1266137 'move' ret[1266132](1266136 'deref' call_tmp[1266139]))
    (1266134 return ret[1266132])
  }
  function BaseDom[269761]._arrs_head[1266144](arg _mt[1266146]:_MT[201], arg this[1266148]:BaseDom[269761]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266158] "RVV" "temp"
    unknown call_tmp[1266165] "expr temp" "maybe param" "maybe type" "temp"
    (1266168 'move' call_tmp[1266165](1266152 '.' this[1266148] c"_arrs_head"))
    (1266163 'move' ret[1266158](1266162 'addr of' call_tmp[1266165]))
    (1266160 return ret[1266158])
  }
  function BaseDom[269761]._arrs_containing_dom[1266170](arg _mt[1266172]:_MT[201], arg this[1266174]:BaseDom[269761]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266184] "RVV" "temp"
    unknown call_tmp[1266191] "expr temp" "maybe param" "maybe type" "temp"
    (1266194 'move' call_tmp[1266191](1266178 '.' this[1266174] c"_arrs_containing_dom"))
    (1266189 'move' ret[1266184](1266188 'addr of' call_tmp[1266191]))
    (1266186 return ret[1266184])
  }
  function BaseDom[269761]._arrsLock[1266196](arg _mt[1266198]:_MT[201], arg this[1266200]:BaseDom[269761]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266210] "RVV" "temp"
    unknown call_tmp[1266217] "expr temp" "maybe param" "maybe type" "temp"
    (1266220 'move' call_tmp[1266217](1266204 '.' this[1266200] c"_arrsLock"))
    (1266215 'move' ret[1266210](1266214 'addr of' call_tmp[1266217]))
    (1266212 return ret[1266210])
  }
  function BaseDom[269761]._free_when_no_arrs[1266222](arg _mt[1266224]:_MT[201], arg this[1266226]:BaseDom[269761]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266236] "RVV" "temp"
    unknown call_tmp[1266243] "expr temp" "maybe param" "maybe type" "temp"
    (1266246 'move' call_tmp[1266243](1266230 '.' this[1266226] c"_free_when_no_arrs"))
    (1266241 'move' ret[1266236](1266240 'addr of' call_tmp[1266243]))
    (1266238 return ret[1266236])
  }
  function BaseDom[269761].pid[1266248](arg _mt[1266250]:_MT[201], arg this[1266252]:BaseDom[269761]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266262] "RVV" "temp"
    unknown call_tmp[1266269] "expr temp" "maybe param" "maybe type" "temp"
    (1266272 'move' call_tmp[1266269](1266256 '.' this[1266252] c"pid"))
    (1266267 'move' ret[1266262](1266266 'addr of' call_tmp[1266269]))
    (1266264 return ret[1266262])
  }
  function BaseDom[269761].definedConst[1266274](arg _mt[1266276]:_MT[201], arg this[1266278]:BaseDom[269761]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266288] "RVV" "temp"
    unknown call_tmp[1266295] "expr temp" "maybe param" "maybe type" "temp"
    (1266298 'move' call_tmp[1266295](1266282 '.' this[1266278] c"definedConst"))
    (1266293 'move' ret[1266288](1266292 'addr of' call_tmp[1266295]))
    (1266290 return ret[1266288])
  }
  function BaseDom[269761].serialize[1266300](arg _mt[1266304]:_MT[201], arg this[1266302]:BaseDom[269761], arg writer[1266303]:_any[141](?), ref arg serializer[1266308]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1266311 call serializeDefaultImpl writer[1266303] serializer[1266308] this[1266302])
    (1266317 return _void[46])
  }
  function BaseDom[269761].deserialize[1266319](arg _mt[1266323]:_MT[201], arg this[1266321]:BaseDom[269761], arg reader[1266322]:_any[141](?), ref arg deserializer[1266328]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1266330] "temp"
    (1266332 'move' _deser_temp[1266330] this[1266321])
    (1266335 call deserializeDefaultImpl reader[1266322] deserializer[1266328] _deser_temp[1266330])
    (1266341 return _void[46])
  }
  type BaseDom[269761] val super[397531]:RootClass[236] "super class" val _arrs_head[268675]:unmanaged BaseArr?[468169] unmanaged BaseArr?[468169] val _arrs_containing_dom[268682]:int(64)[10] int(64)[10] val _arrsLock[268687]:chpl_LocalSpinlock[85418] chpl_LocalSpinlock[85418] val _free_when_no_arrs[268692]:bool[19] bool[19] val pid[268697]:int(64)[10] nullPid[247489] int(64)[10] val definedConst[268703]:bool[19] bool[19]
  type unmanaged BaseDom?[468157]
  type BaseDom?[468154](?)
  type unmanaged BaseDom[468061]
  type BaseDom[467897](?)
  type BaseDom[424169](?)
  function BaseRectangularDom[269884](?).hasUnitStride[269778](arg _mt[269782]:_MT[201], arg this[269780]:BaseRectangularDom[269884](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626693] "RVV" "param" "temp"
    unknown call_tmp[907775] "expr temp" "maybe param" "maybe type" "temp"
    (907778 'move' call_tmp[907775](408640 call strides _mt[203] this[269780]))
    unknown call_tmp[907782] "expr temp" "maybe param" "maybe type" "temp"
    (907785 'move' call_tmp[907782](269790 call(269787 call (partial) isOne _mt[203] call_tmp[907775])))
    (626698 'move' ret[626693](626697 'deref' call_tmp[907782]))
    (626695 return ret[626693])
  }
  function BaseRectangularDom[269884](?).hasPosNegUnitStride[269793](arg _mt[269797]:_MT[201], arg this[269795]:BaseRectangularDom[269884](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626702] "RVV" "param" "temp"
    unknown call_tmp[907789] "expr temp" "maybe param" "maybe type" "temp"
    (907792 'move' call_tmp[907789](408645 call strides _mt[203] this[269795]))
    unknown call_tmp[907796] "expr temp" "maybe param" "maybe type" "temp"
    (907799 'move' call_tmp[907796](269805 call(269802 call (partial) isPosNegOne _mt[203] call_tmp[907789])))
    (626707 'move' ret[626702](626706 'deref' call_tmp[907796]))
    (626704 return ret[626702])
  }
  function BaseRectangularDom[269884](?).isRectangular[269808](arg _mt[269812]:_MT[201], arg this[269810]:BaseRectangularDom[269884](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[626711] "RVV" "param" "temp"
    (626716 'move' ret[626711](626715 'deref' 1))
    (626713 return ret[626711])
  }
  function BaseRectangularDom[269884](?).getBaseArrType[269819](arg _mt[269823]:_MT[201], arg this[269821]:BaseRectangularDom[269884](?)) type : _unknown[42] "method" "primary method"
  {
    unknown ret[626720] "RVV" "temp" "type variable"
    unknown call_tmp[907803] "expr temp" "maybe param" "maybe type" "temp"
    (907806 'move' call_tmp[907803](452290 call rank _mt[203] this[269821]))
    unknown call_tmp[907810] "expr temp" "maybe param" "maybe type" "temp"
    (907813 'move' call_tmp[907810](452295 call idxType _mt[203] this[269821]))
    unknown call_tmp[907817] "expr temp" "maybe param" "maybe type" "temp"
    (907820 'move' call_tmp[907817](452300 call strides _mt[203] this[269821]))
    unknown call_tmp[907822] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (907825 'move' call_tmp[907822](1000455 'new' BaseArrOverRectangularDom[452285](?)(rank = call_tmp[907803])(idxType = call_tmp[907810])(strides = call_tmp[907817])(_chpl_manager = unmanaged[183](?))))
    unknown tmp[269827] "dead at end of block" "insert auto destroy"
    (652039 'init var' tmp[269827] call_tmp[907822])
    (269840 'end of statement')
    unknown call_tmp[907827] "expr temp" "maybe param" "used in type" "maybe type" "temp" "type variable"
    (907830 'move' call_tmp[907827](269843 'typeof' tmp[269827]))
    (626725 'move' ret[626720](626724 'deref' call_tmp[907827]))
    gotoReturn _end_getBaseArrType[626718] _end_getBaseArrType[626718]
    (565169 'end of statement' tmp[269827])
    label _end_getBaseArrType[626718]
    (626722 return ret[626720])
  }
  function BaseRectangularDom[269884](?).deinit[269846](arg _mt[269850]:_MT[201], arg this[269848]:BaseRectangularDom[269884](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (626729 return _void[46])
  }
  function BaseRectangularDom[269884](?).dsiAdd[269855](arg _mt[269861]:_MT[201], arg this[269857]:BaseRectangularDom[269884](?), in arg x[269859]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (269865 call compilerError "Cannot add indices to a rectangular domain")
    (626731 return _void[46])
  }
  function BaseRectangularDom[269884](?).dsiRemove[269869](arg _mt[269875]:_MT[201], arg this[269871]:BaseRectangularDom[269884](?), arg x[269873]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (269879 call compilerError "Cannot remove indices from a rectangular domain")
    (626733 return _void[46])
  }
  function BaseRectangularDom[269884](?).init[1085031](arg _mt[1085033]:_MT[201], arg this[1085034]:BaseRectangularDom[269884](?), param arg rank[1085045]:int(64)[10], arg idxType[1085055]:_any[141](?), param arg strides[1085064]:strideKind[107137]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1085076] "temporary of super field" "temp"
    (1085078 'move' super_tmp[1085076](1085075 '.v' this[1085034] c"super"))
    (1085044 call(1085042 call (partial) init _mt[203] super_tmp[1085076]))
    (1085114 'end of statement')
    unknown tmp[1085081] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1085118] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1085130] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1085133 'move' call_tmp[1085130](1085083 '.v' this[1085034] c"super"))
      (1085122 'move' call_type_tmp[1085118](1085086 'typeof' call_tmp[1085130]))
    }
    (1085087 'move' tmp[1085081] call_type_tmp[1085118])
    unknown call_tmp[1085135] "maybe param" "maybe type" "temp"
    (1085138 'move' call_tmp[1085135](1085092 'cast' tmp[1085081] this[1085034]))
    unknown chpl__thisAsParent[1085089] "dead at end of block" "insert auto destroy" "temp"
    (1085126 'init var' chpl__thisAsParent[1085089] call_tmp[1085135] tmp[1085081])
    (1085095 'setcid' chpl__thisAsParent[1085089])
    unknown call_tmp[1085140] "expr temp" "maybe param" "maybe type" "temp"
    (1085143 'move' call_tmp[1085140](1085098 call : rank[1085045] int(64)[10]))
    (1085100 'init field' this[1085034] c"rank" call_tmp[1085140])
    (1085115 'end of statement')
    (1085103 'init field' this[1085034] c"idxType" idxType[1085055])
    unknown call_tmp[1085145] "expr temp" "maybe param" "maybe type" "temp"
    (1085148 'move' call_tmp[1085145](1085107 call : strides[1085064] strideKind[107137]))
    (1085109 'init field' this[1085034] c"strides" call_tmp[1085145])
    (1085116 'end of statement')
    (1085112 'setcid' this[1085034])
    (1085124 return _void[46])
  }
  function BaseRectangularDom[269884](?).super[1266343](arg _mt[1266345]:_MT[201], arg this[1266347]:BaseRectangularDom[269884](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266357] "RVV" "temp"
    unknown call_tmp[1266364] "expr temp" "maybe param" "maybe type" "temp"
    (1266367 'move' call_tmp[1266364](1266351 '.v' this[1266347] c"super"))
    (1266362 'move' ret[1266357](1266361 'deref' call_tmp[1266364]))
    (1266359 return ret[1266357])
  }
  function BaseRectangularDom[1266374](?).rank[1266369](arg _mt[1266371]:_MT[201], arg this[1266376]:BaseRectangularDom[1266374](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266407] "RVV" "param" "temp"
    unknown borrowOfThis[1266378]
    (1266399 'end of statement')
    (1266384 'move' borrowOfThis[1266378](1266380 call : this[1266376] _borrowedNonNilable[177](?)))
    (1266400 'end of statement' borrowOfThis[1266378])
    unknown call_tmp[1266421] "expr temp" "maybe param" "maybe type" "temp"
    (1266424 'move' call_tmp[1266421](1266389 'is bound' borrowOfThis[1266378] c"rank"))
    if call_tmp[1266421]
    {
      unknown call_tmp[1266426] "expr temp" "maybe param" "maybe type" "temp"
      (1266429 'move' call_tmp[1266426](1266388 '.' borrowOfThis[1266378] c"rank"))
      (1266412 'move' ret[1266407](1266411 'deref' call_tmp[1266426]))
      gotoReturn _end_rank[1266405] _end_rank[1266405]
      (1266402 'end of statement' borrowOfThis[1266378])
    }
    {
      (1266417 'move' ret[1266407](1266416 'deref' ?[227]))
      gotoReturn _end_rank[1266405] _end_rank[1266405]
    }
    label _end_rank[1266405]
    (1266409 return ret[1266407])
  }
  function BaseRectangularDom[1266374](?).rank[1266431](arg _mt[1266433]:_MT[201], arg this[1266435]:BaseRectangularDom[1266374](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266466] "RVV" "param" "temp"
    unknown borrowOfThis[1266437] "type variable"
    (1266458 'end of statement')
    (1266443 'move' borrowOfThis[1266437](1266439 call : this[1266435] _borrowedNonNilable[177](?)))
    (1266459 'end of statement' borrowOfThis[1266437])
    unknown call_tmp[1266480] "expr temp" "maybe param" "maybe type" "temp"
    (1266483 'move' call_tmp[1266480](1266448 'is bound' borrowOfThis[1266437] c"rank"))
    if call_tmp[1266480]
    {
      unknown call_tmp[1266485] "expr temp" "maybe param" "maybe type" "temp"
      (1266488 'move' call_tmp[1266485](1266447 '.' borrowOfThis[1266437] c"rank"))
      (1266471 'move' ret[1266466](1266470 'deref' call_tmp[1266485]))
      gotoReturn _end_rank[1266464] _end_rank[1266464]
      (1266461 'end of statement' borrowOfThis[1266437])
    }
    {
      (1266476 'move' ret[1266466](1266475 'deref' ?[227]))
      gotoReturn _end_rank[1266464] _end_rank[1266464]
    }
    label _end_rank[1266464]
    (1266468 return ret[1266466])
  }
  function BaseRectangularDom[1266374](?).idxType[1266490](arg _mt[1266492]:_MT[201], arg this[1266494]:BaseRectangularDom[1266374](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266531] "RVV" "temp" "type variable"
    unknown borrowOfThis[1266496]
    (1266523 'end of statement')
    (1266502 'move' borrowOfThis[1266496](1266498 call : this[1266494] _borrowedNonNilable[177](?)))
    (1266524 'end of statement' borrowOfThis[1266496])
    unknown call_tmp[1266545] "expr temp" "maybe param" "maybe type" "temp"
    (1266548 'move' call_tmp[1266545](1266513 'is bound' borrowOfThis[1266496] c"idxType"))
    if call_tmp[1266545]
    {
      unknown call_tmp[1266550] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1266553 'move' call_tmp[1266550](1266506 '.v' borrowOfThis[1266496] c"idxType"))
      unknown call_tmp[1266555] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1266558 'move' call_tmp[1266555](1266509 call chpl_checkLegalTypeFieldAccessor this[1266494] call_tmp[1266550] "idxType"))
      (1266536 'move' ret[1266531](1266535 'deref' call_tmp[1266555]))
      gotoReturn _end_idxType[1266529] _end_idxType[1266529]
      (1266526 'end of statement' borrowOfThis[1266496])
    }
    {
      (1266541 'move' ret[1266531](1266540 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1266529] _end_idxType[1266529]
    }
    label _end_idxType[1266529]
    (1266533 return ret[1266531])
  }
  function BaseRectangularDom[1266374](?).idxType[1266560](arg _mt[1266562]:_MT[201], arg this[1266564]:BaseRectangularDom[1266374](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266599] "RVV" "temp" "type variable"
    unknown borrowOfThis[1266566] "type variable"
    (1266591 'end of statement')
    (1266572 'move' borrowOfThis[1266566](1266568 call : this[1266564] _borrowedNonNilable[177](?)))
    (1266592 'end of statement' borrowOfThis[1266566])
    unknown call_tmp[1266613] "expr temp" "maybe param" "maybe type" "temp"
    (1266616 'move' call_tmp[1266613](1266581 'is bound' borrowOfThis[1266566] c"idxType"))
    if call_tmp[1266613]
    {
      unknown call_tmp[1266618] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1266621 'move' call_tmp[1266618](1266576 '.v' borrowOfThis[1266566] c"idxType"))
      unknown call_tmp[1266623] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1266626 'move' call_tmp[1266623](1266577 call chpl_checkLegalTypeFieldAccessor this[1266564] call_tmp[1266618] "idxType"))
      (1266604 'move' ret[1266599](1266603 'deref' call_tmp[1266623]))
      gotoReturn _end_idxType[1266597] _end_idxType[1266597]
      (1266594 'end of statement' borrowOfThis[1266566])
    }
    {
      (1266609 'move' ret[1266599](1266608 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1266597] _end_idxType[1266597]
    }
    label _end_idxType[1266597]
    (1266601 return ret[1266599])
  }
  function BaseRectangularDom[1266374](?).strides[1266628](arg _mt[1266630]:_MT[201], arg this[1266632]:BaseRectangularDom[1266374](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266663] "RVV" "param" "temp"
    unknown borrowOfThis[1266634]
    (1266655 'end of statement')
    (1266640 'move' borrowOfThis[1266634](1266636 call : this[1266632] _borrowedNonNilable[177](?)))
    (1266656 'end of statement' borrowOfThis[1266634])
    unknown call_tmp[1266677] "expr temp" "maybe param" "maybe type" "temp"
    (1266680 'move' call_tmp[1266677](1266645 'is bound' borrowOfThis[1266634] c"strides"))
    if call_tmp[1266677]
    {
      unknown call_tmp[1266682] "expr temp" "maybe param" "maybe type" "temp"
      (1266685 'move' call_tmp[1266682](1266644 '.' borrowOfThis[1266634] c"strides"))
      (1266668 'move' ret[1266663](1266667 'deref' call_tmp[1266682]))
      gotoReturn _end_strides[1266661] _end_strides[1266661]
      (1266658 'end of statement' borrowOfThis[1266634])
    }
    {
      (1266673 'move' ret[1266663](1266672 'deref' ?[227]))
      gotoReturn _end_strides[1266661] _end_strides[1266661]
    }
    label _end_strides[1266661]
    (1266665 return ret[1266663])
  }
  function BaseRectangularDom[1266374](?).strides[1266687](arg _mt[1266689]:_MT[201], arg this[1266691]:BaseRectangularDom[1266374](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266722] "RVV" "param" "temp"
    unknown borrowOfThis[1266693] "type variable"
    (1266714 'end of statement')
    (1266699 'move' borrowOfThis[1266693](1266695 call : this[1266691] _borrowedNonNilable[177](?)))
    (1266715 'end of statement' borrowOfThis[1266693])
    unknown call_tmp[1266736] "expr temp" "maybe param" "maybe type" "temp"
    (1266739 'move' call_tmp[1266736](1266704 'is bound' borrowOfThis[1266693] c"strides"))
    if call_tmp[1266736]
    {
      unknown call_tmp[1266741] "expr temp" "maybe param" "maybe type" "temp"
      (1266744 'move' call_tmp[1266741](1266703 '.' borrowOfThis[1266693] c"strides"))
      (1266727 'move' ret[1266722](1266726 'deref' call_tmp[1266741]))
      gotoReturn _end_strides[1266720] _end_strides[1266720]
      (1266717 'end of statement' borrowOfThis[1266693])
    }
    {
      (1266732 'move' ret[1266722](1266731 'deref' ?[227]))
      gotoReturn _end_strides[1266720] _end_strides[1266720]
    }
    label _end_strides[1266720]
    (1266724 return ret[1266722])
  }
  function BaseRectangularDom[269884](?).serialize[1266746](arg _mt[1266750]:_MT[201], arg this[1266748]:BaseRectangularDom[269884](?), arg writer[1266749]:_any[141](?), ref arg serializer[1266754]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1266757 call serializeDefaultImpl writer[1266749] serializer[1266754] this[1266748])
    (1266763 return _void[46])
  }
  function BaseRectangularDom[269884](?).deserialize[1266765](arg _mt[1266769]:_MT[201], arg this[1266767]:BaseRectangularDom[269884](?), arg reader[1266768]:_any[141](?), ref arg deserializer[1266774]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1266776] "temp"
    (1266778 'move' _deser_temp[1266776] this[1266767])
    (1266781 call deserializeDefaultImpl reader[1266768] deserializer[1266774] _deser_temp[1266776])
    (1266787 return _void[46])
  }
  type BaseRectangularDom[269884](?) val super[397533]:BaseDom[269761] "super class" unknown rank[269766] "param" int(64)[10] unknown idxType[269771] "type variable" unknown strides[269774] "param" strideKind[107137]
  type BaseRectangularDom[1266374](?)
  type BaseRectangularDom[443012](?)
  function BaseSparseDomImpl[270881](?).deinit[269901](arg _mt[269905]:_MT[201], arg this[269903]:BaseSparseDomImpl[270881](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (626735 return _void[46])
  }
  function BaseSparseDomImpl[270881](?).dsiBulkAdd[269910](arg _mt[269936]:_MT[201], arg this[269912]:BaseSparseDomImpl[270881](?), arg inds[269921]:_array[255540](?), arg dataSorted[269925] :
  0 =
  0, arg isUnique[269929] :
  0 =
  0, arg addOn[269933] :
  nilLocale[135253] =
  nilLocale[135253]) : _unknown[42] "compiler added where" "method" "primary method" "method overrides"
  {
    unknown ret[626739] "RVV" "temp"
    unknown inds_[269940] "dead at end of block" "insert auto destroy"
    (652041 'init var' inds_[269940] inds[269921])
    (269943 'end of statement')
    unknown call_tmp[907834] "expr temp" "maybe param" "maybe type" "temp"
    (907837 'move' call_tmp[907834](269946 call(452319 call (partial) bulkAdd_help _mt[203] this[269912]) inds_[269940] dataSorted[269925] isUnique[269929] addOn[269933]))
    (626744 'move' ret[626739](626743 'deref' call_tmp[907834]))
    gotoReturn _end_dsiBulkAdd[626737] _end_dsiBulkAdd[626737]
    (565173 'end of statement' inds_[269940])
    label _end_dsiBulkAdd[626737]
    (626741 return ret[626739])
  }
  where {
    unknown call_tmp[907841] "expr temp" "maybe param" "maybe type" "temp"
    (907844 'move' call_tmp[907841](452306 call rank _mt[203] this[269912]))
    unknown call_tmp[907848] "expr temp" "maybe param" "maybe type" "temp"
    (907851 'move' call_tmp[907848](452311 call idxType _mt[203] this[269912]))
    unknown call_tmp[907853] "expr temp" "maybe param" "maybe type" "temp"
    (907856 'move' call_tmp[907853](269915 call chpl__buildIndexType call_tmp[907841] call_tmp[907848]))
    unknown call_tmp[907860] "expr temp" "maybe param" "maybe type" "temp"
    (907863 'move' call_tmp[907860](532360 call eltType _mt[203] inds[269921]))
    unknown call_tmp[907865] "expr temp" "maybe param" "maybe type" "temp"
    (907868 'move' call_tmp[907865](532364 'is_instantiation_allow_values' call_tmp[907853] call_tmp[907860]))
    (532358 call & 1 call_tmp[907865])
  }
  function BaseSparseDomImpl[270881](?).dsiBulkAddNoPreserveInds[269953](arg _mt[269979]:_MT[201], arg this[269955]:BaseSparseDomImpl[270881](?), ref arg inds[269964]:_array[255540](?), arg dataSorted[269968] :
  0 =
  0, arg isUnique[269972] :
  0 =
  0, arg addOn[269976] :
  nilLocale[135253] =
  nilLocale[135253]) : _unknown[42] "compiler added where" "method" "primary method" "method overrides"
  {
    unknown ret[626750] "RVV" "temp"
    unknown call_tmp[907872] "expr temp" "maybe param" "maybe type" "temp"
    (907875 'move' call_tmp[907872](269984 call(452338 call (partial) bulkAdd_help _mt[203] this[269955]) inds[269964] dataSorted[269968] isUnique[269972] addOn[269976]))
    (626755 'move' ret[626750](626754 'deref' call_tmp[907872]))
    (626752 return ret[626750])
  }
  where {
    unknown call_tmp[907879] "expr temp" "maybe param" "maybe type" "temp"
    (907882 'move' call_tmp[907879](452328 call rank _mt[203] this[269955]))
    unknown call_tmp[907886] "expr temp" "maybe param" "maybe type" "temp"
    (907889 'move' call_tmp[907886](452333 call idxType _mt[203] this[269955]))
    unknown call_tmp[907891] "expr temp" "maybe param" "maybe type" "temp"
    (907894 'move' call_tmp[907891](269958 call chpl__buildIndexType call_tmp[907879] call_tmp[907886]))
    unknown call_tmp[907898] "expr temp" "maybe param" "maybe type" "temp"
    (907901 'move' call_tmp[907898](532371 call eltType _mt[203] inds[269964]))
    unknown call_tmp[907903] "expr temp" "maybe param" "maybe type" "temp"
    (907906 'move' call_tmp[907903](532375 'is_instantiation_allow_values' call_tmp[907891] call_tmp[907898]))
    (532369 call & 1 call_tmp[907903])
  }
  function BaseSparseDomImpl[270881](?).bulkAdd_help[269991](arg _mt[270018]:_MT[201], arg this[269993]:BaseSparseDomImpl[270881](?), ref arg inds[270003]:_array[255540](?), arg dataSorted[270007] :
  0 =
  0, arg isUnique[270011] :
  0 =
  0, arg addOn[270015] :
  nilLocale[135253] =
  nilLocale[135253]) : _unknown[42] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown ret[626759] "RVV" "temp"
    (270023 call halt "Helper function called on the BaseSparseDomImpl")
    (626761 return ret[626759])
  }
  where {
    unknown call_tmp[907910] "expr temp" "maybe param" "maybe type" "temp"
    (907913 'move' call_tmp[907910](452347 call rank _mt[203] this[269993]))
    unknown call_tmp[907917] "expr temp" "maybe param" "maybe type" "temp"
    (907920 'move' call_tmp[907917](452352 call idxType _mt[203] this[269993]))
    unknown call_tmp[907922] "expr temp" "maybe param" "maybe type" "temp"
    (907925 'move' call_tmp[907922](269997 call chpl__buildIndexType call_tmp[907910] call_tmp[907917]))
    unknown call_tmp[907929] "expr temp" "maybe param" "maybe type" "temp"
    (907932 'move' call_tmp[907929](532382 call eltType _mt[203] inds[270003]))
    unknown call_tmp[907934] "expr temp" "maybe param" "maybe type" "temp"
    (907937 'move' call_tmp[907934](532386 'is_instantiation_allow_values' call_tmp[907922] call_tmp[907929]))
    (532380 call & 1 call_tmp[907934])
  }
  { scopeless type
    int(64)[10]
  }
  function BaseSparseDomImpl[270881](?)._grow[270030](arg _mt[270042]:_MT[201], arg this[270032]:BaseSparseDomImpl[270881](?), arg size[270035]:int(64)[10], arg factor[270039] :
  arrayAsVecGrowthFactor[247536] =
  arrayAsVecGrowthFactor[247536]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[907941] "expr temp" "maybe param" "maybe type" "temp"
    (907944 'move' call_tmp[907941](408650 call nnzDom _mt[203] this[270032]))
    unknown call_tmp[907948] "maybe param" "maybe type" "temp"
    (907951 'move' call_tmp[907948](270048 call size _mt[203] call_tmp[907941]))
    const oldNNZDomSize[270046] "dead at end of block" "const" "insert auto destroy"
    (652043 'init var' oldNNZDomSize[270046] call_tmp[907948])
    (270052 'end of statement')
    unknown call_tmp[907953] "expr temp" "maybe param" "maybe type" "temp"
    (907956 'move' call_tmp[907953](270085 call > size[270035] oldNNZDomSize[270046]))
    unknown call_tmp[907958] "expr temp" "maybe param" "maybe type" "temp"
    (907961 'move' call_tmp[907958](270089 call _cond_test call_tmp[907953]))
    if call_tmp[907958]
    {
      const _newNNZDomSize[270055] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[702547] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[702548] "maybe param" "temp"
      (702553 'move' tmp[702548](702551 call _cond_test oldNNZDomSize[270046]))
      if tmp[702548]
      {
        unknown tmp[702555] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[907963] "expr temp" "maybe param" "maybe type" "temp"
        (907966 'move' call_tmp[907963](270061 call * factor[270039] oldNNZDomSize[270046]))
        unknown call_tmp[907968] "expr temp" "maybe param" "maybe type" "temp"
        (907971 'move' call_tmp[907968](270060 call ceil call_tmp[907963]))
        (702557 'move' tmp[702555](270057 call : call_tmp[907968] int(64)[10]))
        (702562 'move' tmp[702547](702559 '_paramFoldLogical' tmp[702548] tmp[702555]))
      }
      {
        (702567 'move' tmp[702547](702564 '_paramFoldLogical' tmp[702548] 1))
      }
      (652045 'init var' _newNNZDomSize[270055] tmp[702547])
      (270071 'end of statement' oldNNZDomSize[270046])
      unknown call_tmp[907975] "expr temp" "maybe param" "maybe type" "temp"
      (907978 'move' call_tmp[907975](452362 call nnzDom _mt[203] this[270032]))
      unknown call_tmp[907980] "expr temp" "maybe param" "maybe type" "temp"
      (907983 'move' call_tmp[907980](270079 call chpl_build_low_bounded_range 0))
      unknown call_tmp[907985] "expr temp" "maybe param" "maybe type" "temp"
      (907988 'move' call_tmp[907985](270076 call # call_tmp[907980] _newNNZDomSize[270055]))
      unknown call_tmp[907990] "expr temp" "maybe param" "maybe type" "temp"
      (907993 'move' call_tmp[907990](270083 call chpl__buildDomainExpr call_tmp[907985] 1))
      (270072 call = call_tmp[907975] call_tmp[907990])
      (565178 'end of statement' _newNNZDomSize[270055])
    }
    (626763 return _void[46])
  }
  function BaseSparseDomImpl[270881](?)._shrink[270095](arg _mt[270107]:_MT[201], arg this[270097]:BaseSparseDomImpl[270881](?), arg size[270100]:int(64)[10], arg factor[270104] :
  arrayAsVecGrowthFactor[247536] =
  arrayAsVecGrowthFactor[247536]) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[907995] "expr temp" "maybe param" "maybe type" "temp"
    (907998 'move' call_tmp[907995](270176 call == size[270100] 0))
    unknown call_tmp[908000] "expr temp" "maybe param" "maybe type" "temp"
    (908003 'move' call_tmp[908000](270180 call _cond_test call_tmp[907995]))
    if call_tmp[908000]
    {
      unknown call_tmp[908007] "expr temp" "maybe param" "maybe type" "temp"
      (908010 'move' call_tmp[908007](452371 call nnzDom _mt[203] this[270097]))
      unknown call_tmp[908012] "expr temp" "maybe param" "maybe type" "temp"
      (908015 'move' call_tmp[908012](270117 call chpl_build_bounded_range 1 0))
      unknown call_tmp[908017] "expr temp" "maybe param" "maybe type" "temp"
      (908020 'move' call_tmp[908017](270120 call chpl__buildDomainExpr call_tmp[908012] 1))
      (270111 call = call_tmp[908007] call_tmp[908017])
    }
    {
      unknown call_tmp[908024] "expr temp" "maybe param" "maybe type" "temp"
      (908027 'move' call_tmp[908024](408655 call nnzDom _mt[203] this[270097]))
      unknown call_tmp[908031] "expr temp" "maybe param" "maybe type" "temp"
      (908034 'move' call_tmp[908031](270130 call size _mt[203] call_tmp[908024]))
      unknown call_tmp[908036] "expr temp" "maybe param" "maybe type" "temp"
      (908039 'move' call_tmp[908036](270133 call ** factor[270104] 2))
      unknown call_tmp[908041] "expr temp" "maybe param" "maybe type" "temp"
      (908044 'move' call_tmp[908041](270127 call / call_tmp[908031] call_tmp[908036]))
      unknown call_tmp[908046] "maybe param" "maybe type" "temp"
      (908049 'move' call_tmp[908046](270125 call : call_tmp[908041] int(64)[10]))
      const shrinkThreshold[270124] "dead at end of block" "const" "insert auto destroy"
      (652047 'init var' shrinkThreshold[270124] call_tmp[908046])
      (270139 'end of statement')
      unknown call_tmp[908051] "expr temp" "maybe param" "maybe type" "temp"
      (908054 'move' call_tmp[908051](270168 call < size[270100] shrinkThreshold[270124]))
      unknown call_tmp[908056] "expr temp" "maybe param" "maybe type" "temp"
      (908059 'move' call_tmp[908056](270172 call _cond_test call_tmp[908051]))
      if call_tmp[908056]
      {
        unknown call_tmp[908063] "expr temp" "maybe param" "maybe type" "temp"
        (908066 'move' call_tmp[908063](408660 call nnzDom _mt[203] this[270097]))
        unknown call_tmp[908070] "expr temp" "maybe param" "maybe type" "temp"
        (908073 'move' call_tmp[908070](270148 call size _mt[203] call_tmp[908063]))
        unknown call_tmp[908075] "expr temp" "maybe param" "maybe type" "temp"
        (908078 'move' call_tmp[908075](270145 call / call_tmp[908070] factor[270104]))
        unknown call_tmp[908080] "maybe param" "maybe type" "temp"
        (908083 'move' call_tmp[908080](270143 call : call_tmp[908075] int(64)[10]))
        const _newNNZDomSize[270142] "dead at end of block" "const" "insert auto destroy"
        (652049 'init var' _newNNZDomSize[270142] call_tmp[908080])
        (270154 'end of statement')
        unknown call_tmp[908087] "expr temp" "maybe param" "maybe type" "temp"
        (908090 'move' call_tmp[908087](452378 call nnzDom _mt[203] this[270097]))
        unknown call_tmp[908092] "expr temp" "maybe param" "maybe type" "temp"
        (908095 'move' call_tmp[908092](270162 call chpl_build_low_bounded_range 0))
        unknown call_tmp[908097] "expr temp" "maybe param" "maybe type" "temp"
        (908100 'move' call_tmp[908097](270159 call # call_tmp[908092] _newNNZDomSize[270142]))
        unknown call_tmp[908102] "expr temp" "maybe param" "maybe type" "temp"
        (908105 'move' call_tmp[908102](270166 call chpl__buildDomainExpr call_tmp[908097] 1))
        (270155 call = call_tmp[908087] call_tmp[908102])
        (565181 'end of statement' _newNNZDomSize[270142])
      }
    }
    (626765 return _void[46])
  }
  function BaseSparseDomImpl[270881](?)._bulkGrow[270186](arg _mt[270190]:_MT[201], arg this[270188]:BaseSparseDomImpl[270881](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[908109] "maybe param" "maybe type" "temp"
    (908112 'move' call_tmp[908109](270199 call(452388 call (partial) getNNZ _mt[203] this[270188])))
    const nnz[270197] "dead at end of block" "const" "insert auto destroy"
    (652051 'init var' nnz[270197] call_tmp[908109])
    (270201 'end of statement')
    unknown call_tmp[908116] "expr temp" "maybe param" "maybe type" "temp"
    (908119 'move' call_tmp[908116](408665 call nnzDom _mt[203] this[270188]))
    unknown call_tmp[908123] "expr temp" "maybe param" "maybe type" "temp"
    (908126 'move' call_tmp[908123](270237 call size _mt[203] call_tmp[908116]))
    unknown call_tmp[908128] "expr temp" "maybe param" "maybe type" "temp"
    (908131 'move' call_tmp[908128](270233 call > nnz[270197] call_tmp[908123]))
    unknown call_tmp[908133] "expr temp" "maybe param" "maybe type" "temp"
    (908136 'move' call_tmp[908133](270240 call _cond_test call_tmp[908128]))
    if call_tmp[908133]
    {
      unknown call_tmp[908138] "expr temp" "maybe param" "maybe type" "temp"
      (908141 'move' call_tmp[908138](270212 call log2 nnz[270197]))
      unknown call_tmp[908143] "expr temp" "maybe param" "maybe type" "temp"
      (908146 'move' call_tmp[908143](270209 call + call_tmp[908138] 1.0))
      unknown call_tmp[908148] "expr temp" "maybe param" "maybe type" "temp"
      (908151 'move' call_tmp[908148](270208 call exp2 call_tmp[908143]))
      unknown call_tmp[908153] "maybe param" "maybe type" "temp"
      (908156 'move' call_tmp[908153](270205 call : call_tmp[908148] int(64)[10]))
      const _newNNZDomSize[270204] "dead at end of block" "const" "insert auto destroy"
      (652053 'init var' _newNNZDomSize[270204] call_tmp[908153])
      (270219 'end of statement' nnz[270197])
      unknown call_tmp[908160] "expr temp" "maybe param" "maybe type" "temp"
      (908163 'move' call_tmp[908160](452394 call nnzDom _mt[203] this[270188]))
      unknown call_tmp[908165] "expr temp" "maybe param" "maybe type" "temp"
      (908168 'move' call_tmp[908165](270227 call chpl_build_low_bounded_range 0))
      unknown call_tmp[908170] "expr temp" "maybe param" "maybe type" "temp"
      (908173 'move' call_tmp[908170](270224 call # call_tmp[908165] _newNNZDomSize[270204]))
      unknown call_tmp[908175] "expr temp" "maybe param" "maybe type" "temp"
      (908178 'move' call_tmp[908175](270231 call chpl__buildDomainExpr call_tmp[908170] 1))
      (270220 call = call_tmp[908160] call_tmp[908175])
      (565184 'end of statement' _newNNZDomSize[270204])
    }
    (626767 return _void[46])
    (396935 'used modules list'(270194 'use' Math[10521]))
  }
  function BaseSparseDomImpl[270881](?)._countDuplicates[270246](arg _mt[270252]:_MT[201], arg this[270248]:BaseSparseDomImpl[270881](?), arg arr[270250]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[626771] "RVV" "temp"
    unknown call_tmp[908180] "maybe param" "maybe type" "temp"
    (908183 'move' call_tmp[908180](270260 call - 1))
    unknown dupCount[270259] "dead at end of block" "insert auto destroy"
    (652055 'init var' dupCount[270259] call_tmp[908180])
    (270264 'end of statement')
    unknown call_tmp[908187] "expr temp" "maybe param" "maybe type" "temp"
    (908190 'move' call_tmp[908187](270270 call _dom _mt[203] arr[270250]))
    unknown call_tmp[908194] "expr temp" "maybe param" "maybe type" "temp"
    (908197 'move' call_tmp[908194](270273 call lowBound _mt[203] call_tmp[908187]))
    unknown call_tmp[908199] "maybe param" "maybe type" "temp"
    (908202 'move' call_tmp[908199](270268 call arr[270250] call_tmp[908194]))
    unknown prev[270266] "dead at end of block" "insert auto destroy"
    (652057 'init var' prev[270266] call_tmp[908199])
    (270277 'end of statement')
    {
      unknown _indexOfInterest[270303] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270304] "expr temp" "temp"
      (270313 'move' _iterator[270304](270311 call _getIterator arr[270250]))
      Defer
      {
        {
          (270328 call _freeIterator _iterator[270304])
        }
      }
      { scopeless type
        (270318 'move' _indexOfInterest[270303](270315 call iteratorIndex _iterator[270304]))
      }
      ForLoop[270305]
      {
        unknown a[270278] "index var" "insert auto destroy"
        (565187 'end of statement')
        (270323 'move' a[270278] _indexOfInterest[270303])
        (565188 'end of statement' a[270278])
        {
          unknown call_tmp[908204] "expr temp" "maybe param" "maybe type" "temp"
          (908207 'move' call_tmp[908204](270292 call == a[270278] prev[270266]))
          unknown call_tmp[908209] "expr temp" "maybe param" "maybe type" "temp"
          (908212 'move' call_tmp[908209](270296 call _cond_test call_tmp[908204]))
          if call_tmp[908209]
          {
            (270282 call += dupCount[270259] 1)
            (565190 'end of statement' dupCount[270259])
          }
          {
            (270287 call = prev[270266] a[270278])
            (565192 'end of statement' prev[270266] a[270278])
          }
          {
          }
        }
        label _continueLabel[270308]
        _indexOfInterest[270303]
        _iterator[270304]
      }
      label _breakLabel[270309]
    }
    (626776 'move' ret[626771](626775 'deref' dupCount[270259]))
    gotoReturn _end__countDuplicates[626769] _end__countDuplicates[626769]
    (565195 'end of statement' dupCount[270259])
    label _end__countDuplicates[626769]
    (626773 return ret[626771])
  }
  where {
    (270255 call isArray arr[270250])
  }
  function BaseSparseDomImpl[270881](?).bulkAdd_prepareInds[270340](arg _mt[270352]:_MT[201], arg this[270342]:BaseSparseDomImpl[270881](?), ref arg inds[270344]:_any[141](?), arg dataSorted[270346]:_any[141](?), arg isUnique[270348]:_any[141](?), arg cmp[270350]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[908214] "expr temp" "maybe param" "maybe type" "temp"
    (908217 'move' call_tmp[908214](270364 call ! dataSorted[270346]))
    unknown call_tmp[908219] "expr temp" "maybe param" "maybe type" "temp"
    (908222 'move' call_tmp[908219](270367 call _cond_test call_tmp[908214]))
    if call_tmp[908219]
    {
      (270359 call sort inds[270344](comparator = cmp[270350]))
    }
    unknown call_tmp[908224] "expr temp" "maybe param" "maybe type" "temp"
    (908227 'move' call_tmp[908224](270543 call _cond_test 1))
    if call_tmp[908224]
    {
      unknown tmp[502113] "maybe param" "temp"
      (502124 'move' tmp[502113] dataSorted[270346])
      unknown call_tmp[908229] "expr temp" "maybe param" "maybe type" "temp"
      (908232 'move' call_tmp[908229](502126 call _cond_invalid tmp[502113]))
      if call_tmp[908229]
      {
        (502129 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[702574] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[702575] "maybe param" "temp"
      unknown call_tmp[908234] "expr temp" "maybe param" "maybe type" "temp"
      (908237 'move' call_tmp[908234](502114 call isTrue tmp[502113]))
      (702580 'move' tmp[702575](702578 call _cond_test call_tmp[908234]))
      if tmp[702575]
      {
        unknown tmp[702582] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[908239] "expr temp" "maybe param" "maybe type" "temp"
        (908242 'move' call_tmp[908239](270385 call isSorted inds[270344](comparator = cmp[270350])))
        unknown call_tmp[908244] "expr temp" "maybe param" "maybe type" "temp"
        (908247 'move' call_tmp[908244](270382 call ! call_tmp[908239]))
        (702584 'move' tmp[702582](502117 call isTrue call_tmp[908244]))
        (702589 'move' tmp[702574](702586 '_paramFoldLogical' tmp[702575] tmp[702582]))
      }
      {
        (702594 'move' tmp[702574](702591 '_paramFoldLogical' tmp[702575] 0))
      }
      unknown call_tmp[908249] "expr temp" "maybe param" "maybe type" "temp"
      (908252 'move' call_tmp[908249](270389 call _cond_test tmp[702574]))
      if call_tmp[908249]
      {
        (270374 call halt "bulkAdd: Data not sorted, call the function with \n              dataSorted=false")
      }
      unknown call_tmp[908254] "expr temp" "maybe param" "maybe type" "temp"
      (908257 'move' call_tmp[908254](270499 call _cond_test isUnique[270348]))
      if call_tmp[908254]
      {
        unknown call_tmp[908261] "expr temp" "maybe param" "maybe type" "temp"
        (908264 'move' call_tmp[908261](270398 call _dom _mt[203] inds[270344]))
        unknown call_tmp[908268] "maybe param" "maybe type" "temp"
        (908271 'move' call_tmp[908268](270401 call lowBound _mt[203] call_tmp[908261]))
        const indsStart[270396] "dead at end of block" "const" "insert auto destroy"
        (652059 'init var' indsStart[270396] call_tmp[908268])
        (270405 'end of statement')
        unknown call_tmp[908275] "expr temp" "maybe param" "maybe type" "temp"
        (908278 'move' call_tmp[908275](270409 call _dom _mt[203] inds[270344]))
        unknown call_tmp[908282] "maybe param" "maybe type" "temp"
        (908285 'move' call_tmp[908282](270412 call highBound _mt[203] call_tmp[908275]))
        const indsEnd[270407] "dead at end of block" "const" "insert auto destroy"
        (652061 'init var' indsEnd[270407] call_tmp[908282])
        (270416 'end of statement')
        unknown call_tmp[908287] "maybe param" "maybe type" "temp"
        (908290 'move' call_tmp[908287](270420 call inds[270344] indsStart[270396]))
        unknown lastInd[270418] "dead at end of block" "insert auto destroy"
        (652063 'init var' lastInd[270418] call_tmp[908287])
        (270423 'end of statement' indsStart[270396])
        {
          unknown _indexOfInterest[270459] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[270460] "expr temp" "temp"
          unknown call_tmp[908292] "expr temp" "maybe param" "maybe type" "temp"
          (908295 'move' call_tmp[908292](270472 call + indsStart[270396] 1))
          unknown call_tmp[908297] "expr temp" "maybe param" "maybe type" "temp"
          (908300 'move' call_tmp[908297](270476 call chpl_direct_range_iter call_tmp[908292] indsEnd[270407]))
          (270469 'move' _iterator[270460](270467 call _getIterator call_tmp[908297]))
          Defer
          {
            {
              (270491 call _freeIterator _iterator[270460])
            }
          }
          { scopeless type
            (270481 'move' _indexOfInterest[270459](270478 call iteratorIndex _iterator[270460]))
          }
          ForLoop[270461]
          {
            unknown i[270424] "index var" "insert auto destroy"
            (565202 'end of statement')
            (270486 'move' i[270424] _indexOfInterest[270459])
            (565203 'end of statement' i[270424])
            {
              unknown call_tmp[908302] "expr temp" "maybe param" "maybe type" "temp"
              (908305 'move' call_tmp[908302](270450 call inds[270344] i[270424]))
              unknown call_tmp[908307] "expr temp" "maybe param" "maybe type" "temp"
              (908310 'move' call_tmp[908307](270447 call == call_tmp[908302] lastInd[270418]))
              unknown call_tmp[908312] "expr temp" "maybe param" "maybe type" "temp"
              (908315 'move' call_tmp[908312](270453 call _cond_test call_tmp[908307]))
              if call_tmp[908312]
              {
                (270435 call halt "bulkAdd: There are duplicates, call the function \n                  with isUnique=false")
              }
              {
                unknown call_tmp[908317] "expr temp" "maybe param" "maybe type" "temp"
                (908320 'move' call_tmp[908317](270444 call inds[270344] i[270424]))
                (270440 call = lastInd[270418] call_tmp[908317])
                (565206 'end of statement' lastInd[270418] i[270424])
              }
            }
            label _continueLabel[270464]
            _indexOfInterest[270459]
            _iterator[270460]
          }
          label _breakLabel[270465]
        }
      }
      {
        unknown _indexOfInterest[270510] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[270511] "expr temp" "temp"
        (270520 'move' _iterator[270511](270518 call _getIterator inds[270344]))
        Defer
        {
          {
            (270535 call _freeIterator _iterator[270511])
          }
        }
        { scopeless type
          (270525 'move' _indexOfInterest[270510](270522 call iteratorIndex _iterator[270511]))
        }
        ForLoop[270512]
        {
          unknown i[270503] "index var" "insert auto destroy"
          (565210 'end of statement')
          (270530 'move' i[270503] _indexOfInterest[270510])
          (565211 'end of statement' i[270503])
          (270507 call(452427 call (partial) boundsCheck _mt[203] this[270342]) i[270503])
          (565213 'end of statement' i[270503])
          label _continueLabel[270515]
          _indexOfInterest[270510]
          _iterator[270511]
        }
        label _breakLabel[270516]
      }
    }
    (626780 return _void[46])
    (396937 'used modules list'(270356 'use' Sort[247204]))
  }
  function BaseSparseDomImpl[270881](?).__getActualInsertPts[270549](arg _mt[270559]:_MT[201], arg this[270551]:BaseSparseDomImpl[270881](?), arg d[270553]:_any[141](?), arg inds[270555]:_any[141](?), arg isUnique[270557]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[626784] "RVV" "temp"
    unknown indivInsertPts[270563] "dead at end of block" "insert auto destroy"
    unknown call_tmp[908326] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (908329 'move' call_tmp[908326](270565 call _dom _mt[203] inds[270555]))
    unknown call_tmp[908331] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (908334 'move' call_tmp[908331](270568 call chpl__ensureDomainExpr call_tmp[908326]))
    unknown call_tmp[908336] "expr temp" "maybe param" "maybe type" "temp"
    (908339 'move' call_tmp[908336](270571 call chpl__buildArrayRuntimeType call_tmp[908331] int(64)[10]))
    (652065 'default init var' indivInsertPts[270563] call_tmp[908336])
    (270574 'end of statement')
    unknown actualInsertPts[270576] "dead at end of block" "insert auto destroy"
    unknown call_tmp[908343] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (908346 'move' call_tmp[908343](270578 call _dom _mt[203] inds[270555]))
    unknown call_tmp[908348] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (908351 'move' call_tmp[908348](270581 call chpl__ensureDomainExpr call_tmp[908343]))
    unknown call_tmp[908353] "expr temp" "maybe param" "maybe type" "temp"
    (908356 'move' call_tmp[908353](270584 call chpl__buildArrayRuntimeType call_tmp[908348] int(64)[10]))
    (652067 'default init var' actualInsertPts[270576] call_tmp[908353])
    (270587 'end of statement')
    unknown call_tmp[908358] "expr temp" "maybe param" "maybe type" "temp"
    (908361 'move' call_tmp[908358](270689 call ! isUnique[270557]))
    unknown call_tmp[908363] "expr temp" "maybe param" "maybe type" "temp"
    (908366 'move' call_tmp[908363](270692 call _cond_test call_tmp[908358]))
    if call_tmp[908363]
    {
      unknown call_tmp[908370] "expr temp" "maybe param" "maybe type" "temp"
      (908373 'move' call_tmp[908370](270596 call _dom _mt[203] inds[270555]))
      unknown call_tmp[908377] "expr temp" "maybe param" "maybe type" "temp"
      (908380 'move' call_tmp[908377](270599 call lowBound _mt[203] call_tmp[908370]))
      unknown call_tmp[908382] "expr temp" "maybe param" "maybe type" "temp"
      (908385 'move' call_tmp[908382](270594 call inds[270555] call_tmp[908377]))
      unknown call_tmp[908387] "maybe param" "maybe type" "temp"
      (908390 'move' call_tmp[908387](270591 call + call_tmp[908382] 1))
      unknown lastInd[270590] "dead at end of block" "insert auto destroy"
      (652069 'init var' lastInd[270590] call_tmp[908387])
      (270604 'end of statement')
      {
        unknown _indexOfInterest[270639] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[270640] "expr temp" "temp"
        unknown call_tmp[908392] "expr temp" "maybe param" "maybe type" "temp"
        (908395 'move' call_tmp[908392](270649 call _getIterator inds[270555]))
        unknown call_tmp[908397] "expr temp" "maybe param" "maybe type" "temp"
        (908400 'move' call_tmp[908397](270652 call _getIterator indivInsertPts[270563]))
        (270654 'move' _iterator[270640](270615 call _build_tuple call_tmp[908392] call_tmp[908397]))
        Defer
        {
          {
            (270682 call _freeIterator _iterator[270640])
          }
        }
        { scopeless type
          (270659 'move' _indexOfInterest[270639](270656 call iteratorIndex _iterator[270640]))
        }
        ForLoop[270641]
        {
          (270664 call _check_tuple_var_decl _indexOfInterest[270639] 2)
          (565216 'end of statement')
          unknown i[270606] "index var" "insert auto destroy"
          (565217 'end of statement')
          (270671 'move' i[270606](270668 call _indexOfInterest[270639] 0))
          (565218 'end of statement' i[270606])
          unknown p[270608] "index var" "insert auto destroy"
          (565220 'end of statement')
          (270677 'move' p[270608](270674 call _indexOfInterest[270639] 1))
          (565221 'end of statement' p[270608])
          {
            unknown call_tmp[908402] "expr temp" "maybe param" "maybe type" "temp"
            (908405 'move' call_tmp[908402](270629 call == i[270606] lastInd[270590]))
            unknown call_tmp[908407] "expr temp" "maybe param" "maybe type" "temp"
            (908410 'move' call_tmp[908407](270633 call _cond_test call_tmp[908402]))
            if call_tmp[908407]
            {
              unknown call_tmp[908412] "expr temp" "maybe param" "maybe type" "temp"
              (908415 'move' call_tmp[908412](270620 call - 1))
              (270617 call = p[270608] call_tmp[908412])
              (565223 'end of statement' p[270608])
            }
            {
              (270624 call = lastInd[270590] i[270606])
              (565225 'end of statement' lastInd[270590] i[270606])
            }
          }
          label _continueLabel[270644]
          _indexOfInterest[270639]
          _iterator[270640]
        }
        label _breakLabel[270645]
      }
    }
    Forall[270759] {
      induction variables:
        
        unknown i[270697] "index var" "insert auto destroy"
        
        unknown p[270699] "index var" "insert auto destroy"
      iterated expressions:
        inds[270555]
        indivInsertPts[270563]
      shadow variables:
      other variables
        forall body
      {
        unknown tmp[502134] "maybe param" "temp"
        (502145 'move' tmp[502134] isUnique[270557])
        unknown call_tmp[908417] "expr temp" "maybe param" "maybe type" "temp"
        (908420 'move' call_tmp[908417](502147 call _cond_invalid tmp[502134]))
        if call_tmp[908417]
        {
          (502150 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[702601] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[702602] "maybe param" "temp"
        unknown call_tmp[908422] "expr temp" "maybe param" "maybe type" "temp"
        (908425 'move' call_tmp[908422](502135 call isTrue tmp[502134]))
        (702607 'move' tmp[702602](702605 call _cond_test call_tmp[908422]))
        if tmp[702602]
        {
          (702612 'move' tmp[702601](702609 '_paramFoldLogical' tmp[702602] 1))
        }
        {
          unknown tmp[702614] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[908427] "expr temp" "maybe param" "maybe type" "temp"
          (908430 'move' call_tmp[908427](270750 call - 1))
          unknown call_tmp[908432] "expr temp" "maybe param" "maybe type" "temp"
          (908435 'move' call_tmp[908432](270747 call != p[270699] call_tmp[908427]))
          (702616 'move' tmp[702614](502139 call isTrue call_tmp[908432]))
          (702621 'move' tmp[702601](702618 '_paramFoldLogical' tmp[702602] tmp[702614]))
        }
        unknown call_tmp[908437] "expr temp" "maybe param" "maybe type" "temp"
        (908440 'move' call_tmp[908437](270753 call _cond_test tmp[702601]))
        if call_tmp[908437]
        {
          unknown call_tmp[908444] "maybe param" "maybe type" "temp"
          (908447 'move' call_tmp[908444](270718 call(270715 call (partial) find _mt[203] d[270553]) i[270697]))
          const tmp[270720] "dead at end of block" "const" "insert auto destroy" "temp"
          (652071 'init var' tmp[270720] call_tmp[908444])
          (270727 call _check_tuple_var_decl tmp[270720] 2)
          (565229 'end of statement')
          unknown call_tmp[908449] "maybe param" "maybe type" "temp"
          (908452 'move' call_tmp[908449](270721 call tmp[270720] 0))
          const found[270710] "dead at end of block" "const" "insert auto destroy"
          (652073 'init var' found[270710] call_tmp[908449])
          unknown call_tmp[908454] "maybe param" "maybe type" "temp"
          (908457 'move' call_tmp[908454](270724 call tmp[270720] 1))
          const insertPt[270712] "dead at end of block" "const" "insert auto destroy"
          (652075 'init var' insertPt[270712] call_tmp[908454])
          (270732 'end of statement')
          unknown tmp[702628] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[702629] "maybe param" "temp"
          (702634 'move' tmp[702629](702632 call _cond_test found[270710]))
          if tmp[702629]
          {
            unknown tmp[702636] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (702638 'move' tmp[702636](270737 call - 1))
            (702643 'move' tmp[702628](702640 '_paramFoldLogical' tmp[702629] tmp[702636]))
          }
          {
            (702648 'move' tmp[702628](702645 '_paramFoldLogical' tmp[702629] insertPt[270712]))
          }
          (270733 call = p[270699] tmp[702628])
          (565230 'end of statement' p[270699] found[270710] insertPt[270712])
        }
      }
    }
    unknown actualAddCnt[270764] "dead at end of block" "insert auto destroy"
    (652077 'init var' actualAddCnt[270764] 0)
    (270767 'end of statement')
    {
      unknown _indexOfInterest[270808] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270809] "expr temp" "temp"
      unknown call_tmp[908459] "expr temp" "maybe param" "maybe type" "temp"
      (908462 'move' call_tmp[908459](270818 call _getIterator indivInsertPts[270563]))
      unknown call_tmp[908464] "expr temp" "maybe param" "maybe type" "temp"
      (908467 'move' call_tmp[908464](270821 call _getIterator actualInsertPts[270576]))
      (270823 'move' _iterator[270809](270778 call _build_tuple call_tmp[908459] call_tmp[908464]))
      Defer
      {
        {
          (270851 call _freeIterator _iterator[270809])
        }
      }
      { scopeless type
        (270828 'move' _indexOfInterest[270808](270825 call iteratorIndex _iterator[270809]))
      }
      ForLoop[270810]
      {
        (270833 call _check_tuple_var_decl _indexOfInterest[270808] 2)
        (565235 'end of statement')
        unknown ip[270769] "index var" "insert auto destroy"
        (565236 'end of statement')
        (270840 'move' ip[270769](270837 call _indexOfInterest[270808] 0))
        (565237 'end of statement' ip[270769])
        unknown ap[270771] "index var" "insert auto destroy"
        (565239 'end of statement')
        (270846 'move' ap[270771](270843 call _indexOfInterest[270808] 1))
        (565240 'end of statement' ap[270771])
        {
          unknown call_tmp[908469] "expr temp" "maybe param" "maybe type" "temp"
          (908472 'move' call_tmp[908469](270800 call - 1))
          unknown call_tmp[908474] "expr temp" "maybe param" "maybe type" "temp"
          (908477 'move' call_tmp[908474](270797 call != ip[270769] call_tmp[908469]))
          unknown call_tmp[908479] "expr temp" "maybe param" "maybe type" "temp"
          (908482 'move' call_tmp[908479](270803 call _cond_test call_tmp[908474]))
          if call_tmp[908479]
          {
            unknown call_tmp[908484] "expr temp" "maybe param" "maybe type" "temp"
            (908487 'move' call_tmp[908484](270784 call + ip[270769] actualAddCnt[270764]))
            (270781 call = ap[270771] call_tmp[908484])
            (565242 'end of statement' ap[270771] ip[270769] actualAddCnt[270764])
            (270788 call += actualAddCnt[270764] 1)
            (565246 'end of statement' actualAddCnt[270764])
          }
          {
            (270792 call = ap[270771] ip[270769])
            (565248 'end of statement' ap[270771] ip[270769])
          }
        }
        label _continueLabel[270813]
        _indexOfInterest[270808]
        _iterator[270809]
      }
      label _breakLabel[270814]
    }
    unknown call_tmp[908489] "expr temp" "maybe param" "maybe type" "temp"
    (908492 'move' call_tmp[908489](270862 call _build_tuple actualInsertPts[270576] actualAddCnt[270764]))
    (626789 'move' ret[626784](626788 'deref' call_tmp[908489]))
    gotoReturn _end___getActualInsertPts[626782] _end___getActualInsertPts[626782]
    (565251 'end of statement' actualInsertPts[270576] actualAddCnt[270764])
    label _end___getActualInsertPts[626782]
    (626786 return ret[626784])
  }
  function BaseSparseDomImpl[270881](?).dsiClear[270866](arg _mt[270870]:_MT[201], arg this[270868]:BaseSparseDomImpl[270881](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (270874 call halt "not implemented")
    (626793 return _void[46])
  }
  function BaseSparseDomImpl[270881](?).super[1266789](arg _mt[1266791]:_MT[201], arg this[1266793]:BaseSparseDomImpl[270881](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266803] "RVV" "temp"
    unknown call_tmp[1266810] "expr temp" "maybe param" "maybe type" "temp"
    (1266813 'move' call_tmp[1266810](1266797 '.v' this[1266793] c"super"))
    (1266808 'move' ret[1266803](1266807 'deref' call_tmp[1266810]))
    (1266805 return ret[1266803])
  }
  function BaseSparseDomImpl[270881](?).nnzDom[1266815](arg _mt[1266817]:_MT[201], arg this[1266819]:BaseSparseDomImpl[270881](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1266829] "RVV" "temp"
    unknown call_tmp[1266836] "expr temp" "maybe param" "maybe type" "temp"
    (1266839 'move' call_tmp[1266836](1266823 '.' this[1266819] c"nnzDom"))
    (1266834 'move' ret[1266829](1266833 'addr of' call_tmp[1266836]))
    (1266831 return ret[1266829])
  }
  function BaseSparseDomImpl[270881](?).init[1266841](arg _mt[1266843]:_MT[201], arg this[1266844]:BaseSparseDomImpl[270881](?), param arg rank[1266965]:int(64)[10], arg idxType[1266968]:_any[141](?), in arg parentDom[1266971]:_any[141](?), in arg nnzDom[1266974] :
  unknown call_tmp[1267040] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[1267045] "expr temp" "maybe param" "maybe type" "temp") : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1267001] "temporary of super field" "temp"
    (1267003 'move' super_tmp[1267001](1267000 '.v' this[1266844] c"super"))
    (1266964 call(1266962 call (partial) init _mt[203] super_tmp[1267001]) rank[1266965] idxType[1266968] parentDom[1266971])
    (1267027 'end of statement')
    unknown tmp[1267006] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1267030] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1267052] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1267055 'move' call_tmp[1267052](1267008 '.v' this[1266844] c"super"))
      (1267034 'move' call_type_tmp[1267030](1267011 'typeof' call_tmp[1267052]))
    }
    (1267012 'move' tmp[1267006] call_type_tmp[1267030])
    unknown call_tmp[1267057] "maybe param" "maybe type" "temp"
    (1267060 'move' call_tmp[1267057](1267017 'cast' tmp[1267006] this[1266844]))
    unknown chpl__thisAsParent[1267014] "dead at end of block" "insert auto destroy" "temp"
    (1267038 'init var' chpl__thisAsParent[1267014] call_tmp[1267057] tmp[1267006])
    (1267020 'setcid' chpl__thisAsParent[1267014])
    (1267022 '.=' this[1266844] c"nnzDom" nnzDom[1266974])
    (1267028 'end of statement')
    (1267025 'setcid' this[1266844])
    (1267036 return _void[46])
  }
  function BaseSparseDomImpl[270881](?).serialize[1267062](arg _mt[1267066]:_MT[201], arg this[1267064]:BaseSparseDomImpl[270881](?), arg writer[1267065]:_any[141](?), ref arg serializer[1267070]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1267073 call serializeDefaultImpl writer[1267065] serializer[1267070] this[1267064])
    (1267079 return _void[46])
  }
  function BaseSparseDomImpl[270881](?).deserialize[1267081](arg _mt[1267085]:_MT[201], arg this[1267083]:BaseSparseDomImpl[270881](?), arg reader[1267084]:_any[141](?), ref arg deserializer[1267090]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1267092] "temp"
    (1267094 'move' _deser_temp[1267092] this[1267083])
    (1267097 call deserializeDefaultImpl reader[1267084] deserializer[1267090] _deser_temp[1267092])
    (1267103 return _void[46])
  }
  type BaseSparseDomImpl[270881](?) val super[397663]:BaseSparseDom[271529](?) "delay instantiation" "super class" unknown nnzDom[269889](269896 call chpl__buildDomainExpr(269893 call chpl_build_bounded_range 1 0) 0)
  function SparseIndexBuffer[271065](?).init[270935](arg _mt[270947]:_MT[201], ref arg this[270937]:SparseIndexBuffer[271065](?), arg size[270939]:_any[141](?), param arg rank[270942]:int(64)[10], arg obj[270945]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[908494] "expr temp" "maybe param" "maybe type" "temp"
    (908497 'move' call_tmp[908494](532388 call : rank[270942] int(64)[10]))
    (532390 'init field' this[270937] c"rank" call_tmp[908494])
    (565255 'end of statement')
    unknown call_tmp[908499] "marked generic" "maybe param" "maybe type" "temp"
    (908502 'move' call_tmp[908499](532396 call BaseSparseDom[271529](?) ?[227]))
    unknown obj[532393] "temp"
    (532398 'init var' obj[532393] obj[270945] call_tmp[908499])
    (532400 'init field' this[270937] c"obj" obj[532393])
    (565256 'end of statement')
    unknown idxType[532416] "temp" "type variable"
    unknown tmp[702655] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702656] "maybe param" "temp"
    unknown call_tmp[908504] "expr temp" "maybe param" "maybe type" "temp"
    (908507 'move' call_tmp[908504](532424 '.v' this[270937] c"rank"))
    unknown call_tmp[908509] "expr temp" "maybe param" "maybe type" "temp"
    (908512 'move' call_tmp[908509](532405 call == call_tmp[908504] 1))
    (702661 'move' tmp[702656](702659 call _cond_test call_tmp[908509]))
    if tmp[702656]
    {
      (702666 'move' tmp[702655](702663 '_paramFoldLogical' tmp[702656] int(64)[10]))
    }
    {
      unknown tmp[702668] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[908514] "expr temp" "maybe param" "maybe type" "temp"
      (908517 'move' call_tmp[908514](532427 '.v' this[270937] c"rank"))
      (702670 'move' tmp[702668](532412 call * call_tmp[908514] int(64)[10]))
      (702675 'move' tmp[702655](702672 '_paramFoldLogical' tmp[702656] tmp[702668]))
    }
    (532418 'move' idxType[532416] tmp[702655])
    (532420 'init field' this[270937] c"idxType" idxType[532416])
    (565257 'end of statement')
    unknown call_tmp[908519] "expr temp" "maybe param" "maybe type" "temp"
    (908522 'move' call_tmp[908519](270971 call chpl_build_low_bounded_range 0))
    unknown call_tmp[908524] "expr temp" "maybe param" "maybe type" "temp"
    (908527 'move' call_tmp[908524](270968 call # call_tmp[908519] size[270939]))
    unknown call_tmp[908529] "maybe param" "maybe type" "temp"
    (908532 'move' call_tmp[908529](270975 call chpl__buildDomainExpr call_tmp[908524] 1))
    unknown bufDom[532430] "temp"
    (532432 'init var' bufDom[532430] call_tmp[908529])
    (532434 '.=' this[270937] c"bufDom" bufDom[532430])
    (565258 'end of statement')
    unknown buf[532439] "temp"
    unknown call_tmp[908534] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (908537 'move' call_tmp[908534](532453 '.' this[270937] c"bufDom"))
    unknown call_tmp[908539] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (908542 'move' call_tmp[908539](532444 call chpl__ensureDomainExpr call_tmp[908534]))
    unknown call_tmp[908544] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (908547 'move' call_tmp[908544](532456 '.v' this[270937] c"idxType"))
    unknown call_tmp[908549] "expr temp" "maybe param" "maybe type" "temp"
    (908552 'move' call_tmp[908549](532442 call chpl__buildArrayRuntimeType call_tmp[908539] call_tmp[908544]))
    (532447 'default init var' buf[532439] call_tmp[908549])
    (532449 '.=' this[270937] c"buf" buf[532439])
    (565259 'end of statement')
    unknown cur[532460] "temp"
    (532462 'init var' cur[532460] 0)
    (532464 '.=' this[270937] c"cur" cur[532460])
    (565260 'end of statement')
    (626795 return _void[46])
  }
  function SparseIndexBuffer[271065](?).deinit[270979](arg _mt[270983]:_MT[201], ref arg this[270981]:SparseIndexBuffer[271065](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (270987 call(452477 call (partial) commit _mt[203] this[270981]))
    (626797 return _void[46])
  }
  function SparseIndexBuffer[271065](?).add[270990](arg _mt[270998]:_MT[201], ref arg this[270992]:SparseIndexBuffer[271065](?), arg idx[270995] :
  (452482 call idxType _mt[203] this[270992])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[908562] "expr temp" "maybe param" "maybe type" "temp"
    (908565 'move' call_tmp[908562](452494 call cur _mt[203] this[270992]))
    unknown call_tmp[908567] "expr temp" "maybe param" "maybe type" "temp"
    (908570 'move' call_tmp[908567](271004 call(452487 call (partial) buf _mt[203] this[270992]) call_tmp[908562]))
    (271001 call = call_tmp[908567] idx[270995])
    (565262 'end of statement')
    unknown call_tmp[908574] "expr temp" "maybe param" "maybe type" "temp"
    (908577 'move' call_tmp[908574](452500 call cur _mt[203] this[270992]))
    (271007 call += call_tmp[908574] 1)
    (565263 'end of statement')
    unknown call_tmp[908581] "expr temp" "maybe param" "maybe type" "temp"
    (908584 'move' call_tmp[908581](452509 call cur _mt[203] this[270992]))
    unknown call_tmp[908588] "expr temp" "maybe param" "maybe type" "temp"
    (908591 'move' call_tmp[908588](408681 call buf _mt[203] this[270992]))
    unknown call_tmp[908595] "expr temp" "maybe param" "maybe type" "temp"
    (908598 'move' call_tmp[908595](271018 call size _mt[203] call_tmp[908588]))
    unknown call_tmp[908600] "expr temp" "maybe param" "maybe type" "temp"
    (908603 'move' call_tmp[908600](271014 call == call_tmp[908581] call_tmp[908595]))
    unknown call_tmp[908605] "expr temp" "maybe param" "maybe type" "temp"
    (908608 'move' call_tmp[908605](271021 call _cond_test call_tmp[908600]))
    if call_tmp[908605]
    {
      (271012 call(452504 call (partial) commit _mt[203] this[270992]))
    }
    (626799 return _void[46])
  }
  function SparseIndexBuffer[271065](?).commit[271028](arg _mt[271032]:_MT[201], ref arg this[271030]:SparseIndexBuffer[271065](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[908614] "expr temp" "maybe param" "maybe type" "temp"
    (908617 'move' call_tmp[908614](452524 call cur _mt[203] this[271030]))
    unknown call_tmp[908619] "expr temp" "maybe param" "maybe type" "temp"
    (908622 'move' call_tmp[908619](271049 call >= call_tmp[908614] 1))
    unknown call_tmp[908624] "expr temp" "maybe param" "maybe type" "temp"
    (908627 'move' call_tmp[908624](271053 call _cond_test call_tmp[908619]))
    if call_tmp[908624]
    {
      unknown call_tmp[908631] "expr temp" "maybe param" "maybe type" "temp"
      (908634 'move' call_tmp[908631](408686 call obj _mt[203] this[271030]))
      unknown call_tmp[908642] "expr temp" "maybe param" "maybe type" "temp"
      (908645 'move' call_tmp[908642](452519 call cur _mt[203] this[271030]))
      unknown call_tmp[908647] "expr temp" "maybe param" "maybe type" "temp"
      (908650 'move' call_tmp[908647](271042 call - call_tmp[908642] 1))
      unknown call_tmp[908652] "expr temp" "maybe param" "maybe type" "temp"
      (908655 'move' call_tmp[908652](271046 call chpl_build_high_bounded_range call_tmp[908647]))
      unknown call_tmp[908657] "expr temp" "maybe param" "maybe type" "temp"
      (908660 'move' call_tmp[908657](271041 call(452514 call (partial) buf _mt[203] this[271030]) call_tmp[908652]))
      (271039 call(271036 call (partial) dsiBulkAdd _mt[203] call_tmp[908631]) call_tmp[908657])
    }
    unknown call_tmp[908664] "expr temp" "maybe param" "maybe type" "temp"
    (908667 'move' call_tmp[908664](452529 call cur _mt[203] this[271030]))
    (271058 call = call_tmp[908664] 0)
    (626801 return _void[46])
  }
  function SparseIndexBuffer[271065](?).rank[1267105](arg _mt[1267107]:_MT[201], arg this[1267109]:SparseIndexBuffer[271065](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1267128] "RVV" "param" "temp"
    unknown call_tmp[1267142] "expr temp" "maybe param" "maybe type" "temp"
    (1267145 'move' call_tmp[1267142](1267114 'is bound' this[1267109] c"rank"))
    if call_tmp[1267142]
    {
      unknown call_tmp[1267147] "expr temp" "maybe param" "maybe type" "temp"
      (1267150 'move' call_tmp[1267147](1267113 '.' this[1267109] c"rank"))
      (1267133 'move' ret[1267128](1267132 'deref' call_tmp[1267147]))
      gotoReturn _end_rank[1267126] _end_rank[1267126]
    }
    {
      (1267138 'move' ret[1267128](1267137 'deref' ?[227]))
      gotoReturn _end_rank[1267126] _end_rank[1267126]
    }
    label _end_rank[1267126]
    (1267130 return ret[1267128])
  }
  function SparseIndexBuffer[271065](?).rank[1267152](arg _mt[1267154]:_MT[201], arg this[1267156]:SparseIndexBuffer[271065](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1267175] "RVV" "param" "temp"
    unknown call_tmp[1267189] "expr temp" "maybe param" "maybe type" "temp"
    (1267192 'move' call_tmp[1267189](1267161 'is bound' this[1267156] c"rank"))
    if call_tmp[1267189]
    {
      unknown call_tmp[1267194] "expr temp" "maybe param" "maybe type" "temp"
      (1267197 'move' call_tmp[1267194](1267160 '.' this[1267156] c"rank"))
      (1267180 'move' ret[1267175](1267179 'deref' call_tmp[1267194]))
      gotoReturn _end_rank[1267173] _end_rank[1267173]
    }
    {
      (1267185 'move' ret[1267175](1267184 'deref' ?[227]))
      gotoReturn _end_rank[1267173] _end_rank[1267173]
    }
    label _end_rank[1267173]
    (1267177 return ret[1267175])
  }
  function SparseIndexBuffer[271065](?).obj[1267199](arg _mt[1267201]:_MT[201], ref arg this[1267203]:SparseIndexBuffer[271065](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1267213] "RVV" "temp"
    unknown call_tmp[1267220] "expr temp" "maybe param" "maybe type" "temp"
    (1267223 'move' call_tmp[1267220](1267207 '.' this[1267203] c"obj"))
    (1267218 'move' ret[1267213](1267217 'addr of' call_tmp[1267220]))
    (1267215 return ret[1267213])
  }
  function SparseIndexBuffer[271065](?).idxType[1267225](arg _mt[1267227]:_MT[201], arg this[1267229]:SparseIndexBuffer[271065](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1267248] "RVV" "temp" "type variable"
    unknown call_tmp[1267262] "expr temp" "maybe param" "maybe type" "temp"
    (1267265 'move' call_tmp[1267262](1267234 'is bound' this[1267229] c"idxType"))
    if call_tmp[1267262]
    {
      unknown call_tmp[1267267] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1267270 'move' call_tmp[1267267](1267233 '.v' this[1267229] c"idxType"))
      (1267253 'move' ret[1267248](1267252 'deref' call_tmp[1267267]))
      gotoReturn _end_idxType[1267246] _end_idxType[1267246]
    }
    {
      (1267258 'move' ret[1267248](1267257 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1267246] _end_idxType[1267246]
    }
    label _end_idxType[1267246]
    (1267250 return ret[1267248])
  }
  function SparseIndexBuffer[271065](?).idxType[1267272](arg _mt[1267274]:_MT[201], arg this[1267276]:SparseIndexBuffer[271065](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1267295] "RVV" "temp" "type variable"
    unknown call_tmp[1267309] "expr temp" "maybe param" "maybe type" "temp"
    (1267312 'move' call_tmp[1267309](1267281 'is bound' this[1267276] c"idxType"))
    if call_tmp[1267309]
    {
      unknown call_tmp[1267314] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1267317 'move' call_tmp[1267314](1267280 '.v' this[1267276] c"idxType"))
      (1267300 'move' ret[1267295](1267299 'deref' call_tmp[1267314]))
      gotoReturn _end_idxType[1267293] _end_idxType[1267293]
    }
    {
      (1267305 'move' ret[1267295](1267304 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1267293] _end_idxType[1267293]
    }
    label _end_idxType[1267293]
    (1267297 return ret[1267295])
  }
  function SparseIndexBuffer[271065](?).bufDom[1267319](arg _mt[1267321]:_MT[201], ref arg this[1267323]:SparseIndexBuffer[271065](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1267333] "RVV" "temp"
    unknown call_tmp[1267340] "expr temp" "maybe param" "maybe type" "temp"
    (1267343 'move' call_tmp[1267340](1267327 '.' this[1267323] c"bufDom"))
    (1267338 'move' ret[1267333](1267337 'addr of' call_tmp[1267340]))
    (1267335 return ret[1267333])
  }
  function SparseIndexBuffer[271065](?).buf[1267345](arg _mt[1267347]:_MT[201], ref arg this[1267349]:SparseIndexBuffer[271065](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1267359] "RVV" "temp"
    unknown call_tmp[1267366] "expr temp" "maybe param" "maybe type" "temp"
    (1267369 'move' call_tmp[1267366](1267353 '.' this[1267349] c"buf"))
    (1267364 'move' ret[1267359](1267363 'addr of' call_tmp[1267366]))
    (1267361 return ret[1267359])
  }
  function SparseIndexBuffer[271065](?).cur[1267371](arg _mt[1267373]:_MT[201], ref arg this[1267375]:SparseIndexBuffer[271065](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1267385] "RVV" "temp"
    unknown call_tmp[1267392] "expr temp" "maybe param" "maybe type" "temp"
    (1267395 'move' call_tmp[1267392](1267379 '.' this[1267375] c"cur"))
    (1267390 'move' ret[1267385](1267389 'addr of' call_tmp[1267392]))
    (1267387 return ret[1267385])
  }
  function SparseIndexBuffer[271065](?).init=[1267397](arg _mt[1267400]:_MT[201], ref arg this[1267401]:SparseIndexBuffer[271065](?), arg other[1267404] :
  (1267403 'typeof' this[1267401])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[1267540] "expr temp" "maybe param" "maybe type" "temp"
    (1267543 'move' call_tmp[1267540](1267413 call rank _mt[203] other[1267404]))
    unknown call_tmp[1267545] "expr temp" "maybe param" "maybe type" "temp"
    (1267548 'move' call_tmp[1267545](1267470 call : call_tmp[1267540] int(64)[10]))
    (1267472 'init field' this[1267401] c"rank" call_tmp[1267545])
    (1267530 'end of statement')
    unknown call_tmp[1267552] "maybe param" "maybe type" "temp"
    (1267555 'move' call_tmp[1267552](1267423 call obj _mt[203] other[1267404]))
    unknown call_tmp[1267557] "marked generic" "maybe param" "maybe type" "temp"
    (1267560 'move' call_tmp[1267557](1267478 call BaseSparseDom[271529](?) ?[227]))
    unknown obj[1267475] "temp"
    (1267480 'init var' obj[1267475] call_tmp[1267552] call_tmp[1267557])
    (1267482 'init field' this[1267401] c"obj" obj[1267475])
    (1267531 'end of statement')
    unknown idxType[1267486] "temp" "type variable"
    (1267488 'move' idxType[1267486](1267433 call idxType _mt[203] other[1267404]))
    (1267490 'init field' this[1267401] c"idxType" idxType[1267486])
    (1267532 'end of statement')
    unknown call_tmp[1267566] "maybe param" "maybe type" "temp"
    (1267569 'move' call_tmp[1267566](1267443 call bufDom _mt[203] other[1267404]))
    unknown bufDom[1267494] "temp"
    (1267496 'init var' bufDom[1267494] call_tmp[1267566])
    (1267498 '.=' this[1267401] c"bufDom" bufDom[1267494])
    (1267533 'end of statement')
    unknown call_tmp[1267573] "maybe param" "maybe type" "temp"
    (1267576 'move' call_tmp[1267573](1267453 call buf _mt[203] other[1267404]))
    unknown call_tmp[1267578] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (1267581 'move' call_tmp[1267578](1267516 '.' this[1267401] c"bufDom"))
    unknown call_tmp[1267583] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (1267586 'move' call_tmp[1267583](1267507 call chpl__ensureDomainExpr call_tmp[1267578]))
    unknown call_tmp[1267588] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (1267591 'move' call_tmp[1267588](1267519 '.v' this[1267401] c"idxType"))
    unknown call_tmp[1267593] "maybe param" "maybe type" "temp"
    (1267596 'move' call_tmp[1267593](1267505 call chpl__buildArrayRuntimeType call_tmp[1267583] call_tmp[1267588]))
    unknown buf[1267502] "temp"
    (1267510 'init var' buf[1267502] call_tmp[1267573] call_tmp[1267593])
    (1267512 'init field' this[1267401] c"buf" buf[1267502])
    (1267534 'end of statement')
    unknown call_tmp[1267600] "maybe param" "maybe type" "temp"
    (1267603 'move' call_tmp[1267600](1267463 call cur _mt[203] other[1267404]))
    unknown cur[1267522] "temp"
    (1267524 'init var' cur[1267522] call_tmp[1267600])
    (1267526 '.=' this[1267401] c"cur" cur[1267522])
    (1267535 'end of statement')
    (1267536 return _void[46])
  }
  function SparseIndexBuffer[271065](?).serialize[1267605](arg _mt[1267609]:_MT[201], arg this[1267607]:SparseIndexBuffer[271065](?), arg writer[1267608]:_any[141](?), ref arg serializer[1267613]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1267616 call serializeDefaultImpl writer[1267608] serializer[1267613] this[1267607])
    (1267622 return _void[46])
  }
  function SparseIndexBuffer[271065](?).deserialize[1267624](arg _mt[1267628]:_MT[201], ref arg this[1267626]:SparseIndexBuffer[271065](?), arg reader[1267627]:_any[141](?), ref arg deserializer[1267633]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1267635] "temp"
    (1267637 'move' _deser_temp[1267635] this[1267626])
    (1267640 call deserializeDefaultImpl reader[1267627] deserializer[1267633] _deser_temp[1267635])
    (1267646 return _void[46])
  }
  function SparseIndexBuffer[271065](?).=[1267648](arg _mt[1267650]:_MT[201], arg this[1267652]:SparseIndexBuffer[271065](?), ref arg _arg1[1267654]:SparseIndexBuffer[271065](?), const?  ref arg _arg2[1267655]:SparseIndexBuffer[271065](?)) : void[4] "assignop" "compiler generated" "last resort" "method" "operator"
  {
    unknown call_tmp[1267714] "expr temp" "maybe param" "maybe type" "temp"
    (1267717 'move' call_tmp[1267714](1267665 call obj _mt[203] _arg1[1267654]))
    unknown call_tmp[1267721] "expr temp" "maybe param" "maybe type" "temp"
    (1267724 'move' call_tmp[1267721](1267669 call obj _mt[203] _arg2[1267655]))
    (1267673 call = call_tmp[1267714] call_tmp[1267721])
    (1267706 'end of statement')
    unknown call_tmp[1267728] "expr temp" "maybe param" "maybe type" "temp"
    (1267731 'move' call_tmp[1267728](1267675 call bufDom _mt[203] _arg1[1267654]))
    unknown call_tmp[1267735] "expr temp" "maybe param" "maybe type" "temp"
    (1267738 'move' call_tmp[1267735](1267679 call bufDom _mt[203] _arg2[1267655]))
    (1267683 call = call_tmp[1267728] call_tmp[1267735])
    (1267707 'end of statement')
    unknown call_tmp[1267742] "expr temp" "maybe param" "maybe type" "temp"
    (1267745 'move' call_tmp[1267742](1267685 call buf _mt[203] _arg1[1267654]))
    unknown call_tmp[1267749] "expr temp" "maybe param" "maybe type" "temp"
    (1267752 'move' call_tmp[1267749](1267689 call buf _mt[203] _arg2[1267655]))
    (1267693 call = call_tmp[1267742] call_tmp[1267749])
    (1267708 'end of statement')
    unknown call_tmp[1267756] "expr temp" "maybe param" "maybe type" "temp"
    (1267759 'move' call_tmp[1267756](1267695 call cur _mt[203] _arg1[1267654]))
    unknown call_tmp[1267763] "expr temp" "maybe param" "maybe type" "temp"
    (1267766 'move' call_tmp[1267763](1267699 call cur _mt[203] _arg2[1267655]))
    (1267703 call = call_tmp[1267756] call_tmp[1267763])
    (1267710 return _void[46])
  }
  where {
    unknown call_tmp[1267768] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1267771 'move' call_tmp[1267768](1267658 'typeof' _arg1[1267654]))
    unknown call_tmp[1267773] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1267776 'move' call_tmp[1267773](1267660 'typeof' _arg2[1267655]))
    (1267662 call == call_tmp[1267768] call_tmp[1267773])
  }
  function SparseIndexBuffer[271065](?).hash[1267778](arg _mt[1267781]:_MT[201], arg this[1267780]:SparseIndexBuffer[271065](?)) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1267825] "RVV" "temp"
    unknown call_tmp[1267832] "expr temp" "maybe param" "maybe type" "temp"
    (1267835 'move' call_tmp[1267832](1267810 call cur _mt[203] this[1267780]))
    unknown call_tmp[1267837] "expr temp" "maybe param" "maybe type" "temp"
    (1267840 'move' call_tmp[1267837](1267814 call hash _mt[203] call_tmp[1267832]))
    unknown call_tmp[1267842] "expr temp" "maybe param" "maybe type" "temp"
    (1267845 'move' call_tmp[1267842](1267800 call buf _mt[203] this[1267780]))
    unknown call_tmp[1267847] "expr temp" "maybe param" "maybe type" "temp"
    (1267850 'move' call_tmp[1267847](1267804 call hash _mt[203] call_tmp[1267842]))
    unknown call_tmp[1267852] "expr temp" "maybe param" "maybe type" "temp"
    (1267855 'move' call_tmp[1267852](1267790 call bufDom _mt[203] this[1267780]))
    unknown call_tmp[1267857] "expr temp" "maybe param" "maybe type" "temp"
    (1267860 'move' call_tmp[1267857](1267794 call hash _mt[203] call_tmp[1267852]))
    unknown call_tmp[1267862] "expr temp" "maybe param" "maybe type" "temp"
    (1267865 'move' call_tmp[1267862](1267784 call obj _mt[203] this[1267780]))
    unknown call_tmp[1267867] "expr temp" "maybe param" "maybe type" "temp"
    (1267870 'move' call_tmp[1267867](1267788 call chpl__defaultHashWrapperInner call_tmp[1267862]))
    unknown call_tmp[1267872] "expr temp" "maybe param" "maybe type" "temp"
    (1267875 'move' call_tmp[1267872](1267797 call chpl__defaultHashCombine call_tmp[1267857] call_tmp[1267867] 4))
    unknown call_tmp[1267877] "expr temp" "maybe param" "maybe type" "temp"
    (1267880 'move' call_tmp[1267877](1267807 call chpl__defaultHashCombine call_tmp[1267847] call_tmp[1267872] 5))
    unknown call_tmp[1267882] "expr temp" "maybe param" "maybe type" "temp"
    (1267885 'move' call_tmp[1267882](1267817 call chpl__defaultHashCombine call_tmp[1267837] call_tmp[1267877] 6))
    (1267830 'move' ret[1267825](1267829 'deref' call_tmp[1267882]))
    (1267827 return ret[1267825])
  }
  function chpl_fields_are_comparable[1267903](arg _arg1[1267905]:SparseIndexBuffer[271065](?), arg _arg2[1267906]:SparseIndexBuffer[271065](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1267965]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1267972] "expr temp" "maybe param" "maybe type" "temp"
    (1267975 'move' call_tmp[1267972](1267909 call rank _mt[203] _arg1[1267905]))
    unknown call_tmp[1267977] "expr temp" "maybe param" "maybe type" "temp"
    (1267980 'move' call_tmp[1267977](1267913 call rank _mt[203] _arg2[1267906]))
    unknown call_tmp[1267982] "expr temp" "maybe param" "maybe type" "temp"
    (1267985 'move' call_tmp[1267982](1267917 'call resolves' c"==" call_tmp[1267972] call_tmp[1267977]))
    unknown call_tmp[1267987] "expr temp" "maybe param" "maybe type" "temp"
    (1267990 'move' call_tmp[1267987](1267919 call obj _mt[203] _arg1[1267905]))
    unknown call_tmp[1267992] "expr temp" "maybe param" "maybe type" "temp"
    (1267995 'move' call_tmp[1267992](1267923 call obj _mt[203] _arg2[1267906]))
    unknown call_tmp[1267997] "expr temp" "maybe param" "maybe type" "temp"
    (1268000 'move' call_tmp[1267997](1267927 'call resolves' c"==" call_tmp[1267987] call_tmp[1267992]))
    unknown call_tmp[1268002] "expr temp" "maybe param" "maybe type" "temp"
    (1268005 'move' call_tmp[1268002](1267929 call bufDom _mt[203] _arg1[1267905]))
    unknown call_tmp[1268007] "expr temp" "maybe param" "maybe type" "temp"
    (1268010 'move' call_tmp[1268007](1267933 call bufDom _mt[203] _arg2[1267906]))
    unknown call_tmp[1268012] "expr temp" "maybe param" "maybe type" "temp"
    (1268015 'move' call_tmp[1268012](1267937 'call resolves' c"==" call_tmp[1268002] call_tmp[1268007]))
    unknown call_tmp[1268017] "expr temp" "maybe param" "maybe type" "temp"
    (1268020 'move' call_tmp[1268017](1267939 call buf _mt[203] _arg1[1267905]))
    unknown call_tmp[1268022] "expr temp" "maybe param" "maybe type" "temp"
    (1268025 'move' call_tmp[1268022](1267943 call buf _mt[203] _arg2[1267906]))
    unknown call_tmp[1268027] "expr temp" "maybe param" "maybe type" "temp"
    (1268030 'move' call_tmp[1268027](1267947 'call resolves' c"==" call_tmp[1268017] call_tmp[1268022]))
    unknown call_tmp[1268032] "expr temp" "maybe param" "maybe type" "temp"
    (1268035 'move' call_tmp[1268032](1267949 call cur _mt[203] _arg1[1267905]))
    unknown call_tmp[1268037] "expr temp" "maybe param" "maybe type" "temp"
    (1268040 'move' call_tmp[1268037](1267953 call cur _mt[203] _arg2[1267906]))
    unknown call_tmp[1268042] "expr temp" "maybe param" "maybe type" "temp"
    (1268045 'move' call_tmp[1268042](1267957 'call resolves' c"==" call_tmp[1268032] call_tmp[1268037]))
    unknown call_tmp[1268047] "expr temp" "maybe param" "maybe type" "temp"
    (1268050 'move' call_tmp[1268047](1267959 '&' call_tmp[1267982] call_tmp[1267997] call_tmp[1268012] call_tmp[1268027] call_tmp[1268042]))
    (1267970 'move' ret[1267965](1267969 'deref' call_tmp[1268047]))
    (1267967 return ret[1267965])
  }
  function SparseIndexBuffer[271065](?).==[1267887](arg _mt[1267889]:_MT[201], arg this[1267891]:SparseIndexBuffer[271065](?), arg _arg1[1267893]:SparseIndexBuffer[271065](?), arg _arg2[1267894]:SparseIndexBuffer[271065](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1268139]:bool[19] "RVV" "temp"
    unknown call_tmp[1268171] "expr temp" "maybe param" "maybe type" "temp"
    (1268174 'move' call_tmp[1268171](1268058 call rank _mt[203] _arg1[1267893]))
    unknown call_tmp[1268176] "expr temp" "maybe param" "maybe type" "temp"
    (1268179 'move' call_tmp[1268176](1268062 call rank _mt[203] _arg2[1267894]))
    unknown call_tmp[1268181] "expr temp" "maybe param" "maybe type" "temp"
    (1268184 'move' call_tmp[1268181](1268066 call chpl_field_neq call_tmp[1268171] call_tmp[1268176]))
    if call_tmp[1268181]
    {
      (1268144 'move' ret[1268139](1268143 'deref' 0))
      gotoReturn _end_==[1268137] _end_==[1268137]
    }
    unknown call_tmp[1268186] "expr temp" "maybe param" "maybe type" "temp"
    (1268189 'move' call_tmp[1268186](1268072 call obj _mt[203] _arg1[1267893]))
    unknown call_tmp[1268191] "expr temp" "maybe param" "maybe type" "temp"
    (1268194 'move' call_tmp[1268191](1268076 call obj _mt[203] _arg2[1267894]))
    unknown call_tmp[1268196] "expr temp" "maybe param" "maybe type" "temp"
    (1268199 'move' call_tmp[1268196](1268080 call chpl_field_neq call_tmp[1268186] call_tmp[1268191]))
    if call_tmp[1268196]
    {
      (1268149 'move' ret[1268139](1268148 'deref' 0))
      gotoReturn _end_==[1268137] _end_==[1268137]
    }
    unknown call_tmp[1268201] "expr temp" "maybe param" "maybe type" "temp"
    (1268204 'move' call_tmp[1268201](1268086 call bufDom _mt[203] _arg1[1267893]))
    unknown call_tmp[1268206] "expr temp" "maybe param" "maybe type" "temp"
    (1268209 'move' call_tmp[1268206](1268090 call bufDom _mt[203] _arg2[1267894]))
    unknown call_tmp[1268211] "expr temp" "maybe param" "maybe type" "temp"
    (1268214 'move' call_tmp[1268211](1268094 call chpl_field_neq call_tmp[1268201] call_tmp[1268206]))
    if call_tmp[1268211]
    {
      (1268154 'move' ret[1268139](1268153 'deref' 0))
      gotoReturn _end_==[1268137] _end_==[1268137]
    }
    unknown call_tmp[1268216] "expr temp" "maybe param" "maybe type" "temp"
    (1268219 'move' call_tmp[1268216](1268100 call buf _mt[203] _arg1[1267893]))
    unknown call_tmp[1268221] "expr temp" "maybe param" "maybe type" "temp"
    (1268224 'move' call_tmp[1268221](1268104 call buf _mt[203] _arg2[1267894]))
    unknown call_tmp[1268226] "expr temp" "maybe param" "maybe type" "temp"
    (1268229 'move' call_tmp[1268226](1268108 call chpl_field_neq call_tmp[1268216] call_tmp[1268221]))
    if call_tmp[1268226]
    {
      (1268159 'move' ret[1268139](1268158 'deref' 0))
      gotoReturn _end_==[1268137] _end_==[1268137]
    }
    unknown call_tmp[1268231] "expr temp" "maybe param" "maybe type" "temp"
    (1268234 'move' call_tmp[1268231](1268114 call cur _mt[203] _arg1[1267893]))
    unknown call_tmp[1268236] "expr temp" "maybe param" "maybe type" "temp"
    (1268239 'move' call_tmp[1268236](1268118 call cur _mt[203] _arg2[1267894]))
    unknown call_tmp[1268241] "expr temp" "maybe param" "maybe type" "temp"
    (1268244 'move' call_tmp[1268241](1268122 call chpl_field_neq call_tmp[1268231] call_tmp[1268236]))
    if call_tmp[1268241]
    {
      (1268164 'move' ret[1268139](1268163 'deref' 0))
      gotoReturn _end_==[1268137] _end_==[1268137]
    }
    (1268169 'move' ret[1268139](1268168 'deref' 1))
    label _end_==[1268137]
    (1268141 return ret[1268139])
  }
  where {
    unknown call_tmp[1268246] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1268249 'move' call_tmp[1268246](1267897 'typeof' _arg1[1267893]))
    unknown call_tmp[1268251] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1268254 'move' call_tmp[1268251](1267899 'typeof' _arg2[1267894]))
    unknown call_tmp[1268256] "expr temp" "maybe param" "maybe type" "temp"
    (1268259 'move' call_tmp[1268256](1267901 call == call_tmp[1268246] call_tmp[1268251]))
    unknown call_tmp[1268261] "expr temp" "maybe param" "maybe type" "temp"
    (1268264 'move' call_tmp[1268261](1268052 call chpl_fields_are_comparable[1267903] _arg1[1267893] _arg2[1267894]))
    (1268056 '&' call_tmp[1268256] call_tmp[1268261])
  }
  function chpl_fields_are_comparable[1268282](arg _arg1[1268284]:SparseIndexBuffer[271065](?), arg _arg2[1268285]:SparseIndexBuffer[271065](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1268344]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1268351] "expr temp" "maybe param" "maybe type" "temp"
    (1268354 'move' call_tmp[1268351](1268288 call rank _mt[203] _arg1[1268284]))
    unknown call_tmp[1268356] "expr temp" "maybe param" "maybe type" "temp"
    (1268359 'move' call_tmp[1268356](1268292 call rank _mt[203] _arg2[1268285]))
    unknown call_tmp[1268361] "expr temp" "maybe param" "maybe type" "temp"
    (1268364 'move' call_tmp[1268361](1268296 'call resolves' c"!=" call_tmp[1268351] call_tmp[1268356]))
    unknown call_tmp[1268366] "expr temp" "maybe param" "maybe type" "temp"
    (1268369 'move' call_tmp[1268366](1268298 call obj _mt[203] _arg1[1268284]))
    unknown call_tmp[1268371] "expr temp" "maybe param" "maybe type" "temp"
    (1268374 'move' call_tmp[1268371](1268302 call obj _mt[203] _arg2[1268285]))
    unknown call_tmp[1268376] "expr temp" "maybe param" "maybe type" "temp"
    (1268379 'move' call_tmp[1268376](1268306 'call resolves' c"!=" call_tmp[1268366] call_tmp[1268371]))
    unknown call_tmp[1268381] "expr temp" "maybe param" "maybe type" "temp"
    (1268384 'move' call_tmp[1268381](1268308 call bufDom _mt[203] _arg1[1268284]))
    unknown call_tmp[1268386] "expr temp" "maybe param" "maybe type" "temp"
    (1268389 'move' call_tmp[1268386](1268312 call bufDom _mt[203] _arg2[1268285]))
    unknown call_tmp[1268391] "expr temp" "maybe param" "maybe type" "temp"
    (1268394 'move' call_tmp[1268391](1268316 'call resolves' c"!=" call_tmp[1268381] call_tmp[1268386]))
    unknown call_tmp[1268396] "expr temp" "maybe param" "maybe type" "temp"
    (1268399 'move' call_tmp[1268396](1268318 call buf _mt[203] _arg1[1268284]))
    unknown call_tmp[1268401] "expr temp" "maybe param" "maybe type" "temp"
    (1268404 'move' call_tmp[1268401](1268322 call buf _mt[203] _arg2[1268285]))
    unknown call_tmp[1268406] "expr temp" "maybe param" "maybe type" "temp"
    (1268409 'move' call_tmp[1268406](1268326 'call resolves' c"!=" call_tmp[1268396] call_tmp[1268401]))
    unknown call_tmp[1268411] "expr temp" "maybe param" "maybe type" "temp"
    (1268414 'move' call_tmp[1268411](1268328 call cur _mt[203] _arg1[1268284]))
    unknown call_tmp[1268416] "expr temp" "maybe param" "maybe type" "temp"
    (1268419 'move' call_tmp[1268416](1268332 call cur _mt[203] _arg2[1268285]))
    unknown call_tmp[1268421] "expr temp" "maybe param" "maybe type" "temp"
    (1268424 'move' call_tmp[1268421](1268336 'call resolves' c"!=" call_tmp[1268411] call_tmp[1268416]))
    unknown call_tmp[1268426] "expr temp" "maybe param" "maybe type" "temp"
    (1268429 'move' call_tmp[1268426](1268338 '&' call_tmp[1268361] call_tmp[1268376] call_tmp[1268391] call_tmp[1268406] call_tmp[1268421]))
    (1268349 'move' ret[1268344](1268348 'deref' call_tmp[1268426]))
    (1268346 return ret[1268344])
  }
  function SparseIndexBuffer[271065](?).!=[1268266](arg _mt[1268268]:_MT[201], arg this[1268270]:SparseIndexBuffer[271065](?), arg _arg1[1268272]:SparseIndexBuffer[271065](?), arg _arg2[1268273]:SparseIndexBuffer[271065](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1268518]:bool[19] "RVV" "temp"
    unknown call_tmp[1268550] "expr temp" "maybe param" "maybe type" "temp"
    (1268553 'move' call_tmp[1268550](1268437 call rank _mt[203] _arg1[1268272]))
    unknown call_tmp[1268555] "expr temp" "maybe param" "maybe type" "temp"
    (1268558 'move' call_tmp[1268555](1268441 call rank _mt[203] _arg2[1268273]))
    unknown call_tmp[1268560] "expr temp" "maybe param" "maybe type" "temp"
    (1268563 'move' call_tmp[1268560](1268445 call chpl_field_neq call_tmp[1268550] call_tmp[1268555]))
    if call_tmp[1268560]
    {
      (1268523 'move' ret[1268518](1268522 'deref' 1))
      gotoReturn _end_!=[1268516] _end_!=[1268516]
    }
    unknown call_tmp[1268565] "expr temp" "maybe param" "maybe type" "temp"
    (1268568 'move' call_tmp[1268565](1268451 call obj _mt[203] _arg1[1268272]))
    unknown call_tmp[1268570] "expr temp" "maybe param" "maybe type" "temp"
    (1268573 'move' call_tmp[1268570](1268455 call obj _mt[203] _arg2[1268273]))
    unknown call_tmp[1268575] "expr temp" "maybe param" "maybe type" "temp"
    (1268578 'move' call_tmp[1268575](1268459 call chpl_field_neq call_tmp[1268565] call_tmp[1268570]))
    if call_tmp[1268575]
    {
      (1268528 'move' ret[1268518](1268527 'deref' 1))
      gotoReturn _end_!=[1268516] _end_!=[1268516]
    }
    unknown call_tmp[1268580] "expr temp" "maybe param" "maybe type" "temp"
    (1268583 'move' call_tmp[1268580](1268465 call bufDom _mt[203] _arg1[1268272]))
    unknown call_tmp[1268585] "expr temp" "maybe param" "maybe type" "temp"
    (1268588 'move' call_tmp[1268585](1268469 call bufDom _mt[203] _arg2[1268273]))
    unknown call_tmp[1268590] "expr temp" "maybe param" "maybe type" "temp"
    (1268593 'move' call_tmp[1268590](1268473 call chpl_field_neq call_tmp[1268580] call_tmp[1268585]))
    if call_tmp[1268590]
    {
      (1268533 'move' ret[1268518](1268532 'deref' 1))
      gotoReturn _end_!=[1268516] _end_!=[1268516]
    }
    unknown call_tmp[1268595] "expr temp" "maybe param" "maybe type" "temp"
    (1268598 'move' call_tmp[1268595](1268479 call buf _mt[203] _arg1[1268272]))
    unknown call_tmp[1268600] "expr temp" "maybe param" "maybe type" "temp"
    (1268603 'move' call_tmp[1268600](1268483 call buf _mt[203] _arg2[1268273]))
    unknown call_tmp[1268605] "expr temp" "maybe param" "maybe type" "temp"
    (1268608 'move' call_tmp[1268605](1268487 call chpl_field_neq call_tmp[1268595] call_tmp[1268600]))
    if call_tmp[1268605]
    {
      (1268538 'move' ret[1268518](1268537 'deref' 1))
      gotoReturn _end_!=[1268516] _end_!=[1268516]
    }
    unknown call_tmp[1268610] "expr temp" "maybe param" "maybe type" "temp"
    (1268613 'move' call_tmp[1268610](1268493 call cur _mt[203] _arg1[1268272]))
    unknown call_tmp[1268615] "expr temp" "maybe param" "maybe type" "temp"
    (1268618 'move' call_tmp[1268615](1268497 call cur _mt[203] _arg2[1268273]))
    unknown call_tmp[1268620] "expr temp" "maybe param" "maybe type" "temp"
    (1268623 'move' call_tmp[1268620](1268501 call chpl_field_neq call_tmp[1268610] call_tmp[1268615]))
    if call_tmp[1268620]
    {
      (1268543 'move' ret[1268518](1268542 'deref' 1))
      gotoReturn _end_!=[1268516] _end_!=[1268516]
    }
    (1268548 'move' ret[1268518](1268547 'deref' 0))
    label _end_!=[1268516]
    (1268520 return ret[1268518])
  }
  where {
    unknown call_tmp[1268625] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1268628 'move' call_tmp[1268625](1268276 'typeof' _arg1[1268272]))
    unknown call_tmp[1268630] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1268633 'move' call_tmp[1268630](1268278 'typeof' _arg2[1268273]))
    unknown call_tmp[1268635] "expr temp" "maybe param" "maybe type" "temp"
    (1268638 'move' call_tmp[1268635](1268280 call == call_tmp[1268625] call_tmp[1268630]))
    unknown call_tmp[1268640] "expr temp" "maybe param" "maybe type" "temp"
    (1268643 'move' call_tmp[1268640](1268431 call chpl_fields_are_comparable[1268282] _arg1[1268272] _arg2[1268273]))
    (1268435 '&' call_tmp[1268635] call_tmp[1268640])
  }
  function chpl_fields_are_comparable[1268661](arg _arg1[1268663]:SparseIndexBuffer[271065](?), arg _arg2[1268664]:SparseIndexBuffer[271065](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1268723]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1268730] "expr temp" "maybe param" "maybe type" "temp"
    (1268733 'move' call_tmp[1268730](1268667 call rank _mt[203] _arg1[1268663]))
    unknown call_tmp[1268735] "expr temp" "maybe param" "maybe type" "temp"
    (1268738 'move' call_tmp[1268735](1268671 call rank _mt[203] _arg2[1268664]))
    unknown call_tmp[1268740] "expr temp" "maybe param" "maybe type" "temp"
    (1268743 'move' call_tmp[1268740](1268675 'call resolves' c"<" call_tmp[1268730] call_tmp[1268735]))
    unknown call_tmp[1268745] "expr temp" "maybe param" "maybe type" "temp"
    (1268748 'move' call_tmp[1268745](1268677 call obj _mt[203] _arg1[1268663]))
    unknown call_tmp[1268750] "expr temp" "maybe param" "maybe type" "temp"
    (1268753 'move' call_tmp[1268750](1268681 call obj _mt[203] _arg2[1268664]))
    unknown call_tmp[1268755] "expr temp" "maybe param" "maybe type" "temp"
    (1268758 'move' call_tmp[1268755](1268685 'call resolves' c"<" call_tmp[1268745] call_tmp[1268750]))
    unknown call_tmp[1268760] "expr temp" "maybe param" "maybe type" "temp"
    (1268763 'move' call_tmp[1268760](1268687 call bufDom _mt[203] _arg1[1268663]))
    unknown call_tmp[1268765] "expr temp" "maybe param" "maybe type" "temp"
    (1268768 'move' call_tmp[1268765](1268691 call bufDom _mt[203] _arg2[1268664]))
    unknown call_tmp[1268770] "expr temp" "maybe param" "maybe type" "temp"
    (1268773 'move' call_tmp[1268770](1268695 'call resolves' c"<" call_tmp[1268760] call_tmp[1268765]))
    unknown call_tmp[1268775] "expr temp" "maybe param" "maybe type" "temp"
    (1268778 'move' call_tmp[1268775](1268697 call buf _mt[203] _arg1[1268663]))
    unknown call_tmp[1268780] "expr temp" "maybe param" "maybe type" "temp"
    (1268783 'move' call_tmp[1268780](1268701 call buf _mt[203] _arg2[1268664]))
    unknown call_tmp[1268785] "expr temp" "maybe param" "maybe type" "temp"
    (1268788 'move' call_tmp[1268785](1268705 'call resolves' c"<" call_tmp[1268775] call_tmp[1268780]))
    unknown call_tmp[1268790] "expr temp" "maybe param" "maybe type" "temp"
    (1268793 'move' call_tmp[1268790](1268707 call cur _mt[203] _arg1[1268663]))
    unknown call_tmp[1268795] "expr temp" "maybe param" "maybe type" "temp"
    (1268798 'move' call_tmp[1268795](1268711 call cur _mt[203] _arg2[1268664]))
    unknown call_tmp[1268800] "expr temp" "maybe param" "maybe type" "temp"
    (1268803 'move' call_tmp[1268800](1268715 'call resolves' c"<" call_tmp[1268790] call_tmp[1268795]))
    unknown call_tmp[1268805] "expr temp" "maybe param" "maybe type" "temp"
    (1268808 'move' call_tmp[1268805](1268717 '&' call_tmp[1268740] call_tmp[1268755] call_tmp[1268770] call_tmp[1268785] call_tmp[1268800]))
    (1268728 'move' ret[1268723](1268727 'deref' call_tmp[1268805]))
    (1268725 return ret[1268723])
  }
  function SparseIndexBuffer[271065](?).<[1268645](arg _mt[1268647]:_MT[201], arg this[1268649]:SparseIndexBuffer[271065](?), arg _arg1[1268651]:SparseIndexBuffer[271065](?), arg _arg2[1268652]:SparseIndexBuffer[271065](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1268972]:bool[19] "RVV" "temp"
    unknown call_tmp[1269029] "expr temp" "maybe param" "maybe type" "temp"
    (1269032 'move' call_tmp[1269029](1268816 call rank _mt[203] _arg1[1268651]))
    unknown call_tmp[1269034] "expr temp" "maybe param" "maybe type" "temp"
    (1269037 'move' call_tmp[1269034](1268820 call rank _mt[203] _arg2[1268652]))
    unknown call_tmp[1269039] "expr temp" "maybe param" "maybe type" "temp"
    (1269042 'move' call_tmp[1269039](1268824 call chpl_field_lt call_tmp[1269029] call_tmp[1269034]))
    if call_tmp[1269039]
    {
      (1268977 'move' ret[1268972](1268976 'deref' 1))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269044] "expr temp" "maybe param" "maybe type" "temp"
    (1269047 'move' call_tmp[1269044](1268830 call rank _mt[203] _arg1[1268651]))
    unknown call_tmp[1269049] "expr temp" "maybe param" "maybe type" "temp"
    (1269052 'move' call_tmp[1269049](1268834 call rank _mt[203] _arg2[1268652]))
    unknown call_tmp[1269054] "expr temp" "maybe param" "maybe type" "temp"
    (1269057 'move' call_tmp[1269054](1268838 call chpl_field_gt call_tmp[1269044] call_tmp[1269049]))
    if call_tmp[1269054]
    {
      (1268982 'move' ret[1268972](1268981 'deref' 0))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269059] "expr temp" "maybe param" "maybe type" "temp"
    (1269062 'move' call_tmp[1269059](1268844 call obj _mt[203] _arg1[1268651]))
    unknown call_tmp[1269064] "expr temp" "maybe param" "maybe type" "temp"
    (1269067 'move' call_tmp[1269064](1268848 call obj _mt[203] _arg2[1268652]))
    unknown call_tmp[1269069] "expr temp" "maybe param" "maybe type" "temp"
    (1269072 'move' call_tmp[1269069](1268852 call chpl_field_lt call_tmp[1269059] call_tmp[1269064]))
    if call_tmp[1269069]
    {
      (1268987 'move' ret[1268972](1268986 'deref' 1))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269074] "expr temp" "maybe param" "maybe type" "temp"
    (1269077 'move' call_tmp[1269074](1268858 call obj _mt[203] _arg1[1268651]))
    unknown call_tmp[1269079] "expr temp" "maybe param" "maybe type" "temp"
    (1269082 'move' call_tmp[1269079](1268862 call obj _mt[203] _arg2[1268652]))
    unknown call_tmp[1269084] "expr temp" "maybe param" "maybe type" "temp"
    (1269087 'move' call_tmp[1269084](1268866 call chpl_field_gt call_tmp[1269074] call_tmp[1269079]))
    if call_tmp[1269084]
    {
      (1268992 'move' ret[1268972](1268991 'deref' 0))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269089] "expr temp" "maybe param" "maybe type" "temp"
    (1269092 'move' call_tmp[1269089](1268872 call bufDom _mt[203] _arg1[1268651]))
    unknown call_tmp[1269094] "expr temp" "maybe param" "maybe type" "temp"
    (1269097 'move' call_tmp[1269094](1268876 call bufDom _mt[203] _arg2[1268652]))
    unknown call_tmp[1269099] "expr temp" "maybe param" "maybe type" "temp"
    (1269102 'move' call_tmp[1269099](1268880 call chpl_field_lt call_tmp[1269089] call_tmp[1269094]))
    if call_tmp[1269099]
    {
      (1268997 'move' ret[1268972](1268996 'deref' 1))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269104] "expr temp" "maybe param" "maybe type" "temp"
    (1269107 'move' call_tmp[1269104](1268886 call bufDom _mt[203] _arg1[1268651]))
    unknown call_tmp[1269109] "expr temp" "maybe param" "maybe type" "temp"
    (1269112 'move' call_tmp[1269109](1268890 call bufDom _mt[203] _arg2[1268652]))
    unknown call_tmp[1269114] "expr temp" "maybe param" "maybe type" "temp"
    (1269117 'move' call_tmp[1269114](1268894 call chpl_field_gt call_tmp[1269104] call_tmp[1269109]))
    if call_tmp[1269114]
    {
      (1269002 'move' ret[1268972](1269001 'deref' 0))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269119] "expr temp" "maybe param" "maybe type" "temp"
    (1269122 'move' call_tmp[1269119](1268900 call buf _mt[203] _arg1[1268651]))
    unknown call_tmp[1269124] "expr temp" "maybe param" "maybe type" "temp"
    (1269127 'move' call_tmp[1269124](1268904 call buf _mt[203] _arg2[1268652]))
    unknown call_tmp[1269129] "expr temp" "maybe param" "maybe type" "temp"
    (1269132 'move' call_tmp[1269129](1268908 call chpl_field_lt call_tmp[1269119] call_tmp[1269124]))
    if call_tmp[1269129]
    {
      (1269007 'move' ret[1268972](1269006 'deref' 1))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269134] "expr temp" "maybe param" "maybe type" "temp"
    (1269137 'move' call_tmp[1269134](1268914 call buf _mt[203] _arg1[1268651]))
    unknown call_tmp[1269139] "expr temp" "maybe param" "maybe type" "temp"
    (1269142 'move' call_tmp[1269139](1268918 call buf _mt[203] _arg2[1268652]))
    unknown call_tmp[1269144] "expr temp" "maybe param" "maybe type" "temp"
    (1269147 'move' call_tmp[1269144](1268922 call chpl_field_gt call_tmp[1269134] call_tmp[1269139]))
    if call_tmp[1269144]
    {
      (1269012 'move' ret[1268972](1269011 'deref' 0))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269149] "expr temp" "maybe param" "maybe type" "temp"
    (1269152 'move' call_tmp[1269149](1268928 call cur _mt[203] _arg1[1268651]))
    unknown call_tmp[1269154] "expr temp" "maybe param" "maybe type" "temp"
    (1269157 'move' call_tmp[1269154](1268932 call cur _mt[203] _arg2[1268652]))
    unknown call_tmp[1269159] "expr temp" "maybe param" "maybe type" "temp"
    (1269162 'move' call_tmp[1269159](1268936 call chpl_field_lt call_tmp[1269149] call_tmp[1269154]))
    if call_tmp[1269159]
    {
      (1269017 'move' ret[1268972](1269016 'deref' 1))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    unknown call_tmp[1269164] "expr temp" "maybe param" "maybe type" "temp"
    (1269167 'move' call_tmp[1269164](1268942 call cur _mt[203] _arg1[1268651]))
    unknown call_tmp[1269169] "expr temp" "maybe param" "maybe type" "temp"
    (1269172 'move' call_tmp[1269169](1268946 call cur _mt[203] _arg2[1268652]))
    unknown call_tmp[1269174] "expr temp" "maybe param" "maybe type" "temp"
    (1269177 'move' call_tmp[1269174](1268950 call chpl_field_gt call_tmp[1269164] call_tmp[1269169]))
    if call_tmp[1269174]
    {
      (1269022 'move' ret[1268972](1269021 'deref' 0))
      gotoReturn _end_<[1268970] _end_<[1268970]
    }
    (1269027 'move' ret[1268972](1269026 'deref' 0))
    label _end_<[1268970]
    (1268974 return ret[1268972])
  }
  where {
    unknown call_tmp[1269179] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1269182 'move' call_tmp[1269179](1268655 'typeof' _arg1[1268651]))
    unknown call_tmp[1269184] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1269187 'move' call_tmp[1269184](1268657 'typeof' _arg2[1268652]))
    unknown call_tmp[1269189] "expr temp" "maybe param" "maybe type" "temp"
    (1269192 'move' call_tmp[1269189](1268659 call == call_tmp[1269179] call_tmp[1269184]))
    unknown call_tmp[1269194] "expr temp" "maybe param" "maybe type" "temp"
    (1269197 'move' call_tmp[1269194](1268810 call chpl_fields_are_comparable[1268661] _arg1[1268651] _arg2[1268652]))
    (1268814 '&' call_tmp[1269189] call_tmp[1269194])
  }
  function chpl_fields_are_comparable[1269215](arg _arg1[1269217]:SparseIndexBuffer[271065](?), arg _arg2[1269218]:SparseIndexBuffer[271065](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1269277]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1269284] "expr temp" "maybe param" "maybe type" "temp"
    (1269287 'move' call_tmp[1269284](1269221 call rank _mt[203] _arg1[1269217]))
    unknown call_tmp[1269289] "expr temp" "maybe param" "maybe type" "temp"
    (1269292 'move' call_tmp[1269289](1269225 call rank _mt[203] _arg2[1269218]))
    unknown call_tmp[1269294] "expr temp" "maybe param" "maybe type" "temp"
    (1269297 'move' call_tmp[1269294](1269229 'call resolves' c"<=" call_tmp[1269284] call_tmp[1269289]))
    unknown call_tmp[1269299] "expr temp" "maybe param" "maybe type" "temp"
    (1269302 'move' call_tmp[1269299](1269231 call obj _mt[203] _arg1[1269217]))
    unknown call_tmp[1269304] "expr temp" "maybe param" "maybe type" "temp"
    (1269307 'move' call_tmp[1269304](1269235 call obj _mt[203] _arg2[1269218]))
    unknown call_tmp[1269309] "expr temp" "maybe param" "maybe type" "temp"
    (1269312 'move' call_tmp[1269309](1269239 'call resolves' c"<=" call_tmp[1269299] call_tmp[1269304]))
    unknown call_tmp[1269314] "expr temp" "maybe param" "maybe type" "temp"
    (1269317 'move' call_tmp[1269314](1269241 call bufDom _mt[203] _arg1[1269217]))
    unknown call_tmp[1269319] "expr temp" "maybe param" "maybe type" "temp"
    (1269322 'move' call_tmp[1269319](1269245 call bufDom _mt[203] _arg2[1269218]))
    unknown call_tmp[1269324] "expr temp" "maybe param" "maybe type" "temp"
    (1269327 'move' call_tmp[1269324](1269249 'call resolves' c"<=" call_tmp[1269314] call_tmp[1269319]))
    unknown call_tmp[1269329] "expr temp" "maybe param" "maybe type" "temp"
    (1269332 'move' call_tmp[1269329](1269251 call buf _mt[203] _arg1[1269217]))
    unknown call_tmp[1269334] "expr temp" "maybe param" "maybe type" "temp"
    (1269337 'move' call_tmp[1269334](1269255 call buf _mt[203] _arg2[1269218]))
    unknown call_tmp[1269339] "expr temp" "maybe param" "maybe type" "temp"
    (1269342 'move' call_tmp[1269339](1269259 'call resolves' c"<=" call_tmp[1269329] call_tmp[1269334]))
    unknown call_tmp[1269344] "expr temp" "maybe param" "maybe type" "temp"
    (1269347 'move' call_tmp[1269344](1269261 call cur _mt[203] _arg1[1269217]))
    unknown call_tmp[1269349] "expr temp" "maybe param" "maybe type" "temp"
    (1269352 'move' call_tmp[1269349](1269265 call cur _mt[203] _arg2[1269218]))
    unknown call_tmp[1269354] "expr temp" "maybe param" "maybe type" "temp"
    (1269357 'move' call_tmp[1269354](1269269 'call resolves' c"<=" call_tmp[1269344] call_tmp[1269349]))
    unknown call_tmp[1269359] "expr temp" "maybe param" "maybe type" "temp"
    (1269362 'move' call_tmp[1269359](1269271 '&' call_tmp[1269294] call_tmp[1269309] call_tmp[1269324] call_tmp[1269339] call_tmp[1269354]))
    (1269282 'move' ret[1269277](1269281 'deref' call_tmp[1269359]))
    (1269279 return ret[1269277])
  }
  function SparseIndexBuffer[271065](?).<=[1269199](arg _mt[1269201]:_MT[201], arg this[1269203]:SparseIndexBuffer[271065](?), arg _arg1[1269205]:SparseIndexBuffer[271065](?), arg _arg2[1269206]:SparseIndexBuffer[271065](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1269526]:bool[19] "RVV" "temp"
    unknown call_tmp[1269583] "expr temp" "maybe param" "maybe type" "temp"
    (1269586 'move' call_tmp[1269583](1269370 call rank _mt[203] _arg1[1269205]))
    unknown call_tmp[1269588] "expr temp" "maybe param" "maybe type" "temp"
    (1269591 'move' call_tmp[1269588](1269374 call rank _mt[203] _arg2[1269206]))
    unknown call_tmp[1269593] "expr temp" "maybe param" "maybe type" "temp"
    (1269596 'move' call_tmp[1269593](1269378 call chpl_field_lt call_tmp[1269583] call_tmp[1269588]))
    if call_tmp[1269593]
    {
      (1269531 'move' ret[1269526](1269530 'deref' 1))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269598] "expr temp" "maybe param" "maybe type" "temp"
    (1269601 'move' call_tmp[1269598](1269384 call rank _mt[203] _arg1[1269205]))
    unknown call_tmp[1269603] "expr temp" "maybe param" "maybe type" "temp"
    (1269606 'move' call_tmp[1269603](1269388 call rank _mt[203] _arg2[1269206]))
    unknown call_tmp[1269608] "expr temp" "maybe param" "maybe type" "temp"
    (1269611 'move' call_tmp[1269608](1269392 call chpl_field_gt call_tmp[1269598] call_tmp[1269603]))
    if call_tmp[1269608]
    {
      (1269536 'move' ret[1269526](1269535 'deref' 0))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269613] "expr temp" "maybe param" "maybe type" "temp"
    (1269616 'move' call_tmp[1269613](1269398 call obj _mt[203] _arg1[1269205]))
    unknown call_tmp[1269618] "expr temp" "maybe param" "maybe type" "temp"
    (1269621 'move' call_tmp[1269618](1269402 call obj _mt[203] _arg2[1269206]))
    unknown call_tmp[1269623] "expr temp" "maybe param" "maybe type" "temp"
    (1269626 'move' call_tmp[1269623](1269406 call chpl_field_lt call_tmp[1269613] call_tmp[1269618]))
    if call_tmp[1269623]
    {
      (1269541 'move' ret[1269526](1269540 'deref' 1))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269628] "expr temp" "maybe param" "maybe type" "temp"
    (1269631 'move' call_tmp[1269628](1269412 call obj _mt[203] _arg1[1269205]))
    unknown call_tmp[1269633] "expr temp" "maybe param" "maybe type" "temp"
    (1269636 'move' call_tmp[1269633](1269416 call obj _mt[203] _arg2[1269206]))
    unknown call_tmp[1269638] "expr temp" "maybe param" "maybe type" "temp"
    (1269641 'move' call_tmp[1269638](1269420 call chpl_field_gt call_tmp[1269628] call_tmp[1269633]))
    if call_tmp[1269638]
    {
      (1269546 'move' ret[1269526](1269545 'deref' 0))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269643] "expr temp" "maybe param" "maybe type" "temp"
    (1269646 'move' call_tmp[1269643](1269426 call bufDom _mt[203] _arg1[1269205]))
    unknown call_tmp[1269648] "expr temp" "maybe param" "maybe type" "temp"
    (1269651 'move' call_tmp[1269648](1269430 call bufDom _mt[203] _arg2[1269206]))
    unknown call_tmp[1269653] "expr temp" "maybe param" "maybe type" "temp"
    (1269656 'move' call_tmp[1269653](1269434 call chpl_field_lt call_tmp[1269643] call_tmp[1269648]))
    if call_tmp[1269653]
    {
      (1269551 'move' ret[1269526](1269550 'deref' 1))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269658] "expr temp" "maybe param" "maybe type" "temp"
    (1269661 'move' call_tmp[1269658](1269440 call bufDom _mt[203] _arg1[1269205]))
    unknown call_tmp[1269663] "expr temp" "maybe param" "maybe type" "temp"
    (1269666 'move' call_tmp[1269663](1269444 call bufDom _mt[203] _arg2[1269206]))
    unknown call_tmp[1269668] "expr temp" "maybe param" "maybe type" "temp"
    (1269671 'move' call_tmp[1269668](1269448 call chpl_field_gt call_tmp[1269658] call_tmp[1269663]))
    if call_tmp[1269668]
    {
      (1269556 'move' ret[1269526](1269555 'deref' 0))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269673] "expr temp" "maybe param" "maybe type" "temp"
    (1269676 'move' call_tmp[1269673](1269454 call buf _mt[203] _arg1[1269205]))
    unknown call_tmp[1269678] "expr temp" "maybe param" "maybe type" "temp"
    (1269681 'move' call_tmp[1269678](1269458 call buf _mt[203] _arg2[1269206]))
    unknown call_tmp[1269683] "expr temp" "maybe param" "maybe type" "temp"
    (1269686 'move' call_tmp[1269683](1269462 call chpl_field_lt call_tmp[1269673] call_tmp[1269678]))
    if call_tmp[1269683]
    {
      (1269561 'move' ret[1269526](1269560 'deref' 1))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269688] "expr temp" "maybe param" "maybe type" "temp"
    (1269691 'move' call_tmp[1269688](1269468 call buf _mt[203] _arg1[1269205]))
    unknown call_tmp[1269693] "expr temp" "maybe param" "maybe type" "temp"
    (1269696 'move' call_tmp[1269693](1269472 call buf _mt[203] _arg2[1269206]))
    unknown call_tmp[1269698] "expr temp" "maybe param" "maybe type" "temp"
    (1269701 'move' call_tmp[1269698](1269476 call chpl_field_gt call_tmp[1269688] call_tmp[1269693]))
    if call_tmp[1269698]
    {
      (1269566 'move' ret[1269526](1269565 'deref' 0))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269703] "expr temp" "maybe param" "maybe type" "temp"
    (1269706 'move' call_tmp[1269703](1269482 call cur _mt[203] _arg1[1269205]))
    unknown call_tmp[1269708] "expr temp" "maybe param" "maybe type" "temp"
    (1269711 'move' call_tmp[1269708](1269486 call cur _mt[203] _arg2[1269206]))
    unknown call_tmp[1269713] "expr temp" "maybe param" "maybe type" "temp"
    (1269716 'move' call_tmp[1269713](1269490 call chpl_field_lt call_tmp[1269703] call_tmp[1269708]))
    if call_tmp[1269713]
    {
      (1269571 'move' ret[1269526](1269570 'deref' 1))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    unknown call_tmp[1269718] "expr temp" "maybe param" "maybe type" "temp"
    (1269721 'move' call_tmp[1269718](1269496 call cur _mt[203] _arg1[1269205]))
    unknown call_tmp[1269723] "expr temp" "maybe param" "maybe type" "temp"
    (1269726 'move' call_tmp[1269723](1269500 call cur _mt[203] _arg2[1269206]))
    unknown call_tmp[1269728] "expr temp" "maybe param" "maybe type" "temp"
    (1269731 'move' call_tmp[1269728](1269504 call chpl_field_gt call_tmp[1269718] call_tmp[1269723]))
    if call_tmp[1269728]
    {
      (1269576 'move' ret[1269526](1269575 'deref' 0))
      gotoReturn _end_<=[1269524] _end_<=[1269524]
    }
    (1269581 'move' ret[1269526](1269580 'deref' 1))
    label _end_<=[1269524]
    (1269528 return ret[1269526])
  }
  where {
    unknown call_tmp[1269733] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1269736 'move' call_tmp[1269733](1269209 'typeof' _arg1[1269205]))
    unknown call_tmp[1269738] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1269741 'move' call_tmp[1269738](1269211 'typeof' _arg2[1269206]))
    unknown call_tmp[1269743] "expr temp" "maybe param" "maybe type" "temp"
    (1269746 'move' call_tmp[1269743](1269213 call == call_tmp[1269733] call_tmp[1269738]))
    unknown call_tmp[1269748] "expr temp" "maybe param" "maybe type" "temp"
    (1269751 'move' call_tmp[1269748](1269364 call chpl_fields_are_comparable[1269215] _arg1[1269205] _arg2[1269206]))
    (1269368 '&' call_tmp[1269743] call_tmp[1269748])
  }
  function chpl_fields_are_comparable[1269769](arg _arg1[1269771]:SparseIndexBuffer[271065](?), arg _arg2[1269772]:SparseIndexBuffer[271065](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1269831]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1269838] "expr temp" "maybe param" "maybe type" "temp"
    (1269841 'move' call_tmp[1269838](1269775 call rank _mt[203] _arg1[1269771]))
    unknown call_tmp[1269843] "expr temp" "maybe param" "maybe type" "temp"
    (1269846 'move' call_tmp[1269843](1269779 call rank _mt[203] _arg2[1269772]))
    unknown call_tmp[1269848] "expr temp" "maybe param" "maybe type" "temp"
    (1269851 'move' call_tmp[1269848](1269783 'call resolves' c">" call_tmp[1269838] call_tmp[1269843]))
    unknown call_tmp[1269853] "expr temp" "maybe param" "maybe type" "temp"
    (1269856 'move' call_tmp[1269853](1269785 call obj _mt[203] _arg1[1269771]))
    unknown call_tmp[1269858] "expr temp" "maybe param" "maybe type" "temp"
    (1269861 'move' call_tmp[1269858](1269789 call obj _mt[203] _arg2[1269772]))
    unknown call_tmp[1269863] "expr temp" "maybe param" "maybe type" "temp"
    (1269866 'move' call_tmp[1269863](1269793 'call resolves' c">" call_tmp[1269853] call_tmp[1269858]))
    unknown call_tmp[1269868] "expr temp" "maybe param" "maybe type" "temp"
    (1269871 'move' call_tmp[1269868](1269795 call bufDom _mt[203] _arg1[1269771]))
    unknown call_tmp[1269873] "expr temp" "maybe param" "maybe type" "temp"
    (1269876 'move' call_tmp[1269873](1269799 call bufDom _mt[203] _arg2[1269772]))
    unknown call_tmp[1269878] "expr temp" "maybe param" "maybe type" "temp"
    (1269881 'move' call_tmp[1269878](1269803 'call resolves' c">" call_tmp[1269868] call_tmp[1269873]))
    unknown call_tmp[1269883] "expr temp" "maybe param" "maybe type" "temp"
    (1269886 'move' call_tmp[1269883](1269805 call buf _mt[203] _arg1[1269771]))
    unknown call_tmp[1269888] "expr temp" "maybe param" "maybe type" "temp"
    (1269891 'move' call_tmp[1269888](1269809 call buf _mt[203] _arg2[1269772]))
    unknown call_tmp[1269893] "expr temp" "maybe param" "maybe type" "temp"
    (1269896 'move' call_tmp[1269893](1269813 'call resolves' c">" call_tmp[1269883] call_tmp[1269888]))
    unknown call_tmp[1269898] "expr temp" "maybe param" "maybe type" "temp"
    (1269901 'move' call_tmp[1269898](1269815 call cur _mt[203] _arg1[1269771]))
    unknown call_tmp[1269903] "expr temp" "maybe param" "maybe type" "temp"
    (1269906 'move' call_tmp[1269903](1269819 call cur _mt[203] _arg2[1269772]))
    unknown call_tmp[1269908] "expr temp" "maybe param" "maybe type" "temp"
    (1269911 'move' call_tmp[1269908](1269823 'call resolves' c">" call_tmp[1269898] call_tmp[1269903]))
    unknown call_tmp[1269913] "expr temp" "maybe param" "maybe type" "temp"
    (1269916 'move' call_tmp[1269913](1269825 '&' call_tmp[1269848] call_tmp[1269863] call_tmp[1269878] call_tmp[1269893] call_tmp[1269908]))
    (1269836 'move' ret[1269831](1269835 'deref' call_tmp[1269913]))
    (1269833 return ret[1269831])
  }
  function SparseIndexBuffer[271065](?).>[1269753](arg _mt[1269755]:_MT[201], arg this[1269757]:SparseIndexBuffer[271065](?), arg _arg1[1269759]:SparseIndexBuffer[271065](?), arg _arg2[1269760]:SparseIndexBuffer[271065](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1270080]:bool[19] "RVV" "temp"
    unknown call_tmp[1270137] "expr temp" "maybe param" "maybe type" "temp"
    (1270140 'move' call_tmp[1270137](1269924 call rank _mt[203] _arg1[1269759]))
    unknown call_tmp[1270142] "expr temp" "maybe param" "maybe type" "temp"
    (1270145 'move' call_tmp[1270142](1269928 call rank _mt[203] _arg2[1269760]))
    unknown call_tmp[1270147] "expr temp" "maybe param" "maybe type" "temp"
    (1270150 'move' call_tmp[1270147](1269932 call chpl_field_gt call_tmp[1270137] call_tmp[1270142]))
    if call_tmp[1270147]
    {
      (1270085 'move' ret[1270080](1270084 'deref' 1))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270152] "expr temp" "maybe param" "maybe type" "temp"
    (1270155 'move' call_tmp[1270152](1269938 call rank _mt[203] _arg1[1269759]))
    unknown call_tmp[1270157] "expr temp" "maybe param" "maybe type" "temp"
    (1270160 'move' call_tmp[1270157](1269942 call rank _mt[203] _arg2[1269760]))
    unknown call_tmp[1270162] "expr temp" "maybe param" "maybe type" "temp"
    (1270165 'move' call_tmp[1270162](1269946 call chpl_field_lt call_tmp[1270152] call_tmp[1270157]))
    if call_tmp[1270162]
    {
      (1270090 'move' ret[1270080](1270089 'deref' 0))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270167] "expr temp" "maybe param" "maybe type" "temp"
    (1270170 'move' call_tmp[1270167](1269952 call obj _mt[203] _arg1[1269759]))
    unknown call_tmp[1270172] "expr temp" "maybe param" "maybe type" "temp"
    (1270175 'move' call_tmp[1270172](1269956 call obj _mt[203] _arg2[1269760]))
    unknown call_tmp[1270177] "expr temp" "maybe param" "maybe type" "temp"
    (1270180 'move' call_tmp[1270177](1269960 call chpl_field_gt call_tmp[1270167] call_tmp[1270172]))
    if call_tmp[1270177]
    {
      (1270095 'move' ret[1270080](1270094 'deref' 1))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270182] "expr temp" "maybe param" "maybe type" "temp"
    (1270185 'move' call_tmp[1270182](1269966 call obj _mt[203] _arg1[1269759]))
    unknown call_tmp[1270187] "expr temp" "maybe param" "maybe type" "temp"
    (1270190 'move' call_tmp[1270187](1269970 call obj _mt[203] _arg2[1269760]))
    unknown call_tmp[1270192] "expr temp" "maybe param" "maybe type" "temp"
    (1270195 'move' call_tmp[1270192](1269974 call chpl_field_lt call_tmp[1270182] call_tmp[1270187]))
    if call_tmp[1270192]
    {
      (1270100 'move' ret[1270080](1270099 'deref' 0))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270197] "expr temp" "maybe param" "maybe type" "temp"
    (1270200 'move' call_tmp[1270197](1269980 call bufDom _mt[203] _arg1[1269759]))
    unknown call_tmp[1270202] "expr temp" "maybe param" "maybe type" "temp"
    (1270205 'move' call_tmp[1270202](1269984 call bufDom _mt[203] _arg2[1269760]))
    unknown call_tmp[1270207] "expr temp" "maybe param" "maybe type" "temp"
    (1270210 'move' call_tmp[1270207](1269988 call chpl_field_gt call_tmp[1270197] call_tmp[1270202]))
    if call_tmp[1270207]
    {
      (1270105 'move' ret[1270080](1270104 'deref' 1))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270212] "expr temp" "maybe param" "maybe type" "temp"
    (1270215 'move' call_tmp[1270212](1269994 call bufDom _mt[203] _arg1[1269759]))
    unknown call_tmp[1270217] "expr temp" "maybe param" "maybe type" "temp"
    (1270220 'move' call_tmp[1270217](1269998 call bufDom _mt[203] _arg2[1269760]))
    unknown call_tmp[1270222] "expr temp" "maybe param" "maybe type" "temp"
    (1270225 'move' call_tmp[1270222](1270002 call chpl_field_lt call_tmp[1270212] call_tmp[1270217]))
    if call_tmp[1270222]
    {
      (1270110 'move' ret[1270080](1270109 'deref' 0))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270227] "expr temp" "maybe param" "maybe type" "temp"
    (1270230 'move' call_tmp[1270227](1270008 call buf _mt[203] _arg1[1269759]))
    unknown call_tmp[1270232] "expr temp" "maybe param" "maybe type" "temp"
    (1270235 'move' call_tmp[1270232](1270012 call buf _mt[203] _arg2[1269760]))
    unknown call_tmp[1270237] "expr temp" "maybe param" "maybe type" "temp"
    (1270240 'move' call_tmp[1270237](1270016 call chpl_field_gt call_tmp[1270227] call_tmp[1270232]))
    if call_tmp[1270237]
    {
      (1270115 'move' ret[1270080](1270114 'deref' 1))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270242] "expr temp" "maybe param" "maybe type" "temp"
    (1270245 'move' call_tmp[1270242](1270022 call buf _mt[203] _arg1[1269759]))
    unknown call_tmp[1270247] "expr temp" "maybe param" "maybe type" "temp"
    (1270250 'move' call_tmp[1270247](1270026 call buf _mt[203] _arg2[1269760]))
    unknown call_tmp[1270252] "expr temp" "maybe param" "maybe type" "temp"
    (1270255 'move' call_tmp[1270252](1270030 call chpl_field_lt call_tmp[1270242] call_tmp[1270247]))
    if call_tmp[1270252]
    {
      (1270120 'move' ret[1270080](1270119 'deref' 0))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270257] "expr temp" "maybe param" "maybe type" "temp"
    (1270260 'move' call_tmp[1270257](1270036 call cur _mt[203] _arg1[1269759]))
    unknown call_tmp[1270262] "expr temp" "maybe param" "maybe type" "temp"
    (1270265 'move' call_tmp[1270262](1270040 call cur _mt[203] _arg2[1269760]))
    unknown call_tmp[1270267] "expr temp" "maybe param" "maybe type" "temp"
    (1270270 'move' call_tmp[1270267](1270044 call chpl_field_gt call_tmp[1270257] call_tmp[1270262]))
    if call_tmp[1270267]
    {
      (1270125 'move' ret[1270080](1270124 'deref' 1))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    unknown call_tmp[1270272] "expr temp" "maybe param" "maybe type" "temp"
    (1270275 'move' call_tmp[1270272](1270050 call cur _mt[203] _arg1[1269759]))
    unknown call_tmp[1270277] "expr temp" "maybe param" "maybe type" "temp"
    (1270280 'move' call_tmp[1270277](1270054 call cur _mt[203] _arg2[1269760]))
    unknown call_tmp[1270282] "expr temp" "maybe param" "maybe type" "temp"
    (1270285 'move' call_tmp[1270282](1270058 call chpl_field_lt call_tmp[1270272] call_tmp[1270277]))
    if call_tmp[1270282]
    {
      (1270130 'move' ret[1270080](1270129 'deref' 0))
      gotoReturn _end_>[1270078] _end_>[1270078]
    }
    (1270135 'move' ret[1270080](1270134 'deref' 0))
    label _end_>[1270078]
    (1270082 return ret[1270080])
  }
  where {
    unknown call_tmp[1270287] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1270290 'move' call_tmp[1270287](1269763 'typeof' _arg1[1269759]))
    unknown call_tmp[1270292] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1270295 'move' call_tmp[1270292](1269765 'typeof' _arg2[1269760]))
    unknown call_tmp[1270297] "expr temp" "maybe param" "maybe type" "temp"
    (1270300 'move' call_tmp[1270297](1269767 call == call_tmp[1270287] call_tmp[1270292]))
    unknown call_tmp[1270302] "expr temp" "maybe param" "maybe type" "temp"
    (1270305 'move' call_tmp[1270302](1269918 call chpl_fields_are_comparable[1269769] _arg1[1269759] _arg2[1269760]))
    (1269922 '&' call_tmp[1270297] call_tmp[1270302])
  }
  function chpl_fields_are_comparable[1270323](arg _arg1[1270325]:SparseIndexBuffer[271065](?), arg _arg2[1270326]:SparseIndexBuffer[271065](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1270385]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1270392] "expr temp" "maybe param" "maybe type" "temp"
    (1270395 'move' call_tmp[1270392](1270329 call rank _mt[203] _arg1[1270325]))
    unknown call_tmp[1270397] "expr temp" "maybe param" "maybe type" "temp"
    (1270400 'move' call_tmp[1270397](1270333 call rank _mt[203] _arg2[1270326]))
    unknown call_tmp[1270402] "expr temp" "maybe param" "maybe type" "temp"
    (1270405 'move' call_tmp[1270402](1270337 'call resolves' c">=" call_tmp[1270392] call_tmp[1270397]))
    unknown call_tmp[1270407] "expr temp" "maybe param" "maybe type" "temp"
    (1270410 'move' call_tmp[1270407](1270339 call obj _mt[203] _arg1[1270325]))
    unknown call_tmp[1270412] "expr temp" "maybe param" "maybe type" "temp"
    (1270415 'move' call_tmp[1270412](1270343 call obj _mt[203] _arg2[1270326]))
    unknown call_tmp[1270417] "expr temp" "maybe param" "maybe type" "temp"
    (1270420 'move' call_tmp[1270417](1270347 'call resolves' c">=" call_tmp[1270407] call_tmp[1270412]))
    unknown call_tmp[1270422] "expr temp" "maybe param" "maybe type" "temp"
    (1270425 'move' call_tmp[1270422](1270349 call bufDom _mt[203] _arg1[1270325]))
    unknown call_tmp[1270427] "expr temp" "maybe param" "maybe type" "temp"
    (1270430 'move' call_tmp[1270427](1270353 call bufDom _mt[203] _arg2[1270326]))
    unknown call_tmp[1270432] "expr temp" "maybe param" "maybe type" "temp"
    (1270435 'move' call_tmp[1270432](1270357 'call resolves' c">=" call_tmp[1270422] call_tmp[1270427]))
    unknown call_tmp[1270437] "expr temp" "maybe param" "maybe type" "temp"
    (1270440 'move' call_tmp[1270437](1270359 call buf _mt[203] _arg1[1270325]))
    unknown call_tmp[1270442] "expr temp" "maybe param" "maybe type" "temp"
    (1270445 'move' call_tmp[1270442](1270363 call buf _mt[203] _arg2[1270326]))
    unknown call_tmp[1270447] "expr temp" "maybe param" "maybe type" "temp"
    (1270450 'move' call_tmp[1270447](1270367 'call resolves' c">=" call_tmp[1270437] call_tmp[1270442]))
    unknown call_tmp[1270452] "expr temp" "maybe param" "maybe type" "temp"
    (1270455 'move' call_tmp[1270452](1270369 call cur _mt[203] _arg1[1270325]))
    unknown call_tmp[1270457] "expr temp" "maybe param" "maybe type" "temp"
    (1270460 'move' call_tmp[1270457](1270373 call cur _mt[203] _arg2[1270326]))
    unknown call_tmp[1270462] "expr temp" "maybe param" "maybe type" "temp"
    (1270465 'move' call_tmp[1270462](1270377 'call resolves' c">=" call_tmp[1270452] call_tmp[1270457]))
    unknown call_tmp[1270467] "expr temp" "maybe param" "maybe type" "temp"
    (1270470 'move' call_tmp[1270467](1270379 '&' call_tmp[1270402] call_tmp[1270417] call_tmp[1270432] call_tmp[1270447] call_tmp[1270462]))
    (1270390 'move' ret[1270385](1270389 'deref' call_tmp[1270467]))
    (1270387 return ret[1270385])
  }
  function SparseIndexBuffer[271065](?).>=[1270307](arg _mt[1270309]:_MT[201], arg this[1270311]:SparseIndexBuffer[271065](?), arg _arg1[1270313]:SparseIndexBuffer[271065](?), arg _arg2[1270314]:SparseIndexBuffer[271065](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1270634]:bool[19] "RVV" "temp"
    unknown call_tmp[1270691] "expr temp" "maybe param" "maybe type" "temp"
    (1270694 'move' call_tmp[1270691](1270478 call rank _mt[203] _arg1[1270313]))
    unknown call_tmp[1270696] "expr temp" "maybe param" "maybe type" "temp"
    (1270699 'move' call_tmp[1270696](1270482 call rank _mt[203] _arg2[1270314]))
    unknown call_tmp[1270701] "expr temp" "maybe param" "maybe type" "temp"
    (1270704 'move' call_tmp[1270701](1270486 call chpl_field_gt call_tmp[1270691] call_tmp[1270696]))
    if call_tmp[1270701]
    {
      (1270639 'move' ret[1270634](1270638 'deref' 1))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270706] "expr temp" "maybe param" "maybe type" "temp"
    (1270709 'move' call_tmp[1270706](1270492 call rank _mt[203] _arg1[1270313]))
    unknown call_tmp[1270711] "expr temp" "maybe param" "maybe type" "temp"
    (1270714 'move' call_tmp[1270711](1270496 call rank _mt[203] _arg2[1270314]))
    unknown call_tmp[1270716] "expr temp" "maybe param" "maybe type" "temp"
    (1270719 'move' call_tmp[1270716](1270500 call chpl_field_lt call_tmp[1270706] call_tmp[1270711]))
    if call_tmp[1270716]
    {
      (1270644 'move' ret[1270634](1270643 'deref' 0))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270721] "expr temp" "maybe param" "maybe type" "temp"
    (1270724 'move' call_tmp[1270721](1270506 call obj _mt[203] _arg1[1270313]))
    unknown call_tmp[1270726] "expr temp" "maybe param" "maybe type" "temp"
    (1270729 'move' call_tmp[1270726](1270510 call obj _mt[203] _arg2[1270314]))
    unknown call_tmp[1270731] "expr temp" "maybe param" "maybe type" "temp"
    (1270734 'move' call_tmp[1270731](1270514 call chpl_field_gt call_tmp[1270721] call_tmp[1270726]))
    if call_tmp[1270731]
    {
      (1270649 'move' ret[1270634](1270648 'deref' 1))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270736] "expr temp" "maybe param" "maybe type" "temp"
    (1270739 'move' call_tmp[1270736](1270520 call obj _mt[203] _arg1[1270313]))
    unknown call_tmp[1270741] "expr temp" "maybe param" "maybe type" "temp"
    (1270744 'move' call_tmp[1270741](1270524 call obj _mt[203] _arg2[1270314]))
    unknown call_tmp[1270746] "expr temp" "maybe param" "maybe type" "temp"
    (1270749 'move' call_tmp[1270746](1270528 call chpl_field_lt call_tmp[1270736] call_tmp[1270741]))
    if call_tmp[1270746]
    {
      (1270654 'move' ret[1270634](1270653 'deref' 0))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270751] "expr temp" "maybe param" "maybe type" "temp"
    (1270754 'move' call_tmp[1270751](1270534 call bufDom _mt[203] _arg1[1270313]))
    unknown call_tmp[1270756] "expr temp" "maybe param" "maybe type" "temp"
    (1270759 'move' call_tmp[1270756](1270538 call bufDom _mt[203] _arg2[1270314]))
    unknown call_tmp[1270761] "expr temp" "maybe param" "maybe type" "temp"
    (1270764 'move' call_tmp[1270761](1270542 call chpl_field_gt call_tmp[1270751] call_tmp[1270756]))
    if call_tmp[1270761]
    {
      (1270659 'move' ret[1270634](1270658 'deref' 1))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270766] "expr temp" "maybe param" "maybe type" "temp"
    (1270769 'move' call_tmp[1270766](1270548 call bufDom _mt[203] _arg1[1270313]))
    unknown call_tmp[1270771] "expr temp" "maybe param" "maybe type" "temp"
    (1270774 'move' call_tmp[1270771](1270552 call bufDom _mt[203] _arg2[1270314]))
    unknown call_tmp[1270776] "expr temp" "maybe param" "maybe type" "temp"
    (1270779 'move' call_tmp[1270776](1270556 call chpl_field_lt call_tmp[1270766] call_tmp[1270771]))
    if call_tmp[1270776]
    {
      (1270664 'move' ret[1270634](1270663 'deref' 0))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270781] "expr temp" "maybe param" "maybe type" "temp"
    (1270784 'move' call_tmp[1270781](1270562 call buf _mt[203] _arg1[1270313]))
    unknown call_tmp[1270786] "expr temp" "maybe param" "maybe type" "temp"
    (1270789 'move' call_tmp[1270786](1270566 call buf _mt[203] _arg2[1270314]))
    unknown call_tmp[1270791] "expr temp" "maybe param" "maybe type" "temp"
    (1270794 'move' call_tmp[1270791](1270570 call chpl_field_gt call_tmp[1270781] call_tmp[1270786]))
    if call_tmp[1270791]
    {
      (1270669 'move' ret[1270634](1270668 'deref' 1))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270796] "expr temp" "maybe param" "maybe type" "temp"
    (1270799 'move' call_tmp[1270796](1270576 call buf _mt[203] _arg1[1270313]))
    unknown call_tmp[1270801] "expr temp" "maybe param" "maybe type" "temp"
    (1270804 'move' call_tmp[1270801](1270580 call buf _mt[203] _arg2[1270314]))
    unknown call_tmp[1270806] "expr temp" "maybe param" "maybe type" "temp"
    (1270809 'move' call_tmp[1270806](1270584 call chpl_field_lt call_tmp[1270796] call_tmp[1270801]))
    if call_tmp[1270806]
    {
      (1270674 'move' ret[1270634](1270673 'deref' 0))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270811] "expr temp" "maybe param" "maybe type" "temp"
    (1270814 'move' call_tmp[1270811](1270590 call cur _mt[203] _arg1[1270313]))
    unknown call_tmp[1270816] "expr temp" "maybe param" "maybe type" "temp"
    (1270819 'move' call_tmp[1270816](1270594 call cur _mt[203] _arg2[1270314]))
    unknown call_tmp[1270821] "expr temp" "maybe param" "maybe type" "temp"
    (1270824 'move' call_tmp[1270821](1270598 call chpl_field_gt call_tmp[1270811] call_tmp[1270816]))
    if call_tmp[1270821]
    {
      (1270679 'move' ret[1270634](1270678 'deref' 1))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    unknown call_tmp[1270826] "expr temp" "maybe param" "maybe type" "temp"
    (1270829 'move' call_tmp[1270826](1270604 call cur _mt[203] _arg1[1270313]))
    unknown call_tmp[1270831] "expr temp" "maybe param" "maybe type" "temp"
    (1270834 'move' call_tmp[1270831](1270608 call cur _mt[203] _arg2[1270314]))
    unknown call_tmp[1270836] "expr temp" "maybe param" "maybe type" "temp"
    (1270839 'move' call_tmp[1270836](1270612 call chpl_field_lt call_tmp[1270826] call_tmp[1270831]))
    if call_tmp[1270836]
    {
      (1270684 'move' ret[1270634](1270683 'deref' 0))
      gotoReturn _end_>=[1270632] _end_>=[1270632]
    }
    (1270689 'move' ret[1270634](1270688 'deref' 1))
    label _end_>=[1270632]
    (1270636 return ret[1270634])
  }
  where {
    unknown call_tmp[1270841] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1270844 'move' call_tmp[1270841](1270317 'typeof' _arg1[1270313]))
    unknown call_tmp[1270846] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1270849 'move' call_tmp[1270846](1270319 'typeof' _arg2[1270314]))
    unknown call_tmp[1270851] "expr temp" "maybe param" "maybe type" "temp"
    (1270854 'move' call_tmp[1270851](1270321 call == call_tmp[1270841] call_tmp[1270846]))
    unknown call_tmp[1270856] "expr temp" "maybe param" "maybe type" "temp"
    (1270859 'move' call_tmp[1270856](1270472 call chpl_fields_are_comparable[1270323] _arg1[1270313] _arg2[1270314]))
    (1270476 '&' call_tmp[1270851] call_tmp[1270856])
  }
  type SparseIndexBuffer[271065](?) unknown rank[270885] "param" int(64)[10] unknown obj[270890](270893 call BaseSparseDom[271529](?) ?[227]) unknown idxType[270898] "type variable"(270908 IfExpr (270899 call == rank[270885] 1) then
  { scopeless
    int(64)[10]
  } else
  { scopeless
    (270904 call * rank[270885] int(64)[10])
  } ) unknown bufDom[270913](270915 call chpl__buildDomainRuntimeType defaultDist[288287] 1) unknown buf[270921](270926 call chpl__buildArrayRuntimeType(270923 call chpl__ensureDomainExpr bufDom[270913]) idxType[270898]) val cur[270931]:int(64)[10] 0
  function BaseSparseDom[271529](?).isSparse[271081](arg _mt[271085]:_MT[201], arg this[271083]:BaseSparseDom[271529](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[626805] "RVV" "param" "temp"
    (626810 'move' ret[626805](626809 'deref' 1))
    (626807 return ret[626805])
  }
  function BaseSparseDom[271529](?).getNNZ[271092](arg _mt[271096]:_MT[201], arg this[271094]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown ret[626814] "RVV" "temp"
    (271101 call halt "nnz queried on base class")
    (626816 return ret[626814])
  }
  { scopeless type
    int(64)[10]
  }
  function BaseSparseDom[271529](?).deinit[271108](arg _mt[271112]:_MT[201], arg this[271110]:BaseSparseDom[271529](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (626818 return _void[46])
  }
  function BaseSparseDom[271529](?).dsiClear[271117](arg _mt[271121]:_MT[201], arg this[271119]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271125 call halt "clear not implemented for this distribution - BaseSparseDom")
    (626820 return _void[46])
  }
  function BaseSparseDom[271529](?).dsiBulkAdd[271131](arg _mt[271157]:_MT[201], arg this[271133]:BaseSparseDom[271529](?), arg inds[271142]:_array[255540](?), arg dataSorted[271146] :
  0 =
  0, arg isUnique[271150] :
  0 =
  0, arg addOn[271154] :
  nilLocale[135253] =
  nilLocale[135253]) : _unknown[42] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown ret[626824] "RVV" "temp"
    (271162 call halt "Bulk addition is not supported by this sparse domain")
    (626826 return ret[626824])
  }
  where {
    unknown call_tmp[908671] "expr temp" "maybe param" "maybe type" "temp"
    (908674 'move' call_tmp[908671](452534 call rank _mt[203] this[271133]))
    unknown call_tmp[908678] "expr temp" "maybe param" "maybe type" "temp"
    (908681 'move' call_tmp[908678](452539 call idxType _mt[203] this[271133]))
    unknown call_tmp[908683] "expr temp" "maybe param" "maybe type" "temp"
    (908686 'move' call_tmp[908683](271136 call chpl__buildIndexType call_tmp[908671] call_tmp[908678]))
    unknown call_tmp[908690] "expr temp" "maybe param" "maybe type" "temp"
    (908693 'move' call_tmp[908690](532474 call eltType _mt[203] inds[271142]))
    unknown call_tmp[908695] "expr temp" "maybe param" "maybe type" "temp"
    (908698 'move' call_tmp[908695](532478 'is_instantiation_allow_values' call_tmp[908683] call_tmp[908690]))
    (532472 call & 1 call_tmp[908695])
  }
  { scopeless type
    int(64)[10]
  }
  function BaseSparseDom[271529](?).dsiBulkAddNoPreserveInds[271169](arg _mt[271195]:_MT[201], arg this[271171]:BaseSparseDom[271529](?), ref arg inds[271180]:_array[255540](?), arg dataSorted[271184] :
  0 =
  0, arg isUnique[271188] :
  0 =
  0, arg addOn[271192] :
  nilLocale[135253] =
  nilLocale[135253]) : _unknown[42] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown ret[626830] "RVV" "temp"
    (271200 call halt "Bulk addition is not supported by this sparse domain")
    (626832 return ret[626830])
  }
  where {
    unknown call_tmp[908702] "expr temp" "maybe param" "maybe type" "temp"
    (908705 'move' call_tmp[908702](452545 call rank _mt[203] this[271171]))
    unknown call_tmp[908709] "expr temp" "maybe param" "maybe type" "temp"
    (908712 'move' call_tmp[908709](452550 call idxType _mt[203] this[271171]))
    unknown call_tmp[908714] "expr temp" "maybe param" "maybe type" "temp"
    (908717 'move' call_tmp[908714](271174 call chpl__buildIndexType call_tmp[908702] call_tmp[908709]))
    unknown call_tmp[908721] "expr temp" "maybe param" "maybe type" "temp"
    (908724 'move' call_tmp[908721](532485 call eltType _mt[203] inds[271180]))
    unknown call_tmp[908726] "expr temp" "maybe param" "maybe type" "temp"
    (908729 'move' call_tmp[908726](532489 'is_instantiation_allow_values' call_tmp[908714] call_tmp[908721]))
    (532483 call & 1 call_tmp[908726])
  }
  { scopeless type
    int(64)[10]
  }
  function BaseSparseDom[271529](?).boundsCheck[271205](arg _mt[271216]:_MT[201], arg this[271207]:BaseSparseDom[271529](?), arg ind[271213] :
  unknown call_tmp[908733] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown ret[626836] "RVV" "temp"
    unknown call_tmp[908745] "expr temp" "maybe param" "maybe type" "temp"
    (908748 'move' call_tmp[908745](271246 call _cond_test 1))
    if call_tmp[908745]
    {
      unknown call_tmp[908752] "expr temp" "maybe param" "maybe type" "temp"
      (908755 'move' call_tmp[908752](408691 call parentDom _mt[203] this[271207]))
      unknown call_tmp[908759] "expr temp" "maybe param" "maybe type" "temp"
      (908762 'move' call_tmp[908759](271238 call(271235 call (partial) contains _mt[203] call_tmp[908752]) ind[271213]))
      unknown call_tmp[908764] "expr temp" "maybe param" "maybe type" "temp"
      (908767 'move' call_tmp[908764](271232 call ! call_tmp[908759]))
      unknown call_tmp[908769] "expr temp" "maybe param" "maybe type" "temp"
      (908772 'move' call_tmp[908769](271240 call _cond_test call_tmp[908764]))
      if call_tmp[908769]
      {
        unknown call_tmp[908776] "expr temp" "maybe param" "maybe type" "temp"
        (908779 'move' call_tmp[908776](452567 call parentDom _mt[203] this[271207]))
        (271221 call halt "Sparse domain/array index out of bounds: " ind[271213] " (expected to be within " call_tmp[908776] ")")
      }
    }
    (626838 return ret[626836])
  }
  { scopeless type
    void[4]
  }
  function BaseSparseDom[271529](?).canDoDirectAssignment[271254](arg _mt[271262]:_MT[201], arg this[271256]:BaseSparseDom[271529](?), arg rhs[271259]:_domain[225034](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[626842] "RVV" "temp"
    unknown tmp[502155] "maybe param" "temp"
    unknown call_tmp[908783] "expr temp" "maybe param" "maybe type" "temp"
    (908786 'move' call_tmp[908783](271300 call parentDom _mt[203] this[271256]))
    (502166 'move' tmp[502155](271306 call(271303 call (partial) isRectangular _mt[203] call_tmp[908783])))
    unknown call_tmp[908790] "expr temp" "maybe param" "maybe type" "temp"
    (908793 'move' call_tmp[908790](502168 call _cond_invalid tmp[502155]))
    if call_tmp[908790]
    {
      (502171 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[702682] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702683] "maybe param" "temp"
    unknown call_tmp[908795] "expr temp" "maybe param" "maybe type" "temp"
    (908798 'move' call_tmp[908795](502156 call isTrue tmp[502155]))
    (702688 'move' tmp[702683](702686 call _cond_test call_tmp[908795]))
    if tmp[702683]
    {
      unknown tmp[702690] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[908802] "expr temp" "maybe param" "maybe type" "temp"
      (908805 'move' call_tmp[908802](271308 call parentDom _mt[203] rhs[271259]))
      unknown call_tmp[908809] "expr temp" "maybe param" "maybe type" "temp"
      (908812 'move' call_tmp[908809](271314 call(271311 call (partial) isRectangular _mt[203] call_tmp[908802])))
      (702692 'move' tmp[702690](502159 call isTrue call_tmp[908809]))
      (702697 'move' tmp[702682](702694 '_paramFoldLogical' tmp[702683] tmp[702690]))
    }
    {
      (702702 'move' tmp[702682](702699 '_paramFoldLogical' tmp[702683] 0))
    }
    unknown call_tmp[908814] "expr temp" "maybe param" "maybe type" "temp"
    (908817 'move' call_tmp[908814](271315 call _cond_test tmp[702682]))
    if call_tmp[908814]
    {
      unknown call_tmp[908821] "expr temp" "maybe param" "maybe type" "temp"
      (908824 'move' call_tmp[908821](271289 call dsiNumIndices _mt[203] this[271256]))
      unknown call_tmp[908826] "expr temp" "maybe param" "maybe type" "temp"
      (908829 'move' call_tmp[908826](271286 call == call_tmp[908821] 0))
      unknown call_tmp[908831] "expr temp" "maybe param" "maybe type" "temp"
      (908834 'move' call_tmp[908831](271293 call _cond_test call_tmp[908826]))
      if call_tmp[908831]
      {
        unknown call_tmp[908838] "expr temp" "maybe param" "maybe type" "temp"
        (908841 'move' call_tmp[908838](271271 call parentDom _mt[203] this[271256]))
        unknown call_tmp[908847] "expr temp" "maybe param" "maybe type" "temp"
        (908850 'move' call_tmp[908847](271279 call parentDom _mt[203] rhs[271259]))
        unknown call_tmp[908852] "expr temp" "maybe param" "maybe type" "temp"
        (908855 'move' call_tmp[908852](271277 call(271274 call (partial) contains _mt[203] call_tmp[908838]) call_tmp[908847]))
        unknown call_tmp[908857] "expr temp" "maybe param" "maybe type" "temp"
        (908860 'move' call_tmp[908857](271282 call _cond_test call_tmp[908852]))
        if call_tmp[908857]
        {
          (626847 'move' ret[626842](626846 'deref' 1))
          gotoReturn _end_canDoDirectAssignment[626840] _end_canDoDirectAssignment[626840]
        }
      }
    }
    (626852 'move' ret[626842](626851 'deref' 0))
    label _end_canDoDirectAssignment[626840]
    (626844 return ret[626842])
  }
  function BaseSparseDom[271529](?).dsiDim[271323](arg _mt[271331]:_MT[201], arg this[271325]:BaseSparseDom[271529](?), arg d[271328]:int(64)[10]) : _unknown[42] "method" "primary method"
  {
    unknown ret[626856] "RVV" "temp"
    unknown call_tmp[908864] "expr temp" "maybe param" "maybe type" "temp"
    (908867 'move' call_tmp[908864](408701 call parentDom _mt[203] this[271325]))
    unknown call_tmp[908871] "expr temp" "maybe param" "maybe type" "temp"
    (908874 'move' call_tmp[908871](271339 call(271336 call (partial) dim _mt[203] call_tmp[908864]) d[271328]))
    (626861 'move' ret[626856](626860 'deref' call_tmp[908871]))
    (626858 return ret[626856])
  }
  function BaseSparseDom[271529](?).dsiDims[271343](arg _mt[271347]:_MT[201], arg this[271345]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method"
  {
    unknown ret[626865] "RVV" "temp"
    unknown call_tmp[908878] "expr temp" "maybe param" "maybe type" "temp"
    (908881 'move' call_tmp[908878](408706 call parentDom _mt[203] this[271345]))
    unknown call_tmp[908885] "expr temp" "maybe param" "maybe type" "temp"
    (908888 'move' call_tmp[908885](271355 call(271352 call (partial) dims _mt[203] call_tmp[908878])))
    (626870 'move' ret[626865](626869 'deref' call_tmp[908885]))
    (626867 return ret[626865])
  }
  function BaseSparseDom[271529](?).dsiNumIndices[271358](arg _mt[271362]:_MT[201], arg this[271360]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[626874] "RVV" "temp"
    unknown call_tmp[908892] "expr temp" "maybe param" "maybe type" "temp"
    (908895 'move' call_tmp[908892](271367 call(452575 call (partial) getNNZ _mt[203] this[271360])))
    (626879 'move' ret[626874](626878 'deref' call_tmp[908892]))
    (626876 return ret[626874])
  }
  function BaseSparseDom[271529](?).dsiSize[271370](arg _mt[271374]:_MT[201], arg this[271372]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[626883] "RVV" "temp"
    unknown call_tmp[908899] "expr temp" "maybe param" "maybe type" "temp"
    (908902 'move' call_tmp[908899](271379 call(452579 call (partial) getNNZ _mt[203] this[271372])))
    (626888 'move' ret[626883](626887 'deref' call_tmp[908899]))
    (626885 return ret[626883])
  }
  function BaseSparseDom[271529](?).dsiLow[271382](arg _mt[271386]:_MT[201], arg this[271384]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[626892] "RVV" "temp"
    unknown call_tmp[908906] "expr temp" "maybe param" "maybe type" "temp"
    (908909 'move' call_tmp[908906](408711 call parentDom _mt[203] this[271384]))
    unknown call_tmp[908913] "expr temp" "maybe param" "maybe type" "temp"
    (908916 'move' call_tmp[908913](271391 call lowBound _mt[203] call_tmp[908906]))
    (626897 'move' ret[626892](626896 'deref' call_tmp[908913]))
    (626894 return ret[626892])
  }
  function BaseSparseDom[271529](?).dsiHigh[271396](arg _mt[271400]:_MT[201], arg this[271398]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[626901] "RVV" "temp"
    unknown call_tmp[908920] "expr temp" "maybe param" "maybe type" "temp"
    (908923 'move' call_tmp[908920](408716 call parentDom _mt[203] this[271398]))
    unknown call_tmp[908927] "expr temp" "maybe param" "maybe type" "temp"
    (908930 'move' call_tmp[908927](271405 call highBound _mt[203] call_tmp[908920]))
    (626906 'move' ret[626901](626905 'deref' call_tmp[908927]))
    (626903 return ret[626901])
  }
  function BaseSparseDom[271529](?).dsiStride[271410](arg _mt[271414]:_MT[201], arg this[271412]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[626910] "RVV" "temp"
    unknown call_tmp[908934] "expr temp" "maybe param" "maybe type" "temp"
    (908937 'move' call_tmp[908934](408721 call parentDom _mt[203] this[271412]))
    unknown call_tmp[908941] "expr temp" "maybe param" "maybe type" "temp"
    (908944 'move' call_tmp[908941](271419 call stride _mt[203] call_tmp[908934]))
    (626915 'move' ret[626910](626914 'deref' call_tmp[908941]))
    (626912 return ret[626910])
  }
  function BaseSparseDom[271529](?).dsiAlignment[271424](arg _mt[271428]:_MT[201], arg this[271426]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[626919] "RVV" "temp"
    unknown call_tmp[908948] "expr temp" "maybe param" "maybe type" "temp"
    (908951 'move' call_tmp[908948](408726 call parentDom _mt[203] this[271426]))
    unknown call_tmp[908955] "expr temp" "maybe param" "maybe type" "temp"
    (908958 'move' call_tmp[908955](271433 call alignment _mt[203] call_tmp[908948]))
    (626924 'move' ret[626919](626923 'deref' call_tmp[908955]))
    (626921 return ret[626919])
  }
  function BaseSparseDom[271529](?).dsiFirst[271438](arg _mt[271442]:_MT[201], arg this[271440]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides" "no return value for void"
  {
    unknown ret[626928] "RVV" "temp"
    (271450 call halt "dsiFirst is not implemented")
    (626930 return ret[626928])
  }
  { scopeless type
    unknown call_tmp[908962] "expr temp" "maybe param" "maybe type" "temp"
    (908965 'move' call_tmp[908962](452584 call rank _mt[203] this[271440]))
    unknown call_tmp[908969] "expr temp" "maybe param" "maybe type" "temp"
    (908972 'move' call_tmp[908969](452589 call idxType _mt[203] this[271440]))
    (271444 call * call_tmp[908962] call_tmp[908969])
  }
  function BaseSparseDom[271529](?).dsiLast[271457](arg _mt[271461]:_MT[201], arg this[271459]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides" "no return value for void"
  {
    unknown ret[626934] "RVV" "temp"
    (271469 call halt "dsiLast not implemented")
    (626936 return ret[626934])
  }
  { scopeless type
    unknown call_tmp[908976] "expr temp" "maybe param" "maybe type" "temp"
    (908979 'move' call_tmp[908976](452594 call rank _mt[203] this[271459]))
    unknown call_tmp[908983] "expr temp" "maybe param" "maybe type" "temp"
    (908986 'move' call_tmp[908983](452599 call idxType _mt[203] this[271459]))
    (271463 call * call_tmp[908976] call_tmp[908983])
  }
  function BaseSparseDom[271529](?).dsiAlignedLow[271476](arg _mt[271480]:_MT[201], arg this[271478]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[626940] "RVV" "temp"
    unknown call_tmp[908990] "expr temp" "maybe param" "maybe type" "temp"
    (908993 'move' call_tmp[908990](408731 call parentDom _mt[203] this[271478]))
    unknown call_tmp[908997] "expr temp" "maybe param" "maybe type" "temp"
    (909000 'move' call_tmp[908997](271485 call low _mt[203] call_tmp[908990]))
    (626945 'move' ret[626940](626944 'deref' call_tmp[908997]))
    (626942 return ret[626940])
  }
  function BaseSparseDom[271529](?).dsiAlignedHigh[271490](arg _mt[271494]:_MT[201], arg this[271492]:BaseSparseDom[271529](?)) : _unknown[42] "method" "primary method" "no parens" "method overrides"
  {
    unknown ret[626949] "RVV" "temp"
    unknown call_tmp[909004] "expr temp" "maybe param" "maybe type" "temp"
    (909007 'move' call_tmp[909004](408736 call parentDom _mt[203] this[271492]))
    unknown call_tmp[909011] "expr temp" "maybe param" "maybe type" "temp"
    (909014 'move' call_tmp[909011](271499 call high _mt[203] call_tmp[909004]))
    (626954 'move' ret[626949](626953 'deref' call_tmp[909011]))
    (626951 return ret[626949])
  }
  function BaseSparseDom[271529](?).dsiCreateIndexBuffer[271504](arg _mt[271510]:_MT[201], arg this[271506]:BaseSparseDom[271529](?), arg size[271508]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[626958] "RVV" "temp"
    unknown call_tmp[909018] "expr temp" "maybe param" "maybe type" "temp"
    (909021 'move' call_tmp[909018](271518 call rank _mt[203] this[271506]))
    unknown call_tmp[909023] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (909026 'move' call_tmp[909023](1000456 'new' SparseIndexBuffer[271065](?)(rank = call_tmp[909018])(obj = this[271506])(size = size[271508])))
    (626963 'move' ret[626958](626962 'deref' call_tmp[909023]))
    (626960 return ret[626958])
  }
  function BaseSparseDom[271529](?).init[1266847](arg _mt[1266849]:_MT[201], arg this[1266850]:BaseSparseDom[271529](?), param arg rank[1266861]:int(64)[10], arg idxType[1266871]:_any[141](?), in arg parentDom[1266880]:_any[141](?)) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1266891] "temporary of super field" "temp"
    (1266893 'move' super_tmp[1266891](1266890 '.v' this[1266850] c"super"))
    (1266860 call(1266858 call (partial) init _mt[203] super_tmp[1266891]))
    (1266926 'end of statement')
    unknown tmp[1266896] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1266930] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1266942] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1266945 'move' call_tmp[1266942](1266898 '.v' this[1266850] c"super"))
      (1266934 'move' call_type_tmp[1266930](1266901 'typeof' call_tmp[1266942]))
    }
    (1266902 'move' tmp[1266896] call_type_tmp[1266930])
    unknown call_tmp[1266947] "maybe param" "maybe type" "temp"
    (1266950 'move' call_tmp[1266947](1266907 'cast' tmp[1266896] this[1266850]))
    unknown chpl__thisAsParent[1266904] "dead at end of block" "insert auto destroy" "temp"
    (1266938 'init var' chpl__thisAsParent[1266904] call_tmp[1266947] tmp[1266896])
    (1266910 'setcid' chpl__thisAsParent[1266904])
    unknown call_tmp[1266952] "expr temp" "maybe param" "maybe type" "temp"
    (1266955 'move' call_tmp[1266952](1266913 call : rank[1266861] int(64)[10]))
    (1266915 'init field' this[1266850] c"rank" call_tmp[1266952])
    (1266927 'end of statement')
    (1266918 'init field' this[1266850] c"idxType" idxType[1266871])
    (1266921 'init field' this[1266850] c"parentDom" parentDom[1266880])
    (1266928 'end of statement')
    (1266924 'setcid' this[1266850])
    (1266936 return _void[46])
  }
  function BaseSparseDom[271529](?).super[1270861](arg _mt[1270863]:_MT[201], arg this[1270865]:BaseSparseDom[271529](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1270875] "RVV" "temp"
    unknown call_tmp[1270882] "expr temp" "maybe param" "maybe type" "temp"
    (1270885 'move' call_tmp[1270882](1270869 '.v' this[1270865] c"super"))
    (1270880 'move' ret[1270875](1270879 'deref' call_tmp[1270882]))
    (1270877 return ret[1270875])
  }
  function BaseSparseDom[1270892](?).rank[1270887](arg _mt[1270889]:_MT[201], arg this[1270894]:BaseSparseDom[1270892](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1270925] "RVV" "param" "temp"
    unknown borrowOfThis[1270896]
    (1270917 'end of statement')
    (1270902 'move' borrowOfThis[1270896](1270898 call : this[1270894] _borrowedNonNilable[177](?)))
    (1270918 'end of statement' borrowOfThis[1270896])
    unknown call_tmp[1270939] "expr temp" "maybe param" "maybe type" "temp"
    (1270942 'move' call_tmp[1270939](1270907 'is bound' borrowOfThis[1270896] c"rank"))
    if call_tmp[1270939]
    {
      unknown call_tmp[1270944] "expr temp" "maybe param" "maybe type" "temp"
      (1270947 'move' call_tmp[1270944](1270906 '.' borrowOfThis[1270896] c"rank"))
      (1270930 'move' ret[1270925](1270929 'deref' call_tmp[1270944]))
      gotoReturn _end_rank[1270923] _end_rank[1270923]
      (1270920 'end of statement' borrowOfThis[1270896])
    }
    {
      (1270935 'move' ret[1270925](1270934 'deref' ?[227]))
      gotoReturn _end_rank[1270923] _end_rank[1270923]
    }
    label _end_rank[1270923]
    (1270927 return ret[1270925])
  }
  function BaseSparseDom[1270892](?).rank[1270949](arg _mt[1270951]:_MT[201], arg this[1270953]:BaseSparseDom[1270892](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1270984] "RVV" "param" "temp"
    unknown borrowOfThis[1270955] "type variable"
    (1270976 'end of statement')
    (1270961 'move' borrowOfThis[1270955](1270957 call : this[1270953] _borrowedNonNilable[177](?)))
    (1270977 'end of statement' borrowOfThis[1270955])
    unknown call_tmp[1270998] "expr temp" "maybe param" "maybe type" "temp"
    (1271001 'move' call_tmp[1270998](1270966 'is bound' borrowOfThis[1270955] c"rank"))
    if call_tmp[1270998]
    {
      unknown call_tmp[1271003] "expr temp" "maybe param" "maybe type" "temp"
      (1271006 'move' call_tmp[1271003](1270965 '.' borrowOfThis[1270955] c"rank"))
      (1270989 'move' ret[1270984](1270988 'deref' call_tmp[1271003]))
      gotoReturn _end_rank[1270982] _end_rank[1270982]
      (1270979 'end of statement' borrowOfThis[1270955])
    }
    {
      (1270994 'move' ret[1270984](1270993 'deref' ?[227]))
      gotoReturn _end_rank[1270982] _end_rank[1270982]
    }
    label _end_rank[1270982]
    (1270986 return ret[1270984])
  }
  function BaseSparseDom[1270892](?).idxType[1271008](arg _mt[1271010]:_MT[201], arg this[1271012]:BaseSparseDom[1270892](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271047] "RVV" "temp" "type variable"
    unknown borrowOfThis[1271014]
    (1271039 'end of statement')
    (1271020 'move' borrowOfThis[1271014](1271016 call : this[1271012] _borrowedNonNilable[177](?)))
    (1271040 'end of statement' borrowOfThis[1271014])
    unknown call_tmp[1271061] "expr temp" "maybe param" "maybe type" "temp"
    (1271064 'move' call_tmp[1271061](1271029 'is bound' borrowOfThis[1271014] c"idxType"))
    if call_tmp[1271061]
    {
      unknown call_tmp[1271066] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271069 'move' call_tmp[1271066](1271024 '.v' borrowOfThis[1271014] c"idxType"))
      unknown call_tmp[1271071] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271074 'move' call_tmp[1271071](1271025 call chpl_checkLegalTypeFieldAccessor this[1271012] call_tmp[1271066] "idxType"))
      (1271052 'move' ret[1271047](1271051 'deref' call_tmp[1271071]))
      gotoReturn _end_idxType[1271045] _end_idxType[1271045]
      (1271042 'end of statement' borrowOfThis[1271014])
    }
    {
      (1271057 'move' ret[1271047](1271056 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1271045] _end_idxType[1271045]
    }
    label _end_idxType[1271045]
    (1271049 return ret[1271047])
  }
  function BaseSparseDom[1270892](?).idxType[1271076](arg _mt[1271078]:_MT[201], arg this[1271080]:BaseSparseDom[1270892](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271115] "RVV" "temp" "type variable"
    unknown borrowOfThis[1271082] "type variable"
    (1271107 'end of statement')
    (1271088 'move' borrowOfThis[1271082](1271084 call : this[1271080] _borrowedNonNilable[177](?)))
    (1271108 'end of statement' borrowOfThis[1271082])
    unknown call_tmp[1271129] "expr temp" "maybe param" "maybe type" "temp"
    (1271132 'move' call_tmp[1271129](1271097 'is bound' borrowOfThis[1271082] c"idxType"))
    if call_tmp[1271129]
    {
      unknown call_tmp[1271134] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271137 'move' call_tmp[1271134](1271092 '.v' borrowOfThis[1271082] c"idxType"))
      unknown call_tmp[1271139] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271142 'move' call_tmp[1271139](1271093 call chpl_checkLegalTypeFieldAccessor this[1271080] call_tmp[1271134] "idxType"))
      (1271120 'move' ret[1271115](1271119 'deref' call_tmp[1271139]))
      gotoReturn _end_idxType[1271113] _end_idxType[1271113]
      (1271110 'end of statement' borrowOfThis[1271082])
    }
    {
      (1271125 'move' ret[1271115](1271124 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1271113] _end_idxType[1271113]
    }
    label _end_idxType[1271113]
    (1271117 return ret[1271115])
  }
  function BaseSparseDom[271529](?).parentDom[1271144](arg _mt[1271146]:_MT[201], arg this[1271148]:BaseSparseDom[271529](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271158] "RVV" "temp"
    unknown call_tmp[1271165] "expr temp" "maybe param" "maybe type" "temp"
    (1271168 'move' call_tmp[1271165](1271152 '.' this[1271148] c"parentDom"))
    (1271163 'move' ret[1271158](1271162 'addr of' call_tmp[1271165]))
    (1271160 return ret[1271158])
  }
  function BaseSparseDom[271529](?).serialize[1271170](arg _mt[1271174]:_MT[201], arg this[1271172]:BaseSparseDom[271529](?), arg writer[1271173]:_any[141](?), ref arg serializer[1271178]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1271181 call serializeDefaultImpl writer[1271173] serializer[1271178] this[1271172])
    (1271187 return _void[46])
  }
  function BaseSparseDom[271529](?).deserialize[1271189](arg _mt[1271193]:_MT[201], arg this[1271191]:BaseSparseDom[271529](?), arg reader[1271192]:_any[141](?), ref arg deserializer[1271198]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1271200] "temp"
    (1271202 'move' _deser_temp[1271200] this[1271191])
    (1271205 call deserializeDefaultImpl reader[1271192] deserializer[1271198] _deser_temp[1271200])
    (1271211 return _void[46])
  }
  type BaseSparseDom[271529](?) val super[397661]:BaseDom[269761] "super class" unknown rank[271070] "param" int(64)[10] unknown idxType[271075] "type variable" unknown parentDom[271078]
  type BaseSparseDom[1270892](?)
  type BaseSparseDom[443022](?)
  function BaseAssociativeDom[271595].isAssociative[271533](arg _mt[271537]:_MT[201], arg this[271535]:BaseAssociativeDom[271595]) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[626967] "RVV" "param" "temp"
    (626972 'move' ret[626967](626971 'deref' 1))
    (626969 return ret[626967])
  }
  function BaseAssociativeDom[271595].deinit[271544](arg _mt[271548]:_MT[201], arg this[271546]:BaseAssociativeDom[271595]) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (626974 return _void[46])
  }
  function BaseAssociativeDom[271595].dsiClear[271553](arg _mt[271557]:_MT[201], arg this[271555]:BaseAssociativeDom[271595]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271561 call halt "clear not implemented for this domain")
    (626976 return _void[46])
  }
  function BaseAssociativeDom[271595].dsiAdd[271567](arg _mt[271573]:_MT[201], arg this[271569]:BaseAssociativeDom[271595], in arg idx[271571]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271577 call compilerError "Index addition is not supported by this domain")
    (626978 return _void[46])
  }
  function BaseAssociativeDom[467900](?).rank[271583](arg _mt[271587]:_MT[201], arg this[271585]:BaseAssociativeDom[467900](?)) param : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[626982] "RVV" "param" "temp"
    (626987 'move' ret[626982](626986 'deref' 1))
    (626984 return ret[626982])
  }
  function BaseAssociativeDom[271595].super[1271213](arg _mt[1271215]:_MT[201], arg this[1271217]:BaseAssociativeDom[271595]) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271227] "RVV" "temp"
    unknown call_tmp[1271234] "expr temp" "maybe param" "maybe type" "temp"
    (1271237 'move' call_tmp[1271234](1271221 '.v' this[1271217] c"super"))
    (1271232 'move' ret[1271227](1271231 'deref' call_tmp[1271234]))
    (1271229 return ret[1271227])
  }
  function BaseAssociativeDom[271595].init[1271239](arg _mt[1271241]:_MT[201], arg this[1271242]:BaseAssociativeDom[271595]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1271255] "temporary of super field" "temp"
    (1271257 'move' super_tmp[1271255](1271254 '.v' this[1271242] c"super"))
    (1271252 call(1271250 call (partial) init _mt[203] super_tmp[1271255]))
    (1271278 'end of statement')
    unknown tmp[1271260] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1271281] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1271293] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271296 'move' call_tmp[1271293](1271262 '.v' this[1271242] c"super"))
      (1271285 'move' call_type_tmp[1271281](1271265 'typeof' call_tmp[1271293]))
    }
    (1271266 'move' tmp[1271260] call_type_tmp[1271281])
    unknown call_tmp[1271298] "maybe param" "maybe type" "temp"
    (1271301 'move' call_tmp[1271298](1271271 'cast' tmp[1271260] this[1271242]))
    unknown chpl__thisAsParent[1271268] "dead at end of block" "insert auto destroy" "temp"
    (1271289 'init var' chpl__thisAsParent[1271268] call_tmp[1271298] tmp[1271260])
    (1271274 'setcid' chpl__thisAsParent[1271268])
    (1271279 'end of statement')
    (1271276 'setcid' this[1271242])
    (1271287 return _void[46])
  }
  function BaseAssociativeDom[271595].serialize[1271303](arg _mt[1271307]:_MT[201], arg this[1271305]:BaseAssociativeDom[271595], arg writer[1271306]:_any[141](?), ref arg serializer[1271311]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (1271314 call serializeDefaultImpl writer[1271306] serializer[1271311] this[1271305])
    (1271320 return _void[46])
  }
  function BaseAssociativeDom[271595].deserialize[1271322](arg _mt[1271326]:_MT[201], arg this[1271324]:BaseAssociativeDom[271595], arg reader[1271325]:_any[141](?), ref arg deserializer[1271331]:_any[141](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    unknown _deser_temp[1271333] "temp"
    (1271335 'move' _deser_temp[1271333] this[1271324])
    (1271338 call deserializeDefaultImpl reader[1271325] deserializer[1271331] _deser_temp[1271333])
    (1271344 return _void[46])
  }
  type BaseAssociativeDom[271595] val super[397665]:BaseDom[269761] "super class"
  type BaseAssociativeDom[467900](?)
  type BaseAssociativeDom[443017](?)
  function BaseArr[272224].chpl__rvfMe[271632](arg _mt[271636]:_MT[201], arg this[271634]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[626991] "RVV" "param" "temp"
    (626996 'move' ret[626991](626995 'deref' 0))
    (626993 return ret[626991])
  }
  function BaseArr[272224].isSliceArrayView[271643](arg _mt[271647]:_MT[201], arg this[271645]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627000] "RVV" "param" "temp"
    (627005 'move' ret[627000](627004 'deref' 0))
    (627002 return ret[627000])
  }
  function BaseArr[272224].isRankChangeArrayView[271654](arg _mt[271658]:_MT[201], arg this[271656]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627009] "RVV" "param" "temp"
    (627014 'move' ret[627009](627013 'deref' 0))
    (627011 return ret[627009])
  }
  function BaseArr[272224].isReindexArrayView[271665](arg _mt[271669]:_MT[201], arg this[271667]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627018] "RVV" "param" "temp"
    (627023 'move' ret[627018](627022 'deref' 0))
    (627020 return ret[627018])
  }
  function BaseArr[272224].deinit[271676](arg _mt[271680]:_MT[201], arg this[271678]:BaseArr[272224]) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (627025 return _void[46])
  }
  function BaseArr[272224].dsiStaticFastFollowCheck[271685](arg _mt[271691]:_MT[201], arg this[271687]:BaseArr[272224], arg leadType[271689]:_any[141](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627029] "RVV" "param" "temp"
    (627034 'move' ret[627029](627033 'deref' 0))
    (627031 return ret[627029])
  }
  function BaseArr[272224].dsiGetBaseDom[271698](arg _mt[271702]:_MT[201], arg this[271700]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown ret[627038] "RVV" "temp"
    (271708 call halt "internal error: dsiGetBaseDom is not implemented")
    (627040 return ret[627038])
  }
  { scopeless type
    unmanaged BaseDom[468061]
  }
  function BaseArr[272224].remove[271715](arg _mt[271723]:_MT[201], arg this[271717]:BaseArr[272224], param arg rmFromList[271720]:bool[19]) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[627044] "RVV" "temp"
    unknown ret_arr[271727] "dead at end of block" "insert auto destroy"
    (652079 'init var' ret_arr[271727] this[271717])
    (271730 'end of statement')
    unknown ret_dom[271732] "dead at end of block" "insert auto destroy"
    (652081 'init var' ret_dom[271732] nil[32] unmanaged BaseDom?[468157])
    (271738 'end of statement')
    unknown rm_dom[271740] "dead at end of block" "insert auto destroy"
    (652083 'init var' rm_dom[271740] 0)
    (271743 'end of statement')
    unknown call_tmp[909030] "maybe param" "maybe type" "temp"
    (909033 'move' call_tmp[909030](271747 call(452614 call (partial) dsiGetBaseDom _mt[203] this[271717])))
    unknown dom[271745] "dead at end of block" "insert auto destroy"
    (652085 'init var' dom[271745] call_tmp[909030])
    (271749 'end of statement')
    unknown call_tmp[909037] "expr temp" "maybe param" "maybe type" "temp"
    (909040 'move' call_tmp[909037](271761 call _to_unmanaged this[271717]))
    unknown call_tmp[909042] "expr temp" "maybe param" "maybe type" "temp"
    (909045 'move' call_tmp[909042](271759 call(271756 call (partial) remove_arr _mt[203] dom[271745]) call_tmp[909037] rmFromList[271720]))
    (271750 call = rm_dom[271740] call_tmp[909042])
    (565299 'end of statement' rm_dom[271740] dom[271745])
    unknown call_tmp[909047] "expr temp" "maybe param" "maybe type" "temp"
    (909050 'move' call_tmp[909047](271770 call _cond_test rm_dom[271740]))
    if call_tmp[909047]
    {
      (271764 call = ret_dom[271732] dom[271745])
      (565302 'end of statement' ret_dom[271732] dom[271745])
    }
    unknown call_tmp[909052] "expr temp" "maybe param" "maybe type" "temp"
    (909055 'move' call_tmp[909052](271779 call _build_tuple ret_arr[271727] ret_dom[271732]))
    (627049 'move' ret[627044](627048 'deref' call_tmp[909052]))
    gotoReturn _end_remove[627042] _end_remove[627042]
    (565305 'end of statement' ret_arr[271727] ret_dom[271732])
    label _end_remove[627042]
    (627046 return ret[627044])
  }
  function BaseArr[272224].chpl_setResizePolicy[271783](arg _mt[271791]:_MT[201], arg this[271785]:BaseArr[272224], arg policy[271788]:chpl_ddataResizePolicy[67548]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[909059] "expr temp" "maybe param" "maybe type" "temp"
    (909062 'move' call_tmp[909059](452630 call _resizePolicy _mt[203] this[271785]))
    (271794 call = call_tmp[909059] policy[271788])
    (627053 return _void[46])
  }
  function BaseArr[272224].chpl_isElementTypeDefaultInitializable[271800](arg _mt[271804]:_MT[201], arg this[271802]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown ret[627057] "RVV" "temp"
    (271809 call halt "chpl_isElementTypeDefaultInitializable must be defined")
    (627059 return ret[627057])
  }
  { scopeless type
    bool[19]
  }
  function BaseArr[272224].chpl_isElementTypeNonNilableClass[271816](arg _mt[271820]:_MT[201], arg this[271818]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown ret[627063] "RVV" "temp"
    (271825 call halt "chpl_isElementTypeNonNilableClass must be defined")
    (627065 return ret[627063])
  }
  { scopeless type
    bool[19]
  }
  function BaseArr[272224].chpl_unsafeAssignIsClassElementNil[271832](arg _mt[271840]:_MT[201], arg this[271834]:BaseArr[272224], arg manager[271836]:_any[141](?), arg idx[271838]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown ret[627069] "RVV" "temp"
    (271845 call halt "chpl_unsafeAssignIsClassElementNil must be defined")
    (627071 return ret[627069])
  }
  { scopeless type
    bool[19]
  }
  function BaseArr[272224].chpl_unsafeAssignHaltUninitializedElement[271852](arg _mt[271858]:_MT[201], arg this[271854]:BaseArr[272224], arg idx[271856]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271862 call halt "chpl_haltUnsafeAssignmentUninitializedElement must be defined")
    (627073 return _void[46])
  }
  function BaseArr[272224].dsiElementInitializationComplete[271868](arg _mt[271872]:_MT[201], arg this[271870]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271876 call halt "dsiElementInitializationComplete must be defined")
    (627075 return _void[46])
  }
  function BaseArr[272224].dsiElementDeinitializationComplete[271882](arg _mt[271886]:_MT[201], arg this[271884]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271890 call halt "dsiElementDeinitializationComplete must be defined")
    (627077 return _void[46])
  }
  function BaseArr[272224].dsiDestroyArr[271896](arg _mt[271904]:_MT[201], arg this[271898]:BaseArr[272224], arg deinitElts[271901]:bool[19]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271908 call halt "dsiDestroyArr must be defined")
    (627079 return _void[46])
  }
  function BaseArr[272224].dsiReallocate[271914](arg _mt[271922]:_MT[201], arg this[271916]:BaseArr[272224], arg d[271919]:_domain[225034](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271926 call halt "reallocating not supported for this array type")
    (627081 return _void[46])
  }
  function BaseArr[272224].dsiPostReallocate[271932](arg _mt[271936]:_MT[201], arg this[271934]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (627083 return _void[46])
  }
  function BaseArr[272224]._purge[271941](arg _mt[271949]:_MT[201], arg this[271943]:BaseArr[272224], arg ind[271946]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271953 call halt "purging not supported for this array type")
    (627085 return _void[46])
  }
  function BaseArr[272224]._resize[271959](arg _mt[271969]:_MT[201], arg this[271961]:BaseArr[272224], arg length[271964]:int(64)[10], arg old_map[271967]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271973 call halt "resizing not supported for this array type")
    (627087 return _void[46])
  }
  function BaseArr[272224].sparseShiftArray[271979](arg _mt[271987]:_MT[201], arg this[271981]:BaseArr[272224], arg shiftrange[271983]:_any[141](?), arg initrange[271985]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (271991 call halt "sparseGrowDomain not supported for non-sparse arrays")
    (627089 return _void[46])
  }
  function BaseArr[272224].sparseShiftArrayBack[271997](arg _mt[272003]:_MT[201], arg this[271999]:BaseArr[272224], arg shiftrange[272001]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272007 call halt "sparseShiftArrayBack not supported for non-sparse arrays")
    (627091 return _void[46])
  }
  function BaseArr[272224].sparseBulkShiftArray[272013](arg _mt[272021]:_MT[201], arg this[272015]:BaseArr[272224], arg shiftMap[272017]:_any[141](?), arg oldnnz[272019]:_any[141](?)) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272025 call halt "sparseBulkShiftArray not supported for non-sparse arrays")
    (627093 return _void[46])
  }
  function BaseArr[272224]._defaultInitSlot[272031](arg _mt[272039]:_MT[201], arg this[272033]:BaseArr[272224], arg slot[272036]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272043 call halt "_defaultInitSlot() not supported for non-associative arrays")
    (627095 return _void[46])
  }
  function BaseArr[272224]._deinitSlot[272049](arg _mt[272057]:_MT[201], arg this[272051]:BaseArr[272224], arg slot[272054]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272061 call halt "_deinitSlot() not supported for non-associative arrays")
    (627097 return _void[46])
  }
  function BaseArr[272224]._startRehash[272067](arg _mt[272075]:_MT[201], arg this[272069]:BaseArr[272224], arg newSize[272072]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272079 call halt "_startRehash() not supported for non-associative arrays")
    (627099 return _void[46])
  }
  function BaseArr[272224]._finishRehash[272085](arg _mt[272093]:_MT[201], arg this[272087]:BaseArr[272224], arg oldSize[272090]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272097 call halt "_finishRehash() not supported for non-associative arrays")
    (627101 return _void[46])
  }
  function BaseArr[272224]._moveElementDuringRehash[272103](arg _mt[272115]:_MT[201], arg this[272105]:BaseArr[272224], arg oldslot[272108]:int(64)[10], arg newslot[272112]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272119 call halt "_moveElementDuringRehash() not supported for non-associative arrays")
    (627103 return _void[46])
  }
  function BaseArr[272224].dsiDisplayRepresentation[272125](arg _mt[272129]:_MT[201], arg this[272127]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272133 call writeln "<no way to display representation>")
    (627105 return _void[46])
  }
  function BaseArr[272224].dsiSupportsAlignedFollower[272137](arg _mt[272141]:_MT[201], arg this[272139]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627109] "RVV" "param" "temp"
    (627114 'move' ret[627109](627113 'deref' 0))
    (627111 return ret[627109])
  }
  function BaseArr[272224].dsiSupportsPrivatization[272148](arg _mt[272152]:_MT[201], arg this[272150]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627118] "RVV" "param" "temp"
    (627123 'move' ret[627118](627122 'deref' 0))
    (627120 return ret[627118])
  }
  function BaseArr[272224].dsiRequiresPrivatization[272159](arg _mt[272163]:_MT[201], arg this[272161]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627127] "RVV" "param" "temp"
    (627132 'move' ret[627127](627131 'deref' 0))
    (627129 return ret[627127])
  }
  function BaseArr[467903](?).isDefaultRectangular[272170](arg _mt[272174]:_MT[201], arg this[272172]:BaseArr[467903](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627136] "RVV" "param" "temp"
    (627141 'move' ret[627136](627140 'deref' 0))
    (627138 return ret[627136])
  }
  function BaseArr[272224].isDefaultRectangular[272181](arg _mt[272185]:_MT[201], arg this[272183]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627145] "RVV" "param" "temp"
    (627150 'move' ret[627145](627149 'deref' 0))
    (627147 return ret[627145])
  }
  function BaseArr[272224].doiCanBulkTransferRankChange[272192](arg _mt[272196]:_MT[201], arg this[272194]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627154] "RVV" "param" "temp"
    (627159 'move' ret[627154](627158 'deref' 0))
    (627156 return ret[627154])
  }
  function BaseArr[272224].decEltCountsIfNeeded[272203](arg _mt[272207]:_MT[201], arg this[272205]:BaseArr[272224]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (627161 return _void[46])
  }
  function BaseArr[272224].dsiIteratorYieldsLocalElements[272212](arg _mt[272216]:_MT[201], arg this[272214]:BaseArr[272224]) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627165] "RVV" "param" "temp"
    (627170 'move' ret[627165](627169 'deref' 0))
    (627167 return ret[627165])
  }
  function BaseArr[272224].super[1271346](arg _mt[1271348]:_MT[201], arg this[1271350]:BaseArr[272224]) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271360] "RVV" "temp"
    unknown call_tmp[1271367] "expr temp" "maybe param" "maybe type" "temp"
    (1271370 'move' call_tmp[1271367](1271354 '.v' this[1271350] c"super"))
    (1271365 'move' ret[1271360](1271364 'deref' call_tmp[1271367]))
    (1271362 return ret[1271360])
  }
  function BaseArr[272224].prev[1271372](arg _mt[1271374]:_MT[201], arg this[1271376]:BaseArr[272224]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271386] "RVV" "temp"
    unknown call_tmp[1271393] "expr temp" "maybe param" "maybe type" "temp"
    (1271396 'move' call_tmp[1271393](1271380 '.' this[1271376] c"prev"))
    (1271391 'move' ret[1271386](1271390 'addr of' call_tmp[1271393]))
    (1271388 return ret[1271386])
  }
  function BaseArr[272224].next[1271398](arg _mt[1271400]:_MT[201], arg this[1271402]:BaseArr[272224]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271412] "RVV" "temp"
    unknown call_tmp[1271419] "expr temp" "maybe param" "maybe type" "temp"
    (1271422 'move' call_tmp[1271419](1271406 '.' this[1271402] c"next"))
    (1271417 'move' ret[1271412](1271416 'addr of' call_tmp[1271419]))
    (1271414 return ret[1271412])
  }
  function BaseArr[272224].pid[1271424](arg _mt[1271426]:_MT[201], arg this[1271428]:BaseArr[272224]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271438] "RVV" "temp"
    unknown call_tmp[1271445] "expr temp" "maybe param" "maybe type" "temp"
    (1271448 'move' call_tmp[1271445](1271432 '.' this[1271428] c"pid"))
    (1271443 'move' ret[1271438](1271442 'addr of' call_tmp[1271445]))
    (1271440 return ret[1271438])
  }
  function BaseArr[272224]._decEltRefCounts[1271450](arg _mt[1271452]:_MT[201], arg this[1271454]:BaseArr[272224]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271464] "RVV" "temp"
    unknown call_tmp[1271471] "expr temp" "maybe param" "maybe type" "temp"
    (1271474 'move' call_tmp[1271471](1271458 '.' this[1271454] c"_decEltRefCounts"))
    (1271469 'move' ret[1271464](1271468 'addr of' call_tmp[1271471]))
    (1271466 return ret[1271464])
  }
  function BaseArr[272224]._resizePolicy[1271476](arg _mt[1271478]:_MT[201], arg this[1271480]:BaseArr[272224]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271490] "RVV" "temp"
    unknown call_tmp[1271497] "expr temp" "maybe param" "maybe type" "temp"
    (1271500 'move' call_tmp[1271497](1271484 '.' this[1271480] c"_resizePolicy"))
    (1271495 'move' ret[1271490](1271494 'addr of' call_tmp[1271497]))
    (1271492 return ret[1271490])
  }
  function BaseArr[272224].init[1271502](arg _mt[1271504]:_MT[201], arg this[1271505]:BaseArr[272224], in arg prev[1271516]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg next[1271527]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg pid[1271538]:int(64)[10] :
  int(64)[10] =
  nullPid[247489], in arg _decEltRefCounts[1271551]:bool[19] :
  bool[19] =
  0, in arg _resizePolicy[1271564] :
  normalInit[67542] =
  normalInit[67542]) : void[4] "compiler generated" "default initializer" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1271579] "temporary of super field" "temp"
    (1271581 'move' super_tmp[1271579](1271578 '.v' this[1271505] c"super"))
    (1271515 call(1271513 call (partial) init _mt[203] super_tmp[1271579]))
    (1271617 'end of statement')
    unknown tmp[1271584] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1271622] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1271634] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271637 'move' call_tmp[1271634](1271586 '.v' this[1271505] c"super"))
      (1271626 'move' call_type_tmp[1271622](1271589 'typeof' call_tmp[1271634]))
    }
    (1271590 'move' tmp[1271584] call_type_tmp[1271622])
    unknown call_tmp[1271639] "maybe param" "maybe type" "temp"
    (1271642 'move' call_tmp[1271639](1271595 'cast' tmp[1271584] this[1271505]))
    unknown chpl__thisAsParent[1271592] "dead at end of block" "insert auto destroy" "temp"
    (1271630 'init var' chpl__thisAsParent[1271592] call_tmp[1271639] tmp[1271584])
    (1271598 'setcid' chpl__thisAsParent[1271592])
    (1271600 'init field' this[1271505] c"prev" prev[1271516])
    (1271618 'end of statement')
    (1271603 'init field' this[1271505] c"next" next[1271527])
    (1271606 'init field' this[1271505] c"pid" pid[1271538])
    (1271619 'end of statement')
    (1271609 'init field' this[1271505] c"_decEltRefCounts" _decEltRefCounts[1271551])
    (1271612 '.=' this[1271505] c"_resizePolicy" _resizePolicy[1271564])
    (1271620 'end of statement')
    (1271615 'setcid' this[1271505])
    (1271628 return _void[46])
  }
  type BaseArr[272224] val super[397521]:RootClass[236] "super class" val prev[271599]:unmanaged BaseArr?[468169] unmanaged BaseArr?[468169] val next[271606]:unmanaged BaseArr?[468169] unmanaged BaseArr?[468169] val pid[271613]:int(64)[10] nullPid[247489] int(64)[10] val _decEltRefCounts[271619]:bool[19] 0 bool[19] unknown _resizePolicy[271625] normalInit[67542]
  type unmanaged BaseArr?[468169]
  type BaseArr?[468166](?)
  type unmanaged BaseArr[468148]
  type BaseArr[467903](?)
  type BaseArr[424790](?)
  function AbsBaseArr[272253](?).decEltCountsIfNeeded[272231](arg _mt[272235]:_MT[201], arg this[272233]:AbsBaseArr[272253](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[909066] "expr temp" "maybe param" "maybe type" "temp"
    (909069 'move' call_tmp[909066](452647 call _decEltRefCounts _mt[203] this[272233]))
    unknown call_tmp[909071] "expr temp" "maybe param" "maybe type" "temp"
    (909074 'move' call_tmp[909071](272246 call _cond_test call_tmp[909066]))
    if call_tmp[909071]
    {
      unknown call_tmp[909076] "expr temp" "maybe param" "maybe type" "temp"
      (909079 'move' call_tmp[909076](272242 call _to_unmanaged this[272233]))
      unknown call_tmp[909083] "expr temp" "maybe param" "maybe type" "temp"
      (909086 'move' call_tmp[909083](452642 call eltType _mt[203] this[272233]))
      (272240 call chpl_decRefCountsForDomainsInArrayEltTypes call_tmp[909076] call_tmp[909083])
    }
    (627172 return _void[46])
  }
  function AbsBaseArr[272253](?).super[1271644](arg _mt[1271646]:_MT[201], arg this[1271648]:AbsBaseArr[272253](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271658] "RVV" "temp"
    unknown call_tmp[1271665] "expr temp" "maybe param" "maybe type" "temp"
    (1271668 'move' call_tmp[1271665](1271652 '.v' this[1271648] c"super"))
    (1271663 'move' ret[1271658](1271662 'deref' call_tmp[1271665]))
    (1271660 return ret[1271658])
  }
  function AbsBaseArr[1271675](?).eltType[1271670](arg _mt[1271672]:_MT[201], arg this[1271677]:AbsBaseArr[1271675](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271712] "RVV" "temp" "type variable"
    unknown borrowOfThis[1271679]
    (1271704 'end of statement')
    (1271685 'move' borrowOfThis[1271679](1271681 call : this[1271677] _borrowedNonNilable[177](?)))
    (1271705 'end of statement' borrowOfThis[1271679])
    unknown call_tmp[1271726] "expr temp" "maybe param" "maybe type" "temp"
    (1271729 'move' call_tmp[1271726](1271694 'is bound' borrowOfThis[1271679] c"eltType"))
    if call_tmp[1271726]
    {
      unknown call_tmp[1271731] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271734 'move' call_tmp[1271731](1271689 '.v' borrowOfThis[1271679] c"eltType"))
      unknown call_tmp[1271736] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271739 'move' call_tmp[1271736](1271690 call chpl_checkLegalTypeFieldAccessor this[1271677] call_tmp[1271731] "eltType"))
      (1271717 'move' ret[1271712](1271716 'deref' call_tmp[1271736]))
      gotoReturn _end_eltType[1271710] _end_eltType[1271710]
      (1271707 'end of statement' borrowOfThis[1271679])
    }
    {
      (1271722 'move' ret[1271712](1271721 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1271710] _end_eltType[1271710]
    }
    label _end_eltType[1271710]
    (1271714 return ret[1271712])
  }
  function AbsBaseArr[1271675](?).eltType[1271741](arg _mt[1271743]:_MT[201], arg this[1271745]:AbsBaseArr[1271675](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271780] "RVV" "temp" "type variable"
    unknown borrowOfThis[1271747] "type variable"
    (1271772 'end of statement')
    (1271753 'move' borrowOfThis[1271747](1271749 call : this[1271745] _borrowedNonNilable[177](?)))
    (1271773 'end of statement' borrowOfThis[1271747])
    unknown call_tmp[1271794] "expr temp" "maybe param" "maybe type" "temp"
    (1271797 'move' call_tmp[1271794](1271762 'is bound' borrowOfThis[1271747] c"eltType"))
    if call_tmp[1271794]
    {
      unknown call_tmp[1271799] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271802 'move' call_tmp[1271799](1271757 '.v' borrowOfThis[1271747] c"eltType"))
      unknown call_tmp[1271804] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271807 'move' call_tmp[1271804](1271758 call chpl_checkLegalTypeFieldAccessor this[1271745] call_tmp[1271799] "eltType"))
      (1271785 'move' ret[1271780](1271784 'deref' call_tmp[1271804]))
      gotoReturn _end_eltType[1271778] _end_eltType[1271778]
      (1271775 'end of statement' borrowOfThis[1271747])
    }
    {
      (1271790 'move' ret[1271780](1271789 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1271778] _end_eltType[1271778]
    }
    label _end_eltType[1271778]
    (1271782 return ret[1271780])
  }
  function AbsBaseArr[272253](?).init[1271809](arg _mt[1271811]:_MT[201], arg this[1271812]:AbsBaseArr[272253](?), in arg prev[1271825]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg next[1271830]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg pid[1271837]:int(64)[10] :
  int(64)[10] =
  nullPid[247489], in arg _decEltRefCounts[1271844]:bool[19] :
  bool[19] =
  0, in arg _resizePolicy[1271851] :
  normalInit[67542] =
  normalInit[67542], arg eltType[1271854]:_any[141](?)) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1271865] "temporary of super field" "temp"
    (1271867 'move' super_tmp[1271865](1271864 '.v' this[1271812] c"super"))
    (1271822 call(1271820 call (partial) init _mt[203] super_tmp[1271865]) prev[1271825] next[1271830] pid[1271837] _decEltRefCounts[1271844] _resizePolicy[1271851])
    (1271891 'end of statement')
    unknown tmp[1271870] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1271894] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1271906] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1271909 'move' call_tmp[1271906](1271872 '.v' this[1271812] c"super"))
      (1271898 'move' call_type_tmp[1271894](1271875 'typeof' call_tmp[1271906]))
    }
    (1271876 'move' tmp[1271870] call_type_tmp[1271894])
    unknown call_tmp[1271911] "maybe param" "maybe type" "temp"
    (1271914 'move' call_tmp[1271911](1271881 'cast' tmp[1271870] this[1271812]))
    unknown chpl__thisAsParent[1271878] "dead at end of block" "insert auto destroy" "temp"
    (1271902 'init var' chpl__thisAsParent[1271878] call_tmp[1271911] tmp[1271870])
    (1271884 'setcid' chpl__thisAsParent[1271878])
    (1271886 'init field' this[1271812] c"eltType" eltType[1271854])
    (1271892 'end of statement')
    (1271889 'setcid' this[1271812])
    (1271900 return _void[46])
  }
  function AbsBaseArr[272253](?).deinit[1271916](arg _mt[1271918]:_MT[201], arg this[1271920]:AbsBaseArr[272253](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1271928 return _void[46])
  }
  type AbsBaseArr[272253](?) val super[397523]:BaseArr[272224] "super class" unknown eltType[272229] "type variable"
  type AbsBaseArr[1271675](?)
  function BaseArrOverRectangularDom[272345](?).hasUnitStride[272270](arg _mt[272274]:_MT[201], arg this[272272]:BaseArrOverRectangularDom[272345](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627176] "RVV" "param" "temp"
    unknown call_tmp[909090] "expr temp" "maybe param" "maybe type" "temp"
    (909093 'move' call_tmp[909090](408744 call strides _mt[203] this[272272]))
    unknown call_tmp[909097] "expr temp" "maybe param" "maybe type" "temp"
    (909100 'move' call_tmp[909097](272282 call(272279 call (partial) isOne _mt[203] call_tmp[909090])))
    (627181 'move' ret[627176](627180 'deref' call_tmp[909097]))
    (627178 return ret[627176])
  }
  function BaseArrOverRectangularDom[272345](?).hasPosNegUnitStride[272285](arg _mt[272289]:_MT[201], arg this[272287]:BaseArrOverRectangularDom[272345](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[627185] "RVV" "param" "temp"
    unknown call_tmp[909104] "expr temp" "maybe param" "maybe type" "temp"
    (909107 'move' call_tmp[909104](408749 call strides _mt[203] this[272287]))
    unknown call_tmp[909111] "expr temp" "maybe param" "maybe type" "temp"
    (909114 'move' call_tmp[909111](272297 call(272294 call (partial) isPosNegOne _mt[203] call_tmp[909104])))
    (627190 'move' ret[627185](627189 'deref' call_tmp[909111]))
    (627187 return ret[627185])
  }
  function BaseArrOverRectangularDom[272345](?).dsiReallocate[272300](arg _mt[272318]:_MT[201], arg this[272302]:BaseArrOverRectangularDom[272345](?), arg bounds[272315] :
  unknown call_tmp[909118] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (272322 call halt "reallocating not supported for this array type")
    (627192 return _void[46])
  }
  function BaseArrOverRectangularDom[272345](?).dsiPostReallocate[272326](arg _mt[272330]:_MT[201], arg this[272328]:BaseArrOverRectangularDom[272345](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    (627194 return _void[46])
  }
  function BaseArrOverRectangularDom[272345](?).deinit[272335](arg _mt[272339]:_MT[201], arg this[272337]:BaseArrOverRectangularDom[272345](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (627196 return _void[46])
  }
  function BaseArrOverRectangularDom[272345](?).super[1271930](arg _mt[1271932]:_MT[201], arg this[1271934]:BaseArrOverRectangularDom[272345](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271944] "RVV" "temp"
    unknown call_tmp[1271951] "expr temp" "maybe param" "maybe type" "temp"
    (1271954 'move' call_tmp[1271951](1271938 '.v' this[1271934] c"super"))
    (1271949 'move' ret[1271944](1271948 'deref' call_tmp[1271951]))
    (1271946 return ret[1271944])
  }
  function BaseArrOverRectangularDom[1271961](?).rank[1271956](arg _mt[1271958]:_MT[201], arg this[1271963]:BaseArrOverRectangularDom[1271961](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1271994] "RVV" "param" "temp"
    unknown borrowOfThis[1271965]
    (1271986 'end of statement')
    (1271971 'move' borrowOfThis[1271965](1271967 call : this[1271963] _borrowedNonNilable[177](?)))
    (1271987 'end of statement' borrowOfThis[1271965])
    unknown call_tmp[1272008] "expr temp" "maybe param" "maybe type" "temp"
    (1272011 'move' call_tmp[1272008](1271976 'is bound' borrowOfThis[1271965] c"rank"))
    if call_tmp[1272008]
    {
      unknown call_tmp[1272013] "expr temp" "maybe param" "maybe type" "temp"
      (1272016 'move' call_tmp[1272013](1271975 '.' borrowOfThis[1271965] c"rank"))
      (1271999 'move' ret[1271994](1271998 'deref' call_tmp[1272013]))
      gotoReturn _end_rank[1271992] _end_rank[1271992]
      (1271989 'end of statement' borrowOfThis[1271965])
    }
    {
      (1272004 'move' ret[1271994](1272003 'deref' ?[227]))
      gotoReturn _end_rank[1271992] _end_rank[1271992]
    }
    label _end_rank[1271992]
    (1271996 return ret[1271994])
  }
  function BaseArrOverRectangularDom[1271961](?).rank[1272018](arg _mt[1272020]:_MT[201], arg this[1272022]:BaseArrOverRectangularDom[1271961](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272053] "RVV" "param" "temp"
    unknown borrowOfThis[1272024] "type variable"
    (1272045 'end of statement')
    (1272030 'move' borrowOfThis[1272024](1272026 call : this[1272022] _borrowedNonNilable[177](?)))
    (1272046 'end of statement' borrowOfThis[1272024])
    unknown call_tmp[1272067] "expr temp" "maybe param" "maybe type" "temp"
    (1272070 'move' call_tmp[1272067](1272035 'is bound' borrowOfThis[1272024] c"rank"))
    if call_tmp[1272067]
    {
      unknown call_tmp[1272072] "expr temp" "maybe param" "maybe type" "temp"
      (1272075 'move' call_tmp[1272072](1272034 '.' borrowOfThis[1272024] c"rank"))
      (1272058 'move' ret[1272053](1272057 'deref' call_tmp[1272072]))
      gotoReturn _end_rank[1272051] _end_rank[1272051]
      (1272048 'end of statement' borrowOfThis[1272024])
    }
    {
      (1272063 'move' ret[1272053](1272062 'deref' ?[227]))
      gotoReturn _end_rank[1272051] _end_rank[1272051]
    }
    label _end_rank[1272051]
    (1272055 return ret[1272053])
  }
  function BaseArrOverRectangularDom[1271961](?).idxType[1272077](arg _mt[1272079]:_MT[201], arg this[1272081]:BaseArrOverRectangularDom[1271961](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272116] "RVV" "temp" "type variable"
    unknown borrowOfThis[1272083]
    (1272108 'end of statement')
    (1272089 'move' borrowOfThis[1272083](1272085 call : this[1272081] _borrowedNonNilable[177](?)))
    (1272109 'end of statement' borrowOfThis[1272083])
    unknown call_tmp[1272130] "expr temp" "maybe param" "maybe type" "temp"
    (1272133 'move' call_tmp[1272130](1272098 'is bound' borrowOfThis[1272083] c"idxType"))
    if call_tmp[1272130]
    {
      unknown call_tmp[1272135] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272138 'move' call_tmp[1272135](1272093 '.v' borrowOfThis[1272083] c"idxType"))
      unknown call_tmp[1272140] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272143 'move' call_tmp[1272140](1272094 call chpl_checkLegalTypeFieldAccessor this[1272081] call_tmp[1272135] "idxType"))
      (1272121 'move' ret[1272116](1272120 'deref' call_tmp[1272140]))
      gotoReturn _end_idxType[1272114] _end_idxType[1272114]
      (1272111 'end of statement' borrowOfThis[1272083])
    }
    {
      (1272126 'move' ret[1272116](1272125 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1272114] _end_idxType[1272114]
    }
    label _end_idxType[1272114]
    (1272118 return ret[1272116])
  }
  function BaseArrOverRectangularDom[1271961](?).idxType[1272145](arg _mt[1272147]:_MT[201], arg this[1272149]:BaseArrOverRectangularDom[1271961](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272184] "RVV" "temp" "type variable"
    unknown borrowOfThis[1272151] "type variable"
    (1272176 'end of statement')
    (1272157 'move' borrowOfThis[1272151](1272153 call : this[1272149] _borrowedNonNilable[177](?)))
    (1272177 'end of statement' borrowOfThis[1272151])
    unknown call_tmp[1272198] "expr temp" "maybe param" "maybe type" "temp"
    (1272201 'move' call_tmp[1272198](1272166 'is bound' borrowOfThis[1272151] c"idxType"))
    if call_tmp[1272198]
    {
      unknown call_tmp[1272203] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272206 'move' call_tmp[1272203](1272161 '.v' borrowOfThis[1272151] c"idxType"))
      unknown call_tmp[1272208] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272211 'move' call_tmp[1272208](1272162 call chpl_checkLegalTypeFieldAccessor this[1272149] call_tmp[1272203] "idxType"))
      (1272189 'move' ret[1272184](1272188 'deref' call_tmp[1272208]))
      gotoReturn _end_idxType[1272182] _end_idxType[1272182]
      (1272179 'end of statement' borrowOfThis[1272151])
    }
    {
      (1272194 'move' ret[1272184](1272193 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1272182] _end_idxType[1272182]
    }
    label _end_idxType[1272182]
    (1272186 return ret[1272184])
  }
  function BaseArrOverRectangularDom[1271961](?).strides[1272213](arg _mt[1272215]:_MT[201], arg this[1272217]:BaseArrOverRectangularDom[1271961](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272248] "RVV" "param" "temp"
    unknown borrowOfThis[1272219]
    (1272240 'end of statement')
    (1272225 'move' borrowOfThis[1272219](1272221 call : this[1272217] _borrowedNonNilable[177](?)))
    (1272241 'end of statement' borrowOfThis[1272219])
    unknown call_tmp[1272262] "expr temp" "maybe param" "maybe type" "temp"
    (1272265 'move' call_tmp[1272262](1272230 'is bound' borrowOfThis[1272219] c"strides"))
    if call_tmp[1272262]
    {
      unknown call_tmp[1272267] "expr temp" "maybe param" "maybe type" "temp"
      (1272270 'move' call_tmp[1272267](1272229 '.' borrowOfThis[1272219] c"strides"))
      (1272253 'move' ret[1272248](1272252 'deref' call_tmp[1272267]))
      gotoReturn _end_strides[1272246] _end_strides[1272246]
      (1272243 'end of statement' borrowOfThis[1272219])
    }
    {
      (1272258 'move' ret[1272248](1272257 'deref' ?[227]))
      gotoReturn _end_strides[1272246] _end_strides[1272246]
    }
    label _end_strides[1272246]
    (1272250 return ret[1272248])
  }
  function BaseArrOverRectangularDom[1271961](?).strides[1272272](arg _mt[1272274]:_MT[201], arg this[1272276]:BaseArrOverRectangularDom[1271961](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272307] "RVV" "param" "temp"
    unknown borrowOfThis[1272278] "type variable"
    (1272299 'end of statement')
    (1272284 'move' borrowOfThis[1272278](1272280 call : this[1272276] _borrowedNonNilable[177](?)))
    (1272300 'end of statement' borrowOfThis[1272278])
    unknown call_tmp[1272321] "expr temp" "maybe param" "maybe type" "temp"
    (1272324 'move' call_tmp[1272321](1272289 'is bound' borrowOfThis[1272278] c"strides"))
    if call_tmp[1272321]
    {
      unknown call_tmp[1272326] "expr temp" "maybe param" "maybe type" "temp"
      (1272329 'move' call_tmp[1272326](1272288 '.' borrowOfThis[1272278] c"strides"))
      (1272312 'move' ret[1272307](1272311 'deref' call_tmp[1272326]))
      gotoReturn _end_strides[1272305] _end_strides[1272305]
      (1272302 'end of statement' borrowOfThis[1272278])
    }
    {
      (1272317 'move' ret[1272307](1272316 'deref' ?[227]))
      gotoReturn _end_strides[1272305] _end_strides[1272305]
    }
    label _end_strides[1272305]
    (1272309 return ret[1272307])
  }
  function BaseArrOverRectangularDom[272345](?).init[1272331](arg _mt[1272333]:_MT[201], arg this[1272334]:BaseArrOverRectangularDom[272345](?), in arg prev[1272347]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg next[1272352]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg pid[1272359]:int(64)[10] :
  int(64)[10] =
  nullPid[247489], in arg _decEltRefCounts[1272366]:bool[19] :
  bool[19] =
  0, in arg _resizePolicy[1272373] :
  normalInit[67542] =
  normalInit[67542], param arg rank[1272376]:int(64)[10], arg idxType[1272386]:_any[141](?), param arg strides[1272395]:strideKind[107137]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1272407] "temporary of super field" "temp"
    (1272409 'move' super_tmp[1272407](1272406 '.v' this[1272334] c"super"))
    (1272344 call(1272342 call (partial) init _mt[203] super_tmp[1272407]) prev[1272347] next[1272352] pid[1272359] _decEltRefCounts[1272366] _resizePolicy[1272373])
    (1272445 'end of statement')
    unknown tmp[1272412] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1272449] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1272461] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272464 'move' call_tmp[1272461](1272414 '.v' this[1272334] c"super"))
      (1272453 'move' call_type_tmp[1272449](1272417 'typeof' call_tmp[1272461]))
    }
    (1272418 'move' tmp[1272412] call_type_tmp[1272449])
    unknown call_tmp[1272466] "maybe param" "maybe type" "temp"
    (1272469 'move' call_tmp[1272466](1272423 'cast' tmp[1272412] this[1272334]))
    unknown chpl__thisAsParent[1272420] "dead at end of block" "insert auto destroy" "temp"
    (1272457 'init var' chpl__thisAsParent[1272420] call_tmp[1272466] tmp[1272412])
    (1272426 'setcid' chpl__thisAsParent[1272420])
    unknown call_tmp[1272471] "expr temp" "maybe param" "maybe type" "temp"
    (1272474 'move' call_tmp[1272471](1272429 call : rank[1272376] int(64)[10]))
    (1272431 'init field' this[1272334] c"rank" call_tmp[1272471])
    (1272446 'end of statement')
    (1272434 'init field' this[1272334] c"idxType" idxType[1272386])
    unknown call_tmp[1272476] "expr temp" "maybe param" "maybe type" "temp"
    (1272479 'move' call_tmp[1272476](1272438 call : strides[1272395] strideKind[107137]))
    (1272440 'init field' this[1272334] c"strides" call_tmp[1272476])
    (1272447 'end of statement')
    (1272443 'setcid' this[1272334])
    (1272455 return _void[46])
  }
  type BaseArrOverRectangularDom[272345](?) val super[397667]:BaseArr[272224] "super class" unknown rank[272258] "param" int(64)[10] unknown idxType[272263] "type variable" unknown strides[272266] "param" strideKind[107137]
  type BaseArrOverRectangularDom[1271961](?)
  type BaseArrOverRectangularDom[452285](?)
  function BaseRectangularArr[272450](?).deinit[272352](arg _mt[272356]:_MT[201], arg this[272354]:BaseRectangularArr[272450](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (627198 return _void[46])
  }
  function BaseRectangularArr[272450](?).chpl_isElementTypeDefaultInitializable[272361](arg _mt[272365]:_MT[201], arg this[272363]:BaseRectangularArr[272450](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[627202] "RVV" "temp"
    unknown call_tmp[909144] "expr temp" "maybe param" "maybe type" "temp"
    (909147 'move' call_tmp[909144](452670 call eltType _mt[203] this[272363]))
    unknown call_tmp[909149] "expr temp" "maybe param" "maybe type" "temp"
    (909152 'move' call_tmp[909149](272371 call isDefaultInitializable call_tmp[909144]))
    (627208 'move' ret[627202](627207 'coerce' call_tmp[909149] bool[19]))
    (627204 return ret[627202])
  }
  { scopeless type
    bool[19]
  }
  function BaseRectangularArr[272450](?).chpl_isElementTypeNonNilableClass[272376](arg _mt[272380]:_MT[201], arg this[272378]:BaseRectangularArr[272450](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[627212] "RVV" "temp"
    unknown call_tmp[909156] "expr temp" "maybe param" "maybe type" "temp"
    (909159 'move' call_tmp[909156](452676 call eltType _mt[203] this[272378]))
    unknown call_tmp[909161] "expr temp" "maybe param" "maybe type" "temp"
    (909164 'move' call_tmp[909161](272386 call isNonNilableClass call_tmp[909156]))
    (627218 'move' ret[627212](627217 'coerce' call_tmp[909161] bool[19]))
    (627214 return ret[627212])
  }
  { scopeless type
    bool[19]
  }
  function BaseRectangularArr[272450](?).chpl_unsafeAssignHaltUninitializedElement[272391](arg _mt[272397]:_MT[201], arg this[272393]:BaseRectangularArr[272450](?), arg idx[272395]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[909166] "expr temp" "maybe param" "maybe type" "temp"
    (909169 'move' call_tmp[909166](272406 call + "Upon finishing unsafe assignment, one or more elements " "of a non-default-initializable array of type '"))
    unknown call_tmp[909173] "expr temp" "maybe param" "maybe type" "temp"
    (909176 'move' call_tmp[909173](452681 call eltType _mt[203] this[272393]))
    unknown call_tmp[909178] "expr temp" "maybe param" "maybe type" "temp"
    (909181 'move' call_tmp[909178](272414 call : call_tmp[909173] string[244]))
    unknown call_tmp[909183] "expr temp" "maybe param" "maybe type" "temp"
    (909186 'move' call_tmp[909183](272404 call + call_tmp[909166] call_tmp[909178]))
    unknown call_tmp[909188] "maybe param" "maybe type" "temp"
    (909191 'move' call_tmp[909188](272402 call + call_tmp[909183] "' remain uninitialized"))
    unknown msg[272401] "dead at end of block" "insert auto destroy"
    (652087 'init var' msg[272401] call_tmp[909188])
    (272422 'end of statement')
    (272424 call halt msg[272401])
    (565341 'end of statement' msg[272401])
    (627220 return _void[46])
  }
  function BaseRectangularArr[272450](?).decEltCountsIfNeeded[272428](arg _mt[272432]:_MT[201], arg this[272430]:BaseRectangularArr[272450](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[909195] "expr temp" "maybe param" "maybe type" "temp"
    (909198 'move' call_tmp[909195](452693 call _decEltRefCounts _mt[203] this[272430]))
    unknown call_tmp[909200] "expr temp" "maybe param" "maybe type" "temp"
    (909203 'move' call_tmp[909200](272443 call _cond_test call_tmp[909195]))
    if call_tmp[909200]
    {
      unknown call_tmp[909205] "expr temp" "maybe param" "maybe type" "temp"
      (909208 'move' call_tmp[909205](272439 call _to_unmanaged this[272430]))
      unknown call_tmp[909212] "expr temp" "maybe param" "maybe type" "temp"
      (909215 'move' call_tmp[909212](452688 call eltType _mt[203] this[272430]))
      (272437 call chpl_decRefCountsForDomainsInArrayEltTypes call_tmp[909205] call_tmp[909212])
    }
    (627222 return _void[46])
  }
  function BaseRectangularArr[272450](?).super[1272481](arg _mt[1272483]:_MT[201], arg this[1272485]:BaseRectangularArr[272450](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272495] "RVV" "temp"
    unknown call_tmp[1272502] "expr temp" "maybe param" "maybe type" "temp"
    (1272505 'move' call_tmp[1272502](1272489 '.v' this[1272485] c"super"))
    (1272500 'move' ret[1272495](1272499 'deref' call_tmp[1272502]))
    (1272497 return ret[1272495])
  }
  function BaseRectangularArr[1272512](?).eltType[1272507](arg _mt[1272509]:_MT[201], arg this[1272514]:BaseRectangularArr[1272512](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272549] "RVV" "temp" "type variable"
    unknown borrowOfThis[1272516]
    (1272541 'end of statement')
    (1272522 'move' borrowOfThis[1272516](1272518 call : this[1272514] _borrowedNonNilable[177](?)))
    (1272542 'end of statement' borrowOfThis[1272516])
    unknown call_tmp[1272563] "expr temp" "maybe param" "maybe type" "temp"
    (1272566 'move' call_tmp[1272563](1272531 'is bound' borrowOfThis[1272516] c"eltType"))
    if call_tmp[1272563]
    {
      unknown call_tmp[1272568] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272571 'move' call_tmp[1272568](1272526 '.v' borrowOfThis[1272516] c"eltType"))
      unknown call_tmp[1272573] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272576 'move' call_tmp[1272573](1272527 call chpl_checkLegalTypeFieldAccessor this[1272514] call_tmp[1272568] "eltType"))
      (1272554 'move' ret[1272549](1272553 'deref' call_tmp[1272573]))
      gotoReturn _end_eltType[1272547] _end_eltType[1272547]
      (1272544 'end of statement' borrowOfThis[1272516])
    }
    {
      (1272559 'move' ret[1272549](1272558 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1272547] _end_eltType[1272547]
    }
    label _end_eltType[1272547]
    (1272551 return ret[1272549])
  }
  function BaseRectangularArr[1272512](?).eltType[1272578](arg _mt[1272580]:_MT[201], arg this[1272582]:BaseRectangularArr[1272512](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272617] "RVV" "temp" "type variable"
    unknown borrowOfThis[1272584] "type variable"
    (1272609 'end of statement')
    (1272590 'move' borrowOfThis[1272584](1272586 call : this[1272582] _borrowedNonNilable[177](?)))
    (1272610 'end of statement' borrowOfThis[1272584])
    unknown call_tmp[1272631] "expr temp" "maybe param" "maybe type" "temp"
    (1272634 'move' call_tmp[1272631](1272599 'is bound' borrowOfThis[1272584] c"eltType"))
    if call_tmp[1272631]
    {
      unknown call_tmp[1272636] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272639 'move' call_tmp[1272636](1272594 '.v' borrowOfThis[1272584] c"eltType"))
      unknown call_tmp[1272641] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272644 'move' call_tmp[1272641](1272595 call chpl_checkLegalTypeFieldAccessor this[1272582] call_tmp[1272636] "eltType"))
      (1272622 'move' ret[1272617](1272621 'deref' call_tmp[1272641]))
      gotoReturn _end_eltType[1272615] _end_eltType[1272615]
      (1272612 'end of statement' borrowOfThis[1272584])
    }
    {
      (1272627 'move' ret[1272617](1272626 'deref' _uninstantiated[225]))
      gotoReturn _end_eltType[1272615] _end_eltType[1272615]
    }
    label _end_eltType[1272615]
    (1272619 return ret[1272617])
  }
  function BaseRectangularArr[272450](?).init[1272646](arg _mt[1272648]:_MT[201], arg this[1272649]:BaseRectangularArr[272450](?), in arg prev[1272662]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg next[1272667]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg pid[1272674]:int(64)[10] :
  int(64)[10] =
  nullPid[247489], in arg _decEltRefCounts[1272681]:bool[19] :
  bool[19] =
  0, in arg _resizePolicy[1272688] :
  normalInit[67542] =
  normalInit[67542], param arg rank[1272691]:int(64)[10], arg idxType[1272694]:_any[141](?), param arg strides[1272697]:strideKind[107137], arg eltType[1272700]:_any[141](?)) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1272711] "temporary of super field" "temp"
    (1272713 'move' super_tmp[1272711](1272710 '.v' this[1272649] c"super"))
    (1272659 call(1272657 call (partial) init _mt[203] super_tmp[1272711]) prev[1272662] next[1272667] pid[1272674] _decEltRefCounts[1272681] _resizePolicy[1272688] rank[1272691] idxType[1272694] strides[1272697])
    (1272737 'end of statement')
    unknown tmp[1272716] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1272740] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1272752] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272755 'move' call_tmp[1272752](1272718 '.v' this[1272649] c"super"))
      (1272744 'move' call_type_tmp[1272740](1272721 'typeof' call_tmp[1272752]))
    }
    (1272722 'move' tmp[1272716] call_type_tmp[1272740])
    unknown call_tmp[1272757] "maybe param" "maybe type" "temp"
    (1272760 'move' call_tmp[1272757](1272727 'cast' tmp[1272716] this[1272649]))
    unknown chpl__thisAsParent[1272724] "dead at end of block" "insert auto destroy" "temp"
    (1272748 'init var' chpl__thisAsParent[1272724] call_tmp[1272757] tmp[1272716])
    (1272730 'setcid' chpl__thisAsParent[1272724])
    (1272732 'init field' this[1272649] c"eltType" eltType[1272700])
    (1272738 'end of statement')
    (1272735 'setcid' this[1272649])
    (1272746 return _void[46])
  }
  type BaseRectangularArr[272450](?) val super[397669]:BaseArrOverRectangularDom[272345](?) "delay instantiation" "super class" unknown eltType[272350] "type variable"
  type BaseRectangularArr[1272512](?)
  function BaseSparseArr[272487](?).dsiGetBaseDom[272466](arg _mt[272470]:_MT[201], arg this[272468]:BaseSparseArr[272487](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[627226] "RVV" "temp"
    unknown call_tmp[909219] "expr temp" "maybe param" "maybe type" "temp"
    (909222 'move' call_tmp[909219](452698 call dom _mt[203] this[272468]))
    (627231 'move' ret[627226](627230 'deref' call_tmp[909219]))
    (627228 return ret[627226])
  }
  function BaseSparseArr[272487](?).deinit[272477](arg _mt[272481]:_MT[201], arg this[272479]:BaseSparseArr[272487](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (627233 return _void[46])
  }
  function BaseSparseArr[272487](?).super[1272762](arg _mt[1272764]:_MT[201], arg this[1272766]:BaseSparseArr[272487](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272776] "RVV" "temp"
    unknown call_tmp[1272783] "expr temp" "maybe param" "maybe type" "temp"
    (1272786 'move' call_tmp[1272783](1272770 '.v' this[1272766] c"super"))
    (1272781 'move' ret[1272776](1272780 'deref' call_tmp[1272783]))
    (1272778 return ret[1272776])
  }
  function BaseSparseArr[1272793](?).rank[1272788](arg _mt[1272790]:_MT[201], arg this[1272795]:BaseSparseArr[1272793](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272826] "RVV" "param" "temp"
    unknown borrowOfThis[1272797]
    (1272818 'end of statement')
    (1272803 'move' borrowOfThis[1272797](1272799 call : this[1272795] _borrowedNonNilable[177](?)))
    (1272819 'end of statement' borrowOfThis[1272797])
    unknown call_tmp[1272840] "expr temp" "maybe param" "maybe type" "temp"
    (1272843 'move' call_tmp[1272840](1272808 'is bound' borrowOfThis[1272797] c"rank"))
    if call_tmp[1272840]
    {
      unknown call_tmp[1272845] "expr temp" "maybe param" "maybe type" "temp"
      (1272848 'move' call_tmp[1272845](1272807 '.' borrowOfThis[1272797] c"rank"))
      (1272831 'move' ret[1272826](1272830 'deref' call_tmp[1272845]))
      gotoReturn _end_rank[1272824] _end_rank[1272824]
      (1272821 'end of statement' borrowOfThis[1272797])
    }
    {
      (1272836 'move' ret[1272826](1272835 'deref' ?[227]))
      gotoReturn _end_rank[1272824] _end_rank[1272824]
    }
    label _end_rank[1272824]
    (1272828 return ret[1272826])
  }
  function BaseSparseArr[1272793](?).rank[1272850](arg _mt[1272852]:_MT[201], arg this[1272854]:BaseSparseArr[1272793](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272885] "RVV" "param" "temp"
    unknown borrowOfThis[1272856] "type variable"
    (1272877 'end of statement')
    (1272862 'move' borrowOfThis[1272856](1272858 call : this[1272854] _borrowedNonNilable[177](?)))
    (1272878 'end of statement' borrowOfThis[1272856])
    unknown call_tmp[1272899] "expr temp" "maybe param" "maybe type" "temp"
    (1272902 'move' call_tmp[1272899](1272867 'is bound' borrowOfThis[1272856] c"rank"))
    if call_tmp[1272899]
    {
      unknown call_tmp[1272904] "expr temp" "maybe param" "maybe type" "temp"
      (1272907 'move' call_tmp[1272904](1272866 '.' borrowOfThis[1272856] c"rank"))
      (1272890 'move' ret[1272885](1272889 'deref' call_tmp[1272904]))
      gotoReturn _end_rank[1272883] _end_rank[1272883]
      (1272880 'end of statement' borrowOfThis[1272856])
    }
    {
      (1272895 'move' ret[1272885](1272894 'deref' ?[227]))
      gotoReturn _end_rank[1272883] _end_rank[1272883]
    }
    label _end_rank[1272883]
    (1272887 return ret[1272885])
  }
  function BaseSparseArr[1272793](?).idxType[1272909](arg _mt[1272911]:_MT[201], arg this[1272913]:BaseSparseArr[1272793](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1272948] "RVV" "temp" "type variable"
    unknown borrowOfThis[1272915]
    (1272940 'end of statement')
    (1272921 'move' borrowOfThis[1272915](1272917 call : this[1272913] _borrowedNonNilable[177](?)))
    (1272941 'end of statement' borrowOfThis[1272915])
    unknown call_tmp[1272962] "expr temp" "maybe param" "maybe type" "temp"
    (1272965 'move' call_tmp[1272962](1272930 'is bound' borrowOfThis[1272915] c"idxType"))
    if call_tmp[1272962]
    {
      unknown call_tmp[1272967] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272970 'move' call_tmp[1272967](1272925 '.v' borrowOfThis[1272915] c"idxType"))
      unknown call_tmp[1272972] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1272975 'move' call_tmp[1272972](1272926 call chpl_checkLegalTypeFieldAccessor this[1272913] call_tmp[1272967] "idxType"))
      (1272953 'move' ret[1272948](1272952 'deref' call_tmp[1272972]))
      gotoReturn _end_idxType[1272946] _end_idxType[1272946]
      (1272943 'end of statement' borrowOfThis[1272915])
    }
    {
      (1272958 'move' ret[1272948](1272957 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1272946] _end_idxType[1272946]
    }
    label _end_idxType[1272946]
    (1272950 return ret[1272948])
  }
  function BaseSparseArr[1272793](?).idxType[1272977](arg _mt[1272979]:_MT[201], arg this[1272981]:BaseSparseArr[1272793](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1273016] "RVV" "temp" "type variable"
    unknown borrowOfThis[1272983] "type variable"
    (1273008 'end of statement')
    (1272989 'move' borrowOfThis[1272983](1272985 call : this[1272981] _borrowedNonNilable[177](?)))
    (1273009 'end of statement' borrowOfThis[1272983])
    unknown call_tmp[1273030] "expr temp" "maybe param" "maybe type" "temp"
    (1273033 'move' call_tmp[1273030](1272998 'is bound' borrowOfThis[1272983] c"idxType"))
    if call_tmp[1273030]
    {
      unknown call_tmp[1273035] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1273038 'move' call_tmp[1273035](1272993 '.v' borrowOfThis[1272983] c"idxType"))
      unknown call_tmp[1273040] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1273043 'move' call_tmp[1273040](1272994 call chpl_checkLegalTypeFieldAccessor this[1272981] call_tmp[1273035] "idxType"))
      (1273021 'move' ret[1273016](1273020 'deref' call_tmp[1273040]))
      gotoReturn _end_idxType[1273014] _end_idxType[1273014]
      (1273011 'end of statement' borrowOfThis[1272983])
    }
    {
      (1273026 'move' ret[1273016](1273025 'deref' _uninstantiated[225]))
      gotoReturn _end_idxType[1273014] _end_idxType[1273014]
    }
    label _end_idxType[1273014]
    (1273018 return ret[1273016])
  }
  function BaseSparseArr[272487](?).dom[1273045](arg _mt[1273047]:_MT[201], arg this[1273049]:BaseSparseArr[272487](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1273059] "RVV" "temp"
    unknown call_tmp[1273066] "expr temp" "maybe param" "maybe type" "temp"
    (1273069 'move' call_tmp[1273066](1273053 '.' this[1273049] c"dom"))
    (1273064 'move' ret[1273059](1273063 'addr of' call_tmp[1273066]))
    (1273061 return ret[1273059])
  }
  function BaseSparseArr[272487](?).init[1273071](arg _mt[1273073]:_MT[201], arg this[1273074]:BaseSparseArr[272487](?), in arg prev[1273087]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg next[1273092]:unmanaged BaseArr?[468169] =
  _typeDefaultT[217], in arg pid[1273099]:int(64)[10] :
  int(64)[10] =
  nullPid[247489], in arg _decEltRefCounts[1273106]:bool[19] :
  bool[19] =
  0, in arg _resizePolicy[1273113] :
  normalInit[67542] =
  normalInit[67542], arg eltType[1273116]:_any[141](?), param arg rank[1273119]:int(64)[10], arg idxType[1273129]:_any[141](?), in arg dom[1273138]:_any[141](?)) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[1273149] "temporary of super field" "temp"
    (1273151 'move' super_tmp[1273149](1273148 '.v' this[1273074] c"super"))
    (1273084 call(1273082 call (partial) init _mt[203] super_tmp[1273149]) prev[1273087] next[1273092] pid[1273099] _decEltRefCounts[1273106] _resizePolicy[1273113] eltType[1273116])
    (1273184 'end of statement')
    unknown tmp[1273154] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[1273188] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[1273200] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1273203 'move' call_tmp[1273200](1273156 '.v' this[1273074] c"super"))
      (1273192 'move' call_type_tmp[1273188](1273159 'typeof' call_tmp[1273200]))
    }
    (1273160 'move' tmp[1273154] call_type_tmp[1273188])
    unknown call_tmp[1273205] "maybe param" "maybe type" "temp"
    (1273208 'move' call_tmp[1273205](1273165 'cast' tmp[1273154] this[1273074]))
    unknown chpl__thisAsParent[1273162] "dead at end of block" "insert auto destroy" "temp"
    (1273196 'init var' chpl__thisAsParent[1273162] call_tmp[1273205] tmp[1273154])
    (1273168 'setcid' chpl__thisAsParent[1273162])
    unknown call_tmp[1273210] "expr temp" "maybe param" "maybe type" "temp"
    (1273213 'move' call_tmp[1273210](1273171 call : rank[1273119] int(64)[10]))
    (1273173 'init field' this[1273074] c"rank" call_tmp[1273210])
    (1273185 'end of statement')
    (1273176 'init field' this[1273074] c"idxType" idxType[1273129])
    (1273179 'init field' this[1273074] c"dom" dom[1273138])
    (1273186 'end of statement')
    (1273182 'setcid' this[1273074])
    (1273194 return _void[46])
  }
  type BaseSparseArr[272487](?) val super[397671]:AbsBaseArr[272253](?) "delay instantiation" "super class" unknown rank[272455] "param" int(64)[10] unknown idxType[272460] "type variable" unknown dom[272463]
  type BaseSparseArr[1272793](?)
  function BaseSparseArrImpl[273138](?).init[272506](arg _mt[272524]:_MT[201], arg this[272508]:BaseSparseArrImpl[273138](?), arg eltType[272510]:_any[141](?), param arg rank[272513]:int(64)[10], arg idxType[272516]:_any[141](?), arg dom[272518]:_any[141](?), param arg initElts[272521]:bool[19]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[532491] "temporary of super field" "temp"
    (532493 'move' super_tmp[532491](532490 '.v' this[272508] c"super"))
    (272531 call(272528 call (partial) init _mt[203] super_tmp[532491])(eltType = eltType[272510])(rank = rank[272513])(idxType = idxType[272516])(dom = dom[272518]))
    (565345 'end of statement')
    unknown tmp[532496] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[578861] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[909226] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (909229 'move' call_tmp[909226](532498 '.v' this[272508] c"super"))
      (578865 'move' call_type_tmp[578861](532501 'typeof' call_tmp[909226]))
    }
    (532502 'move' tmp[532496] call_type_tmp[578861])
    unknown call_tmp[909231] "maybe param" "maybe type" "temp"
    (909234 'move' call_tmp[909231](532507 'cast' tmp[532496] this[272508]))
    unknown chpl__thisAsParent[532504] "dead at end of block" "insert auto destroy" "temp"
    (652089 'init var' chpl__thisAsParent[532504] call_tmp[909231] tmp[532496])
    (532510 'setcid' chpl__thisAsParent[532504])
    (565346 'end of statement')
    unknown call_tmp[909236] "expr temp" "maybe param" "maybe type" "temp"
    (909239 'move' call_tmp[909236](272549 '.' this[272508] c"dom"))
    unknown call_tmp[909243] "expr temp" "maybe param" "maybe type" "temp"
    (909246 'move' call_tmp[909243](272552 call nnzDom _mt[203] call_tmp[909236]))
    unknown call_tmp[909250] "maybe param" "maybe type" "temp"
    (909253 'move' call_tmp[909250](272558 call(272555 call (partial) buildArray _mt[203] call_tmp[909243]) eltType[272510](initElts = initElts[272521])))
    unknown call_tmp[909255] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (909258 'move' call_tmp[909255](532529 '.' this[272508] c"dom"))
    unknown call_tmp[909262] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (909265 'move' call_tmp[909262](532519 call nnzDom _mt[203] call_tmp[909255]))
    unknown call_tmp[909267] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (909270 'move' call_tmp[909267](532517 call chpl__ensureDomainExpr call_tmp[909262]))
    unknown call_tmp[909272] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (909275 'move' call_tmp[909272](532532 '.v' this[272508] c"eltType"))
    unknown call_tmp[909277] "maybe param" "maybe type" "temp"
    (909280 'move' call_tmp[909277](532515 call chpl__buildArrayRuntimeType call_tmp[909267] call_tmp[909272]))
    unknown data[532512] "temp"
    (532523 'init var' data[532512] call_tmp[909250] call_tmp[909277])
    (532525 'init field' this[272508] c"data" data[532512])
    (565347 'end of statement')
    unknown irv[532536] "temp"
    unknown call_tmp[909282] "expr temp" "maybe param" "maybe type" "temp"
    (909285 'move' call_tmp[909282](532545 '.v' this[272508] c"eltType"))
    (532539 'default init var' irv[532536] call_tmp[909282])
    (532541 '.=' this[272508] c"irv" irv[532536])
    (565348 'end of statement')
    (532548 'setcid' this[272508])
    (627235 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).deinit[272564](arg _mt[272568]:_MT[201], arg this[272566]:BaseSparseArrImpl[273138](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (627237 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).dsiElementInitializationComplete[272573](arg _mt[272577]:_MT[201], arg this[272575]:BaseSparseArrImpl[273138](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[909289] "expr temp" "maybe param" "maybe type" "temp"
    (909292 'move' call_tmp[909289](408763 call data _mt[203] this[272575]))
    (272584 call(272581 call (partial) dsiElementInitializationComplete _mt[203] call_tmp[909289]))
    (627239 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).dsiElementDeinitializationComplete[272587](arg _mt[272591]:_MT[201], arg this[272589]:BaseSparseArrImpl[273138](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[909298] "expr temp" "maybe param" "maybe type" "temp"
    (909301 'move' call_tmp[909298](408768 call data _mt[203] this[272589]))
    (272598 call(272595 call (partial) dsiElementDeinitializationComplete _mt[203] call_tmp[909298]))
    (627241 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).dsiDestroyArr[272601](arg _mt[272609]:_MT[201], arg this[272603]:BaseSparseArrImpl[273138](?), arg deinitElts[272606]:bool[19]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[909305] "expr temp" "maybe param" "maybe type" "temp"
    (909308 'move' call_tmp[909305](272617 call _cond_test deinitElts[272606]))
    if call_tmp[909305]
    {
      unknown call_tmp[909312] "expr temp" "maybe param" "maybe type" "temp"
      (909315 'move' call_tmp[909312](452712 call data _mt[203] this[272603]))
      (272613 call _deinitElements call_tmp[909312])
    }
    (627243 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).IRV[272629](arg _mt[272633]:_MT[201], arg this[272631]:BaseSparseArrImpl[273138](?)) ref : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[627247] "RVV" "temp"
    unknown call_tmp[909319] "expr temp" "maybe param" "maybe type" "temp"
    (909322 'move' call_tmp[909319](452721 call irv _mt[203] this[272631]))
    (627252 'move' ret[627247](627251 'addr of' call_tmp[909319]))
    (627249 return ret[627247])
  }
  function BaseSparseArrImpl[273138](?).sparseBulkShiftArray[272640](arg _mt[272648]:_MT[201], arg this[272642]:BaseSparseArrImpl[273138](?), arg shiftMap[272644]:_any[141](?), arg oldnnz[272646]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown newIdx[272652] "dead at end of block" "insert auto destroy"
    (652091 'default init var' newIdx[272652] int(64)[10])
    (272655 'end of statement')
    unknown prevNewIdx[272657] "dead at end of block" "insert auto destroy"
    (652093 'init var' prevNewIdx[272657] 0)
    (272660 'end of statement')
    unknown call_tmp[470436] "expr temp" "maybe param" "maybe type" "temp"
    unknown call_tmp[909326] "expr temp" "maybe param" "maybe type" "temp"
    (909329 'move' call_tmp[909326](272666 call _dom _mt[203] shiftMap[272644]))
    unknown call_tmp[909333] "expr temp" "maybe param" "maybe type" "temp"
    (909336 'move' call_tmp[909333](272669 call highBound _mt[203] call_tmp[909326]))
    unknown call_tmp[909338] "expr temp" "maybe param" "maybe type" "temp"
    (909341 'move' call_tmp[909338](272663 call + call_tmp[909333] 1))
    unknown call_tmp[909345] "expr temp" "maybe param" "maybe type" "temp"
    (909348 'move' call_tmp[909345](408774 call dom _mt[203] this[272642]))
    unknown call_tmp[909352] "expr temp" "maybe param" "maybe type" "temp"
    (909355 'move' call_tmp[909352](272674 call nnzDom _mt[203] call_tmp[909345]))
    unknown call_tmp[909359] "expr temp" "maybe param" "maybe type" "temp"
    (909362 'move' call_tmp[909359](272677 call highBound _mt[203] call_tmp[909352]))
    (470439 'move' call_tmp[470436](272680 call chpl_build_bounded_range call_tmp[909338] call_tmp[909359]))
    Forall[272691] {
      induction variables:
        
        unknown i[272661] "index var" "insert auto destroy"
      iterated expressions:
        call_tmp[470436]
      shadow variables:
      other variables
        forall body
      {
        unknown call_tmp[909366] "expr temp" "maybe param" "maybe type" "temp"
        (909369 'move' call_tmp[909366](272685 call(452726 call (partial) data _mt[203] this[272642]) i[272661]))
        unknown call_tmp[909373] "expr temp" "maybe param" "maybe type" "temp"
        (909376 'move' call_tmp[909373](452732 call irv _mt[203] this[272642]))
        (272682 call = call_tmp[909366] call_tmp[909373])
        (565354 'end of statement' i[272661])
      }
    }
    {
      unknown _indexOfInterest[272808] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[272809] "expr temp" "temp"
      unknown call_tmp[909378] "expr temp" "maybe param" "maybe type" "temp"
      (909381 'move' call_tmp[909378](272822 call chpl_build_low_bounded_range 0))
      unknown call_tmp[909383] "expr temp" "maybe param" "maybe type" "temp"
      (909386 'move' call_tmp[909383](272820 call # call_tmp[909378] oldnnz[272646]))
      unknown call_tmp[909388] "expr temp" "maybe param" "maybe type" "temp"
      (909391 'move' call_tmp[909388](272826 call - 1))
      unknown call_tmp[909393] "expr temp" "maybe param" "maybe type" "temp"
      (909396 'move' call_tmp[909393](272818 call chpl_by call_tmp[909383] call_tmp[909388]))
      unknown call_tmp[909398] "expr temp" "maybe param" "maybe type" "temp"
      (909401 'move' call_tmp[909398](272828 call _getIterator call_tmp[909393]))
      unknown call_tmp[909405] "expr temp" "maybe param" "maybe type" "temp"
      (909408 'move' call_tmp[909405](272844 call _dom _mt[203] shiftMap[272644]))
      unknown call_tmp[909412] "expr temp" "maybe param" "maybe type" "temp"
      (909415 'move' call_tmp[909412](272848 call(272842 call (partial) dim _mt[203] call_tmp[909405]) 0))
      unknown call_tmp[909417] "expr temp" "maybe param" "maybe type" "temp"
      (909420 'move' call_tmp[909417](272851 call - 1))
      unknown call_tmp[909422] "expr temp" "maybe param" "maybe type" "temp"
      (909425 'move' call_tmp[909422](272840 call chpl_by call_tmp[909412] call_tmp[909417]))
      unknown call_tmp[909427] "expr temp" "maybe param" "maybe type" "temp"
      (909430 'move' call_tmp[909427](272853 call _getIterator call_tmp[909422]))
      (272867 'move' _iterator[272809](272727 call _build_tuple call_tmp[909398] call_tmp[909427]))
      Defer
      {
        {
          (272895 call _freeIterator _iterator[272809])
        }
      }
      { scopeless type
        (272872 'move' _indexOfInterest[272808](272869 call iteratorIndex _iterator[272809]))
      }
      ForLoop[272810]
      {
        (272877 call _check_tuple_var_decl _indexOfInterest[272808] 2)
        (565357 'end of statement')
        unknown i[272695] "index var" "insert auto destroy"
        (565358 'end of statement')
        (272884 'move' i[272695](272881 call _indexOfInterest[272808] 0))
        (565359 'end of statement' i[272695])
        unknown _newIdx[272697] "index var" "insert auto destroy"
        (565361 'end of statement')
        (272890 'move' _newIdx[272697](272887 call _indexOfInterest[272808] 1))
        (565362 'end of statement' _newIdx[272697])
        {
          unknown call_tmp[909432] "expr temp" "maybe param" "maybe type" "temp"
          (909435 'move' call_tmp[909432](272733 call shiftMap[272644] _newIdx[272697]))
          (272729 call = newIdx[272652] call_tmp[909432])
          (565364 'end of statement' newIdx[272652] _newIdx[272697])
          unknown call_tmp[909439] "expr temp" "maybe param" "maybe type" "temp"
          (909442 'move' call_tmp[909439](272738 call(452740 call (partial) data _mt[203] this[272642]) newIdx[272652]))
          unknown call_tmp[909446] "expr temp" "maybe param" "maybe type" "temp"
          (909449 'move' call_tmp[909446](272741 call(452746 call (partial) data _mt[203] this[272642]) i[272695]))
          (272735 call = call_tmp[909439] call_tmp[909446])
          (565367 'end of statement' newIdx[272652] i[272695])
          {
            unknown _indexOfInterest[272762] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[272763] "expr temp" "temp"
            unknown call_tmp[909451] "expr temp" "maybe param" "maybe type" "temp"
            (909454 'move' call_tmp[909451](272775 call + newIdx[272652] 1))
            unknown call_tmp[909456] "expr temp" "maybe param" "maybe type" "temp"
            (909459 'move' call_tmp[909456](272779 call - prevNewIdx[272657] 1))
            unknown call_tmp[909461] "expr temp" "maybe param" "maybe type" "temp"
            (909464 'move' call_tmp[909461](272782 call chpl_direct_range_iter call_tmp[909451] call_tmp[909456]))
            (272772 'move' _iterator[272763](272770 call _getIterator call_tmp[909461]))
            Defer
            {
              {
                (272797 call _freeIterator _iterator[272763])
              }
            }
            { scopeless type
              (272787 'move' _indexOfInterest[272762](272784 call iteratorIndex _iterator[272763]))
            }
            ForLoop[272764]
            {
              unknown emptyIndex[272743] "index var" "insert auto destroy"
              (565371 'end of statement')
              (272792 'move' emptyIndex[272743] _indexOfInterest[272762])
              (565372 'end of statement' emptyIndex[272743])
              unknown call_tmp[909468] "expr temp" "maybe param" "maybe type" "temp"
              (909471 'move' call_tmp[909468](272758 call(452752 call (partial) data _mt[203] this[272642]) emptyIndex[272743]))
              unknown call_tmp[909475] "expr temp" "maybe param" "maybe type" "temp"
              (909478 'move' call_tmp[909475](452758 call irv _mt[203] this[272642]))
              (272755 call = call_tmp[909468] call_tmp[909475])
              (565374 'end of statement' emptyIndex[272743])
              label _continueLabel[272767]
              _indexOfInterest[272762]
              _iterator[272763]
            }
            label _breakLabel[272768]
          }
          (272804 call = prevNewIdx[272657] newIdx[272652])
          (565376 'end of statement' prevNewIdx[272657] newIdx[272652])
        }
        label _continueLabel[272813]
        _indexOfInterest[272808]
        _iterator[272809]
      }
      label _breakLabel[272814]
    }
    {
      unknown _indexOfInterest[272918] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[272919] "expr temp" "temp"
      unknown call_tmp[909480] "expr temp" "maybe param" "maybe type" "temp"
      (909483 'move' call_tmp[909480](272932 call - prevNewIdx[272657] 1))
      unknown call_tmp[909485] "expr temp" "maybe param" "maybe type" "temp"
      (909488 'move' call_tmp[909485](272935 call chpl_direct_range_iter 0 call_tmp[909480]))
      (272928 'move' _iterator[272919](272926 call _getIterator call_tmp[909485]))
      Defer
      {
        {
          (272950 call _freeIterator _iterator[272919])
        }
      }
      { scopeless type
        (272940 'move' _indexOfInterest[272918](272937 call iteratorIndex _iterator[272919]))
      }
      ForLoop[272920]
      {
        unknown i[272902] "index var" "insert auto destroy"
        (565380 'end of statement')
        (272945 'move' i[272902] _indexOfInterest[272918])
        (565381 'end of statement' i[272902])
        unknown call_tmp[909492] "expr temp" "maybe param" "maybe type" "temp"
        (909495 'move' call_tmp[909492](272914 call(452768 call (partial) data _mt[203] this[272642]) i[272902]))
        unknown call_tmp[909499] "expr temp" "maybe param" "maybe type" "temp"
        (909502 'move' call_tmp[909499](452774 call irv _mt[203] this[272642]))
        (272911 call = call_tmp[909492] call_tmp[909499])
        (565383 'end of statement' i[272902])
        label _continueLabel[272923]
        _indexOfInterest[272918]
        _iterator[272919]
      }
      label _breakLabel[272924]
    }
    (627254 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).sparseShiftArray[272959](arg _mt[272967]:_MT[201], arg this[272961]:BaseSparseArrImpl[273138](?), arg shiftrange[272963]:_any[141](?), arg initrange[272965]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[272980] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[272981] "expr temp" "temp"
      (272990 'move' _iterator[272981](272988 call _getIterator initrange[272965]))
      Defer
      {
        {
          (273005 call _freeIterator _iterator[272981])
        }
      }
      { scopeless type
        (272995 'move' _indexOfInterest[272980](272992 call iteratorIndex _iterator[272981]))
      }
      ForLoop[272982]
      {
        unknown i[272970] "index var" "insert auto destroy"
        (565386 'end of statement')
        (273000 'move' i[272970] _indexOfInterest[272980])
        (565387 'end of statement' i[272970])
        {
          unknown call_tmp[909506] "expr temp" "maybe param" "maybe type" "temp"
          (909509 'move' call_tmp[909506](272977 call(452781 call (partial) data _mt[203] this[272961]) i[272970]))
          unknown call_tmp[909513] "expr temp" "maybe param" "maybe type" "temp"
          (909516 'move' call_tmp[909513](452787 call irv _mt[203] this[272961]))
          (272974 call = call_tmp[909506] call_tmp[909513])
          (565389 'end of statement' i[272970])
        }
        label _continueLabel[272985]
        _indexOfInterest[272980]
        _iterator[272981]
      }
      label _breakLabel[272986]
    }
    {
      unknown _indexOfInterest[273032] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273033] "expr temp" "temp"
      unknown call_tmp[909518] "expr temp" "maybe param" "maybe type" "temp"
      (909521 'move' call_tmp[909518](273017 call - 1))
      unknown call_tmp[909523] "expr temp" "maybe param" "maybe type" "temp"
      (909526 'move' call_tmp[909523](273014 call chpl_by shiftrange[272963] call_tmp[909518]))
      (273042 'move' _iterator[273033](273040 call _getIterator call_tmp[909523]))
      Defer
      {
        {
          (273061 call _freeIterator _iterator[273033])
        }
      }
      { scopeless type
        (273051 'move' _indexOfInterest[273032](273048 call iteratorIndex _iterator[273033]))
      }
      ForLoop[273034]
      {
        unknown i[273012] "index var" "insert auto destroy"
        (565392 'end of statement')
        (273056 'move' i[273012] _indexOfInterest[273032])
        (565393 'end of statement' i[273012])
        {
          unknown call_tmp[909530] "expr temp" "maybe param" "maybe type" "temp"
          (909533 'move' call_tmp[909530](273025 call + i[273012] 1))
          unknown call_tmp[909535] "expr temp" "maybe param" "maybe type" "temp"
          (909538 'move' call_tmp[909535](273024 call(452793 call (partial) data _mt[203] this[272961]) call_tmp[909530]))
          unknown call_tmp[909542] "expr temp" "maybe param" "maybe type" "temp"
          (909545 'move' call_tmp[909542](273030 call(452799 call (partial) data _mt[203] this[272961]) i[273012]))
          (273021 call = call_tmp[909535] call_tmp[909542])
          (565395 'end of statement' i[273012])
        }
        label _continueLabel[273037]
        _indexOfInterest[273032]
        _iterator[273033]
      }
      label _breakLabel[273038]
    }
    unknown call_tmp[909551] "expr temp" "maybe param" "maybe type" "temp"
    (909554 'move' call_tmp[909551](273073 call lowBound _mt[203] shiftrange[272963]))
    unknown call_tmp[909556] "expr temp" "maybe param" "maybe type" "temp"
    (909559 'move' call_tmp[909556](273071 call(452805 call (partial) data _mt[203] this[272961]) call_tmp[909551]))
    unknown call_tmp[909563] "expr temp" "maybe param" "maybe type" "temp"
    (909566 'move' call_tmp[909563](452810 call irv _mt[203] this[272961]))
    (273068 call = call_tmp[909556] call_tmp[909563])
    (627256 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).sparseShiftArrayBack[273079](arg _mt[273085]:_MT[201], arg this[273081]:BaseSparseArrImpl[273138](?), arg shiftrange[273083]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[273103] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273104] "expr temp" "temp"
      (273113 'move' _iterator[273104](273111 call _getIterator shiftrange[273083]))
      Defer
      {
        {
          (273128 call _freeIterator _iterator[273104])
        }
      }
      { scopeless type
        (273118 'move' _indexOfInterest[273103](273115 call iteratorIndex _iterator[273104]))
      }
      ForLoop[273105]
      {
        unknown i[273088] "index var" "insert auto destroy"
        (565399 'end of statement')
        (273123 'move' i[273088] _indexOfInterest[273103])
        (565400 'end of statement' i[273088])
        {
          unknown call_tmp[909570] "expr temp" "maybe param" "maybe type" "temp"
          (909573 'move' call_tmp[909570](273095 call(452816 call (partial) data _mt[203] this[273081]) i[273088]))
          unknown call_tmp[909577] "expr temp" "maybe param" "maybe type" "temp"
          (909580 'move' call_tmp[909577](273099 call + i[273088] 1))
          unknown call_tmp[909582] "expr temp" "maybe param" "maybe type" "temp"
          (909585 'move' call_tmp[909582](273098 call(452822 call (partial) data _mt[203] this[273081]) call_tmp[909577]))
          (273092 call = call_tmp[909570] call_tmp[909582])
          (565402 'end of statement' i[273088])
        }
        label _continueLabel[273108]
        _indexOfInterest[273103]
        _iterator[273104]
      }
      label _breakLabel[273109]
    }
    (627258 return _void[46])
  }
  function BaseSparseArrImpl[273138](?).super[1273215](arg _mt[1273217]:_MT[201], arg this[1273219]:BaseSparseArrImpl[273138](?)) : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1273229] "RVV" "temp"
    unknown call_tmp[1273236] "expr temp" "maybe param" "maybe type" "temp"
    (1273239 'move' call_tmp[1273236](1273223 '.v' this[1273219] c"super"))
    (1273234 'move' ret[1273229](1273233 'deref' call_tmp[1273236]))
    (1273231 return ret[1273229])
  }
  function BaseSparseArrImpl[273138](?).data[1273241](arg _mt[1273243]:_MT[201], arg this[1273245]:BaseSparseArrImpl[273138](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1273255] "RVV" "temp"
    unknown call_tmp[1273262] "expr temp" "maybe param" "maybe type" "temp"
    (1273265 'move' call_tmp[1273262](1273249 '.' this[1273245] c"data"))
    (1273260 'move' ret[1273255](1273259 'addr of' call_tmp[1273262]))
    (1273257 return ret[1273255])
  }
  function BaseSparseArrImpl[273138](?).irv[1273267](arg _mt[1273269]:_MT[201], arg this[1273271]:BaseSparseArrImpl[273138](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1273281] "RVV" "temp"
    unknown call_tmp[1273288] "expr temp" "maybe param" "maybe type" "temp"
    (1273291 'move' call_tmp[1273288](1273275 '.' this[1273271] c"irv"))
    (1273286 'move' ret[1273281](1273285 'addr of' call_tmp[1273288]))
    (1273283 return ret[1273281])
  }
  type BaseSparseArrImpl[273138](?) val super[397673]:BaseSparseArr[272487](?) "delay instantiation" "super class" unknown data[272492] "local field" "unsafe"(272502 call chpl__buildArrayRuntimeType(272499 call chpl__ensureDomainExpr(272496 call nnzDom _mt[203] dom[272463])) eltType[272229]) unknown irv[272625] eltType[272229]
  function _delete_dist[273140](arg dist[273144]:unmanaged BaseDist[468172], arg privatized[273148]:bool[19]) : _unknown[42] "no return value for void"
  {
    (273158 call(273155 call (partial) dsiDestroyDist _mt[203] dist[273144]))
    (565404 'end of statement')
    unknown tmp[502176] "maybe param" "temp"
    (502187 'move' tmp[502176] 0)
    unknown call_tmp[909591] "expr temp" "maybe param" "maybe type" "temp"
    (909594 'move' call_tmp[909591](502189 call _cond_invalid tmp[502176]))
    if call_tmp[909591]
    {
      (502192 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[702709] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702710] "maybe param" "temp"
    unknown call_tmp[909596] "expr temp" "maybe param" "maybe type" "temp"
    (909599 'move' call_tmp[909596](502177 call isTrue tmp[502176]))
    (702715 'move' tmp[702710](702713 call _cond_test call_tmp[909596]))
    if tmp[702710]
    {
      unknown tmp[702717] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (702719 'move' tmp[702717](502180 call isTrue privatized[273148]))
      (702724 'move' tmp[702709](702721 '_paramFoldLogical' tmp[702710] tmp[702717]))
    }
    {
      (702729 'move' tmp[702709](702726 '_paramFoldLogical' tmp[702710] 0))
    }
    unknown call_tmp[909601] "expr temp" "maybe param" "maybe type" "temp"
    (909604 'move' call_tmp[909601](273171 call _cond_test tmp[702709]))
    if call_tmp[909601]
    {
      unknown call_tmp[909608] "expr temp" "maybe param" "maybe type" "temp"
      (909611 'move' call_tmp[909608](273163 call pid _mt[203] dist[273144]))
      (273161 call _freePrivatizedClass call_tmp[909608] dist[273144])
    }
    (273177 call chpl__delete dist[273144])
    (627260 return _void[46])
  }
  function _delete_dom[273182](arg dom[273184]:_any[141](?), arg privatized[273187]:bool[19]) : _unknown[42] "no return value for void"
  {
    (273195 call(273192 call (partial) dsiDestroyDom _mt[203] dom[273184]))
    (565408 'end of statement')
    unknown tmp[502197] "maybe param" "temp"
    (502208 'move' tmp[502197] 0)
    unknown call_tmp[909615] "expr temp" "maybe param" "maybe type" "temp"
    (909618 'move' call_tmp[909615](502210 call _cond_invalid tmp[502197]))
    if call_tmp[909615]
    {
      (502213 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[702736] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702737] "maybe param" "temp"
    unknown call_tmp[909620] "expr temp" "maybe param" "maybe type" "temp"
    (909623 'move' call_tmp[909620](502198 call isTrue tmp[502197]))
    (702742 'move' tmp[702737](702740 call _cond_test call_tmp[909620]))
    if tmp[702737]
    {
      unknown tmp[702744] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (702746 'move' tmp[702744](502201 call isTrue privatized[273187]))
      (702751 'move' tmp[702736](702748 '_paramFoldLogical' tmp[702737] tmp[702744]))
    }
    {
      (702756 'move' tmp[702736](702753 '_paramFoldLogical' tmp[702737] 0))
    }
    unknown call_tmp[909625] "expr temp" "maybe param" "maybe type" "temp"
    (909628 'move' call_tmp[909625](273208 call _cond_test tmp[702736]))
    if call_tmp[909625]
    {
      unknown call_tmp[909632] "expr temp" "maybe param" "maybe type" "temp"
      (909635 'move' call_tmp[909632](273200 call pid _mt[203] dom[273184]))
      (273198 call _freePrivatizedClass call_tmp[909632] dom[273184])
    }
    (273214 call chpl__delete dom[273184])
    (627262 return _void[46])
  }
  function _delete_arr[273219](arg arr[273223]:unmanaged BaseArr[468148], param arg privatized[273227]:bool[19], arg deinitElts[273231] :
  1 =
  1) : _unknown[42] "no return value for void"
  {
    (273241 call(273238 call (partial) dsiDestroyArr _mt[203] arr[273223])(deinitElts = deinitElts[273231]))
    (565412 'end of statement')
    (273250 call(273247 call (partial) decEltCountsIfNeeded _mt[203] arr[273223]))
    (565413 'end of statement')
    unknown tmp[502218] "maybe param" "temp"
    (502229 'move' tmp[502218] 0)
    unknown call_tmp[909641] "expr temp" "maybe param" "maybe type" "temp"
    (909644 'move' call_tmp[909641](502231 call _cond_invalid tmp[502218]))
    if call_tmp[909641]
    {
      (502234 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[702763] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702764] "maybe param" "temp"
    unknown call_tmp[909646] "expr temp" "maybe param" "maybe type" "temp"
    (909649 'move' call_tmp[909646](502219 call isTrue tmp[502218]))
    (702769 'move' tmp[702764](702767 call _cond_test call_tmp[909646]))
    if tmp[702764]
    {
      unknown tmp[702771] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (702773 'move' tmp[702771](502222 call isTrue privatized[273227]))
      (702778 'move' tmp[702763](702775 '_paramFoldLogical' tmp[702764] tmp[702771]))
    }
    {
      (702783 'move' tmp[702763](702780 '_paramFoldLogical' tmp[702764] 0))
    }
    unknown call_tmp[909651] "expr temp" "maybe param" "maybe type" "temp"
    (909654 'move' call_tmp[909651](273263 call _cond_test tmp[702763]))
    if call_tmp[909651]
    {
      unknown call_tmp[909658] "expr temp" "maybe param" "maybe type" "temp"
      (909661 'move' call_tmp[909658](273255 call pid _mt[203] arr[273223]))
      (273253 call _freePrivatizedClass call_tmp[909658] arr[273223])
    }
    (273269 call chpl__delete arr[273223])
    (627264 return _void[46])
  }
  function castIndices[273274](arg from[273276]:_any[141](?), arg lhs[273278]:_any[141](?)) : _unknown[42] "private"
  {
    unknown ret[627268] "RVV" "temp"
    unknown call_tmp[909665] "maybe param" "maybe type" "temp"
    (909668 'move' call_tmp[909665](273284 call rank _mt[203] lhs[273278]))
    unknown rank[273282] "dead at end of block" "param"
    (652095 'init var' rank[273282] call_tmp[909665])
    (273288 'end of statement')
    unknown call_tmp[909672] "expr temp" "maybe param" "maybe type" "temp"
    (909675 'move' call_tmp[909672](273295 call size _mt[203] from[273276]))
    unknown call_tmp[909677] "expr temp" "maybe param" "maybe type" "temp"
    (909680 'move' call_tmp[909677](273291 call == rank[273282] call_tmp[909672]))
    (273290 call compilerAssert call_tmp[909677])
    (565417 'end of statement')
    unknown resultType[273299] "dead at end of block" "insert auto destroy" "type variable"
    unknown call_tmp[909684] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (909687 'move' call_tmp[909684](652100 call idxType _mt[203] lhs[273278]))
    unknown call_tmp[909691] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (909694 'move' call_tmp[909691](652105 call strides _mt[203] lhs[273278]))
    (652108 'move' resultType[273299](652098 call range[240](?) call_tmp[909684] both[107114] call_tmp[909691]))
    { scopeless type
      unknown call_type_tmp[578867] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[909696] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (909699 'move' call_tmp[909696](273321 call from[273276] 0))
      (578871 'move' call_type_tmp[578867](273323 'typeof' call_tmp[909696]))
    }
    unknown call_tmp[909701] "expr temp" "maybe param" "maybe type" "temp"
    (909704 'move' call_tmp[909701](273318 call == call_type_tmp[578867] resultType[273299]))
    unknown call_tmp[909706] "expr temp" "maybe param" "maybe type" "temp"
    (909709 'move' call_tmp[909706](273325 call _cond_test call_tmp[909701]))
    if call_tmp[909706]
    {
      (627273 'move' ret[627268](627272 'deref' from[273276]))
      gotoReturn _end_castIndices[627266] _end_castIndices[627266]
    }
    unknown result[273331] "dead at end of block" "insert auto destroy"
    unknown call_tmp[909711] "expr temp" "maybe param" "maybe type" "temp"
    (909714 'move' call_tmp[909711](273332 call * rank[273282] resultType[273299]))
    (652110 'default init var' result[273331] call_tmp[909711])
    (273337 'end of statement' resultType[273299])
    {
      unknown i[273338] "dead at end of block" "index var" "insert auto destroy"
      (652112 'init var' i[273338] 0)
      (565420 'end of statement')
      unknown tmp[273359] "maybe param" "temp"
      unknown call_tmp[909716] "expr temp" "maybe param" "maybe type" "temp"
      (909719 'move' call_tmp[909716](273341 call - rank[273282] 1))
      (273371 'move' tmp[273359](273369 call chpl_compute_low_param_loop_bound 0 call_tmp[909716]))
      unknown tmp[273360] "maybe param" "temp"
      unknown call_tmp[909721] "expr temp" "maybe param" "maybe type" "temp"
      (909724 'move' call_tmp[909721](273376 call - rank[273282] 1))
      (273381 'move' tmp[273360](273379 call chpl_compute_high_param_loop_bound 0 call_tmp[909721]))
      unknown tmp[273361] "maybe param" "temp"
      (273384 'move' tmp[273361] 1)
      ParamForLoop[273386]
      { i[273338] tmp[273359] tmp[273360] tmp[273361]
        unknown call_tmp[909726] "expr temp" "maybe param" "maybe type" "temp"
        (909729 'move' call_tmp[909726](273350 call result[273331] i[273338]))
        unknown call_tmp[909731] "expr temp" "maybe param" "maybe type" "temp"
        (909734 'move' call_tmp[909731](273355 call from[273276] i[273338]))
        unknown call_tmp[909736] "expr temp" "maybe param" "maybe type" "temp"
        (909739 'move' call_tmp[909736](273352 call : call_tmp[909731] resultType[273299]))
        (273347 call = call_tmp[909726] call_tmp[909736])
        (565421 'end of statement' result[273331] i[273338] resultType[273299])
      }
      label _unused_continueLabel[273363]
      label _breakLabel[273362]
    }
    (627278 'move' ret[627268](627277 'deref' result[273331]))
    gotoReturn _end_castIndices[627266] _end_castIndices[627266]
    (565425 'end of statement' result[273331])
    label _end_castIndices[627266]
    (627270 return ret[627268])
  }
  function chpl_assignDomainWithGetSetIndices[273399](arg lhs[273403]:_any[141](?), arg rhs[273407]:_domain[225034](?)) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[909743] "maybe param" "maybe type" "temp"
    (909746 'move' call_tmp[909743](273423 call(273420 call (partial) getIndices _mt[203] rhs[273407])))
    const rhsInds[273418] "dead at end of block" "const" "insert auto destroy"
    (652114 'init var' rhsInds[273418] call_tmp[909743])
    (273425 'end of statement')
    unknown arrType[273427] "dead at end of block" "insert auto destroy" "type variable"
    (652121 'move' arrType[273427](652120 call(652117 call (partial) getBaseArrType _mt[203] lhs[273403])))
    (565427 'end of statement')
    {
      unknown _indexOfInterest[273499] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273500] "expr temp" "temp"
      unknown call_tmp[909752] "expr temp" "maybe param" "maybe type" "temp"
      (909755 'move' call_tmp[909752](273439 call _arrs _mt[203] lhs[273403]))
      (273509 'move' _iterator[273500](273507 call _getIterator call_tmp[909752]))
      Defer
      {
        {
          (273524 call _freeIterator _iterator[273500])
        }
      }
      { scopeless type
        (273514 'move' _indexOfInterest[273499](273511 call iteratorIndex _iterator[273500]))
      }
      ForLoop[273501]
      {
        unknown e[273436] "index var" "insert auto destroy"
        (565429 'end of statement')
        (273519 'move' e[273436] _indexOfInterest[273499])
        (565430 'end of statement' e[273436])
        {
          {
            const tmp[273491] "const" "temp"
            unknown call_tmp[909757] "expr temp" "maybe param" "maybe type" "temp"
            (909760 'move' call_tmp[909757](273488 '_wide_get_locale' e[273436]))
            (273492 'move' tmp[273491](273489 'deref' call_tmp[909757]))
            {
              unknown call_tmp[909762] "expr temp" "maybe param" "maybe type" "temp"
              (909765 'move' call_tmp[909762](273478 'to nilable class from type' arrType[273427]))
              unknown call_tmp[909767] "expr temp" "maybe param" "maybe type" "temp"
              (909770 'move' call_tmp[909767](273474 call : e[273436] call_tmp[909762]))
              unknown ifvar_borrow[909772] "temp"
              (909774 'move' ifvar_borrow[909772](909777 call chpl_checkBorrowIfVar call_tmp[909767] 0))
              unknown call_tmp[909784] "expr temp" "maybe param" "maybe type" "temp"
              (909787 'move' call_tmp[909784](273482 call _cond_test ifvar_borrow[909772]))
              if call_tmp[909784]
              {
                const eCast[273479] "const"
                (909780 'move' eCast[273479](909782 'to non nilable class' ifvar_borrow[909772]))
                unknown call_tmp[909791] "expr temp" "maybe param" "maybe type" "temp"
                (909794 'move' call_tmp[909791](273453 call castIndices rhsInds[273418] lhs[273403]))
                (273451 call(273448 call (partial) dsiReallocate _mt[203] eCast[273479]) call_tmp[909791])
                (565432 'end of statement' eCast[273479] rhsInds[273418])
              }
              {
                unknown call_tmp[909796] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                (909799 'move' call_tmp[909796](532550 'typeof' lhs[273403]))
                unknown call_tmp[909801] "expr temp" "maybe param" "maybe type" "temp"
                (909804 'move' call_tmp[909801](273462 call : call_tmp[909796] string[244]))
                unknown call_tmp[909806] "expr temp" "maybe param" "maybe type" "temp"
                (909809 'move' call_tmp[909806](273469 call : arrType[273427] string[244]))
                (273458 call halt "internal error: " call_tmp[909801] " contains a bad array type " call_tmp[909806])
                (565435 'end of statement' arrType[273427])
              }
            }
            (273495 'elided on block' 0 tmp[273491])
          }
        }
        label _continueLabel[273504]
        _indexOfInterest[273499]
        _iterator[273500]
      }
      label _breakLabel[273505]
    }
    (273535 call(273532 call (partial) dsiSetIndices _mt[203] lhs[273403]) rhsInds[273418])
    (565437 'end of statement' rhsInds[273418])
    {
      unknown _indexOfInterest[273580] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273581] "expr temp" "temp"
      unknown call_tmp[909815] "expr temp" "maybe param" "maybe type" "temp"
      (909818 'move' call_tmp[909815](273540 call _arrs _mt[203] lhs[273403]))
      (273590 'move' _iterator[273581](273588 call _getIterator call_tmp[909815]))
      Defer
      {
        {
          (273605 call _freeIterator _iterator[273581])
        }
      }
      { scopeless type
        (273595 'move' _indexOfInterest[273580](273592 call iteratorIndex _iterator[273581]))
      }
      ForLoop[273582]
      {
        unknown e[273537] "index var" "insert auto destroy"
        (565440 'end of statement')
        (273600 'move' e[273537] _indexOfInterest[273580])
        (565441 'end of statement' e[273537])
        {
          unknown call_tmp[909820] "expr temp" "maybe param" "maybe type" "temp"
          (909823 'move' call_tmp[909820](273550 'to nilable class from type' arrType[273427]))
          unknown call_tmp[909825] "maybe param" "maybe type" "temp"
          (909828 'move' call_tmp[909825](273546 call : e[273537] call_tmp[909820]))
          unknown eCastQ[273545] "dead at end of block" "insert auto destroy"
          (652123 'init var' eCastQ[273545] call_tmp[909825])
          (273552 'end of statement')
          unknown call_tmp[909830] "maybe param" "maybe type" "temp"
          (909833 'move' call_tmp[909830](273555 call postfix! eCastQ[273545]))
          unknown eCast[273554] "dead at end of block" "insert auto destroy"
          (652125 'init var' eCast[273554] call_tmp[909830])
          (273559 'end of statement' e[273537] arrType[273427] eCastQ[273545])
          {
            const tmp[273572] "const" "temp"
            unknown call_tmp[909835] "expr temp" "maybe param" "maybe type" "temp"
            (909838 'move' call_tmp[909835](273569 '_wide_get_locale' e[273537]))
            (273573 'move' tmp[273572](273570 'deref' call_tmp[909835]))
            (273567 call(273564 call (partial) dsiPostReallocate _mt[203] eCast[273554]))
            (565446 'end of statement' eCast[273554])
            (273576 'elided on block' 0 tmp[273572])
          }
        }
        label _continueLabel[273585]
        _indexOfInterest[273580]
        _iterator[273581]
      }
      label _breakLabel[273586]
    }
    unknown call_tmp[909844] "expr temp" "maybe param" "maybe type" "temp"
    (909847 'move' call_tmp[909844](273620 call(273617 call (partial) dsiSupportsPrivatization _mt[203] lhs[273403])))
    unknown call_tmp[909849] "expr temp" "maybe param" "maybe type" "temp"
    (909852 'move' call_tmp[909849](273621 call _cond_test call_tmp[909844]))
    if call_tmp[909849]
    {
      (273614 call _reprivatize lhs[273403])
    }
    (627282 return _void[46])
  }
  where {
    unknown call_tmp[909854] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (909857 'move' call_tmp[909854](532552 'typeof' lhs[273403]))
    unknown call_tmp[909859] "expr temp" "maybe param" "maybe type" "temp"
    (909862 'move' call_tmp[909859](273413 call _to_borrowed call_tmp[909854]))
    (395548 'is_subtype' BaseRectangularDom[443012](?) call_tmp[909859])
  }
  function chpl_assignDomainWithIndsIterSafeForRemoving[273628](arg lhs[273632]:_any[141](?), arg rhs[273636]:_domain[225034](?)) : _unknown[42] "no return value for void"
  {
    {
      unknown _indexOfInterest[273683] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273684] "expr temp" "temp"
      unknown call_tmp[909866] "expr temp" "maybe param" "maybe type" "temp"
      (909869 'move' call_tmp[909866](273662 call(273659 call (partial) dsiIndsIterSafeForRemoving _mt[203] lhs[273632])))
      (273693 'move' _iterator[273684](273691 call _getIterator call_tmp[909866]))
      Defer
      {
        {
          (273708 call _freeIterator _iterator[273684])
        }
      }
      { scopeless type
        (273698 'move' _indexOfInterest[273683](273695 call iteratorIndex _iterator[273684]))
      }
      ForLoop[273685]
      {
        unknown i[273654] "index var" "insert auto destroy"
        (565450 'end of statement')
        (273703 'move' i[273654] _indexOfInterest[273683])
        (565451 'end of statement' i[273654])
        {
          unknown call_tmp[909873] "expr temp" "maybe param" "maybe type" "temp"
          (909876 'move' call_tmp[909873](273677 call(273674 call (partial) contains _mt[203] rhs[273636]) i[273654]))
          unknown call_tmp[909878] "expr temp" "maybe param" "maybe type" "temp"
          (909881 'move' call_tmp[909878](273671 call ! call_tmp[909873]))
          unknown call_tmp[909883] "expr temp" "maybe param" "maybe type" "temp"
          (909886 'move' call_tmp[909883](273679 call _cond_test call_tmp[909878]))
          if call_tmp[909883]
          {
            (273669 call(273666 call (partial) dsiRemove _mt[203] lhs[273632]) i[273654])
            (565453 'end of statement' i[273654])
          }
        }
        label _continueLabel[273688]
        _indexOfInterest[273683]
        _iterator[273684]
      }
      label _breakLabel[273689]
    }
    {
      unknown _indexOfInterest[273738] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273739] "expr temp" "temp"
      (273748 'move' _iterator[273739](273746 call _getIterator rhs[273636]))
      Defer
      {
        {
          (273763 call _freeIterator _iterator[273739])
        }
      }
      { scopeless type
        (273753 'move' _indexOfInterest[273738](273750 call iteratorIndex _iterator[273739]))
      }
      ForLoop[273740]
      {
        unknown i[273715] "index var" "insert auto destroy"
        (565456 'end of statement')
        (273758 'move' i[273715] _indexOfInterest[273738])
        (565457 'end of statement' i[273715])
        {
          unknown call_tmp[909892] "expr temp" "maybe param" "maybe type" "temp"
          (909895 'move' call_tmp[909892](273732 call(273729 call (partial) dsiMember _mt[203] lhs[273632]) i[273715]))
          unknown call_tmp[909897] "expr temp" "maybe param" "maybe type" "temp"
          (909900 'move' call_tmp[909897](273726 call ! call_tmp[909892]))
          unknown call_tmp[909902] "expr temp" "maybe param" "maybe type" "temp"
          (909905 'move' call_tmp[909902](273734 call _cond_test call_tmp[909897]))
          if call_tmp[909902]
          {
            (273724 call(273721 call (partial) dsiAdd _mt[203] lhs[273632]) i[273715])
            (565459 'end of statement' i[273715])
          }
        }
        label _continueLabel[273743]
        _indexOfInterest[273738]
        _iterator[273739]
      }
      label _breakLabel[273744]
    }
    (627284 return _void[46])
  }
  where {
    unknown tmp[502239] "maybe param" "temp"
    unknown call_tmp[909909] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (909912 'move' call_tmp[909909](532554 'typeof' lhs[273632]))
    unknown call_tmp[909914] "expr temp" "maybe param" "maybe type" "temp"
    (909917 'move' call_tmp[909914](273644 call _to_borrowed call_tmp[909909]))
    (502250 'move' tmp[502239](395549 'is_subtype' BaseSparseDom[443022](?) call_tmp[909914]))
    unknown call_tmp[909919] "expr temp" "maybe param" "maybe type" "temp"
    (909922 'move' call_tmp[909919](502252 call _cond_invalid tmp[502239]))
    if call_tmp[909919]
    {
      (502255 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[702790] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[702791] "maybe param" "temp"
    unknown call_tmp[909924] "expr temp" "maybe param" "maybe type" "temp"
    (909927 'move' call_tmp[909924](502240 call isTrue tmp[502239]))
    (702796 'move' tmp[702791](702794 call _cond_test call_tmp[909924]))
    if tmp[702791]
    {
      (702801 'move' tmp[702790](702798 '_paramFoldLogical' tmp[702791] 1))
    }
    {
      unknown tmp[702803] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[909929] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (909932 'move' call_tmp[909929](532556 'typeof' lhs[273632]))
      unknown call_tmp[909934] "expr temp" "maybe param" "maybe type" "temp"
      (909937 'move' call_tmp[909934](273650 call _to_borrowed call_tmp[909929]))
      unknown call_tmp[909939] "expr temp" "maybe param" "maybe type" "temp"
      (909942 'move' call_tmp[909939](395550 'is_subtype' BaseAssociativeDom[443017](?) call_tmp[909934]))
      (702805 'move' tmp[702803](502244 call isTrue call_tmp[909939]))
      (702810 'move' tmp[702790](702807 '_paramFoldLogical' tmp[702791] tmp[702803]))
    }
    (1001644 call chpl_statementLevelSymbol tmp[702790])
  }
  function |writeSerializable[475302]() : _unknown[42] "ImplementsStmt wrapper"
  { writeSerializable[310070] _distribution[268253](?)
    {
    }
    (627288 return _void[46])
  }
  function |readDeserializable[475307]() : _unknown[42] "ImplementsStmt wrapper"
  { readDeserializable[310078] _distribution[268253](?)
    {
    }
    (627292 return _void[46])
  }
  (396930 'used modules list'(267651 'use' ChapelArray[264652])(267653 'use' ChapelRange[129915])(267655 'use' ChapelLocks[85420])(267658 'use' ChapelHashtable[267646]))
}
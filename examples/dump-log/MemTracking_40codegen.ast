AST dump for MemTracking after pass codegen.
Module use list: ChapelStandard CTypes 

{
  function chpl__init_MemTracking[468588](const in arg _ln[9365569]:int(64)[10], in arg _fn[9365571]:int(32)[66]) : void[4] "insert line file info" "module init" "resolved"
  {
    if chpl__init_MemTracking_p[9309363]
    {
      goto _exit_chpl__init_MemTracking[9309398] _exit_chpl__init_MemTracking[9309398]
    }
    ref refIndentLevel[9309384]:_ref(int(32))[1465743] "temp"
    (9309382 call printModuleInit[386886] c"%*s\n" c"MemTracking" 11 _ln[9365569] _fn[9365571])
    (9309388 'move' refIndentLevel[9309384](9309387 'addr of' moduleInitLevel[386877]))
    (9309391 '+=' refIndentLevel[9309384] 1)
    (9309369 'move' chpl__init_MemTracking_p[9309363] 1)
    {
      (9305645 call chpl__init_CTypes[468360] _ln[9365569] _fn[9365571])
    }
    (9305642 call chpl_addModule[311360] c"MemTracking"(9305638 'cast_to_type' chpl__deinit_MemTracking[5658848] chpl_c_fn_ptr[123]) _ln[9365569] _fn[9365571])
    val tmp[653812]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[937809]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937812 'move' call_tmp[937809](653821 call chpl_config_has_value[52061](1916528 'cast' c_ptrConst(int(8))[1466333] c"memTrack" _ln[9365569] _fn[9365571])(1916536 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350135 'u!' call_tmp[937809])
    {
      (653840 'move' tmp[653812] 0)
    }
    {
      val call_tmp[937824]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937827 'move' call_tmp[937824](653831 call chpl_config_get_value[52079](1916546 'cast' c_ptrConst(int(8))[1466333] c"memTrack" _ln[9365569] _fn[9365571])(1916554 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      (653836 'move' tmp[653812](653834 call _command_line_cast[1916561] call_tmp[937824] _ln[9365569] _fn[9365571]))
    }
    (653814 'move' memTrack[310276] tmp[653812])
    val tmp[653842]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[937829]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937832 'move' call_tmp[937829](653851 call chpl_config_has_value[52061](1916865 'cast' c_ptrConst(int(8))[1466333] c"memStats" _ln[9365569] _fn[9365571])(1916873 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350144 'u!' call_tmp[937829])
    {
      (653870 'move' tmp[653842] 0)
    }
    {
      val call_tmp[937844]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937847 'move' call_tmp[937844](653861 call chpl_config_get_value[52079](1916883 'cast' c_ptrConst(int(8))[1466333] c"memStats" _ln[9365569] _fn[9365571])(1916891 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      (653866 'move' tmp[653842](653864 call _command_line_cast[1916898] call_tmp[937844] _ln[9365569] _fn[9365571]))
    }
    (653844 'move' memStats[310282] tmp[653842])
    val tmp[653872]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[937849]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937852 'move' call_tmp[937849](653881 call chpl_config_has_value[52061](1917202 'cast' c_ptrConst(int(8))[1466333] c"memLeaksByType" _ln[9365569] _fn[9365571])(1917210 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350153 'u!' call_tmp[937849])
    {
      (653900 'move' tmp[653872] 0)
    }
    {
      val call_tmp[937864]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937867 'move' call_tmp[937864](653891 call chpl_config_get_value[52079](1917220 'cast' c_ptrConst(int(8))[1466333] c"memLeaksByType" _ln[9365569] _fn[9365571])(1917228 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      (653896 'move' tmp[653872](653894 call _command_line_cast[1917235] call_tmp[937864] _ln[9365569] _fn[9365571]))
    }
    (653874 'move' memLeaksByType[310288] tmp[653872])
    val tmp[653902]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[937869]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937872 'move' call_tmp[937869](653911 call chpl_config_has_value[52061](1917539 'cast' c_ptrConst(int(8))[1466333] c"memLeaks" _ln[9365569] _fn[9365571])(1917547 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350162 'u!' call_tmp[937869])
    {
      (653930 'move' tmp[653902] 0)
    }
    {
      val call_tmp[937884]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937887 'move' call_tmp[937884](653921 call chpl_config_get_value[52079](1917557 'cast' c_ptrConst(int(8))[1466333] c"memLeaks" _ln[9365569] _fn[9365571])(1917565 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      (653926 'move' tmp[653902](653924 call _command_line_cast[1917572] call_tmp[937884] _ln[9365569] _fn[9365571]))
    }
    (653904 'move' memLeaks[310294] tmp[653902])
    val tmp[653932]:uint(64)[86] "dead after last mention" "temp"
    const-val call_tmp[937889]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937892 'move' call_tmp[937889](653941 call chpl_config_has_value[52061](1917876 'cast' c_ptrConst(int(8))[1466333] c"memMax" _ln[9365569] _fn[9365571])(1917884 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350171 'u!' call_tmp[937889])
    {
      (653960 'move' tmp[653932] 0)
    }
    {
      val call_tmp[937904]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937907 'move' call_tmp[937904](653951 call chpl_config_get_value[52079](1917902 'cast' c_ptrConst(int(8))[1466333] c"memMax" _ln[9365569] _fn[9365571])(1917910 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      (653956 'move' tmp[653932](653954 call _command_line_cast[1917917] call_tmp[937904] _ln[9365569] _fn[9365571]))
    }
    (653934 'move' memMax[310300] tmp[653932])
    val tmp[653962]:uint(64)[86] "dead after last mention" "temp"
    const-val call_tmp[937909]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937912 'move' call_tmp[937909](653971 call chpl_config_has_value[52061](1920084 'cast' c_ptrConst(int(8))[1466333] c"memThreshold" _ln[9365569] _fn[9365571])(1920092 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350180 'u!' call_tmp[937909])
    {
      (653990 'move' tmp[653962] 0)
    }
    {
      val call_tmp[937924]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937927 'move' call_tmp[937924](653981 call chpl_config_get_value[52079](1920110 'cast' c_ptrConst(int(8))[1466333] c"memThreshold" _ln[9365569] _fn[9365571])(1920118 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      (653986 'move' tmp[653962](653984 call _command_line_cast[1920125] call_tmp[937924] _ln[9365569] _fn[9365571]))
    }
    (653964 'move' memThreshold[310306] tmp[653962])
    val tmp[653992]:string[244] "dead after last mention" "temp"
    const-val call_tmp[937929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937932 'move' call_tmp[937929](654001 call chpl_config_has_value[52061](1920429 'cast' c_ptrConst(int(8))[1466333] c"memLog" _ln[9365569] _fn[9365571])(1920437 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350189 'u!' call_tmp[937929])
    {
      (1921426 call init[21321] tmp[653992] _ln[9365569] _fn[9365571])
    }
    {
      val call_tmp[937944]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937947 'move' call_tmp[937944](654011 call chpl_config_get_value[52079](1920447 'cast' c_ptrConst(int(8))[1466333] c"memLog" _ln[9365569] _fn[9365571])(1920455 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      const-val ret_tmp[5557589]:string[244] "temp"
      (654014 call _command_line_cast[1920462] call_tmp[937944] ret_tmp[5557589] _ln[9365569] _fn[9365571])
      (5557592 'move' tmp[653992] ret_tmp[5557589])
    }
    (653994 'move' memLog[310312] tmp[653992])
    val tmp[654022]:string[244] "dead after last mention" "temp"
    const-val call_tmp[937949]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937952 'move' call_tmp[937949](654031 call chpl_config_has_value[52061](1920792 'cast' c_ptrConst(int(8))[1466333] c"memLeaksLog" _ln[9365569] _fn[9365571])(1920800 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350198 'u!' call_tmp[937949])
    {
      (1921431 call init[21321] tmp[654022] _ln[9365569] _fn[9365571])
    }
    {
      val call_tmp[937964]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937967 'move' call_tmp[937964](654041 call chpl_config_get_value[52079](1920810 'cast' c_ptrConst(int(8))[1466333] c"memLeaksLog" _ln[9365569] _fn[9365571])(1920818 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      const-val ret_tmp[5557601]:string[244] "temp"
      (654044 call _command_line_cast[1920825] call_tmp[937964] ret_tmp[5557601] _ln[9365569] _fn[9365571])
      (5557604 'move' tmp[654022] ret_tmp[5557601])
    }
    (654024 'move' memLeaksLog[310317] tmp[654022])
    val tmp[654052]:string[244] "dead after last mention" "temp"
    const-val call_tmp[937969]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (937972 'move' call_tmp[937969](654061 call chpl_config_has_value[52061](1921102 'cast' c_ptrConst(int(8))[1466333] c"memLeaksByDesc" _ln[9365569] _fn[9365571])(1921110 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
    if(7350207 'u!' call_tmp[937969])
    {
      (1921436 call init[21321] tmp[654052] _ln[9365569] _fn[9365571])
    }
    {
      val call_tmp[937984]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (937987 'move' call_tmp[937984](654071 call chpl_config_get_value[52079](1921120 'cast' c_ptrConst(int(8))[1466333] c"memLeaksByDesc" _ln[9365569] _fn[9365571])(1921128 'cast' c_ptrConst(int(8))[1466333] c"Built-in" _ln[9365569] _fn[9365571])))
      const-val ret_tmp[5557613]:string[244] "temp"
      (654074 call _command_line_cast[1921135] call_tmp[937984] ret_tmp[5557613] _ln[9365569] _fn[9365571])
      (5557616 'move' tmp[654052] ret_tmp[5557613])
    }
    (654054 'move' memLeaksByDesc[310322] tmp[654052])
    const-val call_tmp[7854019]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7854021]:owned IllegalArgumentError?[1471812] "temp"
    (7854024 call chpl_checkValue[1818599] memMax[310300] ret_tmp[7854021] _ln[9365569] _fn[9365571])
    (7854027 'move' call_tmp[7854019] ret_tmp[7854021])
    ref i_arg[7854032]:_ref(owned IllegalArgumentError?)[1471821] "temp"
    (7854034 'move' i_arg[7854032](7854036 'set reference' call_tmp[7854019]))
    val call_tmp[7854038]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7854040 'move' call_tmp[7854038](7854043 call borrow[1479886] i_arg[7854032]))
    if(7854059 '!='(7854052 'cast' RootClass[236] call_tmp[7854038] _ln[9365569] _fn[9365571]) nil[32])
    {
      const-val call_tmp[7854064]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7854066]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7854068 'move' coerce_tmp[7854066](7854070 'cast' Error[85511] call_tmp[7854038] _ln[9365569] _fn[9365571]))
      (9342310 '_check_nil' coerce_tmp[7854066] _ln[9365569] _fn[9365571])
      val ret_tmp[7854079]:string[244] "temp"
      (7854081 'virtual method call' message[85497](7854077 'getcid' coerce_tmp[7854066]) coerce_tmp[7854066] ret_tmp[7854079] _ln[9365569] _fn[9365571])
      (7854086 'move' call_tmp[7854064] ret_tmp[7854079])
      (7854090 call safeCastCheckHalt[440] call_tmp[7854064] _ln[9365569] _fn[9365571])
      ref i_x[7854092]:_ref(string)[1466327] "temp"
      (7854094 'move' i_x[7854092](7854096 'set reference' call_tmp[7854064]))
      (7854099 call deinit[21354] i_x[7854092] _ln[9365569] _fn[9365571])
    }
    (7854103 call chpl__autoDestroy[3929258] call_tmp[7854019] _ln[9365569] _fn[9365571])
    (654082 'move' cMemMax[310337] memMax[310300])
    const-val call_tmp[7854113]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7854115]:owned IllegalArgumentError?[1471812] "temp"
    (7854118 call chpl_checkValue[1818599] memThreshold[310306] ret_tmp[7854115] _ln[9365569] _fn[9365571])
    (7854121 'move' call_tmp[7854113] ret_tmp[7854115])
    ref i_arg[7854126]:_ref(owned IllegalArgumentError?)[1471821] "temp"
    (7854128 'move' i_arg[7854126](7854130 'set reference' call_tmp[7854113]))
    val call_tmp[7854132]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7854134 'move' call_tmp[7854132](7854137 call borrow[1479886] i_arg[7854126]))
    if(7854153 '!='(7854146 'cast' RootClass[236] call_tmp[7854132] _ln[9365569] _fn[9365571]) nil[32])
    {
      const-val call_tmp[7854158]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7854160]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7854162 'move' coerce_tmp[7854160](7854164 'cast' Error[85511] call_tmp[7854132] _ln[9365569] _fn[9365571]))
      (9342312 '_check_nil' coerce_tmp[7854160] _ln[9365569] _fn[9365571])
      val ret_tmp[7854173]:string[244] "temp"
      (7854175 'virtual method call' message[85497](7854171 'getcid' coerce_tmp[7854160]) coerce_tmp[7854160] ret_tmp[7854173] _ln[9365569] _fn[9365571])
      (7854180 'move' call_tmp[7854158] ret_tmp[7854173])
      (7854184 call safeCastCheckHalt[440] call_tmp[7854158] _ln[9365569] _fn[9365571])
      ref i_x[7854186]:_ref(string)[1466327] "temp"
      (7854188 'move' i_x[7854186](7854190 'set reference' call_tmp[7854158]))
      (7854193 call deinit[21354] i_x[7854186] _ln[9365569] _fn[9365571])
    }
    (7854197 call chpl__autoDestroy[3929258] call_tmp[7854113] _ln[9365569] _fn[9365571])
    (654084 'move' cMemThreshold[310328] memThreshold[310306])
    (9309394 '-=' refIndentLevel[9309384] 1)
    label _exit_chpl__init_MemTracking[9309398]
    (631349 return _void[46])
  }
  const-val memTrack[310276]:bool[19] "config" "const" "insert auto destroy" "@unstable"
  const-val memStats[310282]:bool[19] "config" "const" "insert auto destroy" "@unstable"
  const-val memLeaksByType[310288]:bool[19] "config" "const" "insert auto destroy" "@unstable"
  const-val memLeaks[310294]:bool[19] "config" "const" "insert auto destroy" "@unstable"
  const-val memMax[310300]:uint(64)[86] "config" "const" "insert auto destroy" "@unstable"
  const-val memThreshold[310306]:uint(64)[86] "config" "const" "insert auto destroy" "@unstable"
  const-val memLog[310312]:string[244] "config" "const" "insert auto destroy" "@unstable"
  const-val memLeaksLog[310317]:string[244] "config" "const" "insert auto destroy" "no auto destroy" "@unstable"
  const-val memLeaksByDesc[310322]:string[244] "config" "const" "insert auto destroy" "no auto destroy" "@unstable"
  const-val cMemMax[310337]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
  const-val cMemThreshold[310328]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
  function chpl_memTracking_returnConfigVals[310346](ref arg ret_memTrack[310349]:_ref(bool)[1466299], ref arg ret_memStats[310353]:_ref(bool)[1466299], ref arg ret_memLeaksByType[310357]:_ref(bool)[1466299], ref arg ret_memLeaksByDesc[310363]:_ref(c_ptrConst(int(8)))[1466342], ref arg ret_memLeaks[310367]:_ref(bool)[1466299], ref arg ret_memMax[310371]:_ref(uint(64))[1465718], ref arg ret_memThreshold[310375]:_ref(uint(64))[1465718], ref arg ret_memLog[310381]:_ref(c_ptrConst(int(8)))[1466342], ref arg ret_memLeaksLog[310387]:_ref(c_ptrConst(int(8)))[1466342]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val local_memLeaksLog[9284318]:string[244] "temp"
    (9284319 'move' local_memLeaksLog[9284318] memLeaksLog[310317])
    const-val local_memLog[9284311]:string[244] "temp"
    (9284312 'move' local_memLog[9284311] memLog[310312])
    const-val local_memLeaksByDesc[9284304]:string[244] "temp"
    (9284305 'move' local_memLeaksByDesc[9284304] memLeaksByDesc[310322])
    const-val local_cMemThreshold[9284298]:uint(64)[86] "temp"
    (9284299 'move' local_cMemThreshold[9284298] cMemThreshold[310328])
    const-val local_cMemMax[9284292]:uint(64)[86] "temp"
    (9284293 'move' local_cMemMax[9284292] cMemMax[310337])
    const-val local_memLeaks[9284286]:bool[19] "temp"
    (9284287 'move' local_memLeaks[9284286] memLeaks[310294])
    const-val local_memLeaksByType[9284280]:bool[19] "temp"
    (9284281 'move' local_memLeaksByType[9284280] memLeaksByType[310288])
    const-val local_memStats[9284274]:bool[19] "temp"
    (9284275 'move' local_memStats[9284274] memStats[310282])
    (7394423 '=' ret_memTrack[310349] memTrack[310276])
    (7394429 '=' ret_memStats[310353] local_memStats[9284274])
    (7394435 '=' ret_memLeaksByType[310357] local_memLeaksByType[9284280])
    (7394441 '=' ret_memLeaks[310367] local_memLeaks[9284286])
    (7490598 '=' ret_memMax[310371] local_cMemMax[9284292])
    (7490604 '=' ret_memThreshold[310375] local_cMemThreshold[9284298])
    const-val call_tmp[938003]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7530483]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7530485]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7530487 'move' call_tmp[7530485](7530490 call chpl_nodeID[305038]))
    (7530499 'move' call_tmp[7530483](7530496 call chpl_rt_buildLocaleID[306484] call_tmp[7530485] c_sublocid_any[135202]))
    const-val ret_tmp[7530504]:locale[234] "temp"
    (7530507 call chpl_localeID_to_locale[137251] call_tmp[7530483] ret_tmp[7530504] 96 80)
    (5543085 'move' call_tmp[938003] ret_tmp[7530504])
    val coerce_tmp[7550713]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7550715 'move' coerce_tmp[7550713](7550717 '.v' call_tmp[938003] _instance[135293]))
    if(7550731 '=='(7550724 'cast' RootClass[236] coerce_tmp[7550713] 96 80) nil[32])
    {
      (7550737 call nilCheckHalt[392] "argument to ! is nil" 96 80)
    }
    const-val call_tmp[7550740]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (9339066 '_check_nil' coerce_tmp[7550713] 96 80)
    (7550742 'move' call_tmp[7550740](7550745 call id[135878] coerce_tmp[7550713] 96 80))
    if(7496426 '!=' call_tmp[7550740] 0)
    {
      if(7351980 'u!'(7402268 '=='(7402261 '.v' local_memLeaksByDesc[9284304] buffLen[21281]) 0))
      {
        val local_memLeaksByDesc[310418]:string[244] "dead at end of block" "insert auto destroy"
        (654086 call init=[21330] local_memLeaksByDesc[310418] local_memLeaksByDesc[9284304] 98 80)
        (9196645 '.=' local_memLeaksByDesc[310418] isOwned[21305] 0)
        (7489679 'noop')
        (8585581 '=' ret_memLeaksByDesc[310363](7489684 'cast' c_ptrConst(int(8))[1466333](7489676 '.v' local_memLeaksByDesc[310418] buff[21299]) 101 80))
        ref i_x[7335778]:_ref(string)[1466327] "temp"
        (7335782 'move' i_x[7335778](7335780 'set reference' local_memLeaksByDesc[310418]))
        (7335786 call deinit[21354] i_x[7335778] 101 80)
      }
      {
        (8585617 '=' ret_memLeaksByDesc[310363](8585619 'cast' c_ptrConst(int(8))[1466333] nil[32] 103 80))
      }
      if(7351989 'u!'(7402291 '=='(7402284 '.v' local_memLog[9284311] buffLen[21281]) 0))
      {
        val local_memLog[310455]:string[244] "dead at end of block" "insert auto destroy"
        (654088 call init=[21330] local_memLog[310455] local_memLog[9284311] 107 80)
        (9196654 '.=' local_memLog[310455] isOwned[21305] 0)
        (7489703 'noop')
        (8585587 '=' ret_memLog[310381](7489708 'cast' c_ptrConst(int(8))[1466333](7489700 '.v' local_memLog[310455] buff[21299]) 110 80))
        ref i_x[7335790]:_ref(string)[1466327] "temp"
        (7335794 'move' i_x[7335790](7335792 'set reference' local_memLog[310455]))
        (7335798 call deinit[21354] i_x[7335790] 110 80)
      }
      {
        (8585625 '=' ret_memLog[310381](8585627 'cast' c_ptrConst(int(8))[1466333] nil[32] 112 80))
      }
      if(7351998 'u!'(7402314 '=='(7402307 '.v' local_memLeaksLog[9284318] buffLen[21281]) 0))
      {
        val local_memLeaksLog[310492]:string[244] "dead at end of block" "insert auto destroy"
        (654090 call init=[21330] local_memLeaksLog[310492] local_memLeaksLog[9284318] 116 80)
        (9196663 '.=' local_memLeaksLog[310492] isOwned[21305] 0)
        (7489727 'noop')
        (8585593 '=' ret_memLeaksLog[310387](7489732 'cast' c_ptrConst(int(8))[1466333](7489724 '.v' local_memLeaksLog[310492] buff[21299]) 119 80))
        ref i_x[7335802]:_ref(string)[1466327] "temp"
        (7335806 'move' i_x[7335802](7335804 'set reference' local_memLeaksLog[310492]))
        (7335810 call deinit[21354] i_x[7335802] 119 80)
      }
      {
        (8585633 '=' ret_memLeaksLog[310387](8585635 'cast' c_ptrConst(int(8))[1466333] nil[32] 121 80))
      }
    }
    {
      (7489751 'noop')
      (8585599 '=' ret_memLeaksByDesc[310363](7489756 'cast' c_ptrConst(int(8))[1466333](7489748 '.v' local_memLeaksByDesc[9284304] buff[21299]) 125 80))
      (7489775 'noop')
      (8585605 '=' ret_memLog[310381](7489780 'cast' c_ptrConst(int(8))[1466333](7489772 '.v' local_memLog[9284311] buff[21299]) 126 80))
      (7489799 'noop')
      (8585611 '=' ret_memLeaksLog[310387](7489804 'cast' c_ptrConst(int(8))[1466333](7489796 '.v' local_memLeaksLog[9284318] buff[21299]) 127 80))
    }
    ref i_x[7551287]:_ref(locale)[1467958] "temp"
    (7551291 'move' i_x[7551287](7551289 'set reference' call_tmp[938003]))
    (7551295 call deinit[135483] i_x[7551287])
    (631347 return _void[46])
  }
  function chpl__deinit_MemTracking[5658848]:proc()[9305188](const in arg _ln[9522575]:int(64)[10], in arg _fn[9522577]:int(32)[66]) : void[4] "resolved"
  {
    ref i_x[7346170]:_ref(string)[1466327] "temp"
    (7346174 'move' i_x[7346170](7346172 'set reference' memLog[310312]))
    (7346178 call deinit[21354] i_x[7346170] _ln[9522575] _fn[9522577])
    (5658851 return _void[46])
  }
}
AST dump for SyncVarRuntimeSupport after pass createTaskFunctions.
Module use list: ChapelStandard CTypes AlignedTSupport ChplConfig 

{
  function chpl__init_SyncVarRuntimeSupport[468429]() : void[4] "insert line file info" "module init"
  {
    {
    }
    (607909 return _void[46])
  }
  function chpl_sync_aux_t[134565].init[1081669](arg _mt[1081671]:_MT[201], ref arg this[1081672]:chpl_sync_aux_t[134565]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1081676 return _void[46])
  }
  function chpl_sync_aux_t[134565].init=[1081678](arg _mt[1081681]:_MT[201], arg this[1081682]:chpl_sync_aux_t[134565], arg other[1081683]:chpl_sync_aux_t[134565]) : _unknown[42] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1081687 '=' this[1081682] other[1081683])
    (1081691 return _void[46])
  }
  function chpl_sync_aux_t[134565].deinit[1081693](arg _mt[1081695]:_MT[201], arg this[1081697]:chpl_sync_aux_t[134565]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1081705 return _void[46])
  }
  function chpl_sync_aux_t[134565].serialize[1081707](arg _mt[1081711]:_MT[201], arg this[1081709]:chpl_sync_aux_t[134565], arg writer[1081710]:_any[141](?), ref arg serializer[1081715]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1081718 call serializeDefaultImpl writer[1081710] serializer[1081715] this[1081709])
    (1081724 return _void[46])
  }
  function chpl_sync_aux_t[134565].deserialize[1081726](arg _mt[1081730]:_MT[201], ref arg this[1081728]:chpl_sync_aux_t[134565], arg reader[1081729]:_any[141](?), ref arg deserializer[1081735]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1081737] "temp"
    (1081739 'move' _deser_temp[1081737] this[1081728])
    (1081742 call deserializeDefaultImpl reader[1081729] deserializer[1081735] _deser_temp[1081737])
    (1081748 return _void[46])
  }
  function =[1081750](ref arg _arg1[1081752]:chpl_sync_aux_t[134565], arg _arg2[1081753]:chpl_sync_aux_t[134565]) : _unknown[42] "assignop" "compiler generated" "inline" "last resort"
  {
    (1081756 '=' _arg1[1081752] _arg2[1081753])
    (1081761 return _void[46])
  }
  function chpl_sync_aux_t[134565].hash[1081763](arg _mt[1081766]:_MT[201], arg this[1081765]:chpl_sync_aux_t[134565]) : _unknown[42] "compiler generated" "inline" "last resort" "method"
  {
    unknown ret[1081775] "RVV" "temp"
    (1081780 'move' ret[1081775](1081779 'deref' 0))
    (1081777 return ret[1081775])
  }
  function chpl_fields_are_comparable[1081798](arg _arg1[1081800]:chpl_sync_aux_t[134565], arg _arg2[1081801]:chpl_sync_aux_t[134565]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1081810]:bool[19] "RVV" "param" "temp"
    (1081815 'move' ret[1081810](1081814 'deref' 1))
    (1081812 return ret[1081810])
  }
  function chpl_sync_aux_t[134565].==[1081782](arg _mt[1081784]:_MT[201], arg this[1081786]:chpl_sync_aux_t[134565], arg _arg1[1081788]:chpl_sync_aux_t[134565], arg _arg2[1081789]:chpl_sync_aux_t[134565]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1081829]:bool[19] "RVV" "temp"
    (1081834 'move' ret[1081829](1081833 'deref' 1))
    (1081831 return ret[1081829])
  }
  where {
    unknown call_tmp[1081836] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1081839 'move' call_tmp[1081836](1081792 'typeof' _arg1[1081788]))
    unknown call_tmp[1081841] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1081844 'move' call_tmp[1081841](1081794 'typeof' _arg2[1081789]))
    unknown call_tmp[1081846] "expr temp" "maybe param" "maybe type" "temp"
    (1081849 'move' call_tmp[1081846](1081796 call == call_tmp[1081836] call_tmp[1081841]))
    unknown call_tmp[1081851] "expr temp" "maybe param" "maybe type" "temp"
    (1081854 'move' call_tmp[1081851](1081817 call chpl_fields_are_comparable[1081798] _arg1[1081788] _arg2[1081789]))
    (1081821 '&' call_tmp[1081846] call_tmp[1081851])
  }
  function chpl_fields_are_comparable[1081872](arg _arg1[1081874]:chpl_sync_aux_t[134565], arg _arg2[1081875]:chpl_sync_aux_t[134565]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1081884]:bool[19] "RVV" "param" "temp"
    (1081889 'move' ret[1081884](1081888 'deref' 1))
    (1081886 return ret[1081884])
  }
  function chpl_sync_aux_t[134565].!=[1081856](arg _mt[1081858]:_MT[201], arg this[1081860]:chpl_sync_aux_t[134565], arg _arg1[1081862]:chpl_sync_aux_t[134565], arg _arg2[1081863]:chpl_sync_aux_t[134565]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1081903]:bool[19] "RVV" "temp"
    (1081908 'move' ret[1081903](1081907 'deref' 0))
    (1081905 return ret[1081903])
  }
  where {
    unknown call_tmp[1081910] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1081913 'move' call_tmp[1081910](1081866 'typeof' _arg1[1081862]))
    unknown call_tmp[1081915] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1081918 'move' call_tmp[1081915](1081868 'typeof' _arg2[1081863]))
    unknown call_tmp[1081920] "expr temp" "maybe param" "maybe type" "temp"
    (1081923 'move' call_tmp[1081920](1081870 call == call_tmp[1081910] call_tmp[1081915]))
    unknown call_tmp[1081925] "expr temp" "maybe param" "maybe type" "temp"
    (1081928 'move' call_tmp[1081925](1081891 call chpl_fields_are_comparable[1081872] _arg1[1081862] _arg2[1081863]))
    (1081895 '&' call_tmp[1081920] call_tmp[1081925])
  }
  function chpl_fields_are_comparable[1081946](arg _arg1[1081948]:chpl_sync_aux_t[134565], arg _arg2[1081949]:chpl_sync_aux_t[134565]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1081958]:bool[19] "RVV" "param" "temp"
    (1081963 'move' ret[1081958](1081962 'deref' 1))
    (1081960 return ret[1081958])
  }
  function chpl_sync_aux_t[134565].<[1081930](arg _mt[1081932]:_MT[201], arg this[1081934]:chpl_sync_aux_t[134565], arg _arg1[1081936]:chpl_sync_aux_t[134565], arg _arg2[1081937]:chpl_sync_aux_t[134565]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1081977]:bool[19] "RVV" "temp"
    (1081982 'move' ret[1081977](1081981 'deref' 0))
    (1081979 return ret[1081977])
  }
  where {
    unknown call_tmp[1081984] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1081987 'move' call_tmp[1081984](1081940 'typeof' _arg1[1081936]))
    unknown call_tmp[1081989] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1081992 'move' call_tmp[1081989](1081942 'typeof' _arg2[1081937]))
    unknown call_tmp[1081994] "expr temp" "maybe param" "maybe type" "temp"
    (1081997 'move' call_tmp[1081994](1081944 call == call_tmp[1081984] call_tmp[1081989]))
    unknown call_tmp[1081999] "expr temp" "maybe param" "maybe type" "temp"
    (1082002 'move' call_tmp[1081999](1081965 call chpl_fields_are_comparable[1081946] _arg1[1081936] _arg2[1081937]))
    (1081969 '&' call_tmp[1081994] call_tmp[1081999])
  }
  function chpl_fields_are_comparable[1082020](arg _arg1[1082022]:chpl_sync_aux_t[134565], arg _arg2[1082023]:chpl_sync_aux_t[134565]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1082032]:bool[19] "RVV" "param" "temp"
    (1082037 'move' ret[1082032](1082036 'deref' 1))
    (1082034 return ret[1082032])
  }
  function chpl_sync_aux_t[134565].<=[1082004](arg _mt[1082006]:_MT[201], arg this[1082008]:chpl_sync_aux_t[134565], arg _arg1[1082010]:chpl_sync_aux_t[134565], arg _arg2[1082011]:chpl_sync_aux_t[134565]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1082051]:bool[19] "RVV" "temp"
    (1082056 'move' ret[1082051](1082055 'deref' 1))
    (1082053 return ret[1082051])
  }
  where {
    unknown call_tmp[1082058] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1082061 'move' call_tmp[1082058](1082014 'typeof' _arg1[1082010]))
    unknown call_tmp[1082063] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1082066 'move' call_tmp[1082063](1082016 'typeof' _arg2[1082011]))
    unknown call_tmp[1082068] "expr temp" "maybe param" "maybe type" "temp"
    (1082071 'move' call_tmp[1082068](1082018 call == call_tmp[1082058] call_tmp[1082063]))
    unknown call_tmp[1082073] "expr temp" "maybe param" "maybe type" "temp"
    (1082076 'move' call_tmp[1082073](1082039 call chpl_fields_are_comparable[1082020] _arg1[1082010] _arg2[1082011]))
    (1082043 '&' call_tmp[1082068] call_tmp[1082073])
  }
  function chpl_fields_are_comparable[1082094](arg _arg1[1082096]:chpl_sync_aux_t[134565], arg _arg2[1082097]:chpl_sync_aux_t[134565]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1082106]:bool[19] "RVV" "param" "temp"
    (1082111 'move' ret[1082106](1082110 'deref' 1))
    (1082108 return ret[1082106])
  }
  function chpl_sync_aux_t[134565].>[1082078](arg _mt[1082080]:_MT[201], arg this[1082082]:chpl_sync_aux_t[134565], arg _arg1[1082084]:chpl_sync_aux_t[134565], arg _arg2[1082085]:chpl_sync_aux_t[134565]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1082125]:bool[19] "RVV" "temp"
    (1082130 'move' ret[1082125](1082129 'deref' 0))
    (1082127 return ret[1082125])
  }
  where {
    unknown call_tmp[1082132] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1082135 'move' call_tmp[1082132](1082088 'typeof' _arg1[1082084]))
    unknown call_tmp[1082137] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1082140 'move' call_tmp[1082137](1082090 'typeof' _arg2[1082085]))
    unknown call_tmp[1082142] "expr temp" "maybe param" "maybe type" "temp"
    (1082145 'move' call_tmp[1082142](1082092 call == call_tmp[1082132] call_tmp[1082137]))
    unknown call_tmp[1082147] "expr temp" "maybe param" "maybe type" "temp"
    (1082150 'move' call_tmp[1082147](1082113 call chpl_fields_are_comparable[1082094] _arg1[1082084] _arg2[1082085]))
    (1082117 '&' call_tmp[1082142] call_tmp[1082147])
  }
  function chpl_fields_are_comparable[1082168](arg _arg1[1082170]:chpl_sync_aux_t[134565], arg _arg2[1082171]:chpl_sync_aux_t[134565]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1082180]:bool[19] "RVV" "param" "temp"
    (1082185 'move' ret[1082180](1082184 'deref' 1))
    (1082182 return ret[1082180])
  }
  function chpl_sync_aux_t[134565].>=[1082152](arg _mt[1082154]:_MT[201], arg this[1082156]:chpl_sync_aux_t[134565], arg _arg1[1082158]:chpl_sync_aux_t[134565], arg _arg2[1082159]:chpl_sync_aux_t[134565]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1082199]:bool[19] "RVV" "temp"
    (1082204 'move' ret[1082199](1082203 'deref' 1))
    (1082201 return ret[1082199])
  }
  where {
    unknown call_tmp[1082206] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1082209 'move' call_tmp[1082206](1082162 'typeof' _arg1[1082158]))
    unknown call_tmp[1082211] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1082214 'move' call_tmp[1082211](1082164 'typeof' _arg2[1082159]))
    unknown call_tmp[1082216] "expr temp" "maybe param" "maybe type" "temp"
    (1082219 'move' call_tmp[1082216](1082166 call == call_tmp[1082206] call_tmp[1082211]))
    unknown call_tmp[1082221] "expr temp" "maybe param" "maybe type" "temp"
    (1082224 'move' call_tmp[1082221](1082187 call chpl_fields_are_comparable[1082168] _arg1[1082158] _arg2[1082159]))
    (1082191 '&' call_tmp[1082216] call_tmp[1082221])
  }
  type chpl_sync_aux_t[134565]
  function chpl_sync_initAux[134568](ref arg aux[134571]:chpl_sync_aux_t[134565]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function chpl_sync_destroyAux[134576](ref arg aux[134579]:chpl_sync_aux_t[134565]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function chpl_sync_waitEmptyAndLock[134584](ref arg aux[134587]:chpl_sync_aux_t[134565]) : void[4] "extern" "insert line file info" "local args" "no fn body"
  {
  }
  function chpl_sync_waitFullAndLock[134592](ref arg aux[134595]:chpl_sync_aux_t[134565]) : void[4] "extern" "insert line file info" "local args" "no fn body"
  {
  }
  function chpl_sync_lock[134600](ref arg aux[134603]:chpl_sync_aux_t[134565]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function chpl_sync_unlock[134608](ref arg aux[134611]:chpl_sync_aux_t[134565]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function chpl_sync_markAndSignalEmpty[134616](ref arg aux[134619]:chpl_sync_aux_t[134565]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function chpl_sync_markAndSignalFull[134624](ref arg aux[134627]:chpl_sync_aux_t[134565]) : void[4] "extern" "local args" "no fn body"
  {
  }
  function chpl_sync_isFull[134632](arg value[134637] :
  (134635 call c_ptr[46891](?) void[4]), ref arg aux[134641]:chpl_sync_aux_t[134565]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    bool[19]
  }
  function supportsNativeSyncVar[134648](arg t[134650]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[607902] "RVV" "param" "temp"
    unknown tmp[487707] "maybe param" "temp"
    unknown tmp[487728] "maybe param" "temp"
    (487739 'move' tmp[487728](134661 call == CHPL_TASKS[29761] "qthreads"))
    unknown call_tmp[807946] "expr temp" "maybe param" "maybe type" "temp"
    (807949 'move' call_tmp[807946](487741 call _cond_invalid tmp[487728]))
    if call_tmp[807946]
    {
      (487744 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[679662] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[679663] "maybe param" "temp"
    unknown call_tmp[807951] "expr temp" "maybe param" "maybe type" "temp"
    (807954 'move' call_tmp[807951](487729 call isTrue tmp[487728]))
    (679668 'move' tmp[679663](679666 call _cond_test call_tmp[807951]))
    if tmp[679663]
    {
      unknown tmp[679670] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[807956] "expr temp" "maybe param" "maybe type" "temp"
      (807959 'move' call_tmp[807956](134668 call castableToAlignedT t[134650]))
      (679672 'move' tmp[679670](487732 call isTrue call_tmp[807956]))
      (679677 'move' tmp[679662](679674 '_paramFoldLogical' tmp[679663] tmp[679670]))
    }
    {
      (679682 'move' tmp[679662](679679 '_paramFoldLogical' tmp[679663] 0))
    }
    (487718 'move' tmp[487707] tmp[679662])
    unknown call_tmp[807961] "expr temp" "maybe param" "maybe type" "temp"
    (807964 'move' call_tmp[807961](487720 call _cond_invalid tmp[487707]))
    if call_tmp[807961]
    {
      (487723 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[679689] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[679690] "maybe param" "temp"
    unknown call_tmp[807966] "expr temp" "maybe param" "maybe type" "temp"
    (807969 'move' call_tmp[807966](487708 call isTrue tmp[487707]))
    (679695 'move' tmp[679690](679693 call _cond_test call_tmp[807966]))
    if tmp[679690]
    {
      unknown tmp[679697] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[807971] "expr temp" "maybe param" "maybe type" "temp"
      (807974 'move' call_tmp[807971](134673 call numBits c_uintptr[602]))
      unknown call_tmp[807976] "expr temp" "maybe param" "maybe type" "temp"
      (807979 'move' call_tmp[807976](134670 call == call_tmp[807971] 64))
      (679699 'move' tmp[679697](487711 call isTrue call_tmp[807976]))
      (679704 'move' tmp[679689](679701 '_paramFoldLogical' tmp[679690] tmp[679697]))
    }
    {
      (679709 'move' tmp[679689](679706 '_paramFoldLogical' tmp[679690] 0))
    }
    (607907 'move' ret[607902](607906 'deref' tmp[679689]))
    (607904 return ret[607902])
    (396150 'used modules list'(134654 'use' ChplConfig[29952]))
  }
  function qthread_readFE[134678](ref arg dest[134681]:aligned_t[134813], const  ref arg src[134685]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_readFF[134692](ref arg dest[134695]:aligned_t[134813], const  ref arg src[134699]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_readXX[134706](ref arg dest[134709]:aligned_t[134813], const  ref arg src[134713]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_writeEF[134720](ref arg dest[134723]:aligned_t[134813], const  ref arg src[134727]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_writeFF[134734](ref arg dest[134737]:aligned_t[134813], const  ref arg src[134741]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_writeF[134748](ref arg dest[134751]:aligned_t[134813], const  ref arg src[134755]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_purge_to[134762](ref arg dest[134765]:aligned_t[134813], const  ref arg src[134769]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_empty[134776](const  ref arg dest[134779]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_fill[134786](const  ref arg dest[134789]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qthread_feb_status[134796](const  ref arg dest[134799]:aligned_t[134813]) : _unknown[42] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_int[522]
  }
  (396145 'used modules list'(134554 'use' ChapelStandard[315387])(134556 'use' CTypes[51217])(134558 'use' AlignedTSupport[135010])(134561 'use' CTypes[51217]))
}
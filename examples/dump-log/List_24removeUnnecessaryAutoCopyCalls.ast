AST dump for List after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard ChapelLocks HaltWrappers Math Sort IO Reflection 

{
  function chpl__init_List[468483]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (649713 'move' _initialCapacity[225849] 8)
    (649715 'move' _initialArrayCapacity[225854] 16)
    (622168 return _void[46])
  }
  const-val _initialCapacity[225849]:int(64)[10] "dead at end of block" "const" "insert auto destroy" "private"
  const-val _initialArrayCapacity[225854]:int(64)[10] "dead at end of block" "const" "insert auto destroy" "private"
  function _sanity[225863](const in arg expr[225866]:bool[19]) : void[4] "inline" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[875718]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (621439 return _void[46])
  }
  function list(string,false)[1950598].init[1950142](ref arg this[1950146]:list(string,false)[1950598]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5478528]:string[244] "temp"
    val eltType[1950158]:string[244] "dead after last mention" "temp" "type variable"
    val parSafe[1950168]:bool[19] "dead after last mention" "param" "temp"
    val _size[1950178]:int(64)[10] "dead after last mention" "temp"
    (1950180 'move' _size[1950178] 0)
    (1950183 '.=' this[1950146] _size[1950567] _size[1950178])
    val tmp[1950192]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1950194]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1950234]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1950241]:_ddata(string)[1950629] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1950248]:_ddata(_ddata(string))[1950652] "dead after last mention" "maybe param" "temp" "type variable"
    val _arrays[1950255]:_ddata(_ddata(string))[1950652] "dead after last mention" "temp"
    val init_coerce_tmp[1950672]:_ddata(_ddata(string))[1950652] "dead after last mention" "temp"
    (1954964 '=' init_coerce_tmp[1950672](1954960 'cast' _ddata(_ddata(string))[1950652] nil[32]))
    (1950257 'move' _arrays[1950255] init_coerce_tmp[1950672])
    (1950261 '.=' this[1950146] _arrays[1950579] _arrays[1950255])
    val _arrayCapacity[1950266]:int(64)[10] "dead after last mention" "temp"
    (1950268 'move' _arrayCapacity[1950266] 0)
    (1950271 '.=' this[1950146] _arrayCapacity[1950587] _arrayCapacity[1950266])
    val _totalCapacity[1950276]:int(64)[10] "dead after last mention" "temp"
    (1950278 'move' _totalCapacity[1950276] 0)
    (1950281 '.=' this[1950146] _totalCapacity[1950590] _totalCapacity[1950276])
    val call_tmp[1950288]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1950316 call _firstTimeInitializeArrays[1950796] this[1950146])
    (1950317 return _void[46])
  }
  function list(shared Module(real(32)),false)[1955569].init[1955087](ref arg this[1955091]:list(shared Module(real(32)),false)[1955569]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5478555]:shared Module(real(32))[1955038] "temp"
    val eltType[1955103]:shared Module(real(32))[1955038] "dead after last mention" "temp" "type variable"
    val parSafe[1955113]:bool[19] "dead after last mention" "param" "temp"
    val _size[1955123]:int(64)[10] "dead after last mention" "temp"
    (1955125 'move' _size[1955123] 0)
    (1955128 '.=' this[1955091] _size[1955538] _size[1955123])
    val tmp[1955137]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[1955139]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[1955179]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1955186]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1955193]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "maybe param" "temp" "type variable"
    val _arrays[1955200]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "temp"
    val init_coerce_tmp[1955643]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "temp"
    (1959933 '=' init_coerce_tmp[1955643](1959929 'cast' _ddata(_ddata(shared Module(real(32))))[1955623] nil[32]))
    (1955202 'move' _arrays[1955200] init_coerce_tmp[1955643])
    (1955206 '.=' this[1955091] _arrays[1955550] _arrays[1955200])
    val _arrayCapacity[1955211]:int(64)[10] "dead after last mention" "temp"
    (1955213 'move' _arrayCapacity[1955211] 0)
    (1955216 '.=' this[1955091] _arrayCapacity[1955558] _arrayCapacity[1955211])
    val _totalCapacity[1955221]:int(64)[10] "dead after last mention" "temp"
    (1955223 'move' _totalCapacity[1955221] 0)
    (1955226 '.=' this[1955091] _totalCapacity[1955561] _totalCapacity[1955221])
    val call_tmp[1955233]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1955261 call _firstTimeInitializeArrays[1955767] this[1955091])
    (1955262 return _void[46])
  }
  function list(shared Module(real(64)),false)[3405545].init[3832724](ref arg this[3832728]:list(shared Module(real(64)),false)[3405545]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5480545]:shared Module(real(64))[3405428] "temp"
    val eltType[3832740]:shared Module(real(64))[3405428] "dead after last mention" "temp" "type variable"
    val parSafe[3832750]:bool[19] "dead after last mention" "param" "temp"
    val _size[3832760]:int(64)[10] "dead after last mention" "temp"
    (3832762 'move' _size[3832760] 0)
    (3832765 '.=' this[3832728] _size[3405514] _size[3832760])
    val tmp[3832774]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3832776]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3832816]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3832823]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3832830]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "maybe param" "temp" "type variable"
    val _arrays[3832837]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "temp"
    val init_coerce_tmp[3833162]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "temp"
    (3837342 '=' init_coerce_tmp[3833162](3837338 'cast' _ddata(_ddata(shared Module(real(64))))[3405623] nil[32]))
    (3832839 'move' _arrays[3832837] init_coerce_tmp[3833162])
    (3832843 '.=' this[3832728] _arrays[3405526] _arrays[3832837])
    val _arrayCapacity[3832848]:int(64)[10] "dead after last mention" "temp"
    (3832850 'move' _arrayCapacity[3832848] 0)
    (3832853 '.=' this[3832728] _arrayCapacity[3405534] _arrayCapacity[3832848])
    val _totalCapacity[3832858]:int(64)[10] "dead after last mention" "temp"
    (3832860 'move' _totalCapacity[3832858] 0)
    (3832863 '.=' this[3832728] _totalCapacity[3405537] _totalCapacity[3832858])
    val call_tmp[3832870]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3832898 call _firstTimeInitializeArrays[3833176] this[3832728])
    (3832899 return _void[46])
  }
  function list(string,false)[1950598].init[3377206](ref arg this[3377210]:list(string,false)[1950598]) : void[4] "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    val _formal_type_tmp_[5479985]:string[244] "temp"
    val eltType[3377228]:string[244] "dead after last mention" "temp" "type variable"
    val parSafe[3377238]:bool[19] "dead after last mention" "param" "temp"
    val _size[3377248]:int(64)[10] "dead after last mention" "temp"
    (3377250 'move' _size[3377248] 0)
    (3377253 '.=' this[3377210] _size[1950567] _size[3377248])
    val tmp[3377262]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3377264]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3377304]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3377311]:_ddata(string)[1950629] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3377318]:_ddata(_ddata(string))[1950652] "dead after last mention" "maybe param" "temp" "type variable"
    val _arrays[3377325]:_ddata(_ddata(string))[1950652] "dead after last mention" "temp"
    val init_coerce_tmp[3377425]:_ddata(_ddata(string))[1950652] "dead after last mention" "temp"
    (3377444 '=' init_coerce_tmp[3377425](3377440 'cast' _ddata(_ddata(string))[1950652] nil[32]))
    (3377327 'move' _arrays[3377325] init_coerce_tmp[3377425])
    (3377331 '.=' this[3377210] _arrays[1950579] _arrays[3377325])
    val _arrayCapacity[3377336]:int(64)[10] "dead after last mention" "temp"
    (3377338 'move' _arrayCapacity[3377336] 0)
    (3377341 '.=' this[3377210] _arrayCapacity[1950587] _arrayCapacity[3377336])
    val _totalCapacity[3377346]:int(64)[10] "dead after last mention" "temp"
    (3377348 'move' _totalCapacity[3377346] 0)
    (3377351 '.=' this[3377210] _totalCapacity[1950590] _totalCapacity[3377346])
    val call_tmp[3377358]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3377386 call _firstTimeInitializeArrays[1950796] this[3377210])
    (3377387 return _void[46])
  }
  function _ref(list(string,false))[1950614]._firstTimeInitializeArrays[1950796](ref arg this[1950800]:_ref(list(string,false))[1950614]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1950806]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
    (1950808 'move' call_tmp[1950806](1950811 call _arrays[1950942] this[1950800]))
    const-val call_tmp[1950814]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1950997]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1951001 'move' coerce_tmp[1950997](1950999 'deref' call_tmp[1950806]))
    (1950816 'move' call_tmp[1950814](1950819 call ==[1950970] coerce_tmp[1950997] nil[32]))
    (1950823 call _sanity[225863] call_tmp[1950814])
    const-ref call_tmp[1950826]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1950828 'move' call_tmp[1950826](1950831 call _totalCapacity[1951007] this[1950800]))
    const-val call_tmp[1950834]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1951035]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1951039 'move' coerce_tmp[1951035](1951037 'deref' call_tmp[1950826]))
    (1950836 'move' call_tmp[1950834](1950839 call ==[52746] coerce_tmp[1951035] 0))
    (1950843 call _sanity[225863] call_tmp[1950834])
    const-ref call_tmp[1950846]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1950848 'move' call_tmp[1950846](1950851 call _size[1951043] this[1950800]))
    const-val call_tmp[1950854]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1951071]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1951075 'move' coerce_tmp[1951071](1951073 'deref' call_tmp[1950846]))
    (1950856 'move' call_tmp[1950854](1950859 call ==[52746] coerce_tmp[1951071] 0))
    (1950863 call _sanity[225863] call_tmp[1950854])
    ref call_tmp[1950866]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
    (1950868 'move' call_tmp[1950866](1950871 call _arrays[1950942] this[1950800]))
    val call_tmp[1950874]:_ddata(_ddata(string))[1950652] "dead after last mention" "expr temp" "maybe param" "temp"
    (1950876 'move' call_tmp[1950874](1950882 call _makeBlockArray[1951080] this[1950800] _initialArrayCapacity[225854]))
    (1950885 call =[1951794] call_tmp[1950866] call_tmp[1950874])
    ref call_tmp[1950889]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1950891 'move' call_tmp[1950889](1950894 call _arrayCapacity[1954057] this[1950800]))
    (1950898 call =[52229] call_tmp[1950889] _initialArrayCapacity[225854])
    ref call_tmp[1950902]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[1954087]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "temp"
    (1954089 'move' _this_tmp_[1954087](1950907 call _arrays[1950942] this[1950800]))
    val coerce_tmp[1954125]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1954129 'move' coerce_tmp[1954125](1954127 'deref' _this_tmp_[1954087]))
    (1950904 'move' call_tmp[1950902](1950910 call this[1954094] coerce_tmp[1954125] 0))
    val call_tmp[1950912]:_ddata(string)[1950629] "dead after last mention" "expr temp" "maybe param" "temp"
    (1950914 'move' call_tmp[1950912](1950920 call _makeArray[1954132] this[1950800] _initialCapacity[225849]))
    (1950923 call =[1954708] call_tmp[1950902] call_tmp[1950912])
    ref call_tmp[1950927]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1950929 'move' call_tmp[1950927](1950932 call _totalCapacity[1951007] this[1950800]))
    (1950936 call =[52229] call_tmp[1950927] _initialCapacity[225849])
    (1950939 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._firstTimeInitializeArrays[1955767](ref arg this[1955771]:_ref(list(shared Module(real(32)),false))[1955585]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1955777]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
    (1955779 'move' call_tmp[1955777](1955782 call _arrays[1955913] this[1955771]))
    const-val call_tmp[1955785]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1955968]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1955972 'move' coerce_tmp[1955968](1955970 'deref' call_tmp[1955777]))
    (1955787 'move' call_tmp[1955785](1955790 call ==[1955941] coerce_tmp[1955968] nil[32]))
    (1955794 call _sanity[225863] call_tmp[1955785])
    const-ref call_tmp[1955797]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1955799 'move' call_tmp[1955797](1955802 call _totalCapacity[1955976] this[1955771]))
    const-val call_tmp[1955805]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1956004]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1956008 'move' coerce_tmp[1956004](1956006 'deref' call_tmp[1955797]))
    (1955807 'move' call_tmp[1955805](1955810 call ==[52746] coerce_tmp[1956004] 0))
    (1955814 call _sanity[225863] call_tmp[1955805])
    const-ref call_tmp[1955817]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1955819 'move' call_tmp[1955817](1955822 call _size[1956012] this[1955771]))
    const-val call_tmp[1955825]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1956040]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1956044 'move' coerce_tmp[1956040](1956042 'deref' call_tmp[1955817]))
    (1955827 'move' call_tmp[1955825](1955830 call ==[52746] coerce_tmp[1956040] 0))
    (1955834 call _sanity[225863] call_tmp[1955825])
    ref call_tmp[1955837]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
    (1955839 'move' call_tmp[1955837](1955842 call _arrays[1955913] this[1955771]))
    val call_tmp[1955845]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "expr temp" "maybe param" "temp"
    (1955847 'move' call_tmp[1955845](1955853 call _makeBlockArray[1956049] this[1955771] _initialArrayCapacity[225854]))
    (1955856 call =[1956763] call_tmp[1955837] call_tmp[1955845])
    ref call_tmp[1955860]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1955862 'move' call_tmp[1955860](1955865 call _arrayCapacity[1959026] this[1955771]))
    (1955869 call =[52229] call_tmp[1955860] _initialArrayCapacity[225854])
    ref call_tmp[1955873]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[1959056]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "temp"
    (1959058 'move' _this_tmp_[1959056](1955878 call _arrays[1955913] this[1955771]))
    val coerce_tmp[1959094]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1959098 'move' coerce_tmp[1959094](1959096 'deref' _this_tmp_[1959056]))
    (1955875 'move' call_tmp[1955873](1955881 call this[1959063] coerce_tmp[1959094] 0))
    val call_tmp[1955883]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "expr temp" "maybe param" "temp"
    (1955885 'move' call_tmp[1955883](1955891 call _makeArray[1959101] this[1955771] _initialCapacity[225849]))
    (1955894 call =[1959677] call_tmp[1955873] call_tmp[1955883])
    ref call_tmp[1955898]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1955900 'move' call_tmp[1955898](1955903 call _totalCapacity[1955976] this[1955771]))
    (1955907 call =[52229] call_tmp[1955898] _initialCapacity[225849])
    (1955910 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._firstTimeInitializeArrays[3833176](ref arg this[3833180]:_ref(list(shared Module(real(64)),false))[3405554]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3833186]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
    (3833188 'move' call_tmp[3833186](3833191 call _arrays[3833322] this[3833180]))
    const-val call_tmp[3833194]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3833377]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3833381 'move' coerce_tmp[3833377](3833379 'deref' call_tmp[3833186]))
    (3833196 'move' call_tmp[3833194](3833199 call ==[3833350] coerce_tmp[3833377] nil[32]))
    (3833203 call _sanity[225863] call_tmp[3833194])
    const-ref call_tmp[3833206]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3833208 'move' call_tmp[3833206](3833211 call _totalCapacity[3833385] this[3833180]))
    const-val call_tmp[3833214]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3833413]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3833417 'move' coerce_tmp[3833413](3833415 'deref' call_tmp[3833206]))
    (3833216 'move' call_tmp[3833214](3833219 call ==[52746] coerce_tmp[3833413] 0))
    (3833223 call _sanity[225863] call_tmp[3833214])
    const-ref call_tmp[3833226]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3833228 'move' call_tmp[3833226](3833231 call _size[3833421] this[3833180]))
    const-val call_tmp[3833234]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3833449]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3833453 'move' coerce_tmp[3833449](3833451 'deref' call_tmp[3833226]))
    (3833236 'move' call_tmp[3833234](3833239 call ==[52746] coerce_tmp[3833449] 0))
    (3833243 call _sanity[225863] call_tmp[3833234])
    ref call_tmp[3833246]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
    (3833248 'move' call_tmp[3833246](3833251 call _arrays[3833322] this[3833180]))
    val call_tmp[3833254]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "expr temp" "maybe param" "temp"
    (3833256 'move' call_tmp[3833254](3833262 call _makeBlockArray[3833458] this[3833180] _initialArrayCapacity[225854]))
    (3833265 call =[3834172] call_tmp[3833246] call_tmp[3833254])
    ref call_tmp[3833269]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3833271 'move' call_tmp[3833269](3833274 call _arrayCapacity[3836435] this[3833180]))
    (3833278 call =[52229] call_tmp[3833269] _initialArrayCapacity[225854])
    ref call_tmp[3833282]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3836465]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "temp"
    (3836467 'move' _this_tmp_[3836465](3833287 call _arrays[3833322] this[3833180]))
    val coerce_tmp[3836503]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3836507 'move' coerce_tmp[3836503](3836505 'deref' _this_tmp_[3836465]))
    (3833284 'move' call_tmp[3833282](3833290 call this[3836472] coerce_tmp[3836503] 0))
    val call_tmp[3833292]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "expr temp" "maybe param" "temp"
    (3833294 'move' call_tmp[3833292](3833300 call _makeArray[3836510] this[3833180] _initialCapacity[225849]))
    (3833303 call =[3837086] call_tmp[3833282] call_tmp[3833292])
    ref call_tmp[3833307]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3833309 'move' call_tmp[3833307](3833312 call _totalCapacity[3833385] this[3833180]))
    (3833316 call =[52229] call_tmp[3833307] _initialCapacity[225849])
    (3833319 return _void[46])
  }
  function _ref(list(string,false))[1950614].deinit[4034059](ref arg this[4034063]:_ref(list(string,false))[1950614]) : void[4] "destructor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (4034073 call _fireAllDestructors[3377679] this[4034063])
    (4034079 call _freeAllArrays[3377842] this[4034063])
    const-ref call_tmp[4034081]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4034083 'move' call_tmp[4034081](4034086 call _totalCapacity[1951007] this[4034063]))
    const-val call_tmp[4034089]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4034146]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4034150 'move' coerce_tmp[4034146](4034148 'deref' call_tmp[4034081]))
    (4034091 'move' call_tmp[4034089](4034094 call ==[52746] coerce_tmp[4034146] 0))
    (4034098 call _sanity[225863] call_tmp[4034089])
    const-ref call_tmp[4034101]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4034103 'move' call_tmp[4034101](4034106 call _size[1951043] this[4034063]))
    const-val call_tmp[4034109]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4034155]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4034159 'move' coerce_tmp[4034155](4034157 'deref' call_tmp[4034101]))
    (4034111 'move' call_tmp[4034109](4034114 call ==[52746] coerce_tmp[4034155] 0))
    (4034118 call _sanity[225863] call_tmp[4034109])
    const-ref call_tmp[4034121]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
    (4034123 'move' call_tmp[4034121](4034126 call _arrays[1950942] this[4034063]))
    const-val call_tmp[4034129]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4034164]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4034168 'move' coerce_tmp[4034164](4034166 'deref' call_tmp[4034121]))
    (4034131 'move' call_tmp[4034129](4034134 call ==[1950970] coerce_tmp[4034164] nil[32]))
    (4034138 call _sanity[225863] call_tmp[4034129])
    (4034140 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585].deinit[4038338](ref arg this[4038342]:_ref(list(shared Module(real(32)),false))[1955585]) : void[4] "destructor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (4038352 call _fireAllDestructors[4038422] this[4038342])
    (4038358 call _freeAllArrays[4038585] this[4038342])
    const-ref call_tmp[4038360]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4038362 'move' call_tmp[4038360](4038365 call _totalCapacity[1955976] this[4038342]))
    const-val call_tmp[4038368]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4039149]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4039153 'move' coerce_tmp[4039149](4039151 'deref' call_tmp[4038360]))
    (4038370 'move' call_tmp[4038368](4038373 call ==[52746] coerce_tmp[4039149] 0))
    (4038377 call _sanity[225863] call_tmp[4038368])
    const-ref call_tmp[4038380]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4038382 'move' call_tmp[4038380](4038385 call _size[1956012] this[4038342]))
    const-val call_tmp[4038388]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4039158]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4039162 'move' coerce_tmp[4039158](4039160 'deref' call_tmp[4038380]))
    (4038390 'move' call_tmp[4038388](4038393 call ==[52746] coerce_tmp[4039158] 0))
    (4038397 call _sanity[225863] call_tmp[4038388])
    const-ref call_tmp[4038400]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
    (4038402 'move' call_tmp[4038400](4038405 call _arrays[1955913] this[4038342]))
    const-val call_tmp[4038408]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4039167]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4039171 'move' coerce_tmp[4039167](4039169 'deref' call_tmp[4038400]))
    (4038410 'move' call_tmp[4038408](4038413 call ==[1955941] coerce_tmp[4039167] nil[32]))
    (4038417 call _sanity[225863] call_tmp[4038408])
    (4038419 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554].deinit[4244889](ref arg this[4244893]:_ref(list(shared Module(real(64)),false))[3405554]) : void[4] "destructor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (4244903 call _fireAllDestructors[4244973] this[4244893])
    (4244909 call _freeAllArrays[4245136] this[4244893])
    const-ref call_tmp[4244911]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4244913 'move' call_tmp[4244911](4244916 call _totalCapacity[3833385] this[4244893]))
    const-val call_tmp[4244919]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4245700]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4245704 'move' coerce_tmp[4245700](4245702 'deref' call_tmp[4244911]))
    (4244921 'move' call_tmp[4244919](4244924 call ==[52746] coerce_tmp[4245700] 0))
    (4244928 call _sanity[225863] call_tmp[4244919])
    const-ref call_tmp[4244931]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4244933 'move' call_tmp[4244931](4244936 call _size[3833421] this[4244893]))
    const-val call_tmp[4244939]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4245709]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4245713 'move' coerce_tmp[4245709](4245711 'deref' call_tmp[4244931]))
    (4244941 'move' call_tmp[4244939](4244944 call ==[52746] coerce_tmp[4245709] 0))
    (4244948 call _sanity[225863] call_tmp[4244939])
    const-ref call_tmp[4244951]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
    (4244953 'move' call_tmp[4244951](4244956 call _arrays[3833322] this[4244893]))
    const-val call_tmp[4244959]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4245718]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4245722 'move' coerce_tmp[4245718](4245720 'deref' call_tmp[4244951]))
    (4244961 'move' call_tmp[4244959](4244964 call ==[3833350] coerce_tmp[4245718] nil[32]))
    (4244968 call _sanity[225863] call_tmp[4244959])
    (4244970 return _void[46])
  }
  function _ref(list(string,false))[1950614]._destroy[3377814](const  ref arg this[3377818]:_ref(list(string,false))[1950614], const  ref arg item[3377825]:_ref(string)[1466327]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (3377834 call chpl__autoDestroy[3262688] item[3377825])
    (3377836 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._destroy[4038557](const  ref arg this[4038561]:_ref(list(shared Module(real(32)),false))[1955585], const  ref arg item[4038568]:_ref(shared Module(real(32)))[1955047]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (4038577 call chpl__autoDestroy[3404907] item[4038568])
    (4038579 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._destroy[4245108](const  ref arg this[4245112]:_ref(list(shared Module(real(64)),false))[3405554], const  ref arg item[4245119]:_ref(shared Module(real(64)))[3405437]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (4245128 call chpl__autoDestroy[4242370] item[4245119])
    (4245130 return _void[46])
  }
  function _ref(list(string,false))[1950614]._move[3256443](const  ref arg this[3256447]:_ref(list(string,false))[1950614], const  ref arg src[3256449]:_ref(string)[1466327], ref arg dst[3256454]:_ref(string)[1466327]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "unsafe" "no return value for void"
  {
    (3256469 '=' dst[3256454] src[3256449])
    (3256472 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._move[3410637](const  ref arg this[3410641]:_ref(list(shared Module(real(32)),false))[1955585], const  ref arg src[3410643]:_ref(shared Module(real(32)))[1955047], ref arg dst[3410648]:_ref(shared Module(real(32)))[1955047]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "unsafe" "no return value for void"
  {
    (3410663 '=' dst[3410648] src[3410643])
    (3410666 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._move[3866948](const  ref arg this[3866952]:_ref(list(shared Module(real(64)),false))[3405554], const  ref arg src[3866954]:_ref(shared Module(real(64)))[3405437], ref arg dst[3866959]:_ref(shared Module(real(64)))[3405437]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "unsafe" "no return value for void"
  {
    (3866974 '=' dst[3866959] src[3866954])
    (3866977 return _void[46])
  }
  function _ref(list(string,false))[1950614]._getArrayCapacity[3254718](const  ref arg this[3254722]:_ref(list(string,false))[1950614], const in arg array[3254724]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3254728]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3254736]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3254738 'move' call_tmp[3254736](3254741 call log2[513013] _initialCapacity[225849]))
    const-val call_tmp[3254743]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3254745 'move' call_tmp[3254743](3254748 call +[56587] array[3254724] call_tmp[3254736]))
    const-val exp[3254751]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3254753 'move' exp[3254751] call_tmp[3254743])
    const-val call_tmp[3254757]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3254759 'move' call_tmp[3254757](3254762 call **[3254828] exp[3254751]))
    const-val result[3254765]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3254767 'move' result[3254765] call_tmp[3254757])
    (3256002 '=' ret[3254728] result[3254765])
    gotoReturn _end__getArrayCapacity[3254781] _end__getArrayCapacity[3254781]
    label _end__getArrayCapacity[3254781]
    (3254783 return ret[3254728])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._getArrayCapacity[3410124](const  ref arg this[3410128]:_ref(list(shared Module(real(32)),false))[1955585], const in arg array[3410130]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3410134]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3410142]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3410144 'move' call_tmp[3410142](3410147 call log2[513013] _initialCapacity[225849]))
    const-val call_tmp[3410149]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3410151 'move' call_tmp[3410149](3410154 call +[56587] array[3410130] call_tmp[3410142]))
    const-val exp[3410157]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3410159 'move' exp[3410157] call_tmp[3410149])
    const-val call_tmp[3410163]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3410165 'move' call_tmp[3410163](3410168 call **[3254828] exp[3410157]))
    const-val result[3410171]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3410173 'move' result[3410171] call_tmp[3410163])
    (3410196 '=' ret[3410134] result[3410171])
    gotoReturn _end__getArrayCapacity[3410187] _end__getArrayCapacity[3410187]
    label _end__getArrayCapacity[3410187]
    (3410189 return ret[3410134])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._getArrayCapacity[3866435](const  ref arg this[3866439]:_ref(list(shared Module(real(64)),false))[3405554], const in arg array[3866441]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3866445]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3866453]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866455 'move' call_tmp[3866453](3866458 call log2[513013] _initialCapacity[225849]))
    const-val call_tmp[3866460]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866462 'move' call_tmp[3866460](3866465 call +[56587] array[3866441] call_tmp[3866453]))
    const-val exp[3866468]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866470 'move' exp[3866468] call_tmp[3866460])
    const-val call_tmp[3866474]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866476 'move' call_tmp[3866474](3866479 call **[3254828] exp[3866468]))
    const-val result[3866482]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866484 'move' result[3866482] call_tmp[3866474])
    (3866507 '=' ret[3866445] result[3866482])
    gotoReturn _end__getArrayCapacity[3866498] _end__getArrayCapacity[3866498]
    label _end__getArrayCapacity[3866498]
    (3866500 return ret[3866445])
  }
  function _ref(list(string,false))[1950614]._getArrayIdx[3254308](const  ref arg this[3254312]:_ref(list(string,false))[1950614], const in arg zpos[3254314]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3254318]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3254326]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3254328 'move' call_tmp[3254326](3254331 call +[56587] zpos[3254314] _initialCapacity[225849]))
    const-val adj[3254334]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3254336 'move' adj[3254334] call_tmp[3254326])
    const-val call_tmp[3254340]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3254342 'move' call_tmp[3254340](3254345 call log2[513013] adj[3254334]))
    const-val call_tmp[3254347]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3254349 'move' call_tmp[3254347](3254352 call log2[513013] _initialCapacity[225849]))
    const-val call_tmp[3254354]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3254356 'move' call_tmp[3254354](3254359 call -[57305] call_tmp[3254340] call_tmp[3254347]))
    const-val result[3254362]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3254364 'move' result[3254362] call_tmp[3254354])
    (3254388 '=' ret[3254318] result[3254362])
    gotoReturn _end__getArrayIdx[3254378] _end__getArrayIdx[3254378]
    label _end__getArrayIdx[3254378]
    (3254380 return ret[3254318])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._getArrayIdx[3409761](const  ref arg this[3409765]:_ref(list(shared Module(real(32)),false))[1955585], const in arg zpos[3409767]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3409771]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3409779]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3409781 'move' call_tmp[3409779](3409784 call +[56587] zpos[3409767] _initialCapacity[225849]))
    const-val adj[3409787]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3409789 'move' adj[3409787] call_tmp[3409779])
    const-val call_tmp[3409793]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3409795 'move' call_tmp[3409793](3409798 call log2[513013] adj[3409787]))
    const-val call_tmp[3409800]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3409802 'move' call_tmp[3409800](3409805 call log2[513013] _initialCapacity[225849]))
    const-val call_tmp[3409807]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3409809 'move' call_tmp[3409807](3409812 call -[57305] call_tmp[3409793] call_tmp[3409800]))
    const-val result[3409815]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3409817 'move' result[3409815] call_tmp[3409807])
    (3409841 '=' ret[3409771] result[3409815])
    gotoReturn _end__getArrayIdx[3409831] _end__getArrayIdx[3409831]
    label _end__getArrayIdx[3409831]
    (3409833 return ret[3409771])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._getArrayIdx[3866072](const  ref arg this[3866076]:_ref(list(shared Module(real(64)),false))[3405554], const in arg zpos[3866078]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3866082]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3866090]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866092 'move' call_tmp[3866090](3866095 call +[56587] zpos[3866078] _initialCapacity[225849]))
    const-val adj[3866098]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866100 'move' adj[3866098] call_tmp[3866090])
    const-val call_tmp[3866104]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866106 'move' call_tmp[3866104](3866109 call log2[513013] adj[3866098]))
    const-val call_tmp[3866111]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866113 'move' call_tmp[3866111](3866116 call log2[513013] _initialCapacity[225849]))
    const-val call_tmp[3866118]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866120 'move' call_tmp[3866118](3866123 call -[57305] call_tmp[3866104] call_tmp[3866111]))
    const-val result[3866126]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866128 'move' result[3866126] call_tmp[3866118])
    (3866152 '=' ret[3866082] result[3866126])
    gotoReturn _end__getArrayIdx[3866142] _end__getArrayIdx[3866142]
    label _end__getArrayIdx[3866142]
    (3866144 return ret[3866082])
  }
  function _ref(list(string,false))[1950614]._getLastArrayIdx[3254225](const  ref arg this[3254229]:_ref(list(string,false))[1950614]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3254233]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3254241]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3254243 'move' call_tmp[3254241](3254246 call _size[1951043] this[3254229]))
    const-val call_tmp[3254249]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3254301]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3254305 'move' coerce_tmp[3254301](3254303 'deref' call_tmp[3254241]))
    (3254251 'move' call_tmp[3254249](3254254 call -[1487343] coerce_tmp[3254301]))
    const-val call_tmp[3254257]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3254259 'move' call_tmp[3254257](3254265 call _getArrayIdx[3254308] this[3254229] call_tmp[3254249]))
    const-val result[3254267]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3254269 'move' result[3254267] call_tmp[3254257])
    const-val call_tmp[3254273]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3254275 'move' call_tmp[3254273](3254278 call >=[1495853] result[3254267]))
    (3254282 call _sanity[225863] call_tmp[3254273])
    (3254393 '=' ret[3254233] result[3254267])
    gotoReturn _end__getLastArrayIdx[3254295] _end__getLastArrayIdx[3254295]
    label _end__getLastArrayIdx[3254295]
    (3254297 return ret[3254233])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._getLastArrayIdx[3409678](const  ref arg this[3409682]:_ref(list(shared Module(real(32)),false))[1955585]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3409686]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3409694]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3409696 'move' call_tmp[3409694](3409699 call _size[1956012] this[3409682]))
    const-val call_tmp[3409702]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3409754]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3409758 'move' coerce_tmp[3409754](3409756 'deref' call_tmp[3409694]))
    (3409704 'move' call_tmp[3409702](3409707 call -[1487343] coerce_tmp[3409754]))
    const-val call_tmp[3409710]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3409712 'move' call_tmp[3409710](3409718 call _getArrayIdx[3409761] this[3409682] call_tmp[3409702]))
    const-val result[3409720]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3409722 'move' result[3409720] call_tmp[3409710])
    const-val call_tmp[3409726]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3409728 'move' call_tmp[3409726](3409731 call >=[1495853] result[3409720]))
    (3409735 call _sanity[225863] call_tmp[3409726])
    (3409846 '=' ret[3409686] result[3409720])
    gotoReturn _end__getLastArrayIdx[3409748] _end__getLastArrayIdx[3409748]
    label _end__getLastArrayIdx[3409748]
    (3409750 return ret[3409686])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._getLastArrayIdx[3865989](const  ref arg this[3865993]:_ref(list(shared Module(real(64)),false))[3405554]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3865997]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3866005]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3866007 'move' call_tmp[3866005](3866010 call _size[3833421] this[3865993]))
    const-val call_tmp[3866013]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3866065]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3866069 'move' coerce_tmp[3866065](3866067 'deref' call_tmp[3866005]))
    (3866015 'move' call_tmp[3866013](3866018 call -[1487343] coerce_tmp[3866065]))
    const-val call_tmp[3866021]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866023 'move' call_tmp[3866021](3866029 call _getArrayIdx[3866072] this[3865993] call_tmp[3866013]))
    const-val result[3866031]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866033 'move' result[3866031] call_tmp[3866021])
    const-val call_tmp[3866037]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866039 'move' call_tmp[3866037](3866042 call >=[1495853] result[3866031]))
    (3866046 call _sanity[225863] call_tmp[3866037])
    (3866157 '=' ret[3865997] result[3866031])
    gotoReturn _end__getLastArrayIdx[3866059] _end__getLastArrayIdx[3866059]
    label _end__getLastArrayIdx[3866059]
    (3866061 return ret[3865997])
  }
  function _ref(list(string,false))[1950614]._getItemIdx[3256299](const  ref arg this[3256303]:_ref(list(string,false))[1950614], const in arg zpos[3256305]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3256309]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3256317]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3256319 'move' call_tmp[3256317](3256322 call +[56587] zpos[3256305] _initialCapacity[225849]))
    const-val adj[3256325]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3256327 'move' adj[3256325] call_tmp[3256317])
    const-val call_tmp[3256331]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3256333 'move' call_tmp[3256331](3256336 call log2[513013] adj[3256325]))
    const-val call_tmp[3256338]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3256340 'move' call_tmp[3256338](3256343 call <<[1520334] 1 call_tmp[3256331]))
    const-val call_tmp[3256346]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3256348 'move' call_tmp[3256346](3256351 call ^[64164] adj[3256325] call_tmp[3256338]))
    const-val result[3256354]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3256356 'move' result[3256354] call_tmp[3256346])
    (3256380 '=' ret[3256309] result[3256354])
    gotoReturn _end__getItemIdx[3256370] _end__getItemIdx[3256370]
    label _end__getItemIdx[3256370]
    (3256372 return ret[3256309])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._getItemIdx[3410493](const  ref arg this[3410497]:_ref(list(shared Module(real(32)),false))[1955585], const in arg zpos[3410499]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3410503]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3410511]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3410513 'move' call_tmp[3410511](3410516 call +[56587] zpos[3410499] _initialCapacity[225849]))
    const-val adj[3410519]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3410521 'move' adj[3410519] call_tmp[3410511])
    const-val call_tmp[3410525]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3410527 'move' call_tmp[3410525](3410530 call log2[513013] adj[3410519]))
    const-val call_tmp[3410532]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3410534 'move' call_tmp[3410532](3410537 call <<[1520334] 1 call_tmp[3410525]))
    const-val call_tmp[3410540]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3410542 'move' call_tmp[3410540](3410545 call ^[64164] adj[3410519] call_tmp[3410532]))
    const-val result[3410548]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3410550 'move' result[3410548] call_tmp[3410540])
    (3410574 '=' ret[3410503] result[3410548])
    gotoReturn _end__getItemIdx[3410564] _end__getItemIdx[3410564]
    label _end__getItemIdx[3410564]
    (3410566 return ret[3410503])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._getItemIdx[3866804](const  ref arg this[3866808]:_ref(list(shared Module(real(64)),false))[3405554], const in arg zpos[3866810]:int(64)[10]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3866814]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3866822]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866824 'move' call_tmp[3866822](3866827 call +[56587] zpos[3866810] _initialCapacity[225849]))
    const-val adj[3866830]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866832 'move' adj[3866830] call_tmp[3866822])
    const-val call_tmp[3866836]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866838 'move' call_tmp[3866836](3866841 call log2[513013] adj[3866830]))
    const-val call_tmp[3866843]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866845 'move' call_tmp[3866843](3866848 call <<[1520334] 1 call_tmp[3866836]))
    const-val call_tmp[3866851]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866853 'move' call_tmp[3866851](3866856 call ^[64164] adj[3866830] call_tmp[3866843]))
    const-val result[3866859]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866861 'move' result[3866859] call_tmp[3866851])
    (3866885 '=' ret[3866814] result[3866859])
    gotoReturn _end__getItemIdx[3866875] _end__getItemIdx[3866875]
    label _end__getItemIdx[3866875]
    (3866877 return ret[3866814])
  }
  function _ref(list(string,false))[1950614]._getRef[3256092](const  ref arg this[3256096]:_ref(list(string,false))[1950614], const in arg idx[3256098]:int(64)[10]) ref : _ref(string)[1466327] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3256100]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    const-val tmp[3256108]:bool[19] "dead after last mention" "maybe param" "temp"
    (3256110 'move' tmp[3256108](3256113 call >=[1495853] idx[3256098]))
    val call_tmp[3256116]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3256129]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3256131]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3256133]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3256135 'move' call_tmp[3256133] tmp[3256108])
    (3256140 'move' tmp[3256131] call_tmp[3256133])
    if tmp[3256131]
    {
      const-val tmp[3256147]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[3256149]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (3256151 'move' call_tmp[3256149](3256154 call _totalCapacity[1951007] this[3256096]))
      const-val call_tmp[3256157]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3256290]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3256294 'move' coerce_tmp[3256290](3256292 'deref' call_tmp[3256149]))
      (3256159 'move' call_tmp[3256157](3256162 call <[1469576] idx[3256098] coerce_tmp[3256290]))
      (3256165 'move' tmp[3256147] call_tmp[3256157])
      (3256170 'move' tmp[3256129] tmp[3256147])
    }
    {
      (3256176 'move' tmp[3256129] 0)
    }
    (3256183 call _sanity[225863] tmp[3256129])
    const-val call_tmp[3256186]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3256188 'move' call_tmp[3256186](3256194 call _getArrayIdx[3254308] this[3256096] idx[3256098]))
    const-val arrayIdx[3256196]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3256198 'move' arrayIdx[3256196] call_tmp[3256186])
    const-val call_tmp[3256202]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3256204 'move' call_tmp[3256202](3256210 call _getItemIdx[3256299] this[3256096] idx[3256098]))
    const-val itemIdx[3256212]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3256214 'move' itemIdx[3256212] call_tmp[3256202])
    const-ref call_tmp[3256218]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3256383]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "reference to a const field of 'this'" "reference to a const" "temp"
    (3256385 'move' _this_tmp_[3256383](3256223 call _arrays[1950942] this[3256096]))
    val coerce_tmp[3256390]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3256394 'move' coerce_tmp[3256390](3256392 'deref' _this_tmp_[3256383]))
    (3256220 'move' call_tmp[3256218](3256226 call this[1954094] coerce_tmp[3256390] arrayIdx[3256196]))
    const array[3256228]:_ddata(string)[1950629] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[3256400]:_ddata(string)[1950629] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3256404 'move' coerce_tmp[3256400](3256402 'deref' call_tmp[3256218]))
    (5632010 '=' array[3256228] coerce_tmp[3256400])
    (3256230 'noop')
    const-val call_tmp[3256234]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3256236 'move' call_tmp[3256234](3256239 call !=[3256021] array[3256228] nil[32]))
    (3256243 call _sanity[225863] call_tmp[3256234])
    ref result[3256247]:_ref(string)[1466327] "dead at end of block" "ref var"
    ref call_tmp[3256251]:_ref(string)[1466327] "dead at end of block" "maybe param" "temp"
    (3256253 'move' call_tmp[3256251](3256256 call this[3256411] array[3256228] itemIdx[3256212]))
    (3256258 'move' result[3256247] call_tmp[3256251])
    (3256266 'move' ret[3256100] result[3256247])
    gotoReturn _end__getRef[3256274] _end__getRef[3256274]
    label _end__getRef[3256274]
    (3256276 return ret[3256100])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._getRef[3410286](const  ref arg this[3410290]:_ref(list(shared Module(real(32)),false))[1955585], const in arg idx[3410292]:int(64)[10]) ref : _ref(shared Module(real(32)))[1955047] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3410294]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "RVV" "temp"
    const-val tmp[3410302]:bool[19] "dead after last mention" "maybe param" "temp"
    (3410304 'move' tmp[3410302](3410307 call >=[1495853] idx[3410292]))
    val call_tmp[3410310]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3410323]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3410325]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3410327]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3410329 'move' call_tmp[3410327] tmp[3410302])
    (3410334 'move' tmp[3410325] call_tmp[3410327])
    if tmp[3410325]
    {
      const-val tmp[3410341]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[3410343]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (3410345 'move' call_tmp[3410343](3410348 call _totalCapacity[1955976] this[3410290]))
      const-val call_tmp[3410351]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3410484]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3410488 'move' coerce_tmp[3410484](3410486 'deref' call_tmp[3410343]))
      (3410353 'move' call_tmp[3410351](3410356 call <[1469576] idx[3410292] coerce_tmp[3410484]))
      (3410359 'move' tmp[3410341] call_tmp[3410351])
      (3410364 'move' tmp[3410323] tmp[3410341])
    }
    {
      (3410370 'move' tmp[3410323] 0)
    }
    (3410377 call _sanity[225863] tmp[3410323])
    const-val call_tmp[3410380]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3410382 'move' call_tmp[3410380](3410388 call _getArrayIdx[3409761] this[3410290] idx[3410292]))
    const-val arrayIdx[3410390]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3410392 'move' arrayIdx[3410390] call_tmp[3410380])
    const-val call_tmp[3410396]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3410398 'move' call_tmp[3410396](3410404 call _getItemIdx[3410493] this[3410290] idx[3410292]))
    const-val itemIdx[3410406]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3410408 'move' itemIdx[3410406] call_tmp[3410396])
    const-ref call_tmp[3410412]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3410577]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "reference to a const field of 'this'" "reference to a const" "temp"
    (3410579 'move' _this_tmp_[3410577](3410417 call _arrays[1955913] this[3410290]))
    val coerce_tmp[3410584]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3410588 'move' coerce_tmp[3410584](3410586 'deref' _this_tmp_[3410577]))
    (3410414 'move' call_tmp[3410412](3410420 call this[1959063] coerce_tmp[3410584] arrayIdx[3410390]))
    const array[3410422]:_ddata(shared Module(real(32)))[1955600] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[3410594]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3410598 'move' coerce_tmp[3410594](3410596 'deref' call_tmp[3410412]))
    (5635847 '=' array[3410422] coerce_tmp[3410594])
    (3410424 'noop')
    const-val call_tmp[3410428]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3410430 'move' call_tmp[3410428](3410433 call !=[3410215] array[3410422] nil[32]))
    (3410437 call _sanity[225863] call_tmp[3410428])
    ref result[3410441]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "ref var"
    ref call_tmp[3410445]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "maybe param" "temp"
    (3410447 'move' call_tmp[3410445](3410450 call this[3410605] array[3410422] itemIdx[3410406]))
    (3410452 'move' result[3410441] call_tmp[3410445])
    (3410460 'move' ret[3410294] result[3410441])
    gotoReturn _end__getRef[3410468] _end__getRef[3410468]
    label _end__getRef[3410468]
    (3410470 return ret[3410294])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._getRef[3866597](const  ref arg this[3866601]:_ref(list(shared Module(real(64)),false))[3405554], const in arg idx[3866603]:int(64)[10]) ref : _ref(shared Module(real(64)))[3405437] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3866605]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "RVV" "temp"
    const-val tmp[3866613]:bool[19] "dead after last mention" "maybe param" "temp"
    (3866615 'move' tmp[3866613](3866618 call >=[1495853] idx[3866603]))
    val call_tmp[3866621]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3866634]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3866636]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3866638]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866640 'move' call_tmp[3866638] tmp[3866613])
    (3866645 'move' tmp[3866636] call_tmp[3866638])
    if tmp[3866636]
    {
      const-val tmp[3866652]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[3866654]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (3866656 'move' call_tmp[3866654](3866659 call _totalCapacity[3833385] this[3866601]))
      const-val call_tmp[3866662]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3866795]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3866799 'move' coerce_tmp[3866795](3866797 'deref' call_tmp[3866654]))
      (3866664 'move' call_tmp[3866662](3866667 call <[1469576] idx[3866603] coerce_tmp[3866795]))
      (3866670 'move' tmp[3866652] call_tmp[3866662])
      (3866675 'move' tmp[3866634] tmp[3866652])
    }
    {
      (3866681 'move' tmp[3866634] 0)
    }
    (3866688 call _sanity[225863] tmp[3866634])
    const-val call_tmp[3866691]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866693 'move' call_tmp[3866691](3866699 call _getArrayIdx[3866072] this[3866601] idx[3866603]))
    const-val arrayIdx[3866701]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866703 'move' arrayIdx[3866701] call_tmp[3866691])
    const-val call_tmp[3866707]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3866709 'move' call_tmp[3866707](3866715 call _getItemIdx[3866804] this[3866601] idx[3866603]))
    const-val itemIdx[3866717]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3866719 'move' itemIdx[3866717] call_tmp[3866707])
    const-ref call_tmp[3866723]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
    const-ref _this_tmp_[3866888]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "reference to a const field of 'this'" "reference to a const" "temp"
    (3866890 'move' _this_tmp_[3866888](3866728 call _arrays[3833322] this[3866601]))
    val coerce_tmp[3866895]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3866899 'move' coerce_tmp[3866895](3866897 'deref' _this_tmp_[3866888]))
    (3866725 'move' call_tmp[3866723](3866731 call this[3836472] coerce_tmp[3866895] arrayIdx[3866701]))
    const array[3866733]:_ddata(shared Module(real(64)))[3405600] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[3866905]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3866909 'move' coerce_tmp[3866905](3866907 'deref' call_tmp[3866723]))
    (5642186 '=' array[3866733] coerce_tmp[3866905])
    (3866735 'noop')
    const-val call_tmp[3866739]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3866741 'move' call_tmp[3866739](3866744 call !=[3866526] array[3866733] nil[32]))
    (3866748 call _sanity[225863] call_tmp[3866739])
    ref result[3866752]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "ref var"
    ref call_tmp[3866756]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "maybe param" "temp"
    (3866758 'move' call_tmp[3866756](3866761 call this[3866916] array[3866733] itemIdx[3866717]))
    (3866763 'move' result[3866752] call_tmp[3866756])
    (3866771 'move' ret[3866605] result[3866752])
    gotoReturn _end__getRef[3866779] _end__getRef[3866779]
    label _end__getRef[3866779]
    (3866781 return ret[3866605])
  }
  function _ref(list(string,false))[1950614]._enter[3253463](const  ref arg this[3253467]:_ref(list(string,false))[1950614]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3253473]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3253481]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3253504 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._enter[3408916](const  ref arg this[3408920]:_ref(list(shared Module(real(32)),false))[1955585]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3408926]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3408934]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3408957 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._enter[3865227](const  ref arg this[3865231]:_ref(list(shared Module(real(64)),false))[3405554]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3865237]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3865245]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3865268 return _void[46])
  }
  function _ref(list(string,false))[1950614]._leave[3256485](const  ref arg this[3256489]:_ref(list(string,false))[1950614]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3256495]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3256503]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3256526 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._leave[3410679](const  ref arg this[3410683]:_ref(list(shared Module(real(32)),false))[1955585]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3410689]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3410697]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3410720 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._leave[3866990](const  ref arg this[3866994]:_ref(list(shared Module(real(64)),false))[3405554]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3867000]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3867008]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3867031 return _void[46])
  }
  function _ref(list(string,false))[1950614]._withinBounds[3420710](const  ref arg this[3420714]:_ref(list(string,false))[1950614], const in arg idx[3420716]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3420720]:bool[19] "dead after last mention" "RVV" "temp"
    const-val tmp[3420728]:bool[19] "dead after last mention" "maybe param" "temp"
    (3420730 'move' tmp[3420728](3420733 call >=[1495853] idx[3420716]))
    val call_tmp[3420736]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3420749]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3420751]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[3420753]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3420755 'move' call_tmp[3420753] tmp[3420728])
    (3420760 'move' tmp[3420751] call_tmp[3420753])
    if tmp[3420751]
    {
      const-val tmp[3420767]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[3420769]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (3420771 'move' call_tmp[3420769](3420774 call _size[1951043] this[3420714]))
      const-val call_tmp[3420777]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3420815]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3420819 'move' coerce_tmp[3420815](3420817 'deref' call_tmp[3420769]))
      (3420779 'move' call_tmp[3420777](3420782 call <[1469576] idx[3420716] coerce_tmp[3420815]))
      (3420785 'move' tmp[3420767] call_tmp[3420777])
      (3420790 'move' tmp[3420749] tmp[3420767])
    }
    {
      (3420796 'move' tmp[3420749] 0)
    }
    (3420823 '=' ret[3420720] tmp[3420749])
    (3420807 return ret[3420720])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._withinBounds[5199752](const  ref arg this[5199756]:_ref(list(shared Module(real(32)),false))[1955585], const in arg idx[5199758]:int(64)[10]) : bool[19] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[5199762]:bool[19] "dead after last mention" "RVV" "temp"
    const-val tmp[5199770]:bool[19] "dead after last mention" "maybe param" "temp"
    (5199772 'move' tmp[5199770](5199775 call >=[1495853] idx[5199758]))
    val call_tmp[5199778]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[5199791]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[5199793]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[5199795]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (5199797 'move' call_tmp[5199795] tmp[5199770])
    (5199802 'move' tmp[5199793] call_tmp[5199795])
    if tmp[5199793]
    {
      const-val tmp[5199809]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[5199811]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
      (5199813 'move' call_tmp[5199811](5199816 call _size[1956012] this[5199756]))
      const-val call_tmp[5199819]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[5199857]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (5199861 'move' coerce_tmp[5199857](5199859 'deref' call_tmp[5199811]))
      (5199821 'move' call_tmp[5199819](5199824 call <[1469576] idx[5199758] coerce_tmp[5199857]))
      (5199827 'move' tmp[5199809] call_tmp[5199819])
      (5199832 'move' tmp[5199791] tmp[5199809])
    }
    {
      (5199838 'move' tmp[5199791] 0)
    }
    (5199865 '=' ret[5199762] tmp[5199791])
    (5199849 return ret[5199762])
  }
  function _ref(list(string,false))[1950614]._makeBlockArray[1951080](const  ref arg this[1951084]:_ref(list(string,false))[1950614], const in arg size[1951086]:int(64)[10]) : _ddata(_ddata(string))[1950652] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1951088]:_ddata(_ddata(string))[1950652] "dead after last mention" "RVV" "temp"
    val call_tmp[1951096]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1951104]:_ddata(string)[1950629] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1951111]:_ddata(_ddata(string))[1950652] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val default_arg_subloc[1951302]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1951306 'move' default_arg_subloc[1951302](1951304 call _ddata_allocate_default_subloc[1951285]))
    (1951113 'move' call_tmp[1951111](1951116 call _ddata_allocate[1951188] size[1951086] default_arg_subloc[1951302]))
    (1951119 'move' ret[1951088] call_tmp[1951111])
    (1951123 return ret[1951088])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._makeBlockArray[1956049](const  ref arg this[1956053]:_ref(list(shared Module(real(32)),false))[1955585], const in arg size[1956055]:int(64)[10]) : _ddata(_ddata(shared Module(real(32))))[1955623] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1956057]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "RVV" "temp"
    val call_tmp[1956065]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1956073]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1956080]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val default_arg_subloc[1956271]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1956275 'move' default_arg_subloc[1956271](1956273 call _ddata_allocate_default_subloc[1956254]))
    (1956082 'move' call_tmp[1956080](1956085 call _ddata_allocate[1956157] size[1956055] default_arg_subloc[1956271]))
    (1956088 'move' ret[1956057] call_tmp[1956080])
    (1956092 return ret[1956057])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._makeBlockArray[3833458](const  ref arg this[3833462]:_ref(list(shared Module(real(64)),false))[3405554], const in arg size[3833464]:int(64)[10]) : _ddata(_ddata(shared Module(real(64))))[3405623] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3833466]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "RVV" "temp"
    val call_tmp[3833474]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3833482]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3833489]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val default_arg_subloc[3833680]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3833684 'move' default_arg_subloc[3833680](3833682 call _ddata_allocate_default_subloc[3833663]))
    (3833491 'move' call_tmp[3833489](3833494 call _ddata_allocate[3833566] size[3833464] default_arg_subloc[3833680]))
    (3833497 'move' ret[3833466] call_tmp[3833489])
    (3833501 return ret[3833466])
  }
  function _ref(list(string,false))[1950614]._freeBlockArray[3254503](const  ref arg this[3254507]:_ref(list(string,false))[1950614], const in arg data[3254528]:_ddata(_ddata(string))[1950652], const in arg size[3254530]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (3254555 call _ddata_free[3254573] data[3254528] size[3254530])
    (3254558 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._freeBlockArray[3409910](const  ref arg this[3409914]:_ref(list(shared Module(real(32)),false))[1955585], const in arg data[3409935]:_ddata(_ddata(shared Module(real(32))))[1955623], const in arg size[3409937]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (3409962 call _ddata_free[3409980] data[3409935] size[3409937])
    (3409965 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._freeBlockArray[3866221](const  ref arg this[3866225]:_ref(list(shared Module(real(64)),false))[3405554], const in arg data[3866246]:_ddata(_ddata(shared Module(real(64))))[3405623], const in arg size[3866248]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (3866273 call _ddata_free[3866291] data[3866246] size[3866248])
    (3866276 return _void[46])
  }
  function _ref(list(string,false))[1950614]._makeArray[1954132](const  ref arg this[1954136]:_ref(list(string,false))[1950614], const in arg size[1954138]:int(64)[10]) : _ddata(string)[1950629] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1954140]:_ddata(string)[1950629] "dead after last mention" "RVV" "temp"
    val callPostAlloc[1954148]:bool[19] "dead at end of block" "insert auto destroy"
    (1954150 'move' callPostAlloc[1954148] 0)
    val call_tmp[1954154]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1954162]:_ddata(string)[1950629] "dead after last mention" "maybe param" "temp"
    const-val default_arg_subloc[1954355]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1954359 'move' default_arg_subloc[1954355](1954357 call _ddata_allocate_noinit_default_subloc[1954338]))
    val default_arg_haltOnOom[1954381]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[1954389]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (1954164 'move' call_tmp[1954162](1954167 call _ddata_allocate_noinit[1954209] size[1954138] _formal_tmp_out_callPostAlloc[1954389] default_arg_subloc[1954355] 1))
    (1954392 call =[52153] callPostAlloc[1954148] _formal_tmp_out_callPostAlloc[1954389])
    val ret[1954171]:_ddata(string)[1950629] "dead at end of block" "insert auto destroy"
    (1954173 'move' ret[1954171] call_tmp[1954162])
    const-val call_tmp[1954178]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1954180 'move' call_tmp[1954178] callPostAlloc[1954148])
    if call_tmp[1954178]
    {
      (1954188 call _ddata_allocate_postalloc[1954839] ret[1954171] size[1954138])
    }
    (1954194 'move' ret[1954140] ret[1954171])
    gotoReturn _end__makeArray[1954202] _end__makeArray[1954202]
    label _end__makeArray[1954202]
    (1954204 return ret[1954140])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._makeArray[1959101](const  ref arg this[1959105]:_ref(list(shared Module(real(32)),false))[1955585], const in arg size[1959107]:int(64)[10]) : _ddata(shared Module(real(32)))[1955600] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1959109]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "RVV" "temp"
    val callPostAlloc[1959117]:bool[19] "dead at end of block" "insert auto destroy"
    (1959119 'move' callPostAlloc[1959117] 0)
    val call_tmp[1959123]:shared Module(real(32))[1955038] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1959131]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "maybe param" "temp"
    const-val default_arg_subloc[1959324]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1959328 'move' default_arg_subloc[1959324](1959326 call _ddata_allocate_noinit_default_subloc[1959307]))
    val default_arg_haltOnOom[1959350]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[1959358]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (1959133 'move' call_tmp[1959131](1959136 call _ddata_allocate_noinit[1959178] size[1959107] _formal_tmp_out_callPostAlloc[1959358] default_arg_subloc[1959324] 1))
    (1959361 call =[52153] callPostAlloc[1959117] _formal_tmp_out_callPostAlloc[1959358])
    val ret[1959140]:_ddata(shared Module(real(32)))[1955600] "dead at end of block" "insert auto destroy"
    (1959142 'move' ret[1959140] call_tmp[1959131])
    const-val call_tmp[1959147]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (1959149 'move' call_tmp[1959147] callPostAlloc[1959117])
    if call_tmp[1959147]
    {
      (1959157 call _ddata_allocate_postalloc[1959808] ret[1959140] size[1959107])
    }
    (1959163 'move' ret[1959109] ret[1959140])
    gotoReturn _end__makeArray[1959171] _end__makeArray[1959171]
    label _end__makeArray[1959171]
    (1959173 return ret[1959109])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._makeArray[3836510](const  ref arg this[3836514]:_ref(list(shared Module(real(64)),false))[3405554], const in arg size[3836516]:int(64)[10]) : _ddata(shared Module(real(64)))[3405600] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[3836518]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "RVV" "temp"
    val callPostAlloc[3836526]:bool[19] "dead at end of block" "insert auto destroy"
    (3836528 'move' callPostAlloc[3836526] 0)
    val call_tmp[3836532]:shared Module(real(64))[3405428] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3836540]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "maybe param" "temp"
    const-val default_arg_subloc[3836733]:int(32)[66] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3836737 'move' default_arg_subloc[3836733](3836735 call _ddata_allocate_noinit_default_subloc[3836716]))
    val default_arg_haltOnOom[3836759]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val _formal_tmp_out_callPostAlloc[3836767]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (3836542 'move' call_tmp[3836540](3836545 call _ddata_allocate_noinit[3836587] size[3836516] _formal_tmp_out_callPostAlloc[3836767] default_arg_subloc[3836733] 1))
    (3836770 call =[52153] callPostAlloc[3836526] _formal_tmp_out_callPostAlloc[3836767])
    val ret[3836549]:_ddata(shared Module(real(64)))[3405600] "dead at end of block" "insert auto destroy"
    (3836551 'move' ret[3836549] call_tmp[3836540])
    const-val call_tmp[3836556]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3836558 'move' call_tmp[3836556] callPostAlloc[3836526])
    if call_tmp[3836556]
    {
      (3836566 call _ddata_allocate_postalloc[3837217] ret[3836549] size[3836516])
    }
    (3836572 'move' ret[3836518] ret[3836549])
    gotoReturn _end__makeArray[3836580] _end__makeArray[3836580]
    label _end__makeArray[3836580]
    (3836582 return ret[3836518])
  }
  function _ref(list(string,false))[1950614]._freeArray[3378212](const  ref arg this[3378216]:_ref(list(string,false))[1950614], const in arg data[3378230]:_ddata(string)[1950629], const in arg size[3378232]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (3378249 call _ddata_free[3378261] data[3378230] size[3378232])
    (3378252 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._freeArray[4038955](const  ref arg this[4038959]:_ref(list(shared Module(real(32)),false))[1955585], const in arg data[4038973]:_ddata(shared Module(real(32)))[1955600], const in arg size[4038975]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (4038992 call _ddata_free[4039004] data[4038973] size[4038975])
    (4038995 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._freeArray[4245506](const  ref arg this[4245510]:_ref(list(shared Module(real(64)),false))[3405554], const in arg data[4245524]:_ddata(shared Module(real(64)))[3405600], const in arg size[4245526]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (4245543 call _ddata_free[4245555] data[4245524] size[4245526])
    (4245546 return _void[46])
  }
  function _ref(list(string,false))[1950614]._maybeAcquireMem[3253651](ref arg this[3253655]:_ref(list(string,false))[1950614], const in arg amount[3253657]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3253663]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3253665 'move' call_tmp[3253663](3253668 call _totalCapacity[1951007] this[3253655]))
    const-ref call_tmp[3253671]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3253673 'move' call_tmp[3253671](3253676 call _size[1951043] this[3253655]))
    const-val call_tmp[3253679]:int(64)[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3254201]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3254205 'move' coerce_tmp[3254201](3254203 'deref' call_tmp[3253663]))
    const-val coerce_tmp[3254207]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3254211 'move' coerce_tmp[3254207](3254209 'deref' call_tmp[3253671]))
    (3253681 'move' call_tmp[3253679](3253684 call -[57305] coerce_tmp[3254201] coerce_tmp[3254207]))
    const-val remaining[3253687]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3253689 'move' remaining[3253687] call_tmp[3253679])
    const-val call_tmp[3253693]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3253695 'move' call_tmp[3253693](3253698 call >=[1495853] remaining[3253687]))
    (3253702 call _sanity[225863] call_tmp[3253693])
    const-val call_tmp[3253706]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3253708 'move' call_tmp[3253706](3253711 call >=[54627] remaining[3253687] amount[3253657]))
    const-val call_tmp[3253714]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3253716 'move' call_tmp[3253714] call_tmp[3253706])
    if call_tmp[3253714]
    {
      gotoReturn _end__maybeAcquireMem[3254194] _end__maybeAcquireMem[3254194]
    }
    val lastArrayIdx[3253726]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3253728]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3253730]:bool[19] "dead after last mention" "maybe param" "temp"
    const-ref call_tmp[3253732]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3253734 'move' call_tmp[3253732](3253737 call _size[1951043] this[3253655]))
    const-val call_tmp[3253740]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3254218]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3254222 'move' coerce_tmp[3254218](3254220 'deref' call_tmp[3253732]))
    (3253742 'move' call_tmp[3253740](3253745 call ==[52746] coerce_tmp[3254218] 0))
    (3253748 'move' tmp[3253730] call_tmp[3253740])
    if tmp[3253730]
    {
      (3253755 'move' tmp[3253728] 0)
    }
    {
      const-val tmp[3253761]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (3253763 'move' tmp[3253761](3253769 call _getLastArrayIdx[3254225] this[3253655]))
      (3253770 'move' tmp[3253728] tmp[3253761])
    }
    (3253776 'move' lastArrayIdx[3253726] tmp[3253728])
    const-val call_tmp[3253780]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3253782 'move' call_tmp[3253780](3253785 call -[57305] amount[3253657] remaining[3253687]))
    val req[3253788]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3253790 'move' req[3253788] call_tmp[3253780])
    {
      val tmp[3253796]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3253798]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3253800 'move' call_tmp[3253798](3253803 call >[55238] req[3253788] 0))
      (3253806 'move' tmp[3253796] call_tmp[3253798])
      WhileDo[3253811] hazard
      {
        {
          const-ref call_tmp[3253814]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3253816 'move' call_tmp[3253814](3253819 call _arrayCapacity[1954057] this[3253655]))
          const-val call_tmp[3253822]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3254398]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3254402 'move' coerce_tmp[3254398](3254400 'deref' call_tmp[3253814]))
          (3253824 'move' call_tmp[3253822](3253827 call -[1487343] coerce_tmp[3254398]))
          const-val call_tmp[3253830]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3253832 'move' call_tmp[3253830](3253835 call >=[54627] lastArrayIdx[3253726] call_tmp[3253822]))
          const-val call_tmp[3253838]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3253840 'move' call_tmp[3253838] call_tmp[3253830])
          if call_tmp[3253838]
          {
            {
              const-val tmp[3253851]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
              const-val call_tmp[3253853]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
              (3253855 'move' call_tmp[3253853](3253857 '_wide_get_locale' this[3253655]))
              (3253859 'move' tmp[3253851] call_tmp[3253853])
              {
                const-ref call_tmp[3253864]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3253866 'move' call_tmp[3253864](3253869 call _arrayCapacity[1954057] this[3253655]))
                const-val call_tmp[3253872]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3254453]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3254457 'move' coerce_tmp[3254453](3254455 'deref' call_tmp[3253864]))
                (3253874 'move' call_tmp[3253872](3253877 call *[3254422] coerce_tmp[3254453]))
                val call_tmp[3253880]:_ddata(_ddata(string))[1950652] "dead after last mention" "maybe param" "temp"
                (3253882 'move' call_tmp[3253880](3253888 call _makeBlockArray[1951080] this[3253655] call_tmp[3253872]))
                val _narrays[3253890]:_ddata(_ddata(string))[1950652] "dead at end of block" "insert auto destroy"
                (3253892 'move' _narrays[3253890] call_tmp[3253880])
                {
                  val _indexOfInterest[3253897]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[3253899]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[3253901]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  (3253903 'move' call_tmp[3253901](3253906 call _arrayCapacity[1954057] this[3253655]))
                  const-val call_tmp[3253909]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3254466]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (3254470 'move' coerce_tmp[3254466](3254468 'deref' call_tmp[3253901]))
                  const-val ret_tmp[5545982]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                  (3253914 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[3254466] ret_tmp[5545982])
                  (5545985 'move' call_tmp[3253909] ret_tmp[5545982])
                  (3253917 'move' _iterator[3253899](3253920 call _getIterator[1520079] call_tmp[3253909]))
                  {
                    val ret[6051557]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                    val tmp[6051559]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6051561]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6051563]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6051565]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6051567]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6051569]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6051571]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val _indexOfInterest[6051573]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6051575]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6051577]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6051579]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                    const-val low[6051917]:int(64)[10] "temp"
                    (6051922 'move' low[6051917](6051919 '.v' _iterator[3253899] F0_low[6832410]))
                    const-val count[6051924]:int(64)[10] "temp"
                    (6051929 'move' count[6051924](6051926 '.v' _iterator[3253899] F1_count[6832414]))
                    (6051582 call chpl_direct_counted_range_iter_helper[1469227] low[6051917] count[6051924] ret_tmp[6051579])
                    (6051586 'move' call_tmp[6051577] ret_tmp[6051579])
                    (6051589 'move' _iterator[6051575](6051592 call _getIterator[1519812] call_tmp[6051577]))
                    val ret[6051594]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                    val tmp[6051596]:bool[19] "dead after last mention" "maybe param" "temp"
                    val tmp[6051598]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6051600]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6051602]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6051604]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6051606]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6051608]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    val call_tmp[6051610]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6051612]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6051614]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6051616]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val tmp[6051618]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6051620]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6051622]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[6051624]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6051626]:int(64)[10] "temp"
                    (6051628 'move' count[6051626](6051630 '.v' _iterator[6051575] F1_count[6834178]))
                    (6051633 'move' call_tmp[6051624](6051636 call <[1469576] count[6051626] 0))
                    (6051639 'move' tmp[6051622] call_tmp[6051624])
                    (6051642 'move' tmp[6051616] call_tmp[6051624])
                    const-val call_tmp[6051645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (6051647 'move' call_tmp[6051645] call_tmp[6051624])
                    if call_tmp[6051624]
                    {
                      (6051653 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                    }
                    const-val start[6051656]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    const-val low[6051658]:int(64)[10] "temp"
                    (6051660 'move' low[6051658](6051662 '.v' _iterator[6051575] F0_low[6834174]))
                    (6051665 'move' start[6051656] low[6051658])
                    const-val end[6051668]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    val tmp[6051670]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[6051672]:bool[19] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[6051674]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6051676]:int(64)[10] "temp"
                    (6051678 'move' count[6051676](6051680 '.v' _iterator[6051575] F1_count[6834178]))
                    (6051683 'move' call_tmp[6051674](6051686 call ==[52746] count[6051676] 0))
                    (6051689 'move' tmp[6051672] call_tmp[6051674])
                    if call_tmp[6051674]
                    {
                      const-val tmp[6051694]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[6051696]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6051698]:int(64)[10] "temp"
                      (6051700 'move' low[6051698](6051702 '.v' _iterator[6051575] F0_low[6834174]))
                      (6051705 'move' call_tmp[6051696](6051707 'cast' uint(64)[86] low[6051698]))
                      const-val call_tmp[6051710]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[6051712]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6051714 'move' coerce_tmp[6051712](6051716 'cast' uint(64)[86] 1))
                      (6051719 'move' call_tmp[6051710](6051722 call -[1487313] call_tmp[6051696]))
                      val call_tmp[6051724]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6051726 'move' tmp[6051694](6051729 call :[1482043] call_tmp[6051710]))
                      (6051731 'move' tmp[6051670] tmp[6051694])
                    }
                    {
                      const-val tmp[6051735]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      val call_tmp[6051737]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[6051739]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6051741]:int(64)[10] "temp"
                      (6051743 'move' count[6051741](6051745 '.v' _iterator[6051575] F1_count[6834178]))
                      (6051748 'move' call_tmp[6051739] count[6051741])
                      const-val call_tmp[6051751]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6051753]:int(64)[10] "temp"
                      (6051755 'move' count[6051753](6051757 '.v' _iterator[6051575] F1_count[6834178]))
                      (6051760 'move' call_tmp[6051751](6051763 call -[1487343] count[6051753]))
                      const-val call_tmp[6051765]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6051767]:int(64)[10] "temp"
                      (6051769 'move' low[6051767](6051771 '.v' _iterator[6051575] F0_low[6834174]))
                      (6051774 'move' call_tmp[6051765](6051777 call +[56587] low[6051767] call_tmp[6051751]))
                      val call_tmp[6051780]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6051782 'move' tmp[6051735] call_tmp[6051765])
                      (6051785 'move' tmp[6051670] call_tmp[6051765])
                    }
                    (6051789 'move' end[6051668] tmp[6051670])
                    val _indexOfInterest[6051792]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6051794]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6051796]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6051798]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                    (6051801 call chpl_direct_param_stride_range_iter[1517410] start[6051656] tmp[6051670] ret_tmp[6051798])
                    (6051805 'move' call_tmp[6051796] ret_tmp[6051798])
                    (6051808 'move' _iterator[6051794](6051811 call _getIterator[1519541] call_tmp[6051796]))
                    {
                      val ret[6381734]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                      val call_tmp[6381736]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6381738]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6381741 call chpl_range_check_stride[1517730])
                      val i[6381742]:int(64)[10] "dead at end of block" "insert auto destroy"
                      val call_tmp[6381744]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6381746 'move' i[6381742] 0)
                      val call_tmp[6381749]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6381751]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6381753]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6381755]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[6381757]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[6381900]:int(64)[10] "temp"
                      (6381905 'move' low[6381900](6381902 '.v' _iterator[6051794] F0_low[6835591]))
                      (6381759 'move' default_arg_first[6381757](6381762 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6381900]))
                      const-val default_arg_last[6381764]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[6381907]:int(64)[10] "temp"
                      (6381912 'move' high[6381907](6381909 '.v' _iterator[6051794] F1_high[6835595]))
                      (6381766 'move' default_arg_last[6381764](6381769 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6381907]))
                      val default_arg_shouldHalt[6381771]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                      const-val _return_tmp_[6381773]:bool[19] "dead after last mention" "temp"
                      const-val low[6381914]:int(64)[10] "temp"
                      (6381919 'move' low[6381914](6381916 '.v' _iterator[6051794] F0_low[6835591]))
                      const-val high[6381921]:int(64)[10] "temp"
                      (6381926 'move' high[6381921](6381923 '.v' _iterator[6051794] F1_high[6835595]))
                      (6381775 'move' _return_tmp_[6381773](6381778 call chpl_checkIfRangeIterWillOverflow[1518856] low[6381914] high[6381921] 1 default_arg_first[6381757] default_arg_last[6381764] 1))
                      CForLoop[6381785]
                      {
                        const-val yret[6381802]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6381804 'move' yret[6381802] i[6381742])
                        const-val _yieldedIndex[6381818]:int(64)[10] "temp"
                        (6381898 'move' _yieldedIndex[6381818] i[6381742])
                        {
                          const-val i[6381820]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6381822 'move' i[6381820] _yieldedIndex[6381818])
                          const-val yret[6381825]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6381827 'move' yret[6381825] _yieldedIndex[6381818])
                          const-val _yieldedIndex[6381830]:int(64)[10] "temp"
                          (6381832 'move' _yieldedIndex[6381830] _yieldedIndex[6381818])
                          const-val i[6381835]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6381837 'move' i[6381835] _yieldedIndex[6381830])
                          const-val yret[6381840]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6381842 'move' yret[6381840] _yieldedIndex[6381830])
                          const-val _yieldedIndex[6381845]:int(64)[10] "temp"
                          (6381847 'move' _yieldedIndex[6381845] _yieldedIndex[6381830])
                          {
                            const-val i[6381851]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6381853 'move' i[6381851] _yieldedIndex[6381845])
                            ref call_tmp[6381856]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
                            (6381858 'move' call_tmp[6381856](6381861 call this[1954094] _narrays[3253890] i[6381851]))
                            const-ref call_tmp[6381864]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
                            const-ref _this_tmp_[6381866]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "temp"
                            (6381868 'move' _this_tmp_[6381866](6381871 call _arrays[1950942] this[3253655]))
                            val coerce_tmp[6381873]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6381875 'move' coerce_tmp[6381873](6381877 'deref' _this_tmp_[6381866]))
                            (6381879 'move' call_tmp[6381864](6381882 call this[1954094] coerce_tmp[6381873] i[6381851]))
                            val coerce_tmp[6381885]:_ddata(string)[1950629] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6381887 'move' coerce_tmp[6381885](6381889 'deref' call_tmp[6381864]))
                            (6381892 call =[1954708] call_tmp[6381856] coerce_tmp[6381885])
                            label _continueLabel[6381895]
                          }
                        }
                        {
                          const-val low[6381928]:int(64)[10] "temp"
                          (6381933 'move' low[6381928](6381930 '.v' _iterator[6051794] F0_low[6835591]))
                          (6381787 '=' i[6381742] low[6381928])
                        }
                        {
                          const-val high[6381935]:int(64)[10] "temp"
                          (6381940 'move' high[6381935](6381937 '.v' _iterator[6051794] F1_high[6835595]))
                          (6381791 '<=' i[6381742] high[6381935])
                        }
                        {
                          val call_tmp[6381795]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          val call_tmp[6381797]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          (6381799 '+=' i[6381742] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[6381814]
                    }
                    (6051855 call _freeIterator[1519714] _iterator[6051794])
                    label _endchpl_direct_counted_range_iter_helper[6051857]
                    (6051860 call _freeIterator[1519981] _iterator[6051575])
                    label _endchpl_direct_counted_range_iter[6051862]
                  }
                  label _breakLabel[3253970]
                  (5632008 call _freeIterator[1520248] _iterator[3253899])
                }
                const-ref call_tmp[3253972]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
                (3253974 'move' call_tmp[3253972](3253977 call _arrays[1950942] this[3253655]))
                const-ref call_tmp[3253980]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3253982 'move' call_tmp[3253980](3253985 call _arrayCapacity[1954057] this[3253655]))
                val coerce_tmp[3254560]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3254564 'move' coerce_tmp[3254560](3254562 'deref' call_tmp[3253972]))
                const-val coerce_tmp[3254566]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3254570 'move' coerce_tmp[3254566](3254568 'deref' call_tmp[3253980]))
                (3253992 call _freeBlockArray[3254503] this[3253655] coerce_tmp[3254560] coerce_tmp[3254566])
                ref call_tmp[3253996]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
                (3253998 'move' call_tmp[3253996](3254001 call _arrays[1950942] this[3253655]))
                (3254005 call =[1951794] call_tmp[3253996] _narrays[3253890])
                ref call_tmp[3254010]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3254012 'move' call_tmp[3254010](3254015 call _arrayCapacity[1954057] this[3253655]))
                (3254019 call *=[72824] call_tmp[3254010] 2)
              }
            }
          }
          {
            const-val tmp[3254027]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
            const-val call_tmp[3254029]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
            (3254031 'move' call_tmp[3254029](3254033 '_wide_get_locale' this[3253655]))
            (3254035 'move' tmp[3254027] call_tmp[3254029])
            {
              const-ref call_tmp[3254040]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3254694]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "temp"
              (3254696 'move' _this_tmp_[3254694](3254045 call _arrays[1950942] this[3253655]))
              val coerce_tmp[3254701]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3254705 'move' coerce_tmp[3254701](3254703 'deref' _this_tmp_[3254694]))
              (3254042 'move' call_tmp[3254040](3254048 call this[1954094] coerce_tmp[3254701] lastArrayIdx[3253726]))
              const oldLast[3254050]:_ddata(string)[1950629] "dead at end of block" "const" "insert auto destroy"
              val coerce_tmp[3254711]:_ddata(string)[1950629] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (3254715 'move' coerce_tmp[3254711](3254713 'deref' call_tmp[3254040]))
              (5632002 '=' oldLast[3254050] coerce_tmp[3254711])
              (3254052 'noop')
              const-val call_tmp[3254056]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (3254058 'move' call_tmp[3254056](3254064 call _getArrayCapacity[3254718] this[3253655] lastArrayIdx[3253726]))
              const-val oldLastCapacity[3254066]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (3254068 'move' oldLastCapacity[3254066] call_tmp[3254056])
              (3254073 call +=[72190] lastArrayIdx[3253726] 1)
              ref newLast[3254078]:_ref(_ddata(string))[1950638] "dead at end of block" "ref var"
              ref call_tmp[3254082]:_ref(_ddata(string))[1950638] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[3256006]:_ref(_ddata(_ddata(string)))[1950661] "dead at end of block" "temp"
              (3256008 'move' _this_tmp_[3256006](3254087 call _arrays[1950942] this[3253655]))
              val coerce_tmp[3256013]:_ddata(_ddata(string))[1950652] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3256017 'move' coerce_tmp[3256013](3256015 'deref' _this_tmp_[3256006]))
              (3254084 'move' call_tmp[3254082](3254090 call this[1954094] coerce_tmp[3256013] lastArrayIdx[3253726]))
              (3254092 'move' newLast[3254078] call_tmp[3254082])
              const-val call_tmp[3254097]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (3254099 'move' call_tmp[3254097](3254102 call *[3254422] oldLastCapacity[3254066]))
              const-val newLastCapacity[3254105]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (3254107 'move' newLastCapacity[3254105] call_tmp[3254097])
              const-val call_tmp[3254113]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3254115 'move' call_tmp[3254113](3254118 call !=[3256021] oldLast[3254050] nil[32]))
              (3254122 call _sanity[225863] call_tmp[3254113])
              const-val call_tmp[3254126]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3256077]:_ddata(string)[1950629] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3256081 'move' coerce_tmp[3256077](3256079 'deref' newLast[3254078]))
              (3254128 'move' call_tmp[3254126](3254131 call ==[3256050] coerce_tmp[3256077] nil[32]))
              (3254135 call _sanity[225863] call_tmp[3254126])
              val call_tmp[3254139]:_ddata(string)[1950629] "dead after last mention" "expr temp" "maybe param" "temp"
              (3254141 'move' call_tmp[3254139](3254147 call _makeArray[1954132] this[3253655] newLastCapacity[3254105]))
              (3254150 call =[1954708] newLast[3254078] call_tmp[3254139])
              ref call_tmp[3254156]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3254158 'move' call_tmp[3254156](3254161 call _totalCapacity[1951007] this[3253655]))
              (3254165 call +=[72190] call_tmp[3254156] newLastCapacity[3254105])
              (3254171 call -=[72507] req[3253788] newLastCapacity[3254105])
            }
          }
        }
        label _continueLabel[3254177]
        const-val call_tmp[3254179]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3254181 'move' call_tmp[3254179](3254184 call >[55238] req[3253788] 0))
        (3254187 'move' tmp[3253796] call_tmp[3254179])
        tmp[3253796]
      }
      label _breakLabel[3254192]
    }
    label _end__maybeAcquireMem[3254194]
    (3254196 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._maybeAcquireMem[3409104](ref arg this[3409108]:_ref(list(shared Module(real(32)),false))[1955585], const in arg amount[3409110]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3409116]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3409118 'move' call_tmp[3409116](3409121 call _totalCapacity[1955976] this[3409108]))
    const-ref call_tmp[3409124]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3409126 'move' call_tmp[3409124](3409129 call _size[1956012] this[3409108]))
    const-val call_tmp[3409132]:int(64)[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3409654]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3409658 'move' coerce_tmp[3409654](3409656 'deref' call_tmp[3409116]))
    const-val coerce_tmp[3409660]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3409664 'move' coerce_tmp[3409660](3409662 'deref' call_tmp[3409124]))
    (3409134 'move' call_tmp[3409132](3409137 call -[57305] coerce_tmp[3409654] coerce_tmp[3409660]))
    const-val remaining[3409140]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3409142 'move' remaining[3409140] call_tmp[3409132])
    const-val call_tmp[3409146]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3409148 'move' call_tmp[3409146](3409151 call >=[1495853] remaining[3409140]))
    (3409155 call _sanity[225863] call_tmp[3409146])
    const-val call_tmp[3409159]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3409161 'move' call_tmp[3409159](3409164 call >=[54627] remaining[3409140] amount[3409110]))
    const-val call_tmp[3409167]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3409169 'move' call_tmp[3409167] call_tmp[3409159])
    if call_tmp[3409167]
    {
      gotoReturn _end__maybeAcquireMem[3409647] _end__maybeAcquireMem[3409647]
    }
    val lastArrayIdx[3409179]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3409181]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3409183]:bool[19] "dead after last mention" "maybe param" "temp"
    const-ref call_tmp[3409185]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3409187 'move' call_tmp[3409185](3409190 call _size[1956012] this[3409108]))
    const-val call_tmp[3409193]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3409671]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3409675 'move' coerce_tmp[3409671](3409673 'deref' call_tmp[3409185]))
    (3409195 'move' call_tmp[3409193](3409198 call ==[52746] coerce_tmp[3409671] 0))
    (3409201 'move' tmp[3409183] call_tmp[3409193])
    if tmp[3409183]
    {
      (3409208 'move' tmp[3409181] 0)
    }
    {
      const-val tmp[3409214]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (3409216 'move' tmp[3409214](3409222 call _getLastArrayIdx[3409678] this[3409108]))
      (3409223 'move' tmp[3409181] tmp[3409214])
    }
    (3409229 'move' lastArrayIdx[3409179] tmp[3409181])
    const-val call_tmp[3409233]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3409235 'move' call_tmp[3409233](3409238 call -[57305] amount[3409110] remaining[3409140]))
    val req[3409241]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3409243 'move' req[3409241] call_tmp[3409233])
    {
      val tmp[3409249]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3409251]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3409253 'move' call_tmp[3409251](3409256 call >[55238] req[3409241] 0))
      (3409259 'move' tmp[3409249] call_tmp[3409251])
      WhileDo[3409264] hazard
      {
        {
          const-ref call_tmp[3409267]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3409269 'move' call_tmp[3409267](3409272 call _arrayCapacity[1959026] this[3409108]))
          const-val call_tmp[3409275]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3409851]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3409855 'move' coerce_tmp[3409851](3409853 'deref' call_tmp[3409267]))
          (3409277 'move' call_tmp[3409275](3409280 call -[1487343] coerce_tmp[3409851]))
          const-val call_tmp[3409283]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3409285 'move' call_tmp[3409283](3409288 call >=[54627] lastArrayIdx[3409179] call_tmp[3409275]))
          const-val call_tmp[3409291]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3409293 'move' call_tmp[3409291] call_tmp[3409283])
          if call_tmp[3409291]
          {
            {
              const-val tmp[3409304]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
              const-val call_tmp[3409306]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
              (3409308 'move' call_tmp[3409306](3409310 '_wide_get_locale' this[3409108]))
              (3409312 'move' tmp[3409304] call_tmp[3409306])
              {
                const-ref call_tmp[3409317]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3409319 'move' call_tmp[3409317](3409322 call _arrayCapacity[1959026] this[3409108]))
                const-val call_tmp[3409325]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3409860]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3409864 'move' coerce_tmp[3409860](3409862 'deref' call_tmp[3409317]))
                (3409327 'move' call_tmp[3409325](3409330 call *[3254422] coerce_tmp[3409860]))
                val call_tmp[3409333]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "maybe param" "temp"
                (3409335 'move' call_tmp[3409333](3409341 call _makeBlockArray[1956049] this[3409108] call_tmp[3409325]))
                val _narrays[3409343]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead at end of block" "insert auto destroy"
                (3409345 'move' _narrays[3409343] call_tmp[3409333])
                {
                  val _indexOfInterest[3409350]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[3409352]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[3409354]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  (3409356 'move' call_tmp[3409354](3409359 call _arrayCapacity[1959026] this[3409108]))
                  const-val call_tmp[3409362]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3409873]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (3409877 'move' coerce_tmp[3409873](3409875 'deref' call_tmp[3409354]))
                  const-val ret_tmp[5546006]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                  (3409367 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[3409873] ret_tmp[5546006])
                  (5546009 'move' call_tmp[3409362] ret_tmp[5546006])
                  (3409370 'move' _iterator[3409352](3409373 call _getIterator[1520079] call_tmp[3409362]))
                  {
                    val ret[6064245]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                    val tmp[6064247]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6064249]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6064251]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6064253]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6064255]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6064257]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6064259]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val _indexOfInterest[6064261]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6064263]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6064265]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6064267]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                    const-val low[6064605]:int(64)[10] "temp"
                    (6064610 'move' low[6064605](6064607 '.v' _iterator[3409352] F0_low[6832410]))
                    const-val count[6064612]:int(64)[10] "temp"
                    (6064617 'move' count[6064612](6064614 '.v' _iterator[3409352] F1_count[6832414]))
                    (6064270 call chpl_direct_counted_range_iter_helper[1469227] low[6064605] count[6064612] ret_tmp[6064267])
                    (6064274 'move' call_tmp[6064265] ret_tmp[6064267])
                    (6064277 'move' _iterator[6064263](6064280 call _getIterator[1519812] call_tmp[6064265]))
                    val ret[6064282]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                    val tmp[6064284]:bool[19] "dead after last mention" "maybe param" "temp"
                    val tmp[6064286]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6064288]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6064290]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6064292]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6064294]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6064296]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    val call_tmp[6064298]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6064300]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6064302]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6064304]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val tmp[6064306]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6064308]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6064310]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[6064312]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6064314]:int(64)[10] "temp"
                    (6064316 'move' count[6064314](6064318 '.v' _iterator[6064263] F1_count[6834178]))
                    (6064321 'move' call_tmp[6064312](6064324 call <[1469576] count[6064314] 0))
                    (6064327 'move' tmp[6064310] call_tmp[6064312])
                    (6064330 'move' tmp[6064304] call_tmp[6064312])
                    const-val call_tmp[6064333]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (6064335 'move' call_tmp[6064333] call_tmp[6064312])
                    if call_tmp[6064312]
                    {
                      (6064341 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                    }
                    const-val start[6064344]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    const-val low[6064346]:int(64)[10] "temp"
                    (6064348 'move' low[6064346](6064350 '.v' _iterator[6064263] F0_low[6834174]))
                    (6064353 'move' start[6064344] low[6064346])
                    const-val end[6064356]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    val tmp[6064358]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[6064360]:bool[19] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[6064362]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6064364]:int(64)[10] "temp"
                    (6064366 'move' count[6064364](6064368 '.v' _iterator[6064263] F1_count[6834178]))
                    (6064371 'move' call_tmp[6064362](6064374 call ==[52746] count[6064364] 0))
                    (6064377 'move' tmp[6064360] call_tmp[6064362])
                    if call_tmp[6064362]
                    {
                      const-val tmp[6064382]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[6064384]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6064386]:int(64)[10] "temp"
                      (6064388 'move' low[6064386](6064390 '.v' _iterator[6064263] F0_low[6834174]))
                      (6064393 'move' call_tmp[6064384](6064395 'cast' uint(64)[86] low[6064386]))
                      const-val call_tmp[6064398]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[6064400]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6064402 'move' coerce_tmp[6064400](6064404 'cast' uint(64)[86] 1))
                      (6064407 'move' call_tmp[6064398](6064410 call -[1487313] call_tmp[6064384]))
                      val call_tmp[6064412]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6064414 'move' tmp[6064382](6064417 call :[1482043] call_tmp[6064398]))
                      (6064419 'move' tmp[6064358] tmp[6064382])
                    }
                    {
                      const-val tmp[6064423]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      val call_tmp[6064425]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[6064427]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6064429]:int(64)[10] "temp"
                      (6064431 'move' count[6064429](6064433 '.v' _iterator[6064263] F1_count[6834178]))
                      (6064436 'move' call_tmp[6064427] count[6064429])
                      const-val call_tmp[6064439]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6064441]:int(64)[10] "temp"
                      (6064443 'move' count[6064441](6064445 '.v' _iterator[6064263] F1_count[6834178]))
                      (6064448 'move' call_tmp[6064439](6064451 call -[1487343] count[6064441]))
                      const-val call_tmp[6064453]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6064455]:int(64)[10] "temp"
                      (6064457 'move' low[6064455](6064459 '.v' _iterator[6064263] F0_low[6834174]))
                      (6064462 'move' call_tmp[6064453](6064465 call +[56587] low[6064455] call_tmp[6064439]))
                      val call_tmp[6064468]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6064470 'move' tmp[6064423] call_tmp[6064453])
                      (6064473 'move' tmp[6064358] call_tmp[6064453])
                    }
                    (6064477 'move' end[6064356] tmp[6064358])
                    val _indexOfInterest[6064480]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6064482]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6064484]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6064486]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                    (6064489 call chpl_direct_param_stride_range_iter[1517410] start[6064344] tmp[6064358] ret_tmp[6064486])
                    (6064493 'move' call_tmp[6064484] ret_tmp[6064486])
                    (6064496 'move' _iterator[6064482](6064499 call _getIterator[1519541] call_tmp[6064484]))
                    {
                      val ret[6398041]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                      val call_tmp[6398043]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6398045]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6398048 call chpl_range_check_stride[1517730])
                      val i[6398049]:int(64)[10] "dead at end of block" "insert auto destroy"
                      val call_tmp[6398051]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6398053 'move' i[6398049] 0)
                      val call_tmp[6398056]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6398058]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6398060]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6398062]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[6398064]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[6398207]:int(64)[10] "temp"
                      (6398212 'move' low[6398207](6398209 '.v' _iterator[6064482] F0_low[6835591]))
                      (6398066 'move' default_arg_first[6398064](6398069 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6398207]))
                      const-val default_arg_last[6398071]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[6398214]:int(64)[10] "temp"
                      (6398219 'move' high[6398214](6398216 '.v' _iterator[6064482] F1_high[6835595]))
                      (6398073 'move' default_arg_last[6398071](6398076 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6398214]))
                      val default_arg_shouldHalt[6398078]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                      const-val _return_tmp_[6398080]:bool[19] "dead after last mention" "temp"
                      const-val low[6398221]:int(64)[10] "temp"
                      (6398226 'move' low[6398221](6398223 '.v' _iterator[6064482] F0_low[6835591]))
                      const-val high[6398228]:int(64)[10] "temp"
                      (6398233 'move' high[6398228](6398230 '.v' _iterator[6064482] F1_high[6835595]))
                      (6398082 'move' _return_tmp_[6398080](6398085 call chpl_checkIfRangeIterWillOverflow[1518856] low[6398221] high[6398228] 1 default_arg_first[6398064] default_arg_last[6398071] 1))
                      CForLoop[6398092]
                      {
                        const-val yret[6398109]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6398111 'move' yret[6398109] i[6398049])
                        const-val _yieldedIndex[6398125]:int(64)[10] "temp"
                        (6398205 'move' _yieldedIndex[6398125] i[6398049])
                        {
                          const-val i[6398127]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6398129 'move' i[6398127] _yieldedIndex[6398125])
                          const-val yret[6398132]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6398134 'move' yret[6398132] _yieldedIndex[6398125])
                          const-val _yieldedIndex[6398137]:int(64)[10] "temp"
                          (6398139 'move' _yieldedIndex[6398137] _yieldedIndex[6398125])
                          const-val i[6398142]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6398144 'move' i[6398142] _yieldedIndex[6398137])
                          const-val yret[6398147]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6398149 'move' yret[6398147] _yieldedIndex[6398137])
                          const-val _yieldedIndex[6398152]:int(64)[10] "temp"
                          (6398154 'move' _yieldedIndex[6398152] _yieldedIndex[6398137])
                          {
                            const-val i[6398158]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6398160 'move' i[6398158] _yieldedIndex[6398152])
                            ref call_tmp[6398163]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
                            (6398165 'move' call_tmp[6398163](6398168 call this[1959063] _narrays[3409343] i[6398158]))
                            const-ref call_tmp[6398171]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
                            const-ref _this_tmp_[6398173]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "temp"
                            (6398175 'move' _this_tmp_[6398173](6398178 call _arrays[1955913] this[3409108]))
                            val coerce_tmp[6398180]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6398182 'move' coerce_tmp[6398180](6398184 'deref' _this_tmp_[6398173]))
                            (6398186 'move' call_tmp[6398171](6398189 call this[1959063] coerce_tmp[6398180] i[6398158]))
                            val coerce_tmp[6398192]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6398194 'move' coerce_tmp[6398192](6398196 'deref' call_tmp[6398171]))
                            (6398199 call =[1959677] call_tmp[6398163] coerce_tmp[6398192])
                            label _continueLabel[6398202]
                          }
                        }
                        {
                          const-val low[6398235]:int(64)[10] "temp"
                          (6398240 'move' low[6398235](6398237 '.v' _iterator[6064482] F0_low[6835591]))
                          (6398094 '=' i[6398049] low[6398235])
                        }
                        {
                          const-val high[6398242]:int(64)[10] "temp"
                          (6398247 'move' high[6398242](6398244 '.v' _iterator[6064482] F1_high[6835595]))
                          (6398098 '<=' i[6398049] high[6398242])
                        }
                        {
                          val call_tmp[6398102]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          val call_tmp[6398104]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          (6398106 '+=' i[6398049] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[6398121]
                    }
                    (6064543 call _freeIterator[1519714] _iterator[6064482])
                    label _endchpl_direct_counted_range_iter_helper[6064545]
                    (6064548 call _freeIterator[1519981] _iterator[6064263])
                    label _endchpl_direct_counted_range_iter[6064550]
                  }
                  label _breakLabel[3409423]
                  (5635845 call _freeIterator[1520248] _iterator[3409352])
                }
                const-ref call_tmp[3409425]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
                (3409427 'move' call_tmp[3409425](3409430 call _arrays[1955913] this[3409108]))
                const-ref call_tmp[3409433]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3409435 'move' call_tmp[3409433](3409438 call _arrayCapacity[1959026] this[3409108]))
                val coerce_tmp[3409967]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3409971 'move' coerce_tmp[3409967](3409969 'deref' call_tmp[3409425]))
                const-val coerce_tmp[3409973]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3409977 'move' coerce_tmp[3409973](3409975 'deref' call_tmp[3409433]))
                (3409445 call _freeBlockArray[3409910] this[3409108] coerce_tmp[3409967] coerce_tmp[3409973])
                ref call_tmp[3409449]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
                (3409451 'move' call_tmp[3409449](3409454 call _arrays[1955913] this[3409108]))
                (3409458 call =[1956763] call_tmp[3409449] _narrays[3409343])
                ref call_tmp[3409463]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3409465 'move' call_tmp[3409463](3409468 call _arrayCapacity[1959026] this[3409108]))
                (3409472 call *=[72824] call_tmp[3409463] 2)
              }
            }
          }
          {
            const-val tmp[3409480]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
            const-val call_tmp[3409482]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
            (3409484 'move' call_tmp[3409482](3409486 '_wide_get_locale' this[3409108]))
            (3409488 'move' tmp[3409480] call_tmp[3409482])
            {
              const-ref call_tmp[3409493]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3410100]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "temp"
              (3410102 'move' _this_tmp_[3410100](3409498 call _arrays[1955913] this[3409108]))
              val coerce_tmp[3410107]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3410111 'move' coerce_tmp[3410107](3410109 'deref' _this_tmp_[3410100]))
              (3409495 'move' call_tmp[3409493](3409501 call this[1959063] coerce_tmp[3410107] lastArrayIdx[3409179]))
              const oldLast[3409503]:_ddata(shared Module(real(32)))[1955600] "dead at end of block" "const" "insert auto destroy"
              val coerce_tmp[3410117]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (3410121 'move' coerce_tmp[3410117](3410119 'deref' call_tmp[3409493]))
              (5635839 '=' oldLast[3409503] coerce_tmp[3410117])
              (3409505 'noop')
              const-val call_tmp[3409509]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (3409511 'move' call_tmp[3409509](3409517 call _getArrayCapacity[3410124] this[3409108] lastArrayIdx[3409179]))
              const-val oldLastCapacity[3409519]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (3409521 'move' oldLastCapacity[3409519] call_tmp[3409509])
              (3409526 call +=[72190] lastArrayIdx[3409179] 1)
              ref newLast[3409531]:_ref(_ddata(shared Module(real(32))))[1955609] "dead at end of block" "ref var"
              ref call_tmp[3409535]:_ref(_ddata(shared Module(real(32))))[1955609] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[3410200]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead at end of block" "temp"
              (3410202 'move' _this_tmp_[3410200](3409540 call _arrays[1955913] this[3409108]))
              val coerce_tmp[3410207]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3410211 'move' coerce_tmp[3410207](3410209 'deref' _this_tmp_[3410200]))
              (3409537 'move' call_tmp[3409535](3409543 call this[1959063] coerce_tmp[3410207] lastArrayIdx[3409179]))
              (3409545 'move' newLast[3409531] call_tmp[3409535])
              const-val call_tmp[3409550]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (3409552 'move' call_tmp[3409550](3409555 call *[3254422] oldLastCapacity[3409519]))
              const-val newLastCapacity[3409558]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (3409560 'move' newLastCapacity[3409558] call_tmp[3409550])
              const-val call_tmp[3409566]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3409568 'move' call_tmp[3409566](3409571 call !=[3410215] oldLast[3409503] nil[32]))
              (3409575 call _sanity[225863] call_tmp[3409566])
              const-val call_tmp[3409579]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3410271]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3410275 'move' coerce_tmp[3410271](3410273 'deref' newLast[3409531]))
              (3409581 'move' call_tmp[3409579](3409584 call ==[3410244] coerce_tmp[3410271] nil[32]))
              (3409588 call _sanity[225863] call_tmp[3409579])
              val call_tmp[3409592]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "expr temp" "maybe param" "temp"
              (3409594 'move' call_tmp[3409592](3409600 call _makeArray[1959101] this[3409108] newLastCapacity[3409558]))
              (3409603 call =[1959677] newLast[3409531] call_tmp[3409592])
              ref call_tmp[3409609]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3409611 'move' call_tmp[3409609](3409614 call _totalCapacity[1955976] this[3409108]))
              (3409618 call +=[72190] call_tmp[3409609] newLastCapacity[3409558])
              (3409624 call -=[72507] req[3409241] newLastCapacity[3409558])
            }
          }
        }
        label _continueLabel[3409630]
        const-val call_tmp[3409632]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3409634 'move' call_tmp[3409632](3409637 call >[55238] req[3409241] 0))
        (3409640 'move' tmp[3409249] call_tmp[3409632])
        tmp[3409249]
      }
      label _breakLabel[3409645]
    }
    label _end__maybeAcquireMem[3409647]
    (3409649 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._maybeAcquireMem[3865415](ref arg this[3865419]:_ref(list(shared Module(real(64)),false))[3405554], const in arg amount[3865421]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3865427]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3865429 'move' call_tmp[3865427](3865432 call _totalCapacity[3833385] this[3865419]))
    const-ref call_tmp[3865435]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3865437 'move' call_tmp[3865435](3865440 call _size[3833421] this[3865419]))
    const-val call_tmp[3865443]:int(64)[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3865965]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3865969 'move' coerce_tmp[3865965](3865967 'deref' call_tmp[3865427]))
    const-val coerce_tmp[3865971]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3865975 'move' coerce_tmp[3865971](3865973 'deref' call_tmp[3865435]))
    (3865445 'move' call_tmp[3865443](3865448 call -[57305] coerce_tmp[3865965] coerce_tmp[3865971]))
    const-val remaining[3865451]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    (3865453 'move' remaining[3865451] call_tmp[3865443])
    const-val call_tmp[3865457]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3865459 'move' call_tmp[3865457](3865462 call >=[1495853] remaining[3865451]))
    (3865466 call _sanity[225863] call_tmp[3865457])
    const-val call_tmp[3865470]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3865472 'move' call_tmp[3865470](3865475 call >=[54627] remaining[3865451] amount[3865421]))
    const-val call_tmp[3865478]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3865480 'move' call_tmp[3865478] call_tmp[3865470])
    if call_tmp[3865478]
    {
      gotoReturn _end__maybeAcquireMem[3865958] _end__maybeAcquireMem[3865958]
    }
    val lastArrayIdx[3865490]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3865492]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[3865494]:bool[19] "dead after last mention" "maybe param" "temp"
    const-ref call_tmp[3865496]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3865498 'move' call_tmp[3865496](3865501 call _size[3833421] this[3865419]))
    const-val call_tmp[3865504]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3865982]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3865986 'move' coerce_tmp[3865982](3865984 'deref' call_tmp[3865496]))
    (3865506 'move' call_tmp[3865504](3865509 call ==[52746] coerce_tmp[3865982] 0))
    (3865512 'move' tmp[3865494] call_tmp[3865504])
    if tmp[3865494]
    {
      (3865519 'move' tmp[3865492] 0)
    }
    {
      const-val tmp[3865525]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (3865527 'move' tmp[3865525](3865533 call _getLastArrayIdx[3865989] this[3865419]))
      (3865534 'move' tmp[3865492] tmp[3865525])
    }
    (3865540 'move' lastArrayIdx[3865490] tmp[3865492])
    const-val call_tmp[3865544]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3865546 'move' call_tmp[3865544](3865549 call -[57305] amount[3865421] remaining[3865451]))
    val req[3865552]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3865554 'move' req[3865552] call_tmp[3865544])
    {
      val tmp[3865560]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3865562]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3865564 'move' call_tmp[3865562](3865567 call >[55238] req[3865552] 0))
      (3865570 'move' tmp[3865560] call_tmp[3865562])
      WhileDo[3865575] hazard
      {
        {
          const-ref call_tmp[3865578]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3865580 'move' call_tmp[3865578](3865583 call _arrayCapacity[3836435] this[3865419]))
          const-val call_tmp[3865586]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3866162]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3866166 'move' coerce_tmp[3866162](3866164 'deref' call_tmp[3865578]))
          (3865588 'move' call_tmp[3865586](3865591 call -[1487343] coerce_tmp[3866162]))
          const-val call_tmp[3865594]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3865596 'move' call_tmp[3865594](3865599 call >=[54627] lastArrayIdx[3865490] call_tmp[3865586]))
          const-val call_tmp[3865602]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3865604 'move' call_tmp[3865602] call_tmp[3865594])
          if call_tmp[3865602]
          {
            {
              const-val tmp[3865615]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
              const-val call_tmp[3865617]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
              (3865619 'move' call_tmp[3865617](3865621 '_wide_get_locale' this[3865419]))
              (3865623 'move' tmp[3865615] call_tmp[3865617])
              {
                const-ref call_tmp[3865628]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3865630 'move' call_tmp[3865628](3865633 call _arrayCapacity[3836435] this[3865419]))
                const-val call_tmp[3865636]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3866171]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3866175 'move' coerce_tmp[3866171](3866173 'deref' call_tmp[3865628]))
                (3865638 'move' call_tmp[3865636](3865641 call *[3254422] coerce_tmp[3866171]))
                val call_tmp[3865644]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "maybe param" "temp"
                (3865646 'move' call_tmp[3865644](3865652 call _makeBlockArray[3833458] this[3865419] call_tmp[3865636]))
                val _narrays[3865654]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead at end of block" "insert auto destroy"
                (3865656 'move' _narrays[3865654] call_tmp[3865644])
                {
                  val _indexOfInterest[3865661]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[3865663]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
                  const-ref call_tmp[3865665]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
                  (3865667 'move' call_tmp[3865665](3865670 call _arrayCapacity[3836435] this[3865419]))
                  const-val call_tmp[3865673]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3866184]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (3866188 'move' coerce_tmp[3866184](3866186 'deref' call_tmp[3865665]))
                  const-val ret_tmp[5546012]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
                  (3865678 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[3866184] ret_tmp[5546012])
                  (5546015 'move' call_tmp[3865673] ret_tmp[5546012])
                  (3865681 'move' _iterator[3865663](3865684 call _getIterator[1520079] call_tmp[3865673]))
                  {
                    val ret[6093443]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
                    val tmp[6093445]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6093447]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6093449]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6093451]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6093453]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6093455]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6093457]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val _indexOfInterest[6093459]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6093461]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6093463]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6093465]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
                    const-val low[6093803]:int(64)[10] "temp"
                    (6093808 'move' low[6093803](6093805 '.v' _iterator[3865663] F0_low[6832410]))
                    const-val count[6093810]:int(64)[10] "temp"
                    (6093815 'move' count[6093810](6093812 '.v' _iterator[3865663] F1_count[6832414]))
                    (6093468 call chpl_direct_counted_range_iter_helper[1469227] low[6093803] count[6093810] ret_tmp[6093465])
                    (6093472 'move' call_tmp[6093463] ret_tmp[6093465])
                    (6093475 'move' _iterator[6093461](6093478 call _getIterator[1519812] call_tmp[6093463]))
                    val ret[6093480]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
                    val tmp[6093482]:bool[19] "dead after last mention" "maybe param" "temp"
                    val tmp[6093484]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6093486]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6093488]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
                    val tmp[6093490]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6093492]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val tmp[6093494]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    val call_tmp[6093496]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6093498]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    val call_tmp[6093500]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6093502]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val tmp[6093504]:bool[19] "dead after last mention" "maybe param" "temp"
                    val call_tmp[6093506]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    const-val tmp[6093508]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[6093510]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6093512]:int(64)[10] "temp"
                    (6093514 'move' count[6093512](6093516 '.v' _iterator[6093461] F1_count[6834178]))
                    (6093519 'move' call_tmp[6093510](6093522 call <[1469576] count[6093512] 0))
                    (6093525 'move' tmp[6093508] call_tmp[6093510])
                    (6093528 'move' tmp[6093502] call_tmp[6093510])
                    const-val call_tmp[6093531]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (6093533 'move' call_tmp[6093531] call_tmp[6093510])
                    if call_tmp[6093510]
                    {
                      (6093539 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
                    }
                    const-val start[6093542]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    const-val low[6093544]:int(64)[10] "temp"
                    (6093546 'move' low[6093544](6093548 '.v' _iterator[6093461] F0_low[6834174]))
                    (6093551 'move' start[6093542] low[6093544])
                    const-val end[6093554]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                    val tmp[6093556]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[6093558]:bool[19] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[6093560]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[6093562]:int(64)[10] "temp"
                    (6093564 'move' count[6093562](6093566 '.v' _iterator[6093461] F1_count[6834178]))
                    (6093569 'move' call_tmp[6093560](6093572 call ==[52746] count[6093562] 0))
                    (6093575 'move' tmp[6093558] call_tmp[6093560])
                    if call_tmp[6093560]
                    {
                      const-val tmp[6093580]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[6093582]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6093584]:int(64)[10] "temp"
                      (6093586 'move' low[6093584](6093588 '.v' _iterator[6093461] F0_low[6834174]))
                      (6093591 'move' call_tmp[6093582](6093593 'cast' uint(64)[86] low[6093584]))
                      const-val call_tmp[6093596]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[6093598]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6093600 'move' coerce_tmp[6093598](6093602 'cast' uint(64)[86] 1))
                      (6093605 'move' call_tmp[6093596](6093608 call -[1487313] call_tmp[6093582]))
                      val call_tmp[6093610]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6093612 'move' tmp[6093580](6093615 call :[1482043] call_tmp[6093596]))
                      (6093617 'move' tmp[6093556] tmp[6093580])
                    }
                    {
                      const-val tmp[6093621]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      val call_tmp[6093623]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[6093625]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6093627]:int(64)[10] "temp"
                      (6093629 'move' count[6093627](6093631 '.v' _iterator[6093461] F1_count[6834178]))
                      (6093634 'move' call_tmp[6093625] count[6093627])
                      const-val call_tmp[6093637]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val count[6093639]:int(64)[10] "temp"
                      (6093641 'move' count[6093639](6093643 '.v' _iterator[6093461] F1_count[6834178]))
                      (6093646 'move' call_tmp[6093637](6093649 call -[1487343] count[6093639]))
                      const-val call_tmp[6093651]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val low[6093653]:int(64)[10] "temp"
                      (6093655 'move' low[6093653](6093657 '.v' _iterator[6093461] F0_low[6834174]))
                      (6093660 'move' call_tmp[6093651](6093663 call +[56587] low[6093653] call_tmp[6093637]))
                      val call_tmp[6093666]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6093668 'move' tmp[6093621] call_tmp[6093651])
                      (6093671 'move' tmp[6093556] call_tmp[6093651])
                    }
                    (6093675 'move' end[6093554] tmp[6093556])
                    val _indexOfInterest[6093678]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[6093680]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[6093682]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[6093684]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
                    (6093687 call chpl_direct_param_stride_range_iter[1517410] start[6093542] tmp[6093556] ret_tmp[6093684])
                    (6093691 'move' call_tmp[6093682] ret_tmp[6093684])
                    (6093694 'move' _iterator[6093680](6093697 call _getIterator[1519541] call_tmp[6093682]))
                    {
                      val ret[6437467]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                      val call_tmp[6437469]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6437471]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6437474 call chpl_range_check_stride[1517730])
                      val i[6437475]:int(64)[10] "dead at end of block" "insert auto destroy"
                      val call_tmp[6437477]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (6437479 'move' i[6437475] 0)
                      val call_tmp[6437482]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6437484]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6437486]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                      val call_tmp[6437488]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[6437490]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[6437633]:int(64)[10] "temp"
                      (6437638 'move' low[6437633](6437635 '.v' _iterator[6093680] F0_low[6835591]))
                      (6437492 'move' default_arg_first[6437490](6437495 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6437633]))
                      const-val default_arg_last[6437497]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[6437640]:int(64)[10] "temp"
                      (6437645 'move' high[6437640](6437642 '.v' _iterator[6093680] F1_high[6835595]))
                      (6437499 'move' default_arg_last[6437497](6437502 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6437640]))
                      val default_arg_shouldHalt[6437504]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                      const-val _return_tmp_[6437506]:bool[19] "dead after last mention" "temp"
                      const-val low[6437647]:int(64)[10] "temp"
                      (6437652 'move' low[6437647](6437649 '.v' _iterator[6093680] F0_low[6835591]))
                      const-val high[6437654]:int(64)[10] "temp"
                      (6437659 'move' high[6437654](6437656 '.v' _iterator[6093680] F1_high[6835595]))
                      (6437508 'move' _return_tmp_[6437506](6437511 call chpl_checkIfRangeIterWillOverflow[1518856] low[6437647] high[6437654] 1 default_arg_first[6437490] default_arg_last[6437497] 1))
                      CForLoop[6437518]
                      {
                        const-val yret[6437535]:int(64)[10] "dead after last mention" "YVV" "temp"
                        (6437537 'move' yret[6437535] i[6437475])
                        const-val _yieldedIndex[6437551]:int(64)[10] "temp"
                        (6437631 'move' _yieldedIndex[6437551] i[6437475])
                        {
                          const-val i[6437553]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6437555 'move' i[6437553] _yieldedIndex[6437551])
                          const-val yret[6437558]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6437560 'move' yret[6437558] _yieldedIndex[6437551])
                          const-val _yieldedIndex[6437563]:int(64)[10] "temp"
                          (6437565 'move' _yieldedIndex[6437563] _yieldedIndex[6437551])
                          const-val i[6437568]:int(64)[10] "const" "index var" "insert auto destroy"
                          (6437570 'move' i[6437568] _yieldedIndex[6437563])
                          const-val yret[6437573]:int(64)[10] "dead after last mention" "YVV" "temp"
                          (6437575 'move' yret[6437573] _yieldedIndex[6437563])
                          const-val _yieldedIndex[6437578]:int(64)[10] "temp"
                          (6437580 'move' _yieldedIndex[6437578] _yieldedIndex[6437563])
                          {
                            const-val i[6437584]:int(64)[10] "const" "index var" "insert auto destroy"
                            (6437586 'move' i[6437584] _yieldedIndex[6437578])
                            ref call_tmp[6437589]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
                            (6437591 'move' call_tmp[6437589](6437594 call this[3836472] _narrays[3865654] i[6437584]))
                            const-ref call_tmp[6437597]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
                            const-ref _this_tmp_[6437599]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "temp"
                            (6437601 'move' _this_tmp_[6437599](6437604 call _arrays[3833322] this[3865419]))
                            val coerce_tmp[6437606]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6437608 'move' coerce_tmp[6437606](6437610 'deref' _this_tmp_[6437599]))
                            (6437612 'move' call_tmp[6437597](6437615 call this[3836472] coerce_tmp[6437606] i[6437584]))
                            val coerce_tmp[6437618]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (6437620 'move' coerce_tmp[6437618](6437622 'deref' call_tmp[6437597]))
                            (6437625 call =[3837086] call_tmp[6437589] coerce_tmp[6437618])
                            label _continueLabel[6437628]
                          }
                        }
                        {
                          const-val low[6437661]:int(64)[10] "temp"
                          (6437666 'move' low[6437661](6437663 '.v' _iterator[6093680] F0_low[6835591]))
                          (6437520 '=' i[6437475] low[6437661])
                        }
                        {
                          const-val high[6437668]:int(64)[10] "temp"
                          (6437673 'move' high[6437668](6437670 '.v' _iterator[6093680] F1_high[6835595]))
                          (6437524 '<=' i[6437475] high[6437668])
                        }
                        {
                          val call_tmp[6437528]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          val call_tmp[6437530]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                          (6437532 '+=' i[6437475] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[6437547]
                    }
                    (6093741 call _freeIterator[1519714] _iterator[6093680])
                    label _endchpl_direct_counted_range_iter_helper[6093743]
                    (6093746 call _freeIterator[1519981] _iterator[6093461])
                    label _endchpl_direct_counted_range_iter[6093748]
                  }
                  label _breakLabel[3865734]
                  (5642184 call _freeIterator[1520248] _iterator[3865663])
                }
                const-ref call_tmp[3865736]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
                (3865738 'move' call_tmp[3865736](3865741 call _arrays[3833322] this[3865419]))
                const-ref call_tmp[3865744]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3865746 'move' call_tmp[3865744](3865749 call _arrayCapacity[3836435] this[3865419]))
                val coerce_tmp[3866278]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3866282 'move' coerce_tmp[3866278](3866280 'deref' call_tmp[3865736]))
                const-val coerce_tmp[3866284]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3866288 'move' coerce_tmp[3866284](3866286 'deref' call_tmp[3865744]))
                (3865756 call _freeBlockArray[3866221] this[3865419] coerce_tmp[3866278] coerce_tmp[3866284])
                ref call_tmp[3865760]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
                (3865762 'move' call_tmp[3865760](3865765 call _arrays[3833322] this[3865419]))
                (3865769 call =[3834172] call_tmp[3865760] _narrays[3865654])
                ref call_tmp[3865774]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3865776 'move' call_tmp[3865774](3865779 call _arrayCapacity[3836435] this[3865419]))
                (3865783 call *=[72824] call_tmp[3865774] 2)
              }
            }
          }
          {
            const-val tmp[3865791]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
            const-val call_tmp[3865793]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
            (3865795 'move' call_tmp[3865793](3865797 '_wide_get_locale' this[3865419]))
            (3865799 'move' tmp[3865791] call_tmp[3865793])
            {
              const-ref call_tmp[3865804]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
              const-ref _this_tmp_[3866411]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "temp"
              (3866413 'move' _this_tmp_[3866411](3865809 call _arrays[3833322] this[3865419]))
              val coerce_tmp[3866418]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3866422 'move' coerce_tmp[3866418](3866420 'deref' _this_tmp_[3866411]))
              (3865806 'move' call_tmp[3865804](3865812 call this[3836472] coerce_tmp[3866418] lastArrayIdx[3865490]))
              const oldLast[3865814]:_ddata(shared Module(real(64)))[3405600] "dead at end of block" "const" "insert auto destroy"
              val coerce_tmp[3866428]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (3866432 'move' coerce_tmp[3866428](3866430 'deref' call_tmp[3865804]))
              (5642178 '=' oldLast[3865814] coerce_tmp[3866428])
              (3865816 'noop')
              const-val call_tmp[3865820]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (3865822 'move' call_tmp[3865820](3865828 call _getArrayCapacity[3866435] this[3865419] lastArrayIdx[3865490]))
              const-val oldLastCapacity[3865830]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (3865832 'move' oldLastCapacity[3865830] call_tmp[3865820])
              (3865837 call +=[72190] lastArrayIdx[3865490] 1)
              ref newLast[3865842]:_ref(_ddata(shared Module(real(64))))[3405609] "dead at end of block" "ref var"
              ref call_tmp[3865846]:_ref(_ddata(shared Module(real(64))))[3405609] "dead at end of block" "maybe param" "temp"
              const-ref _this_tmp_[3866511]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead at end of block" "temp"
              (3866513 'move' _this_tmp_[3866511](3865851 call _arrays[3833322] this[3865419]))
              val coerce_tmp[3866518]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (3866522 'move' coerce_tmp[3866518](3866520 'deref' _this_tmp_[3866511]))
              (3865848 'move' call_tmp[3865846](3865854 call this[3836472] coerce_tmp[3866518] lastArrayIdx[3865490]))
              (3865856 'move' newLast[3865842] call_tmp[3865846])
              const-val call_tmp[3865861]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (3865863 'move' call_tmp[3865861](3865866 call *[3254422] oldLastCapacity[3865830]))
              const-val newLastCapacity[3865869]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (3865871 'move' newLastCapacity[3865869] call_tmp[3865861])
              const-val call_tmp[3865877]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3865879 'move' call_tmp[3865877](3865882 call !=[3866526] oldLast[3865814] nil[32]))
              (3865886 call _sanity[225863] call_tmp[3865877])
              const-val call_tmp[3865890]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[3866582]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3866586 'move' coerce_tmp[3866582](3866584 'deref' newLast[3865842]))
              (3865892 'move' call_tmp[3865890](3865895 call ==[3866555] coerce_tmp[3866582] nil[32]))
              (3865899 call _sanity[225863] call_tmp[3865890])
              val call_tmp[3865903]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "expr temp" "maybe param" "temp"
              (3865905 'move' call_tmp[3865903](3865911 call _makeArray[3836510] this[3865419] newLastCapacity[3865869]))
              (3865914 call =[3837086] newLast[3865842] call_tmp[3865903])
              ref call_tmp[3865920]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3865922 'move' call_tmp[3865920](3865925 call _totalCapacity[3833385] this[3865419]))
              (3865929 call +=[72190] call_tmp[3865920] newLastCapacity[3865869])
              (3865935 call -=[72507] req[3865552] newLastCapacity[3865869])
            }
          }
        }
        label _continueLabel[3865941]
        const-val call_tmp[3865943]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3865945 'move' call_tmp[3865943](3865948 call >[55238] req[3865552] 0))
        (3865951 'move' tmp[3865560] call_tmp[3865943])
        tmp[3865560]
      }
      label _breakLabel[3865956]
    }
    label _end__maybeAcquireMem[3865958]
    (3865960 return _void[46])
  }
  function _ref(list(string,false))[1950614]._appendByRef[3253564](ref arg this[3253568]:_ref(list(string,false))[1950614], const  ref arg x[3253575]:_ref(string)[1466327]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3253587 call _maybeAcquireMem[3253651] this[3253568] 1)
    const-ref src[3253590]:_ref(string)[1466327] "dead at end of block" "ref to immutable" "ref var"
    (3253594 'move' src[3253590] x[3253575])
    ref dst[3253599]:_ref(string)[1466327] "dead at end of block" "ref var"
    const-ref call_tmp[3253603]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    (3253605 'move' call_tmp[3253603](3253608 call _size[1951043] this[3253568]))
    ref call_tmp[3253611]:_ref(string)[1466327] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3256278]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3256282 'move' coerce_tmp[3256278](3256280 'deref' call_tmp[3253603]))
    (3253613 'move' call_tmp[3253611](3253619 call _getRef[3256092] this[3253568] coerce_tmp[3256278]))
    (3253621 'move' dst[3253599] call_tmp[3253611])
    (3253630 call _move[3256443] this[3253568] src[3253590] dst[3253599])
    ref call_tmp[3253636]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3253638 'move' call_tmp[3253636](3253641 call _size[1951043] this[3253568]))
    (3253645 call +=[72190] call_tmp[3253636] 1)
    (3253648 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._appendByRef[3409017](ref arg this[3409021]:_ref(list(shared Module(real(32)),false))[1955585], const  ref arg x[3409028]:_ref(shared Module(real(32)))[1955047]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3409040 call _maybeAcquireMem[3409104] this[3409021] 1)
    const-ref src[3409043]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "ref to immutable" "ref var"
    (3409047 'move' src[3409043] x[3409028])
    ref dst[3409052]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "ref var"
    const-ref call_tmp[3409056]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    (3409058 'move' call_tmp[3409056](3409061 call _size[1956012] this[3409021]))
    ref call_tmp[3409064]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3410472]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3410476 'move' coerce_tmp[3410472](3410474 'deref' call_tmp[3409056]))
    (3409066 'move' call_tmp[3409064](3409072 call _getRef[3410286] this[3409021] coerce_tmp[3410472]))
    (3409074 'move' dst[3409052] call_tmp[3409064])
    (3409083 call _move[3410637] this[3409021] src[3409043] dst[3409052])
    ref call_tmp[3409089]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3409091 'move' call_tmp[3409089](3409094 call _size[1956012] this[3409021]))
    (3409098 call +=[72190] call_tmp[3409089] 1)
    (3409101 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._appendByRef[3865328](ref arg this[3865332]:_ref(list(shared Module(real(64)),false))[3405554], const  ref arg x[3865339]:_ref(shared Module(real(64)))[3405437]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3865351 call _maybeAcquireMem[3865415] this[3865332] 1)
    const-ref src[3865354]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "ref to immutable" "ref var"
    (3865358 'move' src[3865354] x[3865339])
    ref dst[3865363]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "ref var"
    const-ref call_tmp[3865367]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
    (3865369 'move' call_tmp[3865367](3865372 call _size[3833421] this[3865332]))
    ref call_tmp[3865375]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3866783]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3866787 'move' coerce_tmp[3866783](3866785 'deref' call_tmp[3865367]))
    (3865377 'move' call_tmp[3865375](3865383 call _getRef[3866597] this[3865332] coerce_tmp[3866783]))
    (3865385 'move' dst[3865363] call_tmp[3865375])
    (3865394 call _move[3866948] this[3865332] src[3865354] dst[3865363])
    ref call_tmp[3865400]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3865402 'move' call_tmp[3865400](3865405 call _size[3833421] this[3865332]))
    (3865409 call +=[72190] call_tmp[3865400] 1)
    (3865412 return _void[46])
  }
  function _ref(list(string,false))[1950614].pushBack[3253361](ref arg this[3253365]:_ref(list(string,false))[1950614], const  ref arg x[3253372]:string[244]) : int(64)[10] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_x[3253457]:string[244] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3253460 'move' _formal_tmp_x[3253457] x[3253372])
    val ret[3253383]:int(64)[10] "dead after last mention" "RVV" "temp"
    (3253397 call _enter[3253463] this[3253365])
    (3253403 call _appendByRef[3253564] this[3253365] _formal_tmp_x[3253457])
    const-ref call_tmp[3253406]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3253408 'move' call_tmp[3253406](3253411 call _size[1951043] this[3253365]))
    const-val call_tmp[3253414]:int(64)[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3256478]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3256482 'move' coerce_tmp[3256478](3256480 'deref' call_tmp[3253406]))
    (3253416 'move' call_tmp[3253414](3253419 call -[1487343] coerce_tmp[3256478]))
    const-val result[3253422]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3253424 'move' result[3253422] call_tmp[3253414])
    (3253432 call _leave[3256485] this[3253365])
    (3256534 '=' ret[3253383] result[3253422])
    gotoReturn _end_pushBack[3253443] _end_pushBack[3253443]
    label _end_pushBack[3253443]
    (3253445 return ret[3253383])
  }
  function _ref(list(shared Module(real(32)),false))[1955585].pushBack[3408814](ref arg this[3408818]:_ref(list(shared Module(real(32)),false))[1955585], const  ref arg x[3408825]:shared Module(real(32))[1955038]) : int(64)[10] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_x[3408910]:shared Module(real(32))[1955038] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3408913 'move' _formal_tmp_x[3408910] x[3408825])
    val ret[3408836]:int(64)[10] "dead after last mention" "RVV" "temp"
    (3408850 call _enter[3408916] this[3408818])
    (3408856 call _appendByRef[3409017] this[3408818] _formal_tmp_x[3408910])
    const-ref call_tmp[3408859]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3408861 'move' call_tmp[3408859](3408864 call _size[1956012] this[3408818]))
    const-val call_tmp[3408867]:int(64)[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3410672]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3410676 'move' coerce_tmp[3410672](3410674 'deref' call_tmp[3408859]))
    (3408869 'move' call_tmp[3408867](3408872 call -[1487343] coerce_tmp[3410672]))
    const-val result[3408875]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3408877 'move' result[3408875] call_tmp[3408867])
    (3408885 call _leave[3410679] this[3408818])
    (3410728 '=' ret[3408836] result[3408875])
    gotoReturn _end_pushBack[3408896] _end_pushBack[3408896]
    label _end_pushBack[3408896]
    (3408898 return ret[3408836])
  }
  function _ref(list(shared Module(real(64)),false))[3405554].pushBack[3864482](ref arg this[3864486]:_ref(list(shared Module(real(64)),false))[3405554], const  ref arg x[3864493]:shared Module(real(64))[3405428]) : int(64)[10] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_x[3865221]:shared Module(real(64))[3405428] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3865224 'move' _formal_tmp_x[3865221] x[3864493])
    val ret[3864504]:int(64)[10] "dead after last mention" "RVV" "temp"
    (3864518 call _enter[3865227] this[3864486])
    (3864524 call _appendByRef[3865328] this[3864486] _formal_tmp_x[3865221])
    const-ref call_tmp[3864527]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3864529 'move' call_tmp[3864527](3864532 call _size[3833421] this[3864486]))
    const-val call_tmp[3864535]:int(64)[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3866983]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3866987 'move' coerce_tmp[3866983](3866985 'deref' call_tmp[3864527]))
    (3864537 'move' call_tmp[3864535](3864540 call -[1487343] coerce_tmp[3866983]))
    const-val result[3864543]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3864545 'move' result[3864543] call_tmp[3864535])
    (3864553 call _leave[3866990] this[3864486])
    (3867039 '=' ret[3864504] result[3864543])
    gotoReturn _end_pushBack[3864564] _end_pushBack[3864564]
    label _end_pushBack[3864564]
    (3864566 return ret[3864504])
  }
  function _ref(list(string,false))[1950614].contains[3400199](const  ref arg this[3400203]:_ref(list(string,false))[1950614], const  ref arg x[3400210]:string[244]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3400214]:bool[19] "dead after last mention" "RVV" "temp"
    val result[3400224]:bool[19] "dead at end of block" "insert auto destroy"
    (3400226 'move' result[3400224] 0)
    {
      const-val tmp[3400234]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[3400236]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (3400238 'move' call_tmp[3400236](3400240 '_wide_get_locale' this[3400203]))
      (3400242 'move' tmp[3400234] call_tmp[3400236])
      {
        (3400251 call _enter[3253463] this[3400203])
        {
          ref _indexOfInterest[3400254]:_ref(string)[1466327] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[3400256]:_ic_these__ref_list_string_F[3384642] "dead at end of block" "expr temp" "temp"
          (3400258 'move' _iterator[3400256](3400261 call _getIterator[3384500] this[3400203]))
          {
            val ret[6061973]:_ir_these__ref_list_string_F[3384648] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[6061975]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6061977]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
            const-ref call_tmp[6061979]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
            const-ref this[6062407]:_ref(list(string,false))[1950614] "temp"
            (6062412 'move' this[6062407](6062409 '.v' _iterator[3400256] F0_this[7087874]))
            (6061981 'move' call_tmp[6061979](6061984 call _size[1951043] this[6062407]))
            const-val call_tmp[6061986]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[6061988]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (6061990 'move' coerce_tmp[6061988](6061992 'deref' call_tmp[6061979]))
            const-val ret_tmp[6061994]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
            (6061997 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[6061988] ret_tmp[6061994])
            (6062001 'move' call_tmp[6061986] ret_tmp[6061994])
            (6062004 'move' _iterator[6061977](6062007 call _getIterator[1520079] call_tmp[6061986]))
            {
              val ret[6062010]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
              val tmp[6062012]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6062014]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6062016]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6062018]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6062020]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6062022]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6062024]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val _indexOfInterest[6062026]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6062028]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6062030]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6062032]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
              const-val low[6062034]:int(64)[10] "temp"
              (6062036 'move' low[6062034](6062038 '.v' _iterator[6061977] F0_low[6832410]))
              const-val count[6062041]:int(64)[10] "temp"
              (6062043 'move' count[6062041](6062045 '.v' _iterator[6061977] F1_count[6832414]))
              (6062049 call chpl_direct_counted_range_iter_helper[1469227] low[6062034] count[6062041] ret_tmp[6062032])
              (6062053 'move' call_tmp[6062030] ret_tmp[6062032])
              (6062056 'move' _iterator[6062028](6062059 call _getIterator[1519812] call_tmp[6062030]))
              val ret[6062061]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
              val tmp[6062063]:bool[19] "dead after last mention" "maybe param" "temp"
              val tmp[6062065]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6062067]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6062069]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
              val tmp[6062071]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6062073]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[6062075]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              val call_tmp[6062077]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6062079]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6062081]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6062083]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val tmp[6062085]:bool[19] "dead after last mention" "maybe param" "temp"
              val call_tmp[6062087]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              const-val tmp[6062089]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6062091]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6062093]:int(64)[10] "temp"
              (6062095 'move' count[6062093](6062097 '.v' _iterator[6062028] F1_count[6834178]))
              (6062100 'move' call_tmp[6062091](6062103 call <[1469576] count[6062093] 0))
              (6062106 'move' tmp[6062089] call_tmp[6062091])
              (6062109 'move' tmp[6062083] call_tmp[6062091])
              const-val call_tmp[6062112]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (6062114 'move' call_tmp[6062112] call_tmp[6062091])
              if call_tmp[6062091]
              {
                (6062120 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
              }
              const-val start[6062123]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              const-val low[6062125]:int(64)[10] "temp"
              (6062127 'move' low[6062125](6062129 '.v' _iterator[6062028] F0_low[6834174]))
              (6062132 'move' start[6062123] low[6062125])
              const-val end[6062135]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              val tmp[6062137]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[6062139]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[6062141]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6062143]:int(64)[10] "temp"
              (6062145 'move' count[6062143](6062147 '.v' _iterator[6062028] F1_count[6834178]))
              (6062150 'move' call_tmp[6062141](6062153 call ==[52746] count[6062143] 0))
              (6062156 'move' tmp[6062139] call_tmp[6062141])
              if call_tmp[6062141]
              {
                const-val tmp[6062161]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[6062163]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6062165]:int(64)[10] "temp"
                (6062167 'move' low[6062165](6062169 '.v' _iterator[6062028] F0_low[6834174]))
                (6062172 'move' call_tmp[6062163](6062174 'cast' uint(64)[86] low[6062165]))
                const-val call_tmp[6062177]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[6062179]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (6062181 'move' coerce_tmp[6062179](6062183 'cast' uint(64)[86] 1))
                (6062186 'move' call_tmp[6062177](6062189 call -[1487313] call_tmp[6062163]))
                val call_tmp[6062191]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6062193 'move' tmp[6062161](6062196 call :[1482043] call_tmp[6062177]))
                (6062198 'move' tmp[6062137] tmp[6062161])
              }
              {
                const-val tmp[6062202]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[6062204]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[6062206]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6062208]:int(64)[10] "temp"
                (6062210 'move' count[6062208](6062212 '.v' _iterator[6062028] F1_count[6834178]))
                (6062215 'move' call_tmp[6062206] count[6062208])
                const-val call_tmp[6062218]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[6062220]:int(64)[10] "temp"
                (6062222 'move' count[6062220](6062224 '.v' _iterator[6062028] F1_count[6834178]))
                (6062227 'move' call_tmp[6062218](6062230 call -[1487343] count[6062220]))
                const-val call_tmp[6062232]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val low[6062234]:int(64)[10] "temp"
                (6062236 'move' low[6062234](6062238 '.v' _iterator[6062028] F0_low[6834174]))
                (6062241 'move' call_tmp[6062232](6062244 call +[56587] low[6062234] call_tmp[6062218]))
                val call_tmp[6062247]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6062249 'move' tmp[6062202] call_tmp[6062232])
                (6062252 'move' tmp[6062137] call_tmp[6062232])
              }
              (6062256 'move' end[6062135] tmp[6062137])
              val _indexOfInterest[6062259]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[6062261]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[6062263]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[6062265]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
              (6062268 call chpl_direct_param_stride_range_iter[1517410] start[6062123] tmp[6062137] ret_tmp[6062265])
              (6062272 'move' call_tmp[6062263] ret_tmp[6062265])
              (6062275 'move' _iterator[6062261](6062278 call _getIterator[1519541] call_tmp[6062263]))
              {
                val ret[6395658]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
                val call_tmp[6395660]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6395662]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6395665 call chpl_range_check_stride[1517730])
                val i[6395666]:int(64)[10] "dead at end of block" "insert auto destroy"
                val call_tmp[6395668]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (6395670 'move' i[6395666] 0)
                val call_tmp[6395673]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6395675]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6395677]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val call_tmp[6395679]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[6395681]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[6395845]:int(64)[10] "temp"
                (6395850 'move' low[6395845](6395847 '.v' _iterator[6062261] F0_low[6835591]))
                (6395683 'move' default_arg_first[6395681](6395686 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6395845]))
                const-val default_arg_last[6395688]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[6395852]:int(64)[10] "temp"
                (6395857 'move' high[6395852](6395854 '.v' _iterator[6062261] F1_high[6835595]))
                (6395690 'move' default_arg_last[6395688](6395693 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6395852]))
                val default_arg_shouldHalt[6395695]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
                const-val _return_tmp_[6395697]:bool[19] "dead after last mention" "temp"
                const-val low[6395859]:int(64)[10] "temp"
                (6395864 'move' low[6395859](6395861 '.v' _iterator[6062261] F0_low[6835591]))
                const-val high[6395866]:int(64)[10] "temp"
                (6395871 'move' high[6395866](6395868 '.v' _iterator[6062261] F1_high[6835595]))
                (6395699 'move' _return_tmp_[6395697](6395702 call chpl_checkIfRangeIterWillOverflow[1518856] low[6395859] high[6395866] 1 default_arg_first[6395681] default_arg_last[6395688] 1))
                CForLoop[6395709] hazard
                {
                  const-val yret[6395726]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6395728 'move' yret[6395726] i[6395666])
                  const-val _yieldedIndex[6395742]:int(64)[10] "temp"
                  (6395843 'move' _yieldedIndex[6395742] i[6395666])
                  {
                    const-val i[6395744]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6395746 'move' i[6395744] _yieldedIndex[6395742])
                    const-val yret[6395749]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6395751 'move' yret[6395749] _yieldedIndex[6395742])
                    const-val _yieldedIndex[6395754]:int(64)[10] "temp"
                    (6395756 'move' _yieldedIndex[6395754] _yieldedIndex[6395742])
                    const-val i[6395759]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6395761 'move' i[6395759] _yieldedIndex[6395754])
                    const-val yret[6395764]:int(64)[10] "dead after last mention" "YVV" "temp"
                    (6395766 'move' yret[6395764] _yieldedIndex[6395754])
                    const-val _yieldedIndex[6395769]:int(64)[10] "temp"
                    (6395771 'move' _yieldedIndex[6395769] _yieldedIndex[6395754])
                    {
                      const-val i[6395775]:int(64)[10] "const" "index var" "insert auto destroy"
                      (6395777 'move' i[6395775] _yieldedIndex[6395769])
                      ref yret[6395780]:_ref(string)[1466327] "dead after last mention" "YVV" "temp"
                      const-ref call_tmp[6395782]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
                      const-ref this[6395784]:_ref(list(string,false))[1950614] "temp"
                      (6395786 'move' this[6395784](6395788 '.v' _iterator[3400256] F0_this[7087874]))
                      (6395791 'move' call_tmp[6395782](6395794 call _getRef[3256092] this[6395784] _yieldedIndex[6395769]))
                      const-ref _yieldedIndex[6395797]:_ref(string)[1466327] "temp"
                      (6395799 'move' _yieldedIndex[6395797] call_tmp[6395782])
                      {
                        const-ref item[6395803]:_ref(string)[1466327] "index var" "insert auto destroy"
                        (6395805 'move' item[6395803] _yieldedIndex[6395797])
                        const-val call_tmp[6395808]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6395810 'move' call_tmp[6395808](6395813 call ==[28803] item[6395803] x[3400210]))
                        const-val call_tmp[6395816]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (6395818 'move' call_tmp[6395816] call_tmp[6395808])
                        if call_tmp[6395816]
                        {
                          (6395824 call =[52153] result[3400224] 1)
                          (6395828 call _freeIterator[1519714] _iterator[6062261])
                          (6395831 call _freeIterator[1519981] _iterator[6062028])
                          (6395834 call _freeIterator[1520248] _iterator[6061977])
                          break _breakLabel[3400313] _breakLabel[3400313]
                        }
                        label _continueLabel[6395839]
                      }
                    }
                  }
                  {
                    const-val low[6395873]:int(64)[10] "temp"
                    (6395878 'move' low[6395873](6395875 '.v' _iterator[6062261] F0_low[6835591]))
                    (6395711 '=' i[6395666] low[6395873])
                  }
                  {
                    const-val high[6395880]:int(64)[10] "temp"
                    (6395885 'move' high[6395880](6395882 '.v' _iterator[6062261] F1_high[6835595]))
                    (6395715 '<=' i[6395666] high[6395880])
                  }
                  {
                    val call_tmp[6395719]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    val call_tmp[6395721]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                    (6395723 '+=' i[6395666] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[6395738]
              }
              (6062349 call _freeIterator[1519714] _iterator[6062261])
              label _endchpl_direct_counted_range_iter_helper[6062351]
              (6062354 call _freeIterator[1519981] _iterator[6062028])
              label _endchpl_direct_counted_range_iter[6062356]
            }
            (6062359 call _freeIterator[1520248] _iterator[6061977])
            label _endthese[6062361]
          }
          label _breakLabel[3400313]
          (5635686 call _freeIterator[3385896] _iterator[3400256])
        }
        (3400319 call _leave[3256485] this[3400203])
      }
    }
    (3400348 '=' ret[3400214] result[3400224])
    gotoReturn _end_contains[3400329] _end_contains[3400329]
    label _end_contains[3400329]
    (3400331 return ret[3400214])
  }
  function _ref(list(string,false))[1950614]._fireAllDestructors[3377679](ref arg this[3377683]:_ref(list(string,false))[1950614]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val tmp[3377693]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[3377695]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (3377697 'move' call_tmp[3377695](3377699 '_wide_get_locale' this[3377683]))
      (3377701 'move' tmp[3377693] call_tmp[3377695])
      {
        {
          val _indexOfInterest[3377707]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[3377709]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[3377711]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3377713 'move' call_tmp[3377711](3377716 call _size[1951043] this[3377683]))
          const-val call_tmp[3377719]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3377803]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (3377807 'move' coerce_tmp[3377803](3377805 'deref' call_tmp[3377711]))
          const-val ret_tmp[5545988]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          (3377724 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[3377803] ret_tmp[5545988])
          (5545991 'move' call_tmp[3377719] ret_tmp[5545988])
          (3377727 'move' _iterator[3377709](3377730 call _getIterator[1520079] call_tmp[3377719]))
          {
            val ret[6059371]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6059373]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059375]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6059377]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6059379]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6059381]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059383]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6059385]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6059387]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6059389]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6059391]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6059393]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6059710]:int(64)[10] "temp"
            (6059715 'move' low[6059710](6059712 '.v' _iterator[3377709] F0_low[6832410]))
            const-val count[6059717]:int(64)[10] "temp"
            (6059722 'move' count[6059717](6059719 '.v' _iterator[3377709] F1_count[6832414]))
            (6059396 call chpl_direct_counted_range_iter_helper[1469227] low[6059710] count[6059717] ret_tmp[6059393])
            (6059400 'move' call_tmp[6059391] ret_tmp[6059393])
            (6059403 'move' _iterator[6059389](6059406 call _getIterator[1519812] call_tmp[6059391]))
            val ret[6059408]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
            val tmp[6059410]:bool[19] "dead after last mention" "maybe param" "temp"
            val tmp[6059412]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059414]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6059416]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6059418]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059420]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6059422]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            val call_tmp[6059424]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[6059426]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6059428]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6059430]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val tmp[6059432]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059434]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6059436]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6059438]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6059440]:int(64)[10] "temp"
            (6059442 'move' count[6059440](6059444 '.v' _iterator[6059389] F1_count[6834178]))
            (6059447 'move' call_tmp[6059438](6059450 call <[1469576] count[6059440] 0))
            (6059453 'move' tmp[6059436] call_tmp[6059438])
            (6059456 'move' tmp[6059430] call_tmp[6059438])
            const-val call_tmp[6059459]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (6059461 'move' call_tmp[6059459] call_tmp[6059438])
            if call_tmp[6059438]
            {
              (6059467 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
            }
            const-val start[6059470]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            const-val low[6059472]:int(64)[10] "temp"
            (6059474 'move' low[6059472](6059476 '.v' _iterator[6059389] F0_low[6834174]))
            (6059479 'move' start[6059470] low[6059472])
            const-val end[6059482]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            val tmp[6059484]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[6059486]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[6059488]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6059490]:int(64)[10] "temp"
            (6059492 'move' count[6059490](6059494 '.v' _iterator[6059389] F1_count[6834178]))
            (6059497 'move' call_tmp[6059488](6059500 call ==[52746] count[6059490] 0))
            (6059503 'move' tmp[6059486] call_tmp[6059488])
            if call_tmp[6059488]
            {
              const-val tmp[6059508]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6059510]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6059512]:int(64)[10] "temp"
              (6059514 'move' low[6059512](6059516 '.v' _iterator[6059389] F0_low[6834174]))
              (6059519 'move' call_tmp[6059510](6059521 'cast' uint(64)[86] low[6059512]))
              const-val call_tmp[6059524]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[6059526]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (6059528 'move' coerce_tmp[6059526](6059530 'cast' uint(64)[86] 1))
              (6059533 'move' call_tmp[6059524](6059536 call -[1487313] call_tmp[6059510]))
              val call_tmp[6059538]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6059540 'move' tmp[6059508](6059543 call :[1482043] call_tmp[6059524]))
              (6059545 'move' tmp[6059484] tmp[6059508])
            }
            {
              const-val tmp[6059549]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              val call_tmp[6059551]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[6059553]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6059555]:int(64)[10] "temp"
              (6059557 'move' count[6059555](6059559 '.v' _iterator[6059389] F1_count[6834178]))
              (6059562 'move' call_tmp[6059553] count[6059555])
              const-val call_tmp[6059565]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6059567]:int(64)[10] "temp"
              (6059569 'move' count[6059567](6059571 '.v' _iterator[6059389] F1_count[6834178]))
              (6059574 'move' call_tmp[6059565](6059577 call -[1487343] count[6059567]))
              const-val call_tmp[6059579]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6059581]:int(64)[10] "temp"
              (6059583 'move' low[6059581](6059585 '.v' _iterator[6059389] F0_low[6834174]))
              (6059588 'move' call_tmp[6059579](6059591 call +[56587] low[6059581] call_tmp[6059565]))
              val call_tmp[6059594]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6059596 'move' tmp[6059549] call_tmp[6059579])
              (6059599 'move' tmp[6059484] call_tmp[6059579])
            }
            (6059603 'move' end[6059482] tmp[6059484])
            val _indexOfInterest[6059606]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6059608]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6059610]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6059612]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6059615 call chpl_direct_param_stride_range_iter[1517410] start[6059470] tmp[6059484] ret_tmp[6059612])
            (6059619 'move' call_tmp[6059610] ret_tmp[6059612])
            (6059622 'move' _iterator[6059608](6059625 call _getIterator[1519541] call_tmp[6059610]))
            {
              val ret[6391675]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6391677]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391679]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6391682 call chpl_range_check_stride[1517730])
              val i[6391683]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6391685]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6391687 'move' i[6391683] 0)
              val call_tmp[6391690]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391692]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391694]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391696]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6391698]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6391820]:int(64)[10] "temp"
              (6391825 'move' low[6391820](6391822 '.v' _iterator[6059608] F0_low[6835591]))
              (6391700 'move' default_arg_first[6391698](6391703 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6391820]))
              const-val default_arg_last[6391705]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6391827]:int(64)[10] "temp"
              (6391832 'move' high[6391827](6391829 '.v' _iterator[6059608] F1_high[6835595]))
              (6391707 'move' default_arg_last[6391705](6391710 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6391827]))
              val default_arg_shouldHalt[6391712]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6391714]:bool[19] "dead after last mention" "temp"
              const-val low[6391834]:int(64)[10] "temp"
              (6391839 'move' low[6391834](6391836 '.v' _iterator[6059608] F0_low[6835591]))
              const-val high[6391841]:int(64)[10] "temp"
              (6391846 'move' high[6391841](6391843 '.v' _iterator[6059608] F1_high[6835595]))
              (6391716 'move' _return_tmp_[6391714](6391719 call chpl_checkIfRangeIterWillOverflow[1518856] low[6391834] high[6391841] 1 default_arg_first[6391698] default_arg_last[6391705] 1))
              CForLoop[6391726] hazard
              {
                const-val yret[6391743]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6391745 'move' yret[6391743] i[6391683])
                const-val _yieldedIndex[6391759]:int(64)[10] "temp"
                (6391818 'move' _yieldedIndex[6391759] i[6391683])
                {
                  const-val i[6391761]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6391763 'move' i[6391761] _yieldedIndex[6391759])
                  const-val yret[6391766]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6391768 'move' yret[6391766] _yieldedIndex[6391759])
                  const-val _yieldedIndex[6391771]:int(64)[10] "temp"
                  (6391773 'move' _yieldedIndex[6391771] _yieldedIndex[6391759])
                  const-val i[6391776]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6391778 'move' i[6391776] _yieldedIndex[6391771])
                  const-val yret[6391781]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6391783 'move' yret[6391781] _yieldedIndex[6391771])
                  const-val _yieldedIndex[6391786]:int(64)[10] "temp"
                  (6391788 'move' _yieldedIndex[6391786] _yieldedIndex[6391771])
                  {
                    const-val i[6391792]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6391794 'move' i[6391792] _yieldedIndex[6391786])
                    {
                      const-ref item[6391798]:_ref(string)[1466327] "dead at end of block" "ref var"
                      const-ref call_tmp[6391800]:_ref(string)[1466327] "dead at end of block" "maybe param" "temp"
                      (6391802 'move' call_tmp[6391800](6391805 call _getRef[3256092] this[3377683] i[6391792]))
                      (6391808 'move' item[6391798] call_tmp[6391800])
                      (6391812 call _destroy[3377814] this[3377683] item[6391798])
                    }
                    label _continueLabel[6391815]
                  }
                }
                {
                  const-val low[6391848]:int(64)[10] "temp"
                  (6391853 'move' low[6391848](6391850 '.v' _iterator[6059608] F0_low[6835591]))
                  (6391728 '=' i[6391683] low[6391848])
                }
                {
                  const-val high[6391855]:int(64)[10] "temp"
                  (6391860 'move' high[6391855](6391857 '.v' _iterator[6059608] F1_high[6835595]))
                  (6391732 '<=' i[6391683] high[6391855])
                }
                {
                  val call_tmp[6391736]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6391738]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6391740 '+=' i[6391683] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6391755]
            }
            (6059669 call _freeIterator[1519714] _iterator[6059608])
            label _endchpl_direct_counted_range_iter_helper[6059671]
            (6059674 call _freeIterator[1519981] _iterator[6059389])
            label _endchpl_direct_counted_range_iter[6059676]
          }
          label _breakLabel[3377785]
          (5635424 call _freeIterator[1520248] _iterator[3377709])
        }
        ref call_tmp[3377787]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3377789 'move' call_tmp[3377787](3377792 call _size[1951043] this[3377683]))
        (3377796 call =[52229] call_tmp[3377787] 0)
      }
    }
    (3377799 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._fireAllDestructors[4038422](ref arg this[4038426]:_ref(list(shared Module(real(32)),false))[1955585]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val tmp[4038436]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[4038438]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (4038440 'move' call_tmp[4038438](4038442 '_wide_get_locale' this[4038426]))
      (4038444 'move' tmp[4038436] call_tmp[4038438])
      {
        {
          val _indexOfInterest[4038450]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4038452]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4038454]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4038456 'move' call_tmp[4038454](4038459 call _size[1956012] this[4038426]))
          const-val call_tmp[4038462]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[4038546]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4038550 'move' coerce_tmp[4038546](4038548 'deref' call_tmp[4038454]))
          const-val ret_tmp[5546024]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          (4038467 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[4038546] ret_tmp[5546024])
          (5546027 'move' call_tmp[4038462] ret_tmp[5546024])
          (4038470 'move' _iterator[4038452](4038473 call _getIterator[1520079] call_tmp[4038462]))
          {
            val ret[6100288]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6100290]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100292]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6100294]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6100296]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6100298]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100300]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6100302]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6100304]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6100306]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6100308]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6100310]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6100627]:int(64)[10] "temp"
            (6100632 'move' low[6100627](6100629 '.v' _iterator[4038452] F0_low[6832410]))
            const-val count[6100634]:int(64)[10] "temp"
            (6100639 'move' count[6100634](6100636 '.v' _iterator[4038452] F1_count[6832414]))
            (6100313 call chpl_direct_counted_range_iter_helper[1469227] low[6100627] count[6100634] ret_tmp[6100310])
            (6100317 'move' call_tmp[6100308] ret_tmp[6100310])
            (6100320 'move' _iterator[6100306](6100323 call _getIterator[1519812] call_tmp[6100308]))
            val ret[6100325]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
            val tmp[6100327]:bool[19] "dead after last mention" "maybe param" "temp"
            val tmp[6100329]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100331]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6100333]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6100335]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100337]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6100339]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            val call_tmp[6100341]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[6100343]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6100345]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6100347]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val tmp[6100349]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100351]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6100353]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6100355]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6100357]:int(64)[10] "temp"
            (6100359 'move' count[6100357](6100361 '.v' _iterator[6100306] F1_count[6834178]))
            (6100364 'move' call_tmp[6100355](6100367 call <[1469576] count[6100357] 0))
            (6100370 'move' tmp[6100353] call_tmp[6100355])
            (6100373 'move' tmp[6100347] call_tmp[6100355])
            const-val call_tmp[6100376]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (6100378 'move' call_tmp[6100376] call_tmp[6100355])
            if call_tmp[6100355]
            {
              (6100384 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
            }
            const-val start[6100387]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            const-val low[6100389]:int(64)[10] "temp"
            (6100391 'move' low[6100389](6100393 '.v' _iterator[6100306] F0_low[6834174]))
            (6100396 'move' start[6100387] low[6100389])
            const-val end[6100399]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            val tmp[6100401]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[6100403]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[6100405]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6100407]:int(64)[10] "temp"
            (6100409 'move' count[6100407](6100411 '.v' _iterator[6100306] F1_count[6834178]))
            (6100414 'move' call_tmp[6100405](6100417 call ==[52746] count[6100407] 0))
            (6100420 'move' tmp[6100403] call_tmp[6100405])
            if call_tmp[6100405]
            {
              const-val tmp[6100425]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6100427]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6100429]:int(64)[10] "temp"
              (6100431 'move' low[6100429](6100433 '.v' _iterator[6100306] F0_low[6834174]))
              (6100436 'move' call_tmp[6100427](6100438 'cast' uint(64)[86] low[6100429]))
              const-val call_tmp[6100441]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[6100443]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (6100445 'move' coerce_tmp[6100443](6100447 'cast' uint(64)[86] 1))
              (6100450 'move' call_tmp[6100441](6100453 call -[1487313] call_tmp[6100427]))
              val call_tmp[6100455]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6100457 'move' tmp[6100425](6100460 call :[1482043] call_tmp[6100441]))
              (6100462 'move' tmp[6100401] tmp[6100425])
            }
            {
              const-val tmp[6100466]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              val call_tmp[6100468]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[6100470]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6100472]:int(64)[10] "temp"
              (6100474 'move' count[6100472](6100476 '.v' _iterator[6100306] F1_count[6834178]))
              (6100479 'move' call_tmp[6100470] count[6100472])
              const-val call_tmp[6100482]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6100484]:int(64)[10] "temp"
              (6100486 'move' count[6100484](6100488 '.v' _iterator[6100306] F1_count[6834178]))
              (6100491 'move' call_tmp[6100482](6100494 call -[1487343] count[6100484]))
              const-val call_tmp[6100496]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6100498]:int(64)[10] "temp"
              (6100500 'move' low[6100498](6100502 '.v' _iterator[6100306] F0_low[6834174]))
              (6100505 'move' call_tmp[6100496](6100508 call +[56587] low[6100498] call_tmp[6100482]))
              val call_tmp[6100511]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6100513 'move' tmp[6100466] call_tmp[6100496])
              (6100516 'move' tmp[6100401] call_tmp[6100496])
            }
            (6100520 'move' end[6100399] tmp[6100401])
            val _indexOfInterest[6100523]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6100525]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6100527]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6100529]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6100532 call chpl_direct_param_stride_range_iter[1517410] start[6100387] tmp[6100401] ret_tmp[6100529])
            (6100536 'move' call_tmp[6100527] ret_tmp[6100529])
            (6100539 'move' _iterator[6100525](6100542 call _getIterator[1519541] call_tmp[6100527]))
            {
              val ret[6443129]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6443131]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443133]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6443136 call chpl_range_check_stride[1517730])
              val i[6443137]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6443139]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6443141 'move' i[6443137] 0)
              val call_tmp[6443144]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443146]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443148]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443150]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6443152]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6443274]:int(64)[10] "temp"
              (6443279 'move' low[6443274](6443276 '.v' _iterator[6100525] F0_low[6835591]))
              (6443154 'move' default_arg_first[6443152](6443157 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6443274]))
              const-val default_arg_last[6443159]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6443281]:int(64)[10] "temp"
              (6443286 'move' high[6443281](6443283 '.v' _iterator[6100525] F1_high[6835595]))
              (6443161 'move' default_arg_last[6443159](6443164 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6443281]))
              val default_arg_shouldHalt[6443166]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6443168]:bool[19] "dead after last mention" "temp"
              const-val low[6443288]:int(64)[10] "temp"
              (6443293 'move' low[6443288](6443290 '.v' _iterator[6100525] F0_low[6835591]))
              const-val high[6443295]:int(64)[10] "temp"
              (6443300 'move' high[6443295](6443297 '.v' _iterator[6100525] F1_high[6835595]))
              (6443170 'move' _return_tmp_[6443168](6443173 call chpl_checkIfRangeIterWillOverflow[1518856] low[6443288] high[6443295] 1 default_arg_first[6443152] default_arg_last[6443159] 1))
              CForLoop[6443180] hazard
              {
                const-val yret[6443197]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6443199 'move' yret[6443197] i[6443137])
                const-val _yieldedIndex[6443213]:int(64)[10] "temp"
                (6443272 'move' _yieldedIndex[6443213] i[6443137])
                {
                  const-val i[6443215]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6443217 'move' i[6443215] _yieldedIndex[6443213])
                  const-val yret[6443220]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6443222 'move' yret[6443220] _yieldedIndex[6443213])
                  const-val _yieldedIndex[6443225]:int(64)[10] "temp"
                  (6443227 'move' _yieldedIndex[6443225] _yieldedIndex[6443213])
                  const-val i[6443230]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6443232 'move' i[6443230] _yieldedIndex[6443225])
                  const-val yret[6443235]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6443237 'move' yret[6443235] _yieldedIndex[6443225])
                  const-val _yieldedIndex[6443240]:int(64)[10] "temp"
                  (6443242 'move' _yieldedIndex[6443240] _yieldedIndex[6443225])
                  {
                    const-val i[6443246]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6443248 'move' i[6443246] _yieldedIndex[6443240])
                    {
                      const-ref item[6443252]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "ref var"
                      const-ref call_tmp[6443254]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "maybe param" "temp"
                      (6443256 'move' call_tmp[6443254](6443259 call _getRef[3410286] this[4038426] i[6443246]))
                      (6443262 'move' item[6443252] call_tmp[6443254])
                      (6443266 call _destroy[4038557] this[4038426] item[6443252])
                    }
                    label _continueLabel[6443269]
                  }
                }
                {
                  const-val low[6443302]:int(64)[10] "temp"
                  (6443307 'move' low[6443302](6443304 '.v' _iterator[6100525] F0_low[6835591]))
                  (6443182 '=' i[6443137] low[6443302])
                }
                {
                  const-val high[6443309]:int(64)[10] "temp"
                  (6443314 'move' high[6443309](6443311 '.v' _iterator[6100525] F1_high[6835595]))
                  (6443186 '<=' i[6443137] high[6443309])
                }
                {
                  val call_tmp[6443190]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6443192]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6443194 '+=' i[6443137] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6443209]
            }
            (6100586 call _freeIterator[1519714] _iterator[6100525])
            label _endchpl_direct_counted_range_iter_helper[6100588]
            (6100591 call _freeIterator[1519981] _iterator[6100306])
            label _endchpl_direct_counted_range_iter[6100593]
          }
          label _breakLabel[4038528]
          (5643466 call _freeIterator[1520248] _iterator[4038452])
        }
        ref call_tmp[4038530]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4038532 'move' call_tmp[4038530](4038535 call _size[1956012] this[4038426]))
        (4038539 call =[52229] call_tmp[4038530] 0)
      }
    }
    (4038542 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._fireAllDestructors[4244973](ref arg this[4244977]:_ref(list(shared Module(real(64)),false))[3405554]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val tmp[4244987]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[4244989]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (4244991 'move' call_tmp[4244989](4244993 '_wide_get_locale' this[4244977]))
      (4244995 'move' tmp[4244987] call_tmp[4244989])
      {
        {
          val _indexOfInterest[4245001]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4245003]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4245005]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4245007 'move' call_tmp[4245005](4245010 call _size[3833421] this[4244977]))
          const-val call_tmp[4245013]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[4245097]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4245101 'move' coerce_tmp[4245097](4245099 'deref' call_tmp[4245005]))
          const-val ret_tmp[5546048]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          (4245018 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[4245097] ret_tmp[5546048])
          (5546051 'move' call_tmp[4245013] ret_tmp[5546048])
          (4245021 'move' _iterator[4245003](4245024 call _getIterator[1520079] call_tmp[4245013]))
          {
            val ret[6107256]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6107258]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107260]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6107262]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6107264]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6107266]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107268]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6107270]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6107272]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6107274]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6107276]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6107278]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6107595]:int(64)[10] "temp"
            (6107600 'move' low[6107595](6107597 '.v' _iterator[4245003] F0_low[6832410]))
            const-val count[6107602]:int(64)[10] "temp"
            (6107607 'move' count[6107602](6107604 '.v' _iterator[4245003] F1_count[6832414]))
            (6107281 call chpl_direct_counted_range_iter_helper[1469227] low[6107595] count[6107602] ret_tmp[6107278])
            (6107285 'move' call_tmp[6107276] ret_tmp[6107278])
            (6107288 'move' _iterator[6107274](6107291 call _getIterator[1519812] call_tmp[6107276]))
            val ret[6107293]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
            val tmp[6107295]:bool[19] "dead after last mention" "maybe param" "temp"
            val tmp[6107297]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107299]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6107301]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6107303]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107305]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6107307]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            val call_tmp[6107309]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[6107311]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6107313]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6107315]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val tmp[6107317]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107319]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6107321]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6107323]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6107325]:int(64)[10] "temp"
            (6107327 'move' count[6107325](6107329 '.v' _iterator[6107274] F1_count[6834178]))
            (6107332 'move' call_tmp[6107323](6107335 call <[1469576] count[6107325] 0))
            (6107338 'move' tmp[6107321] call_tmp[6107323])
            (6107341 'move' tmp[6107315] call_tmp[6107323])
            const-val call_tmp[6107344]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (6107346 'move' call_tmp[6107344] call_tmp[6107323])
            if call_tmp[6107323]
            {
              (6107352 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
            }
            const-val start[6107355]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            const-val low[6107357]:int(64)[10] "temp"
            (6107359 'move' low[6107357](6107361 '.v' _iterator[6107274] F0_low[6834174]))
            (6107364 'move' start[6107355] low[6107357])
            const-val end[6107367]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            val tmp[6107369]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[6107371]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[6107373]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6107375]:int(64)[10] "temp"
            (6107377 'move' count[6107375](6107379 '.v' _iterator[6107274] F1_count[6834178]))
            (6107382 'move' call_tmp[6107373](6107385 call ==[52746] count[6107375] 0))
            (6107388 'move' tmp[6107371] call_tmp[6107373])
            if call_tmp[6107373]
            {
              const-val tmp[6107393]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6107395]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6107397]:int(64)[10] "temp"
              (6107399 'move' low[6107397](6107401 '.v' _iterator[6107274] F0_low[6834174]))
              (6107404 'move' call_tmp[6107395](6107406 'cast' uint(64)[86] low[6107397]))
              const-val call_tmp[6107409]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[6107411]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (6107413 'move' coerce_tmp[6107411](6107415 'cast' uint(64)[86] 1))
              (6107418 'move' call_tmp[6107409](6107421 call -[1487313] call_tmp[6107395]))
              val call_tmp[6107423]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6107425 'move' tmp[6107393](6107428 call :[1482043] call_tmp[6107409]))
              (6107430 'move' tmp[6107369] tmp[6107393])
            }
            {
              const-val tmp[6107434]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              val call_tmp[6107436]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[6107438]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6107440]:int(64)[10] "temp"
              (6107442 'move' count[6107440](6107444 '.v' _iterator[6107274] F1_count[6834178]))
              (6107447 'move' call_tmp[6107438] count[6107440])
              const-val call_tmp[6107450]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6107452]:int(64)[10] "temp"
              (6107454 'move' count[6107452](6107456 '.v' _iterator[6107274] F1_count[6834178]))
              (6107459 'move' call_tmp[6107450](6107462 call -[1487343] count[6107452]))
              const-val call_tmp[6107464]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6107466]:int(64)[10] "temp"
              (6107468 'move' low[6107466](6107470 '.v' _iterator[6107274] F0_low[6834174]))
              (6107473 'move' call_tmp[6107464](6107476 call +[56587] low[6107466] call_tmp[6107450]))
              val call_tmp[6107479]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6107481 'move' tmp[6107434] call_tmp[6107464])
              (6107484 'move' tmp[6107369] call_tmp[6107464])
            }
            (6107488 'move' end[6107367] tmp[6107369])
            val _indexOfInterest[6107491]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6107493]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6107495]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6107497]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6107500 call chpl_direct_param_stride_range_iter[1517410] start[6107355] tmp[6107369] ret_tmp[6107497])
            (6107504 'move' call_tmp[6107495] ret_tmp[6107497])
            (6107507 'move' _iterator[6107493](6107510 call _getIterator[1519541] call_tmp[6107495]))
            {
              val ret[6452470]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6452472]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452474]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6452477 call chpl_range_check_stride[1517730])
              val i[6452478]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6452480]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6452482 'move' i[6452478] 0)
              val call_tmp[6452485]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452487]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452489]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452491]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6452493]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6452615]:int(64)[10] "temp"
              (6452620 'move' low[6452615](6452617 '.v' _iterator[6107493] F0_low[6835591]))
              (6452495 'move' default_arg_first[6452493](6452498 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6452615]))
              const-val default_arg_last[6452500]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6452622]:int(64)[10] "temp"
              (6452627 'move' high[6452622](6452624 '.v' _iterator[6107493] F1_high[6835595]))
              (6452502 'move' default_arg_last[6452500](6452505 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6452622]))
              val default_arg_shouldHalt[6452507]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6452509]:bool[19] "dead after last mention" "temp"
              const-val low[6452629]:int(64)[10] "temp"
              (6452634 'move' low[6452629](6452631 '.v' _iterator[6107493] F0_low[6835591]))
              const-val high[6452636]:int(64)[10] "temp"
              (6452641 'move' high[6452636](6452638 '.v' _iterator[6107493] F1_high[6835595]))
              (6452511 'move' _return_tmp_[6452509](6452514 call chpl_checkIfRangeIterWillOverflow[1518856] low[6452629] high[6452636] 1 default_arg_first[6452493] default_arg_last[6452500] 1))
              CForLoop[6452521] hazard
              {
                const-val yret[6452538]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6452540 'move' yret[6452538] i[6452478])
                const-val _yieldedIndex[6452554]:int(64)[10] "temp"
                (6452613 'move' _yieldedIndex[6452554] i[6452478])
                {
                  const-val i[6452556]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6452558 'move' i[6452556] _yieldedIndex[6452554])
                  const-val yret[6452561]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6452563 'move' yret[6452561] _yieldedIndex[6452554])
                  const-val _yieldedIndex[6452566]:int(64)[10] "temp"
                  (6452568 'move' _yieldedIndex[6452566] _yieldedIndex[6452554])
                  const-val i[6452571]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6452573 'move' i[6452571] _yieldedIndex[6452566])
                  const-val yret[6452576]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6452578 'move' yret[6452576] _yieldedIndex[6452566])
                  const-val _yieldedIndex[6452581]:int(64)[10] "temp"
                  (6452583 'move' _yieldedIndex[6452581] _yieldedIndex[6452566])
                  {
                    const-val i[6452587]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6452589 'move' i[6452587] _yieldedIndex[6452581])
                    {
                      const-ref item[6452593]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "ref var"
                      const-ref call_tmp[6452595]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "maybe param" "temp"
                      (6452597 'move' call_tmp[6452595](6452600 call _getRef[3866597] this[4244977] i[6452587]))
                      (6452603 'move' item[6452593] call_tmp[6452595])
                      (6452607 call _destroy[4245108] this[4244977] item[6452593])
                    }
                    label _continueLabel[6452610]
                  }
                }
                {
                  const-val low[6452643]:int(64)[10] "temp"
                  (6452648 'move' low[6452643](6452645 '.v' _iterator[6107493] F0_low[6835591]))
                  (6452523 '=' i[6452478] low[6452643])
                }
                {
                  const-val high[6452650]:int(64)[10] "temp"
                  (6452655 'move' high[6452650](6452652 '.v' _iterator[6107493] F1_high[6835595]))
                  (6452527 '<=' i[6452478] high[6452650])
                }
                {
                  val call_tmp[6452531]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6452533]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6452535 '+=' i[6452478] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6452550]
            }
            (6107554 call _freeIterator[1519714] _iterator[6107493])
            label _endchpl_direct_counted_range_iter_helper[6107556]
            (6107559 call _freeIterator[1519981] _iterator[6107274])
            label _endchpl_direct_counted_range_iter[6107561]
          }
          label _breakLabel[4245079]
          (5644711 call _freeIterator[1520248] _iterator[4245003])
        }
        ref call_tmp[4245081]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4245083 'move' call_tmp[4245081](4245086 call _size[3833421] this[4244977]))
        (4245090 call =[52229] call_tmp[4245081] 0)
      }
    }
    (4245093 return _void[46])
  }
  function _ref(list(string,false))[1950614]._freeAllArrays[3377842](ref arg this[3377846]:_ref(list(string,false))[1950614]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3377852]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
    (3377854 'move' call_tmp[3377852](3377857 call _arrays[1950942] this[3377846]))
    const-val call_tmp[3377860]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3378151]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3378155 'move' coerce_tmp[3378151](3378153 'deref' call_tmp[3377852]))
    (3377862 'move' call_tmp[3377860](3377865 call ==[1950970] coerce_tmp[3378151] nil[32]))
    const-val call_tmp[3377868]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3377870 'move' call_tmp[3377868] call_tmp[3377860])
    if call_tmp[3377868]
    {
      gotoReturn _end__freeAllArrays[3378145] _end__freeAllArrays[3378145]
    }
    const-ref call_tmp[3377880]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3377882 'move' call_tmp[3377880](3377885 call _totalCapacity[1951007] this[3377846]))
    const-val call_tmp[3377888]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3378159]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3378163 'move' coerce_tmp[3378159](3378161 'deref' call_tmp[3377880]))
    (3377890 'move' call_tmp[3377888](3377893 call !=[53220] coerce_tmp[3378159] 0))
    (3377897 call _sanity[225863] call_tmp[3377888])
    const-ref call_tmp[3377900]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3377902 'move' call_tmp[3377900](3377905 call _arrayCapacity[1954057] this[3377846]))
    const-val call_tmp[3377908]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3378168]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3378172 'move' coerce_tmp[3378168](3378170 'deref' call_tmp[3377900]))
    (3377910 'move' call_tmp[3377908](3377913 call !=[53220] coerce_tmp[3378168] 0))
    (3377917 call _sanity[225863] call_tmp[3377908])
    {
      const-val tmp[3377924]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[3377926]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (3377928 'move' call_tmp[3377926](3377930 '_wide_get_locale' this[3377846]))
      (3377932 'move' tmp[3377924] call_tmp[3377926])
      {
        {
          val _indexOfInterest[3377938]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[3377940]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[3377942]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (3377944 'move' call_tmp[3377942](3377947 call _arrayCapacity[1954057] this[3377846]))
          const-val call_tmp[3377950]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3378177]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (3378181 'move' coerce_tmp[3378177](3378179 'deref' call_tmp[3377942]))
          const-val ret_tmp[5545994]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          (3377955 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[3378177] ret_tmp[5545994])
          (5545997 'move' call_tmp[3377950] ret_tmp[5545994])
          (3377958 'move' _iterator[3377940](3377961 call _getIterator[1520079] call_tmp[3377950]))
          {
            val ret[6059725]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6059727]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059729]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6059731]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6059733]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6059735]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059737]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6059739]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6059741]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6059743]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6059745]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6059747]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6060136]:int(64)[10] "temp"
            (6060141 'move' low[6060136](6060138 '.v' _iterator[3377940] F0_low[6832410]))
            const-val count[6060143]:int(64)[10] "temp"
            (6060148 'move' count[6060143](6060145 '.v' _iterator[3377940] F1_count[6832414]))
            (6059750 call chpl_direct_counted_range_iter_helper[1469227] low[6060136] count[6060143] ret_tmp[6059747])
            (6059754 'move' call_tmp[6059745] ret_tmp[6059747])
            (6059757 'move' _iterator[6059743](6059760 call _getIterator[1519812] call_tmp[6059745]))
            val ret[6059762]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
            val tmp[6059764]:bool[19] "dead after last mention" "maybe param" "temp"
            val tmp[6059766]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059768]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6059770]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6059772]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059774]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6059776]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            val call_tmp[6059778]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[6059780]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6059782]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6059784]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val tmp[6059786]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6059788]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6059790]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6059792]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6059794]:int(64)[10] "temp"
            (6059796 'move' count[6059794](6059798 '.v' _iterator[6059743] F1_count[6834178]))
            (6059801 'move' call_tmp[6059792](6059804 call <[1469576] count[6059794] 0))
            (6059807 'move' tmp[6059790] call_tmp[6059792])
            (6059810 'move' tmp[6059784] call_tmp[6059792])
            const-val call_tmp[6059813]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (6059815 'move' call_tmp[6059813] call_tmp[6059792])
            if call_tmp[6059792]
            {
              (6059821 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
            }
            const-val start[6059824]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            const-val low[6059826]:int(64)[10] "temp"
            (6059828 'move' low[6059826](6059830 '.v' _iterator[6059743] F0_low[6834174]))
            (6059833 'move' start[6059824] low[6059826])
            const-val end[6059836]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            val tmp[6059838]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[6059840]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[6059842]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6059844]:int(64)[10] "temp"
            (6059846 'move' count[6059844](6059848 '.v' _iterator[6059743] F1_count[6834178]))
            (6059851 'move' call_tmp[6059842](6059854 call ==[52746] count[6059844] 0))
            (6059857 'move' tmp[6059840] call_tmp[6059842])
            if call_tmp[6059842]
            {
              const-val tmp[6059862]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6059864]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6059866]:int(64)[10] "temp"
              (6059868 'move' low[6059866](6059870 '.v' _iterator[6059743] F0_low[6834174]))
              (6059873 'move' call_tmp[6059864](6059875 'cast' uint(64)[86] low[6059866]))
              const-val call_tmp[6059878]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[6059880]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (6059882 'move' coerce_tmp[6059880](6059884 'cast' uint(64)[86] 1))
              (6059887 'move' call_tmp[6059878](6059890 call -[1487313] call_tmp[6059864]))
              val call_tmp[6059892]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6059894 'move' tmp[6059862](6059897 call :[1482043] call_tmp[6059878]))
              (6059899 'move' tmp[6059838] tmp[6059862])
            }
            {
              const-val tmp[6059903]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              val call_tmp[6059905]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[6059907]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6059909]:int(64)[10] "temp"
              (6059911 'move' count[6059909](6059913 '.v' _iterator[6059743] F1_count[6834178]))
              (6059916 'move' call_tmp[6059907] count[6059909])
              const-val call_tmp[6059919]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6059921]:int(64)[10] "temp"
              (6059923 'move' count[6059921](6059925 '.v' _iterator[6059743] F1_count[6834178]))
              (6059928 'move' call_tmp[6059919](6059931 call -[1487343] count[6059921]))
              const-val call_tmp[6059933]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6059935]:int(64)[10] "temp"
              (6059937 'move' low[6059935](6059939 '.v' _iterator[6059743] F0_low[6834174]))
              (6059942 'move' call_tmp[6059933](6059945 call +[56587] low[6059935] call_tmp[6059919]))
              val call_tmp[6059948]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6059950 'move' tmp[6059903] call_tmp[6059933])
              (6059953 'move' tmp[6059838] call_tmp[6059933])
            }
            (6059957 'move' end[6059836] tmp[6059838])
            val _indexOfInterest[6059960]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6059962]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6059964]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6059966]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6059969 call chpl_direct_param_stride_range_iter[1517410] start[6059824] tmp[6059838] ret_tmp[6059966])
            (6059973 'move' call_tmp[6059964] ret_tmp[6059966])
            (6059976 'move' _iterator[6059962](6059979 call _getIterator[1519541] call_tmp[6059964]))
            {
              val ret[6391863]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6391865]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391867]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6391870 call chpl_range_check_stride[1517730])
              val i[6391871]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6391873]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6391875 'move' i[6391871] 0)
              val call_tmp[6391878]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391880]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391882]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6391884]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6391886]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6392080]:int(64)[10] "temp"
              (6392085 'move' low[6392080](6392082 '.v' _iterator[6059962] F0_low[6835591]))
              (6391888 'move' default_arg_first[6391886](6391891 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6392080]))
              const-val default_arg_last[6391893]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6392087]:int(64)[10] "temp"
              (6392092 'move' high[6392087](6392089 '.v' _iterator[6059962] F1_high[6835595]))
              (6391895 'move' default_arg_last[6391893](6391898 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6392087]))
              val default_arg_shouldHalt[6391900]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6391902]:bool[19] "dead after last mention" "temp"
              const-val low[6392094]:int(64)[10] "temp"
              (6392099 'move' low[6392094](6392096 '.v' _iterator[6059962] F0_low[6835591]))
              const-val high[6392101]:int(64)[10] "temp"
              (6392106 'move' high[6392101](6392103 '.v' _iterator[6059962] F1_high[6835595]))
              (6391904 'move' _return_tmp_[6391902](6391907 call chpl_checkIfRangeIterWillOverflow[1518856] low[6392094] high[6392101] 1 default_arg_first[6391886] default_arg_last[6391893] 1))
              CForLoop[6391914] hazard
              {
                const-val yret[6391931]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6391933 'move' yret[6391931] i[6391871])
                const-val _yieldedIndex[6391947]:int(64)[10] "temp"
                (6392078 'move' _yieldedIndex[6391947] i[6391871])
                {
                  const-val i[6391949]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6391951 'move' i[6391949] _yieldedIndex[6391947])
                  const-val yret[6391954]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6391956 'move' yret[6391954] _yieldedIndex[6391947])
                  const-val _yieldedIndex[6391959]:int(64)[10] "temp"
                  (6391961 'move' _yieldedIndex[6391959] _yieldedIndex[6391947])
                  const-val i[6391964]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6391966 'move' i[6391964] _yieldedIndex[6391959])
                  const-val yret[6391969]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6391971 'move' yret[6391969] _yieldedIndex[6391959])
                  const-val _yieldedIndex[6391974]:int(64)[10] "temp"
                  (6391976 'move' _yieldedIndex[6391974] _yieldedIndex[6391959])
                  {
                    const-val i[6391980]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6391982 'move' i[6391980] _yieldedIndex[6391974])
                    {
                      ref array[6391986]:_ref(_ddata(string))[1950638] "dead at end of block" "ref var"
                      ref call_tmp[6391988]:_ref(_ddata(string))[1950638] "dead at end of block" "maybe param" "temp"
                      const-ref _this_tmp_[6391990]:_ref(_ddata(_ddata(string)))[1950661] "dead at end of block" "temp"
                      (6391992 'move' _this_tmp_[6391990](6391995 call _arrays[1950942] this[3377846]))
                      val coerce_tmp[6391997]:_ddata(_ddata(string))[1950652] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (6391999 'move' coerce_tmp[6391997](6392001 'deref' _this_tmp_[6391990]))
                      (6392003 'move' call_tmp[6391988](6392006 call this[1954094] coerce_tmp[6391997] i[6391980]))
                      (6392009 'move' array[6391986] call_tmp[6391988])
                      const-val call_tmp[6392012]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[6392014]:_ddata(string)[1950629] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6392016 'move' coerce_tmp[6392014](6392018 'deref' array[6391986]))
                      (6392020 'move' call_tmp[6392012](6392023 call ==[3256050] coerce_tmp[6392014] nil[32]))
                      const-val call_tmp[6392026]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (6392028 'move' call_tmp[6392026] call_tmp[6392012])
                      if call_tmp[6392026]
                      {
                        continue _continueLabel[6392075] _continueLabel[6392075]
                      }
                      const-val call_tmp[6392036]:int(64)[10] "dead at end of block" "maybe param" "temp"
                      (6392038 'move' call_tmp[6392036](6392041 call _getArrayCapacity[3254718] this[3377846] i[6391980]))
                      const-val capacity[6392044]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                      (6392046 'move' capacity[6392044] call_tmp[6392036])
                      ref call_tmp[6392049]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                      (6392051 'move' call_tmp[6392049](6392054 call _totalCapacity[1951007] this[3377846]))
                      (6392057 call -=[72507] call_tmp[6392049] capacity[6392044])
                      val coerce_tmp[6392060]:_ddata(string)[1950629] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6392062 'move' coerce_tmp[6392060](6392064 'deref' array[6391986]))
                      (6392067 call _freeArray[3378212] this[3377846] coerce_tmp[6392060] capacity[6392044])
                      (6392072 call =[1954708] array[6391986] nil[32])
                    }
                    label _continueLabel[6392075]
                  }
                }
                {
                  const-val low[6392108]:int(64)[10] "temp"
                  (6392113 'move' low[6392108](6392110 '.v' _iterator[6059962] F0_low[6835591]))
                  (6391916 '=' i[6391871] low[6392108])
                }
                {
                  const-val high[6392115]:int(64)[10] "temp"
                  (6392120 'move' high[6392115](6392117 '.v' _iterator[6059962] F1_high[6835595]))
                  (6391920 '<=' i[6391871] high[6392115])
                }
                {
                  val call_tmp[6391924]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6391926]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6391928 '+=' i[6391871] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6391943]
            }
            (6060023 call _freeIterator[1519714] _iterator[6059962])
            label _endchpl_direct_counted_range_iter_helper[6060025]
            (6060028 call _freeIterator[1519981] _iterator[6059743])
            label _endchpl_direct_counted_range_iter[6060030]
          }
          label _breakLabel[3378074]
          (5635429 call _freeIterator[1520248] _iterator[3377940])
        }
        const-ref call_tmp[3378076]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3378078 'move' call_tmp[3378076](3378081 call _totalCapacity[1951007] this[3377846]))
        const-val call_tmp[3378084]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3378378]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3378382 'move' coerce_tmp[3378378](3378380 'deref' call_tmp[3378076]))
        (3378086 'move' call_tmp[3378084](3378089 call ==[52746] coerce_tmp[3378378] 0))
        (3378093 call _sanity[225863] call_tmp[3378084])
        const-ref call_tmp[3378096]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
        (3378098 'move' call_tmp[3378096](3378101 call _arrays[1950942] this[3377846]))
        const-ref call_tmp[3378104]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3378106 'move' call_tmp[3378104](3378109 call _arrayCapacity[1954057] this[3377846]))
        val coerce_tmp[3378388]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3378392 'move' coerce_tmp[3378388](3378390 'deref' call_tmp[3378096]))
        const-val coerce_tmp[3378394]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3378398 'move' coerce_tmp[3378394](3378396 'deref' call_tmp[3378104]))
        (3378116 call _freeBlockArray[3254503] this[3377846] coerce_tmp[3378388] coerce_tmp[3378394])
        ref call_tmp[3378120]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
        (3378122 'move' call_tmp[3378120](3378125 call _arrays[1950942] this[3377846]))
        (3378129 call =[1951794] call_tmp[3378120] nil[32])
        ref call_tmp[3378133]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3378135 'move' call_tmp[3378133](3378138 call _size[1951043] this[3377846]))
        (3378142 call =[52229] call_tmp[3378133] 0)
      }
    }
    label _end__freeAllArrays[3378145]
    (3378147 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._freeAllArrays[4038585](ref arg this[4038589]:_ref(list(shared Module(real(32)),false))[1955585]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[4038595]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
    (4038597 'move' call_tmp[4038595](4038600 call _arrays[1955913] this[4038589]))
    const-val call_tmp[4038603]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4038894]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4038898 'move' coerce_tmp[4038894](4038896 'deref' call_tmp[4038595]))
    (4038605 'move' call_tmp[4038603](4038608 call ==[1955941] coerce_tmp[4038894] nil[32]))
    const-val call_tmp[4038611]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4038613 'move' call_tmp[4038611] call_tmp[4038603])
    if call_tmp[4038611]
    {
      gotoReturn _end__freeAllArrays[4038888] _end__freeAllArrays[4038888]
    }
    const-ref call_tmp[4038623]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4038625 'move' call_tmp[4038623](4038628 call _totalCapacity[1955976] this[4038589]))
    const-val call_tmp[4038631]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4038902]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4038906 'move' coerce_tmp[4038902](4038904 'deref' call_tmp[4038623]))
    (4038633 'move' call_tmp[4038631](4038636 call !=[53220] coerce_tmp[4038902] 0))
    (4038640 call _sanity[225863] call_tmp[4038631])
    const-ref call_tmp[4038643]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4038645 'move' call_tmp[4038643](4038648 call _arrayCapacity[1959026] this[4038589]))
    const-val call_tmp[4038651]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4038911]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4038915 'move' coerce_tmp[4038911](4038913 'deref' call_tmp[4038643]))
    (4038653 'move' call_tmp[4038651](4038656 call !=[53220] coerce_tmp[4038911] 0))
    (4038660 call _sanity[225863] call_tmp[4038651])
    {
      const-val tmp[4038667]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[4038669]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (4038671 'move' call_tmp[4038669](4038673 '_wide_get_locale' this[4038589]))
      (4038675 'move' tmp[4038667] call_tmp[4038669])
      {
        {
          val _indexOfInterest[4038681]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4038683]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4038685]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4038687 'move' call_tmp[4038685](4038690 call _arrayCapacity[1959026] this[4038589]))
          const-val call_tmp[4038693]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[4038920]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4038924 'move' coerce_tmp[4038920](4038922 'deref' call_tmp[4038685]))
          const-val ret_tmp[5546030]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          (4038698 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[4038920] ret_tmp[5546030])
          (5546033 'move' call_tmp[4038693] ret_tmp[5546030])
          (4038701 'move' _iterator[4038683](4038704 call _getIterator[1520079] call_tmp[4038693]))
          {
            val ret[6100642]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6100644]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100646]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6100648]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6100650]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6100652]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100654]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6100656]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6100658]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6100660]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6100662]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6100664]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6101053]:int(64)[10] "temp"
            (6101058 'move' low[6101053](6101055 '.v' _iterator[4038683] F0_low[6832410]))
            const-val count[6101060]:int(64)[10] "temp"
            (6101065 'move' count[6101060](6101062 '.v' _iterator[4038683] F1_count[6832414]))
            (6100667 call chpl_direct_counted_range_iter_helper[1469227] low[6101053] count[6101060] ret_tmp[6100664])
            (6100671 'move' call_tmp[6100662] ret_tmp[6100664])
            (6100674 'move' _iterator[6100660](6100677 call _getIterator[1519812] call_tmp[6100662]))
            val ret[6100679]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
            val tmp[6100681]:bool[19] "dead after last mention" "maybe param" "temp"
            val tmp[6100683]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100685]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6100687]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6100689]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100691]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6100693]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            val call_tmp[6100695]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[6100697]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6100699]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6100701]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val tmp[6100703]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6100705]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6100707]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6100709]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6100711]:int(64)[10] "temp"
            (6100713 'move' count[6100711](6100715 '.v' _iterator[6100660] F1_count[6834178]))
            (6100718 'move' call_tmp[6100709](6100721 call <[1469576] count[6100711] 0))
            (6100724 'move' tmp[6100707] call_tmp[6100709])
            (6100727 'move' tmp[6100701] call_tmp[6100709])
            const-val call_tmp[6100730]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (6100732 'move' call_tmp[6100730] call_tmp[6100709])
            if call_tmp[6100709]
            {
              (6100738 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
            }
            const-val start[6100741]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            const-val low[6100743]:int(64)[10] "temp"
            (6100745 'move' low[6100743](6100747 '.v' _iterator[6100660] F0_low[6834174]))
            (6100750 'move' start[6100741] low[6100743])
            const-val end[6100753]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            val tmp[6100755]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[6100757]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[6100759]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6100761]:int(64)[10] "temp"
            (6100763 'move' count[6100761](6100765 '.v' _iterator[6100660] F1_count[6834178]))
            (6100768 'move' call_tmp[6100759](6100771 call ==[52746] count[6100761] 0))
            (6100774 'move' tmp[6100757] call_tmp[6100759])
            if call_tmp[6100759]
            {
              const-val tmp[6100779]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6100781]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6100783]:int(64)[10] "temp"
              (6100785 'move' low[6100783](6100787 '.v' _iterator[6100660] F0_low[6834174]))
              (6100790 'move' call_tmp[6100781](6100792 'cast' uint(64)[86] low[6100783]))
              const-val call_tmp[6100795]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[6100797]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (6100799 'move' coerce_tmp[6100797](6100801 'cast' uint(64)[86] 1))
              (6100804 'move' call_tmp[6100795](6100807 call -[1487313] call_tmp[6100781]))
              val call_tmp[6100809]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6100811 'move' tmp[6100779](6100814 call :[1482043] call_tmp[6100795]))
              (6100816 'move' tmp[6100755] tmp[6100779])
            }
            {
              const-val tmp[6100820]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              val call_tmp[6100822]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[6100824]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6100826]:int(64)[10] "temp"
              (6100828 'move' count[6100826](6100830 '.v' _iterator[6100660] F1_count[6834178]))
              (6100833 'move' call_tmp[6100824] count[6100826])
              const-val call_tmp[6100836]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6100838]:int(64)[10] "temp"
              (6100840 'move' count[6100838](6100842 '.v' _iterator[6100660] F1_count[6834178]))
              (6100845 'move' call_tmp[6100836](6100848 call -[1487343] count[6100838]))
              const-val call_tmp[6100850]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6100852]:int(64)[10] "temp"
              (6100854 'move' low[6100852](6100856 '.v' _iterator[6100660] F0_low[6834174]))
              (6100859 'move' call_tmp[6100850](6100862 call +[56587] low[6100852] call_tmp[6100836]))
              val call_tmp[6100865]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6100867 'move' tmp[6100820] call_tmp[6100850])
              (6100870 'move' tmp[6100755] call_tmp[6100850])
            }
            (6100874 'move' end[6100753] tmp[6100755])
            val _indexOfInterest[6100877]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6100879]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6100881]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6100883]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6100886 call chpl_direct_param_stride_range_iter[1517410] start[6100741] tmp[6100755] ret_tmp[6100883])
            (6100890 'move' call_tmp[6100881] ret_tmp[6100883])
            (6100893 'move' _iterator[6100879](6100896 call _getIterator[1519541] call_tmp[6100881]))
            {
              val ret[6443317]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6443319]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443321]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6443324 call chpl_range_check_stride[1517730])
              val i[6443325]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6443327]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6443329 'move' i[6443325] 0)
              val call_tmp[6443332]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443334]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443336]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6443338]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6443340]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6443534]:int(64)[10] "temp"
              (6443539 'move' low[6443534](6443536 '.v' _iterator[6100879] F0_low[6835591]))
              (6443342 'move' default_arg_first[6443340](6443345 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6443534]))
              const-val default_arg_last[6443347]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6443541]:int(64)[10] "temp"
              (6443546 'move' high[6443541](6443543 '.v' _iterator[6100879] F1_high[6835595]))
              (6443349 'move' default_arg_last[6443347](6443352 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6443541]))
              val default_arg_shouldHalt[6443354]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6443356]:bool[19] "dead after last mention" "temp"
              const-val low[6443548]:int(64)[10] "temp"
              (6443553 'move' low[6443548](6443550 '.v' _iterator[6100879] F0_low[6835591]))
              const-val high[6443555]:int(64)[10] "temp"
              (6443560 'move' high[6443555](6443557 '.v' _iterator[6100879] F1_high[6835595]))
              (6443358 'move' _return_tmp_[6443356](6443361 call chpl_checkIfRangeIterWillOverflow[1518856] low[6443548] high[6443555] 1 default_arg_first[6443340] default_arg_last[6443347] 1))
              CForLoop[6443368] hazard
              {
                const-val yret[6443385]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6443387 'move' yret[6443385] i[6443325])
                const-val _yieldedIndex[6443401]:int(64)[10] "temp"
                (6443532 'move' _yieldedIndex[6443401] i[6443325])
                {
                  const-val i[6443403]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6443405 'move' i[6443403] _yieldedIndex[6443401])
                  const-val yret[6443408]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6443410 'move' yret[6443408] _yieldedIndex[6443401])
                  const-val _yieldedIndex[6443413]:int(64)[10] "temp"
                  (6443415 'move' _yieldedIndex[6443413] _yieldedIndex[6443401])
                  const-val i[6443418]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6443420 'move' i[6443418] _yieldedIndex[6443413])
                  const-val yret[6443423]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6443425 'move' yret[6443423] _yieldedIndex[6443413])
                  const-val _yieldedIndex[6443428]:int(64)[10] "temp"
                  (6443430 'move' _yieldedIndex[6443428] _yieldedIndex[6443413])
                  {
                    const-val i[6443434]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6443436 'move' i[6443434] _yieldedIndex[6443428])
                    {
                      ref array[6443440]:_ref(_ddata(shared Module(real(32))))[1955609] "dead at end of block" "ref var"
                      ref call_tmp[6443442]:_ref(_ddata(shared Module(real(32))))[1955609] "dead at end of block" "maybe param" "temp"
                      const-ref _this_tmp_[6443444]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead at end of block" "temp"
                      (6443446 'move' _this_tmp_[6443444](6443449 call _arrays[1955913] this[4038589]))
                      val coerce_tmp[6443451]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (6443453 'move' coerce_tmp[6443451](6443455 'deref' _this_tmp_[6443444]))
                      (6443457 'move' call_tmp[6443442](6443460 call this[1959063] coerce_tmp[6443451] i[6443434]))
                      (6443463 'move' array[6443440] call_tmp[6443442])
                      const-val call_tmp[6443466]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[6443468]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6443470 'move' coerce_tmp[6443468](6443472 'deref' array[6443440]))
                      (6443474 'move' call_tmp[6443466](6443477 call ==[3410244] coerce_tmp[6443468] nil[32]))
                      const-val call_tmp[6443480]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (6443482 'move' call_tmp[6443480] call_tmp[6443466])
                      if call_tmp[6443480]
                      {
                        continue _continueLabel[6443529] _continueLabel[6443529]
                      }
                      const-val call_tmp[6443490]:int(64)[10] "dead at end of block" "maybe param" "temp"
                      (6443492 'move' call_tmp[6443490](6443495 call _getArrayCapacity[3410124] this[4038589] i[6443434]))
                      const-val capacity[6443498]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                      (6443500 'move' capacity[6443498] call_tmp[6443490])
                      ref call_tmp[6443503]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                      (6443505 'move' call_tmp[6443503](6443508 call _totalCapacity[1955976] this[4038589]))
                      (6443511 call -=[72507] call_tmp[6443503] capacity[6443498])
                      val coerce_tmp[6443514]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6443516 'move' coerce_tmp[6443514](6443518 'deref' array[6443440]))
                      (6443521 call _freeArray[4038955] this[4038589] coerce_tmp[6443514] capacity[6443498])
                      (6443526 call =[1959677] array[6443440] nil[32])
                    }
                    label _continueLabel[6443529]
                  }
                }
                {
                  const-val low[6443562]:int(64)[10] "temp"
                  (6443567 'move' low[6443562](6443564 '.v' _iterator[6100879] F0_low[6835591]))
                  (6443370 '=' i[6443325] low[6443562])
                }
                {
                  const-val high[6443569]:int(64)[10] "temp"
                  (6443574 'move' high[6443569](6443571 '.v' _iterator[6100879] F1_high[6835595]))
                  (6443374 '<=' i[6443325] high[6443569])
                }
                {
                  val call_tmp[6443378]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6443380]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6443382 '+=' i[6443325] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6443397]
            }
            (6100940 call _freeIterator[1519714] _iterator[6100879])
            label _endchpl_direct_counted_range_iter_helper[6100942]
            (6100945 call _freeIterator[1519981] _iterator[6100660])
            label _endchpl_direct_counted_range_iter[6100947]
          }
          label _breakLabel[4038817]
          (5643471 call _freeIterator[1520248] _iterator[4038683])
        }
        const-ref call_tmp[4038819]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4038821 'move' call_tmp[4038819](4038824 call _totalCapacity[1955976] this[4038589]))
        const-val call_tmp[4038827]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[4039121]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4039125 'move' coerce_tmp[4039121](4039123 'deref' call_tmp[4038819]))
        (4038829 'move' call_tmp[4038827](4038832 call ==[52746] coerce_tmp[4039121] 0))
        (4038836 call _sanity[225863] call_tmp[4038827])
        const-ref call_tmp[4038839]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
        (4038841 'move' call_tmp[4038839](4038844 call _arrays[1955913] this[4038589]))
        const-ref call_tmp[4038847]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4038849 'move' call_tmp[4038847](4038852 call _arrayCapacity[1959026] this[4038589]))
        val coerce_tmp[4039131]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4039135 'move' coerce_tmp[4039131](4039133 'deref' call_tmp[4038839]))
        const-val coerce_tmp[4039137]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4039141 'move' coerce_tmp[4039137](4039139 'deref' call_tmp[4038847]))
        (4038859 call _freeBlockArray[3409910] this[4038589] coerce_tmp[4039131] coerce_tmp[4039137])
        ref call_tmp[4038863]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
        (4038865 'move' call_tmp[4038863](4038868 call _arrays[1955913] this[4038589]))
        (4038872 call =[1956763] call_tmp[4038863] nil[32])
        ref call_tmp[4038876]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4038878 'move' call_tmp[4038876](4038881 call _size[1956012] this[4038589]))
        (4038885 call =[52229] call_tmp[4038876] 0)
      }
    }
    label _end__freeAllArrays[4038888]
    (4038890 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._freeAllArrays[4245136](ref arg this[4245140]:_ref(list(shared Module(real(64)),false))[3405554]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[4245146]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
    (4245148 'move' call_tmp[4245146](4245151 call _arrays[3833322] this[4245140]))
    const-val call_tmp[4245154]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[4245445]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4245449 'move' coerce_tmp[4245445](4245447 'deref' call_tmp[4245146]))
    (4245156 'move' call_tmp[4245154](4245159 call ==[3833350] coerce_tmp[4245445] nil[32]))
    const-val call_tmp[4245162]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4245164 'move' call_tmp[4245162] call_tmp[4245154])
    if call_tmp[4245162]
    {
      gotoReturn _end__freeAllArrays[4245439] _end__freeAllArrays[4245439]
    }
    const-ref call_tmp[4245174]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4245176 'move' call_tmp[4245174](4245179 call _totalCapacity[3833385] this[4245140]))
    const-val call_tmp[4245182]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4245453]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4245457 'move' coerce_tmp[4245453](4245455 'deref' call_tmp[4245174]))
    (4245184 'move' call_tmp[4245182](4245187 call !=[53220] coerce_tmp[4245453] 0))
    (4245191 call _sanity[225863] call_tmp[4245182])
    const-ref call_tmp[4245194]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (4245196 'move' call_tmp[4245194](4245199 call _arrayCapacity[3836435] this[4245140]))
    const-val call_tmp[4245202]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[4245462]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (4245466 'move' coerce_tmp[4245462](4245464 'deref' call_tmp[4245194]))
    (4245204 'move' call_tmp[4245202](4245207 call !=[53220] coerce_tmp[4245462] 0))
    (4245211 call _sanity[225863] call_tmp[4245202])
    {
      const-val tmp[4245218]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[4245220]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (4245222 'move' call_tmp[4245220](4245224 '_wide_get_locale' this[4245140]))
      (4245226 'move' tmp[4245218] call_tmp[4245220])
      {
        {
          val _indexOfInterest[4245232]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[4245234]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
          const-ref call_tmp[4245236]:_ref(int(64))[1465689] "dead at end of block" "maybe param" "temp"
          (4245238 'move' call_tmp[4245236](4245241 call _arrayCapacity[3836435] this[4245140]))
          const-val call_tmp[4245244]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[4245471]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (4245475 'move' coerce_tmp[4245471](4245473 'deref' call_tmp[4245236]))
          const-val ret_tmp[5546054]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
          (4245249 call chpl_direct_counted_range_iter[1468903] 0 coerce_tmp[4245471] ret_tmp[5546054])
          (5546057 'move' call_tmp[4245244] ret_tmp[5546054])
          (4245252 'move' _iterator[4245234](4245255 call _getIterator[1520079] call_tmp[4245244]))
          {
            val ret[6107610]:_ir_chpl_direct_counted_range_iter[1520070] "dead after last mention" "RVV" "temp"
            val tmp[6107612]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107614]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6107616]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6107618]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6107620]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107622]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6107624]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val _indexOfInterest[6107626]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6107628]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6107630]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6107632]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
            const-val low[6108021]:int(64)[10] "temp"
            (6108026 'move' low[6108021](6108023 '.v' _iterator[4245234] F0_low[6832410]))
            const-val count[6108028]:int(64)[10] "temp"
            (6108033 'move' count[6108028](6108030 '.v' _iterator[4245234] F1_count[6832414]))
            (6107635 call chpl_direct_counted_range_iter_helper[1469227] low[6108021] count[6108028] ret_tmp[6107632])
            (6107639 'move' call_tmp[6107630] ret_tmp[6107632])
            (6107642 'move' _iterator[6107628](6107645 call _getIterator[1519812] call_tmp[6107630]))
            val ret[6107647]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead after last mention" "RVV" "temp"
            val tmp[6107649]:bool[19] "dead after last mention" "maybe param" "temp"
            val tmp[6107651]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107653]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6107655]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
            val tmp[6107657]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107659]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[6107661]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            val call_tmp[6107663]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[6107665]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6107667]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6107669]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val tmp[6107671]:bool[19] "dead after last mention" "maybe param" "temp"
            val call_tmp[6107673]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val tmp[6107675]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[6107677]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6107679]:int(64)[10] "temp"
            (6107681 'move' count[6107679](6107683 '.v' _iterator[6107628] F1_count[6834178]))
            (6107686 'move' call_tmp[6107677](6107689 call <[1469576] count[6107679] 0))
            (6107692 'move' tmp[6107675] call_tmp[6107677])
            (6107695 'move' tmp[6107669] call_tmp[6107677])
            const-val call_tmp[6107698]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (6107700 'move' call_tmp[6107698] call_tmp[6107677])
            if call_tmp[6107677]
            {
              (6107706 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
            }
            const-val start[6107709]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            const-val low[6107711]:int(64)[10] "temp"
            (6107713 'move' low[6107711](6107715 '.v' _iterator[6107628] F0_low[6834174]))
            (6107718 'move' start[6107709] low[6107711])
            const-val end[6107721]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
            val tmp[6107723]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[6107725]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[6107727]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[6107729]:int(64)[10] "temp"
            (6107731 'move' count[6107729](6107733 '.v' _iterator[6107628] F1_count[6834178]))
            (6107736 'move' call_tmp[6107727](6107739 call ==[52746] count[6107729] 0))
            (6107742 'move' tmp[6107725] call_tmp[6107727])
            if call_tmp[6107727]
            {
              const-val tmp[6107747]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[6107749]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6107751]:int(64)[10] "temp"
              (6107753 'move' low[6107751](6107755 '.v' _iterator[6107628] F0_low[6834174]))
              (6107758 'move' call_tmp[6107749](6107760 'cast' uint(64)[86] low[6107751]))
              const-val call_tmp[6107763]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[6107765]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (6107767 'move' coerce_tmp[6107765](6107769 'cast' uint(64)[86] 1))
              (6107772 'move' call_tmp[6107763](6107775 call -[1487313] call_tmp[6107749]))
              val call_tmp[6107777]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6107779 'move' tmp[6107747](6107782 call :[1482043] call_tmp[6107763]))
              (6107784 'move' tmp[6107723] tmp[6107747])
            }
            {
              const-val tmp[6107788]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              val call_tmp[6107790]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[6107792]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6107794]:int(64)[10] "temp"
              (6107796 'move' count[6107794](6107798 '.v' _iterator[6107628] F1_count[6834178]))
              (6107801 'move' call_tmp[6107792] count[6107794])
              const-val call_tmp[6107804]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[6107806]:int(64)[10] "temp"
              (6107808 'move' count[6107806](6107810 '.v' _iterator[6107628] F1_count[6834178]))
              (6107813 'move' call_tmp[6107804](6107816 call -[1487343] count[6107806]))
              const-val call_tmp[6107818]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val low[6107820]:int(64)[10] "temp"
              (6107822 'move' low[6107820](6107824 '.v' _iterator[6107628] F0_low[6834174]))
              (6107827 'move' call_tmp[6107818](6107830 call +[56587] low[6107820] call_tmp[6107804]))
              val call_tmp[6107833]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6107835 'move' tmp[6107788] call_tmp[6107818])
              (6107838 'move' tmp[6107723] call_tmp[6107818])
            }
            (6107842 'move' end[6107721] tmp[6107723])
            val _indexOfInterest[6107845]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6107847]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[6107849]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6107851]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6107854 call chpl_direct_param_stride_range_iter[1517410] start[6107709] tmp[6107723] ret_tmp[6107851])
            (6107858 'move' call_tmp[6107849] ret_tmp[6107851])
            (6107861 'move' _iterator[6107847](6107864 call _getIterator[1519541] call_tmp[6107849]))
            {
              val ret[6452658]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6452660]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452662]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6452665 call chpl_range_check_stride[1517730])
              val i[6452666]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6452668]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6452670 'move' i[6452666] 0)
              val call_tmp[6452673]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452675]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452677]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6452679]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6452681]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6452875]:int(64)[10] "temp"
              (6452880 'move' low[6452875](6452877 '.v' _iterator[6107847] F0_low[6835591]))
              (6452683 'move' default_arg_first[6452681](6452686 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6452875]))
              const-val default_arg_last[6452688]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6452882]:int(64)[10] "temp"
              (6452887 'move' high[6452882](6452884 '.v' _iterator[6107847] F1_high[6835595]))
              (6452690 'move' default_arg_last[6452688](6452693 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6452882]))
              val default_arg_shouldHalt[6452695]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6452697]:bool[19] "dead after last mention" "temp"
              const-val low[6452889]:int(64)[10] "temp"
              (6452894 'move' low[6452889](6452891 '.v' _iterator[6107847] F0_low[6835591]))
              const-val high[6452896]:int(64)[10] "temp"
              (6452901 'move' high[6452896](6452898 '.v' _iterator[6107847] F1_high[6835595]))
              (6452699 'move' _return_tmp_[6452697](6452702 call chpl_checkIfRangeIterWillOverflow[1518856] low[6452889] high[6452896] 1 default_arg_first[6452681] default_arg_last[6452688] 1))
              CForLoop[6452709] hazard
              {
                const-val yret[6452726]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6452728 'move' yret[6452726] i[6452666])
                const-val _yieldedIndex[6452742]:int(64)[10] "temp"
                (6452873 'move' _yieldedIndex[6452742] i[6452666])
                {
                  const-val i[6452744]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6452746 'move' i[6452744] _yieldedIndex[6452742])
                  const-val yret[6452749]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6452751 'move' yret[6452749] _yieldedIndex[6452742])
                  const-val _yieldedIndex[6452754]:int(64)[10] "temp"
                  (6452756 'move' _yieldedIndex[6452754] _yieldedIndex[6452742])
                  const-val i[6452759]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6452761 'move' i[6452759] _yieldedIndex[6452754])
                  const-val yret[6452764]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6452766 'move' yret[6452764] _yieldedIndex[6452754])
                  const-val _yieldedIndex[6452769]:int(64)[10] "temp"
                  (6452771 'move' _yieldedIndex[6452769] _yieldedIndex[6452754])
                  {
                    const-val i[6452775]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6452777 'move' i[6452775] _yieldedIndex[6452769])
                    {
                      ref array[6452781]:_ref(_ddata(shared Module(real(64))))[3405609] "dead at end of block" "ref var"
                      ref call_tmp[6452783]:_ref(_ddata(shared Module(real(64))))[3405609] "dead at end of block" "maybe param" "temp"
                      const-ref _this_tmp_[6452785]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead at end of block" "temp"
                      (6452787 'move' _this_tmp_[6452785](6452790 call _arrays[3833322] this[4245140]))
                      val coerce_tmp[6452792]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (6452794 'move' coerce_tmp[6452792](6452796 'deref' _this_tmp_[6452785]))
                      (6452798 'move' call_tmp[6452783](6452801 call this[3836472] coerce_tmp[6452792] i[6452775]))
                      (6452804 'move' array[6452781] call_tmp[6452783])
                      const-val call_tmp[6452807]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[6452809]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6452811 'move' coerce_tmp[6452809](6452813 'deref' array[6452781]))
                      (6452815 'move' call_tmp[6452807](6452818 call ==[3866555] coerce_tmp[6452809] nil[32]))
                      const-val call_tmp[6452821]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (6452823 'move' call_tmp[6452821] call_tmp[6452807])
                      if call_tmp[6452821]
                      {
                        continue _continueLabel[6452870] _continueLabel[6452870]
                      }
                      const-val call_tmp[6452831]:int(64)[10] "dead at end of block" "maybe param" "temp"
                      (6452833 'move' call_tmp[6452831](6452836 call _getArrayCapacity[3866435] this[4245140] i[6452775]))
                      const-val capacity[6452839]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
                      (6452841 'move' capacity[6452839] call_tmp[6452831])
                      ref call_tmp[6452844]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                      (6452846 'move' call_tmp[6452844](6452849 call _totalCapacity[3833385] this[4245140]))
                      (6452852 call -=[72507] call_tmp[6452844] capacity[6452839])
                      val coerce_tmp[6452855]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (6452857 'move' coerce_tmp[6452855](6452859 'deref' array[6452781]))
                      (6452862 call _freeArray[4245506] this[4245140] coerce_tmp[6452855] capacity[6452839])
                      (6452867 call =[3837086] array[6452781] nil[32])
                    }
                    label _continueLabel[6452870]
                  }
                }
                {
                  const-val low[6452903]:int(64)[10] "temp"
                  (6452908 'move' low[6452903](6452905 '.v' _iterator[6107847] F0_low[6835591]))
                  (6452711 '=' i[6452666] low[6452903])
                }
                {
                  const-val high[6452910]:int(64)[10] "temp"
                  (6452915 'move' high[6452910](6452912 '.v' _iterator[6107847] F1_high[6835595]))
                  (6452715 '<=' i[6452666] high[6452910])
                }
                {
                  val call_tmp[6452719]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6452721]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6452723 '+=' i[6452666] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6452738]
            }
            (6107908 call _freeIterator[1519714] _iterator[6107847])
            label _endchpl_direct_counted_range_iter_helper[6107910]
            (6107913 call _freeIterator[1519981] _iterator[6107628])
            label _endchpl_direct_counted_range_iter[6107915]
          }
          label _breakLabel[4245368]
          (5644716 call _freeIterator[1520248] _iterator[4245234])
        }
        const-ref call_tmp[4245370]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4245372 'move' call_tmp[4245370](4245375 call _totalCapacity[3833385] this[4245140]))
        const-val call_tmp[4245378]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[4245672]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4245676 'move' coerce_tmp[4245672](4245674 'deref' call_tmp[4245370]))
        (4245380 'move' call_tmp[4245378](4245383 call ==[52746] coerce_tmp[4245672] 0))
        (4245387 call _sanity[225863] call_tmp[4245378])
        const-ref call_tmp[4245390]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
        (4245392 'move' call_tmp[4245390](4245395 call _arrays[3833322] this[4245140]))
        const-ref call_tmp[4245398]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4245400 'move' call_tmp[4245398](4245403 call _arrayCapacity[3836435] this[4245140]))
        val coerce_tmp[4245682]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4245686 'move' coerce_tmp[4245682](4245684 'deref' call_tmp[4245390]))
        const-val coerce_tmp[4245688]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (4245692 'move' coerce_tmp[4245688](4245690 'deref' call_tmp[4245398]))
        (4245410 call _freeBlockArray[3866221] this[4245140] coerce_tmp[4245682] coerce_tmp[4245688])
        ref call_tmp[4245414]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
        (4245416 'move' call_tmp[4245414](4245419 call _arrays[3833322] this[4245140]))
        (4245423 call =[3834172] call_tmp[4245414] nil[32])
        ref call_tmp[4245427]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (4245429 'move' call_tmp[4245427](4245432 call _size[3833421] this[4245140]))
        (4245436 call =[52229] call_tmp[4245427] 0)
      }
    }
    label _end__freeAllArrays[4245439]
    (4245441 return _void[46])
  }
  function _ref(list(string,false))[1950614]._clearLocked[3377589](ref arg this[3377593]:_ref(list(string,false))[1950614]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3377603 call _fireAllDestructors[3377679] this[3377593])
    (3377609 call _freeAllArrays[3377842] this[3377593])
    const-ref call_tmp[3377611]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3377613 'move' call_tmp[3377611](3377616 call _totalCapacity[1951007] this[3377593]))
    const-val call_tmp[3377619]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3378406]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3378410 'move' coerce_tmp[3378406](3378408 'deref' call_tmp[3377611]))
    (3377621 'move' call_tmp[3377619](3377624 call ==[52746] coerce_tmp[3378406] 0))
    (3377628 call _sanity[225863] call_tmp[3377619])
    const-ref call_tmp[3377631]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3377633 'move' call_tmp[3377631](3377636 call _size[1951043] this[3377593]))
    const-val call_tmp[3377639]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3378415]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3378419 'move' coerce_tmp[3378415](3378417 'deref' call_tmp[3377631]))
    (3377641 'move' call_tmp[3377639](3377644 call ==[52746] coerce_tmp[3378415] 0))
    (3377648 call _sanity[225863] call_tmp[3377639])
    const-ref call_tmp[3377651]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
    (3377653 'move' call_tmp[3377651](3377656 call _arrays[1950942] this[3377593]))
    const-val call_tmp[3377659]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[3378424]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3378428 'move' coerce_tmp[3378424](3378426 'deref' call_tmp[3377651]))
    (3377661 'move' call_tmp[3377659](3377664 call ==[1950970] coerce_tmp[3378424] nil[32]))
    (3377668 call _sanity[225863] call_tmp[3377659])
    (3377675 call _firstTimeInitializeArrays[1950796] this[3377593])
    (3377676 return _void[46])
  }
  function _ref(list(string,false))[1950614]._warnForParSafeIndexing[3420651](const  ref arg this[3420655]:_ref(list(string,false))[1950614]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[3420661]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3420669]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (3420699 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._warnForParSafeIndexing[5199693](const  ref arg this[5199697]:_ref(list(shared Module(real(32)),false))[1955585]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[5199703]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[5199711]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (5199741 return _void[46])
  }
  function _ref(list(string,false))[1950614].this[3420332](const  ref arg this[3420336]:_ref(list(string,false))[1950614], const in arg i[3420338]:int(64)[10]) const ref : _ref(string)[1466327] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[3420340]:_ref(string)[1466327] "dead after last mention" "RVV" "temp"
    (3420506 call _warnForParSafeIndexing[3420651] this[3420336])
    val tmp[3420508]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3420513]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[3420526]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[3420528]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3420530]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[3420544]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[3420546]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3420548 'move' call_tmp[3420546](3420554 call _withinBounds[3420710] this[3420336] i[3420338]))
    const-val call_tmp[3420556]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3420558 'move' call_tmp[3420556](3420561 call ![63126] call_tmp[3420546]))
    (3420563 'move' tmp[3420544] call_tmp[3420556])
    (3420568 'move' tmp[3420526] tmp[3420544])
    const-val call_tmp[3420580]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3420582 'move' call_tmp[3420580] tmp[3420526])
    if call_tmp[3420580]
    {
      const-val call_tmp[3420589]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546563]:string[244] "temp"
      (3420594 call :[1496816] i[3420338] ret_tmp[5546563])
      (5546566 'move' call_tmp[3420589] ret_tmp[5546563])
      const-val call_tmp[3420597]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5540388]:string[244] "temp"
      (3420602 call +[28065] "Invalid list index: " call_tmp[3420589] ret_tmp[5540388])
      (5540391 'move' call_tmp[3420597] ret_tmp[5540388])
      const-val msg[3420605]:string[244] "dead at end of block" "const" "insert auto destroy"
      (3420607 'move' msg[3420605] call_tmp[3420597])
      (5635979 call chpl__autoDestroy[3262688] call_tmp[3420589])
      (3420612 call halt[88131] msg[3420605])
      (5635983 call chpl__autoDestroy[3262688] msg[3420605])
    }
    const-ref result[3420617]:_ref(string)[1466327] "dead at end of block" "const" "ref var"
    ref call_tmp[3420621]:_ref(string)[1466327] "dead at end of block" "maybe param" "temp"
    (3420623 'move' call_tmp[3420621](3420629 call _getRef[3256092] this[3420336] i[3420338]))
    (3420631 'move' result[3420617] call_tmp[3420621])
    (3420636 'move' ret[3420340] result[3420617])
    gotoReturn _end_this[3420644] _end_this[3420644]
    label _end_this[3420644]
    (3420646 return ret[3420340])
  }
  function _ref(list(shared Module(real(32)),false))[1955585].this[5199374](const  ref arg this[5199378]:_ref(list(shared Module(real(32)),false))[1955585], const in arg i[5199380]:int(64)[10]) const ref : _ref(shared Module(real(32)))[1955047] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    ref ret[5199382]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "RVV" "temp"
    (5199548 call _warnForParSafeIndexing[5199693] this[5199378])
    val tmp[5199550]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[5199555]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[5199568]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[5199570]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[5199572]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[5199586]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[5199588]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (5199590 'move' call_tmp[5199588](5199596 call _withinBounds[5199752] this[5199378] i[5199380]))
    const-val call_tmp[5199598]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (5199600 'move' call_tmp[5199598](5199603 call ![63126] call_tmp[5199588]))
    (5199605 'move' tmp[5199586] call_tmp[5199598])
    (5199610 'move' tmp[5199568] tmp[5199586])
    const-val call_tmp[5199622]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (5199624 'move' call_tmp[5199622] tmp[5199568])
    if call_tmp[5199622]
    {
      const-val call_tmp[5199631]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546971]:string[244] "temp"
      (5199636 call :[1496816] i[5199380] ret_tmp[5546971])
      (5546974 'move' call_tmp[5199631] ret_tmp[5546971])
      const-val call_tmp[5199639]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[5541168]:string[244] "temp"
      (5199644 call +[28065] "Invalid list index: " call_tmp[5199631] ret_tmp[5541168])
      (5541171 'move' call_tmp[5199639] ret_tmp[5541168])
      const-val msg[5199647]:string[244] "dead at end of block" "const" "insert auto destroy"
      (5199649 'move' msg[5199647] call_tmp[5199639])
      (5656808 call chpl__autoDestroy[3262688] call_tmp[5199631])
      (5199654 call halt[88131] msg[5199647])
      (5656812 call chpl__autoDestroy[3262688] msg[5199647])
    }
    const-ref result[5199659]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "const" "ref var"
    ref call_tmp[5199663]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "maybe param" "temp"
    (5199665 'move' call_tmp[5199663](5199671 call _getRef[3410286] this[5199378] i[5199380]))
    (5199673 'move' result[5199659] call_tmp[5199663])
    (5199678 'move' ret[5199382] result[5199659])
    gotoReturn _end_this[5199686] _end_this[5199686]
    label _end_this[5199686]
    (5199688 return ret[5199382])
  }
  function _ref(list(string,false))[1950614].these[3384535](const  ref arg this[3384539]:_ref(list(string,false))[1950614], ref arg _retArg[5589742]:_ref(_ir_these__ref_list_string_F)[3384759]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[7089809]:_ir_these__ref_list_string_F[3384648] "temp"
    (7089811 '.=' _ir[7089809] F0_this[7087876] this[3384539])
    (7089815 '=' _retArg[5589742] _ir[7089809])
    (7089818 return _void[46])
  }
  type _ic_these__ref_list_string_F[3384642] val super[3384643]:RootClass[236] "super class" val more[3384645]:int(64)[10] const-ref F0_this[7087874]:_ref(list(string,false))[1950614] val F1__iterator[7087878]:_ic_chpl_direct_counted_range_iter[1520064] val F2__iterator[7087880]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F3__iterator[7087882]:_ic_chpl_direct_param_stride_range_iter[1519526] val F4_i[7087884]:int(64)[10] const-val F5_low[7087886]:int(64)[10] ref value[7087888]:_ref(string)[1466327]
  type _ir_these__ref_list_string_F[3384648] const-ref F0_this[7087876]:_ref(list(string,false))[1950614]
  function _getIterator[3384657](const  ref arg ir[3384659]:_ir_these__ref_list_string_F[3384648]) : _ic_these__ref_list_string_F[3384642] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[3384766]:_ic_these__ref_list_string_F[3384642] "dead after last mention" "RVV" "temp"
    val _ic_[3384649]:_ic_these__ref_list_string_F[3384642] "dead after last mention" "temp"
    const-val call_tmp[3384773]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3384776 'move' call_tmp[3384773](3384788 'sizeof_bundle' _ic_these__ref_list_string_F[3384642]))
    val cast_tmp[3384791]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (3384793 'move' cast_tmp[3384791](3384654 call chpl_here_alloc[308303] call_tmp[3384773] 334))
    (3384662 'move' _ic_[3384649](3384795 'cast' _ic_these__ref_list_string_F[3384642] cast_tmp[3384791]))
    (3384664 'setcid' _ic_[3384649])
    (3384771 'move' ret[3384766] _ic_[3384649])
    (7089821 '.=' ret[3384766] more[3384645] 1)
    const-ref tmp[7089825]:_ref(list(string,false))[1950614] "temp"
    (7089830 'move' tmp[7089825](7089826 '.v' ir[3384659] F0_this[7087876]))
    (7089832 '.=' ret[3384766] F0_this[7087874] tmp[7089825])
    (3384768 return ret[3384766])
  }
  function list(string,false)[1950598].init[3377164](ref arg this[3377168]:list(string,false)[1950598], const  ref arg reader[3377174]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3377176]:_ref(jsonDeserializer)[1922054], ref arg error_out[5510380]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[5479983]:string[244] "temp"
    (3377192 call init[3377206] this[3377168])
    val error[5510385]:Error[85511] "error variable" "temp"
    (5510387 'move' error[5510385] nil[32])
    (3377200 call _readHelper[3377450] this[3377168] reader[3377174] deserializer[3377176] error[5510385])
    val errorExists[7302952]:bool[19] "temp"
    (7302957 'move' errorExists[7302952](7302954 '!=' error[5510385] nil[32]))
    if errorExists[7302952]
    {
      (5510391 '=' error_out[5510380] error[5510385])
      gotoErrorHandlingReturn _endinit[5510382] _endinit[5510382]
    }
    label _endinit[5510382]
    (3377203 return _void[46])
  }
  function _ref(list(string,false))[1950614]._readHelper[3377450](ref arg this[3377454]:_ref(list(string,false))[1950614], const  ref arg r[3377456]:fileReader(false,jsonDeserializer)[3276790], const  ref arg deserializer[3377458]:_ref(jsonDeserializer)[1922054], ref arg error_out[5510399]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3377472 call _enter[3253463] this[3377454])
    (3377478 call _clearLocked[3377589] this[3377454])
    const-val call_tmp[3377480]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "dead at end of block" "maybe param" "temp"
    val error[5510404]:Error[85511] "error variable" "temp"
    (5510406 'move' error[5510404] nil[32])
    const-val ret_tmp[5589660]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "temp"
    (3377488 call startList[3378433] deserializer[3377458] r[3377456] error[5510404] ret_tmp[5589660])
    (5589663 'move' call_tmp[3377480] ret_tmp[5589660])
    val errorExists[7302960]:bool[19] "temp"
    (7302965 'move' errorExists[7302960](7302962 '!=' error[5510404] nil[32]))
    if errorExists[7302960]
    {
      (5510410 '=' error_out[5510399] error[5510404])
      gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
    }
    val des[3377490]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "dead at end of block" "insert auto destroy"
    (3377492 'move' des[3377490] call_tmp[3377480])
    const-val done[3377496]:bool[19] "dead at end of block" "insert auto destroy"
    (3377498 'move' done[3377496] 0)
    {
      val tmp[3377503]:bool[19] "dead after last mention" "temp"
      const-val call_tmp[3377505]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5510419]:Error[85511] "error variable" "temp"
      (5510421 'move' error[5510419] nil[32])
      (3377507 'move' call_tmp[3377505](3377513 call hasMore[3378621] des[3377490] error[5510419]))
      val errorExists[7302968]:bool[19] "temp"
      (7302973 'move' errorExists[7302968](7302970 '!=' error[5510419] nil[32]))
      if errorExists[7302968]
      {
        (5510425 '=' error_out[5510399] error[5510419])
        (5635406 call chpl__autoDestroy[4224973] des[3377490])
        gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
      }
      (3377514 'move' tmp[3377503] call_tmp[3377505])
      WhileDo[3377519] hazard
      {
        {
          val call_tmp[3377522]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3377530]:string[244] "dead at end of block" "maybe param" "temp"
          val error[5510434]:Error[85511] "error variable" "temp"
          (5510436 'move' error[5510434] nil[32])
          const-val ret_tmp[5589672]:string[244] "temp"
          (3377538 call readElement[3378816] des[3377490] error[5510434] ret_tmp[5589672])
          (5589675 'move' call_tmp[3377530] ret_tmp[5589672])
          val errorExists[7302976]:bool[19] "temp"
          (7302981 'move' errorExists[7302976](7302978 '!=' error[5510434] nil[32]))
          if errorExists[7302976]
          {
            (5510440 '=' error_out[5510399] error[5510434])
            (5635409 call chpl__autoDestroy[4224973] des[3377490])
            gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
          }
          const-val elt[3377540]:string[244] "dead at end of block" "no auto destroy"
          (3377542 'move' elt[3377540] call_tmp[3377530])
          (3377551 call _appendByRef[3253564] this[3377454] elt[3377540])
        }
        label _continueLabel[3377555]
        const-val call_tmp[3377557]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val error[5510449]:Error[85511] "error variable" "temp"
        (5510451 'move' error[5510449] nil[32])
        (3377559 'move' call_tmp[3377557](3377565 call hasMore[3378621] des[3377490] error[5510449]))
        val errorExists[7302984]:bool[19] "temp"
        (7302989 'move' errorExists[7302984](7302986 '!=' error[5510449] nil[32]))
        if errorExists[7302984]
        {
          (5510455 '=' error_out[5510399] error[5510449])
          (5635412 call chpl__autoDestroy[4224973] des[3377490])
          gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
        }
        (3377566 'move' tmp[3377503] call_tmp[3377557])
        tmp[3377503]
      }
      label _breakLabel[3377571]
    }
    val error[5510464]:Error[85511] "error variable" "temp"
    (5510466 'move' error[5510464] nil[32])
    (3377577 call endList[3379351] des[3377490] error[5510464])
    val errorExists[7302992]:bool[19] "temp"
    (7302997 'move' errorExists[7302992](7302994 '!=' error[5510464] nil[32]))
    if errorExists[7302992]
    {
      (5510470 '=' error_out[5510399] error[5510464])
      (5635415 call chpl__autoDestroy[4224973] des[3377490])
      gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
    }
    (3377584 call _leave[3256485] this[3377454])
    (5635418 call chpl__autoDestroy[4224973] des[3377490])
    label _end_readHelper[5510401]
    (3377585 return _void[46])
  }
  function _ref(list(string,false))[1950614].size[3420221](const  ref arg this[3420225]:_ref(list(string,false))[1950614]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[3420227]:int(64)[10] "dead after last mention" "RVV" "temp"
    val result[3420235]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3420237 'move' result[3420235] 0)
    {
      const-val tmp[3420245]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[3420247]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (3420249 'move' call_tmp[3420247](3420251 '_wide_get_locale' this[3420225]))
      (3420253 'move' tmp[3420245] call_tmp[3420247])
      {
        (3420262 call _enter[3253463] this[3420225])
        const-ref call_tmp[3420264]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        (3420266 'move' call_tmp[3420264](3420269 call _size[1951043] this[3420225]))
        const-val coerce_tmp[3420298]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3420302 'move' coerce_tmp[3420298](3420300 'deref' call_tmp[3420264]))
        (3420273 call =[52229] result[3420235] coerce_tmp[3420298])
        (3420282 call _leave[3256485] this[3420225])
      }
    }
    (3420283 'move' ret[3420227] result[3420235])
    gotoReturn _end_size[3420291] _end_size[3420291]
    label _end_size[3420291]
    (3420293 return ret[3420227])
  }
  function _ref(list(shared Module(real(32)),false))[1955585].size[5199257](const  ref arg this[5199261]:_ref(list(shared Module(real(32)),false))[1955585]) : int(64)[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[5199263]:int(64)[10] "dead after last mention" "RVV" "temp"
    val result[5199271]:int(64)[10] "dead at end of block" "insert auto destroy"
    (5199273 'move' result[5199271] 0)
    {
      const-val tmp[5199281]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[5199283]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (5199285 'move' call_tmp[5199283](5199287 '_wide_get_locale' this[5199261]))
      (5199289 'move' tmp[5199281] call_tmp[5199283])
      {
        (5199298 call _enter[3408916] this[5199261])
        const-ref call_tmp[5199300]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        (5199302 'move' call_tmp[5199300](5199305 call _size[1956012] this[5199261]))
        const-val coerce_tmp[5199334]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (5199338 'move' coerce_tmp[5199334](5199336 'deref' call_tmp[5199300]))
        (5199309 call =[52229] result[5199271] coerce_tmp[5199334])
        (5199318 call _leave[3410679] this[5199261])
      }
    }
    (5199319 'move' ret[5199263] result[5199271])
    gotoReturn _end_size[5199327] _end_size[5199327]
    label _end_size[5199327]
    (5199329 return ret[5199263])
  }
  function _ref(list(string,false))[1950614]._size[1951043](ref arg this[1951047]:_ref(list(string,false))[1950614]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1951049]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1951057]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1951059 'move' call_tmp[1951057](1951061 '.' this[1951047] _size[1950567]))
    (1951064 'move' ret[1951049] call_tmp[1951057])
    (1951068 return ret[1951049])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._size[1956012](ref arg this[1956016]:_ref(list(shared Module(real(32)),false))[1955585]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1956018]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1956026]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1956028 'move' call_tmp[1956026](1956030 '.' this[1956016] _size[1955538]))
    (1956033 'move' ret[1956018] call_tmp[1956026])
    (1956037 return ret[1956018])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._size[3833421](ref arg this[3833425]:_ref(list(shared Module(real(64)),false))[3405554]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3833427]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3833435]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3833437 'move' call_tmp[3833435](3833439 '.' this[3833425] _size[3405514]))
    (3833442 'move' ret[3833427] call_tmp[3833435])
    (3833446 return ret[3833427])
  }
  function _ref(list(string,false))[1950614]._arrays[1950942](ref arg this[1950946]:_ref(list(string,false))[1950614]) ref : _ref(_ddata(_ddata(string)))[1950661] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1950948]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "RVV" "temp"
    ref call_tmp[1950956]:_ref(_ddata(_ddata(string)))[1950661] "dead after last mention" "maybe param" "temp"
    (1950958 'move' call_tmp[1950956](1950960 '.' this[1950946] _arrays[1950579]))
    (1950963 'move' ret[1950948] call_tmp[1950956])
    (1950967 return ret[1950948])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._arrays[1955913](ref arg this[1955917]:_ref(list(shared Module(real(32)),false))[1955585]) ref : _ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1955919]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "RVV" "temp"
    ref call_tmp[1955927]:_ref(_ddata(_ddata(shared Module(real(32)))))[1955632] "dead after last mention" "maybe param" "temp"
    (1955929 'move' call_tmp[1955927](1955931 '.' this[1955917] _arrays[1955550]))
    (1955934 'move' ret[1955919] call_tmp[1955927])
    (1955938 return ret[1955919])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._arrays[3833322](ref arg this[3833326]:_ref(list(shared Module(real(64)),false))[3405554]) ref : _ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3833328]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "RVV" "temp"
    ref call_tmp[3833336]:_ref(_ddata(_ddata(shared Module(real(64)))))[3405632] "dead after last mention" "maybe param" "temp"
    (3833338 'move' call_tmp[3833336](3833340 '.' this[3833326] _arrays[3405526]))
    (3833343 'move' ret[3833328] call_tmp[3833336])
    (3833347 return ret[3833328])
  }
  function _ref(list(string,false))[1950614]._arrayCapacity[1954057](ref arg this[1954061]:_ref(list(string,false))[1950614]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1954063]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1954071]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1954073 'move' call_tmp[1954071](1954075 '.' this[1954061] _arrayCapacity[1950587]))
    (1954078 'move' ret[1954063] call_tmp[1954071])
    (1954082 return ret[1954063])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._arrayCapacity[1959026](ref arg this[1959030]:_ref(list(shared Module(real(32)),false))[1955585]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1959032]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1959040]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1959042 'move' call_tmp[1959040](1959044 '.' this[1959030] _arrayCapacity[1955558]))
    (1959047 'move' ret[1959032] call_tmp[1959040])
    (1959051 return ret[1959032])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._arrayCapacity[3836435](ref arg this[3836439]:_ref(list(shared Module(real(64)),false))[3405554]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3836441]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3836449]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3836451 'move' call_tmp[3836449](3836453 '.' this[3836439] _arrayCapacity[3405534]))
    (3836456 'move' ret[3836441] call_tmp[3836449])
    (3836460 return ret[3836441])
  }
  function _ref(list(string,false))[1950614]._totalCapacity[1951007](ref arg this[1951011]:_ref(list(string,false))[1950614]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1951013]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1951021]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1951023 'move' call_tmp[1951021](1951025 '.' this[1951011] _totalCapacity[1950590]))
    (1951028 'move' ret[1951013] call_tmp[1951021])
    (1951032 return ret[1951013])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._totalCapacity[1955976](ref arg this[1955980]:_ref(list(shared Module(real(32)),false))[1955585]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1955982]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[1955990]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (1955992 'move' call_tmp[1955990](1955994 '.' this[1955980] _totalCapacity[1955561]))
    (1955997 'move' ret[1955982] call_tmp[1955990])
    (1956001 return ret[1955982])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._totalCapacity[3833385](ref arg this[3833389]:_ref(list(shared Module(real(64)),false))[3405554]) ref : _ref(int(64))[1465689] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[3833391]:_ref(int(64))[1465689] "dead after last mention" "RVV" "temp"
    ref call_tmp[3833399]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (3833401 'move' call_tmp[3833399](3833403 '.' this[3833389] _totalCapacity[3405537]))
    (3833406 'move' ret[3833391] call_tmp[3833399])
    (3833410 return ret[3833391])
  }
  type list(string,false)[1950598] val _size[1950567]:int(64)[10] val _arrays[1950579]:_ddata(_ddata(string))[1950652] val _arrayCapacity[1950587]:int(64)[10] val _totalCapacity[1950590]:int(64)[10]
  type list(shared Module(real(32)),false)[1955569] val _size[1955538]:int(64)[10] val _arrays[1955550]:_ddata(_ddata(shared Module(real(32))))[1955623] val _arrayCapacity[1955558]:int(64)[10] val _totalCapacity[1955561]:int(64)[10]
  type list(shared Module(real(64)),false)[3405545] val _size[3405514]:int(64)[10] val _arrays[3405526]:_ddata(_ddata(shared Module(real(64))))[3405623] val _arrayCapacity[3405534]:int(64)[10] val _totalCapacity[3405537]:int(64)[10]
}
AST dump for DefaultAssociative after pass normalize.
Module use list: DSIUtil ChapelDistribution ChapelRange ChapelArray ChapelBase ChapelLocks IO ChapelHashing ChapelHashtable OS Sort 

{
  function chpl__init_DefaultAssociative[468543]() : void[4] "insert line file info" "module init"
  {
    (652361 'init var' debugDefaultAssoc[280613] 0)
    (280616 'end of statement')
    (652363 'init var' debugAssocDataPar[280618] 0)
    (280621 'end of statement')
    (652365 'init var' defaultAssociativeSupportsAutoLocalAccess[280623] 1)
    (280626 'end of statement')
    (628860 return _void[46])
  }
  unknown debugDefaultAssoc[280613] "config" "param"
  unknown debugAssocDataPar[280618] "config" "param"
  unknown defaultAssociativeSupportsAutoLocalAccess[280623] "config" "param"
  function _usingSerializers[280627](arg f[280629]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[628305] "RVV" "param" "temp"
    unknown call_tmp[914889] "expr temp" "maybe param" "maybe type" "temp"
    (914892 'move' call_tmp[914889](280652 call _writing _mt[203] f[280629]))
    unknown call_tmp[914894] "expr temp" "maybe param" "maybe type" "temp"
    (914897 'move' call_tmp[914894](280655 call _cond_test call_tmp[914889]))
    if call_tmp[914894]
    {
      unknown call_tmp[914901] "expr temp" "maybe param" "maybe type" "temp"
      (914904 'move' call_tmp[914901](280637 call serializerType _mt[203] f[280629]))
      unknown call_tmp[914906] "expr temp" "maybe param" "maybe type" "temp"
      (914909 'move' call_tmp[914906](280634 call != call_tmp[914901] nothing[7]))
      (628311 'move' ret[628305](628310 'coerce' call_tmp[914906] bool[19]))
      gotoReturn _end__usingSerializers[628303] _end__usingSerializers[628303]
    }
    {
      unknown call_tmp[914913] "expr temp" "maybe param" "maybe type" "temp"
      (914916 'move' call_tmp[914913](280646 call deserializerType _mt[203] f[280629]))
      unknown call_tmp[914918] "expr temp" "maybe param" "maybe type" "temp"
      (914921 'move' call_tmp[914918](280643 call != call_tmp[914913] nothing[7]))
      (628317 'move' ret[628305](628316 'coerce' call_tmp[914918] bool[19]))
      gotoReturn _end__usingSerializers[628303] _end__usingSerializers[628303]
    }
    label _end__usingSerializers[628303]
    (628307 return ret[628305])
  }
  { scopeless type
    bool[19]
  }
  function _isDefaultDeser[280664](arg f[280666]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[628323] "RVV" "param" "temp"
    unknown call_tmp[914925] "expr temp" "maybe param" "maybe type" "temp"
    (914928 'move' call_tmp[914925](280691 call _writing _mt[203] f[280666]))
    unknown call_tmp[914930] "expr temp" "maybe param" "maybe type" "temp"
    (914933 'move' call_tmp[914930](280694 call _cond_test call_tmp[914925]))
    if call_tmp[914930]
    {
      unknown call_tmp[914937] "expr temp" "maybe param" "maybe type" "temp"
      (914940 'move' call_tmp[914937](280674 call serializerType _mt[203] f[280666]))
      unknown call_tmp[914942] "expr temp" "maybe param" "maybe type" "temp"
      (914945 'move' call_tmp[914942](280672 call isDefaultSerializerType call_tmp[914937]))
      (628329 'move' ret[628323](628328 'coerce' call_tmp[914942] bool[19]))
      gotoReturn _end__isDefaultDeser[628321] _end__isDefaultDeser[628321]
    }
    {
      unknown call_tmp[914949] "expr temp" "maybe param" "maybe type" "temp"
      (914952 'move' call_tmp[914949](280682 call deserializerType _mt[203] f[280666]))
      unknown call_tmp[914954] "expr temp" "maybe param" "maybe type" "temp"
      (914957 'move' call_tmp[914954](280679 call == call_tmp[914949] defaultDeserializer[173096]))
      (628335 'move' ret[628323](628334 'coerce' call_tmp[914954] bool[19]))
      gotoReturn _end__isDefaultDeser[628321] _end__isDefaultDeser[628321]
      (409080 'referenced modules list' IO[208303])
    }
    label _end__isDefaultDeser[628321]
    (628325 return ret[628323])
  }
  { scopeless type
    bool[19]
  }
  function DefaultAssociativeDomRehashHelper[280899](?).startRehash[280713](arg _mt[280721]:_MT[201], arg this[280715]:DefaultAssociativeDomRehashHelper[280899](?), arg newSize[280718]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[280739] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[280740] "expr temp" "temp"
      unknown call_tmp[914961] "expr temp" "maybe param" "maybe type" "temp"
      (914964 'move' call_tmp[914961](409086 call dom _mt[203] this[280715]))
      unknown call_tmp[914968] "expr temp" "maybe param" "maybe type" "temp"
      (914971 'move' call_tmp[914968](280727 call _arrs _mt[203] call_tmp[914961]))
      (280749 'move' _iterator[280740](280747 call _getIterator call_tmp[914968]))
      Defer
      {
        {
          (280764 call _freeIterator _iterator[280740])
        }
      }
      { scopeless type
        (280754 'move' _indexOfInterest[280739](280751 call iteratorIndex _iterator[280740]))
      }
      ForLoop[280741]
      {
        unknown arr[280724] "index var" "insert auto destroy"
        (566117 'end of statement')
        (280759 'move' arr[280724] _indexOfInterest[280739])
        (566118 'end of statement' arr[280724])
        {
          (280737 call(280734 call (partial) _startRehash _mt[203] arr[280724]) newSize[280718])
          (566120 'end of statement' arr[280724])
        }
        label _continueLabel[280744]
        _indexOfInterest[280739]
        _iterator[280740]
      }
      label _breakLabel[280745]
    }
    (628339 return _void[46])
  }
  function DefaultAssociativeDomRehashHelper[280899](?).moveElementDuringRehash[280773](arg _mt[280785]:_MT[201], arg this[280775]:DefaultAssociativeDomRehashHelper[280899](?), arg oldSlot[280778]:int(64)[10], arg newSlot[280782]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[280804] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[280805] "expr temp" "temp"
      unknown call_tmp[914977] "expr temp" "maybe param" "maybe type" "temp"
      (914980 'move' call_tmp[914977](409092 call dom _mt[203] this[280775]))
      unknown call_tmp[914984] "expr temp" "maybe param" "maybe type" "temp"
      (914987 'move' call_tmp[914984](280791 call _arrs _mt[203] call_tmp[914977]))
      (280814 'move' _iterator[280805](280812 call _getIterator call_tmp[914984]))
      Defer
      {
        {
          (280829 call _freeIterator _iterator[280805])
        }
      }
      { scopeless type
        (280819 'move' _indexOfInterest[280804](280816 call iteratorIndex _iterator[280805]))
      }
      ForLoop[280806]
      {
        unknown arr[280788] "index var" "insert auto destroy"
        (566123 'end of statement')
        (280824 'move' arr[280788] _indexOfInterest[280804])
        (566124 'end of statement' arr[280788])
        {
          (280801 call(280798 call (partial) _moveElementDuringRehash _mt[203] arr[280788]) oldSlot[280778] newSlot[280782])
          (566126 'end of statement' arr[280788])
        }
        label _continueLabel[280809]
        _indexOfInterest[280804]
        _iterator[280805]
      }
      label _breakLabel[280810]
    }
    (628341 return _void[46])
  }
  function DefaultAssociativeDomRehashHelper[280899](?).finishRehash[280838](arg _mt[280846]:_MT[201], arg this[280840]:DefaultAssociativeDomRehashHelper[280899](?), arg oldSize[280843]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[280864] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[280865] "expr temp" "temp"
      unknown call_tmp[914993] "expr temp" "maybe param" "maybe type" "temp"
      (914996 'move' call_tmp[914993](409098 call dom _mt[203] this[280840]))
      unknown call_tmp[915000] "expr temp" "maybe param" "maybe type" "temp"
      (915003 'move' call_tmp[915000](280852 call _arrs _mt[203] call_tmp[914993]))
      (280874 'move' _iterator[280865](280872 call _getIterator call_tmp[915000]))
      Defer
      {
        {
          (280889 call _freeIterator _iterator[280865])
        }
      }
      { scopeless type
        (280879 'move' _indexOfInterest[280864](280876 call iteratorIndex _iterator[280865]))
      }
      ForLoop[280866]
      {
        unknown arr[280849] "index var" "insert auto destroy"
        (566129 'end of statement')
        (280884 'move' arr[280849] _indexOfInterest[280864])
        (566130 'end of statement' arr[280849])
        {
          (280862 call(280859 call (partial) _finishRehash _mt[203] arr[280849]) oldSize[280843])
          (566132 'end of statement' arr[280849])
        }
        label _continueLabel[280869]
        _indexOfInterest[280864]
        _iterator[280865]
      }
      label _breakLabel[280870]
    }
    (628343 return _void[46])
  }
  type DefaultAssociativeDomRehashHelper[280899](?) val super[397679]:chpl__rehashHelpers[265685] "super class" unknown dom[280706](280709 call unmanaged DefaultAssociativeDom[468175](?) ?[227])
  type DefaultAssociativeDomRehashHelper[454186](?)
  function DefaultAssociativeDom[283163](?).lockTable[280942](arg _mt[280946]:_MT[201], arg this[280944]:DefaultAssociativeDom[283163](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[915009] "expr temp" "maybe param" "maybe type" "temp"
    (915012 'move' call_tmp[915009](454169 call parSafe _mt[203] this[280944]))
    unknown call_tmp[915014] "expr temp" "maybe param" "maybe type" "temp"
    (915017 'move' call_tmp[915014](280956 call _cond_test call_tmp[915009]))
    if call_tmp[915014]
    {
      unknown call_tmp[915021] "expr temp" "maybe param" "maybe type" "temp"
      (915024 'move' call_tmp[915021](409106 call tableLock _mt[203] this[280944]))
      (280953 call(280950 call (partial) lock _mt[203] call_tmp[915021]))
    }
    (628345 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).unlockTable[280963](arg _mt[280967]:_MT[201], arg this[280965]:DefaultAssociativeDom[283163](?)) : _unknown[42] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[915030] "expr temp" "maybe param" "maybe type" "temp"
    (915033 'move' call_tmp[915030](454174 call parSafe _mt[203] this[280965]))
    unknown call_tmp[915035] "expr temp" "maybe param" "maybe type" "temp"
    (915038 'move' call_tmp[915035](280977 call _cond_test call_tmp[915030]))
    if call_tmp[915035]
    {
      unknown call_tmp[915042] "expr temp" "maybe param" "maybe type" "temp"
      (915045 'move' call_tmp[915042](409111 call tableLock _mt[203] this[280965]))
      (280974 call(280971 call (partial) unlock _mt[203] call_tmp[915042]))
    }
    (628347 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).linksDistribution[280984](arg _mt[280988]:_MT[201], arg this[280986]:DefaultAssociativeDom[283163](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[628351] "RVV" "param" "temp"
    (628356 'move' ret[628351](628355 'deref' 0))
    (628353 return ret[628351])
  }
  function DefaultAssociativeDom[283163](?).dsiLinksDistribution[280995](arg _mt[280999]:_MT[201], arg this[280997]:DefaultAssociativeDom[283163](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[628360] "RVV" "temp"
    (628365 'move' ret[628360](628364 'deref' 0))
    (628362 return ret[628360])
  }
  function DefaultAssociativeDom[283163](?).init[281006](arg _mt[281021]:_MT[201], arg this[281008]:DefaultAssociativeDom[283163](?), arg idxType[281010]:_any[141](?), param arg parSafe[281013]:bool[19], arg dist[281018]:unmanaged DefaultDist[468151]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[533057] "temporary of super field" "temp"
    (533065 'move' super_tmp[533057](533058 '.v' this[281008] c"super"))
    (533061 call init _mt[203] super_tmp[533057])
    (566138 'end of statement')
    unknown tmp[532972] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[578897] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[915049] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (915052 'move' call_tmp[915049](532974 '.v' this[281008] c"super"))
      (578901 'move' call_type_tmp[578897](532977 'typeof' call_tmp[915049]))
    }
    (532978 'move' tmp[532972] call_type_tmp[578897])
    unknown call_tmp[915054] "maybe param" "maybe type" "temp"
    (915057 'move' call_tmp[915054](532983 'cast' tmp[532972] this[281008]))
    unknown chpl__thisAsParent[532980] "dead at end of block" "insert auto destroy" "temp"
    (652367 'init var' chpl__thisAsParent[532980] call_tmp[915054] tmp[532972])
    (532986 'setcid' chpl__thisAsParent[532980])
    (566139 'end of statement')
    unknown idxType[532988] "temp" "type variable"
    (532990 'move' idxType[532988] idxType[281010])
    (532992 'init field' this[281008] c"idxType" idxType[532988])
    unknown call_tmp[915059] "expr temp" "maybe param" "maybe type" "temp"
    (915062 'move' call_tmp[915059](532997 call : parSafe[281013] bool[19]))
    (532999 'init field' this[281008] c"parSafe" call_tmp[915059])
    (566140 'end of statement')
    unknown dist[533002] "temp"
    (533005 'init var' dist[533002] dist[281018] unmanaged DefaultDist[468151])
    (533007 'init field' this[281008] c"dist" dist[533002])
    (566141 'end of statement')
    unknown numEntries[533011] "temp"
    unknown call_tmp[915064] "expr temp" "maybe param" "maybe type" "temp"
    (915067 'move' call_tmp[915064](533014 call chpl__processorAtomicType int(64)[10]))
    (533016 'default init var' numEntries[533011] call_tmp[915064])
    (533018 '.=' this[281008] c"numEntries" numEntries[533011])
    (566142 'end of statement')
    unknown tableLock[533022] "temp"
    unknown tmp[703558] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703559] "maybe param" "temp"
    unknown call_tmp[915069] "expr temp" "maybe param" "maybe type" "temp"
    (915072 'move' call_tmp[915069](533036 '.v' this[281008] c"parSafe"))
    (703564 'move' tmp[703559](703562 call _cond_test call_tmp[915069]))
    if tmp[703559]
    {
      (703569 'move' tmp[703558](703566 '_paramFoldLogical' tmp[703559] chpl_LocalSpinlock[85418]))
    }
    {
      (703574 'move' tmp[703558](703571 '_paramFoldLogical' tmp[703559] nothing[7]))
    }
    (533030 'default init var' tableLock[533022] tmp[703558])
    (533032 '.=' this[281008] c"tableLock" tableLock[533022])
    (566143 'end of statement')
    unknown call_tmp[915074] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (915077 'move' call_tmp[915074](1000467 'new' chpl__hashtable[267644](?) idxType[281010] nothing[7]))
    unknown call_tmp[915079] "expr temp" "maybe param" "maybe type" "temp"
    (915082 'move' call_tmp[915079](533051 '.v' this[281008] c"idxType"))
    unknown call_tmp[915084] "maybe param" "maybe type" "temp"
    (915087 'move' call_tmp[915084](533042 call chpl__hashtable[267644](?) call_tmp[915079] nothing[7]))
    unknown table[533039] "temp"
    (533045 'init var' table[533039] call_tmp[915074] call_tmp[915084])
    (533047 'init field' this[281008] c"table" table[533039])
    (566144 'end of statement')
    (533056 'init done')
    (566145 'end of statement')
    (533055 'setcid' this[281008])
    (566146 'end of statement')
    unknown call_tmp[915091] "expr temp" "maybe param" "maybe type" "temp"
    (915094 'move' call_tmp[915091](281064 call table _mt[203] this[281008]))
    unknown call_tmp[915098] "expr temp" "maybe param" "maybe type" "temp"
    (915101 'move' call_tmp[915098](281067 call rehashHelpers _mt[203] call_tmp[915091]))
    unknown call_tmp[915103] "expr temp" "maybe param" "maybe type" "temp"
    (915106 'move' call_tmp[915103](281073 call : this[281008] unmanaged[183](?)))
    unknown call_tmp[915108] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (915111 'move' call_tmp[915108](1000468 'new' DefaultAssociativeDomRehashHelper[454186](?) call_tmp[915103]))
    (281061 call = call_tmp[915098] call_tmp[915108])
    (566147 'end of statement')
    unknown call_tmp[915113] "expr temp" "maybe param" "maybe type" "temp"
    (915116 'move' call_tmp[915113](281084 call isOwnedClassType idxType[281010]))
    unknown call_tmp[915118] "expr temp" "maybe param" "maybe type" "temp"
    (915121 'move' call_tmp[915118](281086 call _cond_test call_tmp[915113]))
    if call_tmp[915118]
    {
      (281079 call compilerError "Associative domains do not currently work with 'owned' classes as the index type")
    }
    (628367 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).deinit[281092](arg _mt[281096]:_MT[201], arg this[281094]:DefaultAssociativeDom[283163](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    (628369 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).dsiBuildArray[281101](arg _mt[281111]:_MT[201], arg this[281103]:DefaultAssociativeDom[283163](?), arg eltType[281105]:_any[141](?), param arg initElts[281108]:bool[19]) : _unknown[42] "method" "primary method"
  {
    unknown ret[628373] "RVV" "temp"
    unknown call_tmp[915125] "expr temp" "maybe param" "maybe type" "temp"
    (915128 'move' call_tmp[915125](454199 call idxType _mt[203] this[281103]))
    unknown call_tmp[915132] "expr temp" "maybe param" "maybe type" "temp"
    (915135 'move' call_tmp[915132](454204 call parSafe _mt[203] this[281103]))
    unknown call_tmp[915137] "expr temp" "maybe param" "maybe type" "temp"
    (915140 'move' call_tmp[915137](281126 call : this[281103] unmanaged[183](?)))
    unknown call_tmp[915142] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (915145 'move' call_tmp[915142](1000469 'new' DefaultAssociativeArr[454193](?)(eltType = eltType[281105])(idxType = call_tmp[915125])(parSafeDom = call_tmp[915132])(dom = call_tmp[915137])(initElts = initElts[281108])(_chpl_manager = unmanaged[183](?))))
    (628378 'move' ret[628373](628377 'deref' call_tmp[915142]))
    (628375 return ret[628373])
  }
  function DefaultAssociativeDom[283163](?).dsiSerialWrite[281135](arg _mt[281141]:_MT[201], arg this[281137]:DefaultAssociativeDom[283163](?), arg f[281139]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[915149] "expr temp" "maybe param" "maybe type" "temp"
    (915152 'move' call_tmp[915149](281157 call serializer _mt[203] f[281139]))
    unknown call_tmp[915158] "expr temp" "maybe param" "maybe type" "temp"
    (915161 'move' call_tmp[915158](454213 call dsiNumIndices _mt[203] this[281137]))
    unknown call_tmp[915163] "maybe param" "maybe type" "temp"
    (915166 'move' call_tmp[915163](281163 call(281160 call (partial) startList _mt[203] call_tmp[915149]) f[281139] call_tmp[915158]))
    unknown ser[281155] "dead at end of block" "insert auto destroy"
    (652369 'init var' ser[281155] call_tmp[915163])
    (281167 'end of statement')
    {
      unknown _indexOfInterest[281178] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[281179] "expr temp" "temp"
      (281188 'move' _iterator[281179](281186 call _getIterator this[281137]))
      Defer
      {
        {
          (281203 call _freeIterator _iterator[281179])
        }
      }
      { scopeless type
        (281193 'move' _indexOfInterest[281178](281190 call iteratorIndex _iterator[281179]))
      }
      ForLoop[281180]
      {
        unknown idx[281168] "index var" "insert auto destroy"
        (566151 'end of statement')
        (281198 'move' idx[281168] _indexOfInterest[281178])
        (566152 'end of statement' idx[281168])
        (281175 call(281172 call (partial) writeElement _mt[203] ser[281155]) idx[281168])
        (566154 'end of statement' ser[281155] idx[281168])
        label _continueLabel[281183]
        _indexOfInterest[281178]
        _iterator[281179]
      }
      label _breakLabel[281184]
    }
    (281214 call(281211 call (partial) endList _mt[203] ser[281155]))
    (566157 'end of statement' ser[281155])
    (628380 return _void[46])
  }
  where {
    unknown tmp[502596] "maybe param" "temp"
    (502607 'move' tmp[502596](281146 call _usingSerializers f[281139]))
    unknown call_tmp[915172] "expr temp" "maybe param" "maybe type" "temp"
    (915175 'move' call_tmp[915172](502609 call _cond_invalid tmp[502596]))
    if call_tmp[915172]
    {
      (502612 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[703581] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703582] "maybe param" "temp"
    unknown call_tmp[915177] "expr temp" "maybe param" "maybe type" "temp"
    (915180 'move' call_tmp[915177](502597 call isTrue tmp[502596]))
    (703587 'move' tmp[703582](703585 call _cond_test call_tmp[915177]))
    if tmp[703582]
    {
      unknown tmp[703589] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[915182] "expr temp" "maybe param" "maybe type" "temp"
      (915185 'move' call_tmp[915182](281151 call _isDefaultDeser f[281139]))
      unknown call_tmp[915187] "expr temp" "maybe param" "maybe type" "temp"
      (915190 'move' call_tmp[915187](281148 call ! call_tmp[915182]))
      (703591 'move' tmp[703589](502600 call isTrue call_tmp[915187]))
      (703596 'move' tmp[703581](703593 '_paramFoldLogical' tmp[703582] tmp[703589]))
    }
    {
      (703601 'move' tmp[703581](703598 '_paramFoldLogical' tmp[703582] 0))
    }
    (1001646 call chpl_statementLevelSymbol tmp[703581])
  }
  function DefaultAssociativeDom[283163](?).dsiSerialRead[281218](arg _mt[281224]:_MT[201], arg this[281220]:DefaultAssociativeDom[283163](?), arg f[281222]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (281238 call(454221 call (partial) dsiClear _mt[203] this[281220]))
    (566159 'end of statement')
    unknown call_tmp[915196] "expr temp" "maybe param" "maybe type" "temp"
    (915199 'move' call_tmp[915196](281242 call deserializer _mt[203] f[281222]))
    unknown call_tmp[915203] "maybe param" "maybe type" "temp"
    (915206 'move' call_tmp[915203](281248 call(281245 call (partial) startList _mt[203] call_tmp[915196]) f[281222]))
    unknown des[281240] "dead at end of block" "insert auto destroy"
    (652371 'init var' des[281240] call_tmp[915203])
    (281251 'end of statement')
    {
      unknown tmp[281271] "temp"
      (281289 'move' tmp[281271](281287 call _cond_test 1))
      WhileDo[281276]
      {
        {
          Try
          {
            {
              unknown call_tmp[915214] "expr temp" "maybe param" "maybe type" "temp"
              (915217 'move' call_tmp[915214](454231 call idxType _mt[203] this[281220]))
              unknown call_tmp[915219] "expr temp" "maybe param" "maybe type" "temp"
              (915222 'move' call_tmp[915219](281261 call(281258 call (partial) readElement _mt[203] des[281240]) call_tmp[915214]))
              (281256 call(454226 call (partial) dsiAdd _mt[203] this[281220]) call_tmp[915219])
              (566160 'end of statement' des[281240])
            }
          }
          Catch
          {
            unknown call_tmp[915224] "maybe param" "maybe type" "temp"
            (915227 'move' call_tmp[915224](395557 'current error'))
            unknown tmp[395554] "dead at end of block" "insert auto destroy" "temp"
            (652373 'init var' tmp[395554] call_tmp[915224])
            unknown call_tmp[915229] "expr temp" "maybe param" "maybe type" "temp"
            (915232 'move' call_tmp[915229](395562 'to non nilable class' tmp[395554]))
            unknown call_tmp[915234] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
            (915237 'move' call_tmp[915234](1000470 'new' _owned[238](?) call_tmp[915229]))
            unknown chpl_anon_error[395560] "dead at end of block" "insert auto destroy"
            (652375 'init var' chpl_anon_error[395560] call_tmp[915234])
            (566162 'end of statement')
            {
              break _breakLabel[281275] _breakLabel[281275]
            }
          }
        }
        label _continueLabel[281274]
        (281282 'move' tmp[281271](281280 call _cond_test 1))
        tmp[281271]
      }
      label _breakLabel[281275]
    }
    (281296 call(281293 call (partial) endList _mt[203] des[281240]))
    (566163 'end of statement' des[281240])
    (628382 return _void[46])
  }
  where {
    unknown tmp[502617] "maybe param" "temp"
    (502628 'move' tmp[502617](281229 call _usingSerializers f[281222]))
    unknown call_tmp[915241] "expr temp" "maybe param" "maybe type" "temp"
    (915244 'move' call_tmp[915241](502630 call _cond_invalid tmp[502617]))
    if call_tmp[915241]
    {
      (502633 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[703608] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703609] "maybe param" "temp"
    unknown call_tmp[915246] "expr temp" "maybe param" "maybe type" "temp"
    (915249 'move' call_tmp[915246](502618 call isTrue tmp[502617]))
    (703614 'move' tmp[703609](703612 call _cond_test call_tmp[915246]))
    if tmp[703609]
    {
      unknown tmp[703616] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[915251] "expr temp" "maybe param" "maybe type" "temp"
      (915254 'move' call_tmp[915251](281234 call _isDefaultDeser f[281222]))
      unknown call_tmp[915256] "expr temp" "maybe param" "maybe type" "temp"
      (915259 'move' call_tmp[915256](281231 call ! call_tmp[915251]))
      (703618 'move' tmp[703616](502621 call isTrue call_tmp[915256]))
      (703623 'move' tmp[703608](703620 '_paramFoldLogical' tmp[703609] tmp[703616]))
    }
    {
      (703628 'move' tmp[703608](703625 '_paramFoldLogical' tmp[703609] 0))
    }
    (1001648 call chpl_statementLevelSymbol tmp[703608])
  }
  function DefaultAssociativeDom[283163](?).dsiSerialWrite[281300](arg _mt[281306]:_MT[201], arg this[281302]:DefaultAssociativeDom[283163](?), arg f[281304]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[915263] "maybe param" "maybe type" "temp"
    (915266 'move' call_tmp[915263](281315 call(281312 call (partial) _binary _mt[203] f[281304])))
    const binary[281310] "dead at end of block" "const" "insert auto destroy"
    (652377 'init var' binary[281310] call_tmp[915263])
    (281317 'end of statement')
    unknown call_tmp[915268] "expr temp" "maybe param" "maybe type" "temp"
    (915271 'move' call_tmp[915268](281447 call _cond_test binary[281310]))
    if call_tmp[915268]
    {
      unknown call_tmp[915277] "expr temp" "maybe param" "maybe type" "temp"
      (915280 'move' call_tmp[915277](454235 call dsiNumIndices _mt[203] this[281302]))
      (281323 call(281320 call (partial) write _mt[203] f[281304]) call_tmp[915277])
      (566165 'end of statement')
      {
        unknown _indexOfInterest[281335] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[281336] "expr temp" "temp"
        (281345 'move' _iterator[281336](281343 call _getIterator this[281302]))
        Defer
        {
          {
            (281360 call _freeIterator _iterator[281336])
          }
        }
        { scopeless type
          (281350 'move' _indexOfInterest[281335](281347 call iteratorIndex _iterator[281336]))
        }
        ForLoop[281337]
        {
          unknown idx[281325] "index var" "insert auto destroy"
          (566167 'end of statement')
          (281355 'move' idx[281325] _indexOfInterest[281335])
          (566168 'end of statement' idx[281325])
          {
            (281333 call(281330 call (partial) write _mt[203] f[281304]) idx[281325])
            (566170 'end of statement' idx[281325])
          }
          label _continueLabel[281340]
          _indexOfInterest[281335]
          _iterator[281336]
        }
        label _breakLabel[281341]
      }
    }
    {
      unknown first[281369] "dead at end of block" "insert auto destroy"
      (652379 'init var' first[281369] 1)
      (281372 'end of statement')
      (281377 call(281374 call (partial) writeLiteral _mt[203] f[281304]) "{")
      (566172 'end of statement')
      {
        unknown _indexOfInterest[281408] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[281409] "expr temp" "temp"
        (281418 'move' _iterator[281409](281416 call _getIterator this[281302]))
        Defer
        {
          {
            (281433 call _freeIterator _iterator[281409])
          }
        }
        { scopeless type
          (281423 'move' _indexOfInterest[281408](281420 call iteratorIndex _iterator[281409]))
        }
        ForLoop[281410]
        {
          unknown idx[281379] "index var" "insert auto destroy"
          (566174 'end of statement')
          (281428 'move' idx[281379] _indexOfInterest[281408])
          (566175 'end of statement' idx[281379])
          {
            unknown call_tmp[915286] "expr temp" "maybe param" "maybe type" "temp"
            (915289 'move' call_tmp[915286](281396 call _cond_test first[281369]))
            if call_tmp[915286]
            {
              (281383 call = first[281369] 0)
              (566177 'end of statement' first[281369])
            }
            {
              (281392 call(281389 call (partial) writeLiteral _mt[203] f[281304]) ", ")
            }
            (281406 call(281403 call (partial) write _mt[203] f[281304]) idx[281379])
            (566180 'end of statement' idx[281379])
          }
          label _continueLabel[281413]
          _indexOfInterest[281408]
          _iterator[281409]
        }
        label _breakLabel[281414]
      }
      (281444 call(281441 call (partial) writeLiteral _mt[203] f[281304]) "}")
    }
    (628384 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).dsiSerialRead[281453](arg _mt[281459]:_MT[201], arg this[281455]:DefaultAssociativeDom[283163](?), arg f[281457]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[915299] "maybe param" "maybe type" "temp"
    (915302 'move' call_tmp[915299](281468 call(281465 call (partial) _binary _mt[203] f[281457])))
    const binary[281463] "dead at end of block" "const" "insert auto destroy"
    (652381 'init var' binary[281463] call_tmp[915299])
    (281470 'end of statement')
    (281472 call(454246 call (partial) dsiClear _mt[203] this[281455]))
    (566183 'end of statement')
    unknown call_tmp[915306] "expr temp" "maybe param" "maybe type" "temp"
    (915309 'move' call_tmp[915306](281618 call _cond_test binary[281463]))
    if call_tmp[915306]
    {
      unknown call_tmp[915313] "maybe param" "maybe type" "temp"
      (915316 'move' call_tmp[915313](281481 call(281478 call (partial) read _mt[203] f[281457]) int(64)[10]))
      const numIndices[281475] "dead at end of block" "const" "insert auto destroy"
      (652383 'init var' numIndices[281475] call_tmp[915313] int(64)[10])
      (281484 'end of statement')
      {
        unknown _indexOfInterest[281500] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[281501] "expr temp" "temp"
        unknown call_tmp[915318] "expr temp" "maybe param" "maybe type" "temp"
        (915321 'move' call_tmp[915318](281514 call chpl_direct_range_iter 1 numIndices[281475]))
        (281510 'move' _iterator[281501](281508 call _getIterator call_tmp[915318]))
        Defer
        {
          {
            (281529 call _freeIterator _iterator[281501])
          }
        }
        { scopeless type
          (281519 'move' _indexOfInterest[281500](281516 call iteratorIndex _iterator[281501]))
        }
        ForLoop[281502]
        {
          unknown i[281485] "index var" "insert auto destroy"
          (566185 'end of statement')
          (281524 'move' i[281485] _indexOfInterest[281500])
          (566186 'end of statement' i[281485])
          {
            unknown call_tmp[915329] "expr temp" "maybe param" "maybe type" "temp"
            (915332 'move' call_tmp[915329](454255 call idxType _mt[203] this[281455]))
            unknown call_tmp[915334] "expr temp" "maybe param" "maybe type" "temp"
            (915337 'move' call_tmp[915334](281498 call(281495 call (partial) read _mt[203] f[281457]) call_tmp[915329]))
            (281493 call(454250 call (partial) dsiAdd _mt[203] this[281455]) call_tmp[915334])
          }
          label _continueLabel[281505]
          _indexOfInterest[281500]
          _iterator[281501]
        }
        label _breakLabel[281506]
      }
    }
    {
      (281541 call(281538 call (partial) readLiteral _mt[203] f[281457]) "{")
      (566189 'end of statement')
      unknown first[281544] "dead at end of block" "insert auto destroy"
      (652385 'init var' first[281544] 1)
      (281547 'end of statement')
      {
        unknown tmp[281596] "temp"
        (281614 'move' tmp[281596](281612 call _cond_test 1))
        WhileDo[281601]
        {
          {
            Try
            {
              {
                (281555 call(281552 call (partial) readLiteral _mt[203] f[281457]) "}")
                (566190 'end of statement')
                break _breakLabel[281600] _breakLabel[281600]
              }
            }
            Catch err : BadFormatError
            {
              unknown call_tmp[915343] "expr temp" "maybe param" "maybe type" "temp"
              (915346 'move' call_tmp[915343](395571 'current error'))
              unknown call_tmp[915348] "maybe param" "maybe type" "temp"
              (915351 'move' call_tmp[915348](395572 'dynamic_cast' unmanaged BadFormatError?[468259] call_tmp[915343]))
              unknown tmp[395568] "dead at end of block" "insert auto destroy" "temp"
              (652387 'init var' tmp[395568] call_tmp[915348])
              unknown call_tmp[915353] "expr temp" "maybe param" "maybe type" "temp"
              (915356 'move' call_tmp[915353](395575 '!=' tmp[395568] nil[32]))
              if call_tmp[915353]
              {
                unknown call_tmp[915358] "expr temp" "maybe param" "maybe type" "temp"
                (915361 'move' call_tmp[915358](395581 'to non nilable class' tmp[395568]))
                unknown call_tmp[915363] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (915366 'move' call_tmp[915363](1000471 'new' _owned[238](?) call_tmp[915358]))
                unknown err[281564] "dead at end of block" "insert auto destroy"
                (652389 'init var' err[281564] call_tmp[915363])
                (566191 'end of statement')
                {
                }
              }
              {
              }
            }
            unknown call_tmp[915368] "expr temp" "maybe param" "maybe type" "temp"
            (915371 'move' call_tmp[915368](281576 call ! first[281544]))
            unknown call_tmp[915373] "expr temp" "maybe param" "maybe type" "temp"
            (915376 'move' call_tmp[915373](281579 call _cond_test call_tmp[915368]))
            if call_tmp[915373]
            {
              (281572 call(281569 call (partial) readLiteral _mt[203] f[281457]) "," 1)
            }
            (281584 call = first[281544] 0)
            (566193 'end of statement' first[281544])
            unknown call_tmp[915386] "expr temp" "maybe param" "maybe type" "temp"
            (915389 'move' call_tmp[915386](454268 call idxType _mt[203] this[281455]))
            unknown call_tmp[915391] "expr temp" "maybe param" "maybe type" "temp"
            (915394 'move' call_tmp[915391](281594 call(281591 call (partial) read _mt[203] f[281457]) call_tmp[915386]))
            (281589 call(454263 call (partial) dsiAdd _mt[203] this[281455]) call_tmp[915391])
          }
          label _continueLabel[281599]
          (281607 'move' tmp[281596](281605 call _cond_test 1))
          tmp[281596]
        }
        label _breakLabel[281600]
      }
    }
    (628386 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).dsiAssignDomain[281624](arg _mt[281636]:_MT[201], arg this[281626]:DefaultAssociativeDom[283163](?), arg rhs[281629]:_domain[225034](?), arg lhsPrivate[281633]:bool[19]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (281640 call chpl_assignDomainWithIndsIterSafeForRemoving this[281626] rhs[281629])
    (628388 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).dsiNumIndices[281645](arg _mt[281649]:_MT[201], arg this[281647]:DefaultAssociativeDom[283163](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[628392] "RVV" "temp"
    unknown call_tmp[915398] "expr temp" "maybe param" "maybe type" "temp"
    (915401 'move' call_tmp[915398](409144 call numEntries _mt[203] this[281647]))
    unknown call_tmp[915405] "expr temp" "maybe param" "maybe type" "temp"
    (915408 'move' call_tmp[915405](281657 call(281654 call (partial) read _mt[203] call_tmp[915398])))
    (628397 'move' ret[628392](628396 'deref' call_tmp[915405]))
    (628394 return ret[628392])
  }
  function DefaultAssociativeDom[283163](?).dsiIndsIterSafeForRemoving[281660](arg _mt[281664]:_MT[201], arg this[281662]:DefaultAssociativeDom[283163](?)) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628401] "RVV" "temp"
    unknown call_tmp[915412] "expr temp" "maybe param" "maybe type" "temp"
    (915415 'move' call_tmp[915412](409149 call table _mt[203] this[281662]))
    unknown call_tmp[915419] "expr temp" "maybe param" "maybe type" "temp"
    (915422 'move' call_tmp[915419](281670 call postponeResize _mt[203] call_tmp[915412]))
    (281667 call = call_tmp[915419] 1)
    (566198 'end of statement')
    {
      unknown _indexOfInterest[281684] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[281685] "expr temp" "temp"
      unknown call_tmp[915426] "expr temp" "maybe param" "maybe type" "temp"
      (915429 'move' call_tmp[915426](281680 call(281677 call (partial) these _mt[203] this[281662])))
      (281694 'move' _iterator[281685](281692 call _getIterator call_tmp[915426]))
      Defer
      {
        {
          (281709 call _freeIterator _iterator[281685])
        }
      }
      { scopeless type
        (281699 'move' _indexOfInterest[281684](281696 call iteratorIndex _iterator[281685]))
      }
      ForLoop[281686]
      {
        unknown i[281674] "index var" "insert auto destroy"
        (566200 'end of statement')
        (281704 'move' i[281674] _indexOfInterest[281684])
        (566201 'end of statement' i[281674])
        unknown yret[628405] "YVV" "temp"
        (628408 'move' yret[628405](628407 'deref' i[281674]))
        (281681 yield yret[628405])
        (566203 'end of statement' i[281674])
        label _continueLabel[281689]
        _indexOfInterest[281684]
        _iterator[281685]
      }
      label _breakLabel[281690]
    }
    {
      const tmp[281742] "const" "temp"
      unknown call_tmp[915431] "expr temp" "maybe param" "maybe type" "temp"
      (915434 'move' call_tmp[915431](281739 '_wide_get_locale' this[281662]))
      (281743 'move' tmp[281742](281740 'deref' call_tmp[915431]))
      {
        unknown call_tmp[915438] "expr temp" "maybe param" "maybe type" "temp"
        (915441 'move' call_tmp[915438](409155 call table _mt[203] this[281662]))
        unknown call_tmp[915445] "expr temp" "maybe param" "maybe type" "temp"
        (915448 'move' call_tmp[915445](281721 call postponeResize _mt[203] call_tmp[915438]))
        (281718 call = call_tmp[915445] 0)
        (566205 'end of statement')
        (281726 call(454281 call (partial) lockTable _mt[203] this[281662]))
        (566206 'end of statement')
        Defer
        {
          {
            (281729 call(454287 call (partial) unlockTable _mt[203] this[281662]))
          }
        }
        unknown call_tmp[915456] "expr temp" "maybe param" "maybe type" "temp"
        (915459 'move' call_tmp[915456](409160 call table _mt[203] this[281662]))
        (281738 call(281735 call (partial) maybeShrinkAfterRemove _mt[203] call_tmp[915456]))
      }
      (281746 'elided on block' 0 tmp[281742])
    }
    (628403 return ret[628401])
  }
  function DefaultAssociativeDom[283163](?)._isSlotFull[281752](arg _mt[281760]:_MT[201], arg this[281754]:DefaultAssociativeDom[283163](?), arg slot[281757]:int(64)[10]) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[628413] "RVV" "temp"
    unknown call_tmp[915465] "expr temp" "maybe param" "maybe type" "temp"
    (915468 'move' call_tmp[915465](409165 call table _mt[203] this[281754]))
    unknown call_tmp[915472] "expr temp" "maybe param" "maybe type" "temp"
    (915475 'move' call_tmp[915472](281769 call(281766 call (partial) table _mt[203] call_tmp[915465]) slot[281757]))
    unknown call_tmp[915479] "expr temp" "maybe param" "maybe type" "temp"
    (915482 'move' call_tmp[915479](281774 call(281771 call (partial) isFull _mt[203] call_tmp[915472])))
    (628419 'move' ret[628413](628418 'coerce' call_tmp[915479] bool[19]))
    (628415 return ret[628413])
  }
  { scopeless type
    bool[19]
  }
  function DefaultAssociativeDom[283163](?).these[281778](arg _mt[281782]:_MT[201], arg this[281780]:DefaultAssociativeDom[283163](?)) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628423] "RVV" "temp"
    {
      unknown _indexOfInterest[281827] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[281828] "expr temp" "temp"
      unknown call_tmp[915486] "expr temp" "maybe param" "maybe type" "temp"
      (915489 'move' call_tmp[915486](409170 call table _mt[203] this[281780]))
      unknown call_tmp[915493] "expr temp" "maybe param" "maybe type" "temp"
      (915496 'move' call_tmp[915493](281793 call(281790 call (partial) allSlots _mt[203] call_tmp[915486])))
      (281837 'move' _iterator[281828](281835 call _getIterator call_tmp[915493]))
      Defer
      {
        {
          (281852 call _freeIterator _iterator[281828])
        }
      }
      { scopeless type
        (281842 'move' _indexOfInterest[281827](281839 call iteratorIndex _iterator[281828]))
      }
      ForLoop[281829] order-independent
      {
        unknown slot[281785] "index var" "insert auto destroy"
        (566211 'end of statement')
        (281847 'move' slot[281785] _indexOfInterest[281827])
        (566212 'end of statement' slot[281785])
        {
          unknown aSlot[281796] "dead at end of block" "ref var"
          (652394 'init ref decl' aSlot[281796])
          unknown call_tmp[915500] "expr temp" "maybe param" "maybe type" "temp"
          (915503 'move' call_tmp[915500](409175 call table _mt[203] this[281780]))
          unknown call_tmp[915507] "expr temp" "maybe param" "maybe type" "temp"
          (915510 'move' call_tmp[915507](281801 call(281798 call (partial) table _mt[203] call_tmp[915500]) slot[281785]))
          (652392 'move' aSlot[281796](652391 'addr of' call_tmp[915507]))
          (281804 'end of statement' slot[281785])
          unknown call_tmp[915514] "expr temp" "maybe param" "maybe type" "temp"
          (915517 'move' call_tmp[915514](281814 call status _mt[203] aSlot[281796]))
          unknown call_tmp[915519] "expr temp" "maybe param" "maybe type" "temp"
          (915522 'move' call_tmp[915519](281811 call == call_tmp[915514] full[264674]))
          unknown call_tmp[915524] "expr temp" "maybe param" "maybe type" "temp"
          (915527 'move' call_tmp[915524](281821 call _cond_test call_tmp[915519]))
          if call_tmp[915524]
          {
            unknown yret[628427] "YVV" "temp"
            unknown call_tmp[915531] "expr temp" "maybe param" "maybe type" "temp"
            (915534 'move' call_tmp[915531](281808 call key _mt[203] aSlot[281796]))
            (628430 'move' yret[628427](628429 'deref' call_tmp[915531]))
            (281806 yield yret[628427])
            (566215 'end of statement' aSlot[281796])
          }
        }
        label _continueLabel[281832]
        _indexOfInterest[281827]
        _iterator[281828]
      }
      label _breakLabel[281833]
    }
    (628425 return ret[628423])
  }
  function DefaultAssociativeDom[283163](?).these[281861](arg _mt[281869]:_MT[201], arg this[281863]:DefaultAssociativeDom[283163](?), param arg tag[281866]:iterKind[52144]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628435] "RVV" "temp"
    unknown call_tmp[915536] "expr temp" "maybe param" "maybe type" "temp"
    (915539 'move' call_tmp[915536](281886 call _cond_test debugDefaultAssoc[280613]))
    if call_tmp[915536]
    {
      (281881 call writeln "*** In associative domain standalone iterator")
    }
    {
      unknown _indexOfInterest[281932] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[281933] "expr temp" "temp"
      unknown call_tmp[915543] "expr temp" "maybe param" "maybe type" "temp"
      (915546 'move' call_tmp[915543](409184 call table _mt[203] this[281863]))
      unknown call_tmp[915550] "expr temp" "maybe param" "maybe type" "temp"
      (915553 'move' call_tmp[915550](281896 call(281893 call (partial) allSlots _mt[203] call_tmp[915543])(tag = tag[281866])))
      (281942 'move' _iterator[281933](281940 call _getIterator call_tmp[915550]))
      Defer
      {
        {
          (281957 call _freeIterator _iterator[281933])
        }
      }
      { scopeless type
        (281947 'move' _indexOfInterest[281932](281944 call iteratorIndex _iterator[281933]))
      }
      ForLoop[281934] order-independent
      {
        unknown slot[281890] "index var" "insert auto destroy"
        (566219 'end of statement')
        (281952 'move' slot[281890] _indexOfInterest[281932])
        (566220 'end of statement' slot[281890])
        {
          unknown aSlot[281901] "dead at end of block" "ref var"
          (652399 'init ref decl' aSlot[281901])
          unknown call_tmp[915557] "expr temp" "maybe param" "maybe type" "temp"
          (915560 'move' call_tmp[915557](409189 call table _mt[203] this[281863]))
          unknown call_tmp[915564] "expr temp" "maybe param" "maybe type" "temp"
          (915567 'move' call_tmp[915564](281906 call(281903 call (partial) table _mt[203] call_tmp[915557]) slot[281890]))
          (652397 'move' aSlot[281901](652396 'addr of' call_tmp[915564]))
          (281909 'end of statement' slot[281890])
          unknown call_tmp[915571] "expr temp" "maybe param" "maybe type" "temp"
          (915574 'move' call_tmp[915571](281919 call status _mt[203] aSlot[281901]))
          unknown call_tmp[915576] "expr temp" "maybe param" "maybe type" "temp"
          (915579 'move' call_tmp[915576](281916 call == call_tmp[915571] full[264674]))
          unknown call_tmp[915581] "expr temp" "maybe param" "maybe type" "temp"
          (915584 'move' call_tmp[915581](281926 call _cond_test call_tmp[915576]))
          if call_tmp[915581]
          {
            unknown yret[628439] "YVV" "temp"
            unknown call_tmp[915588] "expr temp" "maybe param" "maybe type" "temp"
            (915591 'move' call_tmp[915588](281913 call key _mt[203] aSlot[281901]))
            (628442 'move' yret[628439](628441 'deref' call_tmp[915588]))
            (281911 yield yret[628439])
            (566223 'end of statement' aSlot[281901])
          }
        }
        label _continueLabel[281937]
        _indexOfInterest[281932]
        _iterator[281933]
      }
      label _breakLabel[281938]
    }
    (628437 return ret[628435])
  }
  where {
    (281871 call == tag[281866] standalone[52142])
  }
  function DefaultAssociativeDom[283163](?).these[281967](arg _mt[281975]:_MT[201], arg this[281969]:DefaultAssociativeDom[283163](?), param arg tag[281972]:iterKind[52144]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628447] "RVV" "temp"
    unknown call_tmp[915593] "expr temp" "maybe param" "maybe type" "temp"
    (915596 'move' call_tmp[915593](281992 call _cond_test debugDefaultAssoc[280613]))
    if call_tmp[915593]
    {
      (281986 call writeln "*** In associative domain leader iterator")
    }
    {
      unknown _indexOfInterest[282013] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[282014] "expr temp" "temp"
      unknown call_tmp[915600] "expr temp" "maybe param" "maybe type" "temp"
      (915603 'move' call_tmp[915600](409198 call table _mt[203] this[281969]))
      unknown call_tmp[915607] "expr temp" "maybe param" "maybe type" "temp"
      (915610 'move' call_tmp[915607](282003 call(282000 call (partial) allSlots _mt[203] call_tmp[915600])(tag = tag[281972])))
      (282023 'move' _iterator[282014](282021 call _getIterator call_tmp[915607]))
      Defer
      {
        {
          (282038 call _freeIterator _iterator[282014])
        }
      }
      { scopeless type
        (282028 'move' _indexOfInterest[282013](282025 call iteratorIndex _iterator[282014]))
      }
      ForLoop[282015]
      {
        unknown chunk[281997] "index var" "insert auto destroy"
        (566227 'end of statement')
        (282033 'move' chunk[281997] _indexOfInterest[282013])
        (566228 'end of statement' chunk[281997])
        unknown yret[628451] "YVV" "temp"
        unknown call_tmp[915612] "expr temp" "maybe param" "maybe type" "temp"
        (915615 'move' call_tmp[915612](282010 call _build_tuple chunk[281997] this[281969]))
        (628454 'move' yret[628451](628453 'deref' call_tmp[915612]))
        (282006 yield yret[628451])
        (566230 'end of statement' chunk[281997])
        label _continueLabel[282018]
        _indexOfInterest[282013]
        _iterator[282014]
      }
      label _breakLabel[282019]
    }
    (628449 return ret[628447])
  }
  where {
    (281977 call == tag[281972] leader[52138])
  }
  function DefaultAssociativeDom[283163](?).these[282048](arg _mt[282058]:_MT[201], arg this[282050]:DefaultAssociativeDom[283163](?), param arg tag[282053]:iterKind[52144], arg followThis[282056]:_any[141](?)) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628459] "RVV" "temp"
    unknown tmp[282074] "dead at end of block" "insert auto destroy" "temp"
    (652401 'init var' tmp[282074] followThis[282056])
    (282081 call _check_tuple_var_decl tmp[282074] 2)
    (566232 'end of statement')
    unknown call_tmp[915617] "maybe param" "maybe type" "temp"
    (915620 'move' call_tmp[915617](282075 call tmp[282074] 0))
    unknown chunk[282069] "dead at end of block" "insert auto destroy"
    (652403 'init var' chunk[282069] call_tmp[915617])
    unknown call_tmp[915622] "maybe param" "maybe type" "temp"
    (915625 'move' call_tmp[915622](282078 call tmp[282074] 1))
    unknown followThisDom[282071] "dead at end of block" "insert auto destroy"
    (652405 'init var' followThisDom[282071] call_tmp[915622])
    (282086 'end of statement')
    unknown call_tmp[915627] "expr temp" "maybe param" "maybe type" "temp"
    (915630 'move' call_tmp[915627](282094 call _cond_test debugDefaultAssoc[280613]))
    if call_tmp[915627]
    {
      (282088 call writeln "In associative domain follower code")
    }
    unknown call_tmp[915632] "maybe param" "maybe type" "temp"
    (915635 'move' call_tmp[915632](282101 call == followThisDom[282071] this[282050]))
    const sameDom[282100] "dead at end of block" "const" "insert auto destroy"
    (652407 'init var' sameDom[282100] call_tmp[915632])
    (282106 'end of statement')
    unknown call_tmp[915637] "expr temp" "maybe param" "maybe type" "temp"
    (915640 'move' call_tmp[915637](282128 call ! sameDom[282100]))
    unknown call_tmp[915642] "expr temp" "maybe param" "maybe type" "temp"
    (915645 'move' call_tmp[915642](282131 call _cond_test call_tmp[915637]))
    if call_tmp[915642]
    {
      unknown call_tmp[915649] "expr temp" "maybe param" "maybe type" "temp"
      (915652 'move' call_tmp[915649](282116 call dsiNumIndices _mt[203] followThisDom[282071]))
      unknown call_tmp[915656] "expr temp" "maybe param" "maybe type" "temp"
      (915659 'move' call_tmp[915656](282120 call dsiNumIndices _mt[203] this[282050]))
      unknown call_tmp[915661] "expr temp" "maybe param" "maybe type" "temp"
      (915664 'move' call_tmp[915661](282113 call != call_tmp[915649] call_tmp[915656]))
      unknown call_tmp[915666] "expr temp" "maybe param" "maybe type" "temp"
      (915669 'move' call_tmp[915666](282123 call _cond_test call_tmp[915661]))
      if call_tmp[915666]
      {
        (282108 call halt "zippered associative domains do not match")
      }
    }
    unknown call_tmp[915673] "expr temp" "maybe param" "maybe type" "temp"
    (915676 'move' call_tmp[915673](282139 call table _mt[203] followThisDom[282071]))
    unknown call_tmp[915680] "maybe param" "maybe type" "temp"
    (915683 'move' call_tmp[915680](282142 call table _mt[203] call_tmp[915673]))
    const otherTable[282137] "dead at end of block" "const" "insert auto destroy"
    (652409 'init var' otherTable[282137] call_tmp[915680])
    (282146 'end of statement' followThisDom[282071])
    {
      unknown _indexOfInterest[282238] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[282239] "expr temp" "temp"
      (282248 'move' _iterator[282239](282246 call _getIterator chunk[282069]))
      Defer
      {
        {
          (282263 call _freeIterator _iterator[282239])
        }
      }
      { scopeless type
        (282253 'move' _indexOfInterest[282238](282250 call iteratorIndex _iterator[282239]))
      }
      ForLoop[282240] order-independent
      {
        unknown slot[282147] "index var" "insert auto destroy"
        (566237 'end of statement')
        (282258 'move' slot[282147] _indexOfInterest[282238])
        (566238 'end of statement' slot[282147])
        {
          const aSlot[282152] "dead at end of block" "const" "ref var"
          (652414 'init ref decl' aSlot[282152])
          unknown call_tmp[915685] "expr temp" "maybe param" "maybe type" "temp"
          (915688 'move' call_tmp[915685](282154 call otherTable[282137] slot[282147]))
          (652412 'move' aSlot[282152](652411 'addr of' call_tmp[915685]))
          (282157 'end of statement' otherTable[282137] slot[282147])
          unknown call_tmp[915692] "expr temp" "maybe param" "maybe type" "temp"
          (915695 'move' call_tmp[915692](282231 call(282228 call (partial) isFull _mt[203] aSlot[282152])))
          unknown call_tmp[915697] "expr temp" "maybe param" "maybe type" "temp"
          (915700 'move' call_tmp[915697](282232 call _cond_test call_tmp[915692]))
          if call_tmp[915697]
          {
            unknown idx[282160] "dead at end of block" "insert auto destroy"
            (652416 'init var' idx[282160] slot[282147])
            (282163 'end of statement' slot[282147])
            unknown call_tmp[915702] "expr temp" "maybe param" "maybe type" "temp"
            (915705 'move' call_tmp[915702](282210 call ! sameDom[282100]))
            unknown call_tmp[915707] "expr temp" "maybe param" "maybe type" "temp"
            (915710 'move' call_tmp[915707](282213 call _cond_test call_tmp[915702]))
            if call_tmp[915707]
            {
              unknown call_tmp[915714] "expr temp" "maybe param" "maybe type" "temp"
              (915717 'move' call_tmp[915714](409207 call table _mt[203] this[282050]))
              unknown call_tmp[915723] "expr temp" "maybe param" "maybe type" "temp"
              (915726 'move' call_tmp[915723](282178 call key _mt[203] aSlot[282152]))
              unknown call_tmp[915728] "maybe param" "maybe type" "temp"
              (915731 'move' call_tmp[915728](282176 call(282173 call (partial) findFullSlot _mt[203] call_tmp[915714]) call_tmp[915723]))
              const tmp[282181] "dead at end of block" "const" "insert auto destroy" "temp"
              (652418 'init var' tmp[282181] call_tmp[915728])
              (282188 call _check_tuple_var_decl tmp[282181] 2)
              (566243 'end of statement')
              unknown call_tmp[915733] "maybe param" "maybe type" "temp"
              (915736 'move' call_tmp[915733](282182 call tmp[282181] 0))
              const match[282166] "dead at end of block" "const" "insert auto destroy"
              (652420 'init var' match[282166] call_tmp[915733])
              unknown call_tmp[915738] "maybe param" "maybe type" "temp"
              (915741 'move' call_tmp[915738](282185 call tmp[282181] 1))
              const loc[282168] "dead at end of block" "const" "insert auto destroy"
              (652422 'init var' loc[282168] call_tmp[915738])
              (282193 'end of statement')
              unknown call_tmp[915743] "expr temp" "maybe param" "maybe type" "temp"
              (915746 'move' call_tmp[915743](282198 call ! match[282166]))
              unknown call_tmp[915748] "expr temp" "maybe param" "maybe type" "temp"
              (915751 'move' call_tmp[915748](282201 call _cond_test call_tmp[915743]))
              if call_tmp[915748]
              {
                (282195 call halt "zippered associative domains do not match")
              }
              (282206 call = idx[282160] loc[282168])
              (566245 'end of statement' idx[282160] loc[282168])
            }
            unknown yret[628463] "YVV" "temp"
            unknown call_tmp[915755] "expr temp" "maybe param" "maybe type" "temp"
            (915758 'move' call_tmp[915755](409213 call table _mt[203] this[282050]))
            unknown call_tmp[915762] "expr temp" "maybe param" "maybe type" "temp"
            (915765 'move' call_tmp[915762](282222 call(282219 call (partial) table _mt[203] call_tmp[915755]) idx[282160]))
            unknown call_tmp[915769] "expr temp" "maybe param" "maybe type" "temp"
            (915772 'move' call_tmp[915769](282224 call key _mt[203] call_tmp[915762]))
            (628466 'move' yret[628463](628465 'deref' call_tmp[915769]))
            (282217 yield yret[628463])
            (566248 'end of statement' idx[282160])
          }
        }
        label _continueLabel[282243]
        _indexOfInterest[282238]
        _iterator[282239]
      }
      label _breakLabel[282244]
    }
    (628461 return ret[628459])
  }
  where {
    (282060 call == tag[282053] follower[52140])
  }
  function DefaultAssociativeDom[283163](?).dsiMyDist[282273](arg _mt[282277]:_MT[201], arg this[282275]:DefaultAssociativeDom[283163](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[628471] "RVV" "temp"
    unknown call_tmp[915776] "expr temp" "maybe param" "maybe type" "temp"
    (915779 'move' call_tmp[915776](454323 call dist _mt[203] this[282275]))
    (628477 'move' ret[628471](628476 'coerce' call_tmp[915776] unmanaged BaseDist[468172]))
    (628473 return ret[628471])
  }
  { scopeless type
    unmanaged BaseDist[468172]
  }
  function DefaultAssociativeDom[283163](?).dsiClear[282287](arg _mt[282291]:_MT[201], arg this[282289]:DefaultAssociativeDom[283163](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      const tmp[282453] "const" "temp"
      unknown call_tmp[915781] "expr temp" "maybe param" "maybe type" "temp"
      (915784 'move' call_tmp[915781](282450 '_wide_get_locale' this[282289]))
      (282454 'move' tmp[282453](282451 'deref' call_tmp[915781]))
      {
        (282297 call(454328 call (partial) lockTable _mt[203] this[282289]))
        (566251 'end of statement')
        {
          unknown _indexOfInterest[282405] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[282406] "expr temp" "temp"
          unknown call_tmp[915790] "expr temp" "maybe param" "maybe type" "temp"
          (915793 'move' call_tmp[915790](409219 call table _mt[203] this[282289]))
          unknown call_tmp[915797] "expr temp" "maybe param" "maybe type" "temp"
          (915800 'move' call_tmp[915797](282304 call(282301 call (partial) allSlots _mt[203] call_tmp[915790])))
          (282415 'move' _iterator[282406](282413 call _getIterator call_tmp[915797]))
          Defer
          {
            {
              (282430 call _freeIterator _iterator[282406])
            }
          }
          { scopeless type
            (282420 'move' _indexOfInterest[282405](282417 call iteratorIndex _iterator[282406]))
          }
          ForLoop[282407]
          {
            unknown slot[282298] "index var" "insert auto destroy"
            (566253 'end of statement')
            (282425 'move' slot[282298] _indexOfInterest[282405])
            (566254 'end of statement' slot[282298])
            {
              unknown aSlot[282307] "dead at end of block" "ref var"
              (652427 'init ref decl' aSlot[282307])
              unknown call_tmp[915804] "expr temp" "maybe param" "maybe type" "temp"
              (915807 'move' call_tmp[915804](409224 call table _mt[203] this[282289]))
              unknown call_tmp[915811] "expr temp" "maybe param" "maybe type" "temp"
              (915814 'move' call_tmp[915811](282312 call(282309 call (partial) table _mt[203] call_tmp[915804]) slot[282298]))
              (652425 'move' aSlot[282307](652424 'addr of' call_tmp[915811]))
              (282315 'end of statement' slot[282298])
              unknown call_tmp[915818] "expr temp" "maybe param" "maybe type" "temp"
              (915821 'move' call_tmp[915818](282385 call(282382 call (partial) isFull _mt[203] aSlot[282307])))
              unknown call_tmp[915823] "expr temp" "maybe param" "maybe type" "temp"
              (915826 'move' call_tmp[915823](282386 call _cond_test call_tmp[915818]))
              if call_tmp[915823]
              {
                unknown tmpKey[282318] "dead at end of block" "insert auto destroy"
                unknown call_tmp[915830] "expr temp" "maybe param" "maybe type" "temp"
                (915833 'move' call_tmp[915830](454334 call idxType _mt[203] this[282289]))
                (652429 'default init var' tmpKey[282318] call_tmp[915830])
                (282321 'end of statement')
                unknown tmpVal[282323] "dead at end of block" "insert auto destroy"
                (652431 'default init var' tmpVal[282323] nothing[7])
                (282326 'end of statement')
                unknown call_tmp[915837] "expr temp" "maybe param" "maybe type" "temp"
                (915840 'move' call_tmp[915837](409229 call table _mt[203] this[282289]))
                (282333 call(282330 call (partial) clearSlot _mt[203] call_tmp[915837]) aSlot[282307] tmpKey[282318] tmpVal[282323])
                (566257 'end of statement' aSlot[282307] tmpKey[282318] tmpVal[282323])
                {
                  unknown _indexOfInterest[282349] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[282350] "expr temp" "temp"
                  unknown call_tmp[915846] "expr temp" "maybe param" "maybe type" "temp"
                  (915849 'move' call_tmp[915846](454342 call _arrs _mt[203] this[282289]))
                  (282359 'move' _iterator[282350](282357 call _getIterator call_tmp[915846]))
                  Defer
                  {
                    {
                      (282374 call _freeIterator _iterator[282350])
                    }
                  }
                  { scopeless type
                    (282364 'move' _indexOfInterest[282349](282361 call iteratorIndex _iterator[282350]))
                  }
                  ForLoop[282351]
                  {
                    unknown arr[282337] "index var" "insert auto destroy"
                    (566262 'end of statement')
                    (282369 'move' arr[282337] _indexOfInterest[282349])
                    (566263 'end of statement' arr[282337])
                    {
                      (282347 call(282344 call (partial) _deinitSlot _mt[203] arr[282337]) slot[282298])
                      (566265 'end of statement' arr[282337] slot[282298])
                    }
                    label _continueLabel[282354]
                    _indexOfInterest[282349]
                    _iterator[282350]
                  }
                  label _breakLabel[282355]
                }
              }
              unknown call_tmp[915855] "expr temp" "maybe param" "maybe type" "temp"
              (915858 'move' call_tmp[915855](409236 call table _mt[203] this[282289]))
              unknown call_tmp[915862] "expr temp" "maybe param" "maybe type" "temp"
              (915865 'move' call_tmp[915862](282396 call(282393 call (partial) table _mt[203] call_tmp[915855]) slot[282298]))
              unknown call_tmp[915869] "expr temp" "maybe param" "maybe type" "temp"
              (915872 'move' call_tmp[915869](282398 call status _mt[203] call_tmp[915862]))
              (282390 call = call_tmp[915869] empty[264672])
              (566268 'end of statement' slot[282298])
            }
            label _continueLabel[282410]
            _indexOfInterest[282405]
            _iterator[282406]
          }
          label _breakLabel[282411]
        }
        unknown call_tmp[915876] "expr temp" "maybe param" "maybe type" "temp"
        (915879 'move' call_tmp[915876](409242 call numEntries _mt[203] this[282289]))
        (282441 call(282438 call (partial) write _mt[203] call_tmp[915876]) 0)
        (566270 'end of statement')
        unknown call_tmp[915885] "expr temp" "maybe param" "maybe type" "temp"
        (915888 'move' call_tmp[915885](409247 call table _mt[203] this[282289]))
        (282447 call(282444 call (partial) maybeShrinkAfterRemove _mt[203] call_tmp[915885]))
        (566271 'end of statement')
        (282449 call(454348 call (partial) unlockTable _mt[203] this[282289]))
      }
      (282457 'elided on block' 0 tmp[282453])
    }
    (628479 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).dsiMember[282463](arg _mt[282471]:_MT[201], arg this[282465]:DefaultAssociativeDom[283163](?), arg idx[282468] :
  (454353 call idxType _mt[203] this[282465])) : _unknown[42] "method" "primary method"
  {
    unknown ret[628483] "RVV" "temp"
    (282476 call(454358 call (partial) lockTable _mt[203] this[282465]))
    (566273 'end of statement')
    Defer
    {
      {
        (282479 call(454362 call (partial) unlockTable _mt[203] this[282465]))
      }
    }
    unknown call_tmp[915902] "expr temp" "maybe param" "maybe type" "temp"
    (915905 'move' call_tmp[915902](409252 call table _mt[203] this[282465]))
    unknown call_tmp[915909] "maybe param" "maybe type" "temp"
    (915912 'move' call_tmp[915909](282491 call(282488 call (partial) findFullSlot _mt[203] call_tmp[915902]) idx[282468]))
    unknown tmp[282493] "dead at end of block" "insert auto destroy" "temp"
    (652433 'init var' tmp[282493] call_tmp[915909])
    (282500 call _check_tuple_var_decl tmp[282493] 2)
    (566275 'end of statement')
    unknown call_tmp[915914] "maybe param" "maybe type" "temp"
    (915917 'move' call_tmp[915914](282494 call tmp[282493] 0))
    unknown foundFullSlot[282483] "dead at end of block" "insert auto destroy"
    (652435 'init var' foundFullSlot[282483] call_tmp[915914])
    unknown call_tmp[915919] "maybe param" "maybe type" "temp"
    (915922 'move' call_tmp[915919](282497 call tmp[282493] 1))
    unknown slotNum[282485] "dead at end of block" "insert auto destroy"
    (652437 'init var' slotNum[282485] call_tmp[915919])
    (282505 'end of statement')
    (628489 'move' ret[628483](628488 'coerce' foundFullSlot[282483] bool[19]))
    gotoReturn _end_dsiMember[628481] _end_dsiMember[628481]
    (566276 'end of statement' foundFullSlot[282483])
    label _end_dsiMember[628481]
    (628485 return ret[628483])
  }
  { scopeless type
    bool[19]
  }
  function DefaultAssociativeDom[283163](?).dsiAdd[282511](arg _mt[282517]:_MT[201], arg this[282513]:DefaultAssociativeDom[283163](?), in arg idx[282515]:_any[141](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[628495] "RVV" "temp"
    unknown call_tmp[915926] "expr temp" "maybe param" "maybe type" "temp"
    (915929 'move' call_tmp[915926](454370 call idxType _mt[203] this[282513]))
    unknown call_tmp[915931] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (915934 'move' call_tmp[915931](282525 'typeof' idx[282515]))
    unknown call_tmp[915936] "expr temp" "maybe param" "maybe type" "temp"
    (915939 'move' call_tmp[915936](395586 'is_coercible' call_tmp[915926] call_tmp[915931]))
    (282521 call compilerAssert call_tmp[915936])
    (566278 'end of statement')
    unknown retVal[282528] "dead at end of block" "insert auto destroy"
    (652439 'init var' retVal[282528] 0)
    (282531 'end of statement')
    {
      const tmp[282569] "const" "temp"
      unknown call_tmp[915941] "expr temp" "maybe param" "maybe type" "temp"
      (915944 'move' call_tmp[915941](282566 '_wide_get_locale' this[282513]))
      (282570 'move' tmp[282569](282567 'deref' call_tmp[915941]))
      {
        (282535 call(454375 call (partial) lockTable _mt[203] this[282513]))
        (566279 'end of statement')
        Defer
        {
          {
            (282538 call(454379 call (partial) unlockTable _mt[203] this[282513]))
          }
        }
        unknown call_tmp[915952] "maybe param" "maybe type" "temp"
        (915955 'move' call_tmp[915952](282547 call(454385 call (partial) _add _mt[203] this[282513]) idx[282515]))
        const tmp[282549] "dead at end of block" "const" "insert auto destroy" "temp"
        (652441 'init var' tmp[282549] call_tmp[915952])
        (282556 call _check_tuple_var_decl tmp[282549] 2)
        (566281 'end of statement')
        unknown call_tmp[915957] "maybe param" "maybe type" "temp"
        (915960 'move' call_tmp[915957](282550 call tmp[282549] 0))
        const slotNum[282542] "dead at end of block" "const" "insert auto destroy"
        (652443 'init var' slotNum[282542] call_tmp[915957])
        unknown call_tmp[915962] "maybe param" "maybe type" "temp"
        (915965 'move' call_tmp[915962](282553 call tmp[282549] 1))
        const addCount[282544] "dead at end of block" "const" "insert auto destroy"
        (652445 'init var' addCount[282544] call_tmp[915962])
        (282561 'end of statement')
        (282562 call = retVal[282528] addCount[282544])
        (566282 'end of statement' retVal[282528] addCount[282544])
      }
      (282573 'elided on block' 0 tmp[282569])
    }
    (628500 'move' ret[628495](628499 'deref' retVal[282528]))
    gotoReturn _end_dsiAdd[628493] _end_dsiAdd[628493]
    (566285 'end of statement' retVal[282528])
    label _end_dsiAdd[628493]
    (628497 return ret[628495])
  }
  function DefaultAssociativeDom[283163](?)._add[282581](arg _mt[282589]:_MT[201], arg this[282583]:DefaultAssociativeDom[283163](?), in arg idx[282586] :
  (454394 call idxType _mt[203] this[282583])) : _unknown[42] "method" "primary method"
  {
    unknown ret[628506] "RVV" "temp"
    unknown foundFullSlot[282593] "dead at end of block" "insert auto destroy"
    (652447 'init var' foundFullSlot[282593] 0)
    (282596 'end of statement')
    unknown call_tmp[915969] "maybe param" "maybe type" "temp"
    (915972 'move' call_tmp[915969](282599 call - 1))
    unknown slotNum[282598] "dead at end of block" "insert auto destroy"
    (652449 'init var' slotNum[282598] call_tmp[915969])
    (282603 'end of statement')
    unknown tmp[578903] "expr temp" "maybe param" "maybe type" "temp"
    unknown tmp[578928] "maybe param" "temp"
    (578931 'move' tmp[578928](578929 'addr of' foundFullSlot[282593]))
    unknown tmp[578939] "maybe param" "temp"
    (578942 'move' tmp[578939](578940 'addr of' slotNum[282598]))
    unknown call_tmp[915976] "expr temp" "maybe param" "maybe type" "temp"
    (915979 'move' call_tmp[915976](409257 call table _mt[203] this[282583]))
    (578904 'move' tmp[578903](282615 call(282612 call (partial) findAvailableSlot _mt[203] call_tmp[915976]) idx[282586]))
    { scopeless
      unknown call_tmp[915985] "expr temp" "maybe param" "maybe type" "temp"
      (915988 'move' call_tmp[915985](578910 call size _mt[203] tmp[578903]))
      unknown call_tmp[915990] "expr temp" "maybe param" "maybe type" "temp"
      (915993 'move' call_tmp[915990](578913 call != 2 call_tmp[915985]))
      unknown call_tmp[915995] "expr temp" "maybe param" "maybe type" "temp"
      (915998 'move' call_tmp[915995](578920 call _cond_test call_tmp[915990]))
      if call_tmp[915995]
      {
        (578916 call compilerError "tuple size must match the number of grouped variables" 0)
      }
    }
    unknown call_tmp[916000] "expr temp" "maybe param" "maybe type" "temp"
    (916003 'move' call_tmp[916000](578926 call tmp[578903] 0))
    (578933 call = tmp[578928] call_tmp[916000])
    unknown call_tmp[916005] "expr temp" "maybe param" "maybe type" "temp"
    (916008 'move' call_tmp[916005](578937 call tmp[578903] 1))
    (578944 call = tmp[578939] call_tmp[916005])
    (566287 'end of statement' foundFullSlot[282593] slotNum[282598])
    unknown call_tmp[916010] "expr temp" "maybe param" "maybe type" "temp"
    (916013 'move' call_tmp[916010](282694 call _cond_test foundFullSlot[282593]))
    if call_tmp[916010]
    {
      unknown call_tmp[916015] "expr temp" "maybe param" "maybe type" "temp"
      (916018 'move' call_tmp[916015](282624 call _build_tuple slotNum[282598] 0))
      (628511 'move' ret[628506](628510 'deref' call_tmp[916015]))
      gotoReturn _end__add[628504] _end__add[628504]
      (566290 'end of statement' slotNum[282598])
    }
    {
      unknown call_tmp[916022] "expr temp" "maybe param" "maybe type" "temp"
      (916025 'move' call_tmp[916022](409262 call table _mt[203] this[282583]))
      (282633 call(282630 call (partial) fillSlot _mt[203] call_tmp[916022]) slotNum[282598] idx[282586] none[48])
      (566292 'end of statement' slotNum[282598])
      unknown call_tmp[916031] "expr temp" "maybe param" "maybe type" "temp"
      (916034 'move' call_tmp[916031](409267 call numEntries _mt[203] this[282583]))
      (282641 call(282638 call (partial) add _mt[203] call_tmp[916031]) 1)
      (566294 'end of statement')
      {
        unknown _indexOfInterest[282655] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[282656] "expr temp" "temp"
        unknown call_tmp[916040] "expr temp" "maybe param" "maybe type" "temp"
        (916043 'move' call_tmp[916040](454405 call _arrs _mt[203] this[282583]))
        (282665 'move' _iterator[282656](282663 call _getIterator call_tmp[916040]))
        Defer
        {
          {
            (282680 call _freeIterator _iterator[282656])
          }
        }
        { scopeless type
          (282670 'move' _indexOfInterest[282655](282667 call iteratorIndex _iterator[282656]))
        }
        ForLoop[282657]
        {
          unknown arr[282643] "index var" "insert auto destroy"
          (566296 'end of statement')
          (282675 'move' arr[282643] _indexOfInterest[282655])
          (566297 'end of statement' arr[282643])
          {
            (282653 call(282650 call (partial) _defaultInitSlot _mt[203] arr[282643]) slotNum[282598])
            (566299 'end of statement' arr[282643] slotNum[282598])
          }
          label _continueLabel[282660]
          _indexOfInterest[282655]
          _iterator[282656]
        }
        label _breakLabel[282661]
      }
      unknown call_tmp[916047] "expr temp" "maybe param" "maybe type" "temp"
      (916050 'move' call_tmp[916047](282691 call _build_tuple slotNum[282598] 1))
      (628516 'move' ret[628506](628515 'deref' call_tmp[916047]))
      gotoReturn _end__add[628504] _end__add[628504]
      (566302 'end of statement' slotNum[282598])
    }
    label _end__add[628504]
    (628508 return ret[628506])
  }
  function DefaultAssociativeDom[283163](?).dsiRemove[282700](arg _mt[282708]:_MT[201], arg this[282702]:DefaultAssociativeDom[283163](?), arg idx[282705] :
  (454413 call idxType _mt[203] this[282702])) : _unknown[42] "method" "primary method"
  {
    unknown ret[628522] "RVV" "temp"
    unknown retval[282712] "dead at end of block" "insert auto destroy"
    (652451 'default init var' retval[282712] int(64)[10])
    (282715 'end of statement')
    {
      const tmp[282838] "const" "temp"
      unknown call_tmp[916054] "expr temp" "maybe param" "maybe type" "temp"
      (916057 'move' call_tmp[916054](282835 '_wide_get_locale' this[282702]))
      (282839 'move' tmp[282838](282836 'deref' call_tmp[916054]))
      {
        (282719 call(454418 call (partial) lockTable _mt[203] this[282702]))
        (566304 'end of statement')
        Defer
        {
          {
            (282722 call(454422 call (partial) unlockTable _mt[203] this[282702]))
          }
        }
        unknown call_tmp[916065] "expr temp" "maybe param" "maybe type" "temp"
        (916068 'move' call_tmp[916065](409273 call table _mt[203] this[282702]))
        unknown call_tmp[916072] "maybe param" "maybe type" "temp"
        (916075 'move' call_tmp[916072](282734 call(282731 call (partial) findFullSlot _mt[203] call_tmp[916065]) idx[282705]))
        const tmp[282736] "dead at end of block" "const" "insert auto destroy" "temp"
        (652453 'init var' tmp[282736] call_tmp[916072])
        (282743 call _check_tuple_var_decl tmp[282736] 2)
        (566306 'end of statement')
        unknown call_tmp[916077] "maybe param" "maybe type" "temp"
        (916080 'move' call_tmp[916077](282737 call tmp[282736] 0))
        const foundSlot[282726] "dead at end of block" "const" "insert auto destroy"
        (652455 'init var' foundSlot[282726] call_tmp[916077])
        unknown call_tmp[916082] "maybe param" "maybe type" "temp"
        (916085 'move' call_tmp[916082](282740 call tmp[282736] 1))
        const slotNum[282728] "dead at end of block" "const" "insert auto destroy"
        (652457 'init var' slotNum[282728] call_tmp[916082])
        (282748 'end of statement')
        unknown call_tmp[916087] "expr temp" "maybe param" "maybe type" "temp"
        (916090 'move' call_tmp[916087](282826 call _cond_test foundSlot[282726]))
        if call_tmp[916087]
        {
          unknown tmpIdx[282751] "dead at end of block" "insert auto destroy"
          unknown call_tmp[916094] "expr temp" "maybe param" "maybe type" "temp"
          (916097 'move' call_tmp[916094](454428 call idxType _mt[203] this[282702]))
          (652459 'default init var' tmpIdx[282751] call_tmp[916094])
          (282754 'end of statement')
          unknown tmpVal[282756] "dead at end of block" "insert auto destroy"
          (652461 'default init var' tmpVal[282756] nothing[7])
          (282759 'end of statement')
          unknown call_tmp[916101] "expr temp" "maybe param" "maybe type" "temp"
          (916104 'move' call_tmp[916101](409278 call table _mt[203] this[282702]))
          (282764 call(282761 call (partial) clearSlot _mt[203] call_tmp[916101]) slotNum[282728] tmpIdx[282751] tmpVal[282756])
          (566307 'end of statement' slotNum[282728] tmpIdx[282751] tmpVal[282756])
          unknown call_tmp[916110] "expr temp" "maybe param" "maybe type" "temp"
          (916113 'move' call_tmp[916110](409283 call numEntries _mt[203] this[282702]))
          (282772 call(282769 call (partial) sub _mt[203] call_tmp[916110]) 1)
          (566311 'end of statement')
          {
            unknown _indexOfInterest[282784] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[282785] "expr temp" "temp"
            unknown call_tmp[916119] "expr temp" "maybe param" "maybe type" "temp"
            (916122 'move' call_tmp[916119](454436 call _arrs _mt[203] this[282702]))
            (282794 'move' _iterator[282785](282792 call _getIterator call_tmp[916119]))
            Defer
            {
              {
                (282809 call _freeIterator _iterator[282785])
              }
            }
            { scopeless type
              (282799 'move' _indexOfInterest[282784](282796 call iteratorIndex _iterator[282785]))
            }
            ForLoop[282786]
            {
              unknown arr[282774] "index var" "insert auto destroy"
              (566313 'end of statement')
              (282804 'move' arr[282774] _indexOfInterest[282784])
              (566314 'end of statement' arr[282774])
              {
                (282782 call(282779 call (partial) _deinitSlot _mt[203] arr[282774]) slotNum[282728])
                (566316 'end of statement' arr[282774] slotNum[282728])
              }
              label _continueLabel[282789]
              _indexOfInterest[282784]
              _iterator[282785]
            }
            label _breakLabel[282790]
          }
          (282816 call = retval[282712] 1)
          (566319 'end of statement' retval[282712])
        }
        {
          (282821 call = retval[282712] 0)
          (566321 'end of statement' retval[282712])
        }
        unknown call_tmp[916128] "expr temp" "maybe param" "maybe type" "temp"
        (916131 'move' call_tmp[916128](409289 call table _mt[203] this[282702]))
        (282834 call(282831 call (partial) maybeShrinkAfterRemove _mt[203] call_tmp[916128]))
      }
      (282842 'elided on block' 0 tmp[282838])
    }
    (628527 'move' ret[628522](628526 'deref' retval[282712]))
    gotoReturn _end_dsiRemove[628520] _end_dsiRemove[628520]
    (566324 'end of statement' retval[282712])
    label _end_dsiRemove[628520]
    (628524 return ret[628522])
  }
  function DefaultAssociativeDom[283163](?).dsiRequestCapacity[282850](arg _mt[282858]:_MT[201], arg this[282852]:DefaultAssociativeDom[283163](?), arg numKeys[282855]:int(64)[10]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    {
      const tmp[282910] "const" "temp"
      unknown call_tmp[916135] "expr temp" "maybe param" "maybe type" "temp"
      (916138 'move' call_tmp[916135](282907 '_wide_get_locale' this[282852]))
      (282911 'move' tmp[282910](282908 'deref' call_tmp[916135]))
      {
        unknown call_tmp[916142] "expr temp" "maybe param" "maybe type" "temp"
        (916145 'move' call_tmp[916142](409294 call numEntries _mt[203] this[282852]))
        unknown call_tmp[916149] "maybe param" "maybe type" "temp"
        (916152 'move' call_tmp[916149](282869 call(282866 call (partial) read _mt[203] call_tmp[916142])))
        unknown entries[282864] "dead at end of block" "insert auto destroy"
        (652463 'init var' entries[282864] call_tmp[916149])
        (282871 'end of statement')
        unknown call_tmp[916154] "expr temp" "maybe param" "maybe type" "temp"
        (916157 'move' call_tmp[916154](282899 call < entries[282864] numKeys[282855]))
        unknown call_tmp[916159] "expr temp" "maybe param" "maybe type" "temp"
        (916162 'move' call_tmp[916159](282903 call _cond_test call_tmp[916154]))
        if call_tmp[916159]
        {
          (282874 call(454446 call (partial) lockTable _mt[203] this[282852]))
          (566326 'end of statement')
          Defer
          {
            {
              (282877 call(454450 call (partial) unlockTable _mt[203] this[282852]))
            }
          }
          unknown call_tmp[916170] "expr temp" "maybe param" "maybe type" "temp"
          (916173 'move' call_tmp[916170](409299 call table _mt[203] this[282852]))
          (282884 call(282881 call (partial) requestCapacity _mt[203] call_tmp[916170]) numKeys[282855])
        }
        {
          (282888 call warning "Requested capacity (" numKeys[282855] ") " "is less than current size (" entries[282864] ")")
          (566329 'end of statement' entries[282864])
        }
      }
      (282914 'elided on block' 0 tmp[282910])
    }
    (628531 return _void[46])
  }
  function DefaultAssociativeDom[283163](?).dsiSorted[282920](arg _mt[282926]:_MT[201], arg this[282922]:DefaultAssociativeDom[283163](?), arg comparator[282924]:_any[141](?)) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628535] "RVV" "temp"
    unknown tableCopy[282933] "dead at end of block" "insert auto destroy"
    function chpl__loopexpr_iter10[717421](arg iterator[717423]:_any[141](?), arg this[717460]:DefaultAssociativeDom[283163](?)) : _unknown[42] "do not unref for yields" "compiler generated" "iterator fn"
    {
      unknown ret[717471] "RVV" "temp"
      {
        unknown _indexOfInterest[717428] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[717429] "expr temp" "temp"
        (717438 'move' _iterator[717429](717436 call _getIterator iterator[717423]))
        Defer
        {
          {
            (717453 call _freeIterator _iterator[717429])
          }
        }
        { scopeless type
          (717443 'move' _indexOfInterest[717428](717440 call iteratorIndex _iterator[717429]))
        }
        ForLoop[717430] order-independent for-expr
        {
          unknown slot[282949] "index var" "insert auto destroy"
          (717464 'end of statement')
          (717448 'move' slot[282949] _indexOfInterest[717428])
          (717465 'end of statement' slot[282949])
          {
            {
              unknown yret[717475] "YVV" "temp"
              unknown call_tmp[717483] "expr temp" "maybe param" "maybe type" "temp"
              (717486 'move' call_tmp[717483](409309 call table _mt[203] this[717460]))
              unknown call_tmp[717490] "expr temp" "maybe param" "maybe type" "temp"
              (717493 'move' call_tmp[717490](282957 call(282954 call (partial) table _mt[203] call_tmp[717483]) slot[282949]))
              unknown call_tmp[717497] "expr temp" "maybe param" "maybe type" "temp"
              (717500 'move' call_tmp[717497](282959 call key _mt[203] call_tmp[717490]))
              (717478 'move' yret[717475](717477 'deref' call_tmp[717497]))
              (717425 yield yret[717475])
              (717467 'end of statement' slot[282949])
            }
          }
          label _continueLabel[717433]
          _indexOfInterest[717428]
          _iterator[717429]
        }
        label _breakLabel[717434]
      }
      (717473 return ret[717471])
    }
    function chpl__forexpr10[717401](arg iterExpr[717404]:_any[141](?), arg this[717408]:DefaultAssociativeDom[283163](?)) : _unknown[42] "compiler generated" "compiler nested function" "fn returns iterator"
    {
      unknown ret[717505] "RVV" "temp"
      unknown _iterator[717411] "expr temp" "maybe ref" "temp"
      (717413 'move' _iterator[717411] iterExpr[717404])
      unknown call_tmp[717512] "expr temp" "maybe param" "maybe type" "temp"
      (717515 'move' call_tmp[717512](717416 call chpl__loopexpr_iter10 _iterator[717411] this[717408]))
      (717510 'move' ret[717505](717509 'deref' call_tmp[717512]))
      (717507 return ret[717505])
    }
    unknown call_tmp[717519] "expr temp" "maybe param" "maybe type" "temp"
    (717522 'move' call_tmp[717519](282952 call(454464 call (partial) _fullSlots _mt[203] this[282922])))
    unknown call_tmp[717524] "maybe param" "maybe type" "temp"
    (717527 'move' call_tmp[717524](717406 call chpl__forexpr10 call_tmp[717519] this[282922]))
    (717531 'iterator record set shape' call_tmp[717524] call_tmp[717519] 0)
    unknown call_tmp[916177] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (916180 'move' call_tmp[916177](282937 call chpl_build_low_bounded_range 0))
    unknown call_tmp[916184] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (916187 'move' call_tmp[916184](409304 call numEntries _mt[203] this[282922]))
    unknown call_tmp[916191] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (916194 'move' call_tmp[916191](282943 call(282940 call (partial) read _mt[203] call_tmp[916184])))
    unknown call_tmp[916196] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (916199 'move' call_tmp[916196](282934 call # call_tmp[916177] call_tmp[916191]))
    unknown call_tmp[916201] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (916204 'move' call_tmp[916201](282944 call chpl__ensureDomainExpr call_tmp[916196]))
    unknown call_tmp[916208] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (916211 'move' call_tmp[916208](454460 call idxType _mt[203] this[282922]))
    unknown call_tmp[916213] "maybe param" "maybe type" "temp"
    (916216 'move' call_tmp[916213](282947 call chpl__buildArrayRuntimeType call_tmp[916201] call_tmp[916208]))
    (652465 'init var' tableCopy[282933] call_tmp[717524] call_tmp[916213])
    (282965 'end of statement')
    (282967 call sort tableCopy[282933](comparator = comparator[282924]))
    (566331 'end of statement' tableCopy[282933])
    {
      unknown _indexOfInterest[282979] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[282980] "expr temp" "temp"
      (282989 'move' _iterator[282980](282987 call _getIterator tableCopy[282933]))
      Defer
      {
        {
          (283004 call _freeIterator _iterator[282980])
        }
      }
      { scopeless type
        (282994 'move' _indexOfInterest[282979](282991 call iteratorIndex _iterator[282980]))
      }
      ForLoop[282981] order-independent
      {
        unknown ind[282971] "index var" "insert auto destroy"
        (566334 'end of statement')
        (282999 'move' ind[282971] _indexOfInterest[282979])
        (566335 'end of statement' ind[282971])
        unknown yret[628539] "YVV" "temp"
        (628542 'move' yret[628539](628541 'deref' ind[282971]))
        (282974 yield yret[628539])
        (566337 'end of statement' ind[282971])
        label _continueLabel[282984]
        _indexOfInterest[282979]
        _iterator[282980]
      }
      label _breakLabel[282985]
    }
    (628537 return ret[628535])
    (396976 'used modules list'(282930 'use' Sort[247204]))
  }
  function DefaultAssociativeDom[283163](?)._fullSlots[283013](arg _mt[283017]:_MT[201], arg this[283015]:DefaultAssociativeDom[283163](?)) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628547] "RVV" "temp"
    {
      unknown _indexOfInterest[283045] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[283046] "expr temp" "temp"
      unknown call_tmp[916220] "expr temp" "maybe param" "maybe type" "temp"
      (916223 'move' call_tmp[916220](409314 call table _mt[203] this[283015]))
      unknown call_tmp[916227] "expr temp" "maybe param" "maybe type" "temp"
      (916230 'move' call_tmp[916227](283026 call(283023 call (partial) allSlots _mt[203] call_tmp[916220])))
      (283055 'move' _iterator[283046](283053 call _getIterator call_tmp[916227]))
      Defer
      {
        {
          (283070 call _freeIterator _iterator[283046])
        }
      }
      { scopeless type
        (283060 'move' _indexOfInterest[283045](283057 call iteratorIndex _iterator[283046]))
      }
      ForLoop[283047] order-independent
      {
        unknown slot[283020] "index var" "insert auto destroy"
        (566340 'end of statement')
        (283065 'move' slot[283020] _indexOfInterest[283045])
        (566341 'end of statement' slot[283020])
        {
          unknown call_tmp[916234] "expr temp" "maybe param" "maybe type" "temp"
          (916237 'move' call_tmp[916234](409319 call table _mt[203] this[283015]))
          unknown call_tmp[916241] "expr temp" "maybe param" "maybe type" "temp"
          (916244 'move' call_tmp[916241](283037 call(283034 call (partial) isSlotFull _mt[203] call_tmp[916234]) slot[283020]))
          unknown call_tmp[916246] "expr temp" "maybe param" "maybe type" "temp"
          (916249 'move' call_tmp[916246](283039 call _cond_test call_tmp[916241]))
          if call_tmp[916246]
          {
            unknown yret[628551] "YVV" "temp"
            (628554 'move' yret[628551](628553 'deref' slot[283020]))
            (283029 yield yret[628551])
            (566343 'end of statement' slot[283020])
          }
        }
        label _continueLabel[283050]
        _indexOfInterest[283045]
        _iterator[283046]
      }
      label _breakLabel[283051]
    }
    (628549 return ret[628547])
  }
  function DefaultAssociativeDom[283163](?).dsiTargetLocales[283079](arg _mt[283083]:_MT[201], arg this[283081]:DefaultAssociativeDom[283163](?)) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[628559] "RVV" "temp"
    unknown call_tmp[916251] "expr temp" "maybe param" "maybe type" "temp"
    (916254 'move' call_tmp[916251](283090 '_wide_get_locale' this[283081]))
    unknown call_tmp[916256] "expr temp" "maybe param" "maybe type" "temp"
    (916259 'move' call_tmp[916256](283091 call chpl_localeID_to_locale call_tmp[916251]))
    unknown call_tmp[916261] "expr temp" "maybe param" "maybe type" "temp"
    (916264 'move' call_tmp[916261](283088 call chpl_getSingletonLocaleArray call_tmp[916256]))
    (628564 'move' ret[628559](628563 'addr of' call_tmp[916261]))
    (628561 return ret[628559])
  }
  function DefaultAssociativeDom[283163](?).dsiHasSingleLocalSubdomain[283095](arg _mt[283099]:_MT[201], arg this[283097]:DefaultAssociativeDom[283163](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[628568] "RVV" "param" "temp"
    (628573 'move' ret[628568](628572 'deref' 1))
    (628570 return ret[628568])
  }
  function DefaultAssociativeDom[283163](?).dsiLocalSubdomain[283106](arg _mt[283114]:_MT[201], arg this[283108]:DefaultAssociativeDom[283163](?), arg loc[283111]:locale[234]) : _unknown[42] "method" "primary method"
  {
    unknown ret[628577] "RVV" "temp"
    unknown call_tmp[916266] "expr temp" "maybe param" "maybe type" "temp"
    (916269 'move' call_tmp[916266](283141 '_wide_get_locale' this[283108]))
    unknown call_tmp[916271] "expr temp" "maybe param" "maybe type" "temp"
    (916274 'move' call_tmp[916271](283142 call chpl_localeID_to_locale call_tmp[916266]))
    unknown call_tmp[916276] "expr temp" "maybe param" "maybe type" "temp"
    (916279 'move' call_tmp[916276](283138 call == call_tmp[916271] loc[283111]))
    unknown call_tmp[916281] "expr temp" "maybe param" "maybe type" "temp"
    (916284 'move' call_tmp[916281](283145 call _cond_test call_tmp[916276]))
    if call_tmp[916281]
    {
      unknown call_tmp[916286] "expr temp" "maybe param" "maybe type" "temp"
      (916289 'move' call_tmp[916286](283121 call : this[283108] unmanaged[183](?)))
      unknown call_tmp[916291] "expr temp" "maybe param" "maybe type" "temp"
      (916294 'move' call_tmp[916291](283120 call _getDomain call_tmp[916286]))
      (628582 'move' ret[628577](628581 'deref' call_tmp[916291]))
      gotoReturn _end_dsiLocalSubdomain[628575] _end_dsiLocalSubdomain[628575]
    }
    {
      unknown a[283127] "dead at end of block" "insert auto destroy"
      unknown call_tmp[916298] "expr temp" "maybe param" "maybe type" "temp"
      (916301 'move' call_tmp[916298](454479 call idxType _mt[203] this[283108]))
      unknown call_tmp[916305] "expr temp" "maybe param" "maybe type" "temp"
      (916308 'move' call_tmp[916305](454484 call parSafe _mt[203] this[283108]))
      unknown call_tmp[916310] "expr temp" "maybe param" "maybe type" "temp"
      (916313 'move' call_tmp[916310](283129 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[916298](parSafe = call_tmp[916305])))
      (652467 'default init var' a[283127] call_tmp[916310])
      (283135 'end of statement')
      (628587 'move' ret[628577](628586 'deref' a[283127]))
      gotoReturn _end_dsiLocalSubdomain[628575] _end_dsiLocalSubdomain[628575]
      (566348 'end of statement' a[283127])
    }
    label _end_dsiLocalSubdomain[628575]
    (628579 return ret[628577])
  }
  function DefaultAssociativeDom[283163](?).dsiSupportsAutoLocalAccess[283151](arg _mt[283155]:_MT[201], arg this[283153]:DefaultAssociativeDom[283163](?)) param : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[628593] "RVV" "param" "temp"
    (628598 'move' ret[628593](628597 'deref' defaultAssociativeSupportsAutoLocalAccess[280623]))
    (628595 return ret[628593])
  }
  type DefaultAssociativeDom[283163](?) val super[397681]:BaseAssociativeDom[271595] "super class" unknown idxType[280904] "type variable" unknown parSafe[280907] "param" bool[19] val dist[280912]:unmanaged DefaultDist[468151] unmanaged DefaultDist[468151] unknown numEntries[280918](280920 call chpl__processorAtomicType int(64)[10]) unknown tableLock[280925](280929 IfExpr  parSafe[280907] then
  { scopeless
    chpl_LocalSpinlock[85418]
  } else
  { scopeless
    nothing[7]
  } ) unknown table[280935](280937 call chpl__hashtable[267644](?) idxType[280904] nothing[7])
  type unmanaged DefaultAssociativeDom[468175](?)
  type DefaultAssociativeDom[454152](?)
  function DefaultAssociativeArr[285981](?).init[283209](arg _mt[283230]:_MT[201], arg this[283211]:DefaultAssociativeArr[285981](?), arg eltType[283213]:_any[141](?), arg idxType[283215]:_any[141](?), param arg parSafeDom[283217]:_any[141](?), arg dom[283225] :
  (283221 call unmanaged DefaultAssociativeDom[468175](?) idxType[283215](parSafe = parSafeDom[283217])), param arg initElts[283228]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[533069] "temporary of super field" "temp"
    (533071 'move' super_tmp[533069](533068 '.v' this[283211] c"super"))
    (283237 call(283234 call (partial) init _mt[203] super_tmp[533069])(eltType = eltType[283213]))
    (566351 'end of statement')
    unknown tmp[533074] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[578947] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[916317] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (916320 'move' call_tmp[916317](533076 '.v' this[283211] c"super"))
      (578951 'move' call_type_tmp[578947](533079 'typeof' call_tmp[916317]))
    }
    (533080 'move' tmp[533074] call_type_tmp[578947])
    unknown call_tmp[916322] "maybe param" "maybe type" "temp"
    (916325 'move' call_tmp[916322](533085 'cast' tmp[533074] this[283211]))
    unknown chpl__thisAsParent[533082] "dead at end of block" "insert auto destroy" "temp"
    (652469 'init var' chpl__thisAsParent[533082] call_tmp[916322] tmp[533074])
    (533088 'setcid' chpl__thisAsParent[533082])
    (566352 'end of statement')
    unknown idxType[533090] "temp" "type variable"
    (533092 'move' idxType[533090] idxType[283215])
    (533094 'init field' this[283211] c"idxType" idxType[533090])
    unknown call_tmp[916327] "expr temp" "maybe param" "maybe type" "temp"
    (916330 'move' call_tmp[916327](533099 call : parSafeDom[283217] bool[19]))
    (533101 'init field' this[283211] c"parSafeDom" call_tmp[916327])
    (566353 'end of statement')
    unknown call_tmp[916332] "expr temp" "maybe param" "maybe type" "temp"
    (916335 'move' call_tmp[916332](533117 '.v' this[283211] c"idxType"))
    unknown call_tmp[916337] "expr temp" "maybe param" "maybe type" "temp"
    (916340 'move' call_tmp[916337](533120 '.v' this[283211] c"parSafeDom"))
    unknown call_tmp[916342] "maybe param" "maybe type" "temp"
    (916345 'move' call_tmp[916342](533107 call unmanaged DefaultAssociativeDom[468175](?) call_tmp[916332](parSafe = call_tmp[916337])))
    unknown dom[533104] "temp"
    (533111 'init var' dom[533104] dom[283225] call_tmp[916342])
    (533113 'init field' this[283211] c"dom" dom[533104])
    (566354 'end of statement')
    unknown call_tmp[916349] "expr temp" "maybe param" "maybe type" "temp"
    (916352 'move' call_tmp[916349](283266 call table _mt[203] dom[283225]))
    unknown call_tmp[916356] "maybe param" "maybe type" "temp"
    (916359 'move' call_tmp[916356](283269 call tableSize _mt[203] call_tmp[916349]))
    unknown tableSize[283264] "dead at end of block" "insert auto destroy"
    (652471 'init var' tableSize[283264] call_tmp[916356])
    (283273 'end of statement')
    val dataSize[533123]:int(64)[10] "temp"
    (533126 'default init var' dataSize[533123] int(64)[10])
    (533130 '.=' this[283211] c"dataSize" dataSize[533123])
    (566355 'end of statement')
    unknown call_tmp[916363] "expr temp" "maybe param" "maybe type" "temp"
    (916366 'move' call_tmp[916363](283281 call table _mt[203] dom[283225]))
    unknown call_tmp[916370] "maybe param" "maybe type" "temp"
    (916373 'move' call_tmp[916370](283289 call(283286 call (partial) allocateData _mt[203] call_tmp[916363]) tableSize[283264] eltType[283213]))
    unknown call_tmp[916375] "expr temp" "maybe param" "maybe type" "temp"
    (916378 'move' call_tmp[916375](533145 '.v' this[283211] c"eltType"))
    unknown call_tmp[916380] "maybe param" "maybe type" "temp"
    (916383 'move' call_tmp[916380](533137 call _ddata[67573](?) call_tmp[916375]))
    unknown data[533134] "temp"
    (533139 'init var' data[533134] call_tmp[916370] call_tmp[916380])
    (533141 'init field' this[283211] c"data" data[533134])
    (566356 'end of statement' tableSize[283264])
    unknown call_tmp[916385] "expr temp" "maybe param" "maybe type" "temp"
    (916388 'move' call_tmp[916385](533159 '.v' this[283211] c"eltType"))
    unknown call_tmp[916390] "maybe param" "maybe type" "temp"
    (916393 'move' call_tmp[916390](533151 call _ddata[67573](?) call_tmp[916385]))
    unknown tmpData[533148] "temp"
    (533153 'init var' tmpData[533148] nil[32] call_tmp[916390])
    (533155 'init field' this[283211] c"tmpData" tmpData[533148])
    (566358 'end of statement')
    unknown eltsNeedDeinit[533162] "temp"
    (533164 'init var' eltsNeedDeinit[533162] initElts[283228])
    (533166 '.=' this[283211] c"eltsNeedDeinit" eltsNeedDeinit[533162])
    (566359 'end of statement')
    (533172 'init done')
    (566360 'end of statement')
    (533171 'setcid' this[283211])
    (566361 'end of statement')
    unknown call_tmp[916395] "expr temp" "maybe param" "maybe type" "temp"
    (916398 'move' call_tmp[916395](283390 call _cond_test initElts[283228]))
    if call_tmp[916395]
    {
      unknown call_tmp[916402] "expr temp" "maybe param" "maybe type" "temp"
      (916405 'move' call_tmp[916402](283381 call eltType _mt[203] this[283211]))
      unknown call_tmp[916407] "expr temp" "maybe param" "maybe type" "temp"
      (916410 'move' call_tmp[916407](283379 call isNonNilableClass call_tmp[916402]))
      unknown call_tmp[916412] "expr temp" "maybe param" "maybe type" "temp"
      (916415 'move' call_tmp[916412](283384 call _cond_test call_tmp[916407]))
      if call_tmp[916412]
      {
        unknown call_tmp[916417] "expr temp" "maybe param" "maybe type" "temp"
        (916420 'move' call_tmp[916417](283323 call + "Cannot default initialize associative array because" " element type "))
        unknown call_tmp[916422] "expr temp" "maybe param" "maybe type" "temp"
        (916425 'move' call_tmp[916422](283331 call : eltType[283213] string[244]))
        unknown call_tmp[916427] "expr temp" "maybe param" "maybe type" "temp"
        (916430 'move' call_tmp[916427](283321 call + call_tmp[916417] call_tmp[916422]))
        unknown call_tmp[916432] "maybe param" "maybe type" "temp"
        (916435 'move' call_tmp[916432](283319 call + call_tmp[916427] " is a non-nilable class"))
        unknown msg[283318] "dead at end of block" "param"
        (652473 'init var' msg[283318] call_tmp[916432])
        (283339 'end of statement')
        (283341 call compilerError msg[283318])
      }
      {
        unknown call_tmp[916439] "expr temp" "maybe param" "maybe type" "temp"
        (916442 'move' call_tmp[916439](283371 call eltType _mt[203] this[283211]))
        unknown call_tmp[916444] "expr temp" "maybe param" "maybe type" "temp"
        (916447 'move' call_tmp[916444](283369 call isDefaultInitializable call_tmp[916439]))
        unknown call_tmp[916449] "expr temp" "maybe param" "maybe type" "temp"
        (916452 'move' call_tmp[916449](283366 call ! call_tmp[916444]))
        unknown call_tmp[916454] "expr temp" "maybe param" "maybe type" "temp"
        (916457 'move' call_tmp[916454](283374 call _cond_test call_tmp[916449]))
        if call_tmp[916454]
        {
          unknown call_tmp[916459] "expr temp" "maybe param" "maybe type" "temp"
          (916462 'move' call_tmp[916459](283350 call + "Cannot default initialize associative array because" " element type "))
          unknown call_tmp[916464] "expr temp" "maybe param" "maybe type" "temp"
          (916467 'move' call_tmp[916464](283354 call : eltType[283213] string[244]))
          unknown call_tmp[916469] "expr temp" "maybe param" "maybe type" "temp"
          (916472 'move' call_tmp[916469](283348 call + call_tmp[916459] call_tmp[916464]))
          unknown call_tmp[916474] "maybe param" "maybe type" "temp"
          (916477 'move' call_tmp[916474](283346 call + call_tmp[916469] " cannot be default initialized"))
          unknown msg[283345] "dead at end of block" "param"
          (652475 'init var' msg[283345] call_tmp[916474])
          (283362 'end of statement')
          (283364 call compilerError msg[283345])
        }
      }
    }
    unknown call_tmp[916479] "expr temp" "maybe param" "maybe type" "temp"
    (916482 'move' call_tmp[916479](283582 call _cond_test initElts[283228]))
    if call_tmp[916479]
    {
      unknown call_tmp[916484] "maybe param" "maybe type" "temp"
      (916487 'move' call_tmp[916484](283398 call init_elts_method tableSize[283264] eltType[283213]))
      unknown initMethod[283396] "dead at end of block" "insert auto destroy"
      (652477 'init var' initMethod[283396] call_tmp[916484])
      (283402 'end of statement' tableSize[283264])
      {
        unknown tmp[283550] "expr temp" "maybe param" "maybe type" "temp"
        (283552 'move' tmp[283550] initMethod[283396])
        unknown call_tmp[916489] "expr temp" "maybe param" "maybe type" "temp"
        (916492 'move' call_tmp[916489](283554 call == tmp[283550] noInit[66979]))
        unknown call_tmp[916494] "expr temp" "maybe param" "maybe type" "temp"
        (916497 'move' call_tmp[916494](283557 call _cond_test call_tmp[916489]))
        if call_tmp[916494]
        {
        }
        {
          unknown call_tmp[916499] "expr temp" "maybe param" "maybe type" "temp"
          (916502 'move' call_tmp[916499](283560 call == tmp[283550] serialInit[66981]))
          unknown call_tmp[916504] "expr temp" "maybe param" "maybe type" "temp"
          (916507 'move' call_tmp[916504](283563 call _cond_test call_tmp[916499]))
          if call_tmp[916504]
          {
            {
              unknown _indexOfInterest[283449] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[283450] "expr temp" "temp"
              unknown call_tmp[916511] "expr temp" "maybe param" "maybe type" "temp"
              (916514 'move' call_tmp[916511](283423 call table _mt[203] dom[283225]))
              unknown call_tmp[916518] "expr temp" "maybe param" "maybe type" "temp"
              (916521 'move' call_tmp[916518](283429 call(283426 call (partial) allSlots _mt[203] call_tmp[916511])))
              (283459 'move' _iterator[283450](283457 call _getIterator call_tmp[916518]))
              Defer
              {
                {
                  (283474 call _freeIterator _iterator[283450])
                }
              }
              { scopeless type
                (283464 'move' _indexOfInterest[283449](283461 call iteratorIndex _iterator[283450]))
              }
              ForLoop[283451]
              {
                unknown slot[283420] "index var" "insert auto destroy"
                (566366 'end of statement')
                (283469 'move' slot[283420] _indexOfInterest[283449])
                (566367 'end of statement' slot[283420])
                {
                  unknown call_tmp[916525] "expr temp" "maybe param" "maybe type" "temp"
                  (916528 'move' call_tmp[916525](283443 call(283440 call (partial) _isSlotFull _mt[203] dom[283225]) slot[283420]))
                  unknown call_tmp[916530] "expr temp" "maybe param" "maybe type" "temp"
                  (916533 'move' call_tmp[916530](283445 call _cond_test call_tmp[916525]))
                  if call_tmp[916530]
                  {
                    (283433 call(454520 call (partial) _doDefaultInitSlot _mt[203] this[283211]) slot[283420](inAdd = 0))
                    (566369 'end of statement' slot[283420])
                  }
                }
                label _continueLabel[283454]
                _indexOfInterest[283449]
                _iterator[283450]
              }
              label _breakLabel[283455]
            }
          }
          {
            unknown call_tmp[916537] "expr temp" "maybe param" "maybe type" "temp"
            (916540 'move' call_tmp[916537](283567 call == tmp[283550] parallelInit[66983]))
            unknown call_tmp[916542] "expr temp" "maybe param" "maybe type" "temp"
            (916545 'move' call_tmp[916542](283570 call _cond_test call_tmp[916537]))
            if call_tmp[916542]
            {
              unknown call_tmp[470441] "expr temp" "maybe param" "maybe type" "temp"
              unknown call_tmp[916549] "expr temp" "maybe param" "maybe type" "temp"
              (916552 'move' call_tmp[916549](283492 call table _mt[203] dom[283225]))
              (470444 'move' call_tmp[470441](283498 call(283495 call (partial) allSlots _mt[203] call_tmp[916549])))
              Forall[283518] {
                induction variables:
                  
                  unknown slot[283489] "index var" "insert auto destroy"
                iterated expressions:
                  call_tmp[470441]
                shadow variables:
                other variables
                  forall body
                {
                  unknown call_tmp[916558] "expr temp" "maybe param" "maybe type" "temp"
                  (916561 'move' call_tmp[916558](283510 call(283507 call (partial) _isSlotFull _mt[203] dom[283225]) slot[283489]))
                  unknown call_tmp[916563] "expr temp" "maybe param" "maybe type" "temp"
                  (916566 'move' call_tmp[916563](283512 call _cond_test call_tmp[916558]))
                  if call_tmp[916563]
                  {
                    (283502 call(454526 call (partial) _doDefaultInitSlot _mt[203] this[283211]) slot[283489](inAdd = 0))
                    (566371 'end of statement' slot[283489])
                  }
                }
              }
            }
            {
              unknown call_tmp[916570] "expr temp" "maybe param" "maybe type" "temp"
              (916573 'move' call_tmp[916570](283574 call == tmp[283550] gpuInit[66985]))
              unknown call_tmp[916575] "expr temp" "maybe param" "maybe type" "temp"
              (916578 'move' call_tmp[916575](283577 call _cond_test call_tmp[916570]))
              if call_tmp[916575]
              {
                (283530 call halt "Associative arrays cannot be initialized on GPU locales with" " CHPL_MEM_STRATEGY=array_on_device yet.")
              }
              {
                (283542 call halt "ArrayInit." initMethod[283396] " heuristicInit should have been implemented")
                (566374 'end of statement' initMethod[283396])
              }
            }
          }
        }
      }
    }
    (628600 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).deinit[283588](arg _mt[283592]:_MT[201], arg this[283590]:DefaultAssociativeArr[285981](?)) : _unknown[42] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[916582] "expr temp" "maybe param" "maybe type" "temp"
    (916585 'move' call_tmp[916582](454535 call data _mt[203] this[283590]))
    unknown call_tmp[916589] "expr temp" "maybe param" "maybe type" "temp"
    (916592 'move' call_tmp[916589](409348 call dom _mt[203] this[283590]))
    unknown call_tmp[916596] "expr temp" "maybe param" "maybe type" "temp"
    (916599 'move' call_tmp[916596](283599 call table _mt[203] call_tmp[916589]))
    unknown call_tmp[916603] "expr temp" "maybe param" "maybe type" "temp"
    (916606 'move' call_tmp[916603](283602 call tableSize _mt[203] call_tmp[916596]))
    (283596 call _ddata_free call_tmp[916582] call_tmp[916603])
    (628602 return _void[46])
  }
  function DefaultAssociativeArr[467909](?).rank[283607](arg _mt[283611]:_MT[201], arg this[283609]:DefaultAssociativeArr[467909](?)) param : _unknown[42] "method" "primary method" "no parens"
  {
    unknown ret[628606] "RVV" "param" "temp"
    (628611 'move' ret[628606](628610 'deref' 1))
    (628608 return ret[628606])
  }
  function DefaultAssociativeArr[285981](?).dsiGetBaseDom[283618](arg _mt[283622]:_MT[201], arg this[283620]:DefaultAssociativeArr[285981](?)) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown ret[628615] "RVV" "temp"
    unknown call_tmp[916610] "expr temp" "maybe param" "maybe type" "temp"
    (916613 'move' call_tmp[916610](454540 call dom _mt[203] this[283620]))
    (628620 'move' ret[628615](628619 'deref' call_tmp[916610]))
    (628617 return ret[628615])
  }
  function DefaultAssociativeArr[285981](?).dsiAccess[283629](arg _mt[283637]:_MT[201], arg this[283631]:DefaultAssociativeArr[285981](?), arg idx[283634] :
  (454545 call idxType _mt[203] this[283631])) ref : _unknown[42] "method" "primary method"
  {
    unknown ret[628624] "RVV" "temp"
    unknown call_tmp[916619] "expr temp" "maybe param" "maybe type" "temp"
    (916622 'move' call_tmp[916619](409353 call dom _mt[203] this[283631]))
    unknown call_tmp[916626] "expr temp" "maybe param" "maybe type" "temp"
    (916629 'move' call_tmp[916626](283646 call table _mt[203] call_tmp[916619]))
    unknown call_tmp[916633] "maybe param" "maybe type" "temp"
    (916636 'move' call_tmp[916633](283652 call(283649 call (partial) findFullSlot _mt[203] call_tmp[916626]) idx[283634]))
    unknown tmp[283654] "dead at end of block" "insert auto destroy" "temp"
    (652479 'init var' tmp[283654] call_tmp[916633])
    (283661 call _check_tuple_var_decl tmp[283654] 2)
    (566379 'end of statement')
    unknown call_tmp[916638] "maybe param" "maybe type" "temp"
    (916641 'move' call_tmp[916638](283655 call tmp[283654] 0))
    unknown found[283641] "dead at end of block" "insert auto destroy"
    (652481 'init var' found[283641] call_tmp[916638])
    unknown call_tmp[916643] "maybe param" "maybe type" "temp"
    (916646 'move' call_tmp[916643](283658 call tmp[283654] 1))
    unknown slotNum[283643] "dead at end of block" "insert auto destroy"
    (652483 'init var' slotNum[283643] call_tmp[916643])
    (283666 'end of statement')
    unknown call_tmp[916648] "expr temp" "maybe param" "maybe type" "temp"
    (916651 'move' call_tmp[916648](283678 call _cond_test found[283641]))
    if call_tmp[916648]
    {
      unknown call_tmp[916655] "expr temp" "maybe param" "maybe type" "temp"
      (916658 'move' call_tmp[916655](283670 call(454551 call (partial) data _mt[203] this[283631]) slotNum[283643]))
      (628629 'move' ret[628624](628628 'addr of' call_tmp[916655]))
      gotoReturn _end_dsiAccess[628622] _end_dsiAccess[628622]
      (566380 'end of statement' slotNum[283643])
    }
    {
      (283674 call halt "array index out of bounds: " idx[283634])
    }
    label _end_dsiAccess[628622]
    (628626 return ret[628624])
  }
  function DefaultAssociativeArr[285981](?).dsiAccess[283684](arg _mt[283695]:_MT[201], arg this[283686]:DefaultAssociativeArr[285981](?), arg idx[283692] :
  unknown call_tmp[916662] "expr temp" "maybe param" "maybe type" "temp") ref : _unknown[42] "method" "primary method"
  {
    unknown ret[628635] "RVV" "temp"
    unknown call_tmp[916669] "expr temp" "maybe param" "maybe type" "temp"
    (916672 'move' call_tmp[916669](283702 call idx[283692] 0))
    unknown call_tmp[916674] "expr temp" "maybe param" "maybe type" "temp"
    (916677 'move' call_tmp[916674](283700 call(454563 call (partial) dsiAccess _mt[203] this[283686]) call_tmp[916669]))
    (628640 'move' ret[628635](628639 'addr of' call_tmp[916674]))
    (628637 return ret[628635])
  }
  function DefaultAssociativeArr[285981](?).dsiAccess[283706](arg _mt[283714]:_MT[201], arg this[283708]:DefaultAssociativeArr[285981](?), arg idx[283711] :
  (454569 call idxType _mt[203] this[283708])) : _unknown[42] "method" "primary method"
  {
    unknown ret[628644] "RVV" "temp"
    unknown call_tmp[916683] "expr temp" "maybe param" "maybe type" "temp"
    (916686 'move' call_tmp[916683](409358 call dom _mt[203] this[283708]))
    unknown call_tmp[916690] "expr temp" "maybe param" "maybe type" "temp"
    (916693 'move' call_tmp[916690](283726 call table _mt[203] call_tmp[916683]))
    unknown call_tmp[916697] "maybe param" "maybe type" "temp"
    (916700 'move' call_tmp[916697](283732 call(283729 call (partial) findFullSlot _mt[203] call_tmp[916690]) idx[283711]))
    unknown tmp[283734] "dead at end of block" "insert auto destroy" "temp"
    (652485 'init var' tmp[283734] call_tmp[916697])
    (283741 call _check_tuple_var_decl tmp[283734] 2)
    (566384 'end of statement')
    unknown call_tmp[916702] "maybe param" "maybe type" "temp"
    (916705 'move' call_tmp[916702](283735 call tmp[283734] 0))
    unknown found[283721] "dead at end of block" "insert auto destroy"
    (652487 'init var' found[283721] call_tmp[916702])
    unknown call_tmp[916707] "maybe param" "maybe type" "temp"
    (916710 'move' call_tmp[916707](283738 call tmp[283734] 1))
    unknown slotNum[283723] "dead at end of block" "insert auto destroy"
    (652489 'init var' slotNum[283723] call_tmp[916707])
    (283746 'end of statement')
    unknown call_tmp[916712] "expr temp" "maybe param" "maybe type" "temp"
    (916715 'move' call_tmp[916712](283758 call _cond_test found[283721]))
    if call_tmp[916712]
    {
      unknown call_tmp[916719] "expr temp" "maybe param" "maybe type" "temp"
      (916722 'move' call_tmp[916719](283750 call(454580 call (partial) data _mt[203] this[283708]) slotNum[283723]))
      (628649 'move' ret[628644](628648 'deref' call_tmp[916719]))
      gotoReturn _end_dsiAccess[628642] _end_dsiAccess[628642]
      (566385 'end of statement' slotNum[283723])
    }
    {
      (283754 call halt "array index out of bounds: " idx[283711])
    }
    label _end_dsiAccess[628642]
    (628646 return ret[628644])
  }
  where {
    unknown call_tmp[916726] "expr temp" "maybe param" "maybe type" "temp"
    (916729 'move' call_tmp[916726](454574 call eltType _mt[203] this[283708]))
    (283717 call shouldReturnRvalueByValue call_tmp[916726])
  }
  function DefaultAssociativeArr[285981](?).dsiAccess[283765](arg _mt[283776]:_MT[201], arg this[283767]:DefaultAssociativeArr[285981](?), arg idx[283773] :
  unknown call_tmp[916733] "expr temp" "maybe param" "maybe type" "temp") ref : _unknown[42] "method" "primary method"
  {
    unknown ret[628655] "RVV" "temp"
    unknown call_tmp[916740] "expr temp" "maybe param" "maybe type" "temp"
    (916743 'move' call_tmp[916740](283786 call idx[283773] 0))
    unknown call_tmp[916745] "expr temp" "maybe param" "maybe type" "temp"
    (916748 'move' call_tmp[916745](283784 call(454597 call (partial) dsiAccess _mt[203] this[283767]) call_tmp[916740]))
    (628660 'move' ret[628655](628659 'addr of' call_tmp[916745]))
    (628657 return ret[628655])
  }
  where {
    unknown call_tmp[916752] "expr temp" "maybe param" "maybe type" "temp"
    (916755 'move' call_tmp[916752](454593 call eltType _mt[203] this[283767]))
    (283779 call shouldReturnRvalueByValue call_tmp[916752])
  }
  function DefaultAssociativeArr[285981](?).dsiAccess[283791](arg _mt[283799]:_MT[201], arg this[283793]:DefaultAssociativeArr[285981](?), arg idx[283796] :
  (454603 call idxType _mt[203] this[283793])) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[628664] "RVV" "temp"
    unknown call_tmp[916761] "expr temp" "maybe param" "maybe type" "temp"
    (916764 'move' call_tmp[916761](409363 call dom _mt[203] this[283793]))
    unknown call_tmp[916768] "expr temp" "maybe param" "maybe type" "temp"
    (916771 'move' call_tmp[916768](283808 call table _mt[203] call_tmp[916761]))
    unknown call_tmp[916775] "maybe param" "maybe type" "temp"
    (916778 'move' call_tmp[916775](283814 call(283811 call (partial) findFullSlot _mt[203] call_tmp[916768]) idx[283796]))
    unknown tmp[283816] "dead at end of block" "insert auto destroy" "temp"
    (652491 'init var' tmp[283816] call_tmp[916775])
    (283823 call _check_tuple_var_decl tmp[283816] 2)
    (566389 'end of statement')
    unknown call_tmp[916780] "maybe param" "maybe type" "temp"
    (916783 'move' call_tmp[916780](283817 call tmp[283816] 0))
    unknown found[283803] "dead at end of block" "insert auto destroy"
    (652493 'init var' found[283803] call_tmp[916780])
    unknown call_tmp[916785] "maybe param" "maybe type" "temp"
    (916788 'move' call_tmp[916785](283820 call tmp[283816] 1))
    unknown slotNum[283805] "dead at end of block" "insert auto destroy"
    (652495 'init var' slotNum[283805] call_tmp[916785])
    (283828 'end of statement')
    unknown call_tmp[916790] "expr temp" "maybe param" "maybe type" "temp"
    (916793 'move' call_tmp[916790](283840 call _cond_test found[283803]))
    if call_tmp[916790]
    {
      unknown call_tmp[916797] "expr temp" "maybe param" "maybe type" "temp"
      (916800 'move' call_tmp[916797](283832 call(454609 call (partial) data _mt[203] this[283793]) slotNum[283805]))
      (628669 'move' ret[628664](628668 'addr of' call_tmp[916797]))
      gotoReturn _end_dsiAccess[628662] _end_dsiAccess[628662]
      (566390 'end of statement' slotNum[283805])
    }
    {
      (283836 call halt "array index out of bounds: " idx[283796])
    }
    label _end_dsiAccess[628662]
    (628666 return ret[628664])
  }
  function DefaultAssociativeArr[285981](?).dsiAccess[283846](arg _mt[283857]:_MT[201], arg this[283848]:DefaultAssociativeArr[285981](?), arg idx[283854] :
  unknown call_tmp[916804] "expr temp" "maybe param" "maybe type" "temp") const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[628675] "RVV" "temp"
    unknown call_tmp[916811] "expr temp" "maybe param" "maybe type" "temp"
    (916814 'move' call_tmp[916811](283864 call idx[283854] 0))
    unknown call_tmp[916816] "expr temp" "maybe param" "maybe type" "temp"
    (916819 'move' call_tmp[916816](283862 call(454621 call (partial) dsiAccess _mt[203] this[283848]) call_tmp[916811]))
    (628680 'move' ret[628675](628679 'addr of' call_tmp[916816]))
    (628677 return ret[628675])
  }
  function DefaultAssociativeArr[285981](?).dsiLocalAccess[283868](arg _mt[283874]:_MT[201], arg this[283870]:DefaultAssociativeArr[285981](?), arg i[283872]:_any[141](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[628684] "RVV" "temp"
    unknown call_tmp[916823] "expr temp" "maybe param" "maybe type" "temp"
    (916826 'move' call_tmp[916823](283879 call(454626 call (partial) dsiAccess _mt[203] this[283870]) i[283872]))
    (628689 'move' ret[628684](628688 'addr of' call_tmp[916823]))
    (628686 return ret[628684])
  }
  function DefaultAssociativeArr[285981](?).dsiLocalAccess[283883](arg _mt[283889]:_MT[201], arg this[283885]:DefaultAssociativeArr[285981](?), arg i[283887]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[628693] "RVV" "temp"
    unknown call_tmp[916830] "expr temp" "maybe param" "maybe type" "temp"
    (916833 'move' call_tmp[916830](283897 call(454636 call (partial) dsiAccess _mt[203] this[283885]) i[283887]))
    (628698 'move' ret[628693](628697 'deref' call_tmp[916830]))
    (628695 return ret[628693])
  }
  where {
    unknown call_tmp[916837] "expr temp" "maybe param" "maybe type" "temp"
    (916840 'move' call_tmp[916837](454632 call eltType _mt[203] this[283885]))
    (283892 call shouldReturnRvalueByValue call_tmp[916837])
  }
  function DefaultAssociativeArr[285981](?).dsiLocalAccess[283902](arg _mt[283908]:_MT[201], arg this[283904]:DefaultAssociativeArr[285981](?), arg i[283906]:_any[141](?)) const ref : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[628702] "RVV" "temp"
    unknown call_tmp[916844] "expr temp" "maybe param" "maybe type" "temp"
    (916847 'move' call_tmp[916844](283913 call(454641 call (partial) dsiAccess _mt[203] this[283904]) i[283906]))
    (628707 'move' ret[628702](628706 'addr of' call_tmp[916844]))
    (628704 return ret[628702])
  }
  function DefaultAssociativeArr[285981](?).these[283917](arg _mt[283921]:_MT[201], arg this[283919]:DefaultAssociativeArr[285981](?)) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628711] "RVV" "temp"
    {
      unknown _indexOfInterest[283952] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[283953] "expr temp" "temp"
      unknown call_tmp[916851] "expr temp" "maybe param" "maybe type" "temp"
      (916854 'move' call_tmp[916851](409368 call dom _mt[203] this[283919]))
      unknown call_tmp[916858] "expr temp" "maybe param" "maybe type" "temp"
      (916861 'move' call_tmp[916858](283927 call table _mt[203] call_tmp[916851]))
      unknown call_tmp[916865] "expr temp" "maybe param" "maybe type" "temp"
      (916868 'move' call_tmp[916865](283933 call(283930 call (partial) allSlots _mt[203] call_tmp[916858])))
      (283962 'move' _iterator[283953](283960 call _getIterator call_tmp[916865]))
      Defer
      {
        {
          (283977 call _freeIterator _iterator[283953])
        }
      }
      { scopeless type
        (283967 'move' _indexOfInterest[283952](283964 call iteratorIndex _iterator[283953]))
      }
      ForLoop[283954] order-independent
      {
        unknown slot[283924] "index var" "insert auto destroy"
        (566398 'end of statement')
        (283972 'move' slot[283924] _indexOfInterest[283952])
        (566399 'end of statement' slot[283924])
        {
          unknown call_tmp[916872] "expr temp" "maybe param" "maybe type" "temp"
          (916875 'move' call_tmp[916872](409373 call dom _mt[203] this[283919]))
          unknown call_tmp[916879] "expr temp" "maybe param" "maybe type" "temp"
          (916882 'move' call_tmp[916879](283944 call(283941 call (partial) _isSlotFull _mt[203] call_tmp[916872]) slot[283924]))
          unknown call_tmp[916884] "expr temp" "maybe param" "maybe type" "temp"
          (916887 'move' call_tmp[916884](283946 call _cond_test call_tmp[916879]))
          if call_tmp[916884]
          {
            ref yret[628715] "YVV" "temp"
            unknown call_tmp[916891] "expr temp" "maybe param" "maybe type" "temp"
            (916894 'move' call_tmp[916891](283938 call(454647 call (partial) data _mt[203] this[283919]) slot[283924]))
            (628718 'move' yret[628715](628717 'addr of' call_tmp[916891]))
            (283936 yield yret[628715])
            (566401 'end of statement' slot[283924])
          }
        }
        label _continueLabel[283957]
        _indexOfInterest[283952]
        _iterator[283953]
      }
      label _breakLabel[283958]
    }
    (628713 return ret[628711])
  }
  function DefaultAssociativeArr[285981](?).these[283986](arg _mt[283994]:_MT[201], arg this[283988]:DefaultAssociativeArr[285981](?), param arg tag[283991]:iterKind[52144]) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628723] "RVV" "temp"
    unknown call_tmp[916896] "expr temp" "maybe param" "maybe type" "temp"
    (916899 'move' call_tmp[916896](284011 call _cond_test debugDefaultAssoc[280613]))
    if call_tmp[916896]
    {
      (284006 call writeln "*** In associative array standalone iterator")
    }
    {
      unknown _indexOfInterest[284045] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[284046] "expr temp" "temp"
      unknown call_tmp[916903] "expr temp" "maybe param" "maybe type" "temp"
      (916906 'move' call_tmp[916903](409379 call dom _mt[203] this[283988]))
      unknown call_tmp[916910] "expr temp" "maybe param" "maybe type" "temp"
      (916913 'move' call_tmp[916910](284018 call table _mt[203] call_tmp[916903]))
      unknown call_tmp[916917] "expr temp" "maybe param" "maybe type" "temp"
      (916920 'move' call_tmp[916917](284024 call(284021 call (partial) allSlots _mt[203] call_tmp[916910])(tag = tag[283991])))
      (284055 'move' _iterator[284046](284053 call _getIterator call_tmp[916917]))
      Defer
      {
        {
          (284070 call _freeIterator _iterator[284046])
        }
      }
      { scopeless type
        (284060 'move' _indexOfInterest[284045](284057 call iteratorIndex _iterator[284046]))
      }
      ForLoop[284047] order-independent
      {
        unknown slot[284015] "index var" "insert auto destroy"
        (566405 'end of statement')
        (284065 'move' slot[284015] _indexOfInterest[284045])
        (566406 'end of statement' slot[284015])
        {
          unknown call_tmp[916924] "expr temp" "maybe param" "maybe type" "temp"
          (916927 'move' call_tmp[916924](409384 call dom _mt[203] this[283988]))
          unknown call_tmp[916931] "expr temp" "maybe param" "maybe type" "temp"
          (916934 'move' call_tmp[916931](284037 call(284034 call (partial) _isSlotFull _mt[203] call_tmp[916924]) slot[284015]))
          unknown call_tmp[916936] "expr temp" "maybe param" "maybe type" "temp"
          (916939 'move' call_tmp[916936](284039 call _cond_test call_tmp[916931]))
          if call_tmp[916936]
          {
            ref yret[628727] "YVV" "temp"
            unknown call_tmp[916943] "expr temp" "maybe param" "maybe type" "temp"
            (916946 'move' call_tmp[916943](284031 call(454658 call (partial) data _mt[203] this[283988]) slot[284015]))
            (628730 'move' yret[628727](628729 'addr of' call_tmp[916943]))
            (284029 yield yret[628727])
            (566408 'end of statement' slot[284015])
          }
        }
        label _continueLabel[284050]
        _indexOfInterest[284045]
        _iterator[284046]
      }
      label _breakLabel[284051]
    }
    (628725 return ret[628723])
  }
  where {
    (283996 call == tag[283991] standalone[52142])
  }
  function DefaultAssociativeArr[285981](?).these[284080](arg _mt[284088]:_MT[201], arg this[284082]:DefaultAssociativeArr[285981](?), param arg tag[284085]:iterKind[52144]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628735] "RVV" "temp"
    {
      unknown _indexOfInterest[284109] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[284110] "expr temp" "temp"
      unknown call_tmp[916950] "expr temp" "maybe param" "maybe type" "temp"
      (916953 'move' call_tmp[916950](409390 call dom _mt[203] this[284082]))
      unknown call_tmp[916957] "expr temp" "maybe param" "maybe type" "temp"
      (916960 'move' call_tmp[916957](284104 call(284101 call (partial) these _mt[203] call_tmp[916950]) tag[284085]))
      (284119 'move' _iterator[284110](284117 call _getIterator call_tmp[916957]))
      Defer
      {
        {
          (284134 call _freeIterator _iterator[284110])
        }
      }
      { scopeless type
        (284124 'move' _indexOfInterest[284109](284121 call iteratorIndex _iterator[284110]))
      }
      ForLoop[284111]
      {
        unknown followThis[284098] "index var" "insert auto destroy"
        (566411 'end of statement')
        (284129 'move' followThis[284098] _indexOfInterest[284109])
        (566412 'end of statement' followThis[284098])
        unknown yret[628739] "YVV" "temp"
        (628742 'move' yret[628739](628741 'deref' followThis[284098]))
        (284106 yield yret[628739])
        (566414 'end of statement' followThis[284098])
        label _continueLabel[284114]
        _indexOfInterest[284109]
        _iterator[284110]
      }
      label _breakLabel[284115]
    }
    (628737 return ret[628735])
  }
  where {
    (284090 call == tag[284085] leader[52138])
  }
  function DefaultAssociativeArr[285981](?).these[284144](arg _mt[284154]:_MT[201], arg this[284146]:DefaultAssociativeArr[285981](?), param arg tag[284149]:iterKind[52144], arg followThis[284152]:_any[141](?)) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628747] "RVV" "temp"
    unknown tmp[284170] "dead at end of block" "insert auto destroy" "temp"
    (652497 'init var' tmp[284170] followThis[284152])
    (284177 call _check_tuple_var_decl tmp[284170] 2)
    (566416 'end of statement')
    unknown call_tmp[916962] "maybe param" "maybe type" "temp"
    (916965 'move' call_tmp[916962](284171 call tmp[284170] 0))
    unknown chunk[284165] "dead at end of block" "insert auto destroy"
    (652499 'init var' chunk[284165] call_tmp[916962])
    unknown call_tmp[916967] "maybe param" "maybe type" "temp"
    (916970 'move' call_tmp[916967](284174 call tmp[284170] 1))
    unknown followThisDom[284167] "dead at end of block" "insert auto destroy"
    (652501 'init var' followThisDom[284167] call_tmp[916967])
    (284182 'end of statement')
    unknown call_tmp[916972] "expr temp" "maybe param" "maybe type" "temp"
    (916975 'move' call_tmp[916972](284191 call _cond_test debugDefaultAssoc[280613]))
    if call_tmp[916972]
    {
      (284184 call writeln "In array follower code: Following " chunk[284165])
      (566417 'end of statement' chunk[284165])
    }
    unknown call_tmp[916979] "expr temp" "maybe param" "maybe type" "temp"
    (916982 'move' call_tmp[916979](284202 call dom _mt[203] this[284146]))
    unknown call_tmp[916984] "maybe param" "maybe type" "temp"
    (916987 'move' call_tmp[916984](284198 call == followThisDom[284167] call_tmp[916979]))
    const sameDom[284197] "dead at end of block" "const" "insert auto destroy"
    (652503 'init var' sameDom[284197] call_tmp[916984])
    (284206 'end of statement')
    unknown call_tmp[916989] "expr temp" "maybe param" "maybe type" "temp"
    (916992 'move' call_tmp[916989](284231 call ! sameDom[284197]))
    unknown call_tmp[916994] "expr temp" "maybe param" "maybe type" "temp"
    (916997 'move' call_tmp[916994](284234 call _cond_test call_tmp[916989]))
    if call_tmp[916994]
    {
      unknown call_tmp[917001] "expr temp" "maybe param" "maybe type" "temp"
      (917004 'move' call_tmp[917001](284216 call dsiNumIndices _mt[203] followThisDom[284167]))
      unknown call_tmp[917008] "expr temp" "maybe param" "maybe type" "temp"
      (917011 'move' call_tmp[917008](284220 call dom _mt[203] this[284146]))
      unknown call_tmp[917015] "expr temp" "maybe param" "maybe type" "temp"
      (917018 'move' call_tmp[917015](284223 call dsiNumIndices _mt[203] call_tmp[917008]))
      unknown call_tmp[917020] "expr temp" "maybe param" "maybe type" "temp"
      (917023 'move' call_tmp[917020](284213 call != call_tmp[917001] call_tmp[917015]))
      unknown call_tmp[917025] "expr temp" "maybe param" "maybe type" "temp"
      (917028 'move' call_tmp[917025](284226 call _cond_test call_tmp[917020]))
      if call_tmp[917025]
      {
        (284208 call halt "zippered associative array does not match the iterated domain")
      }
    }
    unknown call_tmp[917032] "expr temp" "maybe param" "maybe type" "temp"
    (917035 'move' call_tmp[917032](284242 call table _mt[203] followThisDom[284167]))
    unknown call_tmp[917039] "maybe param" "maybe type" "temp"
    (917042 'move' call_tmp[917039](284245 call table _mt[203] call_tmp[917032]))
    const otherTable[284240] "dead at end of block" "const" "insert auto destroy"
    (652505 'init var' otherTable[284240] call_tmp[917039])
    (284249 'end of statement' followThisDom[284167])
    {
      unknown _indexOfInterest[284336] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[284337] "expr temp" "temp"
      (284346 'move' _iterator[284337](284344 call _getIterator chunk[284165]))
      Defer
      {
        {
          (284361 call _freeIterator _iterator[284337])
        }
      }
      { scopeless type
        (284351 'move' _indexOfInterest[284336](284348 call iteratorIndex _iterator[284337]))
      }
      ForLoop[284338] order-independent
      {
        unknown slot[284250] "index var" "insert auto destroy"
        (566422 'end of statement')
        (284356 'move' slot[284250] _indexOfInterest[284336])
        (566423 'end of statement' slot[284250])
        {
          const aSlot[284255] "dead at end of block" "const" "ref var"
          (652510 'init ref decl' aSlot[284255])
          unknown call_tmp[917044] "expr temp" "maybe param" "maybe type" "temp"
          (917047 'move' call_tmp[917044](284257 call otherTable[284240] slot[284250]))
          (652508 'move' aSlot[284255](652507 'addr of' call_tmp[917044]))
          (284260 'end of statement' otherTable[284240] slot[284250])
          unknown call_tmp[917051] "expr temp" "maybe param" "maybe type" "temp"
          (917054 'move' call_tmp[917051](284329 call(284326 call (partial) isFull _mt[203] aSlot[284255])))
          unknown call_tmp[917056] "expr temp" "maybe param" "maybe type" "temp"
          (917059 'move' call_tmp[917056](284330 call _cond_test call_tmp[917051]))
          if call_tmp[917056]
          {
            unknown idx[284263] "dead at end of block" "insert auto destroy"
            (652512 'init var' idx[284263] slot[284250])
            (284266 'end of statement' slot[284250])
            unknown call_tmp[917061] "expr temp" "maybe param" "maybe type" "temp"
            (917064 'move' call_tmp[917061](284314 call ! sameDom[284197]))
            unknown call_tmp[917066] "expr temp" "maybe param" "maybe type" "temp"
            (917069 'move' call_tmp[917066](284317 call _cond_test call_tmp[917061]))
            if call_tmp[917066]
            {
              unknown call_tmp[917073] "expr temp" "maybe param" "maybe type" "temp"
              (917076 'move' call_tmp[917073](409400 call dom _mt[203] this[284146]))
              unknown call_tmp[917080] "expr temp" "maybe param" "maybe type" "temp"
              (917083 'move' call_tmp[917080](284274 call table _mt[203] call_tmp[917073]))
              unknown call_tmp[917089] "expr temp" "maybe param" "maybe type" "temp"
              (917092 'move' call_tmp[917089](284282 call key _mt[203] aSlot[284255]))
              unknown call_tmp[917094] "maybe param" "maybe type" "temp"
              (917097 'move' call_tmp[917094](284280 call(284277 call (partial) findFullSlot _mt[203] call_tmp[917080]) call_tmp[917089]))
              const tmp[284285] "dead at end of block" "const" "insert auto destroy" "temp"
              (652514 'init var' tmp[284285] call_tmp[917094])
              (284292 call _check_tuple_var_decl tmp[284285] 2)
              (566428 'end of statement')
              unknown call_tmp[917099] "maybe param" "maybe type" "temp"
              (917102 'move' call_tmp[917099](284286 call tmp[284285] 0))
              const match[284269] "dead at end of block" "const" "insert auto destroy"
              (652516 'init var' match[284269] call_tmp[917099])
              unknown call_tmp[917104] "maybe param" "maybe type" "temp"
              (917107 'move' call_tmp[917104](284289 call tmp[284285] 1))
              const loc[284271] "dead at end of block" "const" "insert auto destroy"
              (652518 'init var' loc[284271] call_tmp[917104])
              (284297 'end of statement')
              unknown call_tmp[917109] "expr temp" "maybe param" "maybe type" "temp"
              (917112 'move' call_tmp[917109](284302 call ! match[284269]))
              unknown call_tmp[917114] "expr temp" "maybe param" "maybe type" "temp"
              (917117 'move' call_tmp[917114](284305 call _cond_test call_tmp[917109]))
              if call_tmp[917114]
              {
                (284299 call halt "zippered associative array does not match the iterated domain")
              }
              (284310 call = idx[284263] loc[284271])
              (566430 'end of statement' idx[284263] loc[284271])
            }
            ref yret[628751] "YVV" "temp"
            unknown call_tmp[917121] "expr temp" "maybe param" "maybe type" "temp"
            (917124 'move' call_tmp[917121](284323 call(454684 call (partial) data _mt[203] this[284146]) idx[284263]))
            (628754 'move' yret[628751](628753 'addr of' call_tmp[917121]))
            (284321 yield yret[628751])
            (566433 'end of statement' idx[284263])
          }
        }
        label _continueLabel[284341]
        _indexOfInterest[284336]
        _iterator[284337]
      }
      label _breakLabel[284342]
    }
    (628749 return ret[628747])
  }
  where {
    (284156 call == tag[284149] follower[52140])
  }
  function DefaultAssociativeArr[285981](?).dsiSerialReadWrite[284371](arg _mt[284385]:_MT[201], arg this[284373]:DefaultAssociativeArr[285981](?), arg f[284375]:_any[141](?), in arg printBraces[284378] :
  1 =
  1, inout arg first[284382] :
  1 =
  1) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[917128] "expr temp" "maybe param" "maybe type" "temp"
    (917131 'move' call_tmp[917128](284621 call _writing _mt[203] f[284375]))
    unknown call_tmp[917133] "expr temp" "maybe param" "maybe type" "temp"
    (917136 'move' call_tmp[917133](284624 call _cond_test call_tmp[917128]))
    if call_tmp[917133]
    {
      unknown call_tmp[917140] "expr temp" "maybe param" "maybe type" "temp"
      (917143 'move' call_tmp[917140](284402 call serializer _mt[203] f[284375]))
      unknown call_tmp[917149] "expr temp" "maybe param" "maybe type" "temp"
      (917152 'move' call_tmp[917149](409408 call dom _mt[203] this[284373]))
      unknown call_tmp[917156] "expr temp" "maybe param" "maybe type" "temp"
      (917159 'move' call_tmp[917156](284413 call dsiNumIndices _mt[203] call_tmp[917149]))
      unknown call_tmp[917161] "maybe param" "maybe type" "temp"
      (917164 'move' call_tmp[917161](284410 call(284407 call (partial) startMap _mt[203] call_tmp[917140]) f[284375] call_tmp[917156]))
      unknown ser[284400] "dead at end of block" "insert auto destroy"
      (652520 'init var' ser[284400] call_tmp[917161])
      (284417 'end of statement')
      {
        unknown _indexOfInterest[284449] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[284450] "expr temp" "temp"
        unknown call_tmp[917168] "expr temp" "maybe param" "maybe type" "temp"
        (917171 'move' call_tmp[917168](284459 call dom _mt[203] this[284373]))
        unknown call_tmp[917173] "expr temp" "maybe param" "maybe type" "temp"
        (917176 'move' call_tmp[917173](284462 call _getIterator call_tmp[917168]))
        unknown call_tmp[917178] "expr temp" "maybe param" "maybe type" "temp"
        (917181 'move' call_tmp[917178](284465 call _getIterator this[284373]))
        (284467 'move' _iterator[284450](284431 call _build_tuple call_tmp[917173] call_tmp[917178]))
        Defer
        {
          {
            (284495 call _freeIterator _iterator[284450])
          }
        }
        { scopeless type
          (284472 'move' _indexOfInterest[284449](284469 call iteratorIndex _iterator[284450]))
        }
        ForLoop[284451]
        {
          (284477 call _check_tuple_var_decl _indexOfInterest[284449] 2)
          (566436 'end of statement')
          unknown key[284419] "index var" "insert auto destroy"
          (566437 'end of statement')
          (284484 'move' key[284419](284481 call _indexOfInterest[284449] 0))
          (566438 'end of statement' key[284419])
          unknown val[284421] "index var" "insert auto destroy"
          (566440 'end of statement')
          (284490 'move' val[284421](284487 call _indexOfInterest[284449] 1))
          (566441 'end of statement' val[284421])
          {
            (284439 call(284436 call (partial) writeKey _mt[203] ser[284400]) key[284419])
            (566443 'end of statement' ser[284400] key[284419])
            (284447 call(284444 call (partial) writeValue _mt[203] ser[284400]) val[284421])
            (566446 'end of statement' ser[284400] val[284421])
          }
          label _continueLabel[284454]
          _indexOfInterest[284449]
          _iterator[284450]
        }
        label _breakLabel[284455]
      }
      (284508 call(284505 call (partial) endMap _mt[203] ser[284400]))
      (566449 'end of statement' ser[284400])
    }
    {
      unknown call_tmp[917191] "expr temp" "maybe param" "maybe type" "temp"
      (917194 'move' call_tmp[917191](284513 call deserializer _mt[203] f[284375]))
      unknown call_tmp[917198] "maybe param" "maybe type" "temp"
      (917201 'move' call_tmp[917198](284519 call(284516 call (partial) startMap _mt[203] call_tmp[917191]) f[284375]))
      unknown des[284511] "dead at end of block" "insert auto destroy"
      (652522 'init var' des[284511] call_tmp[917198])
      (284522 'end of statement')
      {
        unknown _indexOfInterest[284572] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[284573] "expr temp" "temp"
        unknown call_tmp[917205] "expr temp" "maybe param" "maybe type" "temp"
        (917208 'move' call_tmp[917205](409425 call dom _mt[203] this[284373]))
        unknown call_tmp[917212] "expr temp" "maybe param" "maybe type" "temp"
        (917215 'move' call_tmp[917212](284588 call dsiNumIndices _mt[203] call_tmp[917205]))
        unknown call_tmp[917217] "expr temp" "maybe param" "maybe type" "temp"
        (917220 'move' call_tmp[917217](284586 call chpl__nudgeHighBound call_tmp[917212]))
        unknown call_tmp[917222] "expr temp" "maybe param" "maybe type" "temp"
        (917225 'move' call_tmp[917222](284591 call chpl_direct_range_iter 0 call_tmp[917217]))
        (284582 'move' _iterator[284573](284580 call _getIterator call_tmp[917222]))
        Defer
        {
          {
            (284608 call _freeIterator _iterator[284573])
          }
        }
        { scopeless type
          (284596 'move' _indexOfInterest[284572](284593 call iteratorIndex _iterator[284573]))
        }
        ForLoop[284574]
        {
          unknown chpl__elidedIdx[284598] "index var" "insert auto destroy"
          (566452 'end of statement')
          (284603 'move' chpl__elidedIdx[284598] _indexOfInterest[284572])
          (566453 'end of statement' chpl__elidedIdx[284598])
          {
            unknown call_tmp[917231] "expr temp" "maybe param" "maybe type" "temp"
            (917234 'move' call_tmp[917231](454697 call idxType _mt[203] this[284373]))
            unknown call_tmp[917236] "maybe param" "maybe type" "temp"
            (917239 'move' call_tmp[917236](284541 call(284538 call (partial) readKey _mt[203] des[284511]) call_tmp[917231]))
            const k[284534] "dead at end of block" "const" "insert auto destroy"
            (652524 'init var' k[284534] call_tmp[917236])
            (284544 'end of statement' des[284511])
            unknown call_tmp[917243] "expr temp" "maybe param" "maybe type" "temp"
            (917246 'move' call_tmp[917243](409420 call dom _mt[203] this[284373]))
            unknown call_tmp[917250] "expr temp" "maybe param" "maybe type" "temp"
            (917253 'move' call_tmp[917250](284566 call(284563 call (partial) dsiMember _mt[203] call_tmp[917243]) k[284534]))
            unknown call_tmp[917255] "expr temp" "maybe param" "maybe type" "temp"
            (917258 'move' call_tmp[917255](284560 call ! call_tmp[917250]))
            unknown call_tmp[917260] "expr temp" "maybe param" "maybe type" "temp"
            (917263 'move' call_tmp[917260](284568 call _cond_test call_tmp[917255]))
            if call_tmp[917260]
            {
            }
            {
              unknown call_tmp[917267] "expr temp" "maybe param" "maybe type" "temp"
              (917270 'move' call_tmp[917267](284550 call(454701 call (partial) dsiAccess _mt[203] this[284373]) k[284534]))
              unknown call_tmp[917276] "expr temp" "maybe param" "maybe type" "temp"
              (917279 'move' call_tmp[917276](454707 call eltType _mt[203] this[284373]))
              unknown call_tmp[917281] "expr temp" "maybe param" "maybe type" "temp"
              (917284 'move' call_tmp[917281](284558 call(284555 call (partial) readValue _mt[203] des[284511]) call_tmp[917276]))
              (284547 call = call_tmp[917267] call_tmp[917281])
              (566456 'end of statement' k[284534] des[284511])
            }
          }
          label _continueLabel[284577]
          _indexOfInterest[284572]
          _iterator[284573]
        }
        label _breakLabel[284578]
      }
      (284619 call(284616 call (partial) endMap _mt[203] des[284511]))
      (566459 'end of statement' des[284511])
    }
    (628757 return _void[46])
  }
  where {
    unknown tmp[502638] "maybe param" "temp"
    (502649 'move' tmp[502638](284390 call _usingSerializers f[284375]))
    unknown call_tmp[917288] "expr temp" "maybe param" "maybe type" "temp"
    (917291 'move' call_tmp[917288](502651 call _cond_invalid tmp[502638]))
    if call_tmp[917288]
    {
      (502654 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[703635] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703636] "maybe param" "temp"
    unknown call_tmp[917293] "expr temp" "maybe param" "maybe type" "temp"
    (917296 'move' call_tmp[917293](502639 call isTrue tmp[502638]))
    (703641 'move' tmp[703636](703639 call _cond_test call_tmp[917293]))
    if tmp[703636]
    {
      unknown tmp[703643] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[917298] "expr temp" "maybe param" "maybe type" "temp"
      (917301 'move' call_tmp[917298](284395 call _isDefaultDeser f[284375]))
      unknown call_tmp[917303] "expr temp" "maybe param" "maybe type" "temp"
      (917306 'move' call_tmp[917303](284392 call ! call_tmp[917298]))
      (703645 'move' tmp[703643](502642 call isTrue call_tmp[917303]))
      (703650 'move' tmp[703635](703647 '_paramFoldLogical' tmp[703636] tmp[703643]))
    }
    {
      (703655 'move' tmp[703635](703652 '_paramFoldLogical' tmp[703636] 0))
    }
    (1001650 call chpl_statementLevelSymbol tmp[703635])
  }
  function DefaultAssociativeArr[285981](?).dsiSerialReadWrite[284631](arg _mt[284645]:_MT[201], arg this[284633]:DefaultAssociativeArr[285981](?), arg f[284635]:_any[141](?), in arg printBraces[284638] :
  1 =
  1, inout arg first[284642] :
  1 =
  1) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[917310] "expr temp" "maybe param" "maybe type" "temp"
    (917313 'move' call_tmp[917310](284883 call _writing _mt[203] f[284635]))
    unknown call_tmp[917315] "expr temp" "maybe param" "maybe type" "temp"
    (917318 'move' call_tmp[917315](284886 call _cond_test call_tmp[917310]))
    if call_tmp[917315]
    {
      unknown call_tmp[917322] "expr temp" "maybe param" "maybe type" "temp"
      (917325 'move' call_tmp[917322](409432 call dom _mt[203] this[284633]))
      unknown call_tmp[917329] "expr temp" "maybe param" "maybe type" "temp"
      (917332 'move' call_tmp[917329](284657 call dsiNumIndices _mt[203] call_tmp[917322]))
      unknown call_tmp[917334] "maybe param" "maybe type" "temp"
      (917337 'move' call_tmp[917334](284654 call : call_tmp[917329] int(64)[10]))
      const size[284653] "dead at end of block" "const" "insert auto destroy"
      (652526 'init var' size[284653] call_tmp[917334])
      (284662 'end of statement')
      unknown call_tmp[917341] "expr temp" "maybe param" "maybe type" "temp"
      (917344 'move' call_tmp[917341](284666 call serializer _mt[203] f[284635]))
      unknown call_tmp[917348] "maybe param" "maybe type" "temp"
      (917351 'move' call_tmp[917348](284674 call(284671 call (partial) startArray _mt[203] call_tmp[917341]) f[284635] size[284653]))
      unknown ser[284664] "dead at end of block" "insert auto destroy"
      (652528 'init var' ser[284664] call_tmp[917348])
      (284678 'end of statement' size[284653])
      (284685 call(284682 call (partial) startDim _mt[203] ser[284664]) size[284653])
      (566462 'end of statement' ser[284664] size[284653])
      {
        unknown _indexOfInterest[284708] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[284709] "expr temp" "temp"
        unknown call_tmp[917357] "expr temp" "maybe param" "maybe type" "temp"
        (917360 'move' call_tmp[917357](284718 call dom _mt[203] this[284633]))
        unknown call_tmp[917362] "expr temp" "maybe param" "maybe type" "temp"
        (917365 'move' call_tmp[917362](284721 call _getIterator call_tmp[917357]))
        unknown call_tmp[917367] "expr temp" "maybe param" "maybe type" "temp"
        (917370 'move' call_tmp[917367](284724 call _getIterator this[284633]))
        (284726 'move' _iterator[284709](284700 call _build_tuple call_tmp[917362] call_tmp[917367]))
        Defer
        {
          {
            (284754 call _freeIterator _iterator[284709])
          }
        }
        { scopeless type
          (284731 'move' _indexOfInterest[284708](284728 call iteratorIndex _iterator[284709]))
        }
        ForLoop[284710]
        {
          (284736 call _check_tuple_var_decl _indexOfInterest[284708] 2)
          (566466 'end of statement')
          unknown key[284688] "index var" "insert auto destroy"
          (566467 'end of statement')
          (284743 'move' key[284688](284740 call _indexOfInterest[284708] 0))
          (566468 'end of statement' key[284688])
          unknown val[284690] "index var" "insert auto destroy"
          (566470 'end of statement')
          (284749 'move' val[284690](284746 call _indexOfInterest[284708] 1))
          (566471 'end of statement' val[284690])
          {
            (284706 call(284703 call (partial) writeElement _mt[203] ser[284664]) val[284690])
            (566473 'end of statement' ser[284664] val[284690])
          }
          label _continueLabel[284713]
          _indexOfInterest[284708]
          _iterator[284709]
        }
        label _breakLabel[284714]
      }
      (284767 call(284764 call (partial) endDim _mt[203] ser[284664]))
      (566476 'end of statement' ser[284664])
      (284774 call(284771 call (partial) endArray _mt[203] ser[284664]))
      (566478 'end of statement' ser[284664])
    }
    {
      unknown call_tmp[917380] "expr temp" "maybe param" "maybe type" "temp"
      (917383 'move' call_tmp[917380](284779 call deserializer _mt[203] f[284635]))
      unknown call_tmp[917387] "maybe param" "maybe type" "temp"
      (917390 'move' call_tmp[917387](284785 call(284782 call (partial) startArray _mt[203] call_tmp[917380]) f[284635]))
      unknown des[284777] "dead at end of block" "insert auto destroy"
      (652530 'init var' des[284777] call_tmp[917387])
      (284788 'end of statement')
      (284793 call(284790 call (partial) startDim _mt[203] des[284777]))
      (566480 'end of statement' des[284777])
      {
        unknown _indexOfInterest[284819] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[284820] "expr temp" "temp"
        unknown call_tmp[917396] "expr temp" "maybe param" "maybe type" "temp"
        (917399 'move' call_tmp[917396](284829 call dom _mt[203] this[284633]))
        unknown call_tmp[917401] "expr temp" "maybe param" "maybe type" "temp"
        (917404 'move' call_tmp[917401](284832 call _getIterator call_tmp[917396]))
        unknown call_tmp[917406] "expr temp" "maybe param" "maybe type" "temp"
        (917409 'move' call_tmp[917406](284835 call _getIterator this[284633]))
        (284837 'move' _iterator[284820](284807 call _build_tuple call_tmp[917401] call_tmp[917406]))
        Defer
        {
          {
            (284865 call _freeIterator _iterator[284820])
          }
        }
        { scopeless type
          (284842 'move' _indexOfInterest[284819](284839 call iteratorIndex _iterator[284820]))
        }
        ForLoop[284821]
        {
          (284847 call _check_tuple_var_decl _indexOfInterest[284819] 2)
          (566483 'end of statement')
          unknown key[284795] "index var" "insert auto destroy"
          (566484 'end of statement')
          (284854 'move' key[284795](284851 call _indexOfInterest[284819] 0))
          (566485 'end of statement' key[284795])
          unknown val[284797] "index var" "insert auto destroy"
          (566487 'end of statement')
          (284860 'move' val[284797](284857 call _indexOfInterest[284819] 1))
          (566488 'end of statement' val[284797])
          {
            unknown call_tmp[917413] "expr temp" "maybe param" "maybe type" "temp" "type variable"
            (917416 'move' call_tmp[917413](284818 'typeof' val[284797]))
            unknown call_tmp[917418] "expr temp" "maybe param" "maybe type" "temp"
            (917421 'move' call_tmp[917418](284816 call(284813 call (partial) readElement _mt[203] des[284777]) call_tmp[917413]))
            (284809 call = val[284797] call_tmp[917418])
            (566490 'end of statement' val[284797] des[284777])
          }
          label _continueLabel[284824]
          _indexOfInterest[284819]
          _iterator[284820]
        }
        label _breakLabel[284825]
      }
      (284876 call(284873 call (partial) endDim _mt[203] des[284777]))
      (566493 'end of statement' des[284777])
      (284881 call(284878 call (partial) endArray _mt[203] des[284777]))
      (566495 'end of statement' des[284777])
    }
    (628759 return _void[46])
  }
  where {
    (284648 call _isDefaultDeser f[284635])
  }
  function DefaultAssociativeArr[285981](?).dsiSerialReadWrite[284893](arg _mt[284907]:_MT[201], arg this[284895]:DefaultAssociativeArr[285981](?), arg f[284897]:_any[141](?), in arg printBraces[284900] :
  1 =
  1, inout arg first[284904] :
  1 =
  1) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    unknown call_tmp[917429] "maybe param" "maybe type" "temp"
    (917432 'move' call_tmp[917429](284916 call(284913 call (partial) _binary _mt[203] f[284897])))
    unknown binary[284911] "dead at end of block" "insert auto destroy"
    (652532 'init var' binary[284911] call_tmp[917429])
    (284918 'end of statement')
    unknown call_tmp[917436] "maybe param" "maybe type" "temp"
    (917439 'move' call_tmp[917436](284925 call(284922 call (partial) styleElement _mt[203] f[284897]) QIO_STYLE_ELEMENT_ARRAY[77170]))
    unknown arrayStyle[284920] "dead at end of block" "insert auto destroy"
    (652534 'init var' arrayStyle[284920] call_tmp[917436])
    (284928 'end of statement')
    unknown tmp[502659] "maybe param" "temp"
    (502670 'move' tmp[502659](284933 call == arrayStyle[284920] QIO_ARRAY_FORMAT_SPACE[77200]))
    unknown call_tmp[917441] "expr temp" "maybe param" "maybe type" "temp"
    (917444 'move' call_tmp[917441](502672 call _cond_invalid tmp[502659]))
    if call_tmp[917441]
    {
      (502675 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown isspace[284930] "dead at end of block" "insert auto destroy"
    unknown tmp[703662] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703663] "maybe param" "temp"
    unknown call_tmp[917446] "expr temp" "maybe param" "maybe type" "temp"
    (917449 'move' call_tmp[917446](502660 call isTrue tmp[502659]))
    (703668 'move' tmp[703663](703666 call _cond_test call_tmp[917446]))
    if tmp[703663]
    {
      unknown tmp[703670] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[917451] "expr temp" "maybe param" "maybe type" "temp"
      (917454 'move' call_tmp[917451](284937 call ! binary[284911]))
      (703672 'move' tmp[703670](502663 call isTrue call_tmp[917451]))
      (703677 'move' tmp[703662](703674 '_paramFoldLogical' tmp[703663] tmp[703670]))
    }
    {
      (703682 'move' tmp[703662](703679 '_paramFoldLogical' tmp[703663] 0))
    }
    (652536 'init var' isspace[284930] tmp[703662])
    (284941 'end of statement')
    unknown tmp[502680] "maybe param" "temp"
    (502691 'move' tmp[502680](284946 call == arrayStyle[284920] QIO_ARRAY_FORMAT_JSON[77210]))
    unknown call_tmp[917456] "expr temp" "maybe param" "maybe type" "temp"
    (917459 'move' call_tmp[917456](502693 call _cond_invalid tmp[502680]))
    if call_tmp[917456]
    {
      (502696 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown isjson[284943] "dead at end of block" "insert auto destroy"
    unknown tmp[703689] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703690] "maybe param" "temp"
    unknown call_tmp[917461] "expr temp" "maybe param" "maybe type" "temp"
    (917464 'move' call_tmp[917461](502681 call isTrue tmp[502680]))
    (703695 'move' tmp[703690](703693 call _cond_test call_tmp[917461]))
    if tmp[703690]
    {
      unknown tmp[703697] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[917466] "expr temp" "maybe param" "maybe type" "temp"
      (917469 'move' call_tmp[917466](284950 call ! binary[284911]))
      (703699 'move' tmp[703697](502684 call isTrue call_tmp[917466]))
      (703704 'move' tmp[703689](703701 '_paramFoldLogical' tmp[703690] tmp[703697]))
    }
    {
      (703709 'move' tmp[703689](703706 '_paramFoldLogical' tmp[703690] 0))
    }
    (652538 'init var' isjson[284943] tmp[703689])
    (284954 'end of statement')
    unknown tmp[502701] "maybe param" "temp"
    (502712 'move' tmp[502701](284959 call == arrayStyle[284920] QIO_ARRAY_FORMAT_CHPL[77205]))
    unknown call_tmp[917471] "expr temp" "maybe param" "maybe type" "temp"
    (917474 'move' call_tmp[917471](502714 call _cond_invalid tmp[502701]))
    if call_tmp[917471]
    {
      (502717 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown ischpl[284956] "dead at end of block" "insert auto destroy"
    unknown tmp[703716] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703717] "maybe param" "temp"
    unknown call_tmp[917476] "expr temp" "maybe param" "maybe type" "temp"
    (917479 'move' call_tmp[917476](502702 call isTrue tmp[502701]))
    (703722 'move' tmp[703717](703720 call _cond_test call_tmp[917476]))
    if tmp[703717]
    {
      unknown tmp[703724] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[917481] "expr temp" "maybe param" "maybe type" "temp"
      (917484 'move' call_tmp[917481](284963 call ! binary[284911]))
      (703726 'move' tmp[703724](502705 call isTrue call_tmp[917481]))
      (703731 'move' tmp[703716](703728 '_paramFoldLogical' tmp[703717] tmp[703724]))
    }
    {
      (703736 'move' tmp[703716](703733 '_paramFoldLogical' tmp[703717] 0))
    }
    (652540 'init var' ischpl[284956] tmp[703716])
    (284967 'end of statement' binary[284911])
    unknown tmp[502722] "maybe param" "temp"
    unknown call_tmp[917488] "expr temp" "maybe param" "maybe type" "temp"
    (917491 'move' call_tmp[917488](284983 call _writing _mt[203] f[284897]))
    (502733 'move' tmp[502722](284980 call ! call_tmp[917488]))
    unknown call_tmp[917493] "expr temp" "maybe param" "maybe type" "temp"
    (917496 'move' call_tmp[917493](502735 call _cond_invalid tmp[502722]))
    if call_tmp[917493]
    {
      (502738 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[703743] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703744] "maybe param" "temp"
    unknown call_tmp[917498] "expr temp" "maybe param" "maybe type" "temp"
    (917501 'move' call_tmp[917498](502723 call isTrue tmp[502722]))
    (703749 'move' tmp[703744](703747 call _cond_test call_tmp[917498]))
    if tmp[703744]
    {
      unknown tmp[703751] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (703753 'move' tmp[703751](502726 call isTrue ischpl[284956]))
      (703758 'move' tmp[703743](703755 '_paramFoldLogical' tmp[703744] tmp[703751]))
    }
    {
      (703763 'move' tmp[703743](703760 '_paramFoldLogical' tmp[703744] 0))
    }
    unknown call_tmp[917503] "expr temp" "maybe param" "maybe type" "temp"
    (917506 'move' call_tmp[917503](284987 call _cond_test tmp[703743]))
    if call_tmp[917503]
    {
      (284975 call(284972 call (partial) readChapelStyleAssocArray _mt[203] this[284895]) f[284897])
      (566502 'end of statement')
      gotoReturn _end_dsiSerialReadWrite[628763] _end_dsiSerialReadWrite[628763]
    }
    {
      unknown tmp[284997] "temp"
      (285000 'move' tmp[284997](284999 'addr of' printBraces[284900]))
      unknown tmp[502743] "maybe param" "temp"
      (502754 'move' tmp[502743] tmp[284997])
      unknown call_tmp[917510] "expr temp" "maybe param" "maybe type" "temp"
      (917513 'move' call_tmp[917510](502756 call _cond_invalid tmp[502743]))
      if call_tmp[917510]
      {
        (502759 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[703797] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[703798] "maybe param" "temp"
      unknown call_tmp[917515] "expr temp" "maybe param" "maybe type" "temp"
      (917518 'move' call_tmp[917515](502744 call isTrue tmp[502743]))
      (703803 'move' tmp[703798](703801 call _cond_test call_tmp[917515]))
      if tmp[703798]
      {
        unknown tmp[502764] "maybe param" "temp"
        (502775 'move' tmp[502764] isjson[284943])
        unknown call_tmp[917520] "expr temp" "maybe param" "maybe type" "temp"
        (917523 'move' call_tmp[917520](502777 call _cond_invalid tmp[502764]))
        if call_tmp[917520]
        {
          (502780 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[703770] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[703771] "maybe param" "temp"
        unknown call_tmp[917525] "expr temp" "maybe param" "maybe type" "temp"
        (917528 'move' call_tmp[917525](502765 call isTrue tmp[502764]))
        (703776 'move' tmp[703771](703774 call _cond_test call_tmp[917525]))
        if tmp[703771]
        {
          (703781 'move' tmp[703770](703778 '_paramFoldLogical' tmp[703771] 1))
        }
        {
          unknown tmp[703783] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (703785 'move' tmp[703783](502769 call isTrue ischpl[284956]))
          (703790 'move' tmp[703770](703787 '_paramFoldLogical' tmp[703771] tmp[703783]))
        }
        unknown tmp[703805] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (703807 'move' tmp[703805](502747 call isTrue tmp[703770]))
        (703812 'move' tmp[703797](703809 '_paramFoldLogical' tmp[703798] tmp[703805]))
      }
      {
        (703817 'move' tmp[703797](703814 '_paramFoldLogical' tmp[703798] 0))
      }
      (285005 call = tmp[284997] tmp[703797])
      (566505 'end of statement' isjson[284943] ischpl[284956])
    }
    function rwLiteral[285008](arg lit[285011]:string[244]) : _unknown[42] throws "inline" "no return value for void"
    {
      unknown call_tmp[917532] "expr temp" "maybe param" "maybe type" "temp"
      (917535 'move' call_tmp[917532](285030 call _writing _mt[203] f[284897]))
      unknown call_tmp[917537] "expr temp" "maybe param" "maybe type" "temp"
      (917540 'move' call_tmp[917537](285033 call _cond_test call_tmp[917532]))
      if call_tmp[917537]
      {
        (285019 call(285016 call (partial) writeLiteral _mt[203] f[284897]) lit[285011])
      }
      {
        (285026 call(285023 call (partial) readLiteral _mt[203] f[284897]) lit[285011])
      }
      (628761 return _void[46])
    }
    unknown call_tmp[917546] "expr temp" "maybe param" "maybe type" "temp"
    (917549 'move' call_tmp[917546](285046 call _cond_test printBraces[284900]))
    if call_tmp[917546]
    {
      (285042 call rwLiteral "[")
    }
    {
      unknown _indexOfInterest[285155] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[285156] "expr temp" "temp"
      unknown call_tmp[917553] "expr temp" "maybe param" "maybe type" "temp"
      (917556 'move' call_tmp[917553](285165 call dom _mt[203] this[284895]))
      unknown call_tmp[917558] "expr temp" "maybe param" "maybe type" "temp"
      (917561 'move' call_tmp[917558](285168 call _getIterator call_tmp[917553]))
      unknown call_tmp[917563] "expr temp" "maybe param" "maybe type" "temp"
      (917566 'move' call_tmp[917563](285171 call _getIterator this[284895]))
      (285173 'move' _iterator[285156](285064 call _build_tuple call_tmp[917558] call_tmp[917563]))
      Defer
      {
        {
          (285201 call _freeIterator _iterator[285156])
        }
      }
      { scopeless type
        (285178 'move' _indexOfInterest[285155](285175 call iteratorIndex _iterator[285156]))
      }
      ForLoop[285157]
      {
        (285183 call _check_tuple_var_decl _indexOfInterest[285155] 2)
        (566512 'end of statement')
        unknown key[285052] "index var" "insert auto destroy"
        (566513 'end of statement')
        (285190 'move' key[285052](285187 call _indexOfInterest[285155] 0))
        (566514 'end of statement' key[285052])
        unknown val[285054] "index var" "insert auto destroy"
        (566516 'end of statement')
        (285196 'move' val[285054](285193 call _indexOfInterest[285155] 1))
        (566517 'end of statement' val[285054])
        {
          unknown call_tmp[917568] "expr temp" "maybe param" "maybe type" "temp"
          (917571 'move' call_tmp[917568](285096 call _cond_test first[284904]))
          if call_tmp[917568]
          {
            (285066 call = first[284904] 0)
          }
          {
            unknown call_tmp[917573] "expr temp" "maybe param" "maybe type" "temp"
            (917576 'move' call_tmp[917573](285089 call _cond_test isspace[284930]))
            if call_tmp[917573]
            {
              (285072 call rwLiteral " ")
            }
            {
              unknown tmp[502785] "maybe param" "temp"
              (502796 'move' tmp[502785] isjson[284943])
              unknown call_tmp[917578] "expr temp" "maybe param" "maybe type" "temp"
              (917581 'move' call_tmp[917578](502798 call _cond_invalid tmp[502785]))
              if call_tmp[917578]
              {
                (502801 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[703824] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[703825] "maybe param" "temp"
              unknown call_tmp[917583] "expr temp" "maybe param" "maybe type" "temp"
              (917586 'move' call_tmp[917583](502786 call isTrue tmp[502785]))
              (703830 'move' tmp[703825](703828 call _cond_test call_tmp[917583]))
              if tmp[703825]
              {
                (703835 'move' tmp[703824](703832 '_paramFoldLogical' tmp[703825] 1))
              }
              {
                unknown tmp[703837] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                (703839 'move' tmp[703837](502790 call isTrue ischpl[284956]))
                (703844 'move' tmp[703824](703841 '_paramFoldLogical' tmp[703825] tmp[703837]))
              }
              unknown call_tmp[917588] "expr temp" "maybe param" "maybe type" "temp"
              (917591 'move' call_tmp[917588](285083 call _cond_test tmp[703824]))
              if call_tmp[917588]
              {
                (285076 call rwLiteral ", ")
              }
            }
          }
          unknown tmp[502806] "maybe param" "temp"
          (502817 'move' tmp[502806](285120 call _writing _mt[203] f[284897]))
          unknown call_tmp[917595] "expr temp" "maybe param" "maybe type" "temp"
          (917598 'move' call_tmp[917595](502819 call _cond_invalid tmp[502806]))
          if call_tmp[917595]
          {
            (502822 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[703851] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[703852] "maybe param" "temp"
          unknown call_tmp[917600] "expr temp" "maybe param" "maybe type" "temp"
          (917603 'move' call_tmp[917600](502807 call isTrue tmp[502806]))
          (703857 'move' tmp[703852](703855 call _cond_test call_tmp[917600]))
          if tmp[703852]
          {
            unknown tmp[703859] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (703861 'move' tmp[703859](502810 call isTrue ischpl[284956]))
            (703866 'move' tmp[703851](703863 '_paramFoldLogical' tmp[703852] tmp[703859]))
          }
          {
            (703871 'move' tmp[703851](703868 '_paramFoldLogical' tmp[703852] 0))
          }
          unknown call_tmp[917605] "expr temp" "maybe param" "maybe type" "temp"
          (917608 'move' call_tmp[917605](285124 call _cond_test tmp[703851]))
          if call_tmp[917605]
          {
            (285107 call(285104 call (partial) write _mt[203] f[284897]) key[285052])
            (566524 'end of statement' key[285052])
            (285113 call(285110 call (partial) writeLiteral _mt[203] f[284897]) " => ")
          }
          unknown call_tmp[917616] "expr temp" "maybe param" "maybe type" "temp"
          (917619 'move' call_tmp[917616](285146 call _writing _mt[203] f[284897]))
          unknown call_tmp[917621] "expr temp" "maybe param" "maybe type" "temp"
          (917624 'move' call_tmp[917621](285149 call _cond_test call_tmp[917616]))
          if call_tmp[917621]
          {
            (285132 call(285129 call (partial) write _mt[203] f[284897]) val[285054])
            (566527 'end of statement' val[285054])
          }
          {
            unknown call_tmp[917632] "expr temp" "maybe param" "maybe type" "temp"
            (917635 'move' call_tmp[917632](454750 call eltType _mt[203] this[284895]))
            unknown call_tmp[917637] "expr temp" "maybe param" "maybe type" "temp"
            (917640 'move' call_tmp[917637](285142 call(285139 call (partial) read _mt[203] f[284897]) call_tmp[917632]))
            (285135 call = val[285054] call_tmp[917637])
            (566529 'end of statement' val[285054])
          }
        }
        label _continueLabel[285160]
        _indexOfInterest[285155]
        _iterator[285156]
      }
      label _breakLabel[285161]
    }
    unknown call_tmp[917642] "expr temp" "maybe param" "maybe type" "temp"
    (917645 'move' call_tmp[917642](285213 call _cond_test printBraces[284900]))
    if call_tmp[917642]
    {
      (285209 call rwLiteral "]")
    }
    label _end_dsiSerialReadWrite[628763]
    (628765 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).readChapelStyleAssocArray[285220](arg _mt[285226]:_MT[201], arg this[285222]:DefaultAssociativeArr[285981](?), arg f[285224]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    const openBracket[285230] "dead at end of block" "const" "insert auto destroy"
    (652542 'init var' openBracket[285230] "[")
    (285233 'end of statement')
    const closedBracket[285235] "dead at end of block" "const" "insert auto destroy"
    (652544 'init var' closedBracket[285235] "]")
    (285238 'end of statement')
    unknown first[285240] "dead at end of block" "insert auto destroy"
    (652546 'init var' first[285240] 1)
    (285243 'end of statement')
    unknown readEnd[285245] "dead at end of block" "insert auto destroy"
    (652548 'init var' readEnd[285245] 1)
    (285248 'end of statement')
    (285253 call(285250 call (partial) readLiteral _mt[203] f[285224]) openBracket[285230])
    (566532 'end of statement' openBracket[285230])
    {
      unknown tmp[285338] "temp"
      (285356 'move' tmp[285338](285354 call _cond_test 1))
      WhileDo[285343]
      {
        {
          unknown call_tmp[917649] "expr temp" "maybe param" "maybe type" "temp"
          (917652 'move' call_tmp[917649](285304 call _cond_test first[285240]))
          if call_tmp[917649]
          {
            (285258 call = first[285240] 0)
            (566534 'end of statement' first[285240])
            Try
            {
              {
                (285267 call(285264 call (partial) readLiteral _mt[203] f[285224]) closedBracket[285235])
                (566536 'end of statement' closedBracket[285235])
                (285269 call = readEnd[285245] 0)
                (566538 'end of statement' readEnd[285245])
                break _breakLabel[285342] _breakLabel[285342]
              }
            }
            Catch err : BadFormatError
            {
              unknown call_tmp[917656] "expr temp" "maybe param" "maybe type" "temp"
              (917659 'move' call_tmp[917656](395592 'current error'))
              unknown call_tmp[917661] "maybe param" "maybe type" "temp"
              (917664 'move' call_tmp[917661](395593 'dynamic_cast' unmanaged BadFormatError?[468259] call_tmp[917656]))
              unknown tmp[395589] "dead at end of block" "insert auto destroy" "temp"
              (652550 'init var' tmp[395589] call_tmp[917661])
              unknown call_tmp[917666] "expr temp" "maybe param" "maybe type" "temp"
              (917669 'move' call_tmp[917666](395596 '!=' tmp[395589] nil[32]))
              if call_tmp[917666]
              {
                unknown call_tmp[917671] "expr temp" "maybe param" "maybe type" "temp"
                (917674 'move' call_tmp[917671](395602 'to non nilable class' tmp[395589]))
                unknown call_tmp[917676] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (917679 'move' call_tmp[917676](1000472 'new' _owned[238](?) call_tmp[917671]))
                unknown err[285280] "dead at end of block" "insert auto destroy"
                (652552 'init var' err[285280] call_tmp[917676])
                (566540 'end of statement')
                {
                }
              }
              {
              }
            }
          }
          {
            Try
            {
              {
                (285290 call(285287 call (partial) readLiteral _mt[203] f[285224]) ",")
              }
            }
            Catch err : BadFormatError
            {
              unknown call_tmp[917683] "expr temp" "maybe param" "maybe type" "temp"
              (917686 'move' call_tmp[917683](395611 'current error'))
              unknown call_tmp[917688] "maybe param" "maybe type" "temp"
              (917691 'move' call_tmp[917688](395612 'dynamic_cast' unmanaged BadFormatError?[468259] call_tmp[917683]))
              unknown tmp[395608] "dead at end of block" "insert auto destroy" "temp"
              (652554 'init var' tmp[395608] call_tmp[917688])
              unknown call_tmp[917693] "expr temp" "maybe param" "maybe type" "temp"
              (917696 'move' call_tmp[917693](395615 '!=' tmp[395608] nil[32]))
              if call_tmp[917693]
              {
                unknown call_tmp[917698] "expr temp" "maybe param" "maybe type" "temp"
                (917701 'move' call_tmp[917698](395621 'to non nilable class' tmp[395608]))
                unknown call_tmp[917703] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
                (917706 'move' call_tmp[917703](1000473 'new' _owned[238](?) call_tmp[917698]))
                unknown err[285299] "dead at end of block" "insert auto destroy"
                (652556 'init var' err[285299] call_tmp[917703])
                (566542 'end of statement')
                {
                  break _breakLabel[285342] _breakLabel[285342]
                }
              }
              {
              }
            }
          }
          unknown call_tmp[917712] "expr temp" "maybe param" "maybe type" "temp"
          (917715 'move' call_tmp[917712](454769 call idxType _mt[203] this[285222]))
          unknown call_tmp[917717] "maybe param" "maybe type" "temp"
          (917720 'move' call_tmp[917717](285315 call(285312 call (partial) read _mt[203] f[285224]) call_tmp[917712]))
          unknown call_tmp[917724] "maybe param" "maybe type" "temp"
          (917727 'move' call_tmp[917724](454764 call idxType _mt[203] this[285222]))
          unknown key[285309] "dead at end of block" "insert auto destroy"
          (652558 'init var' key[285309] call_tmp[917717] call_tmp[917724])
          (285318 'end of statement')
          (285323 call(285320 call (partial) readLiteral _mt[203] f[285224]) "=>")
          (566543 'end of statement')
          unknown call_tmp[917733] "expr temp" "maybe param" "maybe type" "temp"
          (917736 'move' call_tmp[917733](285330 call(454773 call (partial) dsiAccess _mt[203] this[285222]) key[285309]))
          unknown call_tmp[917742] "expr temp" "maybe param" "maybe type" "temp"
          (917745 'move' call_tmp[917742](454779 call eltType _mt[203] this[285222]))
          unknown call_tmp[917747] "expr temp" "maybe param" "maybe type" "temp"
          (917750 'move' call_tmp[917747](285336 call(285333 call (partial) read _mt[203] f[285224]) call_tmp[917742]))
          (285327 call = call_tmp[917733] call_tmp[917747])
          (566544 'end of statement' key[285309])
        }
        label _continueLabel[285341]
        (285349 'move' tmp[285338](285347 call _cond_test 1))
        tmp[285338]
      }
      label _breakLabel[285342]
    }
    unknown call_tmp[917752] "expr temp" "maybe param" "maybe type" "temp"
    (917755 'move' call_tmp[917752](285367 call _cond_test readEnd[285245]))
    if call_tmp[917752]
    {
      (285363 call(285360 call (partial) readLiteral _mt[203] f[285224]) closedBracket[285235])
      (566546 'end of statement' closedBracket[285235])
    }
    (628769 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).dsiSerialWrite[285374](arg _mt[285380]:_MT[201], arg this[285376]:DefaultAssociativeArr[285981](?), arg f[285378]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (285389 call(285386 call (partial) dsiSerialReadWrite _mt[203] this[285376]) f[285378])
    (628771 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).dsiSerialRead[285393](arg _mt[285399]:_MT[201], arg this[285395]:DefaultAssociativeArr[285981](?), arg f[285397]:_any[141](?)) : _unknown[42] throws "method" "primary method" "no return value for void"
  {
    (285406 call(285403 call (partial) dsiSerialReadWrite _mt[203] this[285395]) f[285397])
    (628773 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).dsiSorted[285410](arg _mt[285416]:_MT[201], arg this[285412]:DefaultAssociativeArr[285981](?), arg comparator[285414]:_any[141](?)) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[628777] "RVV" "temp"
    unknown tableCopy[285423] "dead at end of block" "insert auto destroy"
    function chpl__loopexpr_iter11[717553](arg iterator[717555]:_any[141](?), arg this[717592]:DefaultAssociativeArr[285981](?)) : _unknown[42] "do not unref for yields" "compiler generated" "iterator fn"
    {
      unknown ret[717603] "RVV" "temp"
      {
        unknown _indexOfInterest[717560] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[717561] "expr temp" "temp"
        (717570 'move' _iterator[717561](717568 call _getIterator iterator[717555]))
        Defer
        {
          {
            (717585 call _freeIterator _iterator[717561])
          }
        }
        { scopeless type
          (717575 'move' _indexOfInterest[717560](717572 call iteratorIndex _iterator[717561]))
        }
        ForLoop[717562] order-independent for-expr
        {
          unknown slot[285438] "index var" "insert auto destroy"
          (717596 'end of statement')
          (717580 'move' slot[285438] _indexOfInterest[717560])
          (717597 'end of statement' slot[285438])
          {
            {
              unknown yret[717607] "YVV" "temp"
              unknown call_tmp[717615] "expr temp" "maybe param" "maybe type" "temp"
              (717618 'move' call_tmp[717615](285448 call(454793 call (partial) data _mt[203] this[717592]) slot[285438]))
              (717610 'move' yret[717607](717609 'deref' call_tmp[717615]))
              (717557 yield yret[717607])
              (717599 'end of statement' slot[285438])
            }
          }
          label _continueLabel[717565]
          _indexOfInterest[717560]
          _iterator[717561]
        }
        label _breakLabel[717566]
      }
      (717605 return ret[717603])
    }
    function chpl__forexpr11[717533](arg iterExpr[717536]:_any[141](?), arg this[717540]:DefaultAssociativeArr[285981](?)) : _unknown[42] "compiler generated" "compiler nested function" "fn returns iterator"
    {
      unknown ret[717623] "RVV" "temp"
      unknown _iterator[717543] "expr temp" "maybe ref" "temp"
      (717545 'move' _iterator[717543] iterExpr[717536])
      unknown call_tmp[717630] "expr temp" "maybe param" "maybe type" "temp"
      (717633 'move' call_tmp[717630](717548 call chpl__loopexpr_iter11 _iterator[717543] this[717540]))
      (717628 'move' ret[717623](717627 'deref' call_tmp[717630]))
      (717625 return ret[717623])
    }
    unknown call_tmp[717637] "expr temp" "maybe param" "maybe type" "temp"
    (717640 'move' call_tmp[717637](409478 call dom _mt[203] this[285412]))
    unknown call_tmp[717644] "expr temp" "maybe param" "maybe type" "temp"
    (717647 'move' call_tmp[717644](285446 call(285443 call (partial) _fullSlots _mt[203] call_tmp[717637])))
    unknown call_tmp[717649] "maybe param" "maybe type" "temp"
    (717652 'move' call_tmp[717649](717538 call chpl__forexpr11 call_tmp[717644] this[285412]))
    (717656 'iterator record set shape' call_tmp[717649] call_tmp[717644] 0)
    unknown call_tmp[917763] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (917766 'move' call_tmp[917763](285427 call chpl_build_low_bounded_range 0))
    unknown call_tmp[917770] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (917773 'move' call_tmp[917770](409473 call dom _mt[203] this[285412]))
    unknown call_tmp[917777] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (917780 'move' call_tmp[917777](285430 call dsiNumIndices _mt[203] call_tmp[917770]))
    unknown call_tmp[917782] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (917785 'move' call_tmp[917782](285424 call # call_tmp[917763] call_tmp[917777]))
    unknown call_tmp[917787] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (917790 'move' call_tmp[917787](285433 call chpl__ensureDomainExpr call_tmp[917782]))
    unknown call_tmp[917794] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (917797 'move' call_tmp[917794](454788 call eltType _mt[203] this[285412]))
    unknown call_tmp[917799] "maybe param" "maybe type" "temp"
    (917802 'move' call_tmp[917799](285436 call chpl__buildArrayRuntimeType call_tmp[917787] call_tmp[917794]))
    (652560 'init var' tableCopy[285423] call_tmp[717649] call_tmp[917799])
    (285453 'end of statement')
    (285455 call sort tableCopy[285423](comparator = comparator[285414]))
    (566550 'end of statement' tableCopy[285423])
    {
      unknown _indexOfInterest[285467] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[285468] "expr temp" "temp"
      (285477 'move' _iterator[285468](285475 call _getIterator tableCopy[285423]))
      Defer
      {
        {
          (285492 call _freeIterator _iterator[285468])
        }
      }
      { scopeless type
        (285482 'move' _indexOfInterest[285467](285479 call iteratorIndex _iterator[285468]))
      }
      ForLoop[285469] order-independent
      {
        unknown elem[285459] "index var" "insert auto destroy"
        (566553 'end of statement')
        (285487 'move' elem[285459] _indexOfInterest[285467])
        (566554 'end of statement' elem[285459])
        unknown yret[628781] "YVV" "temp"
        (628784 'move' yret[628781](628783 'deref' elem[285459]))
        (285462 yield yret[628781])
        (566556 'end of statement' elem[285459])
        label _continueLabel[285472]
        _indexOfInterest[285467]
        _iterator[285468]
      }
      label _breakLabel[285473]
    }
    (628779 return ret[628777])
    (396978 'used modules list'(285420 'use' Sort[247204]))
  }
  function DefaultAssociativeArr[285981](?)._doDefaultInitSlot[285501](arg _mt[285513]:_MT[201], arg this[285503]:DefaultAssociativeArr[285981](?), arg slot[285506]:int(64)[10], arg inAdd[285510]:bool[19]) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[917806] "expr temp" "maybe param" "maybe type" "temp"
    (917809 'move' call_tmp[917806](454818 call eltType _mt[203] this[285503]))
    unknown call_tmp[917811] "expr temp" "maybe param" "maybe type" "temp"
    (917814 'move' call_tmp[917811](285563 call isDefaultInitializable call_tmp[917806]))
    unknown call_tmp[917816] "expr temp" "maybe param" "maybe type" "temp"
    (917819 'move' call_tmp[917816](285560 call ! call_tmp[917811]))
    unknown call_tmp[917821] "expr temp" "maybe param" "maybe type" "temp"
    (917824 'move' call_tmp[917821](285565 call _cond_test call_tmp[917816]))
    if call_tmp[917821]
    {
      unknown call_tmp[917826] "expr temp" "maybe param" "maybe type" "temp"
      (917829 'move' call_tmp[917826](285540 call _cond_test inAdd[285510]))
      if call_tmp[917826]
      {
        unknown call_tmp[917831] "expr temp" "maybe param" "maybe type" "temp"
        (917834 'move' call_tmp[917831](285520 call + "Can't resize domains whose arrays' elements don't " "have default values"))
        (285519 call halt call_tmp[917831])
      }
      {
        unknown call_tmp[917836] "expr temp" "maybe param" "maybe type" "temp"
        (917839 'move' call_tmp[917836](285531 call + "Can't default initialize associative arrays whose " "elements have no default value"))
        (285530 call halt call_tmp[917836])
      }
    }
    {
      unknown initval[285546] "dead at end of block" "no auto destroy"
      unknown call_tmp[917843] "expr temp" "maybe param" "maybe type" "temp"
      (917846 'move' call_tmp[917843](454805 call eltType _mt[203] this[285503]))
      (652562 'default init var' initval[285546] call_tmp[917843])
      (285549 'end of statement')
      unknown dst[285551] "dead at end of block" "ref var"
      (652567 'init ref decl' dst[285551])
      unknown call_tmp[917850] "expr temp" "maybe param" "maybe type" "temp"
      (917853 'move' call_tmp[917850](285553 call(454810 call (partial) data _mt[203] this[285503]) slot[285506]))
      (652565 'move' dst[285551](652564 'addr of' call_tmp[917850]))
      (285556 'end of statement')
      (285557 '=' dst[285551] initval[285546])
      (566560 'end of statement' dst[285551] initval[285546])
    }
    (628787 return _void[46])
  }
  function DefaultAssociativeArr[285981](?)._defaultInitSlot[285571](arg _mt[285579]:_MT[201], arg this[285573]:DefaultAssociativeArr[285981](?), arg slot[285576]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    (285583 call(454822 call (partial) _doDefaultInitSlot _mt[203] this[285573]) slot[285576](inAdd = 1))
    (628789 return _void[46])
  }
  function DefaultAssociativeArr[285981](?)._deinitSlot[285589](arg _mt[285597]:_MT[201], arg this[285591]:DefaultAssociativeArr[285981](?), arg slot[285594]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[917861] "expr temp" "maybe param" "maybe type" "temp"
    (917864 'move' call_tmp[917861](285603 call(454834 call (partial) data _mt[203] this[285591]) slot[285594]))
    (285601 call(454829 call (partial) _deinitElement _mt[203] this[285591]) call_tmp[917861])
    (628791 return _void[46])
  }
  function DefaultAssociativeArr[285981](?)._elementNeedsDeinit[285607](arg _mt[285611]:_MT[201], arg this[285609]:DefaultAssociativeArr[285981](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[628795] "RVV" "param" "temp"
    unknown call_tmp[917868] "expr temp" "maybe param" "maybe type" "temp"
    (917871 'move' call_tmp[917868](454840 call eltType _mt[203] this[285609]))
    unknown call_tmp[917873] "expr temp" "maybe param" "maybe type" "temp"
    (917876 'move' call_tmp[917873](285615 'needs auto destroy' call_tmp[917868]))
    (628800 'move' ret[628795](628799 'deref' call_tmp[917873]))
    (628797 return ret[628795])
  }
  function DefaultAssociativeArr[285981](?)._deinitElement[285619](arg _mt[285627]:_MT[201], arg this[285621]:DefaultAssociativeArr[285981](?), ref arg elt[285624] :
  (454845 call eltType _mt[203] this[285621])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[917882] "expr temp" "maybe param" "maybe type" "temp"
    (917885 'move' call_tmp[917882](285635 call(454852 call (partial) _elementNeedsDeinit _mt[203] this[285621])))
    unknown call_tmp[917887] "expr temp" "maybe param" "maybe type" "temp"
    (917890 'move' call_tmp[917887](285636 call _cond_test call_tmp[917882]))
    if call_tmp[917887]
    {
      (285632 call chpl__autoDestroy elt[285624])
    }
    (628802 return _void[46])
  }
  function DefaultAssociativeArr[285981](?)._startRehash[285642](arg _mt[285650]:_MT[201], arg this[285644]:DefaultAssociativeArr[285981](?), arg newSize[285647]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[917894] "expr temp" "maybe param" "maybe type" "temp"
    (917897 'move' call_tmp[917894](454857 call tmpData _mt[203] this[285644]))
    unknown call_tmp[917901] "expr temp" "maybe param" "maybe type" "temp"
    (917904 'move' call_tmp[917901](454862 call data _mt[203] this[285644]))
    (285653 call = call_tmp[917894] call_tmp[917901])
    (566567 'end of statement')
    unknown call_tmp[917908] "expr temp" "maybe param" "maybe type" "temp"
    (917911 'move' call_tmp[917908](454867 call data _mt[203] this[285644]))
    unknown call_tmp[917915] "expr temp" "maybe param" "maybe type" "temp"
    (917918 'move' call_tmp[917915](409483 call dom _mt[203] this[285644]))
    unknown call_tmp[917922] "expr temp" "maybe param" "maybe type" "temp"
    (917925 'move' call_tmp[917922](285661 call table _mt[203] call_tmp[917915]))
    unknown call_tmp[917931] "expr temp" "maybe param" "maybe type" "temp"
    (917934 'move' call_tmp[917931](454873 call eltType _mt[203] this[285644]))
    unknown call_tmp[917936] "expr temp" "maybe param" "maybe type" "temp"
    (917939 'move' call_tmp[917936](285667 call(285664 call (partial) allocateData _mt[203] call_tmp[917922]) newSize[285647] call_tmp[917931]))
    (285657 call = call_tmp[917908] call_tmp[917936])
    (628804 return _void[46])
  }
  function DefaultAssociativeArr[285981](?)._finishRehash[285672](arg _mt[285680]:_MT[201], arg this[285674]:DefaultAssociativeArr[285981](?), arg oldSize[285677]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[917943] "expr temp" "maybe param" "maybe type" "temp"
    (917946 'move' call_tmp[917943](454878 call tmpData _mt[203] this[285674]))
    (285684 call _ddata_free call_tmp[917943] oldSize[285677])
    (566569 'end of statement')
    unknown call_tmp[917950] "expr temp" "maybe param" "maybe type" "temp"
    (917953 'move' call_tmp[917950](454884 call tmpData _mt[203] this[285674]))
    (285687 call = call_tmp[917950] nil[32])
    (628806 return _void[46])
  }
  function DefaultAssociativeArr[285981](?)._moveElementDuringRehash[285693](arg _mt[285705]:_MT[201], arg this[285695]:DefaultAssociativeArr[285981](?), arg oldslot[285698]:int(64)[10], arg newslot[285702]:int(64)[10]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    const src[285709] "dead at end of block" "const" "ref var"
    (652572 'init ref decl' src[285709])
    unknown call_tmp[917957] "expr temp" "maybe param" "maybe type" "temp"
    (917960 'move' call_tmp[917957](285711 call(454889 call (partial) tmpData _mt[203] this[285695]) oldslot[285698]))
    (652570 'move' src[285709](652569 'addr of' call_tmp[917957]))
    (285714 'end of statement')
    unknown dst[285716] "dead at end of block" "ref var"
    (652577 'init ref decl' dst[285716])
    unknown call_tmp[917964] "expr temp" "maybe param" "maybe type" "temp"
    (917967 'move' call_tmp[917964](285718 call(454895 call (partial) data _mt[203] this[285695]) newslot[285702]))
    (652575 'move' dst[285716](652574 'addr of' call_tmp[917964]))
    (285721 'end of statement')
    (285722 '=' dst[285716] src[285709])
    (566571 'end of statement' dst[285716] src[285709])
    (628808 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).dsiTargetLocales[285727](arg _mt[285731]:_MT[201], arg this[285729]:DefaultAssociativeArr[285981](?)) const ref : _unknown[42] "method" "primary method"
  {
    unknown ret[628812] "RVV" "temp"
    unknown call_tmp[917969] "expr temp" "maybe param" "maybe type" "temp"
    (917972 'move' call_tmp[917969](285738 '_wide_get_locale' this[285729]))
    unknown call_tmp[917974] "expr temp" "maybe param" "maybe type" "temp"
    (917977 'move' call_tmp[917974](285739 call chpl_localeID_to_locale call_tmp[917969]))
    unknown call_tmp[917979] "expr temp" "maybe param" "maybe type" "temp"
    (917982 'move' call_tmp[917979](285736 call chpl_getSingletonLocaleArray call_tmp[917974]))
    (628817 'move' ret[628812](628816 'addr of' call_tmp[917979]))
    (628814 return ret[628812])
  }
  function DefaultAssociativeArr[285981](?).dsiHasSingleLocalSubdomain[285743](arg _mt[285747]:_MT[201], arg this[285745]:DefaultAssociativeArr[285981](?)) param : _unknown[42] "method" "primary method"
  {
    unknown ret[628821] "RVV" "param" "temp"
    (628826 'move' ret[628821](628825 'deref' 1))
    (628823 return ret[628821])
  }
  function DefaultAssociativeArr[285981](?).dsiLocalSubdomain[285754](arg _mt[285762]:_MT[201], arg this[285756]:DefaultAssociativeArr[285981](?), arg loc[285759]:locale[234]) : _unknown[42] "method" "primary method"
  {
    unknown ret[628830] "RVV" "temp"
    unknown call_tmp[917984] "expr temp" "maybe param" "maybe type" "temp"
    (917987 'move' call_tmp[917984](285792 '_wide_get_locale' this[285756]))
    unknown call_tmp[917989] "expr temp" "maybe param" "maybe type" "temp"
    (917992 'move' call_tmp[917989](285793 call chpl_localeID_to_locale call_tmp[917984]))
    unknown call_tmp[917994] "expr temp" "maybe param" "maybe type" "temp"
    (917997 'move' call_tmp[917994](285789 call == call_tmp[917989] loc[285759]))
    unknown call_tmp[917999] "expr temp" "maybe param" "maybe type" "temp"
    (918002 'move' call_tmp[917999](285796 call _cond_test call_tmp[917994]))
    if call_tmp[917999]
    {
      unknown call_tmp[918006] "expr temp" "maybe param" "maybe type" "temp"
      (918009 'move' call_tmp[918006](454904 call dom _mt[203] this[285756]))
      unknown call_tmp[918011] "expr temp" "maybe param" "maybe type" "temp"
      (918014 'move' call_tmp[918011](285768 call _getDomain call_tmp[918006]))
      (628835 'move' ret[628830](628834 'deref' call_tmp[918011]))
      gotoReturn _end_dsiLocalSubdomain[628828] _end_dsiLocalSubdomain[628828]
    }
    {
      unknown a[285772] "dead at end of block" "insert auto destroy"
      unknown call_tmp[918018] "expr temp" "maybe param" "maybe type" "temp"
      (918021 'move' call_tmp[918018](409488 call dom _mt[203] this[285756]))
      unknown call_tmp[918025] "expr temp" "maybe param" "maybe type" "temp"
      (918028 'move' call_tmp[918025](285777 call idxType _mt[203] call_tmp[918018]))
      unknown call_tmp[918032] "expr temp" "maybe param" "maybe type" "temp"
      (918035 'move' call_tmp[918032](409493 call dom _mt[203] this[285756]))
      unknown call_tmp[918039] "expr temp" "maybe param" "maybe type" "temp"
      (918042 'move' call_tmp[918039](285781 call parSafe _mt[203] call_tmp[918032]))
      unknown call_tmp[918044] "expr temp" "maybe param" "maybe type" "temp"
      (918047 'move' call_tmp[918044](285774 call chpl__buildDomainRuntimeType defaultDist[288287] call_tmp[918025](parSafe = call_tmp[918039])))
      (652579 'default init var' a[285772] call_tmp[918044])
      (285786 'end of statement')
      (628840 'move' ret[628830](628839 'deref' a[285772]))
      gotoReturn _end_dsiLocalSubdomain[628828] _end_dsiLocalSubdomain[628828]
      (566577 'end of statement' a[285772])
    }
    label _end_dsiLocalSubdomain[628828]
    (628832 return ret[628830])
  }
  function DefaultAssociativeArr[285981](?).dsiElementInitializationComplete[285802](arg _mt[285806]:_MT[201], arg this[285804]:DefaultAssociativeArr[285981](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[918051] "expr temp" "maybe param" "maybe type" "temp"
    (918054 'move' call_tmp[918051](285812 call eltsNeedDeinit _mt[203] this[285804]))
    (285809 call = call_tmp[918051] 1)
    (628844 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).dsiElementDeinitializationComplete[285818](arg _mt[285822]:_MT[201], arg this[285820]:DefaultAssociativeArr[285981](?)) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[918058] "expr temp" "maybe param" "maybe type" "temp"
    (918061 'move' call_tmp[918058](285828 call eltsNeedDeinit _mt[203] this[285820]))
    (285825 call = call_tmp[918058] 0)
    (628846 return _void[46])
  }
  function DefaultAssociativeArr[285981](?).dsiDestroyArr[285834](arg _mt[285842]:_MT[201], arg this[285836]:DefaultAssociativeArr[285981](?), arg deinitElts[285839]:bool[19]) : _unknown[42] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown tmp[502827] "maybe param" "temp"
    (502838 'move' tmp[502827] deinitElts[285839])
    unknown call_tmp[918063] "expr temp" "maybe param" "maybe type" "temp"
    (918066 'move' call_tmp[918063](502840 call _cond_invalid tmp[502827]))
    if call_tmp[918063]
    {
      (502843 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[703878] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703879] "maybe param" "temp"
    unknown call_tmp[918068] "expr temp" "maybe param" "maybe type" "temp"
    (918071 'move' call_tmp[918068](502828 call isTrue tmp[502827]))
    (703884 'move' tmp[703879](703882 call _cond_test call_tmp[918068]))
    if tmp[703879]
    {
      unknown tmp[703886] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[918075] "expr temp" "maybe param" "maybe type" "temp"
      (918078 'move' call_tmp[918075](285964 call eltsNeedDeinit _mt[203] this[285836]))
      (703888 'move' tmp[703886](502831 call isTrue call_tmp[918075]))
      (703893 'move' tmp[703878](703890 '_paramFoldLogical' tmp[703879] tmp[703886]))
    }
    {
      (703898 'move' tmp[703878](703895 '_paramFoldLogical' tmp[703879] 0))
    }
    unknown call_tmp[918080] "expr temp" "maybe param" "maybe type" "temp"
    (918083 'move' call_tmp[918080](285967 call _cond_test tmp[703878]))
    if call_tmp[918080]
    {
      unknown call_tmp[918087] "expr temp" "maybe param" "maybe type" "temp"
      (918090 'move' call_tmp[918087](285955 call(454940 call (partial) _elementNeedsDeinit _mt[203] this[285836])))
      unknown call_tmp[918092] "expr temp" "maybe param" "maybe type" "temp"
      (918095 'move' call_tmp[918092](285956 call _cond_test call_tmp[918087]))
      if call_tmp[918092]
      {
        unknown call_tmp[918099] "expr temp" "maybe param" "maybe type" "temp"
        (918102 'move' call_tmp[918099](454936 call eltType _mt[203] this[285836]))
        unknown call_tmp[918106] "expr temp" "maybe param" "maybe type" "temp"
        (918109 'move' call_tmp[918106](409520 call dom _mt[203] this[285836]))
        unknown call_tmp[918113] "expr temp" "maybe param" "maybe type" "temp"
        (918116 'move' call_tmp[918113](285944 call table _mt[203] call_tmp[918106]))
        unknown call_tmp[918120] "expr temp" "maybe param" "maybe type" "temp"
        (918123 'move' call_tmp[918120](285947 call tableSize _mt[203] call_tmp[918113]))
        unknown call_tmp[918125] "expr temp" "maybe param" "maybe type" "temp"
        (918128 'move' call_tmp[918125](285941 call _deinitElementsIsParallel call_tmp[918099] call_tmp[918120]))
        unknown call_tmp[918130] "expr temp" "maybe param" "maybe type" "temp"
        (918133 'move' call_tmp[918130](285950 call _cond_test call_tmp[918125]))
        if call_tmp[918130]
        {
          unknown call_tmp[470446] "expr temp" "maybe param" "maybe type" "temp"
          unknown call_tmp[918137] "expr temp" "maybe param" "maybe type" "temp"
          (918140 'move' call_tmp[918137](409500 call dom _mt[203] this[285836]))
          unknown call_tmp[918144] "expr temp" "maybe param" "maybe type" "temp"
          (918147 'move' call_tmp[918144](285851 call table _mt[203] call_tmp[918137]))
          (470449 'move' call_tmp[470446](285857 call(285854 call (partial) allSlots _mt[203] call_tmp[918144])))
          Forall[285877] {
            induction variables:
              
              unknown slot[285848] "index var" "insert auto destroy"
            iterated expressions:
              call_tmp[470446]
            shadow variables:
            other variables
              forall body
            {
              unknown call_tmp[918153] "expr temp" "maybe param" "maybe type" "temp"
              (918156 'move' call_tmp[918153](409505 call dom _mt[203] this[285836]))
              unknown call_tmp[918160] "expr temp" "maybe param" "maybe type" "temp"
              (918163 'move' call_tmp[918160](285869 call(285866 call (partial) _isSlotFull _mt[203] call_tmp[918153]) slot[285848]))
              unknown call_tmp[918165] "expr temp" "maybe param" "maybe type" "temp"
              (918168 'move' call_tmp[918165](285871 call _cond_test call_tmp[918160]))
              if call_tmp[918165]
              {
                unknown call_tmp[918174] "expr temp" "maybe param" "maybe type" "temp"
                (918177 'move' call_tmp[918174](285863 call(454918 call (partial) data _mt[203] this[285836]) slot[285848]))
                (285861 call(454913 call (partial) _deinitElement _mt[203] this[285836]) call_tmp[918174])
                (566582 'end of statement' slot[285848])
              }
            }
          }
        }
        {
          {
            unknown _indexOfInterest[285908] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[285909] "expr temp" "temp"
            unknown call_tmp[918181] "expr temp" "maybe param" "maybe type" "temp"
            (918184 'move' call_tmp[918181](409510 call dom _mt[203] this[285836]))
            unknown call_tmp[918188] "expr temp" "maybe param" "maybe type" "temp"
            (918191 'move' call_tmp[918188](285884 call table _mt[203] call_tmp[918181]))
            unknown call_tmp[918195] "expr temp" "maybe param" "maybe type" "temp"
            (918198 'move' call_tmp[918195](285890 call(285887 call (partial) allSlots _mt[203] call_tmp[918188])))
            (285918 'move' _iterator[285909](285916 call _getIterator call_tmp[918195]))
            Defer
            {
              {
                (285933 call _freeIterator _iterator[285909])
              }
            }
            { scopeless type
              (285923 'move' _indexOfInterest[285908](285920 call iteratorIndex _iterator[285909]))
            }
            ForLoop[285910]
            {
              unknown slot[285881] "index var" "insert auto destroy"
              (566585 'end of statement')
              (285928 'move' slot[285881] _indexOfInterest[285908])
              (566586 'end of statement' slot[285881])
              {
                unknown call_tmp[918202] "expr temp" "maybe param" "maybe type" "temp"
                (918205 'move' call_tmp[918202](409515 call dom _mt[203] this[285836]))
                unknown call_tmp[918209] "expr temp" "maybe param" "maybe type" "temp"
                (918212 'move' call_tmp[918209](285902 call(285899 call (partial) _isSlotFull _mt[203] call_tmp[918202]) slot[285881]))
                unknown call_tmp[918214] "expr temp" "maybe param" "maybe type" "temp"
                (918217 'move' call_tmp[918214](285904 call _cond_test call_tmp[918209]))
                if call_tmp[918214]
                {
                  unknown call_tmp[918223] "expr temp" "maybe param" "maybe type" "temp"
                  (918226 'move' call_tmp[918223](285896 call(454929 call (partial) data _mt[203] this[285836]) slot[285881]))
                  (285894 call(454924 call (partial) _deinitElement _mt[203] this[285836]) call_tmp[918223])
                  (566588 'end of statement' slot[285881])
                }
              }
              label _continueLabel[285913]
              _indexOfInterest[285908]
              _iterator[285909]
            }
            label _breakLabel[285914]
          }
        }
      }
    }
    unknown call_tmp[918230] "expr temp" "maybe param" "maybe type" "temp"
    (918233 'move' call_tmp[918230](285974 call eltsNeedDeinit _mt[203] this[285836]))
    (285971 call = call_tmp[918230] 0)
    (628848 return _void[46])
  }
  type DefaultAssociativeArr[285981](?) val super[397683]:AbsBaseArr[272253](?) "delay instantiation" "super class" unknown idxType[283168] "type variable" unknown parSafeDom[283171] "param" bool[19] unknown dom[283176](283179 call unmanaged DefaultAssociativeDom[468175](?) idxType[283168](parSafe = parSafeDom[283171])) val dataSize[283186]:int(64)[10] int(64)[10] unknown data[283191](283193 call _ddata[67573](?) eltType[272229]) unknown tmpData[283198](283200 call _ddata[67573](?) eltType[272229]) val eltsNeedDeinit[283205]:bool[19] 1
  type DefaultAssociativeArr[467909](?)
  type DefaultAssociativeArr[454193](?)
  function chpl_serialReadWriteAssociativeHelper[285983](arg f[285985]:_any[141](?), arg arr[285987]:_any[141](?), arg dom[285989]:_any[141](?)) : _unknown[42] throws "no return value for void"
  {
    unknown call_tmp[918237] "expr temp" "maybe param" "maybe type" "temp"
    (918240 'move' call_tmp[918237](286195 call _writing _mt[203] f[285985]))
    unknown call_tmp[918242] "expr temp" "maybe param" "maybe type" "temp"
    (918245 'move' call_tmp[918242](286198 call _cond_test call_tmp[918237]))
    if call_tmp[918242]
    {
      unknown call_tmp[918249] "expr temp" "maybe param" "maybe type" "temp"
      (918252 'move' call_tmp[918249](286006 call serializer _mt[203] f[285985]))
      unknown call_tmp[918258] "expr temp" "maybe param" "maybe type" "temp"
      (918261 'move' call_tmp[918258](286015 call dsiNumIndices _mt[203] dom[285989]))
      unknown call_tmp[918263] "maybe param" "maybe type" "temp"
      (918266 'move' call_tmp[918263](286012 call(286009 call (partial) startMap _mt[203] call_tmp[918249]) f[285985] call_tmp[918258]))
      unknown ser[286004] "dead at end of block" "insert auto destroy"
      (652581 'init var' ser[286004] call_tmp[918263])
      (286019 'end of statement')
      {
        unknown _indexOfInterest[286041] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[286042] "expr temp" "temp"
        (286051 'move' _iterator[286042](286049 call _getIterator dom[285989]))
        Defer
        {
          {
            (286066 call _freeIterator _iterator[286042])
          }
        }
        { scopeless type
          (286056 'move' _indexOfInterest[286041](286053 call iteratorIndex _iterator[286042]))
        }
        ForLoop[286043]
        {
          unknown key[286020] "index var" "insert auto destroy"
          (566592 'end of statement')
          (286061 'move' key[286020] _indexOfInterest[286041])
          (566593 'end of statement' key[286020])
          {
            (286028 call(286025 call (partial) writeKey _mt[203] ser[286004]) key[286020])
            (566595 'end of statement' ser[286004] key[286020])
            unknown call_tmp[918274] "expr temp" "maybe param" "maybe type" "temp"
            (918277 'move' call_tmp[918274](286039 call(286036 call (partial) dsiAccess _mt[203] arr[285987]) key[286020]))
            (286034 call(286031 call (partial) writeValue _mt[203] ser[286004]) call_tmp[918274])
            (566598 'end of statement' ser[286004] key[286020])
          }
          label _continueLabel[286046]
          _indexOfInterest[286041]
          _iterator[286042]
        }
        label _breakLabel[286047]
      }
      (286077 call(286074 call (partial) endMap _mt[203] ser[286004]))
      (566601 'end of statement' ser[286004])
    }
    {
      unknown call_tmp[918283] "expr temp" "maybe param" "maybe type" "temp"
      (918286 'move' call_tmp[918283](286082 call deserializer _mt[203] f[285985]))
      unknown call_tmp[918290] "maybe param" "maybe type" "temp"
      (918293 'move' call_tmp[918290](286088 call(286085 call (partial) startMap _mt[203] call_tmp[918283]) f[285985]))
      unknown des[286080] "dead at end of block" "insert auto destroy"
      (652583 'init var' des[286080] call_tmp[918290])
      (286091 'end of statement')
      {
        unknown _indexOfInterest[286146] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[286147] "expr temp" "temp"
        unknown call_tmp[918297] "expr temp" "maybe param" "maybe type" "temp"
        (918300 'move' call_tmp[918297](286162 call dsiNumIndices _mt[203] dom[285989]))
        unknown call_tmp[918302] "expr temp" "maybe param" "maybe type" "temp"
        (918305 'move' call_tmp[918302](286160 call chpl__nudgeHighBound call_tmp[918297]))
        unknown call_tmp[918307] "expr temp" "maybe param" "maybe type" "temp"
        (918310 'move' call_tmp[918307](286165 call chpl_direct_range_iter 0 call_tmp[918302]))
        (286156 'move' _iterator[286147](286154 call _getIterator call_tmp[918307]))
        Defer
        {
          {
            (286182 call _freeIterator _iterator[286147])
          }
        }
        { scopeless type
          (286170 'move' _indexOfInterest[286146](286167 call iteratorIndex _iterator[286147]))
        }
        ForLoop[286148]
        {
          unknown chpl__elidedIdx[286172] "index var" "insert auto destroy"
          (566604 'end of statement')
          (286177 'move' chpl__elidedIdx[286172] _indexOfInterest[286146])
          (566605 'end of statement' chpl__elidedIdx[286172])
          {
            unknown call_tmp[918316] "expr temp" "maybe param" "maybe type" "temp"
            (918319 'move' call_tmp[918316](286110 call idxType _mt[203] dom[285989]))
            unknown call_tmp[918321] "maybe param" "maybe type" "temp"
            (918324 'move' call_tmp[918321](286108 call(286105 call (partial) readKey _mt[203] des[286080]) call_tmp[918316]))
            const k[286103] "dead at end of block" "const" "insert auto destroy"
            (652585 'init var' k[286103] call_tmp[918321])
            (286114 'end of statement' des[286080])
            unknown call_tmp[918328] "expr temp" "maybe param" "maybe type" "temp"
            (918331 'move' call_tmp[918328](286140 call(286137 call (partial) dsiMember _mt[203] dom[285989]) k[286103]))
            unknown call_tmp[918333] "expr temp" "maybe param" "maybe type" "temp"
            (918336 'move' call_tmp[918333](286134 call ! call_tmp[918328]))
            unknown call_tmp[918338] "expr temp" "maybe param" "maybe type" "temp"
            (918341 'move' call_tmp[918338](286142 call _cond_test call_tmp[918333]))
            if call_tmp[918338]
            {
            }
            {
              unknown call_tmp[918345] "expr temp" "maybe param" "maybe type" "temp"
              (918348 'move' call_tmp[918345](286123 call(286120 call (partial) dsiAccess _mt[203] arr[285987]) k[286103]))
              unknown call_tmp[918354] "expr temp" "maybe param" "maybe type" "temp"
              (918357 'move' call_tmp[918354](286131 call eltType _mt[203] arr[285987]))
              unknown call_tmp[918359] "expr temp" "maybe param" "maybe type" "temp"
              (918362 'move' call_tmp[918359](286129 call(286126 call (partial) readValue _mt[203] des[286080]) call_tmp[918354]))
              (286117 call = call_tmp[918345] call_tmp[918359])
              (566608 'end of statement' k[286103] des[286080])
            }
          }
          label _continueLabel[286151]
          _indexOfInterest[286146]
          _iterator[286147]
        }
        label _breakLabel[286152]
      }
      (286193 call(286190 call (partial) endMap _mt[203] des[286080]))
      (566611 'end of statement' des[286080])
    }
    (628850 return _void[46])
  }
  where {
    unknown tmp[502848] "maybe param" "temp"
    (502859 'move' tmp[502848](285994 call _usingSerializers f[285985]))
    unknown call_tmp[918366] "expr temp" "maybe param" "maybe type" "temp"
    (918369 'move' call_tmp[918366](502861 call _cond_invalid tmp[502848]))
    if call_tmp[918366]
    {
      (502864 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[703905] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703906] "maybe param" "temp"
    unknown call_tmp[918371] "expr temp" "maybe param" "maybe type" "temp"
    (918374 'move' call_tmp[918371](502849 call isTrue tmp[502848]))
    (703911 'move' tmp[703906](703909 call _cond_test call_tmp[918371]))
    if tmp[703906]
    {
      unknown tmp[703913] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[918376] "expr temp" "maybe param" "maybe type" "temp"
      (918379 'move' call_tmp[918376](285999 call _isDefaultDeser f[285985]))
      unknown call_tmp[918381] "expr temp" "maybe param" "maybe type" "temp"
      (918384 'move' call_tmp[918381](285996 call ! call_tmp[918376]))
      (703915 'move' tmp[703913](502852 call isTrue call_tmp[918381]))
      (703920 'move' tmp[703905](703917 '_paramFoldLogical' tmp[703906] tmp[703913]))
    }
    {
      (703925 'move' tmp[703905](703922 '_paramFoldLogical' tmp[703906] 0))
    }
    (1001652 call chpl_statementLevelSymbol tmp[703905])
  }
  function chpl_serialReadWriteAssociativeHelper[286205](arg f[286207]:_any[141](?), arg arr[286209]:_any[141](?), arg dom[286211]:_any[141](?)) : _unknown[42] throws "no return value for void"
  {
    unknown call_tmp[918388] "maybe param" "maybe type" "temp"
    (918391 'move' call_tmp[918388](286220 call(286217 call (partial) _binary _mt[203] f[286207])))
    unknown binary[286215] "dead at end of block" "insert auto destroy"
    (652587 'init var' binary[286215] call_tmp[918388])
    (286222 'end of statement')
    unknown call_tmp[918395] "maybe param" "maybe type" "temp"
    (918398 'move' call_tmp[918395](286229 call(286226 call (partial) styleElement _mt[203] f[286207]) QIO_STYLE_ELEMENT_ARRAY[77170]))
    unknown arrayStyle[286224] "dead at end of block" "insert auto destroy"
    (652589 'init var' arrayStyle[286224] call_tmp[918395])
    (286232 'end of statement')
    unknown tmp[502869] "maybe param" "temp"
    (502880 'move' tmp[502869](286237 call == arrayStyle[286224] QIO_ARRAY_FORMAT_SPACE[77200]))
    unknown call_tmp[918400] "expr temp" "maybe param" "maybe type" "temp"
    (918403 'move' call_tmp[918400](502882 call _cond_invalid tmp[502869]))
    if call_tmp[918400]
    {
      (502885 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown isspace[286234] "dead at end of block" "insert auto destroy"
    unknown tmp[703932] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703933] "maybe param" "temp"
    unknown call_tmp[918405] "expr temp" "maybe param" "maybe type" "temp"
    (918408 'move' call_tmp[918405](502870 call isTrue tmp[502869]))
    (703938 'move' tmp[703933](703936 call _cond_test call_tmp[918405]))
    if tmp[703933]
    {
      unknown tmp[703940] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[918410] "expr temp" "maybe param" "maybe type" "temp"
      (918413 'move' call_tmp[918410](286241 call ! binary[286215]))
      (703942 'move' tmp[703940](502873 call isTrue call_tmp[918410]))
      (703947 'move' tmp[703932](703944 '_paramFoldLogical' tmp[703933] tmp[703940]))
    }
    {
      (703952 'move' tmp[703932](703949 '_paramFoldLogical' tmp[703933] 0))
    }
    (652591 'init var' isspace[286234] tmp[703932])
    (286245 'end of statement')
    unknown tmp[502890] "maybe param" "temp"
    (502901 'move' tmp[502890](286250 call == arrayStyle[286224] QIO_ARRAY_FORMAT_JSON[77210]))
    unknown call_tmp[918415] "expr temp" "maybe param" "maybe type" "temp"
    (918418 'move' call_tmp[918415](502903 call _cond_invalid tmp[502890]))
    if call_tmp[918415]
    {
      (502906 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown isjson[286247] "dead at end of block" "insert auto destroy"
    unknown tmp[703959] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703960] "maybe param" "temp"
    unknown call_tmp[918420] "expr temp" "maybe param" "maybe type" "temp"
    (918423 'move' call_tmp[918420](502891 call isTrue tmp[502890]))
    (703965 'move' tmp[703960](703963 call _cond_test call_tmp[918420]))
    if tmp[703960]
    {
      unknown tmp[703967] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[918425] "expr temp" "maybe param" "maybe type" "temp"
      (918428 'move' call_tmp[918425](286254 call ! binary[286215]))
      (703969 'move' tmp[703967](502894 call isTrue call_tmp[918425]))
      (703974 'move' tmp[703959](703971 '_paramFoldLogical' tmp[703960] tmp[703967]))
    }
    {
      (703979 'move' tmp[703959](703976 '_paramFoldLogical' tmp[703960] 0))
    }
    (652593 'init var' isjson[286247] tmp[703959])
    (286258 'end of statement')
    unknown tmp[502911] "maybe param" "temp"
    (502922 'move' tmp[502911](286263 call == arrayStyle[286224] QIO_ARRAY_FORMAT_CHPL[77205]))
    unknown call_tmp[918430] "expr temp" "maybe param" "maybe type" "temp"
    (918433 'move' call_tmp[918430](502924 call _cond_invalid tmp[502911]))
    if call_tmp[918430]
    {
      (502927 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown ischpl[286260] "dead at end of block" "insert auto destroy"
    unknown tmp[703986] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[703987] "maybe param" "temp"
    unknown call_tmp[918435] "expr temp" "maybe param" "maybe type" "temp"
    (918438 'move' call_tmp[918435](502912 call isTrue tmp[502911]))
    (703992 'move' tmp[703987](703990 call _cond_test call_tmp[918435]))
    if tmp[703987]
    {
      unknown tmp[703994] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[918440] "expr temp" "maybe param" "maybe type" "temp"
      (918443 'move' call_tmp[918440](286267 call ! binary[286215]))
      (703996 'move' tmp[703994](502915 call isTrue call_tmp[918440]))
      (704001 'move' tmp[703986](703998 '_paramFoldLogical' tmp[703987] tmp[703994]))
    }
    {
      (704006 'move' tmp[703986](704003 '_paramFoldLogical' tmp[703987] 0))
    }
    (652595 'init var' ischpl[286260] tmp[703986])
    (286271 'end of statement')
    unknown tmp[502932] "maybe param" "temp"
    unknown call_tmp[918447] "expr temp" "maybe param" "maybe type" "temp"
    (918450 'move' call_tmp[918447](286284 call _writing _mt[203] f[286207]))
    (502943 'move' tmp[502932](286281 call ! call_tmp[918447]))
    unknown call_tmp[918452] "expr temp" "maybe param" "maybe type" "temp"
    (918455 'move' call_tmp[918452](502945 call _cond_invalid tmp[502932]))
    if call_tmp[918452]
    {
      (502948 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[704013] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704014] "maybe param" "temp"
    unknown call_tmp[918457] "expr temp" "maybe param" "maybe type" "temp"
    (918460 'move' call_tmp[918457](502933 call isTrue tmp[502932]))
    (704019 'move' tmp[704014](704017 call _cond_test call_tmp[918457]))
    if tmp[704014]
    {
      unknown tmp[704021] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704023 'move' tmp[704021](502936 call isTrue ischpl[286260]))
      (704028 'move' tmp[704013](704025 '_paramFoldLogical' tmp[704014] tmp[704021]))
    }
    {
      (704033 'move' tmp[704013](704030 '_paramFoldLogical' tmp[704014] 0))
    }
    unknown call_tmp[918462] "expr temp" "maybe param" "maybe type" "temp"
    (918465 'move' call_tmp[918462](286288 call _cond_test tmp[704013]))
    if call_tmp[918462]
    {
      (286274 call halt "This form of I/O on a default array slice is not yet supported")
      (566618 'end of statement')
      gotoReturn _end_chpl_serialReadWriteAssociativeHelper[628854] _end_chpl_serialReadWriteAssociativeHelper[628854]
    }
    function rwLiteral[286292](arg lit[286295]:string[244]) : _unknown[42] throws "inline" "no return value for void"
    {
      unknown call_tmp[918469] "expr temp" "maybe param" "maybe type" "temp"
      (918472 'move' call_tmp[918469](286314 call _writing _mt[203] f[286207]))
      unknown call_tmp[918474] "expr temp" "maybe param" "maybe type" "temp"
      (918477 'move' call_tmp[918474](286317 call _cond_test call_tmp[918469]))
      if call_tmp[918474]
      {
        (286303 call(286300 call (partial) writeLiteral _mt[203] f[286207]) lit[286295])
      }
      {
        (286310 call(286307 call (partial) readLiteral _mt[203] f[286207]) lit[286295])
      }
      (628852 return _void[46])
    }
    unknown tmp[502953] "maybe param" "temp"
    (502964 'move' tmp[502953] isjson[286247])
    unknown call_tmp[918483] "expr temp" "maybe param" "maybe type" "temp"
    (918486 'move' call_tmp[918483](502966 call _cond_invalid tmp[502953]))
    if call_tmp[918483]
    {
      (502969 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[704040] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704041] "maybe param" "temp"
    unknown call_tmp[918488] "expr temp" "maybe param" "maybe type" "temp"
    (918491 'move' call_tmp[918488](502954 call isTrue tmp[502953]))
    (704046 'move' tmp[704041](704044 call _cond_test call_tmp[918488]))
    if tmp[704041]
    {
      (704051 'move' tmp[704040](704048 '_paramFoldLogical' tmp[704041] 1))
    }
    {
      unknown tmp[704053] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704055 'move' tmp[704053](502958 call isTrue ischpl[286260]))
      (704060 'move' tmp[704040](704057 '_paramFoldLogical' tmp[704041] tmp[704053]))
    }
    unknown call_tmp[918493] "expr temp" "maybe param" "maybe type" "temp"
    (918496 'move' call_tmp[918493](286333 call _cond_test tmp[704040]))
    if call_tmp[918493]
    {
      (286326 call rwLiteral "[")
    }
    unknown first[286339] "dead at end of block" "insert auto destroy"
    (652597 'init var' first[286339] 1)
    (286342 'end of statement' binary[286215])
    {
      unknown _indexOfInterest[286447] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[286448] "expr temp" "temp"
      (286457 'move' _iterator[286448](286455 call _getIterator dom[286211]))
      Defer
      {
        {
          (286472 call _freeIterator _iterator[286448])
        }
      }
      { scopeless type
        (286462 'move' _indexOfInterest[286447](286459 call iteratorIndex _iterator[286448]))
      }
      ForLoop[286449]
      {
        unknown key[286343] "index var" "insert auto destroy"
        (566625 'end of statement')
        (286467 'move' key[286343] _indexOfInterest[286447])
        (566626 'end of statement' key[286343])
        {
          unknown call_tmp[918498] "expr temp" "maybe param" "maybe type" "temp"
          (918501 'move' call_tmp[918498](286377 call _cond_test first[286339]))
          if call_tmp[918498]
          {
            (286347 call = first[286339] 0)
            (566628 'end of statement' first[286339])
          }
          {
            unknown call_tmp[918503] "expr temp" "maybe param" "maybe type" "temp"
            (918506 'move' call_tmp[918503](286370 call _cond_test isspace[286234]))
            if call_tmp[918503]
            {
              (286353 call rwLiteral " ")
            }
            {
              unknown tmp[502974] "maybe param" "temp"
              (502985 'move' tmp[502974] isjson[286247])
              unknown call_tmp[918508] "expr temp" "maybe param" "maybe type" "temp"
              (918511 'move' call_tmp[918508](502987 call _cond_invalid tmp[502974]))
              if call_tmp[918508]
              {
                (502990 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[704067] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[704068] "maybe param" "temp"
              unknown call_tmp[918513] "expr temp" "maybe param" "maybe type" "temp"
              (918516 'move' call_tmp[918513](502975 call isTrue tmp[502974]))
              (704073 'move' tmp[704068](704071 call _cond_test call_tmp[918513]))
              if tmp[704068]
              {
                (704078 'move' tmp[704067](704075 '_paramFoldLogical' tmp[704068] 1))
              }
              {
                unknown tmp[704080] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                (704082 'move' tmp[704080](502979 call isTrue ischpl[286260]))
                (704087 'move' tmp[704067](704084 '_paramFoldLogical' tmp[704068] tmp[704080]))
              }
              unknown call_tmp[918518] "expr temp" "maybe param" "maybe type" "temp"
              (918521 'move' call_tmp[918518](286364 call _cond_test tmp[704067]))
              if call_tmp[918518]
              {
                (286357 call rwLiteral ", ")
              }
            }
          }
          unknown tmp[502995] "maybe param" "temp"
          (503006 'move' tmp[502995](286399 call _writing _mt[203] f[286207]))
          unknown call_tmp[918525] "expr temp" "maybe param" "maybe type" "temp"
          (918528 'move' call_tmp[918525](503008 call _cond_invalid tmp[502995]))
          if call_tmp[918525]
          {
            (503011 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[704094] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[704095] "maybe param" "temp"
          unknown call_tmp[918530] "expr temp" "maybe param" "maybe type" "temp"
          (918533 'move' call_tmp[918530](502996 call isTrue tmp[502995]))
          (704100 'move' tmp[704095](704098 call _cond_test call_tmp[918530]))
          if tmp[704095]
          {
            unknown tmp[704102] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (704104 'move' tmp[704102](502999 call isTrue ischpl[286260]))
            (704109 'move' tmp[704094](704106 '_paramFoldLogical' tmp[704095] tmp[704102]))
          }
          {
            (704114 'move' tmp[704094](704111 '_paramFoldLogical' tmp[704095] 0))
          }
          unknown call_tmp[918535] "expr temp" "maybe param" "maybe type" "temp"
          (918538 'move' call_tmp[918535](286403 call _cond_test tmp[704094]))
          if call_tmp[918535]
          {
            (286388 call(286385 call (partial) write _mt[203] f[286207]) key[286343])
            (566634 'end of statement' key[286343])
            (286394 call(286391 call (partial) writeLiteral _mt[203] f[286207]) " => ")
          }
          unknown call_tmp[918546] "expr temp" "maybe param" "maybe type" "temp"
          (918549 'move' call_tmp[918546](286438 call _writing _mt[203] f[286207]))
          unknown call_tmp[918551] "expr temp" "maybe param" "maybe type" "temp"
          (918554 'move' call_tmp[918551](286441 call _cond_test call_tmp[918546]))
          if call_tmp[918551]
          {
            unknown call_tmp[918560] "expr temp" "maybe param" "maybe type" "temp"
            (918563 'move' call_tmp[918560](286416 call(286413 call (partial) dsiAccess _mt[203] arr[286209]) key[286343]))
            (286411 call(286408 call (partial) write _mt[203] f[286207]) call_tmp[918560])
            (566637 'end of statement' key[286343])
          }
          {
            unknown call_tmp[918567] "expr temp" "maybe param" "maybe type" "temp"
            (918570 'move' call_tmp[918567](286425 call(286422 call (partial) dsiAccess _mt[203] arr[286209]) key[286343]))
            unknown call_tmp[918576] "expr temp" "maybe param" "maybe type" "temp"
            (918579 'move' call_tmp[918576](286433 call eltType _mt[203] arr[286209]))
            unknown call_tmp[918581] "expr temp" "maybe param" "maybe type" "temp"
            (918584 'move' call_tmp[918581](286431 call(286428 call (partial) read _mt[203] f[286207]) call_tmp[918576]))
            (286419 call = call_tmp[918567] call_tmp[918581])
            (566639 'end of statement' key[286343])
          }
        }
        label _continueLabel[286452]
        _indexOfInterest[286447]
        _iterator[286448]
      }
      label _breakLabel[286453]
    }
    unknown tmp[503016] "maybe param" "temp"
    (503027 'move' tmp[503016] isjson[286247])
    unknown call_tmp[918586] "expr temp" "maybe param" "maybe type" "temp"
    (918589 'move' call_tmp[918586](503029 call _cond_invalid tmp[503016]))
    if call_tmp[918586]
    {
      (503032 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[704121] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[704122] "maybe param" "temp"
    unknown call_tmp[918591] "expr temp" "maybe param" "maybe type" "temp"
    (918594 'move' call_tmp[918591](503017 call isTrue tmp[503016]))
    (704127 'move' tmp[704122](704125 call _cond_test call_tmp[918591]))
    if tmp[704122]
    {
      (704132 'move' tmp[704121](704129 '_paramFoldLogical' tmp[704122] 1))
    }
    {
      unknown tmp[704134] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (704136 'move' tmp[704134](503021 call isTrue ischpl[286260]))
      (704141 'move' tmp[704121](704138 '_paramFoldLogical' tmp[704122] tmp[704134]))
    }
    unknown call_tmp[918596] "expr temp" "maybe param" "maybe type" "temp"
    (918599 'move' call_tmp[918596](286487 call _cond_test tmp[704121]))
    if call_tmp[918596]
    {
      (286480 call rwLiteral "]")
    }
    label _end_chpl_serialReadWriteAssociativeHelper[628854]
    (628856 return _void[46])
  }
  (396965 'used modules list'(280588 'use' DSIUtil[99447])(280593 'use' ChapelDistribution[273773])(280595 'use' ChapelRange[129915])(280596 'use' ChapelArray[264652])(280600 'use' ChapelBase[77907])(280602 'use' ChapelLocks[85420])(280603 'use' IO[208303])(280606 'use' ChapelHashing[280584])(280608 'use' ChapelHashtable[267646])(280610 'use' OS[15571]))
}
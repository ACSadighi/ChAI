AST dump for FormattedIO after pass parallel.
Module use list: ChapelStandard IO CTypes POSIX OS Regex 

{
  function chpl__init_FormattedIO[468471]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (619055 return _void[46])
  }
  function _toIntegral[3039465](const in arg x[3039467]:real(64)[13], ref arg error_out[5503615]:Error[85511], ref arg _retArg[5584294]:_ref((int(64),bool))[3040088]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3039556]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
    const-val ret[3039921]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3039923]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3039935]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3039941]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3039948]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3039972]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3039974 'move' call_tmp[3039972](3039977 call :[1496113] x[3039467]))
      const-val call_tmp[3039980]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584312]:(int(64),bool)[3040018] "temp"
      (3039985 call _build_tuple[3040124] call_tmp[3039972] 1 ret_tmp[5584312])
      (5584315 'move' call_tmp[3039980] ret_tmp[5584312])
      (3039988 'move' ret[3039921] call_tmp[3039980])
    }
    (3039995 'move' ret[3039556] ret[3039921])
    gotoReturn _end__toIntegral[3040003] _end__toIntegral[3040003]
    label _end__toIntegral[3040003]
    (5584296 '=' _retArg[5584294] ret[3039556])
    (5584298 return _void[46])
  }
  function _toIntegral[3322308](const  ref arg x[3322310]:string[244], ref arg error_out[5509161]:Error[85511], ref arg _retArg[5588960]:_ref((int(64),bool))[3040088]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3322399]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
    const-val ret[3322446]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3322448]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3322460]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3322466]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3322473]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3322497]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509164]:Error[85511] "error variable" "temp"
      (5509166 'move' error[5509164] nil[32])
      (3322499 'move' call_tmp[3322497](3322502 call :[1751964] x[3322310] error[5509164]))
      val errorExists[7302392]:bool[19] "temp"
      (7302397 'move' errorExists[7302392](7302394 '!=' error[5509164] nil[32]))
      if errorExists[7302392]
      {
        (5509170 '=' error_out[5509161] error[5509164])
        gotoErrorHandlingReturn _end__toIntegral[3322528] _end__toIntegral[3322528]
      }
      const-val call_tmp[3322505]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584324]:(int(64),bool)[3040018] "temp"
      (3322510 call _build_tuple[3040124] call_tmp[3322497] 1 ret_tmp[5584324])
      (5584327 'move' call_tmp[3322505] ret_tmp[5584324])
      (3322513 'move' ret[3322446] call_tmp[3322505])
    }
    (3322520 'move' ret[3322399] ret[3322446])
    gotoReturn _end__toIntegral[3322528] _end__toIntegral[3322528]
    label _end__toIntegral[3322528]
    (5588962 '=' _retArg[5588960] ret[3322399])
    (5588964 return _void[46])
  }
  function _toIntegral[3731311](const in arg x[3731313]:real(32)[91], ref arg error_out[5519237]:Error[85511], ref arg _retArg[5593651]:_ref((int(64),bool))[3040088]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3731402]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
    const-val ret[3731449]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3731451]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3731463]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3731469]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3731476]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3731500]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3731502 'move' call_tmp[3731500](3731505 call :[3731569] x[3731313]))
      const-val call_tmp[3731508]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584342]:(int(64),bool)[3040018] "temp"
      (3731513 call _build_tuple[3040124] call_tmp[3731500] 1 ret_tmp[5584342])
      (5584345 'move' call_tmp[3731508] ret_tmp[5584342])
      (3731516 'move' ret[3731449] call_tmp[3731508])
    }
    (3731523 'move' ret[3731402] ret[3731449])
    gotoReturn _end__toIntegral[3731531] _end__toIntegral[3731531]
    label _end__toIntegral[3731531]
    (5593653 '=' _retArg[5593651] ret[3731402])
    (5593655 return _void[46])
  }
  function _toSigned[3042455](const in arg x[3042457]:real(64)[13], ref arg error_out[5503617]:Error[85511], ref arg _retArg[5584438]:_ref((int(64),bool))[3040088]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3042546]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
    const-val ret[3042601]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3042603]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3042615]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3042621]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3042628]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3042652]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3042654 'move' call_tmp[3042652](3042657 call :[1496113] x[3042457]))
      const-val call_tmp[3042660]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584318]:(int(64),bool)[3040018] "temp"
      (3042665 call _build_tuple[3040124] call_tmp[3042652] 1 ret_tmp[5584318])
      (5584321 'move' call_tmp[3042660] ret_tmp[5584318])
      (3042668 'move' ret[3042601] call_tmp[3042660])
    }
    (3042675 'move' ret[3042546] ret[3042601])
    gotoReturn _end__toSigned[3042683] _end__toSigned[3042683]
    label _end__toSigned[3042683]
    (5584440 '=' _retArg[5584438] ret[3042546])
    (5584442 return _void[46])
  }
  function _toSigned[3323426](const  ref arg x[3323428]:string[244], ref arg error_out[5509178]:Error[85511], ref arg _retArg[5589008]:_ref((int(64),bool))[3040088]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3323517]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
    const-val ret[3323564]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3323566]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3323578]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3323584]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3323591]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3323615]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509181]:Error[85511] "error variable" "temp"
      (5509183 'move' error[5509181] nil[32])
      (3323617 'move' call_tmp[3323615](3323620 call :[1751964] x[3323428] error[5509181]))
      val errorExists[7302400]:bool[19] "temp"
      (7302405 'move' errorExists[7302400](7302402 '!=' error[5509181] nil[32]))
      if errorExists[7302400]
      {
        (5509187 '=' error_out[5509178] error[5509181])
        gotoErrorHandlingReturn _end__toSigned[3323646] _end__toSigned[3323646]
      }
      const-val call_tmp[3323623]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584330]:(int(64),bool)[3040018] "temp"
      (3323628 call _build_tuple[3040124] call_tmp[3323615] 1 ret_tmp[5584330])
      (5584333 'move' call_tmp[3323623] ret_tmp[5584330])
      (3323631 'move' ret[3323564] call_tmp[3323623])
    }
    (3323638 'move' ret[3323517] ret[3323564])
    gotoReturn _end__toSigned[3323646] _end__toSigned[3323646]
    label _end__toSigned[3323646]
    (5589010 '=' _retArg[5589008] ret[3323517])
    (5589012 return _void[46])
  }
  function _toSigned[3732370](const in arg x[3732372]:real(32)[91], ref arg error_out[5519239]:Error[85511], ref arg _retArg[5593699]:_ref((int(64),bool))[3040088]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3732461]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
    const-val ret[3732508]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3732510]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3732522]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3732528]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3732535]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3732559]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3732561 'move' call_tmp[3732559](3732564 call :[3731569] x[3732372]))
      const-val call_tmp[3732567]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584348]:(int(64),bool)[3040018] "temp"
      (3732572 call _build_tuple[3040124] call_tmp[3732559] 1 ret_tmp[5584348])
      (5584351 'move' call_tmp[3732567] ret_tmp[5584348])
      (3732575 'move' ret[3732508] call_tmp[3732567])
    }
    (3732582 'move' ret[3732461] ret[3732508])
    gotoReturn _end__toSigned[3732590] _end__toSigned[3732590]
    label _end__toSigned[3732590]
    (5593701 '=' _retArg[5593699] ret[3732461])
    (5593703 return _void[46])
  }
  function _toUnsigned[3050871](const in arg x[3050873]:real(64)[13], ref arg error_out[5503683]:Error[85511], ref arg _retArg[5584465]:_ref((uint(64),bool))[3051198]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3050962]:(uint(64),bool)[3051128] "dead after last mention" "RVV" "temp"
    const-val ret[3051017]:(uint(64),bool)[3051128] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3051019]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3051031]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3051037]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3051044]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3051076]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (3051078 'move' call_tmp[3051076](3051081 call :[3051207] x[3050873]))
      const-val call_tmp[3051084]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584483]:(uint(64),bool)[3051128] "temp"
      (3051089 call _build_tuple[3051238] call_tmp[3051076] 1 ret_tmp[5584483])
      (5584486 'move' call_tmp[3051084] ret_tmp[5584483])
      (3051092 'move' ret[3051017] call_tmp[3051084])
    }
    (3051099 'move' ret[3050962] ret[3051017])
    gotoReturn _end__toUnsigned[3051107] _end__toUnsigned[3051107]
    label _end__toUnsigned[3051107]
    (5584467 '=' _retArg[5584465] ret[3050962])
    (5584469 return _void[46])
  }
  function _toUnsigned[3323771](const  ref arg x[3323773]:string[244], ref arg error_out[5509195]:Error[85511], ref arg _retArg[5589020]:_ref((uint(64),bool))[3051198]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3323862]:(uint(64),bool)[3051128] "dead after last mention" "RVV" "temp"
    const-val ret[3323909]:(uint(64),bool)[3051128] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3323911]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3323923]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3323929]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3323936]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3323968]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509198]:Error[85511] "error variable" "temp"
      (5509200 'move' error[5509198] nil[32])
      (3323970 'move' call_tmp[3323968](3323973 call :[1918271] x[3323773] error[5509198]))
      val errorExists[7302408]:bool[19] "temp"
      (7302413 'move' errorExists[7302408](7302410 '!=' error[5509198] nil[32]))
      if errorExists[7302408]
      {
        (5509204 '=' error_out[5509195] error[5509198])
        gotoErrorHandlingReturn _end__toUnsigned[3323999] _end__toUnsigned[3323999]
      }
      const-val call_tmp[3323976]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584489]:(uint(64),bool)[3051128] "temp"
      (3323981 call _build_tuple[3051238] call_tmp[3323968] 1 ret_tmp[5584489])
      (5584492 'move' call_tmp[3323976] ret_tmp[5584489])
      (3323984 'move' ret[3323909] call_tmp[3323976])
    }
    (3323991 'move' ret[3323862] ret[3323909])
    gotoReturn _end__toUnsigned[3323999] _end__toUnsigned[3323999]
    label _end__toUnsigned[3323999]
    (5589022 '=' _retArg[5589020] ret[3323862])
    (5589024 return _void[46])
  }
  function _toUnsigned[3732721](const in arg x[3732723]:real(32)[91], ref arg error_out[5519241]:Error[85511], ref arg _retArg[5593711]:_ref((uint(64),bool))[3051198]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3732812]:(uint(64),bool)[3051128] "dead after last mention" "RVV" "temp"
    const-val ret[3732859]:(uint(64),bool)[3051128] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3732861]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3732873]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3732879]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3732886]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3732918]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (3732920 'move' call_tmp[3732918](3732923 call :[3732967] x[3732723]))
      const-val call_tmp[3732926]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584495]:(uint(64),bool)[3051128] "temp"
      (3732931 call _build_tuple[3051238] call_tmp[3732918] 1 ret_tmp[5584495])
      (5584498 'move' call_tmp[3732926] ret_tmp[5584495])
      (3732934 'move' ret[3732859] call_tmp[3732926])
    }
    (3732941 'move' ret[3732812] ret[3732859])
    gotoReturn _end__toUnsigned[3732949] _end__toUnsigned[3732949]
    label _end__toUnsigned[3732949]
    (5593713 '=' _retArg[5593711] ret[3732812])
    (5593715 return _void[46])
  }
  function _toReal[3059539](const in arg x[3059541]:real(64)[13], ref arg _retArg[5584528]:_ref((real(64),bool))[3059832]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3059553]:(real(64),bool)[3059761] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3059698]:(real(64),bool)[3059761] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584534]:(real(64),bool)[3059761] "temp"
    (3059703 call _build_tuple[3059719] x[3059541] 1 ret_tmp[5584534])
    (5584537 'move' call_tmp[3059698] ret_tmp[5584534])
    (3059706 'move' ret[3059553] call_tmp[3059698])
    (5584530 '=' _retArg[5584528] ret[3059553])
    (5584532 return _void[46])
  }
  function _toReal[3733091](const in arg x[3733093]:real(32)[91], ref arg _retArg[5593723]:_ref((real(32),bool))[3733384]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3733105]:(real(32),bool)[3733313] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3733250]:(real(32),bool)[3733313] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5593729]:(real(32),bool)[3733313] "temp"
    (3733255 call _build_tuple[3733271] x[3733093] 1 ret_tmp[5593729])
    (5593732 'move' call_tmp[3733250] ret_tmp[5593729])
    (3733258 'move' ret[3733105] call_tmp[3733250])
    (5593725 '=' _retArg[5593723] ret[3733105])
    (5593727 return _void[46])
  }
  function _toReal[3324126](const  ref arg x[3324128]:string[244], ref arg error_out[5509212]:Error[85511], ref arg _retArg[5589032]:_ref((real(64),bool))[3059832]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3324217]:(real(64),bool)[3059761] "dead after last mention" "RVV" "temp"
    const-val ret[3324264]:(real(64),bool)[3059761] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3324266]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3324278]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3324284]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3324291]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3324315]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509215]:Error[85511] "error variable" "temp"
      (5509217 'move' error[5509215] nil[32])
      (3324317 'move' call_tmp[3324315](3324320 call :[1598415] x[3324128] error[5509215]))
      val errorExists[7302416]:bool[19] "temp"
      (7302421 'move' errorExists[7302416](7302418 '!=' error[5509215] nil[32]))
      if errorExists[7302416]
      {
        (5509221 '=' error_out[5509212] error[5509215])
        gotoErrorHandlingReturn _end__toReal[3324346] _end__toReal[3324346]
      }
      const-val call_tmp[3324323]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584546]:(real(64),bool)[3059761] "temp"
      (3324328 call _build_tuple[3059719] call_tmp[3324315] 1 ret_tmp[5584546])
      (5584549 'move' call_tmp[3324323] ret_tmp[5584546])
      (3324331 'move' ret[3324264] call_tmp[3324323])
    }
    (3324338 'move' ret[3324217] ret[3324264])
    gotoReturn _end__toReal[3324346] _end__toReal[3324346]
    label _end__toReal[3324346]
    (5589034 '=' _retArg[5589032] ret[3324217])
    (5589036 return _void[46])
  }
  function _toImag[3067606](const in arg x[3067608]:real(64)[13], ref arg error_out[5503813]:Error[85511], ref arg _retArg[5584591]:_ref((imag(64),bool))[3067917]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3067697]:(imag(64),bool)[3067847] "dead after last mention" "RVV" "temp"
    const-val ret[3067744]:(imag(64),bool)[3067847] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3067746]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3067758]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3067764]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3067771]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3067795]:imag(64)[101] "dead after last mention" "expr temp" "maybe param" "temp"
      (3067797 'move' call_tmp[3067795](3067800 call :[3067926] x[3067608]))
      const-val call_tmp[3067803]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584609]:(imag(64),bool)[3067847] "temp"
      (3067808 call _build_tuple[3067957] call_tmp[3067795] 1 ret_tmp[5584609])
      (5584612 'move' call_tmp[3067803] ret_tmp[5584609])
      (3067811 'move' ret[3067744] call_tmp[3067803])
    }
    (3067818 'move' ret[3067697] ret[3067744])
    gotoReturn _end__toImag[3067826] _end__toImag[3067826]
    label _end__toImag[3067826]
    (5584593 '=' _retArg[5584591] ret[3067697])
    (5584595 return _void[46])
  }
  function _toImag[3324473](const  ref arg x[3324475]:string[244], ref arg error_out[5509229]:Error[85511], ref arg _retArg[5589044]:_ref((imag(64),bool))[3067917]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3324564]:(imag(64),bool)[3067847] "dead after last mention" "RVV" "temp"
    const-val ret[3324611]:(imag(64),bool)[3067847] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3324613]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3324625]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3324631]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3324638]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3324662]:imag(64)[101] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509232]:Error[85511] "error variable" "temp"
      (5509234 'move' error[5509232] nil[32])
      (3324664 'move' call_tmp[3324662](3324667 call :[3324705] x[3324475] error[5509232]))
      val errorExists[7302424]:bool[19] "temp"
      (7302429 'move' errorExists[7302424](7302426 '!=' error[5509232] nil[32]))
      if errorExists[7302424]
      {
        (5509238 '=' error_out[5509229] error[5509232])
        gotoErrorHandlingReturn _end__toImag[3324693] _end__toImag[3324693]
      }
      const-val call_tmp[3324670]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584615]:(imag(64),bool)[3067847] "temp"
      (3324675 call _build_tuple[3067957] call_tmp[3324662] 1 ret_tmp[5584615])
      (5584618 'move' call_tmp[3324670] ret_tmp[5584615])
      (3324678 'move' ret[3324611] call_tmp[3324670])
    }
    (3324685 'move' ret[3324564] ret[3324611])
    gotoReturn _end__toImag[3324693] _end__toImag[3324693]
    label _end__toImag[3324693]
    (5589046 '=' _retArg[5589044] ret[3324564])
    (5589048 return _void[46])
  }
  function _toImag[3740818](const in arg x[3740820]:real(32)[91], ref arg error_out[5519307]:Error[85511], ref arg _retArg[5593780]:_ref((imag(64),bool))[3067917]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3740909]:(imag(64),bool)[3067847] "dead after last mention" "RVV" "temp"
    const-val ret[3740956]:(imag(64),bool)[3067847] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3740958]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3740970]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3740976]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3740983]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3741007]:imag(64)[101] "dead after last mention" "expr temp" "maybe param" "temp"
      (3741009 'move' call_tmp[3741007](3741012 call :[3741056] x[3740820]))
      const-val call_tmp[3741015]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584621]:(imag(64),bool)[3067847] "temp"
      (3741020 call _build_tuple[3067957] call_tmp[3741007] 1 ret_tmp[5584621])
      (5584624 'move' call_tmp[3741015] ret_tmp[5584621])
      (3741023 'move' ret[3740956] call_tmp[3741015])
    }
    (3741030 'move' ret[3740909] ret[3740956])
    gotoReturn _end__toImag[3741038] _end__toImag[3741038]
    label _end__toImag[3741038]
    (5593782 '=' _retArg[5593780] ret[3740909])
    (5593784 return _void[46])
  }
  function _toComplex[3077338](const in arg x[3077340]:real(64)[13], ref arg error_out[5503879]:Error[85511], ref arg _retArg[5584654]:_ref((complex(128),bool))[3077657]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3077429]:(complex(128),bool)[3077587] "dead after last mention" "RVV" "temp"
    const-val ret[3077476]:(complex(128),bool)[3077587] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3077478]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3077490]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3077496]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3077503]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3077535]:complex(128)[111] "dead after last mention" "expr temp" "maybe param" "temp"
      (3077537 'move' call_tmp[3077535](3077540 call :[3077666] x[3077340]))
      const-val call_tmp[3077543]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584684]:(complex(128),bool)[3077587] "temp"
      (3077548 call _build_tuple[3077959] call_tmp[3077535] 1 ret_tmp[5584684])
      (5584687 'move' call_tmp[3077543] ret_tmp[5584684])
      (3077551 'move' ret[3077476] call_tmp[3077543])
    }
    (3077558 'move' ret[3077429] ret[3077476])
    gotoReturn _end__toComplex[3077566] _end__toComplex[3077566]
    label _end__toComplex[3077566]
    (5584656 '=' _retArg[5584654] ret[3077429])
    (5584658 return _void[46])
  }
  function _toComplex[3325813](const  ref arg x[3325815]:string[244], ref arg error_out[5509274]:Error[85511], ref arg _retArg[5589056]:_ref((complex(128),bool))[3077657]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3325904]:(complex(128),bool)[3077587] "dead after last mention" "RVV" "temp"
    const-val ret[3325951]:(complex(128),bool)[3077587] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3325953]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3325965]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3325971]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3325978]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3326010]:complex(128)[111] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509277]:Error[85511] "error variable" "temp"
      (5509279 'move' error[5509277] nil[32])
      (3326012 'move' call_tmp[3326010](3326015 call :[3326053] x[3325815] error[5509277]))
      val errorExists[7302432]:bool[19] "temp"
      (7302437 'move' errorExists[7302432](7302434 '!=' error[5509277] nil[32]))
      if errorExists[7302432]
      {
        (5509283 '=' error_out[5509274] error[5509277])
        gotoErrorHandlingReturn _end__toComplex[3326041] _end__toComplex[3326041]
      }
      const-val call_tmp[3326018]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584690]:(complex(128),bool)[3077587] "temp"
      (3326023 call _build_tuple[3077959] call_tmp[3326010] 1 ret_tmp[5584690])
      (5584693 'move' call_tmp[3326018] ret_tmp[5584690])
      (3326026 'move' ret[3325951] call_tmp[3326018])
    }
    (3326033 'move' ret[3325904] ret[3325951])
    gotoReturn _end__toComplex[3326041] _end__toComplex[3326041]
    label _end__toComplex[3326041]
    (5589058 '=' _retArg[5589056] ret[3325904])
    (5589060 return _void[46])
  }
  function _toComplex[3741310](const in arg x[3741312]:real(32)[91], ref arg error_out[5519309]:Error[85511], ref arg _retArg[5593792]:_ref((complex(128),bool))[3077657]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3741401]:(complex(128),bool)[3077587] "dead after last mention" "RVV" "temp"
    const-val ret[3741448]:(complex(128),bool)[3077587] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3741450]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3741462]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3741468]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3741475]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3741507]:complex(128)[111] "dead after last mention" "expr temp" "maybe param" "temp"
      (3741509 'move' call_tmp[3741507](3741512 call :[3741556] x[3741312]))
      const-val call_tmp[3741515]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584696]:(complex(128),bool)[3077587] "temp"
      (3741520 call _build_tuple[3077959] call_tmp[3741507] 1 ret_tmp[5584696])
      (5584699 'move' call_tmp[3741515] ret_tmp[5584696])
      (3741523 'move' ret[3741448] call_tmp[3741515])
    }
    (3741530 'move' ret[3741401] ret[3741448])
    gotoReturn _end__toComplex[3741538] _end__toComplex[3741538]
    label _end__toComplex[3741538]
    (5593794 '=' _retArg[5593792] ret[3741401])
    (5593796 return _void[46])
  }
  function _toNumeric[3088732](const in arg x[3088734]:real(64)[13], ref arg _retArg[5584741]:_ref((real(64),bool))[3059832]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3088746]:(real(64),bool)[3059761] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3088891]:(real(64),bool)[3059761] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584540]:(real(64),bool)[3059761] "temp"
    (3088896 call _build_tuple[3059719] x[3088734] 1 ret_tmp[5584540])
    (5584543 'move' call_tmp[3088891] ret_tmp[5584540])
    (3088899 'move' ret[3088746] call_tmp[3088891])
    (5584743 '=' _retArg[5584741] ret[3088746])
    (5584745 return _void[46])
  }
  function _toNumeric[3741932](const in arg x[3741934]:real(32)[91], ref arg _retArg[5593816]:_ref((real(32),bool))[3733384]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3741946]:(real(32),bool)[3733313] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3742091]:(real(32),bool)[3733313] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5593735]:(real(32),bool)[3733313] "temp"
    (3742096 call _build_tuple[3733271] x[3741934] 1 ret_tmp[5593735])
    (5593738 'move' call_tmp[3742091] ret_tmp[5593735])
    (3742099 'move' ret[3741946] call_tmp[3742091])
    (5593818 '=' _retArg[5593816] ret[3741946])
    (5593820 return _void[46])
  }
  function _toNumeric[3327965](const  ref arg x[3327967]:string[244], ref arg error_out[5509319]:Error[85511], ref arg _retArg[5589068]:_ref((int(64),bool))[3040088]) : void[4] throws "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3328056]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
    const-val ret[3328103]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3328105]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp" "type variable"
    val call_tmp[3328117]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3328123]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3328130]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3328154]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5509322]:Error[85511] "error variable" "temp"
      (5509324 'move' error[5509322] nil[32])
      (3328156 'move' call_tmp[3328154](3328159 call :[1751964] x[3327967] error[5509322]))
      val errorExists[7302440]:bool[19] "temp"
      (7302445 'move' errorExists[7302440](7302442 '!=' error[5509322] nil[32]))
      if errorExists[7302440]
      {
        (5509328 '=' error_out[5509319] error[5509322])
        gotoErrorHandlingReturn _end__toNumeric[3328185] _end__toNumeric[3328185]
      }
      const-val call_tmp[3328162]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      const-val ret_tmp[5584336]:(int(64),bool)[3040018] "temp"
      (3328167 call _build_tuple[3040124] call_tmp[3328154] 1 ret_tmp[5584336])
      (5584339 'move' call_tmp[3328162] ret_tmp[5584336])
      (3328170 'move' ret[3328103] call_tmp[3328162])
    }
    (3328177 'move' ret[3328056] ret[3328103])
    gotoReturn _end__toNumeric[3328185] _end__toNumeric[3328185]
    label _end__toNumeric[3328185]
    (5589070 '=' _retArg[5589068] ret[3328056])
    (5589072 return _void[46])
  }
  function _toBytes[198138](const  ref arg x[198141]:string[244], ref arg _retArg[5545392]:_ref((bytes,bool))[3092860]) : void[4] "fn returns via _retArg" "inline" "private" "resolved"
  {
    const-val ret[618564]:(bytes,bool)[3092705] "dead after last mention" "RVV" "temp"
    const-val call_tmp[853713]:bytes[232] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5541438]:bytes[232] "temp"
    (198147 call :[36857] x[198141] ret_tmp[5541438])
    (5541441 'move' call_tmp[853713] ret_tmp[5541438])
    const-val call_tmp[853718]:(bytes,bool)[3091924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584774]:(bytes,bool)[3091924] "temp"
    (198152 call _build_tuple[3091882] call_tmp[853713] 1 ret_tmp[5584774])
    (5584777 'move' call_tmp[853718] ret_tmp[5584774])
    const-val copy_ret_tmp[3328351]:(bytes,bool)[3091924] "dead after last mention" "no copy" "temp"
    (3328352 'move' copy_ret_tmp[3328351] call_tmp[853718])
    (618569 'move' ret[618564](3328354 call chpl__initCopy[3091999] copy_ret_tmp[3328351] 0))
    (5545394 '=' _retArg[5545392] ret[618564])
    (5610958 call chpl__autoDestroy[4185534] call_tmp[853718])
    (5610961 call chpl__autoDestroy[3885484] call_tmp[853713])
    (5545396 return _void[46])
  }
  function _toBytes[3091840](const in arg x[3091842]:real(64)[13], ref arg _retArg[5584768]:_ref((bytes,bool))[3092860]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3091844]:(bytes,bool)[3092705] "dead after last mention" "RVV" "temp"
    val call_tmp[3091852]:bytes[232] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3091860]:(bytes,bool)[3091924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584780]:(bytes,bool)[3091924] "temp"
    (3091865 call _build_tuple[3091882] b"" 0 ret_tmp[5584780])
    (5584783 'move' call_tmp[3091860] ret_tmp[5584780])
    const-val copy_ret_tmp[3092872]:(bytes,bool)[3091924] "dead after last mention" "no copy" "temp"
    (3092873 'move' copy_ret_tmp[3092872] call_tmp[3091860])
    (3091868 'move' ret[3091844](3092875 call chpl__initCopy[3091999] copy_ret_tmp[3092872] 0))
    (5584770 '=' _retArg[5584768] ret[3091844])
    (5630450 call chpl__autoDestroy[4185534] call_tmp[3091860])
    (5584772 return _void[46])
  }
  function _toBytes[3742244](const in arg x[3742246]:real(32)[91], ref arg _retArg[5593828]:_ref((bytes,bool))[3092860]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3742248]:(bytes,bool)[3092705] "dead after last mention" "RVV" "temp"
    val call_tmp[3742256]:bytes[232] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3742264]:(bytes,bool)[3091924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584786]:(bytes,bool)[3091924] "temp"
    (3742269 call _build_tuple[3091882] b"" 0 ret_tmp[5584786])
    (5584789 'move' call_tmp[3742264] ret_tmp[5584786])
    const-val copy_ret_tmp[3742287]:(bytes,bool)[3091924] "dead after last mention" "no copy" "temp"
    (3742288 'move' copy_ret_tmp[3742287] call_tmp[3742264])
    (3742272 'move' ret[3742248](3742290 call chpl__initCopy[3091999] copy_ret_tmp[3742287] 0))
    (5593830 '=' _retArg[5593828] ret[3742248])
    (5640881 call chpl__autoDestroy[4185534] call_tmp[3742264])
    (5593832 return _void[46])
  }
  function _toString[198175](const  ref arg x[198178]:string[244], ref arg _retArg[5545404]:_ref((string,bool))[3103970]) : void[4] "fn returns via _retArg" "inline" "private" "resolved"
  {
    const-val ret[618582]:(string,bool)[3103815] "dead after last mention" "RVV" "temp"
    const-val call_tmp[853733]:(string,bool)[3103715] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584867]:(string,bool)[3103715] "temp"
    (198186 call _build_tuple[3103673] x[198178] 1 ret_tmp[5584867])
    (5584870 'move' call_tmp[853733] ret_tmp[5584867])
    const-val copy_ret_tmp[3328606]:(string,bool)[3103715] "dead after last mention" "no copy" "temp"
    (3328607 'move' copy_ret_tmp[3328606] call_tmp[853733])
    (618587 'move' ret[618582](3328609 call chpl__initCopy[3103790] copy_ret_tmp[3328606] 0))
    (5545406 '=' _retArg[5545404] ret[618582])
    (5610964 call chpl__autoDestroy[4185816] call_tmp[853733])
    (5545408 return _void[46])
  }
  function _toString[3102652](const in arg x[3102654]:real(64)[13], ref arg _retArg[5584831]:_ref((string,bool))[3103970]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3102806]:(string,bool)[3103815] "dead after last mention" "RVV" "temp"
    val call_tmp[3102854]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3102860]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3102867]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3102876]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5584837]:string[244] "temp"
      (3102881 call :[3103356] x[3102654] ret_tmp[5584837])
      (5584840 'move' call_tmp[3102876] ret_tmp[5584837])
      const-val call_tmp[3102884]:(string,bool)[3103715] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5584873]:(string,bool)[3103715] "temp"
      (3102889 call _build_tuple[3103673] call_tmp[3102876] 1 ret_tmp[5584873])
      (5584876 'move' call_tmp[3102884] ret_tmp[5584873])
      const-val copy_ret_tmp[3103982]:(string,bool)[3103715] "dead after last mention" "no copy" "temp"
      (3103983 'move' copy_ret_tmp[3103982] call_tmp[3102884])
      (3102892 'move' ret[3102806](3103985 call chpl__initCopy[3103790] copy_ret_tmp[3103982] 0))
      (5630498 call chpl__autoDestroy[4185816] call_tmp[3102884])
      (5630501 call chpl__autoDestroy[3262688] call_tmp[3102876])
      gotoReturn _end__toString[3102921] _end__toString[3102921]
    }
    label _end__toString[3102921]
    (5584833 '=' _retArg[5584831] ret[3102806])
    (5584835 return _void[46])
  }
  function _toString[3742341](const in arg x[3742343]:real(32)[91], ref arg _retArg[5593840]:_ref((string,bool))[3103970]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3742495]:(string,bool)[3103815] "dead after last mention" "RVV" "temp"
    val call_tmp[3742543]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3742549]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3742556]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3742565]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5593846]:string[244] "temp"
      (3742570 call :[3743045] x[3742343] ret_tmp[5593846])
      (5593849 'move' call_tmp[3742565] ret_tmp[5593846])
      const-val call_tmp[3742573]:(string,bool)[3103715] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5584879]:(string,bool)[3103715] "temp"
      (3742578 call _build_tuple[3103673] call_tmp[3742565] 1 ret_tmp[5584879])
      (5584882 'move' call_tmp[3742573] ret_tmp[5584879])
      const-val copy_ret_tmp[3743142]:(string,bool)[3103715] "dead after last mention" "no copy" "temp"
      (3743143 'move' copy_ret_tmp[3743142] call_tmp[3742573])
      (3742581 'move' ret[3742495](3743145 call chpl__initCopy[3103790] copy_ret_tmp[3743142] 0))
      (5640884 call chpl__autoDestroy[4185816] call_tmp[3742573])
      (5640887 call chpl__autoDestroy[3262688] call_tmp[3742565])
      gotoReturn _end__toString[3742610] _end__toString[3742610]
    }
    label _end__toString[3742610]
    (5593842 '=' _retArg[5593840] ret[3742495])
    (5593844 return _void[46])
  }
  function _toChar[3322847](const  ref arg x[3322849]:string[244], ref arg _retArg[5588996]:_ref((int(32),bool))[3041067]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3322862]:(int(32),bool)[3040996] "dead after last mention" "RVV" "temp"
    val chr[3322967]:int(32)[66] "dead at end of block" "insert auto destroy"
    val call_tmp[3322969]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3323086 'move' chr[3322967] 0)
    val nbytes[3322980]:int(32)[66] "dead at end of block" "insert auto destroy"
    (3323089 'move' nbytes[3322980] 0)
    const-val call_tmp[3322986]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5538844]:string[244] "temp"
    (3322994 call localize[23546] x[3322849] ret_tmp[5538844])
    (5538847 'move' call_tmp[3322986] ret_tmp[5538844])
    const-val local_x[3322995]:string[244] "dead at end of block" "insert auto destroy"
    (3322997 'move' local_x[3322995] call_tmp[3322986])
    val call_tmp[3323001]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
    (3323003 'move' call_tmp[3323001](3323009 call c_str[51169] local_x[3322995]))
    const-val call_tmp[3323010]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3323012 'move' call_tmp[3323010](3323015 call numBytes[23502] local_x[3322995]))
    const-val call_tmp[3323018]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3323020 'move' call_tmp[3323018] call_tmp[3323010])
    const-val _return_tmp_[5468807]:errorCode[12828] "dead after last mention" "temp"
    (5468809 'move' _return_tmp_[5468807](3323027 call qio_decode_char_buf[167528] chr[3322967] nbytes[3322980] call_tmp[3323001] call_tmp[3323018]))
    const-val call_tmp[3323036]:(int(32),bool)[3040996] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584402]:(int(32),bool)[3040996] "temp"
    (3323041 call _build_tuple[3040954] chr[3322967] 1 ret_tmp[5584402])
    (5584405 'move' call_tmp[3323036] ret_tmp[5584402])
    (3323044 'move' ret[3322862] call_tmp[3323036])
    (5634760 call chpl__autoDestroy[3262688] local_x[3322995])
    gotoReturn _end__toChar[3323052] _end__toChar[3323052]
    label _end__toChar[3323052]
    (5588998 '=' _retArg[5588996] ret[3322862])
    (5589000 return _void[46])
  }
  function _toChar[3040821](const in arg x[3040823]:real(64)[13], ref arg _retArg[5584390]:_ref((int(32),bool))[3041067]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3040906]:(int(32),bool)[3040996] "dead after last mention" "RVV" "temp"
    val call_tmp[3040922]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3040929]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3040937]:(int(32),bool)[3040996] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584396]:(int(32),bool)[3040996] "temp"
    (3040942 call _build_tuple[3040954] 0 0 ret_tmp[5584396])
    (5584399 'move' call_tmp[3040937] ret_tmp[5584396])
    (3040945 'move' ret[3040906] call_tmp[3040937])
    (5584392 '=' _retArg[5584390] ret[3040906])
    (5584394 return _void[46])
  }
  function _toChar[3731901](const in arg x[3731903]:real(32)[91], ref arg _retArg[5593687]:_ref((int(32),bool))[3041067]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    const-val ret[3731986]:(int(32),bool)[3040996] "dead after last mention" "RVV" "temp"
    val call_tmp[3732002]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3732009]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3732017]:(int(32),bool)[3040996] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5584408]:(int(32),bool)[3040996] "temp"
    (3732022 call _build_tuple[3040954] 0 0 ret_tmp[5584408])
    (5584411 'move' call_tmp[3732017] ret_tmp[5584408])
    (3732025 'move' ret[3731986] call_tmp[3732017])
    (5593689 '=' _retArg[5593687] ret[3731986])
    (5593691 return _void[46])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._format_reader[3037225](const  ref arg this[3037231]:_ref(fileWriter(false,defaultSerializer))[1838958], const  ref arg fmtStr[3037233]:string[244], ref arg cur[3037237]:_ref(uint(64))[1465718], const in arg len[3037241]:uint(64)[86], ref arg error[3037243]:_ref(errorCode)[1499037], ref arg conv[3037245]:_ref(qio_conv_t)[1579597], ref arg gotConv[3037247]:_ref(bool)[1466299], ref arg style[3037249]:_ref(iostyleInternal)[1538907]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[3037257]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3037547]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3037551 'move' coerce_tmp[3037547](3037549 'deref' error[3037243]))
    (3037259 'move' call_tmp[3037257](3037262 call ![13178] coerce_tmp[3037547]))
    const-val call_tmp[3037264]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3037266 'move' call_tmp[3037264] call_tmp[3037257])
    if call_tmp[3037264]
    {
      const-ref fmt[3037273]:_ref(c_ptrConst(int(8)))[1466342] "dead at end of block" "const" "ref var"
      const-val call_tmp[3037277]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5538820]:string[244] "temp"
      (3037285 call localize[23546] fmtStr[3037233] ret_tmp[5538820])
      (5538823 'move' call_tmp[3037277] ret_tmp[5538820])
      val call_tmp[3037286]:c_ptrConst(int(8))[1466333] "dead at end of block" "expr temp" "maybe param" "temp"
      (3037288 'move' call_tmp[3037286](3037294 call c_str[51169] call_tmp[3037277]))
      (3037295 'move' fmt[3037273](3037297 'addr of' call_tmp[3037286]))
      {
        val tmp[3037301]:bool[19] "dead after last mention" "temp"
        const-val call_tmp[3037303]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3037556]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037560 'move' coerce_tmp[3037556](3037558 'deref' cur[3037237]))
        (3037305 'move' call_tmp[3037303](3037308 call <[1797442] coerce_tmp[3037556] len[3037241]))
        (3037311 'move' tmp[3037301] call_tmp[3037303])
        WhileDo[3037316] hazard
        {
          {
            (3037320 call =[52153] gotConv[3037247] 0)
            const-val call_tmp[3037324]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3037564]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037568 'move' coerce_tmp[3037564](3037566 'deref' error[3037243]))
            (3037326 'move' call_tmp[3037324](3037329 call _cond_test[1539178] coerce_tmp[3037564]))
            if call_tmp[3037324]
            {
              break _breakLabel[3037536] _breakLabel[3037536]
            }
            val end[3037336]:uint(64)[86] "dead at end of block" "insert auto destroy"
            val call_tmp[3037338]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (3037731 'move' end[3037336] 0)
            const-val call_tmp[3037349]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[3037582]:c_ptrConst(int(8))[1466333] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037586 'move' coerce_tmp[3037582](3037584 'deref' fmt[3037273]))
            const-val coerce_tmp[3037588]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037592 'move' coerce_tmp[3037588](3037590 'deref' cur[3037237]))
            const-val coerce_tmp[3037594]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037600 'move' coerce_tmp[3037594](3037596 'cast' int(32)[66] 0))
            (3037351 'move' call_tmp[3037349](3037354 call qio_conv_parse[168112] coerce_tmp[3037582] coerce_tmp[3037588] end[3037336] coerce_tmp[3037594] conv[3037245] style[3037249]))
            (3037362 call =[13310] error[3037243] call_tmp[3037349])
            const-val call_tmp[3037368]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3037610]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037614 'move' coerce_tmp[3037610](3037612 'deref' error[3037243]))
            (3037370 'move' call_tmp[3037368](3037373 call _cond_test[1539178] coerce_tmp[3037610]))
            if call_tmp[3037368]
            {
            }
            const-val call_tmp[3037378]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
            (3037380 'move' call_tmp[3037378] end[3037336])
            (3037387 call =[52309] cur[3037237] call_tmp[3037378])
            const-val call_tmp[3037392]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3037619]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037623 'move' coerce_tmp[3037619](3037621 'deref' error[3037243]))
            (3037394 'move' call_tmp[3037392](3037397 call _cond_test[1539178] coerce_tmp[3037619]))
            if call_tmp[3037392]
            {
              break _breakLabel[3037536] _breakLabel[3037536]
            }
            const-ref call_tmp[3037404]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
            (3037406 'move' call_tmp[3037404](3037409 call argType[1152557] conv[3037245]))
            const-val call_tmp[3037412]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3037627]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037631 'move' coerce_tmp[3037627](3037629 'deref' call_tmp[3037404]))
            const-val coerce_tmp[3037633]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3037639 'move' coerce_tmp[3037633](3037635 'cast' int(32)[66] coerce_tmp[3037627]))
            (3037414 'move' call_tmp[3037412](3037417 call ==[52725] coerce_tmp[3037633] QIO_CONV_ARG_TYPE_NONE_LITERAL[168048]))
            const-val call_tmp[3037420]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3037422 'move' call_tmp[3037420] call_tmp[3037412])
            if call_tmp[3037420]
            {
              const-ref call_tmp[3037429]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
              (3037431 'move' call_tmp[3037429](3037434 call _channel_internal[1840773] this[3037231]))
              const-ref call_tmp[3037437]:_ref(c_ptr(void))[1465623] "dead after last mention" "maybe param" "temp"
              (3037439 'move' call_tmp[3037437](3037442 call literal[1152635] conv[3037245]))
              const-ref call_tmp[3037445]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
              (3037447 'move' call_tmp[3037445](3037450 call literal_length[1152609] conv[3037245]))
              const-val call_tmp[3037453]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val cast_tmp[3037655]:uint(32)[81] "dead after last mention" "const" "temp"
              (3037658 'move' cast_tmp[3037655](3037656 'deref' call_tmp[3037445]))
              (3037455 'move' call_tmp[3037453](3037458 'cast' int(64)[10] cast_tmp[3037655]))
              const-val call_tmp[3037461]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3037670]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3037676 'move' coerce_tmp[3037670](3037672 'cast' int(32)[66] 0))
              val coerce_tmp[3037678]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3037682 'move' coerce_tmp[3037678](3037680 'deref' call_tmp[3037429]))
              val coerce_tmp[3037684]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3037688 'move' coerce_tmp[3037684](3037686 'deref' call_tmp[3037437]))
              (3037463 'move' call_tmp[3037461](3037466 call qio_channel_print_literal_2[167838] coerce_tmp[3037670] coerce_tmp[3037678] coerce_tmp[3037684] call_tmp[3037453]))
              (3037472 call =[13310] error[3037243] call_tmp[3037461])
            }
            {
              const-ref call_tmp[3037476]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
              (3037478 'move' call_tmp[3037476](3037481 call argType[1152557] conv[3037245]))
              const-val call_tmp[3037484]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3037699]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3037703 'move' coerce_tmp[3037699](3037701 'deref' call_tmp[3037476]))
              const-val coerce_tmp[3037705]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3037711 'move' coerce_tmp[3037705](3037707 'cast' int(32)[66] coerce_tmp[3037699]))
              (3037486 'move' call_tmp[3037484](3037489 call ==[52725] coerce_tmp[3037705] QIO_CONV_ARG_TYPE_NONE_REGEX_LITERAL[168043]))
              const-val call_tmp[3037492]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3037494 'move' call_tmp[3037492] call_tmp[3037484])
              if call_tmp[3037492]
              {
                const-val call_tmp[3037501]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3037503 'move' call_tmp[3037501](3037506 call qio_format_error_write_regex[168174]))
                (3037508 call =[13310] error[3037243] call_tmp[3037501])
              }
              {
                (3037513 call =[52153] gotConv[3037247] 1)
                break _breakLabel[3037536] _breakLabel[3037536]
              }
            }
          }
          label _continueLabel[3037521]
          const-val call_tmp[3037523]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3037723]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3037727 'move' coerce_tmp[3037723](3037725 'deref' cur[3037237]))
          (3037525 'move' call_tmp[3037523](3037528 call <[1797442] coerce_tmp[3037723] len[3037241]))
          (3037531 'move' tmp[3037301] call_tmp[3037523])
          tmp[3037301]
        }
        label _breakLabel[3037536]
      }
      (5630245 call chpl__autoDestroy[3262688] call_tmp[3037277])
    }
    (3037539 return _void[46])
  }
  function _conv_helper[200155](const  ref arg error[200158]:_ref(errorCode)[1499037], ref arg conv[200162]:_ref(qio_conv_t)[1579597], const  ref arg gotConv[200166]:_ref(bool)[1466299], ref arg j[200170]:_ref(int(64))[1465689], const in arg argType[200176]:c_ptr(int(32))[3035159], const in arg argTypeLen[200180]:int(64)[10]) : void[4] "private" "resolved" "no return value for void"
  {
    (200215 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
    const-val call_tmp[855536]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3037759]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3037763 'move' coerce_tmp[3037759](3037761 'deref' error[200158]))
    (855539 'move' call_tmp[855536](200219 call _cond_test[1539178] coerce_tmp[3037759]))
    if call_tmp[855536]
    {
      gotoReturn _end__conv_helper[618740] _end__conv_helper[618740]
    }
    const-val call_tmp[855541]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[3037766]:bool[19] "dead after last mention" "const" "temp"
    (3037768 'move' tmp[3037766](3037770 'deref' gotConv[200166]))
    (855544 'move' call_tmp[855541] tmp[3037766])
    if call_tmp[855541]
    {
      const-ref call_tmp[855548]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
      (855551 'move' call_tmp[855548](200242 call preArg1[1152479] conv[200162]))
      const-val call_tmp[855553]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3037773]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037777 'move' coerce_tmp[3037773](3037775 'deref' call_tmp[855548]))
      const-val coerce_tmp[3037779]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037785 'move' coerce_tmp[3037779](3037781 'cast' int(32)[66] coerce_tmp[3037773]))
      (855556 'move' call_tmp[855553](200239 call !=[53199] coerce_tmp[3037779] QIO_CONV_UNK[167958]))
      const-val call_tmp[855558]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (855561 'move' call_tmp[855558] call_tmp[855553])
      if call_tmp[855558]
      {
        ref call_tmp[855563]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3037858]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037862 'move' coerce_tmp[3037858](3037860 'deref' j[200170]))
        (855566 'move' call_tmp[855563](200229 call this[3037790] argType[200176] coerce_tmp[3037858]))
        const-ref call_tmp[855570]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
        (855573 'move' call_tmp[855570](200232 call preArg1[1152479] conv[200162]))
        const-val coerce_tmp[3037923]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037927 'move' coerce_tmp[3037923](3037925 'deref' call_tmp[855570]))
        const-val coerce_tmp[3037929]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037935 'move' coerce_tmp[3037929](3037931 'cast' int(32)[66] coerce_tmp[3037923]))
        (200226 call =[52209] call_tmp[855563] coerce_tmp[3037929])
        (200235 call +=[72190] j[200170] 1)
      }
      (200251 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
      const-ref call_tmp[855577]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
      (855580 'move' call_tmp[855577](200269 call preArg2[1152505] conv[200162]))
      const-val call_tmp[855582]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3037941]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037945 'move' coerce_tmp[3037941](3037943 'deref' call_tmp[855577]))
      const-val coerce_tmp[3037947]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037953 'move' coerce_tmp[3037947](3037949 'cast' int(32)[66] coerce_tmp[3037941]))
      (855585 'move' call_tmp[855582](200266 call !=[53199] coerce_tmp[3037947] QIO_CONV_UNK[167958]))
      const-val call_tmp[855587]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (855590 'move' call_tmp[855587] call_tmp[855582])
      if call_tmp[855587]
      {
        ref call_tmp[855592]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3037958]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037962 'move' coerce_tmp[3037958](3037960 'deref' j[200170]))
        (855595 'move' call_tmp[855592](200256 call this[3037790] argType[200176] coerce_tmp[3037958]))
        const-ref call_tmp[855599]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
        (855602 'move' call_tmp[855599](200259 call preArg2[1152505] conv[200162]))
        const-val coerce_tmp[3037966]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037970 'move' coerce_tmp[3037966](3037968 'deref' call_tmp[855599]))
        const-val coerce_tmp[3037972]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037978 'move' coerce_tmp[3037972](3037974 'cast' int(32)[66] coerce_tmp[3037966]))
        (200253 call =[52209] call_tmp[855592] coerce_tmp[3037972])
        (200262 call +=[72190] j[200170] 1)
      }
      (200278 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
      const-ref call_tmp[855606]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
      (855609 'move' call_tmp[855606](200296 call preArg3[1152531] conv[200162]))
      const-val call_tmp[855611]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3037984]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037988 'move' coerce_tmp[3037984](3037986 'deref' call_tmp[855606]))
      const-val coerce_tmp[3037990]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037996 'move' coerce_tmp[3037990](3037992 'cast' int(32)[66] coerce_tmp[3037984]))
      (855614 'move' call_tmp[855611](200293 call !=[53199] coerce_tmp[3037990] QIO_CONV_UNK[167958]))
      const-val call_tmp[855616]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (855619 'move' call_tmp[855616] call_tmp[855611])
      if call_tmp[855616]
      {
        ref call_tmp[855621]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3038001]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038005 'move' coerce_tmp[3038001](3038003 'deref' j[200170]))
        (855624 'move' call_tmp[855621](200283 call this[3037790] argType[200176] coerce_tmp[3038001]))
        const-ref call_tmp[855628]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
        (855631 'move' call_tmp[855628](200286 call preArg3[1152531] conv[200162]))
        const-val coerce_tmp[3038009]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038013 'move' coerce_tmp[3038009](3038011 'deref' call_tmp[855628]))
        const-val coerce_tmp[3038015]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038021 'move' coerce_tmp[3038015](3038017 'cast' int(32)[66] coerce_tmp[3038009]))
        (200280 call =[52209] call_tmp[855621] coerce_tmp[3038015])
        (200289 call +=[72190] j[200170] 1)
      }
      (200305 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
      const-ref call_tmp[855635]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
      (855638 'move' call_tmp[855635](200334 call argType[1152557] conv[200162]))
      const-val call_tmp[855640]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3038027]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3038031 'move' coerce_tmp[3038027](3038029 'deref' call_tmp[855635]))
      const-val coerce_tmp[3038033]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3038039 'move' coerce_tmp[3038033](3038035 'cast' int(32)[66] coerce_tmp[3038027]))
      (855643 'move' call_tmp[855640](200331 call !=[53199] coerce_tmp[3038033] QIO_CONV_UNK[167958]))
      const-val call_tmp[855645]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (855648 'move' call_tmp[855645] call_tmp[855640])
      if call_tmp[855645]
      {
        const-ref call_tmp[855650]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3038044]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038048 'move' coerce_tmp[3038044](3038046 'deref' j[200170]))
        (855653 'move' call_tmp[855650](200320 call this[3037790] argType[200176] coerce_tmp[3038044]))
        const-val call_tmp[855655]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3038051]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038055 'move' coerce_tmp[3038051](3038053 'deref' call_tmp[855650]))
        (855658 'move' call_tmp[855655](200317 call ==[52725] coerce_tmp[3038051] QIO_CONV_UNK[167958]))
        const-val call_tmp[855660]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (855663 'move' call_tmp[855660] call_tmp[855655])
        if call_tmp[855660]
        {
          ref call_tmp[855665]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3038060]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3038064 'move' coerce_tmp[3038060](3038062 'deref' j[200170]))
          (855668 'move' call_tmp[855665](200311 call this[3037790] argType[200176] coerce_tmp[3038060]))
          const-ref call_tmp[855672]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
          (855675 'move' call_tmp[855672](200314 call argType[1152557] conv[200162]))
          const-val coerce_tmp[3038068]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3038072 'move' coerce_tmp[3038068](3038070 'deref' call_tmp[855672]))
          const-val coerce_tmp[3038074]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3038080 'move' coerce_tmp[3038074](3038076 'cast' int(32)[66] coerce_tmp[3038068]))
          (200308 call =[52209] call_tmp[855665] coerce_tmp[3038074])
        }
        (200327 call +=[72190] j[200170] 1)
      }
    }
    label _end__conv_helper[618740]
    (618742 return _void[46])
  }
  function _conv_sethandler[3038087](ref arg error[3038089]:_ref(errorCode)[1499037], const in arg argtypei[3038093]:int(32)[66], ref arg style[3038095]:_ref(iostyleInternal)[1538907], const in arg i[3038097]:int(64)[10], const in arg argi[3038099]:real(64)[13], const in arg isReadf[3038101]:bool[19], ref arg error_out[5503523]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[3038105]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3038113]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3039434]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3039438 'move' coerce_tmp[3039434](3039436 'deref' error[3038089]))
    (3038115 'move' call_tmp[3038113](3038118 call _cond_test[1539178] coerce_tmp[3039434]))
    if call_tmp[3038113]
    {
      (3038122 'move' ret[3038105] 0)
      gotoReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
    }
    {
      const-val tmp[3038131]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (3038133 'move' tmp[3038131] argtypei[3038093])
      const-val call_tmp[3038136]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3038138 'move' call_tmp[3038136](3038141 call ==[52725] tmp[3038131] QIO_CONV_SET_MIN_WIDTH_COLS[168053]))
      const-val call_tmp[3038144]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3038146 'move' call_tmp[3038144] call_tmp[3038136])
      if call_tmp[3038144]
      {
        const-val call_tmp[3038153]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        val error[5503526]:Error[85511] "error variable" "temp"
        (5503528 'move' error[5503526] nil[32])
        const-val ret_tmp[5584258]:(int(64),bool)[3040018] "temp"
        (3038158 call _toIntegral[3039465] argi[3038099] error[5503526] ret_tmp[5584258])
        (5584261 'move' call_tmp[3038153] ret_tmp[5584258])
        val errorExists[7299752]:bool[19] "temp"
        (7299757 'move' errorExists[7299752](7299754 '!=' error[5503526] nil[32]))
        if errorExists[7299752]
        {
          (5503532 '=' error_out[5503523] error[5503526])
          gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
        }
        const-val tmp[3038160]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
        (3038162 'move' tmp[3038160] call_tmp[3038153])
        1
        const-ref call_tmp[3038170]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3038172 'move' call_tmp[3038170](3040503 '.' tmp[3038160] x0[3040014]))
        const-val t[3038177]:int(64)[10] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3040509]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3040513 'move' coerce_tmp[3040509](3040511 'deref' call_tmp[3038170]))
        (5630248 '=' t[3038177] coerce_tmp[3040509])
        (3038179 'noop')
        const-ref call_tmp[3038182]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
        (3038184 'move' call_tmp[3038182](3040518 '.' tmp[3038160] x1[3040016]))
        const-val ok[3038189]:bool[19] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3040524]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3040528 'move' coerce_tmp[3040524](3040526 'deref' call_tmp[3038182]))
        (5630251 '=' ok[3038189] coerce_tmp[3040524])
        (3038191 'noop')
        const-val call_tmp[3038195]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3038197 'move' call_tmp[3038195](3038200 call ![63126] ok[3038189]))
        const-val call_tmp[3038202]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3038204 'move' call_tmp[3038202] call_tmp[3038195])
        if call_tmp[3038202]
        {
          const-val call_tmp[3038211]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3038213 'move' call_tmp[3038211](3038216 call qio_format_error_arg_mismatch[168158] i[3038097]))
          (3038219 call =[13310] error[3038089] call_tmp[3038211])
        }
        {
          ref call_tmp[3038223]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
          (3038225 'move' call_tmp[3038223](3038228 call min_width_columns[1131239] style[3038095]))
          val call_tmp[3038231]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3038238]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (3038240 'move' call_tmp[3038238](3038243 call :[3040542] t[3038177]))
          (3038247 call =[52289] call_tmp[3038223] call_tmp[3038238])
        }
        (5630255 call chpl__autoDestroy[4184737] tmp[3038160])
      }
      {
        const-val call_tmp[3038254]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3038256 'move' call_tmp[3038254](3038259 call ==[52725] tmp[3038131] QIO_CONV_SET_MAX_WIDTH_COLS[168058]))
        const-val call_tmp[3038262]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3038264 'move' call_tmp[3038262] call_tmp[3038254])
        if call_tmp[3038262]
        {
          const-val call_tmp[3038271]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          val error[5503541]:Error[85511] "error variable" "temp"
          (5503543 'move' error[5503541] nil[32])
          const-val ret_tmp[5584264]:(int(64),bool)[3040018] "temp"
          (3038276 call _toIntegral[3039465] argi[3038099] error[5503541] ret_tmp[5584264])
          (5584267 'move' call_tmp[3038271] ret_tmp[5584264])
          val errorExists[7299760]:bool[19] "temp"
          (7299765 'move' errorExists[7299760](7299762 '!=' error[5503541] nil[32]))
          if errorExists[7299760]
          {
            (5503547 '=' error_out[5503523] error[5503541])
            gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
          }
          const-val tmp[3038278]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
          (3038280 'move' tmp[3038278] call_tmp[3038271])
          1
          const-ref call_tmp[3038288]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3038290 'move' call_tmp[3038288](3040584 '.' tmp[3038278] x0[3040014]))
          const-val t[3038295]:int(64)[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3040590]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3040594 'move' coerce_tmp[3040590](3040592 'deref' call_tmp[3038288]))
          (3038297 'move' t[3038295](3040587 call chpl__initCopy[1473915] coerce_tmp[3040590] 0))
          const-ref call_tmp[3038300]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
          (3038302 'move' call_tmp[3038300](3040599 '.' tmp[3038278] x1[3040016]))
          const-val ok[3038307]:bool[19] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3040605]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3040609 'move' coerce_tmp[3040605](3040607 'deref' call_tmp[3038300]))
          (3038309 'move' ok[3038307](3040602 call chpl__initCopy[1757859] coerce_tmp[3040605] 0))
          const-val call_tmp[3038313]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3038315 'move' call_tmp[3038313](3038318 call ![63126] ok[3038307]))
          const-val call_tmp[3038320]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3038322 'move' call_tmp[3038320] call_tmp[3038313])
          if call_tmp[3038320]
          {
            const-val call_tmp[3038329]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3038331 'move' call_tmp[3038329](3038334 call qio_format_error_arg_mismatch[168158] i[3038097]))
            (3038337 call =[13310] error[3038089] call_tmp[3038329])
          }
          {
            ref call_tmp[3038341]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
            (3038343 'move' call_tmp[3038341](3038346 call max_width_columns[1131265] style[3038095]))
            val call_tmp[3038349]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[3038356]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (3038358 'move' call_tmp[3038356](3038361 call :[3040542] t[3038295]))
            (3038365 call =[52289] call_tmp[3038341] call_tmp[3038356])
          }
          (5630259 call chpl__autoDestroy[4184737] tmp[3038278])
        }
        {
          const-val call_tmp[3038372]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3038374 'move' call_tmp[3038372](3038377 call ==[52725] tmp[3038131] QIO_CONV_SET_MAX_WIDTH_CHARS[168063]))
          const-val call_tmp[3038380]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3038382 'move' call_tmp[3038380] call_tmp[3038372])
          if call_tmp[3038380]
          {
            const-val call_tmp[3038389]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
            val error[5503556]:Error[85511] "error variable" "temp"
            (5503558 'move' error[5503556] nil[32])
            const-val ret_tmp[5584270]:(int(64),bool)[3040018] "temp"
            (3038394 call _toIntegral[3039465] argi[3038099] error[5503556] ret_tmp[5584270])
            (5584273 'move' call_tmp[3038389] ret_tmp[5584270])
            val errorExists[7299768]:bool[19] "temp"
            (7299773 'move' errorExists[7299768](7299770 '!=' error[5503556] nil[32]))
            if errorExists[7299768]
            {
              (5503562 '=' error_out[5503523] error[5503556])
              gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
            }
            const-val tmp[3038396]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
            (3038398 'move' tmp[3038396] call_tmp[3038389])
            1
            const-ref call_tmp[3038406]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
            (3038408 'move' call_tmp[3038406](3040635 '.' tmp[3038396] x0[3040014]))
            const-val t[3038413]:int(64)[10] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3040641]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3040645 'move' coerce_tmp[3040641](3040643 'deref' call_tmp[3038406]))
            (3038415 'move' t[3038413](3040638 call chpl__initCopy[1473915] coerce_tmp[3040641] 0))
            const-ref call_tmp[3038418]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
            (3038420 'move' call_tmp[3038418](3040650 '.' tmp[3038396] x1[3040016]))
            const-val ok[3038425]:bool[19] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3040656]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3040660 'move' coerce_tmp[3040656](3040658 'deref' call_tmp[3038418]))
            (3038427 'move' ok[3038425](3040653 call chpl__initCopy[1757859] coerce_tmp[3040656] 0))
            const-val call_tmp[3038431]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3038433 'move' call_tmp[3038431](3038436 call ![63126] ok[3038425]))
            const-val call_tmp[3038438]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3038440 'move' call_tmp[3038438] call_tmp[3038431])
            if call_tmp[3038438]
            {
              const-val call_tmp[3038447]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3038449 'move' call_tmp[3038447](3038452 call qio_format_error_arg_mismatch[168158] i[3038097]))
              (3038455 call =[13310] error[3038089] call_tmp[3038447])
            }
            {
              ref call_tmp[3038459]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
              (3038461 'move' call_tmp[3038459](3038464 call max_width_characters[1131291] style[3038095]))
              val call_tmp[3038467]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[3038474]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
              (3038476 'move' call_tmp[3038474](3038479 call :[3040542] t[3038413]))
              (3038483 call =[52289] call_tmp[3038459] call_tmp[3038474])
            }
            (5630263 call chpl__autoDestroy[4184737] tmp[3038396])
          }
          {
            const-val call_tmp[3038490]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3038492 'move' call_tmp[3038490](3038495 call ==[52725] tmp[3038131] QIO_CONV_SET_MAX_WIDTH_BYTES[168068]))
            const-val call_tmp[3038498]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3038500 'move' call_tmp[3038498] call_tmp[3038490])
            if call_tmp[3038498]
            {
              const-val call_tmp[3038507]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
              val error[5503571]:Error[85511] "error variable" "temp"
              (5503573 'move' error[5503571] nil[32])
              const-val ret_tmp[5584276]:(int(64),bool)[3040018] "temp"
              (3038512 call _toIntegral[3039465] argi[3038099] error[5503571] ret_tmp[5584276])
              (5584279 'move' call_tmp[3038507] ret_tmp[5584276])
              val errorExists[7299776]:bool[19] "temp"
              (7299781 'move' errorExists[7299776](7299778 '!=' error[5503571] nil[32]))
              if errorExists[7299776]
              {
                (5503577 '=' error_out[5503523] error[5503571])
                gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
              }
              const-val tmp[3038514]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
              (3038516 'move' tmp[3038514] call_tmp[3038507])
              1
              const-ref call_tmp[3038524]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3038526 'move' call_tmp[3038524](3040686 '.' tmp[3038514] x0[3040014]))
              const-val t[3038531]:int(64)[10] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3040692]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3040696 'move' coerce_tmp[3040692](3040694 'deref' call_tmp[3038524]))
              (3038533 'move' t[3038531](3040689 call chpl__initCopy[1473915] coerce_tmp[3040692] 0))
              const-ref call_tmp[3038536]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3038538 'move' call_tmp[3038536](3040701 '.' tmp[3038514] x1[3040016]))
              const-val ok[3038543]:bool[19] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3040707]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3040711 'move' coerce_tmp[3040707](3040709 'deref' call_tmp[3038536]))
              (3038545 'move' ok[3038543](3040704 call chpl__initCopy[1757859] coerce_tmp[3040707] 0))
              const-val call_tmp[3038549]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3038551 'move' call_tmp[3038549](3038554 call ![63126] ok[3038543]))
              const-val call_tmp[3038556]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3038558 'move' call_tmp[3038556] call_tmp[3038549])
              if call_tmp[3038556]
              {
                const-val call_tmp[3038565]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3038567 'move' call_tmp[3038565](3038570 call qio_format_error_arg_mismatch[168158] i[3038097]))
                (3038573 call =[13310] error[3038089] call_tmp[3038565])
              }
              {
                ref call_tmp[3038577]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                (3038579 'move' call_tmp[3038577](3038582 call max_width_bytes[1131317] style[3038095]))
                val call_tmp[3038585]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[3038592]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
                (3038594 'move' call_tmp[3038592](3038597 call :[3040542] t[3038531]))
                (3038601 call =[52289] call_tmp[3038577] call_tmp[3038592])
              }
              (5630267 call chpl__autoDestroy[4184737] tmp[3038514])
            }
            {
              const-val call_tmp[3038608]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3038610 'move' call_tmp[3038608](3038613 call ==[52725] tmp[3038131] QIO_CONV_SET_PRECISION[168073]))
              const-val call_tmp[3038616]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3038618 'move' call_tmp[3038616] call_tmp[3038608])
              if call_tmp[3038616]
              {
                const-val call_tmp[3038625]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                val error[5503586]:Error[85511] "error variable" "temp"
                (5503588 'move' error[5503586] nil[32])
                const-val ret_tmp[5584282]:(int(64),bool)[3040018] "temp"
                (3038630 call _toIntegral[3039465] argi[3038099] error[5503586] ret_tmp[5584282])
                (5584285 'move' call_tmp[3038625] ret_tmp[5584282])
                val errorExists[7299784]:bool[19] "temp"
                (7299789 'move' errorExists[7299784](7299786 '!=' error[5503586] nil[32]))
                if errorExists[7299784]
                {
                  (5503592 '=' error_out[5503523] error[5503586])
                  gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
                }
                const-val tmp[3038632]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
                (3038634 'move' tmp[3038632] call_tmp[3038625])
                1
                const-ref call_tmp[3038642]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3038644 'move' call_tmp[3038642](3040737 '.' tmp[3038632] x0[3040014]))
                const-val t[3038649]:int(64)[10] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3040743]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3040747 'move' coerce_tmp[3040743](3040745 'deref' call_tmp[3038642]))
                (3038651 'move' t[3038649](3040740 call chpl__initCopy[1473915] coerce_tmp[3040743] 0))
                const-ref call_tmp[3038654]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                (3038656 'move' call_tmp[3038654](3040752 '.' tmp[3038632] x1[3040016]))
                const-val ok[3038661]:bool[19] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3040758]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3040762 'move' coerce_tmp[3040758](3040760 'deref' call_tmp[3038654]))
                (3038663 'move' ok[3038661](3040755 call chpl__initCopy[1757859] coerce_tmp[3040758] 0))
                const-val call_tmp[3038667]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3038669 'move' call_tmp[3038667](3038672 call ![63126] ok[3038661]))
                const-val call_tmp[3038674]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3038676 'move' call_tmp[3038674] call_tmp[3038667])
                if call_tmp[3038674]
                {
                  const-val call_tmp[3038683]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3038685 'move' call_tmp[3038683](3038688 call qio_format_error_arg_mismatch[168158] i[3038097]))
                  (3038691 call =[13310] error[3038089] call_tmp[3038683])
                }
                {
                  ref call_tmp[3038695]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3038697 'move' call_tmp[3038695](3038700 call precision[1131865] style[3038095]))
                  val call_tmp[3038703]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[3038710]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3038712 'move' call_tmp[3038710](3038715 call :[1513418] t[3038649]))
                  (3038719 call =[52209] call_tmp[3038695] call_tmp[3038710])
                }
                (5630271 call chpl__autoDestroy[4184737] tmp[3038632])
              }
              {
                const-val call_tmp[3038726]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3038728 'move' call_tmp[3038726](3038731 call ==[52725] tmp[3038131] QIO_CONV_SET_STRINGSTART[168088]))
                const-val call_tmp[3038734]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3038736 'move' call_tmp[3038734] call_tmp[3038726])
                if call_tmp[3038734]
                {
                  const-val call_tmp[3038743]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                  const-val ret_tmp[5584366]:(int(32),bool)[3040996] "temp"
                  (3038748 call _toChar[3040821] argi[3038099] ret_tmp[5584366])
                  (5584369 'move' call_tmp[3038743] ret_tmp[5584366])
                  const-val tmp[3038750]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                  (3038752 'move' tmp[3038750] call_tmp[3038743])
                  1
                  const-ref call_tmp[3038760]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3038762 'move' call_tmp[3038760](3041382 '.' tmp[3038750] x0[3040992]))
                  const-val t[3038767]:int(32)[66] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3041388]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3041392 'move' coerce_tmp[3041388](3041390 'deref' call_tmp[3038760]))
                  (3038769 'move' t[3038767](3041385 call chpl__initCopy[1513822] coerce_tmp[3041388] 0))
                  const-ref call_tmp[3038772]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                  (3038774 'move' call_tmp[3038772](3041397 '.' tmp[3038750] x1[3040994]))
                  const-val ok[3038779]:bool[19] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3041403]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3041407 'move' coerce_tmp[3041403](3041405 'deref' call_tmp[3038772]))
                  (3038781 'move' ok[3038779](3041400 call chpl__initCopy[1757859] coerce_tmp[3041403] 0))
                  const-val call_tmp[3038785]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3038787 'move' call_tmp[3038785](3038790 call ![63126] ok[3038779]))
                  const-val call_tmp[3038792]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3038794 'move' call_tmp[3038792] call_tmp[3038785])
                  if call_tmp[3038792]
                  {
                    const-val call_tmp[3038801]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3038803 'move' call_tmp[3038801](3038806 call qio_format_error_arg_mismatch[168158] i[3038097]))
                    (3038809 call =[13310] error[3038089] call_tmp[3038801])
                  }
                  {
                    ref call_tmp[3038813]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                    (3038815 'move' call_tmp[3038813](3038818 call string_start[1131343] style[3038095]))
                    const-val call_tmp[3038821]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3038823 'move' call_tmp[3038821](3038826 call :[3041420] t[3038767]))
                    (3038830 call =[52249] call_tmp[3038813] call_tmp[3038821])
                  }
                  (5630275 call chpl__autoDestroy[4184873] tmp[3038750])
                }
                {
                  const-val call_tmp[3038837]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3038839 'move' call_tmp[3038837](3038842 call ==[52725] tmp[3038131] QIO_CONV_SET_STRINGEND[168098]))
                  const-val call_tmp[3038845]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3038847 'move' call_tmp[3038845] call_tmp[3038837])
                  if call_tmp[3038845]
                  {
                    const-val call_tmp[3038854]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5584372]:(int(32),bool)[3040996] "temp"
                    (3038859 call _toChar[3040821] argi[3038099] ret_tmp[5584372])
                    (5584375 'move' call_tmp[3038854] ret_tmp[5584372])
                    const-val tmp[3038861]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                    (3038863 'move' tmp[3038861] call_tmp[3038854])
                    1
                    const-ref call_tmp[3038871]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                    (3038873 'move' call_tmp[3038871](3041462 '.' tmp[3038861] x0[3040992]))
                    const-val t[3038878]:int(32)[66] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3041468]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3041472 'move' coerce_tmp[3041468](3041470 'deref' call_tmp[3038871]))
                    (3038880 'move' t[3038878](3041465 call chpl__initCopy[1513822] coerce_tmp[3041468] 0))
                    const-ref call_tmp[3038883]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                    (3038885 'move' call_tmp[3038883](3041477 '.' tmp[3038861] x1[3040994]))
                    const-val ok[3038890]:bool[19] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3041483]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3041487 'move' coerce_tmp[3041483](3041485 'deref' call_tmp[3038883]))
                    (3038892 'move' ok[3038890](3041480 call chpl__initCopy[1757859] coerce_tmp[3041483] 0))
                    const-val call_tmp[3038896]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3038898 'move' call_tmp[3038896](3038901 call ![63126] ok[3038890]))
                    const-val call_tmp[3038903]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3038905 'move' call_tmp[3038903] call_tmp[3038896])
                    if call_tmp[3038903]
                    {
                      const-val call_tmp[3038912]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3038914 'move' call_tmp[3038912](3038917 call qio_format_error_arg_mismatch[168158] i[3038097]))
                      (3038920 call =[13310] error[3038089] call_tmp[3038912])
                    }
                    {
                      ref call_tmp[3038924]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                      (3038926 'move' call_tmp[3038924](3038929 call string_end[1131369] style[3038095]))
                      const-val call_tmp[3038932]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3038934 'move' call_tmp[3038932](3038937 call :[3041420] t[3038878]))
                      (3038941 call =[52249] call_tmp[3038924] call_tmp[3038932])
                    }
                    (5630279 call chpl__autoDestroy[4184873] tmp[3038861])
                  }
                  {
                    const-val call_tmp[3038948]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3038950 'move' call_tmp[3038948](3038953 call ==[52725] tmp[3038131] QIO_CONV_SET_STRINGSTARTEND[168093]))
                    const-val call_tmp[3038956]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3038958 'move' call_tmp[3038956] call_tmp[3038948])
                    if call_tmp[3038956]
                    {
                      const-val call_tmp[3038965]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                      const-val ret_tmp[5584378]:(int(32),bool)[3040996] "temp"
                      (3038970 call _toChar[3040821] argi[3038099] ret_tmp[5584378])
                      (5584381 'move' call_tmp[3038965] ret_tmp[5584378])
                      const-val tmp[3038972]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                      (3038974 'move' tmp[3038972] call_tmp[3038965])
                      1
                      const-ref call_tmp[3038982]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (3038984 'move' call_tmp[3038982](3041512 '.' tmp[3038972] x0[3040992]))
                      const-val t[3038989]:int(32)[66] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3041518]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3041522 'move' coerce_tmp[3041518](3041520 'deref' call_tmp[3038982]))
                      (3038991 'move' t[3038989](3041515 call chpl__initCopy[1513822] coerce_tmp[3041518] 0))
                      const-ref call_tmp[3038994]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                      (3038996 'move' call_tmp[3038994](3041527 '.' tmp[3038972] x1[3040994]))
                      const-val ok[3039001]:bool[19] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3041533]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3041537 'move' coerce_tmp[3041533](3041535 'deref' call_tmp[3038994]))
                      (3039003 'move' ok[3039001](3041530 call chpl__initCopy[1757859] coerce_tmp[3041533] 0))
                      const-val call_tmp[3039007]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3039009 'move' call_tmp[3039007](3039012 call ![63126] ok[3039001]))
                      const-val call_tmp[3039014]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3039016 'move' call_tmp[3039014] call_tmp[3039007])
                      if call_tmp[3039014]
                      {
                        const-val call_tmp[3039023]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039025 'move' call_tmp[3039023](3039028 call qio_format_error_arg_mismatch[168158] i[3038097]))
                        (3039031 call =[13310] error[3038089] call_tmp[3039023])
                      }
                      {
                        ref call_tmp[3039035]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                        (3039037 'move' call_tmp[3039035](3039040 call string_start[1131343] style[3038095]))
                        const-val call_tmp[3039043]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039045 'move' call_tmp[3039043](3039048 call :[3041420] t[3038989]))
                        (3039052 call =[52249] call_tmp[3039035] call_tmp[3039043])
                        ref call_tmp[3039057]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                        (3039059 'move' call_tmp[3039057](3039062 call string_end[1131369] style[3038095]))
                        const-val call_tmp[3039065]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039067 'move' call_tmp[3039065](3039070 call :[3041420] t[3038989]))
                        (3039074 call =[52249] call_tmp[3039057] call_tmp[3039065])
                      }
                      (5630283 call chpl__autoDestroy[4184873] tmp[3038972])
                    }
                    {
                      const-val call_tmp[3039081]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3039083 'move' call_tmp[3039081](3039086 call ==[52725] tmp[3038131] QIO_CONV_SET_STRINGLEN[168078]))
                      const-val call_tmp[3039089]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3039091 'move' call_tmp[3039089] call_tmp[3039081])
                      if call_tmp[3039089]
                      {
                        const-val call_tmp[3039098]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                        val error[5503601]:Error[85511] "error variable" "temp"
                        (5503603 'move' error[5503601] nil[32])
                        const-val ret_tmp[5584288]:(int(64),bool)[3040018] "temp"
                        (3039103 call _toIntegral[3039465] argi[3038099] error[5503601] ret_tmp[5584288])
                        (5584291 'move' call_tmp[3039098] ret_tmp[5584288])
                        val errorExists[7299792]:bool[19] "temp"
                        (7299797 'move' errorExists[7299792](7299794 '!=' error[5503601] nil[32]))
                        if errorExists[7299792]
                        {
                          (5503607 '=' error_out[5503523] error[5503601])
                          gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
                        }
                        const-val tmp[3039105]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
                        (3039107 'move' tmp[3039105] call_tmp[3039098])
                        1
                        const-ref call_tmp[3039115]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                        (3039117 'move' call_tmp[3039115](3041565 '.' tmp[3039105] x0[3040014]))
                        const-val t[3039122]:int(64)[10] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3041571]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3041575 'move' coerce_tmp[3041571](3041573 'deref' call_tmp[3039115]))
                        (3039124 'move' t[3039122](3041568 call chpl__initCopy[1473915] coerce_tmp[3041571] 0))
                        const-ref call_tmp[3039127]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                        (3039129 'move' call_tmp[3039127](3041580 '.' tmp[3039105] x1[3040016]))
                        const-val ok[3039134]:bool[19] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3041586]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3041590 'move' coerce_tmp[3041586](3041588 'deref' call_tmp[3039127]))
                        (3039136 'move' ok[3039134](3041583 call chpl__initCopy[1757859] coerce_tmp[3041586] 0))
                        const-val call_tmp[3039140]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039142 'move' call_tmp[3039140](3039145 call ![63126] ok[3039134]))
                        const-val call_tmp[3039147]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039149 'move' call_tmp[3039147] call_tmp[3039140])
                        if call_tmp[3039147]
                        {
                          const-val call_tmp[3039156]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3039158 'move' call_tmp[3039156](3039161 call qio_format_error_arg_mismatch[168158] i[3038097]))
                          (3039164 call =[13310] error[3038089] call_tmp[3039156])
                        }
                        {
                          ref call_tmp[3039168]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                          (3039170 'move' call_tmp[3039168](3039173 call str_style[1131213] style[3038095]))
                          val call_tmp[3039176]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[3039183]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3039185 'move' call_tmp[3039183] t[3039122])
                          (3039192 call =[52229] call_tmp[3039168] call_tmp[3039183])
                        }
                        (5630287 call chpl__autoDestroy[4184737] tmp[3039105])
                      }
                      {
                        const-val call_tmp[3039199]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039201 'move' call_tmp[3039199](3039204 call ==[52725] tmp[3038131] QIO_CONV_SET_TERMINATOR[168083]))
                        const-val call_tmp[3039207]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039209 'move' call_tmp[3039207] call_tmp[3039199])
                        if call_tmp[3039207]
                        {
                          const-val call_tmp[3039216]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                          const-val ret_tmp[5584384]:(int(32),bool)[3040996] "temp"
                          (3039221 call _toChar[3040821] argi[3038099] ret_tmp[5584384])
                          (5584387 'move' call_tmp[3039216] ret_tmp[5584384])
                          const-val tmp[3039223]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                          (3039225 'move' tmp[3039223] call_tmp[3039216])
                          1
                          const-ref call_tmp[3039233]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                          (3039235 'move' call_tmp[3039233](3041616 '.' tmp[3039223] x0[3040992]))
                          const-val t[3039240]:int(32)[66] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3041622]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3041626 'move' coerce_tmp[3041622](3041624 'deref' call_tmp[3039233]))
                          (3039242 'move' t[3039240](3041619 call chpl__initCopy[1513822] coerce_tmp[3041622] 0))
                          const-ref call_tmp[3039245]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                          (3039247 'move' call_tmp[3039245](3041631 '.' tmp[3039223] x1[3040994]))
                          const-val ok[3039252]:bool[19] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3041637]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3041641 'move' coerce_tmp[3041637](3041639 'deref' call_tmp[3039245]))
                          (3039254 'move' ok[3039252](3041634 call chpl__initCopy[1757859] coerce_tmp[3041637] 0))
                          const-val call_tmp[3039258]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3039260 'move' call_tmp[3039258](3039263 call ![63126] ok[3039252]))
                          const-val call_tmp[3039265]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3039267 'move' call_tmp[3039265] call_tmp[3039258])
                          if call_tmp[3039265]
                          {
                            const-val call_tmp[3039274]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3039276 'move' call_tmp[3039274](3039279 call qio_format_error_arg_mismatch[168158] i[3038097]))
                            (3039282 call =[13310] error[3038089] call_tmp[3039274])
                          }
                          {
                            ref call_tmp[3039286]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                            (3039288 'move' call_tmp[3039286](3039291 call str_style[1131213] style[3038095]))
                            val call_tmp[3039294]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            const-val call_tmp[3039301]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3039303 'move' call_tmp[3039301](3039306 call :[3041420] t[3039240]))
                            val call_tmp[3039309]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            val call_tmp[3039316]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                            const-val call_tmp[3039324]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3042374]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3042380 'move' coerce_tmp[3042374](3042376 'cast' int(16)[61] call_tmp[3039301]))
                            const-val coerce_tmp[3042382]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3042388 'move' coerce_tmp[3042382](3042384 'cast' int(16)[61] -256))
                            (3039326 'move' call_tmp[3039324](3039329 call -[57263] coerce_tmp[3042374] coerce_tmp[3042382]))
                            const-val call_tmp[3039332]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3039334 'move' call_tmp[3039332](3039337 call -[515511] call_tmp[3039324]))
                            const-val coerce_tmp[3042392]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3042398 'move' coerce_tmp[3042392](3042394 'cast' int(64)[10] call_tmp[3039332]))
                            (3039340 call =[52229] call_tmp[3039286] coerce_tmp[3042392])
                          }
                          (5630291 call chpl__autoDestroy[4184873] tmp[3039223])
                        }
                        {
                          const-val call_tmp[3039347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3039349 'move' call_tmp[3039347](3039352 call ==[52725] tmp[3038131] QIO_CONV_SET_DONE[168108]))
                          const-val call_tmp[3039355]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3039357 'move' call_tmp[3039355] call_tmp[3039347])
                          if call_tmp[3039355]
                          {
                          }
                          {
                            const-val call_tmp[3039365]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3039367 'move' call_tmp[3039365](3039370 call ==[52725] tmp[3038131] QIO_CONV_UNK[167958]))
                            const-val call_tmp[3039373]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3039375 'move' call_tmp[3039373] call_tmp[3039365])
                            if call_tmp[3039373]
                            {
                              const-val call_tmp[3039382]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                              (3039384 'move' call_tmp[3039382](3039387 call qio_format_error_too_many_args[168146]))
                              (3039389 call =[13310] error[3038089] call_tmp[3039382])
                            }
                            {
                              (3039393 'move' ret[3038105] 1)
                              gotoReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (3039412 'move' ret[3038105] 0)
    label _end__conv_sethandler[3039417]
    (3039419 return ret[3038105])
  }
  function _conv_sethandler[3320936](ref arg error[3320938]:_ref(errorCode)[1499037], const in arg argtypei[3320942]:int(32)[66], ref arg style[3320944]:_ref(iostyleInternal)[1538907], const in arg i[3320946]:int(64)[10], const  ref arg argi[3320948]:string[244], const in arg isReadf[3320950]:bool[19], ref arg error_out[5509069]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[3320954]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3320962]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3322277]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3322281 'move' coerce_tmp[3322277](3322279 'deref' error[3320938]))
    (3320964 'move' call_tmp[3320962](3320967 call _cond_test[1539178] coerce_tmp[3322277]))
    if call_tmp[3320962]
    {
      (3320971 'move' ret[3320954] 0)
      gotoReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
    }
    {
      const-val tmp[3320980]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (3320982 'move' tmp[3320980] argtypei[3320942])
      const-val call_tmp[3320985]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3320987 'move' call_tmp[3320985](3320990 call ==[52725] tmp[3320980] QIO_CONV_SET_MIN_WIDTH_COLS[168053]))
      const-val call_tmp[3320993]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3320995 'move' call_tmp[3320993] call_tmp[3320985])
      if call_tmp[3320993]
      {
        const-val call_tmp[3321002]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        val error[5509072]:Error[85511] "error variable" "temp"
        (5509074 'move' error[5509072] nil[32])
        const-val ret_tmp[5588924]:(int(64),bool)[3040018] "temp"
        (3321007 call _toIntegral[3322308] argi[3320948] error[5509072] ret_tmp[5588924])
        (5588927 'move' call_tmp[3321002] ret_tmp[5588924])
        val errorExists[7302344]:bool[19] "temp"
        (7302349 'move' errorExists[7302344](7302346 '!=' error[5509072] nil[32]))
        if errorExists[7302344]
        {
          (5509078 '=' error_out[5509069] error[5509072])
          gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
        }
        const-val tmp[3321009]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
        (3321011 'move' tmp[3321009] call_tmp[3321002])
        1
        const-ref call_tmp[3321019]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3321021 'move' call_tmp[3321019](3322580 '.' tmp[3321009] x0[3040014]))
        const-val t[3321026]:int(64)[10] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3322586]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3322590 'move' coerce_tmp[3322586](3322588 'deref' call_tmp[3321019]))
        (5634714 '=' t[3321026] coerce_tmp[3322586])
        (3321028 'noop')
        const-ref call_tmp[3321031]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
        (3321033 'move' call_tmp[3321031](3322595 '.' tmp[3321009] x1[3040016]))
        const-val ok[3321038]:bool[19] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3322601]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3322605 'move' coerce_tmp[3322601](3322603 'deref' call_tmp[3321031]))
        (5634717 '=' ok[3321038] coerce_tmp[3322601])
        (3321040 'noop')
        const-val call_tmp[3321044]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3321046 'move' call_tmp[3321044](3321049 call ![63126] ok[3321038]))
        const-val call_tmp[3321051]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3321053 'move' call_tmp[3321051] call_tmp[3321044])
        if call_tmp[3321051]
        {
          const-val call_tmp[3321060]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3321062 'move' call_tmp[3321060](3321065 call qio_format_error_arg_mismatch[168158] i[3320946]))
          (3321068 call =[13310] error[3320938] call_tmp[3321060])
        }
        {
          ref call_tmp[3321072]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
          (3321074 'move' call_tmp[3321072](3321077 call min_width_columns[1131239] style[3320944]))
          val call_tmp[3321080]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3321087]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (3321089 'move' call_tmp[3321087](3321092 call :[3040542] t[3321026]))
          (3321096 call =[52289] call_tmp[3321072] call_tmp[3321087])
        }
        (5634721 call chpl__autoDestroy[4184737] tmp[3321009])
      }
      {
        const-val call_tmp[3321103]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3321105 'move' call_tmp[3321103](3321108 call ==[52725] tmp[3320980] QIO_CONV_SET_MAX_WIDTH_COLS[168058]))
        const-val call_tmp[3321111]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3321113 'move' call_tmp[3321111] call_tmp[3321103])
        if call_tmp[3321111]
        {
          const-val call_tmp[3321120]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          val error[5509087]:Error[85511] "error variable" "temp"
          (5509089 'move' error[5509087] nil[32])
          const-val ret_tmp[5588930]:(int(64),bool)[3040018] "temp"
          (3321125 call _toIntegral[3322308] argi[3320948] error[5509087] ret_tmp[5588930])
          (5588933 'move' call_tmp[3321120] ret_tmp[5588930])
          val errorExists[7302352]:bool[19] "temp"
          (7302357 'move' errorExists[7302352](7302354 '!=' error[5509087] nil[32]))
          if errorExists[7302352]
          {
            (5509093 '=' error_out[5509069] error[5509087])
            gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
          }
          const-val tmp[3321127]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
          (3321129 'move' tmp[3321127] call_tmp[3321120])
          1
          const-ref call_tmp[3321137]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3321139 'move' call_tmp[3321137](3322631 '.' tmp[3321127] x0[3040014]))
          const-val t[3321144]:int(64)[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3322637]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3322641 'move' coerce_tmp[3322637](3322639 'deref' call_tmp[3321137]))
          (3321146 'move' t[3321144](3322634 call chpl__initCopy[1473915] coerce_tmp[3322637] 0))
          const-ref call_tmp[3321149]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
          (3321151 'move' call_tmp[3321149](3322646 '.' tmp[3321127] x1[3040016]))
          const-val ok[3321156]:bool[19] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3322652]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3322656 'move' coerce_tmp[3322652](3322654 'deref' call_tmp[3321149]))
          (3321158 'move' ok[3321156](3322649 call chpl__initCopy[1757859] coerce_tmp[3322652] 0))
          const-val call_tmp[3321162]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3321164 'move' call_tmp[3321162](3321167 call ![63126] ok[3321156]))
          const-val call_tmp[3321169]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3321171 'move' call_tmp[3321169] call_tmp[3321162])
          if call_tmp[3321169]
          {
            const-val call_tmp[3321178]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3321180 'move' call_tmp[3321178](3321183 call qio_format_error_arg_mismatch[168158] i[3320946]))
            (3321186 call =[13310] error[3320938] call_tmp[3321178])
          }
          {
            ref call_tmp[3321190]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
            (3321192 'move' call_tmp[3321190](3321195 call max_width_columns[1131265] style[3320944]))
            val call_tmp[3321198]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[3321205]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (3321207 'move' call_tmp[3321205](3321210 call :[3040542] t[3321144]))
            (3321214 call =[52289] call_tmp[3321190] call_tmp[3321205])
          }
          (5634725 call chpl__autoDestroy[4184737] tmp[3321127])
        }
        {
          const-val call_tmp[3321221]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3321223 'move' call_tmp[3321221](3321226 call ==[52725] tmp[3320980] QIO_CONV_SET_MAX_WIDTH_CHARS[168063]))
          const-val call_tmp[3321229]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3321231 'move' call_tmp[3321229] call_tmp[3321221])
          if call_tmp[3321229]
          {
            const-val call_tmp[3321238]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
            val error[5509102]:Error[85511] "error variable" "temp"
            (5509104 'move' error[5509102] nil[32])
            const-val ret_tmp[5588936]:(int(64),bool)[3040018] "temp"
            (3321243 call _toIntegral[3322308] argi[3320948] error[5509102] ret_tmp[5588936])
            (5588939 'move' call_tmp[3321238] ret_tmp[5588936])
            val errorExists[7302360]:bool[19] "temp"
            (7302365 'move' errorExists[7302360](7302362 '!=' error[5509102] nil[32]))
            if errorExists[7302360]
            {
              (5509108 '=' error_out[5509069] error[5509102])
              gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
            }
            const-val tmp[3321245]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
            (3321247 'move' tmp[3321245] call_tmp[3321238])
            1
            const-ref call_tmp[3321255]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
            (3321257 'move' call_tmp[3321255](3322682 '.' tmp[3321245] x0[3040014]))
            const-val t[3321262]:int(64)[10] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3322688]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3322692 'move' coerce_tmp[3322688](3322690 'deref' call_tmp[3321255]))
            (3321264 'move' t[3321262](3322685 call chpl__initCopy[1473915] coerce_tmp[3322688] 0))
            const-ref call_tmp[3321267]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
            (3321269 'move' call_tmp[3321267](3322697 '.' tmp[3321245] x1[3040016]))
            const-val ok[3321274]:bool[19] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3322703]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3322707 'move' coerce_tmp[3322703](3322705 'deref' call_tmp[3321267]))
            (3321276 'move' ok[3321274](3322700 call chpl__initCopy[1757859] coerce_tmp[3322703] 0))
            const-val call_tmp[3321280]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3321282 'move' call_tmp[3321280](3321285 call ![63126] ok[3321274]))
            const-val call_tmp[3321287]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3321289 'move' call_tmp[3321287] call_tmp[3321280])
            if call_tmp[3321287]
            {
              const-val call_tmp[3321296]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3321298 'move' call_tmp[3321296](3321301 call qio_format_error_arg_mismatch[168158] i[3320946]))
              (3321304 call =[13310] error[3320938] call_tmp[3321296])
            }
            {
              ref call_tmp[3321308]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
              (3321310 'move' call_tmp[3321308](3321313 call max_width_characters[1131291] style[3320944]))
              val call_tmp[3321316]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[3321323]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
              (3321325 'move' call_tmp[3321323](3321328 call :[3040542] t[3321262]))
              (3321332 call =[52289] call_tmp[3321308] call_tmp[3321323])
            }
            (5634729 call chpl__autoDestroy[4184737] tmp[3321245])
          }
          {
            const-val call_tmp[3321339]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3321341 'move' call_tmp[3321339](3321344 call ==[52725] tmp[3320980] QIO_CONV_SET_MAX_WIDTH_BYTES[168068]))
            const-val call_tmp[3321347]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3321349 'move' call_tmp[3321347] call_tmp[3321339])
            if call_tmp[3321347]
            {
              const-val call_tmp[3321356]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
              val error[5509117]:Error[85511] "error variable" "temp"
              (5509119 'move' error[5509117] nil[32])
              const-val ret_tmp[5588942]:(int(64),bool)[3040018] "temp"
              (3321361 call _toIntegral[3322308] argi[3320948] error[5509117] ret_tmp[5588942])
              (5588945 'move' call_tmp[3321356] ret_tmp[5588942])
              val errorExists[7302368]:bool[19] "temp"
              (7302373 'move' errorExists[7302368](7302370 '!=' error[5509117] nil[32]))
              if errorExists[7302368]
              {
                (5509123 '=' error_out[5509069] error[5509117])
                gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
              }
              const-val tmp[3321363]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
              (3321365 'move' tmp[3321363] call_tmp[3321356])
              1
              const-ref call_tmp[3321373]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3321375 'move' call_tmp[3321373](3322733 '.' tmp[3321363] x0[3040014]))
              const-val t[3321380]:int(64)[10] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3322739]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3322743 'move' coerce_tmp[3322739](3322741 'deref' call_tmp[3321373]))
              (3321382 'move' t[3321380](3322736 call chpl__initCopy[1473915] coerce_tmp[3322739] 0))
              const-ref call_tmp[3321385]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3321387 'move' call_tmp[3321385](3322748 '.' tmp[3321363] x1[3040016]))
              const-val ok[3321392]:bool[19] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3322754]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3322758 'move' coerce_tmp[3322754](3322756 'deref' call_tmp[3321385]))
              (3321394 'move' ok[3321392](3322751 call chpl__initCopy[1757859] coerce_tmp[3322754] 0))
              const-val call_tmp[3321398]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3321400 'move' call_tmp[3321398](3321403 call ![63126] ok[3321392]))
              const-val call_tmp[3321405]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3321407 'move' call_tmp[3321405] call_tmp[3321398])
              if call_tmp[3321405]
              {
                const-val call_tmp[3321414]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3321416 'move' call_tmp[3321414](3321419 call qio_format_error_arg_mismatch[168158] i[3320946]))
                (3321422 call =[13310] error[3320938] call_tmp[3321414])
              }
              {
                ref call_tmp[3321426]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                (3321428 'move' call_tmp[3321426](3321431 call max_width_bytes[1131317] style[3320944]))
                val call_tmp[3321434]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[3321441]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
                (3321443 'move' call_tmp[3321441](3321446 call :[3040542] t[3321380]))
                (3321450 call =[52289] call_tmp[3321426] call_tmp[3321441])
              }
              (5634733 call chpl__autoDestroy[4184737] tmp[3321363])
            }
            {
              const-val call_tmp[3321457]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3321459 'move' call_tmp[3321457](3321462 call ==[52725] tmp[3320980] QIO_CONV_SET_PRECISION[168073]))
              const-val call_tmp[3321465]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3321467 'move' call_tmp[3321465] call_tmp[3321457])
              if call_tmp[3321465]
              {
                const-val call_tmp[3321474]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                val error[5509132]:Error[85511] "error variable" "temp"
                (5509134 'move' error[5509132] nil[32])
                const-val ret_tmp[5588948]:(int(64),bool)[3040018] "temp"
                (3321479 call _toIntegral[3322308] argi[3320948] error[5509132] ret_tmp[5588948])
                (5588951 'move' call_tmp[3321474] ret_tmp[5588948])
                val errorExists[7302376]:bool[19] "temp"
                (7302381 'move' errorExists[7302376](7302378 '!=' error[5509132] nil[32]))
                if errorExists[7302376]
                {
                  (5509138 '=' error_out[5509069] error[5509132])
                  gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
                }
                const-val tmp[3321481]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
                (3321483 'move' tmp[3321481] call_tmp[3321474])
                1
                const-ref call_tmp[3321491]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3321493 'move' call_tmp[3321491](3322784 '.' tmp[3321481] x0[3040014]))
                const-val t[3321498]:int(64)[10] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3322790]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3322794 'move' coerce_tmp[3322790](3322792 'deref' call_tmp[3321491]))
                (3321500 'move' t[3321498](3322787 call chpl__initCopy[1473915] coerce_tmp[3322790] 0))
                const-ref call_tmp[3321503]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                (3321505 'move' call_tmp[3321503](3322799 '.' tmp[3321481] x1[3040016]))
                const-val ok[3321510]:bool[19] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3322805]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3322809 'move' coerce_tmp[3322805](3322807 'deref' call_tmp[3321503]))
                (3321512 'move' ok[3321510](3322802 call chpl__initCopy[1757859] coerce_tmp[3322805] 0))
                const-val call_tmp[3321516]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3321518 'move' call_tmp[3321516](3321521 call ![63126] ok[3321510]))
                const-val call_tmp[3321523]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3321525 'move' call_tmp[3321523] call_tmp[3321516])
                if call_tmp[3321523]
                {
                  const-val call_tmp[3321532]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3321534 'move' call_tmp[3321532](3321537 call qio_format_error_arg_mismatch[168158] i[3320946]))
                  (3321540 call =[13310] error[3320938] call_tmp[3321532])
                }
                {
                  ref call_tmp[3321544]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3321546 'move' call_tmp[3321544](3321549 call precision[1131865] style[3320944]))
                  val call_tmp[3321552]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[3321559]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3321561 'move' call_tmp[3321559](3321564 call :[1513418] t[3321498]))
                  (3321568 call =[52209] call_tmp[3321544] call_tmp[3321559])
                }
                (5634737 call chpl__autoDestroy[4184737] tmp[3321481])
              }
              {
                const-val call_tmp[3321575]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3321577 'move' call_tmp[3321575](3321580 call ==[52725] tmp[3320980] QIO_CONV_SET_STRINGSTART[168088]))
                const-val call_tmp[3321583]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3321585 'move' call_tmp[3321583] call_tmp[3321575])
                if call_tmp[3321583]
                {
                  const-val call_tmp[3321592]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                  const-val ret_tmp[5588972]:(int(32),bool)[3040996] "temp"
                  (3321597 call _toChar[3322847] argi[3320948] ret_tmp[5588972])
                  (5588975 'move' call_tmp[3321592] ret_tmp[5588972])
                  const-val tmp[3321599]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                  (3321601 'move' tmp[3321599] call_tmp[3321592])
                  1
                  const-ref call_tmp[3321609]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3321611 'move' call_tmp[3321609](3323099 '.' tmp[3321599] x0[3040992]))
                  const-val t[3321616]:int(32)[66] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3323105]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3323109 'move' coerce_tmp[3323105](3323107 'deref' call_tmp[3321609]))
                  (3321618 'move' t[3321616](3323102 call chpl__initCopy[1513822] coerce_tmp[3323105] 0))
                  const-ref call_tmp[3321621]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                  (3321623 'move' call_tmp[3321621](3323114 '.' tmp[3321599] x1[3040994]))
                  const-val ok[3321628]:bool[19] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3323120]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3323124 'move' coerce_tmp[3323120](3323122 'deref' call_tmp[3321621]))
                  (3321630 'move' ok[3321628](3323117 call chpl__initCopy[1757859] coerce_tmp[3323120] 0))
                  const-val call_tmp[3321634]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3321636 'move' call_tmp[3321634](3321639 call ![63126] ok[3321628]))
                  const-val call_tmp[3321641]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3321643 'move' call_tmp[3321641] call_tmp[3321634])
                  if call_tmp[3321641]
                  {
                    const-val call_tmp[3321650]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3321652 'move' call_tmp[3321650](3321655 call qio_format_error_arg_mismatch[168158] i[3320946]))
                    (3321658 call =[13310] error[3320938] call_tmp[3321650])
                  }
                  {
                    ref call_tmp[3321662]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                    (3321664 'move' call_tmp[3321662](3321667 call string_start[1131343] style[3320944]))
                    const-val call_tmp[3321670]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3321672 'move' call_tmp[3321670](3321675 call :[3041420] t[3321616]))
                    (3321679 call =[52249] call_tmp[3321662] call_tmp[3321670])
                  }
                  (5634741 call chpl__autoDestroy[4184873] tmp[3321599])
                }
                {
                  const-val call_tmp[3321686]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3321688 'move' call_tmp[3321686](3321691 call ==[52725] tmp[3320980] QIO_CONV_SET_STRINGEND[168098]))
                  const-val call_tmp[3321694]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3321696 'move' call_tmp[3321694] call_tmp[3321686])
                  if call_tmp[3321694]
                  {
                    const-val call_tmp[3321703]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5588978]:(int(32),bool)[3040996] "temp"
                    (3321708 call _toChar[3322847] argi[3320948] ret_tmp[5588978])
                    (5588981 'move' call_tmp[3321703] ret_tmp[5588978])
                    const-val tmp[3321710]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                    (3321712 'move' tmp[3321710] call_tmp[3321703])
                    1
                    const-ref call_tmp[3321720]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                    (3321722 'move' call_tmp[3321720](3323149 '.' tmp[3321710] x0[3040992]))
                    const-val t[3321727]:int(32)[66] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3323155]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3323159 'move' coerce_tmp[3323155](3323157 'deref' call_tmp[3321720]))
                    (3321729 'move' t[3321727](3323152 call chpl__initCopy[1513822] coerce_tmp[3323155] 0))
                    const-ref call_tmp[3321732]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                    (3321734 'move' call_tmp[3321732](3323164 '.' tmp[3321710] x1[3040994]))
                    const-val ok[3321739]:bool[19] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3323170]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3323174 'move' coerce_tmp[3323170](3323172 'deref' call_tmp[3321732]))
                    (3321741 'move' ok[3321739](3323167 call chpl__initCopy[1757859] coerce_tmp[3323170] 0))
                    const-val call_tmp[3321745]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3321747 'move' call_tmp[3321745](3321750 call ![63126] ok[3321739]))
                    const-val call_tmp[3321752]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3321754 'move' call_tmp[3321752] call_tmp[3321745])
                    if call_tmp[3321752]
                    {
                      const-val call_tmp[3321761]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3321763 'move' call_tmp[3321761](3321766 call qio_format_error_arg_mismatch[168158] i[3320946]))
                      (3321769 call =[13310] error[3320938] call_tmp[3321761])
                    }
                    {
                      ref call_tmp[3321773]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                      (3321775 'move' call_tmp[3321773](3321778 call string_end[1131369] style[3320944]))
                      const-val call_tmp[3321781]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3321783 'move' call_tmp[3321781](3321786 call :[3041420] t[3321727]))
                      (3321790 call =[52249] call_tmp[3321773] call_tmp[3321781])
                    }
                    (5634745 call chpl__autoDestroy[4184873] tmp[3321710])
                  }
                  {
                    const-val call_tmp[3321797]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3321799 'move' call_tmp[3321797](3321802 call ==[52725] tmp[3320980] QIO_CONV_SET_STRINGSTARTEND[168093]))
                    const-val call_tmp[3321805]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3321807 'move' call_tmp[3321805] call_tmp[3321797])
                    if call_tmp[3321805]
                    {
                      const-val call_tmp[3321814]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                      const-val ret_tmp[5588984]:(int(32),bool)[3040996] "temp"
                      (3321819 call _toChar[3322847] argi[3320948] ret_tmp[5588984])
                      (5588987 'move' call_tmp[3321814] ret_tmp[5588984])
                      const-val tmp[3321821]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                      (3321823 'move' tmp[3321821] call_tmp[3321814])
                      1
                      const-ref call_tmp[3321831]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (3321833 'move' call_tmp[3321831](3323199 '.' tmp[3321821] x0[3040992]))
                      const-val t[3321838]:int(32)[66] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3323205]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3323209 'move' coerce_tmp[3323205](3323207 'deref' call_tmp[3321831]))
                      (3321840 'move' t[3321838](3323202 call chpl__initCopy[1513822] coerce_tmp[3323205] 0))
                      const-ref call_tmp[3321843]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                      (3321845 'move' call_tmp[3321843](3323214 '.' tmp[3321821] x1[3040994]))
                      const-val ok[3321850]:bool[19] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3323220]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3323224 'move' coerce_tmp[3323220](3323222 'deref' call_tmp[3321843]))
                      (3321852 'move' ok[3321850](3323217 call chpl__initCopy[1757859] coerce_tmp[3323220] 0))
                      const-val call_tmp[3321856]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3321858 'move' call_tmp[3321856](3321861 call ![63126] ok[3321850]))
                      const-val call_tmp[3321863]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3321865 'move' call_tmp[3321863] call_tmp[3321856])
                      if call_tmp[3321863]
                      {
                        const-val call_tmp[3321872]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3321874 'move' call_tmp[3321872](3321877 call qio_format_error_arg_mismatch[168158] i[3320946]))
                        (3321880 call =[13310] error[3320938] call_tmp[3321872])
                      }
                      {
                        ref call_tmp[3321884]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                        (3321886 'move' call_tmp[3321884](3321889 call string_start[1131343] style[3320944]))
                        const-val call_tmp[3321892]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3321894 'move' call_tmp[3321892](3321897 call :[3041420] t[3321838]))
                        (3321901 call =[52249] call_tmp[3321884] call_tmp[3321892])
                        ref call_tmp[3321906]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                        (3321908 'move' call_tmp[3321906](3321911 call string_end[1131369] style[3320944]))
                        const-val call_tmp[3321914]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3321916 'move' call_tmp[3321914](3321919 call :[3041420] t[3321838]))
                        (3321923 call =[52249] call_tmp[3321906] call_tmp[3321914])
                      }
                      (5634749 call chpl__autoDestroy[4184873] tmp[3321821])
                    }
                    {
                      const-val call_tmp[3321930]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3321932 'move' call_tmp[3321930](3321935 call ==[52725] tmp[3320980] QIO_CONV_SET_STRINGLEN[168078]))
                      const-val call_tmp[3321938]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3321940 'move' call_tmp[3321938] call_tmp[3321930])
                      if call_tmp[3321938]
                      {
                        const-val call_tmp[3321947]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                        val error[5509147]:Error[85511] "error variable" "temp"
                        (5509149 'move' error[5509147] nil[32])
                        const-val ret_tmp[5588954]:(int(64),bool)[3040018] "temp"
                        (3321952 call _toIntegral[3322308] argi[3320948] error[5509147] ret_tmp[5588954])
                        (5588957 'move' call_tmp[3321947] ret_tmp[5588954])
                        val errorExists[7302384]:bool[19] "temp"
                        (7302389 'move' errorExists[7302384](7302386 '!=' error[5509147] nil[32]))
                        if errorExists[7302384]
                        {
                          (5509153 '=' error_out[5509069] error[5509147])
                          gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
                        }
                        const-val tmp[3321954]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
                        (3321956 'move' tmp[3321954] call_tmp[3321947])
                        1
                        const-ref call_tmp[3321964]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                        (3321966 'move' call_tmp[3321964](3323252 '.' tmp[3321954] x0[3040014]))
                        const-val t[3321971]:int(64)[10] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3323258]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3323262 'move' coerce_tmp[3323258](3323260 'deref' call_tmp[3321964]))
                        (3321973 'move' t[3321971](3323255 call chpl__initCopy[1473915] coerce_tmp[3323258] 0))
                        const-ref call_tmp[3321976]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                        (3321978 'move' call_tmp[3321976](3323267 '.' tmp[3321954] x1[3040016]))
                        const-val ok[3321983]:bool[19] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3323273]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3323277 'move' coerce_tmp[3323273](3323275 'deref' call_tmp[3321976]))
                        (3321985 'move' ok[3321983](3323270 call chpl__initCopy[1757859] coerce_tmp[3323273] 0))
                        const-val call_tmp[3321989]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3321991 'move' call_tmp[3321989](3321994 call ![63126] ok[3321983]))
                        const-val call_tmp[3321996]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3321998 'move' call_tmp[3321996] call_tmp[3321989])
                        if call_tmp[3321996]
                        {
                          const-val call_tmp[3322005]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3322007 'move' call_tmp[3322005](3322010 call qio_format_error_arg_mismatch[168158] i[3320946]))
                          (3322013 call =[13310] error[3320938] call_tmp[3322005])
                        }
                        {
                          ref call_tmp[3322017]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                          (3322019 'move' call_tmp[3322017](3322022 call str_style[1131213] style[3320944]))
                          val call_tmp[3322025]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[3322032]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3322034 'move' call_tmp[3322032] t[3321971])
                          (3322041 call =[52229] call_tmp[3322017] call_tmp[3322032])
                        }
                        (5634753 call chpl__autoDestroy[4184737] tmp[3321954])
                      }
                      {
                        const-val call_tmp[3322048]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3322050 'move' call_tmp[3322048](3322053 call ==[52725] tmp[3320980] QIO_CONV_SET_TERMINATOR[168083]))
                        const-val call_tmp[3322056]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3322058 'move' call_tmp[3322056] call_tmp[3322048])
                        if call_tmp[3322056]
                        {
                          const-val call_tmp[3322065]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                          const-val ret_tmp[5588990]:(int(32),bool)[3040996] "temp"
                          (3322070 call _toChar[3322847] argi[3320948] ret_tmp[5588990])
                          (5588993 'move' call_tmp[3322065] ret_tmp[5588990])
                          const-val tmp[3322072]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                          (3322074 'move' tmp[3322072] call_tmp[3322065])
                          1
                          const-ref call_tmp[3322082]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                          (3322084 'move' call_tmp[3322082](3323303 '.' tmp[3322072] x0[3040992]))
                          const-val t[3322089]:int(32)[66] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3323309]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3323313 'move' coerce_tmp[3323309](3323311 'deref' call_tmp[3322082]))
                          (3322091 'move' t[3322089](3323306 call chpl__initCopy[1513822] coerce_tmp[3323309] 0))
                          const-ref call_tmp[3322094]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                          (3322096 'move' call_tmp[3322094](3323318 '.' tmp[3322072] x1[3040994]))
                          const-val ok[3322101]:bool[19] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3323324]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3323328 'move' coerce_tmp[3323324](3323326 'deref' call_tmp[3322094]))
                          (3322103 'move' ok[3322101](3323321 call chpl__initCopy[1757859] coerce_tmp[3323324] 0))
                          const-val call_tmp[3322107]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3322109 'move' call_tmp[3322107](3322112 call ![63126] ok[3322101]))
                          const-val call_tmp[3322114]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3322116 'move' call_tmp[3322114] call_tmp[3322107])
                          if call_tmp[3322114]
                          {
                            const-val call_tmp[3322123]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3322125 'move' call_tmp[3322123](3322128 call qio_format_error_arg_mismatch[168158] i[3320946]))
                            (3322131 call =[13310] error[3320938] call_tmp[3322123])
                          }
                          {
                            ref call_tmp[3322135]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                            (3322137 'move' call_tmp[3322135](3322140 call str_style[1131213] style[3320944]))
                            val call_tmp[3322143]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            const-val call_tmp[3322150]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3322152 'move' call_tmp[3322150](3322155 call :[3041420] t[3322089]))
                            val call_tmp[3322158]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            val call_tmp[3322165]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                            const-val call_tmp[3322173]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3323345]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3323351 'move' coerce_tmp[3323345](3323347 'cast' int(16)[61] call_tmp[3322150]))
                            const-val coerce_tmp[3323353]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3323359 'move' coerce_tmp[3323353](3323355 'cast' int(16)[61] -256))
                            (3322175 'move' call_tmp[3322173](3322178 call -[57263] coerce_tmp[3323345] coerce_tmp[3323353]))
                            const-val call_tmp[3322181]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3322183 'move' call_tmp[3322181](3322186 call -[515511] call_tmp[3322173]))
                            const-val coerce_tmp[3323363]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3323369 'move' coerce_tmp[3323363](3323365 'cast' int(64)[10] call_tmp[3322181]))
                            (3322189 call =[52229] call_tmp[3322135] coerce_tmp[3323363])
                          }
                          (5634757 call chpl__autoDestroy[4184873] tmp[3322072])
                        }
                        {
                          const-val call_tmp[3322196]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3322198 'move' call_tmp[3322196](3322201 call ==[52725] tmp[3320980] QIO_CONV_SET_DONE[168108]))
                          const-val call_tmp[3322204]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3322206 'move' call_tmp[3322204] call_tmp[3322196])
                          if call_tmp[3322204]
                          {
                          }
                          {
                            const-val call_tmp[3322214]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3322216 'move' call_tmp[3322214](3322219 call ==[52725] tmp[3320980] QIO_CONV_UNK[167958]))
                            const-val call_tmp[3322222]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3322224 'move' call_tmp[3322222] call_tmp[3322214])
                            if call_tmp[3322222]
                            {
                              const-val call_tmp[3322231]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                              (3322233 'move' call_tmp[3322231](3322236 call qio_format_error_too_many_args[168146]))
                              (3322238 call =[13310] error[3320938] call_tmp[3322231])
                            }
                            {
                              (3322242 'move' ret[3320954] 1)
                              gotoReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (3322261 'move' ret[3320954] 0)
    label _end__conv_sethandler[3322266]
    (3322268 return ret[3320954])
  }
  function _conv_sethandler[3729933](ref arg error[3729935]:_ref(errorCode)[1499037], const in arg argtypei[3729939]:int(32)[66], ref arg style[3729941]:_ref(iostyleInternal)[1538907], const in arg i[3729943]:int(64)[10], const in arg argi[3729945]:real(32)[91], const in arg isReadf[3729947]:bool[19], ref arg error_out[5519145]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[3729951]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3729959]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3731280]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3731284 'move' coerce_tmp[3731280](3731282 'deref' error[3729935]))
    (3729961 'move' call_tmp[3729959](3729964 call _cond_test[1539178] coerce_tmp[3731280]))
    if call_tmp[3729959]
    {
      (3729968 'move' ret[3729951] 0)
      gotoReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
    }
    {
      const-val tmp[3729977]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (3729979 'move' tmp[3729977] argtypei[3729939])
      const-val call_tmp[3729982]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3729984 'move' call_tmp[3729982](3729987 call ==[52725] tmp[3729977] QIO_CONV_SET_MIN_WIDTH_COLS[168053]))
      const-val call_tmp[3729990]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3729992 'move' call_tmp[3729990] call_tmp[3729982])
      if call_tmp[3729990]
      {
        const-val call_tmp[3729999]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        val error[5519148]:Error[85511] "error variable" "temp"
        (5519150 'move' error[5519148] nil[32])
        const-val ret_tmp[5593615]:(int(64),bool)[3040018] "temp"
        (3730004 call _toIntegral[3731311] argi[3729945] error[5519148] ret_tmp[5593615])
        (5593618 'move' call_tmp[3729999] ret_tmp[5593615])
        val errorExists[7306960]:bool[19] "temp"
        (7306965 'move' errorExists[7306960](7306962 '!=' error[5519148] nil[32]))
        if errorExists[7306960]
        {
          (5519154 '=' error_out[5519145] error[5519148])
          gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
        }
        const-val tmp[3730006]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
        (3730008 'move' tmp[3730006] call_tmp[3729999])
        1
        const-ref call_tmp[3730016]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (3730018 'move' call_tmp[3730016](3731613 '.' tmp[3730006] x0[3040014]))
        const-val t[3730023]:int(64)[10] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3731619]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3731623 'move' coerce_tmp[3731619](3731621 'deref' call_tmp[3730016]))
        (5640812 '=' t[3730023] coerce_tmp[3731619])
        (3730025 'noop')
        const-ref call_tmp[3730028]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
        (3730030 'move' call_tmp[3730028](3731628 '.' tmp[3730006] x1[3040016]))
        const-val ok[3730035]:bool[19] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3731634]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3731638 'move' coerce_tmp[3731634](3731636 'deref' call_tmp[3730028]))
        (5640815 '=' ok[3730035] coerce_tmp[3731634])
        (3730037 'noop')
        const-val call_tmp[3730041]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3730043 'move' call_tmp[3730041](3730046 call ![63126] ok[3730035]))
        const-val call_tmp[3730048]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3730050 'move' call_tmp[3730048] call_tmp[3730041])
        if call_tmp[3730048]
        {
          const-val call_tmp[3730057]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3730059 'move' call_tmp[3730057](3730062 call qio_format_error_arg_mismatch[168158] i[3729943]))
          (3730065 call =[13310] error[3729935] call_tmp[3730057])
        }
        {
          ref call_tmp[3730069]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
          (3730071 'move' call_tmp[3730069](3730074 call min_width_columns[1131239] style[3729941]))
          val call_tmp[3730077]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3730084]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (3730086 'move' call_tmp[3730084](3730089 call :[3040542] t[3730023]))
          (3730093 call =[52289] call_tmp[3730069] call_tmp[3730084])
        }
        (5640819 call chpl__autoDestroy[4184737] tmp[3730006])
      }
      {
        const-val call_tmp[3730100]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3730102 'move' call_tmp[3730100](3730105 call ==[52725] tmp[3729977] QIO_CONV_SET_MAX_WIDTH_COLS[168058]))
        const-val call_tmp[3730108]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3730110 'move' call_tmp[3730108] call_tmp[3730100])
        if call_tmp[3730108]
        {
          const-val call_tmp[3730117]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          val error[5519163]:Error[85511] "error variable" "temp"
          (5519165 'move' error[5519163] nil[32])
          const-val ret_tmp[5593621]:(int(64),bool)[3040018] "temp"
          (3730122 call _toIntegral[3731311] argi[3729945] error[5519163] ret_tmp[5593621])
          (5593624 'move' call_tmp[3730117] ret_tmp[5593621])
          val errorExists[7306968]:bool[19] "temp"
          (7306973 'move' errorExists[7306968](7306970 '!=' error[5519163] nil[32]))
          if errorExists[7306968]
          {
            (5519169 '=' error_out[5519145] error[5519163])
            gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
          }
          const-val tmp[3730124]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
          (3730126 'move' tmp[3730124] call_tmp[3730117])
          1
          const-ref call_tmp[3730134]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3730136 'move' call_tmp[3730134](3731664 '.' tmp[3730124] x0[3040014]))
          const-val t[3730141]:int(64)[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3731670]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3731674 'move' coerce_tmp[3731670](3731672 'deref' call_tmp[3730134]))
          (3730143 'move' t[3730141](3731667 call chpl__initCopy[1473915] coerce_tmp[3731670] 0))
          const-ref call_tmp[3730146]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
          (3730148 'move' call_tmp[3730146](3731679 '.' tmp[3730124] x1[3040016]))
          const-val ok[3730153]:bool[19] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3731685]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3731689 'move' coerce_tmp[3731685](3731687 'deref' call_tmp[3730146]))
          (3730155 'move' ok[3730153](3731682 call chpl__initCopy[1757859] coerce_tmp[3731685] 0))
          const-val call_tmp[3730159]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3730161 'move' call_tmp[3730159](3730164 call ![63126] ok[3730153]))
          const-val call_tmp[3730166]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3730168 'move' call_tmp[3730166] call_tmp[3730159])
          if call_tmp[3730166]
          {
            const-val call_tmp[3730175]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3730177 'move' call_tmp[3730175](3730180 call qio_format_error_arg_mismatch[168158] i[3729943]))
            (3730183 call =[13310] error[3729935] call_tmp[3730175])
          }
          {
            ref call_tmp[3730187]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
            (3730189 'move' call_tmp[3730187](3730192 call max_width_columns[1131265] style[3729941]))
            val call_tmp[3730195]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[3730202]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (3730204 'move' call_tmp[3730202](3730207 call :[3040542] t[3730141]))
            (3730211 call =[52289] call_tmp[3730187] call_tmp[3730202])
          }
          (5640823 call chpl__autoDestroy[4184737] tmp[3730124])
        }
        {
          const-val call_tmp[3730218]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3730220 'move' call_tmp[3730218](3730223 call ==[52725] tmp[3729977] QIO_CONV_SET_MAX_WIDTH_CHARS[168063]))
          const-val call_tmp[3730226]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3730228 'move' call_tmp[3730226] call_tmp[3730218])
          if call_tmp[3730226]
          {
            const-val call_tmp[3730235]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
            val error[5519178]:Error[85511] "error variable" "temp"
            (5519180 'move' error[5519178] nil[32])
            const-val ret_tmp[5593627]:(int(64),bool)[3040018] "temp"
            (3730240 call _toIntegral[3731311] argi[3729945] error[5519178] ret_tmp[5593627])
            (5593630 'move' call_tmp[3730235] ret_tmp[5593627])
            val errorExists[7306976]:bool[19] "temp"
            (7306981 'move' errorExists[7306976](7306978 '!=' error[5519178] nil[32]))
            if errorExists[7306976]
            {
              (5519184 '=' error_out[5519145] error[5519178])
              gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
            }
            const-val tmp[3730242]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
            (3730244 'move' tmp[3730242] call_tmp[3730235])
            1
            const-ref call_tmp[3730252]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
            (3730254 'move' call_tmp[3730252](3731715 '.' tmp[3730242] x0[3040014]))
            const-val t[3730259]:int(64)[10] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3731721]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3731725 'move' coerce_tmp[3731721](3731723 'deref' call_tmp[3730252]))
            (3730261 'move' t[3730259](3731718 call chpl__initCopy[1473915] coerce_tmp[3731721] 0))
            const-ref call_tmp[3730264]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
            (3730266 'move' call_tmp[3730264](3731730 '.' tmp[3730242] x1[3040016]))
            const-val ok[3730271]:bool[19] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3731736]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3731740 'move' coerce_tmp[3731736](3731738 'deref' call_tmp[3730264]))
            (3730273 'move' ok[3730271](3731733 call chpl__initCopy[1757859] coerce_tmp[3731736] 0))
            const-val call_tmp[3730277]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3730279 'move' call_tmp[3730277](3730282 call ![63126] ok[3730271]))
            const-val call_tmp[3730284]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3730286 'move' call_tmp[3730284] call_tmp[3730277])
            if call_tmp[3730284]
            {
              const-val call_tmp[3730293]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3730295 'move' call_tmp[3730293](3730298 call qio_format_error_arg_mismatch[168158] i[3729943]))
              (3730301 call =[13310] error[3729935] call_tmp[3730293])
            }
            {
              ref call_tmp[3730305]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
              (3730307 'move' call_tmp[3730305](3730310 call max_width_characters[1131291] style[3729941]))
              val call_tmp[3730313]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[3730320]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
              (3730322 'move' call_tmp[3730320](3730325 call :[3040542] t[3730259]))
              (3730329 call =[52289] call_tmp[3730305] call_tmp[3730320])
            }
            (5640827 call chpl__autoDestroy[4184737] tmp[3730242])
          }
          {
            const-val call_tmp[3730336]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3730338 'move' call_tmp[3730336](3730341 call ==[52725] tmp[3729977] QIO_CONV_SET_MAX_WIDTH_BYTES[168068]))
            const-val call_tmp[3730344]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3730346 'move' call_tmp[3730344] call_tmp[3730336])
            if call_tmp[3730344]
            {
              const-val call_tmp[3730353]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
              val error[5519193]:Error[85511] "error variable" "temp"
              (5519195 'move' error[5519193] nil[32])
              const-val ret_tmp[5593633]:(int(64),bool)[3040018] "temp"
              (3730358 call _toIntegral[3731311] argi[3729945] error[5519193] ret_tmp[5593633])
              (5593636 'move' call_tmp[3730353] ret_tmp[5593633])
              val errorExists[7306984]:bool[19] "temp"
              (7306989 'move' errorExists[7306984](7306986 '!=' error[5519193] nil[32]))
              if errorExists[7306984]
              {
                (5519199 '=' error_out[5519145] error[5519193])
                gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
              }
              const-val tmp[3730360]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
              (3730362 'move' tmp[3730360] call_tmp[3730353])
              1
              const-ref call_tmp[3730370]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
              (3730372 'move' call_tmp[3730370](3731766 '.' tmp[3730360] x0[3040014]))
              const-val t[3730377]:int(64)[10] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3731772]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3731776 'move' coerce_tmp[3731772](3731774 'deref' call_tmp[3730370]))
              (3730379 'move' t[3730377](3731769 call chpl__initCopy[1473915] coerce_tmp[3731772] 0))
              const-ref call_tmp[3730382]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3730384 'move' call_tmp[3730382](3731781 '.' tmp[3730360] x1[3040016]))
              const-val ok[3730389]:bool[19] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3731787]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3731791 'move' coerce_tmp[3731787](3731789 'deref' call_tmp[3730382]))
              (3730391 'move' ok[3730389](3731784 call chpl__initCopy[1757859] coerce_tmp[3731787] 0))
              const-val call_tmp[3730395]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3730397 'move' call_tmp[3730395](3730400 call ![63126] ok[3730389]))
              const-val call_tmp[3730402]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3730404 'move' call_tmp[3730402] call_tmp[3730395])
              if call_tmp[3730402]
              {
                const-val call_tmp[3730411]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3730413 'move' call_tmp[3730411](3730416 call qio_format_error_arg_mismatch[168158] i[3729943]))
                (3730419 call =[13310] error[3729935] call_tmp[3730411])
              }
              {
                ref call_tmp[3730423]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                (3730425 'move' call_tmp[3730423](3730428 call max_width_bytes[1131317] style[3729941]))
                val call_tmp[3730431]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[3730438]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
                (3730440 'move' call_tmp[3730438](3730443 call :[3040542] t[3730377]))
                (3730447 call =[52289] call_tmp[3730423] call_tmp[3730438])
              }
              (5640831 call chpl__autoDestroy[4184737] tmp[3730360])
            }
            {
              const-val call_tmp[3730454]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3730456 'move' call_tmp[3730454](3730459 call ==[52725] tmp[3729977] QIO_CONV_SET_PRECISION[168073]))
              const-val call_tmp[3730462]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3730464 'move' call_tmp[3730462] call_tmp[3730454])
              if call_tmp[3730462]
              {
                const-val call_tmp[3730471]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                val error[5519208]:Error[85511] "error variable" "temp"
                (5519210 'move' error[5519208] nil[32])
                const-val ret_tmp[5593639]:(int(64),bool)[3040018] "temp"
                (3730476 call _toIntegral[3731311] argi[3729945] error[5519208] ret_tmp[5593639])
                (5593642 'move' call_tmp[3730471] ret_tmp[5593639])
                val errorExists[7306992]:bool[19] "temp"
                (7306997 'move' errorExists[7306992](7306994 '!=' error[5519208] nil[32]))
                if errorExists[7306992]
                {
                  (5519214 '=' error_out[5519145] error[5519208])
                  gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
                }
                const-val tmp[3730478]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
                (3730480 'move' tmp[3730478] call_tmp[3730471])
                1
                const-ref call_tmp[3730488]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                (3730490 'move' call_tmp[3730488](3731817 '.' tmp[3730478] x0[3040014]))
                const-val t[3730495]:int(64)[10] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3731823]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3731827 'move' coerce_tmp[3731823](3731825 'deref' call_tmp[3730488]))
                (3730497 'move' t[3730495](3731820 call chpl__initCopy[1473915] coerce_tmp[3731823] 0))
                const-ref call_tmp[3730500]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                (3730502 'move' call_tmp[3730500](3731832 '.' tmp[3730478] x1[3040016]))
                const-val ok[3730507]:bool[19] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3731838]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3731842 'move' coerce_tmp[3731838](3731840 'deref' call_tmp[3730500]))
                (3730509 'move' ok[3730507](3731835 call chpl__initCopy[1757859] coerce_tmp[3731838] 0))
                const-val call_tmp[3730513]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3730515 'move' call_tmp[3730513](3730518 call ![63126] ok[3730507]))
                const-val call_tmp[3730520]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3730522 'move' call_tmp[3730520] call_tmp[3730513])
                if call_tmp[3730520]
                {
                  const-val call_tmp[3730529]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3730531 'move' call_tmp[3730529](3730534 call qio_format_error_arg_mismatch[168158] i[3729943]))
                  (3730537 call =[13310] error[3729935] call_tmp[3730529])
                }
                {
                  ref call_tmp[3730541]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3730543 'move' call_tmp[3730541](3730546 call precision[1131865] style[3729941]))
                  val call_tmp[3730549]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[3730556]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3730558 'move' call_tmp[3730556](3730561 call :[1513418] t[3730495]))
                  (3730565 call =[52209] call_tmp[3730541] call_tmp[3730556])
                }
                (5640835 call chpl__autoDestroy[4184737] tmp[3730478])
              }
              {
                const-val call_tmp[3730572]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3730574 'move' call_tmp[3730572](3730577 call ==[52725] tmp[3729977] QIO_CONV_SET_STRINGSTART[168088]))
                const-val call_tmp[3730580]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3730582 'move' call_tmp[3730580] call_tmp[3730572])
                if call_tmp[3730580]
                {
                  const-val call_tmp[3730589]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                  const-val ret_tmp[5593663]:(int(32),bool)[3040996] "temp"
                  (3730594 call _toChar[3731901] argi[3729945] ret_tmp[5593663])
                  (5593666 'move' call_tmp[3730589] ret_tmp[5593663])
                  const-val tmp[3730596]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                  (3730598 'move' tmp[3730596] call_tmp[3730589])
                  1
                  const-ref call_tmp[3730606]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3730608 'move' call_tmp[3730606](3732043 '.' tmp[3730596] x0[3040992]))
                  const-val t[3730613]:int(32)[66] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3732049]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3732053 'move' coerce_tmp[3732049](3732051 'deref' call_tmp[3730606]))
                  (3730615 'move' t[3730613](3732046 call chpl__initCopy[1513822] coerce_tmp[3732049] 0))
                  const-ref call_tmp[3730618]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                  (3730620 'move' call_tmp[3730618](3732058 '.' tmp[3730596] x1[3040994]))
                  const-val ok[3730625]:bool[19] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3732064]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3732068 'move' coerce_tmp[3732064](3732066 'deref' call_tmp[3730618]))
                  (3730627 'move' ok[3730625](3732061 call chpl__initCopy[1757859] coerce_tmp[3732064] 0))
                  const-val call_tmp[3730631]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3730633 'move' call_tmp[3730631](3730636 call ![63126] ok[3730625]))
                  const-val call_tmp[3730638]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3730640 'move' call_tmp[3730638] call_tmp[3730631])
                  if call_tmp[3730638]
                  {
                    const-val call_tmp[3730647]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3730649 'move' call_tmp[3730647](3730652 call qio_format_error_arg_mismatch[168158] i[3729943]))
                    (3730655 call =[13310] error[3729935] call_tmp[3730647])
                  }
                  {
                    ref call_tmp[3730659]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                    (3730661 'move' call_tmp[3730659](3730664 call string_start[1131343] style[3729941]))
                    const-val call_tmp[3730667]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3730669 'move' call_tmp[3730667](3730672 call :[3041420] t[3730613]))
                    (3730676 call =[52249] call_tmp[3730659] call_tmp[3730667])
                  }
                  (5640839 call chpl__autoDestroy[4184873] tmp[3730596])
                }
                {
                  const-val call_tmp[3730683]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3730685 'move' call_tmp[3730683](3730688 call ==[52725] tmp[3729977] QIO_CONV_SET_STRINGEND[168098]))
                  const-val call_tmp[3730691]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3730693 'move' call_tmp[3730691] call_tmp[3730683])
                  if call_tmp[3730691]
                  {
                    const-val call_tmp[3730700]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5593669]:(int(32),bool)[3040996] "temp"
                    (3730705 call _toChar[3731901] argi[3729945] ret_tmp[5593669])
                    (5593672 'move' call_tmp[3730700] ret_tmp[5593669])
                    const-val tmp[3730707]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                    (3730709 'move' tmp[3730707] call_tmp[3730700])
                    1
                    const-ref call_tmp[3730717]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                    (3730719 'move' call_tmp[3730717](3732093 '.' tmp[3730707] x0[3040992]))
                    const-val t[3730724]:int(32)[66] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3732099]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3732103 'move' coerce_tmp[3732099](3732101 'deref' call_tmp[3730717]))
                    (3730726 'move' t[3730724](3732096 call chpl__initCopy[1513822] coerce_tmp[3732099] 0))
                    const-ref call_tmp[3730729]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                    (3730731 'move' call_tmp[3730729](3732108 '.' tmp[3730707] x1[3040994]))
                    const-val ok[3730736]:bool[19] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3732114]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3732118 'move' coerce_tmp[3732114](3732116 'deref' call_tmp[3730729]))
                    (3730738 'move' ok[3730736](3732111 call chpl__initCopy[1757859] coerce_tmp[3732114] 0))
                    const-val call_tmp[3730742]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3730744 'move' call_tmp[3730742](3730747 call ![63126] ok[3730736]))
                    const-val call_tmp[3730749]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3730751 'move' call_tmp[3730749] call_tmp[3730742])
                    if call_tmp[3730749]
                    {
                      const-val call_tmp[3730758]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3730760 'move' call_tmp[3730758](3730763 call qio_format_error_arg_mismatch[168158] i[3729943]))
                      (3730766 call =[13310] error[3729935] call_tmp[3730758])
                    }
                    {
                      ref call_tmp[3730770]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                      (3730772 'move' call_tmp[3730770](3730775 call string_end[1131369] style[3729941]))
                      const-val call_tmp[3730778]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3730780 'move' call_tmp[3730778](3730783 call :[3041420] t[3730724]))
                      (3730787 call =[52249] call_tmp[3730770] call_tmp[3730778])
                    }
                    (5640843 call chpl__autoDestroy[4184873] tmp[3730707])
                  }
                  {
                    const-val call_tmp[3730794]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3730796 'move' call_tmp[3730794](3730799 call ==[52725] tmp[3729977] QIO_CONV_SET_STRINGSTARTEND[168093]))
                    const-val call_tmp[3730802]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3730804 'move' call_tmp[3730802] call_tmp[3730794])
                    if call_tmp[3730802]
                    {
                      const-val call_tmp[3730811]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                      const-val ret_tmp[5593675]:(int(32),bool)[3040996] "temp"
                      (3730816 call _toChar[3731901] argi[3729945] ret_tmp[5593675])
                      (5593678 'move' call_tmp[3730811] ret_tmp[5593675])
                      const-val tmp[3730818]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                      (3730820 'move' tmp[3730818] call_tmp[3730811])
                      1
                      const-ref call_tmp[3730828]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (3730830 'move' call_tmp[3730828](3732143 '.' tmp[3730818] x0[3040992]))
                      const-val t[3730835]:int(32)[66] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3732149]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3732153 'move' coerce_tmp[3732149](3732151 'deref' call_tmp[3730828]))
                      (3730837 'move' t[3730835](3732146 call chpl__initCopy[1513822] coerce_tmp[3732149] 0))
                      const-ref call_tmp[3730840]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                      (3730842 'move' call_tmp[3730840](3732158 '.' tmp[3730818] x1[3040994]))
                      const-val ok[3730847]:bool[19] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3732164]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3732168 'move' coerce_tmp[3732164](3732166 'deref' call_tmp[3730840]))
                      (3730849 'move' ok[3730847](3732161 call chpl__initCopy[1757859] coerce_tmp[3732164] 0))
                      const-val call_tmp[3730853]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3730855 'move' call_tmp[3730853](3730858 call ![63126] ok[3730847]))
                      const-val call_tmp[3730860]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3730862 'move' call_tmp[3730860] call_tmp[3730853])
                      if call_tmp[3730860]
                      {
                        const-val call_tmp[3730869]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3730871 'move' call_tmp[3730869](3730874 call qio_format_error_arg_mismatch[168158] i[3729943]))
                        (3730877 call =[13310] error[3729935] call_tmp[3730869])
                      }
                      {
                        ref call_tmp[3730881]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                        (3730883 'move' call_tmp[3730881](3730886 call string_start[1131343] style[3729941]))
                        const-val call_tmp[3730889]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3730891 'move' call_tmp[3730889](3730894 call :[3041420] t[3730835]))
                        (3730898 call =[52249] call_tmp[3730881] call_tmp[3730889])
                        ref call_tmp[3730903]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
                        (3730905 'move' call_tmp[3730903](3730908 call string_end[1131369] style[3729941]))
                        const-val call_tmp[3730911]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3730913 'move' call_tmp[3730911](3730916 call :[3041420] t[3730835]))
                        (3730920 call =[52249] call_tmp[3730903] call_tmp[3730911])
                      }
                      (5640847 call chpl__autoDestroy[4184873] tmp[3730818])
                    }
                    {
                      const-val call_tmp[3730927]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3730929 'move' call_tmp[3730927](3730932 call ==[52725] tmp[3729977] QIO_CONV_SET_STRINGLEN[168078]))
                      const-val call_tmp[3730935]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3730937 'move' call_tmp[3730935] call_tmp[3730927])
                      if call_tmp[3730935]
                      {
                        const-val call_tmp[3730944]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                        val error[5519223]:Error[85511] "error variable" "temp"
                        (5519225 'move' error[5519223] nil[32])
                        const-val ret_tmp[5593645]:(int(64),bool)[3040018] "temp"
                        (3730949 call _toIntegral[3731311] argi[3729945] error[5519223] ret_tmp[5593645])
                        (5593648 'move' call_tmp[3730944] ret_tmp[5593645])
                        val errorExists[7307000]:bool[19] "temp"
                        (7307005 'move' errorExists[7307000](7307002 '!=' error[5519223] nil[32]))
                        if errorExists[7307000]
                        {
                          (5519229 '=' error_out[5519145] error[5519223])
                          gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
                        }
                        const-val tmp[3730951]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
                        (3730953 'move' tmp[3730951] call_tmp[3730944])
                        1
                        const-ref call_tmp[3730961]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                        (3730963 'move' call_tmp[3730961](3732196 '.' tmp[3730951] x0[3040014]))
                        const-val t[3730968]:int(64)[10] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3732202]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3732206 'move' coerce_tmp[3732202](3732204 'deref' call_tmp[3730961]))
                        (3730970 'move' t[3730968](3732199 call chpl__initCopy[1473915] coerce_tmp[3732202] 0))
                        const-ref call_tmp[3730973]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                        (3730975 'move' call_tmp[3730973](3732211 '.' tmp[3730951] x1[3040016]))
                        const-val ok[3730980]:bool[19] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3732217]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3732221 'move' coerce_tmp[3732217](3732219 'deref' call_tmp[3730973]))
                        (3730982 'move' ok[3730980](3732214 call chpl__initCopy[1757859] coerce_tmp[3732217] 0))
                        const-val call_tmp[3730986]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3730988 'move' call_tmp[3730986](3730991 call ![63126] ok[3730980]))
                        const-val call_tmp[3730993]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3730995 'move' call_tmp[3730993] call_tmp[3730986])
                        if call_tmp[3730993]
                        {
                          const-val call_tmp[3731002]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3731004 'move' call_tmp[3731002](3731007 call qio_format_error_arg_mismatch[168158] i[3729943]))
                          (3731010 call =[13310] error[3729935] call_tmp[3731002])
                        }
                        {
                          ref call_tmp[3731014]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                          (3731016 'move' call_tmp[3731014](3731019 call str_style[1131213] style[3729941]))
                          val call_tmp[3731022]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[3731029]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3731031 'move' call_tmp[3731029] t[3730968])
                          (3731038 call =[52229] call_tmp[3731014] call_tmp[3731029])
                        }
                        (5640851 call chpl__autoDestroy[4184737] tmp[3730951])
                      }
                      {
                        const-val call_tmp[3731045]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3731047 'move' call_tmp[3731045](3731050 call ==[52725] tmp[3729977] QIO_CONV_SET_TERMINATOR[168083]))
                        const-val call_tmp[3731053]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3731055 'move' call_tmp[3731053] call_tmp[3731045])
                        if call_tmp[3731053]
                        {
                          const-val call_tmp[3731062]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                          const-val ret_tmp[5593681]:(int(32),bool)[3040996] "temp"
                          (3731067 call _toChar[3731901] argi[3729945] ret_tmp[5593681])
                          (5593684 'move' call_tmp[3731062] ret_tmp[5593681])
                          const-val tmp[3731069]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                          (3731071 'move' tmp[3731069] call_tmp[3731062])
                          1
                          const-ref call_tmp[3731079]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                          (3731081 'move' call_tmp[3731079](3732247 '.' tmp[3731069] x0[3040992]))
                          const-val t[3731086]:int(32)[66] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3732253]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3732257 'move' coerce_tmp[3732253](3732255 'deref' call_tmp[3731079]))
                          (3731088 'move' t[3731086](3732250 call chpl__initCopy[1513822] coerce_tmp[3732253] 0))
                          const-ref call_tmp[3731091]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                          (3731093 'move' call_tmp[3731091](3732262 '.' tmp[3731069] x1[3040994]))
                          const-val ok[3731098]:bool[19] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3732268]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3732272 'move' coerce_tmp[3732268](3732270 'deref' call_tmp[3731091]))
                          (3731100 'move' ok[3731098](3732265 call chpl__initCopy[1757859] coerce_tmp[3732268] 0))
                          const-val call_tmp[3731104]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3731106 'move' call_tmp[3731104](3731109 call ![63126] ok[3731098]))
                          const-val call_tmp[3731111]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3731113 'move' call_tmp[3731111] call_tmp[3731104])
                          if call_tmp[3731111]
                          {
                            const-val call_tmp[3731120]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3731122 'move' call_tmp[3731120](3731125 call qio_format_error_arg_mismatch[168158] i[3729943]))
                            (3731128 call =[13310] error[3729935] call_tmp[3731120])
                          }
                          {
                            ref call_tmp[3731132]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                            (3731134 'move' call_tmp[3731132](3731137 call str_style[1131213] style[3729941]))
                            val call_tmp[3731140]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            const-val call_tmp[3731147]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3731149 'move' call_tmp[3731147](3731152 call :[3041420] t[3731086]))
                            val call_tmp[3731155]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            val call_tmp[3731162]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                            const-val call_tmp[3731170]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3732289]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3732295 'move' coerce_tmp[3732289](3732291 'cast' int(16)[61] call_tmp[3731147]))
                            const-val coerce_tmp[3732297]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3732303 'move' coerce_tmp[3732297](3732299 'cast' int(16)[61] -256))
                            (3731172 'move' call_tmp[3731170](3731175 call -[57263] coerce_tmp[3732289] coerce_tmp[3732297]))
                            const-val call_tmp[3731178]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3731180 'move' call_tmp[3731178](3731183 call -[515511] call_tmp[3731170]))
                            const-val coerce_tmp[3732307]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3732313 'move' coerce_tmp[3732307](3732309 'cast' int(64)[10] call_tmp[3731178]))
                            (3731186 call =[52229] call_tmp[3731132] coerce_tmp[3732307])
                          }
                          (5640855 call chpl__autoDestroy[4184873] tmp[3731069])
                        }
                        {
                          const-val call_tmp[3731193]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3731195 'move' call_tmp[3731193](3731198 call ==[52725] tmp[3729977] QIO_CONV_SET_DONE[168108]))
                          const-val call_tmp[3731201]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3731203 'move' call_tmp[3731201] call_tmp[3731193])
                          if call_tmp[3731201]
                          {
                          }
                          {
                            const-val call_tmp[3731211]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3731213 'move' call_tmp[3731211](3731216 call ==[52725] tmp[3729977] QIO_CONV_UNK[167958]))
                            const-val call_tmp[3731219]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3731221 'move' call_tmp[3731219] call_tmp[3731211])
                            if call_tmp[3731219]
                            {
                              const-val call_tmp[3731228]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                              (3731230 'move' call_tmp[3731228](3731233 call qio_format_error_too_many_args[168146]))
                              (3731235 call =[13310] error[3729935] call_tmp[3731228])
                            }
                            {
                              (3731239 'move' ret[3729951] 1)
                              gotoReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (3731258 'move' ret[3729951] 0)
    label _end__conv_sethandler[3731263]
    (3731265 return ret[3729951])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._write_signed[3042764](const  ref arg this[3042770]:_ref(fileWriter(false,defaultSerializer))[1838958], const in arg width[3042774]:uint(32)[81], const in arg t[3042776]:int(64)[10], const in arg i[3042778]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[3042782]:errorCode[12828] "dead after last mention" "RVV" "temp"
    val err[3042790]:errorCode[12828] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3042792]:errorCode[12828] "dead after last mention" "maybe param" "temp" "type variable"
    const-ref call_tmp[3042801]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
    (3042803 'move' call_tmp[3042801](3042806 call _channel_internal[1840773] this[3042770]))
    const-val call_tmp[3042809]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3043124]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3043128 'move' coerce_tmp[3043124](3043126 'deref' call_tmp[3042801]))
    (3042811 'move' call_tmp[3042809](3042814 call qio_channel_byteorder[166012] coerce_tmp[3043124]))
    const-val byteorder[3042816]:uint(8)[71] "dead at end of block" "insert auto destroy"
    (3042818 'move' byteorder[3042816] call_tmp[3042809])
    {
      const-val tmp[3042823]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (3042825 'move' tmp[3042823] width[3042774])
      const-val call_tmp[3042828]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3043131]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3043137 'move' coerce_tmp[3043131](3043133 'cast' int(32)[66] 1))
      (3042830 'move' call_tmp[3042828](3042833 call ==[75172] tmp[3042823] coerce_tmp[3043131]))
      const-val call_tmp[3042836]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3042838 'move' call_tmp[3042836] call_tmp[3042828])
      if call_tmp[3042836]
      {
        val call_tmp[3042845]:int(8)[56] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[3042852]:int(8)[56] "dead at end of block" "maybe param" "temp"
        (3042854 'move' call_tmp[3042852](3042857 call :[3043141] t[3042776]))
        const-val x[3042860]:int(8)[56] "dead at end of block" "insert auto destroy"
        (3042862 'move' x[3042860] call_tmp[3042852])
        const-ref call_tmp[3042866]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
        (3042868 'move' call_tmp[3042866](3042871 call _channel_internal[1840773] this[3042770]))
        const-val call_tmp[3042874]:errorCode[12828] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3043174]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3043180 'move' coerce_tmp[3043174](3043176 'cast' int(32)[66] 0))
        val coerce_tmp[3043182]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3043186 'move' coerce_tmp[3043182](3043184 'deref' call_tmp[3042866]))
        (3042876 'move' call_tmp[3042874](3042879 call qio_channel_write_int8[166664] coerce_tmp[3043174] coerce_tmp[3043182] x[3042860]))
        (3042883 'move' err[3042790](3043189 call chpl__initCopy[1513527] call_tmp[3042874] 0))
      }
      {
        const-val call_tmp[3042891]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3043193]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3043199 'move' coerce_tmp[3043193](3043195 'cast' int(32)[66] 2))
        (3042893 'move' call_tmp[3042891](3042896 call ==[75172] tmp[3042823] coerce_tmp[3043193]))
        const-val call_tmp[3042899]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3042901 'move' call_tmp[3042899] call_tmp[3042891])
        if call_tmp[3042899]
        {
          val call_tmp[3042908]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3042915]:int(16)[61] "dead at end of block" "maybe param" "temp"
          (3042917 'move' call_tmp[3042915](3042920 call :[3043203] t[3042776]))
          const-val x[3042923]:int(16)[61] "dead at end of block" "insert auto destroy"
          (3042925 'move' x[3042923] call_tmp[3042915])
          const-ref call_tmp[3042929]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
          (3042931 'move' call_tmp[3042929](3042934 call _channel_internal[1840773] this[3042770]))
          const-val call_tmp[3042937]:errorCode[12828] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3043236]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043242 'move' coerce_tmp[3043236](3043238 'cast' int(32)[66] 0))
          const-val coerce_tmp[3043244]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043250 'move' coerce_tmp[3043244](3043246 'cast' int(32)[66] byteorder[3042816]))
          val coerce_tmp[3043252]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043256 'move' coerce_tmp[3043252](3043254 'deref' call_tmp[3042929]))
          (3042939 'move' call_tmp[3042937](3042942 call qio_channel_write_int16[166748] coerce_tmp[3043236] coerce_tmp[3043244] coerce_tmp[3043252] x[3042923]))
          (3042947 'move' err[3042790](3043259 call chpl__initCopy[1513527] call_tmp[3042937] 0))
        }
        {
          const-val call_tmp[3042956]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3043263]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043269 'move' coerce_tmp[3043263](3043265 'cast' int(32)[66] 4))
          (3042958 'move' call_tmp[3042956](3042961 call ==[75172] tmp[3042823] coerce_tmp[3043263]))
          const-val call_tmp[3042964]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3042966 'move' call_tmp[3042964] call_tmp[3042956])
          if call_tmp[3042964]
          {
            val call_tmp[3042973]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[3042980]:int(32)[66] "dead at end of block" "maybe param" "temp"
            (3042982 'move' call_tmp[3042980](3042985 call :[1513418] t[3042776]))
            const-val x[3042988]:int(32)[66] "dead at end of block" "insert auto destroy"
            (3042990 'move' x[3042988] call_tmp[3042980])
            const-ref call_tmp[3042994]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
            (3042996 'move' call_tmp[3042994](3042999 call _channel_internal[1840773] this[3042770]))
            const-val call_tmp[3043002]:errorCode[12828] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3043276]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043282 'move' coerce_tmp[3043276](3043278 'cast' int(32)[66] 0))
            const-val coerce_tmp[3043284]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043290 'move' coerce_tmp[3043284](3043286 'cast' int(32)[66] byteorder[3042816]))
            val coerce_tmp[3043292]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043296 'move' coerce_tmp[3043292](3043294 'deref' call_tmp[3042994]))
            (3043004 'move' call_tmp[3043002](3043007 call qio_channel_write_int32[166844] coerce_tmp[3043276] coerce_tmp[3043284] coerce_tmp[3043292] x[3042988]))
            (3043012 'move' err[3042790](3043299 call chpl__initCopy[1513527] call_tmp[3043002] 0))
          }
          {
            const-val call_tmp[3043021]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3043303]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043309 'move' coerce_tmp[3043303](3043305 'cast' int(32)[66] 8))
            (3043023 'move' call_tmp[3043021](3043026 call ==[75172] tmp[3042823] coerce_tmp[3043303]))
            const-val call_tmp[3043029]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3043031 'move' call_tmp[3043029] call_tmp[3043021])
            if call_tmp[3043029]
            {
              val call_tmp[3043038]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[3043045]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (3043047 'move' call_tmp[3043045] t[3042776])
              const-val x[3043053]:int(64)[10] "dead at end of block" "insert auto destroy"
              (3043055 'move' x[3043053] call_tmp[3043045])
              const-ref call_tmp[3043059]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
              (3043061 'move' call_tmp[3043059](3043064 call _channel_internal[1840773] this[3042770]))
              const-val call_tmp[3043067]:errorCode[12828] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3043316]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3043322 'move' coerce_tmp[3043316](3043318 'cast' int(32)[66] 0))
              const-val coerce_tmp[3043324]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3043330 'move' coerce_tmp[3043324](3043326 'cast' int(32)[66] byteorder[3042816]))
              val coerce_tmp[3043332]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3043336 'move' coerce_tmp[3043332](3043334 'deref' call_tmp[3043059]))
              (3043069 'move' call_tmp[3043067](3043072 call qio_channel_write_int64[166940] coerce_tmp[3043316] coerce_tmp[3043324] coerce_tmp[3043332] x[3043053]))
              (3043077 'move' err[3042790](3043339 call chpl__initCopy[1513527] call_tmp[3043067] 0))
            }
            {
              const-val call_tmp[3043086]:errorCode[12828] "dead after last mention" "maybe param" "temp"
              (3043088 'move' call_tmp[3043086](3043091 call qio_format_error_arg_mismatch[168158] i[3042778]))
              (3043093 'move' err[3042790](3043344 call chpl__initCopy[1513527] call_tmp[3043086] 0))
            }
          }
        }
      }
    }
    (3043349 '=' ret[3042782] err[3042790])
    gotoReturn _end__write_signed[3043112] _end__write_signed[3043112]
    label _end__write_signed[3043112]
    (3043114 return ret[3042782])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._write_unsigned[3051637](const  ref arg this[3051643]:_ref(fileWriter(false,defaultSerializer))[1838958], const in arg width[3051647]:uint(32)[81], const in arg t[3051649]:uint(64)[86], const in arg i[3051651]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[3051653]:errorCode[12828] "dead after last mention" "RVV" "temp"
    val err[3051661]:errorCode[12828] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3051663]:errorCode[12828] "dead after last mention" "maybe param" "temp" "type variable"
    const-ref call_tmp[3051672]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
    (3051674 'move' call_tmp[3051672](3051677 call _channel_internal[1840773] this[3051643]))
    const-val call_tmp[3051680]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3051994]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3051998 'move' coerce_tmp[3051994](3051996 'deref' call_tmp[3051672]))
    (3051682 'move' call_tmp[3051680](3051685 call qio_channel_byteorder[166012] coerce_tmp[3051994]))
    const-val byteorder[3051687]:uint(8)[71] "dead at end of block" "insert auto destroy"
    (3051689 'move' byteorder[3051687] call_tmp[3051680])
    {
      const-val tmp[3051694]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (3051696 'move' tmp[3051694] width[3051647])
      const-val call_tmp[3051699]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3052001]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3052007 'move' coerce_tmp[3052001](3052003 'cast' int(32)[66] 1))
      (3051701 'move' call_tmp[3051699](3051704 call ==[75172] tmp[3051694] coerce_tmp[3052001]))
      const-val call_tmp[3051707]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3051709 'move' call_tmp[3051707] call_tmp[3051699])
      if call_tmp[3051707]
      {
        val call_tmp[3051716]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[3051723]:uint(8)[71] "dead at end of block" "maybe param" "temp"
        (3051725 'move' call_tmp[3051723](3051728 call :[3052011] t[3051649]))
        const-val x[3051731]:uint(8)[71] "dead at end of block" "insert auto destroy"
        (3051733 'move' x[3051731] call_tmp[3051723])
        const-ref call_tmp[3051737]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
        (3051739 'move' call_tmp[3051737](3051742 call _channel_internal[1840773] this[3051643]))
        const-val call_tmp[3051745]:errorCode[12828] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3052044]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3052050 'move' coerce_tmp[3052044](3052046 'cast' int(32)[66] 0))
        val coerce_tmp[3052052]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3052056 'move' coerce_tmp[3052052](3052054 'deref' call_tmp[3051737]))
        (3051747 'move' call_tmp[3051745](3051750 call qio_channel_write_uint8[166704] coerce_tmp[3052044] coerce_tmp[3052052] x[3051731]))
        (3051754 'move' err[3051661](3052059 call chpl__initCopy[1513527] call_tmp[3051745] 0))
      }
      {
        const-val call_tmp[3051762]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3052063]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3052069 'move' coerce_tmp[3052063](3052065 'cast' int(32)[66] 2))
        (3051764 'move' call_tmp[3051762](3051767 call ==[75172] tmp[3051694] coerce_tmp[3052063]))
        const-val call_tmp[3051770]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3051772 'move' call_tmp[3051770] call_tmp[3051762])
        if call_tmp[3051770]
        {
          val call_tmp[3051779]:uint(16)[76] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3051786]:uint(16)[76] "dead at end of block" "maybe param" "temp"
          (3051788 'move' call_tmp[3051786](3051791 call :[3052073] t[3051649]))
          const-val x[3051794]:uint(16)[76] "dead at end of block" "insert auto destroy"
          (3051796 'move' x[3051794] call_tmp[3051786])
          const-ref call_tmp[3051800]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
          (3051802 'move' call_tmp[3051800](3051805 call _channel_internal[1840773] this[3051643]))
          const-val call_tmp[3051808]:errorCode[12828] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3052106]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052112 'move' coerce_tmp[3052106](3052108 'cast' int(32)[66] 0))
          const-val coerce_tmp[3052114]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052120 'move' coerce_tmp[3052114](3052116 'cast' int(32)[66] byteorder[3051687]))
          val coerce_tmp[3052122]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052126 'move' coerce_tmp[3052122](3052124 'deref' call_tmp[3051800]))
          (3051810 'move' call_tmp[3051808](3051813 call qio_channel_write_uint16[166796] coerce_tmp[3052106] coerce_tmp[3052114] coerce_tmp[3052122] x[3051794]))
          (3051818 'move' err[3051661](3052129 call chpl__initCopy[1513527] call_tmp[3051808] 0))
        }
        {
          const-val call_tmp[3051827]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3052133]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052139 'move' coerce_tmp[3052133](3052135 'cast' int(32)[66] 4))
          (3051829 'move' call_tmp[3051827](3051832 call ==[75172] tmp[3051694] coerce_tmp[3052133]))
          const-val call_tmp[3051835]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3051837 'move' call_tmp[3051835] call_tmp[3051827])
          if call_tmp[3051835]
          {
            val call_tmp[3051844]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[3051851]:uint(32)[81] "dead at end of block" "maybe param" "temp"
            (3051853 'move' call_tmp[3051851](3051856 call :[3052143] t[3051649]))
            const-val x[3051859]:uint(32)[81] "dead at end of block" "insert auto destroy"
            (3051861 'move' x[3051859] call_tmp[3051851])
            const-ref call_tmp[3051865]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
            (3051867 'move' call_tmp[3051865](3051870 call _channel_internal[1840773] this[3051643]))
            const-val call_tmp[3051873]:errorCode[12828] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3052176]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3052182 'move' coerce_tmp[3052176](3052178 'cast' int(32)[66] 0))
            const-val coerce_tmp[3052184]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3052190 'move' coerce_tmp[3052184](3052186 'cast' int(32)[66] byteorder[3051687]))
            val coerce_tmp[3052192]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3052196 'move' coerce_tmp[3052192](3052194 'deref' call_tmp[3051865]))
            (3051875 'move' call_tmp[3051873](3051878 call qio_channel_write_uint32[166892] coerce_tmp[3052176] coerce_tmp[3052184] coerce_tmp[3052192] x[3051859]))
            (3051883 'move' err[3051661](3052199 call chpl__initCopy[1513527] call_tmp[3051873] 0))
          }
          {
            const-val call_tmp[3051892]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3052203]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3052209 'move' coerce_tmp[3052203](3052205 'cast' int(32)[66] 8))
            (3051894 'move' call_tmp[3051892](3051897 call ==[75172] tmp[3051694] coerce_tmp[3052203]))
            const-val call_tmp[3051900]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3051902 'move' call_tmp[3051900] call_tmp[3051892])
            if call_tmp[3051900]
            {
              val call_tmp[3051909]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[3051916]:uint(64)[86] "dead at end of block" "maybe param" "temp"
              (3051918 'move' call_tmp[3051916] t[3051649])
              const-val x[3051924]:uint(64)[86] "dead at end of block" "insert auto destroy"
              (3051926 'move' x[3051924] call_tmp[3051916])
              const-ref call_tmp[3051930]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
              (3051932 'move' call_tmp[3051930](3051935 call _channel_internal[1840773] this[3051643]))
              const-val call_tmp[3051938]:errorCode[12828] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3052216]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3052222 'move' coerce_tmp[3052216](3052218 'cast' int(32)[66] 0))
              const-val coerce_tmp[3052224]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3052230 'move' coerce_tmp[3052224](3052226 'cast' int(32)[66] byteorder[3051687]))
              val coerce_tmp[3052232]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3052236 'move' coerce_tmp[3052232](3052234 'deref' call_tmp[3051930]))
              (3051940 'move' call_tmp[3051938](3051943 call qio_channel_write_uint64[166988] coerce_tmp[3052216] coerce_tmp[3052224] coerce_tmp[3052232] x[3051924]))
              (3051948 'move' err[3051661](3052239 call chpl__initCopy[1513527] call_tmp[3051938] 0))
            }
            {
              const-val call_tmp[3051957]:errorCode[12828] "dead after last mention" "maybe param" "temp"
              (3051959 'move' call_tmp[3051957](3051962 call qio_format_error_arg_mismatch[168158] i[3051651]))
              (3051964 'move' err[3051661](3052244 call chpl__initCopy[1513527] call_tmp[3051957] 0))
            }
          }
        }
      }
    }
    (3051974 'move' ret[3051653] err[3051661])
    gotoReturn _end__write_unsigned[3051982] _end__write_unsigned[3051982]
    label _end__write_unsigned[3051982]
    (3051984 return ret[3051653])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._write_real[3060196](const  ref arg this[3060202]:_ref(fileWriter(false,defaultSerializer))[1838958], const in arg width[3060206]:uint(32)[81], const in arg t[3060208]:real(64)[13], const in arg i[3060210]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[3060212]:errorCode[12828] "dead after last mention" "RVV" "temp"
    val err[3060220]:errorCode[12828] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[3060222]:errorCode[12828] "dead after last mention" "maybe param" "temp" "type variable"
    const-ref call_tmp[3060231]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
    (3060233 'move' call_tmp[3060231](3060236 call _channel_internal[1840773] this[3060202]))
    const-val call_tmp[3060239]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3060423]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3060427 'move' coerce_tmp[3060423](3060425 'deref' call_tmp[3060231]))
    (3060241 'move' call_tmp[3060239](3060244 call qio_channel_byteorder[166012] coerce_tmp[3060423]))
    const-val byteorder[3060246]:uint(8)[71] "dead at end of block" "insert auto destroy"
    (3060248 'move' byteorder[3060246] call_tmp[3060239])
    {
      const-val tmp[3060253]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (3060255 'move' tmp[3060253] width[3060206])
      const-val call_tmp[3060258]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3060430]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3060436 'move' coerce_tmp[3060430](3060432 'cast' int(32)[66] 4))
      (3060260 'move' call_tmp[3060258](3060263 call ==[75172] tmp[3060253] coerce_tmp[3060430]))
      const-val call_tmp[3060266]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3060268 'move' call_tmp[3060266] call_tmp[3060258])
      if call_tmp[3060266]
      {
        val call_tmp[3060275]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[3060282]:real(32)[91] "dead at end of block" "maybe param" "temp"
        (3060284 'move' call_tmp[3060282](3060287 call :[2224872] t[3060208]))
        const-val x[3060290]:real(32)[91] "dead at end of block" "insert auto destroy"
        (3060292 'move' x[3060290] call_tmp[3060282])
        const-ref call_tmp[3060296]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
        (3060298 'move' call_tmp[3060296](3060301 call _channel_internal[1840773] this[3060202]))
        const-val call_tmp[3060304]:errorCode[12828] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3060444]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3060450 'move' coerce_tmp[3060444](3060446 'cast' int(32)[66] 0))
        const-val coerce_tmp[3060452]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3060458 'move' coerce_tmp[3060452](3060454 'cast' int(32)[66] byteorder[3060246]))
        val coerce_tmp[3060460]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3060464 'move' coerce_tmp[3060460](3060462 'deref' call_tmp[3060296]))
        (3060306 'move' call_tmp[3060304](3060309 call qio_channel_write_float32[167036] coerce_tmp[3060444] coerce_tmp[3060452] coerce_tmp[3060460] x[3060290]))
        (3060314 'move' err[3060220](3060467 call chpl__initCopy[1513527] call_tmp[3060304] 0))
      }
      {
        const-val call_tmp[3060323]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3060471]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3060477 'move' coerce_tmp[3060471](3060473 'cast' int(32)[66] 8))
        (3060325 'move' call_tmp[3060323](3060328 call ==[75172] tmp[3060253] coerce_tmp[3060471]))
        const-val call_tmp[3060331]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3060333 'move' call_tmp[3060331] call_tmp[3060323])
        if call_tmp[3060331]
        {
          val call_tmp[3060340]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3060347]:real(64)[13] "dead at end of block" "maybe param" "temp"
          (3060349 'move' call_tmp[3060347] t[3060208])
          const-val x[3060355]:real(64)[13] "dead at end of block" "insert auto destroy"
          (3060357 'move' x[3060355] call_tmp[3060347])
          const-ref call_tmp[3060361]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
          (3060363 'move' call_tmp[3060361](3060366 call _channel_internal[1840773] this[3060202]))
          const-val call_tmp[3060369]:errorCode[12828] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3060485]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3060491 'move' coerce_tmp[3060485](3060487 'cast' int(32)[66] 0))
          const-val coerce_tmp[3060493]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3060499 'move' coerce_tmp[3060493](3060495 'cast' int(32)[66] byteorder[3060246]))
          val coerce_tmp[3060501]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3060505 'move' coerce_tmp[3060501](3060503 'deref' call_tmp[3060361]))
          (3060371 'move' call_tmp[3060369](3060374 call qio_channel_write_float64[167132] coerce_tmp[3060485] coerce_tmp[3060493] coerce_tmp[3060501] x[3060355]))
          (3060379 'move' err[3060220](3060508 call chpl__initCopy[1513527] call_tmp[3060369] 0))
        }
        {
          const-val call_tmp[3060388]:errorCode[12828] "dead after last mention" "maybe param" "temp"
          (3060390 'move' call_tmp[3060388](3060393 call qio_format_error_arg_mismatch[168158] i[3060210]))
          (3060395 'move' err[3060220](3060513 call chpl__initCopy[1513527] call_tmp[3060388] 0))
        }
      }
    }
    (3060403 'move' ret[3060212] err[3060220])
    gotoReturn _end__write_real[3060411] _end__write_real[3060411]
    label _end__write_real[3060411]
    (3060413 return ret[3060212])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._write_complex[3078407](const  ref arg this[3078413]:_ref(fileWriter(false,defaultSerializer))[1838958], const in arg width[3078417]:uint(32)[81], const in arg t[3078419]:complex(128)[111], const in arg i[3078421]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[3078423]:errorCode[12828] "dead after last mention" "RVV" "temp"
    val err[3078431]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val init_coerce_tmp[3078773]:errorCode[12828] "dead at end of block" "temp"
    (3079956 '=' init_coerce_tmp[3078773](3079952 call :[13286] 0))
    (3078433 'move' err[3078431] init_coerce_tmp[3078773])
    const-ref call_tmp[3078438]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
    (3078440 'move' call_tmp[3078438](3078443 call _channel_internal[1840773] this[3078413]))
    const-val call_tmp[3078446]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3078780]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3078784 'move' coerce_tmp[3078780](3078782 'deref' call_tmp[3078438]))
    (3078448 'move' call_tmp[3078446](3078451 call qio_channel_byteorder[166012] coerce_tmp[3078780]))
    const-val byteorder[3078453]:uint(8)[71] "dead at end of block" "insert auto destroy"
    (3078455 'move' byteorder[3078453] call_tmp[3078446])
    {
      const-val tmp[3078460]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (3078462 'move' tmp[3078460] width[3078417])
      const-val call_tmp[3078465]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3078787]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3078793 'move' coerce_tmp[3078787](3078789 'cast' int(32)[66] 8))
      (3078467 'move' call_tmp[3078465](3078470 call ==[75172] tmp[3078460] coerce_tmp[3078787]))
      const-val call_tmp[3078473]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3078475 'move' call_tmp[3078473] call_tmp[3078465])
      if call_tmp[3078473]
      {
        val call_tmp[3078482]:complex(64)[106] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[3078489]:complex(64)[106] "dead at end of block" "maybe param" "temp"
        (3078491 'move' call_tmp[3078489](3078494 call :[3078797] t[3078419]))
        const-val x[3078497]:complex(64)[106] "dead at end of block" "insert auto destroy"
        (3078499 'move' x[3078497] call_tmp[3078489])
        const-ref call_tmp[3078503]:_ref(real(32))[1470469] "dead after last mention" "maybe param" "temp"
        val tmp[5493051]:real(32)[91] "temp"
        (3078505 'move' tmp[5493051](3079489 call re[3079460] x[3078497]))
        (5493055 'move' call_tmp[3078503](5493053 'addr of' tmp[5493051]))
        const-val re[3078511]:real(32)[91] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3079598]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3079602 'move' coerce_tmp[3079598](3079600 'deref' call_tmp[3078503]))
        (5630389 '=' re[3078511] coerce_tmp[3079598])
        (3078513 'noop')
        const-ref call_tmp[3078517]:_ref(real(32))[1470469] "dead after last mention" "maybe param" "temp"
        val tmp[5493057]:real(32)[91] "temp"
        (3078519 'move' tmp[5493057](3079647 call im[3079618] x[3078497]))
        (5493061 'move' call_tmp[3078517](5493059 'addr of' tmp[5493057]))
        const-val im[3078525]:real(32)[91] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[3079756]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (3079760 'move' coerce_tmp[3079756](3079758 'deref' call_tmp[3078517]))
        (5630392 '=' im[3078525] coerce_tmp[3079756])
        (3078527 'noop')
        const-ref call_tmp[3078532]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
        (3078534 'move' call_tmp[3078532](3078537 call _channel_internal[1840773] this[3078413]))
        const-val call_tmp[3078540]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3079764]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079770 'move' coerce_tmp[3079764](3079766 'cast' int(32)[66] 0))
        const-val coerce_tmp[3079772]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079778 'move' coerce_tmp[3079772](3079774 'cast' int(32)[66] byteorder[3078453]))
        val coerce_tmp[3079780]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079784 'move' coerce_tmp[3079780](3079782 'deref' call_tmp[3078532]))
        (3078542 'move' call_tmp[3078540](3078545 call qio_channel_write_float32[167036] coerce_tmp[3079764] coerce_tmp[3079772] coerce_tmp[3079780] re[3078511]))
        (3078551 call =[13310] err[3078431] call_tmp[3078540])
        const-val call_tmp[3078558]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3078560 'move' call_tmp[3078558](3078563 call ![13178] err[3078431]))
        const-val call_tmp[3078565]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3078567 'move' call_tmp[3078565] call_tmp[3078558])
        if call_tmp[3078565]
        {
          const-ref call_tmp[3078574]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
          (3078576 'move' call_tmp[3078574](3078579 call _channel_internal[1840773] this[3078413]))
          const-val call_tmp[3078582]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3079801]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079807 'move' coerce_tmp[3079801](3079803 'cast' int(32)[66] 0))
          const-val coerce_tmp[3079809]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079815 'move' coerce_tmp[3079809](3079811 'cast' int(32)[66] byteorder[3078453]))
          val coerce_tmp[3079817]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079821 'move' coerce_tmp[3079817](3079819 'deref' call_tmp[3078574]))
          (3078584 'move' call_tmp[3078582](3078587 call qio_channel_write_float32[167036] coerce_tmp[3079801] coerce_tmp[3079809] coerce_tmp[3079817] im[3078525]))
          (3078593 call =[13310] err[3078431] call_tmp[3078582])
        }
      }
      {
        const-val call_tmp[3078602]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3079831]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079837 'move' coerce_tmp[3079831](3079833 'cast' int(32)[66] 16))
        (3078604 'move' call_tmp[3078602](3078607 call ==[75172] tmp[3078460] coerce_tmp[3079831]))
        const-val call_tmp[3078610]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3078612 'move' call_tmp[3078610] call_tmp[3078602])
        if call_tmp[3078610]
        {
          val call_tmp[3078619]:complex(128)[111] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[3078626]:complex(128)[111] "dead at end of block" "maybe param" "temp"
          (3078628 'move' call_tmp[3078626] t[3078419])
          const-val x[3078634]:complex(128)[111] "dead at end of block" "insert auto destroy"
          (3078636 'move' x[3078634] call_tmp[3078626])
          const-ref call_tmp[3078640]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
          val tmp[5493063]:real(64)[13] "temp"
          (3078642 'move' tmp[5493063](3079843 call re[3078865] x[3078634]))
          (5493067 'move' call_tmp[3078640](5493065 'addr of' tmp[5493063]))
          const-val re[3078648]:real(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3079852]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079856 'move' coerce_tmp[3079852](3079854 'deref' call_tmp[3078640]))
          (3078650 'move' re[3078648](3079849 call chpl__initCopy[2153905] coerce_tmp[3079852] 0))
          const-ref call_tmp[3078654]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
          val tmp[5493069]:real(64)[13] "temp"
          (3078656 'move' tmp[5493069](3079860 call im[3079013] x[3078634]))
          (5493073 'move' call_tmp[3078654](5493071 'addr of' tmp[5493069]))
          const-val im[3078662]:real(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3079869]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079873 'move' coerce_tmp[3079869](3079871 'deref' call_tmp[3078654]))
          (3078664 'move' im[3078662](3079866 call chpl__initCopy[2153905] coerce_tmp[3079869] 0))
          const-ref call_tmp[3078669]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
          (3078671 'move' call_tmp[3078669](3078674 call _channel_internal[1840773] this[3078413]))
          const-val call_tmp[3078677]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3079877]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079883 'move' coerce_tmp[3079877](3079879 'cast' int(32)[66] 0))
          const-val coerce_tmp[3079885]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079891 'move' coerce_tmp[3079885](3079887 'cast' int(32)[66] byteorder[3078453]))
          val coerce_tmp[3079893]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079897 'move' coerce_tmp[3079893](3079895 'deref' call_tmp[3078669]))
          (3078679 'move' call_tmp[3078677](3078682 call qio_channel_write_float64[167132] coerce_tmp[3079877] coerce_tmp[3079885] coerce_tmp[3079893] re[3078648]))
          (3078688 call =[13310] err[3078431] call_tmp[3078677])
          const-val call_tmp[3078695]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3078697 'move' call_tmp[3078695](3078700 call ![13178] err[3078431]))
          const-val call_tmp[3078702]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3078704 'move' call_tmp[3078702] call_tmp[3078695])
          if call_tmp[3078702]
          {
            const-ref call_tmp[3078711]:_ref(c_ptr(qio_channel_t))[1466058] "dead after last mention" "maybe param" "temp"
            (3078713 'move' call_tmp[3078711](3078716 call _channel_internal[1840773] this[3078413]))
            const-val call_tmp[3078719]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3079914]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3079920 'move' coerce_tmp[3079914](3079916 'cast' int(32)[66] 0))
            const-val coerce_tmp[3079922]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3079928 'move' coerce_tmp[3079922](3079924 'cast' int(32)[66] byteorder[3078453]))
            val coerce_tmp[3079930]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3079934 'move' coerce_tmp[3079930](3079932 'deref' call_tmp[3078711]))
            (3078721 'move' call_tmp[3078719](3078724 call qio_channel_write_float64[167132] coerce_tmp[3079914] coerce_tmp[3079922] coerce_tmp[3079930] im[3078662]))
            (3078730 call =[13310] err[3078431] call_tmp[3078719])
          }
        }
        {
          const-val call_tmp[3078739]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3078741 'move' call_tmp[3078739](3078744 call qio_format_error_arg_mismatch[168158] i[3078421]))
          (3078747 call =[13310] err[3078431] call_tmp[3078739])
        }
      }
    }
    (3078754 'move' ret[3078423] err[3078431])
    gotoReturn _end__write_complex[3078762] _end__write_complex[3078762]
    label _end__write_complex[3078762]
    (3078764 return ret[3078423])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._writefOne[3035286](const  ref arg this[3035292]:_ref(fileWriter(false,defaultSerializer))[1838958], const  ref arg fmtStr[3035294]:string[244], const  ref arg arg[3035296]:_ref(real(64))[1465874], const in arg i[3035298]:int(64)[10], ref arg cur[3035302]:_ref(uint(64))[1465718], ref arg j[3035304]:_ref(int(64))[1465689], const in arg argType[3035308]:c_ptr(int(32))[3035159], const in arg argTypeLen[3035310]:int(64)[10], ref arg conv[3035312]:_ref(qio_conv_t)[1579597], ref arg gotConv[3035314]:_ref(bool)[1466299], ref arg style[3035316]:_ref(iostyleInternal)[1538907], ref arg err[3035318]:_ref(errorCode)[1499037], const  ref arg origLocale[3035320]:locale[234], const in arg len[3035324]:uint(64)[86], ref arg error_out[5503164]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3035334]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3035343]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3035345 'move' call_tmp[3035343](3035348 call >=[54627] i[3035298] argTypeLen[3035310]))
      const-val call_tmp[3035351]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3035353 'move' call_tmp[3035351] call_tmp[3035343])
      if call_tmp[3035351]
      {
        (3035361 call halt[1673640] "Index " i[3035298] " is accessed on argType of length " argTypeLen[3035310])
      }
    }
    (3035369 call =[52153] gotConv[3035314] 0)
    const-val call_tmp[3035373]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3037218]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3037222 'move' coerce_tmp[3037218](3037220 'deref' j[3035304]))
    (3035375 'move' call_tmp[3035373](3035378 call <=[54364] coerce_tmp[3037218] i[3035298]))
    const-val call_tmp[3035381]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3035383 'move' call_tmp[3035381] call_tmp[3035373])
    if call_tmp[3035381]
    {
      (3035394 call _format_reader[3037225] this[3035292] fmtStr[3035294] cur[3035302] len[3035324] err[3035318] conv[3035312] gotConv[3035314] style[3035316])
    }
    (3035404 call _conv_helper[200155] err[3035318] conv[3035312] gotConv[3035314] j[3035304] argType[3035308] argTypeLen[3035310])
    const-ref call_tmp[3035412]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
    (3035414 'move' call_tmp[3035412](3035417 call this[3037790] argType[3035308] i[3035298]))
    const-val call_tmp[3035419]:bool[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3039421]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3039425 'move' coerce_tmp[3039421](3039423 'deref' call_tmp[3035412]))
    const-val coerce_tmp[3039427]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3039431 'move' coerce_tmp[3039427](3039429 'deref' arg[3035296]))
    val error[5503169]:Error[85511] "error variable" "temp"
    (5503171 'move' error[5503169] nil[32])
    (3035421 'move' call_tmp[3035419](3035424 call _conv_sethandler[3038087] err[3035318] coerce_tmp[3039421] style[3035316] i[3035298] coerce_tmp[3039427] 0 error[5503169]))
    val errorExists[7299560]:bool[19] "temp"
    (7299565 'move' errorExists[7299560](7299562 '!=' error[5503169] nil[32]))
    if errorExists[7299560]
    {
      (5503175 '=' error_out[5503164] error[5503169])
      gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
    }
    const-val domore[3035431]:bool[19] "dead at end of block" "insert auto destroy"
    (3035433 'move' domore[3035431] call_tmp[3035419])
    const-val call_tmp[3035437]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3035439 'move' call_tmp[3035437] domore[3035431])
    if call_tmp[3035437]
    {
      (3035450 call _set_styleInternal[3033186] this[3035292] style[3035316])
      {
        const-ref tmp[3035454]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
        (3035456 'move' tmp[3035454](3035459 call this[3037790] argType[3035308] i[3035298]))
        const-val tmp[3035461]:bool[19] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3042419]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3042423 'move' coerce_tmp[3042419](3042421 'deref' tmp[3035454]))
        (3035463 'move' tmp[3035461](3035466 call ==[52725] coerce_tmp[3042419] QIO_CONV_ARG_TYPE_SIGNED[167968]))
        val call_tmp[3035469]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[3035482]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[3035484]:bool[19] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[3035486]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3035488 'move' call_tmp[3035486] tmp[3035461])
        (3035493 'move' tmp[3035484] call_tmp[3035486])
        if tmp[3035484]
        {
          (3035500 'move' tmp[3035482] 1)
        }
        {
          const-val tmp[3035506]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[3035508]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3042429]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3042433 'move' coerce_tmp[3042429](3042431 'deref' tmp[3035454]))
          (3035510 'move' call_tmp[3035508](3035513 call ==[52725] coerce_tmp[3042429] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
          (3035516 'move' tmp[3035506] call_tmp[3035508])
          (3035521 'move' tmp[3035482] tmp[3035506])
        }
        const-val call_tmp[3035527]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3035529 'move' call_tmp[3035527] tmp[3035482])
        if call_tmp[3035527]
        {
          const-ref call_tmp[3035536]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
          (3035538 'move' call_tmp[3035536](3035541 call precision[1131865] style[3035316]))
          val call_tmp[3035544]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[3035551]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3042439]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3042443 'move' coerce_tmp[3042439](3042441 'deref' call_tmp[3035536]))
          const-val coerce_tmp[3042445]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3042451 'move' coerce_tmp[3042445](3042447 'cast' int(32)[66] -1))
          (3035553 'move' call_tmp[3035551](3035556 call !=[53199] coerce_tmp[3042439] coerce_tmp[3042445]))
          const-val call_tmp[3035559]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3035561 'move' call_tmp[3035559] call_tmp[3035551])
          if call_tmp[3035559]
          {
            (3035569 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
          }
          const-val call_tmp[3035572]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3042687]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3042691 'move' coerce_tmp[3042687](3042689 'deref' arg[3035296]))
          val error[5503184]:Error[85511] "error variable" "temp"
          (5503186 'move' error[5503184] nil[32])
          const-val ret_tmp[5584432]:(int(64),bool)[3040018] "temp"
          (3035577 call _toSigned[3042455] coerce_tmp[3042687] error[5503184] ret_tmp[5584432])
          (5584435 'move' call_tmp[3035572] ret_tmp[5584432])
          val errorExists[7299568]:bool[19] "temp"
          (7299573 'move' errorExists[7299568](7299570 '!=' error[5503184] nil[32]))
          if errorExists[7299568]
          {
            (5503190 '=' error_out[5503164] error[5503184])
            gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
          }
          const-val tmp[3035579]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
          (3035581 'move' tmp[3035579] call_tmp[3035572])
          1
          const-ref call_tmp[3035589]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3035591 'move' call_tmp[3035589](3042715 '.' tmp[3035579] x0[3040014]))
          const-val t[3035596]:int(64)[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3042721]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3042725 'move' coerce_tmp[3042721](3042723 'deref' call_tmp[3035589]))
          (3035598 'move' t[3035596](3042718 call chpl__initCopy[1473915] coerce_tmp[3042721] 0))
          const-ref call_tmp[3035601]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
          (3035603 'move' call_tmp[3035601](3042730 '.' tmp[3035579] x1[3040016]))
          const-val ok[3035608]:bool[19] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3042736]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3042740 'move' coerce_tmp[3042736](3042738 'deref' call_tmp[3035601]))
          (3035610 'move' ok[3035608](3042733 call chpl__initCopy[1757859] coerce_tmp[3042736] 0))
          const-val call_tmp[3035614]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3035616 'move' call_tmp[3035614](3035619 call ![63126] ok[3035608]))
          const-val call_tmp[3035621]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3035623 'move' call_tmp[3035621] call_tmp[3035614])
          if call_tmp[3035621]
          {
            const-val call_tmp[3035630]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3035632 'move' call_tmp[3035630](3035635 call qio_format_error_arg_mismatch[168158] i[3035298]))
            (3035638 call =[13310] err[3035318] call_tmp[3035630])
          }
          {
            const-ref call_tmp[3035642]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
            (3035644 'move' call_tmp[3035642](3035647 call this[3037790] argType[3035308] i[3035298]))
            const-val call_tmp[3035649]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3042755]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3042759 'move' coerce_tmp[3042755](3042757 'deref' call_tmp[3035642]))
            (3035651 'move' call_tmp[3035649](3035654 call ==[52725] coerce_tmp[3042755] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
            const-val call_tmp[3035657]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3035659 'move' call_tmp[3035657] call_tmp[3035649])
            if call_tmp[3035657]
            {
              const-ref call_tmp[3035666]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
              (3035668 'move' call_tmp[3035666](3035671 call max_width_bytes[1131317] style[3035316]))
              const-val call_tmp[3035674]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3043116]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3043120 'move' coerce_tmp[3043116](3043118 'deref' call_tmp[3035666]))
              (3035676 'move' call_tmp[3035674](3035682 call _write_signed[3042764] this[3035292] coerce_tmp[3043116] t[3035596] i[3035298]))
              (3035687 call =[13310] err[3035318] call_tmp[3035674])
            }
            {
              {
                val error[5503198]:Error[85511] "error variable" "temp"
                (5503207 'move' error[5503198] nil[32])
                (3035698 call _writeOne[3043358] this[3035292] t[3035596] origLocale[3035320] error[5503198])
                val errorExists[7299576]:bool[19] "temp"
                (7299581 'move' errorExists[7299576](7299578 '!=' error[5503198] nil[32]))
                if errorExists[7299576]
                {
                  gotoErrorHandling handler[5503199] handler[5503199]
                }
                label handler[5503199]
                const-val shouldHandleError[5503218]:bool[19] "temp"
                val errorExists[7299584]:bool[19] "temp"
                (7299589 'move' errorExists[7299584](7299586 '!=' error[5503198] nil[32]))
                (5503222 'move' shouldHandleError[5503218] errorExists[7299584])
                if shouldHandleError[5503218]
                {
                  (5503214 '=' error_out[5503164] error[5503198])
                  (5630132 call chpl__autoDestroy[4184737] tmp[3035579])
                  gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                }
              }
            }
          }
          (5630136 call chpl__autoDestroy[4184737] tmp[3035579])
        }
        {
          const-val tmp[3035708]:bool[19] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3050835]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3050839 'move' coerce_tmp[3050835](3050837 'deref' tmp[3035454]))
          (3035710 'move' tmp[3035708](3035713 call ==[52725] coerce_tmp[3050835] QIO_CONV_ARG_TYPE_UNSIGNED[167978]))
          val call_tmp[3035716]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3035729]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[3035731]:bool[19] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[3035733]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3035735 'move' call_tmp[3035733] tmp[3035708])
          (3035740 'move' tmp[3035731] call_tmp[3035733])
          if tmp[3035731]
          {
            (3035747 'move' tmp[3035729] 1)
          }
          {
            const-val tmp[3035753]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[3035755]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3050845]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3050849 'move' coerce_tmp[3050845](3050847 'deref' tmp[3035454]))
            (3035757 'move' call_tmp[3035755](3035760 call ==[52725] coerce_tmp[3050845] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
            (3035763 'move' tmp[3035753] call_tmp[3035755])
            (3035768 'move' tmp[3035729] tmp[3035753])
          }
          const-val call_tmp[3035774]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3035776 'move' call_tmp[3035774] tmp[3035729])
          if call_tmp[3035774]
          {
            const-ref call_tmp[3035783]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
            (3035785 'move' call_tmp[3035783](3035788 call precision[1131865] style[3035316]))
            val call_tmp[3035791]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val call_tmp[3035798]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3050855]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3050859 'move' coerce_tmp[3050855](3050857 'deref' call_tmp[3035783]))
            const-val coerce_tmp[3050861]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3050867 'move' coerce_tmp[3050861](3050863 'cast' int(32)[66] -1))
            (3035800 'move' call_tmp[3035798](3035803 call !=[53199] coerce_tmp[3050855] coerce_tmp[3050861]))
            const-val call_tmp[3035806]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3035808 'move' call_tmp[3035806] call_tmp[3035798])
            if call_tmp[3035806]
            {
              (3035816 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
            }
            const-val call_tmp[3035819]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3051111]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3051115 'move' coerce_tmp[3051111](3051113 'deref' arg[3035296]))
            val error[5503227]:Error[85511] "error variable" "temp"
            (5503229 'move' error[5503227] nil[32])
            const-val ret_tmp[5584459]:(uint(64),bool)[3051128] "temp"
            (3035824 call _toUnsigned[3050871] coerce_tmp[3051111] error[5503227] ret_tmp[5584459])
            (5584462 'move' call_tmp[3035819] ret_tmp[5584459])
            val errorExists[7299592]:bool[19] "temp"
            (7299597 'move' errorExists[7299592](7299594 '!=' error[5503227] nil[32]))
            if errorExists[7299592]
            {
              (5503233 '=' error_out[5503164] error[5503227])
              gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
            }
            const-val tmp[3035826]:(uint(64),bool)[3051128] "dead at end of block" "insert auto destroy" "temp"
            (3035828 'move' tmp[3035826] call_tmp[3035819])
            1
            const-ref call_tmp[3035836]:_ref(uint(64))[1465718] "dead after last mention" "maybe param" "temp"
            (3035838 'move' call_tmp[3035836](3051588 '.' tmp[3035826] x0[3051124]))
            const-val t[3035843]:uint(64)[86] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3051594]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3051598 'move' coerce_tmp[3051594](3051596 'deref' call_tmp[3035836]))
            (3035845 'move' t[3035843](3051591 call chpl__initCopy[1820361] coerce_tmp[3051594] 0))
            const-ref call_tmp[3035848]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
            (3035850 'move' call_tmp[3035848](3051603 '.' tmp[3035826] x1[3051126]))
            const-val ok[3035855]:bool[19] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3051609]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3051613 'move' coerce_tmp[3051609](3051611 'deref' call_tmp[3035848]))
            (3035857 'move' ok[3035855](3051606 call chpl__initCopy[1757859] coerce_tmp[3051609] 0))
            const-val call_tmp[3035861]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3035863 'move' call_tmp[3035861](3035866 call ![63126] ok[3035855]))
            const-val call_tmp[3035868]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3035870 'move' call_tmp[3035868] call_tmp[3035861])
            if call_tmp[3035868]
            {
              const-val call_tmp[3035877]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3035879 'move' call_tmp[3035877](3035882 call qio_format_error_arg_mismatch[168158] i[3035298]))
              (3035885 call =[13310] err[3035318] call_tmp[3035877])
            }
            {
              const-ref call_tmp[3035889]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
              (3035891 'move' call_tmp[3035889](3035894 call this[3037790] argType[3035308] i[3035298]))
              const-val call_tmp[3035896]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3051628]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3051632 'move' coerce_tmp[3051628](3051630 'deref' call_tmp[3035889]))
              (3035898 'move' call_tmp[3035896](3035901 call ==[52725] coerce_tmp[3051628] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
              const-val call_tmp[3035904]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3035906 'move' call_tmp[3035904] call_tmp[3035896])
              if call_tmp[3035904]
              {
                const-ref call_tmp[3035913]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                (3035915 'move' call_tmp[3035913](3035918 call max_width_bytes[1131317] style[3035316]))
                const-val call_tmp[3035921]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3051986]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3051990 'move' coerce_tmp[3051986](3051988 'deref' call_tmp[3035913]))
                (3035923 'move' call_tmp[3035921](3035929 call _write_unsigned[3051637] this[3035292] coerce_tmp[3051986] t[3035843] i[3035298]))
                (3035934 call =[13310] err[3035318] call_tmp[3035921])
              }
              {
                {
                  val error[5503241]:Error[85511] "error variable" "temp"
                  (5503250 'move' error[5503241] nil[32])
                  (3035945 call _writeOne[3052255] this[3035292] t[3035843] origLocale[3035320] error[5503241])
                  val errorExists[7299600]:bool[19] "temp"
                  (7299605 'move' errorExists[7299600](7299602 '!=' error[5503241] nil[32]))
                  if errorExists[7299600]
                  {
                    gotoErrorHandling handler[5503242] handler[5503242]
                  }
                  label handler[5503242]
                  const-val shouldHandleError[5503261]:bool[19] "temp"
                  val errorExists[7299608]:bool[19] "temp"
                  (7299613 'move' errorExists[7299608](7299610 '!=' error[5503241] nil[32]))
                  (5503265 'move' shouldHandleError[5503261] errorExists[7299608])
                  if shouldHandleError[5503261]
                  {
                    (5503257 '=' error_out[5503164] error[5503241])
                    (5630139 call chpl__autoDestroy[4185009] tmp[3035826])
                    gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                  }
                }
              }
            }
            (5630143 call chpl__autoDestroy[4185009] tmp[3035826])
          }
          {
            const-val tmp[3035955]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3059522]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3059526 'move' coerce_tmp[3059522](3059524 'deref' tmp[3035454]))
            (3035957 'move' tmp[3035955](3035960 call ==[52725] coerce_tmp[3059522] QIO_CONV_ARG_TYPE_REAL[167988]))
            val call_tmp[3035963]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[3035976]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[3035978]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[3035980]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3035982 'move' call_tmp[3035980] tmp[3035955])
            (3035987 'move' tmp[3035978] call_tmp[3035980])
            if tmp[3035978]
            {
              (3035994 'move' tmp[3035976] 1)
            }
            {
              const-val tmp[3036000]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[3036002]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3059532]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3059536 'move' coerce_tmp[3059532](3059534 'deref' tmp[3035454]))
              (3036004 'move' call_tmp[3036002](3036007 call ==[52725] coerce_tmp[3059532] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
              (3036010 'move' tmp[3036000] call_tmp[3036002])
              (3036015 'move' tmp[3035976] tmp[3036000])
            }
            const-val call_tmp[3036021]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3036023 'move' call_tmp[3036021] tmp[3035976])
            if call_tmp[3036021]
            {
              const-val call_tmp[3036030]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3059712]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3059716 'move' coerce_tmp[3059712](3059714 'deref' arg[3035296]))
              const-val ret_tmp[5584522]:(real(64),bool)[3059761] "temp"
              (3036035 call _toReal[3059539] coerce_tmp[3059712] ret_tmp[5584522])
              (5584525 'move' call_tmp[3036030] ret_tmp[5584522])
              const-val tmp[3036037]:(real(64),bool)[3059761] "dead at end of block" "insert auto destroy" "temp"
              (3036039 'move' tmp[3036037] call_tmp[3036030])
              1
              const-ref call_tmp[3036047]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
              (3036049 'move' call_tmp[3036047](3060147 '.' tmp[3036037] x0[3059757]))
              const-val t[3036054]:real(64)[13] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3060153]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3060157 'move' coerce_tmp[3060153](3060155 'deref' call_tmp[3036047]))
              (3036056 'move' t[3036054](3060150 call chpl__initCopy[2153905] coerce_tmp[3060153] 0))
              const-ref call_tmp[3036059]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3036061 'move' call_tmp[3036059](3060162 '.' tmp[3036037] x1[3059759]))
              const-val ok[3036066]:bool[19] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3060168]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3060172 'move' coerce_tmp[3060168](3060170 'deref' call_tmp[3036059]))
              (3036068 'move' ok[3036066](3060165 call chpl__initCopy[1757859] coerce_tmp[3060168] 0))
              const-val call_tmp[3036072]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3036074 'move' call_tmp[3036072](3036077 call ![63126] ok[3036066]))
              const-val call_tmp[3036079]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3036081 'move' call_tmp[3036079] call_tmp[3036072])
              if call_tmp[3036079]
              {
                const-val call_tmp[3036088]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3036090 'move' call_tmp[3036088](3036093 call qio_format_error_arg_mismatch[168158] i[3035298]))
                (3036096 call =[13310] err[3035318] call_tmp[3036088])
              }
              {
                const-ref call_tmp[3036100]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                (3036102 'move' call_tmp[3036100](3036105 call this[3037790] argType[3035308] i[3035298]))
                const-val call_tmp[3036107]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3060187]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3060191 'move' coerce_tmp[3060187](3060189 'deref' call_tmp[3036100]))
                (3036109 'move' call_tmp[3036107](3036112 call ==[52725] coerce_tmp[3060187] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
                const-val call_tmp[3036115]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3036117 'move' call_tmp[3036115] call_tmp[3036107])
                if call_tmp[3036115]
                {
                  const-ref call_tmp[3036124]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                  (3036126 'move' call_tmp[3036124](3036129 call max_width_bytes[1131317] style[3035316]))
                  const-val call_tmp[3036132]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3060415]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3060419 'move' coerce_tmp[3060415](3060417 'deref' call_tmp[3036124]))
                  (3036134 'move' call_tmp[3036132](3036140 call _write_real[3060196] this[3035292] coerce_tmp[3060415] t[3036054] i[3035298]))
                  (3036145 call =[13310] err[3035318] call_tmp[3036132])
                }
                {
                  {
                    val error[5503269]:Error[85511] "error variable" "temp"
                    (5503278 'move' error[5503269] nil[32])
                    (3036156 call _writeOne[3060524] this[3035292] t[3036054] origLocale[3035320] error[5503269])
                    val errorExists[7299616]:bool[19] "temp"
                    (7299621 'move' errorExists[7299616](7299618 '!=' error[5503269] nil[32]))
                    if errorExists[7299616]
                    {
                      gotoErrorHandling handler[5503270] handler[5503270]
                    }
                    label handler[5503270]
                    const-val shouldHandleError[5503289]:bool[19] "temp"
                    val errorExists[7299624]:bool[19] "temp"
                    (7299629 'move' errorExists[7299624](7299626 '!=' error[5503269] nil[32]))
                    (5503293 'move' shouldHandleError[5503289] errorExists[7299624])
                    if shouldHandleError[5503289]
                    {
                      (5503285 '=' error_out[5503164] error[5503269])
                      (5630146 call chpl__autoDestroy[4185145] tmp[3036037])
                      gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                    }
                  }
                }
              }
              (5630150 call chpl__autoDestroy[4185145] tmp[3036037])
            }
            {
              const-val tmp[3036166]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3067460]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3067464 'move' coerce_tmp[3067460](3067462 'deref' tmp[3035454]))
              (3036168 'move' tmp[3036166](3036171 call ==[52725] coerce_tmp[3067460] QIO_CONV_ARG_TYPE_IMAG[167998]))
              val call_tmp[3036174]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[3036187]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[3036189]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[3036191]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3036193 'move' call_tmp[3036191] tmp[3036166])
              (3036198 'move' tmp[3036189] call_tmp[3036191])
              if tmp[3036189]
              {
                (3036205 'move' tmp[3036187] 1)
              }
              {
                const-val tmp[3036211]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[3036213]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3067470]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3067474 'move' coerce_tmp[3067470](3067472 'deref' tmp[3035454]))
                (3036215 'move' call_tmp[3036213](3036218 call ==[52725] coerce_tmp[3067470] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                (3036221 'move' tmp[3036211] call_tmp[3036213])
                (3036226 'move' tmp[3036187] tmp[3036211])
              }
              const-val call_tmp[3036232]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3036234 'move' call_tmp[3036232] tmp[3036187])
              if call_tmp[3036232]
              {
                const-val call_tmp[3036241]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[3067830]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3067834 'move' coerce_tmp[3067830](3067832 'deref' arg[3035296]))
                val error[5503298]:Error[85511] "error variable" "temp"
                (5503300 'move' error[5503298] nil[32])
                const-val ret_tmp[5584585]:(imag(64),bool)[3067847] "temp"
                (3036246 call _toImag[3067606] coerce_tmp[3067830] error[5503298] ret_tmp[5584585])
                (5584588 'move' call_tmp[3036241] ret_tmp[5584585])
                val errorExists[7299632]:bool[19] "temp"
                (7299637 'move' errorExists[7299632](7299634 '!=' error[5503298] nil[32]))
                if errorExists[7299632]
                {
                  (5503304 '=' error_out[5503164] error[5503298])
                  gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                }
                const-val tmp[3036248]:(imag(64),bool)[3067847] "dead at end of block" "insert auto destroy" "temp"
                (3036250 'move' tmp[3036248] call_tmp[3036241])
                1
                const-ref call_tmp[3036258]:_ref(imag(64))[1466226] "dead after last mention" "maybe param" "temp"
                (3036260 'move' call_tmp[3036258](3068356 '.' tmp[3036248] x0[3067843]))
                const-val t[3036265]:imag(64)[101] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3068362]:imag(64)[101] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3068366 'move' coerce_tmp[3068362](3068364 'deref' call_tmp[3036258]))
                (3036267 'move' t[3036265](3068359 call chpl__initCopy[3068019] coerce_tmp[3068362] 0))
                const-ref call_tmp[3036270]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                (3036272 'move' call_tmp[3036270](3068371 '.' tmp[3036248] x1[3067845]))
                const-val ok[3036277]:bool[19] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3068377]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3068381 'move' coerce_tmp[3068377](3068379 'deref' call_tmp[3036270]))
                (3036279 'move' ok[3036277](3068374 call chpl__initCopy[1757859] coerce_tmp[3068377] 0))
                const-val call_tmp[3036283]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3036285 'move' call_tmp[3036283](3036288 call ![63126] ok[3036277]))
                const-val call_tmp[3036290]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3036292 'move' call_tmp[3036290] call_tmp[3036283])
                if call_tmp[3036290]
                {
                  const-val call_tmp[3036299]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3036301 'move' call_tmp[3036299](3036304 call qio_format_error_arg_mismatch[168158] i[3035298]))
                  (3036307 call =[13310] err[3035318] call_tmp[3036299])
                }
                {
                  const-ref call_tmp[3036311]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3036313 'move' call_tmp[3036311](3036316 call this[3037790] argType[3035308] i[3035298]))
                  const-val call_tmp[3036318]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3068396]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3068400 'move' coerce_tmp[3068396](3068398 'deref' call_tmp[3036311]))
                  (3036320 'move' call_tmp[3036318](3036323 call ==[52725] coerce_tmp[3068396] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                  const-val call_tmp[3036326]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3036328 'move' call_tmp[3036326] call_tmp[3036318])
                  if call_tmp[3036326]
                  {
                    const-ref call_tmp[3036335]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                    (3036337 'move' call_tmp[3036335](3036340 call max_width_bytes[1131317] style[3035316]))
                    const-val call_tmp[3036343]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3036345 'move' call_tmp[3036343](3036348 call :[3068404] t[3036265]))
                    const-val call_tmp[3036351]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3068435]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3068439 'move' coerce_tmp[3068435](3068437 'deref' call_tmp[3036335]))
                    (3036353 'move' call_tmp[3036351](3036359 call _write_real[3060196] this[3035292] coerce_tmp[3068435] call_tmp[3036343] i[3035298]))
                    (3036364 call =[13310] err[3035318] call_tmp[3036351])
                  }
                  {
                    {
                      val error[5503312]:Error[85511] "error variable" "temp"
                      (5503321 'move' error[5503312] nil[32])
                      (3036375 call _writeOne[3068449] this[3035292] t[3036265] origLocale[3035320] error[5503312])
                      val errorExists[7299640]:bool[19] "temp"
                      (7299645 'move' errorExists[7299640](7299642 '!=' error[5503312] nil[32]))
                      if errorExists[7299640]
                      {
                        gotoErrorHandling handler[5503313] handler[5503313]
                      }
                      label handler[5503313]
                      const-val shouldHandleError[5503332]:bool[19] "temp"
                      val errorExists[7299648]:bool[19] "temp"
                      (7299653 'move' errorExists[7299648](7299650 '!=' error[5503312] nil[32]))
                      (5503336 'move' shouldHandleError[5503332] errorExists[7299648])
                      if shouldHandleError[5503332]
                      {
                        (5503328 '=' error_out[5503164] error[5503312])
                        (5630153 call chpl__autoDestroy[4185281] tmp[3036248])
                        gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                      }
                    }
                  }
                }
                (5630157 call chpl__autoDestroy[4185281] tmp[3036248])
              }
              {
                const-val tmp[3036385]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[3077192]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3077196 'move' coerce_tmp[3077192](3077194 'deref' tmp[3035454]))
                (3036387 'move' tmp[3036385](3036390 call ==[52725] coerce_tmp[3077192] QIO_CONV_ARG_TYPE_COMPLEX[168008]))
                val call_tmp[3036393]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[3036406]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[3036408]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[3036410]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3036412 'move' call_tmp[3036410] tmp[3036385])
                (3036417 'move' tmp[3036408] call_tmp[3036410])
                if tmp[3036408]
                {
                  (3036424 'move' tmp[3036406] 1)
                }
                {
                  const-val tmp[3036430]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[3036432]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3077202]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3077206 'move' coerce_tmp[3077202](3077204 'deref' tmp[3035454]))
                  (3036434 'move' call_tmp[3036432](3036437 call ==[52725] coerce_tmp[3077202] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                  (3036440 'move' tmp[3036430] call_tmp[3036432])
                  (3036445 'move' tmp[3036406] tmp[3036430])
                }
                const-val call_tmp[3036451]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3036453 'move' call_tmp[3036451] tmp[3036406])
                if call_tmp[3036451]
                {
                  const-val call_tmp[3036460]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
                  const-val coerce_tmp[3077570]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3077574 'move' coerce_tmp[3077570](3077572 'deref' arg[3035296]))
                  val error[5503341]:Error[85511] "error variable" "temp"
                  (5503343 'move' error[5503341] nil[32])
                  const-val ret_tmp[5584648]:(complex(128),bool)[3077587] "temp"
                  (3036465 call _toComplex[3077338] coerce_tmp[3077570] error[5503341] ret_tmp[5584648])
                  (5584651 'move' call_tmp[3036460] ret_tmp[5584648])
                  val errorExists[7299656]:bool[19] "temp"
                  (7299661 'move' errorExists[7299656](7299658 '!=' error[5503341] nil[32]))
                  if errorExists[7299656]
                  {
                    (5503347 '=' error_out[5503164] error[5503341])
                    gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                  }
                  const-val tmp[3036467]:(complex(128),bool)[3077587] "dead at end of block" "insert auto destroy" "temp"
                  (3036469 'move' tmp[3036467] call_tmp[3036460])
                  1
                  const-ref call_tmp[3036477]:_ref(complex(128))[1466240] "dead after last mention" "maybe param" "temp"
                  (3036479 'move' call_tmp[3036477](3078358 '.' tmp[3036467] x0[3077583]))
                  const-val t[3036484]:complex(128)[111] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3078364]:complex(128)[111] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3078368 'move' coerce_tmp[3078364](3078366 'deref' call_tmp[3036477]))
                  (3036486 'move' t[3036484](3078361 call chpl__initCopy[3078021] coerce_tmp[3078364] 0))
                  const-ref call_tmp[3036489]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                  (3036491 'move' call_tmp[3036489](3078373 '.' tmp[3036467] x1[3077585]))
                  const-val ok[3036496]:bool[19] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3078379]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3078383 'move' coerce_tmp[3078379](3078381 'deref' call_tmp[3036489]))
                  (3036498 'move' ok[3036496](3078376 call chpl__initCopy[1757859] coerce_tmp[3078379] 0))
                  const-val call_tmp[3036502]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3036504 'move' call_tmp[3036502](3036507 call ![63126] ok[3036496]))
                  const-val call_tmp[3036509]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3036511 'move' call_tmp[3036509] call_tmp[3036502])
                  if call_tmp[3036509]
                  {
                    const-val call_tmp[3036518]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3036520 'move' call_tmp[3036518](3036523 call qio_format_error_arg_mismatch[168158] i[3035298]))
                    (3036526 call =[13310] err[3035318] call_tmp[3036518])
                  }
                  {
                    const-ref call_tmp[3036530]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                    (3036532 'move' call_tmp[3036530](3036535 call this[3037790] argType[3035308] i[3035298]))
                    const-val call_tmp[3036537]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3078398]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3078402 'move' coerce_tmp[3078398](3078400 'deref' call_tmp[3036530]))
                    (3036539 'move' call_tmp[3036537](3036542 call ==[52725] coerce_tmp[3078398] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                    const-val call_tmp[3036545]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3036547 'move' call_tmp[3036545] call_tmp[3036537])
                    if call_tmp[3036545]
                    {
                      const-ref call_tmp[3036554]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                      (3036556 'move' call_tmp[3036554](3036559 call max_width_bytes[1131317] style[3035316]))
                      const-val call_tmp[3036562]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[3078766]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3078770 'move' coerce_tmp[3078766](3078768 'deref' call_tmp[3036554]))
                      (3036564 'move' call_tmp[3036562](3036570 call _write_complex[3078407] this[3035292] coerce_tmp[3078766] t[3036484] i[3035298]))
                      (3036575 call =[13310] err[3035318] call_tmp[3036562])
                    }
                    {
                      {
                        val error[5503355]:Error[85511] "error variable" "temp"
                        (5503364 'move' error[5503355] nil[32])
                        (3036586 call _writeOne[3079967] this[3035292] t[3036484] origLocale[3035320] error[5503355])
                        val errorExists[7299664]:bool[19] "temp"
                        (7299669 'move' errorExists[7299664](7299666 '!=' error[5503355] nil[32]))
                        if errorExists[7299664]
                        {
                          gotoErrorHandling handler[5503356] handler[5503356]
                        }
                        label handler[5503356]
                        const-val shouldHandleError[5503375]:bool[19] "temp"
                        val errorExists[7299672]:bool[19] "temp"
                        (7299677 'move' errorExists[7299672](7299674 '!=' error[5503355] nil[32]))
                        (5503379 'move' shouldHandleError[5503375] errorExists[7299672])
                        if shouldHandleError[5503375]
                        {
                          (5503371 '=' error_out[5503164] error[5503355])
                          (5630160 call chpl__autoDestroy[4185417] tmp[3036467])
                          gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                        }
                      }
                    }
                  }
                  (5630164 call chpl__autoDestroy[4185417] tmp[3036467])
                }
                {
                  const-val call_tmp[3036596]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3088725]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3088729 'move' coerce_tmp[3088725](3088727 'deref' tmp[3035454]))
                  (3036598 'move' call_tmp[3036596](3036601 call ==[52725] coerce_tmp[3088725] QIO_CONV_ARG_TYPE_NUMERIC[167963]))
                  const-val call_tmp[3036604]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3036606 'move' call_tmp[3036604] call_tmp[3036596])
                  if call_tmp[3036604]
                  {
                    const-val call_tmp[3036613]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp"
                    const-val coerce_tmp[3088905]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3088909 'move' coerce_tmp[3088905](3088907 'deref' arg[3035296]))
                    const-val ret_tmp[5584735]:(real(64),bool)[3059761] "temp"
                    (3036618 call _toNumeric[3088732] coerce_tmp[3088905] ret_tmp[5584735])
                    (5584738 'move' call_tmp[3036613] ret_tmp[5584735])
                    const-val tmp[3036620]:(real(64),bool)[3059761] "dead at end of block" "insert auto destroy" "temp"
                    (3036622 'move' tmp[3036620] call_tmp[3036613])
                    1
                    const-ref call_tmp[3036630]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
                    (3036632 'move' call_tmp[3036630](3088921 '.' tmp[3036620] x0[3059757]))
                    const-val t[3036637]:real(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3088927]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3088931 'move' coerce_tmp[3088927](3088929 'deref' call_tmp[3036630]))
                    (3036639 'move' t[3036637](3088924 call chpl__initCopy[2153905] coerce_tmp[3088927] 0))
                    const-ref call_tmp[3036642]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                    (3036644 'move' call_tmp[3036642](3088936 '.' tmp[3036620] x1[3059759]))
                    const-val ok[3036649]:bool[19] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3088942]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3088946 'move' coerce_tmp[3088942](3088944 'deref' call_tmp[3036642]))
                    (3036651 'move' ok[3036649](3088939 call chpl__initCopy[1757859] coerce_tmp[3088942] 0))
                    const-val call_tmp[3036655]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3036657 'move' call_tmp[3036655](3036660 call ![63126] ok[3036649]))
                    const-val call_tmp[3036662]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3036664 'move' call_tmp[3036662] call_tmp[3036655])
                    if call_tmp[3036662]
                    {
                      const-val call_tmp[3036671]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3036673 'move' call_tmp[3036671](3036676 call qio_format_error_arg_mismatch[168158] i[3035298]))
                      (3036679 call =[13310] err[3035318] call_tmp[3036671])
                    }
                    {
                      {
                        val error[5503383]:Error[85511] "error variable" "temp"
                        (5503392 'move' error[5503383] nil[32])
                        (3036688 call _writeOne[3060524] this[3035292] t[3036637] origLocale[3035320] error[5503383])
                        val errorExists[7299680]:bool[19] "temp"
                        (7299685 'move' errorExists[7299680](7299682 '!=' error[5503383] nil[32]))
                        if errorExists[7299680]
                        {
                          gotoErrorHandling handler[5503384] handler[5503384]
                        }
                        label handler[5503384]
                        const-val shouldHandleError[5503403]:bool[19] "temp"
                        val errorExists[7299688]:bool[19] "temp"
                        (7299693 'move' errorExists[7299688](7299690 '!=' error[5503383] nil[32]))
                        (5503407 'move' shouldHandleError[5503403] errorExists[7299688])
                        if shouldHandleError[5503403]
                        {
                          (5503399 '=' error_out[5503164] error[5503383])
                          (5630167 call chpl__autoDestroy[4185145] tmp[3036620])
                          gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                        }
                      }
                    }
                    (5630171 call chpl__autoDestroy[4185145] tmp[3036620])
                  }
                  {
                    const-val call_tmp[3036697]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3088959]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3088963 'move' coerce_tmp[3088959](3088961 'deref' tmp[3035454]))
                    (3036699 'move' call_tmp[3036697](3036702 call ==[52725] coerce_tmp[3088959] QIO_CONV_ARG_TYPE_CHAR[168018]))
                    const-val call_tmp[3036705]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3036707 'move' call_tmp[3036705] call_tmp[3036697])
                    if call_tmp[3036705]
                    {
                      const-val call_tmp[3036714]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                      const-val coerce_tmp[3088966]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3088970 'move' coerce_tmp[3088966](3088968 'deref' arg[3035296]))
                      const-val ret_tmp[5584360]:(int(32),bool)[3040996] "temp"
                      (3036719 call _toChar[3040821] coerce_tmp[3088966] ret_tmp[5584360])
                      (5584363 'move' call_tmp[3036714] ret_tmp[5584360])
                      const-val tmp[3036721]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                      (3036723 'move' tmp[3036721] call_tmp[3036714])
                      1
                      const-ref call_tmp[3036731]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (3036733 'move' call_tmp[3036731](3088981 '.' tmp[3036721] x0[3040992]))
                      const-val t[3036738]:int(32)[66] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3088987]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3088991 'move' coerce_tmp[3088987](3088989 'deref' call_tmp[3036731]))
                      (3036740 'move' t[3036738](3088984 call chpl__initCopy[1513822] coerce_tmp[3088987] 0))
                      const-ref call_tmp[3036743]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                      (3036745 'move' call_tmp[3036743](3088996 '.' tmp[3036721] x1[3040994]))
                      const-val ok[3036750]:bool[19] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3089002]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3089006 'move' coerce_tmp[3089002](3089004 'deref' call_tmp[3036743]))
                      (3036752 'move' ok[3036750](3088999 call chpl__initCopy[1757859] coerce_tmp[3089002] 0))
                      const-val call_tmp[3036756]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3036758 'move' call_tmp[3036756](3036761 call ![63126] ok[3036750]))
                      const-val call_tmp[3036763]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3036765 'move' call_tmp[3036763] call_tmp[3036756])
                      if call_tmp[3036763]
                      {
                        const-val call_tmp[3036772]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3036774 'move' call_tmp[3036772](3036777 call qio_format_error_arg_mismatch[168158] i[3035298]))
                        (3036780 call =[13310] err[3035318] call_tmp[3036772])
                      }
                      {
                        {
                          val error[5503411]:Error[85511] "error variable" "temp"
                          (5503420 'move' error[5503411] nil[32])
                          const-val call_tmp[3036785]:_internalIoChar[176999] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                          const-val initTemp[3089019]:_internalIoChar[176999] "dead after last mention" "temp"
                          (3089022 call init[1213162] initTemp[3089019] t[3036738])
                          (3036787 'move' call_tmp[3036785] initTemp[3089019])
                          (3036796 call _writeOne[3089040] this[3035292] call_tmp[3036785] origLocale[3035320] error[5503411])
                          val errorExists[7299696]:bool[19] "temp"
                          (7299701 'move' errorExists[7299696](7299698 '!=' error[5503411] nil[32]))
                          if errorExists[7299696]
                          {
                            (5630174 call chpl__autoDestroy[3890713] call_tmp[3036785])
                            gotoErrorHandling handler[5503412] handler[5503412]
                          }
                          (5630177 call chpl__autoDestroy[3890713] call_tmp[3036785])
                          label handler[5503412]
                          const-val shouldHandleError[5503431]:bool[19] "temp"
                          val errorExists[7299704]:bool[19] "temp"
                          (7299709 'move' errorExists[7299704](7299706 '!=' error[5503411] nil[32]))
                          (5503435 'move' shouldHandleError[5503431] errorExists[7299704])
                          if shouldHandleError[5503431]
                          {
                            (5503427 '=' error_out[5503164] error[5503411])
                            (5630180 call chpl__autoDestroy[4184873] tmp[3036721])
                            gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                          }
                        }
                      }
                      (5630184 call chpl__autoDestroy[4184873] tmp[3036721])
                    }
                    {
                      const-val call_tmp[3036805]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[3091833]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3091837 'move' coerce_tmp[3091833](3091835 'deref' tmp[3035454]))
                      (3036807 'move' call_tmp[3036805](3036810 call ==[52725] coerce_tmp[3091833] QIO_CONV_ARG_TYPE_BINARY_STRING[168028]))
                      const-val call_tmp[3036813]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3036815 'move' call_tmp[3036813] call_tmp[3036805])
                      if call_tmp[3036813]
                      {
                        const-val call_tmp[3036822]:(bytes,bool)[3092705] "dead after last mention" "maybe param" "temp"
                        const-val coerce_tmp[3091874]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3091878 'move' coerce_tmp[3091874](3091876 'deref' arg[3035296]))
                        const-val ret_tmp[5584762]:(bytes,bool)[3092705] "temp"
                        (3036827 call _toBytes[3091840] coerce_tmp[3091874] ret_tmp[5584762])
                        (5584765 'move' call_tmp[3036822] ret_tmp[5584762])
                        const-val tmp[3036829]:(bytes,bool)[3092705] "dead at end of block" "insert auto destroy" "temp"
                        (3036831 'move' tmp[3036829] call_tmp[3036822])
                        1
                        const-ref call_tmp[3036839]:_ref(bytes)[1466360] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                        (3036841 'move' call_tmp[3036839](3093189 '.' tmp[3036829] x0[3092701]))
                        const-val t[3036846]:bytes[232] "dead at end of block" "insert auto destroy"
                        (3036848 call init=[33890] t[3036846] call_tmp[3036839])
                        const-ref call_tmp[3036851]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                        (3036853 'move' call_tmp[3036851](3093197 '.' tmp[3036829] x1[3092703]))
                        const-val ok[3036858]:bool[19] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3093203]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3093207 'move' coerce_tmp[3093203](3093205 'deref' call_tmp[3036851]))
                        (3036860 'move' ok[3036858](3093200 call chpl__initCopy[1757859] coerce_tmp[3093203] 0))
                        const-val call_tmp[3036864]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3036866 'move' call_tmp[3036864](3036869 call ![63126] ok[3036858]))
                        const-val call_tmp[3036871]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3036873 'move' call_tmp[3036871] call_tmp[3036864])
                        if call_tmp[3036871]
                        {
                          const-val call_tmp[3036880]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3036882 'move' call_tmp[3036880](3036885 call qio_format_error_arg_mismatch[168158] i[3035298]))
                          (3036888 call =[13310] err[3035318] call_tmp[3036880])
                        }
                        {
                          {
                            val error[5503439]:Error[85511] "error variable" "temp"
                            (5503448 'move' error[5503439] nil[32])
                            (3036897 call _writeOne[3093219] this[3035292] t[3036846] origLocale[3035320] error[5503439])
                            val errorExists[7299712]:bool[19] "temp"
                            (7299717 'move' errorExists[7299712](7299714 '!=' error[5503439] nil[32]))
                            if errorExists[7299712]
                            {
                              gotoErrorHandling handler[5503440] handler[5503440]
                            }
                            label handler[5503440]
                            const-val shouldHandleError[5503459]:bool[19] "temp"
                            val errorExists[7299720]:bool[19] "temp"
                            (7299725 'move' errorExists[7299720](7299722 '!=' error[5503439] nil[32]))
                            (5503463 'move' shouldHandleError[5503459] errorExists[7299720])
                            if shouldHandleError[5503459]
                            {
                              (5503455 '=' error_out[5503164] error[5503439])
                              (5630187 call chpl__autoDestroy[3885484] t[3036846])
                              (5630190 call chpl__autoDestroy[4185699] tmp[3036829])
                              gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                            }
                          }
                        }
                        (5630194 call chpl__autoDestroy[3885484] t[3036846])
                        (5630197 call chpl__autoDestroy[4185699] tmp[3036829])
                      }
                      {
                        const-val call_tmp[3036906]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[3102645]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3102649 'move' coerce_tmp[3102645](3102647 'deref' tmp[3035454]))
                        (3036908 'move' call_tmp[3036906](3036911 call ==[52725] coerce_tmp[3102645] QIO_CONV_ARG_TYPE_STRING[168023]))
                        const-val call_tmp[3036914]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3036916 'move' call_tmp[3036914] call_tmp[3036906])
                        if call_tmp[3036914]
                        {
                          const-val call_tmp[3036923]:(string,bool)[3103815] "dead after last mention" "maybe param" "temp"
                          const-val coerce_tmp[3102925]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3102929 'move' coerce_tmp[3102925](3102927 'deref' arg[3035296]))
                          const-val ret_tmp[5584825]:(string,bool)[3103815] "temp"
                          (3036928 call _toString[3102652] coerce_tmp[3102925] ret_tmp[5584825])
                          (5584828 'move' call_tmp[3036923] ret_tmp[5584825])
                          const-val tmp[3036930]:(string,bool)[3103815] "dead at end of block" "insert auto destroy" "temp"
                          (3036932 'move' tmp[3036930] call_tmp[3036923])
                          1
                          const-ref call_tmp[3036940]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                          (3036942 'move' call_tmp[3036940](3104299 '.' tmp[3036930] x0[3103811]))
                          const-val t[3036947]:string[244] "dead at end of block" "insert auto destroy"
                          (3036949 call init=[21330] t[3036947] call_tmp[3036940])
                          const-ref call_tmp[3036952]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                          (3036954 'move' call_tmp[3036952](3104307 '.' tmp[3036930] x1[3103813]))
                          const-val ok[3036959]:bool[19] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3104313]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3104317 'move' coerce_tmp[3104313](3104315 'deref' call_tmp[3036952]))
                          (3036961 'move' ok[3036959](3104310 call chpl__initCopy[1757859] coerce_tmp[3104313] 0))
                          const-val call_tmp[3036965]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3036967 'move' call_tmp[3036965](3036970 call ![63126] ok[3036959]))
                          const-val call_tmp[3036972]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3036974 'move' call_tmp[3036972] call_tmp[3036965])
                          if call_tmp[3036972]
                          {
                            const-val call_tmp[3036981]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3036983 'move' call_tmp[3036981](3036986 call qio_format_error_arg_mismatch[168158] i[3035298]))
                            (3036989 call =[13310] err[3035318] call_tmp[3036981])
                          }
                          {
                            {
                              val error[5503467]:Error[85511] "error variable" "temp"
                              (5503476 'move' error[5503467] nil[32])
                              (3036998 call _writeOne[1845361] this[3035292] t[3036947] origLocale[3035320] error[5503467])
                              val errorExists[7299728]:bool[19] "temp"
                              (7299733 'move' errorExists[7299728](7299730 '!=' error[5503467] nil[32]))
                              if errorExists[7299728]
                              {
                                gotoErrorHandling handler[5503468] handler[5503468]
                              }
                              label handler[5503468]
                              const-val shouldHandleError[5503487]:bool[19] "temp"
                              val errorExists[7299736]:bool[19] "temp"
                              (7299741 'move' errorExists[7299736](7299738 '!=' error[5503467] nil[32]))
                              (5503491 'move' shouldHandleError[5503487] errorExists[7299736])
                              if shouldHandleError[5503487]
                              {
                                (5503483 '=' error_out[5503164] error[5503467])
                                (5630200 call chpl__autoDestroy[3262688] t[3036947])
                                (5630203 call chpl__autoDestroy[4185952] tmp[3036930])
                                gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                              }
                            }
                          }
                          (5630207 call chpl__autoDestroy[3262688] t[3036947])
                          (5630210 call chpl__autoDestroy[4185952] tmp[3036930])
                        }
                        {
                          const-val call_tmp[3037007]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[3104330]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3104334 'move' coerce_tmp[3104330](3104332 'deref' tmp[3035454]))
                          (3037009 'move' call_tmp[3037007](3037012 call ==[52725] coerce_tmp[3104330] QIO_CONV_ARG_TYPE_REGEX[168038]))
                          const-val call_tmp[3037015]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3037017 'move' call_tmp[3037015] call_tmp[3037007])
                          if call_tmp[3037015]
                          {
                            const-val call_tmp[3037024]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3037026 'move' call_tmp[3037024](3037029 call qio_format_error_write_regex[168174]))
                            (3037031 call =[13310] err[3035318] call_tmp[3037024])
                          }
                          {
                            const-val call_tmp[3037035]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3104345]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3104349 'move' coerce_tmp[3104345](3104347 'deref' tmp[3035454]))
                            (3037037 'move' call_tmp[3037035](3037040 call ==[52725] coerce_tmp[3104345] QIO_CONV_ARG_TYPE_SERDE[168033]))
                            const-val call_tmp[3037043]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3037045 'move' call_tmp[3037043] call_tmp[3037035])
                            if call_tmp[3037043]
                            {
                              val call_tmp[3037052]:defaultSerializer[171969] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[3037060]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              val call_tmp[3037068]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              {
                                val call_tmp[3037077]:defaultSerializer[171969] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                val call_tmp[3037085]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                                val call_tmp[3037093]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                                const-val coerce_tmp[3104752]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (3104756 'move' coerce_tmp[3104752](3104754 'deref' arg[3035296]))
                                val error[5503496]:Error[85511] "error variable" "temp"
                                (5503498 'move' error[5503496] nil[32])
                                (3037117 call _serializeOne[3104362] this[3035292] coerce_tmp[3104752] origLocale[3035320] error[5503496])
                                val errorExists[7299744]:bool[19] "temp"
                                (7299749 'move' errorExists[7299744](7299746 '!=' error[5503496] nil[32]))
                                if errorExists[7299744]
                                {
                                  (5503502 '=' error_out[5503164] error[5503496])
                                  gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                                }
                              }
                            }
                            {
                              const-val call_tmp[3037133]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5546545]:string[244] "temp"
                              (3037138 call :[1496816] i[3035298] ret_tmp[5546545])
                              (5546548 'move' call_tmp[3037133] ret_tmp[5546545])
                              const-val call_tmp[3037141]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540100]:string[244] "temp"
                              (3037146 call +[28065] "illegal argument 'args(" call_tmp[3037133] ret_tmp[5540100])
                              (5540103 'move' call_tmp[3037141] ret_tmp[5540100])
                              const-val call_tmp[3037149]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540106]:string[244] "temp"
                              (3037154 call +[28065] call_tmp[3037141] ")': writef internal error " ret_tmp[5540106])
                              (5540109 'move' call_tmp[3037149] ret_tmp[5540106])
                              const-ref call_tmp[3037157]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                              (3037159 'move' call_tmp[3037157](3037162 call this[3037790] argType[3035308] i[3035298]))
                              const-val call_tmp[3037164]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val coerce_tmp[3105436]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (3105440 'move' coerce_tmp[3105436](3105438 'deref' call_tmp[3037157]))
                              const-val ret_tmp[5555472]:string[244] "temp"
                              (3037169 call :[1816123] coerce_tmp[3105436] ret_tmp[5555472])
                              (5555475 'move' call_tmp[3037164] ret_tmp[5555472])
                              const-val call_tmp[3037172]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540112]:string[244] "temp"
                              (3037177 call +[28065] call_tmp[3037149] call_tmp[3037164] ret_tmp[5540112])
                              (5540115 'move' call_tmp[3037172] ret_tmp[5540112])
                              const-val call_tmp[3037180]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
                              { scopeless
                                val new_temp[3105467]:IllegalArgumentError[85616] "dead after last mention" "temp"
                                (3105469 'move' new_temp[3105467](3105454 call _new[1475209] call_tmp[3037172]))
                              }
                              const-val initTemp[3105476]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
                              (3105479 call init[1475364] initTemp[3105476] new_temp[3105467])
                              (3037182 'move' call_tmp[3037180] initTemp[3105476])
                              val call_tmp[3037189]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                              const-val coerce_tmp[3105493]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                              const-val ret_tmp[5547103]:owned Error[1498203] "temp"
                              (3105495 call :[1498308] call_tmp[3037180] ret_tmp[5547103])
                              (5547106 'move' coerce_tmp[3105493] ret_tmp[5547103])
                              const-val _formal_tmp_in_err[3105712]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                              (3105717 'move' _formal_tmp_in_err[3105712] coerce_tmp[3105493])
                              (3037191 'move' call_tmp[3037189](3037194 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3105712]))
                              {
                                val castedError[5503511]:Error[85511] "temp"
                                (5503517 'move' castedError[5503511] call_tmp[3037189])
                                (5503519 '=' error_out[5503164] castedError[5503511])
                                (5630213 call chpl__autoDestroy[3262688] call_tmp[3037172])
                                (5630216 call chpl__autoDestroy[3262688] call_tmp[3037164])
                                (5630219 call chpl__autoDestroy[3262688] call_tmp[3037149])
                                (5630222 call chpl__autoDestroy[3262688] call_tmp[3037141])
                                (5630225 call chpl__autoDestroy[3262688] call_tmp[3037133])
                                gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                              }
                              (5630229 call chpl__autoDestroy[3262688] call_tmp[3037172])
                              (5630232 call chpl__autoDestroy[3262688] call_tmp[3037164])
                              (5630235 call chpl__autoDestroy[3262688] call_tmp[3037149])
                              (5630238 call chpl__autoDestroy[3262688] call_tmp[3037141])
                              (5630241 call chpl__autoDestroy[3262688] call_tmp[3037133])
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_writefOne[5503166]
    (3037210 return _void[46])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._writefOne[3318992](const  ref arg this[3318998]:_ref(fileWriter(false,defaultSerializer))[1838958], const  ref arg fmtStr[3319000]:string[244], const  ref arg arg[3319002]:_ref(string)[1466327], const in arg i[3319004]:int(64)[10], ref arg cur[3319008]:_ref(uint(64))[1465718], ref arg j[3319010]:_ref(int(64))[1465689], const in arg argType[3319014]:c_ptr(int(32))[3035159], const in arg argTypeLen[3319016]:int(64)[10], ref arg conv[3319018]:_ref(qio_conv_t)[1579597], ref arg gotConv[3319020]:_ref(bool)[1466299], ref arg style[3319022]:_ref(iostyleInternal)[1538907], ref arg err[3319024]:_ref(errorCode)[1499037], const  ref arg origLocale[3319026]:locale[234], const in arg len[3319030]:uint(64)[86], ref arg error_out[5508680]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3319040]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3319049]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3319051 'move' call_tmp[3319049](3319054 call >=[54627] i[3319004] argTypeLen[3319016]))
      const-val call_tmp[3319057]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3319059 'move' call_tmp[3319057] call_tmp[3319049])
      if call_tmp[3319057]
      {
        (3319067 call halt[1673640] "Index " i[3319004] " is accessed on argType of length " argTypeLen[3319016])
      }
    }
    (3319075 call =[52153] gotConv[3319020] 0)
    const-val call_tmp[3319079]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3320924]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3320928 'move' coerce_tmp[3320924](3320926 'deref' j[3319010]))
    (3319081 'move' call_tmp[3319079](3319084 call <=[54364] coerce_tmp[3320924] i[3319004]))
    const-val call_tmp[3319087]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3319089 'move' call_tmp[3319087] call_tmp[3319079])
    if call_tmp[3319087]
    {
      (3319100 call _format_reader[3037225] this[3318998] fmtStr[3319000] cur[3319008] len[3319030] err[3319024] conv[3319018] gotConv[3319020] style[3319022])
    }
    (3319110 call _conv_helper[200155] err[3319024] conv[3319018] gotConv[3319020] j[3319010] argType[3319014] argTypeLen[3319016])
    const-ref call_tmp[3319118]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
    (3319120 'move' call_tmp[3319118](3319123 call this[3037790] argType[3319014] i[3319004]))
    const-val call_tmp[3319125]:bool[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3322270]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3322274 'move' coerce_tmp[3322270](3322272 'deref' call_tmp[3319118]))
    val error[5508685]:Error[85511] "error variable" "temp"
    (5508687 'move' error[5508685] nil[32])
    (3319127 'move' call_tmp[3319125](3319130 call _conv_sethandler[3320936] err[3319024] coerce_tmp[3322270] style[3319022] i[3319004] arg[3319002] 0 error[5508685]))
    val errorExists[7302136]:bool[19] "temp"
    (7302141 'move' errorExists[7302136](7302138 '!=' error[5508685] nil[32]))
    if errorExists[7302136]
    {
      (5508691 '=' error_out[5508680] error[5508685])
      gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
    }
    const-val domore[3319137]:bool[19] "dead at end of block" "insert auto destroy"
    (3319139 'move' domore[3319137] call_tmp[3319125])
    const-val call_tmp[3319143]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3319145 'move' call_tmp[3319143] domore[3319137])
    if call_tmp[3319143]
    {
      (3319156 call _set_styleInternal[3033186] this[3318998] style[3319022])
      {
        const-ref tmp[3319160]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
        (3319162 'move' tmp[3319160](3319165 call this[3037790] argType[3319014] i[3319004]))
        const-val tmp[3319167]:bool[19] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3323390]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3323394 'move' coerce_tmp[3323390](3323392 'deref' tmp[3319160]))
        (3319169 'move' tmp[3319167](3319172 call ==[52725] coerce_tmp[3323390] QIO_CONV_ARG_TYPE_SIGNED[167968]))
        val call_tmp[3319175]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[3319188]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[3319190]:bool[19] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[3319192]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3319194 'move' call_tmp[3319192] tmp[3319167])
        (3319199 'move' tmp[3319190] call_tmp[3319192])
        if tmp[3319190]
        {
          (3319206 'move' tmp[3319188] 1)
        }
        {
          const-val tmp[3319212]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[3319214]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3323400]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323404 'move' coerce_tmp[3323400](3323402 'deref' tmp[3319160]))
          (3319216 'move' call_tmp[3319214](3319219 call ==[52725] coerce_tmp[3323400] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
          (3319222 'move' tmp[3319212] call_tmp[3319214])
          (3319227 'move' tmp[3319188] tmp[3319212])
        }
        const-val call_tmp[3319233]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3319235 'move' call_tmp[3319233] tmp[3319188])
        if call_tmp[3319233]
        {
          const-ref call_tmp[3319242]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
          (3319244 'move' call_tmp[3319242](3319247 call precision[1131865] style[3319022]))
          val call_tmp[3319250]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[3319257]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3323410]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323414 'move' coerce_tmp[3323410](3323412 'deref' call_tmp[3319242]))
          const-val coerce_tmp[3323416]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323422 'move' coerce_tmp[3323416](3323418 'cast' int(32)[66] -1))
          (3319259 'move' call_tmp[3319257](3319262 call !=[53199] coerce_tmp[3323410] coerce_tmp[3323416]))
          const-val call_tmp[3319265]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3319267 'move' call_tmp[3319265] call_tmp[3319257])
          if call_tmp[3319265]
          {
            (3319275 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
          }
          const-val call_tmp[3319278]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          val error[5508700]:Error[85511] "error variable" "temp"
          (5508702 'move' error[5508700] nil[32])
          const-val ret_tmp[5589002]:(int(64),bool)[3040018] "temp"
          (3319283 call _toSigned[3323426] arg[3319002] error[5508700] ret_tmp[5589002])
          (5589005 'move' call_tmp[3319278] ret_tmp[5589002])
          val errorExists[7302144]:bool[19] "temp"
          (7302149 'move' errorExists[7302144](7302146 '!=' error[5508700] nil[32]))
          if errorExists[7302144]
          {
            (5508706 '=' error_out[5508680] error[5508700])
            gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
          }
          const-val tmp[3319285]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
          (3319287 'move' tmp[3319285] call_tmp[3319278])
          1
          const-ref call_tmp[3319295]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3319297 'move' call_tmp[3319295](3323672 '.' tmp[3319285] x0[3040014]))
          const-val t[3319302]:int(64)[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3323678]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323682 'move' coerce_tmp[3323678](3323680 'deref' call_tmp[3319295]))
          (3319304 'move' t[3319302](3323675 call chpl__initCopy[1473915] coerce_tmp[3323678] 0))
          const-ref call_tmp[3319307]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
          (3319309 'move' call_tmp[3319307](3323687 '.' tmp[3319285] x1[3040016]))
          const-val ok[3319314]:bool[19] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3323693]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323697 'move' coerce_tmp[3323693](3323695 'deref' call_tmp[3319307]))
          (3319316 'move' ok[3319314](3323690 call chpl__initCopy[1757859] coerce_tmp[3323693] 0))
          const-val call_tmp[3319320]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3319322 'move' call_tmp[3319320](3319325 call ![63126] ok[3319314]))
          const-val call_tmp[3319327]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3319329 'move' call_tmp[3319327] call_tmp[3319320])
          if call_tmp[3319327]
          {
            const-val call_tmp[3319336]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319338 'move' call_tmp[3319336](3319341 call qio_format_error_arg_mismatch[168158] i[3319004]))
            (3319344 call =[13310] err[3319024] call_tmp[3319336])
          }
          {
            const-ref call_tmp[3319348]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
            (3319350 'move' call_tmp[3319348](3319353 call this[3037790] argType[3319014] i[3319004]))
            const-val call_tmp[3319355]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3323712]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3323716 'move' coerce_tmp[3323712](3323714 'deref' call_tmp[3319348]))
            (3319357 'move' call_tmp[3319355](3319360 call ==[52725] coerce_tmp[3323712] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
            const-val call_tmp[3319363]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319365 'move' call_tmp[3319363] call_tmp[3319355])
            if call_tmp[3319363]
            {
              const-ref call_tmp[3319372]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
              (3319374 'move' call_tmp[3319372](3319377 call max_width_bytes[1131317] style[3319022]))
              const-val call_tmp[3319380]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3323720]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3323724 'move' coerce_tmp[3323720](3323722 'deref' call_tmp[3319372]))
              (3319382 'move' call_tmp[3319380](3319388 call _write_signed[3042764] this[3318998] coerce_tmp[3323720] t[3319302] i[3319004]))
              (3319393 call =[13310] err[3319024] call_tmp[3319380])
            }
            {
              {
                val error[5508714]:Error[85511] "error variable" "temp"
                (5508723 'move' error[5508714] nil[32])
                (3319404 call _writeOne[3043358] this[3318998] t[3319302] origLocale[3319026] error[5508714])
                val errorExists[7302152]:bool[19] "temp"
                (7302157 'move' errorExists[7302152](7302154 '!=' error[5508714] nil[32]))
                if errorExists[7302152]
                {
                  gotoErrorHandling handler[5508715] handler[5508715]
                }
                label handler[5508715]
                const-val shouldHandleError[5508734]:bool[19] "temp"
                val errorExists[7302160]:bool[19] "temp"
                (7302165 'move' errorExists[7302160](7302162 '!=' error[5508714] nil[32]))
                (5508738 'move' shouldHandleError[5508734] errorExists[7302160])
                if shouldHandleError[5508734]
                {
                  (5508730 '=' error_out[5508680] error[5508714])
                  (5634602 call chpl__autoDestroy[4184737] tmp[3319285])
                  gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                }
              }
            }
          }
          (5634606 call chpl__autoDestroy[4184737] tmp[3319285])
        }
        {
          const-val tmp[3319414]:bool[19] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3323735]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323739 'move' coerce_tmp[3323735](3323737 'deref' tmp[3319160]))
          (3319416 'move' tmp[3319414](3319419 call ==[52725] coerce_tmp[3323735] QIO_CONV_ARG_TYPE_UNSIGNED[167978]))
          val call_tmp[3319422]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3319435]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[3319437]:bool[19] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[3319439]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3319441 'move' call_tmp[3319439] tmp[3319414])
          (3319446 'move' tmp[3319437] call_tmp[3319439])
          if tmp[3319437]
          {
            (3319453 'move' tmp[3319435] 1)
          }
          {
            const-val tmp[3319459]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[3319461]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3323745]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3323749 'move' coerce_tmp[3323745](3323747 'deref' tmp[3319160]))
            (3319463 'move' call_tmp[3319461](3319466 call ==[52725] coerce_tmp[3323745] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
            (3319469 'move' tmp[3319459] call_tmp[3319461])
            (3319474 'move' tmp[3319435] tmp[3319459])
          }
          const-val call_tmp[3319480]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3319482 'move' call_tmp[3319480] tmp[3319435])
          if call_tmp[3319480]
          {
            const-ref call_tmp[3319489]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
            (3319491 'move' call_tmp[3319489](3319494 call precision[1131865] style[3319022]))
            val call_tmp[3319497]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val call_tmp[3319504]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3323755]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3323759 'move' coerce_tmp[3323755](3323757 'deref' call_tmp[3319489]))
            const-val coerce_tmp[3323761]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3323767 'move' coerce_tmp[3323761](3323763 'cast' int(32)[66] -1))
            (3319506 'move' call_tmp[3319504](3319509 call !=[53199] coerce_tmp[3323755] coerce_tmp[3323761]))
            const-val call_tmp[3319512]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319514 'move' call_tmp[3319512] call_tmp[3319504])
            if call_tmp[3319512]
            {
              (3319522 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
            }
            const-val call_tmp[3319525]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
            val error[5508743]:Error[85511] "error variable" "temp"
            (5508745 'move' error[5508743] nil[32])
            const-val ret_tmp[5589014]:(uint(64),bool)[3051128] "temp"
            (3319530 call _toUnsigned[3323771] arg[3319002] error[5508743] ret_tmp[5589014])
            (5589017 'move' call_tmp[3319525] ret_tmp[5589014])
            val errorExists[7302168]:bool[19] "temp"
            (7302173 'move' errorExists[7302168](7302170 '!=' error[5508743] nil[32]))
            if errorExists[7302168]
            {
              (5508749 '=' error_out[5508680] error[5508743])
              gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
            }
            const-val tmp[3319532]:(uint(64),bool)[3051128] "dead at end of block" "insert auto destroy" "temp"
            (3319534 'move' tmp[3319532] call_tmp[3319525])
            1
            const-ref call_tmp[3319542]:_ref(uint(64))[1465718] "dead after last mention" "maybe param" "temp"
            (3319544 'move' call_tmp[3319542](3324025 '.' tmp[3319532] x0[3051124]))
            const-val t[3319549]:uint(64)[86] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3324031]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3324035 'move' coerce_tmp[3324031](3324033 'deref' call_tmp[3319542]))
            (3319551 'move' t[3319549](3324028 call chpl__initCopy[1820361] coerce_tmp[3324031] 0))
            const-ref call_tmp[3319554]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
            (3319556 'move' call_tmp[3319554](3324040 '.' tmp[3319532] x1[3051126]))
            const-val ok[3319561]:bool[19] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3324046]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3324050 'move' coerce_tmp[3324046](3324048 'deref' call_tmp[3319554]))
            (3319563 'move' ok[3319561](3324043 call chpl__initCopy[1757859] coerce_tmp[3324046] 0))
            const-val call_tmp[3319567]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319569 'move' call_tmp[3319567](3319572 call ![63126] ok[3319561]))
            const-val call_tmp[3319574]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319576 'move' call_tmp[3319574] call_tmp[3319567])
            if call_tmp[3319574]
            {
              const-val call_tmp[3319583]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3319585 'move' call_tmp[3319583](3319588 call qio_format_error_arg_mismatch[168158] i[3319004]))
              (3319591 call =[13310] err[3319024] call_tmp[3319583])
            }
            {
              const-ref call_tmp[3319595]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
              (3319597 'move' call_tmp[3319595](3319600 call this[3037790] argType[3319014] i[3319004]))
              const-val call_tmp[3319602]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3324065]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324069 'move' coerce_tmp[3324065](3324067 'deref' call_tmp[3319595]))
              (3319604 'move' call_tmp[3319602](3319607 call ==[52725] coerce_tmp[3324065] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
              const-val call_tmp[3319610]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3319612 'move' call_tmp[3319610] call_tmp[3319602])
              if call_tmp[3319610]
              {
                const-ref call_tmp[3319619]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                (3319621 'move' call_tmp[3319619](3319624 call max_width_bytes[1131317] style[3319022]))
                const-val call_tmp[3319627]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3324073]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3324077 'move' coerce_tmp[3324073](3324075 'deref' call_tmp[3319619]))
                (3319629 'move' call_tmp[3319627](3319635 call _write_unsigned[3051637] this[3318998] coerce_tmp[3324073] t[3319549] i[3319004]))
                (3319640 call =[13310] err[3319024] call_tmp[3319627])
              }
              {
                {
                  val error[5508757]:Error[85511] "error variable" "temp"
                  (5508766 'move' error[5508757] nil[32])
                  (3319651 call _writeOne[3052255] this[3318998] t[3319549] origLocale[3319026] error[5508757])
                  val errorExists[7302176]:bool[19] "temp"
                  (7302181 'move' errorExists[7302176](7302178 '!=' error[5508757] nil[32]))
                  if errorExists[7302176]
                  {
                    gotoErrorHandling handler[5508758] handler[5508758]
                  }
                  label handler[5508758]
                  const-val shouldHandleError[5508777]:bool[19] "temp"
                  val errorExists[7302184]:bool[19] "temp"
                  (7302189 'move' errorExists[7302184](7302186 '!=' error[5508757] nil[32]))
                  (5508781 'move' shouldHandleError[5508777] errorExists[7302184])
                  if shouldHandleError[5508777]
                  {
                    (5508773 '=' error_out[5508680] error[5508757])
                    (5634609 call chpl__autoDestroy[4185009] tmp[3319532])
                    gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                  }
                }
              }
            }
            (5634613 call chpl__autoDestroy[4185009] tmp[3319532])
          }
          {
            const-val tmp[3319661]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3324088]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3324092 'move' coerce_tmp[3324088](3324090 'deref' tmp[3319160]))
            (3319663 'move' tmp[3319661](3319666 call ==[52725] coerce_tmp[3324088] QIO_CONV_ARG_TYPE_REAL[167988]))
            val call_tmp[3319669]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[3319682]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[3319684]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[3319686]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319688 'move' call_tmp[3319686] tmp[3319661])
            (3319693 'move' tmp[3319684] call_tmp[3319686])
            if tmp[3319684]
            {
              (3319700 'move' tmp[3319682] 1)
            }
            {
              const-val tmp[3319706]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[3319708]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3324098]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324102 'move' coerce_tmp[3324098](3324100 'deref' tmp[3319160]))
              (3319710 'move' call_tmp[3319708](3319713 call ==[52725] coerce_tmp[3324098] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
              (3319716 'move' tmp[3319706] call_tmp[3319708])
              (3319721 'move' tmp[3319682] tmp[3319706])
            }
            const-val call_tmp[3319727]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319729 'move' call_tmp[3319727] tmp[3319682])
            if call_tmp[3319727]
            {
              const-val call_tmp[3319736]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp"
              val error[5508786]:Error[85511] "error variable" "temp"
              (5508788 'move' error[5508786] nil[32])
              const-val ret_tmp[5589026]:(real(64),bool)[3059761] "temp"
              (3319741 call _toReal[3324126] arg[3319002] error[5508786] ret_tmp[5589026])
              (5589029 'move' call_tmp[3319736] ret_tmp[5589026])
              val errorExists[7302192]:bool[19] "temp"
              (7302197 'move' errorExists[7302192](7302194 '!=' error[5508786] nil[32]))
              if errorExists[7302192]
              {
                (5508792 '=' error_out[5508680] error[5508786])
                gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
              }
              const-val tmp[3319743]:(real(64),bool)[3059761] "dead at end of block" "insert auto destroy" "temp"
              (3319745 'move' tmp[3319743] call_tmp[3319736])
              1
              const-ref call_tmp[3319753]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
              (3319755 'move' call_tmp[3319753](3324372 '.' tmp[3319743] x0[3059757]))
              const-val t[3319760]:real(64)[13] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3324378]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324382 'move' coerce_tmp[3324378](3324380 'deref' call_tmp[3319753]))
              (3319762 'move' t[3319760](3324375 call chpl__initCopy[2153905] coerce_tmp[3324378] 0))
              const-ref call_tmp[3319765]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3319767 'move' call_tmp[3319765](3324387 '.' tmp[3319743] x1[3059759]))
              const-val ok[3319772]:bool[19] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3324393]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324397 'move' coerce_tmp[3324393](3324395 'deref' call_tmp[3319765]))
              (3319774 'move' ok[3319772](3324390 call chpl__initCopy[1757859] coerce_tmp[3324393] 0))
              const-val call_tmp[3319778]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3319780 'move' call_tmp[3319778](3319783 call ![63126] ok[3319772]))
              const-val call_tmp[3319785]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3319787 'move' call_tmp[3319785] call_tmp[3319778])
              if call_tmp[3319785]
              {
                const-val call_tmp[3319794]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3319796 'move' call_tmp[3319794](3319799 call qio_format_error_arg_mismatch[168158] i[3319004]))
                (3319802 call =[13310] err[3319024] call_tmp[3319794])
              }
              {
                const-ref call_tmp[3319806]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                (3319808 'move' call_tmp[3319806](3319811 call this[3037790] argType[3319014] i[3319004]))
                const-val call_tmp[3319813]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3324412]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3324416 'move' coerce_tmp[3324412](3324414 'deref' call_tmp[3319806]))
                (3319815 'move' call_tmp[3319813](3319818 call ==[52725] coerce_tmp[3324412] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
                const-val call_tmp[3319821]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3319823 'move' call_tmp[3319821] call_tmp[3319813])
                if call_tmp[3319821]
                {
                  const-ref call_tmp[3319830]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                  (3319832 'move' call_tmp[3319830](3319835 call max_width_bytes[1131317] style[3319022]))
                  const-val call_tmp[3319838]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3324420]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3324424 'move' coerce_tmp[3324420](3324422 'deref' call_tmp[3319830]))
                  (3319840 'move' call_tmp[3319838](3319846 call _write_real[3060196] this[3318998] coerce_tmp[3324420] t[3319760] i[3319004]))
                  (3319851 call =[13310] err[3319024] call_tmp[3319838])
                }
                {
                  {
                    val error[5508800]:Error[85511] "error variable" "temp"
                    (5508809 'move' error[5508800] nil[32])
                    (3319862 call _writeOne[3060524] this[3318998] t[3319760] origLocale[3319026] error[5508800])
                    val errorExists[7302200]:bool[19] "temp"
                    (7302205 'move' errorExists[7302200](7302202 '!=' error[5508800] nil[32]))
                    if errorExists[7302200]
                    {
                      gotoErrorHandling handler[5508801] handler[5508801]
                    }
                    label handler[5508801]
                    const-val shouldHandleError[5508820]:bool[19] "temp"
                    val errorExists[7302208]:bool[19] "temp"
                    (7302213 'move' errorExists[7302208](7302210 '!=' error[5508800] nil[32]))
                    (5508824 'move' shouldHandleError[5508820] errorExists[7302208])
                    if shouldHandleError[5508820]
                    {
                      (5508816 '=' error_out[5508680] error[5508800])
                      (5634616 call chpl__autoDestroy[4185145] tmp[3319743])
                      gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                    }
                  }
                }
              }
              (5634620 call chpl__autoDestroy[4185145] tmp[3319743])
            }
            {
              const-val tmp[3319872]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3324435]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324439 'move' coerce_tmp[3324435](3324437 'deref' tmp[3319160]))
              (3319874 'move' tmp[3319872](3319877 call ==[52725] coerce_tmp[3324435] QIO_CONV_ARG_TYPE_IMAG[167998]))
              val call_tmp[3319880]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[3319893]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[3319895]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[3319897]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3319899 'move' call_tmp[3319897] tmp[3319872])
              (3319904 'move' tmp[3319895] call_tmp[3319897])
              if tmp[3319895]
              {
                (3319911 'move' tmp[3319893] 1)
              }
              {
                const-val tmp[3319917]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[3319919]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3324445]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3324449 'move' coerce_tmp[3324445](3324447 'deref' tmp[3319160]))
                (3319921 'move' call_tmp[3319919](3319924 call ==[52725] coerce_tmp[3324445] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                (3319927 'move' tmp[3319917] call_tmp[3319919])
                (3319932 'move' tmp[3319893] tmp[3319917])
              }
              const-val call_tmp[3319938]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3319940 'move' call_tmp[3319938] tmp[3319893])
              if call_tmp[3319938]
              {
                const-val call_tmp[3319947]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
                val error[5508829]:Error[85511] "error variable" "temp"
                (5508831 'move' error[5508829] nil[32])
                const-val ret_tmp[5589038]:(imag(64),bool)[3067847] "temp"
                (3319952 call _toImag[3324473] arg[3319002] error[5508829] ret_tmp[5589038])
                (5589041 'move' call_tmp[3319947] ret_tmp[5589038])
                val errorExists[7302216]:bool[19] "temp"
                (7302221 'move' errorExists[7302216](7302218 '!=' error[5508829] nil[32]))
                if errorExists[7302216]
                {
                  (5508835 '=' error_out[5508680] error[5508829])
                  gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                }
                const-val tmp[3319954]:(imag(64),bool)[3067847] "dead at end of block" "insert auto destroy" "temp"
                (3319956 'move' tmp[3319954] call_tmp[3319947])
                1
                const-ref call_tmp[3319964]:_ref(imag(64))[1466226] "dead after last mention" "maybe param" "temp"
                (3319966 'move' call_tmp[3319964](3325711 '.' tmp[3319954] x0[3067843]))
                const-val t[3319971]:imag(64)[101] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3325717]:imag(64)[101] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3325721 'move' coerce_tmp[3325717](3325719 'deref' call_tmp[3319964]))
                (3319973 'move' t[3319971](3325714 call chpl__initCopy[3068019] coerce_tmp[3325717] 0))
                const-ref call_tmp[3319976]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                (3319978 'move' call_tmp[3319976](3325726 '.' tmp[3319954] x1[3067845]))
                const-val ok[3319983]:bool[19] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3325732]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3325736 'move' coerce_tmp[3325732](3325734 'deref' call_tmp[3319976]))
                (3319985 'move' ok[3319983](3325729 call chpl__initCopy[1757859] coerce_tmp[3325732] 0))
                const-val call_tmp[3319989]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3319991 'move' call_tmp[3319989](3319994 call ![63126] ok[3319983]))
                const-val call_tmp[3319996]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3319998 'move' call_tmp[3319996] call_tmp[3319989])
                if call_tmp[3319996]
                {
                  const-val call_tmp[3320005]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3320007 'move' call_tmp[3320005](3320010 call qio_format_error_arg_mismatch[168158] i[3319004]))
                  (3320013 call =[13310] err[3319024] call_tmp[3320005])
                }
                {
                  const-ref call_tmp[3320017]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3320019 'move' call_tmp[3320017](3320022 call this[3037790] argType[3319014] i[3319004]))
                  const-val call_tmp[3320024]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3325751]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3325755 'move' coerce_tmp[3325751](3325753 'deref' call_tmp[3320017]))
                  (3320026 'move' call_tmp[3320024](3320029 call ==[52725] coerce_tmp[3325751] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                  const-val call_tmp[3320032]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3320034 'move' call_tmp[3320032] call_tmp[3320024])
                  if call_tmp[3320032]
                  {
                    const-ref call_tmp[3320041]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                    (3320043 'move' call_tmp[3320041](3320046 call max_width_bytes[1131317] style[3319022]))
                    const-val call_tmp[3320049]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3320051 'move' call_tmp[3320049](3320054 call :[3068404] t[3319971]))
                    const-val call_tmp[3320057]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3325760]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3325764 'move' coerce_tmp[3325760](3325762 'deref' call_tmp[3320041]))
                    (3320059 'move' call_tmp[3320057](3320065 call _write_real[3060196] this[3318998] coerce_tmp[3325760] call_tmp[3320049] i[3319004]))
                    (3320070 call =[13310] err[3319024] call_tmp[3320057])
                  }
                  {
                    {
                      val error[5508843]:Error[85511] "error variable" "temp"
                      (5508852 'move' error[5508843] nil[32])
                      (3320081 call _writeOne[3068449] this[3318998] t[3319971] origLocale[3319026] error[5508843])
                      val errorExists[7302224]:bool[19] "temp"
                      (7302229 'move' errorExists[7302224](7302226 '!=' error[5508843] nil[32]))
                      if errorExists[7302224]
                      {
                        gotoErrorHandling handler[5508844] handler[5508844]
                      }
                      label handler[5508844]
                      const-val shouldHandleError[5508863]:bool[19] "temp"
                      val errorExists[7302232]:bool[19] "temp"
                      (7302237 'move' errorExists[7302232](7302234 '!=' error[5508843] nil[32]))
                      (5508867 'move' shouldHandleError[5508863] errorExists[7302232])
                      if shouldHandleError[5508863]
                      {
                        (5508859 '=' error_out[5508680] error[5508843])
                        (5634623 call chpl__autoDestroy[4185281] tmp[3319954])
                        gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                      }
                    }
                  }
                }
                (5634627 call chpl__autoDestroy[4185281] tmp[3319954])
              }
              {
                const-val tmp[3320091]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[3325775]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3325779 'move' coerce_tmp[3325775](3325777 'deref' tmp[3319160]))
                (3320093 'move' tmp[3320091](3320096 call ==[52725] coerce_tmp[3325775] QIO_CONV_ARG_TYPE_COMPLEX[168008]))
                val call_tmp[3320099]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[3320112]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[3320114]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[3320116]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3320118 'move' call_tmp[3320116] tmp[3320091])
                (3320123 'move' tmp[3320114] call_tmp[3320116])
                if tmp[3320114]
                {
                  (3320130 'move' tmp[3320112] 1)
                }
                {
                  const-val tmp[3320136]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[3320138]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3325785]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3325789 'move' coerce_tmp[3325785](3325787 'deref' tmp[3319160]))
                  (3320140 'move' call_tmp[3320138](3320143 call ==[52725] coerce_tmp[3325785] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                  (3320146 'move' tmp[3320136] call_tmp[3320138])
                  (3320151 'move' tmp[3320112] tmp[3320136])
                }
                const-val call_tmp[3320157]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3320159 'move' call_tmp[3320157] tmp[3320112])
                if call_tmp[3320157]
                {
                  const-val call_tmp[3320166]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
                  val error[5508872]:Error[85511] "error variable" "temp"
                  (5508874 'move' error[5508872] nil[32])
                  const-val ret_tmp[5589050]:(complex(128),bool)[3077587] "temp"
                  (3320171 call _toComplex[3325813] arg[3319002] error[5508872] ret_tmp[5589050])
                  (5589053 'move' call_tmp[3320166] ret_tmp[5589050])
                  val errorExists[7302240]:bool[19] "temp"
                  (7302245 'move' errorExists[7302240](7302242 '!=' error[5508872] nil[32]))
                  if errorExists[7302240]
                  {
                    (5508878 '=' error_out[5508680] error[5508872])
                    gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                  }
                  const-val tmp[3320173]:(complex(128),bool)[3077587] "dead at end of block" "insert auto destroy" "temp"
                  (3320175 'move' tmp[3320173] call_tmp[3320166])
                  1
                  const-ref call_tmp[3320183]:_ref(complex(128))[1466240] "dead after last mention" "maybe param" "temp"
                  (3320185 'move' call_tmp[3320183](3327874 '.' tmp[3320173] x0[3077583]))
                  const-val t[3320190]:complex(128)[111] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3327880]:complex(128)[111] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3327884 'move' coerce_tmp[3327880](3327882 'deref' call_tmp[3320183]))
                  (3320192 'move' t[3320190](3327877 call chpl__initCopy[3078021] coerce_tmp[3327880] 0))
                  const-ref call_tmp[3320195]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                  (3320197 'move' call_tmp[3320195](3327889 '.' tmp[3320173] x1[3077585]))
                  const-val ok[3320202]:bool[19] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3327895]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3327899 'move' coerce_tmp[3327895](3327897 'deref' call_tmp[3320195]))
                  (3320204 'move' ok[3320202](3327892 call chpl__initCopy[1757859] coerce_tmp[3327895] 0))
                  const-val call_tmp[3320208]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3320210 'move' call_tmp[3320208](3320213 call ![63126] ok[3320202]))
                  const-val call_tmp[3320215]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3320217 'move' call_tmp[3320215] call_tmp[3320208])
                  if call_tmp[3320215]
                  {
                    const-val call_tmp[3320224]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3320226 'move' call_tmp[3320224](3320229 call qio_format_error_arg_mismatch[168158] i[3319004]))
                    (3320232 call =[13310] err[3319024] call_tmp[3320224])
                  }
                  {
                    const-ref call_tmp[3320236]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                    (3320238 'move' call_tmp[3320236](3320241 call this[3037790] argType[3319014] i[3319004]))
                    const-val call_tmp[3320243]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3327914]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3327918 'move' coerce_tmp[3327914](3327916 'deref' call_tmp[3320236]))
                    (3320245 'move' call_tmp[3320243](3320248 call ==[52725] coerce_tmp[3327914] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                    const-val call_tmp[3320251]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3320253 'move' call_tmp[3320251] call_tmp[3320243])
                    if call_tmp[3320251]
                    {
                      const-ref call_tmp[3320260]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                      (3320262 'move' call_tmp[3320260](3320265 call max_width_bytes[1131317] style[3319022]))
                      const-val call_tmp[3320268]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[3327922]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3327926 'move' coerce_tmp[3327922](3327924 'deref' call_tmp[3320260]))
                      (3320270 'move' call_tmp[3320268](3320276 call _write_complex[3078407] this[3318998] coerce_tmp[3327922] t[3320190] i[3319004]))
                      (3320281 call =[13310] err[3319024] call_tmp[3320268])
                    }
                    {
                      {
                        val error[5508886]:Error[85511] "error variable" "temp"
                        (5508895 'move' error[5508886] nil[32])
                        (3320292 call _writeOne[3079967] this[3318998] t[3320190] origLocale[3319026] error[5508886])
                        val errorExists[7302248]:bool[19] "temp"
                        (7302253 'move' errorExists[7302248](7302250 '!=' error[5508886] nil[32]))
                        if errorExists[7302248]
                        {
                          gotoErrorHandling handler[5508887] handler[5508887]
                        }
                        label handler[5508887]
                        const-val shouldHandleError[5508906]:bool[19] "temp"
                        val errorExists[7302256]:bool[19] "temp"
                        (7302261 'move' errorExists[7302256](7302258 '!=' error[5508886] nil[32]))
                        (5508910 'move' shouldHandleError[5508906] errorExists[7302256])
                        if shouldHandleError[5508906]
                        {
                          (5508902 '=' error_out[5508680] error[5508886])
                          (5634630 call chpl__autoDestroy[4185417] tmp[3320173])
                          gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                        }
                      }
                    }
                  }
                  (5634634 call chpl__autoDestroy[4185417] tmp[3320173])
                }
                {
                  const-val call_tmp[3320302]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3327937]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3327941 'move' coerce_tmp[3327937](3327939 'deref' tmp[3319160]))
                  (3320304 'move' call_tmp[3320302](3320307 call ==[52725] coerce_tmp[3327937] QIO_CONV_ARG_TYPE_NUMERIC[167963]))
                  const-val call_tmp[3320310]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3320312 'move' call_tmp[3320310] call_tmp[3320302])
                  if call_tmp[3320310]
                  {
                    const-val call_tmp[3320319]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                    val error[5508915]:Error[85511] "error variable" "temp"
                    (5508917 'move' error[5508915] nil[32])
                    const-val ret_tmp[5589062]:(int(64),bool)[3040018] "temp"
                    (3320324 call _toNumeric[3327965] arg[3319002] error[5508915] ret_tmp[5589062])
                    (5589065 'move' call_tmp[3320319] ret_tmp[5589062])
                    val errorExists[7302264]:bool[19] "temp"
                    (7302269 'move' errorExists[7302264](7302266 '!=' error[5508915] nil[32]))
                    if errorExists[7302264]
                    {
                      (5508921 '=' error_out[5508680] error[5508915])
                      gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                    }
                    const-val tmp[3320326]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
                    (3320328 'move' tmp[3320326] call_tmp[3320319])
                    1
                    const-ref call_tmp[3320336]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
                    (3320338 'move' call_tmp[3320336](3328211 '.' tmp[3320326] x0[3040014]))
                    const-val t[3320343]:int(64)[10] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3328217]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3328221 'move' coerce_tmp[3328217](3328219 'deref' call_tmp[3320336]))
                    (3320345 'move' t[3320343](3328214 call chpl__initCopy[1473915] coerce_tmp[3328217] 0))
                    const-ref call_tmp[3320348]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                    (3320350 'move' call_tmp[3320348](3328226 '.' tmp[3320326] x1[3040016]))
                    const-val ok[3320355]:bool[19] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3328232]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3328236 'move' coerce_tmp[3328232](3328234 'deref' call_tmp[3320348]))
                    (3320357 'move' ok[3320355](3328229 call chpl__initCopy[1757859] coerce_tmp[3328232] 0))
                    const-val call_tmp[3320361]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3320363 'move' call_tmp[3320361](3320366 call ![63126] ok[3320355]))
                    const-val call_tmp[3320368]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3320370 'move' call_tmp[3320368] call_tmp[3320361])
                    if call_tmp[3320368]
                    {
                      const-val call_tmp[3320377]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3320379 'move' call_tmp[3320377](3320382 call qio_format_error_arg_mismatch[168158] i[3319004]))
                      (3320385 call =[13310] err[3319024] call_tmp[3320377])
                    }
                    {
                      {
                        val error[5508929]:Error[85511] "error variable" "temp"
                        (5508938 'move' error[5508929] nil[32])
                        (3320394 call _writeOne[3043358] this[3318998] t[3320343] origLocale[3319026] error[5508929])
                        val errorExists[7302272]:bool[19] "temp"
                        (7302277 'move' errorExists[7302272](7302274 '!=' error[5508929] nil[32]))
                        if errorExists[7302272]
                        {
                          gotoErrorHandling handler[5508930] handler[5508930]
                        }
                        label handler[5508930]
                        const-val shouldHandleError[5508949]:bool[19] "temp"
                        val errorExists[7302280]:bool[19] "temp"
                        (7302285 'move' errorExists[7302280](7302282 '!=' error[5508929] nil[32]))
                        (5508953 'move' shouldHandleError[5508949] errorExists[7302280])
                        if shouldHandleError[5508949]
                        {
                          (5508945 '=' error_out[5508680] error[5508929])
                          (5634637 call chpl__autoDestroy[4184737] tmp[3320326])
                          gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                        }
                      }
                    }
                    (5634641 call chpl__autoDestroy[4184737] tmp[3320326])
                  }
                  {
                    const-val call_tmp[3320403]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3328249]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3328253 'move' coerce_tmp[3328249](3328251 'deref' tmp[3319160]))
                    (3320405 'move' call_tmp[3320403](3320408 call ==[52725] coerce_tmp[3328249] QIO_CONV_ARG_TYPE_CHAR[168018]))
                    const-val call_tmp[3320411]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3320413 'move' call_tmp[3320411] call_tmp[3320403])
                    if call_tmp[3320411]
                    {
                      const-val call_tmp[3320420]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                      const-val ret_tmp[5588966]:(int(32),bool)[3040996] "temp"
                      (3320425 call _toChar[3322847] arg[3319002] ret_tmp[5588966])
                      (5588969 'move' call_tmp[3320420] ret_tmp[5588966])
                      const-val tmp[3320427]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                      (3320429 'move' tmp[3320427] call_tmp[3320420])
                      1
                      const-ref call_tmp[3320437]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (3320439 'move' call_tmp[3320437](3328265 '.' tmp[3320427] x0[3040992]))
                      const-val t[3320444]:int(32)[66] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3328271]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3328275 'move' coerce_tmp[3328271](3328273 'deref' call_tmp[3320437]))
                      (3320446 'move' t[3320444](3328268 call chpl__initCopy[1513822] coerce_tmp[3328271] 0))
                      const-ref call_tmp[3320449]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                      (3320451 'move' call_tmp[3320449](3328280 '.' tmp[3320427] x1[3040994]))
                      const-val ok[3320456]:bool[19] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3328286]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3328290 'move' coerce_tmp[3328286](3328288 'deref' call_tmp[3320449]))
                      (3320458 'move' ok[3320456](3328283 call chpl__initCopy[1757859] coerce_tmp[3328286] 0))
                      const-val call_tmp[3320462]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3320464 'move' call_tmp[3320462](3320467 call ![63126] ok[3320456]))
                      const-val call_tmp[3320469]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3320471 'move' call_tmp[3320469] call_tmp[3320462])
                      if call_tmp[3320469]
                      {
                        const-val call_tmp[3320478]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3320480 'move' call_tmp[3320478](3320483 call qio_format_error_arg_mismatch[168158] i[3319004]))
                        (3320486 call =[13310] err[3319024] call_tmp[3320478])
                      }
                      {
                        {
                          val error[5508957]:Error[85511] "error variable" "temp"
                          (5508966 'move' error[5508957] nil[32])
                          const-val call_tmp[3320491]:_internalIoChar[176999] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                          const-val initTemp[3328303]:_internalIoChar[176999] "dead after last mention" "temp"
                          (3328306 call init[1213162] initTemp[3328303] t[3320444])
                          (3320493 'move' call_tmp[3320491] initTemp[3328303])
                          (3320502 call _writeOne[3089040] this[3318998] call_tmp[3320491] origLocale[3319026] error[5508957])
                          val errorExists[7302288]:bool[19] "temp"
                          (7302293 'move' errorExists[7302288](7302290 '!=' error[5508957] nil[32]))
                          if errorExists[7302288]
                          {
                            (5634644 call chpl__autoDestroy[3890713] call_tmp[3320491])
                            gotoErrorHandling handler[5508958] handler[5508958]
                          }
                          (5634647 call chpl__autoDestroy[3890713] call_tmp[3320491])
                          label handler[5508958]
                          const-val shouldHandleError[5508977]:bool[19] "temp"
                          val errorExists[7302296]:bool[19] "temp"
                          (7302301 'move' errorExists[7302296](7302298 '!=' error[5508957] nil[32]))
                          (5508981 'move' shouldHandleError[5508977] errorExists[7302296])
                          if shouldHandleError[5508977]
                          {
                            (5508973 '=' error_out[5508680] error[5508957])
                            (5634650 call chpl__autoDestroy[4184873] tmp[3320427])
                            gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                          }
                        }
                      }
                      (5634654 call chpl__autoDestroy[4184873] tmp[3320427])
                    }
                    {
                      const-val call_tmp[3320511]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[3328321]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3328325 'move' coerce_tmp[3328321](3328323 'deref' tmp[3319160]))
                      (3320513 'move' call_tmp[3320511](3320516 call ==[52725] coerce_tmp[3328321] QIO_CONV_ARG_TYPE_BINARY_STRING[168028]))
                      const-val call_tmp[3320519]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3320521 'move' call_tmp[3320519] call_tmp[3320511])
                      if call_tmp[3320519]
                      {
                        const-val call_tmp[3320528]:(bytes,bool)[3092705] "dead after last mention" "maybe param" "temp"
                        const-val ret_tmp[5545386]:(bytes,bool)[3092705] "temp"
                        (3320533 call _toBytes[198138] arg[3319002] ret_tmp[5545386])
                        (5545389 'move' call_tmp[3320528] ret_tmp[5545386])
                        const-val tmp[3320535]:(bytes,bool)[3092705] "dead at end of block" "insert auto destroy" "temp"
                        (3320537 'move' tmp[3320535] call_tmp[3320528])
                        1
                        const-ref call_tmp[3320545]:_ref(bytes)[1466360] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                        (3320547 'move' call_tmp[3320545](3328367 '.' tmp[3320535] x0[3092701]))
                        const-val t[3320552]:bytes[232] "dead at end of block" "insert auto destroy"
                        (3320554 call init=[33890] t[3320552] call_tmp[3320545])
                        const-ref call_tmp[3320557]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                        (3320559 'move' call_tmp[3320557](3328375 '.' tmp[3320535] x1[3092703]))
                        const-val ok[3320564]:bool[19] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3328381]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3328385 'move' coerce_tmp[3328381](3328383 'deref' call_tmp[3320557]))
                        (3320566 'move' ok[3320564](3328378 call chpl__initCopy[1757859] coerce_tmp[3328381] 0))
                        const-val call_tmp[3320570]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3320572 'move' call_tmp[3320570](3320575 call ![63126] ok[3320564]))
                        const-val call_tmp[3320577]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3320579 'move' call_tmp[3320577] call_tmp[3320570])
                        if call_tmp[3320577]
                        {
                          const-val call_tmp[3320586]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3320588 'move' call_tmp[3320586](3320591 call qio_format_error_arg_mismatch[168158] i[3319004]))
                          (3320594 call =[13310] err[3319024] call_tmp[3320586])
                        }
                        {
                          {
                            val error[5508985]:Error[85511] "error variable" "temp"
                            (5508994 'move' error[5508985] nil[32])
                            (3320603 call _writeOne[3093219] this[3318998] t[3320552] origLocale[3319026] error[5508985])
                            val errorExists[7302304]:bool[19] "temp"
                            (7302309 'move' errorExists[7302304](7302306 '!=' error[5508985] nil[32]))
                            if errorExists[7302304]
                            {
                              gotoErrorHandling handler[5508986] handler[5508986]
                            }
                            label handler[5508986]
                            const-val shouldHandleError[5509005]:bool[19] "temp"
                            val errorExists[7302312]:bool[19] "temp"
                            (7302317 'move' errorExists[7302312](7302314 '!=' error[5508985] nil[32]))
                            (5509009 'move' shouldHandleError[5509005] errorExists[7302312])
                            if shouldHandleError[5509005]
                            {
                              (5509001 '=' error_out[5508680] error[5508985])
                              (5634657 call chpl__autoDestroy[3885484] t[3320552])
                              (5634660 call chpl__autoDestroy[4185699] tmp[3320535])
                              gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                            }
                          }
                        }
                        (5634664 call chpl__autoDestroy[3885484] t[3320552])
                        (5634667 call chpl__autoDestroy[4185699] tmp[3320535])
                      }
                      {
                        const-val call_tmp[3320612]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[3328398]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3328402 'move' coerce_tmp[3328398](3328400 'deref' tmp[3319160]))
                        (3320614 'move' call_tmp[3320612](3320617 call ==[52725] coerce_tmp[3328398] QIO_CONV_ARG_TYPE_STRING[168023]))
                        const-val call_tmp[3320620]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3320622 'move' call_tmp[3320620] call_tmp[3320612])
                        if call_tmp[3320620]
                        {
                          const-val call_tmp[3320629]:(string,bool)[3103815] "dead after last mention" "maybe param" "temp"
                          const-val ret_tmp[5545398]:(string,bool)[3103815] "temp"
                          (3320634 call _toString[198175] arg[3319002] ret_tmp[5545398])
                          (5545401 'move' call_tmp[3320629] ret_tmp[5545398])
                          const-val tmp[3320636]:(string,bool)[3103815] "dead at end of block" "insert auto destroy" "temp"
                          (3320638 'move' tmp[3320636] call_tmp[3320629])
                          1
                          const-ref call_tmp[3320646]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                          (3320648 'move' call_tmp[3320646](3328622 '.' tmp[3320636] x0[3103811]))
                          const-val t[3320653]:string[244] "dead at end of block" "insert auto destroy"
                          (3320655 call init=[21330] t[3320653] call_tmp[3320646])
                          const-ref call_tmp[3320658]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                          (3320660 'move' call_tmp[3320658](3328630 '.' tmp[3320636] x1[3103813]))
                          const-val ok[3320665]:bool[19] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3328636]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3328640 'move' coerce_tmp[3328636](3328638 'deref' call_tmp[3320658]))
                          (3320667 'move' ok[3320665](3328633 call chpl__initCopy[1757859] coerce_tmp[3328636] 0))
                          const-val call_tmp[3320671]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3320673 'move' call_tmp[3320671](3320676 call ![63126] ok[3320665]))
                          const-val call_tmp[3320678]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3320680 'move' call_tmp[3320678] call_tmp[3320671])
                          if call_tmp[3320678]
                          {
                            const-val call_tmp[3320687]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3320689 'move' call_tmp[3320687](3320692 call qio_format_error_arg_mismatch[168158] i[3319004]))
                            (3320695 call =[13310] err[3319024] call_tmp[3320687])
                          }
                          {
                            {
                              val error[5509013]:Error[85511] "error variable" "temp"
                              (5509022 'move' error[5509013] nil[32])
                              (3320704 call _writeOne[1845361] this[3318998] t[3320653] origLocale[3319026] error[5509013])
                              val errorExists[7302320]:bool[19] "temp"
                              (7302325 'move' errorExists[7302320](7302322 '!=' error[5509013] nil[32]))
                              if errorExists[7302320]
                              {
                                gotoErrorHandling handler[5509014] handler[5509014]
                              }
                              label handler[5509014]
                              const-val shouldHandleError[5509033]:bool[19] "temp"
                              val errorExists[7302328]:bool[19] "temp"
                              (7302333 'move' errorExists[7302328](7302330 '!=' error[5509013] nil[32]))
                              (5509037 'move' shouldHandleError[5509033] errorExists[7302328])
                              if shouldHandleError[5509033]
                              {
                                (5509029 '=' error_out[5508680] error[5509013])
                                (5634670 call chpl__autoDestroy[3262688] t[3320653])
                                (5634673 call chpl__autoDestroy[4185952] tmp[3320636])
                                gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                              }
                            }
                          }
                          (5634677 call chpl__autoDestroy[3262688] t[3320653])
                          (5634680 call chpl__autoDestroy[4185952] tmp[3320636])
                        }
                        {
                          const-val call_tmp[3320713]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[3328653]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3328657 'move' coerce_tmp[3328653](3328655 'deref' tmp[3319160]))
                          (3320715 'move' call_tmp[3320713](3320718 call ==[52725] coerce_tmp[3328653] QIO_CONV_ARG_TYPE_REGEX[168038]))
                          const-val call_tmp[3320721]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3320723 'move' call_tmp[3320721] call_tmp[3320713])
                          if call_tmp[3320721]
                          {
                            const-val call_tmp[3320730]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3320732 'move' call_tmp[3320730](3320735 call qio_format_error_write_regex[168174]))
                            (3320737 call =[13310] err[3319024] call_tmp[3320730])
                          }
                          {
                            const-val call_tmp[3320741]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3328668]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3328672 'move' coerce_tmp[3328668](3328670 'deref' tmp[3319160]))
                            (3320743 'move' call_tmp[3320741](3320746 call ==[52725] coerce_tmp[3328668] QIO_CONV_ARG_TYPE_SERDE[168033]))
                            const-val call_tmp[3320749]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3320751 'move' call_tmp[3320749] call_tmp[3320741])
                            if call_tmp[3320749]
                            {
                              val call_tmp[3320758]:defaultSerializer[171969] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[3320766]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              val call_tmp[3320774]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              {
                                val call_tmp[3320783]:defaultSerializer[171969] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                val call_tmp[3320791]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                                val call_tmp[3320799]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                                val error[5509042]:Error[85511] "error variable" "temp"
                                (5509044 'move' error[5509042] nil[32])
                                (3320823 call _serializeOne[1844087] this[3318998] arg[3319002] origLocale[3319026] error[5509042])
                                val errorExists[7302336]:bool[19] "temp"
                                (7302341 'move' errorExists[7302336](7302338 '!=' error[5509042] nil[32]))
                                if errorExists[7302336]
                                {
                                  (5509048 '=' error_out[5508680] error[5509042])
                                  gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                                }
                              }
                            }
                            {
                              const-val call_tmp[3320839]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5546551]:string[244] "temp"
                              (3320844 call :[1496816] i[3319004] ret_tmp[5546551])
                              (5546554 'move' call_tmp[3320839] ret_tmp[5546551])
                              const-val call_tmp[3320847]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540244]:string[244] "temp"
                              (3320852 call +[28065] "illegal argument 'args(" call_tmp[3320839] ret_tmp[5540244])
                              (5540247 'move' call_tmp[3320847] ret_tmp[5540244])
                              const-val call_tmp[3320855]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540250]:string[244] "temp"
                              (3320860 call +[28065] call_tmp[3320847] ")': writef internal error " ret_tmp[5540250])
                              (5540253 'move' call_tmp[3320855] ret_tmp[5540250])
                              const-ref call_tmp[3320863]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                              (3320865 'move' call_tmp[3320863](3320868 call this[3037790] argType[3319014] i[3319004]))
                              const-val call_tmp[3320870]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val coerce_tmp[3328704]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (3328708 'move' coerce_tmp[3328704](3328706 'deref' call_tmp[3320863]))
                              const-val ret_tmp[5555478]:string[244] "temp"
                              (3320875 call :[1816123] coerce_tmp[3328704] ret_tmp[5555478])
                              (5555481 'move' call_tmp[3320870] ret_tmp[5555478])
                              const-val call_tmp[3320878]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540256]:string[244] "temp"
                              (3320883 call +[28065] call_tmp[3320855] call_tmp[3320870] ret_tmp[5540256])
                              (5540259 'move' call_tmp[3320878] ret_tmp[5540256])
                              const-val call_tmp[3320886]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
                              { scopeless
                                val new_temp[3328735]:IllegalArgumentError[85616] "dead after last mention" "temp"
                                (3328737 'move' new_temp[3328735](3328722 call _new[1475209] call_tmp[3320878]))
                              }
                              const-val initTemp[3328744]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
                              (3328747 call init[1475364] initTemp[3328744] new_temp[3328735])
                              (3320888 'move' call_tmp[3320886] initTemp[3328744])
                              val call_tmp[3320895]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                              const-val coerce_tmp[3328761]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                              const-val ret_tmp[5547139]:owned Error[1498203] "temp"
                              (3328763 call :[1498308] call_tmp[3320886] ret_tmp[5547139])
                              (5547142 'move' coerce_tmp[3328761] ret_tmp[5547139])
                              const-val _formal_tmp_in_err[3328980]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                              (3328985 'move' _formal_tmp_in_err[3328980] coerce_tmp[3328761])
                              (3320897 'move' call_tmp[3320895](3320900 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3328980]))
                              {
                                val castedError[5509057]:Error[85511] "temp"
                                (5509063 'move' castedError[5509057] call_tmp[3320895])
                                (5509065 '=' error_out[5508680] castedError[5509057])
                                (5634683 call chpl__autoDestroy[3262688] call_tmp[3320878])
                                (5634686 call chpl__autoDestroy[3262688] call_tmp[3320870])
                                (5634689 call chpl__autoDestroy[3262688] call_tmp[3320855])
                                (5634692 call chpl__autoDestroy[3262688] call_tmp[3320847])
                                (5634695 call chpl__autoDestroy[3262688] call_tmp[3320839])
                                gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                              }
                              (5634699 call chpl__autoDestroy[3262688] call_tmp[3320878])
                              (5634702 call chpl__autoDestroy[3262688] call_tmp[3320870])
                              (5634705 call chpl__autoDestroy[3262688] call_tmp[3320855])
                              (5634708 call chpl__autoDestroy[3262688] call_tmp[3320847])
                              (5634711 call chpl__autoDestroy[3262688] call_tmp[3320839])
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_writefOne[5508682]
    (3320916 return _void[46])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958]._writefOne[3727989](const  ref arg this[3727995]:_ref(fileWriter(false,defaultSerializer))[1838958], const  ref arg fmtStr[3727997]:string[244], const  ref arg arg[3727999]:_ref(real(32))[1470469], const in arg i[3728001]:int(64)[10], ref arg cur[3728005]:_ref(uint(64))[1465718], ref arg j[3728007]:_ref(int(64))[1465689], const in arg argType[3728011]:c_ptr(int(32))[3035159], const in arg argTypeLen[3728013]:int(64)[10], ref arg conv[3728015]:_ref(qio_conv_t)[1579597], ref arg gotConv[3728017]:_ref(bool)[1466299], ref arg style[3728019]:_ref(iostyleInternal)[1538907], ref arg err[3728021]:_ref(errorCode)[1499037], const  ref arg origLocale[3728023]:locale[234], const in arg len[3728027]:uint(64)[86], ref arg error_out[5518786]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val call_tmp[3728037]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[3728046]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3728048 'move' call_tmp[3728046](3728051 call >=[54627] i[3728001] argTypeLen[3728013]))
      const-val call_tmp[3728054]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3728056 'move' call_tmp[3728054] call_tmp[3728046])
      if call_tmp[3728054]
      {
        (3728064 call halt[1673640] "Index " i[3728001] " is accessed on argType of length " argTypeLen[3728013])
      }
    }
    (3728072 call =[52153] gotConv[3728017] 0)
    const-val call_tmp[3728076]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3729921]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3729925 'move' coerce_tmp[3729921](3729923 'deref' j[3728007]))
    (3728078 'move' call_tmp[3728076](3728081 call <=[54364] coerce_tmp[3729921] i[3728001]))
    const-val call_tmp[3728084]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3728086 'move' call_tmp[3728084] call_tmp[3728076])
    if call_tmp[3728084]
    {
      (3728097 call _format_reader[3037225] this[3727995] fmtStr[3727997] cur[3728005] len[3728027] err[3728021] conv[3728015] gotConv[3728017] style[3728019])
    }
    (3728107 call _conv_helper[200155] err[3728021] conv[3728015] gotConv[3728017] j[3728007] argType[3728011] argTypeLen[3728013])
    const-ref call_tmp[3728115]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
    (3728117 'move' call_tmp[3728115](3728120 call this[3037790] argType[3728011] i[3728001]))
    const-val call_tmp[3728122]:bool[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3731267]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3731271 'move' coerce_tmp[3731267](3731269 'deref' call_tmp[3728115]))
    const-val coerce_tmp[3731273]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3731277 'move' coerce_tmp[3731273](3731275 'deref' arg[3727999]))
    val error[5518791]:Error[85511] "error variable" "temp"
    (5518793 'move' error[5518791] nil[32])
    (3728124 'move' call_tmp[3728122](3728127 call _conv_sethandler[3729933] err[3728021] coerce_tmp[3731267] style[3728019] i[3728001] coerce_tmp[3731273] 0 error[5518791]))
    val errorExists[7306768]:bool[19] "temp"
    (7306773 'move' errorExists[7306768](7306770 '!=' error[5518791] nil[32]))
    if errorExists[7306768]
    {
      (5518797 '=' error_out[5518786] error[5518791])
      gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
    }
    const-val domore[3728134]:bool[19] "dead at end of block" "insert auto destroy"
    (3728136 'move' domore[3728134] call_tmp[3728122])
    const-val call_tmp[3728140]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3728142 'move' call_tmp[3728140] domore[3728134])
    if call_tmp[3728140]
    {
      (3728153 call _set_styleInternal[3033186] this[3727995] style[3728019])
      {
        const-ref tmp[3728157]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
        (3728159 'move' tmp[3728157](3728162 call this[3037790] argType[3728011] i[3728001]))
        const-val tmp[3728164]:bool[19] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3732334]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3732338 'move' coerce_tmp[3732334](3732336 'deref' tmp[3728157]))
        (3728166 'move' tmp[3728164](3728169 call ==[52725] coerce_tmp[3732334] QIO_CONV_ARG_TYPE_SIGNED[167968]))
        val call_tmp[3728172]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
        val tmp[3728185]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[3728187]:bool[19] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[3728189]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3728191 'move' call_tmp[3728189] tmp[3728164])
        (3728196 'move' tmp[3728187] call_tmp[3728189])
        if tmp[3728187]
        {
          (3728203 'move' tmp[3728185] 1)
        }
        {
          const-val tmp[3728209]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[3728211]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3732344]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732348 'move' coerce_tmp[3732344](3732346 'deref' tmp[3728157]))
          (3728213 'move' call_tmp[3728211](3728216 call ==[52725] coerce_tmp[3732344] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
          (3728219 'move' tmp[3728209] call_tmp[3728211])
          (3728224 'move' tmp[3728185] tmp[3728209])
        }
        const-val call_tmp[3728230]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3728232 'move' call_tmp[3728230] tmp[3728185])
        if call_tmp[3728230]
        {
          const-ref call_tmp[3728239]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
          (3728241 'move' call_tmp[3728239](3728244 call precision[1131865] style[3728019]))
          val call_tmp[3728247]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[3728254]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3732354]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732358 'move' coerce_tmp[3732354](3732356 'deref' call_tmp[3728239]))
          const-val coerce_tmp[3732360]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732366 'move' coerce_tmp[3732360](3732362 'cast' int(32)[66] -1))
          (3728256 'move' call_tmp[3728254](3728259 call !=[53199] coerce_tmp[3732354] coerce_tmp[3732360]))
          const-val call_tmp[3728262]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3728264 'move' call_tmp[3728262] call_tmp[3728254])
          if call_tmp[3728262]
          {
            (3728272 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
          }
          const-val call_tmp[3728275]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3732594]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732598 'move' coerce_tmp[3732594](3732596 'deref' arg[3727999]))
          val error[5518806]:Error[85511] "error variable" "temp"
          (5518808 'move' error[5518806] nil[32])
          const-val ret_tmp[5593693]:(int(64),bool)[3040018] "temp"
          (3728280 call _toSigned[3732370] coerce_tmp[3732594] error[5518806] ret_tmp[5593693])
          (5593696 'move' call_tmp[3728275] ret_tmp[5593693])
          val errorExists[7306776]:bool[19] "temp"
          (7306781 'move' errorExists[7306776](7306778 '!=' error[5518806] nil[32]))
          if errorExists[7306776]
          {
            (5518812 '=' error_out[5518786] error[5518806])
            gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
          }
          const-val tmp[3728282]:(int(64),bool)[3040018] "dead at end of block" "insert auto destroy" "temp"
          (3728284 'move' tmp[3728282] call_tmp[3728275])
          1
          const-ref call_tmp[3728292]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
          (3728294 'move' call_tmp[3728292](3732622 '.' tmp[3728282] x0[3040014]))
          const-val t[3728299]:int(64)[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3732628]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732632 'move' coerce_tmp[3732628](3732630 'deref' call_tmp[3728292]))
          (3728301 'move' t[3728299](3732625 call chpl__initCopy[1473915] coerce_tmp[3732628] 0))
          const-ref call_tmp[3728304]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
          (3728306 'move' call_tmp[3728304](3732637 '.' tmp[3728282] x1[3040016]))
          const-val ok[3728311]:bool[19] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[3732643]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732647 'move' coerce_tmp[3732643](3732645 'deref' call_tmp[3728304]))
          (3728313 'move' ok[3728311](3732640 call chpl__initCopy[1757859] coerce_tmp[3732643] 0))
          const-val call_tmp[3728317]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3728319 'move' call_tmp[3728317](3728322 call ![63126] ok[3728311]))
          const-val call_tmp[3728324]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3728326 'move' call_tmp[3728324] call_tmp[3728317])
          if call_tmp[3728324]
          {
            const-val call_tmp[3728333]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728335 'move' call_tmp[3728333](3728338 call qio_format_error_arg_mismatch[168158] i[3728001]))
            (3728341 call =[13310] err[3728021] call_tmp[3728333])
          }
          {
            const-ref call_tmp[3728345]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
            (3728347 'move' call_tmp[3728345](3728350 call this[3037790] argType[3728011] i[3728001]))
            const-val call_tmp[3728352]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3732662]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3732666 'move' coerce_tmp[3732662](3732664 'deref' call_tmp[3728345]))
            (3728354 'move' call_tmp[3728352](3728357 call ==[52725] coerce_tmp[3732662] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
            const-val call_tmp[3728360]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728362 'move' call_tmp[3728360] call_tmp[3728352])
            if call_tmp[3728360]
            {
              const-ref call_tmp[3728369]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
              (3728371 'move' call_tmp[3728369](3728374 call max_width_bytes[1131317] style[3728019]))
              const-val call_tmp[3728377]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3732670]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3732674 'move' coerce_tmp[3732670](3732672 'deref' call_tmp[3728369]))
              (3728379 'move' call_tmp[3728377](3728385 call _write_signed[3042764] this[3727995] coerce_tmp[3732670] t[3728299] i[3728001]))
              (3728390 call =[13310] err[3728021] call_tmp[3728377])
            }
            {
              {
                val error[5518820]:Error[85511] "error variable" "temp"
                (5518829 'move' error[5518820] nil[32])
                (3728401 call _writeOne[3043358] this[3727995] t[3728299] origLocale[3728023] error[5518820])
                val errorExists[7306784]:bool[19] "temp"
                (7306789 'move' errorExists[7306784](7306786 '!=' error[5518820] nil[32]))
                if errorExists[7306784]
                {
                  gotoErrorHandling handler[5518821] handler[5518821]
                }
                label handler[5518821]
                const-val shouldHandleError[5518840]:bool[19] "temp"
                val errorExists[7306792]:bool[19] "temp"
                (7306797 'move' errorExists[7306792](7306794 '!=' error[5518820] nil[32]))
                (5518844 'move' shouldHandleError[5518840] errorExists[7306792])
                if shouldHandleError[5518840]
                {
                  (5518836 '=' error_out[5518786] error[5518820])
                  (5640700 call chpl__autoDestroy[4184737] tmp[3728282])
                  gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                }
              }
            }
          }
          (5640704 call chpl__autoDestroy[4184737] tmp[3728282])
        }
        {
          const-val tmp[3728411]:bool[19] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3732685]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732689 'move' coerce_tmp[3732685](3732687 'deref' tmp[3728157]))
          (3728413 'move' tmp[3728411](3728416 call ==[52725] coerce_tmp[3732685] QIO_CONV_ARG_TYPE_UNSIGNED[167978]))
          val call_tmp[3728419]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3728432]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[3728434]:bool[19] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[3728436]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3728438 'move' call_tmp[3728436] tmp[3728411])
          (3728443 'move' tmp[3728434] call_tmp[3728436])
          if tmp[3728434]
          {
            (3728450 'move' tmp[3728432] 1)
          }
          {
            const-val tmp[3728456]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[3728458]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3732695]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3732699 'move' coerce_tmp[3732695](3732697 'deref' tmp[3728157]))
            (3728460 'move' call_tmp[3728458](3728463 call ==[52725] coerce_tmp[3732695] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
            (3728466 'move' tmp[3728456] call_tmp[3728458])
            (3728471 'move' tmp[3728432] tmp[3728456])
          }
          const-val call_tmp[3728477]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3728479 'move' call_tmp[3728477] tmp[3728432])
          if call_tmp[3728477]
          {
            const-ref call_tmp[3728486]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
            (3728488 'move' call_tmp[3728486](3728491 call precision[1131865] style[3728019]))
            val call_tmp[3728494]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            const-val call_tmp[3728501]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3732705]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3732709 'move' coerce_tmp[3732705](3732707 'deref' call_tmp[3728486]))
            const-val coerce_tmp[3732711]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3732717 'move' coerce_tmp[3732711](3732713 'cast' int(32)[66] -1))
            (3728503 'move' call_tmp[3728501](3728506 call !=[53199] coerce_tmp[3732705] coerce_tmp[3732711]))
            const-val call_tmp[3728509]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728511 'move' call_tmp[3728509] call_tmp[3728501])
            if call_tmp[3728509]
            {
              (3728519 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
            }
            const-val call_tmp[3728522]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3732953]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3732957 'move' coerce_tmp[3732953](3732955 'deref' arg[3727999]))
            val error[5518849]:Error[85511] "error variable" "temp"
            (5518851 'move' error[5518849] nil[32])
            const-val ret_tmp[5593705]:(uint(64),bool)[3051128] "temp"
            (3728527 call _toUnsigned[3732721] coerce_tmp[3732953] error[5518849] ret_tmp[5593705])
            (5593708 'move' call_tmp[3728522] ret_tmp[5593705])
            val errorExists[7306800]:bool[19] "temp"
            (7306805 'move' errorExists[7306800](7306802 '!=' error[5518849] nil[32]))
            if errorExists[7306800]
            {
              (5518855 '=' error_out[5518786] error[5518849])
              gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
            }
            const-val tmp[3728529]:(uint(64),bool)[3051128] "dead at end of block" "insert auto destroy" "temp"
            (3728531 'move' tmp[3728529] call_tmp[3728522])
            1
            const-ref call_tmp[3728539]:_ref(uint(64))[1465718] "dead after last mention" "maybe param" "temp"
            (3728541 'move' call_tmp[3728539](3733011 '.' tmp[3728529] x0[3051124]))
            const-val t[3728546]:uint(64)[86] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3733017]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3733021 'move' coerce_tmp[3733017](3733019 'deref' call_tmp[3728539]))
            (3728548 'move' t[3728546](3733014 call chpl__initCopy[1820361] coerce_tmp[3733017] 0))
            const-ref call_tmp[3728551]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
            (3728553 'move' call_tmp[3728551](3733026 '.' tmp[3728529] x1[3051126]))
            const-val ok[3728558]:bool[19] "dead at end of block" "insert auto destroy"
            const-val coerce_tmp[3733032]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3733036 'move' coerce_tmp[3733032](3733034 'deref' call_tmp[3728551]))
            (3728560 'move' ok[3728558](3733029 call chpl__initCopy[1757859] coerce_tmp[3733032] 0))
            const-val call_tmp[3728564]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728566 'move' call_tmp[3728564](3728569 call ![63126] ok[3728558]))
            const-val call_tmp[3728571]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728573 'move' call_tmp[3728571] call_tmp[3728564])
            if call_tmp[3728571]
            {
              const-val call_tmp[3728580]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3728582 'move' call_tmp[3728580](3728585 call qio_format_error_arg_mismatch[168158] i[3728001]))
              (3728588 call =[13310] err[3728021] call_tmp[3728580])
            }
            {
              const-ref call_tmp[3728592]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
              (3728594 'move' call_tmp[3728592](3728597 call this[3037790] argType[3728011] i[3728001]))
              const-val call_tmp[3728599]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3733051]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3733055 'move' coerce_tmp[3733051](3733053 'deref' call_tmp[3728592]))
              (3728601 'move' call_tmp[3728599](3728604 call ==[52725] coerce_tmp[3733051] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
              const-val call_tmp[3728607]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3728609 'move' call_tmp[3728607] call_tmp[3728599])
              if call_tmp[3728607]
              {
                const-ref call_tmp[3728616]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                (3728618 'move' call_tmp[3728616](3728621 call max_width_bytes[1131317] style[3728019]))
                const-val call_tmp[3728624]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3733059]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3733063 'move' coerce_tmp[3733059](3733061 'deref' call_tmp[3728616]))
                (3728626 'move' call_tmp[3728624](3728632 call _write_unsigned[3051637] this[3727995] coerce_tmp[3733059] t[3728546] i[3728001]))
                (3728637 call =[13310] err[3728021] call_tmp[3728624])
              }
              {
                {
                  val error[5518863]:Error[85511] "error variable" "temp"
                  (5518872 'move' error[5518863] nil[32])
                  (3728648 call _writeOne[3052255] this[3727995] t[3728546] origLocale[3728023] error[5518863])
                  val errorExists[7306808]:bool[19] "temp"
                  (7306813 'move' errorExists[7306808](7306810 '!=' error[5518863] nil[32]))
                  if errorExists[7306808]
                  {
                    gotoErrorHandling handler[5518864] handler[5518864]
                  }
                  label handler[5518864]
                  const-val shouldHandleError[5518883]:bool[19] "temp"
                  val errorExists[7306816]:bool[19] "temp"
                  (7306821 'move' errorExists[7306816](7306818 '!=' error[5518863] nil[32]))
                  (5518887 'move' shouldHandleError[5518883] errorExists[7306816])
                  if shouldHandleError[5518883]
                  {
                    (5518879 '=' error_out[5518786] error[5518863])
                    (5640707 call chpl__autoDestroy[4185009] tmp[3728529])
                    gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                  }
                }
              }
            }
            (5640711 call chpl__autoDestroy[4185009] tmp[3728529])
          }
          {
            const-val tmp[3728658]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3733074]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3733078 'move' coerce_tmp[3733074](3733076 'deref' tmp[3728157]))
            (3728660 'move' tmp[3728658](3728663 call ==[52725] coerce_tmp[3733074] QIO_CONV_ARG_TYPE_REAL[167988]))
            val call_tmp[3728666]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
            val tmp[3728679]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[3728681]:bool[19] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[3728683]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728685 'move' call_tmp[3728683] tmp[3728658])
            (3728690 'move' tmp[3728681] call_tmp[3728683])
            if tmp[3728681]
            {
              (3728697 'move' tmp[3728679] 1)
            }
            {
              const-val tmp[3728703]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[3728705]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3733084]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3733088 'move' coerce_tmp[3733084](3733086 'deref' tmp[3728157]))
              (3728707 'move' call_tmp[3728705](3728710 call ==[52725] coerce_tmp[3733084] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
              (3728713 'move' tmp[3728703] call_tmp[3728705])
              (3728718 'move' tmp[3728679] tmp[3728703])
            }
            const-val call_tmp[3728724]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728726 'move' call_tmp[3728724] tmp[3728679])
            if call_tmp[3728724]
            {
              const-val call_tmp[3728733]:(real(32),bool)[3733313] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3733264]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3733268 'move' coerce_tmp[3733264](3733266 'deref' arg[3727999]))
              const-val ret_tmp[5593717]:(real(32),bool)[3733313] "temp"
              (3728738 call _toReal[3733091] coerce_tmp[3733264] ret_tmp[5593717])
              (5593720 'move' call_tmp[3728733] ret_tmp[5593717])
              const-val tmp[3728740]:(real(32),bool)[3733313] "dead at end of block" "insert auto destroy" "temp"
              (3728742 'move' tmp[3728740] call_tmp[3728733])
              1
              const-ref call_tmp[3728750]:_ref(real(32))[1470469] "dead after last mention" "maybe param" "temp"
              (3728752 'move' call_tmp[3728750](3733699 '.' tmp[3728740] x0[3733309]))
              const-val t[3728757]:real(32)[91] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3733705]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3733709 'move' coerce_tmp[3733705](3733707 'deref' call_tmp[3728750]))
              (3728759 'move' t[3728757](3733702 call chpl__initCopy[2240808] coerce_tmp[3733705] 0))
              const-ref call_tmp[3728762]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
              (3728764 'move' call_tmp[3728762](3733714 '.' tmp[3728740] x1[3733311]))
              const-val ok[3728769]:bool[19] "dead at end of block" "insert auto destroy"
              const-val coerce_tmp[3733720]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3733724 'move' coerce_tmp[3733720](3733722 'deref' call_tmp[3728762]))
              (3728771 'move' ok[3728769](3733717 call chpl__initCopy[1757859] coerce_tmp[3733720] 0))
              const-val call_tmp[3728775]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3728777 'move' call_tmp[3728775](3728780 call ![63126] ok[3728769]))
              const-val call_tmp[3728782]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3728784 'move' call_tmp[3728782] call_tmp[3728775])
              if call_tmp[3728782]
              {
                const-val call_tmp[3728791]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3728793 'move' call_tmp[3728791](3728796 call qio_format_error_arg_mismatch[168158] i[3728001]))
                (3728799 call =[13310] err[3728021] call_tmp[3728791])
              }
              {
                const-ref call_tmp[3728803]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                (3728805 'move' call_tmp[3728803](3728808 call this[3037790] argType[3728011] i[3728001]))
                const-val call_tmp[3728810]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3733739]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3733743 'move' coerce_tmp[3733739](3733741 'deref' call_tmp[3728803]))
                (3728812 'move' call_tmp[3728810](3728815 call ==[52725] coerce_tmp[3733739] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
                const-val call_tmp[3728818]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3728820 'move' call_tmp[3728818] call_tmp[3728810])
                if call_tmp[3728818]
                {
                  const-ref call_tmp[3728827]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                  (3728829 'move' call_tmp[3728827](3728832 call max_width_bytes[1131317] style[3728019]))
                  const-val call_tmp[3728835]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3733747]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3733751 'move' coerce_tmp[3733747](3733749 'deref' call_tmp[3728827]))
                  const-val coerce_tmp[3733753]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3733759 'move' coerce_tmp[3733753](3733755 'cast' real(64)[13] t[3728757]))
                  (3728837 'move' call_tmp[3728835](3728843 call _write_real[3060196] this[3727995] coerce_tmp[3733747] coerce_tmp[3733753] i[3728001]))
                  (3728848 call =[13310] err[3728021] call_tmp[3728835])
                }
                {
                  {
                    val error[5518891]:Error[85511] "error variable" "temp"
                    (5518900 'move' error[5518891] nil[32])
                    (3728859 call _writeOne[3733769] this[3727995] t[3728757] origLocale[3728023] error[5518891])
                    val errorExists[7306824]:bool[19] "temp"
                    (7306829 'move' errorExists[7306824](7306826 '!=' error[5518891] nil[32]))
                    if errorExists[7306824]
                    {
                      gotoErrorHandling handler[5518892] handler[5518892]
                    }
                    label handler[5518892]
                    const-val shouldHandleError[5518911]:bool[19] "temp"
                    val errorExists[7306832]:bool[19] "temp"
                    (7306837 'move' errorExists[7306832](7306834 '!=' error[5518891] nil[32]))
                    (5518915 'move' shouldHandleError[5518911] errorExists[7306832])
                    if shouldHandleError[5518911]
                    {
                      (5518907 '=' error_out[5518786] error[5518891])
                      (5640714 call chpl__autoDestroy[4267723] tmp[3728740])
                      gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                    }
                  }
                }
              }
              (5640718 call chpl__autoDestroy[4267723] tmp[3728740])
            }
            {
              const-val tmp[3728869]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3740672]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3740676 'move' coerce_tmp[3740672](3740674 'deref' tmp[3728157]))
              (3728871 'move' tmp[3728869](3728874 call ==[52725] coerce_tmp[3740672] QIO_CONV_ARG_TYPE_IMAG[167998]))
              val call_tmp[3728877]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val tmp[3728890]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[3728892]:bool[19] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[3728894]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3728896 'move' call_tmp[3728894] tmp[3728869])
              (3728901 'move' tmp[3728892] call_tmp[3728894])
              if tmp[3728892]
              {
                (3728908 'move' tmp[3728890] 1)
              }
              {
                const-val tmp[3728914]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[3728916]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3740682]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3740686 'move' coerce_tmp[3740682](3740684 'deref' tmp[3728157]))
                (3728918 'move' call_tmp[3728916](3728921 call ==[52725] coerce_tmp[3740682] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                (3728924 'move' tmp[3728914] call_tmp[3728916])
                (3728929 'move' tmp[3728890] tmp[3728914])
              }
              const-val call_tmp[3728935]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3728937 'move' call_tmp[3728935] tmp[3728890])
              if call_tmp[3728935]
              {
                const-val call_tmp[3728944]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[3741042]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741046 'move' coerce_tmp[3741042](3741044 'deref' arg[3727999]))
                val error[5518920]:Error[85511] "error variable" "temp"
                (5518922 'move' error[5518920] nil[32])
                const-val ret_tmp[5593774]:(imag(64),bool)[3067847] "temp"
                (3728949 call _toImag[3740818] coerce_tmp[3741042] error[5518920] ret_tmp[5593774])
                (5593777 'move' call_tmp[3728944] ret_tmp[5593774])
                val errorExists[7306840]:bool[19] "temp"
                (7306845 'move' errorExists[7306840](7306842 '!=' error[5518920] nil[32]))
                if errorExists[7306840]
                {
                  (5518926 '=' error_out[5518786] error[5518920])
                  gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                }
                const-val tmp[3728951]:(imag(64),bool)[3067847] "dead at end of block" "insert auto destroy" "temp"
                (3728953 'move' tmp[3728951] call_tmp[3728944])
                1
                const-ref call_tmp[3728961]:_ref(imag(64))[1466226] "dead after last mention" "maybe param" "temp"
                (3728963 'move' call_tmp[3728961](3741100 '.' tmp[3728951] x0[3067843]))
                const-val t[3728968]:imag(64)[101] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3741106]:imag(64)[101] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741110 'move' coerce_tmp[3741106](3741108 'deref' call_tmp[3728961]))
                (3728970 'move' t[3728968](3741103 call chpl__initCopy[3068019] coerce_tmp[3741106] 0))
                const-ref call_tmp[3728973]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                (3728975 'move' call_tmp[3728973](3741115 '.' tmp[3728951] x1[3067845]))
                const-val ok[3728980]:bool[19] "dead at end of block" "insert auto destroy"
                const-val coerce_tmp[3741121]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741125 'move' coerce_tmp[3741121](3741123 'deref' call_tmp[3728973]))
                (3728982 'move' ok[3728980](3741118 call chpl__initCopy[1757859] coerce_tmp[3741121] 0))
                const-val call_tmp[3728986]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3728988 'move' call_tmp[3728986](3728991 call ![63126] ok[3728980]))
                const-val call_tmp[3728993]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3728995 'move' call_tmp[3728993] call_tmp[3728986])
                if call_tmp[3728993]
                {
                  const-val call_tmp[3729002]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3729004 'move' call_tmp[3729002](3729007 call qio_format_error_arg_mismatch[168158] i[3728001]))
                  (3729010 call =[13310] err[3728021] call_tmp[3729002])
                }
                {
                  const-ref call_tmp[3729014]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                  (3729016 'move' call_tmp[3729014](3729019 call this[3037790] argType[3728011] i[3728001]))
                  const-val call_tmp[3729021]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3741140]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741144 'move' coerce_tmp[3741140](3741142 'deref' call_tmp[3729014]))
                  (3729023 'move' call_tmp[3729021](3729026 call ==[52725] coerce_tmp[3741140] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                  const-val call_tmp[3729029]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3729031 'move' call_tmp[3729029] call_tmp[3729021])
                  if call_tmp[3729029]
                  {
                    const-ref call_tmp[3729038]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                    (3729040 'move' call_tmp[3729038](3729043 call max_width_bytes[1131317] style[3728019]))
                    const-val call_tmp[3729046]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3729048 'move' call_tmp[3729046](3729051 call :[3068404] t[3728968]))
                    const-val call_tmp[3729054]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3741149]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3741153 'move' coerce_tmp[3741149](3741151 'deref' call_tmp[3729038]))
                    (3729056 'move' call_tmp[3729054](3729062 call _write_real[3060196] this[3727995] coerce_tmp[3741149] call_tmp[3729046] i[3728001]))
                    (3729067 call =[13310] err[3728021] call_tmp[3729054])
                  }
                  {
                    {
                      val error[5518934]:Error[85511] "error variable" "temp"
                      (5518943 'move' error[5518934] nil[32])
                      (3729078 call _writeOne[3068449] this[3727995] t[3728968] origLocale[3728023] error[5518934])
                      val errorExists[7306848]:bool[19] "temp"
                      (7306853 'move' errorExists[7306848](7306850 '!=' error[5518934] nil[32]))
                      if errorExists[7306848]
                      {
                        gotoErrorHandling handler[5518935] handler[5518935]
                      }
                      label handler[5518935]
                      const-val shouldHandleError[5518954]:bool[19] "temp"
                      val errorExists[7306856]:bool[19] "temp"
                      (7306861 'move' errorExists[7306856](7306858 '!=' error[5518934] nil[32]))
                      (5518958 'move' shouldHandleError[5518954] errorExists[7306856])
                      if shouldHandleError[5518954]
                      {
                        (5518950 '=' error_out[5518786] error[5518934])
                        (5640721 call chpl__autoDestroy[4185281] tmp[3728951])
                        gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                      }
                    }
                  }
                }
                (5640725 call chpl__autoDestroy[4185281] tmp[3728951])
              }
              {
                const-val tmp[3729088]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[3741164]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741168 'move' coerce_tmp[3741164](3741166 'deref' tmp[3728157]))
                (3729090 'move' tmp[3729088](3729093 call ==[52725] coerce_tmp[3741164] QIO_CONV_ARG_TYPE_COMPLEX[168008]))
                val call_tmp[3729096]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                val tmp[3729109]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[3729111]:bool[19] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[3729113]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3729115 'move' call_tmp[3729113] tmp[3729088])
                (3729120 'move' tmp[3729111] call_tmp[3729113])
                if tmp[3729111]
                {
                  (3729127 'move' tmp[3729109] 1)
                }
                {
                  const-val tmp[3729133]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[3729135]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3741174]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741178 'move' coerce_tmp[3741174](3741176 'deref' tmp[3728157]))
                  (3729137 'move' call_tmp[3729135](3729140 call ==[52725] coerce_tmp[3741174] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                  (3729143 'move' tmp[3729133] call_tmp[3729135])
                  (3729148 'move' tmp[3729109] tmp[3729133])
                }
                const-val call_tmp[3729154]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3729156 'move' call_tmp[3729154] tmp[3729109])
                if call_tmp[3729154]
                {
                  const-val call_tmp[3729163]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
                  const-val coerce_tmp[3741542]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741546 'move' coerce_tmp[3741542](3741544 'deref' arg[3727999]))
                  val error[5518963]:Error[85511] "error variable" "temp"
                  (5518965 'move' error[5518963] nil[32])
                  const-val ret_tmp[5593786]:(complex(128),bool)[3077587] "temp"
                  (3729168 call _toComplex[3741310] coerce_tmp[3741542] error[5518963] ret_tmp[5593786])
                  (5593789 'move' call_tmp[3729163] ret_tmp[5593786])
                  val errorExists[7306864]:bool[19] "temp"
                  (7306869 'move' errorExists[7306864](7306866 '!=' error[5518963] nil[32]))
                  if errorExists[7306864]
                  {
                    (5518969 '=' error_out[5518786] error[5518963])
                    gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                  }
                  const-val tmp[3729170]:(complex(128),bool)[3077587] "dead at end of block" "insert auto destroy" "temp"
                  (3729172 'move' tmp[3729170] call_tmp[3729163])
                  1
                  const-ref call_tmp[3729180]:_ref(complex(128))[1466240] "dead after last mention" "maybe param" "temp"
                  (3729182 'move' call_tmp[3729180](3741862 '.' tmp[3729170] x0[3077583]))
                  const-val t[3729187]:complex(128)[111] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3741868]:complex(128)[111] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741872 'move' coerce_tmp[3741868](3741870 'deref' call_tmp[3729180]))
                  (3729189 'move' t[3729187](3741865 call chpl__initCopy[3078021] coerce_tmp[3741868] 0))
                  const-ref call_tmp[3729192]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                  (3729194 'move' call_tmp[3729192](3741877 '.' tmp[3729170] x1[3077585]))
                  const-val ok[3729199]:bool[19] "dead at end of block" "insert auto destroy"
                  const-val coerce_tmp[3741883]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741887 'move' coerce_tmp[3741883](3741885 'deref' call_tmp[3729192]))
                  (3729201 'move' ok[3729199](3741880 call chpl__initCopy[1757859] coerce_tmp[3741883] 0))
                  const-val call_tmp[3729205]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3729207 'move' call_tmp[3729205](3729210 call ![63126] ok[3729199]))
                  const-val call_tmp[3729212]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3729214 'move' call_tmp[3729212] call_tmp[3729205])
                  if call_tmp[3729212]
                  {
                    const-val call_tmp[3729221]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3729223 'move' call_tmp[3729221](3729226 call qio_format_error_arg_mismatch[168158] i[3728001]))
                    (3729229 call =[13310] err[3728021] call_tmp[3729221])
                  }
                  {
                    const-ref call_tmp[3729233]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                    (3729235 'move' call_tmp[3729233](3729238 call this[3037790] argType[3728011] i[3728001]))
                    const-val call_tmp[3729240]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3741902]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3741906 'move' coerce_tmp[3741902](3741904 'deref' call_tmp[3729233]))
                    (3729242 'move' call_tmp[3729240](3729245 call ==[52725] coerce_tmp[3741902] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                    const-val call_tmp[3729248]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3729250 'move' call_tmp[3729248] call_tmp[3729240])
                    if call_tmp[3729248]
                    {
                      const-ref call_tmp[3729257]:_ref(uint(32))[1466153] "dead after last mention" "maybe param" "temp"
                      (3729259 'move' call_tmp[3729257](3729262 call max_width_bytes[1131317] style[3728019]))
                      const-val call_tmp[3729265]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[3741910]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3741914 'move' coerce_tmp[3741910](3741912 'deref' call_tmp[3729257]))
                      (3729267 'move' call_tmp[3729265](3729273 call _write_complex[3078407] this[3727995] coerce_tmp[3741910] t[3729187] i[3728001]))
                      (3729278 call =[13310] err[3728021] call_tmp[3729265])
                    }
                    {
                      {
                        val error[5518977]:Error[85511] "error variable" "temp"
                        (5518986 'move' error[5518977] nil[32])
                        (3729289 call _writeOne[3079967] this[3727995] t[3729187] origLocale[3728023] error[5518977])
                        val errorExists[7306872]:bool[19] "temp"
                        (7306877 'move' errorExists[7306872](7306874 '!=' error[5518977] nil[32]))
                        if errorExists[7306872]
                        {
                          gotoErrorHandling handler[5518978] handler[5518978]
                        }
                        label handler[5518978]
                        const-val shouldHandleError[5518997]:bool[19] "temp"
                        val errorExists[7306880]:bool[19] "temp"
                        (7306885 'move' errorExists[7306880](7306882 '!=' error[5518977] nil[32]))
                        (5519001 'move' shouldHandleError[5518997] errorExists[7306880])
                        if shouldHandleError[5518997]
                        {
                          (5518993 '=' error_out[5518786] error[5518977])
                          (5640728 call chpl__autoDestroy[4185417] tmp[3729170])
                          gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                        }
                      }
                    }
                  }
                  (5640732 call chpl__autoDestroy[4185417] tmp[3729170])
                }
                {
                  const-val call_tmp[3729299]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3741925]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741929 'move' coerce_tmp[3741925](3741927 'deref' tmp[3728157]))
                  (3729301 'move' call_tmp[3729299](3729304 call ==[52725] coerce_tmp[3741925] QIO_CONV_ARG_TYPE_NUMERIC[167963]))
                  const-val call_tmp[3729307]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3729309 'move' call_tmp[3729307] call_tmp[3729299])
                  if call_tmp[3729307]
                  {
                    const-val call_tmp[3729316]:(real(32),bool)[3733313] "dead after last mention" "maybe param" "temp"
                    const-val coerce_tmp[3742105]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3742109 'move' coerce_tmp[3742105](3742107 'deref' arg[3727999]))
                    const-val ret_tmp[5593810]:(real(32),bool)[3733313] "temp"
                    (3729321 call _toNumeric[3741932] coerce_tmp[3742105] ret_tmp[5593810])
                    (5593813 'move' call_tmp[3729316] ret_tmp[5593810])
                    const-val tmp[3729323]:(real(32),bool)[3733313] "dead at end of block" "insert auto destroy" "temp"
                    (3729325 'move' tmp[3729323] call_tmp[3729316])
                    1
                    const-ref call_tmp[3729333]:_ref(real(32))[1470469] "dead after last mention" "maybe param" "temp"
                    (3729335 'move' call_tmp[3729333](3742121 '.' tmp[3729323] x0[3733309]))
                    const-val t[3729340]:real(32)[91] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3742127]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3742131 'move' coerce_tmp[3742127](3742129 'deref' call_tmp[3729333]))
                    (3729342 'move' t[3729340](3742124 call chpl__initCopy[2240808] coerce_tmp[3742127] 0))
                    const-ref call_tmp[3729345]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                    (3729347 'move' call_tmp[3729345](3742136 '.' tmp[3729323] x1[3733311]))
                    const-val ok[3729352]:bool[19] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[3742142]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3742146 'move' coerce_tmp[3742142](3742144 'deref' call_tmp[3729345]))
                    (3729354 'move' ok[3729352](3742139 call chpl__initCopy[1757859] coerce_tmp[3742142] 0))
                    const-val call_tmp[3729358]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3729360 'move' call_tmp[3729358](3729363 call ![63126] ok[3729352]))
                    const-val call_tmp[3729365]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3729367 'move' call_tmp[3729365] call_tmp[3729358])
                    if call_tmp[3729365]
                    {
                      const-val call_tmp[3729374]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3729376 'move' call_tmp[3729374](3729379 call qio_format_error_arg_mismatch[168158] i[3728001]))
                      (3729382 call =[13310] err[3728021] call_tmp[3729374])
                    }
                    {
                      {
                        val error[5519005]:Error[85511] "error variable" "temp"
                        (5519014 'move' error[5519005] nil[32])
                        (3729391 call _writeOne[3733769] this[3727995] t[3729340] origLocale[3728023] error[5519005])
                        val errorExists[7306888]:bool[19] "temp"
                        (7306893 'move' errorExists[7306888](7306890 '!=' error[5519005] nil[32]))
                        if errorExists[7306888]
                        {
                          gotoErrorHandling handler[5519006] handler[5519006]
                        }
                        label handler[5519006]
                        const-val shouldHandleError[5519025]:bool[19] "temp"
                        val errorExists[7306896]:bool[19] "temp"
                        (7306901 'move' errorExists[7306896](7306898 '!=' error[5519005] nil[32]))
                        (5519029 'move' shouldHandleError[5519025] errorExists[7306896])
                        if shouldHandleError[5519025]
                        {
                          (5519021 '=' error_out[5518786] error[5519005])
                          (5640735 call chpl__autoDestroy[4267723] tmp[3729323])
                          gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                        }
                      }
                    }
                    (5640739 call chpl__autoDestroy[4267723] tmp[3729323])
                  }
                  {
                    const-val call_tmp[3729400]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3742159]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3742163 'move' coerce_tmp[3742159](3742161 'deref' tmp[3728157]))
                    (3729402 'move' call_tmp[3729400](3729405 call ==[52725] coerce_tmp[3742159] QIO_CONV_ARG_TYPE_CHAR[168018]))
                    const-val call_tmp[3729408]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3729410 'move' call_tmp[3729408] call_tmp[3729400])
                    if call_tmp[3729408]
                    {
                      const-val call_tmp[3729417]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                      const-val coerce_tmp[3742166]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3742170 'move' coerce_tmp[3742166](3742168 'deref' arg[3727999]))
                      const-val ret_tmp[5593657]:(int(32),bool)[3040996] "temp"
                      (3729422 call _toChar[3731901] coerce_tmp[3742166] ret_tmp[5593657])
                      (5593660 'move' call_tmp[3729417] ret_tmp[5593657])
                      const-val tmp[3729424]:(int(32),bool)[3040996] "dead at end of block" "insert auto destroy" "temp"
                      (3729426 'move' tmp[3729424] call_tmp[3729417])
                      1
                      const-ref call_tmp[3729434]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (3729436 'move' call_tmp[3729434](3742181 '.' tmp[3729424] x0[3040992]))
                      const-val t[3729441]:int(32)[66] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3742187]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3742191 'move' coerce_tmp[3742187](3742189 'deref' call_tmp[3729434]))
                      (3729443 'move' t[3729441](3742184 call chpl__initCopy[1513822] coerce_tmp[3742187] 0))
                      const-ref call_tmp[3729446]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                      (3729448 'move' call_tmp[3729446](3742196 '.' tmp[3729424] x1[3040994]))
                      const-val ok[3729453]:bool[19] "dead at end of block" "insert auto destroy"
                      const-val coerce_tmp[3742202]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3742206 'move' coerce_tmp[3742202](3742204 'deref' call_tmp[3729446]))
                      (3729455 'move' ok[3729453](3742199 call chpl__initCopy[1757859] coerce_tmp[3742202] 0))
                      const-val call_tmp[3729459]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3729461 'move' call_tmp[3729459](3729464 call ![63126] ok[3729453]))
                      const-val call_tmp[3729466]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3729468 'move' call_tmp[3729466] call_tmp[3729459])
                      if call_tmp[3729466]
                      {
                        const-val call_tmp[3729475]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3729477 'move' call_tmp[3729475](3729480 call qio_format_error_arg_mismatch[168158] i[3728001]))
                        (3729483 call =[13310] err[3728021] call_tmp[3729475])
                      }
                      {
                        {
                          val error[5519033]:Error[85511] "error variable" "temp"
                          (5519042 'move' error[5519033] nil[32])
                          const-val call_tmp[3729488]:_internalIoChar[176999] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                          const-val initTemp[3742219]:_internalIoChar[176999] "dead after last mention" "temp"
                          (3742222 call init[1213162] initTemp[3742219] t[3729441])
                          (3729490 'move' call_tmp[3729488] initTemp[3742219])
                          (3729499 call _writeOne[3089040] this[3727995] call_tmp[3729488] origLocale[3728023] error[5519033])
                          val errorExists[7306904]:bool[19] "temp"
                          (7306909 'move' errorExists[7306904](7306906 '!=' error[5519033] nil[32]))
                          if errorExists[7306904]
                          {
                            (5640742 call chpl__autoDestroy[3890713] call_tmp[3729488])
                            gotoErrorHandling handler[5519034] handler[5519034]
                          }
                          (5640745 call chpl__autoDestroy[3890713] call_tmp[3729488])
                          label handler[5519034]
                          const-val shouldHandleError[5519053]:bool[19] "temp"
                          val errorExists[7306912]:bool[19] "temp"
                          (7306917 'move' errorExists[7306912](7306914 '!=' error[5519033] nil[32]))
                          (5519057 'move' shouldHandleError[5519053] errorExists[7306912])
                          if shouldHandleError[5519053]
                          {
                            (5519049 '=' error_out[5518786] error[5519033])
                            (5640748 call chpl__autoDestroy[4184873] tmp[3729424])
                            gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                          }
                        }
                      }
                      (5640752 call chpl__autoDestroy[4184873] tmp[3729424])
                    }
                    {
                      const-val call_tmp[3729508]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[3742237]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3742241 'move' coerce_tmp[3742237](3742239 'deref' tmp[3728157]))
                      (3729510 'move' call_tmp[3729508](3729513 call ==[52725] coerce_tmp[3742237] QIO_CONV_ARG_TYPE_BINARY_STRING[168028]))
                      const-val call_tmp[3729516]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3729518 'move' call_tmp[3729516] call_tmp[3729508])
                      if call_tmp[3729516]
                      {
                        const-val call_tmp[3729525]:(bytes,bool)[3092705] "dead after last mention" "maybe param" "temp"
                        const-val coerce_tmp[3742278]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3742282 'move' coerce_tmp[3742278](3742280 'deref' arg[3727999]))
                        const-val ret_tmp[5593822]:(bytes,bool)[3092705] "temp"
                        (3729530 call _toBytes[3742244] coerce_tmp[3742278] ret_tmp[5593822])
                        (5593825 'move' call_tmp[3729525] ret_tmp[5593822])
                        const-val tmp[3729532]:(bytes,bool)[3092705] "dead at end of block" "insert auto destroy" "temp"
                        (3729534 'move' tmp[3729532] call_tmp[3729525])
                        1
                        const-ref call_tmp[3729542]:_ref(bytes)[1466360] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                        (3729544 'move' call_tmp[3729542](3742303 '.' tmp[3729532] x0[3092701]))
                        const-val t[3729549]:bytes[232] "dead at end of block" "insert auto destroy"
                        (3729551 call init=[33890] t[3729549] call_tmp[3729542])
                        const-ref call_tmp[3729554]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                        (3729556 'move' call_tmp[3729554](3742311 '.' tmp[3729532] x1[3092703]))
                        const-val ok[3729561]:bool[19] "dead at end of block" "insert auto destroy"
                        const-val coerce_tmp[3742317]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3742321 'move' coerce_tmp[3742317](3742319 'deref' call_tmp[3729554]))
                        (3729563 'move' ok[3729561](3742314 call chpl__initCopy[1757859] coerce_tmp[3742317] 0))
                        const-val call_tmp[3729567]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3729569 'move' call_tmp[3729567](3729572 call ![63126] ok[3729561]))
                        const-val call_tmp[3729574]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3729576 'move' call_tmp[3729574] call_tmp[3729567])
                        if call_tmp[3729574]
                        {
                          const-val call_tmp[3729583]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3729585 'move' call_tmp[3729583](3729588 call qio_format_error_arg_mismatch[168158] i[3728001]))
                          (3729591 call =[13310] err[3728021] call_tmp[3729583])
                        }
                        {
                          {
                            val error[5519061]:Error[85511] "error variable" "temp"
                            (5519070 'move' error[5519061] nil[32])
                            (3729600 call _writeOne[3093219] this[3727995] t[3729549] origLocale[3728023] error[5519061])
                            val errorExists[7306920]:bool[19] "temp"
                            (7306925 'move' errorExists[7306920](7306922 '!=' error[5519061] nil[32]))
                            if errorExists[7306920]
                            {
                              gotoErrorHandling handler[5519062] handler[5519062]
                            }
                            label handler[5519062]
                            const-val shouldHandleError[5519081]:bool[19] "temp"
                            val errorExists[7306928]:bool[19] "temp"
                            (7306933 'move' errorExists[7306928](7306930 '!=' error[5519061] nil[32]))
                            (5519085 'move' shouldHandleError[5519081] errorExists[7306928])
                            if shouldHandleError[5519081]
                            {
                              (5519077 '=' error_out[5518786] error[5519061])
                              (5640755 call chpl__autoDestroy[3885484] t[3729549])
                              (5640758 call chpl__autoDestroy[4185699] tmp[3729532])
                              gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                            }
                          }
                        }
                        (5640762 call chpl__autoDestroy[3885484] t[3729549])
                        (5640765 call chpl__autoDestroy[4185699] tmp[3729532])
                      }
                      {
                        const-val call_tmp[3729609]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[3742334]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3742338 'move' coerce_tmp[3742334](3742336 'deref' tmp[3728157]))
                        (3729611 'move' call_tmp[3729609](3729614 call ==[52725] coerce_tmp[3742334] QIO_CONV_ARG_TYPE_STRING[168023]))
                        const-val call_tmp[3729617]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3729619 'move' call_tmp[3729617] call_tmp[3729609])
                        if call_tmp[3729617]
                        {
                          const-val call_tmp[3729626]:(string,bool)[3103815] "dead after last mention" "maybe param" "temp"
                          const-val coerce_tmp[3742614]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3742618 'move' coerce_tmp[3742614](3742616 'deref' arg[3727999]))
                          const-val ret_tmp[5593834]:(string,bool)[3103815] "temp"
                          (3729631 call _toString[3742341] coerce_tmp[3742614] ret_tmp[5593834])
                          (5593837 'move' call_tmp[3729626] ret_tmp[5593834])
                          const-val tmp[3729633]:(string,bool)[3103815] "dead at end of block" "insert auto destroy" "temp"
                          (3729635 'move' tmp[3729633] call_tmp[3729626])
                          1
                          const-ref call_tmp[3729643]:_ref(string)[1466327] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                          (3729645 'move' call_tmp[3729643](3743158 '.' tmp[3729633] x0[3103811]))
                          const-val t[3729650]:string[244] "dead at end of block" "insert auto destroy"
                          (3729652 call init=[21330] t[3729650] call_tmp[3729643])
                          const-ref call_tmp[3729655]:_ref(bool)[1466299] "dead after last mention" "maybe param" "temp"
                          (3729657 'move' call_tmp[3729655](3743166 '.' tmp[3729633] x1[3103813]))
                          const-val ok[3729662]:bool[19] "dead at end of block" "insert auto destroy"
                          const-val coerce_tmp[3743172]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3743176 'move' coerce_tmp[3743172](3743174 'deref' call_tmp[3729655]))
                          (3729664 'move' ok[3729662](3743169 call chpl__initCopy[1757859] coerce_tmp[3743172] 0))
                          const-val call_tmp[3729668]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3729670 'move' call_tmp[3729668](3729673 call ![63126] ok[3729662]))
                          const-val call_tmp[3729675]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3729677 'move' call_tmp[3729675] call_tmp[3729668])
                          if call_tmp[3729675]
                          {
                            const-val call_tmp[3729684]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3729686 'move' call_tmp[3729684](3729689 call qio_format_error_arg_mismatch[168158] i[3728001]))
                            (3729692 call =[13310] err[3728021] call_tmp[3729684])
                          }
                          {
                            {
                              val error[5519089]:Error[85511] "error variable" "temp"
                              (5519098 'move' error[5519089] nil[32])
                              (3729701 call _writeOne[1845361] this[3727995] t[3729650] origLocale[3728023] error[5519089])
                              val errorExists[7306936]:bool[19] "temp"
                              (7306941 'move' errorExists[7306936](7306938 '!=' error[5519089] nil[32]))
                              if errorExists[7306936]
                              {
                                gotoErrorHandling handler[5519090] handler[5519090]
                              }
                              label handler[5519090]
                              const-val shouldHandleError[5519109]:bool[19] "temp"
                              val errorExists[7306944]:bool[19] "temp"
                              (7306949 'move' errorExists[7306944](7306946 '!=' error[5519089] nil[32]))
                              (5519113 'move' shouldHandleError[5519109] errorExists[7306944])
                              if shouldHandleError[5519109]
                              {
                                (5519105 '=' error_out[5518786] error[5519089])
                                (5640768 call chpl__autoDestroy[3262688] t[3729650])
                                (5640771 call chpl__autoDestroy[4185952] tmp[3729633])
                                gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                              }
                            }
                          }
                          (5640775 call chpl__autoDestroy[3262688] t[3729650])
                          (5640778 call chpl__autoDestroy[4185952] tmp[3729633])
                        }
                        {
                          const-val call_tmp[3729710]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[3743189]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3743193 'move' coerce_tmp[3743189](3743191 'deref' tmp[3728157]))
                          (3729712 'move' call_tmp[3729710](3729715 call ==[52725] coerce_tmp[3743189] QIO_CONV_ARG_TYPE_REGEX[168038]))
                          const-val call_tmp[3729718]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3729720 'move' call_tmp[3729718] call_tmp[3729710])
                          if call_tmp[3729718]
                          {
                            const-val call_tmp[3729727]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3729729 'move' call_tmp[3729727](3729732 call qio_format_error_write_regex[168174]))
                            (3729734 call =[13310] err[3728021] call_tmp[3729727])
                          }
                          {
                            const-val call_tmp[3729738]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3743204]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3743208 'move' coerce_tmp[3743204](3743206 'deref' tmp[3728157]))
                            (3729740 'move' call_tmp[3729738](3729743 call ==[52725] coerce_tmp[3743204] QIO_CONV_ARG_TYPE_SERDE[168033]))
                            const-val call_tmp[3729746]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3729748 'move' call_tmp[3729746] call_tmp[3729738])
                            if call_tmp[3729746]
                            {
                              val call_tmp[3729755]:defaultSerializer[171969] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              val call_tmp[3729763]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              val call_tmp[3729771]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                              {
                                val call_tmp[3729780]:defaultSerializer[171969] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                val call_tmp[3729788]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                                val call_tmp[3729796]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                                const-val coerce_tmp[3743611]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (3743615 'move' coerce_tmp[3743611](3743613 'deref' arg[3727999]))
                                val error[5519118]:Error[85511] "error variable" "temp"
                                (5519120 'move' error[5519118] nil[32])
                                (3729820 call _serializeOne[3743221] this[3727995] coerce_tmp[3743611] origLocale[3728023] error[5519118])
                                val errorExists[7306952]:bool[19] "temp"
                                (7306957 'move' errorExists[7306952](7306954 '!=' error[5519118] nil[32]))
                                if errorExists[7306952]
                                {
                                  (5519124 '=' error_out[5518786] error[5519118])
                                  gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                                }
                              }
                            }
                            {
                              const-val call_tmp[3729836]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5546581]:string[244] "temp"
                              (3729841 call :[1496816] i[3728001] ret_tmp[5546581])
                              (5546584 'move' call_tmp[3729836] ret_tmp[5546581])
                              const-val call_tmp[3729844]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540406]:string[244] "temp"
                              (3729849 call +[28065] "illegal argument 'args(" call_tmp[3729836] ret_tmp[5540406])
                              (5540409 'move' call_tmp[3729844] ret_tmp[5540406])
                              const-val call_tmp[3729852]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540412]:string[244] "temp"
                              (3729857 call +[28065] call_tmp[3729844] ")': writef internal error " ret_tmp[5540412])
                              (5540415 'move' call_tmp[3729852] ret_tmp[5540412])
                              const-ref call_tmp[3729860]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                              (3729862 'move' call_tmp[3729860](3729865 call this[3037790] argType[3728011] i[3728001]))
                              const-val call_tmp[3729867]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val coerce_tmp[3744295]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (3744299 'move' coerce_tmp[3744295](3744297 'deref' call_tmp[3729860]))
                              const-val ret_tmp[5555484]:string[244] "temp"
                              (3729872 call :[1816123] coerce_tmp[3744295] ret_tmp[5555484])
                              (5555487 'move' call_tmp[3729867] ret_tmp[5555484])
                              const-val call_tmp[3729875]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[5540418]:string[244] "temp"
                              (3729880 call +[28065] call_tmp[3729852] call_tmp[3729867] ret_tmp[5540418])
                              (5540421 'move' call_tmp[3729875] ret_tmp[5540418])
                              const-val call_tmp[3729883]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
                              { scopeless
                                val new_temp[3744326]:IllegalArgumentError[85616] "dead after last mention" "temp"
                                (3744328 'move' new_temp[3744326](3744313 call _new[1475209] call_tmp[3729875]))
                              }
                              const-val initTemp[3744335]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
                              (3744338 call init[1475364] initTemp[3744335] new_temp[3744326])
                              (3729885 'move' call_tmp[3729883] initTemp[3744335])
                              val call_tmp[3729892]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                              const-val coerce_tmp[3744352]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                              const-val ret_tmp[5547253]:owned Error[1498203] "temp"
                              (3744354 call :[1498308] call_tmp[3729883] ret_tmp[5547253])
                              (5547256 'move' coerce_tmp[3744352] ret_tmp[5547253])
                              const-val _formal_tmp_in_err[3744571]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                              (3744576 'move' _formal_tmp_in_err[3744571] coerce_tmp[3744352])
                              (3729894 'move' call_tmp[3729892](3729897 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3744571]))
                              {
                                val castedError[5519133]:Error[85511] "temp"
                                (5519139 'move' castedError[5519133] call_tmp[3729892])
                                (5519141 '=' error_out[5518786] castedError[5519133])
                                (5640781 call chpl__autoDestroy[3262688] call_tmp[3729875])
                                (5640784 call chpl__autoDestroy[3262688] call_tmp[3729867])
                                (5640787 call chpl__autoDestroy[3262688] call_tmp[3729852])
                                (5640790 call chpl__autoDestroy[3262688] call_tmp[3729844])
                                (5640793 call chpl__autoDestroy[3262688] call_tmp[3729836])
                                gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                              }
                              (5640797 call chpl__autoDestroy[3262688] call_tmp[3729875])
                              (5640800 call chpl__autoDestroy[3262688] call_tmp[3729867])
                              (5640803 call chpl__autoDestroy[3262688] call_tmp[3729852])
                              (5640806 call chpl__autoDestroy[3262688] call_tmp[3729844])
                              (5640809 call chpl__autoDestroy[3262688] call_tmp[3729836])
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_writefOne[5518788]
    (3729913 return _void[46])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958].writef[3032440](const  ref arg this[3032446]:_ref(fileWriter(false,defaultSerializer))[1838958], const  ref arg fmtStr[3032448]:string[244], const in arg _e0_args[3032450]:real(64)[13], ref arg error_out[5503089]:Error[85511]) : void[4] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val args[3032573]:1*real(64)[2153815] "insert auto destroy"
    const-val ret_tmp[5563731]:1*real(64)[2153815] "temp"
    (3032578 call chpl__init_tuple[2153843] _e0_args[3032450] ret_tmp[5563731])
    (5563734 'move' args[3032573] ret_tmp[5563731])
    const-val call_tmp[3032581]:locale[234] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5555823]:locale[234] "temp"
    (3032589 call getLocaleOfIoRequest[1842918] this[3032446] ret_tmp[5555823])
    (5555826 'move' call_tmp[3032581] ret_tmp[5555823])
    const-val origLocale[3032590]:locale[234] "dead at end of block" "const" "insert auto destroy"
    (3032592 'move' origLocale[3032590] call_tmp[3032581])
    val err[3032596]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val init_coerce_tmp[3033052]:errorCode[12828] "dead at end of block" "temp"
    (3105746 '=' init_coerce_tmp[3033052](3105742 call :[13286] 0))
    (3032598 'move' err[3032596] init_coerce_tmp[3033052])
    {
      const-val tmp[3032607]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-ref call_tmp[3032609]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
      (3032611 'move' call_tmp[3032609](3032614 call _home[1840737] this[3032446]))
      const-val call_tmp[3032617]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[3033059]:BaseLocale[136243] "dead after last mention" "temp"
      (3033064 'move' _locale_tmp_[3033059](3033061 call _value[135299] call_tmp[3032609]))
      (3032619 'move' call_tmp[3032617](3032621 '_wide_get_locale' _locale_tmp_[3033059]))
      (3032623 'move' tmp[3032607] call_tmp[3032617])
      {
        {
          val error[5503093]:Error[85511] "error variable" "temp"
          (5503102 'move' error[5503093] nil[32])
          (3032633 call lock[1843210] this[3032446] error[5503093])
          val errorExists[7299520]:bool[19] "temp"
          (7299525 'move' errorExists[7299520](7299522 '!=' error[5503093] nil[32]))
          if errorExists[7299520]
          {
            gotoErrorHandling handler[5503094] handler[5503094]
          }
          label handler[5503094]
          const-val shouldHandleError[5503113]:bool[19] "temp"
          val errorExists[7299528]:bool[19] "temp"
          (7299533 'move' errorExists[7299528](7299530 '!=' error[5503093] nil[32]))
          (5503117 'move' shouldHandleError[5503113] errorExists[7299528])
          if shouldHandleError[5503113]
          {
            (5503109 '=' error_out[5503089] error[5503093])
            (5630042 call chpl__autoDestroy[3885511] origLocale[3032590])
            (5630045 call chpl__autoDestroy[4086661] args[3032573])
            gotoErrorHandlingReturn _endwritef[5503091] _endwritef[5503091]
          }
        }
        const-val call_tmp[3032642]:iostyleInternal[164872] "dead at end of block" "maybe param" "temp"
        (3032644 'move' call_tmp[3032642](3032650 call _styleInternal[3033070] this[3032446]))
        const-val save_style[3032651]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
        (3032653 'move' save_style[3032651] call_tmp[3032642])
        val cur[3032668]:uint(64)[86] "dead at end of block" "insert auto destroy"
        const-val init_coerce_tmp[3033267]:uint(64)[86] "dead at end of block" "temp"
        (3105752 '=' init_coerce_tmp[3033267] 0)
        (3032670 'move' cur[3032668] init_coerce_tmp[3033267])
        const-val call_tmp[3032675]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (3032677 'move' call_tmp[3032675](3032680 call size[23467] fmtStr[3032448]))
        const-val call_tmp[3032683]:uint(64)[86] "dead at end of block" "maybe param" "temp"
        (3032685 'move' call_tmp[3032683](3032688 'cast' uint(64)[86] call_tmp[3032675]))
        const-val len[3032691]:uint(64)[86] "dead at end of block" "insert auto destroy"
        (3032693 'move' len[3032691] call_tmp[3032683])
        val conv[3032698]:qio_conv_t[167955] "dead at end of block" "insert auto destroy"
        (3105757 'zero variable' conv[3032698])
        val gotConv[3032704]:bool[19] "dead at end of block" "insert auto destroy"
        (3105760 'move' gotConv[3032704] 0)
        val style[3032710]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
        (3105762 'zero variable' style[3032710])
        val call_tmp[3032716]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
        val argTypeLen[3032724]:int(64)[10] "dead at end of block" "param"
        val argType[3032730]:c_array(int(32),6)[3033347] "dead at end of block" "insert auto destroy"
        val call_tmp[3032732]:c_array(int(32),6)[3033347] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (3105766 call init[3105773] argType[3032730])
        {
          val _indexOfInterest[3032745]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[3032747]:_ic_chpl_direct_range_iter[2903564] "dead at end of block" "expr temp" "temp"
          val call_tmp[3032749]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3032757]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[3032765]:_ir_chpl_direct_range_iter[2903570] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[5582251]:_ir_chpl_direct_range_iter[2903570] "temp"
          (3032770 call chpl_direct_range_iter[2903447] ret_tmp[5582251])
          (5582254 'move' call_tmp[3032765] ret_tmp[5582251])
          (3032773 'move' _iterator[3032747](3032776 call _getIterator[2903579] call_tmp[3032765]))
          {
            val ret[6042866]:_ir_chpl_direct_range_iter[2903570] "dead after last mention" "RVV" "temp"
            val idxType[6042868]:int(64)[10] "dead at end of block" "insert auto destroy" "type variable"
            val _indexOfInterest[6042870]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6042872]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            val call_tmp[6042874]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6042876]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6042878]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            const-val call_tmp[6042880]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6042882]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6042885 call chpl_direct_param_stride_range_iter[1517410] 0 5 ret_tmp[6042882])
            (6042889 'move' call_tmp[6042880] ret_tmp[6042882])
            (6042892 'move' _iterator[6042872](6042895 call _getIterator[1519541] call_tmp[6042880]))
            {
              val ret[6042898]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6042900]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6042902]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6042905 call chpl_range_check_stride[1517730])
              val i[6042906]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6042908]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6042910 'move' i[6042906] 0)
              val call_tmp[6042913]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6042915]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6042917]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6042919]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6042921]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6042923]:int(64)[10] "temp"
              (6042925 'move' low[6042923](6042927 '.v' _iterator[6042872] F0_low[6835591]))
              (6042930 'move' default_arg_first[6042921](6042933 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6042923]))
              const-val default_arg_last[6042935]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6042937]:int(64)[10] "temp"
              (6042939 'move' high[6042937](6042941 '.v' _iterator[6042872] F1_high[6835595]))
              (6042944 'move' default_arg_last[6042935](6042947 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6042937]))
              val default_arg_shouldHalt[6042949]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6042951]:bool[19] "dead after last mention" "temp"
              const-val low[6042953]:int(64)[10] "temp"
              (6042955 'move' low[6042953](6042957 '.v' _iterator[6042872] F0_low[6835591]))
              const-val high[6042960]:int(64)[10] "temp"
              (6042962 'move' high[6042960](6042964 '.v' _iterator[6042872] F1_high[6835595]))
              (6042967 'move' _return_tmp_[6042951](6042970 call chpl_checkIfRangeIterWillOverflow[1518856] low[6042953] high[6042960] 1 default_arg_first[6042921] default_arg_last[6042935] 1))
              CForLoop[6042977] hazard
              {
                const-val yret[6043008]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6043010 'move' yret[6043008] i[6042906])
                const-val _yieldedIndex[6043013]:int(64)[10] "temp"
                (6043015 'move' _yieldedIndex[6043013] i[6042906])
                {
                  const-val i[6043019]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6043021 'move' i[6043019] _yieldedIndex[6043013])
                  const-val yret[6043024]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6043026 'move' yret[6043024] _yieldedIndex[6043013])
                  const-val _yieldedIndex[6043048]:int(64)[10] "temp"
                  (6043071 'move' _yieldedIndex[6043048] _yieldedIndex[6043013])
                  {
                    const-val i[6043050]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6043052 'move' i[6043050] _yieldedIndex[6043048])
                    {
                      ref call_tmp[6043056]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (6043058 'move' call_tmp[6043056](6043061 call this[3033430] argType[3032730] i[6043050]))
                      (6043065 call =[52209] call_tmp[6043056] QIO_CONV_UNK[167958])
                    }
                    label _continueLabel[6043068]
                  }
                }
                {
                  const-val low[6042979]:int(64)[10] "temp"
                  (6042981 'move' low[6042979](6042983 '.v' _iterator[6042872] F0_low[6835591]))
                  (6042986 '=' i[6042906] low[6042979])
                }
                {
                  const-val high[6042990]:int(64)[10] "temp"
                  (6042992 'move' high[6042990](6042994 '.v' _iterator[6042872] F1_high[6835595]))
                  (6042997 '<=' i[6042906] high[6042990])
                }
                {
                  val call_tmp[6043001]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6043003]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6043005 '+=' i[6042906] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6043039]
            }
            (6043042 call _freeIterator[1519714] _iterator[6042872])
            label _endchpl_direct_range_iter[6043044]
          }
          label _breakLabel[3032817]
          (5630051 call _freeIterator[2903748] _iterator[3032747])
        }
        val j[3032819]:int(64)[10] "dead at end of block" "insert auto destroy"
        (3032821 'move' j[3032819] 0)
        {
          const-val i[3032826]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
          (3032828 'move' i[3032826] 0)
          val tmp[3032832]:int(64)[10] "dead after last mention" "maybe param" "temp"
          val call_tmp[3032834]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3032848]:int(64)[10] "dead after last mention" "maybe param" "temp"
          val call_tmp[3032850]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3032864]:int(64)[10] "dead after last mention" "maybe param" "temp"
          {
            {
              const-ref call_tmp[3034049]:_ref(real(64))[1465874] "dead after last mention" "maybe param" "temp"
              (3034051 'move' call_tmp[3034049](3034101 '.' args[3032573] x0[2153813]))
              ref call_tmp[3034056]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
              (3034058 'move' call_tmp[3034056](3034061 call this[3034106] argType[3032730]))
              val call_tmp[3034063]:c_ptr(int(32))[3035159] "dead after last mention" "expr temp" "maybe param" "temp"
              (3034065 'move' call_tmp[3034063](3034068 call c_ptrTo[3035054] call_tmp[3034056]))
              val error[5503122]:Error[85511] "error variable" "temp"
              (5503124 'move' error[5503122] nil[32])
              (3034074 call _writefOne[3035286] this[3032446] fmtStr[3032448] call_tmp[3034049] 0 cur[3032668] j[3032819] call_tmp[3034063] 6 conv[3032698] gotConv[3032704] style[3032710] err[3032596] origLocale[3032590] len[3032691] error[5503122])
              val errorExists[7299536]:bool[19] "temp"
              (7299541 'move' errorExists[7299536](7299538 '!=' error[5503122] nil[32]))
              if errorExists[7299536]
              {
                (5503128 '=' error_out[5503089] error[5503122])
                (5630053 call chpl__autoDestroy[4184601] argType[3032730])
                (5630058 call _set_styleInternal[3033186] this[3032446] save_style[3032651])
                (5630065 call unlock[1843627] this[3032446])
                (5630067 call chpl__autoDestroy[3885511] origLocale[3032590])
                (5630070 call chpl__autoDestroy[4086661] args[3032573])
                gotoErrorHandlingReturn _endwritef[5503091] _endwritef[5503091]
              }
            }
          }
          label _continueLabel0[3034045]
          label _unused_continueLabel[3032926]
          label _breakLabel[3032928]
        }
        const-val call_tmp[3032930]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3032932 'move' call_tmp[3032930](3032935 call ![13178] err[3032596]))
        const-val call_tmp[3032937]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3032939 'move' call_tmp[3032937] call_tmp[3032930])
        if call_tmp[3032937]
        {
          const-val call_tmp[3032946]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3032948 'move' call_tmp[3032946](3032951 call <[1797442] cur[3032668] len[3032691]))
          const-val call_tmp[3032954]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3032956 'move' call_tmp[3032954] call_tmp[3032946])
          if call_tmp[3032954]
          {
            const-val dummy[3032963]:int(32)[66] "dead at end of block" "insert auto destroy"
            (3105956 'move' dummy[3032963] 0)
            (3032973 call _format_reader[3037225] this[3032446] fmtStr[3032448] cur[3032668] len[3032691] err[3032596] conv[3032698] gotConv[3032704] style[3032710])
          }
          const-val call_tmp[3032989]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3032991 'move' call_tmp[3032989](3032994 call <[1797442] cur[3032668] len[3032691]))
          const-val call_tmp[3032997]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3032999 'move' call_tmp[3032997] call_tmp[3032989])
          if call_tmp[3032997]
          {
            const-val call_tmp[3033006]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3033008 'move' call_tmp[3033006](3033011 call qio_format_error_too_few_args[168152]))
            (3033013 call =[13310] err[3032596] call_tmp[3033006])
          }
        }
        (5630074 call chpl__autoDestroy[4184601] argType[3032730])
        (5630079 call _set_styleInternal[3033186] this[3032446] save_style[3032651])
        (5630086 call unlock[1843627] this[3032446])
      }
    }
    const-val call_tmp[3033020]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3033022 'move' call_tmp[3033020](3033025 call _cond_test[1539178] err[3032596]))
    if call_tmp[3033020]
    {
      {
        val error[5503136]:Error[85511] "error variable" "temp"
        (5503145 'move' error[5503136] nil[32])
        (3033034 call _ch_ioerror[1841920] this[3032446] err[3032596] "in fileWriter.writef(fmt:string)" error[5503136])
        val errorExists[7299544]:bool[19] "temp"
        (7299549 'move' errorExists[7299544](7299546 '!=' error[5503136] nil[32]))
        if errorExists[7299544]
        {
          gotoErrorHandling handler[5503137] handler[5503137]
        }
        label handler[5503137]
        const-val shouldHandleError[5503156]:bool[19] "temp"
        val errorExists[7299552]:bool[19] "temp"
        (7299557 'move' errorExists[7299552](7299554 '!=' error[5503136] nil[32]))
        (5503160 'move' shouldHandleError[5503156] errorExists[7299552])
        if shouldHandleError[5503156]
        {
          (5503152 '=' error_out[5503089] error[5503136])
          (5630088 call chpl__autoDestroy[3885511] origLocale[3032590])
          (5630091 call chpl__autoDestroy[4086661] args[3032573])
          gotoErrorHandlingReturn _endwritef[5503091] _endwritef[5503091]
        }
      }
    }
    (5630094 call chpl__autoDestroy[3885511] origLocale[3032590])
    (5630097 call chpl__autoDestroy[4086661] args[3032573])
    label _endwritef[5503091]
    (3033041 return _void[46])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958].writef[3318270](const  ref arg this[3318276]:_ref(fileWriter(false,defaultSerializer))[1838958], const  ref arg fmtStr[3318278]:string[244], const  ref arg _e0_args[3318280]:string[244], ref arg error_out[5508605]:Error[85511]) : void[4] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val args[3318375]:1*string[2054406] "insert auto destroy"
    const-val ret_tmp[5561494]:1*string[2054406] "temp"
    (3318380 call chpl__init_tuple[2054434] _e0_args[3318280] ret_tmp[5561494])
    (5561497 'move' args[3318375] ret_tmp[5561494])
    const-val call_tmp[3318383]:locale[234] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5555907]:locale[234] "temp"
    (3318391 call getLocaleOfIoRequest[1842918] this[3318276] ret_tmp[5555907])
    (5555910 'move' call_tmp[3318383] ret_tmp[5555907])
    const-val origLocale[3318392]:locale[234] "dead at end of block" "const" "insert auto destroy"
    (3318394 'move' origLocale[3318392] call_tmp[3318383])
    val err[3318398]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val init_coerce_tmp[3318848]:errorCode[12828] "dead at end of block" "temp"
    (3329014 '=' init_coerce_tmp[3318848](3329010 call :[13286] 0))
    (3318400 'move' err[3318398] init_coerce_tmp[3318848])
    {
      const-val tmp[3318409]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-ref call_tmp[3318411]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
      (3318413 'move' call_tmp[3318411](3318416 call _home[1840737] this[3318276]))
      const-val call_tmp[3318419]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[3318855]:BaseLocale[136243] "dead after last mention" "temp"
      (3318860 'move' _locale_tmp_[3318855](3318857 call _value[135299] call_tmp[3318411]))
      (3318421 'move' call_tmp[3318419](3318423 '_wide_get_locale' _locale_tmp_[3318855]))
      (3318425 'move' tmp[3318409] call_tmp[3318419])
      {
        {
          val error[5508609]:Error[85511] "error variable" "temp"
          (5508618 'move' error[5508609] nil[32])
          (3318435 call lock[1843210] this[3318276] error[5508609])
          val errorExists[7302096]:bool[19] "temp"
          (7302101 'move' errorExists[7302096](7302098 '!=' error[5508609] nil[32]))
          if errorExists[7302096]
          {
            gotoErrorHandling handler[5508610] handler[5508610]
          }
          label handler[5508610]
          const-val shouldHandleError[5508629]:bool[19] "temp"
          val errorExists[7302104]:bool[19] "temp"
          (7302109 'move' errorExists[7302104](7302106 '!=' error[5508609] nil[32]))
          (5508633 'move' shouldHandleError[5508629] errorExists[7302104])
          if shouldHandleError[5508629]
          {
            (5508625 '=' error_out[5508605] error[5508609])
            (5634544 call chpl__autoDestroy[3885511] origLocale[3318392])
            (5634547 call chpl__autoDestroy[4050680] args[3318375])
            gotoErrorHandlingReturn _endwritef[5508607] _endwritef[5508607]
          }
        }
        const-val call_tmp[3318444]:iostyleInternal[164872] "dead at end of block" "maybe param" "temp"
        (3318446 'move' call_tmp[3318444](3318452 call _styleInternal[3033070] this[3318276]))
        const-val save_style[3318453]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
        (3318455 'move' save_style[3318453] call_tmp[3318444])
        val cur[3318470]:uint(64)[86] "dead at end of block" "insert auto destroy"
        const-val init_coerce_tmp[3318868]:uint(64)[86] "dead at end of block" "temp"
        (3329020 '=' init_coerce_tmp[3318868] 0)
        (3318472 'move' cur[3318470] init_coerce_tmp[3318868])
        const-val call_tmp[3318477]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (3318479 'move' call_tmp[3318477](3318482 call size[23467] fmtStr[3318278]))
        const-val call_tmp[3318485]:uint(64)[86] "dead at end of block" "maybe param" "temp"
        (3318487 'move' call_tmp[3318485](3318490 'cast' uint(64)[86] call_tmp[3318477]))
        const-val len[3318493]:uint(64)[86] "dead at end of block" "insert auto destroy"
        (3318495 'move' len[3318493] call_tmp[3318485])
        val conv[3318500]:qio_conv_t[167955] "dead at end of block" "insert auto destroy"
        (3329025 'zero variable' conv[3318500])
        val gotConv[3318506]:bool[19] "dead at end of block" "insert auto destroy"
        (3329028 'move' gotConv[3318506] 0)
        val style[3318512]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
        (3329030 'zero variable' style[3318512])
        val call_tmp[3318518]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
        val argTypeLen[3318526]:int(64)[10] "dead at end of block" "param"
        val argType[3318532]:c_array(int(32),6)[3033347] "dead at end of block" "insert auto destroy"
        val call_tmp[3318534]:c_array(int(32),6)[3033347] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (3329034 call init[3105773] argType[3318532])
        {
          val _indexOfInterest[3318547]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[3318549]:_ic_chpl_direct_range_iter[2903564] "dead at end of block" "expr temp" "temp"
          val call_tmp[3318551]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3318559]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[3318567]:_ir_chpl_direct_range_iter[2903570] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[5582257]:_ir_chpl_direct_range_iter[2903570] "temp"
          (3318572 call chpl_direct_range_iter[2903447] ret_tmp[5582257])
          (5582260 'move' call_tmp[3318567] ret_tmp[5582257])
          (3318575 'move' _iterator[3318549](3318578 call _getIterator[2903579] call_tmp[3318567]))
          {
            val ret[6055873]:_ir_chpl_direct_range_iter[2903570] "dead after last mention" "RVV" "temp"
            val idxType[6055875]:int(64)[10] "dead at end of block" "insert auto destroy" "type variable"
            val _indexOfInterest[6055877]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6055879]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            val call_tmp[6055881]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6055883]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6055885]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            const-val call_tmp[6055887]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6055889]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6055892 call chpl_direct_param_stride_range_iter[1517410] 0 5 ret_tmp[6055889])
            (6055896 'move' call_tmp[6055887] ret_tmp[6055889])
            (6055899 'move' _iterator[6055879](6055902 call _getIterator[1519541] call_tmp[6055887]))
            {
              val ret[6055905]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6055907]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6055909]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6055912 call chpl_range_check_stride[1517730])
              val i[6055913]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6055915]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6055917 'move' i[6055913] 0)
              val call_tmp[6055920]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6055922]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6055924]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6055926]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6055928]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6055930]:int(64)[10] "temp"
              (6055932 'move' low[6055930](6055934 '.v' _iterator[6055879] F0_low[6835591]))
              (6055937 'move' default_arg_first[6055928](6055940 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6055930]))
              const-val default_arg_last[6055942]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6055944]:int(64)[10] "temp"
              (6055946 'move' high[6055944](6055948 '.v' _iterator[6055879] F1_high[6835595]))
              (6055951 'move' default_arg_last[6055942](6055954 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6055944]))
              val default_arg_shouldHalt[6055956]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6055958]:bool[19] "dead after last mention" "temp"
              const-val low[6055960]:int(64)[10] "temp"
              (6055962 'move' low[6055960](6055964 '.v' _iterator[6055879] F0_low[6835591]))
              const-val high[6055967]:int(64)[10] "temp"
              (6055969 'move' high[6055967](6055971 '.v' _iterator[6055879] F1_high[6835595]))
              (6055974 'move' _return_tmp_[6055958](6055977 call chpl_checkIfRangeIterWillOverflow[1518856] low[6055960] high[6055967] 1 default_arg_first[6055928] default_arg_last[6055942] 1))
              CForLoop[6055984] hazard
              {
                const-val yret[6056015]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6056017 'move' yret[6056015] i[6055913])
                const-val _yieldedIndex[6056020]:int(64)[10] "temp"
                (6056022 'move' _yieldedIndex[6056020] i[6055913])
                {
                  const-val i[6056026]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6056028 'move' i[6056026] _yieldedIndex[6056020])
                  const-val yret[6056031]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6056033 'move' yret[6056031] _yieldedIndex[6056020])
                  const-val _yieldedIndex[6056055]:int(64)[10] "temp"
                  (6056078 'move' _yieldedIndex[6056055] _yieldedIndex[6056020])
                  {
                    const-val i[6056057]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6056059 'move' i[6056057] _yieldedIndex[6056055])
                    {
                      ref call_tmp[6056063]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (6056065 'move' call_tmp[6056063](6056068 call this[3033430] argType[3318532] i[6056057]))
                      (6056072 call =[52209] call_tmp[6056063] QIO_CONV_UNK[167958])
                    }
                    label _continueLabel[6056075]
                  }
                }
                {
                  const-val low[6055986]:int(64)[10] "temp"
                  (6055988 'move' low[6055986](6055990 '.v' _iterator[6055879] F0_low[6835591]))
                  (6055993 '=' i[6055913] low[6055986])
                }
                {
                  const-val high[6055997]:int(64)[10] "temp"
                  (6055999 'move' high[6055997](6056001 '.v' _iterator[6055879] F1_high[6835595]))
                  (6056004 '<=' i[6055913] high[6055997])
                }
                {
                  val call_tmp[6056008]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6056010]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6056012 '+=' i[6055913] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6056046]
            }
            (6056049 call _freeIterator[1519714] _iterator[6055879])
            label _endchpl_direct_range_iter[6056051]
          }
          label _breakLabel[3318619]
          (5634553 call _freeIterator[2903748] _iterator[3318549])
        }
        val j[3318621]:int(64)[10] "dead at end of block" "insert auto destroy"
        (3318623 'move' j[3318621] 0)
        {
          const-val i[3318628]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
          (3318630 'move' i[3318628] 0)
          val tmp[3318634]:int(64)[10] "dead after last mention" "maybe param" "temp"
          val call_tmp[3318636]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3318650]:int(64)[10] "dead after last mention" "maybe param" "temp"
          val call_tmp[3318652]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3318666]:int(64)[10] "dead after last mention" "maybe param" "temp"
          {
            {
              const-ref call_tmp[3318926]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
              (3318928 'move' call_tmp[3318926](3318978 '.v' args[3318375] x0[2054404]))
              ref call_tmp[3318933]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
              (3318935 'move' call_tmp[3318933](3318938 call this[3034106] argType[3318532]))
              val call_tmp[3318940]:c_ptr(int(32))[3035159] "dead after last mention" "expr temp" "maybe param" "temp"
              (3318942 'move' call_tmp[3318940](3318945 call c_ptrTo[3035054] call_tmp[3318933]))
              val error[5508638]:Error[85511] "error variable" "temp"
              (5508640 'move' error[5508638] nil[32])
              (3318951 call _writefOne[3318992] this[3318276] fmtStr[3318278] call_tmp[3318926] 0 cur[3318470] j[3318621] call_tmp[3318940] 6 conv[3318500] gotConv[3318506] style[3318512] err[3318398] origLocale[3318392] len[3318493] error[5508638])
              val errorExists[7302112]:bool[19] "temp"
              (7302117 'move' errorExists[7302112](7302114 '!=' error[5508638] nil[32]))
              if errorExists[7302112]
              {
                (5508644 '=' error_out[5508605] error[5508638])
                (5634555 call chpl__autoDestroy[4184601] argType[3318532])
                (5634560 call _set_styleInternal[3033186] this[3318276] save_style[3318453])
                (5634567 call unlock[1843627] this[3318276])
                (5634569 call chpl__autoDestroy[3885511] origLocale[3318392])
                (5634572 call chpl__autoDestroy[4050680] args[3318375])
                gotoErrorHandlingReturn _endwritef[5508607] _endwritef[5508607]
              }
            }
          }
          label _continueLabel0[3318922]
          label _unused_continueLabel[3318728]
          label _breakLabel[3318730]
        }
        const-val call_tmp[3318732]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3318734 'move' call_tmp[3318732](3318737 call ![13178] err[3318398]))
        const-val call_tmp[3318739]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3318741 'move' call_tmp[3318739] call_tmp[3318732])
        if call_tmp[3318739]
        {
          const-val call_tmp[3318748]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3318750 'move' call_tmp[3318748](3318753 call <[1797442] cur[3318470] len[3318493]))
          const-val call_tmp[3318756]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3318758 'move' call_tmp[3318756] call_tmp[3318748])
          if call_tmp[3318756]
          {
            const-val dummy[3318765]:int(32)[66] "dead at end of block" "insert auto destroy"
            (3329044 'move' dummy[3318765] 0)
            (3318775 call _format_reader[3037225] this[3318276] fmtStr[3318278] cur[3318470] len[3318493] err[3318398] conv[3318500] gotConv[3318506] style[3318512])
          }
          const-val call_tmp[3318791]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3318793 'move' call_tmp[3318791](3318796 call <[1797442] cur[3318470] len[3318493]))
          const-val call_tmp[3318799]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3318801 'move' call_tmp[3318799] call_tmp[3318791])
          if call_tmp[3318799]
          {
            const-val call_tmp[3318808]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3318810 'move' call_tmp[3318808](3318813 call qio_format_error_too_few_args[168152]))
            (3318815 call =[13310] err[3318398] call_tmp[3318808])
          }
        }
        (5634576 call chpl__autoDestroy[4184601] argType[3318532])
        (5634581 call _set_styleInternal[3033186] this[3318276] save_style[3318453])
        (5634588 call unlock[1843627] this[3318276])
      }
    }
    const-val call_tmp[3318822]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3318824 'move' call_tmp[3318822](3318827 call _cond_test[1539178] err[3318398]))
    if call_tmp[3318822]
    {
      {
        val error[5508652]:Error[85511] "error variable" "temp"
        (5508661 'move' error[5508652] nil[32])
        (3318836 call _ch_ioerror[1841920] this[3318276] err[3318398] "in fileWriter.writef(fmt:string)" error[5508652])
        val errorExists[7302120]:bool[19] "temp"
        (7302125 'move' errorExists[7302120](7302122 '!=' error[5508652] nil[32]))
        if errorExists[7302120]
        {
          gotoErrorHandling handler[5508653] handler[5508653]
        }
        label handler[5508653]
        const-val shouldHandleError[5508672]:bool[19] "temp"
        val errorExists[7302128]:bool[19] "temp"
        (7302133 'move' errorExists[7302128](7302130 '!=' error[5508652] nil[32]))
        (5508676 'move' shouldHandleError[5508672] errorExists[7302128])
        if shouldHandleError[5508672]
        {
          (5508668 '=' error_out[5508605] error[5508652])
          (5634590 call chpl__autoDestroy[3885511] origLocale[3318392])
          (5634593 call chpl__autoDestroy[4050680] args[3318375])
          gotoErrorHandlingReturn _endwritef[5508607] _endwritef[5508607]
        }
      }
    }
    (5634596 call chpl__autoDestroy[3885511] origLocale[3318392])
    (5634599 call chpl__autoDestroy[4050680] args[3318375])
    label _endwritef[5508607]
    (3318843 return _void[46])
  }
  function _ref(fileWriter(false,defaultSerializer))[1838958].writef[3727261](const  ref arg this[3727267]:_ref(fileWriter(false,defaultSerializer))[1838958], const  ref arg fmtStr[3727269]:string[244], const in arg _e0_args[3727271]:real(32)[91], ref arg error_out[5518711]:Error[85511]) : void[4] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val args[3727366]:1*real(32)[2240718] "insert auto destroy"
    const-val ret_tmp[5565391]:1*real(32)[2240718] "temp"
    (3727371 call chpl__init_tuple[2240746] _e0_args[3727271] ret_tmp[5565391])
    (5565394 'move' args[3727366] ret_tmp[5565391])
    const-val call_tmp[3727374]:locale[234] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5555913]:locale[234] "temp"
    (3727382 call getLocaleOfIoRequest[1842918] this[3727267] ret_tmp[5555913])
    (5555916 'move' call_tmp[3727374] ret_tmp[5555913])
    const-val origLocale[3727383]:locale[234] "dead at end of block" "const" "insert auto destroy"
    (3727385 'move' origLocale[3727383] call_tmp[3727374])
    val err[3727389]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val init_coerce_tmp[3727845]:errorCode[12828] "dead at end of block" "temp"
    (3744605 '=' init_coerce_tmp[3727845](3744601 call :[13286] 0))
    (3727391 'move' err[3727389] init_coerce_tmp[3727845])
    {
      const-val tmp[3727400]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-ref call_tmp[3727402]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
      (3727404 'move' call_tmp[3727402](3727407 call _home[1840737] this[3727267]))
      const-val call_tmp[3727410]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[3727852]:BaseLocale[136243] "dead after last mention" "temp"
      (3727857 'move' _locale_tmp_[3727852](3727854 call _value[135299] call_tmp[3727402]))
      (3727412 'move' call_tmp[3727410](3727414 '_wide_get_locale' _locale_tmp_[3727852]))
      (3727416 'move' tmp[3727400] call_tmp[3727410])
      {
        {
          val error[5518715]:Error[85511] "error variable" "temp"
          (5518724 'move' error[5518715] nil[32])
          (3727426 call lock[1843210] this[3727267] error[5518715])
          val errorExists[7306728]:bool[19] "temp"
          (7306733 'move' errorExists[7306728](7306730 '!=' error[5518715] nil[32]))
          if errorExists[7306728]
          {
            gotoErrorHandling handler[5518716] handler[5518716]
          }
          label handler[5518716]
          const-val shouldHandleError[5518735]:bool[19] "temp"
          val errorExists[7306736]:bool[19] "temp"
          (7306741 'move' errorExists[7306736](7306738 '!=' error[5518715] nil[32]))
          (5518739 'move' shouldHandleError[5518735] errorExists[7306736])
          if shouldHandleError[5518735]
          {
            (5518731 '=' error_out[5518711] error[5518715])
            (5640642 call chpl__autoDestroy[3885511] origLocale[3727383])
            (5640645 call chpl__autoDestroy[4103227] args[3727366])
            gotoErrorHandlingReturn _endwritef[5518713] _endwritef[5518713]
          }
        }
        const-val call_tmp[3727435]:iostyleInternal[164872] "dead at end of block" "maybe param" "temp"
        (3727437 'move' call_tmp[3727435](3727443 call _styleInternal[3033070] this[3727267]))
        const-val save_style[3727444]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
        (3727446 'move' save_style[3727444] call_tmp[3727435])
        val cur[3727461]:uint(64)[86] "dead at end of block" "insert auto destroy"
        const-val init_coerce_tmp[3727865]:uint(64)[86] "dead at end of block" "temp"
        (3744611 '=' init_coerce_tmp[3727865] 0)
        (3727463 'move' cur[3727461] init_coerce_tmp[3727865])
        const-val call_tmp[3727468]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (3727470 'move' call_tmp[3727468](3727473 call size[23467] fmtStr[3727269]))
        const-val call_tmp[3727476]:uint(64)[86] "dead at end of block" "maybe param" "temp"
        (3727478 'move' call_tmp[3727476](3727481 'cast' uint(64)[86] call_tmp[3727468]))
        const-val len[3727484]:uint(64)[86] "dead at end of block" "insert auto destroy"
        (3727486 'move' len[3727484] call_tmp[3727476])
        val conv[3727491]:qio_conv_t[167955] "dead at end of block" "insert auto destroy"
        (3744616 'zero variable' conv[3727491])
        val gotConv[3727497]:bool[19] "dead at end of block" "insert auto destroy"
        (3744619 'move' gotConv[3727497] 0)
        val style[3727503]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
        (3744621 'zero variable' style[3727503])
        val call_tmp[3727509]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
        val argTypeLen[3727517]:int(64)[10] "dead at end of block" "param"
        val argType[3727523]:c_array(int(32),6)[3033347] "dead at end of block" "insert auto destroy"
        val call_tmp[3727525]:c_array(int(32),6)[3033347] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (3744625 call init[3105773] argType[3727523])
        {
          val _indexOfInterest[3727538]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[3727540]:_ic_chpl_direct_range_iter[2903564] "dead at end of block" "expr temp" "temp"
          val call_tmp[3727542]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
          val call_tmp[3727550]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
          const-val call_tmp[3727558]:_ir_chpl_direct_range_iter[2903570] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[5582263]:_ir_chpl_direct_range_iter[2903570] "temp"
          (3727563 call chpl_direct_range_iter[2903447] ret_tmp[5582263])
          (5582266 'move' call_tmp[3727558] ret_tmp[5582263])
          (3727566 'move' _iterator[3727540](3727569 call _getIterator[2903579] call_tmp[3727558]))
          {
            val ret[6084793]:_ir_chpl_direct_range_iter[2903570] "dead after last mention" "RVV" "temp"
            val idxType[6084795]:int(64)[10] "dead at end of block" "insert auto destroy" "type variable"
            val _indexOfInterest[6084797]:int(64)[10] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[6084799]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
            val call_tmp[6084801]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6084803]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            val call_tmp[6084805]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "maybe type" "temp"
            const-val call_tmp[6084807]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[6084809]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
            (6084812 call chpl_direct_param_stride_range_iter[1517410] 0 5 ret_tmp[6084809])
            (6084816 'move' call_tmp[6084807] ret_tmp[6084809])
            (6084819 'move' _iterator[6084799](6084822 call _getIterator[1519541] call_tmp[6084807]))
            {
              val ret[6084825]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead after last mention" "RVV" "temp"
              val call_tmp[6084827]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6084829]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6084832 call chpl_range_check_stride[1517730])
              val i[6084833]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6084835]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6084837 'move' i[6084833] 0)
              val call_tmp[6084840]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6084842]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6084844]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6084846]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[6084848]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[6084850]:int(64)[10] "temp"
              (6084852 'move' low[6084850](6084854 '.v' _iterator[6084799] F0_low[6835591]))
              (6084857 'move' default_arg_first[6084848](6084860 call chpl_checkIfRangeIterWillOverflow_default_first[1519408] low[6084850]))
              const-val default_arg_last[6084862]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[6084864]:int(64)[10] "temp"
              (6084866 'move' high[6084864](6084868 '.v' _iterator[6084799] F1_high[6835595]))
              (6084871 'move' default_arg_last[6084862](6084874 call chpl_checkIfRangeIterWillOverflow_default_last[1519436] high[6084864]))
              val default_arg_shouldHalt[6084876]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6084878]:bool[19] "dead after last mention" "temp"
              const-val low[6084880]:int(64)[10] "temp"
              (6084882 'move' low[6084880](6084884 '.v' _iterator[6084799] F0_low[6835591]))
              const-val high[6084887]:int(64)[10] "temp"
              (6084889 'move' high[6084887](6084891 '.v' _iterator[6084799] F1_high[6835595]))
              (6084894 'move' _return_tmp_[6084878](6084897 call chpl_checkIfRangeIterWillOverflow[1518856] low[6084880] high[6084887] 1 default_arg_first[6084848] default_arg_last[6084862] 1))
              CForLoop[6084904] hazard
              {
                const-val yret[6084935]:int(64)[10] "dead after last mention" "YVV" "temp"
                (6084937 'move' yret[6084935] i[6084833])
                const-val _yieldedIndex[6084940]:int(64)[10] "temp"
                (6084942 'move' _yieldedIndex[6084940] i[6084833])
                {
                  const-val i[6084946]:int(64)[10] "const" "index var" "insert auto destroy"
                  (6084948 'move' i[6084946] _yieldedIndex[6084940])
                  const-val yret[6084951]:int(64)[10] "dead after last mention" "YVV" "temp"
                  (6084953 'move' yret[6084951] _yieldedIndex[6084940])
                  const-val _yieldedIndex[6084975]:int(64)[10] "temp"
                  (6084998 'move' _yieldedIndex[6084975] _yieldedIndex[6084940])
                  {
                    const-val i[6084977]:int(64)[10] "const" "index var" "insert auto destroy"
                    (6084979 'move' i[6084977] _yieldedIndex[6084975])
                    {
                      ref call_tmp[6084983]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
                      (6084985 'move' call_tmp[6084983](6084988 call this[3033430] argType[3727523] i[6084977]))
                      (6084992 call =[52209] call_tmp[6084983] QIO_CONV_UNK[167958])
                    }
                    label _continueLabel[6084995]
                  }
                }
                {
                  const-val low[6084906]:int(64)[10] "temp"
                  (6084908 'move' low[6084906](6084910 '.v' _iterator[6084799] F0_low[6835591]))
                  (6084913 '=' i[6084833] low[6084906])
                }
                {
                  const-val high[6084917]:int(64)[10] "temp"
                  (6084919 'move' high[6084917](6084921 '.v' _iterator[6084799] F1_high[6835595]))
                  (6084924 '<=' i[6084833] high[6084917])
                }
                {
                  val call_tmp[6084928]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6084930]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6084932 '+=' i[6084833] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[6084966]
            }
            (6084969 call _freeIterator[1519714] _iterator[6084799])
            label _endchpl_direct_range_iter[6084971]
          }
          label _breakLabel[3727610]
          (5640651 call _freeIterator[2903748] _iterator[3727540])
        }
        val j[3727612]:int(64)[10] "dead at end of block" "insert auto destroy"
        (3727614 'move' j[3727612] 0)
        {
          const-val i[3727619]:int(64)[10] "dead at end of block" "index var" "insert auto destroy"
          (3727621 'move' i[3727619] 0)
          val tmp[3727625]:int(64)[10] "dead after last mention" "maybe param" "temp"
          val call_tmp[3727627]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3727641]:int(64)[10] "dead after last mention" "maybe param" "temp"
          val call_tmp[3727643]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
          val tmp[3727657]:int(64)[10] "dead after last mention" "maybe param" "temp"
          {
            {
              const-ref call_tmp[3727923]:_ref(real(32))[1470469] "dead after last mention" "maybe param" "temp"
              (3727925 'move' call_tmp[3727923](3727975 '.' args[3727366] x0[2240716]))
              ref call_tmp[3727930]:_ref(int(32))[1465743] "dead after last mention" "maybe param" "temp"
              (3727932 'move' call_tmp[3727930](3727935 call this[3034106] argType[3727523]))
              val call_tmp[3727937]:c_ptr(int(32))[3035159] "dead after last mention" "expr temp" "maybe param" "temp"
              (3727939 'move' call_tmp[3727937](3727942 call c_ptrTo[3035054] call_tmp[3727930]))
              val error[5518744]:Error[85511] "error variable" "temp"
              (5518746 'move' error[5518744] nil[32])
              (3727948 call _writefOne[3727989] this[3727267] fmtStr[3727269] call_tmp[3727923] 0 cur[3727461] j[3727612] call_tmp[3727937] 6 conv[3727491] gotConv[3727497] style[3727503] err[3727389] origLocale[3727383] len[3727484] error[5518744])
              val errorExists[7306744]:bool[19] "temp"
              (7306749 'move' errorExists[7306744](7306746 '!=' error[5518744] nil[32]))
              if errorExists[7306744]
              {
                (5518750 '=' error_out[5518711] error[5518744])
                (5640653 call chpl__autoDestroy[4184601] argType[3727523])
                (5640658 call _set_styleInternal[3033186] this[3727267] save_style[3727444])
                (5640665 call unlock[1843627] this[3727267])
                (5640667 call chpl__autoDestroy[3885511] origLocale[3727383])
                (5640670 call chpl__autoDestroy[4103227] args[3727366])
                gotoErrorHandlingReturn _endwritef[5518713] _endwritef[5518713]
              }
            }
          }
          label _continueLabel0[3727919]
          label _unused_continueLabel[3727719]
          label _breakLabel[3727721]
        }
        const-val call_tmp[3727723]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3727725 'move' call_tmp[3727723](3727728 call ![13178] err[3727389]))
        const-val call_tmp[3727730]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3727732 'move' call_tmp[3727730] call_tmp[3727723])
        if call_tmp[3727730]
        {
          const-val call_tmp[3727739]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3727741 'move' call_tmp[3727739](3727744 call <[1797442] cur[3727461] len[3727484]))
          const-val call_tmp[3727747]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3727749 'move' call_tmp[3727747] call_tmp[3727739])
          if call_tmp[3727747]
          {
            const-val dummy[3727756]:int(32)[66] "dead at end of block" "insert auto destroy"
            (3744635 'move' dummy[3727756] 0)
            (3727766 call _format_reader[3037225] this[3727267] fmtStr[3727269] cur[3727461] len[3727484] err[3727389] conv[3727491] gotConv[3727497] style[3727503])
          }
          const-val call_tmp[3727782]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3727784 'move' call_tmp[3727782](3727787 call <[1797442] cur[3727461] len[3727484]))
          const-val call_tmp[3727790]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3727792 'move' call_tmp[3727790] call_tmp[3727782])
          if call_tmp[3727790]
          {
            const-val call_tmp[3727799]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3727801 'move' call_tmp[3727799](3727804 call qio_format_error_too_few_args[168152]))
            (3727806 call =[13310] err[3727389] call_tmp[3727799])
          }
        }
        (5640674 call chpl__autoDestroy[4184601] argType[3727523])
        (5640679 call _set_styleInternal[3033186] this[3727267] save_style[3727444])
        (5640686 call unlock[1843627] this[3727267])
      }
    }
    const-val call_tmp[3727813]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3727815 'move' call_tmp[3727813](3727818 call _cond_test[1539178] err[3727389]))
    if call_tmp[3727813]
    {
      {
        val error[5518758]:Error[85511] "error variable" "temp"
        (5518767 'move' error[5518758] nil[32])
        (3727827 call _ch_ioerror[1841920] this[3727267] err[3727389] "in fileWriter.writef(fmt:string)" error[5518758])
        val errorExists[7306752]:bool[19] "temp"
        (7306757 'move' errorExists[7306752](7306754 '!=' error[5518758] nil[32]))
        if errorExists[7306752]
        {
          gotoErrorHandling handler[5518759] handler[5518759]
        }
        label handler[5518759]
        const-val shouldHandleError[5518778]:bool[19] "temp"
        val errorExists[7306760]:bool[19] "temp"
        (7306765 'move' errorExists[7306760](7306762 '!=' error[5518758] nil[32]))
        (5518782 'move' shouldHandleError[5518778] errorExists[7306760])
        if shouldHandleError[5518778]
        {
          (5518774 '=' error_out[5518711] error[5518758])
          (5640688 call chpl__autoDestroy[3885511] origLocale[3727383])
          (5640691 call chpl__autoDestroy[4103227] args[3727366])
          gotoErrorHandlingReturn _endwritef[5518713] _endwritef[5518713]
        }
      }
    }
    (5640694 call chpl__autoDestroy[3885511] origLocale[3727383])
    (5640697 call chpl__autoDestroy[4103227] args[3727366])
    label _endwritef[5518713]
    (3727834 return _void[46])
  }
  function _ref(string)[1466327].format[3316409](const  ref arg this[3316415]:_ref(string)[1466327], const  ref arg _e0_args[3316417]:string[244], ref arg error_out[5508047]:Error[85511], ref arg _retArg[5588903]:_ref(string)[1466327]) : void[4] throws "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[3316421]:string[244] "dead after last mention" "RVV" "temp"
    {
      val error[5508049]:Error[85511] "error variable" "temp"
      (5508058 'move' error[5508049] nil[32])
      const-val call_tmp[3316782]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5588912]:string[244] "temp"
      (3316787 call chpl_do_format[3317706] this[3316415] _e0_args[3316417] error[5508049] ret_tmp[5588912])
      (5588915 'move' call_tmp[3316782] ret_tmp[5588912])
      val errorExists[7301856]:bool[19] "temp"
      (7301861 'move' errorExists[7301856](7301858 '!=' error[5508049] nil[32]))
      if errorExists[7301856]
      {
        gotoErrorHandling handler[5508050] handler[5508050]
      }
      (3333687 '=' ret[3316421] call_tmp[3316782])
      gotoReturn _end_format[3317229] _end_format[3317229]
      label handler[5508050]
      const-val shouldHandleError[5508207]:bool[19] "temp"
      val errorExists[7301912]:bool[19] "temp"
      (7301917 'move' errorExists[7301912](7301914 '!=' error[5508049] nil[32]))
      (5508211 'move' shouldHandleError[5508207] errorExists[7301912])
      if shouldHandleError[5508207]
      {
        {
          val call_tmp[3316800]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
          (3316802 'move' call_tmp[3316800] error[5508049])
          val call_tmp[3316805]:IllegalArgumentError[85616] "dead after last mention" "maybe param" "temp"
          (3316807 'move' call_tmp[3316805](3316809 'dynamic_cast' IllegalArgumentError[85616] call_tmp[3316800]))
          val tmp[3316812]:IllegalArgumentError[85616] "dead at end of block" "insert auto destroy" "temp"
          (3316814 'move' tmp[3316812](3329175 call chpl__initCopy[3329178] call_tmp[3316805] 0))
          const-val call_tmp[3316817]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3316819 'move' call_tmp[3316817](3316821 '!=' tmp[3316812] nil[32]))
          if call_tmp[3316817]
          {
            val call_tmp[3316826]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
            (3316828 'move' call_tmp[3316826] tmp[3316812])
            const-val call_tmp[3316832]:owned IllegalArgumentError[1475882] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[3329202]:owned IllegalArgumentError[1475882] "dead at end of block" "delay instantiation" "temp"
            (3329205 call init[1475364] initTemp[3329202] call_tmp[3316826])
            (3316834 'move' call_tmp[3316832] initTemp[3329202])
            val e[3316839]:owned IllegalArgumentError[1475882] "dead at end of block" "delay instantiation" "insert auto destroy"
            (3316841 'move' e[3316839] call_tmp[3316832])
            {
              val call_tmp[3316846]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3329219]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
              const-val _formal_tmp_in_x[3329437]:owned IllegalArgumentError[1475882] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (3329442 'move' _formal_tmp_in_x[3329437](3329438 call chpl__initCopy[3329445] e[3316839] 0))
              const-val ret_tmp[5547145]:owned Error[1498203] "temp"
              (3329221 call :[1498308] _formal_tmp_in_x[3329437] ret_tmp[5547145])
              (5547148 'move' coerce_tmp[3329219] ret_tmp[5547145])
              const-val _formal_tmp_in_err[3329848]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (3329853 'move' _formal_tmp_in_err[3329848] coerce_tmp[3329219])
              (3316848 'move' call_tmp[3316846](3316851 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3329848]))
              {
                val castedError[5508065]:Error[85511] "temp"
                (5508071 'move' castedError[5508065] call_tmp[3316846])
                (5508073 '=' error_out[5508047] castedError[5508065])
                (5632761 call chpl__autoDestroy[3929468] e[3316839])
                gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
              }
            }
            (5632765 call chpl__autoDestroy[3929468] e[3316839])
          }
          {
            {
              val call_tmp[3316862]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (3316864 'move' call_tmp[3316862] error[5508049])
              val call_tmp[3316867]:EofError[14808] "dead after last mention" "maybe param" "temp"
              (3316869 'move' call_tmp[3316867](3316871 'dynamic_cast' EofError[14808] call_tmp[3316862]))
              val tmp[3316874]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
              (3316876 'move' tmp[3316874](3329858 call chpl__initCopy[3290680] call_tmp[3316867] 0))
              const-val call_tmp[3316879]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3316881 'move' call_tmp[3316879](3316883 '!=' tmp[3316874] nil[32]))
              if call_tmp[3316879]
              {
                val call_tmp[3316888]:EofError[14808] "dead after last mention" "expr temp" "maybe param" "temp"
                (3316890 'move' call_tmp[3316888] tmp[3316874])
                const-val call_tmp[3316894]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
                const-val initTemp[3329865]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
                (3329868 call init[1542524] initTemp[3329865] call_tmp[3316888])
                (3316896 'move' call_tmp[3316894] initTemp[3329865])
                val e[3316901]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
                (3316903 'move' e[3316901] call_tmp[3316894])
                {
                  val call_tmp[3316908]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3329882]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                  const-val _formal_tmp_in_x[3330460]:owned EofError[1542875] "dead after last mention" "expr temp" "no auto destroy" "temp"
                  (3330465 'move' _formal_tmp_in_x[3330460](3330461 call chpl__initCopy[3330468] e[3316901] 0))
                  const-val ret_tmp[5589074]:owned Error[1498203] "temp"
                  (3329884 call :[3329987] _formal_tmp_in_x[3330460] ret_tmp[5589074])
                  (5589077 'move' coerce_tmp[3329882] ret_tmp[5589074])
                  const-val _formal_tmp_in_err[3331031]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                  (3331036 'move' _formal_tmp_in_err[3331031] coerce_tmp[3329882])
                  (3316910 'move' call_tmp[3316908](3316913 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3331031]))
                  {
                    val castedError[5508079]:Error[85511] "temp"
                    (5508085 'move' castedError[5508079] call_tmp[3316908])
                    (5508087 '=' error_out[5508047] castedError[5508079])
                    (5632768 call chpl__autoDestroy[3937692] e[3316901])
                    gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                  }
                }
                (5632772 call chpl__autoDestroy[3937692] e[3316901])
              }
              {
                {
                  val call_tmp[3316924]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3316926 'move' call_tmp[3316924] error[5508049])
                  val call_tmp[3316929]:UnexpectedEofError[14951] "dead after last mention" "maybe param" "temp"
                  (3316931 'move' call_tmp[3316929](3316933 'dynamic_cast' UnexpectedEofError[14951] call_tmp[3316924]))
                  val tmp[3316936]:UnexpectedEofError[14951] "dead at end of block" "insert auto destroy" "temp"
                  (3316938 'move' tmp[3316936](3331051 call chpl__initCopy[3331054] call_tmp[3316929] 0))
                  const-val call_tmp[3316941]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3316943 'move' call_tmp[3316941](3316945 '!=' tmp[3316936] nil[32]))
                  if call_tmp[3316941]
                  {
                    val call_tmp[3316950]:UnexpectedEofError[14951] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3316952 'move' call_tmp[3316950] tmp[3316936])
                    const-val call_tmp[3316956]:owned UnexpectedEofError[1543525] "dead at end of block" "delay instantiation" "maybe param" "temp"
                    const-val initTemp[3331078]:owned UnexpectedEofError[1543525] "dead at end of block" "delay instantiation" "temp"
                    (3331081 call init[1543174] initTemp[3331078] call_tmp[3316950])
                    (3316958 'move' call_tmp[3316956] initTemp[3331078])
                    val e[3316963]:owned UnexpectedEofError[1543525] "dead at end of block" "delay instantiation" "insert auto destroy"
                    (3316965 'move' e[3316963] call_tmp[3316956])
                    {
                      val call_tmp[3316970]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[3331095]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                      const-val _formal_tmp_in_x[3331673]:owned UnexpectedEofError[1543525] "dead after last mention" "expr temp" "no auto destroy" "temp"
                      (3331678 'move' _formal_tmp_in_x[3331673](3331674 call chpl__initCopy[3331681] e[3316963] 0))
                      const-val ret_tmp[5589104]:owned Error[1498203] "temp"
                      (3331097 call :[3331200] _formal_tmp_in_x[3331673] ret_tmp[5589104])
                      (5589107 'move' coerce_tmp[3331095] ret_tmp[5589104])
                      const-val _formal_tmp_in_err[3332244]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                      (3332249 'move' _formal_tmp_in_err[3332244] coerce_tmp[3331095])
                      (3316972 'move' call_tmp[3316970](3316975 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3332244]))
                      {
                        val castedError[5508093]:Error[85511] "temp"
                        (5508099 'move' castedError[5508093] call_tmp[3316970])
                        (5508101 '=' error_out[5508047] castedError[5508093])
                        (5632775 call chpl__autoDestroy[3939073] e[3316963])
                        gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                      }
                    }
                    (5632779 call chpl__autoDestroy[3939073] e[3316963])
                  }
                  {
                    {
                      val call_tmp[3316986]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3316988 'move' call_tmp[3316986] error[5508049])
                      val call_tmp[3316991]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
                      (3316993 'move' call_tmp[3316991](3316995 'dynamic_cast' BadFormatError[15094] call_tmp[3316986]))
                      val tmp[3316998]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
                      (3317000 'move' tmp[3316998](3332254 call chpl__initCopy[3290624] call_tmp[3316991] 0))
                      const-val call_tmp[3317003]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3317005 'move' call_tmp[3317003](3317007 '!=' tmp[3316998] nil[32]))
                      if call_tmp[3317003]
                      {
                        val call_tmp[3317012]:BadFormatError[15094] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3317014 'move' call_tmp[3317012] tmp[3316998])
                        const-val call_tmp[3317018]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
                        const-val initTemp[3332261]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
                        (3332264 call init[1543824] initTemp[3332261] call_tmp[3317012])
                        (3317020 'move' call_tmp[3317018] initTemp[3332261])
                        val e[3317025]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
                        (3317027 'move' e[3317025] call_tmp[3317018])
                        {
                          val call_tmp[3317032]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[3332278]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                          const-val _formal_tmp_in_x[3332856]:owned BadFormatError[1544175] "dead after last mention" "expr temp" "no auto destroy" "temp"
                          (3332861 'move' _formal_tmp_in_x[3332856](3332857 call chpl__initCopy[3332864] e[3317025] 0))
                          const-val ret_tmp[5589116]:owned Error[1498203] "temp"
                          (3332280 call :[3332383] _formal_tmp_in_x[3332856] ret_tmp[5589116])
                          (5589119 'move' coerce_tmp[3332278] ret_tmp[5589116])
                          const-val _formal_tmp_in_err[3333427]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                          (3333432 'move' _formal_tmp_in_err[3333427] coerce_tmp[3332278])
                          (3317034 'move' call_tmp[3317032](3317037 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3333427]))
                          {
                            val castedError[5508107]:Error[85511] "temp"
                            (5508113 'move' castedError[5508107] call_tmp[3317032])
                            (5508115 '=' error_out[5508047] castedError[5508107])
                            (5632782 call chpl__autoDestroy[3940454] e[3317025])
                            gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                          }
                        }
                        (5632786 call chpl__autoDestroy[3940454] e[3317025])
                      }
                      {
                        {
                          val call_tmp[3317048]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3317050 'move' call_tmp[3317048] error[5508049])
                          val call_tmp[3317053]:SystemError[13599] "dead after last mention" "maybe param" "temp"
                          (3317055 'move' call_tmp[3317053](3317057 'dynamic_cast' SystemError[13599] call_tmp[3317048]))
                          val tmp[3317060]:SystemError[13599] "dead at end of block" "insert auto destroy" "temp"
                          (3317062 'move' tmp[3317060](3333437 call chpl__initCopy[3333440] call_tmp[3317053] 0))
                          const-val call_tmp[3317065]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3317067 'move' call_tmp[3317065](3317069 '!=' tmp[3317060] nil[32]))
                          if call_tmp[3317065]
                          {
                            val call_tmp[3317074]:SystemError[13599] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3317076 'move' call_tmp[3317074] tmp[3317060])
                            const-val call_tmp[3317080]:owned SystemError[1554765] "dead at end of block" "delay instantiation" "maybe param" "temp"
                            const-val initTemp[3333464]:owned SystemError[1554765] "dead at end of block" "delay instantiation" "temp"
                            (3333467 call init[1554414] initTemp[3333464] call_tmp[3317074])
                            (3317082 'move' call_tmp[3317080] initTemp[3333464])
                            const-val e[3317087]:owned SystemError[1554765] "dead at end of block" "delay instantiation" "insert auto destroy"
                            (3317089 'move' e[3317087] call_tmp[3317080])
                            {
                              {
                                val error[5508120]:Error[85511] "error variable" "temp"
                                (5508129 'move' error[5508120] nil[32])
                                const-ref call_tmp[3317095]:_ref(errorCode)[1499037] "dead after last mention" "maybe param" "temp"
                                val coerce_tmp[3333481]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (3333487 'move' coerce_tmp[3333481](3333483 call borrow[3333489] e[3317087]))
                                (3317097 'move' call_tmp[3317095](3317100 call err[1028546] coerce_tmp[3333481]))
                                const-val coerce_tmp[3333605]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (3333609 'move' coerce_tmp[3333605](3333607 'deref' call_tmp[3317095]))
                                (3317104 call ioerror[15437] coerce_tmp[3333605] "in string.format" error[5508120])
                                val errorExists[7301864]:bool[19] "temp"
                                (7301869 'move' errorExists[7301864](7301866 '!=' error[5508120] nil[32]))
                                if errorExists[7301864]
                                {
                                  gotoErrorHandling handler[5508121] handler[5508121]
                                }
                                label handler[5508121]
                                const-val shouldHandleError[5508140]:bool[19] "temp"
                                val errorExists[7301872]:bool[19] "temp"
                                (7301877 'move' errorExists[7301872](7301874 '!=' error[5508120] nil[32]))
                                (5508144 'move' shouldHandleError[5508140] errorExists[7301872])
                                if shouldHandleError[5508140]
                                {
                                  (5508136 '=' error_out[5508047] error[5508120])
                                  (5632789 call chpl__autoDestroy[3968549] e[3317087])
                                  gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                                }
                              }
                            }
                            (5632793 call chpl__autoDestroy[3968549] e[3317087])
                          }
                          {
                            {
                              val call_tmp[3317115]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                              (3317117 'move' call_tmp[3317115] error[5508049])
                              val call_tmp[3317120]:DecodeError[85583] "dead after last mention" "maybe param" "temp"
                              (3317122 'move' call_tmp[3317120](3317124 'dynamic_cast' DecodeError[85583] call_tmp[3317115]))
                              val tmp[3317127]:DecodeError[85583] "dead at end of block" "insert auto destroy" "temp"
                              (3317129 'move' tmp[3317127](3333612 call chpl__initCopy[3333615] call_tmp[3317120] 0))
                              const-val call_tmp[3317132]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                              (3317134 'move' call_tmp[3317132](3317136 '!=' tmp[3317127] nil[32]))
                              if call_tmp[3317132]
                              {
                                val call_tmp[3317141]:DecodeError[85583] "dead after last mention" "expr temp" "maybe param" "temp"
                                (3317143 'move' call_tmp[3317141] tmp[3317127])
                                const-val call_tmp[3317147]:owned DecodeError[1515063] "dead at end of block" "delay instantiation" "maybe param" "temp"
                                const-val initTemp[3333639]:owned DecodeError[1515063] "dead at end of block" "delay instantiation" "temp"
                                (3333642 call init[1514712] initTemp[3333639] call_tmp[3317141])
                                (3317149 'move' call_tmp[3317147] initTemp[3333639])
                                const-val e[3317154]:owned DecodeError[1515063] "dead at end of block" "delay instantiation" "insert auto destroy"
                                (3317156 'move' e[3317154] call_tmp[3317147])
                                {
                                  {
                                    val error[5508149]:Error[85511] "error variable" "temp"
                                    (5508158 'move' error[5508149] nil[32])
                                    const-val call_tmp[3317162]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (3317164 'move' call_tmp[3317162](3317167 call :[13267] EILSEQ[11191]))
                                    (3317171 call ioerror[15437] call_tmp[3317162] "in string.format" error[5508149])
                                    val errorExists[7301880]:bool[19] "temp"
                                    (7301885 'move' errorExists[7301880](7301882 '!=' error[5508149] nil[32]))
                                    if errorExists[7301880]
                                    {
                                      gotoErrorHandling handler[5508150] handler[5508150]
                                    }
                                    label handler[5508150]
                                    const-val shouldHandleError[5508169]:bool[19] "temp"
                                    val errorExists[7301888]:bool[19] "temp"
                                    (7301893 'move' errorExists[7301888](7301890 '!=' error[5508149] nil[32]))
                                    (5508173 'move' shouldHandleError[5508169] errorExists[7301888])
                                    if shouldHandleError[5508169]
                                    {
                                      (5508165 '=' error_out[5508047] error[5508149])
                                      (5632796 call chpl__autoDestroy[3932740] e[3317154])
                                      gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                                    }
                                  }
                                }
                                (5632800 call chpl__autoDestroy[3932740] e[3317154])
                              }
                              {
                                {
                                  val call_tmp[3317179]:Error[85511] "dead after last mention" "maybe param" "temp"
                                  (3317181 'move' call_tmp[3317179] error[5508049])
                                  val tmp[3317184]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
                                  (3317186 'move' tmp[3317184](3333658 call chpl__initCopy[1499315] call_tmp[3317179] 0))
                                  val call_tmp[3317189]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (3317191 'move' call_tmp[3317189] tmp[3317184])
                                  const-val call_tmp[3317195]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
                                  const-val initTemp[3333665]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
                                  (3333668 call init[1499358] initTemp[3333665] call_tmp[3317189])
                                  (3317197 'move' call_tmp[3317195] initTemp[3333665])
                                  const-val chpl_anon_error[3317202]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
                                  (3317204 'move' chpl_anon_error[3317202] call_tmp[3317195])
                                  {
                                    {
                                      val error[5508178]:Error[85511] "error variable" "temp"
                                      (5508187 'move' error[5508178] nil[32])
                                      const-val call_tmp[3317210]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (3317212 'move' call_tmp[3317210](3317215 call :[13267] EINVAL[11206]))
                                      (3317219 call ioerror[15437] call_tmp[3317210] "in string.format" error[5508178])
                                      val errorExists[7301896]:bool[19] "temp"
                                      (7301901 'move' errorExists[7301896](7301898 '!=' error[5508178] nil[32]))
                                      if errorExists[7301896]
                                      {
                                        gotoErrorHandling handler[5508179] handler[5508179]
                                      }
                                      label handler[5508179]
                                      const-val shouldHandleError[5508198]:bool[19] "temp"
                                      val errorExists[7301904]:bool[19] "temp"
                                      (7301909 'move' errorExists[7301904](7301906 '!=' error[5508178] nil[32]))
                                      (5508202 'move' shouldHandleError[5508198] errorExists[7301904])
                                      if shouldHandleError[5508198]
                                      {
                                        (5508194 '=' error_out[5508047] error[5508178])
                                        (5632803 call chpl__autoDestroy[3930254] chpl_anon_error[3317202])
                                        gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                                      }
                                    }
                                  }
                                  (5632807 call chpl__autoDestroy[3930254] chpl_anon_error[3317202])
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (3317224 'move' ret[3316421](5588908 call chpl__initCopy[1480493] "" 0))
    label _end_format[3317229]
    (5588905 '=' _retArg[5588903] ret[3316421])
    (5588910 return _void[46])
  }
  function chpl_do_format[3317706](const  ref arg fmt[3317708]:string[244], const  ref arg _e0_args[3317710]:string[244], ref arg error_out[5508215]:Error[85511], ref arg _retArg[5588918]:_ref(string)[1466327]) : void[4] throws "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3317795]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3317810]:file[168704] "dead at end of block" "maybe param" "temp"
    val error[5508218]:Error[85511] "error variable" "temp"
    (5508220 'move' error[5508218] nil[32])
    const-val ret_tmp[5545275]:file[168704] "temp"
    (3317815 call openMemFile[170606] error[5508218] ret_tmp[5545275])
    (5545278 'move' call_tmp[3317810] ret_tmp[5545275])
    val errorExists[7301920]:bool[19] "temp"
    (7301925 'move' errorExists[7301920](7301922 '!=' error[5508218] nil[32]))
    if errorExists[7301920]
    {
      (5508224 '=' error_out[5508215] error[5508218])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val f[3317816]:file[168704] "dead at end of block" "insert auto destroy"
    (3317818 'move' f[3317816] call_tmp[3317810])
    val offset[3317865]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3317867 'move' offset[3317865] 0)
    {
      const-val call_tmp[3317873]:fileWriter(false,defaultSerializer)[1838949] "dead at end of block" "maybe param" "temp"
      const-val default_arg_region[3318212]:range(int(64),low,one)[1576928] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
      val error[5508257]:Error[85511] "error variable" "temp"
      (5508259 'move' error[5508257] nil[32])
      const-val ret_tmp[5555721]:range(int(64),low,one)[1576928] "temp"
      (3318214 call writer_default_region[1839037] f[3317816] error[5508257] ret_tmp[5555721])
      (5555724 'move' default_arg_region[3318212] ret_tmp[5555721])
      val errorExists[7301928]:bool[19] "temp"
      (7301933 'move' errorExists[7301928](7301930 '!=' error[5508257] nil[32]))
      if errorExists[7301928]
      {
        (5508263 '=' error_out[5508215] error[5508257])
        {
          val error[5632816]:Error[85511] "error variable" "temp"
          (5632818 'move' error[5632816] nil[32])
          (5632822 call close[169420] f[3317816] error[5632816])
          val errorExists[7308888]:bool[19] "temp"
          (7308893 'move' errorExists[7308888](7308890 '!=' error[5632816] nil[32]))
          if errorExists[7308888]
          {
            gotoErrorHandling handler[5632833] handler[5632833]
          }
          label handler[5632833]
          const-val shouldHandleError[5632835]:bool[19] "temp"
          val errorExists[7308896]:bool[19] "temp"
          (7308901 'move' errorExists[7308896](7308898 '!=' error[5632816] nil[32]))
          (5632837 'move' shouldHandleError[5632835] errorExists[7308896])
          if shouldHandleError[5632835]
          {
            {
              val call_tmp[5632844]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5632846 'move' call_tmp[5632844] error[5632816])
              val tmp[5632849]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5632851 'move' tmp[5632849](5632854 call chpl__initCopy[1499315] call_tmp[5632844] 0))
              val call_tmp[5632857]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5632859 'move' call_tmp[5632857] tmp[5632849])
              const-val call_tmp[5632862]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5632864]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5632867 call init[1499358] initTemp[5632864] call_tmp[5632857])
              (5632870 'move' call_tmp[5632862] initTemp[5632864])
              const-val chpl_anon_error[5632873]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5632875 'move' chpl_anon_error[5632873] call_tmp[5632862])
              {
              }
              (5632881 call chpl__autoDestroy[3930254] chpl_anon_error[5632873])
            }
          }
        }
        (5632884 call chpl__autoDestroy[3886751] f[3317816])
        gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
      }
      const-val default_arg_hints[3318223]:ioHintSet[168555] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
      val error[5508272]:Error[85511] "error variable" "temp"
      (5508274 'move' error[5508272] nil[32])
      const-val ret_tmp[5555745]:ioHintSet[168555] "temp"
      (3318225 call writer_default_hints[1839072] f[3317816] error[5508272] ret_tmp[5555745])
      (5555748 'move' default_arg_hints[3318223] ret_tmp[5555745])
      val errorExists[7301936]:bool[19] "temp"
      (7301941 'move' errorExists[7301936](7301938 '!=' error[5508272] nil[32]))
      if errorExists[7301936]
      {
        (5508278 '=' error_out[5508215] error[5508272])
        (5632887 call chpl__autoDestroy[3968601] default_arg_region[3318212])
        {
          val error[5632892]:Error[85511] "error variable" "temp"
          (5632894 'move' error[5632892] nil[32])
          (5632898 call close[169420] f[3317816] error[5632892])
          val errorExists[7308904]:bool[19] "temp"
          (7308909 'move' errorExists[7308904](7308906 '!=' error[5632892] nil[32]))
          if errorExists[7308904]
          {
            gotoErrorHandling handler[5632909] handler[5632909]
          }
          label handler[5632909]
          const-val shouldHandleError[5632911]:bool[19] "temp"
          val errorExists[7308912]:bool[19] "temp"
          (7308917 'move' errorExists[7308912](7308914 '!=' error[5632892] nil[32]))
          (5632913 'move' shouldHandleError[5632911] errorExists[7308912])
          if shouldHandleError[5632911]
          {
            {
              val call_tmp[5632920]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5632922 'move' call_tmp[5632920] error[5632892])
              val tmp[5632925]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5632927 'move' tmp[5632925](5632930 call chpl__initCopy[1499315] call_tmp[5632920] 0))
              val call_tmp[5632933]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5632935 'move' call_tmp[5632933] tmp[5632925])
              const-val call_tmp[5632938]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5632940]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5632943 call init[1499358] initTemp[5632940] call_tmp[5632933])
              (5632946 'move' call_tmp[5632938] initTemp[5632940])
              const-val chpl_anon_error[5632949]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5632951 'move' chpl_anon_error[5632949] call_tmp[5632938])
              {
              }
              (5632957 call chpl__autoDestroy[3930254] chpl_anon_error[5632949])
            }
          }
        }
        (5632960 call chpl__autoDestroy[3886751] f[3317816])
        gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
      }
      const-val default_arg_serializer[3318234]:defaultSerializer[171969] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
      val error[5508287]:Error[85511] "error variable" "temp"
      (5508289 'move' error[5508287] nil[32])
      const-val ret_tmp[5555769]:defaultSerializer[171969] "temp"
      (3318236 call writer_default_serializer[1839108] f[3317816] error[5508287] ret_tmp[5555769])
      (5555772 'move' default_arg_serializer[3318234] ret_tmp[5555769])
      val errorExists[7301944]:bool[19] "temp"
      (7301949 'move' errorExists[7301944](7301946 '!=' error[5508287] nil[32]))
      if errorExists[7301944]
      {
        (5508293 '=' error_out[5508215] error[5508287])
        (5632963 call chpl__autoDestroy[3886627] default_arg_hints[3318223])
        (5632966 call chpl__autoDestroy[3968601] default_arg_region[3318212])
        {
          val error[5632971]:Error[85511] "error variable" "temp"
          (5632973 'move' error[5632971] nil[32])
          (5632977 call close[169420] f[3317816] error[5632971])
          val errorExists[7308920]:bool[19] "temp"
          (7308925 'move' errorExists[7308920](7308922 '!=' error[5632971] nil[32]))
          if errorExists[7308920]
          {
            gotoErrorHandling handler[5632988] handler[5632988]
          }
          label handler[5632988]
          const-val shouldHandleError[5632990]:bool[19] "temp"
          val errorExists[7308928]:bool[19] "temp"
          (7308933 'move' errorExists[7308928](7308930 '!=' error[5632971] nil[32]))
          (5632992 'move' shouldHandleError[5632990] errorExists[7308928])
          if shouldHandleError[5632990]
          {
            {
              val call_tmp[5632999]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5633001 'move' call_tmp[5632999] error[5632971])
              val tmp[5633004]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5633006 'move' tmp[5633004](5633009 call chpl__initCopy[1499315] call_tmp[5632999] 0))
              val call_tmp[5633012]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5633014 'move' call_tmp[5633012] tmp[5633004])
              const-val call_tmp[5633017]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5633019]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5633022 call init[1499358] initTemp[5633019] call_tmp[5633012])
              (5633025 'move' call_tmp[5633017] initTemp[5633019])
              const-val chpl_anon_error[5633028]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5633030 'move' chpl_anon_error[5633028] call_tmp[5633017])
              {
              }
              (5633036 call chpl__autoDestroy[3930254] chpl_anon_error[5633028])
            }
          }
        }
        (5633039 call chpl__autoDestroy[3886751] f[3317816])
        gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
      }
      val error[5508302]:Error[85511] "error variable" "temp"
      (5508304 'move' error[5508302] nil[32])
      const-val ret_tmp[5555697]:fileWriter(false,defaultSerializer)[1838949] "temp"
      (3317881 call writer[1838832] f[3317816] default_arg_region[3318212] default_arg_hints[3318223] default_arg_serializer[3318234] error[5508302] ret_tmp[5555697])
      (5555700 'move' call_tmp[3317873] ret_tmp[5555697])
      val errorExists[7301952]:bool[19] "temp"
      (7301957 'move' errorExists[7301952](7301954 '!=' error[5508302] nil[32]))
      if errorExists[7301952]
      {
        (5508308 '=' error_out[5508215] error[5508302])
        (5633042 call chpl__autoDestroy[3886627] default_arg_hints[3318223])
        (5633045 call chpl__autoDestroy[3968601] default_arg_region[3318212])
        {
          val error[5633050]:Error[85511] "error variable" "temp"
          (5633052 'move' error[5633050] nil[32])
          (5633056 call close[169420] f[3317816] error[5633050])
          val errorExists[7308936]:bool[19] "temp"
          (7308941 'move' errorExists[7308936](7308938 '!=' error[5633050] nil[32]))
          if errorExists[7308936]
          {
            gotoErrorHandling handler[5633067] handler[5633067]
          }
          label handler[5633067]
          const-val shouldHandleError[5633069]:bool[19] "temp"
          val errorExists[7308944]:bool[19] "temp"
          (7308949 'move' errorExists[7308944](7308946 '!=' error[5633050] nil[32]))
          (5633071 'move' shouldHandleError[5633069] errorExists[7308944])
          if shouldHandleError[5633069]
          {
            {
              val call_tmp[5633078]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5633080 'move' call_tmp[5633078] error[5633050])
              val tmp[5633083]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5633085 'move' tmp[5633083](5633088 call chpl__initCopy[1499315] call_tmp[5633078] 0))
              val call_tmp[5633091]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5633093 'move' call_tmp[5633091] tmp[5633083])
              const-val call_tmp[5633096]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5633098]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5633101 call init[1499358] initTemp[5633098] call_tmp[5633091])
              (5633104 'move' call_tmp[5633096] initTemp[5633098])
              const-val chpl_anon_error[5633107]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5633109 'move' chpl_anon_error[5633107] call_tmp[5633096])
              {
              }
              (5633115 call chpl__autoDestroy[3930254] chpl_anon_error[5633107])
            }
          }
        }
        (5633118 call chpl__autoDestroy[3886751] f[3317816])
        gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
      }
      const-val w[3317884]:fileWriter(false,defaultSerializer)[1838949] "dead at end of block" "insert auto destroy"
      (3317886 'move' w[3317884] call_tmp[3317873])
      (5633124 call chpl__autoDestroy[3886627] default_arg_hints[3318223])
      (5633121 call chpl__autoDestroy[3968601] default_arg_region[3318212])
      {
        val error[5508340]:Error[85511] "error variable" "temp"
        (5508349 'move' error[5508340] nil[32])
        (3317939 call writef[3318270] w[3317884] fmt[3317708] _e0_args[3317710] error[5508340])
        val errorExists[7301960]:bool[19] "temp"
        (7301965 'move' errorExists[7301960](7301962 '!=' error[5508340] nil[32]))
        if errorExists[7301960]
        {
          gotoErrorHandling handler[5508341] handler[5508341]
        }
        label handler[5508341]
        const-val shouldHandleError[5508360]:bool[19] "temp"
        val errorExists[7301968]:bool[19] "temp"
        (7301973 'move' errorExists[7301968](7301970 '!=' error[5508340] nil[32]))
        (5508364 'move' shouldHandleError[5508360] errorExists[7301968])
        if shouldHandleError[5508360]
        {
          (5508356 '=' error_out[5508215] error[5508340])
          {
            val error[5633133]:Error[85511] "error variable" "temp"
            (5633135 'move' error[5633133] nil[32])
            (5633139 call close[1841632] w[3317884] error[5633133])
            val errorExists[7308952]:bool[19] "temp"
            (7308957 'move' errorExists[7308952](7308954 '!=' error[5633133] nil[32]))
            if errorExists[7308952]
            {
              gotoErrorHandling handler[5633150] handler[5633150]
            }
            label handler[5633150]
            const-val shouldHandleError[5633152]:bool[19] "temp"
            val errorExists[7308960]:bool[19] "temp"
            (7308965 'move' errorExists[7308960](7308962 '!=' error[5633133] nil[32]))
            (5633154 'move' shouldHandleError[5633152] errorExists[7308960])
            if shouldHandleError[5633152]
            {
              {
                val call_tmp[5633161]:Error[85511] "dead after last mention" "maybe param" "temp"
                (5633163 'move' call_tmp[5633161] error[5633133])
                val tmp[5633166]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
                (5633168 'move' tmp[5633166](5633171 call chpl__initCopy[1499315] call_tmp[5633161] 0))
                val call_tmp[5633174]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                (5633176 'move' call_tmp[5633174] tmp[5633166])
                const-val call_tmp[5633179]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
                const-val initTemp[5633181]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
                (5633184 call init[1499358] initTemp[5633181] call_tmp[5633174])
                (5633187 'move' call_tmp[5633179] initTemp[5633181])
                const-val chpl_anon_error[5633190]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
                (5633192 'move' chpl_anon_error[5633190] call_tmp[5633179])
                {
                }
                (5633198 call chpl__autoDestroy[3930254] chpl_anon_error[5633190])
              }
            }
          }
          (5633201 call chpl__autoDestroy[4023131] w[3317884])
          {
            val error[5633206]:Error[85511] "error variable" "temp"
            (5633208 'move' error[5633206] nil[32])
            (5633212 call close[169420] f[3317816] error[5633206])
            val errorExists[7308968]:bool[19] "temp"
            (7308973 'move' errorExists[7308968](7308970 '!=' error[5633206] nil[32]))
            if errorExists[7308968]
            {
              gotoErrorHandling handler[5633223] handler[5633223]
            }
            label handler[5633223]
            const-val shouldHandleError[5633225]:bool[19] "temp"
            val errorExists[7308976]:bool[19] "temp"
            (7308981 'move' errorExists[7308976](7308978 '!=' error[5633206] nil[32]))
            (5633227 'move' shouldHandleError[5633225] errorExists[7308976])
            if shouldHandleError[5633225]
            {
              {
                val call_tmp[5633234]:Error[85511] "dead after last mention" "maybe param" "temp"
                (5633236 'move' call_tmp[5633234] error[5633206])
                val tmp[5633239]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
                (5633241 'move' tmp[5633239](5633244 call chpl__initCopy[1499315] call_tmp[5633234] 0))
                val call_tmp[5633247]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                (5633249 'move' call_tmp[5633247] tmp[5633239])
                const-val call_tmp[5633252]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
                const-val initTemp[5633254]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
                (5633257 call init[1499358] initTemp[5633254] call_tmp[5633247])
                (5633260 'move' call_tmp[5633252] initTemp[5633254])
                const-val chpl_anon_error[5633263]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
                (5633265 'move' chpl_anon_error[5633263] call_tmp[5633252])
                {
                }
                (5633271 call chpl__autoDestroy[3930254] chpl_anon_error[5633263])
              }
            }
          }
          (5633274 call chpl__autoDestroy[3886751] f[3317816])
          gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
        }
      }
      {
        val error[5508368]:Error[85511] "error variable" "temp"
        (5508377 'move' error[5508368] nil[32])
        (3317950 call lock[1843210] w[3317884] error[5508368])
        val errorExists[7301976]:bool[19] "temp"
        (7301981 'move' errorExists[7301976](7301978 '!=' error[5508368] nil[32]))
        if errorExists[7301976]
        {
          gotoErrorHandling handler[5508369] handler[5508369]
        }
        label handler[5508369]
        const-val shouldHandleError[5508386]:bool[19] "temp"
        val errorExists[7301984]:bool[19] "temp"
        (7301989 'move' errorExists[7301984](7301986 '!=' error[5508368] nil[32]))
        (5508390 'move' shouldHandleError[5508386] errorExists[7301984])
        if shouldHandleError[5508386]
        {
          (5508383 call chpl_uncaught_error[87456] error[5508368])
        }
      }
      const-val call_tmp[3317954]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3317956 'move' call_tmp[3317954](3317962 call offset[1871304] w[3317884]))
      (3317964 call =[52229] offset[3317865] call_tmp[3317954])
      (3317974 call unlock[1843627] w[3317884])
      {
        val error[5508394]:Error[85511] "error variable" "temp"
        (5508403 'move' error[5508394] nil[32])
        (3317982 call close[1841632] w[3317884] error[5508394])
        val errorExists[7301992]:bool[19] "temp"
        (7301997 'move' errorExists[7301992](7301994 '!=' error[5508394] nil[32]))
        if errorExists[7301992]
        {
          gotoErrorHandling handler[5508395] handler[5508395]
        }
        label handler[5508395]
        const-val shouldHandleError[5508414]:bool[19] "temp"
        val errorExists[7302000]:bool[19] "temp"
        (7302005 'move' errorExists[7302000](7302002 '!=' error[5508394] nil[32]))
        (5508418 'move' shouldHandleError[5508414] errorExists[7302000])
        if shouldHandleError[5508414]
        {
          (5508410 '=' error_out[5508215] error[5508394])
          {
            val error[5633279]:Error[85511] "error variable" "temp"
            (5633281 'move' error[5633279] nil[32])
            (5633285 call close[1841632] w[3317884] error[5633279])
            val errorExists[7308984]:bool[19] "temp"
            (7308989 'move' errorExists[7308984](7308986 '!=' error[5633279] nil[32]))
            if errorExists[7308984]
            {
              gotoErrorHandling handler[5633296] handler[5633296]
            }
            label handler[5633296]
            const-val shouldHandleError[5633298]:bool[19] "temp"
            val errorExists[7308992]:bool[19] "temp"
            (7308997 'move' errorExists[7308992](7308994 '!=' error[5633279] nil[32]))
            (5633300 'move' shouldHandleError[5633298] errorExists[7308992])
            if shouldHandleError[5633298]
            {
              {
                val call_tmp[5633307]:Error[85511] "dead after last mention" "maybe param" "temp"
                (5633309 'move' call_tmp[5633307] error[5633279])
                val tmp[5633312]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
                (5633314 'move' tmp[5633312](5633317 call chpl__initCopy[1499315] call_tmp[5633307] 0))
                val call_tmp[5633320]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                (5633322 'move' call_tmp[5633320] tmp[5633312])
                const-val call_tmp[5633325]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
                const-val initTemp[5633327]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
                (5633330 call init[1499358] initTemp[5633327] call_tmp[5633320])
                (5633333 'move' call_tmp[5633325] initTemp[5633327])
                const-val chpl_anon_error[5633336]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
                (5633338 'move' chpl_anon_error[5633336] call_tmp[5633325])
                {
                }
                (5633344 call chpl__autoDestroy[3930254] chpl_anon_error[5633336])
              }
            }
          }
          (5633347 call chpl__autoDestroy[4023131] w[3317884])
          {
            val error[5633352]:Error[85511] "error variable" "temp"
            (5633354 'move' error[5633352] nil[32])
            (5633358 call close[169420] f[3317816] error[5633352])
            val errorExists[7309000]:bool[19] "temp"
            (7309005 'move' errorExists[7309000](7309002 '!=' error[5633352] nil[32]))
            if errorExists[7309000]
            {
              gotoErrorHandling handler[5633369] handler[5633369]
            }
            label handler[5633369]
            const-val shouldHandleError[5633371]:bool[19] "temp"
            val errorExists[7309008]:bool[19] "temp"
            (7309013 'move' errorExists[7309008](7309010 '!=' error[5633352] nil[32]))
            (5633373 'move' shouldHandleError[5633371] errorExists[7309008])
            if shouldHandleError[5633371]
            {
              {
                val call_tmp[5633380]:Error[85511] "dead after last mention" "maybe param" "temp"
                (5633382 'move' call_tmp[5633380] error[5633352])
                val tmp[5633385]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
                (5633387 'move' tmp[5633385](5633390 call chpl__initCopy[1499315] call_tmp[5633380] 0))
                val call_tmp[5633393]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                (5633395 'move' call_tmp[5633393] tmp[5633385])
                const-val call_tmp[5633398]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
                const-val initTemp[5633400]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
                (5633403 call init[1499358] initTemp[5633400] call_tmp[5633393])
                (5633406 'move' call_tmp[5633398] initTemp[5633400])
                const-val chpl_anon_error[5633409]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
                (5633411 'move' chpl_anon_error[5633409] call_tmp[5633398])
                {
                }
                (5633417 call chpl__autoDestroy[3930254] chpl_anon_error[5633409])
              }
            }
          }
          (5633420 call chpl__autoDestroy[3886751] f[3317816])
          gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
        }
      }
      {
        val error[5633426]:Error[85511] "error variable" "temp"
        (5633428 'move' error[5633426] nil[32])
        (5633432 call close[1841632] w[3317884] error[5633426])
        val errorExists[7309016]:bool[19] "temp"
        (7309021 'move' errorExists[7309016](7309018 '!=' error[5633426] nil[32]))
        if errorExists[7309016]
        {
          gotoErrorHandling handler[5633443] handler[5633443]
        }
        label handler[5633443]
        const-val shouldHandleError[5633445]:bool[19] "temp"
        val errorExists[7309024]:bool[19] "temp"
        (7309029 'move' errorExists[7309024](7309026 '!=' error[5633426] nil[32]))
        (5633447 'move' shouldHandleError[5633445] errorExists[7309024])
        if shouldHandleError[5633445]
        {
          {
            val call_tmp[5633454]:Error[85511] "dead after last mention" "maybe param" "temp"
            (5633456 'move' call_tmp[5633454] error[5633426])
            val tmp[5633459]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
            (5633461 'move' tmp[5633459](5633464 call chpl__initCopy[1499315] call_tmp[5633454] 0))
            val call_tmp[5633467]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (5633469 'move' call_tmp[5633467] tmp[5633459])
            const-val call_tmp[5633472]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[5633474]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
            (5633477 call init[1499358] initTemp[5633474] call_tmp[5633467])
            (5633480 'move' call_tmp[5633472] initTemp[5633474])
            const-val chpl_anon_error[5633483]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
            (5633485 'move' chpl_anon_error[5633483] call_tmp[5633472])
            {
            }
            (5633491 call chpl__autoDestroy[3930254] chpl_anon_error[5633483])
          }
        }
      }
      (5633494 call chpl__autoDestroy[4023131] w[3317884])
    }
    val call_tmp[3317986]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[3317993]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3317995 'move' call_tmp[3317993](3317998 call +[1471222] offset[3317865]))
    const-val call_tmp[3318001]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (3318003 'move' call_tmp[3318001](3318009 call safeCast[1471587] call_tmp[3317993]))
    val call_tmp[3318011]:c_ptr(uint(8))[1466369] "dead after last mention" "maybe param" "temp"
    val default_arg_clear[3329069]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val default_arg_alignment[3329078]:uint(64)[86] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (3329082 'move' default_arg_alignment[3329078](3329080 call allocate_default_alignment[1871828]))
    (3318013 'move' call_tmp[3318011](3318016 call allocate[1871406] call_tmp[3318001] 0 default_arg_alignment[3329078]))
    val buf[3318019]:c_ptr(uint(8))[1466369] "dead at end of block" "insert auto destroy"
    (3318021 'move' buf[3318019](3329086 call chpl__initCopy[1467227] call_tmp[3318011] 0))
    const-val call_tmp[3318025]:fileReader(false,defaultDeserializer)[1872106] "dead at end of block" "maybe param" "temp"
    const-val default_arg_region[3329097]:range(int(64),low,one)[1576928] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[5508423]:Error[85511] "error variable" "temp"
    (5508425 'move' error[5508423] nil[32])
    const-val ret_tmp[5556009]:range(int(64),low,one)[1576928] "temp"
    (3329099 call reader_default_region[1872194] f[3317816] error[5508423] ret_tmp[5556009])
    (5556012 'move' default_arg_region[3329097] ret_tmp[5556009])
    val errorExists[7302008]:bool[19] "temp"
    (7302013 'move' errorExists[7302008](7302010 '!=' error[5508423] nil[32]))
    if errorExists[7302008]
    {
      (5508429 '=' error_out[5508215] error[5508423])
      {
        val error[5633499]:Error[85511] "error variable" "temp"
        (5633501 'move' error[5633499] nil[32])
        (5633505 call close[169420] f[3317816] error[5633499])
        val errorExists[7309032]:bool[19] "temp"
        (7309037 'move' errorExists[7309032](7309034 '!=' error[5633499] nil[32]))
        if errorExists[7309032]
        {
          gotoErrorHandling handler[5633516] handler[5633516]
        }
        label handler[5633516]
        const-val shouldHandleError[5633518]:bool[19] "temp"
        val errorExists[7309040]:bool[19] "temp"
        (7309045 'move' errorExists[7309040](7309042 '!=' error[5633499] nil[32]))
        (5633520 'move' shouldHandleError[5633518] errorExists[7309040])
        if shouldHandleError[5633518]
        {
          {
            val call_tmp[5633527]:Error[85511] "dead after last mention" "maybe param" "temp"
            (5633529 'move' call_tmp[5633527] error[5633499])
            val tmp[5633532]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
            (5633534 'move' tmp[5633532](5633537 call chpl__initCopy[1499315] call_tmp[5633527] 0))
            val call_tmp[5633540]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (5633542 'move' call_tmp[5633540] tmp[5633532])
            const-val call_tmp[5633545]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[5633547]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
            (5633550 call init[1499358] initTemp[5633547] call_tmp[5633540])
            (5633553 'move' call_tmp[5633545] initTemp[5633547])
            const-val chpl_anon_error[5633556]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
            (5633558 'move' chpl_anon_error[5633556] call_tmp[5633545])
            {
            }
            (5633564 call chpl__autoDestroy[3930254] chpl_anon_error[5633556])
          }
        }
      }
      (5633567 call chpl__autoDestroy[3886751] f[3317816])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val default_arg_hints[3329108]:ioHintSet[168555] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[5508438]:Error[85511] "error variable" "temp"
    (5508440 'move' error[5508438] nil[32])
    const-val ret_tmp[5556033]:ioHintSet[168555] "temp"
    (3329110 call reader_default_hints[1872229] f[3317816] error[5508438] ret_tmp[5556033])
    (5556036 'move' default_arg_hints[3329108] ret_tmp[5556033])
    val errorExists[7302016]:bool[19] "temp"
    (7302021 'move' errorExists[7302016](7302018 '!=' error[5508438] nil[32]))
    if errorExists[7302016]
    {
      (5508444 '=' error_out[5508215] error[5508438])
      (5633570 call chpl__autoDestroy[3968601] default_arg_region[3329097])
      {
        val error[5633575]:Error[85511] "error variable" "temp"
        (5633577 'move' error[5633575] nil[32])
        (5633581 call close[169420] f[3317816] error[5633575])
        val errorExists[7309048]:bool[19] "temp"
        (7309053 'move' errorExists[7309048](7309050 '!=' error[5633575] nil[32]))
        if errorExists[7309048]
        {
          gotoErrorHandling handler[5633592] handler[5633592]
        }
        label handler[5633592]
        const-val shouldHandleError[5633594]:bool[19] "temp"
        val errorExists[7309056]:bool[19] "temp"
        (7309061 'move' errorExists[7309056](7309058 '!=' error[5633575] nil[32]))
        (5633596 'move' shouldHandleError[5633594] errorExists[7309056])
        if shouldHandleError[5633594]
        {
          {
            val call_tmp[5633603]:Error[85511] "dead after last mention" "maybe param" "temp"
            (5633605 'move' call_tmp[5633603] error[5633575])
            val tmp[5633608]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
            (5633610 'move' tmp[5633608](5633613 call chpl__initCopy[1499315] call_tmp[5633603] 0))
            val call_tmp[5633616]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (5633618 'move' call_tmp[5633616] tmp[5633608])
            const-val call_tmp[5633621]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[5633623]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
            (5633626 call init[1499358] initTemp[5633623] call_tmp[5633616])
            (5633629 'move' call_tmp[5633621] initTemp[5633623])
            const-val chpl_anon_error[5633632]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
            (5633634 'move' chpl_anon_error[5633632] call_tmp[5633621])
            {
            }
            (5633640 call chpl__autoDestroy[3930254] chpl_anon_error[5633632])
          }
        }
      }
      (5633643 call chpl__autoDestroy[3886751] f[3317816])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val default_arg_deserializer[3329119]:defaultDeserializer[173096] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    val error[5508453]:Error[85511] "error variable" "temp"
    (5508455 'move' error[5508453] nil[32])
    const-val ret_tmp[5556057]:defaultDeserializer[173096] "temp"
    (3329121 call reader_default_deserializer[1872265] f[3317816] error[5508453] ret_tmp[5556057])
    (5556060 'move' default_arg_deserializer[3329119] ret_tmp[5556057])
    val errorExists[7302024]:bool[19] "temp"
    (7302029 'move' errorExists[7302024](7302026 '!=' error[5508453] nil[32]))
    if errorExists[7302024]
    {
      (5508459 '=' error_out[5508215] error[5508453])
      (5633646 call chpl__autoDestroy[3886627] default_arg_hints[3329108])
      (5633649 call chpl__autoDestroy[3968601] default_arg_region[3329097])
      {
        val error[5633654]:Error[85511] "error variable" "temp"
        (5633656 'move' error[5633654] nil[32])
        (5633660 call close[169420] f[3317816] error[5633654])
        val errorExists[7309064]:bool[19] "temp"
        (7309069 'move' errorExists[7309064](7309066 '!=' error[5633654] nil[32]))
        if errorExists[7309064]
        {
          gotoErrorHandling handler[5633671] handler[5633671]
        }
        label handler[5633671]
        const-val shouldHandleError[5633673]:bool[19] "temp"
        val errorExists[7309072]:bool[19] "temp"
        (7309077 'move' errorExists[7309072](7309074 '!=' error[5633654] nil[32]))
        (5633675 'move' shouldHandleError[5633673] errorExists[7309072])
        if shouldHandleError[5633673]
        {
          {
            val call_tmp[5633682]:Error[85511] "dead after last mention" "maybe param" "temp"
            (5633684 'move' call_tmp[5633682] error[5633654])
            val tmp[5633687]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
            (5633689 'move' tmp[5633687](5633692 call chpl__initCopy[1499315] call_tmp[5633682] 0))
            val call_tmp[5633695]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (5633697 'move' call_tmp[5633695] tmp[5633687])
            const-val call_tmp[5633700]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[5633702]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
            (5633705 call init[1499358] initTemp[5633702] call_tmp[5633695])
            (5633708 'move' call_tmp[5633700] initTemp[5633702])
            const-val chpl_anon_error[5633711]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
            (5633713 'move' chpl_anon_error[5633711] call_tmp[5633700])
            {
            }
            (5633719 call chpl__autoDestroy[3930254] chpl_anon_error[5633711])
          }
        }
      }
      (5633722 call chpl__autoDestroy[3886751] f[3317816])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val error[5508468]:Error[85511] "error variable" "temp"
    (5508470 'move' error[5508468] nil[32])
    const-val ret_tmp[5555985]:fileReader(false,defaultDeserializer)[1872106] "temp"
    (3318033 call reader[1871989] f[3317816] default_arg_region[3329097] default_arg_hints[3329108] default_arg_deserializer[3329119] error[5508468] ret_tmp[5555985])
    (5555988 'move' call_tmp[3318025] ret_tmp[5555985])
    val errorExists[7302032]:bool[19] "temp"
    (7302037 'move' errorExists[7302032](7302034 '!=' error[5508468] nil[32]))
    if errorExists[7302032]
    {
      (5508474 '=' error_out[5508215] error[5508468])
      (5633725 call chpl__autoDestroy[3886627] default_arg_hints[3329108])
      (5633728 call chpl__autoDestroy[3968601] default_arg_region[3329097])
      {
        val error[5633733]:Error[85511] "error variable" "temp"
        (5633735 'move' error[5633733] nil[32])
        (5633739 call close[169420] f[3317816] error[5633733])
        val errorExists[7309080]:bool[19] "temp"
        (7309085 'move' errorExists[7309080](7309082 '!=' error[5633733] nil[32]))
        if errorExists[7309080]
        {
          gotoErrorHandling handler[5633750] handler[5633750]
        }
        label handler[5633750]
        const-val shouldHandleError[5633752]:bool[19] "temp"
        val errorExists[7309088]:bool[19] "temp"
        (7309093 'move' errorExists[7309088](7309090 '!=' error[5633733] nil[32]))
        (5633754 'move' shouldHandleError[5633752] errorExists[7309088])
        if shouldHandleError[5633752]
        {
          {
            val call_tmp[5633761]:Error[85511] "dead after last mention" "maybe param" "temp"
            (5633763 'move' call_tmp[5633761] error[5633733])
            val tmp[5633766]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
            (5633768 'move' tmp[5633766](5633771 call chpl__initCopy[1499315] call_tmp[5633761] 0))
            val call_tmp[5633774]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (5633776 'move' call_tmp[5633774] tmp[5633766])
            const-val call_tmp[5633779]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[5633781]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
            (5633784 call init[1499358] initTemp[5633781] call_tmp[5633774])
            (5633787 'move' call_tmp[5633779] initTemp[5633781])
            const-val chpl_anon_error[5633790]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
            (5633792 'move' chpl_anon_error[5633790] call_tmp[5633779])
            {
            }
            (5633798 call chpl__autoDestroy[3930254] chpl_anon_error[5633790])
          }
        }
      }
      (5633801 call chpl__autoDestroy[3886751] f[3317816])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val r[3318036]:fileReader(false,defaultDeserializer)[1872106] "dead at end of block" "insert auto destroy"
    (3318038 'move' r[3318036] call_tmp[3318025])
    (5633807 call chpl__autoDestroy[3886627] default_arg_hints[3329108])
    (5633804 call chpl__autoDestroy[3968601] default_arg_region[3329097])
    {
      val error[5508506]:Error[85511] "error variable" "temp"
      (5508515 'move' error[5508506] nil[32])
      const-val _return_tmp_[5468803]:int(64)[10] "dead after last mention" "temp"
      (5468805 'move' _return_tmp_[5468803](3318092 call readBinary[1875424] r[3318036] buf[3318019] offset[3317865] error[5508506]))
      val errorExists[7302040]:bool[19] "temp"
      (7302045 'move' errorExists[7302040](7302042 '!=' error[5508506] nil[32]))
      if errorExists[7302040]
      {
        gotoErrorHandling handler[5508507] handler[5508507]
      }
      label handler[5508507]
      const-val shouldHandleError[5508526]:bool[19] "temp"
      val errorExists[7302048]:bool[19] "temp"
      (7302053 'move' errorExists[7302048](7302050 '!=' error[5508506] nil[32]))
      (5508530 'move' shouldHandleError[5508526] errorExists[7302048])
      if shouldHandleError[5508526]
      {
        (5508522 '=' error_out[5508215] error[5508506])
        {
          val error[5633816]:Error[85511] "error variable" "temp"
          (5633818 'move' error[5633816] nil[32])
          (5633822 call close[1874827] r[3318036] error[5633816])
          val errorExists[7309096]:bool[19] "temp"
          (7309101 'move' errorExists[7309096](7309098 '!=' error[5633816] nil[32]))
          if errorExists[7309096]
          {
            gotoErrorHandling handler[5633833] handler[5633833]
          }
          label handler[5633833]
          const-val shouldHandleError[5633835]:bool[19] "temp"
          val errorExists[7309104]:bool[19] "temp"
          (7309109 'move' errorExists[7309104](7309106 '!=' error[5633816] nil[32]))
          (5633837 'move' shouldHandleError[5633835] errorExists[7309104])
          if shouldHandleError[5633835]
          {
            {
              val call_tmp[5633844]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5633846 'move' call_tmp[5633844] error[5633816])
              val tmp[5633849]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5633851 'move' tmp[5633849](5633854 call chpl__initCopy[1499315] call_tmp[5633844] 0))
              val call_tmp[5633857]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5633859 'move' call_tmp[5633857] tmp[5633849])
              const-val call_tmp[5633862]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5633864]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5633867 call init[1499358] initTemp[5633864] call_tmp[5633857])
              (5633870 'move' call_tmp[5633862] initTemp[5633864])
              const-val chpl_anon_error[5633873]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5633875 'move' chpl_anon_error[5633873] call_tmp[5633862])
              {
              }
              (5633881 call chpl__autoDestroy[3930254] chpl_anon_error[5633873])
            }
          }
        }
        (5633884 call chpl__autoDestroy[4023483] r[3318036])
        {
          val error[5633889]:Error[85511] "error variable" "temp"
          (5633891 'move' error[5633889] nil[32])
          (5633895 call close[169420] f[3317816] error[5633889])
          val errorExists[7309112]:bool[19] "temp"
          (7309117 'move' errorExists[7309112](7309114 '!=' error[5633889] nil[32]))
          if errorExists[7309112]
          {
            gotoErrorHandling handler[5633906] handler[5633906]
          }
          label handler[5633906]
          const-val shouldHandleError[5633908]:bool[19] "temp"
          val errorExists[7309120]:bool[19] "temp"
          (7309125 'move' errorExists[7309120](7309122 '!=' error[5633889] nil[32]))
          (5633910 'move' shouldHandleError[5633908] errorExists[7309120])
          if shouldHandleError[5633908]
          {
            {
              val call_tmp[5633917]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5633919 'move' call_tmp[5633917] error[5633889])
              val tmp[5633922]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5633924 'move' tmp[5633922](5633927 call chpl__initCopy[1499315] call_tmp[5633917] 0))
              val call_tmp[5633930]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5633932 'move' call_tmp[5633930] tmp[5633922])
              const-val call_tmp[5633935]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5633937]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5633940 call init[1499358] initTemp[5633937] call_tmp[5633930])
              (5633943 'move' call_tmp[5633935] initTemp[5633937])
              const-val chpl_anon_error[5633946]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5633948 'move' chpl_anon_error[5633946] call_tmp[5633935])
              {
              }
              (5633954 call chpl__autoDestroy[3930254] chpl_anon_error[5633946])
            }
          }
        }
        (5633957 call chpl__autoDestroy[3886751] f[3317816])
        gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
      }
    }
    {
      val error[5508534]:Error[85511] "error variable" "temp"
      (5508543 'move' error[5508534] nil[32])
      (3318105 call close[1874827] r[3318036] error[5508534])
      val errorExists[7302056]:bool[19] "temp"
      (7302061 'move' errorExists[7302056](7302058 '!=' error[5508534] nil[32]))
      if errorExists[7302056]
      {
        gotoErrorHandling handler[5508535] handler[5508535]
      }
      label handler[5508535]
      const-val shouldHandleError[5508554]:bool[19] "temp"
      val errorExists[7302064]:bool[19] "temp"
      (7302069 'move' errorExists[7302064](7302066 '!=' error[5508534] nil[32]))
      (5508558 'move' shouldHandleError[5508554] errorExists[7302064])
      if shouldHandleError[5508554]
      {
        (5508550 '=' error_out[5508215] error[5508534])
        {
          val error[5633962]:Error[85511] "error variable" "temp"
          (5633964 'move' error[5633962] nil[32])
          (5633968 call close[1874827] r[3318036] error[5633962])
          val errorExists[7309128]:bool[19] "temp"
          (7309133 'move' errorExists[7309128](7309130 '!=' error[5633962] nil[32]))
          if errorExists[7309128]
          {
            gotoErrorHandling handler[5633979] handler[5633979]
          }
          label handler[5633979]
          const-val shouldHandleError[5633981]:bool[19] "temp"
          val errorExists[7309136]:bool[19] "temp"
          (7309141 'move' errorExists[7309136](7309138 '!=' error[5633962] nil[32]))
          (5633983 'move' shouldHandleError[5633981] errorExists[7309136])
          if shouldHandleError[5633981]
          {
            {
              val call_tmp[5633990]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5633992 'move' call_tmp[5633990] error[5633962])
              val tmp[5633995]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5633997 'move' tmp[5633995](5634000 call chpl__initCopy[1499315] call_tmp[5633990] 0))
              val call_tmp[5634003]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5634005 'move' call_tmp[5634003] tmp[5633995])
              const-val call_tmp[5634008]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5634010]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5634013 call init[1499358] initTemp[5634010] call_tmp[5634003])
              (5634016 'move' call_tmp[5634008] initTemp[5634010])
              const-val chpl_anon_error[5634019]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5634021 'move' chpl_anon_error[5634019] call_tmp[5634008])
              {
              }
              (5634027 call chpl__autoDestroy[3930254] chpl_anon_error[5634019])
            }
          }
        }
        (5634030 call chpl__autoDestroy[4023483] r[3318036])
        {
          val error[5634035]:Error[85511] "error variable" "temp"
          (5634037 'move' error[5634035] nil[32])
          (5634041 call close[169420] f[3317816] error[5634035])
          val errorExists[7309144]:bool[19] "temp"
          (7309149 'move' errorExists[7309144](7309146 '!=' error[5634035] nil[32]))
          if errorExists[7309144]
          {
            gotoErrorHandling handler[5634052] handler[5634052]
          }
          label handler[5634052]
          const-val shouldHandleError[5634054]:bool[19] "temp"
          val errorExists[7309152]:bool[19] "temp"
          (7309157 'move' errorExists[7309152](7309154 '!=' error[5634035] nil[32]))
          (5634056 'move' shouldHandleError[5634054] errorExists[7309152])
          if shouldHandleError[5634054]
          {
            {
              val call_tmp[5634063]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5634065 'move' call_tmp[5634063] error[5634035])
              val tmp[5634068]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5634070 'move' tmp[5634068](5634073 call chpl__initCopy[1499315] call_tmp[5634063] 0))
              val call_tmp[5634076]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5634078 'move' call_tmp[5634076] tmp[5634068])
              const-val call_tmp[5634081]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5634083]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5634086 call init[1499358] initTemp[5634083] call_tmp[5634076])
              (5634089 'move' call_tmp[5634081] initTemp[5634083])
              const-val chpl_anon_error[5634092]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5634094 'move' chpl_anon_error[5634092] call_tmp[5634081])
              {
              }
              (5634100 call chpl__autoDestroy[3930254] chpl_anon_error[5634092])
            }
          }
        }
        (5634103 call chpl__autoDestroy[3886751] f[3317816])
        gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
      }
    }
    {
      val error[5508562]:Error[85511] "error variable" "temp"
      (5508571 'move' error[5508562] nil[32])
      (3318114 call close[169420] f[3317816] error[5508562])
      val errorExists[7302072]:bool[19] "temp"
      (7302077 'move' errorExists[7302072](7302074 '!=' error[5508562] nil[32]))
      if errorExists[7302072]
      {
        gotoErrorHandling handler[5508563] handler[5508563]
      }
      label handler[5508563]
      const-val shouldHandleError[5508582]:bool[19] "temp"
      val errorExists[7302080]:bool[19] "temp"
      (7302085 'move' errorExists[7302080](7302082 '!=' error[5508562] nil[32]))
      (5508586 'move' shouldHandleError[5508582] errorExists[7302080])
      if shouldHandleError[5508582]
      {
        (5508578 '=' error_out[5508215] error[5508562])
        {
          val error[5634108]:Error[85511] "error variable" "temp"
          (5634110 'move' error[5634108] nil[32])
          (5634114 call close[1874827] r[3318036] error[5634108])
          val errorExists[7309160]:bool[19] "temp"
          (7309165 'move' errorExists[7309160](7309162 '!=' error[5634108] nil[32]))
          if errorExists[7309160]
          {
            gotoErrorHandling handler[5634125] handler[5634125]
          }
          label handler[5634125]
          const-val shouldHandleError[5634127]:bool[19] "temp"
          val errorExists[7309168]:bool[19] "temp"
          (7309173 'move' errorExists[7309168](7309170 '!=' error[5634108] nil[32]))
          (5634129 'move' shouldHandleError[5634127] errorExists[7309168])
          if shouldHandleError[5634127]
          {
            {
              val call_tmp[5634136]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5634138 'move' call_tmp[5634136] error[5634108])
              val tmp[5634141]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5634143 'move' tmp[5634141](5634146 call chpl__initCopy[1499315] call_tmp[5634136] 0))
              val call_tmp[5634149]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5634151 'move' call_tmp[5634149] tmp[5634141])
              const-val call_tmp[5634154]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5634156]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5634159 call init[1499358] initTemp[5634156] call_tmp[5634149])
              (5634162 'move' call_tmp[5634154] initTemp[5634156])
              const-val chpl_anon_error[5634165]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5634167 'move' chpl_anon_error[5634165] call_tmp[5634154])
              {
              }
              (5634173 call chpl__autoDestroy[3930254] chpl_anon_error[5634165])
            }
          }
        }
        (5634176 call chpl__autoDestroy[4023483] r[3318036])
        {
          val error[5634181]:Error[85511] "error variable" "temp"
          (5634183 'move' error[5634181] nil[32])
          (5634187 call close[169420] f[3317816] error[5634181])
          val errorExists[7309176]:bool[19] "temp"
          (7309181 'move' errorExists[7309176](7309178 '!=' error[5634181] nil[32]))
          if errorExists[7309176]
          {
            gotoErrorHandling handler[5634198] handler[5634198]
          }
          label handler[5634198]
          const-val shouldHandleError[5634200]:bool[19] "temp"
          val errorExists[7309184]:bool[19] "temp"
          (7309189 'move' errorExists[7309184](7309186 '!=' error[5634181] nil[32]))
          (5634202 'move' shouldHandleError[5634200] errorExists[7309184])
          if shouldHandleError[5634200]
          {
            {
              val call_tmp[5634209]:Error[85511] "dead after last mention" "maybe param" "temp"
              (5634211 'move' call_tmp[5634209] error[5634181])
              val tmp[5634214]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
              (5634216 'move' tmp[5634214](5634219 call chpl__initCopy[1499315] call_tmp[5634209] 0))
              val call_tmp[5634222]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (5634224 'move' call_tmp[5634222] tmp[5634214])
              const-val call_tmp[5634227]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[5634229]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
              (5634232 call init[1499358] initTemp[5634229] call_tmp[5634222])
              (5634235 'move' call_tmp[5634227] initTemp[5634229])
              const-val chpl_anon_error[5634238]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
              (5634240 'move' chpl_anon_error[5634238] call_tmp[5634227])
              {
              }
              (5634246 call chpl__autoDestroy[3930254] chpl_anon_error[5634238])
            }
          }
        }
        (5634249 call chpl__autoDestroy[3886751] f[3317816])
        gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
      }
    }
    ref call_tmp[3318118]:_ref(uint(8))[1466089] "dead after last mention" "maybe param" "temp"
    (3318120 'move' call_tmp[3318118](3318123 call this[1474553] buf[3318019] offset[3317865]))
    const-val coerce_tmp[3329161]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3329167 'move' coerce_tmp[3329161](3329163 'cast' uint(8)[71] 0))
    (3318126 call =[52249] call_tmp[3318118] coerce_tmp[3329161])
    val call_tmp[3318132]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[3318138]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3318140 'move' call_tmp[3318138](3318143 call +[1471222] offset[3317865]))
    const-val call_tmp[3318146]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[5508591]:Error[85511] "error variable" "temp"
    (5508593 'move' error[5508591] nil[32])
    const-val ret_tmp[5548001]:string[244] "temp"
    (3318154 call createAdoptingBuffer[1539868] buf[3318019] offset[3317865] call_tmp[3318138] error[5508591] ret_tmp[5548001])
    (5548004 'move' call_tmp[3318146] ret_tmp[5548001])
    val errorExists[7302088]:bool[19] "temp"
    (7302093 'move' errorExists[7302088](7302090 '!=' error[5508591] nil[32]))
    if errorExists[7302088]
    {
      (5508597 '=' error_out[5508215] error[5508591])
      {
        val error[5634254]:Error[85511] "error variable" "temp"
        (5634256 'move' error[5634254] nil[32])
        (5634260 call close[1874827] r[3318036] error[5634254])
        val errorExists[7309192]:bool[19] "temp"
        (7309197 'move' errorExists[7309192](7309194 '!=' error[5634254] nil[32]))
        if errorExists[7309192]
        {
          gotoErrorHandling handler[5634271] handler[5634271]
        }
        label handler[5634271]
        const-val shouldHandleError[5634273]:bool[19] "temp"
        val errorExists[7309200]:bool[19] "temp"
        (7309205 'move' errorExists[7309200](7309202 '!=' error[5634254] nil[32]))
        (5634275 'move' shouldHandleError[5634273] errorExists[7309200])
        if shouldHandleError[5634273]
        {
          {
            val call_tmp[5634282]:Error[85511] "dead after last mention" "maybe param" "temp"
            (5634284 'move' call_tmp[5634282] error[5634254])
            val tmp[5634287]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
            (5634289 'move' tmp[5634287](5634292 call chpl__initCopy[1499315] call_tmp[5634282] 0))
            val call_tmp[5634295]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (5634297 'move' call_tmp[5634295] tmp[5634287])
            const-val call_tmp[5634300]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[5634302]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
            (5634305 call init[1499358] initTemp[5634302] call_tmp[5634295])
            (5634308 'move' call_tmp[5634300] initTemp[5634302])
            const-val chpl_anon_error[5634311]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
            (5634313 'move' chpl_anon_error[5634311] call_tmp[5634300])
            {
            }
            (5634319 call chpl__autoDestroy[3930254] chpl_anon_error[5634311])
          }
        }
      }
      (5634322 call chpl__autoDestroy[4023483] r[3318036])
      {
        val error[5634327]:Error[85511] "error variable" "temp"
        (5634329 'move' error[5634327] nil[32])
        (5634333 call close[169420] f[3317816] error[5634327])
        val errorExists[7309208]:bool[19] "temp"
        (7309213 'move' errorExists[7309208](7309210 '!=' error[5634327] nil[32]))
        if errorExists[7309208]
        {
          gotoErrorHandling handler[5634344] handler[5634344]
        }
        label handler[5634344]
        const-val shouldHandleError[5634346]:bool[19] "temp"
        val errorExists[7309216]:bool[19] "temp"
        (7309221 'move' errorExists[7309216](7309218 '!=' error[5634327] nil[32]))
        (5634348 'move' shouldHandleError[5634346] errorExists[7309216])
        if shouldHandleError[5634346]
        {
          {
            val call_tmp[5634355]:Error[85511] "dead after last mention" "maybe param" "temp"
            (5634357 'move' call_tmp[5634355] error[5634327])
            val tmp[5634360]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
            (5634362 'move' tmp[5634360](5634365 call chpl__initCopy[1499315] call_tmp[5634355] 0))
            val call_tmp[5634368]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (5634370 'move' call_tmp[5634368] tmp[5634360])
            const-val call_tmp[5634373]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[5634375]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
            (5634378 call init[1499358] initTemp[5634375] call_tmp[5634368])
            (5634381 'move' call_tmp[5634373] initTemp[5634375])
            const-val chpl_anon_error[5634384]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
            (5634386 'move' chpl_anon_error[5634384] call_tmp[5634373])
            {
            }
            (5634392 call chpl__autoDestroy[3930254] chpl_anon_error[5634384])
          }
        }
      }
      (5634395 call chpl__autoDestroy[3886751] f[3317816])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val call_tmp[3318158]:string[244] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (3329173 '=' ret[3317795] call_tmp[3318146])
    {
      val error[5634400]:Error[85511] "error variable" "temp"
      (5634402 'move' error[5634400] nil[32])
      (5634406 call close[1874827] r[3318036] error[5634400])
      val errorExists[7309224]:bool[19] "temp"
      (7309229 'move' errorExists[7309224](7309226 '!=' error[5634400] nil[32]))
      if errorExists[7309224]
      {
        gotoErrorHandling handler[5634417] handler[5634417]
      }
      label handler[5634417]
      const-val shouldHandleError[5634419]:bool[19] "temp"
      val errorExists[7309232]:bool[19] "temp"
      (7309237 'move' errorExists[7309232](7309234 '!=' error[5634400] nil[32]))
      (5634421 'move' shouldHandleError[5634419] errorExists[7309232])
      if shouldHandleError[5634419]
      {
        {
          val call_tmp[5634428]:Error[85511] "dead after last mention" "maybe param" "temp"
          (5634430 'move' call_tmp[5634428] error[5634400])
          val tmp[5634433]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
          (5634435 'move' tmp[5634433](5634438 call chpl__initCopy[1499315] call_tmp[5634428] 0))
          val call_tmp[5634441]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
          (5634443 'move' call_tmp[5634441] tmp[5634433])
          const-val call_tmp[5634446]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[5634448]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
          (5634451 call init[1499358] initTemp[5634448] call_tmp[5634441])
          (5634454 'move' call_tmp[5634446] initTemp[5634448])
          const-val chpl_anon_error[5634457]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
          (5634459 'move' chpl_anon_error[5634457] call_tmp[5634446])
          {
          }
          (5634465 call chpl__autoDestroy[3930254] chpl_anon_error[5634457])
        }
      }
    }
    (5634468 call chpl__autoDestroy[4023483] r[3318036])
    {
      val error[5634473]:Error[85511] "error variable" "temp"
      (5634475 'move' error[5634473] nil[32])
      (5634479 call close[169420] f[3317816] error[5634473])
      val errorExists[7309240]:bool[19] "temp"
      (7309245 'move' errorExists[7309240](7309242 '!=' error[5634473] nil[32]))
      if errorExists[7309240]
      {
        gotoErrorHandling handler[5634490] handler[5634490]
      }
      label handler[5634490]
      const-val shouldHandleError[5634492]:bool[19] "temp"
      val errorExists[7309248]:bool[19] "temp"
      (7309253 'move' errorExists[7309248](7309250 '!=' error[5634473] nil[32]))
      (5634494 'move' shouldHandleError[5634492] errorExists[7309248])
      if shouldHandleError[5634492]
      {
        {
          val call_tmp[5634501]:Error[85511] "dead after last mention" "maybe param" "temp"
          (5634503 'move' call_tmp[5634501] error[5634473])
          val tmp[5634506]:Error[85511] "dead at end of block" "insert auto destroy" "temp"
          (5634508 'move' tmp[5634506](5634511 call chpl__initCopy[1499315] call_tmp[5634501] 0))
          val call_tmp[5634514]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
          (5634516 'move' call_tmp[5634514] tmp[5634506])
          const-val call_tmp[5634519]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[5634521]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
          (5634524 call init[1499358] initTemp[5634521] call_tmp[5634514])
          (5634527 'move' call_tmp[5634519] initTemp[5634521])
          const-val chpl_anon_error[5634530]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
          (5634532 'move' chpl_anon_error[5634530] call_tmp[5634519])
          {
          }
          (5634538 call chpl__autoDestroy[3930254] chpl_anon_error[5634530])
        }
      }
    }
    (5634541 call chpl__autoDestroy[3886751] f[3317816])
    gotoReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    label _end_chpl_do_format[3318174]
    (5588920 '=' _retArg[5588918] ret[3317795])
    (5588922 return _void[46])
  }
  function boundsCheckHelp[200184](const  ref arg j[5491290]:_ref(int(64))[1465689], const in arg argTypeLen[5491292]:int(64)[10]) : void[4] "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[855521]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    {
      const-val call_tmp[855526]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3037745]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037749 'move' coerce_tmp[3037745](3037747 'deref' j[5491290]))
      (855529 'move' call_tmp[855526](200199 call >=[54627] coerce_tmp[3037745] argTypeLen[5491292]))
      const-val call_tmp[855531]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (855534 'move' call_tmp[855531] call_tmp[855526])
      if call_tmp[855531]
      {
        const-val coerce_tmp[3037752]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037756 'move' coerce_tmp[3037752](3037754 'deref' j[5491290]))
        (200190 call halt[1673640] "Index " coerce_tmp[3037752] " is accessed on argType of length " argTypeLen[5491292])
      }
    }
    (618738 return _void[46])
  }
}
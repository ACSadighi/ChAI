AST dump for ChapelHashing after pass denormalize.
Module use list: ChapelBase Reflection 

{
  function chpl__init_ChapelHashing[468540](const in arg _ln[9365481]:int(64)[10], in arg _fn[9365483]:int(32)[66]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelHashing_p[9308817]
    {
      goto _exit_chpl__init_ChapelHashing[9308854] _exit_chpl__init_ChapelHashing[9308854]
    }
    ref refIndentLevel[9308840]:int(32)[66] "temp"
    (9308838 call printModuleInit[386886] c"%*s\n" c"ChapelHashing" 13 _ln[9365481] _fn[9365483])
    (9308844 'move' refIndentLevel[9308840](9308843 'addr of' moduleInitLevel[386877]))
    (9308847 '+=' refIndentLevel[9308840] 1)
    (9308823 'move' chpl__init_ChapelHashing_p[9308817] 1)
    {
      (9305509 call chpl__init_ChapelBase[468297] _ln[9365481] _fn[9365483])
      (9305511 call chpl__init_Reflection[468315] _ln[9365481] _fn[9365483])
    }
    (9308850 '-=' refIndentLevel[9308840] 1)
    label _exit_chpl__init_ChapelHashing[9308854]
    (628301 return _void[46])
  }
  function chpl__defaultHashWrapperInner[3259938](const  ref arg x[3259940]:string[244], const in arg _ln[9401975]:int(64)[10], in arg _fn[9401977]:int(32)[66]) : uint(64)[86] "instantiated generic" "invisible fn" "resolved"
  {
    (7478110 call chpl_buildLocaleID[306518](7478106 '.v' x[3259940] locale_id[21317]) c_sublocid_any[135202] _ln[9401975] _fn[9401977])
    val locHash[7478113]:int(64)[10] "dead at end of block" "insert auto destroy"
    (7478115 'move' locHash[7478113] 5381)
    val ret[7478120]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7478122 '=' ret[7478120](7478124 '.v' x[3259940] buffLen[21281]))
    if(7478298 '<' ret[7478120] 0)
    {
      (7478304 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9401975] _fn[9401977])
    }
    val tmp[7478319]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7478332 '==' ret[7478120] 0)
    {
      (7478365 'move' tmp[7478319](7478362 'cast' int(64)[10](9531965 'cast' uint(64)[86](7478355 '-'(7478348 'cast' uint(64)[86] 0 _ln[9401975] _fn[9401977]) 1)) _ln[9401975] _fn[9401977]))
    }
    {
      (7478397 'move' tmp[7478319](9531969 'cast' int(64)[10](7478394 '+' 0(9531967 'cast' int(64)[10](7478380 '-' ret[7478120] 1)))))
    }
    const-val _ic__F1_high[9019445]:int(64)[10] "temp"
    (7478468 'move' _ic__F1_high[9019445] tmp[7478319])
    val i[7478475]:int(64)[10] "dead at end of block" "insert auto destroy"
    (7478477 'move' i[7478475] 0)
    (7478509 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[7478319] 1 0 tmp[7478319] 1 _ln[9401975] _fn[9401977])
    const-val tmp[7478553]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7478555 'move' tmp[7478553](7478557 '<' 5 0))
    CForLoop[7478516]
    {
      if tmp[7478553]
      {
        const-val call_tmp[7478562]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478564]:string[244] "temp"
        (7478567 call :[1496816] locHash[7478113] ret_tmp[7478564] _ln[9401975] _fn[9401977])
        (7478570 'move' call_tmp[7478562] ret_tmp[7478564])
        const-val call_tmp[7478573]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478575]:string[244] "temp"
        (7478578 call +[28065] "Cannot bitshift " call_tmp[7478562] ret_tmp[7478575] _ln[9401975] _fn[9401977])
        (7478582 'move' call_tmp[7478573] ret_tmp[7478575])
        const-val call_tmp[7478585]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478587]:string[244] "temp"
        (7478590 call +[28065] call_tmp[7478573] " by " ret_tmp[7478587] _ln[9401975] _fn[9401977])
        (7478594 'move' call_tmp[7478585] ret_tmp[7478587])
        const-val call_tmp[7478597]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478599]:string[244] "temp"
        (7478602 call :[1496816] 5 ret_tmp[7478599] _ln[9401975] _fn[9401977])
        (7478605 'move' call_tmp[7478597] ret_tmp[7478599])
        const-val call_tmp[7478608]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478610]:string[244] "temp"
        (7478613 call +[28065] call_tmp[7478585] call_tmp[7478597] ret_tmp[7478610] _ln[9401975] _fn[9401977])
        (7478617 'move' call_tmp[7478608] ret_tmp[7478610])
        const-val call_tmp[7478620]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478622]:string[244] "temp"
        (7478625 call +[28065] call_tmp[7478608] " because " ret_tmp[7478622] _ln[9401975] _fn[9401977])
        (7478629 'move' call_tmp[7478620] ret_tmp[7478622])
        const-val call_tmp[7478632]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478634]:string[244] "temp"
        (7478637 call :[1496816] 5 ret_tmp[7478634] _ln[9401975] _fn[9401977])
        (7478640 'move' call_tmp[7478632] ret_tmp[7478634])
        const-val call_tmp[7478643]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478645]:string[244] "temp"
        (7478648 call +[28065] call_tmp[7478620] call_tmp[7478632] ret_tmp[7478645] _ln[9401975] _fn[9401977])
        (7478652 'move' call_tmp[7478643] ret_tmp[7478645])
        const-val ret_tmp[7478657]:string[244] "temp"
        (7478660 call +[28065] call_tmp[7478643] " is less than 0" ret_tmp[7478657] _ln[9401975] _fn[9401977])
        const-val msg[7478667]:string[244] "dead at end of block" "insert auto destroy"
        (7478669 'move' msg[7478667] ret_tmp[7478657])
        ref i_x[7478672]:string[244] "temp"
        (7478674 'move' i_x[7478672](7478676 'set reference' call_tmp[7478643]))
        (7478679 call deinit[21354] i_x[7478672] _ln[9401975] _fn[9401977])
        ref i_x[7478681]:string[244] "temp"
        (7478683 'move' i_x[7478681](7478685 'set reference' call_tmp[7478632]))
        (7478688 call deinit[21354] i_x[7478681] _ln[9401975] _fn[9401977])
        ref i_x[7478690]:string[244] "temp"
        (7478692 'move' i_x[7478690](7478694 'set reference' call_tmp[7478620]))
        (7478697 call deinit[21354] i_x[7478690] _ln[9401975] _fn[9401977])
        ref i_x[7478699]:string[244] "temp"
        (7478701 'move' i_x[7478699](7478703 'set reference' call_tmp[7478608]))
        (7478706 call deinit[21354] i_x[7478699] _ln[9401975] _fn[9401977])
        ref i_x[7478708]:string[244] "temp"
        (7478710 'move' i_x[7478708](7478712 'set reference' call_tmp[7478597]))
        (7478715 call deinit[21354] i_x[7478708] _ln[9401975] _fn[9401977])
        ref i_x[7478717]:string[244] "temp"
        (7478719 'move' i_x[7478717](7478721 'set reference' call_tmp[7478585]))
        (7478724 call deinit[21354] i_x[7478717] _ln[9401975] _fn[9401977])
        ref i_x[7478726]:string[244] "temp"
        (7478728 'move' i_x[7478726](7478730 'set reference' call_tmp[7478573]))
        (7478733 call deinit[21354] i_x[7478726] _ln[9401975] _fn[9401977])
        ref i_x[7478735]:string[244] "temp"
        (7478737 'move' i_x[7478735](7478739 'set reference' call_tmp[7478562]))
        (7478742 call deinit[21354] i_x[7478735] _ln[9401975] _fn[9401977])
        (7478745 call boundsCheckHalt[404] msg[7478667] _ln[9401975] _fn[9401977])
        ref i_x[7478747]:string[244] "temp"
        (7478749 'move' i_x[7478747](7478751 'set reference' msg[7478667]))
        (7478754 call deinit[21354] i_x[7478747] _ln[9401975] _fn[9401977])
      }
      {
        if(7478761 '>=' 5 64)
        {
          const-val call_tmp[7478766]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478768]:string[244] "temp"
          (7478771 call :[1496816] locHash[7478113] ret_tmp[7478768] _ln[9401975] _fn[9401977])
          (7478774 'move' call_tmp[7478766] ret_tmp[7478768])
          const-val call_tmp[7478777]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478779]:string[244] "temp"
          (7478782 call +[28065] "Cannot bitshift " call_tmp[7478766] ret_tmp[7478779] _ln[9401975] _fn[9401977])
          (7478786 'move' call_tmp[7478777] ret_tmp[7478779])
          const-val call_tmp[7478789]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478791]:string[244] "temp"
          (7478794 call +[28065] call_tmp[7478777] " by " ret_tmp[7478791] _ln[9401975] _fn[9401977])
          (7478798 'move' call_tmp[7478789] ret_tmp[7478791])
          const-val call_tmp[7478801]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478803]:string[244] "temp"
          (7478806 call :[1496816] 5 ret_tmp[7478803] _ln[9401975] _fn[9401977])
          (7478809 'move' call_tmp[7478801] ret_tmp[7478803])
          const-val call_tmp[7478812]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478814]:string[244] "temp"
          (7478817 call +[28065] call_tmp[7478789] call_tmp[7478801] ret_tmp[7478814] _ln[9401975] _fn[9401977])
          (7478821 'move' call_tmp[7478812] ret_tmp[7478814])
          const-val call_tmp[7478824]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478826]:string[244] "temp"
          (7478829 call +[28065] call_tmp[7478812] " because " ret_tmp[7478826] _ln[9401975] _fn[9401977])
          (7478833 'move' call_tmp[7478824] ret_tmp[7478826])
          const-val call_tmp[7478836]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478838]:string[244] "temp"
          (7478841 call :[1496816] 5 ret_tmp[7478838] _ln[9401975] _fn[9401977])
          (7478844 'move' call_tmp[7478836] ret_tmp[7478838])
          const-val call_tmp[7478847]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478849]:string[244] "temp"
          (7478852 call +[28065] call_tmp[7478824] call_tmp[7478836] ret_tmp[7478849] _ln[9401975] _fn[9401977])
          (7478856 'move' call_tmp[7478847] ret_tmp[7478849])
          const-val call_tmp[7478859]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478861]:string[244] "temp"
          (7478864 call +[28065] call_tmp[7478847] " is >= the bitwidth of " ret_tmp[7478861] _ln[9401975] _fn[9401977])
          (7478868 'move' call_tmp[7478859] ret_tmp[7478861])
          const-val ret_tmp[7478873]:string[244] "temp"
          (7478876 call +[28065] call_tmp[7478859] "int(64)" ret_tmp[7478873] _ln[9401975] _fn[9401977])
          const-val msg[7478883]:string[244] "dead at end of block" "insert auto destroy"
          (7478885 'move' msg[7478883] ret_tmp[7478873])
          ref i_x[7478888]:string[244] "temp"
          (7478890 'move' i_x[7478888](7478892 'set reference' call_tmp[7478859]))
          (7478895 call deinit[21354] i_x[7478888] _ln[9401975] _fn[9401977])
          ref i_x[7478897]:string[244] "temp"
          (7478899 'move' i_x[7478897](7478901 'set reference' call_tmp[7478847]))
          (7478904 call deinit[21354] i_x[7478897] _ln[9401975] _fn[9401977])
          ref i_x[7478906]:string[244] "temp"
          (7478908 'move' i_x[7478906](7478910 'set reference' call_tmp[7478836]))
          (7478913 call deinit[21354] i_x[7478906] _ln[9401975] _fn[9401977])
          ref i_x[7478915]:string[244] "temp"
          (7478917 'move' i_x[7478915](7478919 'set reference' call_tmp[7478824]))
          (7478922 call deinit[21354] i_x[7478915] _ln[9401975] _fn[9401977])
          ref i_x[7478924]:string[244] "temp"
          (7478926 'move' i_x[7478924](7478928 'set reference' call_tmp[7478812]))
          (7478931 call deinit[21354] i_x[7478924] _ln[9401975] _fn[9401977])
          ref i_x[7478933]:string[244] "temp"
          (7478935 'move' i_x[7478933](7478937 'set reference' call_tmp[7478801]))
          (7478940 call deinit[21354] i_x[7478933] _ln[9401975] _fn[9401977])
          ref i_x[7478942]:string[244] "temp"
          (7478944 'move' i_x[7478942](7478946 'set reference' call_tmp[7478789]))
          (7478949 call deinit[21354] i_x[7478942] _ln[9401975] _fn[9401977])
          ref i_x[7478951]:string[244] "temp"
          (7478953 'move' i_x[7478951](7478955 'set reference' call_tmp[7478777]))
          (7478958 call deinit[21354] i_x[7478951] _ln[9401975] _fn[9401977])
          ref i_x[7478960]:string[244] "temp"
          (7478962 'move' i_x[7478960](7478964 'set reference' call_tmp[7478766]))
          (7478967 call deinit[21354] i_x[7478960] _ln[9401975] _fn[9401977])
          (7478970 call boundsCheckHalt[404] msg[7478883] _ln[9401975] _fn[9401977])
          ref i_x[7478972]:string[244] "temp"
          (7478974 'move' i_x[7478972](7478976 'set reference' msg[7478883]))
          (7478979 call deinit[21354] i_x[7478972] _ln[9401975] _fn[9401977])
        }
      }
      val coerce_tmp[7479011]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7479013 'move' coerce_tmp[7479011](7479015 '.v' x[3259940] buff[21299]))
      ref call_tmp[7479018]:uint(8)[71] "dead after last mention" "maybe param" "temp"
      (7479020 'move' call_tmp[7479018](7479022 'array_get' coerce_tmp[7479011] i[7478475]))
      (7479045 '=' locHash[7478113](7479042 '^'(9531973 'cast' int(64)[10](7479008 '+'(7479001 'cast' int(64)[10](9531971 'cast' uint(64)[86](7478994 '<<'(7478987 'cast' uint(64)[86] locHash[7478113] _ln[9401975] _fn[9401977]) 5)) _ln[9401975] _fn[9401977]) locHash[7478113]))(7479035 'cast' int(64)[10](7479029 'deref' call_tmp[7479018]) _ln[9401975] _fn[9401977])))
      {
        (7478525 '=' i[7478475] 0)
      }
      {
        (7478536 '<=' i[7478475] _ic__F1_high[9019445])
      }
      {
        (7478540 '+=' i[7478475] 1)
      }
    }
    const-val call_tmp[7479078]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7479080 'move' call_tmp[7479078](7479082 'cast' uint(64)[86] locHash[7478113] _ln[9401975] _fn[9401977]))
    (3260191 return call_tmp[7479078])
  }
  function chpl__defaultHashWrapper[3259874](const  ref arg x[3259876]:string[244], const in arg _ln[9401967]:int(64)[10], in arg _fn[9401969]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "resolved"
  {
    const-val call_tmp[3259888]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3259890 'move' call_tmp[3259888](3259893 call chpl__defaultHashWrapperInner[3259938] x[3259876] _ln[9401967] _fn[9401969]))
    const-val call_tmp[7443978]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7443980 'move' call_tmp[7443978](7443982 'cast' int(64)[10](7509485 '&' call_tmp[3259888](7509478 'cast' uint(64)[86] 9223372036854775807 _ln[9401967] _fn[9401969])) _ln[9401967] _fn[9401969]))
    (3259935 return call_tmp[7443978])
  }
}
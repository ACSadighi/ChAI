AST dump for ChapelContext after pass normalize.
Module use list: Errors OwnedObject 

{
  function chpl__init_ChapelContext[468612]() : void[4] "insert line file info" "module init"
  {
    (1001142 'resolution point' contextManager[314611])
    (1001144 'end of statement')
    (631826 return _void[46])
  }
  type Self[314609]
  {
    type contextReturnType[314613]
    function Self[314609].enterContext[314579](arg _mt[314585]:_MT[201], arg this[314582]:Self[314609] :
    Self[314609]) ref : _unknown[42] "ifc any return intent" "method" "no fn body"
    {
    }
    { scopeless type
      contextReturnType[314613]
    }
    function Self[314609].exitContext[314591](arg _mt[314604]:_MT[201], arg this[314594]:Self[314609] :
    Self[314609], in arg error[314601] :
    (314598 call _owned[238](?) borrowed Error?[467977])) : _unknown[42] "method" "no fn body"
    {
    }
  }
  function chpl__verifyTypeContext[314617](arg x[314619]:_any[141](?)) : _unknown[42] "no return value for void"
  {
    unknown call_tmp[941181] "expr temp" "maybe param" "maybe type" "temp"
    (941184 'move' call_tmp[941181](314653 'implements interface' x[314619] contextManager[314611]))
    unknown call_tmp[941186] "expr temp" "maybe param" "maybe type" "temp"
    (941189 'move' call_tmp[941186](314651 call == call_tmp[941181] 2))
    unknown call_tmp[941191] "expr temp" "maybe param" "maybe type" "temp"
    (941194 'move' call_tmp[941191](314657 call _cond_test call_tmp[941186]))
    if call_tmp[941191]
    {
      unknown call_tmp[941196] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (941199 'move' call_tmp[941196](314629 'typeof' x[314619]))
      unknown call_tmp[941201] "expr temp" "maybe param" "maybe type" "temp"
      (941204 'move' call_tmp[941201](314626 call : call_tmp[941196] string[244]))
      unknown call_tmp[941206] "expr temp" "maybe param" "maybe type" "temp"
      (941209 'move' call_tmp[941206](314624 call + call_tmp[941201] " is being used in a 'manage' statement "))
      unknown call_tmp[941211] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (941214 'move' call_tmp[941211](314644 'typeof' x[314619]))
      unknown call_tmp[941216] "expr temp" "maybe param" "maybe type" "temp"
      (941219 'move' call_tmp[941216](314641 call : call_tmp[941211] string[244]))
      unknown call_tmp[941221] "expr temp" "maybe param" "maybe type" "temp"
      (941224 'move' call_tmp[941221](314636 call + "via its 'enterContext' and 'exitContext' methods. However, " call_tmp[941216]))
      unknown call_tmp[941226] "expr temp" "maybe param" "maybe type" "temp"
      (941229 'move' call_tmp[941226](314634 call + call_tmp[941221] " does not implement contextManager. "))
      (314623 call compilerWarning call_tmp[941206] call_tmp[941226] "In the future, this will result in an error.")
    }
    (631824 return _void[46])
  }
  (397083 'used modules list'(314570 'import' Errors[88218].{Error})(314572 'use' OwnedObject[80948]))
}
AST dump for ChapelSyncvar after pass parseAndConvertUast.
Module use list: 

{
  (131975 'use' ChapelStandard)
  (131978 'use' AlignedTSupport)
  (131981 'use' MemConsistency)
  (131984 'use' SyncVarRuntimeSupport)
  (131987 'use' CTypes)
  (131993 'use'(131990 call . OS c"POSIX"))
  function isSupported[131995](arg t[131997]:_any[141](?)) param : _unknown[42] "private"
  {
    (132000 return(132001 call ||(132003 call ||(132005 call ||(132007 call ||(132009 call ||(132011 call ||(132013 call ||(132015 call ||(132017 call ||(132019 call ||(132021 call ||(132024 call isBoolType t)(132027 call isIntegralType t))(132030 call isRealType t))(132033 call isImagType t))(132036 call isComplexType t))(132039 call isEnumType t))(132042 call isClassType t))(132045 call isStringType t))(132048 call isBytesType t))(132051 call isRecordType t))(132054 call isRangeType t))(132056 call == t chpl_taskID_t)))
  }
  function ensureFEType[132062](arg t[132064]:_any[141](?)) : _unknown[42] "private"
  {
    if(132084 call _cond_test(132078 call ==(132081 call isSupported t) 0))
    {
      { scopeless
        (132068 call compilerError "sync types cannot contain type '"(132072 call : t string[244]) "'")
      }
    }
    if(132098 call _cond_test(132096 call isGenericType t))
    {
      { scopeless
        (132090 call compilerError "sync types cannot contain generic types")
      }
    }
  }
  { scopeless
    unknown useNativeSyncVar[132106] "config" "param" 1
    (132109 'end of statement')
  }
  function getSyncClassType[132110](arg valType[132112]:_any[141](?)) type : _unknown[42] "private"
  {
    if(132133 call _cond_test(132127 call && useNativeSyncVar(132131 call supportsNativeSyncVar valType)))
    {
      (132116 return(132117 'to unmanaged class from unknown'(132119 call _qthreads_synccls valType)))
    }
    {
      (132122 return(132123 'to unmanaged class from unknown'(132125 call _synccls valType)))
    }
  }
  function _moveSet[132139](ref arg dst[132143] :
  unknown t[132141], ref arg src[132147] :
  t) : _unknown[42] "inline" "private" "unsafe"
  {
    (132157 '=' dst src)
  }
  {
    (132154 call ==(132151 'lifetime_of' src)(132153 'lifetime_of' dst))
  }
  function _retEmptyVal[132163](arg t[132165]:_any[141](?)) : _unknown[42] "inline" "private" "unsafe"
  {
    { scopeless
      unknown ret[132169] "no auto destroy" "no init" t
      (132172 'end of statement')
    }
    (132174 call memset(132176 call c_addrOf ret) 0(132180 call c_sizeof t))
    (132182 return ret)
  }
  function chpl__readXX[132186](arg x[132188]:_any[141](?)) : _unknown[42]
  {
    (132191 return x)
  }
  function chpl__readXX[132195](arg x[132197]:_any[141](?)) : _unknown[42]
  {
    (132204 return(132209 call(132206 call . x c"read")))
  }
  where {
    (132200 call isAtomicType(132202 'typeof' x))
  }
  sync type _syncvar[132579](?) unknown valType[132217] "type variable" unknown wrapped[132220](132222 call getSyncClassType valType) unknown isOwned[132227] 1 bool function _syncvar[132579](?).init[132232](arg _mt[132238]:_MT[201], arg this[132234]:_syncvar[132579](?), arg valType[132236]:_any[141](?)) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (132242 call ensureFEType valType)
    (132244 call =(132247 call . this c"valType") valType)
    (132251 call =(132256 call . this c"wrapped")(132259 'new'(132263 call(132261 call getSyncClassType valType))))
  } function _syncvar[132579](?).init[132266](arg _mt[132276]:_MT[201], arg this[132268]:_syncvar[132579](?), arg valType[132270]:_any[141](?), in arg value[132273] :
  valType) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (132280 call ensureFEType valType)
    (132282 call =(132285 call . this c"valType") valType)
    (132289 call =(132292 call . this c"wrapped")(132295 'new'(132299 call(132297 call getSyncClassType valType) value)))
  } function _syncvar[132579](?).init[132303](arg _mt[132311]:_MT[201], arg this[132305]:_syncvar[132579](?), const  ref arg other[132308] :
  _syncvar) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (132314 call =(132317 call . this c"valType")(132321 call . other c"valType"))
    (132324 call =(132327 call . this c"wrapped")(132331 call . other c"wrapped"))
    (132334 call =(132337 call . this c"isOwned") 0)
  } function _syncvar[132579](?).init=[132343](arg _mt[132353]:_MT[201], arg this[132345]:_syncvar[132579](?), const  ref arg other[132350] :
  (132348 call _syncvar ?[227])) : _unknown[42] "deprecated" "method" "primary method"
  {
    if(132440 call _cond_test(132426 call ==(132429 call isCoercible(132431 call . other c"valType")(132436 call .(132435 'typeof' this) c"valType")) 0))
    {
      { scopeless
        unknown theseTypes[132358] "param"(132359 call +(132361 call +(132363 call +(132365 call + "'"(132368 call :(132371 'typeof' this) string[244])) "' from '")(132376 call :(132379 'typeof' other) string[244])) "'")
        (132383 'end of statement')
      }
      { scopeless
        unknown because[132385] "param"(132386 call +(132388 call +(132390 call +(132392 call + "because '"(132397 call :(132400 call . other c"valType") string[244])) "' is not coercible to '")(132407 call :(132411 call .(132410 'typeof' this) c"valType") string[244])) "'")
        (132417 'end of statement')
      }
      (132419 call compilerError "cannot initialize " theseTypes " " because)
    }
    (132448 call(132445 call . this c"init")(132451 call .(132450 'typeof' this) c"valType"))
    (132460 call(132457 call . this c"writeEF")(132465 call(132462 call . other c"readFE")))
  } function _syncvar[132579](?).init=[132468](arg _mt[132480]:_MT[201], arg this[132470]:_syncvar[132579](?), in arg other[132477] :
  (132474 call .(132473 'typeof' this) c"valType")) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (132487 call(132484 call . this c"init")(132490 call .(132489 'typeof' this) c"valType") other)
  } function _syncvar[132579](?).deinit[132496](arg _mt[132500]:_MT[201], arg this[132498]:_syncvar[132579](?)) : _unknown[42] "destructor" "dont disable remote value forwarding" "method" "primary method"
  {
    if(132512 call _cond_test(132508 call == isOwned 1))
    {
      { scopeless
        (132505 call chpl__delete wrapped)
      }
    }
  } function _syncvar[132579](?).deserialize[132519](arg _mt[132527]:_MT[201], arg this[132521]:_syncvar[132579](?), arg reader[132523]:_any[141](?), ref arg deserializer[132525]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (132531 call compilerError "sync variables cannot currently be read - use writeEF/writeFF instead")
  } function _syncvar[132579](?).deserializeFrom[132537](arg _mt[132545]:_MT[201], arg this[132539]:_syncvar[132579](?), arg reader[132541]:_any[141](?), ref arg deserializer[132543]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    { scopeless
      unknown ret[132549] this
      (132552 'end of statement')
    }
    (132554 call compilerError "sync variables cannot currently be read - use writeEF/writeFF instead")
    (132556 return ret)
  } function _syncvar[132579](?).serialize[132560](arg _mt[132568]:_MT[201], arg this[132562]:_syncvar[132579](?), arg writer[132564]:_any[141](?), ref arg serializer[132566]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (132572 call compilerError "sync variables cannot currently be written - apply readFE/readFF() to those variables first")
  } writeSerializable readDeserializable
  function _unknown[42].readFE[132581](arg _mt[132587]:_MT[201], arg this[132584] :
  _syncvar) : _unknown[42] "method"
  {
    (132590 return(132595 call(132592 call . wrapped c"readFE")))
  }
  function _unknown[42].readFF[132598](arg _mt[132604]:_MT[201], arg this[132601] :
  _syncvar) : _unknown[42] "method"
  {
    (132607 return(132614 call(132611 call . wrapped c"readFF")))
  }
  function _unknown[42].readXX[132617](arg _mt[132623]:_MT[201], arg this[132620] :
  _syncvar) : _unknown[42] "method" "@unstable"
  {
    (132630 call(132627 call . currentTask c"yieldExecution"))
    (132631 return(132638 call(132635 call . wrapped c"readXX")))
  }
  function _unknown[42].writeEF[132641](arg _mt[132651]:_MT[201], ref arg this[132644] :
  _syncvar, in arg val[132648] :
  valType) : _unknown[42] "method"
  {
    (132658 call(132655 call . wrapped c"writeEF") val)
  }
  function _unknown[42].writeFF[132662](arg _mt[132672]:_MT[201], ref arg this[132665] :
  _syncvar, in arg val[132669] :
  valType) : _unknown[42] "method" "@unstable"
  {
    (132681 call(132678 call . wrapped c"writeFF") val)
  }
  function _unknown[42].writeXF[132685](arg _mt[132695]:_MT[201], ref arg this[132688] :
  _syncvar, in arg val[132692] :
  valType) : _unknown[42] "method" "@unstable"
  {
    (132704 call(132701 call . wrapped c"writeXF") val)
  }
  function _unknown[42].reset[132708](arg _mt[132714]:_MT[201], ref arg this[132711] :
  _syncvar) : _unknown[42] "method" "@unstable"
  {
    (132723 call(132720 call . wrapped c"reset"))
  }
  function _unknown[42].isFull[132726](arg _mt[132732]:_MT[201], arg this[132729] :
  _syncvar) : _unknown[42] "method" "no parens" "@unstable"
  {
    (132735 return(132739 call . wrapped c"isFull"))
  }
  function =[132744](ref arg lhs[132750] :
  (132747 call _syncvar unknown t[132748]), arg rhs[132754] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (132765 call(132762 call .(132759 call . lhs c"wrapped") c"writeEF") rhs)
  }
  function :[132769](arg from[132771]:_any[141](?), arg t[132774] :
  _syncvar) : _unknown[42] "inline" "operator"
  {
    (132786 return(132787 'new'(132789 call _syncvar from)))
  }
  where {
    (132777 call ==(132780 'typeof' from)(132782 call . t c"valType"))
  }
  function :[132794](arg from[132797] :
  _syncvar, arg toType[132801] :
  _syncvar) : _unknown[42] "deprecated" "inline" "operator"
  {
    (132805 return(132806 'new'(132808 call _syncvar from)))
  }
  function +=[132812](ref arg lhs[132818] :
  (132815 call _syncvar unknown t[132816]), arg rhs[132822] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (132833 call(132830 call .(132827 call . lhs c"wrapped") c"writeEF")(132834 call +(132843 call(132840 call .(132837 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function -=[132847](ref arg lhs[132853] :
  (132850 call _syncvar unknown t[132851]), arg rhs[132857] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (132868 call(132865 call .(132862 call . lhs c"wrapped") c"writeEF")(132869 call -(132878 call(132875 call .(132872 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function *=[132882](ref arg lhs[132888] :
  (132885 call _syncvar unknown t[132886]), arg rhs[132892] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (132903 call(132900 call .(132897 call . lhs c"wrapped") c"writeEF")(132904 call *(132913 call(132910 call .(132907 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function /=[132917](ref arg lhs[132923] :
  (132920 call _syncvar unknown t[132921]), arg rhs[132927] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (132938 call(132935 call .(132932 call . lhs c"wrapped") c"writeEF")(132939 call /(132948 call(132945 call .(132942 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function %=[132952](ref arg lhs[132958] :
  (132955 call _syncvar unknown t[132956]), arg rhs[132962] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (132973 call(132970 call .(132967 call . lhs c"wrapped") c"writeEF")(132974 call %(132983 call(132980 call .(132977 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function **=[132987](ref arg lhs[132993] :
  (132990 call _syncvar unknown t[132991]), arg rhs[132997] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (133008 call(133005 call .(133002 call . lhs c"wrapped") c"writeEF")(133009 call **(133018 call(133015 call .(133012 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function &=[133022](ref arg lhs[133028] :
  (133025 call _syncvar unknown t[133026]), arg rhs[133032] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (133043 call(133040 call .(133037 call . lhs c"wrapped") c"writeEF")(133044 call &(133053 call(133050 call .(133047 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function |=[133057](ref arg lhs[133063] :
  (133060 call _syncvar unknown t[133061]), arg rhs[133067] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (133078 call(133075 call .(133072 call . lhs c"wrapped") c"writeEF")(133079 call |(133088 call(133085 call .(133082 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function ^=[133092](ref arg lhs[133098] :
  (133095 call _syncvar unknown t[133096]), arg rhs[133102] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (133113 call(133110 call .(133107 call . lhs c"wrapped") c"writeEF")(133114 call ^(133123 call(133120 call .(133117 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function >>=[133127](ref arg lhs[133133] :
  (133130 call _syncvar unknown t[133131]), arg rhs[133137] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (133148 call(133145 call .(133142 call . lhs c"wrapped") c"writeEF")(133149 call >>(133158 call(133155 call .(133152 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function <<=[133162](ref arg lhs[133168] :
  (133165 call _syncvar unknown t[133166]), arg rhs[133172] :
  t) : _unknown[42] "assignop" "deprecated" "operator"
  {
    (133183 call(133180 call .(133177 call . lhs c"wrapped") c"writeEF")(133184 call <<(133193 call(133190 call .(133187 call . lhs c"wrapped") c"readFE")) rhs))
  }
  function chpl__compilerGeneratedAssignSyncSingle[133197](ref arg lhs[133202] :
  (133200 call _syncvar ?[227]), ref arg rhs[133208] :
  (133206 call _syncvar ?[227])) : _unknown[42]
  {
    (133216 call(133213 call . lhs c"writeEF")(133221 call(133218 call . rhs c"readFE")))
  }
  function chpl__compilerGeneratedCopySync[133224](ref arg sv[133229] :
  (133227 call _syncvar ?[227])) : _unknown[42]
  {
    { scopeless
      unknown ret[133234](133241 call(133238 call . sv c"readFE"))(133236 'typeof' sv)
      (133243 'end of statement')
    }
    (133244 return ret)
  }
  function chpl__initCopy[133248](ref arg sv[133254] :
  (133251 call _syncvar unknown t[133252]), arg definedConst[133258] :
  bool) : _unknown[42] "deprecated" "init copy fn"
  {
    (133262 return(133267 call(133264 call . sv c"readFE")))
  }
  function chpl__autoCopy[133270](const  ref arg rhs[133273] :
  _syncvar, arg definedConst[133277] :
  bool) : _unknown[42] "auto copy fn"
  {
    (133281 return(133282 'new'(133284 call _syncvar rhs)))
  }
  function chpl__maybeAutoDestroyed[133288](arg x[133294] :
  (133291 call _syncvar unknown t[133292])) param : _unknown[42] "inline"
  {
    (133298 return 1)
  }
  function chpl__autoDestroy[133302](arg x[133307] :
  (133305 call _syncvar ?[227])) : _unknown[42] "inline"
  {
    if(133326 call _cond_test(133319 call ==(133322 call . x c"isOwned") 1))
    {
      { scopeless
        (133316 call chpl__delete(133313 call . x c"wrapped"))
      }
    }
  }
  function chpl__readXX[133333](const  ref arg x[133338] :
  (133336 call _syncvar ?[227])) : _unknown[42]
  {
    (133342 return(133347 call(133344 call . x c"readXX")))
  }
  function <=>[133350](ref arg lhs[133353] :
  _syncvar, ref arg rhs[133356]:_any[141](?)) : _unknown[42] "deprecated" "operator"
  {
    { scopeless
      const tmp[133360] "const"(133365 call(133362 call . lhs c"readFE"))
      (133367 'end of statement')
    }
    (133372 call(133369 call . lhs c"writeEF") rhs)
    (133374 call = rhs tmp)
  }
  function <=>[133380](ref arg lhs[133382]:_any[141](?), ref arg rhs[133385] :
  _syncvar) : _unknown[42] "deprecated" "operator"
  {
    { scopeless
      const tmp[133390] "const" lhs
      (133393 'end of statement')
    }
    (133394 call = lhs(133401 call(133398 call . rhs c"readFE")))
    (133406 call(133403 call . rhs c"writeEF") tmp)
  }
  function <=>[133410](ref arg lhs[133413] :
  _syncvar, ref arg rhs[133417] :
  _syncvar) : _unknown[42] "deprecated" "operator"
  {
    { scopeless
      const tmp[133422] "const"(133427 call(133424 call . lhs c"readFE"))
      (133429 'end of statement')
    }
    (133434 call(133431 call . lhs c"writeEF")(133439 call(133436 call . rhs c"readFE")))
    (133444 call(133441 call . rhs c"writeEF") tmp)
  }
  type _synccls[134100](?) unknown valType[133450] "type variable" unknown value[133453] "no auto destroy" valType unknown syncAux[133458] chpl_sync_aux_t function _synccls[134100](?).init[133462](arg _mt[133468]:_MT[201], arg this[133464]:_synccls[134100](?), arg valType[133466]:_any[141](?)) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (133471 call =(133474 call . this c"valType") valType)
    (133478 call =(133481 call . this c"value")(133485 call _retEmptyVal valType))
    (133491 call(133488 call . this c"chpl__initThisType"))
    (133493 call chpl_sync_initAux syncAux)
  } function _synccls[134100](?).init[133497](arg _mt[133507]:_MT[201], arg this[133499]:_synccls[134100](?), arg valType[133501]:_any[141](?), in arg value[133504] :
  valType) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (133510 call =(133513 call . this c"valType") valType)
    (133517 call =(133520 call . this c"value") value)
    (133528 call(133525 call . this c"chpl__initThisType"))
    (133530 call chpl_sync_initAux syncAux)
    (133533 call chpl_sync_lock syncAux)
    (133536 call chpl_sync_markAndSignalFull syncAux)
  } function _synccls[134100](?).deinit[133540](arg _mt[133544]:_MT[201], arg this[133542]:_synccls[134100](?)) : _unknown[42] "destructor" "dont disable remote value forwarding" "method" "primary method"
  {
    {
      const tmp[133567] "const" "temp"
      (133568 'move' tmp[133567](133565 'deref'(133564 '_wide_get_locale' this)))
      {
        if(133557 call _cond_test(133554 call . this c"isFull"))
        {
          (133551 call chpl__autoDestroy value)
        }
        (133562 call chpl_sync_destroyAux syncAux)
      }
      (133571 'elided on block' 0 tmp[133567])
    }
  } function _synccls[134100](?).readFE[133577](arg _mt[133581]:_MT[201], arg this[133579]:_synccls[134100](?)) : _unknown[42] "method" "primary method" "unsafe"
  {
    { scopeless
      unknown ret[133585] "no auto destroy" "no init" valType
      (133588 'end of statement')
    }
    {
      const tmp[133617] "const" "temp"
      (133618 'move' tmp[133617](133615 'deref'(133614 '_wide_get_locale' this)))
      {
        { scopeless
          unknown localRet[133592] "no auto destroy" "no init" valType
          (133595 'end of statement')
        }
        (133597 call chpl_rmem_consist_release)
        (133599 call chpl_sync_waitFullAndLock syncAux)
        (133602 call _moveSet localRet value)
        (133606 call chpl_sync_markAndSignalEmpty syncAux)
        (133609 call chpl_rmem_consist_acquire)
        (133611 call _moveSet ret localRet)
      }
      (133621 'elided on block' 0 tmp[133617])
    }
    (133625 return ret)
  } function _synccls[134100](?).readFF[133629](arg _mt[133633]:_MT[201], const arg this[133631]:_synccls[134100](?)) : _unknown[42] "method" "primary method" "unsafe"
  {
    if(133654 call _cond_test(133642 call ||(133644 call !(133647 call isConstCopyableType valType))(133649 call !(133652 call isConstAssignableType valType))))
    {
      (133638 call compilerError "readFF requires that the type contained in the sync variable be const-copyable and const-assignable")
    }
    { scopeless
      unknown ret[133659] "no auto destroy" "no init" valType
      (133662 'end of statement')
    }
    {
      const tmp[133688] "const" "temp"
      (133689 'move' tmp[133688](133686 'deref'(133685 '_wide_get_locale' this)))
      {
        (133666 call chpl_rmem_consist_release)
        (133668 call chpl_sync_waitFullAndLock syncAux)
        { scopeless
          unknown localRet[133671] "no auto destroy" value valType
          (133675 'end of statement')
        }
        (133677 call chpl_sync_markAndSignalFull syncAux)
        (133680 call chpl_rmem_consist_acquire)
        (133682 call _moveSet ret localRet)
      }
      (133692 'elided on block' 0 tmp[133688])
    }
    (133696 return ret)
  } function _synccls[134100](?).readXX[133700](arg _mt[133704]:_MT[201], const arg this[133702]:_synccls[134100](?)) : _unknown[42] "method" "primary method"
  {
    if(133732 call _cond_test(133713 call ||(133715 call ||(133717 call !(133720 call isDefaultInitializableType valType))(133722 call !(133725 call isConstCopyableType valType)))(133727 call !(133730 call isConstAssignableType valType))))
    {
      (133709 call compilerError "readXX requires that the type contained in the sync variable be default-initializable, const-copyable, and const-assignable")
    }
    { scopeless
      unknown ret[133737] valType
      (133740 'end of statement')
    }
    {
      const tmp[133786] "const" "temp"
      (133787 'move' tmp[133786](133784 'deref'(133783 '_wide_get_locale' this)))
      {
        (133744 call chpl_rmem_consist_release)
        (133746 call chpl_sync_lock syncAux)
        { scopeless
          unknown localRet[133749] valType
          (133752 'end of statement')
        }
        if(133770 call _cond_test(133759 call ||(133762 call isPODType valType)(133765 call chpl_sync_isFull(133767 call c_addrOf value) syncAux)))
        {
          (133754 call = localRet value)
        }
        {
        }
        (133775 call chpl_sync_unlock syncAux)
        (133778 call chpl_rmem_consist_acquire)
        (133779 call = ret localRet)
      }
      (133790 'elided on block' 0 tmp[133786])
    }
    (133794 return ret)
  } function _synccls[134100](?).writeEF[133798](arg _mt[133806]:_MT[201], arg this[133800]:_synccls[134100](?), in arg val[133803] :
  valType) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[133843] "const" "temp"
      (133844 'move' tmp[133843](133841 'deref'(133840 '_wide_get_locale' this)))
      {
        { scopeless
          unknown localVal[133818] "no auto destroy" "no init" valType
          (133821 'end of statement')
        }
        (133823 call _moveSet localVal val)
        (133827 call chpl_rmem_consist_release)
        (133829 call chpl_sync_waitEmptyAndLock syncAux)
        (133832 call _moveSet value localVal)
        (133836 call chpl_sync_markAndSignalFull syncAux)
        (133839 call chpl_rmem_consist_acquire)
      }
      (133847 'elided on block' 0 tmp[133843])
    }
  }
  {
    (133812 call <(133809 'lifetime_of' this)(133811 'lifetime_of' val))
  } function _synccls[134100](?).writeFF[133854](arg _mt[133862]:_MT[201], arg this[133856]:_synccls[134100](?), in arg val[133859] :
  valType) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[133913] "const" "temp"
      (133914 'move' tmp[133913](133911 'deref'(133910 '_wide_get_locale' this)))
      {
        { scopeless
          unknown localVal[133874] "no auto destroy" "no init" valType
          (133877 'end of statement')
        }
        (133879 call _moveSet localVal val)
        (133883 call chpl_rmem_consist_release)
        (133885 call chpl_sync_waitFullAndLock syncAux)
        if(133897 call _cond_test(133892 call chpl_sync_isFull(133894 call c_addrOf value) syncAux))
        {
          (133889 call chpl__autoDestroy value)
        }
        (133902 call _moveSet value localVal)
        (133906 call chpl_sync_markAndSignalFull syncAux)
        (133909 call chpl_rmem_consist_acquire)
      }
      (133917 'elided on block' 0 tmp[133913])
    }
  }
  {
    (133868 call <(133865 'lifetime_of' this)(133867 'lifetime_of' val))
  } function _synccls[134100](?).writeXF[133924](arg _mt[133932]:_MT[201], arg this[133926]:_synccls[134100](?), in arg val[133929] :
  valType) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[133983] "const" "temp"
      (133984 'move' tmp[133983](133981 'deref'(133980 '_wide_get_locale' this)))
      {
        { scopeless
          unknown localVal[133944] "no auto destroy" "no init" valType
          (133947 'end of statement')
        }
        (133949 call _moveSet localVal val)
        (133953 call chpl_rmem_consist_release)
        (133955 call chpl_sync_lock syncAux)
        if(133967 call _cond_test(133962 call chpl_sync_isFull(133964 call c_addrOf value) syncAux))
        {
          (133959 call chpl__autoDestroy value)
        }
        (133972 call _moveSet value localVal)
        (133976 call chpl_sync_markAndSignalFull syncAux)
        (133979 call chpl_rmem_consist_acquire)
      }
      (133987 'elided on block' 0 tmp[133983])
    }
  }
  {
    (133938 call <(133935 'lifetime_of' this)(133937 'lifetime_of' val))
  } function _synccls[134100](?).reset[133994](arg _mt[133998]:_MT[201], arg this[133996]:_synccls[134100](?)) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[134047] "const" "temp"
      (134048 'move' tmp[134047](134045 'deref'(134044 '_wide_get_locale' this)))
      {
        (134004 call chpl_rmem_consist_release)
        (134006 call chpl_sync_lock syncAux)
        if(134018 call _cond_test(134013 call chpl_sync_isFull(134015 call c_addrOf value) syncAux))
        {
          (134010 call chpl__autoDestroy value)
        }
        if(134035 call _cond_test(134033 call isPODType valType))
        {
          { scopeless
            unknown defaultValue[134024] valType
            (134027 'end of statement')
          }
          (134029 call _moveSet value defaultValue)
        }
        (134040 call chpl_sync_markAndSignalEmpty syncAux)
        (134043 call chpl_rmem_consist_acquire)
      }
      (134051 'elided on block' 0 tmp[134047])
    }
  } function _synccls[134100](?).isFull[134057](arg _mt[134061]:_MT[201], arg this[134059]:_synccls[134100](?)) : _unknown[42] "method" "primary method" "no parens"
  {
    { scopeless
      unknown b[134065] bool
      (134068 'end of statement')
    }
    {
      const tmp[134087] "const" "temp"
      (134088 'move' tmp[134087](134085 'deref'(134084 '_wide_get_locale' this)))
      {
        (134072 call chpl_rmem_consist_release)
        (134073 call = b(134077 call chpl_sync_isFull(134079 call c_addrOf value) syncAux))
        (134083 call chpl_rmem_consist_acquire)
      }
      (134091 'elided on block' 0 tmp[134087])
    }
    (134095 return b)
  }
  type _qthreads_synccls[134547](?) unknown valType[134104] "type variable" unknown alignedValue[134107] aligned_t function _qthreads_synccls[134547](?).init[134111](arg _mt[134117]:_MT[201], arg this[134113]:_qthreads_synccls[134547](?), arg valType[134115]:_any[141](?)) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (134120 call =(134123 call . this c"valType") valType)
    (134131 call(134128 call . this c"chpl__initThisType"))
    (134133 call qthread_purge_to alignedValue(134136 call defaultOfAlignedT valType))
  } function _qthreads_synccls[134547](?).init[134140](arg _mt[134150]:_MT[201], arg this[134142]:_qthreads_synccls[134547](?), arg valType[134144]:_any[141](?), in arg value[134147] :
  valType) : _unknown[42] "dont disable remote value forwarding" "method" "primary method"
  {
    (134157 call(134154 call . this c"init") valType)
    (134160 call qthread_writeEF alignedValue(134162 call : value aligned_t))
  } function _qthreads_synccls[134547](?).deinit[134168](arg _mt[134172]:_MT[201], arg this[134170]:_qthreads_synccls[134547](?)) : _unknown[42] "destructor" "dont disable remote value forwarding" "method" "primary method"
  {
    {
      const tmp[134183] "const" "temp"
      (134184 'move' tmp[134183](134181 'deref'(134180 '_wide_get_locale' this)))
      {
        (134178 call qthread_fill alignedValue)
      }
      (134187 'elided on block' 0 tmp[134183])
    }
  } function _qthreads_synccls[134547](?).readFE[134193](arg _mt[134197]:_MT[201], arg this[134195]:_qthreads_synccls[134547](?)) : _unknown[42] "method" "primary method"
  {
    { scopeless
      unknown ret[134201] valType
      (134204 'end of statement')
    }
    {
      const tmp[134230] "const" "temp"
      (134231 'move' tmp[134230](134228 'deref'(134227 '_wide_get_locale' this)))
      {
        { scopeless
          unknown alignedLocalRet[134208] aligned_t
          (134211 'end of statement')
        }
        (134213 call chpl_rmem_consist_release)
        (134215 call qthread_readFE alignedLocalRet alignedValue)
        (134219 call chpl_rmem_consist_acquire)
        (134220 call = ret(134223 call : alignedLocalRet valType))
      }
      (134234 'elided on block' 0 tmp[134230])
    }
    (134238 return ret)
  } function _qthreads_synccls[134547](?).readFF[134242](arg _mt[134246]:_MT[201], arg this[134244]:_qthreads_synccls[134547](?)) : _unknown[42] "method" "primary method"
  {
    { scopeless
      unknown ret[134250] valType
      (134253 'end of statement')
    }
    {
      const tmp[134279] "const" "temp"
      (134280 'move' tmp[134279](134277 'deref'(134276 '_wide_get_locale' this)))
      {
        { scopeless
          unknown alignedLocalRet[134257] aligned_t
          (134260 'end of statement')
        }
        (134262 call chpl_rmem_consist_release)
        (134264 call qthread_readFF alignedLocalRet alignedValue)
        (134268 call chpl_rmem_consist_acquire)
        (134269 call = ret(134272 call : alignedLocalRet valType))
      }
      (134283 'elided on block' 0 tmp[134279])
    }
    (134287 return ret)
  } function _qthreads_synccls[134547](?).readXX[134291](arg _mt[134295]:_MT[201], arg this[134293]:_qthreads_synccls[134547](?)) : _unknown[42] "method" "primary method"
  {
    { scopeless
      unknown ret[134299] valType
      (134302 'end of statement')
    }
    {
      const tmp[134328] "const" "temp"
      (134329 'move' tmp[134328](134326 'deref'(134325 '_wide_get_locale' this)))
      {
        { scopeless
          unknown alignedLocalRet[134306] aligned_t
          (134309 'end of statement')
        }
        (134311 call chpl_rmem_consist_release)
        (134313 call qthread_readXX alignedLocalRet alignedValue)
        (134317 call chpl_rmem_consist_acquire)
        (134318 call = ret(134321 call : alignedLocalRet valType))
      }
      (134332 'elided on block' 0 tmp[134328])
    }
    (134336 return ret)
  } function _qthreads_synccls[134547](?).writeEF[134340](arg _mt[134348]:_MT[201], arg this[134342]:_qthreads_synccls[134547](?), arg val[134345] :
  valType) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[134373] "const" "temp"
      (134374 'move' tmp[134373](134371 'deref'(134370 '_wide_get_locale' this)))
      {
        (134360 call chpl_rmem_consist_release)
        (134362 call qthread_writeEF alignedValue(134364 call : val aligned_t))
        (134369 call chpl_rmem_consist_acquire)
      }
      (134377 'elided on block' 0 tmp[134373])
    }
  }
  {
    (134354 call <(134351 'lifetime_of' this)(134353 'lifetime_of' val))
  } function _qthreads_synccls[134547](?).writeFF[134384](arg _mt[134392]:_MT[201], arg this[134386]:_qthreads_synccls[134547](?), arg val[134389] :
  valType) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[134417] "const" "temp"
      (134418 'move' tmp[134417](134415 'deref'(134414 '_wide_get_locale' this)))
      {
        (134404 call chpl_rmem_consist_release)
        (134406 call qthread_writeFF alignedValue(134408 call : val aligned_t))
        (134413 call chpl_rmem_consist_acquire)
      }
      (134421 'elided on block' 0 tmp[134417])
    }
  }
  {
    (134398 call <(134395 'lifetime_of' this)(134397 'lifetime_of' val))
  } function _qthreads_synccls[134547](?).writeXF[134428](arg _mt[134436]:_MT[201], arg this[134430]:_qthreads_synccls[134547](?), arg val[134433] :
  valType) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[134461] "const" "temp"
      (134462 'move' tmp[134461](134459 'deref'(134458 '_wide_get_locale' this)))
      {
        (134448 call chpl_rmem_consist_release)
        (134450 call qthread_writeF alignedValue(134452 call : val aligned_t))
        (134457 call chpl_rmem_consist_acquire)
      }
      (134465 'elided on block' 0 tmp[134461])
    }
  }
  {
    (134442 call <(134439 'lifetime_of' this)(134441 'lifetime_of' val))
  } function _qthreads_synccls[134547](?).reset[134472](arg _mt[134476]:_MT[201], arg this[134474]:_qthreads_synccls[134547](?)) : _unknown[42] "method" "primary method"
  {
    {
      const tmp[134494] "const" "temp"
      (134495 'move' tmp[134494](134492 'deref'(134491 '_wide_get_locale' this)))
      {
        (134482 call chpl_rmem_consist_release)
        (134484 call qthread_purge_to alignedValue(134487 call defaultOfAlignedT valType))
        (134490 call chpl_rmem_consist_acquire)
      }
      (134498 'elided on block' 0 tmp[134494])
    }
  } function _qthreads_synccls[134547](?).isFull[134504](arg _mt[134508]:_MT[201], arg this[134506]:_qthreads_synccls[134547](?)) : _unknown[42] "method" "primary method" "no parens"
  {
    { scopeless
      unknown b[134512] bool
      (134515 'end of statement')
    }
    {
      const tmp[134534] "const" "temp"
      (134535 'move' tmp[134534](134532 'deref'(134531 '_wide_get_locale' this)))
      {
        (134519 call chpl_rmem_consist_release)
        (134520 call = b(134523 call :(134526 call qthread_feb_status alignedValue) bool))
        (134530 call chpl_rmem_consist_acquire)
      }
      (134538 'elided on block' 0 tmp[134534])
    }
    (134542 return b)
  }
}
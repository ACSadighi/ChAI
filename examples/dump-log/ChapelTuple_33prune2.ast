AST dump for ChapelTuple after pass prune2.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[468411]() : void[4] "insert line file info" "module init" "resolved"
  {
    (602485 return _void[46])
  }
  function 13*int(64)[1922385].this[1924675](ref arg this[1924681]:13*int(64)[1922385], const in arg i[1924683]:int(64)[10]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7319683]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319685 'move' tmp[7319683](7319687 '<' i[1924683] 0))
    val tmp[1924752]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7319683]
    {
      (1924770 'move' tmp[1924752] 1)
    }
    {
      const-val call_tmp[7315398]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315400 'move' call_tmp[7315398](7315402 '>' i[1924683] 12))
      (1924807 'move' tmp[1924752] call_tmp[7315398])
    }
    if tmp[1924752]
    {
      (1924823 call halt[1925218] "tuple access out of bounds: " i[1924683])
    }
    ref call_tmp[1924828]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (1924830 'move' call_tmp[1924828](1924832 'get svec member' this[1924681] i[1924683]))
    (1924839 return call_tmp[1924828])
  }
  function 4*range(int(64),both,one)[1961821].this[1989689](ref arg this[1989695]:4*range(int(64),both,one)[1961821], const in arg i[1989697]:int(64)[10]) ref : _ref(range(int(64),both,one))[1610048] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7319833]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319835 'move' tmp[7319833](7319837 '<' i[1989697] 0))
    val tmp[1989766]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7319833]
    {
      (1989784 'move' tmp[1989766] 1)
    }
    {
      const-val call_tmp[7315543]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315545 'move' call_tmp[7315543](7315547 '>' i[1989697] 3))
      (1989821 'move' tmp[1989766] call_tmp[7315543])
    }
    if tmp[1989766]
    {
      (1989837 call halt[1925218] "tuple access out of bounds: " i[1989697])
    }
    ref call_tmp[1989842]:range(int(64),both,one)[1610039] "dead after last mention" "maybe param" "temp"
    (1989844 'move' call_tmp[1989842](1989846 'get svec member' this[1989695] i[1989697]))
    (1989853 return call_tmp[1989842])
  }
  function 4*int(64)[1960494].this[2040976](ref arg this[2040982]:4*int(64)[1960494], const in arg i[2040984]:int(64)[10]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7319873]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319875 'move' tmp[7319873](7319877 '<' i[2040984] 0))
    val tmp[2041053]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7319873]
    {
      (2041071 'move' tmp[2041053] 1)
    }
    {
      const-val call_tmp[7315603]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315605 'move' call_tmp[7315603](7315607 '>' i[2040984] 3))
      (2041108 'move' tmp[2041053] call_tmp[7315603])
    }
    if tmp[2041053]
    {
      (2041124 call halt[1925218] "tuple access out of bounds: " i[2040984])
    }
    ref call_tmp[2041129]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (2041131 'move' call_tmp[2041129](2041133 'get svec member' this[2040982] i[2040984]))
    (2041140 return call_tmp[2041129])
  }
  function 1*range(int(64),both,one)[1760857].this[2134471](ref arg this[2134477]:1*range(int(64),both,one)[1760857], const in arg i[2134479]:int(64)[10]) ref : _ref(range(int(64),both,one))[1610048] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7319948]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319950 'move' tmp[7319948](7319952 '<' i[2134479] 0))
    val tmp[2134548]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7319948]
    {
      (2134566 'move' tmp[2134548] 1)
    }
    {
      const-val call_tmp[7315738]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315740 'move' call_tmp[7315738](7315742 '>' i[2134479] 0))
      (2134603 'move' tmp[2134548] call_tmp[7315738])
    }
    if tmp[2134548]
    {
      (2134619 call halt[1925218] "tuple access out of bounds: " i[2134479])
    }
    ref call_tmp[2134624]:range(int(64),both,one)[1610039] "dead after last mention" "maybe param" "temp"
    (2134626 'move' call_tmp[2134624](2134628 'get svec member' this[2134477] i[2134479]))
    (2134635 return call_tmp[2134624])
  }
  function 1*int(64)[1769982].this[2196126](ref arg this[2196132]:1*int(64)[1769982], const in arg i[2196134]:int(64)[10]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7319963]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319965 'move' tmp[7319963](7319967 '<' i[2196134] 0))
    val tmp[2196203]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7319963]
    {
      (2196221 'move' tmp[2196203] 1)
    }
    {
      const-val call_tmp[7315783]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315785 'move' call_tmp[7315783](7315787 '>' i[2196134] 0))
      (2196258 'move' tmp[2196203] call_tmp[7315783])
    }
    if tmp[2196203]
    {
      (2196274 call halt[1925218] "tuple access out of bounds: " i[2196134])
    }
    ref call_tmp[2196279]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (2196281 'move' call_tmp[2196279](2196283 'get svec member' this[2196132] i[2196134]))
    (2196290 return call_tmp[2196279])
  }
  function 2*range(int(64),both,one)[2287631].this[2320866](ref arg this[2320872]:2*range(int(64),both,one)[2287631], const in arg i[2320874]:int(64)[10]) ref : _ref(range(int(64),both,one))[1610048] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320023]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320025 'move' tmp[7320023](7320027 '<' i[2320874] 0))
    val tmp[2320943]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320023]
    {
      (2320961 'move' tmp[2320943] 1)
    }
    {
      const-val call_tmp[7315933]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315935 'move' call_tmp[7315933](7315937 '>' i[2320874] 1))
      (2320998 'move' tmp[2320943] call_tmp[7315933])
    }
    if tmp[2320943]
    {
      (2321014 call halt[1925218] "tuple access out of bounds: " i[2320874])
    }
    ref call_tmp[2321019]:range(int(64),both,one)[1610039] "dead after last mention" "maybe param" "temp"
    (2321021 'move' call_tmp[2321019](2321023 'get svec member' this[2320872] i[2320874]))
    (2321030 return call_tmp[2321019])
  }
  function 2*int(64)[1802073].this[2335907](ref arg this[2335913]:2*int(64)[1802073], const in arg i[2335915]:int(64)[10]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320038]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320040 'move' tmp[7320038](7320042 '<' i[2335915] 0))
    val tmp[2335984]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320038]
    {
      (2336002 'move' tmp[2335984] 1)
    }
    {
      const-val call_tmp[7315948]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315950 'move' call_tmp[7315948](7315952 '>' i[2335915] 1))
      (2336039 'move' tmp[2335984] call_tmp[7315948])
    }
    if tmp[2335984]
    {
      (2336055 call halt[1925218] "tuple access out of bounds: " i[2335915])
    }
    ref call_tmp[2336060]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (2336062 'move' call_tmp[2336060](2336064 'get svec member' this[2335913] i[2335915]))
    (2336071 return call_tmp[2336060])
  }
  function 3*range(int(64),both,one)[2436605].this[2471628](ref arg this[2471634]:3*range(int(64),both,one)[2436605], const in arg i[2471636]:int(64)[10]) ref : _ref(range(int(64),both,one))[1610048] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320098]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320100 'move' tmp[7320098](7320102 '<' i[2471636] 0))
    val tmp[2471705]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320098]
    {
      (2471723 'move' tmp[2471705] 1)
    }
    {
      const-val call_tmp[7316098]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7316100 'move' call_tmp[7316098](7316102 '>' i[2471636] 2))
      (2471760 'move' tmp[2471705] call_tmp[7316098])
    }
    if tmp[2471705]
    {
      (2471776 call halt[1925218] "tuple access out of bounds: " i[2471636])
    }
    ref call_tmp[2471781]:range(int(64),both,one)[1610039] "dead after last mention" "maybe param" "temp"
    (2471783 'move' call_tmp[2471781](2471785 'get svec member' this[2471634] i[2471636]))
    (2471792 return call_tmp[2471781])
  }
  function 3*int(64)[1995504].this[2487207](ref arg this[2487213]:3*int(64)[1995504], const in arg i[2487215]:int(64)[10]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320113]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320115 'move' tmp[7320113](7320117 '<' i[2487215] 0))
    val tmp[2487284]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320113]
    {
      (2487302 'move' tmp[2487284] 1)
    }
    {
      const-val call_tmp[7316113]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7316115 'move' call_tmp[7316113](7316117 '>' i[2487215] 2))
      (2487339 'move' tmp[2487284] call_tmp[7316113])
    }
    if tmp[2487284]
    {
      (2487355 call halt[1925218] "tuple access out of bounds: " i[2487215])
    }
    ref call_tmp[2487360]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (2487362 'move' call_tmp[2487360](2487364 'get svec member' this[2487213] i[2487215]))
    (2487371 return call_tmp[2487360])
  }
  function 5*range(int(64),both,one)[2660739].this[2698713](ref arg this[2698719]:5*range(int(64),both,one)[2660739], const in arg i[2698721]:int(64)[10]) ref : _ref(range(int(64),both,one))[1610048] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320173]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320175 'move' tmp[7320173](7320177 '<' i[2698721] 0))
    val tmp[2698790]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320173]
    {
      (2698808 'move' tmp[2698790] 1)
    }
    {
      const-val call_tmp[7316323]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7316325 'move' call_tmp[7316323](7316327 '>' i[2698721] 4))
      (2698845 'move' tmp[2698790] call_tmp[7316323])
    }
    if tmp[2698790]
    {
      (2698861 call halt[1925218] "tuple access out of bounds: " i[2698721])
    }
    ref call_tmp[2698866]:range(int(64),both,one)[1610039] "dead after last mention" "maybe param" "temp"
    (2698868 'move' call_tmp[2698866](2698870 'get svec member' this[2698719] i[2698721]))
    (2698877 return call_tmp[2698866])
  }
  function 5*int(64)[2664814].this[2715368](ref arg this[2715374]:5*int(64)[2664814], const in arg i[2715376]:int(64)[10]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320188]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320190 'move' tmp[7320188](7320192 '<' i[2715376] 0))
    val tmp[2715445]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320188]
    {
      (2715463 'move' tmp[2715445] 1)
    }
    {
      const-val call_tmp[7316338]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7316340 'move' call_tmp[7316338](7316342 '>' i[2715376] 4))
      (2715500 'move' tmp[2715445] call_tmp[7316338])
    }
    if tmp[2715445]
    {
      (2715516 call halt[1925218] "tuple access out of bounds: " i[2715376])
    }
    ref call_tmp[2715521]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (2715523 'move' call_tmp[2715521](2715525 'get svec member' this[2715374] i[2715376]))
    (2715532 return call_tmp[2715521])
  }
  function 6*range(int(64),both,one)[2830019].this[2870530](ref arg this[2870536]:6*range(int(64),both,one)[2830019], const in arg i[2870538]:int(64)[10]) ref : _ref(range(int(64),both,one))[1610048] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320248]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320250 'move' tmp[7320248](7320252 '<' i[2870538] 0))
    val tmp[2870607]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320248]
    {
      (2870625 'move' tmp[2870607] 1)
    }
    {
      const-val call_tmp[7316488]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7316490 'move' call_tmp[7316488](7316492 '>' i[2870538] 5))
      (2870662 'move' tmp[2870607] call_tmp[7316488])
    }
    if tmp[2870607]
    {
      (2870678 call halt[1925218] "tuple access out of bounds: " i[2870538])
    }
    ref call_tmp[2870683]:range(int(64),both,one)[1610039] "dead after last mention" "maybe param" "temp"
    (2870685 'move' call_tmp[2870683](2870687 'get svec member' this[2870536] i[2870538]))
    (2870694 return call_tmp[2870683])
  }
  function 6*int(64)[2835600].this[2887723](ref arg this[2887729]:6*int(64)[2835600], const in arg i[2887731]:int(64)[10]) ref : _ref(int(64))[1465689] "instantiated generic" "invisible fn" "method" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val tmp[7320263]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320265 'move' tmp[7320263](7320267 '<' i[2887731] 0))
    val tmp[2887800]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320263]
    {
      (2887818 'move' tmp[2887800] 1)
    }
    {
      const-val call_tmp[7316503]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7316505 'move' call_tmp[7316503](7316507 '>' i[2887731] 5))
      (2887855 'move' tmp[2887800] call_tmp[7316503])
    }
    if tmp[2887800]
    {
      (2887871 call halt[1925218] "tuple access out of bounds: " i[2887731])
    }
    ref call_tmp[2887876]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (2887878 'move' call_tmp[2887876](2887880 'get svec member' this[2887729] i[2887731]))
    (2887887 return call_tmp[2887876])
  }
  function 1*range(int(64),both,one)[1760857].indices[4369212](const  ref arg this[4369218]:1*range(int(64),both,one)[1760857], ref arg _retArg[5597557]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[4369243]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5547352]:range(int(64),both,one)[1610039] "temp"
    (4369248 call chpl_build_bounded_range[1509041] ret_tmp[5547352])
    (5547355 'move' call_tmp[4369243] ret_tmp[5547352])
    (5597559 '=' _retArg[5597557] call_tmp[4369243])
    (5597561 return _void[46])
  }
  function 4*range(int(64),both,one)[1961821].indices[4410792](const  ref arg this[4410798]:4*range(int(64),both,one)[1961821], ref arg _retArg[5597773]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[4410823]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5549754]:range(int(64),both,one)[1610039] "temp"
    (4410828 call chpl_build_bounded_range[1645149] ret_tmp[5549754])
    (5549757 'move' call_tmp[4410823] ret_tmp[5549754])
    (5597775 '=' _retArg[5597773] call_tmp[4410823])
    (5597777 return _void[46])
  }
  function 2*range(int(64),both,one)[2287631].indices[4428782](const  ref arg this[4428788]:2*range(int(64),both,one)[2287631], ref arg _retArg[5598580]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[4428813]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5549049]:range(int(64),both,one)[1610039] "temp"
    (4428818 call chpl_build_bounded_range[1622277] ret_tmp[5549049])
    (5549052 'move' call_tmp[4428813] ret_tmp[5549049])
    (5598582 '=' _retArg[5598580] call_tmp[4428813])
    (5598584 return _void[46])
  }
  function 3*range(int(64),both,one)[2436605].indices[4442631](const  ref arg this[4442637]:3*range(int(64),both,one)[2436605], ref arg _retArg[5598907]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[4442662]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546248]:range(int(64),both,one)[1610039] "temp"
    (4442667 call chpl_build_bounded_range[1489158] ret_tmp[5546248])
    (5546251 'move' call_tmp[4442662] ret_tmp[5546248])
    (5598909 '=' _retArg[5598907] call_tmp[4442662])
    (5598911 return _void[46])
  }
  function 5*range(int(64),both,one)[2660739].indices[4460481](const  ref arg this[4460487]:5*range(int(64),both,one)[2660739], ref arg _retArg[5599497]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[4460512]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5548943]:range(int(64),both,one)[1610039] "temp"
    (4460517 call chpl_build_bounded_range[1605270] ret_tmp[5548943])
    (5548946 'move' call_tmp[4460512] ret_tmp[5548943])
    (5599499 '=' _retArg[5599497] call_tmp[4460512])
    (5599501 return _void[46])
  }
  function 6*range(int(64),both,one)[2830019].indices[4476374](const  ref arg this[4476380]:6*range(int(64),both,one)[2830019], ref arg _retArg[5599871]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[4476405]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5579646]:range(int(64),both,one)[1610039] "temp"
    (4476410 call chpl_build_bounded_range[2833325] ret_tmp[5579646])
    (5579649 'move' call_tmp[4476405] ret_tmp[5579646])
    (5599873 '=' _retArg[5599871] call_tmp[4476405])
    (5599875 return _void[46])
  }
  type (c_ptr(uint(8)),int(64))[1471327] val x0[1471323]:c_ptr(uint(8))[1466369] val x1[1471325]:int(64)[10]
  type (errorCode,int(32),int(32))[1513673] val x0[1513667]:errorCode[12828] val x1[1513669]:int(32)[66] val x2[1513671]:int(32)[66]
  type 6*string[1533785] val x0[1533773]:string[244] val x1[1533775]:string[244] val x2[1533777]:string[244] val x3[1533779]:string[244] val x4[1533781]:string[244] val x5[1533783]:string[244]
  type (range(int(64),both,one),int(64))[1650055] val x0[1650051]:range(int(64),both,one)[1610039] val x1[1650053]:int(64)[10]
  type (int(32),byteIndex,int(64))[1652589] val x0[1652583]:int(32)[66] const-ref x1[1652585]:byteIndex[18611] val x2[1652587]:int(64)[10]
  type (int(32),byteIndex,int(64))[1652789] val x0[1652783]:int(32)[66] val x1[1652785]:byteIndex[18611] val x2[1652787]:int(64)[10]
  type 1*range(int(64),both,one)[1760857] val x0[1760855]:range(int(64),both,one)[1610039]
  type 1*int(64)[1769982] val x0[1769980]:int(64)[10]
  type 2*int(64)[1802073] val x0[1802069]:int(64)[10] val x1[1802071]:int(64)[10]
  type 13*int(64)[1922385] val x0[1922359]:int(64)[10] val x1[1922361]:int(64)[10] val x2[1922363]:int(64)[10] val x3[1922365]:int(64)[10] val x4[1922367]:int(64)[10] val x5[1922369]:int(64)[10] val x6[1922371]:int(64)[10] val x7[1922373]:int(64)[10] val x8[1922375]:int(64)[10] val x9[1922377]:int(64)[10] val x10[1922379]:int(64)[10] val x11[1922381]:int(64)[10] val x12[1922383]:int(64)[10]
  type 4*int(64)[1960494] val x0[1960486]:int(64)[10] val x1[1960488]:int(64)[10] val x2[1960490]:int(64)[10] val x3[1960492]:int(64)[10]
  type 4*range(int(64),both,one)[1961821] val x0[1961813]:range(int(64),both,one)[1610039] val x1[1961815]:range(int(64),both,one)[1610039] val x2[1961817]:range(int(64),both,one)[1610039] val x3[1961819]:range(int(64),both,one)[1610039]
  type (domain(4,int(64),one),range(int(64),both,one))[1990045] val x0[1990041]:domain(4,int(64),one)[1964360] val x1[1990043]:range(int(64),both,one)[1610039]
  type 3*int(64)[1995504] val x0[1995498]:int(64)[10] val x1[1995500]:int(64)[10] val x2[1995502]:int(64)[10]
  type (4*int(64),4*int(64),int(64))[2041296] const-ref x0[2041290]:4*int(64)[1960494] const-ref x1[2041292]:4*int(64)[1960494] val x2[2041294]:int(64)[10]
  type (4*int(64),4*int(64),int(64))[2041414] val x0[2041408]:4*int(64)[1960494] val x1[2041410]:4*int(64)[1960494] val x2[2041412]:int(64)[10]
  type (borrowed BaseArr,unmanaged BaseDom?)[2122846] val x0[2122842]:BaseArr[272224] val x1[2122844]:BaseDom[269761]
  type (unmanaged BaseDom?,unmanaged BaseDist?)[2123667] val x0[2123663]:BaseDom[269761] val x1[2123665]:BaseDist[268671]
  type (1*int(64),1*int(64),int(64))[2196446] const-ref x0[2196440]:1*int(64)[1769982] const-ref x1[2196442]:1*int(64)[1769982] val x2[2196444]:int(64)[10]
  type (1*int(64),1*int(64),int(64))[2196564] val x0[2196558]:1*int(64)[1769982] val x1[2196560]:1*int(64)[1769982] val x2[2196562]:int(64)[10]
  type 2*range(int(64),both,one)[2287631] val x0[2287627]:range(int(64),both,one)[1610039] val x1[2287629]:range(int(64),both,one)[1610039]
  type (2*int(64),2*int(64),int(64))[2336227] const-ref x0[2336221]:2*int(64)[1802073] const-ref x1[2336223]:2*int(64)[1802073] val x2[2336225]:int(64)[10]
  type (2*int(64),2*int(64),int(64))[2336345] val x0[2336339]:2*int(64)[1802073] val x1[2336341]:2*int(64)[1802073] val x2[2336343]:int(64)[10]
  type 3*range(int(64),both,one)[2436605] val x0[2436599]:range(int(64),both,one)[1610039] val x1[2436601]:range(int(64),both,one)[1610039] val x2[2436603]:range(int(64),both,one)[1610039]
  type (3*int(64),3*int(64),int(64))[2487527] const-ref x0[2487521]:3*int(64)[1995504] const-ref x1[2487523]:3*int(64)[1995504] val x2[2487525]:int(64)[10]
  type (3*int(64),3*int(64),int(64))[2487645] val x0[2487639]:3*int(64)[1995504] val x1[2487641]:3*int(64)[1995504] val x2[2487643]:int(64)[10]
  type 5*range(int(64),both,one)[2660739] val x0[2660729]:range(int(64),both,one)[1610039] val x1[2660731]:range(int(64),both,one)[1610039] val x2[2660733]:range(int(64),both,one)[1610039] val x3[2660735]:range(int(64),both,one)[1610039] val x4[2660737]:range(int(64),both,one)[1610039]
  type 5*int(64)[2664814] val x0[2664804]:int(64)[10] val x1[2664806]:int(64)[10] val x2[2664808]:int(64)[10] val x3[2664810]:int(64)[10] val x4[2664812]:int(64)[10]
  type (5*int(64),5*int(64),int(64))[2715688] const-ref x0[2715682]:5*int(64)[2664814] const-ref x1[2715684]:5*int(64)[2664814] val x2[2715686]:int(64)[10]
  type (5*int(64),5*int(64),int(64))[2715806] val x0[2715800]:5*int(64)[2664814] val x1[2715802]:5*int(64)[2664814] val x2[2715804]:int(64)[10]
  type 6*range(int(64),both,one)[2830019] val x0[2830007]:range(int(64),both,one)[1610039] val x1[2830009]:range(int(64),both,one)[1610039] val x2[2830011]:range(int(64),both,one)[1610039] val x3[2830013]:range(int(64),both,one)[1610039] val x4[2830015]:range(int(64),both,one)[1610039] val x5[2830017]:range(int(64),both,one)[1610039]
  type 6*int(64)[2835600] val x0[2835588]:int(64)[10] val x1[2835590]:int(64)[10] val x2[2835592]:int(64)[10] val x3[2835594]:int(64)[10] val x4[2835596]:int(64)[10] val x5[2835598]:int(64)[10]
  type (6*int(64),6*int(64),int(64))[2888043] const-ref x0[2888037]:6*int(64)[2835600] const-ref x1[2888039]:6*int(64)[2835600] val x2[2888041]:int(64)[10]
  type (6*int(64),6*int(64),int(64))[2888161] val x0[2888155]:6*int(64)[2835600] val x1[2888157]:6*int(64)[2835600] val x2[2888159]:int(64)[10]
  type (int(64),bool)[3040018] val x0[3040014]:int(64)[10] val x1[3040016]:bool[19]
  type (int(32),bool)[3040996] val x0[3040992]:int(32)[66] val x1[3040994]:bool[19]
  type (uint(64),bool)[3051128] val x0[3051124]:uint(64)[86] val x1[3051126]:bool[19]
  type (real(64),bool)[3059761] val x0[3059757]:real(64)[13] val x1[3059759]:bool[19]
  type (imag(64),bool)[3067847] val x0[3067843]:imag(64)[101] val x1[3067845]:bool[19]
  type (complex(128),bool)[3077587] val x0[3077583]:complex(128)[111] val x1[3077585]:bool[19]
  type (bytes,bool)[3092705] val x0[3092701]:bytes[232] val x1[3092703]:bool[19]
  type (string,bool)[3103815] val x0[3103811]:string[244] val x1[3103813]:bool[19]
  type (domain(1,int(64),one),range(int(64),both,one))[3194639] val x0[3194635]:domain(1,int(64),one)[1765496] val x1[3194637]:range(int(64),both,one)[1610039]
  type (domain(2,int(64),one),range(int(64),both,one))[3215774] val x0[3215770]:domain(2,int(64),one)[2289710] val x1[3215772]:range(int(64),both,one)[1610039]
  type (string,borrowed Module(real(32)))[3252175] const-ref x0[3252171]:string[244] val x1[3252173]:Module(real(32))[1935500]
  type (string,borrowed Module(real(32)))[3252308] val x0[3252304]:string[244] val x1[3252306]:Module(real(32))[1935500]
  type (bool,int(64))[3257010] val x0[3257006]:bool[19] val x1[3257008]:int(64)[10]
  type (map(string,int(64),false),int(64))[3309055] ref x0[3309051]:map(string,int(64),false)[3288794] val x1[3309053]:int(64)[10]
  type (map(string,int(64),false),int(64))[3312520] val x0[3312516]:map(string,int(64),false)[3288794] val x1[3312518]:int(64)[10]
  type (real(32),bool)[3733313] val x0[3733309]:real(32)[91] val x1[3733311]:bool[19]
  type (owned Conv2D(real(64))?,owned Conv2D(real(64))?,owned Dropout(real(64))?,owned Dropout(real(64))?,owned Flatten(real(64))?,owned Linear(real(64))?,owned Linear(real(64))?)[3855590] val x0[3855576]:owned Conv2D(real(64))?[3842682] val x1[3855578]:owned Conv2D(real(64))?[3842682] val x2[3855580]:owned Dropout(real(64))?[3845912] val x3[3855582]:owned Dropout(real(64))?[3845912] val x4[3855584]:owned Flatten(real(64))?[3849125] val x5[3855586]:owned Linear(real(64))?[3852389] val x6[3855588]:owned Linear(real(64))?[3852389]
  type 9*string[4535860] const-ref x0[4535842]:string[244] const-ref x1[4535844]:string[244] const-ref x2[4535846]:string[244] const-ref x3[4535848]:string[244] const-ref x4[4535850]:string[244] const-ref x5[4535852]:string[244] const-ref x6[4535854]:string[244] const-ref x7[4535856]:string[244] const-ref x8[4535858]:string[244]
  function _chpl_complex128[3077850](const in arg re[3077856]:real(64)[13], const in arg im[3077862]:real(64)[13]) : complex(128)[111] "extern" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function _chpl_complex64[3079338](const in arg re[3079344]:real(32)[91], const in arg im[3079350]:real(32)[91]) : complex(64)[106] "extern" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
  function _chpl_complex128[3741740](const in arg re[3741746]:real(64)[13], const in arg im[3741752]:real(64)[13]) : complex(128)[111] "extern" "local args" "no fn body" "resolved" "fn synchronization free"
  {
  }
}
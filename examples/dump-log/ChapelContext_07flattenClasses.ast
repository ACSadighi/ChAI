AST dump for ChapelContext after pass flattenClasses.
Module use list: Errors OwnedObject 

{
  type Self[314609]
  {
    type contextReturnType[314613]
    function Self[314609].enterContext[314579](arg _mt[314585]:_MT[201], arg this[314582]:Self[314609] :
    Self[314609]) ref : _unknown[42] "ifc any return intent" "method" "no fn body"
    {
    }
    { scopeless type
      contextReturnType[314613]
    }
    function Self[314609].exitContext[314591](arg _mt[314604]:_MT[201], arg this[314594]:Self[314609] :
    Self[314609], in arg error[314601] :
    (314598 call _owned[238](?) borrowed Error?[467977])) : _unknown[42] "method" "no fn body"
    {
    }
  }
  function chpl__verifyTypeContext[314617](arg x[314619]:_any[141](?)) : _unknown[42] "no return value for void"
  {
    if(314657 call _cond_test(314651 call ==(314653 'implements interface' x[314619] contextManager[314611]) 2))
    {
      (314623 call compilerWarning(314624 call +(314626 call :(314629 'typeof' x[314619]) string[244]) " is being used in a 'manage' statement ")(314634 call +(314636 call + "via its 'enterContext' and 'exitContext' methods. However, "(314641 call :(314644 'typeof' x[314619]) string[244])) " does not implement contextManager. ") "In the future, this will result in an error.")
    }
  }
  (397083 'used modules list'(314570 'import' Errors[88218].{Error})(314572 'use' OwnedObject[80948]))
}
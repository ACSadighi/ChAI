AST dump for ChapelPrivatization after pass createTaskFunctions.
Module use list: CTypes 

{
  function chpl__init_ChapelPrivatization[468450]() : void[4] "insert line file info" "module init"
  {
    { scopeless type extern
      unknown call_tmp[818552] "expr temp" "maybe param" "maybe type" "temp"
      (818555 'move' call_tmp[818552](147234 call c_ptr[46891](?) chpl_privateObject_t[147229]))
      (646209 'default init var' chpl_privateObjects[147232] call_tmp[818552])
    }
    (147237 'end of statement')
    (610942 return _void[46])
  }
  function chpl_privateObject_t[147229].obj[1086784](arg _mt[1086786]:_MT[201], ref arg this[1086788]:chpl_privateObject_t[147229]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1086798] "RVV" "temp"
    unknown call_tmp[1086805] "expr temp" "maybe param" "maybe type" "temp"
    (1086808 'move' call_tmp[1086805](1086792 '.' this[1086788] c"obj"))
    (1086803 'move' ret[1086798](1086802 'addr of' call_tmp[1086805]))
    (1086800 return ret[1086798])
  }
  function chpl_privateObject_t[147229].init[1086810](arg _mt[1086812]:_MT[201], ref arg this[1086813]:chpl_privateObject_t[147229], in arg obj[1086816] :
  (1086819 call c_ptr[46891](?) void[4]) =
  _typeDefaultT[217]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1086832 'init field' this[1086813] c"obj" obj[1086816])
    (1086836 return _void[46])
  }
  function chpl_privateObject_t[147229].init=[1086838](arg _mt[1086841]:_MT[201], arg this[1086842]:chpl_privateObject_t[147229], arg other[1086843]:chpl_privateObject_t[147229]) : _unknown[42] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1086847 '=' this[1086842] other[1086843])
    (1086851 return _void[46])
  }
  function chpl_privateObject_t[147229].deinit[1086853](arg _mt[1086855]:_MT[201], arg this[1086857]:chpl_privateObject_t[147229]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1086865 return _void[46])
  }
  function chpl_privateObject_t[147229].serialize[1086867](arg _mt[1086871]:_MT[201], arg this[1086869]:chpl_privateObject_t[147229], arg writer[1086870]:_any[141](?), ref arg serializer[1086875]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1086878 call serializeDefaultImpl writer[1086870] serializer[1086875] this[1086869])
    (1086884 return _void[46])
  }
  function chpl_privateObject_t[147229].deserialize[1086886](arg _mt[1086890]:_MT[201], ref arg this[1086888]:chpl_privateObject_t[147229], arg reader[1086889]:_any[141](?), ref arg deserializer[1086895]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1086897] "temp"
    (1086899 'move' _deser_temp[1086897] this[1086888])
    (1086902 call deserializeDefaultImpl reader[1086889] deserializer[1086895] _deser_temp[1086897])
    (1086908 return _void[46])
  }
  function =[1086910](ref arg _arg1[1086912]:chpl_privateObject_t[147229], arg _arg2[1086913]:chpl_privateObject_t[147229]) : _unknown[42] "assignop" "compiler generated" "inline" "last resort"
  {
    (1086916 '=' _arg1[1086912] _arg2[1086913])
    (1086921 return _void[46])
  }
  function chpl_privateObject_t[147229].hash[1086923](arg _mt[1086926]:_MT[201], arg this[1086925]:chpl_privateObject_t[147229]) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1086940] "RVV" "temp"
    unknown call_tmp[1086947] "expr temp" "maybe param" "maybe type" "temp"
    (1086950 'move' call_tmp[1086947](1086929 call obj _mt[203] this[1086925]))
    unknown call_tmp[1086952] "expr temp" "maybe param" "maybe type" "temp"
    (1086955 'move' call_tmp[1086952](1086933 call chpl__defaultHashWrapperInner call_tmp[1086947]))
    (1086945 'move' ret[1086940](1086944 'deref' call_tmp[1086952]))
    (1086942 return ret[1086940])
  }
  function chpl_fields_are_comparable[1086973](arg _arg1[1086975]:chpl_privateObject_t[147229], arg _arg2[1086976]:chpl_privateObject_t[147229]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1086994]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1087001] "expr temp" "maybe param" "maybe type" "temp"
    (1087004 'move' call_tmp[1087001](1086979 call obj _mt[203] _arg1[1086975]))
    unknown call_tmp[1087006] "expr temp" "maybe param" "maybe type" "temp"
    (1087009 'move' call_tmp[1087006](1086983 call obj _mt[203] _arg2[1086976]))
    unknown call_tmp[1087011] "expr temp" "maybe param" "maybe type" "temp"
    (1087014 'move' call_tmp[1087011](1086987 'call resolves' c"==" call_tmp[1087001] call_tmp[1087006]))
    (1086999 'move' ret[1086994](1086998 'deref' call_tmp[1087011]))
    (1086996 return ret[1086994])
  }
  function chpl_privateObject_t[147229].==[1086957](arg _mt[1086959]:_MT[201], arg this[1086961]:chpl_privateObject_t[147229], arg _arg1[1086963]:chpl_privateObject_t[147229], arg _arg2[1086964]:chpl_privateObject_t[147229]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1087043]:bool[19] "RVV" "temp"
    unknown call_tmp[1087055] "expr temp" "maybe param" "maybe type" "temp"
    (1087058 'move' call_tmp[1087055](1087022 call obj _mt[203] _arg1[1086963]))
    unknown call_tmp[1087060] "expr temp" "maybe param" "maybe type" "temp"
    (1087063 'move' call_tmp[1087060](1087026 call obj _mt[203] _arg2[1086964]))
    unknown call_tmp[1087065] "expr temp" "maybe param" "maybe type" "temp"
    (1087068 'move' call_tmp[1087065](1087030 call chpl_field_neq call_tmp[1087055] call_tmp[1087060]))
    if call_tmp[1087065]
    {
      (1087048 'move' ret[1087043](1087047 'deref' 0))
      gotoReturn _end_==[1087041] _end_==[1087041]
    }
    (1087053 'move' ret[1087043](1087052 'deref' 1))
    label _end_==[1087041]
    (1087045 return ret[1087043])
  }
  where {
    unknown call_tmp[1087070] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087073 'move' call_tmp[1087070](1086967 'typeof' _arg1[1086963]))
    unknown call_tmp[1087075] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087078 'move' call_tmp[1087075](1086969 'typeof' _arg2[1086964]))
    unknown call_tmp[1087080] "expr temp" "maybe param" "maybe type" "temp"
    (1087083 'move' call_tmp[1087080](1086971 call == call_tmp[1087070] call_tmp[1087075]))
    unknown call_tmp[1087085] "expr temp" "maybe param" "maybe type" "temp"
    (1087088 'move' call_tmp[1087085](1087016 call chpl_fields_are_comparable[1086973] _arg1[1086963] _arg2[1086964]))
    (1087020 '&' call_tmp[1087080] call_tmp[1087085])
  }
  function chpl_fields_are_comparable[1087106](arg _arg1[1087108]:chpl_privateObject_t[147229], arg _arg2[1087109]:chpl_privateObject_t[147229]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1087127]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1087134] "expr temp" "maybe param" "maybe type" "temp"
    (1087137 'move' call_tmp[1087134](1087112 call obj _mt[203] _arg1[1087108]))
    unknown call_tmp[1087139] "expr temp" "maybe param" "maybe type" "temp"
    (1087142 'move' call_tmp[1087139](1087116 call obj _mt[203] _arg2[1087109]))
    unknown call_tmp[1087144] "expr temp" "maybe param" "maybe type" "temp"
    (1087147 'move' call_tmp[1087144](1087120 'call resolves' c"!=" call_tmp[1087134] call_tmp[1087139]))
    (1087132 'move' ret[1087127](1087131 'deref' call_tmp[1087144]))
    (1087129 return ret[1087127])
  }
  function chpl_privateObject_t[147229].!=[1087090](arg _mt[1087092]:_MT[201], arg this[1087094]:chpl_privateObject_t[147229], arg _arg1[1087096]:chpl_privateObject_t[147229], arg _arg2[1087097]:chpl_privateObject_t[147229]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1087176]:bool[19] "RVV" "temp"
    unknown call_tmp[1087188] "expr temp" "maybe param" "maybe type" "temp"
    (1087191 'move' call_tmp[1087188](1087155 call obj _mt[203] _arg1[1087096]))
    unknown call_tmp[1087193] "expr temp" "maybe param" "maybe type" "temp"
    (1087196 'move' call_tmp[1087193](1087159 call obj _mt[203] _arg2[1087097]))
    unknown call_tmp[1087198] "expr temp" "maybe param" "maybe type" "temp"
    (1087201 'move' call_tmp[1087198](1087163 call chpl_field_neq call_tmp[1087188] call_tmp[1087193]))
    if call_tmp[1087198]
    {
      (1087181 'move' ret[1087176](1087180 'deref' 1))
      gotoReturn _end_!=[1087174] _end_!=[1087174]
    }
    (1087186 'move' ret[1087176](1087185 'deref' 0))
    label _end_!=[1087174]
    (1087178 return ret[1087176])
  }
  where {
    unknown call_tmp[1087203] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087206 'move' call_tmp[1087203](1087100 'typeof' _arg1[1087096]))
    unknown call_tmp[1087208] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087211 'move' call_tmp[1087208](1087102 'typeof' _arg2[1087097]))
    unknown call_tmp[1087213] "expr temp" "maybe param" "maybe type" "temp"
    (1087216 'move' call_tmp[1087213](1087104 call == call_tmp[1087203] call_tmp[1087208]))
    unknown call_tmp[1087218] "expr temp" "maybe param" "maybe type" "temp"
    (1087221 'move' call_tmp[1087218](1087149 call chpl_fields_are_comparable[1087106] _arg1[1087096] _arg2[1087097]))
    (1087153 '&' call_tmp[1087213] call_tmp[1087218])
  }
  function chpl_fields_are_comparable[1087239](arg _arg1[1087241]:chpl_privateObject_t[147229], arg _arg2[1087242]:chpl_privateObject_t[147229]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1087260]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1087267] "expr temp" "maybe param" "maybe type" "temp"
    (1087270 'move' call_tmp[1087267](1087245 call obj _mt[203] _arg1[1087241]))
    unknown call_tmp[1087272] "expr temp" "maybe param" "maybe type" "temp"
    (1087275 'move' call_tmp[1087272](1087249 call obj _mt[203] _arg2[1087242]))
    unknown call_tmp[1087277] "expr temp" "maybe param" "maybe type" "temp"
    (1087280 'move' call_tmp[1087277](1087253 'call resolves' c"<" call_tmp[1087267] call_tmp[1087272]))
    (1087265 'move' ret[1087260](1087264 'deref' call_tmp[1087277]))
    (1087262 return ret[1087260])
  }
  function chpl_privateObject_t[147229].<[1087223](arg _mt[1087225]:_MT[201], arg this[1087227]:chpl_privateObject_t[147229], arg _arg1[1087229]:chpl_privateObject_t[147229], arg _arg2[1087230]:chpl_privateObject_t[147229]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1087324]:bool[19] "RVV" "temp"
    unknown call_tmp[1087341] "expr temp" "maybe param" "maybe type" "temp"
    (1087344 'move' call_tmp[1087341](1087288 call obj _mt[203] _arg1[1087229]))
    unknown call_tmp[1087346] "expr temp" "maybe param" "maybe type" "temp"
    (1087349 'move' call_tmp[1087346](1087292 call obj _mt[203] _arg2[1087230]))
    unknown call_tmp[1087351] "expr temp" "maybe param" "maybe type" "temp"
    (1087354 'move' call_tmp[1087351](1087296 call chpl_field_lt call_tmp[1087341] call_tmp[1087346]))
    if call_tmp[1087351]
    {
      (1087329 'move' ret[1087324](1087328 'deref' 1))
      gotoReturn _end_<[1087322] _end_<[1087322]
    }
    unknown call_tmp[1087356] "expr temp" "maybe param" "maybe type" "temp"
    (1087359 'move' call_tmp[1087356](1087302 call obj _mt[203] _arg1[1087229]))
    unknown call_tmp[1087361] "expr temp" "maybe param" "maybe type" "temp"
    (1087364 'move' call_tmp[1087361](1087306 call obj _mt[203] _arg2[1087230]))
    unknown call_tmp[1087366] "expr temp" "maybe param" "maybe type" "temp"
    (1087369 'move' call_tmp[1087366](1087310 call chpl_field_gt call_tmp[1087356] call_tmp[1087361]))
    if call_tmp[1087366]
    {
      (1087334 'move' ret[1087324](1087333 'deref' 0))
      gotoReturn _end_<[1087322] _end_<[1087322]
    }
    (1087339 'move' ret[1087324](1087338 'deref' 0))
    label _end_<[1087322]
    (1087326 return ret[1087324])
  }
  where {
    unknown call_tmp[1087371] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087374 'move' call_tmp[1087371](1087233 'typeof' _arg1[1087229]))
    unknown call_tmp[1087376] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087379 'move' call_tmp[1087376](1087235 'typeof' _arg2[1087230]))
    unknown call_tmp[1087381] "expr temp" "maybe param" "maybe type" "temp"
    (1087384 'move' call_tmp[1087381](1087237 call == call_tmp[1087371] call_tmp[1087376]))
    unknown call_tmp[1087386] "expr temp" "maybe param" "maybe type" "temp"
    (1087389 'move' call_tmp[1087386](1087282 call chpl_fields_are_comparable[1087239] _arg1[1087229] _arg2[1087230]))
    (1087286 '&' call_tmp[1087381] call_tmp[1087386])
  }
  function chpl_fields_are_comparable[1087407](arg _arg1[1087409]:chpl_privateObject_t[147229], arg _arg2[1087410]:chpl_privateObject_t[147229]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1087428]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1087435] "expr temp" "maybe param" "maybe type" "temp"
    (1087438 'move' call_tmp[1087435](1087413 call obj _mt[203] _arg1[1087409]))
    unknown call_tmp[1087440] "expr temp" "maybe param" "maybe type" "temp"
    (1087443 'move' call_tmp[1087440](1087417 call obj _mt[203] _arg2[1087410]))
    unknown call_tmp[1087445] "expr temp" "maybe param" "maybe type" "temp"
    (1087448 'move' call_tmp[1087445](1087421 'call resolves' c"<=" call_tmp[1087435] call_tmp[1087440]))
    (1087433 'move' ret[1087428](1087432 'deref' call_tmp[1087445]))
    (1087430 return ret[1087428])
  }
  function chpl_privateObject_t[147229].<=[1087391](arg _mt[1087393]:_MT[201], arg this[1087395]:chpl_privateObject_t[147229], arg _arg1[1087397]:chpl_privateObject_t[147229], arg _arg2[1087398]:chpl_privateObject_t[147229]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1087492]:bool[19] "RVV" "temp"
    unknown call_tmp[1087509] "expr temp" "maybe param" "maybe type" "temp"
    (1087512 'move' call_tmp[1087509](1087456 call obj _mt[203] _arg1[1087397]))
    unknown call_tmp[1087514] "expr temp" "maybe param" "maybe type" "temp"
    (1087517 'move' call_tmp[1087514](1087460 call obj _mt[203] _arg2[1087398]))
    unknown call_tmp[1087519] "expr temp" "maybe param" "maybe type" "temp"
    (1087522 'move' call_tmp[1087519](1087464 call chpl_field_lt call_tmp[1087509] call_tmp[1087514]))
    if call_tmp[1087519]
    {
      (1087497 'move' ret[1087492](1087496 'deref' 1))
      gotoReturn _end_<=[1087490] _end_<=[1087490]
    }
    unknown call_tmp[1087524] "expr temp" "maybe param" "maybe type" "temp"
    (1087527 'move' call_tmp[1087524](1087470 call obj _mt[203] _arg1[1087397]))
    unknown call_tmp[1087529] "expr temp" "maybe param" "maybe type" "temp"
    (1087532 'move' call_tmp[1087529](1087474 call obj _mt[203] _arg2[1087398]))
    unknown call_tmp[1087534] "expr temp" "maybe param" "maybe type" "temp"
    (1087537 'move' call_tmp[1087534](1087478 call chpl_field_gt call_tmp[1087524] call_tmp[1087529]))
    if call_tmp[1087534]
    {
      (1087502 'move' ret[1087492](1087501 'deref' 0))
      gotoReturn _end_<=[1087490] _end_<=[1087490]
    }
    (1087507 'move' ret[1087492](1087506 'deref' 1))
    label _end_<=[1087490]
    (1087494 return ret[1087492])
  }
  where {
    unknown call_tmp[1087539] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087542 'move' call_tmp[1087539](1087401 'typeof' _arg1[1087397]))
    unknown call_tmp[1087544] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087547 'move' call_tmp[1087544](1087403 'typeof' _arg2[1087398]))
    unknown call_tmp[1087549] "expr temp" "maybe param" "maybe type" "temp"
    (1087552 'move' call_tmp[1087549](1087405 call == call_tmp[1087539] call_tmp[1087544]))
    unknown call_tmp[1087554] "expr temp" "maybe param" "maybe type" "temp"
    (1087557 'move' call_tmp[1087554](1087450 call chpl_fields_are_comparable[1087407] _arg1[1087397] _arg2[1087398]))
    (1087454 '&' call_tmp[1087549] call_tmp[1087554])
  }
  function chpl_fields_are_comparable[1087575](arg _arg1[1087577]:chpl_privateObject_t[147229], arg _arg2[1087578]:chpl_privateObject_t[147229]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1087596]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1087603] "expr temp" "maybe param" "maybe type" "temp"
    (1087606 'move' call_tmp[1087603](1087581 call obj _mt[203] _arg1[1087577]))
    unknown call_tmp[1087608] "expr temp" "maybe param" "maybe type" "temp"
    (1087611 'move' call_tmp[1087608](1087585 call obj _mt[203] _arg2[1087578]))
    unknown call_tmp[1087613] "expr temp" "maybe param" "maybe type" "temp"
    (1087616 'move' call_tmp[1087613](1087589 'call resolves' c">" call_tmp[1087603] call_tmp[1087608]))
    (1087601 'move' ret[1087596](1087600 'deref' call_tmp[1087613]))
    (1087598 return ret[1087596])
  }
  function chpl_privateObject_t[147229].>[1087559](arg _mt[1087561]:_MT[201], arg this[1087563]:chpl_privateObject_t[147229], arg _arg1[1087565]:chpl_privateObject_t[147229], arg _arg2[1087566]:chpl_privateObject_t[147229]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1087660]:bool[19] "RVV" "temp"
    unknown call_tmp[1087677] "expr temp" "maybe param" "maybe type" "temp"
    (1087680 'move' call_tmp[1087677](1087624 call obj _mt[203] _arg1[1087565]))
    unknown call_tmp[1087682] "expr temp" "maybe param" "maybe type" "temp"
    (1087685 'move' call_tmp[1087682](1087628 call obj _mt[203] _arg2[1087566]))
    unknown call_tmp[1087687] "expr temp" "maybe param" "maybe type" "temp"
    (1087690 'move' call_tmp[1087687](1087632 call chpl_field_gt call_tmp[1087677] call_tmp[1087682]))
    if call_tmp[1087687]
    {
      (1087665 'move' ret[1087660](1087664 'deref' 1))
      gotoReturn _end_>[1087658] _end_>[1087658]
    }
    unknown call_tmp[1087692] "expr temp" "maybe param" "maybe type" "temp"
    (1087695 'move' call_tmp[1087692](1087638 call obj _mt[203] _arg1[1087565]))
    unknown call_tmp[1087697] "expr temp" "maybe param" "maybe type" "temp"
    (1087700 'move' call_tmp[1087697](1087642 call obj _mt[203] _arg2[1087566]))
    unknown call_tmp[1087702] "expr temp" "maybe param" "maybe type" "temp"
    (1087705 'move' call_tmp[1087702](1087646 call chpl_field_lt call_tmp[1087692] call_tmp[1087697]))
    if call_tmp[1087702]
    {
      (1087670 'move' ret[1087660](1087669 'deref' 0))
      gotoReturn _end_>[1087658] _end_>[1087658]
    }
    (1087675 'move' ret[1087660](1087674 'deref' 0))
    label _end_>[1087658]
    (1087662 return ret[1087660])
  }
  where {
    unknown call_tmp[1087707] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087710 'move' call_tmp[1087707](1087569 'typeof' _arg1[1087565]))
    unknown call_tmp[1087712] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087715 'move' call_tmp[1087712](1087571 'typeof' _arg2[1087566]))
    unknown call_tmp[1087717] "expr temp" "maybe param" "maybe type" "temp"
    (1087720 'move' call_tmp[1087717](1087573 call == call_tmp[1087707] call_tmp[1087712]))
    unknown call_tmp[1087722] "expr temp" "maybe param" "maybe type" "temp"
    (1087725 'move' call_tmp[1087722](1087618 call chpl_fields_are_comparable[1087575] _arg1[1087565] _arg2[1087566]))
    (1087622 '&' call_tmp[1087717] call_tmp[1087722])
  }
  function chpl_fields_are_comparable[1087743](arg _arg1[1087745]:chpl_privateObject_t[147229], arg _arg2[1087746]:chpl_privateObject_t[147229]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1087764]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1087771] "expr temp" "maybe param" "maybe type" "temp"
    (1087774 'move' call_tmp[1087771](1087749 call obj _mt[203] _arg1[1087745]))
    unknown call_tmp[1087776] "expr temp" "maybe param" "maybe type" "temp"
    (1087779 'move' call_tmp[1087776](1087753 call obj _mt[203] _arg2[1087746]))
    unknown call_tmp[1087781] "expr temp" "maybe param" "maybe type" "temp"
    (1087784 'move' call_tmp[1087781](1087757 'call resolves' c">=" call_tmp[1087771] call_tmp[1087776]))
    (1087769 'move' ret[1087764](1087768 'deref' call_tmp[1087781]))
    (1087766 return ret[1087764])
  }
  function chpl_privateObject_t[147229].>=[1087727](arg _mt[1087729]:_MT[201], arg this[1087731]:chpl_privateObject_t[147229], arg _arg1[1087733]:chpl_privateObject_t[147229], arg _arg2[1087734]:chpl_privateObject_t[147229]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1087828]:bool[19] "RVV" "temp"
    unknown call_tmp[1087845] "expr temp" "maybe param" "maybe type" "temp"
    (1087848 'move' call_tmp[1087845](1087792 call obj _mt[203] _arg1[1087733]))
    unknown call_tmp[1087850] "expr temp" "maybe param" "maybe type" "temp"
    (1087853 'move' call_tmp[1087850](1087796 call obj _mt[203] _arg2[1087734]))
    unknown call_tmp[1087855] "expr temp" "maybe param" "maybe type" "temp"
    (1087858 'move' call_tmp[1087855](1087800 call chpl_field_gt call_tmp[1087845] call_tmp[1087850]))
    if call_tmp[1087855]
    {
      (1087833 'move' ret[1087828](1087832 'deref' 1))
      gotoReturn _end_>=[1087826] _end_>=[1087826]
    }
    unknown call_tmp[1087860] "expr temp" "maybe param" "maybe type" "temp"
    (1087863 'move' call_tmp[1087860](1087806 call obj _mt[203] _arg1[1087733]))
    unknown call_tmp[1087865] "expr temp" "maybe param" "maybe type" "temp"
    (1087868 'move' call_tmp[1087865](1087810 call obj _mt[203] _arg2[1087734]))
    unknown call_tmp[1087870] "expr temp" "maybe param" "maybe type" "temp"
    (1087873 'move' call_tmp[1087870](1087814 call chpl_field_lt call_tmp[1087860] call_tmp[1087865]))
    if call_tmp[1087870]
    {
      (1087838 'move' ret[1087828](1087837 'deref' 0))
      gotoReturn _end_>=[1087826] _end_>=[1087826]
    }
    (1087843 'move' ret[1087828](1087842 'deref' 1))
    label _end_>=[1087826]
    (1087830 return ret[1087828])
  }
  where {
    unknown call_tmp[1087875] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087878 'move' call_tmp[1087875](1087737 'typeof' _arg1[1087733]))
    unknown call_tmp[1087880] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1087883 'move' call_tmp[1087880](1087739 'typeof' _arg2[1087734]))
    unknown call_tmp[1087885] "expr temp" "maybe param" "maybe type" "temp"
    (1087888 'move' call_tmp[1087885](1087741 call == call_tmp[1087875] call_tmp[1087880]))
    unknown call_tmp[1087890] "expr temp" "maybe param" "maybe type" "temp"
    (1087893 'move' call_tmp[1087890](1087786 call chpl_fields_are_comparable[1087743] _arg1[1087733] _arg2[1087734]))
    (1087790 '&' call_tmp[1087885] call_tmp[1087890])
  }
  type chpl_privateObject_t[147229] unknown obj[147222](147224 call c_ptr[46891](?) void[4])
  unknown chpl_privateObjects[147232] "dead at end of block" "extern" "codegen for CPU and GPU" "insert auto destroy"
  function chpl_getPrivatizedCopy[147238](arg objectType[147240]:_any[141](?), arg objectPid[147243]:int(64)[10]) : _unknown[42] "inline" "fn returns infinite lifetime"
  {
    unknown ret[610934] "RVV" "temp"
    unknown call_tmp[818557] "expr temp" "maybe param" "maybe type" "temp"
    (818560 'move' call_tmp[818557](147252 call chpl_privateObjects[147232] objectPid[147243]))
    unknown call_tmp[818564] "expr temp" "maybe param" "maybe type" "temp"
    (818567 'move' call_tmp[818564](147256 call obj _mt[203] call_tmp[818557]))
    unknown call_tmp[818569] "expr temp" "maybe param" "maybe type" "temp"
    (818572 'move' call_tmp[818569](147249 'cast' objectType[147240] call_tmp[818564]))
    (610940 'move' ret[610934](610939 'coerce' call_tmp[818569] objectType[147240]))
    (610936 return ret[610934])
  }
  { scopeless type
    objectType[147240]
  }
  (396170 'used modules list'(147218 'use' CTypes[51217]))
}
AST dump for ExportWrappers after pass createTaskFunctions.
Module use list: ChapelStandard CTypes 

{
  function chpl__init_ExportWrappers[468597]() : void[4] "insert line file info" "module init"
  {
    (654151 'move' chpl__exportTypeChplByteBuffer[311837] chpl_byte_buffer[311826])
    (569015 'end of statement')
    (631606 return _void[46])
  }
  function _initDynamicEndCount[311752]() : _unknown[42] "private" "no return value for void"
  {
    unknown call_tmp[939135] "maybe param" "maybe type" "temp"
    (939138 'move' call_tmp[939135](311758 call _endCountAlloc(forceLocalTypes = 0)))
    unknown endCount[311756] "dead at end of block" "insert auto destroy"
    (654146 'init var' endCount[311756] call_tmp[939135])
    (311762 'end of statement')
    (311764 call chpl_task_setDynamicEndCount endCount[311756])
    (569007 'end of statement' endCount[311756])
    (631522 return _void[46])
  }
  function _destroyDynamicEndCount[311768]() : _unknown[42] "private" "no return value for void"
  {
    unknown call_tmp[939140] "maybe param" "maybe type" "temp"
    (939143 'move' call_tmp[939140](311774 call chpl_task_getDynamicEndCount))
    unknown endCount[311772] "dead at end of block" "insert auto destroy"
    (654148 'init var' endCount[311772] call_tmp[939140])
    (311776 'end of statement')
    (311778 call _waitEndCount endCount[311772])
    (569009 'end of statement' endCount[311772])
    (311781 call _endCountFree endCount[311772])
    (569011 'end of statement' endCount[311772])
    (631524 return _void[46])
  }
  function chpl_libraryModuleLevelSetup[311785]() : _unknown[42] "export" "local args" "no return value for void"
  {
    unknown ret[631528] "RVV" "temp"
    (311790 call _initDynamicEndCount)
    (631530 return ret[631528])
  }
  { scopeless type
    void[4]
  }
  function chpl_libraryModuleLevelCleanup[311794]() : _unknown[42] "export" "local args" "no return value for void"
  {
    unknown ret[631534] "RVV" "temp"
    (311799 call _destroyDynamicEndCount)
    (631536 return ret[631534])
  }
  { scopeless type
    void[4]
  }
  function chpl_byte_buffer[311826].isOwned[1299412](arg _mt[1299414]:_MT[201], ref arg this[1299416]:chpl_byte_buffer[311826]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1299426] "RVV" "temp"
    unknown call_tmp[1299433] "expr temp" "maybe param" "maybe type" "temp"
    (1299436 'move' call_tmp[1299433](1299420 '.' this[1299416] c"isOwned"))
    (1299431 'move' ret[1299426](1299430 'addr of' call_tmp[1299433]))
    (1299428 return ret[1299426])
  }
  function chpl_byte_buffer[311826].data[1299438](arg _mt[1299440]:_MT[201], ref arg this[1299442]:chpl_byte_buffer[311826]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1299452] "RVV" "temp"
    unknown call_tmp[1299459] "expr temp" "maybe param" "maybe type" "temp"
    (1299462 'move' call_tmp[1299459](1299446 '.' this[1299442] c"data"))
    (1299457 'move' ret[1299452](1299456 'addr of' call_tmp[1299459]))
    (1299454 return ret[1299452])
  }
  function chpl_byte_buffer[311826].size[1299464](arg _mt[1299466]:_MT[201], ref arg this[1299468]:chpl_byte_buffer[311826]) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1299478] "RVV" "temp"
    unknown call_tmp[1299485] "expr temp" "maybe param" "maybe type" "temp"
    (1299488 'move' call_tmp[1299485](1299472 '.' this[1299468] c"size"))
    (1299483 'move' ret[1299478](1299482 'addr of' call_tmp[1299485]))
    (1299480 return ret[1299478])
  }
  function chpl_byte_buffer[311826].init[1299490](arg _mt[1299492]:_MT[201], ref arg this[1299493]:chpl_byte_buffer[311826], in arg isOwned[1299496] :
  (1299499 call int(64)[10] 8) =
  _typeDefaultT[217], in arg data[1299511] :
  (1299514 call c_ptr[46891](?) c_char[562]) =
  _typeDefaultT[217], in arg size[1299526] :
  (1299529 call uint(64)[86] 64) =
  _typeDefaultT[217]) : void[4] "compiler generated" "default initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1299542 'init field' this[1299493] c"isOwned" isOwned[1299496])
    (1299545 'init field' this[1299493] c"data" data[1299511])
    (1299551 'end of statement')
    (1299548 'init field' this[1299493] c"size" size[1299526])
    (1299553 return _void[46])
  }
  function chpl_byte_buffer[311826].init=[1299555](arg _mt[1299558]:_MT[201], arg this[1299559]:chpl_byte_buffer[311826], arg other[1299560]:chpl_byte_buffer[311826]) : _unknown[42] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (1299564 '=' this[1299559] other[1299560])
    (1299568 return _void[46])
  }
  function chpl_byte_buffer[311826].deinit[1299570](arg _mt[1299572]:_MT[201], arg this[1299574]:chpl_byte_buffer[311826]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1299582 return _void[46])
  }
  function chpl_byte_buffer[311826].serialize[1299584](arg _mt[1299588]:_MT[201], arg this[1299586]:chpl_byte_buffer[311826], arg writer[1299587]:_any[141](?), ref arg serializer[1299592]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1299595 call serializeDefaultImpl writer[1299587] serializer[1299592] this[1299586])
    (1299601 return _void[46])
  }
  function chpl_byte_buffer[311826].deserialize[1299603](arg _mt[1299607]:_MT[201], ref arg this[1299605]:chpl_byte_buffer[311826], arg reader[1299606]:_any[141](?), ref arg deserializer[1299612]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1299614] "temp"
    (1299616 'move' _deser_temp[1299614] this[1299605])
    (1299619 call deserializeDefaultImpl reader[1299606] deserializer[1299612] _deser_temp[1299614])
    (1299625 return _void[46])
  }
  function =[1299627](ref arg _arg1[1299629]:chpl_byte_buffer[311826], arg _arg2[1299630]:chpl_byte_buffer[311826]) : _unknown[42] "assignop" "compiler generated" "inline" "last resort"
  {
    (1299633 '=' _arg1[1299629] _arg2[1299630])
    (1299638 return _void[46])
  }
  function chpl_byte_buffer[311826].hash[1299640](arg _mt[1299643]:_MT[201], arg this[1299642]:chpl_byte_buffer[311826]) : _unknown[42] "compiler generated" "last resort" "method"
  {
    unknown ret[1299677] "RVV" "temp"
    unknown call_tmp[1299684] "expr temp" "maybe param" "maybe type" "temp"
    (1299687 'move' call_tmp[1299684](1299662 call size _mt[203] this[1299642]))
    unknown call_tmp[1299689] "expr temp" "maybe param" "maybe type" "temp"
    (1299692 'move' call_tmp[1299689](1299666 call hash _mt[203] call_tmp[1299684]))
    unknown call_tmp[1299694] "expr temp" "maybe param" "maybe type" "temp"
    (1299697 'move' call_tmp[1299694](1299652 call data _mt[203] this[1299642]))
    unknown call_tmp[1299699] "expr temp" "maybe param" "maybe type" "temp"
    (1299702 'move' call_tmp[1299699](1299656 call hash _mt[203] call_tmp[1299694]))
    unknown call_tmp[1299704] "expr temp" "maybe param" "maybe type" "temp"
    (1299707 'move' call_tmp[1299704](1299646 call isOwned _mt[203] this[1299642]))
    unknown call_tmp[1299709] "expr temp" "maybe param" "maybe type" "temp"
    (1299712 'move' call_tmp[1299709](1299650 call chpl__defaultHashWrapperInner call_tmp[1299704]))
    unknown call_tmp[1299714] "expr temp" "maybe param" "maybe type" "temp"
    (1299717 'move' call_tmp[1299714](1299659 call chpl__defaultHashCombine call_tmp[1299699] call_tmp[1299709] 2))
    unknown call_tmp[1299719] "expr temp" "maybe param" "maybe type" "temp"
    (1299722 'move' call_tmp[1299719](1299669 call chpl__defaultHashCombine call_tmp[1299689] call_tmp[1299714] 3))
    (1299682 'move' ret[1299677](1299681 'deref' call_tmp[1299719]))
    (1299679 return ret[1299677])
  }
  function chpl_fields_are_comparable[1299740](arg _arg1[1299742]:chpl_byte_buffer[311826], arg _arg2[1299743]:chpl_byte_buffer[311826]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1299782]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1299789] "expr temp" "maybe param" "maybe type" "temp"
    (1299792 'move' call_tmp[1299789](1299746 call isOwned _mt[203] _arg1[1299742]))
    unknown call_tmp[1299794] "expr temp" "maybe param" "maybe type" "temp"
    (1299797 'move' call_tmp[1299794](1299750 call isOwned _mt[203] _arg2[1299743]))
    unknown call_tmp[1299799] "expr temp" "maybe param" "maybe type" "temp"
    (1299802 'move' call_tmp[1299799](1299754 'call resolves' c"==" call_tmp[1299789] call_tmp[1299794]))
    unknown call_tmp[1299804] "expr temp" "maybe param" "maybe type" "temp"
    (1299807 'move' call_tmp[1299804](1299756 call data _mt[203] _arg1[1299742]))
    unknown call_tmp[1299809] "expr temp" "maybe param" "maybe type" "temp"
    (1299812 'move' call_tmp[1299809](1299760 call data _mt[203] _arg2[1299743]))
    unknown call_tmp[1299814] "expr temp" "maybe param" "maybe type" "temp"
    (1299817 'move' call_tmp[1299814](1299764 'call resolves' c"==" call_tmp[1299804] call_tmp[1299809]))
    unknown call_tmp[1299819] "expr temp" "maybe param" "maybe type" "temp"
    (1299822 'move' call_tmp[1299819](1299766 call size _mt[203] _arg1[1299742]))
    unknown call_tmp[1299824] "expr temp" "maybe param" "maybe type" "temp"
    (1299827 'move' call_tmp[1299824](1299770 call size _mt[203] _arg2[1299743]))
    unknown call_tmp[1299829] "expr temp" "maybe param" "maybe type" "temp"
    (1299832 'move' call_tmp[1299829](1299774 'call resolves' c"==" call_tmp[1299819] call_tmp[1299824]))
    unknown call_tmp[1299834] "expr temp" "maybe param" "maybe type" "temp"
    (1299837 'move' call_tmp[1299834](1299776 '&' call_tmp[1299799] call_tmp[1299814] call_tmp[1299829]))
    (1299787 'move' ret[1299782](1299786 'deref' call_tmp[1299834]))
    (1299784 return ret[1299782])
  }
  function chpl_byte_buffer[311826].==[1299724](arg _mt[1299726]:_MT[201], arg this[1299728]:chpl_byte_buffer[311826], arg _arg1[1299730]:chpl_byte_buffer[311826], arg _arg2[1299731]:chpl_byte_buffer[311826]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1299896]:bool[19] "RVV" "temp"
    unknown call_tmp[1299918] "expr temp" "maybe param" "maybe type" "temp"
    (1299921 'move' call_tmp[1299918](1299845 call isOwned _mt[203] _arg1[1299730]))
    unknown call_tmp[1299923] "expr temp" "maybe param" "maybe type" "temp"
    (1299926 'move' call_tmp[1299923](1299849 call isOwned _mt[203] _arg2[1299731]))
    unknown call_tmp[1299928] "expr temp" "maybe param" "maybe type" "temp"
    (1299931 'move' call_tmp[1299928](1299853 call chpl_field_neq call_tmp[1299918] call_tmp[1299923]))
    if call_tmp[1299928]
    {
      (1299901 'move' ret[1299896](1299900 'deref' 0))
      gotoReturn _end_==[1299894] _end_==[1299894]
    }
    unknown call_tmp[1299933] "expr temp" "maybe param" "maybe type" "temp"
    (1299936 'move' call_tmp[1299933](1299859 call data _mt[203] _arg1[1299730]))
    unknown call_tmp[1299938] "expr temp" "maybe param" "maybe type" "temp"
    (1299941 'move' call_tmp[1299938](1299863 call data _mt[203] _arg2[1299731]))
    unknown call_tmp[1299943] "expr temp" "maybe param" "maybe type" "temp"
    (1299946 'move' call_tmp[1299943](1299867 call chpl_field_neq call_tmp[1299933] call_tmp[1299938]))
    if call_tmp[1299943]
    {
      (1299906 'move' ret[1299896](1299905 'deref' 0))
      gotoReturn _end_==[1299894] _end_==[1299894]
    }
    unknown call_tmp[1299948] "expr temp" "maybe param" "maybe type" "temp"
    (1299951 'move' call_tmp[1299948](1299873 call size _mt[203] _arg1[1299730]))
    unknown call_tmp[1299953] "expr temp" "maybe param" "maybe type" "temp"
    (1299956 'move' call_tmp[1299953](1299877 call size _mt[203] _arg2[1299731]))
    unknown call_tmp[1299958] "expr temp" "maybe param" "maybe type" "temp"
    (1299961 'move' call_tmp[1299958](1299881 call chpl_field_neq call_tmp[1299948] call_tmp[1299953]))
    if call_tmp[1299958]
    {
      (1299911 'move' ret[1299896](1299910 'deref' 0))
      gotoReturn _end_==[1299894] _end_==[1299894]
    }
    (1299916 'move' ret[1299896](1299915 'deref' 1))
    label _end_==[1299894]
    (1299898 return ret[1299896])
  }
  where {
    unknown call_tmp[1299963] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1299966 'move' call_tmp[1299963](1299734 'typeof' _arg1[1299730]))
    unknown call_tmp[1299968] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1299971 'move' call_tmp[1299968](1299736 'typeof' _arg2[1299731]))
    unknown call_tmp[1299973] "expr temp" "maybe param" "maybe type" "temp"
    (1299976 'move' call_tmp[1299973](1299738 call == call_tmp[1299963] call_tmp[1299968]))
    unknown call_tmp[1299978] "expr temp" "maybe param" "maybe type" "temp"
    (1299981 'move' call_tmp[1299978](1299839 call chpl_fields_are_comparable[1299740] _arg1[1299730] _arg2[1299731]))
    (1299843 '&' call_tmp[1299973] call_tmp[1299978])
  }
  function chpl_fields_are_comparable[1299999](arg _arg1[1300001]:chpl_byte_buffer[311826], arg _arg2[1300002]:chpl_byte_buffer[311826]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1300041]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1300048] "expr temp" "maybe param" "maybe type" "temp"
    (1300051 'move' call_tmp[1300048](1300005 call isOwned _mt[203] _arg1[1300001]))
    unknown call_tmp[1300053] "expr temp" "maybe param" "maybe type" "temp"
    (1300056 'move' call_tmp[1300053](1300009 call isOwned _mt[203] _arg2[1300002]))
    unknown call_tmp[1300058] "expr temp" "maybe param" "maybe type" "temp"
    (1300061 'move' call_tmp[1300058](1300013 'call resolves' c"!=" call_tmp[1300048] call_tmp[1300053]))
    unknown call_tmp[1300063] "expr temp" "maybe param" "maybe type" "temp"
    (1300066 'move' call_tmp[1300063](1300015 call data _mt[203] _arg1[1300001]))
    unknown call_tmp[1300068] "expr temp" "maybe param" "maybe type" "temp"
    (1300071 'move' call_tmp[1300068](1300019 call data _mt[203] _arg2[1300002]))
    unknown call_tmp[1300073] "expr temp" "maybe param" "maybe type" "temp"
    (1300076 'move' call_tmp[1300073](1300023 'call resolves' c"!=" call_tmp[1300063] call_tmp[1300068]))
    unknown call_tmp[1300078] "expr temp" "maybe param" "maybe type" "temp"
    (1300081 'move' call_tmp[1300078](1300025 call size _mt[203] _arg1[1300001]))
    unknown call_tmp[1300083] "expr temp" "maybe param" "maybe type" "temp"
    (1300086 'move' call_tmp[1300083](1300029 call size _mt[203] _arg2[1300002]))
    unknown call_tmp[1300088] "expr temp" "maybe param" "maybe type" "temp"
    (1300091 'move' call_tmp[1300088](1300033 'call resolves' c"!=" call_tmp[1300078] call_tmp[1300083]))
    unknown call_tmp[1300093] "expr temp" "maybe param" "maybe type" "temp"
    (1300096 'move' call_tmp[1300093](1300035 '&' call_tmp[1300058] call_tmp[1300073] call_tmp[1300088]))
    (1300046 'move' ret[1300041](1300045 'deref' call_tmp[1300093]))
    (1300043 return ret[1300041])
  }
  function chpl_byte_buffer[311826].!=[1299983](arg _mt[1299985]:_MT[201], arg this[1299987]:chpl_byte_buffer[311826], arg _arg1[1299989]:chpl_byte_buffer[311826], arg _arg2[1299990]:chpl_byte_buffer[311826]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1300155]:bool[19] "RVV" "temp"
    unknown call_tmp[1300177] "expr temp" "maybe param" "maybe type" "temp"
    (1300180 'move' call_tmp[1300177](1300104 call isOwned _mt[203] _arg1[1299989]))
    unknown call_tmp[1300182] "expr temp" "maybe param" "maybe type" "temp"
    (1300185 'move' call_tmp[1300182](1300108 call isOwned _mt[203] _arg2[1299990]))
    unknown call_tmp[1300187] "expr temp" "maybe param" "maybe type" "temp"
    (1300190 'move' call_tmp[1300187](1300112 call chpl_field_neq call_tmp[1300177] call_tmp[1300182]))
    if call_tmp[1300187]
    {
      (1300160 'move' ret[1300155](1300159 'deref' 1))
      gotoReturn _end_!=[1300153] _end_!=[1300153]
    }
    unknown call_tmp[1300192] "expr temp" "maybe param" "maybe type" "temp"
    (1300195 'move' call_tmp[1300192](1300118 call data _mt[203] _arg1[1299989]))
    unknown call_tmp[1300197] "expr temp" "maybe param" "maybe type" "temp"
    (1300200 'move' call_tmp[1300197](1300122 call data _mt[203] _arg2[1299990]))
    unknown call_tmp[1300202] "expr temp" "maybe param" "maybe type" "temp"
    (1300205 'move' call_tmp[1300202](1300126 call chpl_field_neq call_tmp[1300192] call_tmp[1300197]))
    if call_tmp[1300202]
    {
      (1300165 'move' ret[1300155](1300164 'deref' 1))
      gotoReturn _end_!=[1300153] _end_!=[1300153]
    }
    unknown call_tmp[1300207] "expr temp" "maybe param" "maybe type" "temp"
    (1300210 'move' call_tmp[1300207](1300132 call size _mt[203] _arg1[1299989]))
    unknown call_tmp[1300212] "expr temp" "maybe param" "maybe type" "temp"
    (1300215 'move' call_tmp[1300212](1300136 call size _mt[203] _arg2[1299990]))
    unknown call_tmp[1300217] "expr temp" "maybe param" "maybe type" "temp"
    (1300220 'move' call_tmp[1300217](1300140 call chpl_field_neq call_tmp[1300207] call_tmp[1300212]))
    if call_tmp[1300217]
    {
      (1300170 'move' ret[1300155](1300169 'deref' 1))
      gotoReturn _end_!=[1300153] _end_!=[1300153]
    }
    (1300175 'move' ret[1300155](1300174 'deref' 0))
    label _end_!=[1300153]
    (1300157 return ret[1300155])
  }
  where {
    unknown call_tmp[1300222] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1300225 'move' call_tmp[1300222](1299993 'typeof' _arg1[1299989]))
    unknown call_tmp[1300227] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1300230 'move' call_tmp[1300227](1299995 'typeof' _arg2[1299990]))
    unknown call_tmp[1300232] "expr temp" "maybe param" "maybe type" "temp"
    (1300235 'move' call_tmp[1300232](1299997 call == call_tmp[1300222] call_tmp[1300227]))
    unknown call_tmp[1300237] "expr temp" "maybe param" "maybe type" "temp"
    (1300240 'move' call_tmp[1300237](1300098 call chpl_fields_are_comparable[1299999] _arg1[1299989] _arg2[1299990]))
    (1300102 '&' call_tmp[1300232] call_tmp[1300237])
  }
  function chpl_fields_are_comparable[1300258](arg _arg1[1300260]:chpl_byte_buffer[311826], arg _arg2[1300261]:chpl_byte_buffer[311826]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1300300]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1300307] "expr temp" "maybe param" "maybe type" "temp"
    (1300310 'move' call_tmp[1300307](1300264 call isOwned _mt[203] _arg1[1300260]))
    unknown call_tmp[1300312] "expr temp" "maybe param" "maybe type" "temp"
    (1300315 'move' call_tmp[1300312](1300268 call isOwned _mt[203] _arg2[1300261]))
    unknown call_tmp[1300317] "expr temp" "maybe param" "maybe type" "temp"
    (1300320 'move' call_tmp[1300317](1300272 'call resolves' c"<" call_tmp[1300307] call_tmp[1300312]))
    unknown call_tmp[1300322] "expr temp" "maybe param" "maybe type" "temp"
    (1300325 'move' call_tmp[1300322](1300274 call data _mt[203] _arg1[1300260]))
    unknown call_tmp[1300327] "expr temp" "maybe param" "maybe type" "temp"
    (1300330 'move' call_tmp[1300327](1300278 call data _mt[203] _arg2[1300261]))
    unknown call_tmp[1300332] "expr temp" "maybe param" "maybe type" "temp"
    (1300335 'move' call_tmp[1300332](1300282 'call resolves' c"<" call_tmp[1300322] call_tmp[1300327]))
    unknown call_tmp[1300337] "expr temp" "maybe param" "maybe type" "temp"
    (1300340 'move' call_tmp[1300337](1300284 call size _mt[203] _arg1[1300260]))
    unknown call_tmp[1300342] "expr temp" "maybe param" "maybe type" "temp"
    (1300345 'move' call_tmp[1300342](1300288 call size _mt[203] _arg2[1300261]))
    unknown call_tmp[1300347] "expr temp" "maybe param" "maybe type" "temp"
    (1300350 'move' call_tmp[1300347](1300292 'call resolves' c"<" call_tmp[1300337] call_tmp[1300342]))
    unknown call_tmp[1300352] "expr temp" "maybe param" "maybe type" "temp"
    (1300355 'move' call_tmp[1300352](1300294 '&' call_tmp[1300317] call_tmp[1300332] call_tmp[1300347]))
    (1300305 'move' ret[1300300](1300304 'deref' call_tmp[1300352]))
    (1300302 return ret[1300300])
  }
  function chpl_byte_buffer[311826].<[1300242](arg _mt[1300244]:_MT[201], arg this[1300246]:chpl_byte_buffer[311826], arg _arg1[1300248]:chpl_byte_buffer[311826], arg _arg2[1300249]:chpl_byte_buffer[311826]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1300459]:bool[19] "RVV" "temp"
    unknown call_tmp[1300496] "expr temp" "maybe param" "maybe type" "temp"
    (1300499 'move' call_tmp[1300496](1300363 call isOwned _mt[203] _arg1[1300248]))
    unknown call_tmp[1300501] "expr temp" "maybe param" "maybe type" "temp"
    (1300504 'move' call_tmp[1300501](1300367 call isOwned _mt[203] _arg2[1300249]))
    unknown call_tmp[1300506] "expr temp" "maybe param" "maybe type" "temp"
    (1300509 'move' call_tmp[1300506](1300371 call chpl_field_lt call_tmp[1300496] call_tmp[1300501]))
    if call_tmp[1300506]
    {
      (1300464 'move' ret[1300459](1300463 'deref' 1))
      gotoReturn _end_<[1300457] _end_<[1300457]
    }
    unknown call_tmp[1300511] "expr temp" "maybe param" "maybe type" "temp"
    (1300514 'move' call_tmp[1300511](1300377 call isOwned _mt[203] _arg1[1300248]))
    unknown call_tmp[1300516] "expr temp" "maybe param" "maybe type" "temp"
    (1300519 'move' call_tmp[1300516](1300381 call isOwned _mt[203] _arg2[1300249]))
    unknown call_tmp[1300521] "expr temp" "maybe param" "maybe type" "temp"
    (1300524 'move' call_tmp[1300521](1300385 call chpl_field_gt call_tmp[1300511] call_tmp[1300516]))
    if call_tmp[1300521]
    {
      (1300469 'move' ret[1300459](1300468 'deref' 0))
      gotoReturn _end_<[1300457] _end_<[1300457]
    }
    unknown call_tmp[1300526] "expr temp" "maybe param" "maybe type" "temp"
    (1300529 'move' call_tmp[1300526](1300391 call data _mt[203] _arg1[1300248]))
    unknown call_tmp[1300531] "expr temp" "maybe param" "maybe type" "temp"
    (1300534 'move' call_tmp[1300531](1300395 call data _mt[203] _arg2[1300249]))
    unknown call_tmp[1300536] "expr temp" "maybe param" "maybe type" "temp"
    (1300539 'move' call_tmp[1300536](1300399 call chpl_field_lt call_tmp[1300526] call_tmp[1300531]))
    if call_tmp[1300536]
    {
      (1300474 'move' ret[1300459](1300473 'deref' 1))
      gotoReturn _end_<[1300457] _end_<[1300457]
    }
    unknown call_tmp[1300541] "expr temp" "maybe param" "maybe type" "temp"
    (1300544 'move' call_tmp[1300541](1300405 call data _mt[203] _arg1[1300248]))
    unknown call_tmp[1300546] "expr temp" "maybe param" "maybe type" "temp"
    (1300549 'move' call_tmp[1300546](1300409 call data _mt[203] _arg2[1300249]))
    unknown call_tmp[1300551] "expr temp" "maybe param" "maybe type" "temp"
    (1300554 'move' call_tmp[1300551](1300413 call chpl_field_gt call_tmp[1300541] call_tmp[1300546]))
    if call_tmp[1300551]
    {
      (1300479 'move' ret[1300459](1300478 'deref' 0))
      gotoReturn _end_<[1300457] _end_<[1300457]
    }
    unknown call_tmp[1300556] "expr temp" "maybe param" "maybe type" "temp"
    (1300559 'move' call_tmp[1300556](1300419 call size _mt[203] _arg1[1300248]))
    unknown call_tmp[1300561] "expr temp" "maybe param" "maybe type" "temp"
    (1300564 'move' call_tmp[1300561](1300423 call size _mt[203] _arg2[1300249]))
    unknown call_tmp[1300566] "expr temp" "maybe param" "maybe type" "temp"
    (1300569 'move' call_tmp[1300566](1300427 call chpl_field_lt call_tmp[1300556] call_tmp[1300561]))
    if call_tmp[1300566]
    {
      (1300484 'move' ret[1300459](1300483 'deref' 1))
      gotoReturn _end_<[1300457] _end_<[1300457]
    }
    unknown call_tmp[1300571] "expr temp" "maybe param" "maybe type" "temp"
    (1300574 'move' call_tmp[1300571](1300433 call size _mt[203] _arg1[1300248]))
    unknown call_tmp[1300576] "expr temp" "maybe param" "maybe type" "temp"
    (1300579 'move' call_tmp[1300576](1300437 call size _mt[203] _arg2[1300249]))
    unknown call_tmp[1300581] "expr temp" "maybe param" "maybe type" "temp"
    (1300584 'move' call_tmp[1300581](1300441 call chpl_field_gt call_tmp[1300571] call_tmp[1300576]))
    if call_tmp[1300581]
    {
      (1300489 'move' ret[1300459](1300488 'deref' 0))
      gotoReturn _end_<[1300457] _end_<[1300457]
    }
    (1300494 'move' ret[1300459](1300493 'deref' 0))
    label _end_<[1300457]
    (1300461 return ret[1300459])
  }
  where {
    unknown call_tmp[1300586] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1300589 'move' call_tmp[1300586](1300252 'typeof' _arg1[1300248]))
    unknown call_tmp[1300591] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1300594 'move' call_tmp[1300591](1300254 'typeof' _arg2[1300249]))
    unknown call_tmp[1300596] "expr temp" "maybe param" "maybe type" "temp"
    (1300599 'move' call_tmp[1300596](1300256 call == call_tmp[1300586] call_tmp[1300591]))
    unknown call_tmp[1300601] "expr temp" "maybe param" "maybe type" "temp"
    (1300604 'move' call_tmp[1300601](1300357 call chpl_fields_are_comparable[1300258] _arg1[1300248] _arg2[1300249]))
    (1300361 '&' call_tmp[1300596] call_tmp[1300601])
  }
  function chpl_fields_are_comparable[1300622](arg _arg1[1300624]:chpl_byte_buffer[311826], arg _arg2[1300625]:chpl_byte_buffer[311826]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1300664]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1300671] "expr temp" "maybe param" "maybe type" "temp"
    (1300674 'move' call_tmp[1300671](1300628 call isOwned _mt[203] _arg1[1300624]))
    unknown call_tmp[1300676] "expr temp" "maybe param" "maybe type" "temp"
    (1300679 'move' call_tmp[1300676](1300632 call isOwned _mt[203] _arg2[1300625]))
    unknown call_tmp[1300681] "expr temp" "maybe param" "maybe type" "temp"
    (1300684 'move' call_tmp[1300681](1300636 'call resolves' c"<=" call_tmp[1300671] call_tmp[1300676]))
    unknown call_tmp[1300686] "expr temp" "maybe param" "maybe type" "temp"
    (1300689 'move' call_tmp[1300686](1300638 call data _mt[203] _arg1[1300624]))
    unknown call_tmp[1300691] "expr temp" "maybe param" "maybe type" "temp"
    (1300694 'move' call_tmp[1300691](1300642 call data _mt[203] _arg2[1300625]))
    unknown call_tmp[1300696] "expr temp" "maybe param" "maybe type" "temp"
    (1300699 'move' call_tmp[1300696](1300646 'call resolves' c"<=" call_tmp[1300686] call_tmp[1300691]))
    unknown call_tmp[1300701] "expr temp" "maybe param" "maybe type" "temp"
    (1300704 'move' call_tmp[1300701](1300648 call size _mt[203] _arg1[1300624]))
    unknown call_tmp[1300706] "expr temp" "maybe param" "maybe type" "temp"
    (1300709 'move' call_tmp[1300706](1300652 call size _mt[203] _arg2[1300625]))
    unknown call_tmp[1300711] "expr temp" "maybe param" "maybe type" "temp"
    (1300714 'move' call_tmp[1300711](1300656 'call resolves' c"<=" call_tmp[1300701] call_tmp[1300706]))
    unknown call_tmp[1300716] "expr temp" "maybe param" "maybe type" "temp"
    (1300719 'move' call_tmp[1300716](1300658 '&' call_tmp[1300681] call_tmp[1300696] call_tmp[1300711]))
    (1300669 'move' ret[1300664](1300668 'deref' call_tmp[1300716]))
    (1300666 return ret[1300664])
  }
  function chpl_byte_buffer[311826].<=[1300606](arg _mt[1300608]:_MT[201], arg this[1300610]:chpl_byte_buffer[311826], arg _arg1[1300612]:chpl_byte_buffer[311826], arg _arg2[1300613]:chpl_byte_buffer[311826]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1300823]:bool[19] "RVV" "temp"
    unknown call_tmp[1300860] "expr temp" "maybe param" "maybe type" "temp"
    (1300863 'move' call_tmp[1300860](1300727 call isOwned _mt[203] _arg1[1300612]))
    unknown call_tmp[1300865] "expr temp" "maybe param" "maybe type" "temp"
    (1300868 'move' call_tmp[1300865](1300731 call isOwned _mt[203] _arg2[1300613]))
    unknown call_tmp[1300870] "expr temp" "maybe param" "maybe type" "temp"
    (1300873 'move' call_tmp[1300870](1300735 call chpl_field_lt call_tmp[1300860] call_tmp[1300865]))
    if call_tmp[1300870]
    {
      (1300828 'move' ret[1300823](1300827 'deref' 1))
      gotoReturn _end_<=[1300821] _end_<=[1300821]
    }
    unknown call_tmp[1300875] "expr temp" "maybe param" "maybe type" "temp"
    (1300878 'move' call_tmp[1300875](1300741 call isOwned _mt[203] _arg1[1300612]))
    unknown call_tmp[1300880] "expr temp" "maybe param" "maybe type" "temp"
    (1300883 'move' call_tmp[1300880](1300745 call isOwned _mt[203] _arg2[1300613]))
    unknown call_tmp[1300885] "expr temp" "maybe param" "maybe type" "temp"
    (1300888 'move' call_tmp[1300885](1300749 call chpl_field_gt call_tmp[1300875] call_tmp[1300880]))
    if call_tmp[1300885]
    {
      (1300833 'move' ret[1300823](1300832 'deref' 0))
      gotoReturn _end_<=[1300821] _end_<=[1300821]
    }
    unknown call_tmp[1300890] "expr temp" "maybe param" "maybe type" "temp"
    (1300893 'move' call_tmp[1300890](1300755 call data _mt[203] _arg1[1300612]))
    unknown call_tmp[1300895] "expr temp" "maybe param" "maybe type" "temp"
    (1300898 'move' call_tmp[1300895](1300759 call data _mt[203] _arg2[1300613]))
    unknown call_tmp[1300900] "expr temp" "maybe param" "maybe type" "temp"
    (1300903 'move' call_tmp[1300900](1300763 call chpl_field_lt call_tmp[1300890] call_tmp[1300895]))
    if call_tmp[1300900]
    {
      (1300838 'move' ret[1300823](1300837 'deref' 1))
      gotoReturn _end_<=[1300821] _end_<=[1300821]
    }
    unknown call_tmp[1300905] "expr temp" "maybe param" "maybe type" "temp"
    (1300908 'move' call_tmp[1300905](1300769 call data _mt[203] _arg1[1300612]))
    unknown call_tmp[1300910] "expr temp" "maybe param" "maybe type" "temp"
    (1300913 'move' call_tmp[1300910](1300773 call data _mt[203] _arg2[1300613]))
    unknown call_tmp[1300915] "expr temp" "maybe param" "maybe type" "temp"
    (1300918 'move' call_tmp[1300915](1300777 call chpl_field_gt call_tmp[1300905] call_tmp[1300910]))
    if call_tmp[1300915]
    {
      (1300843 'move' ret[1300823](1300842 'deref' 0))
      gotoReturn _end_<=[1300821] _end_<=[1300821]
    }
    unknown call_tmp[1300920] "expr temp" "maybe param" "maybe type" "temp"
    (1300923 'move' call_tmp[1300920](1300783 call size _mt[203] _arg1[1300612]))
    unknown call_tmp[1300925] "expr temp" "maybe param" "maybe type" "temp"
    (1300928 'move' call_tmp[1300925](1300787 call size _mt[203] _arg2[1300613]))
    unknown call_tmp[1300930] "expr temp" "maybe param" "maybe type" "temp"
    (1300933 'move' call_tmp[1300930](1300791 call chpl_field_lt call_tmp[1300920] call_tmp[1300925]))
    if call_tmp[1300930]
    {
      (1300848 'move' ret[1300823](1300847 'deref' 1))
      gotoReturn _end_<=[1300821] _end_<=[1300821]
    }
    unknown call_tmp[1300935] "expr temp" "maybe param" "maybe type" "temp"
    (1300938 'move' call_tmp[1300935](1300797 call size _mt[203] _arg1[1300612]))
    unknown call_tmp[1300940] "expr temp" "maybe param" "maybe type" "temp"
    (1300943 'move' call_tmp[1300940](1300801 call size _mt[203] _arg2[1300613]))
    unknown call_tmp[1300945] "expr temp" "maybe param" "maybe type" "temp"
    (1300948 'move' call_tmp[1300945](1300805 call chpl_field_gt call_tmp[1300935] call_tmp[1300940]))
    if call_tmp[1300945]
    {
      (1300853 'move' ret[1300823](1300852 'deref' 0))
      gotoReturn _end_<=[1300821] _end_<=[1300821]
    }
    (1300858 'move' ret[1300823](1300857 'deref' 1))
    label _end_<=[1300821]
    (1300825 return ret[1300823])
  }
  where {
    unknown call_tmp[1300950] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1300953 'move' call_tmp[1300950](1300616 'typeof' _arg1[1300612]))
    unknown call_tmp[1300955] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1300958 'move' call_tmp[1300955](1300618 'typeof' _arg2[1300613]))
    unknown call_tmp[1300960] "expr temp" "maybe param" "maybe type" "temp"
    (1300963 'move' call_tmp[1300960](1300620 call == call_tmp[1300950] call_tmp[1300955]))
    unknown call_tmp[1300965] "expr temp" "maybe param" "maybe type" "temp"
    (1300968 'move' call_tmp[1300965](1300721 call chpl_fields_are_comparable[1300622] _arg1[1300612] _arg2[1300613]))
    (1300725 '&' call_tmp[1300960] call_tmp[1300965])
  }
  function chpl_fields_are_comparable[1300986](arg _arg1[1300988]:chpl_byte_buffer[311826], arg _arg2[1300989]:chpl_byte_buffer[311826]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1301028]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1301035] "expr temp" "maybe param" "maybe type" "temp"
    (1301038 'move' call_tmp[1301035](1300992 call isOwned _mt[203] _arg1[1300988]))
    unknown call_tmp[1301040] "expr temp" "maybe param" "maybe type" "temp"
    (1301043 'move' call_tmp[1301040](1300996 call isOwned _mt[203] _arg2[1300989]))
    unknown call_tmp[1301045] "expr temp" "maybe param" "maybe type" "temp"
    (1301048 'move' call_tmp[1301045](1301000 'call resolves' c">" call_tmp[1301035] call_tmp[1301040]))
    unknown call_tmp[1301050] "expr temp" "maybe param" "maybe type" "temp"
    (1301053 'move' call_tmp[1301050](1301002 call data _mt[203] _arg1[1300988]))
    unknown call_tmp[1301055] "expr temp" "maybe param" "maybe type" "temp"
    (1301058 'move' call_tmp[1301055](1301006 call data _mt[203] _arg2[1300989]))
    unknown call_tmp[1301060] "expr temp" "maybe param" "maybe type" "temp"
    (1301063 'move' call_tmp[1301060](1301010 'call resolves' c">" call_tmp[1301050] call_tmp[1301055]))
    unknown call_tmp[1301065] "expr temp" "maybe param" "maybe type" "temp"
    (1301068 'move' call_tmp[1301065](1301012 call size _mt[203] _arg1[1300988]))
    unknown call_tmp[1301070] "expr temp" "maybe param" "maybe type" "temp"
    (1301073 'move' call_tmp[1301070](1301016 call size _mt[203] _arg2[1300989]))
    unknown call_tmp[1301075] "expr temp" "maybe param" "maybe type" "temp"
    (1301078 'move' call_tmp[1301075](1301020 'call resolves' c">" call_tmp[1301065] call_tmp[1301070]))
    unknown call_tmp[1301080] "expr temp" "maybe param" "maybe type" "temp"
    (1301083 'move' call_tmp[1301080](1301022 '&' call_tmp[1301045] call_tmp[1301060] call_tmp[1301075]))
    (1301033 'move' ret[1301028](1301032 'deref' call_tmp[1301080]))
    (1301030 return ret[1301028])
  }
  function chpl_byte_buffer[311826].>[1300970](arg _mt[1300972]:_MT[201], arg this[1300974]:chpl_byte_buffer[311826], arg _arg1[1300976]:chpl_byte_buffer[311826], arg _arg2[1300977]:chpl_byte_buffer[311826]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1301187]:bool[19] "RVV" "temp"
    unknown call_tmp[1301224] "expr temp" "maybe param" "maybe type" "temp"
    (1301227 'move' call_tmp[1301224](1301091 call isOwned _mt[203] _arg1[1300976]))
    unknown call_tmp[1301229] "expr temp" "maybe param" "maybe type" "temp"
    (1301232 'move' call_tmp[1301229](1301095 call isOwned _mt[203] _arg2[1300977]))
    unknown call_tmp[1301234] "expr temp" "maybe param" "maybe type" "temp"
    (1301237 'move' call_tmp[1301234](1301099 call chpl_field_gt call_tmp[1301224] call_tmp[1301229]))
    if call_tmp[1301234]
    {
      (1301192 'move' ret[1301187](1301191 'deref' 1))
      gotoReturn _end_>[1301185] _end_>[1301185]
    }
    unknown call_tmp[1301239] "expr temp" "maybe param" "maybe type" "temp"
    (1301242 'move' call_tmp[1301239](1301105 call isOwned _mt[203] _arg1[1300976]))
    unknown call_tmp[1301244] "expr temp" "maybe param" "maybe type" "temp"
    (1301247 'move' call_tmp[1301244](1301109 call isOwned _mt[203] _arg2[1300977]))
    unknown call_tmp[1301249] "expr temp" "maybe param" "maybe type" "temp"
    (1301252 'move' call_tmp[1301249](1301113 call chpl_field_lt call_tmp[1301239] call_tmp[1301244]))
    if call_tmp[1301249]
    {
      (1301197 'move' ret[1301187](1301196 'deref' 0))
      gotoReturn _end_>[1301185] _end_>[1301185]
    }
    unknown call_tmp[1301254] "expr temp" "maybe param" "maybe type" "temp"
    (1301257 'move' call_tmp[1301254](1301119 call data _mt[203] _arg1[1300976]))
    unknown call_tmp[1301259] "expr temp" "maybe param" "maybe type" "temp"
    (1301262 'move' call_tmp[1301259](1301123 call data _mt[203] _arg2[1300977]))
    unknown call_tmp[1301264] "expr temp" "maybe param" "maybe type" "temp"
    (1301267 'move' call_tmp[1301264](1301127 call chpl_field_gt call_tmp[1301254] call_tmp[1301259]))
    if call_tmp[1301264]
    {
      (1301202 'move' ret[1301187](1301201 'deref' 1))
      gotoReturn _end_>[1301185] _end_>[1301185]
    }
    unknown call_tmp[1301269] "expr temp" "maybe param" "maybe type" "temp"
    (1301272 'move' call_tmp[1301269](1301133 call data _mt[203] _arg1[1300976]))
    unknown call_tmp[1301274] "expr temp" "maybe param" "maybe type" "temp"
    (1301277 'move' call_tmp[1301274](1301137 call data _mt[203] _arg2[1300977]))
    unknown call_tmp[1301279] "expr temp" "maybe param" "maybe type" "temp"
    (1301282 'move' call_tmp[1301279](1301141 call chpl_field_lt call_tmp[1301269] call_tmp[1301274]))
    if call_tmp[1301279]
    {
      (1301207 'move' ret[1301187](1301206 'deref' 0))
      gotoReturn _end_>[1301185] _end_>[1301185]
    }
    unknown call_tmp[1301284] "expr temp" "maybe param" "maybe type" "temp"
    (1301287 'move' call_tmp[1301284](1301147 call size _mt[203] _arg1[1300976]))
    unknown call_tmp[1301289] "expr temp" "maybe param" "maybe type" "temp"
    (1301292 'move' call_tmp[1301289](1301151 call size _mt[203] _arg2[1300977]))
    unknown call_tmp[1301294] "expr temp" "maybe param" "maybe type" "temp"
    (1301297 'move' call_tmp[1301294](1301155 call chpl_field_gt call_tmp[1301284] call_tmp[1301289]))
    if call_tmp[1301294]
    {
      (1301212 'move' ret[1301187](1301211 'deref' 1))
      gotoReturn _end_>[1301185] _end_>[1301185]
    }
    unknown call_tmp[1301299] "expr temp" "maybe param" "maybe type" "temp"
    (1301302 'move' call_tmp[1301299](1301161 call size _mt[203] _arg1[1300976]))
    unknown call_tmp[1301304] "expr temp" "maybe param" "maybe type" "temp"
    (1301307 'move' call_tmp[1301304](1301165 call size _mt[203] _arg2[1300977]))
    unknown call_tmp[1301309] "expr temp" "maybe param" "maybe type" "temp"
    (1301312 'move' call_tmp[1301309](1301169 call chpl_field_lt call_tmp[1301299] call_tmp[1301304]))
    if call_tmp[1301309]
    {
      (1301217 'move' ret[1301187](1301216 'deref' 0))
      gotoReturn _end_>[1301185] _end_>[1301185]
    }
    (1301222 'move' ret[1301187](1301221 'deref' 0))
    label _end_>[1301185]
    (1301189 return ret[1301187])
  }
  where {
    unknown call_tmp[1301314] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1301317 'move' call_tmp[1301314](1300980 'typeof' _arg1[1300976]))
    unknown call_tmp[1301319] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1301322 'move' call_tmp[1301319](1300982 'typeof' _arg2[1300977]))
    unknown call_tmp[1301324] "expr temp" "maybe param" "maybe type" "temp"
    (1301327 'move' call_tmp[1301324](1300984 call == call_tmp[1301314] call_tmp[1301319]))
    unknown call_tmp[1301329] "expr temp" "maybe param" "maybe type" "temp"
    (1301332 'move' call_tmp[1301329](1301085 call chpl_fields_are_comparable[1300986] _arg1[1300976] _arg2[1300977]))
    (1301089 '&' call_tmp[1301324] call_tmp[1301329])
  }
  function chpl_fields_are_comparable[1301350](arg _arg1[1301352]:chpl_byte_buffer[311826], arg _arg2[1301353]:chpl_byte_buffer[311826]) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1301392]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1301399] "expr temp" "maybe param" "maybe type" "temp"
    (1301402 'move' call_tmp[1301399](1301356 call isOwned _mt[203] _arg1[1301352]))
    unknown call_tmp[1301404] "expr temp" "maybe param" "maybe type" "temp"
    (1301407 'move' call_tmp[1301404](1301360 call isOwned _mt[203] _arg2[1301353]))
    unknown call_tmp[1301409] "expr temp" "maybe param" "maybe type" "temp"
    (1301412 'move' call_tmp[1301409](1301364 'call resolves' c">=" call_tmp[1301399] call_tmp[1301404]))
    unknown call_tmp[1301414] "expr temp" "maybe param" "maybe type" "temp"
    (1301417 'move' call_tmp[1301414](1301366 call data _mt[203] _arg1[1301352]))
    unknown call_tmp[1301419] "expr temp" "maybe param" "maybe type" "temp"
    (1301422 'move' call_tmp[1301419](1301370 call data _mt[203] _arg2[1301353]))
    unknown call_tmp[1301424] "expr temp" "maybe param" "maybe type" "temp"
    (1301427 'move' call_tmp[1301424](1301374 'call resolves' c">=" call_tmp[1301414] call_tmp[1301419]))
    unknown call_tmp[1301429] "expr temp" "maybe param" "maybe type" "temp"
    (1301432 'move' call_tmp[1301429](1301376 call size _mt[203] _arg1[1301352]))
    unknown call_tmp[1301434] "expr temp" "maybe param" "maybe type" "temp"
    (1301437 'move' call_tmp[1301434](1301380 call size _mt[203] _arg2[1301353]))
    unknown call_tmp[1301439] "expr temp" "maybe param" "maybe type" "temp"
    (1301442 'move' call_tmp[1301439](1301384 'call resolves' c">=" call_tmp[1301429] call_tmp[1301434]))
    unknown call_tmp[1301444] "expr temp" "maybe param" "maybe type" "temp"
    (1301447 'move' call_tmp[1301444](1301386 '&' call_tmp[1301409] call_tmp[1301424] call_tmp[1301439]))
    (1301397 'move' ret[1301392](1301396 'deref' call_tmp[1301444]))
    (1301394 return ret[1301392])
  }
  function chpl_byte_buffer[311826].>=[1301334](arg _mt[1301336]:_MT[201], arg this[1301338]:chpl_byte_buffer[311826], arg _arg1[1301340]:chpl_byte_buffer[311826], arg _arg2[1301341]:chpl_byte_buffer[311826]) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1301551]:bool[19] "RVV" "temp"
    unknown call_tmp[1301588] "expr temp" "maybe param" "maybe type" "temp"
    (1301591 'move' call_tmp[1301588](1301455 call isOwned _mt[203] _arg1[1301340]))
    unknown call_tmp[1301593] "expr temp" "maybe param" "maybe type" "temp"
    (1301596 'move' call_tmp[1301593](1301459 call isOwned _mt[203] _arg2[1301341]))
    unknown call_tmp[1301598] "expr temp" "maybe param" "maybe type" "temp"
    (1301601 'move' call_tmp[1301598](1301463 call chpl_field_gt call_tmp[1301588] call_tmp[1301593]))
    if call_tmp[1301598]
    {
      (1301556 'move' ret[1301551](1301555 'deref' 1))
      gotoReturn _end_>=[1301549] _end_>=[1301549]
    }
    unknown call_tmp[1301603] "expr temp" "maybe param" "maybe type" "temp"
    (1301606 'move' call_tmp[1301603](1301469 call isOwned _mt[203] _arg1[1301340]))
    unknown call_tmp[1301608] "expr temp" "maybe param" "maybe type" "temp"
    (1301611 'move' call_tmp[1301608](1301473 call isOwned _mt[203] _arg2[1301341]))
    unknown call_tmp[1301613] "expr temp" "maybe param" "maybe type" "temp"
    (1301616 'move' call_tmp[1301613](1301477 call chpl_field_lt call_tmp[1301603] call_tmp[1301608]))
    if call_tmp[1301613]
    {
      (1301561 'move' ret[1301551](1301560 'deref' 0))
      gotoReturn _end_>=[1301549] _end_>=[1301549]
    }
    unknown call_tmp[1301618] "expr temp" "maybe param" "maybe type" "temp"
    (1301621 'move' call_tmp[1301618](1301483 call data _mt[203] _arg1[1301340]))
    unknown call_tmp[1301623] "expr temp" "maybe param" "maybe type" "temp"
    (1301626 'move' call_tmp[1301623](1301487 call data _mt[203] _arg2[1301341]))
    unknown call_tmp[1301628] "expr temp" "maybe param" "maybe type" "temp"
    (1301631 'move' call_tmp[1301628](1301491 call chpl_field_gt call_tmp[1301618] call_tmp[1301623]))
    if call_tmp[1301628]
    {
      (1301566 'move' ret[1301551](1301565 'deref' 1))
      gotoReturn _end_>=[1301549] _end_>=[1301549]
    }
    unknown call_tmp[1301633] "expr temp" "maybe param" "maybe type" "temp"
    (1301636 'move' call_tmp[1301633](1301497 call data _mt[203] _arg1[1301340]))
    unknown call_tmp[1301638] "expr temp" "maybe param" "maybe type" "temp"
    (1301641 'move' call_tmp[1301638](1301501 call data _mt[203] _arg2[1301341]))
    unknown call_tmp[1301643] "expr temp" "maybe param" "maybe type" "temp"
    (1301646 'move' call_tmp[1301643](1301505 call chpl_field_lt call_tmp[1301633] call_tmp[1301638]))
    if call_tmp[1301643]
    {
      (1301571 'move' ret[1301551](1301570 'deref' 0))
      gotoReturn _end_>=[1301549] _end_>=[1301549]
    }
    unknown call_tmp[1301648] "expr temp" "maybe param" "maybe type" "temp"
    (1301651 'move' call_tmp[1301648](1301511 call size _mt[203] _arg1[1301340]))
    unknown call_tmp[1301653] "expr temp" "maybe param" "maybe type" "temp"
    (1301656 'move' call_tmp[1301653](1301515 call size _mt[203] _arg2[1301341]))
    unknown call_tmp[1301658] "expr temp" "maybe param" "maybe type" "temp"
    (1301661 'move' call_tmp[1301658](1301519 call chpl_field_gt call_tmp[1301648] call_tmp[1301653]))
    if call_tmp[1301658]
    {
      (1301576 'move' ret[1301551](1301575 'deref' 1))
      gotoReturn _end_>=[1301549] _end_>=[1301549]
    }
    unknown call_tmp[1301663] "expr temp" "maybe param" "maybe type" "temp"
    (1301666 'move' call_tmp[1301663](1301525 call size _mt[203] _arg1[1301340]))
    unknown call_tmp[1301668] "expr temp" "maybe param" "maybe type" "temp"
    (1301671 'move' call_tmp[1301668](1301529 call size _mt[203] _arg2[1301341]))
    unknown call_tmp[1301673] "expr temp" "maybe param" "maybe type" "temp"
    (1301676 'move' call_tmp[1301673](1301533 call chpl_field_lt call_tmp[1301663] call_tmp[1301668]))
    if call_tmp[1301673]
    {
      (1301581 'move' ret[1301551](1301580 'deref' 0))
      gotoReturn _end_>=[1301549] _end_>=[1301549]
    }
    (1301586 'move' ret[1301551](1301585 'deref' 1))
    label _end_>=[1301549]
    (1301553 return ret[1301551])
  }
  where {
    unknown call_tmp[1301678] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1301681 'move' call_tmp[1301678](1301344 'typeof' _arg1[1301340]))
    unknown call_tmp[1301683] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1301686 'move' call_tmp[1301683](1301346 'typeof' _arg2[1301341]))
    unknown call_tmp[1301688] "expr temp" "maybe param" "maybe type" "temp"
    (1301691 'move' call_tmp[1301688](1301348 call == call_tmp[1301678] call_tmp[1301683]))
    unknown call_tmp[1301693] "expr temp" "maybe param" "maybe type" "temp"
    (1301696 'move' call_tmp[1301693](1301449 call chpl_fields_are_comparable[1301350] _arg1[1301340] _arg2[1301341]))
    (1301453 '&' call_tmp[1301688] call_tmp[1301693])
  }
  type chpl_byte_buffer[311826] val isOwned[311805]:int(8)[56](311807 call int(64)[10] 8) unknown data[311812](311814 call c_ptr[46891](?) c_char[562]) val size[311819]:uint(64)[86](311821 call uint(64)[86] 64)
  function chpl_byte_buffer_free[311828](arg cb[311831]:chpl_byte_buffer[311826]) : void[4] "extern" "local args" "no fn body"
  {
  }
  unknown chpl__exportTypeChplByteBuffer[311837] "dead at end of block" "insert auto destroy" "type variable"
  function chpl__exportRetStringOrBytes[311840](ref arg val[311842]:_any[141](?)) : _unknown[42]
  {
    unknown ret[631540] "RVV" "temp"
    unknown result[311847] "dead at end of block" "insert auto destroy"
    (654153 'default init var' result[311847] chpl_byte_buffer[311826])
    (311850 'end of statement')
    unknown call_tmp[939147] "expr temp" "maybe param" "maybe type" "temp"
    (939150 'move' call_tmp[939147](311854 call isOwned _mt[203] result[311847]))
    unknown call_tmp[939154] "expr temp" "maybe param" "maybe type" "temp"
    (939157 'move' call_tmp[939154](311860 call isOwned _mt[203] val[311842]))
    unknown call_tmp[939159] "expr temp" "maybe param" "maybe type" "temp"
    (939162 'move' call_tmp[939159](311864 call int(64)[10] 8))
    unknown call_tmp[939164] "expr temp" "maybe param" "maybe type" "temp"
    (939167 'move' call_tmp[939164](311857 call : call_tmp[939154] call_tmp[939159]))
    (311851 call = call_tmp[939147] call_tmp[939164])
    (569016 'end of statement' result[311847])
    unknown call_tmp[939171] "expr temp" "maybe param" "maybe type" "temp"
    (939174 'move' call_tmp[939171](311869 call data _mt[203] result[311847]))
    unknown call_tmp[939178] "expr temp" "maybe param" "maybe type" "temp"
    (939181 'move' call_tmp[939178](311875 call buff _mt[203] val[311842]))
    unknown call_tmp[939183] "expr temp" "maybe param" "maybe type" "temp"
    (939186 'move' call_tmp[939183](311879 call c_ptr[46891](?) c_char[562]))
    unknown call_tmp[939188] "expr temp" "maybe param" "maybe type" "temp"
    (939191 'move' call_tmp[939188](311872 call : call_tmp[939178] call_tmp[939183]))
    (311866 call = call_tmp[939171] call_tmp[939188])
    (569018 'end of statement' result[311847])
    unknown call_tmp[939195] "expr temp" "maybe param" "maybe type" "temp"
    (939198 'move' call_tmp[939195](311884 call size _mt[203] result[311847]))
    unknown call_tmp[939202] "expr temp" "maybe param" "maybe type" "temp"
    (939205 'move' call_tmp[939202](311890 call numBytes _mt[203] val[311842]))
    unknown call_tmp[939207] "expr temp" "maybe param" "maybe type" "temp"
    (939210 'move' call_tmp[939207](311894 call uint(64)[86] 64))
    unknown call_tmp[939212] "expr temp" "maybe param" "maybe type" "temp"
    (939215 'move' call_tmp[939212](311887 call : call_tmp[939202] call_tmp[939207]))
    (311881 call = call_tmp[939195] call_tmp[939212])
    (569020 'end of statement' result[311847])
    unknown call_tmp[939219] "expr temp" "maybe param" "maybe type" "temp"
    (939222 'move' call_tmp[939219](311899 call isOwned _mt[203] val[311842]))
    (311896 call = call_tmp[939219] 0)
    (569022 'end of statement')
    (631546 'move' ret[631540](631545 'coerce' result[311847] chpl_byte_buffer[311826]))
    gotoReturn _end_chpl__exportRetStringOrBytes[631538] _end_chpl__exportRetStringOrBytes[631538]
    (569023 'end of statement' result[311847])
    label _end_chpl__exportRetStringOrBytes[631538]
    (631542 return ret[631540])
  }
  { scopeless type
    chpl_byte_buffer[311826]
  }
  function chpl__exportRet[311908](ref arg val[311911]:string[244], arg rt[311915]:chpl_byte_buffer[311826]) : _unknown[42]
  {
    unknown ret[631552] "RVV" "temp"
    unknown call_tmp[939224] "expr temp" "maybe param" "maybe type" "temp"
    (939227 'move' call_tmp[939224](311922 call chpl__exportRetStringOrBytes val[311911]))
    (631558 'move' ret[631552](631557 'coerce' call_tmp[939224] rt[311915]))
    (631554 return ret[631552])
  }
  { scopeless type
    rt[311915]
  }
  function chpl__exportRet[311927](ref arg val[311930]:bytes[232], arg rt[311934]:chpl_byte_buffer[311826]) : _unknown[42]
  {
    unknown ret[631562] "RVV" "temp"
    unknown call_tmp[939229] "expr temp" "maybe param" "maybe type" "temp"
    (939232 'move' call_tmp[939229](311941 call chpl__exportRetStringOrBytes val[311930]))
    (631568 'move' ret[631562](631567 'coerce' call_tmp[939229] rt[311934]))
    (631564 return ret[631562])
  }
  { scopeless type
    rt[311934]
  }
  function chpl__exportArg[311946](arg cp[311949]:bool[19], arg val[311953]:chpl_byte_buffer[311826], arg rt[311957]:string[244]) : _unknown[42]
  {
    unknown ret[631572] "RVV" "temp"
    unknown call_tmp[939236] "expr temp" "maybe param" "maybe type" "temp"
    (939239 'move' call_tmp[939236](311967 call data _mt[203] val[311953]))
    unknown call_tmp[939241] "expr temp" "maybe param" "maybe type" "temp"
    (939244 'move' call_tmp[939241](311971 call c_ptrConst[46990](?) c_char[562]))
    unknown call_tmp[939246] "maybe param" "maybe type" "temp"
    (939249 'move' call_tmp[939246](311964 call : call_tmp[939236] call_tmp[939241]))
    unknown data[311963] "dead at end of block" "insert auto destroy"
    (654155 'init var' data[311963] call_tmp[939246])
    (311974 'end of statement')
    unknown call_tmp[939253] "expr temp" "maybe param" "maybe type" "temp"
    (939256 'move' call_tmp[939253](311978 call size _mt[203] val[311953]))
    unknown call_tmp[939260] "maybe param" "maybe type" "temp"
    (939263 'move' call_tmp[939260](311984 call(311981 call (partial) safeCast _mt[203] call_tmp[939253]) int(64)[10]))
    unknown size[311976] "dead at end of block" "insert auto destroy"
    (654157 'init var' size[311976] call_tmp[939260])
    (311987 'end of statement')
    Try!
    {
      {
        unknown call_tmp[939265] "expr temp" "maybe param" "maybe type" "temp"
        (939268 'move' call_tmp[939265](311999 call _cond_test cp[311949]))
        if call_tmp[939265]
        {
          unknown call_tmp[939272] "expr temp" "maybe param" "maybe type" "temp"
          (939275 'move' call_tmp[939272](311994 call(311991 call (partial) createCopyingBuffer _mt[203] string[244]) data[311963] size[311976]))
          (631578 'move' ret[631572](631577 'coerce' call_tmp[939272] rt[311957]))
          gotoReturn _end_chpl__exportArg[631570] _end_chpl__exportArg[631570]
          (569027 'end of statement' data[311963] size[311976])
        }
        unknown call_tmp[939279] "expr temp" "maybe param" "maybe type" "temp"
        (939282 'move' call_tmp[939279](312009 call(312006 call (partial) createBorrowingBuffer _mt[203] string[244]) data[311963] size[311976]))
        (631584 'move' ret[631572](631583 'coerce' call_tmp[939279] rt[311957]))
        gotoReturn _end_chpl__exportArg[631570] _end_chpl__exportArg[631570]
        (569030 'end of statement' data[311963] size[311976])
      }
    }
    label _end_chpl__exportArg[631570]
    (631574 return ret[631572])
  }
  { scopeless type
    rt[311957]
  }
  function chpl__exportArg[312018](arg cp[312021]:bool[19], arg val[312025]:chpl_byte_buffer[311826], arg rt[312029]:bytes[232]) : _unknown[42]
  {
    unknown ret[631590] "RVV" "temp"
    unknown call_tmp[939286] "expr temp" "maybe param" "maybe type" "temp"
    (939289 'move' call_tmp[939286](312039 call data _mt[203] val[312025]))
    unknown call_tmp[939291] "expr temp" "maybe param" "maybe type" "temp"
    (939294 'move' call_tmp[939291](312043 call c_ptrConst[46990](?) c_char[562]))
    unknown call_tmp[939296] "maybe param" "maybe type" "temp"
    (939299 'move' call_tmp[939296](312036 call : call_tmp[939286] call_tmp[939291]))
    unknown data[312035] "dead at end of block" "insert auto destroy"
    (654159 'init var' data[312035] call_tmp[939296])
    (312046 'end of statement')
    unknown call_tmp[939303] "expr temp" "maybe param" "maybe type" "temp"
    (939306 'move' call_tmp[939303](312050 call size _mt[203] val[312025]))
    unknown call_tmp[939310] "maybe param" "maybe type" "temp"
    (939313 'move' call_tmp[939310](312056 call(312053 call (partial) safeCast _mt[203] call_tmp[939303]) int(64)[10]))
    unknown size[312048] "dead at end of block" "insert auto destroy"
    (654161 'init var' size[312048] call_tmp[939310])
    (312059 'end of statement')
    Try!
    {
      {
        unknown call_tmp[939315] "expr temp" "maybe param" "maybe type" "temp"
        (939318 'move' call_tmp[939315](312071 call _cond_test cp[312021]))
        if call_tmp[939315]
        {
          unknown call_tmp[939322] "expr temp" "maybe param" "maybe type" "temp"
          (939325 'move' call_tmp[939322](312066 call(312063 call (partial) createCopyingBuffer _mt[203] bytes[232]) data[312035] size[312048]))
          (631596 'move' ret[631590](631595 'coerce' call_tmp[939322] rt[312029]))
          gotoReturn _end_chpl__exportArg[631588] _end_chpl__exportArg[631588]
          (569033 'end of statement' data[312035] size[312048])
        }
        unknown call_tmp[939329] "expr temp" "maybe param" "maybe type" "temp"
        (939332 'move' call_tmp[939329](312081 call(312078 call (partial) createBorrowingBuffer _mt[203] bytes[232]) data[312035] size[312048]))
        (631602 'move' ret[631590](631601 'coerce' call_tmp[939329] rt[312029]))
        gotoReturn _end_chpl__exportArg[631588] _end_chpl__exportArg[631588]
        (569036 'end of statement' data[312035] size[312048])
      }
    }
    label _end_chpl__exportArg[631588]
    (631592 return ret[631590])
  }
  { scopeless type
    rt[312029]
  }
  (397067 'used modules list'(311747 'use' ChapelStandard[315387])(311750 'use' CTypes[51217]))
}
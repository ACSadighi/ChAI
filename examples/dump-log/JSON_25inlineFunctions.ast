AST dump for JSON after pass inlineFunctions.
Module use list: ChapelStandard IO CTypes Map List 

{
  function chpl__init_JSON[468666]() : void[4] "insert line file info" "module init" "resolved"
  {
    (637985 return _void[46])
  }
  function qio_channel_skip_json_field[354546](const in arg threadsafe[354549]:int(32)[66], const in arg ch[354553]:c_ptr(qio_channel_t)[1466049]) : errorCode[12828] "extern" "local args" "no fn body" "private" "resolved"
  {
  }
  function outOfOrderHelper[3288493](const  ref arg reader[3288497]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5507324]:Error[85511], ref arg _retArg[5588642]:(map(string,int(64),false),int(64))[3312520]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3288499]:(map(string,int(64),false),int(64))[3312520] "dead after last mention" "RVV" "temp"
    val m[3288507]:map(string,int(64),false)[3288794] "dead at end of block" "insert auto destroy"
    val call_tmp[3288509]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_resizeThreshold[3313366]:real(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val resizeThreshold[8454548]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (8454550 'move' resizeThreshold[8454548] defaultHashTableResizeThreshold[209951])
    (3313370 'move' default_arg_resizeThreshold[3313366] resizeThreshold[8454548])
    val default_arg_initialCapacity[3313392]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (3312697 call init[3312704] m[3288507] default_arg_resizeThreshold[3313366] 16)
    const-val _return_tmp_[5468763]:int(64)[10] "dead after last mention" "temp"
    val error[5507327]:Error[85511] "error variable" "temp"
    (5507329 'move' error[5507327] nil[32])
    (5468765 'move' _return_tmp_[5468763](3288525 call mark[3288983] reader[3288497] error[5507327]))
    val errorExists[7301504]:bool[19] "temp"
    (7301509 'move' errorExists[7301504](7301506 '!=' error[5507327] nil[32]))
    if errorExists[7301504]
    {
      (5507333 '=' error_out[5507324] error[5507327])
      ref i_x[8622094]:map(string,int(64),false)[3288794] "temp"
      (8622098 'move' i_x[8622094](8622096 'set reference' m[3288507]))
      const-ref _field_destructor_tmp_[8622101]:chpl__hashtable(string,int(64))[3288849] "temp"
      (8622103 'move' _field_destructor_tmp_[8622101](8622105 '.' i_x[8622094] table[3288779]))
      (8622109 call deinit[4217590] _field_destructor_tmp_[8622101])
      gotoErrorHandlingReturn _end_outOfOrderHelper[3288734] _end_outOfOrderHelper[3288734]
    }
    val default_arg_ignoreWhitespace[3289537]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5507342]:Error[85511] "error variable" "temp"
    (5507344 'move' error[5507342] nil[32])
    val inlineImm[8434410]:string[244] "temp"
    (8434413 'move' inlineImm[8434410] "{")
    ref i_literal[8434415]:string[244] "temp"
    (8434419 'move' i_literal[8434415](8434417 'set reference' inlineImm[8434410]))
    val inlineImm[8434421]:bool[19] "temp"
    (8434424 'move' inlineImm[8434421] 1)
    ref i_error_out[8434426]:Error[85511] "temp"
    (8434430 'move' i_error_out[8434426](8434428 'set reference' error[5507342]))
    val ret[8434433]:void[4] "dead after last mention" "RVV" "temp"
    val error[8434435]:Error[85511] "error variable" "temp"
    (8434437 'move' error[8434435] nil[32])
    ref call_tmp[8434440]:locale[234] "dead after last mention" "maybe param" "temp"
    (8434442 'move' call_tmp[8434440](8434444 '.' reader[3288497] _home[3276771]))
    val coerce_tmp[8434447]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8434449 'move' coerce_tmp[8434447](8434451 '.v' call_tmp[8434440] _instance[135293]))
    val coerce_tmp[8434454]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8434456 'move' coerce_tmp[8434454](8434458 'cast' RootClass[236] coerce_tmp[8434447]))
    const-val call_tmp[8434461]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434463 'move' call_tmp[8434461](8434465 '==' coerce_tmp[8434454] nil[32]))
    if call_tmp[8434461]
    {
      (8434471 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8434474]:Error[85511] "error variable" "temp"
    (8434476 'move' error[8434474] nil[32])
    const-val err[8434479]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8434481]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434483 'move' call_tmp[8434481](8434485 'cast' int(32)[66] 0))
    const-val call_tmp[8434488]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434490 'move' call_tmp[8434488](8434493 call qio_int_to_err[12856] call_tmp[8434481]))
    (8434495 'move' err[8434479] call_tmp[8434488])
    val coerce_tmp[8434498]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8434500 'move' coerce_tmp[8434498](8434502 '.v' reader[3288497] _channel_internal[3276776]))
    const-val call_tmp[8434505]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434507 'move' call_tmp[8434505](8434509 'ptr_eq' coerce_tmp[8434498] nil[32]))
    if call_tmp[8434505]
    {
      const-val call_tmp[8434514]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8434516]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8434518 'move' coerce_tmp[8434516](8434520 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8434523]:owned SystemError[1554765] "temp"
      (8434526 call createSystemError[14072] coerce_tmp[8434516] "Operation attempted on an invalid fileReader" ret_tmp[8434523])
      (8434530 'move' call_tmp[8434514] ret_tmp[8434523])
      val call_tmp[8434533]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8434535]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8434537]:owned Error[1498203] "temp"
      ref i_x[8434539]:owned SystemError[1554765] "temp"
      (8434541 'move' i_x[8434539](8434543 'set reference' call_tmp[8434514]))
      ref i__retArg[8434545]:owned Error[1498203] "temp"
      (8434547 'move' i__retArg[8434545](8434549 'set reference' ret_tmp[8434537]))
      val _formal_tmp_x[8434551]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8434553 'move' _formal_tmp_x[8434551] i_x[8434539])
      const-val ret[8434556]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8434558]:owned SystemError[1554765] "temp"
      (8434560 'move' i_this[8434558](8434562 'set reference' _formal_tmp_x[8434551]))
      val coerce_tmp[8434564]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8434566 'move' coerce_tmp[8434564](8434568 '.v' i_this[8434558] chpl_p[1554760]))
      val call_tmp[8434571]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8434573 'move' call_tmp[8434571](8434575 'cast' Error[85511] coerce_tmp[8434564]))
      val castPtr[8434578]:Error[85511] "dead at end of block" "insert auto destroy"
      (8434580 'move' castPtr[8434578] call_tmp[8434571])
      ref i_this[8434583]:owned SystemError[1554765] "temp"
      (8434585 'move' i_this[8434583](8434587 'set reference' _formal_tmp_x[8434551]))
      val tmp[8434589]:SystemError[13599] "temp"
      (8434591 'move' tmp[8434589](8434593 'cast' SystemError[13599] nil[32]))
      (8434596 '.=' i_this[8434583] chpl_p[1554760] tmp[8434589])
      val coerce_tmp[8434600]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8434602 'move' coerce_tmp[8434600](8434604 'cast' RootClass[236] call_tmp[8434571]))
      const-val call_tmp[8434607]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8434609 'move' call_tmp[8434607](8434611 '==' coerce_tmp[8434600] nil[32]))
      if call_tmp[8434607]
      {
        (8434617 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8434620]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8434622]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8434625 call init[1499358] initTemp[8434622] castPtr[8434578])
      (8434628 'move' call_tmp[8434620] initTemp[8434622])
      (8434631 'move' ret[8434556] call_tmp[8434620])
      (8434635 call chpl__autoDestroy[3968549] _formal_tmp_x[8434551])
      (8434637 '=' i__retArg[8434545] ret[8434556])
      (8434640 'move' coerce_tmp[8434535] ret_tmp[8434537])
      const-val _formal_tmp_in_err[8434643]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8434645 'move' _formal_tmp_in_err[8434643] coerce_tmp[8434535])
      (8434648 'move' call_tmp[8434533](8434651 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8434643]))
      (8434653 '=' error[8434474] call_tmp[8434533])
      gotoErrorHandlingReturn _endlock[8434716] _endlock[8434716]
    }
    const-val call_tmp[8434659]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434661 'move' call_tmp[8434659](8434664 call qio_err_iserr[12868] err[8434479]))
    const-val call_tmp[8434666]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434668 'move' call_tmp[8434666](8434670 '!=' call_tmp[8434659] 0))
    if call_tmp[8434666]
    {
      val error[8434675]:Error[85511] "error variable" "temp"
      (8434677 'move' error[8434675] nil[32])
      (8434681 call _ch_ioerror[3285336] reader[3288497] err[8434479] "in lock" error[8434675])
      val errorExists[8434686]:bool[19] "temp"
      (8434688 'move' errorExists[8434686](8434690 '!=' error[8434675] nil[32]))
      if errorExists[8434686]
      {
        gotoErrorHandling handler[8434698] handler[8434698]
      }
      label handler[8434698]
      val errorExists[8434700]:bool[19] "temp"
      (8434702 'move' errorExists[8434700](8434704 '!=' error[8434675] nil[32]))
      if errorExists[8434700]
      {
        (8434709 '=' error[8434474] error[8434675])
        gotoErrorHandlingReturn _endlock[8434716] _endlock[8434716]
      }
    }
    label _endlock[8434716]
    val errorExists[8434718]:bool[19] "temp"
    (8434720 'move' errorExists[8434718](8434722 '!=' error[8434474] nil[32]))
    if errorExists[8434718]
    {
      gotoErrorHandling handler[8434730] handler[8434730]
    }
    label handler[8434730]
    val errorExists[8434732]:bool[19] "temp"
    (8434734 'move' errorExists[8434732](8434736 '!=' error[8434474] nil[32]))
    if errorExists[8434732]
    {
      (8434742 call chpl_uncaught_error[87456] error[8434474])
    }
    const-val call_tmp[8434745]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8434747]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8434749]:string[244] "dead at end of block" "insert auto destroy"
    (8434752 call init[21321] ret[8434749])
    const-val coerce_tmp[8434754]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8434756 'move' coerce_tmp[8434754](8434758 '.v' i_literal[8434415] cachedNumCodepoints[21293]))
    (8434761 '.=' ret[8434749] cachedNumCodepoints[21293] coerce_tmp[8434754])
    (8434766 call initWithBorrowedBuffer[1470549] ret[8434749] i_literal[8434415])
    (8434769 '=' ret[8434747] ret[8434749])
    (8434772 'move' call_tmp[8434745] ret[8434747])
    val coerce_tmp[8434775]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8434777 'move' coerce_tmp[8434775](8434779 '.v' call_tmp[8434745] buff[21299]))
    (8434782 'noop')
    val call_tmp[8434783]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8434785 'move' call_tmp[8434783](8434787 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8434775]))
    val ret[8434790]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8434792 '=' ret[8434790](8434794 '.v' i_literal[8434415] buffLen[21281]))
    const-val call_tmp[8434797]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8434799]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8434801 'move' coerce_tmp[8434799](8434803 'cast' int(32)[66] 0))
    val coerce_tmp[8434806]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8434808 'move' coerce_tmp[8434806](8434810 '.v' reader[3288497] _channel_internal[3276776]))
    const-val coerce_tmp[8434813]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8434815 'move' coerce_tmp[8434813](8434817 'cast' int(32)[66] inlineImm[8434421]))
    (8434820 'move' call_tmp[8434797](8434823 call qio_channel_scan_literal[167758] coerce_tmp[8434799] coerce_tmp[8434806] call_tmp[8434783] ret[8434790] coerce_tmp[8434813]))
    const-val err[8434829]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8434831 'move' err[8434829] call_tmp[8434797])
    const-val action[8434834]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8434836 'move' action[8434834] "reading")
    val error[8434839]:Error[85511] "error variable" "temp"
    (8434841 'move' error[8434839] nil[32])
    ref i_action[8434844]:string[244] "temp"
    (8434846 'move' i_action[8434844](8434848 'set reference' action[8434834]))
    val inlineImm[8434850]:bool[19] "temp"
    (8434852 'move' inlineImm[8434850] 1)
    const-val call_tmp[8434855]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434857 'move' call_tmp[8434855](8434860 call qio_err_to_int[12844] call_tmp[8434797]))
    const-val call_tmp[8434862]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434864 'move' call_tmp[8434862](8434866 'cast' int(32)[66] 0))
    const-val call_tmp[8434869]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434871 'move' call_tmp[8434869](8434873 '==' call_tmp[8434855] call_tmp[8434862]))
    const-val call_tmp[8434876]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8434878 'move' call_tmp[8434876](8434880 'u!' call_tmp[8434869]))
    if call_tmp[8434876]
    {
      const-val call_tmp[8434884]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8434886]:string[244] "temp"
      (8434889 call literalErrorHelper[3112834] i_literal[8434415] i_action[8434844] inlineImm[8434850] ret_tmp[8434886])
      (8434894 'move' call_tmp[8434884] ret_tmp[8434886])
      val msg[8434897]:string[244] "dead at end of block" "insert auto destroy"
      (8434899 'move' msg[8434897] call_tmp[8434884])
      const-val call_tmp[8434902]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8434904 'move' call_tmp[8434902](8434907 call qio_err_to_int[12844] err[8434829]))
      const-val call_tmp[8434909]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8434911 'move' call_tmp[8434909](8434913 '==' call_tmp[8434902] EILSEQ[11191]))
      if call_tmp[8434909]
      {
        const-val call_tmp[8434918]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8434920]:string[244] "temp"
        (8434923 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8434920])
        (8434925 'move' call_tmp[8434918] ret_tmp[8434920])
        const-val call_tmp[8434928]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8434930]:string[244] "temp"
        (8434933 call +[28065] call_tmp[8434918] "Error: " ret_tmp[8434930])
        (8434937 'move' call_tmp[8434928] ret_tmp[8434930])
        const-val call_tmp[8434940]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8434942]:string[244] "temp"
        (8434945 call +[28065] call_tmp[8434928] msg[8434897] ret_tmp[8434942])
        (8434949 'move' call_tmp[8434940] ret_tmp[8434942])
        (8434953 call =[28046] msg[8434897] call_tmp[8434940])
        ref i_x[8434956]:string[244] "temp"
        (8434958 'move' i_x[8434956](8434960 'set reference' call_tmp[8434940]))
        (8434963 call deinit[21354] i_x[8434956])
        ref i_x[8434965]:string[244] "temp"
        (8434967 'move' i_x[8434965](8434969 'set reference' call_tmp[8434928]))
        (8434972 call deinit[21354] i_x[8434965])
        ref i_x[8434974]:string[244] "temp"
        (8434976 'move' i_x[8434974](8434978 'set reference' call_tmp[8434918]))
        (8434981 call deinit[21354] i_x[8434974])
      }
      val error[8434984]:Error[85511] "error variable" "temp"
      (8434986 'move' error[8434984] nil[32])
      (8434990 call _ch_ioerror[3285336] reader[3288497] err[8434829] msg[8434897] error[8434984])
      val errorExists[8434995]:bool[19] "temp"
      (8434997 'move' errorExists[8434995](8434999 '!=' error[8434984] nil[32]))
      if errorExists[8434995]
      {
        gotoErrorHandling handler[8435007] handler[8435007]
      }
      label handler[8435007]
      val errorExists[8435009]:bool[19] "temp"
      (8435011 'move' errorExists[8435009](8435013 '!=' error[8434984] nil[32]))
      if errorExists[8435009]
      {
        (8435018 '=' error[8434839] error[8434984])
        ref i_x[8435021]:string[244] "temp"
        (8435023 'move' i_x[8435021](8435025 'set reference' msg[8434897]))
        (8435028 call deinit[21354] i_x[8435021])
        gotoErrorHandlingReturn _end_checkLiteralError[8435043] _end_checkLiteralError[8435043]
      }
      ref i_x[8435033]:string[244] "temp"
      (8435035 'move' i_x[8435033](8435037 'set reference' msg[8434897]))
      (8435040 call deinit[21354] i_x[8435033])
    }
    label _end_checkLiteralError[8435043]
    val errorExists[8435045]:bool[19] "temp"
    (8435047 'move' errorExists[8435045](8435049 '!=' error[8434839] nil[32]))
    if errorExists[8435045]
    {
      gotoErrorHandling handler[8435057] handler[8435057]
    }
    label handler[8435057]
    val errorExists[8435059]:bool[19] "temp"
    (8435061 'move' errorExists[8435059](8435063 '!=' error[8434839] nil[32]))
    if errorExists[8435059]
    {
      (8435068 '=' error[8434435] error[8434839])
      ref i_x[8435071]:string[244] "temp"
      (8435073 'move' i_x[8435071](8435075 'set reference' action[8434834]))
      (8435078 call deinit[21354] i_x[8435071])
      ref i_x[8435080]:string[244] "temp"
      (8435082 'move' i_x[8435080](8435084 'set reference' call_tmp[8434745]))
      (8435087 call deinit[21354] i_x[8435080])
      gotoErrorHandlingReturn _end_readLiteralCommon[8435110] _end_readLiteralCommon[8435110]
    }
    ref i_x[8435092]:string[244] "temp"
    (8435094 'move' i_x[8435092](8435096 'set reference' action[8434834]))
    (8435099 call deinit[21354] i_x[8435092])
    ref i_x[8435101]:string[244] "temp"
    (8435103 'move' i_x[8435101](8435105 'set reference' call_tmp[8434745]))
    (8435108 call deinit[21354] i_x[8435101])
    label _end_readLiteralCommon[8435110]
    val errorExists[8435112]:bool[19] "temp"
    (8435114 'move' errorExists[8435112](8435116 '!=' error[8434435] nil[32]))
    if errorExists[8435112]
    {
      (8435121 '=' i_error_out[8434426] error[8434435])
      gotoErrorHandlingReturn _endreadLiteral[8435127] _endreadLiteral[8435127]
    }
    label _endreadLiteral[8435127]
    val errorExists[7301512]:bool[19] "temp"
    (7301517 'move' errorExists[7301512](7301514 '!=' error[5507342] nil[32]))
    if errorExists[7301512]
    {
      (5507348 '=' error_out[5507324] error[5507342])
      ref i_x[8622113]:map(string,int(64),false)[3288794] "temp"
      (8622117 'move' i_x[8622113](8622115 'set reference' m[3288507]))
      const-ref _field_destructor_tmp_[8622120]:chpl__hashtable(string,int(64))[3288849] "temp"
      (8622122 'move' _field_destructor_tmp_[8622120](8622124 '.' i_x[8622113] table[3288779]))
      (8622128 call deinit[4217590] _field_destructor_tmp_[8622120])
      gotoErrorHandlingReturn _end_outOfOrderHelper[3288734] _end_outOfOrderHelper[3288734]
    }
    val done[3288534]:bool[19] "dead at end of block" "insert auto destroy"
    (3288536 'move' done[3288534] 0)
    val call_tmp[3288540]:int(64)[10] "dead after last mention" "maybe param" "maybe type" "temp"
    val lastPos[3288547]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3288549 'move' lastPos[3288547] -1)
    val tmp[3288554]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[3288556]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351121]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351123 'move' call_tmp[7351121](7351125 'u!' done[3288534]))
    (3288558 'move' call_tmp[3288556] call_tmp[7351121])
    (3288563 'move' tmp[3288554] call_tmp[3288556])
    WhileDo[3288568] hazard
    {
      const-val call_tmp[3288571]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val default_arg_ignoreWhitespace[3290111]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      val error[5507357]:Error[85511] "error variable" "temp"
      (5507359 'move' error[5507357] nil[32])
      val inlineImm[8444584]:string[244] "temp"
      (8444587 'move' inlineImm[8444584] "}")
      ref i_literal[8444589]:string[244] "temp"
      (8444593 'move' i_literal[8444589](8444591 'set reference' inlineImm[8444584]))
      val inlineImm[8444595]:bool[19] "temp"
      (8444598 'move' inlineImm[8444595] 1)
      ref i_error_out[8444600]:Error[85511] "temp"
      (8444604 'move' i_error_out[8444600](8444602 'set reference' error[5507357]))
      val ret[8444607]:bool[19] "dead after last mention" "RVV" "temp"
      const-val call_tmp[8444609]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[8444611]:Error[85511] "error variable" "temp"
      (8444613 'move' error[8444611] nil[32])
      val ret[8444616]:bool[19] "dead after last mention" "RVV" "temp"
      val error[8444618]:Error[85511] "error variable" "temp"
      (8444620 'move' error[8444618] nil[32])
      ref call_tmp[8444623]:locale[234] "dead after last mention" "maybe param" "temp"
      (8444625 'move' call_tmp[8444623](8444627 '.' reader[3288497] _home[3276771]))
      val coerce_tmp[8444630]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8444632 'move' coerce_tmp[8444630](8444634 '.v' call_tmp[8444623] _instance[135293]))
      val coerce_tmp[8444637]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8444639 'move' coerce_tmp[8444637](8444641 'cast' RootClass[236] coerce_tmp[8444630]))
      const-val call_tmp[8444644]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8444646 'move' call_tmp[8444644](8444648 '==' coerce_tmp[8444637] nil[32]))
      if call_tmp[8444644]
      {
        (8444654 call nilCheckHalt[392] "argument to ! is nil")
      }
      val error[8444657]:Error[85511] "error variable" "temp"
      (8444659 'move' error[8444657] nil[32])
      const-val err[8444662]:errorCode[12828] "dead at end of block" "insert auto destroy"
      const-val call_tmp[8444664]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8444666 'move' call_tmp[8444664](8444668 'cast' int(32)[66] 0))
      const-val call_tmp[8444671]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
      (8444673 'move' call_tmp[8444671](8444676 call qio_int_to_err[12856] call_tmp[8444664]))
      (8444678 'move' err[8444662] call_tmp[8444671])
      val coerce_tmp[8444681]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8444683 'move' coerce_tmp[8444681](8444685 '.v' reader[3288497] _channel_internal[3276776]))
      const-val call_tmp[8444688]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8444690 'move' call_tmp[8444688](8444692 'ptr_eq' coerce_tmp[8444681] nil[32]))
      if call_tmp[8444688]
      {
        const-val call_tmp[8444697]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val coerce_tmp[8444699]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8444701 'move' coerce_tmp[8444699](8444703 'cast' int(64)[10] EINVAL[11206]))
        const-val ret_tmp[8444706]:owned SystemError[1554765] "temp"
        (8444709 call createSystemError[14072] coerce_tmp[8444699] "Operation attempted on an invalid fileReader" ret_tmp[8444706])
        (8444713 'move' call_tmp[8444697] ret_tmp[8444706])
        val call_tmp[8444716]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[8444718]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[8444720]:owned Error[1498203] "temp"
        ref i_x[8444722]:owned SystemError[1554765] "temp"
        (8444724 'move' i_x[8444722](8444726 'set reference' call_tmp[8444697]))
        ref i__retArg[8444728]:owned Error[1498203] "temp"
        (8444730 'move' i__retArg[8444728](8444732 'set reference' ret_tmp[8444720]))
        val _formal_tmp_x[8444734]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (8444736 'move' _formal_tmp_x[8444734] i_x[8444722])
        const-val ret[8444739]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[8444741]:owned SystemError[1554765] "temp"
        (8444743 'move' i_this[8444741](8444745 'set reference' _formal_tmp_x[8444734]))
        val coerce_tmp[8444747]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8444749 'move' coerce_tmp[8444747](8444751 '.v' i_this[8444741] chpl_p[1554760]))
        val call_tmp[8444754]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (8444756 'move' call_tmp[8444754](8444758 'cast' Error[85511] coerce_tmp[8444747]))
        val castPtr[8444761]:Error[85511] "dead at end of block" "insert auto destroy"
        (8444763 'move' castPtr[8444761] call_tmp[8444754])
        ref i_this[8444766]:owned SystemError[1554765] "temp"
        (8444768 'move' i_this[8444766](8444770 'set reference' _formal_tmp_x[8444734]))
        val tmp[8444772]:SystemError[13599] "temp"
        (8444774 'move' tmp[8444772](8444776 'cast' SystemError[13599] nil[32]))
        (8444779 '.=' i_this[8444766] chpl_p[1554760] tmp[8444772])
        val coerce_tmp[8444783]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8444785 'move' coerce_tmp[8444783](8444787 'cast' RootClass[236] call_tmp[8444754]))
        const-val call_tmp[8444790]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8444792 'move' call_tmp[8444790](8444794 '==' coerce_tmp[8444783] nil[32]))
        if call_tmp[8444790]
        {
          (8444800 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[8444803]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[8444805]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (8444808 call init[1499358] initTemp[8444805] castPtr[8444761])
        (8444811 'move' call_tmp[8444803] initTemp[8444805])
        (8444814 'move' ret[8444739] call_tmp[8444803])
        (8444818 call chpl__autoDestroy[3968549] _formal_tmp_x[8444734])
        (8444820 '=' i__retArg[8444728] ret[8444739])
        (8444823 'move' coerce_tmp[8444718] ret_tmp[8444720])
        const-val _formal_tmp_in_err[8444826]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (8444828 'move' _formal_tmp_in_err[8444826] coerce_tmp[8444718])
        (8444831 'move' call_tmp[8444716](8444834 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8444826]))
        (8444836 '=' error[8444657] call_tmp[8444716])
        gotoErrorHandlingReturn _endlock[8444899] _endlock[8444899]
      }
      const-val call_tmp[8444842]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8444844 'move' call_tmp[8444842](8444847 call qio_err_iserr[12868] err[8444662]))
      const-val call_tmp[8444849]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8444851 'move' call_tmp[8444849](8444853 '!=' call_tmp[8444842] 0))
      if call_tmp[8444849]
      {
        val error[8444858]:Error[85511] "error variable" "temp"
        (8444860 'move' error[8444858] nil[32])
        (8444864 call _ch_ioerror[3285336] reader[3288497] err[8444662] "in lock" error[8444858])
        val errorExists[8444869]:bool[19] "temp"
        (8444871 'move' errorExists[8444869](8444873 '!=' error[8444858] nil[32]))
        if errorExists[8444869]
        {
          gotoErrorHandling handler[8444881] handler[8444881]
        }
        label handler[8444881]
        val errorExists[8444883]:bool[19] "temp"
        (8444885 'move' errorExists[8444883](8444887 '!=' error[8444858] nil[32]))
        if errorExists[8444883]
        {
          (8444892 '=' error[8444657] error[8444858])
          gotoErrorHandlingReturn _endlock[8444899] _endlock[8444899]
        }
      }
      label _endlock[8444899]
      val errorExists[8444901]:bool[19] "temp"
      (8444903 'move' errorExists[8444901](8444905 '!=' error[8444657] nil[32]))
      if errorExists[8444901]
      {
        gotoErrorHandling handler[8444913] handler[8444913]
      }
      label handler[8444913]
      val errorExists[8444915]:bool[19] "temp"
      (8444917 'move' errorExists[8444915](8444919 '!=' error[8444657] nil[32]))
      if errorExists[8444915]
      {
        (8444925 call chpl_uncaught_error[87456] error[8444657])
      }
      const-val call_tmp[8444928]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret[8444930]:string[244] "dead after last mention" "RVV" "temp"
      val ret[8444932]:string[244] "dead at end of block" "insert auto destroy"
      (8444935 call init[21321] ret[8444932])
      const-val coerce_tmp[8444937]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8444939 'move' coerce_tmp[8444937](8444941 '.v' i_literal[8444589] cachedNumCodepoints[21293]))
      (8444944 '.=' ret[8444932] cachedNumCodepoints[21293] coerce_tmp[8444937])
      (8444949 call initWithBorrowedBuffer[1470549] ret[8444932] i_literal[8444589])
      (8444952 '=' ret[8444930] ret[8444932])
      (8444955 'move' call_tmp[8444928] ret[8444930])
      val coerce_tmp[8444958]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (8444960 'move' coerce_tmp[8444958](8444962 '.v' call_tmp[8444928] buff[21299]))
      (8444965 'noop')
      val call_tmp[8444966]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (8444968 'move' call_tmp[8444966](8444970 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8444958]))
      val ret[8444973]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8444975 '=' ret[8444973](8444977 '.v' i_literal[8444589] buffLen[21281]))
      const-val call_tmp[8444980]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[8444982]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8444984 'move' coerce_tmp[8444982](8444986 'cast' int(32)[66] 0))
      val coerce_tmp[8444989]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8444991 'move' coerce_tmp[8444989](8444993 '.v' reader[3288497] _channel_internal[3276776]))
      const-val coerce_tmp[8444996]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8444998 'move' coerce_tmp[8444996](8445000 'cast' int(32)[66] inlineImm[8444595]))
      (8445003 'move' call_tmp[8444980](8445006 call qio_channel_scan_literal[167758] coerce_tmp[8444982] coerce_tmp[8444989] call_tmp[8444966] ret[8444973] coerce_tmp[8444996]))
      const-val err[8445012]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
      (8445014 'move' err[8445012] call_tmp[8444980])
      const-val action[8445017]:string[244] "dead at end of block" "const" "insert auto destroy"
      (8445019 'move' action[8445017] "matching")
      val error[8445022]:Error[85511] "error variable" "temp"
      (8445024 'move' error[8445022] nil[32])
      ref i_action[8445027]:string[244] "temp"
      (8445029 'move' i_action[8445027](8445031 'set reference' action[8445017]))
      val inlineImm[8445033]:bool[19] "temp"
      (8445035 'move' inlineImm[8445033] 1)
      const-val call_tmp[8445038]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445040 'move' call_tmp[8445038](8445043 call qio_err_to_int[12844] call_tmp[8444980]))
      const-val call_tmp[8445045]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445047 'move' call_tmp[8445045](8445049 'cast' int(32)[66] 0))
      const-val call_tmp[8445052]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445054 'move' call_tmp[8445052](8445056 '==' call_tmp[8445038] call_tmp[8445045]))
      const-val call_tmp[8445059]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445061 'move' call_tmp[8445059](8445063 'u!' call_tmp[8445052]))
      if call_tmp[8445059]
      {
        const-val call_tmp[8445067]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[8445069]:string[244] "temp"
        (8445072 call literalErrorHelper[3112834] i_literal[8444589] i_action[8445027] inlineImm[8445033] ret_tmp[8445069])
        (8445077 'move' call_tmp[8445067] ret_tmp[8445069])
        val msg[8445080]:string[244] "dead at end of block" "insert auto destroy"
        (8445082 'move' msg[8445080] call_tmp[8445067])
        const-val call_tmp[8445085]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (8445087 'move' call_tmp[8445085](8445090 call qio_err_to_int[12844] err[8445012]))
        const-val call_tmp[8445092]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8445094 'move' call_tmp[8445092](8445096 '==' call_tmp[8445085] EILSEQ[11191]))
        if call_tmp[8445092]
        {
          const-val call_tmp[8445101]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8445103]:string[244] "temp"
          (8445106 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8445103])
          (8445108 'move' call_tmp[8445101] ret_tmp[8445103])
          const-val call_tmp[8445111]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8445113]:string[244] "temp"
          (8445116 call +[28065] call_tmp[8445101] "Error: " ret_tmp[8445113])
          (8445120 'move' call_tmp[8445111] ret_tmp[8445113])
          const-val call_tmp[8445123]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8445125]:string[244] "temp"
          (8445128 call +[28065] call_tmp[8445111] msg[8445080] ret_tmp[8445125])
          (8445132 'move' call_tmp[8445123] ret_tmp[8445125])
          (8445136 call =[28046] msg[8445080] call_tmp[8445123])
          ref i_x[8445139]:string[244] "temp"
          (8445141 'move' i_x[8445139](8445143 'set reference' call_tmp[8445123]))
          (8445146 call deinit[21354] i_x[8445139])
          ref i_x[8445148]:string[244] "temp"
          (8445150 'move' i_x[8445148](8445152 'set reference' call_tmp[8445111]))
          (8445155 call deinit[21354] i_x[8445148])
          ref i_x[8445157]:string[244] "temp"
          (8445159 'move' i_x[8445157](8445161 'set reference' call_tmp[8445101]))
          (8445164 call deinit[21354] i_x[8445157])
        }
        val error[8445167]:Error[85511] "error variable" "temp"
        (8445169 'move' error[8445167] nil[32])
        (8445173 call _ch_ioerror[3285336] reader[3288497] err[8445012] msg[8445080] error[8445167])
        val errorExists[8445178]:bool[19] "temp"
        (8445180 'move' errorExists[8445178](8445182 '!=' error[8445167] nil[32]))
        if errorExists[8445178]
        {
          gotoErrorHandling handler[8445190] handler[8445190]
        }
        label handler[8445190]
        val errorExists[8445192]:bool[19] "temp"
        (8445194 'move' errorExists[8445192](8445196 '!=' error[8445167] nil[32]))
        if errorExists[8445192]
        {
          (8445201 '=' error[8445022] error[8445167])
          ref i_x[8445204]:string[244] "temp"
          (8445206 'move' i_x[8445204](8445208 'set reference' msg[8445080]))
          (8445211 call deinit[21354] i_x[8445204])
          gotoErrorHandlingReturn _end_checkLiteralError[8445226] _end_checkLiteralError[8445226]
        }
        ref i_x[8445216]:string[244] "temp"
        (8445218 'move' i_x[8445216](8445220 'set reference' msg[8445080]))
        (8445223 call deinit[21354] i_x[8445216])
      }
      label _end_checkLiteralError[8445226]
      val errorExists[8445228]:bool[19] "temp"
      (8445230 'move' errorExists[8445228](8445232 '!=' error[8445022] nil[32]))
      if errorExists[8445228]
      {
        gotoErrorHandling handler[8445240] handler[8445240]
      }
      label handler[8445240]
      val errorExists[8445242]:bool[19] "temp"
      (8445244 'move' errorExists[8445242](8445246 '!=' error[8445022] nil[32]))
      if errorExists[8445242]
      {
        (8445251 '=' error[8444618] error[8445022])
        ref i_x[8445254]:string[244] "temp"
        (8445256 'move' i_x[8445254](8445258 'set reference' action[8445017]))
        (8445261 call deinit[21354] i_x[8445254])
        ref i_x[8445263]:string[244] "temp"
        (8445265 'move' i_x[8445263](8445267 'set reference' call_tmp[8444928]))
        (8445270 call deinit[21354] i_x[8445263])
        gotoErrorHandlingReturn _end_readLiteralCommon[8445293] _end_readLiteralCommon[8445293]
      }
      ref i_x[8445275]:string[244] "temp"
      (8445277 'move' i_x[8445275](8445279 'set reference' action[8445017]))
      (8445282 call deinit[21354] i_x[8445275])
      ref i_x[8445284]:string[244] "temp"
      (8445286 'move' i_x[8445284](8445288 'set reference' call_tmp[8444928]))
      (8445291 call deinit[21354] i_x[8445284])
      label _end_readLiteralCommon[8445293]
      val errorExists[8445295]:bool[19] "temp"
      (8445297 'move' errorExists[8445295](8445299 '!=' error[8444618] nil[32]))
      if errorExists[8445295]
      {
        gotoErrorHandling handler[8445307] handler[8445307]
      }
      label handler[8445307]
      val errorExists[8445309]:bool[19] "temp"
      (8445311 'move' errorExists[8445309](8445313 '!=' error[8444618] nil[32]))
      if errorExists[8445309]
      {
        val call_tmp[8445318]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
        (8445320 'move' call_tmp[8445318](8445322 'dynamic_cast' BadFormatError[15094] error[8444618]))
        val tmp[8445325]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
        (8445327 'move' tmp[8445325] call_tmp[8445318])
        const-val call_tmp[8445330]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8445332 'move' call_tmp[8445330](8445334 '!=' call_tmp[8445318] nil[32]))
        if call_tmp[8445330]
        {
          const-val call_tmp[8445339]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8445341]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
          (8445344 call init[1543824] initTemp[8445341] tmp[8445325])
          (8445347 'move' call_tmp[8445339] initTemp[8445341])
          const-val e[8445350]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8445352 'move' e[8445350] call_tmp[8445339])
          (8445355 'move' ret[8444616] 0)
          (8445359 call chpl__autoDestroy[3940454] e[8445350])
          gotoReturn _end__matchLiteralCommon[8445427] _end__matchLiteralCommon[8445427]
          (8445364 call chpl__autoDestroy[3940454] e[8445350])
        }
        {
          val call_tmp[8445367]:EofError[14808] "dead after last mention" "maybe param" "temp"
          (8445369 'move' call_tmp[8445367](8445371 'dynamic_cast' EofError[14808] error[8444618]))
          val tmp[8445374]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
          (8445376 'move' tmp[8445374] call_tmp[8445367])
          const-val call_tmp[8445379]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8445381 'move' call_tmp[8445379](8445383 '!=' call_tmp[8445367] nil[32]))
          if call_tmp[8445379]
          {
            const-val call_tmp[8445388]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[8445390]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
            (8445393 call init[1542524] initTemp[8445390] tmp[8445374])
            (8445396 'move' call_tmp[8445388] initTemp[8445390])
            const-val e[8445399]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
            (8445401 'move' e[8445399] call_tmp[8445388])
            (8445404 'move' ret[8444616] 0)
            (8445408 call chpl__autoDestroy[3937692] e[8445399])
            gotoReturn _end__matchLiteralCommon[8445427] _end__matchLiteralCommon[8445427]
            (8445413 call chpl__autoDestroy[3937692] e[8445399])
          }
          {
            (8445416 '=' error[8444611] error[8444618])
            gotoErrorHandlingReturn _end__matchLiteralCommon[8445427] _end__matchLiteralCommon[8445427]
          }
        }
      }
      (8445424 'move' ret[8444616] 1)
      label _end__matchLiteralCommon[8445427]
      (8445429 'move' call_tmp[8444609] ret[8444616])
      val errorExists[8445432]:bool[19] "temp"
      (8445434 'move' errorExists[8445432](8445436 '!=' error[8444611] nil[32]))
      if errorExists[8445432]
      {
        (8445441 '=' i_error_out[8444600] error[8444611])
        gotoErrorHandlingReturn _endmatchLiteral[8445450] _endmatchLiteral[8445450]
      }
      (8445447 '=' ret[8444607] call_tmp[8444609])
      label _endmatchLiteral[8445450]
      (3288573 'move' call_tmp[3288571] ret[8444607])
      val errorExists[7301520]:bool[19] "temp"
      (7301525 'move' errorExists[7301520](7301522 '!=' error[5507357] nil[32]))
      if errorExists[7301520]
      {
        (5507363 '=' error_out[5507324] error[5507357])
        ref i_x[8622132]:map(string,int(64),false)[3288794] "temp"
        (8622136 'move' i_x[8622132](8622134 'set reference' m[3288507]))
        const-ref _field_destructor_tmp_[8622139]:chpl__hashtable(string,int(64))[3288849] "temp"
        (8622141 'move' _field_destructor_tmp_[8622139](8622143 '.' i_x[8622132] table[3288779]))
        (8622147 call deinit[4217590] _field_destructor_tmp_[8622139])
        gotoErrorHandlingReturn _end_outOfOrderHelper[3288734] _end_outOfOrderHelper[3288734]
      }
      const-val call_tmp[3288581]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3288583 'move' call_tmp[3288581] call_tmp[3288571])
      if call_tmp[3288581]
      {
        const-val call_tmp[3288590]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (3288592 'move' call_tmp[3288590](3288598 call offset[3289103] reader[3288497]))
        const-val call_tmp[3288599]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[7445688]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7445690 'move' call_tmp[7445688](7445692 '-' call_tmp[3288590] 1))
        (3288601 'move' call_tmp[3288599] call_tmp[7445688])
        ref i_a[7366664]:int(64)[10] "temp"
        (7366668 'move' i_a[7366664](7366666 'set reference' lastPos[3288547]))
        (7366671 '=' i_a[7366664] call_tmp[3288599])
        ref i_a[7393996]:bool[19] "temp"
        (7394000 'move' i_a[7393996](7393998 'set reference' done[3288534]))
        val inlineImm[7394002]:bool[19] "temp"
        (7394005 'move' inlineImm[7394002] 1)
        (7394008 '=' i_a[7393996] inlineImm[7394002])
        break _breakLabel[3288709] _breakLabel[3288709]
      }
      const-val _return_tmp_[5468767]:int(64)[10] "dead after last mention" "temp"
      val error[5507372]:Error[85511] "error variable" "temp"
      (5507374 'move' error[5507372] nil[32])
      (5468769 'move' _return_tmp_[5468767](3288626 call mark[3288983] reader[3288497] error[5507372]))
      val errorExists[7301528]:bool[19] "temp"
      (7301533 'move' errorExists[7301528](7301530 '!=' error[5507372] nil[32]))
      if errorExists[7301528]
      {
        (5507378 '=' error_out[5507324] error[5507372])
        ref i_x[8622151]:map(string,int(64),false)[3288794] "temp"
        (8622155 'move' i_x[8622151](8622153 'set reference' m[3288507]))
        const-ref _field_destructor_tmp_[8622158]:chpl__hashtable(string,int(64))[3288849] "temp"
        (8622160 'move' _field_destructor_tmp_[8622158](8622162 '.' i_x[8622151] table[3288779]))
        (8622166 call deinit[4217590] _field_destructor_tmp_[8622158])
        gotoErrorHandlingReturn _end_outOfOrderHelper[3288734] _end_outOfOrderHelper[3288734]
      }
      const-val call_tmp[3288628]:string[244] "dead at end of block" "maybe param" "temp"
      val error[5507387]:Error[85511] "error variable" "temp"
      (5507389 'move' error[5507387] nil[32])
      const-val ret_tmp[5588648]:string[244] "temp"
      (3288636 call read[3290733] reader[3288497] error[5507387] ret_tmp[5588648])
      (5588651 'move' call_tmp[3288628] ret_tmp[5588648])
      val errorExists[7301536]:bool[19] "temp"
      (7301541 'move' errorExists[7301536](7301538 '!=' error[5507387] nil[32]))
      if errorExists[7301536]
      {
        (5507393 '=' error_out[5507324] error[5507387])
        ref i_x[8622170]:map(string,int(64),false)[3288794] "temp"
        (8622174 'move' i_x[8622170](8622172 'set reference' m[3288507]))
        const-ref _field_destructor_tmp_[8622177]:chpl__hashtable(string,int(64))[3288849] "temp"
        (8622179 'move' _field_destructor_tmp_[8622177](8622181 '.' i_x[8622170] table[3288779]))
        (8622185 call deinit[4217590] _field_destructor_tmp_[8622177])
        gotoErrorHandlingReturn _end_outOfOrderHelper[3288734] _end_outOfOrderHelper[3288734]
      }
      const-val name[3288638]:string[244] "dead at end of block" "const" "insert auto destroy" "maybe copy elided"
      (3288640 'move' name[3288638] call_tmp[3288628])
      val default_arg_ignoreWhitespace[3300812]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      val error[5507402]:Error[85511] "error variable" "temp"
      (5507404 'move' error[5507402] nil[32])
      val inlineImm[8435131]:string[244] "temp"
      (8435134 'move' inlineImm[8435131] ":")
      ref i_literal[8435136]:string[244] "temp"
      (8435140 'move' i_literal[8435136](8435138 'set reference' inlineImm[8435131]))
      val inlineImm[8435142]:bool[19] "temp"
      (8435145 'move' inlineImm[8435142] 1)
      ref i_error_out[8435147]:Error[85511] "temp"
      (8435151 'move' i_error_out[8435147](8435149 'set reference' error[5507402]))
      val ret[8435154]:void[4] "dead after last mention" "RVV" "temp"
      val error[8435156]:Error[85511] "error variable" "temp"
      (8435158 'move' error[8435156] nil[32])
      ref call_tmp[8435161]:locale[234] "dead after last mention" "maybe param" "temp"
      (8435163 'move' call_tmp[8435161](8435165 '.' reader[3288497] _home[3276771]))
      val coerce_tmp[8435168]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435170 'move' coerce_tmp[8435168](8435172 '.v' call_tmp[8435161] _instance[135293]))
      val coerce_tmp[8435175]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435177 'move' coerce_tmp[8435175](8435179 'cast' RootClass[236] coerce_tmp[8435168]))
      const-val call_tmp[8435182]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435184 'move' call_tmp[8435182](8435186 '==' coerce_tmp[8435175] nil[32]))
      if call_tmp[8435182]
      {
        (8435192 call nilCheckHalt[392] "argument to ! is nil")
      }
      val error[8435195]:Error[85511] "error variable" "temp"
      (8435197 'move' error[8435195] nil[32])
      const-val err[8435200]:errorCode[12828] "dead at end of block" "insert auto destroy"
      const-val call_tmp[8435202]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435204 'move' call_tmp[8435202](8435206 'cast' int(32)[66] 0))
      const-val call_tmp[8435209]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435211 'move' call_tmp[8435209](8435214 call qio_int_to_err[12856] call_tmp[8435202]))
      (8435216 'move' err[8435200] call_tmp[8435209])
      val coerce_tmp[8435219]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435221 'move' coerce_tmp[8435219](8435223 '.v' reader[3288497] _channel_internal[3276776]))
      const-val call_tmp[8435226]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435228 'move' call_tmp[8435226](8435230 'ptr_eq' coerce_tmp[8435219] nil[32]))
      if call_tmp[8435226]
      {
        const-val call_tmp[8435235]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val coerce_tmp[8435237]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8435239 'move' coerce_tmp[8435237](8435241 'cast' int(64)[10] EINVAL[11206]))
        const-val ret_tmp[8435244]:owned SystemError[1554765] "temp"
        (8435247 call createSystemError[14072] coerce_tmp[8435237] "Operation attempted on an invalid fileReader" ret_tmp[8435244])
        (8435251 'move' call_tmp[8435235] ret_tmp[8435244])
        val call_tmp[8435254]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[8435256]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[8435258]:owned Error[1498203] "temp"
        ref i_x[8435260]:owned SystemError[1554765] "temp"
        (8435262 'move' i_x[8435260](8435264 'set reference' call_tmp[8435235]))
        ref i__retArg[8435266]:owned Error[1498203] "temp"
        (8435268 'move' i__retArg[8435266](8435270 'set reference' ret_tmp[8435258]))
        val _formal_tmp_x[8435272]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (8435274 'move' _formal_tmp_x[8435272] i_x[8435260])
        const-val ret[8435277]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[8435279]:owned SystemError[1554765] "temp"
        (8435281 'move' i_this[8435279](8435283 'set reference' _formal_tmp_x[8435272]))
        val coerce_tmp[8435285]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8435287 'move' coerce_tmp[8435285](8435289 '.v' i_this[8435279] chpl_p[1554760]))
        val call_tmp[8435292]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (8435294 'move' call_tmp[8435292](8435296 'cast' Error[85511] coerce_tmp[8435285]))
        val castPtr[8435299]:Error[85511] "dead at end of block" "insert auto destroy"
        (8435301 'move' castPtr[8435299] call_tmp[8435292])
        ref i_this[8435304]:owned SystemError[1554765] "temp"
        (8435306 'move' i_this[8435304](8435308 'set reference' _formal_tmp_x[8435272]))
        val tmp[8435310]:SystemError[13599] "temp"
        (8435312 'move' tmp[8435310](8435314 'cast' SystemError[13599] nil[32]))
        (8435317 '.=' i_this[8435304] chpl_p[1554760] tmp[8435310])
        val coerce_tmp[8435321]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8435323 'move' coerce_tmp[8435321](8435325 'cast' RootClass[236] call_tmp[8435292]))
        const-val call_tmp[8435328]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8435330 'move' call_tmp[8435328](8435332 '==' coerce_tmp[8435321] nil[32]))
        if call_tmp[8435328]
        {
          (8435338 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[8435341]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[8435343]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (8435346 call init[1499358] initTemp[8435343] castPtr[8435299])
        (8435349 'move' call_tmp[8435341] initTemp[8435343])
        (8435352 'move' ret[8435277] call_tmp[8435341])
        (8435356 call chpl__autoDestroy[3968549] _formal_tmp_x[8435272])
        (8435358 '=' i__retArg[8435266] ret[8435277])
        (8435361 'move' coerce_tmp[8435256] ret_tmp[8435258])
        const-val _formal_tmp_in_err[8435364]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (8435366 'move' _formal_tmp_in_err[8435364] coerce_tmp[8435256])
        (8435369 'move' call_tmp[8435254](8435372 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8435364]))
        (8435374 '=' error[8435195] call_tmp[8435254])
        gotoErrorHandlingReturn _endlock[8435437] _endlock[8435437]
      }
      const-val call_tmp[8435380]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435382 'move' call_tmp[8435380](8435385 call qio_err_iserr[12868] err[8435200]))
      const-val call_tmp[8435387]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435389 'move' call_tmp[8435387](8435391 '!=' call_tmp[8435380] 0))
      if call_tmp[8435387]
      {
        val error[8435396]:Error[85511] "error variable" "temp"
        (8435398 'move' error[8435396] nil[32])
        (8435402 call _ch_ioerror[3285336] reader[3288497] err[8435200] "in lock" error[8435396])
        val errorExists[8435407]:bool[19] "temp"
        (8435409 'move' errorExists[8435407](8435411 '!=' error[8435396] nil[32]))
        if errorExists[8435407]
        {
          gotoErrorHandling handler[8435419] handler[8435419]
        }
        label handler[8435419]
        val errorExists[8435421]:bool[19] "temp"
        (8435423 'move' errorExists[8435421](8435425 '!=' error[8435396] nil[32]))
        if errorExists[8435421]
        {
          (8435430 '=' error[8435195] error[8435396])
          gotoErrorHandlingReturn _endlock[8435437] _endlock[8435437]
        }
      }
      label _endlock[8435437]
      val errorExists[8435439]:bool[19] "temp"
      (8435441 'move' errorExists[8435439](8435443 '!=' error[8435195] nil[32]))
      if errorExists[8435439]
      {
        gotoErrorHandling handler[8435451] handler[8435451]
      }
      label handler[8435451]
      val errorExists[8435453]:bool[19] "temp"
      (8435455 'move' errorExists[8435453](8435457 '!=' error[8435195] nil[32]))
      if errorExists[8435453]
      {
        (8435463 call chpl_uncaught_error[87456] error[8435195])
      }
      const-val call_tmp[8435466]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret[8435468]:string[244] "dead after last mention" "RVV" "temp"
      val ret[8435470]:string[244] "dead at end of block" "insert auto destroy"
      (8435473 call init[21321] ret[8435470])
      const-val coerce_tmp[8435475]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435477 'move' coerce_tmp[8435475](8435479 '.v' i_literal[8435136] cachedNumCodepoints[21293]))
      (8435482 '.=' ret[8435470] cachedNumCodepoints[21293] coerce_tmp[8435475])
      (8435487 call initWithBorrowedBuffer[1470549] ret[8435470] i_literal[8435136])
      (8435490 '=' ret[8435468] ret[8435470])
      (8435493 'move' call_tmp[8435466] ret[8435468])
      val coerce_tmp[8435496]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (8435498 'move' coerce_tmp[8435496](8435500 '.v' call_tmp[8435466] buff[21299]))
      (8435503 'noop')
      val call_tmp[8435504]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (8435506 'move' call_tmp[8435504](8435508 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8435496]))
      val ret[8435511]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8435513 '=' ret[8435511](8435515 '.v' i_literal[8435136] buffLen[21281]))
      const-val call_tmp[8435518]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[8435520]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435522 'move' coerce_tmp[8435520](8435524 'cast' int(32)[66] 0))
      val coerce_tmp[8435527]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435529 'move' coerce_tmp[8435527](8435531 '.v' reader[3288497] _channel_internal[3276776]))
      const-val coerce_tmp[8435534]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435536 'move' coerce_tmp[8435534](8435538 'cast' int(32)[66] inlineImm[8435142]))
      (8435541 'move' call_tmp[8435518](8435544 call qio_channel_scan_literal[167758] coerce_tmp[8435520] coerce_tmp[8435527] call_tmp[8435504] ret[8435511] coerce_tmp[8435534]))
      const-val err[8435550]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
      (8435552 'move' err[8435550] call_tmp[8435518])
      const-val action[8435555]:string[244] "dead at end of block" "const" "insert auto destroy"
      (8435557 'move' action[8435555] "reading")
      val error[8435560]:Error[85511] "error variable" "temp"
      (8435562 'move' error[8435560] nil[32])
      ref i_action[8435565]:string[244] "temp"
      (8435567 'move' i_action[8435565](8435569 'set reference' action[8435555]))
      val inlineImm[8435571]:bool[19] "temp"
      (8435573 'move' inlineImm[8435571] 1)
      const-val call_tmp[8435576]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435578 'move' call_tmp[8435576](8435581 call qio_err_to_int[12844] call_tmp[8435518]))
      const-val call_tmp[8435583]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435585 'move' call_tmp[8435583](8435587 'cast' int(32)[66] 0))
      const-val call_tmp[8435590]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435592 'move' call_tmp[8435590](8435594 '==' call_tmp[8435576] call_tmp[8435583]))
      const-val call_tmp[8435597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8435599 'move' call_tmp[8435597](8435601 'u!' call_tmp[8435590]))
      if call_tmp[8435597]
      {
        const-val call_tmp[8435605]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[8435607]:string[244] "temp"
        (8435610 call literalErrorHelper[3112834] i_literal[8435136] i_action[8435565] inlineImm[8435571] ret_tmp[8435607])
        (8435615 'move' call_tmp[8435605] ret_tmp[8435607])
        val msg[8435618]:string[244] "dead at end of block" "insert auto destroy"
        (8435620 'move' msg[8435618] call_tmp[8435605])
        const-val call_tmp[8435623]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (8435625 'move' call_tmp[8435623](8435628 call qio_err_to_int[12844] err[8435550]))
        const-val call_tmp[8435630]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8435632 'move' call_tmp[8435630](8435634 '==' call_tmp[8435623] EILSEQ[11191]))
        if call_tmp[8435630]
        {
          const-val call_tmp[8435639]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8435641]:string[244] "temp"
          (8435644 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8435641])
          (8435646 'move' call_tmp[8435639] ret_tmp[8435641])
          const-val call_tmp[8435649]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8435651]:string[244] "temp"
          (8435654 call +[28065] call_tmp[8435639] "Error: " ret_tmp[8435651])
          (8435658 'move' call_tmp[8435649] ret_tmp[8435651])
          const-val call_tmp[8435661]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8435663]:string[244] "temp"
          (8435666 call +[28065] call_tmp[8435649] msg[8435618] ret_tmp[8435663])
          (8435670 'move' call_tmp[8435661] ret_tmp[8435663])
          (8435674 call =[28046] msg[8435618] call_tmp[8435661])
          ref i_x[8435677]:string[244] "temp"
          (8435679 'move' i_x[8435677](8435681 'set reference' call_tmp[8435661]))
          (8435684 call deinit[21354] i_x[8435677])
          ref i_x[8435686]:string[244] "temp"
          (8435688 'move' i_x[8435686](8435690 'set reference' call_tmp[8435649]))
          (8435693 call deinit[21354] i_x[8435686])
          ref i_x[8435695]:string[244] "temp"
          (8435697 'move' i_x[8435695](8435699 'set reference' call_tmp[8435639]))
          (8435702 call deinit[21354] i_x[8435695])
        }
        val error[8435705]:Error[85511] "error variable" "temp"
        (8435707 'move' error[8435705] nil[32])
        (8435711 call _ch_ioerror[3285336] reader[3288497] err[8435550] msg[8435618] error[8435705])
        val errorExists[8435716]:bool[19] "temp"
        (8435718 'move' errorExists[8435716](8435720 '!=' error[8435705] nil[32]))
        if errorExists[8435716]
        {
          gotoErrorHandling handler[8435728] handler[8435728]
        }
        label handler[8435728]
        val errorExists[8435730]:bool[19] "temp"
        (8435732 'move' errorExists[8435730](8435734 '!=' error[8435705] nil[32]))
        if errorExists[8435730]
        {
          (8435739 '=' error[8435560] error[8435705])
          ref i_x[8435742]:string[244] "temp"
          (8435744 'move' i_x[8435742](8435746 'set reference' msg[8435618]))
          (8435749 call deinit[21354] i_x[8435742])
          gotoErrorHandlingReturn _end_checkLiteralError[8435764] _end_checkLiteralError[8435764]
        }
        ref i_x[8435754]:string[244] "temp"
        (8435756 'move' i_x[8435754](8435758 'set reference' msg[8435618]))
        (8435761 call deinit[21354] i_x[8435754])
      }
      label _end_checkLiteralError[8435764]
      val errorExists[8435766]:bool[19] "temp"
      (8435768 'move' errorExists[8435766](8435770 '!=' error[8435560] nil[32]))
      if errorExists[8435766]
      {
        gotoErrorHandling handler[8435778] handler[8435778]
      }
      label handler[8435778]
      val errorExists[8435780]:bool[19] "temp"
      (8435782 'move' errorExists[8435780](8435784 '!=' error[8435560] nil[32]))
      if errorExists[8435780]
      {
        (8435789 '=' error[8435156] error[8435560])
        ref i_x[8435792]:string[244] "temp"
        (8435794 'move' i_x[8435792](8435796 'set reference' action[8435555]))
        (8435799 call deinit[21354] i_x[8435792])
        ref i_x[8435801]:string[244] "temp"
        (8435803 'move' i_x[8435801](8435805 'set reference' call_tmp[8435466]))
        (8435808 call deinit[21354] i_x[8435801])
        gotoErrorHandlingReturn _end_readLiteralCommon[8435831] _end_readLiteralCommon[8435831]
      }
      ref i_x[8435813]:string[244] "temp"
      (8435815 'move' i_x[8435813](8435817 'set reference' action[8435555]))
      (8435820 call deinit[21354] i_x[8435813])
      ref i_x[8435822]:string[244] "temp"
      (8435824 'move' i_x[8435822](8435826 'set reference' call_tmp[8435466]))
      (8435829 call deinit[21354] i_x[8435822])
      label _end_readLiteralCommon[8435831]
      val errorExists[8435833]:bool[19] "temp"
      (8435835 'move' errorExists[8435833](8435837 '!=' error[8435156] nil[32]))
      if errorExists[8435833]
      {
        (8435842 '=' i_error_out[8435147] error[8435156])
        gotoErrorHandlingReturn _endreadLiteral[8435848] _endreadLiteral[8435848]
      }
      label _endreadLiteral[8435848]
      val errorExists[7301544]:bool[19] "temp"
      (7301549 'move' errorExists[7301544](7301546 '!=' error[5507402] nil[32]))
      if errorExists[7301544]
      {
        (5507408 '=' error_out[5507324] error[5507402])
        ref i_x[7341886]:string[244] "temp"
        (7341890 'move' i_x[7341886](7341888 'set reference' name[3288638]))
        (7341894 call deinit[21354] i_x[7341886])
        ref i_x[8622189]:map(string,int(64),false)[3288794] "temp"
        (8622193 'move' i_x[8622189](8622191 'set reference' m[3288507]))
        const-ref _field_destructor_tmp_[8622196]:chpl__hashtable(string,int(64))[3288849] "temp"
        (8622198 'move' _field_destructor_tmp_[8622196](8622200 '.' i_x[8622189] table[3288779]))
        (8622204 call deinit[4217590] _field_destructor_tmp_[8622196])
        gotoErrorHandlingReturn _end_outOfOrderHelper[3288734] _end_outOfOrderHelper[3288734]
      }
      const-val call_tmp[3288651]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3288653 'move' call_tmp[3288651](3288659 call offset[3289103] reader[3288497]))
      const-val _formal_tmp_in_k[3301079]:string[244] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (5632338 '=' _formal_tmp_in_k[3301079] name[3288638])
      (3301084 'noop')
      const-val _return_tmp_[5468771]:bool[19] "dead after last mention" "temp"
      (5468773 'move' _return_tmp_[5468771](3288664 call add[3300824] m[3288507] _formal_tmp_in_k[3301079] call_tmp[3288651]))
      val coerce_tmp[8453983]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8453985 'move' coerce_tmp[8453983](8453987 '.v' reader[3288497] _channel_internal[3276776]))
      (8453991 call qio_channel_revert_unlocked[166360] coerce_tmp[8453983])
      const-ref call_tmp[3288676]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref call_tmp[8429427]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "maybe param" "temp"
      (8429429 'move' call_tmp[8429427](8429431 '.' reader[3288497] _channel_internal[3276776]))
      (3288678 'move' call_tmp[3288676] call_tmp[8429427])
      const-val coerce_tmp[3308980]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308986 'move' coerce_tmp[3308980](3308982 'cast' int(32)[66] 0))
      val coerce_tmp[3308988]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3308992 'move' coerce_tmp[3308988](3308990 'deref' call_tmp[3288676]))
      const-val _return_tmp_[5468775]:errorCode[12828] "dead after last mention" "temp"
      (5468777 'move' _return_tmp_[5468775](3288685 call qio_channel_skip_json_field[354546] coerce_tmp[3308980] coerce_tmp[3308988]))
      val default_arg_ignoreWhitespace[3309000]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      const-val _return_tmp_[5468779]:bool[19] "dead after last mention" "temp"
      val error[5507417]:Error[85511] "error variable" "temp"
      (5507419 'move' error[5507417] nil[32])
      val inlineImm[8448064]:string[244] "temp"
      (8448067 'move' inlineImm[8448064] ",")
      ref i_literal[8448069]:string[244] "temp"
      (8448073 'move' i_literal[8448069](8448071 'set reference' inlineImm[8448064]))
      val inlineImm[8448075]:bool[19] "temp"
      (8448078 'move' inlineImm[8448075] 1)
      ref i_error_out[8448080]:Error[85511] "temp"
      (8448084 'move' i_error_out[8448080](8448082 'set reference' error[5507417]))
      val ret[8448087]:bool[19] "dead after last mention" "RVV" "temp"
      const-val call_tmp[8448089]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[8448091]:Error[85511] "error variable" "temp"
      (8448093 'move' error[8448091] nil[32])
      val ret[8448096]:bool[19] "dead after last mention" "RVV" "temp"
      val error[8448098]:Error[85511] "error variable" "temp"
      (8448100 'move' error[8448098] nil[32])
      ref call_tmp[8448103]:locale[234] "dead after last mention" "maybe param" "temp"
      (8448105 'move' call_tmp[8448103](8448107 '.' reader[3288497] _home[3276771]))
      val coerce_tmp[8448110]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8448112 'move' coerce_tmp[8448110](8448114 '.v' call_tmp[8448103] _instance[135293]))
      val coerce_tmp[8448117]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8448119 'move' coerce_tmp[8448117](8448121 'cast' RootClass[236] coerce_tmp[8448110]))
      const-val call_tmp[8448124]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448126 'move' call_tmp[8448124](8448128 '==' coerce_tmp[8448117] nil[32]))
      if call_tmp[8448124]
      {
        (8448134 call nilCheckHalt[392] "argument to ! is nil")
      }
      val error[8448137]:Error[85511] "error variable" "temp"
      (8448139 'move' error[8448137] nil[32])
      const-val err[8448142]:errorCode[12828] "dead at end of block" "insert auto destroy"
      const-val call_tmp[8448144]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448146 'move' call_tmp[8448144](8448148 'cast' int(32)[66] 0))
      const-val call_tmp[8448151]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448153 'move' call_tmp[8448151](8448156 call qio_int_to_err[12856] call_tmp[8448144]))
      (8448158 'move' err[8448142] call_tmp[8448151])
      val coerce_tmp[8448161]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8448163 'move' coerce_tmp[8448161](8448165 '.v' reader[3288497] _channel_internal[3276776]))
      const-val call_tmp[8448168]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448170 'move' call_tmp[8448168](8448172 'ptr_eq' coerce_tmp[8448161] nil[32]))
      if call_tmp[8448168]
      {
        const-val call_tmp[8448177]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val coerce_tmp[8448179]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8448181 'move' coerce_tmp[8448179](8448183 'cast' int(64)[10] EINVAL[11206]))
        const-val ret_tmp[8448186]:owned SystemError[1554765] "temp"
        (8448189 call createSystemError[14072] coerce_tmp[8448179] "Operation attempted on an invalid fileReader" ret_tmp[8448186])
        (8448193 'move' call_tmp[8448177] ret_tmp[8448186])
        val call_tmp[8448196]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[8448198]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[8448200]:owned Error[1498203] "temp"
        ref i_x[8448202]:owned SystemError[1554765] "temp"
        (8448204 'move' i_x[8448202](8448206 'set reference' call_tmp[8448177]))
        ref i__retArg[8448208]:owned Error[1498203] "temp"
        (8448210 'move' i__retArg[8448208](8448212 'set reference' ret_tmp[8448200]))
        val _formal_tmp_x[8448214]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (8448216 'move' _formal_tmp_x[8448214] i_x[8448202])
        const-val ret[8448219]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[8448221]:owned SystemError[1554765] "temp"
        (8448223 'move' i_this[8448221](8448225 'set reference' _formal_tmp_x[8448214]))
        val coerce_tmp[8448227]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8448229 'move' coerce_tmp[8448227](8448231 '.v' i_this[8448221] chpl_p[1554760]))
        val call_tmp[8448234]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (8448236 'move' call_tmp[8448234](8448238 'cast' Error[85511] coerce_tmp[8448227]))
        val castPtr[8448241]:Error[85511] "dead at end of block" "insert auto destroy"
        (8448243 'move' castPtr[8448241] call_tmp[8448234])
        ref i_this[8448246]:owned SystemError[1554765] "temp"
        (8448248 'move' i_this[8448246](8448250 'set reference' _formal_tmp_x[8448214]))
        val tmp[8448252]:SystemError[13599] "temp"
        (8448254 'move' tmp[8448252](8448256 'cast' SystemError[13599] nil[32]))
        (8448259 '.=' i_this[8448246] chpl_p[1554760] tmp[8448252])
        val coerce_tmp[8448263]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8448265 'move' coerce_tmp[8448263](8448267 'cast' RootClass[236] call_tmp[8448234]))
        const-val call_tmp[8448270]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8448272 'move' call_tmp[8448270](8448274 '==' coerce_tmp[8448263] nil[32]))
        if call_tmp[8448270]
        {
          (8448280 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[8448283]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[8448285]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (8448288 call init[1499358] initTemp[8448285] castPtr[8448241])
        (8448291 'move' call_tmp[8448283] initTemp[8448285])
        (8448294 'move' ret[8448219] call_tmp[8448283])
        (8448298 call chpl__autoDestroy[3968549] _formal_tmp_x[8448214])
        (8448300 '=' i__retArg[8448208] ret[8448219])
        (8448303 'move' coerce_tmp[8448198] ret_tmp[8448200])
        const-val _formal_tmp_in_err[8448306]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (8448308 'move' _formal_tmp_in_err[8448306] coerce_tmp[8448198])
        (8448311 'move' call_tmp[8448196](8448314 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8448306]))
        (8448316 '=' error[8448137] call_tmp[8448196])
        gotoErrorHandlingReturn _endlock[8448379] _endlock[8448379]
      }
      const-val call_tmp[8448322]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448324 'move' call_tmp[8448322](8448327 call qio_err_iserr[12868] err[8448142]))
      const-val call_tmp[8448329]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448331 'move' call_tmp[8448329](8448333 '!=' call_tmp[8448322] 0))
      if call_tmp[8448329]
      {
        val error[8448338]:Error[85511] "error variable" "temp"
        (8448340 'move' error[8448338] nil[32])
        (8448344 call _ch_ioerror[3285336] reader[3288497] err[8448142] "in lock" error[8448338])
        val errorExists[8448349]:bool[19] "temp"
        (8448351 'move' errorExists[8448349](8448353 '!=' error[8448338] nil[32]))
        if errorExists[8448349]
        {
          gotoErrorHandling handler[8448361] handler[8448361]
        }
        label handler[8448361]
        val errorExists[8448363]:bool[19] "temp"
        (8448365 'move' errorExists[8448363](8448367 '!=' error[8448338] nil[32]))
        if errorExists[8448363]
        {
          (8448372 '=' error[8448137] error[8448338])
          gotoErrorHandlingReturn _endlock[8448379] _endlock[8448379]
        }
      }
      label _endlock[8448379]
      val errorExists[8448381]:bool[19] "temp"
      (8448383 'move' errorExists[8448381](8448385 '!=' error[8448137] nil[32]))
      if errorExists[8448381]
      {
        gotoErrorHandling handler[8448393] handler[8448393]
      }
      label handler[8448393]
      val errorExists[8448395]:bool[19] "temp"
      (8448397 'move' errorExists[8448395](8448399 '!=' error[8448137] nil[32]))
      if errorExists[8448395]
      {
        (8448405 call chpl_uncaught_error[87456] error[8448137])
      }
      const-val call_tmp[8448408]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret[8448410]:string[244] "dead after last mention" "RVV" "temp"
      val ret[8448412]:string[244] "dead at end of block" "insert auto destroy"
      (8448415 call init[21321] ret[8448412])
      const-val coerce_tmp[8448417]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8448419 'move' coerce_tmp[8448417](8448421 '.v' i_literal[8448069] cachedNumCodepoints[21293]))
      (8448424 '.=' ret[8448412] cachedNumCodepoints[21293] coerce_tmp[8448417])
      (8448429 call initWithBorrowedBuffer[1470549] ret[8448412] i_literal[8448069])
      (8448432 '=' ret[8448410] ret[8448412])
      (8448435 'move' call_tmp[8448408] ret[8448410])
      val coerce_tmp[8448438]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (8448440 'move' coerce_tmp[8448438](8448442 '.v' call_tmp[8448408] buff[21299]))
      (8448445 'noop')
      val call_tmp[8448446]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (8448448 'move' call_tmp[8448446](8448450 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8448438]))
      val ret[8448453]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8448455 '=' ret[8448453](8448457 '.v' i_literal[8448069] buffLen[21281]))
      const-val call_tmp[8448460]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[8448462]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8448464 'move' coerce_tmp[8448462](8448466 'cast' int(32)[66] 0))
      val coerce_tmp[8448469]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8448471 'move' coerce_tmp[8448469](8448473 '.v' reader[3288497] _channel_internal[3276776]))
      const-val coerce_tmp[8448476]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8448478 'move' coerce_tmp[8448476](8448480 'cast' int(32)[66] inlineImm[8448075]))
      (8448483 'move' call_tmp[8448460](8448486 call qio_channel_scan_literal[167758] coerce_tmp[8448462] coerce_tmp[8448469] call_tmp[8448446] ret[8448453] coerce_tmp[8448476]))
      const-val err[8448492]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
      (8448494 'move' err[8448492] call_tmp[8448460])
      const-val action[8448497]:string[244] "dead at end of block" "const" "insert auto destroy"
      (8448499 'move' action[8448497] "matching")
      val error[8448502]:Error[85511] "error variable" "temp"
      (8448504 'move' error[8448502] nil[32])
      ref i_action[8448507]:string[244] "temp"
      (8448509 'move' i_action[8448507](8448511 'set reference' action[8448497]))
      val inlineImm[8448513]:bool[19] "temp"
      (8448515 'move' inlineImm[8448513] 1)
      const-val call_tmp[8448518]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448520 'move' call_tmp[8448518](8448523 call qio_err_to_int[12844] call_tmp[8448460]))
      const-val call_tmp[8448525]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448527 'move' call_tmp[8448525](8448529 'cast' int(32)[66] 0))
      const-val call_tmp[8448532]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448534 'move' call_tmp[8448532](8448536 '==' call_tmp[8448518] call_tmp[8448525]))
      const-val call_tmp[8448539]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8448541 'move' call_tmp[8448539](8448543 'u!' call_tmp[8448532]))
      if call_tmp[8448539]
      {
        const-val call_tmp[8448547]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[8448549]:string[244] "temp"
        (8448552 call literalErrorHelper[3112834] i_literal[8448069] i_action[8448507] inlineImm[8448513] ret_tmp[8448549])
        (8448557 'move' call_tmp[8448547] ret_tmp[8448549])
        val msg[8448560]:string[244] "dead at end of block" "insert auto destroy"
        (8448562 'move' msg[8448560] call_tmp[8448547])
        const-val call_tmp[8448565]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (8448567 'move' call_tmp[8448565](8448570 call qio_err_to_int[12844] err[8448492]))
        const-val call_tmp[8448572]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8448574 'move' call_tmp[8448572](8448576 '==' call_tmp[8448565] EILSEQ[11191]))
        if call_tmp[8448572]
        {
          const-val call_tmp[8448581]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8448583]:string[244] "temp"
          (8448586 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8448583])
          (8448588 'move' call_tmp[8448581] ret_tmp[8448583])
          const-val call_tmp[8448591]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8448593]:string[244] "temp"
          (8448596 call +[28065] call_tmp[8448581] "Error: " ret_tmp[8448593])
          (8448600 'move' call_tmp[8448591] ret_tmp[8448593])
          const-val call_tmp[8448603]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8448605]:string[244] "temp"
          (8448608 call +[28065] call_tmp[8448591] msg[8448560] ret_tmp[8448605])
          (8448612 'move' call_tmp[8448603] ret_tmp[8448605])
          (8448616 call =[28046] msg[8448560] call_tmp[8448603])
          ref i_x[8448619]:string[244] "temp"
          (8448621 'move' i_x[8448619](8448623 'set reference' call_tmp[8448603]))
          (8448626 call deinit[21354] i_x[8448619])
          ref i_x[8448628]:string[244] "temp"
          (8448630 'move' i_x[8448628](8448632 'set reference' call_tmp[8448591]))
          (8448635 call deinit[21354] i_x[8448628])
          ref i_x[8448637]:string[244] "temp"
          (8448639 'move' i_x[8448637](8448641 'set reference' call_tmp[8448581]))
          (8448644 call deinit[21354] i_x[8448637])
        }
        val error[8448647]:Error[85511] "error variable" "temp"
        (8448649 'move' error[8448647] nil[32])
        (8448653 call _ch_ioerror[3285336] reader[3288497] err[8448492] msg[8448560] error[8448647])
        val errorExists[8448658]:bool[19] "temp"
        (8448660 'move' errorExists[8448658](8448662 '!=' error[8448647] nil[32]))
        if errorExists[8448658]
        {
          gotoErrorHandling handler[8448670] handler[8448670]
        }
        label handler[8448670]
        val errorExists[8448672]:bool[19] "temp"
        (8448674 'move' errorExists[8448672](8448676 '!=' error[8448647] nil[32]))
        if errorExists[8448672]
        {
          (8448681 '=' error[8448502] error[8448647])
          ref i_x[8448684]:string[244] "temp"
          (8448686 'move' i_x[8448684](8448688 'set reference' msg[8448560]))
          (8448691 call deinit[21354] i_x[8448684])
          gotoErrorHandlingReturn _end_checkLiteralError[8448706] _end_checkLiteralError[8448706]
        }
        ref i_x[8448696]:string[244] "temp"
        (8448698 'move' i_x[8448696](8448700 'set reference' msg[8448560]))
        (8448703 call deinit[21354] i_x[8448696])
      }
      label _end_checkLiteralError[8448706]
      val errorExists[8448708]:bool[19] "temp"
      (8448710 'move' errorExists[8448708](8448712 '!=' error[8448502] nil[32]))
      if errorExists[8448708]
      {
        gotoErrorHandling handler[8448720] handler[8448720]
      }
      label handler[8448720]
      val errorExists[8448722]:bool[19] "temp"
      (8448724 'move' errorExists[8448722](8448726 '!=' error[8448502] nil[32]))
      if errorExists[8448722]
      {
        (8448731 '=' error[8448098] error[8448502])
        ref i_x[8448734]:string[244] "temp"
        (8448736 'move' i_x[8448734](8448738 'set reference' action[8448497]))
        (8448741 call deinit[21354] i_x[8448734])
        ref i_x[8448743]:string[244] "temp"
        (8448745 'move' i_x[8448743](8448747 'set reference' call_tmp[8448408]))
        (8448750 call deinit[21354] i_x[8448743])
        gotoErrorHandlingReturn _end_readLiteralCommon[8448773] _end_readLiteralCommon[8448773]
      }
      ref i_x[8448755]:string[244] "temp"
      (8448757 'move' i_x[8448755](8448759 'set reference' action[8448497]))
      (8448762 call deinit[21354] i_x[8448755])
      ref i_x[8448764]:string[244] "temp"
      (8448766 'move' i_x[8448764](8448768 'set reference' call_tmp[8448408]))
      (8448771 call deinit[21354] i_x[8448764])
      label _end_readLiteralCommon[8448773]
      val errorExists[8448775]:bool[19] "temp"
      (8448777 'move' errorExists[8448775](8448779 '!=' error[8448098] nil[32]))
      if errorExists[8448775]
      {
        gotoErrorHandling handler[8448787] handler[8448787]
      }
      label handler[8448787]
      val errorExists[8448789]:bool[19] "temp"
      (8448791 'move' errorExists[8448789](8448793 '!=' error[8448098] nil[32]))
      if errorExists[8448789]
      {
        val call_tmp[8448798]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
        (8448800 'move' call_tmp[8448798](8448802 'dynamic_cast' BadFormatError[15094] error[8448098]))
        val tmp[8448805]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
        (8448807 'move' tmp[8448805] call_tmp[8448798])
        const-val call_tmp[8448810]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8448812 'move' call_tmp[8448810](8448814 '!=' call_tmp[8448798] nil[32]))
        if call_tmp[8448810]
        {
          const-val call_tmp[8448819]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8448821]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
          (8448824 call init[1543824] initTemp[8448821] tmp[8448805])
          (8448827 'move' call_tmp[8448819] initTemp[8448821])
          const-val e[8448830]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8448832 'move' e[8448830] call_tmp[8448819])
          (8448835 'move' ret[8448096] 0)
          (8448839 call chpl__autoDestroy[3940454] e[8448830])
          gotoReturn _end__matchLiteralCommon[8448907] _end__matchLiteralCommon[8448907]
          (8448844 call chpl__autoDestroy[3940454] e[8448830])
        }
        {
          val call_tmp[8448847]:EofError[14808] "dead after last mention" "maybe param" "temp"
          (8448849 'move' call_tmp[8448847](8448851 'dynamic_cast' EofError[14808] error[8448098]))
          val tmp[8448854]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
          (8448856 'move' tmp[8448854] call_tmp[8448847])
          const-val call_tmp[8448859]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8448861 'move' call_tmp[8448859](8448863 '!=' call_tmp[8448847] nil[32]))
          if call_tmp[8448859]
          {
            const-val call_tmp[8448868]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[8448870]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
            (8448873 call init[1542524] initTemp[8448870] tmp[8448854])
            (8448876 'move' call_tmp[8448868] initTemp[8448870])
            const-val e[8448879]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
            (8448881 'move' e[8448879] call_tmp[8448868])
            (8448884 'move' ret[8448096] 0)
            (8448888 call chpl__autoDestroy[3937692] e[8448879])
            gotoReturn _end__matchLiteralCommon[8448907] _end__matchLiteralCommon[8448907]
            (8448893 call chpl__autoDestroy[3937692] e[8448879])
          }
          {
            (8448896 '=' error[8448091] error[8448098])
            gotoErrorHandlingReturn _end__matchLiteralCommon[8448907] _end__matchLiteralCommon[8448907]
          }
        }
      }
      (8448904 'move' ret[8448096] 1)
      label _end__matchLiteralCommon[8448907]
      (8448909 'move' call_tmp[8448089] ret[8448096])
      val errorExists[8448912]:bool[19] "temp"
      (8448914 'move' errorExists[8448912](8448916 '!=' error[8448091] nil[32]))
      if errorExists[8448912]
      {
        (8448921 '=' i_error_out[8448080] error[8448091])
        gotoErrorHandlingReturn _endmatchLiteral[8448930] _endmatchLiteral[8448930]
      }
      (8448927 '=' ret[8448087] call_tmp[8448089])
      label _endmatchLiteral[8448930]
      (5468781 'move' _return_tmp_[5468779] ret[8448087])
      val errorExists[7301552]:bool[19] "temp"
      (7301557 'move' errorExists[7301552](7301554 '!=' error[5507417] nil[32]))
      if errorExists[7301552]
      {
        (5507423 '=' error_out[5507324] error[5507417])
        ref i_x[8622208]:map(string,int(64),false)[3288794] "temp"
        (8622212 'move' i_x[8622208](8622210 'set reference' m[3288507]))
        const-ref _field_destructor_tmp_[8622215]:chpl__hashtable(string,int(64))[3288849] "temp"
        (8622217 'move' _field_destructor_tmp_[8622215](8622219 '.' i_x[8622208] table[3288779]))
        (8622223 call deinit[4217590] _field_destructor_tmp_[8622215])
        gotoErrorHandlingReturn _end_outOfOrderHelper[3288734] _end_outOfOrderHelper[3288734]
      }
      const-val call_tmp[3288697]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7351139]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7351141 'move' call_tmp[7351139](7351143 'u!' done[3288534]))
      (3288699 'move' call_tmp[3288697] call_tmp[7351139])
      (3288704 'move' tmp[3288554] call_tmp[3288697])
      tmp[3288554]
    }
    label _breakLabel[3288709]
    val coerce_tmp[8453996]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8453998 'move' coerce_tmp[8453996](8454000 '.v' reader[3288497] _channel_internal[3276776]))
    (8454004 call qio_channel_revert_unlocked[166360] coerce_tmp[8453996])
    const-val call_tmp[3288717]:(map(string,int(64),false),int(64))[3309055] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5588799]:(map(string,int(64),false),int(64))[3309055] "temp"
    ref i__e0_x[8454122]:map(string,int(64),false)[3288794] "temp"
    (8454126 'move' i__e0_x[8454122](8454124 'set reference' m[3288507]))
    ref i__retArg[8454128]:(map(string,int(64),false),int(64))[3309055] "temp"
    (8454132 'move' i__retArg[8454128](8454130 'set reference' ret_tmp[5588799]))
    val this[8454135]:(map(string,int(64),false),int(64))[3309055] "arg this"
    (8454137 '.=' this[8454135] x0[3309051] i__e0_x[8454122])
    (8454141 '.=' this[8454135] x1[3309053] lastPos[3288547])
    (8454145 '=' i__retArg[8454128] this[8454135])
    (5588802 'move' call_tmp[3288717] ret_tmp[5588799])
    val copy_ret_tmp[3312687]:(map(string,int(64),false),int(64))[3309055] "dead after last mention" "no copy" "temp"
    (3312688 'move' copy_ret_tmp[3312687] call_tmp[3288717])
    ref i_x[8454175]:(map(string,int(64),false),int(64))[3309055] "temp"
    (8454179 'move' i_x[8454175](8454177 'set reference' copy_ret_tmp[3312687]))
    val inlineImm[8454181]:bool[19] "temp"
    (8454184 'move' inlineImm[8454181] 0)
    val ret[8454187]:(map(string,int(64),false),int(64))[3312520] "dead after last mention" "RVV" "temp"
    val retv[8454189]:(map(string,int(64),false),int(64))[3312520]
    ref read_x0[8454191]:map(string,int(64),false)[3288794]
    (8454193 'move' read_x0[8454191](8454195 '.v' i_x[8454175] x0[3309051]))
    val elt_x0[8454198]:map(string,int(64),false)[3288794]
    val ret[8454200]:map(string,int(64),false)[3288794] "dead after last mention" "RVV" "temp"
    const-val tmp[8454202]:map(string,int(64),false)[3288794] "dead after last mention" "temp"
    (8454205 call init=[3309171] tmp[8454202] read_x0[8454191])
    (8454208 'move' ret[8454200] tmp[8454202])
    (8454211 'move' elt_x0[8454198] ret[8454200])
    (8454214 '.=' retv[8454189] x0[3312516] elt_x0[8454198])
    const-val coerce_tmp[8454218]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8454220 'move' coerce_tmp[8454218](8454222 '.v' i_x[8454175] x1[3309053]))
    (8454225 'noop')
    (8454226 '.=' retv[8454189] x1[3312518] coerce_tmp[8454218])
    (8454230 'move' ret[8454187] retv[8454189])
    (3288725 'move' ret[3288499] ret[8454187])
    ref i_x[8622287]:(map(string,int(64),false),int(64))[3309055] "temp"
    (8622291 'move' i_x[8622287](8622289 'set reference' call_tmp[3288717]))
    ref i_x[8622227]:map(string,int(64),false)[3288794] "temp"
    (8622231 'move' i_x[8622227](8622229 'set reference' m[3288507]))
    const-ref _field_destructor_tmp_[8622234]:chpl__hashtable(string,int(64))[3288849] "temp"
    (8622236 'move' _field_destructor_tmp_[8622234](8622238 '.' i_x[8622227] table[3288779]))
    (8622242 call deinit[4217590] _field_destructor_tmp_[8622234])
    label _end_outOfOrderHelper[3288734]
    (5588644 '=' _retArg[5588642] ret[3288499])
    (5588646 return _void[46])
  }
  function jsonDeserializer[356412].init[354720](ref arg this[354722]:jsonDeserializer[356412]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (637705 return _void[46])
  }
  function jsonDeserializer[356412]._oldRead[3291994](const  ref arg this[3291998]:jsonDeserializer[356412], const  ref arg ch[3292002]:fileReader(false,jsonDeserializer)[3276790], ref arg val[3292004]:string[244], ref arg error_out[5507762]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[3292012]:defaultDeserializer[173096] "dead at end of block" "maybe param" "temp"
    const-val initTemp[3292248]:defaultDeserializer[173096] "dead at end of block" "temp"
    (3292251 call init[1193190] initTemp[3292248])
    (3292014 'move' call_tmp[3292012] initTemp[3292248])
    const-val _def[3292018]:defaultDeserializer[173096] "dead at end of block" "insert auto destroy" "maybe copy elided"
    (3292020 'move' _def[3292018] call_tmp[3292012])
    const-val call_tmp[3292024]:fileReader(false,defaultDeserializer)[1872106] "dead at end of block" "maybe param" "temp"
    const-val _formal_tmp_in_deserializer[3292511]:defaultDeserializer[173096] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632472 '=' _formal_tmp_in_deserializer[3292511] _def[3292018])
    (3292516 'noop')
    const-val ret_tmp[5588708]:fileReader(false,defaultDeserializer)[1872106] "temp"
    (3292032 call withDeserializer[3292264] ch[3292002] _formal_tmp_in_deserializer[3292511] ret_tmp[5588708])
    (5588711 'move' call_tmp[3292024] ret_tmp[5588708])
    const-val dc[3292034]:fileReader(false,defaultDeserializer)[1872106] "dead at end of block" "insert auto destroy"
    (3292036 'move' dc[3292034] call_tmp[3292024])
    const-val call_tmp[3292040]:iostyleInternal[164872] "dead at end of block" "maybe param" "temp"
    (3292042 'move' call_tmp[3292040](3292048 call _styleInternal[3292708] dc[3292034]))
    val st[3292049]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3292051 'move' st[3292049] call_tmp[3292040])
    const-val orig[3292055]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3292057 'move' orig[3292055] st[3292049])
    ref call_tmp[3292075]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    ref i_this[7633434]:iostyleInternal[164872] "temp"
    (7633438 'move' i_this[7633434](7633436 'set reference' st[3292049]))
    ref call_tmp[7633441]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    (7633443 'move' call_tmp[7633441](7633445 '.' i_this[7633434] realfmt[164832]))
    (3292077 'move' call_tmp[3292075] call_tmp[7633441])
    const-val coerce_tmp[3292906]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3292912 'move' coerce_tmp[3292906](3292908 'cast' uint(8)[71] 2))
    (7483469 '=' call_tmp[3292075] coerce_tmp[3292906])
    ref call_tmp[3292089]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    ref i_this[7633320]:iostyleInternal[164872] "temp"
    (7633324 'move' i_this[7633320](7633322 'set reference' st[3292049]))
    ref call_tmp[7633327]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    (7633329 'move' call_tmp[7633327](7633331 '.' i_this[7633320] bytes_prefix[164696]))
    (3292091 'move' call_tmp[3292089] call_tmp[7633327])
    const-val coerce_tmp[3292916]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3292922 'move' coerce_tmp[3292916](3292918 'cast' uint(8)[71] 0))
    (7483475 '=' call_tmp[3292089] coerce_tmp[3292916])
    ref call_tmp[3292103]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    ref i_this[7633300]:iostyleInternal[164872] "temp"
    (7633304 'move' i_this[7633300](7633302 'set reference' st[3292049]))
    ref call_tmp[7633307]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    (7633309 'move' call_tmp[7633307](7633311 '.' i_this[7633300] string_format[164678]))
    (3292105 'move' call_tmp[3292103] call_tmp[7633307])
    val call_tmp[3292111]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[3292118]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val inlineImm[7483480]:uint(8)[71] "temp"
    (7483483 'move' inlineImm[7483480] 3)
    (7483486 '=' call_tmp[3292103] inlineImm[7483480])
    ref call_tmp[3292132]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    ref i_this[7633474]:iostyleInternal[164872] "temp"
    (7633478 'move' i_this[7633474](7633476 'set reference' st[3292049]))
    ref call_tmp[7633481]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    (7633483 'move' call_tmp[7633481](7633485 '.' i_this[7633474] aggregate_style[164856]))
    (3292134 'move' call_tmp[3292132] call_tmp[7633481])
    val call_tmp[3292140]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[3292147]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7867725]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
    (7867727 'move' call_tmp[7867725](7867729 'cast' uint(8)[71] QIO_AGGREGATE_FORMAT_JSON[77225]))
    (3292149 'move' call_tmp[3292147] call_tmp[7867725])
    (7483492 '=' call_tmp[3292132] call_tmp[3292147])
    ref call_tmp[3292161]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    ref i_this[7633454]:iostyleInternal[164872] "temp"
    (7633458 'move' i_this[7633454](7633456 'set reference' st[3292049]))
    ref call_tmp[7633461]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    (7633463 'move' call_tmp[7633461](7633465 '.' i_this[7633454] array_style[164848]))
    (3292163 'move' call_tmp[3292161] call_tmp[7633461])
    val call_tmp[3292169]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[3292176]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7867735]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
    (7867737 'move' call_tmp[7867735](7867739 'cast' uint(8)[71] QIO_ARRAY_FORMAT_JSON[77210]))
    (3292178 'move' call_tmp[3292176] call_tmp[7867735])
    (7483498 '=' call_tmp[3292161] call_tmp[3292176])
    ref call_tmp[3292190]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    ref i_this[7633494]:iostyleInternal[164872] "temp"
    (7633498 'move' i_this[7633494](7633496 'set reference' st[3292049]))
    ref call_tmp[7633501]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    (7633503 'move' call_tmp[7633501](7633505 '.' i_this[7633494] tuple_style[164864]))
    (3292192 'move' call_tmp[3292190] call_tmp[7633501])
    val call_tmp[3292198]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[3292205]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7867745]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
    (7867747 'move' call_tmp[7867745](7867749 'cast' uint(8)[71] QIO_TUPLE_FORMAT_JSON[77240]))
    (3292207 'move' call_tmp[3292205] call_tmp[7867745])
    (7483504 '=' call_tmp[3292190] call_tmp[3292205])
    (3292223 call _set_styleInternal[3292824] dc[3292034] st[3292049])
    const-val call_tmp[3292228]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5543418]:locale[234] "temp"
    ref i__retArg[7532072]:locale[234] "temp"
    (7532076 'move' i__retArg[7532072](7532074 'set reference' ret_tmp[5543418]))
    const-val call_tmp[7532079]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[7532081]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7532083 'move' call_tmp[7532081](7532086 call chpl_nodeID[305038]))
    const-val call_tmp[7532087]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (7532089 'move' call_tmp[7532087](7532092 call chpl_rt_buildLocaleID[306484] call_tmp[7532081] c_sublocid_any[135202]))
    (7532095 'move' call_tmp[7532079] call_tmp[7532087])
    const-val call_tmp[7532098]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7532100]:locale[234] "temp"
    (7532103 call chpl_localeID_to_locale[137251] call_tmp[7532079] ret_tmp[7532100])
    (7532106 'move' call_tmp[7532098] ret_tmp[7532100])
    (7532109 '=' i__retArg[7532072] call_tmp[7532098])
    (5543421 'move' call_tmp[3292228] ret_tmp[5543418])
    val error[5507767]:Error[85511] "error variable" "temp"
    (5507769 'move' error[5507767] nil[32])
    (3292238 call _readOne[3292955] dc[3292034] val[3292004] call_tmp[3292228] error[5507767])
    val errorExists[7301720]:bool[19] "temp"
    (7301725 'move' errorExists[7301720](7301722 '!=' error[5507767] nil[32]))
    if errorExists[7301720]
    {
      (5507773 '=' error_out[5507762] error[5507767])
      ref i_x[7553207]:locale[234] "temp"
      (7553211 'move' i_x[7553207](7553209 'set reference' call_tmp[3292228]))
      (7553215 call deinit[135483] i_x[7553207])
      (5632480 call _set_styleInternal[3292824] dc[3292034] orig[3292055])
      ref i_x[8598575]:fileReader(false,defaultDeserializer)[1872106] "temp"
      (8598579 'move' i_x[8598575](8598577 'set reference' dc[3292034]))
      (8598583 call deinit[4023387] i_x[8598575])
      gotoErrorHandlingReturn _end_oldRead[5507764] _end_oldRead[5507764]
    }
    ref i_x[7553219]:locale[234] "temp"
    (7553223 'move' i_x[7553219](7553221 'set reference' call_tmp[3292228]))
    (7553227 call deinit[135483] i_x[7553219])
    (5632494 call _set_styleInternal[3292824] dc[3292034] orig[3292055])
    ref i_x[8598587]:fileReader(false,defaultDeserializer)[1872106] "temp"
    (8598591 'move' i_x[8598587](8598589 'set reference' dc[3292034]))
    (8598595 call deinit[4023387] i_x[8598587])
    label _end_oldRead[5507764]
    (3292244 return _void[46])
  }
  function jsonDeserializer[356412].deserializeType[3285979](const  ref arg this[3285983]:jsonDeserializer[356412], const  ref arg reader[3285987]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5507212]:Error[85511], ref arg _retArg[5588618]:owned ModuleSpecification[3283911]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479812]:owned ModuleSpecification[3283911] "temp"
    const-val ret[3285993]:owned ModuleSpecification[3283911] "dead after last mention" "delay instantiation" "RVV" "temp"
    val tmp[3286003]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286010]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286023]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3286025]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286027]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3286070]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286095]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286102]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286115]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3286117]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286119]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286139]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3286141]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3286159]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286200]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286207]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286220]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3286222]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286224]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286244]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3286246]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3286264]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3286298]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3286305]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286364]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286374]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286387]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3286389]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3286391]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3286411]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3286413]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3286431]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3286461]:owned ModuleSpecification[3283911] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[3379649]:ModuleSpecification[360813] "dead after last mention" "temp"
    (3379651 'move' new_temp[3379649](3288029 call _new[3369617] reader[3285987] this[3285983]))
    const-val initTemp[3379658]:owned ModuleSpecification[3283911] "dead after last mention" "delay instantiation" "temp"
    (3379661 call init[3369722] initTemp[3379658] new_temp[3379649])
    (3286463 'move' call_tmp[3286461] initTemp[3379658])
    (3379676 '=' ret[3285993] call_tmp[3286461])
    label _end_deserializeType[3286482]
    (5588620 '=' _retArg[5588618] ret[3285993])
    (5588622 return _void[46])
  }
  function jsonDeserializer[356412].deserializeType[3291431](const  ref arg this[3291435]:jsonDeserializer[356412], const  ref arg reader[3291439]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5507745]:Error[85511], ref arg _retArg[5588702]:string[244]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479818]:string[244] "temp"
    const-val ret[3291445]:string[244] "dead after last mention" "RVV" "temp"
    val tmp[3291455]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3291462]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3291475]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3291477]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3291479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3291522]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3291547]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3291554]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3291567]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3291569]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3291571]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3291591]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3291593]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3291611]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3291652]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3291659]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3291672]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3291674]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3291676]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3291716]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3291725]:string[244] "dead at end of block" "insert auto destroy"
    (3300799 call init[21321] tmp[3291725])
    val error[5507748]:Error[85511] "error variable" "temp"
    (5507750 'move' error[5507748] nil[32])
    (3291735 call _oldRead[3291994] this[3291435] reader[3291439] tmp[3291725] error[5507748])
    val errorExists[7301712]:bool[19] "temp"
    (7301717 'move' errorExists[7301712](7301714 '!=' error[5507748] nil[32]))
    if errorExists[7301712]
    {
      (5507754 '=' error_out[5507745] error[5507748])
      ref i_x[7342066]:string[244] "temp"
      (7342070 'move' i_x[7342066](7342068 'set reference' tmp[3291725]))
      (7342074 call deinit[21354] i_x[7342066])
      gotoErrorHandlingReturn _end_deserializeType[3291934] _end_deserializeType[3291934]
    }
    (3300797 '=' ret[3291445] tmp[3291725])
    label _end_deserializeType[3291934]
    (5588704 '=' _retArg[5588702] ret[3291445])
    (5588706 return _void[46])
  }
  function jsonDeserializer[356412].deserializeType[3337104](const  ref arg this[3337108]:jsonDeserializer[356412], const  ref arg reader[3337112]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5509548]:Error[85511], ref arg _retArg[5589224]:map(string,string,false)[3283386]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479877]:map(string,string,false)[3283386] "temp"
    const-val ret[3337118]:map(string,string,false)[3283386] "dead after last mention" "delay instantiation" "RVV" "temp"
    val tmp[3337128]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337135]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337148]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3337150]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337152]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3337195]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337220]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337227]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337240]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3337242]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337244]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337264]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3337266]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3337284]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337325]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337332]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337345]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3337347]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337349]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337369]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3337371]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3337389]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3337423]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3337430]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337489]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337499]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337512]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3337514]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3337516]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3337536]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3337538]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3337556]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3337586]:map(string,string,false)[3283386] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[3339093]:map(string,string,false)[3283386] "dead after last mention" "delay instantiation" "temp"
    val error[5509551]:Error[85511] "error variable" "temp"
    (5509553 'move' error[5509551] nil[32])
    (3339096 call init[3339110] initTemp[3339093] reader[3337112] this[3337108] error[5509551])
    val errorExists[7302552]:bool[19] "temp"
    (7302557 'move' errorExists[7302552](7302554 '!=' error[5509551] nil[32]))
    if errorExists[7302552]
    {
      (5509557 '=' error_out[5509548] error[5509551])
      gotoErrorHandlingReturn _end_deserializeType[3337607] _end_deserializeType[3337607]
    }
    (3337588 'move' call_tmp[3337586] initTemp[3339093])
    (3350734 '=' ret[3337118] call_tmp[3337586])
    label _end_deserializeType[3337607]
    (5589226 '=' _retArg[5589224] ret[3337118])
    (5589228 return _void[46])
  }
  function jsonDeserializer[356412].deserializeType[3352163](const  ref arg this[3352167]:jsonDeserializer[356412], const  ref arg reader[3352171]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5509968]:Error[85511], ref arg _retArg[5589418]:map(string,owned ModuleSpecification?,false)[3283686]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479920]:map(string,owned ModuleSpecification?,false)[3283686] "temp"
    const-val ret[3352177]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "delay instantiation" "RVV" "temp"
    val tmp[3352187]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352194]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352207]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3352209]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352211]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3352254]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352279]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352286]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352299]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3352301]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352303]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352323]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3352325]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3352343]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352384]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352391]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352404]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3352406]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352408]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352428]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3352430]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3352448]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3352482]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3352489]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352548]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352558]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352571]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3352573]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3352575]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3352595]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3352597]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3352615]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3352645]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[3354152]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "delay instantiation" "temp"
    val error[5509971]:Error[85511] "error variable" "temp"
    (5509973 'move' error[5509971] nil[32])
    (3354155 call init[3354169] initTemp[3354152] reader[3352171] this[3352167] error[5509971])
    val errorExists[7302752]:bool[19] "temp"
    (7302757 'move' errorExists[7302752](7302754 '!=' error[5509971] nil[32]))
    if errorExists[7302752]
    {
      (5509977 '=' error_out[5509968] error[5509971])
      gotoErrorHandlingReturn _end_deserializeType[3352666] _end_deserializeType[3352666]
    }
    (3352647 'move' call_tmp[3352645] initTemp[3354152])
    (3373731 '=' ret[3352177] call_tmp[3352645])
    label _end_deserializeType[3352666]
    (5589420 '=' _retArg[5589418] ret[3352177])
    (5589422 return _void[46])
  }
  function jsonDeserializer[356412].deserializeType[3367234](const  ref arg this[3367238]:jsonDeserializer[356412], const  ref arg reader[3367242]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5510194]:Error[85511], ref arg _retArg[5589558]:owned ModuleSpecification?[3283604]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479961]:owned ModuleSpecification?[3283604] "temp"
    val ret[3367248]:owned ModuleSpecification?[3283604] "dead after last mention" "RVV" "temp"
    val tmp[3367258]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367265]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[3367278]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[3367280]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367282]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val tmp[3367296]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[3367298]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_ignoreWhitespace[3367780]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5510197]:Error[85511] "error variable" "temp"
    (5510199 'move' error[5510197] nil[32])
    val inlineImm[8446324]:string[244] "temp"
    (8446327 'move' inlineImm[8446324] "null")
    ref i_literal[8446329]:string[244] "temp"
    (8446333 'move' i_literal[8446329](8446331 'set reference' inlineImm[8446324]))
    val inlineImm[8446335]:bool[19] "temp"
    (8446338 'move' inlineImm[8446335] 1)
    ref i_error_out[8446340]:Error[85511] "temp"
    (8446344 'move' i_error_out[8446340](8446342 'set reference' error[5510197]))
    val ret[8446347]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[8446349]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[8446351]:Error[85511] "error variable" "temp"
    (8446353 'move' error[8446351] nil[32])
    val ret[8446356]:bool[19] "dead after last mention" "RVV" "temp"
    val error[8446358]:Error[85511] "error variable" "temp"
    (8446360 'move' error[8446358] nil[32])
    ref call_tmp[8446363]:locale[234] "dead after last mention" "maybe param" "temp"
    (8446365 'move' call_tmp[8446363](8446367 '.' reader[3367242] _home[3276771]))
    val coerce_tmp[8446370]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8446372 'move' coerce_tmp[8446370](8446374 '.v' call_tmp[8446363] _instance[135293]))
    val coerce_tmp[8446377]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8446379 'move' coerce_tmp[8446377](8446381 'cast' RootClass[236] coerce_tmp[8446370]))
    const-val call_tmp[8446384]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446386 'move' call_tmp[8446384](8446388 '==' coerce_tmp[8446377] nil[32]))
    if call_tmp[8446384]
    {
      (8446394 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8446397]:Error[85511] "error variable" "temp"
    (8446399 'move' error[8446397] nil[32])
    const-val err[8446402]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8446404]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446406 'move' call_tmp[8446404](8446408 'cast' int(32)[66] 0))
    const-val call_tmp[8446411]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446413 'move' call_tmp[8446411](8446416 call qio_int_to_err[12856] call_tmp[8446404]))
    (8446418 'move' err[8446402] call_tmp[8446411])
    val coerce_tmp[8446421]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8446423 'move' coerce_tmp[8446421](8446425 '.v' reader[3367242] _channel_internal[3276776]))
    const-val call_tmp[8446428]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446430 'move' call_tmp[8446428](8446432 'ptr_eq' coerce_tmp[8446421] nil[32]))
    if call_tmp[8446428]
    {
      const-val call_tmp[8446437]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8446439]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8446441 'move' coerce_tmp[8446439](8446443 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8446446]:owned SystemError[1554765] "temp"
      (8446449 call createSystemError[14072] coerce_tmp[8446439] "Operation attempted on an invalid fileReader" ret_tmp[8446446])
      (8446453 'move' call_tmp[8446437] ret_tmp[8446446])
      val call_tmp[8446456]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8446458]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8446460]:owned Error[1498203] "temp"
      ref i_x[8446462]:owned SystemError[1554765] "temp"
      (8446464 'move' i_x[8446462](8446466 'set reference' call_tmp[8446437]))
      ref i__retArg[8446468]:owned Error[1498203] "temp"
      (8446470 'move' i__retArg[8446468](8446472 'set reference' ret_tmp[8446460]))
      val _formal_tmp_x[8446474]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8446476 'move' _formal_tmp_x[8446474] i_x[8446462])
      const-val ret[8446479]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8446481]:owned SystemError[1554765] "temp"
      (8446483 'move' i_this[8446481](8446485 'set reference' _formal_tmp_x[8446474]))
      val coerce_tmp[8446487]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8446489 'move' coerce_tmp[8446487](8446491 '.v' i_this[8446481] chpl_p[1554760]))
      val call_tmp[8446494]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8446496 'move' call_tmp[8446494](8446498 'cast' Error[85511] coerce_tmp[8446487]))
      val castPtr[8446501]:Error[85511] "dead at end of block" "insert auto destroy"
      (8446503 'move' castPtr[8446501] call_tmp[8446494])
      ref i_this[8446506]:owned SystemError[1554765] "temp"
      (8446508 'move' i_this[8446506](8446510 'set reference' _formal_tmp_x[8446474]))
      val tmp[8446512]:SystemError[13599] "temp"
      (8446514 'move' tmp[8446512](8446516 'cast' SystemError[13599] nil[32]))
      (8446519 '.=' i_this[8446506] chpl_p[1554760] tmp[8446512])
      val coerce_tmp[8446523]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8446525 'move' coerce_tmp[8446523](8446527 'cast' RootClass[236] call_tmp[8446494]))
      const-val call_tmp[8446530]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8446532 'move' call_tmp[8446530](8446534 '==' coerce_tmp[8446523] nil[32]))
      if call_tmp[8446530]
      {
        (8446540 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8446543]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8446545]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8446548 call init[1499358] initTemp[8446545] castPtr[8446501])
      (8446551 'move' call_tmp[8446543] initTemp[8446545])
      (8446554 'move' ret[8446479] call_tmp[8446543])
      (8446558 call chpl__autoDestroy[3968549] _formal_tmp_x[8446474])
      (8446560 '=' i__retArg[8446468] ret[8446479])
      (8446563 'move' coerce_tmp[8446458] ret_tmp[8446460])
      const-val _formal_tmp_in_err[8446566]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8446568 'move' _formal_tmp_in_err[8446566] coerce_tmp[8446458])
      (8446571 'move' call_tmp[8446456](8446574 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8446566]))
      (8446576 '=' error[8446397] call_tmp[8446456])
      gotoErrorHandlingReturn _endlock[8446639] _endlock[8446639]
    }
    const-val call_tmp[8446582]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446584 'move' call_tmp[8446582](8446587 call qio_err_iserr[12868] err[8446402]))
    const-val call_tmp[8446589]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446591 'move' call_tmp[8446589](8446593 '!=' call_tmp[8446582] 0))
    if call_tmp[8446589]
    {
      val error[8446598]:Error[85511] "error variable" "temp"
      (8446600 'move' error[8446598] nil[32])
      (8446604 call _ch_ioerror[3285336] reader[3367242] err[8446402] "in lock" error[8446598])
      val errorExists[8446609]:bool[19] "temp"
      (8446611 'move' errorExists[8446609](8446613 '!=' error[8446598] nil[32]))
      if errorExists[8446609]
      {
        gotoErrorHandling handler[8446621] handler[8446621]
      }
      label handler[8446621]
      val errorExists[8446623]:bool[19] "temp"
      (8446625 'move' errorExists[8446623](8446627 '!=' error[8446598] nil[32]))
      if errorExists[8446623]
      {
        (8446632 '=' error[8446397] error[8446598])
        gotoErrorHandlingReturn _endlock[8446639] _endlock[8446639]
      }
    }
    label _endlock[8446639]
    val errorExists[8446641]:bool[19] "temp"
    (8446643 'move' errorExists[8446641](8446645 '!=' error[8446397] nil[32]))
    if errorExists[8446641]
    {
      gotoErrorHandling handler[8446653] handler[8446653]
    }
    label handler[8446653]
    val errorExists[8446655]:bool[19] "temp"
    (8446657 'move' errorExists[8446655](8446659 '!=' error[8446397] nil[32]))
    if errorExists[8446655]
    {
      (8446665 call chpl_uncaught_error[87456] error[8446397])
    }
    const-val call_tmp[8446668]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8446670]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8446672]:string[244] "dead at end of block" "insert auto destroy"
    (8446675 call init[21321] ret[8446672])
    const-val coerce_tmp[8446677]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8446679 'move' coerce_tmp[8446677](8446681 '.v' i_literal[8446329] cachedNumCodepoints[21293]))
    (8446684 '.=' ret[8446672] cachedNumCodepoints[21293] coerce_tmp[8446677])
    (8446689 call initWithBorrowedBuffer[1470549] ret[8446672] i_literal[8446329])
    (8446692 '=' ret[8446670] ret[8446672])
    (8446695 'move' call_tmp[8446668] ret[8446670])
    val coerce_tmp[8446698]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8446700 'move' coerce_tmp[8446698](8446702 '.v' call_tmp[8446668] buff[21299]))
    (8446705 'noop')
    val call_tmp[8446706]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8446708 'move' call_tmp[8446706](8446710 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8446698]))
    val ret[8446713]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8446715 '=' ret[8446713](8446717 '.v' i_literal[8446329] buffLen[21281]))
    const-val call_tmp[8446720]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8446722]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8446724 'move' coerce_tmp[8446722](8446726 'cast' int(32)[66] 0))
    val coerce_tmp[8446729]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8446731 'move' coerce_tmp[8446729](8446733 '.v' reader[3367242] _channel_internal[3276776]))
    const-val coerce_tmp[8446736]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8446738 'move' coerce_tmp[8446736](8446740 'cast' int(32)[66] inlineImm[8446335]))
    (8446743 'move' call_tmp[8446720](8446746 call qio_channel_scan_literal[167758] coerce_tmp[8446722] coerce_tmp[8446729] call_tmp[8446706] ret[8446713] coerce_tmp[8446736]))
    const-val err[8446752]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8446754 'move' err[8446752] call_tmp[8446720])
    const-val action[8446757]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8446759 'move' action[8446757] "matching")
    val error[8446762]:Error[85511] "error variable" "temp"
    (8446764 'move' error[8446762] nil[32])
    ref i_action[8446767]:string[244] "temp"
    (8446769 'move' i_action[8446767](8446771 'set reference' action[8446757]))
    val inlineImm[8446773]:bool[19] "temp"
    (8446775 'move' inlineImm[8446773] 1)
    const-val call_tmp[8446778]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446780 'move' call_tmp[8446778](8446783 call qio_err_to_int[12844] call_tmp[8446720]))
    const-val call_tmp[8446785]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446787 'move' call_tmp[8446785](8446789 'cast' int(32)[66] 0))
    const-val call_tmp[8446792]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446794 'move' call_tmp[8446792](8446796 '==' call_tmp[8446778] call_tmp[8446785]))
    const-val call_tmp[8446799]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8446801 'move' call_tmp[8446799](8446803 'u!' call_tmp[8446792]))
    if call_tmp[8446799]
    {
      const-val call_tmp[8446807]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8446809]:string[244] "temp"
      (8446812 call literalErrorHelper[3112834] i_literal[8446329] i_action[8446767] inlineImm[8446773] ret_tmp[8446809])
      (8446817 'move' call_tmp[8446807] ret_tmp[8446809])
      val msg[8446820]:string[244] "dead at end of block" "insert auto destroy"
      (8446822 'move' msg[8446820] call_tmp[8446807])
      const-val call_tmp[8446825]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8446827 'move' call_tmp[8446825](8446830 call qio_err_to_int[12844] err[8446752]))
      const-val call_tmp[8446832]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8446834 'move' call_tmp[8446832](8446836 '==' call_tmp[8446825] EILSEQ[11191]))
      if call_tmp[8446832]
      {
        const-val call_tmp[8446841]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8446843]:string[244] "temp"
        (8446846 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8446843])
        (8446848 'move' call_tmp[8446841] ret_tmp[8446843])
        const-val call_tmp[8446851]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8446853]:string[244] "temp"
        (8446856 call +[28065] call_tmp[8446841] "Error: " ret_tmp[8446853])
        (8446860 'move' call_tmp[8446851] ret_tmp[8446853])
        const-val call_tmp[8446863]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8446865]:string[244] "temp"
        (8446868 call +[28065] call_tmp[8446851] msg[8446820] ret_tmp[8446865])
        (8446872 'move' call_tmp[8446863] ret_tmp[8446865])
        (8446876 call =[28046] msg[8446820] call_tmp[8446863])
        ref i_x[8446879]:string[244] "temp"
        (8446881 'move' i_x[8446879](8446883 'set reference' call_tmp[8446863]))
        (8446886 call deinit[21354] i_x[8446879])
        ref i_x[8446888]:string[244] "temp"
        (8446890 'move' i_x[8446888](8446892 'set reference' call_tmp[8446851]))
        (8446895 call deinit[21354] i_x[8446888])
        ref i_x[8446897]:string[244] "temp"
        (8446899 'move' i_x[8446897](8446901 'set reference' call_tmp[8446841]))
        (8446904 call deinit[21354] i_x[8446897])
      }
      val error[8446907]:Error[85511] "error variable" "temp"
      (8446909 'move' error[8446907] nil[32])
      (8446913 call _ch_ioerror[3285336] reader[3367242] err[8446752] msg[8446820] error[8446907])
      val errorExists[8446918]:bool[19] "temp"
      (8446920 'move' errorExists[8446918](8446922 '!=' error[8446907] nil[32]))
      if errorExists[8446918]
      {
        gotoErrorHandling handler[8446930] handler[8446930]
      }
      label handler[8446930]
      val errorExists[8446932]:bool[19] "temp"
      (8446934 'move' errorExists[8446932](8446936 '!=' error[8446907] nil[32]))
      if errorExists[8446932]
      {
        (8446941 '=' error[8446762] error[8446907])
        ref i_x[8446944]:string[244] "temp"
        (8446946 'move' i_x[8446944](8446948 'set reference' msg[8446820]))
        (8446951 call deinit[21354] i_x[8446944])
        gotoErrorHandlingReturn _end_checkLiteralError[8446966] _end_checkLiteralError[8446966]
      }
      ref i_x[8446956]:string[244] "temp"
      (8446958 'move' i_x[8446956](8446960 'set reference' msg[8446820]))
      (8446963 call deinit[21354] i_x[8446956])
    }
    label _end_checkLiteralError[8446966]
    val errorExists[8446968]:bool[19] "temp"
    (8446970 'move' errorExists[8446968](8446972 '!=' error[8446762] nil[32]))
    if errorExists[8446968]
    {
      gotoErrorHandling handler[8446980] handler[8446980]
    }
    label handler[8446980]
    val errorExists[8446982]:bool[19] "temp"
    (8446984 'move' errorExists[8446982](8446986 '!=' error[8446762] nil[32]))
    if errorExists[8446982]
    {
      (8446991 '=' error[8446358] error[8446762])
      ref i_x[8446994]:string[244] "temp"
      (8446996 'move' i_x[8446994](8446998 'set reference' action[8446757]))
      (8447001 call deinit[21354] i_x[8446994])
      ref i_x[8447003]:string[244] "temp"
      (8447005 'move' i_x[8447003](8447007 'set reference' call_tmp[8446668]))
      (8447010 call deinit[21354] i_x[8447003])
      gotoErrorHandlingReturn _end_readLiteralCommon[8447033] _end_readLiteralCommon[8447033]
    }
    ref i_x[8447015]:string[244] "temp"
    (8447017 'move' i_x[8447015](8447019 'set reference' action[8446757]))
    (8447022 call deinit[21354] i_x[8447015])
    ref i_x[8447024]:string[244] "temp"
    (8447026 'move' i_x[8447024](8447028 'set reference' call_tmp[8446668]))
    (8447031 call deinit[21354] i_x[8447024])
    label _end_readLiteralCommon[8447033]
    val errorExists[8447035]:bool[19] "temp"
    (8447037 'move' errorExists[8447035](8447039 '!=' error[8446358] nil[32]))
    if errorExists[8447035]
    {
      gotoErrorHandling handler[8447047] handler[8447047]
    }
    label handler[8447047]
    val errorExists[8447049]:bool[19] "temp"
    (8447051 'move' errorExists[8447049](8447053 '!=' error[8446358] nil[32]))
    if errorExists[8447049]
    {
      val call_tmp[8447058]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
      (8447060 'move' call_tmp[8447058](8447062 'dynamic_cast' BadFormatError[15094] error[8446358]))
      val tmp[8447065]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
      (8447067 'move' tmp[8447065] call_tmp[8447058])
      const-val call_tmp[8447070]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8447072 'move' call_tmp[8447070](8447074 '!=' call_tmp[8447058] nil[32]))
      if call_tmp[8447070]
      {
        const-val call_tmp[8447079]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[8447081]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
        (8447084 call init[1543824] initTemp[8447081] tmp[8447065])
        (8447087 'move' call_tmp[8447079] initTemp[8447081])
        const-val e[8447090]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
        (8447092 'move' e[8447090] call_tmp[8447079])
        (8447095 'move' ret[8446356] 0)
        (8447099 call chpl__autoDestroy[3940454] e[8447090])
        gotoReturn _end__matchLiteralCommon[8447167] _end__matchLiteralCommon[8447167]
        (8447104 call chpl__autoDestroy[3940454] e[8447090])
      }
      {
        val call_tmp[8447107]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (8447109 'move' call_tmp[8447107](8447111 'dynamic_cast' EofError[14808] error[8446358]))
        val tmp[8447114]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
        (8447116 'move' tmp[8447114] call_tmp[8447107])
        const-val call_tmp[8447119]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8447121 'move' call_tmp[8447119](8447123 '!=' call_tmp[8447107] nil[32]))
        if call_tmp[8447119]
        {
          const-val call_tmp[8447128]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8447130]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (8447133 call init[1542524] initTemp[8447130] tmp[8447114])
          (8447136 'move' call_tmp[8447128] initTemp[8447130])
          const-val e[8447139]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8447141 'move' e[8447139] call_tmp[8447128])
          (8447144 'move' ret[8446356] 0)
          (8447148 call chpl__autoDestroy[3937692] e[8447139])
          gotoReturn _end__matchLiteralCommon[8447167] _end__matchLiteralCommon[8447167]
          (8447153 call chpl__autoDestroy[3937692] e[8447139])
        }
        {
          (8447156 '=' error[8446351] error[8446358])
          gotoErrorHandlingReturn _end__matchLiteralCommon[8447167] _end__matchLiteralCommon[8447167]
        }
      }
    }
    (8447164 'move' ret[8446356] 1)
    label _end__matchLiteralCommon[8447167]
    (8447169 'move' call_tmp[8446349] ret[8446356])
    val errorExists[8447172]:bool[19] "temp"
    (8447174 'move' errorExists[8447172](8447176 '!=' error[8446351] nil[32]))
    if errorExists[8447172]
    {
      (8447181 '=' i_error_out[8446340] error[8446351])
      gotoErrorHandlingReturn _endmatchLiteral[8447190] _endmatchLiteral[8447190]
    }
    (8447187 '=' ret[8446347] call_tmp[8446349])
    label _endmatchLiteral[8447190]
    (3367300 'move' call_tmp[3367298] ret[8446347])
    val errorExists[7302864]:bool[19] "temp"
    (7302869 'move' errorExists[7302864](7302866 '!=' error[5510197] nil[32]))
    if errorExists[7302864]
    {
      (5510203 '=' error_out[5510194] error[5510197])
      gotoErrorHandlingReturn _end_deserializeType[3367737] _end_deserializeType[3367737]
    }
    (3367308 'move' tmp[3367296] call_tmp[3367298])
    (3367313 'move' tmp[3367278] tmp[3367296])
    const-val call_tmp[3367325]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3367327 'move' call_tmp[3367325] tmp[3367278])
    if call_tmp[3367325]
    {
      const-val call_tmp[3367334]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5589564]:owned ModuleSpecification?[3283604] "temp"
      ref i__retArg[8461649]:owned ModuleSpecification?[3283604] "temp"
      (8461653 'move' i__retArg[8461649](8461651 'set reference' ret_tmp[5589564]))
      const-val ret[8461656]:owned ModuleSpecification?[3283604] "dead after last mention" "RVV" "temp"
      const-val tmp[8461658]:owned ModuleSpecification?[3283604] "dead at end of block" "insert auto destroy"
      (8461661 call init[3367941] tmp[8461658])
      (8461663 'move' ret[8461656] tmp[8461658])
      (8461668 '=' i__retArg[8461649] ret[8461656])
      (5589567 'move' call_tmp[3367334] ret_tmp[5589564])
      (3371994 '=' ret[3367248] call_tmp[3367334])
      gotoReturn _end_deserializeType[3367737] _end_deserializeType[3367737]
    }
    val tmp[3367350]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367357]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367370]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3367372]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367374]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367394]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3367396]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3367414]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367455]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367462]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367475]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3367477]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367499]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3367501]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3367519]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3367553]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3367560]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367619]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367629]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367642]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3367644]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3367646]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3367666]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3367668]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3367686]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3367716]:owned ModuleSpecification?[3283604] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[3369673]:ModuleSpecification[360813] "dead after last mention" "temp"
    (3369675 'move' new_temp[3369673](3369602 call _new[3369617] reader[3367242] this[3367238]))
    const-val new_temp_n[3369680]:owned ModuleSpecification[3283911] "dead after last mention" "delay instantiation" "insert auto destroy" "maybe copy elided" "temp"
    const-val initTemp[3369701]:owned ModuleSpecification[3283911] "dead after last mention" "delay instantiation" "temp"
    (3369704 call init[3369722] initTemp[3369701] new_temp[3369673])
    (3369682 'move' new_temp_n[3369680] initTemp[3369701])
    const-val _formal_tmp_in_x[3370696]:owned ModuleSpecification[3283911] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5635307 '=' _formal_tmp_in_x[3370696] new_temp_n[3369680])
    (3370701 'noop')
    const-val ret_tmp[5589576]:owned ModuleSpecification?[3283604] "temp"
    ref i_x[8461781]:owned ModuleSpecification[3283911] "temp"
    (8461785 'move' i_x[8461781](8461783 'set reference' _formal_tmp_in_x[3370696]))
    ref i__retArg[8461787]:owned ModuleSpecification?[3283604] "temp"
    (8461791 'move' i__retArg[8461787](8461789 'set reference' ret_tmp[5589576]))
    val _formal_tmp_x[8461794]:owned ModuleSpecification[3283911] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (8461796 'move' _formal_tmp_x[8461794] i_x[8461781])
    const-val ret[8461799]:owned ModuleSpecification?[3283604] "dead after last mention" "RVV" "temp"
    ref i_this[8461801]:owned ModuleSpecification[3283911] "temp"
    (8461803 'move' i_this[8461801](8461805 'set reference' _formal_tmp_x[8461794]))
    val coerce_tmp[8461807]:ModuleSpecification[360813] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8461809 'move' coerce_tmp[8461807](8461811 '.v' i_this[8461801] chpl_p[3283906]))
    ref i_this[8461814]:owned ModuleSpecification[3283911] "temp"
    (8461816 'move' i_this[8461814](8461818 'set reference' _formal_tmp_x[8461794]))
    val tmp[8461820]:ModuleSpecification[360813] "temp"
    (8461822 'move' tmp[8461820](8461824 'cast' ModuleSpecification[360813] nil[32]))
    (8461827 '.=' i_this[8461814] chpl_p[3283906] tmp[8461820])
    const-val call_tmp[8461831]:owned ModuleSpecification?[3283604] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[8461833]:owned ModuleSpecification?[3283604] "dead after last mention" "delay instantiation" "temp"
    (8461836 call init[3371627] initTemp[8461833] coerce_tmp[8461807])
    (8461839 'move' call_tmp[8461831] initTemp[8461833])
    (8461842 'move' ret[8461799] call_tmp[8461831])
    (8461846 call chpl__autoDestroy[4217115] _formal_tmp_x[8461794])
    (8461850 '=' i__retArg[8461787] ret[8461799])
    (5589579 'move' call_tmp[3367716] ret_tmp[5589576])
    (3371997 '=' ret[3367248] call_tmp[3367716])
    label _end_deserializeType[3367737]
    (5589560 '=' _retArg[5589558] ret[3367248])
    (5589562 return _void[46])
  }
  function jsonDeserializer[356412].deserializeType[3375160](const  ref arg this[3375164]:jsonDeserializer[356412], const  ref arg reader[3375168]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5510363]:Error[85511], ref arg _retArg[5589654]:list(string,false)[1950598]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479981]:list(string,false)[1950598] "temp"
    const-val ret[3375174]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "RVV" "temp"
    val tmp[3375184]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375191]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375204]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3375206]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375208]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3375251]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375276]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375283]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375296]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3375298]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375300]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375320]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3375322]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3375340]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375381]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375388]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375401]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3375403]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375405]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375425]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3375427]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3375445]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3375479]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3375486]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375545]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375555]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375568]:bool[19] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe type" "temp"
    val tmp[3375570]:bool[19] "dead after last mention" "maybe param" "temp"
    val call_tmp[3375572]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val tmp[3375592]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
    val call_tmp[3375594]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3375612]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3375642]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[3377149]:list(string,false)[1950598] "dead after last mention" "delay instantiation" "temp"
    val error[5510366]:Error[85511] "error variable" "temp"
    (5510368 'move' error[5510366] nil[32])
    (3377152 call init[3377164] initTemp[3377149] reader[3375168] this[3375164] error[5510366])
    val errorExists[7302944]:bool[19] "temp"
    (7302949 'move' errorExists[7302944](7302946 '!=' error[5510366] nil[32]))
    if errorExists[7302944]
    {
      (5510372 '=' error_out[5510363] error[5510366])
      gotoErrorHandlingReturn _end_deserializeType[3375663] _end_deserializeType[3375663]
    }
    (3375644 'move' call_tmp[3375642] initTemp[3377149])
    (3379405 '=' ret[3375174] call_tmp[3375642])
    label _end_deserializeType[3375663]
    (5589656 '=' _retArg[5589654] ret[3375174])
    (5589658 return _void[46])
  }
  function jsonDeserializer[356412].startClass[3288401](const  ref arg this[3288405]:jsonDeserializer[356412], const  ref arg reader[3288409]:fileReader(false,jsonDeserializer)[3276790], const  ref arg name[3288411]:string[244], ref arg error_out[5507292]:Error[85511], ref arg _retArg[5588630]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[3288413]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3288421]:(map(string,int(64),false),int(64))[3312520] "dead after last mention" "maybe param" "temp"
    val error[5507295]:Error[85511] "error variable" "temp"
    (5507297 'move' error[5507295] nil[32])
    const-val ret_tmp[5588636]:(map(string,int(64),false),int(64))[3312520] "temp"
    (3288426 call outOfOrderHelper[3288493] reader[3288409] error[5507295] ret_tmp[5588636])
    (5588639 'move' call_tmp[3288421] ret_tmp[5588636])
    val errorExists[7301488]:bool[19] "temp"
    (7301493 'move' errorExists[7301488](7301490 '!=' error[5507295] nil[32]))
    if errorExists[7301488]
    {
      (5507301 '=' error_out[5507292] error[5507295])
      gotoErrorHandlingReturn _end_startClass[3288488] _end_startClass[3288488]
    }
    const-val tmp[3288428]:(map(string,int(64),false),int(64))[3312520] "dead at end of block" "insert auto destroy" "temp"
    (3288430 'move' tmp[3288428] call_tmp[3288421])
    1
    ref call_tmp[3288438]:map(string,int(64),false)[3288794] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (3288440 'move' call_tmp[3288438](3313710 '.' tmp[3288428] x0[3312516]))
    const-val m[3288445]:map(string,int(64),false)[3288794] "dead at end of block" "insert auto destroy" "maybe copy elided"
    (3288447 call init=[3309171] m[3288445] call_tmp[3288438])
    const-ref call_tmp[3288450]:int(64)[10] "dead after last mention" "maybe param" "temp"
    (3288452 'move' call_tmp[3288450](3313718 '.' tmp[3288428] x1[3312518]))
    const-val last[3288457]:int(64)[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[3313724]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3313728 'move' coerce_tmp[3313724](3313726 'deref' call_tmp[3288450]))
    (5632326 '=' last[3288457] coerce_tmp[3313724])
    (3288459 'noop')
    val default_arg_ignoreWhitespace[3313736]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5507310]:Error[85511] "error variable" "temp"
    (5507312 'move' error[5507310] nil[32])
    val inlineImm[8435852]:string[244] "temp"
    (8435855 'move' inlineImm[8435852] "{")
    ref i_literal[8435857]:string[244] "temp"
    (8435861 'move' i_literal[8435857](8435859 'set reference' inlineImm[8435852]))
    val inlineImm[8435863]:bool[19] "temp"
    (8435866 'move' inlineImm[8435863] 1)
    ref i_error_out[8435868]:Error[85511] "temp"
    (8435872 'move' i_error_out[8435868](8435870 'set reference' error[5507310]))
    val ret[8435875]:void[4] "dead after last mention" "RVV" "temp"
    val error[8435877]:Error[85511] "error variable" "temp"
    (8435879 'move' error[8435877] nil[32])
    ref call_tmp[8435882]:locale[234] "dead after last mention" "maybe param" "temp"
    (8435884 'move' call_tmp[8435882](8435886 '.' reader[3288409] _home[3276771]))
    val coerce_tmp[8435889]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8435891 'move' coerce_tmp[8435889](8435893 '.v' call_tmp[8435882] _instance[135293]))
    val coerce_tmp[8435896]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8435898 'move' coerce_tmp[8435896](8435900 'cast' RootClass[236] coerce_tmp[8435889]))
    const-val call_tmp[8435903]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8435905 'move' call_tmp[8435903](8435907 '==' coerce_tmp[8435896] nil[32]))
    if call_tmp[8435903]
    {
      (8435913 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8435916]:Error[85511] "error variable" "temp"
    (8435918 'move' error[8435916] nil[32])
    const-val err[8435921]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8435923]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8435925 'move' call_tmp[8435923](8435927 'cast' int(32)[66] 0))
    const-val call_tmp[8435930]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8435932 'move' call_tmp[8435930](8435935 call qio_int_to_err[12856] call_tmp[8435923]))
    (8435937 'move' err[8435921] call_tmp[8435930])
    val coerce_tmp[8435940]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8435942 'move' coerce_tmp[8435940](8435944 '.v' reader[3288409] _channel_internal[3276776]))
    const-val call_tmp[8435947]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8435949 'move' call_tmp[8435947](8435951 'ptr_eq' coerce_tmp[8435940] nil[32]))
    if call_tmp[8435947]
    {
      const-val call_tmp[8435956]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8435958]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8435960 'move' coerce_tmp[8435958](8435962 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8435965]:owned SystemError[1554765] "temp"
      (8435968 call createSystemError[14072] coerce_tmp[8435958] "Operation attempted on an invalid fileReader" ret_tmp[8435965])
      (8435972 'move' call_tmp[8435956] ret_tmp[8435965])
      val call_tmp[8435975]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8435977]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8435979]:owned Error[1498203] "temp"
      ref i_x[8435981]:owned SystemError[1554765] "temp"
      (8435983 'move' i_x[8435981](8435985 'set reference' call_tmp[8435956]))
      ref i__retArg[8435987]:owned Error[1498203] "temp"
      (8435989 'move' i__retArg[8435987](8435991 'set reference' ret_tmp[8435979]))
      val _formal_tmp_x[8435993]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8435995 'move' _formal_tmp_x[8435993] i_x[8435981])
      const-val ret[8435998]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8436000]:owned SystemError[1554765] "temp"
      (8436002 'move' i_this[8436000](8436004 'set reference' _formal_tmp_x[8435993]))
      val coerce_tmp[8436006]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8436008 'move' coerce_tmp[8436006](8436010 '.v' i_this[8436000] chpl_p[1554760]))
      val call_tmp[8436013]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8436015 'move' call_tmp[8436013](8436017 'cast' Error[85511] coerce_tmp[8436006]))
      val castPtr[8436020]:Error[85511] "dead at end of block" "insert auto destroy"
      (8436022 'move' castPtr[8436020] call_tmp[8436013])
      ref i_this[8436025]:owned SystemError[1554765] "temp"
      (8436027 'move' i_this[8436025](8436029 'set reference' _formal_tmp_x[8435993]))
      val tmp[8436031]:SystemError[13599] "temp"
      (8436033 'move' tmp[8436031](8436035 'cast' SystemError[13599] nil[32]))
      (8436038 '.=' i_this[8436025] chpl_p[1554760] tmp[8436031])
      val coerce_tmp[8436042]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8436044 'move' coerce_tmp[8436042](8436046 'cast' RootClass[236] call_tmp[8436013]))
      const-val call_tmp[8436049]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8436051 'move' call_tmp[8436049](8436053 '==' coerce_tmp[8436042] nil[32]))
      if call_tmp[8436049]
      {
        (8436059 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8436062]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8436064]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8436067 call init[1499358] initTemp[8436064] castPtr[8436020])
      (8436070 'move' call_tmp[8436062] initTemp[8436064])
      (8436073 'move' ret[8435998] call_tmp[8436062])
      (8436077 call chpl__autoDestroy[3968549] _formal_tmp_x[8435993])
      (8436079 '=' i__retArg[8435987] ret[8435998])
      (8436082 'move' coerce_tmp[8435977] ret_tmp[8435979])
      const-val _formal_tmp_in_err[8436085]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8436087 'move' _formal_tmp_in_err[8436085] coerce_tmp[8435977])
      (8436090 'move' call_tmp[8435975](8436093 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8436085]))
      (8436095 '=' error[8435916] call_tmp[8435975])
      gotoErrorHandlingReturn _endlock[8436158] _endlock[8436158]
    }
    const-val call_tmp[8436101]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436103 'move' call_tmp[8436101](8436106 call qio_err_iserr[12868] err[8435921]))
    const-val call_tmp[8436108]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436110 'move' call_tmp[8436108](8436112 '!=' call_tmp[8436101] 0))
    if call_tmp[8436108]
    {
      val error[8436117]:Error[85511] "error variable" "temp"
      (8436119 'move' error[8436117] nil[32])
      (8436123 call _ch_ioerror[3285336] reader[3288409] err[8435921] "in lock" error[8436117])
      val errorExists[8436128]:bool[19] "temp"
      (8436130 'move' errorExists[8436128](8436132 '!=' error[8436117] nil[32]))
      if errorExists[8436128]
      {
        gotoErrorHandling handler[8436140] handler[8436140]
      }
      label handler[8436140]
      val errorExists[8436142]:bool[19] "temp"
      (8436144 'move' errorExists[8436142](8436146 '!=' error[8436117] nil[32]))
      if errorExists[8436142]
      {
        (8436151 '=' error[8435916] error[8436117])
        gotoErrorHandlingReturn _endlock[8436158] _endlock[8436158]
      }
    }
    label _endlock[8436158]
    val errorExists[8436160]:bool[19] "temp"
    (8436162 'move' errorExists[8436160](8436164 '!=' error[8435916] nil[32]))
    if errorExists[8436160]
    {
      gotoErrorHandling handler[8436172] handler[8436172]
    }
    label handler[8436172]
    val errorExists[8436174]:bool[19] "temp"
    (8436176 'move' errorExists[8436174](8436178 '!=' error[8435916] nil[32]))
    if errorExists[8436174]
    {
      (8436184 call chpl_uncaught_error[87456] error[8435916])
    }
    const-val call_tmp[8436187]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8436189]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8436191]:string[244] "dead at end of block" "insert auto destroy"
    (8436194 call init[21321] ret[8436191])
    const-val coerce_tmp[8436196]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436198 'move' coerce_tmp[8436196](8436200 '.v' i_literal[8435857] cachedNumCodepoints[21293]))
    (8436203 '.=' ret[8436191] cachedNumCodepoints[21293] coerce_tmp[8436196])
    (8436208 call initWithBorrowedBuffer[1470549] ret[8436191] i_literal[8435857])
    (8436211 '=' ret[8436189] ret[8436191])
    (8436214 'move' call_tmp[8436187] ret[8436189])
    val coerce_tmp[8436217]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8436219 'move' coerce_tmp[8436217](8436221 '.v' call_tmp[8436187] buff[21299]))
    (8436224 'noop')
    val call_tmp[8436225]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8436227 'move' call_tmp[8436225](8436229 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8436217]))
    val ret[8436232]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8436234 '=' ret[8436232](8436236 '.v' i_literal[8435857] buffLen[21281]))
    const-val call_tmp[8436239]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8436241]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436243 'move' coerce_tmp[8436241](8436245 'cast' int(32)[66] 0))
    val coerce_tmp[8436248]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436250 'move' coerce_tmp[8436248](8436252 '.v' reader[3288409] _channel_internal[3276776]))
    const-val coerce_tmp[8436255]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436257 'move' coerce_tmp[8436255](8436259 'cast' int(32)[66] inlineImm[8435863]))
    (8436262 'move' call_tmp[8436239](8436265 call qio_channel_scan_literal[167758] coerce_tmp[8436241] coerce_tmp[8436248] call_tmp[8436225] ret[8436232] coerce_tmp[8436255]))
    const-val err[8436271]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8436273 'move' err[8436271] call_tmp[8436239])
    const-val action[8436276]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8436278 'move' action[8436276] "reading")
    val error[8436281]:Error[85511] "error variable" "temp"
    (8436283 'move' error[8436281] nil[32])
    ref i_action[8436286]:string[244] "temp"
    (8436288 'move' i_action[8436286](8436290 'set reference' action[8436276]))
    val inlineImm[8436292]:bool[19] "temp"
    (8436294 'move' inlineImm[8436292] 1)
    const-val call_tmp[8436297]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436299 'move' call_tmp[8436297](8436302 call qio_err_to_int[12844] call_tmp[8436239]))
    const-val call_tmp[8436304]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436306 'move' call_tmp[8436304](8436308 'cast' int(32)[66] 0))
    const-val call_tmp[8436311]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436313 'move' call_tmp[8436311](8436315 '==' call_tmp[8436297] call_tmp[8436304]))
    const-val call_tmp[8436318]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436320 'move' call_tmp[8436318](8436322 'u!' call_tmp[8436311]))
    if call_tmp[8436318]
    {
      const-val call_tmp[8436326]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8436328]:string[244] "temp"
      (8436331 call literalErrorHelper[3112834] i_literal[8435857] i_action[8436286] inlineImm[8436292] ret_tmp[8436328])
      (8436336 'move' call_tmp[8436326] ret_tmp[8436328])
      val msg[8436339]:string[244] "dead at end of block" "insert auto destroy"
      (8436341 'move' msg[8436339] call_tmp[8436326])
      const-val call_tmp[8436344]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8436346 'move' call_tmp[8436344](8436349 call qio_err_to_int[12844] err[8436271]))
      const-val call_tmp[8436351]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8436353 'move' call_tmp[8436351](8436355 '==' call_tmp[8436344] EILSEQ[11191]))
      if call_tmp[8436351]
      {
        const-val call_tmp[8436360]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8436362]:string[244] "temp"
        (8436365 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8436362])
        (8436367 'move' call_tmp[8436360] ret_tmp[8436362])
        const-val call_tmp[8436370]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8436372]:string[244] "temp"
        (8436375 call +[28065] call_tmp[8436360] "Error: " ret_tmp[8436372])
        (8436379 'move' call_tmp[8436370] ret_tmp[8436372])
        const-val call_tmp[8436382]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8436384]:string[244] "temp"
        (8436387 call +[28065] call_tmp[8436370] msg[8436339] ret_tmp[8436384])
        (8436391 'move' call_tmp[8436382] ret_tmp[8436384])
        (8436395 call =[28046] msg[8436339] call_tmp[8436382])
        ref i_x[8436398]:string[244] "temp"
        (8436400 'move' i_x[8436398](8436402 'set reference' call_tmp[8436382]))
        (8436405 call deinit[21354] i_x[8436398])
        ref i_x[8436407]:string[244] "temp"
        (8436409 'move' i_x[8436407](8436411 'set reference' call_tmp[8436370]))
        (8436414 call deinit[21354] i_x[8436407])
        ref i_x[8436416]:string[244] "temp"
        (8436418 'move' i_x[8436416](8436420 'set reference' call_tmp[8436360]))
        (8436423 call deinit[21354] i_x[8436416])
      }
      val error[8436426]:Error[85511] "error variable" "temp"
      (8436428 'move' error[8436426] nil[32])
      (8436432 call _ch_ioerror[3285336] reader[3288409] err[8436271] msg[8436339] error[8436426])
      val errorExists[8436437]:bool[19] "temp"
      (8436439 'move' errorExists[8436437](8436441 '!=' error[8436426] nil[32]))
      if errorExists[8436437]
      {
        gotoErrorHandling handler[8436449] handler[8436449]
      }
      label handler[8436449]
      val errorExists[8436451]:bool[19] "temp"
      (8436453 'move' errorExists[8436451](8436455 '!=' error[8436426] nil[32]))
      if errorExists[8436451]
      {
        (8436460 '=' error[8436281] error[8436426])
        ref i_x[8436463]:string[244] "temp"
        (8436465 'move' i_x[8436463](8436467 'set reference' msg[8436339]))
        (8436470 call deinit[21354] i_x[8436463])
        gotoErrorHandlingReturn _end_checkLiteralError[8436485] _end_checkLiteralError[8436485]
      }
      ref i_x[8436475]:string[244] "temp"
      (8436477 'move' i_x[8436475](8436479 'set reference' msg[8436339]))
      (8436482 call deinit[21354] i_x[8436475])
    }
    label _end_checkLiteralError[8436485]
    val errorExists[8436487]:bool[19] "temp"
    (8436489 'move' errorExists[8436487](8436491 '!=' error[8436281] nil[32]))
    if errorExists[8436487]
    {
      gotoErrorHandling handler[8436499] handler[8436499]
    }
    label handler[8436499]
    val errorExists[8436501]:bool[19] "temp"
    (8436503 'move' errorExists[8436501](8436505 '!=' error[8436281] nil[32]))
    if errorExists[8436501]
    {
      (8436510 '=' error[8435877] error[8436281])
      ref i_x[8436513]:string[244] "temp"
      (8436515 'move' i_x[8436513](8436517 'set reference' action[8436276]))
      (8436520 call deinit[21354] i_x[8436513])
      ref i_x[8436522]:string[244] "temp"
      (8436524 'move' i_x[8436522](8436526 'set reference' call_tmp[8436187]))
      (8436529 call deinit[21354] i_x[8436522])
      gotoErrorHandlingReturn _end_readLiteralCommon[8436552] _end_readLiteralCommon[8436552]
    }
    ref i_x[8436534]:string[244] "temp"
    (8436536 'move' i_x[8436534](8436538 'set reference' action[8436276]))
    (8436541 call deinit[21354] i_x[8436534])
    ref i_x[8436543]:string[244] "temp"
    (8436545 'move' i_x[8436543](8436547 'set reference' call_tmp[8436187]))
    (8436550 call deinit[21354] i_x[8436543])
    label _end_readLiteralCommon[8436552]
    val errorExists[8436554]:bool[19] "temp"
    (8436556 'move' errorExists[8436554](8436558 '!=' error[8435877] nil[32]))
    if errorExists[8436554]
    {
      (8436563 '=' i_error_out[8435868] error[8435877])
      gotoErrorHandlingReturn _endreadLiteral[8436569] _endreadLiteral[8436569]
    }
    label _endreadLiteral[8436569]
    val errorExists[7301496]:bool[19] "temp"
    (7301501 'move' errorExists[7301496](7301498 '!=' error[5507310] nil[32]))
    if errorExists[7301496]
    {
      (5507316 '=' error_out[5507292] error[5507310])
      ref i_x[8622075]:map(string,int(64),false)[3288794] "temp"
      (8622079 'move' i_x[8622075](8622077 'set reference' m[3288445]))
      const-ref _field_destructor_tmp_[8622082]:chpl__hashtable(string,int(64))[3288849] "temp"
      (8622084 'move' _field_destructor_tmp_[8622082](8622086 '.' i_x[8622075] table[3288779]))
      (8622090 call deinit[4217590] _field_destructor_tmp_[8622082])
      ref i_x[8622296]:(map(string,int(64),false),int(64))[3312520] "temp"
      (8622300 'move' i_x[8622296](8622298 'set reference' tmp[3288428]))
      const-ref _field_destructor_tmp_[8622303]:map(string,int(64),false)[3288794] "temp"
      (8622305 'move' _field_destructor_tmp_[8622303](8622307 '.' i_x[8622296] x0[3312516]))
      const-ref _field_destructor_tmp_[8622310]:chpl__hashtable(string,int(64))[3288849] "temp"
      (8622312 'move' _field_destructor_tmp_[8622310](8622314 '.' _field_destructor_tmp_[8622303] table[3288779]))
      (8622318 call deinit[4217590] _field_destructor_tmp_[8622310])
      gotoErrorHandlingReturn _end_startClass[3288488] _end_startClass[3288488]
    }
    const-val call_tmp[3288470]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[3313748]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851] "dead after last mention" "delay instantiation" "temp"
    const-val _formal_tmp_in_reader[3313886]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "expr temp" "no auto destroy" "temp"
    val inlineImm[8454555]:bool[19] "temp"
    (8454558 'move' inlineImm[8454555] 0)
    val ret[8454561]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "RVV" "temp"
    const-val tmp[8454563]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "temp"
    (8454566 call init=[3282985] tmp[8454563] reader[3288409])
    (8454569 'move' ret[8454561] tmp[8454563])
    (3313891 'move' _formal_tmp_in_reader[3313886] ret[8454561])
    const-val _formal_tmp_in__fieldOffsets[3314749]:map(string,int(64),false)[3288794] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (5632323 '=' _formal_tmp_in__fieldOffsets[3314749] m[3288445])
    (3314754 'noop')
    const-val default_arg__parent[3314791]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (3314795 'move' default_arg__parent[3314791] 0)
    (3313751 call init[3313769] initTemp[3313748] _formal_tmp_in_reader[3313886] _formal_tmp_in__fieldOffsets[3314749] last[3288457] default_arg__parent[3314791])
    (3288472 'move' call_tmp[3288470] initTemp[3313748])
    (3288479 'move' ret[3288413] call_tmp[3288470])
    ref i_x[8622322]:(map(string,int(64),false),int(64))[3312520] "temp"
    (8622326 'move' i_x[8622322](8622324 'set reference' tmp[3288428]))
    const-ref _field_destructor_tmp_[8622329]:map(string,int(64),false)[3288794] "temp"
    (8622331 'move' _field_destructor_tmp_[8622329](8622333 '.' i_x[8622322] x0[3312516]))
    const-ref _field_destructor_tmp_[8622336]:chpl__hashtable(string,int(64))[3288849] "temp"
    (8622338 'move' _field_destructor_tmp_[8622336](8622340 '.' _field_destructor_tmp_[8622329] table[3288779]))
    (8622344 call deinit[4217590] _field_destructor_tmp_[8622336])
    label _end_startClass[3288488]
    (5588632 '=' _retArg[5588630] ret[3288413])
    (5588634 return _void[46])
  }
  function AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851].readField[3314808](const  ref arg this[3314812]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851], const  ref arg name[3314814]:string[244], ref arg error_out[5507929]:Error[85511], ref arg _retArg[5588891]:string[244]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479847]:string[244] "temp"
    const-val ret[3314820]:string[244] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3314830]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454617]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    (8454619 'move' call_tmp[8454617](8454621 '.' this[3314812] _fieldOffsets[3313836]))
    (3314832 'move' call_tmp[3314830] call_tmp[8454617])
    const-val call_tmp[3314838]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3314840 'move' call_tmp[3314838](3314846 call contains[3315108] call_tmp[3314830] name[3314814]))
    const-val call_tmp[3314848]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3314850 'move' call_tmp[3314848] call_tmp[3314838])
    if call_tmp[3314848]
    {
      const-ref call_tmp[3314857]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454701]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454703 'move' call_tmp[8454701](8454705 '.' this[3314812] reader[3313834]))
      (3314859 'move' call_tmp[3314857] call_tmp[8454701])
      const-val _return_tmp_[5468795]:int(64)[10] "dead after last mention" "temp"
      val error[5507932]:Error[85511] "error variable" "temp"
      (5507934 'move' error[5507932] nil[32])
      (5468797 'move' _return_tmp_[5468795](3314869 call mark[3288983] call_tmp[3314857] error[5507932]))
      val errorExists[7301808]:bool[19] "temp"
      (7301813 'move' errorExists[7301808](7301810 '!=' error[5507932] nil[32]))
      if errorExists[7301808]
      {
        (5507938 '=' error_out[5507929] error[5507932])
        gotoErrorHandlingReturn _end_readField[3315075] _end_readField[3315075]
      }
      const-ref call_tmp[3314871]:int(64)[10] "dead after last mention" "maybe param" "temp"
      const-ref _this_tmp_[3315259]:map(string,int(64),false)[3288794] "dead after last mention" "temp"
      ref call_tmp[8454627]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
      (8454629 'move' call_tmp[8454627](8454631 '.' this[3314812] _fieldOffsets[3313836]))
      (3315261 'move' _this_tmp_[3315259] call_tmp[8454627])
      val error[5507947]:Error[85511] "error variable" "temp"
      (5507949 'move' error[5507947] nil[32])
      (3314873 'move' call_tmp[3314871](3315566 call this[3315376] _this_tmp_[3315259] name[3314814] error[5507947]))
      val errorExists[7301816]:bool[19] "temp"
      (7301821 'move' errorExists[7301816](7301818 '!=' error[5507947] nil[32]))
      if errorExists[7301816]
      {
        (5507953 '=' error_out[5507929] error[5507947])
        gotoErrorHandlingReturn _end_readField[3315075] _end_readField[3315075]
      }
      const-ref call_tmp[3314881]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454711]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454713 'move' call_tmp[8454711](8454715 '.' this[3314812] reader[3313834]))
      (3314883 'move' call_tmp[3314881] call_tmp[8454711])
      const-val call_tmp[3314889]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3314891 'move' call_tmp[3314889](3314897 call offset[3289103] call_tmp[3314881]))
      const-val call_tmp[3314898]:int(64)[10] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[3335238]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3335242 'move' coerce_tmp[3335238](3335240 'deref' call_tmp[3314871]))
      const-val call_tmp[7378030]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378032 'move' call_tmp[7378030](7378034 '-' coerce_tmp[3335238] call_tmp[3314889]))
      (3314900 'move' call_tmp[3314898] call_tmp[7378030])
      const-val dist[3314906]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (3314908 'move' dist[3314906] call_tmp[3314898])
      const-ref call_tmp[3314912]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454721]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454723 'move' call_tmp[8454721](8454725 '.' this[3314812] reader[3313834]))
      (3314914 'move' call_tmp[3314912] call_tmp[8454721])
      val error[5507962]:Error[85511] "error variable" "temp"
      (5507964 'move' error[5507962] nil[32])
      (3314924 call advance[3335246] call_tmp[3314912] dist[3314906] error[5507962])
      val errorExists[7301824]:bool[19] "temp"
      (7301829 'move' errorExists[7301824](7301826 '!=' error[5507962] nil[32]))
      if errorExists[7301824]
      {
        (5507968 '=' error_out[5507929] error[5507962])
        gotoErrorHandlingReturn _end_readField[3315075] _end_readField[3315075]
      }
    }
    {
      const-val call_tmp[3314929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7402092]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7402094 'move' coerce_tmp[7402092](7402096 '.v' name[3314814] buffLen[21281]))
      const-val call_tmp[7402099]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7402101 'move' call_tmp[7402099](7402103 '==' coerce_tmp[7402092] 0))
      (3314931 'move' call_tmp[3314929] call_tmp[7402099])
      const-val call_tmp[3314938]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7351328]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7351330 'move' call_tmp[7351328](7351332 'u!' call_tmp[3314929]))
      (3314940 'move' call_tmp[3314938] call_tmp[7351328])
      const-val call_tmp[3314945]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3314947 'move' call_tmp[3314945] call_tmp[3314938])
      if call_tmp[3314945]
      {
        const-val call_tmp[3314954]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540232]:string[244] "temp"
        (3314959 call +[28065] "field '" name[3314814] ret_tmp[5540232])
        (5540235 'move' call_tmp[3314954] ret_tmp[5540232])
        const-val call_tmp[3314962]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540238]:string[244] "temp"
        (3314967 call +[28065] call_tmp[3314954] "' not found." ret_tmp[5540238])
        (5540241 'move' call_tmp[3314962] ret_tmp[5540238])
        const-val call_tmp[3314970]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[3335440]:IllegalArgumentError[85616] "dead after last mention" "temp"
        (3335442 'move' new_temp[3335440](3335427 call _new[1475209] call_tmp[3314962]))
        const-val initTemp[3335449]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
        (3335452 call init[1475364] initTemp[3335449] new_temp[3335440])
        (3314972 'move' call_tmp[3314970] initTemp[3335449])
        val call_tmp[3314977]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3335466]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[5547151]:owned Error[1498203] "temp"
        ref i_x[7645381]:owned IllegalArgumentError[1475882] "temp"
        (7645385 'move' i_x[7645381](7645383 'set reference' call_tmp[3314970]))
        ref i__retArg[7645387]:owned Error[1498203] "temp"
        (7645391 'move' i__retArg[7645387](7645389 'set reference' ret_tmp[5547151]))
        val _formal_tmp_x[7645394]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (7645396 'move' _formal_tmp_x[7645394] i_x[7645381])
        const-val ret[7645399]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[7645401]:owned IllegalArgumentError[1475882] "temp"
        (7645403 'move' i_this[7645401](7645405 'set reference' _formal_tmp_x[7645394]))
        val coerce_tmp[7645407]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645409 'move' coerce_tmp[7645407](7645411 '.v' i_this[7645401] chpl_p[1475877]))
        val call_tmp[7645414]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645416 'move' call_tmp[7645414](7645418 'cast' Error[85511] coerce_tmp[7645407]))
        val castPtr[7645421]:Error[85511] "dead at end of block" "insert auto destroy"
        (7645423 'move' castPtr[7645421] call_tmp[7645414])
        ref i_this[7645426]:owned IllegalArgumentError[1475882] "temp"
        (7645428 'move' i_this[7645426](7645430 'set reference' _formal_tmp_x[7645394]))
        val tmp[7645432]:IllegalArgumentError[85616] "temp"
        (7645434 'move' tmp[7645432](7645436 'cast' IllegalArgumentError[85616] nil[32]))
        (7645439 '.=' i_this[7645426] chpl_p[1475877] tmp[7645432])
        val coerce_tmp[7645443]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645445 'move' coerce_tmp[7645443](7645447 'cast' RootClass[236] call_tmp[7645414]))
        const-val call_tmp[7645450]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645452 'move' call_tmp[7645450](7645454 '==' coerce_tmp[7645443] nil[32]))
        if call_tmp[7645450]
        {
          (7645460 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7645463]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[7645465]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (7645468 call init[1499358] initTemp[7645465] castPtr[7645421])
        (7645471 'move' call_tmp[7645463] initTemp[7645465])
        (7645474 'move' ret[7645399] call_tmp[7645463])
        (7645478 call chpl__autoDestroy[3929468] _formal_tmp_x[7645394])
        (7645482 '=' i__retArg[7645387] ret[7645399])
        (5547154 'move' coerce_tmp[3335466] ret_tmp[5547151])
        const-val _formal_tmp_in_err[3335685]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (3335690 'move' _formal_tmp_in_err[3335685] coerce_tmp[3335466])
        (3314979 'move' call_tmp[3314977](3314982 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3335685]))
        val castedError[5507977]:Error[85511] "temp"
        (5507983 'move' castedError[5507977] call_tmp[3314977])
        (5507985 '=' error_out[5507929] castedError[5507977])
        ref i_x[7342186]:string[244] "temp"
        (7342190 'move' i_x[7342186](7342188 'set reference' call_tmp[3314962]))
        (7342194 call deinit[21354] i_x[7342186])
        ref i_x[7342198]:string[244] "temp"
        (7342202 'move' i_x[7342198](7342200 'set reference' call_tmp[3314954]))
        (7342206 call deinit[21354] i_x[7342198])
        gotoErrorHandlingReturn _end_readField[3315075] _end_readField[3315075]
        ref i_x[7342210]:string[244] "temp"
        (7342214 'move' i_x[7342210](7342212 'set reference' call_tmp[3314962]))
        (7342218 call deinit[21354] i_x[7342210])
        ref i_x[7342222]:string[244] "temp"
        (7342226 'move' i_x[7342222](7342224 'set reference' call_tmp[3314954]))
        (7342230 call deinit[21354] i_x[7342222])
      }
    }
    const-ref call_tmp[3314988]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454731]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454733 'move' call_tmp[8454731](8454735 '.' this[3314812] reader[3313834]))
    (3314990 'move' call_tmp[3314988] call_tmp[8454731])
    const-val call_tmp[3314996]:string[244] "dead at end of block" "maybe param" "temp"
    val error[5507990]:Error[85511] "error variable" "temp"
    (5507992 'move' error[5507990] nil[32])
    const-val ret_tmp[5588654]:string[244] "temp"
    (3315004 call read[3290733] call_tmp[3314988] error[5507990] ret_tmp[5588654])
    (5588657 'move' call_tmp[3314996] ret_tmp[5588654])
    val errorExists[7301832]:bool[19] "temp"
    (7301837 'move' errorExists[7301832](7301834 '!=' error[5507990] nil[32]))
    if errorExists[7301832]
    {
      (5507996 '=' error_out[5507929] error[5507990])
      gotoErrorHandlingReturn _end_readField[3315075] _end_readField[3315075]
    }
    const-val ret[3315006]:string[244] "dead at end of block" "insert auto destroy"
    (3315008 'move' ret[3315006] call_tmp[3314996])
    const-ref call_tmp[3315012]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454741]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454743 'move' call_tmp[8454741](8454745 '.' this[3314812] reader[3313834]))
    (3315014 'move' call_tmp[3315012] call_tmp[8454741])
    val default_arg_ignoreWhitespace[3335703]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[5468799]:bool[19] "dead after last mention" "temp"
    val error[5508005]:Error[85511] "error variable" "temp"
    (5508007 'move' error[5508005] nil[32])
    val inlineImm[8448934]:string[244] "temp"
    (8448937 'move' inlineImm[8448934] ",")
    ref i_literal[8448939]:string[244] "temp"
    (8448943 'move' i_literal[8448939](8448941 'set reference' inlineImm[8448934]))
    val inlineImm[8448945]:bool[19] "temp"
    (8448948 'move' inlineImm[8448945] 1)
    ref i_error_out[8448950]:Error[85511] "temp"
    (8448954 'move' i_error_out[8448950](8448952 'set reference' error[5508005]))
    val ret[8448957]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[8448959]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[8448961]:Error[85511] "error variable" "temp"
    (8448963 'move' error[8448961] nil[32])
    val ret[8448966]:bool[19] "dead after last mention" "RVV" "temp"
    val error[8448968]:Error[85511] "error variable" "temp"
    (8448970 'move' error[8448968] nil[32])
    ref call_tmp[8448973]:locale[234] "dead after last mention" "maybe param" "temp"
    (8448975 'move' call_tmp[8448973](8448977 '.' call_tmp[3315012] _home[3276771]))
    val coerce_tmp[8448980]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8448982 'move' coerce_tmp[8448980](8448984 '.v' call_tmp[8448973] _instance[135293]))
    val coerce_tmp[8448987]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8448989 'move' coerce_tmp[8448987](8448991 'cast' RootClass[236] coerce_tmp[8448980]))
    const-val call_tmp[8448994]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8448996 'move' call_tmp[8448994](8448998 '==' coerce_tmp[8448987] nil[32]))
    if call_tmp[8448994]
    {
      (8449004 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8449007]:Error[85511] "error variable" "temp"
    (8449009 'move' error[8449007] nil[32])
    const-val err[8449012]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8449014]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449016 'move' call_tmp[8449014](8449018 'cast' int(32)[66] 0))
    const-val call_tmp[8449021]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449023 'move' call_tmp[8449021](8449026 call qio_int_to_err[12856] call_tmp[8449014]))
    (8449028 'move' err[8449012] call_tmp[8449021])
    val coerce_tmp[8449031]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449033 'move' coerce_tmp[8449031](8449035 '.v' call_tmp[3315012] _channel_internal[3276776]))
    const-val call_tmp[8449038]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449040 'move' call_tmp[8449038](8449042 'ptr_eq' coerce_tmp[8449031] nil[32]))
    if call_tmp[8449038]
    {
      const-val call_tmp[8449047]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8449049]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8449051 'move' coerce_tmp[8449049](8449053 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8449056]:owned SystemError[1554765] "temp"
      (8449059 call createSystemError[14072] coerce_tmp[8449049] "Operation attempted on an invalid fileReader" ret_tmp[8449056])
      (8449063 'move' call_tmp[8449047] ret_tmp[8449056])
      val call_tmp[8449066]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8449068]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8449070]:owned Error[1498203] "temp"
      ref i_x[8449072]:owned SystemError[1554765] "temp"
      (8449074 'move' i_x[8449072](8449076 'set reference' call_tmp[8449047]))
      ref i__retArg[8449078]:owned Error[1498203] "temp"
      (8449080 'move' i__retArg[8449078](8449082 'set reference' ret_tmp[8449070]))
      val _formal_tmp_x[8449084]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8449086 'move' _formal_tmp_x[8449084] i_x[8449072])
      const-val ret[8449089]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8449091]:owned SystemError[1554765] "temp"
      (8449093 'move' i_this[8449091](8449095 'set reference' _formal_tmp_x[8449084]))
      val coerce_tmp[8449097]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8449099 'move' coerce_tmp[8449097](8449101 '.v' i_this[8449091] chpl_p[1554760]))
      val call_tmp[8449104]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8449106 'move' call_tmp[8449104](8449108 'cast' Error[85511] coerce_tmp[8449097]))
      val castPtr[8449111]:Error[85511] "dead at end of block" "insert auto destroy"
      (8449113 'move' castPtr[8449111] call_tmp[8449104])
      ref i_this[8449116]:owned SystemError[1554765] "temp"
      (8449118 'move' i_this[8449116](8449120 'set reference' _formal_tmp_x[8449084]))
      val tmp[8449122]:SystemError[13599] "temp"
      (8449124 'move' tmp[8449122](8449126 'cast' SystemError[13599] nil[32]))
      (8449129 '.=' i_this[8449116] chpl_p[1554760] tmp[8449122])
      val coerce_tmp[8449133]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8449135 'move' coerce_tmp[8449133](8449137 'cast' RootClass[236] call_tmp[8449104]))
      const-val call_tmp[8449140]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8449142 'move' call_tmp[8449140](8449144 '==' coerce_tmp[8449133] nil[32]))
      if call_tmp[8449140]
      {
        (8449150 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8449153]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8449155]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8449158 call init[1499358] initTemp[8449155] castPtr[8449111])
      (8449161 'move' call_tmp[8449153] initTemp[8449155])
      (8449164 'move' ret[8449089] call_tmp[8449153])
      (8449168 call chpl__autoDestroy[3968549] _formal_tmp_x[8449084])
      (8449170 '=' i__retArg[8449078] ret[8449089])
      (8449173 'move' coerce_tmp[8449068] ret_tmp[8449070])
      const-val _formal_tmp_in_err[8449176]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8449178 'move' _formal_tmp_in_err[8449176] coerce_tmp[8449068])
      (8449181 'move' call_tmp[8449066](8449184 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8449176]))
      (8449186 '=' error[8449007] call_tmp[8449066])
      gotoErrorHandlingReturn _endlock[8449249] _endlock[8449249]
    }
    const-val call_tmp[8449192]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449194 'move' call_tmp[8449192](8449197 call qio_err_iserr[12868] err[8449012]))
    const-val call_tmp[8449199]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449201 'move' call_tmp[8449199](8449203 '!=' call_tmp[8449192] 0))
    if call_tmp[8449199]
    {
      val error[8449208]:Error[85511] "error variable" "temp"
      (8449210 'move' error[8449208] nil[32])
      (8449214 call _ch_ioerror[3285336] call_tmp[3315012] err[8449012] "in lock" error[8449208])
      val errorExists[8449219]:bool[19] "temp"
      (8449221 'move' errorExists[8449219](8449223 '!=' error[8449208] nil[32]))
      if errorExists[8449219]
      {
        gotoErrorHandling handler[8449231] handler[8449231]
      }
      label handler[8449231]
      val errorExists[8449233]:bool[19] "temp"
      (8449235 'move' errorExists[8449233](8449237 '!=' error[8449208] nil[32]))
      if errorExists[8449233]
      {
        (8449242 '=' error[8449007] error[8449208])
        gotoErrorHandlingReturn _endlock[8449249] _endlock[8449249]
      }
    }
    label _endlock[8449249]
    val errorExists[8449251]:bool[19] "temp"
    (8449253 'move' errorExists[8449251](8449255 '!=' error[8449007] nil[32]))
    if errorExists[8449251]
    {
      gotoErrorHandling handler[8449263] handler[8449263]
    }
    label handler[8449263]
    val errorExists[8449265]:bool[19] "temp"
    (8449267 'move' errorExists[8449265](8449269 '!=' error[8449007] nil[32]))
    if errorExists[8449265]
    {
      (8449275 call chpl_uncaught_error[87456] error[8449007])
    }
    const-val call_tmp[8449278]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8449280]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8449282]:string[244] "dead at end of block" "insert auto destroy"
    (8449285 call init[21321] ret[8449282])
    const-val coerce_tmp[8449287]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449289 'move' coerce_tmp[8449287](8449291 '.v' i_literal[8448939] cachedNumCodepoints[21293]))
    (8449294 '.=' ret[8449282] cachedNumCodepoints[21293] coerce_tmp[8449287])
    (8449299 call initWithBorrowedBuffer[1470549] ret[8449282] i_literal[8448939])
    (8449302 '=' ret[8449280] ret[8449282])
    (8449305 'move' call_tmp[8449278] ret[8449280])
    val coerce_tmp[8449308]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8449310 'move' coerce_tmp[8449308](8449312 '.v' call_tmp[8449278] buff[21299]))
    (8449315 'noop')
    val call_tmp[8449316]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8449318 'move' call_tmp[8449316](8449320 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8449308]))
    val ret[8449323]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8449325 '=' ret[8449323](8449327 '.v' i_literal[8448939] buffLen[21281]))
    const-val call_tmp[8449330]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8449332]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449334 'move' coerce_tmp[8449332](8449336 'cast' int(32)[66] 0))
    val coerce_tmp[8449339]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449341 'move' coerce_tmp[8449339](8449343 '.v' call_tmp[3315012] _channel_internal[3276776]))
    const-val coerce_tmp[8449346]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449348 'move' coerce_tmp[8449346](8449350 'cast' int(32)[66] inlineImm[8448945]))
    (8449353 'move' call_tmp[8449330](8449356 call qio_channel_scan_literal[167758] coerce_tmp[8449332] coerce_tmp[8449339] call_tmp[8449316] ret[8449323] coerce_tmp[8449346]))
    const-val err[8449362]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8449364 'move' err[8449362] call_tmp[8449330])
    const-val action[8449367]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8449369 'move' action[8449367] "matching")
    val error[8449372]:Error[85511] "error variable" "temp"
    (8449374 'move' error[8449372] nil[32])
    ref i_action[8449377]:string[244] "temp"
    (8449379 'move' i_action[8449377](8449381 'set reference' action[8449367]))
    val inlineImm[8449383]:bool[19] "temp"
    (8449385 'move' inlineImm[8449383] 1)
    const-val call_tmp[8449388]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449390 'move' call_tmp[8449388](8449393 call qio_err_to_int[12844] call_tmp[8449330]))
    const-val call_tmp[8449395]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449397 'move' call_tmp[8449395](8449399 'cast' int(32)[66] 0))
    const-val call_tmp[8449402]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449404 'move' call_tmp[8449402](8449406 '==' call_tmp[8449388] call_tmp[8449395]))
    const-val call_tmp[8449409]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449411 'move' call_tmp[8449409](8449413 'u!' call_tmp[8449402]))
    if call_tmp[8449409]
    {
      const-val call_tmp[8449417]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8449419]:string[244] "temp"
      (8449422 call literalErrorHelper[3112834] i_literal[8448939] i_action[8449377] inlineImm[8449383] ret_tmp[8449419])
      (8449427 'move' call_tmp[8449417] ret_tmp[8449419])
      val msg[8449430]:string[244] "dead at end of block" "insert auto destroy"
      (8449432 'move' msg[8449430] call_tmp[8449417])
      const-val call_tmp[8449435]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8449437 'move' call_tmp[8449435](8449440 call qio_err_to_int[12844] err[8449362]))
      const-val call_tmp[8449442]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8449444 'move' call_tmp[8449442](8449446 '==' call_tmp[8449435] EILSEQ[11191]))
      if call_tmp[8449442]
      {
        const-val call_tmp[8449451]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8449453]:string[244] "temp"
        (8449456 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8449453])
        (8449458 'move' call_tmp[8449451] ret_tmp[8449453])
        const-val call_tmp[8449461]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8449463]:string[244] "temp"
        (8449466 call +[28065] call_tmp[8449451] "Error: " ret_tmp[8449463])
        (8449470 'move' call_tmp[8449461] ret_tmp[8449463])
        const-val call_tmp[8449473]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8449475]:string[244] "temp"
        (8449478 call +[28065] call_tmp[8449461] msg[8449430] ret_tmp[8449475])
        (8449482 'move' call_tmp[8449473] ret_tmp[8449475])
        (8449486 call =[28046] msg[8449430] call_tmp[8449473])
        ref i_x[8449489]:string[244] "temp"
        (8449491 'move' i_x[8449489](8449493 'set reference' call_tmp[8449473]))
        (8449496 call deinit[21354] i_x[8449489])
        ref i_x[8449498]:string[244] "temp"
        (8449500 'move' i_x[8449498](8449502 'set reference' call_tmp[8449461]))
        (8449505 call deinit[21354] i_x[8449498])
        ref i_x[8449507]:string[244] "temp"
        (8449509 'move' i_x[8449507](8449511 'set reference' call_tmp[8449451]))
        (8449514 call deinit[21354] i_x[8449507])
      }
      val error[8449517]:Error[85511] "error variable" "temp"
      (8449519 'move' error[8449517] nil[32])
      (8449523 call _ch_ioerror[3285336] call_tmp[3315012] err[8449362] msg[8449430] error[8449517])
      val errorExists[8449528]:bool[19] "temp"
      (8449530 'move' errorExists[8449528](8449532 '!=' error[8449517] nil[32]))
      if errorExists[8449528]
      {
        gotoErrorHandling handler[8449540] handler[8449540]
      }
      label handler[8449540]
      val errorExists[8449542]:bool[19] "temp"
      (8449544 'move' errorExists[8449542](8449546 '!=' error[8449517] nil[32]))
      if errorExists[8449542]
      {
        (8449551 '=' error[8449372] error[8449517])
        ref i_x[8449554]:string[244] "temp"
        (8449556 'move' i_x[8449554](8449558 'set reference' msg[8449430]))
        (8449561 call deinit[21354] i_x[8449554])
        gotoErrorHandlingReturn _end_checkLiteralError[8449576] _end_checkLiteralError[8449576]
      }
      ref i_x[8449566]:string[244] "temp"
      (8449568 'move' i_x[8449566](8449570 'set reference' msg[8449430]))
      (8449573 call deinit[21354] i_x[8449566])
    }
    label _end_checkLiteralError[8449576]
    val errorExists[8449578]:bool[19] "temp"
    (8449580 'move' errorExists[8449578](8449582 '!=' error[8449372] nil[32]))
    if errorExists[8449578]
    {
      gotoErrorHandling handler[8449590] handler[8449590]
    }
    label handler[8449590]
    val errorExists[8449592]:bool[19] "temp"
    (8449594 'move' errorExists[8449592](8449596 '!=' error[8449372] nil[32]))
    if errorExists[8449592]
    {
      (8449601 '=' error[8448968] error[8449372])
      ref i_x[8449604]:string[244] "temp"
      (8449606 'move' i_x[8449604](8449608 'set reference' action[8449367]))
      (8449611 call deinit[21354] i_x[8449604])
      ref i_x[8449613]:string[244] "temp"
      (8449615 'move' i_x[8449613](8449617 'set reference' call_tmp[8449278]))
      (8449620 call deinit[21354] i_x[8449613])
      gotoErrorHandlingReturn _end_readLiteralCommon[8449643] _end_readLiteralCommon[8449643]
    }
    ref i_x[8449625]:string[244] "temp"
    (8449627 'move' i_x[8449625](8449629 'set reference' action[8449367]))
    (8449632 call deinit[21354] i_x[8449625])
    ref i_x[8449634]:string[244] "temp"
    (8449636 'move' i_x[8449634](8449638 'set reference' call_tmp[8449278]))
    (8449641 call deinit[21354] i_x[8449634])
    label _end_readLiteralCommon[8449643]
    val errorExists[8449645]:bool[19] "temp"
    (8449647 'move' errorExists[8449645](8449649 '!=' error[8448968] nil[32]))
    if errorExists[8449645]
    {
      gotoErrorHandling handler[8449657] handler[8449657]
    }
    label handler[8449657]
    val errorExists[8449659]:bool[19] "temp"
    (8449661 'move' errorExists[8449659](8449663 '!=' error[8448968] nil[32]))
    if errorExists[8449659]
    {
      val call_tmp[8449668]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
      (8449670 'move' call_tmp[8449668](8449672 'dynamic_cast' BadFormatError[15094] error[8448968]))
      val tmp[8449675]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
      (8449677 'move' tmp[8449675] call_tmp[8449668])
      const-val call_tmp[8449680]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8449682 'move' call_tmp[8449680](8449684 '!=' call_tmp[8449668] nil[32]))
      if call_tmp[8449680]
      {
        const-val call_tmp[8449689]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[8449691]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
        (8449694 call init[1543824] initTemp[8449691] tmp[8449675])
        (8449697 'move' call_tmp[8449689] initTemp[8449691])
        const-val e[8449700]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
        (8449702 'move' e[8449700] call_tmp[8449689])
        (8449705 'move' ret[8448966] 0)
        (8449709 call chpl__autoDestroy[3940454] e[8449700])
        gotoReturn _end__matchLiteralCommon[8449777] _end__matchLiteralCommon[8449777]
        (8449714 call chpl__autoDestroy[3940454] e[8449700])
      }
      {
        val call_tmp[8449717]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (8449719 'move' call_tmp[8449717](8449721 'dynamic_cast' EofError[14808] error[8448968]))
        val tmp[8449724]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
        (8449726 'move' tmp[8449724] call_tmp[8449717])
        const-val call_tmp[8449729]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8449731 'move' call_tmp[8449729](8449733 '!=' call_tmp[8449717] nil[32]))
        if call_tmp[8449729]
        {
          const-val call_tmp[8449738]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8449740]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (8449743 call init[1542524] initTemp[8449740] tmp[8449724])
          (8449746 'move' call_tmp[8449738] initTemp[8449740])
          const-val e[8449749]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8449751 'move' e[8449749] call_tmp[8449738])
          (8449754 'move' ret[8448966] 0)
          (8449758 call chpl__autoDestroy[3937692] e[8449749])
          gotoReturn _end__matchLiteralCommon[8449777] _end__matchLiteralCommon[8449777]
          (8449763 call chpl__autoDestroy[3937692] e[8449749])
        }
        {
          (8449766 '=' error[8448961] error[8448968])
          gotoErrorHandlingReturn _end__matchLiteralCommon[8449777] _end__matchLiteralCommon[8449777]
        }
      }
    }
    (8449774 'move' ret[8448966] 1)
    label _end__matchLiteralCommon[8449777]
    (8449779 'move' call_tmp[8448959] ret[8448966])
    val errorExists[8449782]:bool[19] "temp"
    (8449784 'move' errorExists[8449782](8449786 '!=' error[8448961] nil[32]))
    if errorExists[8449782]
    {
      (8449791 '=' i_error_out[8448950] error[8448961])
      gotoErrorHandlingReturn _endmatchLiteral[8449800] _endmatchLiteral[8449800]
    }
    (8449797 '=' ret[8448957] call_tmp[8448959])
    label _endmatchLiteral[8449800]
    (5468801 'move' _return_tmp_[5468799] ret[8448957])
    val errorExists[7301840]:bool[19] "temp"
    (7301845 'move' errorExists[7301840](7301842 '!=' error[5508005] nil[32]))
    if errorExists[7301840]
    {
      (5508011 '=' error_out[5507929] error[5508005])
      ref i_x[7342234]:string[244] "temp"
      (7342238 'move' i_x[7342234](7342236 'set reference' ret[3315006]))
      (7342242 call deinit[21354] i_x[7342234])
      gotoErrorHandlingReturn _end_readField[3315075] _end_readField[3315075]
    }
    const-val call_tmp[3315027]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[7402109]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7402111 'move' coerce_tmp[7402109](7402113 '.v' name[3314814] buffLen[21281]))
    const-val call_tmp[7402116]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7402118 'move' call_tmp[7402116](7402120 '==' coerce_tmp[7402109] 0))
    (3315029 'move' call_tmp[3315027] call_tmp[7402116])
    const-val call_tmp[3315036]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351337]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351339 'move' call_tmp[7351337](7351341 'u!' call_tmp[3315027]))
    (3315038 'move' call_tmp[3315036] call_tmp[7351337])
    const-val call_tmp[3315043]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3315045 'move' call_tmp[3315043] call_tmp[3315036])
    if call_tmp[3315043]
    {
      const-ref call_tmp[3315052]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454751]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454753 'move' call_tmp[8454751](8454755 '.' this[3314812] reader[3313834]))
      (3315054 'move' call_tmp[3315052] call_tmp[8454751])
      val coerce_tmp[8454009]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454011 'move' coerce_tmp[8454009](8454013 '.v' call_tmp[3315052] _channel_internal[3276776]))
      (8454017 call qio_channel_revert_unlocked[166360] coerce_tmp[8454009])
    }
    (3335719 '=' ret[3314820] ret[3315006])
    label _end_readField[3315075]
    (5588893 '=' _retArg[5588891] ret[3314820])
    (5588895 return _void[46])
  }
  function AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851].readField[3335734](const  ref arg this[3335738]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851], const  ref arg name[3335740]:string[244], ref arg error_out[5509396]:Error[85511], ref arg _retArg[5589188]:map(string,string,false)[3283386]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479871]:map(string,string,false)[3283386] "temp"
    const-val ret[3335746]:map(string,string,false)[3283386] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3335756]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454637]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    (8454639 'move' call_tmp[8454637](8454641 '.' this[3335738] _fieldOffsets[3313836]))
    (3335758 'move' call_tmp[3335756] call_tmp[8454637])
    const-val call_tmp[3335764]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3335766 'move' call_tmp[3335764](3335772 call contains[3315108] call_tmp[3335756] name[3335740]))
    const-val call_tmp[3335774]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3335776 'move' call_tmp[3335774] call_tmp[3335764])
    if call_tmp[3335774]
    {
      const-ref call_tmp[3335783]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454761]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454763 'move' call_tmp[8454761](8454765 '.' this[3335738] reader[3313834]))
      (3335785 'move' call_tmp[3335783] call_tmp[8454761])
      const-val _return_tmp_[5468811]:int(64)[10] "dead after last mention" "temp"
      val error[5509399]:Error[85511] "error variable" "temp"
      (5509401 'move' error[5509399] nil[32])
      (5468813 'move' _return_tmp_[5468811](3335795 call mark[3288983] call_tmp[3335783] error[5509399]))
      val errorExists[7302480]:bool[19] "temp"
      (7302485 'move' errorExists[7302480](7302482 '!=' error[5509399] nil[32]))
      if errorExists[7302480]
      {
        (5509405 '=' error_out[5509396] error[5509399])
        gotoErrorHandlingReturn _end_readField[3336001] _end_readField[3336001]
      }
      const-ref call_tmp[3335797]:int(64)[10] "dead after last mention" "maybe param" "temp"
      const-ref _this_tmp_[3336011]:map(string,int(64),false)[3288794] "dead after last mention" "temp"
      ref call_tmp[8454647]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
      (8454649 'move' call_tmp[8454647](8454651 '.' this[3335738] _fieldOffsets[3313836]))
      (3336013 'move' _this_tmp_[3336011] call_tmp[8454647])
      val error[5509414]:Error[85511] "error variable" "temp"
      (5509416 'move' error[5509414] nil[32])
      (3335799 'move' call_tmp[3335797](3336019 call this[3315376] _this_tmp_[3336011] name[3335740] error[5509414]))
      val errorExists[7302488]:bool[19] "temp"
      (7302493 'move' errorExists[7302488](7302490 '!=' error[5509414] nil[32]))
      if errorExists[7302488]
      {
        (5509420 '=' error_out[5509396] error[5509414])
        gotoErrorHandlingReturn _end_readField[3336001] _end_readField[3336001]
      }
      const-ref call_tmp[3335807]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454771]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454773 'move' call_tmp[8454771](8454775 '.' this[3335738] reader[3313834]))
      (3335809 'move' call_tmp[3335807] call_tmp[8454771])
      const-val call_tmp[3335815]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3335817 'move' call_tmp[3335815](3335823 call offset[3289103] call_tmp[3335807]))
      const-val call_tmp[3335824]:int(64)[10] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[3336028]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3336032 'move' coerce_tmp[3336028](3336030 'deref' call_tmp[3335797]))
      const-val call_tmp[7378040]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378042 'move' call_tmp[7378040](7378044 '-' coerce_tmp[3336028] call_tmp[3335815]))
      (3335826 'move' call_tmp[3335824] call_tmp[7378040])
      const-val dist[3335832]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (3335834 'move' dist[3335832] call_tmp[3335824])
      const-ref call_tmp[3335838]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454781]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454783 'move' call_tmp[8454781](8454785 '.' this[3335738] reader[3313834]))
      (3335840 'move' call_tmp[3335838] call_tmp[8454781])
      val error[5509429]:Error[85511] "error variable" "temp"
      (5509431 'move' error[5509429] nil[32])
      (3335850 call advance[3335246] call_tmp[3335838] dist[3335832] error[5509429])
      val errorExists[7302496]:bool[19] "temp"
      (7302501 'move' errorExists[7302496](7302498 '!=' error[5509429] nil[32]))
      if errorExists[7302496]
      {
        (5509435 '=' error_out[5509396] error[5509429])
        gotoErrorHandlingReturn _end_readField[3336001] _end_readField[3336001]
      }
    }
    {
      const-val call_tmp[3335855]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7402126]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7402128 'move' coerce_tmp[7402126](7402130 '.v' name[3335740] buffLen[21281]))
      const-val call_tmp[7402133]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7402135 'move' call_tmp[7402133](7402137 '==' coerce_tmp[7402126] 0))
      (3335857 'move' call_tmp[3335855] call_tmp[7402133])
      const-val call_tmp[3335864]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7351346]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7351348 'move' call_tmp[7351346](7351350 'u!' call_tmp[3335855]))
      (3335866 'move' call_tmp[3335864] call_tmp[7351346])
      const-val call_tmp[3335871]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3335873 'move' call_tmp[3335871] call_tmp[3335864])
      if call_tmp[3335871]
      {
        const-val call_tmp[3335880]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540310]:string[244] "temp"
        (3335885 call +[28065] "field '" name[3335740] ret_tmp[5540310])
        (5540313 'move' call_tmp[3335880] ret_tmp[5540310])
        const-val call_tmp[3335888]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540316]:string[244] "temp"
        (3335893 call +[28065] call_tmp[3335880] "' not found." ret_tmp[5540316])
        (5540319 'move' call_tmp[3335888] ret_tmp[5540316])
        const-val call_tmp[3335896]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[3336070]:IllegalArgumentError[85616] "dead after last mention" "temp"
        (3336072 'move' new_temp[3336070](3336057 call _new[1475209] call_tmp[3335888]))
        const-val initTemp[3336079]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
        (3336082 call init[1475364] initTemp[3336079] new_temp[3336070])
        (3335898 'move' call_tmp[3335896] initTemp[3336079])
        val call_tmp[3335903]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3336096]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[5547157]:owned Error[1498203] "temp"
        ref i_x[7645487]:owned IllegalArgumentError[1475882] "temp"
        (7645491 'move' i_x[7645487](7645489 'set reference' call_tmp[3335896]))
        ref i__retArg[7645493]:owned Error[1498203] "temp"
        (7645497 'move' i__retArg[7645493](7645495 'set reference' ret_tmp[5547157]))
        val _formal_tmp_x[7645500]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (7645502 'move' _formal_tmp_x[7645500] i_x[7645487])
        const-val ret[7645505]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[7645507]:owned IllegalArgumentError[1475882] "temp"
        (7645509 'move' i_this[7645507](7645511 'set reference' _formal_tmp_x[7645500]))
        val coerce_tmp[7645513]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645515 'move' coerce_tmp[7645513](7645517 '.v' i_this[7645507] chpl_p[1475877]))
        val call_tmp[7645520]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645522 'move' call_tmp[7645520](7645524 'cast' Error[85511] coerce_tmp[7645513]))
        val castPtr[7645527]:Error[85511] "dead at end of block" "insert auto destroy"
        (7645529 'move' castPtr[7645527] call_tmp[7645520])
        ref i_this[7645532]:owned IllegalArgumentError[1475882] "temp"
        (7645534 'move' i_this[7645532](7645536 'set reference' _formal_tmp_x[7645500]))
        val tmp[7645538]:IllegalArgumentError[85616] "temp"
        (7645540 'move' tmp[7645538](7645542 'cast' IllegalArgumentError[85616] nil[32]))
        (7645545 '.=' i_this[7645532] chpl_p[1475877] tmp[7645538])
        val coerce_tmp[7645549]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645551 'move' coerce_tmp[7645549](7645553 'cast' RootClass[236] call_tmp[7645520]))
        const-val call_tmp[7645556]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645558 'move' call_tmp[7645556](7645560 '==' coerce_tmp[7645549] nil[32]))
        if call_tmp[7645556]
        {
          (7645566 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7645569]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[7645571]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (7645574 call init[1499358] initTemp[7645571] castPtr[7645527])
        (7645577 'move' call_tmp[7645569] initTemp[7645571])
        (7645580 'move' ret[7645505] call_tmp[7645569])
        (7645584 call chpl__autoDestroy[3929468] _formal_tmp_x[7645500])
        (7645588 '=' i__retArg[7645493] ret[7645505])
        (5547160 'move' coerce_tmp[3336096] ret_tmp[5547157])
        const-val _formal_tmp_in_err[3336315]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (3336320 'move' _formal_tmp_in_err[3336315] coerce_tmp[3336096])
        (3335905 'move' call_tmp[3335903](3335908 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3336315]))
        val castedError[5509444]:Error[85511] "temp"
        (5509450 'move' castedError[5509444] call_tmp[3335903])
        (5509452 '=' error_out[5509396] castedError[5509444])
        ref i_x[7342678]:string[244] "temp"
        (7342682 'move' i_x[7342678](7342680 'set reference' call_tmp[3335888]))
        (7342686 call deinit[21354] i_x[7342678])
        ref i_x[7342690]:string[244] "temp"
        (7342694 'move' i_x[7342690](7342692 'set reference' call_tmp[3335880]))
        (7342698 call deinit[21354] i_x[7342690])
        gotoErrorHandlingReturn _end_readField[3336001] _end_readField[3336001]
        ref i_x[7342702]:string[244] "temp"
        (7342706 'move' i_x[7342702](7342704 'set reference' call_tmp[3335888]))
        (7342710 call deinit[21354] i_x[7342702])
        ref i_x[7342714]:string[244] "temp"
        (7342718 'move' i_x[7342714](7342716 'set reference' call_tmp[3335880]))
        (7342722 call deinit[21354] i_x[7342714])
      }
    }
    const-ref call_tmp[3335914]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454791]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454793 'move' call_tmp[8454791](8454795 '.' this[3335738] reader[3313834]))
    (3335916 'move' call_tmp[3335914] call_tmp[8454791])
    const-val call_tmp[3335922]:map(string,string,false)[3283386] "dead at end of block" "maybe param" "temp"
    val error[5509457]:Error[85511] "error variable" "temp"
    (5509459 'move' error[5509457] nil[32])
    const-val ret_tmp[5589194]:map(string,string,false)[3283386] "temp"
    (3335930 call read[3336326] call_tmp[3335914] error[5509457] ret_tmp[5589194])
    (5589197 'move' call_tmp[3335922] ret_tmp[5589194])
    val errorExists[7302504]:bool[19] "temp"
    (7302509 'move' errorExists[7302504](7302506 '!=' error[5509457] nil[32]))
    if errorExists[7302504]
    {
      (5509463 '=' error_out[5509396] error[5509457])
      gotoErrorHandlingReturn _end_readField[3336001] _end_readField[3336001]
    }
    const-val ret[3335932]:map(string,string,false)[3283386] "dead at end of block" "insert auto destroy"
    (3335934 'move' ret[3335932] call_tmp[3335922])
    const-ref call_tmp[3335938]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454801]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454803 'move' call_tmp[8454801](8454805 '.' this[3335738] reader[3313834]))
    (3335940 'move' call_tmp[3335938] call_tmp[8454801])
    val default_arg_ignoreWhitespace[3350745]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[5468815]:bool[19] "dead after last mention" "temp"
    val error[5509472]:Error[85511] "error variable" "temp"
    (5509474 'move' error[5509472] nil[32])
    val inlineImm[8449804]:string[244] "temp"
    (8449807 'move' inlineImm[8449804] ",")
    ref i_literal[8449809]:string[244] "temp"
    (8449813 'move' i_literal[8449809](8449811 'set reference' inlineImm[8449804]))
    val inlineImm[8449815]:bool[19] "temp"
    (8449818 'move' inlineImm[8449815] 1)
    ref i_error_out[8449820]:Error[85511] "temp"
    (8449824 'move' i_error_out[8449820](8449822 'set reference' error[5509472]))
    val ret[8449827]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[8449829]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[8449831]:Error[85511] "error variable" "temp"
    (8449833 'move' error[8449831] nil[32])
    val ret[8449836]:bool[19] "dead after last mention" "RVV" "temp"
    val error[8449838]:Error[85511] "error variable" "temp"
    (8449840 'move' error[8449838] nil[32])
    ref call_tmp[8449843]:locale[234] "dead after last mention" "maybe param" "temp"
    (8449845 'move' call_tmp[8449843](8449847 '.' call_tmp[3335938] _home[3276771]))
    val coerce_tmp[8449850]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449852 'move' coerce_tmp[8449850](8449854 '.v' call_tmp[8449843] _instance[135293]))
    val coerce_tmp[8449857]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449859 'move' coerce_tmp[8449857](8449861 'cast' RootClass[236] coerce_tmp[8449850]))
    const-val call_tmp[8449864]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449866 'move' call_tmp[8449864](8449868 '==' coerce_tmp[8449857] nil[32]))
    if call_tmp[8449864]
    {
      (8449874 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8449877]:Error[85511] "error variable" "temp"
    (8449879 'move' error[8449877] nil[32])
    const-val err[8449882]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8449884]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449886 'move' call_tmp[8449884](8449888 'cast' int(32)[66] 0))
    const-val call_tmp[8449891]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449893 'move' call_tmp[8449891](8449896 call qio_int_to_err[12856] call_tmp[8449884]))
    (8449898 'move' err[8449882] call_tmp[8449891])
    val coerce_tmp[8449901]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8449903 'move' coerce_tmp[8449901](8449905 '.v' call_tmp[3335938] _channel_internal[3276776]))
    const-val call_tmp[8449908]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8449910 'move' call_tmp[8449908](8449912 'ptr_eq' coerce_tmp[8449901] nil[32]))
    if call_tmp[8449908]
    {
      const-val call_tmp[8449917]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8449919]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8449921 'move' coerce_tmp[8449919](8449923 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8449926]:owned SystemError[1554765] "temp"
      (8449929 call createSystemError[14072] coerce_tmp[8449919] "Operation attempted on an invalid fileReader" ret_tmp[8449926])
      (8449933 'move' call_tmp[8449917] ret_tmp[8449926])
      val call_tmp[8449936]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8449938]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8449940]:owned Error[1498203] "temp"
      ref i_x[8449942]:owned SystemError[1554765] "temp"
      (8449944 'move' i_x[8449942](8449946 'set reference' call_tmp[8449917]))
      ref i__retArg[8449948]:owned Error[1498203] "temp"
      (8449950 'move' i__retArg[8449948](8449952 'set reference' ret_tmp[8449940]))
      val _formal_tmp_x[8449954]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8449956 'move' _formal_tmp_x[8449954] i_x[8449942])
      const-val ret[8449959]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8449961]:owned SystemError[1554765] "temp"
      (8449963 'move' i_this[8449961](8449965 'set reference' _formal_tmp_x[8449954]))
      val coerce_tmp[8449967]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8449969 'move' coerce_tmp[8449967](8449971 '.v' i_this[8449961] chpl_p[1554760]))
      val call_tmp[8449974]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8449976 'move' call_tmp[8449974](8449978 'cast' Error[85511] coerce_tmp[8449967]))
      val castPtr[8449981]:Error[85511] "dead at end of block" "insert auto destroy"
      (8449983 'move' castPtr[8449981] call_tmp[8449974])
      ref i_this[8449986]:owned SystemError[1554765] "temp"
      (8449988 'move' i_this[8449986](8449990 'set reference' _formal_tmp_x[8449954]))
      val tmp[8449992]:SystemError[13599] "temp"
      (8449994 'move' tmp[8449992](8449996 'cast' SystemError[13599] nil[32]))
      (8449999 '.=' i_this[8449986] chpl_p[1554760] tmp[8449992])
      val coerce_tmp[8450003]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8450005 'move' coerce_tmp[8450003](8450007 'cast' RootClass[236] call_tmp[8449974]))
      const-val call_tmp[8450010]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8450012 'move' call_tmp[8450010](8450014 '==' coerce_tmp[8450003] nil[32]))
      if call_tmp[8450010]
      {
        (8450020 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8450023]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8450025]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8450028 call init[1499358] initTemp[8450025] castPtr[8449981])
      (8450031 'move' call_tmp[8450023] initTemp[8450025])
      (8450034 'move' ret[8449959] call_tmp[8450023])
      (8450038 call chpl__autoDestroy[3968549] _formal_tmp_x[8449954])
      (8450040 '=' i__retArg[8449948] ret[8449959])
      (8450043 'move' coerce_tmp[8449938] ret_tmp[8449940])
      const-val _formal_tmp_in_err[8450046]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8450048 'move' _formal_tmp_in_err[8450046] coerce_tmp[8449938])
      (8450051 'move' call_tmp[8449936](8450054 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8450046]))
      (8450056 '=' error[8449877] call_tmp[8449936])
      gotoErrorHandlingReturn _endlock[8450119] _endlock[8450119]
    }
    const-val call_tmp[8450062]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450064 'move' call_tmp[8450062](8450067 call qio_err_iserr[12868] err[8449882]))
    const-val call_tmp[8450069]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450071 'move' call_tmp[8450069](8450073 '!=' call_tmp[8450062] 0))
    if call_tmp[8450069]
    {
      val error[8450078]:Error[85511] "error variable" "temp"
      (8450080 'move' error[8450078] nil[32])
      (8450084 call _ch_ioerror[3285336] call_tmp[3335938] err[8449882] "in lock" error[8450078])
      val errorExists[8450089]:bool[19] "temp"
      (8450091 'move' errorExists[8450089](8450093 '!=' error[8450078] nil[32]))
      if errorExists[8450089]
      {
        gotoErrorHandling handler[8450101] handler[8450101]
      }
      label handler[8450101]
      val errorExists[8450103]:bool[19] "temp"
      (8450105 'move' errorExists[8450103](8450107 '!=' error[8450078] nil[32]))
      if errorExists[8450103]
      {
        (8450112 '=' error[8449877] error[8450078])
        gotoErrorHandlingReturn _endlock[8450119] _endlock[8450119]
      }
    }
    label _endlock[8450119]
    val errorExists[8450121]:bool[19] "temp"
    (8450123 'move' errorExists[8450121](8450125 '!=' error[8449877] nil[32]))
    if errorExists[8450121]
    {
      gotoErrorHandling handler[8450133] handler[8450133]
    }
    label handler[8450133]
    val errorExists[8450135]:bool[19] "temp"
    (8450137 'move' errorExists[8450135](8450139 '!=' error[8449877] nil[32]))
    if errorExists[8450135]
    {
      (8450145 call chpl_uncaught_error[87456] error[8449877])
    }
    const-val call_tmp[8450148]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8450150]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8450152]:string[244] "dead at end of block" "insert auto destroy"
    (8450155 call init[21321] ret[8450152])
    const-val coerce_tmp[8450157]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8450159 'move' coerce_tmp[8450157](8450161 '.v' i_literal[8449809] cachedNumCodepoints[21293]))
    (8450164 '.=' ret[8450152] cachedNumCodepoints[21293] coerce_tmp[8450157])
    (8450169 call initWithBorrowedBuffer[1470549] ret[8450152] i_literal[8449809])
    (8450172 '=' ret[8450150] ret[8450152])
    (8450175 'move' call_tmp[8450148] ret[8450150])
    val coerce_tmp[8450178]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8450180 'move' coerce_tmp[8450178](8450182 '.v' call_tmp[8450148] buff[21299]))
    (8450185 'noop')
    val call_tmp[8450186]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8450188 'move' call_tmp[8450186](8450190 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8450178]))
    val ret[8450193]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8450195 '=' ret[8450193](8450197 '.v' i_literal[8449809] buffLen[21281]))
    const-val call_tmp[8450200]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8450202]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8450204 'move' coerce_tmp[8450202](8450206 'cast' int(32)[66] 0))
    val coerce_tmp[8450209]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8450211 'move' coerce_tmp[8450209](8450213 '.v' call_tmp[3335938] _channel_internal[3276776]))
    const-val coerce_tmp[8450216]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8450218 'move' coerce_tmp[8450216](8450220 'cast' int(32)[66] inlineImm[8449815]))
    (8450223 'move' call_tmp[8450200](8450226 call qio_channel_scan_literal[167758] coerce_tmp[8450202] coerce_tmp[8450209] call_tmp[8450186] ret[8450193] coerce_tmp[8450216]))
    const-val err[8450232]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8450234 'move' err[8450232] call_tmp[8450200])
    const-val action[8450237]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8450239 'move' action[8450237] "matching")
    val error[8450242]:Error[85511] "error variable" "temp"
    (8450244 'move' error[8450242] nil[32])
    ref i_action[8450247]:string[244] "temp"
    (8450249 'move' i_action[8450247](8450251 'set reference' action[8450237]))
    val inlineImm[8450253]:bool[19] "temp"
    (8450255 'move' inlineImm[8450253] 1)
    const-val call_tmp[8450258]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450260 'move' call_tmp[8450258](8450263 call qio_err_to_int[12844] call_tmp[8450200]))
    const-val call_tmp[8450265]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450267 'move' call_tmp[8450265](8450269 'cast' int(32)[66] 0))
    const-val call_tmp[8450272]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450274 'move' call_tmp[8450272](8450276 '==' call_tmp[8450258] call_tmp[8450265]))
    const-val call_tmp[8450279]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450281 'move' call_tmp[8450279](8450283 'u!' call_tmp[8450272]))
    if call_tmp[8450279]
    {
      const-val call_tmp[8450287]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8450289]:string[244] "temp"
      (8450292 call literalErrorHelper[3112834] i_literal[8449809] i_action[8450247] inlineImm[8450253] ret_tmp[8450289])
      (8450297 'move' call_tmp[8450287] ret_tmp[8450289])
      val msg[8450300]:string[244] "dead at end of block" "insert auto destroy"
      (8450302 'move' msg[8450300] call_tmp[8450287])
      const-val call_tmp[8450305]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8450307 'move' call_tmp[8450305](8450310 call qio_err_to_int[12844] err[8450232]))
      const-val call_tmp[8450312]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8450314 'move' call_tmp[8450312](8450316 '==' call_tmp[8450305] EILSEQ[11191]))
      if call_tmp[8450312]
      {
        const-val call_tmp[8450321]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8450323]:string[244] "temp"
        (8450326 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8450323])
        (8450328 'move' call_tmp[8450321] ret_tmp[8450323])
        const-val call_tmp[8450331]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8450333]:string[244] "temp"
        (8450336 call +[28065] call_tmp[8450321] "Error: " ret_tmp[8450333])
        (8450340 'move' call_tmp[8450331] ret_tmp[8450333])
        const-val call_tmp[8450343]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8450345]:string[244] "temp"
        (8450348 call +[28065] call_tmp[8450331] msg[8450300] ret_tmp[8450345])
        (8450352 'move' call_tmp[8450343] ret_tmp[8450345])
        (8450356 call =[28046] msg[8450300] call_tmp[8450343])
        ref i_x[8450359]:string[244] "temp"
        (8450361 'move' i_x[8450359](8450363 'set reference' call_tmp[8450343]))
        (8450366 call deinit[21354] i_x[8450359])
        ref i_x[8450368]:string[244] "temp"
        (8450370 'move' i_x[8450368](8450372 'set reference' call_tmp[8450331]))
        (8450375 call deinit[21354] i_x[8450368])
        ref i_x[8450377]:string[244] "temp"
        (8450379 'move' i_x[8450377](8450381 'set reference' call_tmp[8450321]))
        (8450384 call deinit[21354] i_x[8450377])
      }
      val error[8450387]:Error[85511] "error variable" "temp"
      (8450389 'move' error[8450387] nil[32])
      (8450393 call _ch_ioerror[3285336] call_tmp[3335938] err[8450232] msg[8450300] error[8450387])
      val errorExists[8450398]:bool[19] "temp"
      (8450400 'move' errorExists[8450398](8450402 '!=' error[8450387] nil[32]))
      if errorExists[8450398]
      {
        gotoErrorHandling handler[8450410] handler[8450410]
      }
      label handler[8450410]
      val errorExists[8450412]:bool[19] "temp"
      (8450414 'move' errorExists[8450412](8450416 '!=' error[8450387] nil[32]))
      if errorExists[8450412]
      {
        (8450421 '=' error[8450242] error[8450387])
        ref i_x[8450424]:string[244] "temp"
        (8450426 'move' i_x[8450424](8450428 'set reference' msg[8450300]))
        (8450431 call deinit[21354] i_x[8450424])
        gotoErrorHandlingReturn _end_checkLiteralError[8450446] _end_checkLiteralError[8450446]
      }
      ref i_x[8450436]:string[244] "temp"
      (8450438 'move' i_x[8450436](8450440 'set reference' msg[8450300]))
      (8450443 call deinit[21354] i_x[8450436])
    }
    label _end_checkLiteralError[8450446]
    val errorExists[8450448]:bool[19] "temp"
    (8450450 'move' errorExists[8450448](8450452 '!=' error[8450242] nil[32]))
    if errorExists[8450448]
    {
      gotoErrorHandling handler[8450460] handler[8450460]
    }
    label handler[8450460]
    val errorExists[8450462]:bool[19] "temp"
    (8450464 'move' errorExists[8450462](8450466 '!=' error[8450242] nil[32]))
    if errorExists[8450462]
    {
      (8450471 '=' error[8449838] error[8450242])
      ref i_x[8450474]:string[244] "temp"
      (8450476 'move' i_x[8450474](8450478 'set reference' action[8450237]))
      (8450481 call deinit[21354] i_x[8450474])
      ref i_x[8450483]:string[244] "temp"
      (8450485 'move' i_x[8450483](8450487 'set reference' call_tmp[8450148]))
      (8450490 call deinit[21354] i_x[8450483])
      gotoErrorHandlingReturn _end_readLiteralCommon[8450513] _end_readLiteralCommon[8450513]
    }
    ref i_x[8450495]:string[244] "temp"
    (8450497 'move' i_x[8450495](8450499 'set reference' action[8450237]))
    (8450502 call deinit[21354] i_x[8450495])
    ref i_x[8450504]:string[244] "temp"
    (8450506 'move' i_x[8450504](8450508 'set reference' call_tmp[8450148]))
    (8450511 call deinit[21354] i_x[8450504])
    label _end_readLiteralCommon[8450513]
    val errorExists[8450515]:bool[19] "temp"
    (8450517 'move' errorExists[8450515](8450519 '!=' error[8449838] nil[32]))
    if errorExists[8450515]
    {
      gotoErrorHandling handler[8450527] handler[8450527]
    }
    label handler[8450527]
    val errorExists[8450529]:bool[19] "temp"
    (8450531 'move' errorExists[8450529](8450533 '!=' error[8449838] nil[32]))
    if errorExists[8450529]
    {
      val call_tmp[8450538]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
      (8450540 'move' call_tmp[8450538](8450542 'dynamic_cast' BadFormatError[15094] error[8449838]))
      val tmp[8450545]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
      (8450547 'move' tmp[8450545] call_tmp[8450538])
      const-val call_tmp[8450550]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8450552 'move' call_tmp[8450550](8450554 '!=' call_tmp[8450538] nil[32]))
      if call_tmp[8450550]
      {
        const-val call_tmp[8450559]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[8450561]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
        (8450564 call init[1543824] initTemp[8450561] tmp[8450545])
        (8450567 'move' call_tmp[8450559] initTemp[8450561])
        const-val e[8450570]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
        (8450572 'move' e[8450570] call_tmp[8450559])
        (8450575 'move' ret[8449836] 0)
        (8450579 call chpl__autoDestroy[3940454] e[8450570])
        gotoReturn _end__matchLiteralCommon[8450647] _end__matchLiteralCommon[8450647]
        (8450584 call chpl__autoDestroy[3940454] e[8450570])
      }
      {
        val call_tmp[8450587]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (8450589 'move' call_tmp[8450587](8450591 'dynamic_cast' EofError[14808] error[8449838]))
        val tmp[8450594]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
        (8450596 'move' tmp[8450594] call_tmp[8450587])
        const-val call_tmp[8450599]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8450601 'move' call_tmp[8450599](8450603 '!=' call_tmp[8450587] nil[32]))
        if call_tmp[8450599]
        {
          const-val call_tmp[8450608]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8450610]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (8450613 call init[1542524] initTemp[8450610] tmp[8450594])
          (8450616 'move' call_tmp[8450608] initTemp[8450610])
          const-val e[8450619]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8450621 'move' e[8450619] call_tmp[8450608])
          (8450624 'move' ret[8449836] 0)
          (8450628 call chpl__autoDestroy[3937692] e[8450619])
          gotoReturn _end__matchLiteralCommon[8450647] _end__matchLiteralCommon[8450647]
          (8450633 call chpl__autoDestroy[3937692] e[8450619])
        }
        {
          (8450636 '=' error[8449831] error[8449838])
          gotoErrorHandlingReturn _end__matchLiteralCommon[8450647] _end__matchLiteralCommon[8450647]
        }
      }
    }
    (8450644 'move' ret[8449836] 1)
    label _end__matchLiteralCommon[8450647]
    (8450649 'move' call_tmp[8449829] ret[8449836])
    val errorExists[8450652]:bool[19] "temp"
    (8450654 'move' errorExists[8450652](8450656 '!=' error[8449831] nil[32]))
    if errorExists[8450652]
    {
      (8450661 '=' i_error_out[8449820] error[8449831])
      gotoErrorHandlingReturn _endmatchLiteral[8450670] _endmatchLiteral[8450670]
    }
    (8450667 '=' ret[8449827] call_tmp[8449829])
    label _endmatchLiteral[8450670]
    (5468817 'move' _return_tmp_[5468815] ret[8449827])
    val errorExists[7302512]:bool[19] "temp"
    (7302517 'move' errorExists[7302512](7302514 '!=' error[5509472] nil[32]))
    if errorExists[7302512]
    {
      (5509478 '=' error_out[5509396] error[5509472])
      ref i_x[8621907]:map(string,string,false)[3283386] "temp"
      (8621911 'move' i_x[8621907](8621909 'set reference' ret[3335932]))
      const-ref _field_destructor_tmp_[8621914]:chpl__hashtable(string,string)[3283441] "temp"
      (8621916 'move' _field_destructor_tmp_[8621914](8621918 '.' i_x[8621907] table[3283371]))
      (8621922 call deinit[4211999] _field_destructor_tmp_[8621914])
      gotoErrorHandlingReturn _end_readField[3336001] _end_readField[3336001]
    }
    const-val call_tmp[3335953]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[7402143]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7402145 'move' coerce_tmp[7402143](7402147 '.v' name[3335740] buffLen[21281]))
    const-val call_tmp[7402150]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7402152 'move' call_tmp[7402150](7402154 '==' coerce_tmp[7402143] 0))
    (3335955 'move' call_tmp[3335953] call_tmp[7402150])
    const-val call_tmp[3335962]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351382]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351384 'move' call_tmp[7351382](7351386 'u!' call_tmp[3335953]))
    (3335964 'move' call_tmp[3335962] call_tmp[7351382])
    const-val call_tmp[3335969]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3335971 'move' call_tmp[3335969] call_tmp[3335962])
    if call_tmp[3335969]
    {
      const-ref call_tmp[3335978]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454811]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454813 'move' call_tmp[8454811](8454815 '.' this[3335738] reader[3313834]))
      (3335980 'move' call_tmp[3335978] call_tmp[8454811])
      val coerce_tmp[8454022]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454024 'move' coerce_tmp[8454022](8454026 '.v' call_tmp[3335978] _channel_internal[3276776]))
      (8454030 call qio_channel_revert_unlocked[166360] coerce_tmp[8454022])
    }
    (3350761 '=' ret[3335746] ret[3335932])
    label _end_readField[3336001]
    (5589190 '=' _retArg[5589188] ret[3335746])
    (5589192 return _void[46])
  }
  function AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851].readField[3350793](const  ref arg this[3350797]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851], const  ref arg name[3350799]:string[244], ref arg error_out[5509816]:Error[85511], ref arg _retArg[5589382]:map(string,owned ModuleSpecification?,false)[3283686]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479914]:map(string,owned ModuleSpecification?,false)[3283686] "temp"
    const-val ret[3350805]:map(string,owned ModuleSpecification?,false)[3283686] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3350815]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454657]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    (8454659 'move' call_tmp[8454657](8454661 '.' this[3350797] _fieldOffsets[3313836]))
    (3350817 'move' call_tmp[3350815] call_tmp[8454657])
    const-val call_tmp[3350823]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3350825 'move' call_tmp[3350823](3350831 call contains[3315108] call_tmp[3350815] name[3350799]))
    const-val call_tmp[3350833]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3350835 'move' call_tmp[3350833] call_tmp[3350823])
    if call_tmp[3350833]
    {
      const-ref call_tmp[3350842]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454821]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454823 'move' call_tmp[8454821](8454825 '.' this[3350797] reader[3313834]))
      (3350844 'move' call_tmp[3350842] call_tmp[8454821])
      const-val _return_tmp_[5468839]:int(64)[10] "dead after last mention" "temp"
      val error[5509819]:Error[85511] "error variable" "temp"
      (5509821 'move' error[5509819] nil[32])
      (5468841 'move' _return_tmp_[5468839](3350854 call mark[3288983] call_tmp[3350842] error[5509819]))
      val errorExists[7302680]:bool[19] "temp"
      (7302685 'move' errorExists[7302680](7302682 '!=' error[5509819] nil[32]))
      if errorExists[7302680]
      {
        (5509825 '=' error_out[5509816] error[5509819])
        gotoErrorHandlingReturn _end_readField[3351060] _end_readField[3351060]
      }
      const-ref call_tmp[3350856]:int(64)[10] "dead after last mention" "maybe param" "temp"
      const-ref _this_tmp_[3351070]:map(string,int(64),false)[3288794] "dead after last mention" "temp"
      ref call_tmp[8454667]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
      (8454669 'move' call_tmp[8454667](8454671 '.' this[3350797] _fieldOffsets[3313836]))
      (3351072 'move' _this_tmp_[3351070] call_tmp[8454667])
      val error[5509834]:Error[85511] "error variable" "temp"
      (5509836 'move' error[5509834] nil[32])
      (3350858 'move' call_tmp[3350856](3351078 call this[3315376] _this_tmp_[3351070] name[3350799] error[5509834]))
      val errorExists[7302688]:bool[19] "temp"
      (7302693 'move' errorExists[7302688](7302690 '!=' error[5509834] nil[32]))
      if errorExists[7302688]
      {
        (5509840 '=' error_out[5509816] error[5509834])
        gotoErrorHandlingReturn _end_readField[3351060] _end_readField[3351060]
      }
      const-ref call_tmp[3350866]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454831]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454833 'move' call_tmp[8454831](8454835 '.' this[3350797] reader[3313834]))
      (3350868 'move' call_tmp[3350866] call_tmp[8454831])
      const-val call_tmp[3350874]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3350876 'move' call_tmp[3350874](3350882 call offset[3289103] call_tmp[3350866]))
      const-val call_tmp[3350883]:int(64)[10] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[3351087]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3351091 'move' coerce_tmp[3351087](3351089 'deref' call_tmp[3350856]))
      const-val call_tmp[7378050]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378052 'move' call_tmp[7378050](7378054 '-' coerce_tmp[3351087] call_tmp[3350874]))
      (3350885 'move' call_tmp[3350883] call_tmp[7378050])
      const-val dist[3350891]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (3350893 'move' dist[3350891] call_tmp[3350883])
      const-ref call_tmp[3350897]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454841]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454843 'move' call_tmp[8454841](8454845 '.' this[3350797] reader[3313834]))
      (3350899 'move' call_tmp[3350897] call_tmp[8454841])
      val error[5509849]:Error[85511] "error variable" "temp"
      (5509851 'move' error[5509849] nil[32])
      (3350909 call advance[3335246] call_tmp[3350897] dist[3350891] error[5509849])
      val errorExists[7302696]:bool[19] "temp"
      (7302701 'move' errorExists[7302696](7302698 '!=' error[5509849] nil[32]))
      if errorExists[7302696]
      {
        (5509855 '=' error_out[5509816] error[5509849])
        gotoErrorHandlingReturn _end_readField[3351060] _end_readField[3351060]
      }
    }
    {
      const-val call_tmp[3350914]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7402160]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7402162 'move' coerce_tmp[7402160](7402164 '.v' name[3350799] buffLen[21281]))
      const-val call_tmp[7402167]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7402169 'move' call_tmp[7402167](7402171 '==' coerce_tmp[7402160] 0))
      (3350916 'move' call_tmp[3350914] call_tmp[7402167])
      const-val call_tmp[3350923]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7351391]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7351393 'move' call_tmp[7351391](7351395 'u!' call_tmp[3350914]))
      (3350925 'move' call_tmp[3350923] call_tmp[7351391])
      const-val call_tmp[3350930]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3350932 'move' call_tmp[3350930] call_tmp[3350923])
      if call_tmp[3350930]
      {
        const-val call_tmp[3350939]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540322]:string[244] "temp"
        (3350944 call +[28065] "field '" name[3350799] ret_tmp[5540322])
        (5540325 'move' call_tmp[3350939] ret_tmp[5540322])
        const-val call_tmp[3350947]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540328]:string[244] "temp"
        (3350952 call +[28065] call_tmp[3350939] "' not found." ret_tmp[5540328])
        (5540331 'move' call_tmp[3350947] ret_tmp[5540328])
        const-val call_tmp[3350955]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[3351129]:IllegalArgumentError[85616] "dead after last mention" "temp"
        (3351131 'move' new_temp[3351129](3351116 call _new[1475209] call_tmp[3350947]))
        const-val initTemp[3351138]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
        (3351141 call init[1475364] initTemp[3351138] new_temp[3351129])
        (3350957 'move' call_tmp[3350955] initTemp[3351138])
        val call_tmp[3350962]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3351155]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[5547163]:owned Error[1498203] "temp"
        ref i_x[7645593]:owned IllegalArgumentError[1475882] "temp"
        (7645597 'move' i_x[7645593](7645595 'set reference' call_tmp[3350955]))
        ref i__retArg[7645599]:owned Error[1498203] "temp"
        (7645603 'move' i__retArg[7645599](7645601 'set reference' ret_tmp[5547163]))
        val _formal_tmp_x[7645606]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (7645608 'move' _formal_tmp_x[7645606] i_x[7645593])
        const-val ret[7645611]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[7645613]:owned IllegalArgumentError[1475882] "temp"
        (7645615 'move' i_this[7645613](7645617 'set reference' _formal_tmp_x[7645606]))
        val coerce_tmp[7645619]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645621 'move' coerce_tmp[7645619](7645623 '.v' i_this[7645613] chpl_p[1475877]))
        val call_tmp[7645626]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645628 'move' call_tmp[7645626](7645630 'cast' Error[85511] coerce_tmp[7645619]))
        val castPtr[7645633]:Error[85511] "dead at end of block" "insert auto destroy"
        (7645635 'move' castPtr[7645633] call_tmp[7645626])
        ref i_this[7645638]:owned IllegalArgumentError[1475882] "temp"
        (7645640 'move' i_this[7645638](7645642 'set reference' _formal_tmp_x[7645606]))
        val tmp[7645644]:IllegalArgumentError[85616] "temp"
        (7645646 'move' tmp[7645644](7645648 'cast' IllegalArgumentError[85616] nil[32]))
        (7645651 '.=' i_this[7645638] chpl_p[1475877] tmp[7645644])
        val coerce_tmp[7645655]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645657 'move' coerce_tmp[7645655](7645659 'cast' RootClass[236] call_tmp[7645626]))
        const-val call_tmp[7645662]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645664 'move' call_tmp[7645662](7645666 '==' coerce_tmp[7645655] nil[32]))
        if call_tmp[7645662]
        {
          (7645672 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7645675]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[7645677]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (7645680 call init[1499358] initTemp[7645677] castPtr[7645633])
        (7645683 'move' call_tmp[7645675] initTemp[7645677])
        (7645686 'move' ret[7645611] call_tmp[7645675])
        (7645690 call chpl__autoDestroy[3929468] _formal_tmp_x[7645606])
        (7645694 '=' i__retArg[7645599] ret[7645611])
        (5547166 'move' coerce_tmp[3351155] ret_tmp[5547163])
        const-val _formal_tmp_in_err[3351374]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (3351379 'move' _formal_tmp_in_err[3351374] coerce_tmp[3351155])
        (3350964 'move' call_tmp[3350962](3350967 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3351374]))
        val castedError[5509864]:Error[85511] "temp"
        (5509870 'move' castedError[5509864] call_tmp[3350962])
        (5509872 '=' error_out[5509816] castedError[5509864])
        ref i_x[7342750]:string[244] "temp"
        (7342754 'move' i_x[7342750](7342752 'set reference' call_tmp[3350947]))
        (7342758 call deinit[21354] i_x[7342750])
        ref i_x[7342762]:string[244] "temp"
        (7342766 'move' i_x[7342762](7342764 'set reference' call_tmp[3350939]))
        (7342770 call deinit[21354] i_x[7342762])
        gotoErrorHandlingReturn _end_readField[3351060] _end_readField[3351060]
        ref i_x[7342774]:string[244] "temp"
        (7342778 'move' i_x[7342774](7342776 'set reference' call_tmp[3350947]))
        (7342782 call deinit[21354] i_x[7342774])
        ref i_x[7342786]:string[244] "temp"
        (7342790 'move' i_x[7342786](7342788 'set reference' call_tmp[3350939]))
        (7342794 call deinit[21354] i_x[7342786])
      }
    }
    const-ref call_tmp[3350973]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454851]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454853 'move' call_tmp[8454851](8454855 '.' this[3350797] reader[3313834]))
    (3350975 'move' call_tmp[3350973] call_tmp[8454851])
    const-val call_tmp[3350981]:map(string,owned ModuleSpecification?,false)[3283686] "dead at end of block" "maybe param" "temp"
    val error[5509877]:Error[85511] "error variable" "temp"
    (5509879 'move' error[5509877] nil[32])
    const-val ret_tmp[5589388]:map(string,owned ModuleSpecification?,false)[3283686] "temp"
    (3350989 call read[3351385] call_tmp[3350973] error[5509877] ret_tmp[5589388])
    (5589391 'move' call_tmp[3350981] ret_tmp[5589388])
    val errorExists[7302704]:bool[19] "temp"
    (7302709 'move' errorExists[7302704](7302706 '!=' error[5509877] nil[32]))
    if errorExists[7302704]
    {
      (5509883 '=' error_out[5509816] error[5509877])
      gotoErrorHandlingReturn _end_readField[3351060] _end_readField[3351060]
    }
    const-val ret[3350991]:map(string,owned ModuleSpecification?,false)[3283686] "dead at end of block" "insert auto destroy"
    (3350993 'move' ret[3350991] call_tmp[3350981])
    const-ref call_tmp[3350997]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454861]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454863 'move' call_tmp[8454861](8454865 '.' this[3350797] reader[3313834]))
    (3350999 'move' call_tmp[3350997] call_tmp[8454861])
    val default_arg_ignoreWhitespace[3373742]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[5468843]:bool[19] "dead after last mention" "temp"
    val error[5509892]:Error[85511] "error variable" "temp"
    (5509894 'move' error[5509892] nil[32])
    val inlineImm[8450674]:string[244] "temp"
    (8450677 'move' inlineImm[8450674] ",")
    ref i_literal[8450679]:string[244] "temp"
    (8450683 'move' i_literal[8450679](8450681 'set reference' inlineImm[8450674]))
    val inlineImm[8450685]:bool[19] "temp"
    (8450688 'move' inlineImm[8450685] 1)
    ref i_error_out[8450690]:Error[85511] "temp"
    (8450694 'move' i_error_out[8450690](8450692 'set reference' error[5509892]))
    val ret[8450697]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[8450699]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[8450701]:Error[85511] "error variable" "temp"
    (8450703 'move' error[8450701] nil[32])
    val ret[8450706]:bool[19] "dead after last mention" "RVV" "temp"
    val error[8450708]:Error[85511] "error variable" "temp"
    (8450710 'move' error[8450708] nil[32])
    ref call_tmp[8450713]:locale[234] "dead after last mention" "maybe param" "temp"
    (8450715 'move' call_tmp[8450713](8450717 '.' call_tmp[3350997] _home[3276771]))
    val coerce_tmp[8450720]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8450722 'move' coerce_tmp[8450720](8450724 '.v' call_tmp[8450713] _instance[135293]))
    val coerce_tmp[8450727]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8450729 'move' coerce_tmp[8450727](8450731 'cast' RootClass[236] coerce_tmp[8450720]))
    const-val call_tmp[8450734]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450736 'move' call_tmp[8450734](8450738 '==' coerce_tmp[8450727] nil[32]))
    if call_tmp[8450734]
    {
      (8450744 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8450747]:Error[85511] "error variable" "temp"
    (8450749 'move' error[8450747] nil[32])
    const-val err[8450752]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8450754]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450756 'move' call_tmp[8450754](8450758 'cast' int(32)[66] 0))
    const-val call_tmp[8450761]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450763 'move' call_tmp[8450761](8450766 call qio_int_to_err[12856] call_tmp[8450754]))
    (8450768 'move' err[8450752] call_tmp[8450761])
    val coerce_tmp[8450771]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8450773 'move' coerce_tmp[8450771](8450775 '.v' call_tmp[3350997] _channel_internal[3276776]))
    const-val call_tmp[8450778]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450780 'move' call_tmp[8450778](8450782 'ptr_eq' coerce_tmp[8450771] nil[32]))
    if call_tmp[8450778]
    {
      const-val call_tmp[8450787]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8450789]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8450791 'move' coerce_tmp[8450789](8450793 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8450796]:owned SystemError[1554765] "temp"
      (8450799 call createSystemError[14072] coerce_tmp[8450789] "Operation attempted on an invalid fileReader" ret_tmp[8450796])
      (8450803 'move' call_tmp[8450787] ret_tmp[8450796])
      val call_tmp[8450806]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8450808]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8450810]:owned Error[1498203] "temp"
      ref i_x[8450812]:owned SystemError[1554765] "temp"
      (8450814 'move' i_x[8450812](8450816 'set reference' call_tmp[8450787]))
      ref i__retArg[8450818]:owned Error[1498203] "temp"
      (8450820 'move' i__retArg[8450818](8450822 'set reference' ret_tmp[8450810]))
      val _formal_tmp_x[8450824]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8450826 'move' _formal_tmp_x[8450824] i_x[8450812])
      const-val ret[8450829]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8450831]:owned SystemError[1554765] "temp"
      (8450833 'move' i_this[8450831](8450835 'set reference' _formal_tmp_x[8450824]))
      val coerce_tmp[8450837]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8450839 'move' coerce_tmp[8450837](8450841 '.v' i_this[8450831] chpl_p[1554760]))
      val call_tmp[8450844]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8450846 'move' call_tmp[8450844](8450848 'cast' Error[85511] coerce_tmp[8450837]))
      val castPtr[8450851]:Error[85511] "dead at end of block" "insert auto destroy"
      (8450853 'move' castPtr[8450851] call_tmp[8450844])
      ref i_this[8450856]:owned SystemError[1554765] "temp"
      (8450858 'move' i_this[8450856](8450860 'set reference' _formal_tmp_x[8450824]))
      val tmp[8450862]:SystemError[13599] "temp"
      (8450864 'move' tmp[8450862](8450866 'cast' SystemError[13599] nil[32]))
      (8450869 '.=' i_this[8450856] chpl_p[1554760] tmp[8450862])
      val coerce_tmp[8450873]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8450875 'move' coerce_tmp[8450873](8450877 'cast' RootClass[236] call_tmp[8450844]))
      const-val call_tmp[8450880]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8450882 'move' call_tmp[8450880](8450884 '==' coerce_tmp[8450873] nil[32]))
      if call_tmp[8450880]
      {
        (8450890 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8450893]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8450895]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8450898 call init[1499358] initTemp[8450895] castPtr[8450851])
      (8450901 'move' call_tmp[8450893] initTemp[8450895])
      (8450904 'move' ret[8450829] call_tmp[8450893])
      (8450908 call chpl__autoDestroy[3968549] _formal_tmp_x[8450824])
      (8450910 '=' i__retArg[8450818] ret[8450829])
      (8450913 'move' coerce_tmp[8450808] ret_tmp[8450810])
      const-val _formal_tmp_in_err[8450916]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8450918 'move' _formal_tmp_in_err[8450916] coerce_tmp[8450808])
      (8450921 'move' call_tmp[8450806](8450924 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8450916]))
      (8450926 '=' error[8450747] call_tmp[8450806])
      gotoErrorHandlingReturn _endlock[8450989] _endlock[8450989]
    }
    const-val call_tmp[8450932]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450934 'move' call_tmp[8450932](8450937 call qio_err_iserr[12868] err[8450752]))
    const-val call_tmp[8450939]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8450941 'move' call_tmp[8450939](8450943 '!=' call_tmp[8450932] 0))
    if call_tmp[8450939]
    {
      val error[8450948]:Error[85511] "error variable" "temp"
      (8450950 'move' error[8450948] nil[32])
      (8450954 call _ch_ioerror[3285336] call_tmp[3350997] err[8450752] "in lock" error[8450948])
      val errorExists[8450959]:bool[19] "temp"
      (8450961 'move' errorExists[8450959](8450963 '!=' error[8450948] nil[32]))
      if errorExists[8450959]
      {
        gotoErrorHandling handler[8450971] handler[8450971]
      }
      label handler[8450971]
      val errorExists[8450973]:bool[19] "temp"
      (8450975 'move' errorExists[8450973](8450977 '!=' error[8450948] nil[32]))
      if errorExists[8450973]
      {
        (8450982 '=' error[8450747] error[8450948])
        gotoErrorHandlingReturn _endlock[8450989] _endlock[8450989]
      }
    }
    label _endlock[8450989]
    val errorExists[8450991]:bool[19] "temp"
    (8450993 'move' errorExists[8450991](8450995 '!=' error[8450747] nil[32]))
    if errorExists[8450991]
    {
      gotoErrorHandling handler[8451003] handler[8451003]
    }
    label handler[8451003]
    val errorExists[8451005]:bool[19] "temp"
    (8451007 'move' errorExists[8451005](8451009 '!=' error[8450747] nil[32]))
    if errorExists[8451005]
    {
      (8451015 call chpl_uncaught_error[87456] error[8450747])
    }
    const-val call_tmp[8451018]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8451020]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8451022]:string[244] "dead at end of block" "insert auto destroy"
    (8451025 call init[21321] ret[8451022])
    const-val coerce_tmp[8451027]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451029 'move' coerce_tmp[8451027](8451031 '.v' i_literal[8450679] cachedNumCodepoints[21293]))
    (8451034 '.=' ret[8451022] cachedNumCodepoints[21293] coerce_tmp[8451027])
    (8451039 call initWithBorrowedBuffer[1470549] ret[8451022] i_literal[8450679])
    (8451042 '=' ret[8451020] ret[8451022])
    (8451045 'move' call_tmp[8451018] ret[8451020])
    val coerce_tmp[8451048]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8451050 'move' coerce_tmp[8451048](8451052 '.v' call_tmp[8451018] buff[21299]))
    (8451055 'noop')
    val call_tmp[8451056]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8451058 'move' call_tmp[8451056](8451060 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8451048]))
    val ret[8451063]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8451065 '=' ret[8451063](8451067 '.v' i_literal[8450679] buffLen[21281]))
    const-val call_tmp[8451070]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8451072]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451074 'move' coerce_tmp[8451072](8451076 'cast' int(32)[66] 0))
    val coerce_tmp[8451079]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451081 'move' coerce_tmp[8451079](8451083 '.v' call_tmp[3350997] _channel_internal[3276776]))
    const-val coerce_tmp[8451086]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451088 'move' coerce_tmp[8451086](8451090 'cast' int(32)[66] inlineImm[8450685]))
    (8451093 'move' call_tmp[8451070](8451096 call qio_channel_scan_literal[167758] coerce_tmp[8451072] coerce_tmp[8451079] call_tmp[8451056] ret[8451063] coerce_tmp[8451086]))
    const-val err[8451102]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8451104 'move' err[8451102] call_tmp[8451070])
    const-val action[8451107]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8451109 'move' action[8451107] "matching")
    val error[8451112]:Error[85511] "error variable" "temp"
    (8451114 'move' error[8451112] nil[32])
    ref i_action[8451117]:string[244] "temp"
    (8451119 'move' i_action[8451117](8451121 'set reference' action[8451107]))
    val inlineImm[8451123]:bool[19] "temp"
    (8451125 'move' inlineImm[8451123] 1)
    const-val call_tmp[8451128]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451130 'move' call_tmp[8451128](8451133 call qio_err_to_int[12844] call_tmp[8451070]))
    const-val call_tmp[8451135]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451137 'move' call_tmp[8451135](8451139 'cast' int(32)[66] 0))
    const-val call_tmp[8451142]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451144 'move' call_tmp[8451142](8451146 '==' call_tmp[8451128] call_tmp[8451135]))
    const-val call_tmp[8451149]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451151 'move' call_tmp[8451149](8451153 'u!' call_tmp[8451142]))
    if call_tmp[8451149]
    {
      const-val call_tmp[8451157]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8451159]:string[244] "temp"
      (8451162 call literalErrorHelper[3112834] i_literal[8450679] i_action[8451117] inlineImm[8451123] ret_tmp[8451159])
      (8451167 'move' call_tmp[8451157] ret_tmp[8451159])
      val msg[8451170]:string[244] "dead at end of block" "insert auto destroy"
      (8451172 'move' msg[8451170] call_tmp[8451157])
      const-val call_tmp[8451175]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8451177 'move' call_tmp[8451175](8451180 call qio_err_to_int[12844] err[8451102]))
      const-val call_tmp[8451182]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8451184 'move' call_tmp[8451182](8451186 '==' call_tmp[8451175] EILSEQ[11191]))
      if call_tmp[8451182]
      {
        const-val call_tmp[8451191]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8451193]:string[244] "temp"
        (8451196 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8451193])
        (8451198 'move' call_tmp[8451191] ret_tmp[8451193])
        const-val call_tmp[8451201]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8451203]:string[244] "temp"
        (8451206 call +[28065] call_tmp[8451191] "Error: " ret_tmp[8451203])
        (8451210 'move' call_tmp[8451201] ret_tmp[8451203])
        const-val call_tmp[8451213]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8451215]:string[244] "temp"
        (8451218 call +[28065] call_tmp[8451201] msg[8451170] ret_tmp[8451215])
        (8451222 'move' call_tmp[8451213] ret_tmp[8451215])
        (8451226 call =[28046] msg[8451170] call_tmp[8451213])
        ref i_x[8451229]:string[244] "temp"
        (8451231 'move' i_x[8451229](8451233 'set reference' call_tmp[8451213]))
        (8451236 call deinit[21354] i_x[8451229])
        ref i_x[8451238]:string[244] "temp"
        (8451240 'move' i_x[8451238](8451242 'set reference' call_tmp[8451201]))
        (8451245 call deinit[21354] i_x[8451238])
        ref i_x[8451247]:string[244] "temp"
        (8451249 'move' i_x[8451247](8451251 'set reference' call_tmp[8451191]))
        (8451254 call deinit[21354] i_x[8451247])
      }
      val error[8451257]:Error[85511] "error variable" "temp"
      (8451259 'move' error[8451257] nil[32])
      (8451263 call _ch_ioerror[3285336] call_tmp[3350997] err[8451102] msg[8451170] error[8451257])
      val errorExists[8451268]:bool[19] "temp"
      (8451270 'move' errorExists[8451268](8451272 '!=' error[8451257] nil[32]))
      if errorExists[8451268]
      {
        gotoErrorHandling handler[8451280] handler[8451280]
      }
      label handler[8451280]
      val errorExists[8451282]:bool[19] "temp"
      (8451284 'move' errorExists[8451282](8451286 '!=' error[8451257] nil[32]))
      if errorExists[8451282]
      {
        (8451291 '=' error[8451112] error[8451257])
        ref i_x[8451294]:string[244] "temp"
        (8451296 'move' i_x[8451294](8451298 'set reference' msg[8451170]))
        (8451301 call deinit[21354] i_x[8451294])
        gotoErrorHandlingReturn _end_checkLiteralError[8451316] _end_checkLiteralError[8451316]
      }
      ref i_x[8451306]:string[244] "temp"
      (8451308 'move' i_x[8451306](8451310 'set reference' msg[8451170]))
      (8451313 call deinit[21354] i_x[8451306])
    }
    label _end_checkLiteralError[8451316]
    val errorExists[8451318]:bool[19] "temp"
    (8451320 'move' errorExists[8451318](8451322 '!=' error[8451112] nil[32]))
    if errorExists[8451318]
    {
      gotoErrorHandling handler[8451330] handler[8451330]
    }
    label handler[8451330]
    val errorExists[8451332]:bool[19] "temp"
    (8451334 'move' errorExists[8451332](8451336 '!=' error[8451112] nil[32]))
    if errorExists[8451332]
    {
      (8451341 '=' error[8450708] error[8451112])
      ref i_x[8451344]:string[244] "temp"
      (8451346 'move' i_x[8451344](8451348 'set reference' action[8451107]))
      (8451351 call deinit[21354] i_x[8451344])
      ref i_x[8451353]:string[244] "temp"
      (8451355 'move' i_x[8451353](8451357 'set reference' call_tmp[8451018]))
      (8451360 call deinit[21354] i_x[8451353])
      gotoErrorHandlingReturn _end_readLiteralCommon[8451383] _end_readLiteralCommon[8451383]
    }
    ref i_x[8451365]:string[244] "temp"
    (8451367 'move' i_x[8451365](8451369 'set reference' action[8451107]))
    (8451372 call deinit[21354] i_x[8451365])
    ref i_x[8451374]:string[244] "temp"
    (8451376 'move' i_x[8451374](8451378 'set reference' call_tmp[8451018]))
    (8451381 call deinit[21354] i_x[8451374])
    label _end_readLiteralCommon[8451383]
    val errorExists[8451385]:bool[19] "temp"
    (8451387 'move' errorExists[8451385](8451389 '!=' error[8450708] nil[32]))
    if errorExists[8451385]
    {
      gotoErrorHandling handler[8451397] handler[8451397]
    }
    label handler[8451397]
    val errorExists[8451399]:bool[19] "temp"
    (8451401 'move' errorExists[8451399](8451403 '!=' error[8450708] nil[32]))
    if errorExists[8451399]
    {
      val call_tmp[8451408]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
      (8451410 'move' call_tmp[8451408](8451412 'dynamic_cast' BadFormatError[15094] error[8450708]))
      val tmp[8451415]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
      (8451417 'move' tmp[8451415] call_tmp[8451408])
      const-val call_tmp[8451420]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8451422 'move' call_tmp[8451420](8451424 '!=' call_tmp[8451408] nil[32]))
      if call_tmp[8451420]
      {
        const-val call_tmp[8451429]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[8451431]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
        (8451434 call init[1543824] initTemp[8451431] tmp[8451415])
        (8451437 'move' call_tmp[8451429] initTemp[8451431])
        const-val e[8451440]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
        (8451442 'move' e[8451440] call_tmp[8451429])
        (8451445 'move' ret[8450706] 0)
        (8451449 call chpl__autoDestroy[3940454] e[8451440])
        gotoReturn _end__matchLiteralCommon[8451517] _end__matchLiteralCommon[8451517]
        (8451454 call chpl__autoDestroy[3940454] e[8451440])
      }
      {
        val call_tmp[8451457]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (8451459 'move' call_tmp[8451457](8451461 'dynamic_cast' EofError[14808] error[8450708]))
        val tmp[8451464]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
        (8451466 'move' tmp[8451464] call_tmp[8451457])
        const-val call_tmp[8451469]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8451471 'move' call_tmp[8451469](8451473 '!=' call_tmp[8451457] nil[32]))
        if call_tmp[8451469]
        {
          const-val call_tmp[8451478]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8451480]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (8451483 call init[1542524] initTemp[8451480] tmp[8451464])
          (8451486 'move' call_tmp[8451478] initTemp[8451480])
          const-val e[8451489]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8451491 'move' e[8451489] call_tmp[8451478])
          (8451494 'move' ret[8450706] 0)
          (8451498 call chpl__autoDestroy[3937692] e[8451489])
          gotoReturn _end__matchLiteralCommon[8451517] _end__matchLiteralCommon[8451517]
          (8451503 call chpl__autoDestroy[3937692] e[8451489])
        }
        {
          (8451506 '=' error[8450701] error[8450708])
          gotoErrorHandlingReturn _end__matchLiteralCommon[8451517] _end__matchLiteralCommon[8451517]
        }
      }
    }
    (8451514 'move' ret[8450706] 1)
    label _end__matchLiteralCommon[8451517]
    (8451519 'move' call_tmp[8450699] ret[8450706])
    val errorExists[8451522]:bool[19] "temp"
    (8451524 'move' errorExists[8451522](8451526 '!=' error[8450701] nil[32]))
    if errorExists[8451522]
    {
      (8451531 '=' i_error_out[8450690] error[8450701])
      gotoErrorHandlingReturn _endmatchLiteral[8451540] _endmatchLiteral[8451540]
    }
    (8451537 '=' ret[8450697] call_tmp[8450699])
    label _endmatchLiteral[8451540]
    (5468845 'move' _return_tmp_[5468843] ret[8450697])
    val errorExists[7302712]:bool[19] "temp"
    (7302717 'move' errorExists[7302712](7302714 '!=' error[5509892] nil[32]))
    if errorExists[7302712]
    {
      (5509898 '=' error_out[5509816] error[5509892])
      ref i_x[8621986]:map(string,owned ModuleSpecification?,false)[3283686] "temp"
      (8621990 'move' i_x[8621986](8621988 'set reference' ret[3350991]))
      const-ref _field_destructor_tmp_[8621993]:chpl__hashtable(string,owned ModuleSpecification?)[3283741] "temp"
      (8621995 'move' _field_destructor_tmp_[8621993](8621997 '.' i_x[8621986] table[3283671]))
      (8622001 call deinit[4215573] _field_destructor_tmp_[8621993])
      gotoErrorHandlingReturn _end_readField[3351060] _end_readField[3351060]
    }
    const-val call_tmp[3351012]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[7402177]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7402179 'move' coerce_tmp[7402177](7402181 '.v' name[3350799] buffLen[21281]))
    const-val call_tmp[7402184]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7402186 'move' call_tmp[7402184](7402188 '==' coerce_tmp[7402177] 0))
    (3351014 'move' call_tmp[3351012] call_tmp[7402184])
    const-val call_tmp[3351021]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351409]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351411 'move' call_tmp[7351409](7351413 'u!' call_tmp[3351012]))
    (3351023 'move' call_tmp[3351021] call_tmp[7351409])
    const-val call_tmp[3351028]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3351030 'move' call_tmp[3351028] call_tmp[3351021])
    if call_tmp[3351028]
    {
      const-ref call_tmp[3351037]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454871]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454873 'move' call_tmp[8454871](8454875 '.' this[3350797] reader[3313834]))
      (3351039 'move' call_tmp[3351037] call_tmp[8454871])
      val coerce_tmp[8454035]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454037 'move' coerce_tmp[8454035](8454039 '.v' call_tmp[3351037] _channel_internal[3276776]))
      (8454043 call qio_channel_revert_unlocked[166360] coerce_tmp[8454035])
    }
    (3373758 '=' ret[3350805] ret[3350991])
    label _end_readField[3351060]
    (5589384 '=' _retArg[5589382] ret[3350805])
    (5589386 return _void[46])
  }
  function AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851].readField[3373790](const  ref arg this[3373794]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851], const  ref arg name[3373796]:string[244], ref arg error_out[5510211]:Error[85511], ref arg _retArg[5589618]:list(string,false)[1950598]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479975]:list(string,false)[1950598] "temp"
    const-val ret[3373802]:list(string,false)[1950598] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3373812]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454677]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
    (8454679 'move' call_tmp[8454677](8454681 '.' this[3373794] _fieldOffsets[3313836]))
    (3373814 'move' call_tmp[3373812] call_tmp[8454677])
    const-val call_tmp[3373820]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3373822 'move' call_tmp[3373820](3373828 call contains[3315108] call_tmp[3373812] name[3373796]))
    const-val call_tmp[3373830]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3373832 'move' call_tmp[3373830] call_tmp[3373820])
    if call_tmp[3373830]
    {
      const-ref call_tmp[3373839]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454881]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454883 'move' call_tmp[8454881](8454885 '.' this[3373794] reader[3313834]))
      (3373841 'move' call_tmp[3373839] call_tmp[8454881])
      const-val _return_tmp_[5468863]:int(64)[10] "dead after last mention" "temp"
      val error[5510214]:Error[85511] "error variable" "temp"
      (5510216 'move' error[5510214] nil[32])
      (5468865 'move' _return_tmp_[5468863](3373851 call mark[3288983] call_tmp[3373839] error[5510214]))
      val errorExists[7302872]:bool[19] "temp"
      (7302877 'move' errorExists[7302872](7302874 '!=' error[5510214] nil[32]))
      if errorExists[7302872]
      {
        (5510220 '=' error_out[5510211] error[5510214])
        gotoErrorHandlingReturn _end_readField[3374057] _end_readField[3374057]
      }
      const-ref call_tmp[3373853]:int(64)[10] "dead after last mention" "maybe param" "temp"
      const-ref _this_tmp_[3374067]:map(string,int(64),false)[3288794] "dead after last mention" "temp"
      ref call_tmp[8454687]:map(string,int(64),false)[3288794] "dead after last mention" "maybe param" "temp"
      (8454689 'move' call_tmp[8454687](8454691 '.' this[3373794] _fieldOffsets[3313836]))
      (3374069 'move' _this_tmp_[3374067] call_tmp[8454687])
      val error[5510229]:Error[85511] "error variable" "temp"
      (5510231 'move' error[5510229] nil[32])
      (3373855 'move' call_tmp[3373853](3374075 call this[3315376] _this_tmp_[3374067] name[3373796] error[5510229]))
      val errorExists[7302880]:bool[19] "temp"
      (7302885 'move' errorExists[7302880](7302882 '!=' error[5510229] nil[32]))
      if errorExists[7302880]
      {
        (5510235 '=' error_out[5510211] error[5510229])
        gotoErrorHandlingReturn _end_readField[3374057] _end_readField[3374057]
      }
      const-ref call_tmp[3373863]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454891]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454893 'move' call_tmp[8454891](8454895 '.' this[3373794] reader[3313834]))
      (3373865 'move' call_tmp[3373863] call_tmp[8454891])
      const-val call_tmp[3373871]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3373873 'move' call_tmp[3373871](3373879 call offset[3289103] call_tmp[3373863]))
      const-val call_tmp[3373880]:int(64)[10] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[3374084]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3374088 'move' coerce_tmp[3374084](3374086 'deref' call_tmp[3373853]))
      const-val call_tmp[7378060]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378062 'move' call_tmp[7378060](7378064 '-' coerce_tmp[3374084] call_tmp[3373871]))
      (3373882 'move' call_tmp[3373880] call_tmp[7378060])
      const-val dist[3373888]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (3373890 'move' dist[3373888] call_tmp[3373880])
      const-ref call_tmp[3373894]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454901]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454903 'move' call_tmp[8454901](8454905 '.' this[3373794] reader[3313834]))
      (3373896 'move' call_tmp[3373894] call_tmp[8454901])
      val error[5510244]:Error[85511] "error variable" "temp"
      (5510246 'move' error[5510244] nil[32])
      (3373906 call advance[3335246] call_tmp[3373894] dist[3373888] error[5510244])
      val errorExists[7302888]:bool[19] "temp"
      (7302893 'move' errorExists[7302888](7302890 '!=' error[5510244] nil[32]))
      if errorExists[7302888]
      {
        (5510250 '=' error_out[5510211] error[5510244])
        gotoErrorHandlingReturn _end_readField[3374057] _end_readField[3374057]
      }
    }
    {
      const-val call_tmp[3373911]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7402194]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7402196 'move' coerce_tmp[7402194](7402198 '.v' name[3373796] buffLen[21281]))
      const-val call_tmp[7402201]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7402203 'move' call_tmp[7402201](7402205 '==' coerce_tmp[7402194] 0))
      (3373913 'move' call_tmp[3373911] call_tmp[7402201])
      const-val call_tmp[3373920]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[7351418]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7351420 'move' call_tmp[7351418](7351422 'u!' call_tmp[3373911]))
      (3373922 'move' call_tmp[3373920] call_tmp[7351418])
      const-val call_tmp[3373927]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3373929 'move' call_tmp[3373927] call_tmp[3373920])
      if call_tmp[3373927]
      {
        const-val call_tmp[3373936]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540334]:string[244] "temp"
        (3373941 call +[28065] "field '" name[3373796] ret_tmp[5540334])
        (5540337 'move' call_tmp[3373936] ret_tmp[5540334])
        const-val call_tmp[3373944]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[5540340]:string[244] "temp"
        (3373949 call +[28065] call_tmp[3373936] "' not found." ret_tmp[5540340])
        (5540343 'move' call_tmp[3373944] ret_tmp[5540340])
        const-val call_tmp[3373952]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[3374126]:IllegalArgumentError[85616] "dead after last mention" "temp"
        (3374128 'move' new_temp[3374126](3374113 call _new[1475209] call_tmp[3373944]))
        const-val initTemp[3374135]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
        (3374138 call init[1475364] initTemp[3374135] new_temp[3374126])
        (3373954 'move' call_tmp[3373952] initTemp[3374135])
        val call_tmp[3373959]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3374152]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[5547169]:owned Error[1498203] "temp"
        ref i_x[7645699]:owned IllegalArgumentError[1475882] "temp"
        (7645703 'move' i_x[7645699](7645701 'set reference' call_tmp[3373952]))
        ref i__retArg[7645705]:owned Error[1498203] "temp"
        (7645709 'move' i__retArg[7645705](7645707 'set reference' ret_tmp[5547169]))
        val _formal_tmp_x[7645712]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (7645714 'move' _formal_tmp_x[7645712] i_x[7645699])
        const-val ret[7645717]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[7645719]:owned IllegalArgumentError[1475882] "temp"
        (7645721 'move' i_this[7645719](7645723 'set reference' _formal_tmp_x[7645712]))
        val coerce_tmp[7645725]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645727 'move' coerce_tmp[7645725](7645729 '.v' i_this[7645719] chpl_p[1475877]))
        val call_tmp[7645732]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645734 'move' call_tmp[7645732](7645736 'cast' Error[85511] coerce_tmp[7645725]))
        val castPtr[7645739]:Error[85511] "dead at end of block" "insert auto destroy"
        (7645741 'move' castPtr[7645739] call_tmp[7645732])
        ref i_this[7645744]:owned IllegalArgumentError[1475882] "temp"
        (7645746 'move' i_this[7645744](7645748 'set reference' _formal_tmp_x[7645712]))
        val tmp[7645750]:IllegalArgumentError[85616] "temp"
        (7645752 'move' tmp[7645750](7645754 'cast' IllegalArgumentError[85616] nil[32]))
        (7645757 '.=' i_this[7645744] chpl_p[1475877] tmp[7645750])
        val coerce_tmp[7645761]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645763 'move' coerce_tmp[7645761](7645765 'cast' RootClass[236] call_tmp[7645732]))
        const-val call_tmp[7645768]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645770 'move' call_tmp[7645768](7645772 '==' coerce_tmp[7645761] nil[32]))
        if call_tmp[7645768]
        {
          (7645778 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7645781]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[7645783]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (7645786 call init[1499358] initTemp[7645783] castPtr[7645739])
        (7645789 'move' call_tmp[7645781] initTemp[7645783])
        (7645792 'move' ret[7645717] call_tmp[7645781])
        (7645796 call chpl__autoDestroy[3929468] _formal_tmp_x[7645712])
        (7645800 '=' i__retArg[7645705] ret[7645717])
        (5547172 'move' coerce_tmp[3374152] ret_tmp[5547169])
        const-val _formal_tmp_in_err[3374371]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (3374376 'move' _formal_tmp_in_err[3374371] coerce_tmp[3374152])
        (3373961 'move' call_tmp[3373959](3373964 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3374371]))
        val castedError[5510259]:Error[85511] "temp"
        (5510265 'move' castedError[5510259] call_tmp[3373959])
        (5510267 '=' error_out[5510211] castedError[5510259])
        ref i_x[7342810]:string[244] "temp"
        (7342814 'move' i_x[7342810](7342812 'set reference' call_tmp[3373944]))
        (7342818 call deinit[21354] i_x[7342810])
        ref i_x[7342822]:string[244] "temp"
        (7342826 'move' i_x[7342822](7342824 'set reference' call_tmp[3373936]))
        (7342830 call deinit[21354] i_x[7342822])
        gotoErrorHandlingReturn _end_readField[3374057] _end_readField[3374057]
        ref i_x[7342834]:string[244] "temp"
        (7342838 'move' i_x[7342834](7342836 'set reference' call_tmp[3373944]))
        (7342842 call deinit[21354] i_x[7342834])
        ref i_x[7342846]:string[244] "temp"
        (7342850 'move' i_x[7342846](7342848 'set reference' call_tmp[3373936]))
        (7342854 call deinit[21354] i_x[7342846])
      }
    }
    const-ref call_tmp[3373970]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454911]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454913 'move' call_tmp[8454911](8454915 '.' this[3373794] reader[3313834]))
    (3373972 'move' call_tmp[3373970] call_tmp[8454911])
    const-val call_tmp[3373978]:list(string,false)[1950598] "dead at end of block" "maybe param" "temp"
    val error[5510272]:Error[85511] "error variable" "temp"
    (5510274 'move' error[5510272] nil[32])
    const-val ret_tmp[5589624]:list(string,false)[1950598] "temp"
    (3373986 call read[3374382] call_tmp[3373970] error[5510272] ret_tmp[5589624])
    (5589627 'move' call_tmp[3373978] ret_tmp[5589624])
    val errorExists[7302896]:bool[19] "temp"
    (7302901 'move' errorExists[7302896](7302898 '!=' error[5510272] nil[32]))
    if errorExists[7302896]
    {
      (5510278 '=' error_out[5510211] error[5510272])
      gotoErrorHandlingReturn _end_readField[3374057] _end_readField[3374057]
    }
    const-val ret[3373988]:list(string,false)[1950598] "dead at end of block" "insert auto destroy"
    (3373990 'move' ret[3373988] call_tmp[3373978])
    const-ref call_tmp[3373994]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8454921]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8454923 'move' call_tmp[8454921](8454925 '.' this[3373794] reader[3313834]))
    (3373996 'move' call_tmp[3373994] call_tmp[8454921])
    val default_arg_ignoreWhitespace[3379416]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    const-val _return_tmp_[5468867]:bool[19] "dead after last mention" "temp"
    val error[5510287]:Error[85511] "error variable" "temp"
    (5510289 'move' error[5510287] nil[32])
    val inlineImm[8451544]:string[244] "temp"
    (8451547 'move' inlineImm[8451544] ",")
    ref i_literal[8451549]:string[244] "temp"
    (8451553 'move' i_literal[8451549](8451551 'set reference' inlineImm[8451544]))
    val inlineImm[8451555]:bool[19] "temp"
    (8451558 'move' inlineImm[8451555] 1)
    ref i_error_out[8451560]:Error[85511] "temp"
    (8451564 'move' i_error_out[8451560](8451562 'set reference' error[5510287]))
    val ret[8451567]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[8451569]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[8451571]:Error[85511] "error variable" "temp"
    (8451573 'move' error[8451571] nil[32])
    val ret[8451576]:bool[19] "dead after last mention" "RVV" "temp"
    val error[8451578]:Error[85511] "error variable" "temp"
    (8451580 'move' error[8451578] nil[32])
    ref call_tmp[8451583]:locale[234] "dead after last mention" "maybe param" "temp"
    (8451585 'move' call_tmp[8451583](8451587 '.' call_tmp[3373994] _home[3276771]))
    val coerce_tmp[8451590]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451592 'move' coerce_tmp[8451590](8451594 '.v' call_tmp[8451583] _instance[135293]))
    val coerce_tmp[8451597]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451599 'move' coerce_tmp[8451597](8451601 'cast' RootClass[236] coerce_tmp[8451590]))
    const-val call_tmp[8451604]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451606 'move' call_tmp[8451604](8451608 '==' coerce_tmp[8451597] nil[32]))
    if call_tmp[8451604]
    {
      (8451614 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8451617]:Error[85511] "error variable" "temp"
    (8451619 'move' error[8451617] nil[32])
    const-val err[8451622]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8451624]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451626 'move' call_tmp[8451624](8451628 'cast' int(32)[66] 0))
    const-val call_tmp[8451631]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451633 'move' call_tmp[8451631](8451636 call qio_int_to_err[12856] call_tmp[8451624]))
    (8451638 'move' err[8451622] call_tmp[8451631])
    val coerce_tmp[8451641]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451643 'move' coerce_tmp[8451641](8451645 '.v' call_tmp[3373994] _channel_internal[3276776]))
    const-val call_tmp[8451648]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451650 'move' call_tmp[8451648](8451652 'ptr_eq' coerce_tmp[8451641] nil[32]))
    if call_tmp[8451648]
    {
      const-val call_tmp[8451657]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8451659]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8451661 'move' coerce_tmp[8451659](8451663 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8451666]:owned SystemError[1554765] "temp"
      (8451669 call createSystemError[14072] coerce_tmp[8451659] "Operation attempted on an invalid fileReader" ret_tmp[8451666])
      (8451673 'move' call_tmp[8451657] ret_tmp[8451666])
      val call_tmp[8451676]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8451678]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8451680]:owned Error[1498203] "temp"
      ref i_x[8451682]:owned SystemError[1554765] "temp"
      (8451684 'move' i_x[8451682](8451686 'set reference' call_tmp[8451657]))
      ref i__retArg[8451688]:owned Error[1498203] "temp"
      (8451690 'move' i__retArg[8451688](8451692 'set reference' ret_tmp[8451680]))
      val _formal_tmp_x[8451694]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8451696 'move' _formal_tmp_x[8451694] i_x[8451682])
      const-val ret[8451699]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8451701]:owned SystemError[1554765] "temp"
      (8451703 'move' i_this[8451701](8451705 'set reference' _formal_tmp_x[8451694]))
      val coerce_tmp[8451707]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8451709 'move' coerce_tmp[8451707](8451711 '.v' i_this[8451701] chpl_p[1554760]))
      val call_tmp[8451714]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8451716 'move' call_tmp[8451714](8451718 'cast' Error[85511] coerce_tmp[8451707]))
      val castPtr[8451721]:Error[85511] "dead at end of block" "insert auto destroy"
      (8451723 'move' castPtr[8451721] call_tmp[8451714])
      ref i_this[8451726]:owned SystemError[1554765] "temp"
      (8451728 'move' i_this[8451726](8451730 'set reference' _formal_tmp_x[8451694]))
      val tmp[8451732]:SystemError[13599] "temp"
      (8451734 'move' tmp[8451732](8451736 'cast' SystemError[13599] nil[32]))
      (8451739 '.=' i_this[8451726] chpl_p[1554760] tmp[8451732])
      val coerce_tmp[8451743]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8451745 'move' coerce_tmp[8451743](8451747 'cast' RootClass[236] call_tmp[8451714]))
      const-val call_tmp[8451750]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8451752 'move' call_tmp[8451750](8451754 '==' coerce_tmp[8451743] nil[32]))
      if call_tmp[8451750]
      {
        (8451760 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8451763]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8451765]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8451768 call init[1499358] initTemp[8451765] castPtr[8451721])
      (8451771 'move' call_tmp[8451763] initTemp[8451765])
      (8451774 'move' ret[8451699] call_tmp[8451763])
      (8451778 call chpl__autoDestroy[3968549] _formal_tmp_x[8451694])
      (8451780 '=' i__retArg[8451688] ret[8451699])
      (8451783 'move' coerce_tmp[8451678] ret_tmp[8451680])
      const-val _formal_tmp_in_err[8451786]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8451788 'move' _formal_tmp_in_err[8451786] coerce_tmp[8451678])
      (8451791 'move' call_tmp[8451676](8451794 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8451786]))
      (8451796 '=' error[8451617] call_tmp[8451676])
      gotoErrorHandlingReturn _endlock[8451859] _endlock[8451859]
    }
    const-val call_tmp[8451802]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451804 'move' call_tmp[8451802](8451807 call qio_err_iserr[12868] err[8451622]))
    const-val call_tmp[8451809]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8451811 'move' call_tmp[8451809](8451813 '!=' call_tmp[8451802] 0))
    if call_tmp[8451809]
    {
      val error[8451818]:Error[85511] "error variable" "temp"
      (8451820 'move' error[8451818] nil[32])
      (8451824 call _ch_ioerror[3285336] call_tmp[3373994] err[8451622] "in lock" error[8451818])
      val errorExists[8451829]:bool[19] "temp"
      (8451831 'move' errorExists[8451829](8451833 '!=' error[8451818] nil[32]))
      if errorExists[8451829]
      {
        gotoErrorHandling handler[8451841] handler[8451841]
      }
      label handler[8451841]
      val errorExists[8451843]:bool[19] "temp"
      (8451845 'move' errorExists[8451843](8451847 '!=' error[8451818] nil[32]))
      if errorExists[8451843]
      {
        (8451852 '=' error[8451617] error[8451818])
        gotoErrorHandlingReturn _endlock[8451859] _endlock[8451859]
      }
    }
    label _endlock[8451859]
    val errorExists[8451861]:bool[19] "temp"
    (8451863 'move' errorExists[8451861](8451865 '!=' error[8451617] nil[32]))
    if errorExists[8451861]
    {
      gotoErrorHandling handler[8451873] handler[8451873]
    }
    label handler[8451873]
    val errorExists[8451875]:bool[19] "temp"
    (8451877 'move' errorExists[8451875](8451879 '!=' error[8451617] nil[32]))
    if errorExists[8451875]
    {
      (8451885 call chpl_uncaught_error[87456] error[8451617])
    }
    const-val call_tmp[8451888]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8451890]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8451892]:string[244] "dead at end of block" "insert auto destroy"
    (8451895 call init[21321] ret[8451892])
    const-val coerce_tmp[8451897]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451899 'move' coerce_tmp[8451897](8451901 '.v' i_literal[8451549] cachedNumCodepoints[21293]))
    (8451904 '.=' ret[8451892] cachedNumCodepoints[21293] coerce_tmp[8451897])
    (8451909 call initWithBorrowedBuffer[1470549] ret[8451892] i_literal[8451549])
    (8451912 '=' ret[8451890] ret[8451892])
    (8451915 'move' call_tmp[8451888] ret[8451890])
    val coerce_tmp[8451918]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8451920 'move' coerce_tmp[8451918](8451922 '.v' call_tmp[8451888] buff[21299]))
    (8451925 'noop')
    val call_tmp[8451926]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8451928 'move' call_tmp[8451926](8451930 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8451918]))
    val ret[8451933]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8451935 '=' ret[8451933](8451937 '.v' i_literal[8451549] buffLen[21281]))
    const-val call_tmp[8451940]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8451942]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451944 'move' coerce_tmp[8451942](8451946 'cast' int(32)[66] 0))
    val coerce_tmp[8451949]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451951 'move' coerce_tmp[8451949](8451953 '.v' call_tmp[3373994] _channel_internal[3276776]))
    const-val coerce_tmp[8451956]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8451958 'move' coerce_tmp[8451956](8451960 'cast' int(32)[66] inlineImm[8451555]))
    (8451963 'move' call_tmp[8451940](8451966 call qio_channel_scan_literal[167758] coerce_tmp[8451942] coerce_tmp[8451949] call_tmp[8451926] ret[8451933] coerce_tmp[8451956]))
    const-val err[8451972]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8451974 'move' err[8451972] call_tmp[8451940])
    const-val action[8451977]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8451979 'move' action[8451977] "matching")
    val error[8451982]:Error[85511] "error variable" "temp"
    (8451984 'move' error[8451982] nil[32])
    ref i_action[8451987]:string[244] "temp"
    (8451989 'move' i_action[8451987](8451991 'set reference' action[8451977]))
    val inlineImm[8451993]:bool[19] "temp"
    (8451995 'move' inlineImm[8451993] 1)
    const-val call_tmp[8451998]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8452000 'move' call_tmp[8451998](8452003 call qio_err_to_int[12844] call_tmp[8451940]))
    const-val call_tmp[8452005]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8452007 'move' call_tmp[8452005](8452009 'cast' int(32)[66] 0))
    const-val call_tmp[8452012]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8452014 'move' call_tmp[8452012](8452016 '==' call_tmp[8451998] call_tmp[8452005]))
    const-val call_tmp[8452019]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8452021 'move' call_tmp[8452019](8452023 'u!' call_tmp[8452012]))
    if call_tmp[8452019]
    {
      const-val call_tmp[8452027]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8452029]:string[244] "temp"
      (8452032 call literalErrorHelper[3112834] i_literal[8451549] i_action[8451987] inlineImm[8451993] ret_tmp[8452029])
      (8452037 'move' call_tmp[8452027] ret_tmp[8452029])
      val msg[8452040]:string[244] "dead at end of block" "insert auto destroy"
      (8452042 'move' msg[8452040] call_tmp[8452027])
      const-val call_tmp[8452045]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8452047 'move' call_tmp[8452045](8452050 call qio_err_to_int[12844] err[8451972]))
      const-val call_tmp[8452052]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8452054 'move' call_tmp[8452052](8452056 '==' call_tmp[8452045] EILSEQ[11191]))
      if call_tmp[8452052]
      {
        const-val call_tmp[8452061]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8452063]:string[244] "temp"
        (8452066 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8452063])
        (8452068 'move' call_tmp[8452061] ret_tmp[8452063])
        const-val call_tmp[8452071]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8452073]:string[244] "temp"
        (8452076 call +[28065] call_tmp[8452061] "Error: " ret_tmp[8452073])
        (8452080 'move' call_tmp[8452071] ret_tmp[8452073])
        const-val call_tmp[8452083]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8452085]:string[244] "temp"
        (8452088 call +[28065] call_tmp[8452071] msg[8452040] ret_tmp[8452085])
        (8452092 'move' call_tmp[8452083] ret_tmp[8452085])
        (8452096 call =[28046] msg[8452040] call_tmp[8452083])
        ref i_x[8452099]:string[244] "temp"
        (8452101 'move' i_x[8452099](8452103 'set reference' call_tmp[8452083]))
        (8452106 call deinit[21354] i_x[8452099])
        ref i_x[8452108]:string[244] "temp"
        (8452110 'move' i_x[8452108](8452112 'set reference' call_tmp[8452071]))
        (8452115 call deinit[21354] i_x[8452108])
        ref i_x[8452117]:string[244] "temp"
        (8452119 'move' i_x[8452117](8452121 'set reference' call_tmp[8452061]))
        (8452124 call deinit[21354] i_x[8452117])
      }
      val error[8452127]:Error[85511] "error variable" "temp"
      (8452129 'move' error[8452127] nil[32])
      (8452133 call _ch_ioerror[3285336] call_tmp[3373994] err[8451972] msg[8452040] error[8452127])
      val errorExists[8452138]:bool[19] "temp"
      (8452140 'move' errorExists[8452138](8452142 '!=' error[8452127] nil[32]))
      if errorExists[8452138]
      {
        gotoErrorHandling handler[8452150] handler[8452150]
      }
      label handler[8452150]
      val errorExists[8452152]:bool[19] "temp"
      (8452154 'move' errorExists[8452152](8452156 '!=' error[8452127] nil[32]))
      if errorExists[8452152]
      {
        (8452161 '=' error[8451982] error[8452127])
        ref i_x[8452164]:string[244] "temp"
        (8452166 'move' i_x[8452164](8452168 'set reference' msg[8452040]))
        (8452171 call deinit[21354] i_x[8452164])
        gotoErrorHandlingReturn _end_checkLiteralError[8452186] _end_checkLiteralError[8452186]
      }
      ref i_x[8452176]:string[244] "temp"
      (8452178 'move' i_x[8452176](8452180 'set reference' msg[8452040]))
      (8452183 call deinit[21354] i_x[8452176])
    }
    label _end_checkLiteralError[8452186]
    val errorExists[8452188]:bool[19] "temp"
    (8452190 'move' errorExists[8452188](8452192 '!=' error[8451982] nil[32]))
    if errorExists[8452188]
    {
      gotoErrorHandling handler[8452200] handler[8452200]
    }
    label handler[8452200]
    val errorExists[8452202]:bool[19] "temp"
    (8452204 'move' errorExists[8452202](8452206 '!=' error[8451982] nil[32]))
    if errorExists[8452202]
    {
      (8452211 '=' error[8451578] error[8451982])
      ref i_x[8452214]:string[244] "temp"
      (8452216 'move' i_x[8452214](8452218 'set reference' action[8451977]))
      (8452221 call deinit[21354] i_x[8452214])
      ref i_x[8452223]:string[244] "temp"
      (8452225 'move' i_x[8452223](8452227 'set reference' call_tmp[8451888]))
      (8452230 call deinit[21354] i_x[8452223])
      gotoErrorHandlingReturn _end_readLiteralCommon[8452253] _end_readLiteralCommon[8452253]
    }
    ref i_x[8452235]:string[244] "temp"
    (8452237 'move' i_x[8452235](8452239 'set reference' action[8451977]))
    (8452242 call deinit[21354] i_x[8452235])
    ref i_x[8452244]:string[244] "temp"
    (8452246 'move' i_x[8452244](8452248 'set reference' call_tmp[8451888]))
    (8452251 call deinit[21354] i_x[8452244])
    label _end_readLiteralCommon[8452253]
    val errorExists[8452255]:bool[19] "temp"
    (8452257 'move' errorExists[8452255](8452259 '!=' error[8451578] nil[32]))
    if errorExists[8452255]
    {
      gotoErrorHandling handler[8452267] handler[8452267]
    }
    label handler[8452267]
    val errorExists[8452269]:bool[19] "temp"
    (8452271 'move' errorExists[8452269](8452273 '!=' error[8451578] nil[32]))
    if errorExists[8452269]
    {
      val call_tmp[8452278]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
      (8452280 'move' call_tmp[8452278](8452282 'dynamic_cast' BadFormatError[15094] error[8451578]))
      val tmp[8452285]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
      (8452287 'move' tmp[8452285] call_tmp[8452278])
      const-val call_tmp[8452290]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8452292 'move' call_tmp[8452290](8452294 '!=' call_tmp[8452278] nil[32]))
      if call_tmp[8452290]
      {
        const-val call_tmp[8452299]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[8452301]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
        (8452304 call init[1543824] initTemp[8452301] tmp[8452285])
        (8452307 'move' call_tmp[8452299] initTemp[8452301])
        const-val e[8452310]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
        (8452312 'move' e[8452310] call_tmp[8452299])
        (8452315 'move' ret[8451576] 0)
        (8452319 call chpl__autoDestroy[3940454] e[8452310])
        gotoReturn _end__matchLiteralCommon[8452387] _end__matchLiteralCommon[8452387]
        (8452324 call chpl__autoDestroy[3940454] e[8452310])
      }
      {
        val call_tmp[8452327]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (8452329 'move' call_tmp[8452327](8452331 'dynamic_cast' EofError[14808] error[8451578]))
        val tmp[8452334]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
        (8452336 'move' tmp[8452334] call_tmp[8452327])
        const-val call_tmp[8452339]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8452341 'move' call_tmp[8452339](8452343 '!=' call_tmp[8452327] nil[32]))
        if call_tmp[8452339]
        {
          const-val call_tmp[8452348]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8452350]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (8452353 call init[1542524] initTemp[8452350] tmp[8452334])
          (8452356 'move' call_tmp[8452348] initTemp[8452350])
          const-val e[8452359]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8452361 'move' e[8452359] call_tmp[8452348])
          (8452364 'move' ret[8451576] 0)
          (8452368 call chpl__autoDestroy[3937692] e[8452359])
          gotoReturn _end__matchLiteralCommon[8452387] _end__matchLiteralCommon[8452387]
          (8452373 call chpl__autoDestroy[3937692] e[8452359])
        }
        {
          (8452376 '=' error[8451571] error[8451578])
          gotoErrorHandlingReturn _end__matchLiteralCommon[8452387] _end__matchLiteralCommon[8452387]
        }
      }
    }
    (8452384 'move' ret[8451576] 1)
    label _end__matchLiteralCommon[8452387]
    (8452389 'move' call_tmp[8451569] ret[8451576])
    val errorExists[8452392]:bool[19] "temp"
    (8452394 'move' errorExists[8452392](8452396 '!=' error[8451571] nil[32]))
    if errorExists[8452392]
    {
      (8452401 '=' i_error_out[8451560] error[8451571])
      gotoErrorHandlingReturn _endmatchLiteral[8452410] _endmatchLiteral[8452410]
    }
    (8452407 '=' ret[8451567] call_tmp[8451569])
    label _endmatchLiteral[8452410]
    (5468869 'move' _return_tmp_[5468867] ret[8451567])
    val errorExists[7302904]:bool[19] "temp"
    (7302909 'move' errorExists[7302904](7302906 '!=' error[5510287] nil[32]))
    if errorExists[7302904]
    {
      (5510293 '=' error_out[5510211] error[5510287])
      ref i_x[8598850]:list(string,false)[1950598] "temp"
      (8598854 'move' i_x[8598850](8598852 'set reference' ret[3373988]))
      (8598858 call _fireAllDestructors[3377679] i_x[8598850])
      (8598861 call _freeAllArrays[3377842] i_x[8598850])
      gotoErrorHandlingReturn _end_readField[3374057] _end_readField[3374057]
    }
    const-val call_tmp[3374009]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[7402211]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7402213 'move' coerce_tmp[7402211](7402215 '.v' name[3373796] buffLen[21281]))
    const-val call_tmp[7402218]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7402220 'move' call_tmp[7402218](7402222 '==' coerce_tmp[7402211] 0))
    (3374011 'move' call_tmp[3374009] call_tmp[7402218])
    const-val call_tmp[3374018]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351445]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351447 'move' call_tmp[7351445](7351449 'u!' call_tmp[3374009]))
    (3374020 'move' call_tmp[3374018] call_tmp[7351445])
    const-val call_tmp[3374025]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3374027 'move' call_tmp[3374025] call_tmp[3374018])
    if call_tmp[3374025]
    {
      const-ref call_tmp[3374034]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454931]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454933 'move' call_tmp[8454931](8454935 '.' this[3373794] reader[3313834]))
      (3374036 'move' call_tmp[3374034] call_tmp[8454931])
      val coerce_tmp[8454061]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454063 'move' coerce_tmp[8454061](8454065 '.v' call_tmp[3374034] _channel_internal[3276776]))
      (8454069 call qio_channel_revert_unlocked[166360] coerce_tmp[8454061])
    }
    (3379432 '=' ret[3373802] ret[3373988])
    label _end_readField[3374057]
    (5589620 '=' _retArg[5589618] ret[3373802])
    (5589622 return _void[46])
  }
  function AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851].endClass[3379444](const  ref arg this[3379448]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851], ref arg error_out[5510608]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3379454]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8462036]:bool[19] "dead after last mention" "maybe param" "temp"
    (8462038 'move' call_tmp[8462036](8462040 '.' this[3379448] _parent[3313847]))
    (3379456 'move' call_tmp[3379454] call_tmp[8462036])
    const-val call_tmp[3379462]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3379579]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3379583 'move' coerce_tmp[3379579](3379581 'deref' call_tmp[3379454]))
    const-val call_tmp[7351454]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351456 'move' call_tmp[7351454](7351458 'u!' coerce_tmp[3379579]))
    (3379464 'move' call_tmp[3379462] call_tmp[7351454])
    const-val call_tmp[3379469]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3379471 'move' call_tmp[3379469] call_tmp[3379462])
    if call_tmp[3379469]
    {
      const-ref call_tmp[3379478]:int(64)[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8462050]:int(64)[10] "dead after last mention" "maybe param" "temp"
      (8462052 'move' call_tmp[8462050](8462054 '.' this[3379448] _lastPos[3313842]))
      (3379480 'move' call_tmp[3379478] call_tmp[8462050])
      const-ref call_tmp[3379486]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454941]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454943 'move' call_tmp[8454941](8454945 '.' this[3379448] reader[3313834]))
      (3379488 'move' call_tmp[3379486] call_tmp[8454941])
      const-val call_tmp[3379494]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3379496 'move' call_tmp[3379494](3379502 call offset[3289103] call_tmp[3379486]))
      const-val call_tmp[3379503]:int(64)[10] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[3379616]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3379620 'move' coerce_tmp[3379616](3379618 'deref' call_tmp[3379478]))
      const-val call_tmp[7378070]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378072 'move' call_tmp[7378070](7378074 '-' coerce_tmp[3379616] call_tmp[3379494]))
      (3379505 'move' call_tmp[3379503] call_tmp[7378070])
      const-val dist[3379511]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (3379513 'move' dist[3379511] call_tmp[3379503])
      const-ref call_tmp[3379517]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454951]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454953 'move' call_tmp[8454951](8454955 '.' this[3379448] reader[3313834]))
      (3379519 'move' call_tmp[3379517] call_tmp[8454951])
      val error[5510613]:Error[85511] "error variable" "temp"
      (5510615 'move' error[5510613] nil[32])
      (3379529 call advance[3335246] call_tmp[3379517] dist[3379511] error[5510613])
      val errorExists[7303056]:bool[19] "temp"
      (7303061 'move' errorExists[7303056](7303058 '!=' error[5510613] nil[32]))
      if errorExists[7303056]
      {
        (5510619 '=' error_out[5510608] error[5510613])
        gotoErrorHandlingReturn _endendClass[5510610] _endendClass[5510610]
      }
      const-ref call_tmp[3379533]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8454961]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8454963 'move' call_tmp[8454961](8454965 '.' this[3379448] reader[3313834]))
      (3379535 'move' call_tmp[3379533] call_tmp[8454961])
      val default_arg_ignoreWhitespace[3379631]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      val error[5510628]:Error[85511] "error variable" "temp"
      (5510630 'move' error[5510628] nil[32])
      val inlineImm[8442341]:string[244] "temp"
      (8442344 'move' inlineImm[8442341] "}")
      ref i_literal[8442346]:string[244] "temp"
      (8442350 'move' i_literal[8442346](8442348 'set reference' inlineImm[8442341]))
      val inlineImm[8442352]:bool[19] "temp"
      (8442355 'move' inlineImm[8442352] 1)
      ref i_error_out[8442357]:Error[85511] "temp"
      (8442361 'move' i_error_out[8442357](8442359 'set reference' error[5510628]))
      val ret[8442364]:void[4] "dead after last mention" "RVV" "temp"
      val error[8442366]:Error[85511] "error variable" "temp"
      (8442368 'move' error[8442366] nil[32])
      ref call_tmp[8442371]:locale[234] "dead after last mention" "maybe param" "temp"
      (8442373 'move' call_tmp[8442371](8442375 '.' call_tmp[3379533] _home[3276771]))
      val coerce_tmp[8442378]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8442380 'move' coerce_tmp[8442378](8442382 '.v' call_tmp[8442371] _instance[135293]))
      val coerce_tmp[8442385]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8442387 'move' coerce_tmp[8442385](8442389 'cast' RootClass[236] coerce_tmp[8442378]))
      const-val call_tmp[8442392]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442394 'move' call_tmp[8442392](8442396 '==' coerce_tmp[8442385] nil[32]))
      if call_tmp[8442392]
      {
        (8442402 call nilCheckHalt[392] "argument to ! is nil")
      }
      val error[8442405]:Error[85511] "error variable" "temp"
      (8442407 'move' error[8442405] nil[32])
      const-val err[8442410]:errorCode[12828] "dead at end of block" "insert auto destroy"
      const-val call_tmp[8442412]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442414 'move' call_tmp[8442412](8442416 'cast' int(32)[66] 0))
      const-val call_tmp[8442419]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442421 'move' call_tmp[8442419](8442424 call qio_int_to_err[12856] call_tmp[8442412]))
      (8442426 'move' err[8442410] call_tmp[8442419])
      val coerce_tmp[8442429]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8442431 'move' coerce_tmp[8442429](8442433 '.v' call_tmp[3379533] _channel_internal[3276776]))
      const-val call_tmp[8442436]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442438 'move' call_tmp[8442436](8442440 'ptr_eq' coerce_tmp[8442429] nil[32]))
      if call_tmp[8442436]
      {
        const-val call_tmp[8442445]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val coerce_tmp[8442447]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8442449 'move' coerce_tmp[8442447](8442451 'cast' int(64)[10] EINVAL[11206]))
        const-val ret_tmp[8442454]:owned SystemError[1554765] "temp"
        (8442457 call createSystemError[14072] coerce_tmp[8442447] "Operation attempted on an invalid fileReader" ret_tmp[8442454])
        (8442461 'move' call_tmp[8442445] ret_tmp[8442454])
        val call_tmp[8442464]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[8442466]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[8442468]:owned Error[1498203] "temp"
        ref i_x[8442470]:owned SystemError[1554765] "temp"
        (8442472 'move' i_x[8442470](8442474 'set reference' call_tmp[8442445]))
        ref i__retArg[8442476]:owned Error[1498203] "temp"
        (8442478 'move' i__retArg[8442476](8442480 'set reference' ret_tmp[8442468]))
        val _formal_tmp_x[8442482]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (8442484 'move' _formal_tmp_x[8442482] i_x[8442470])
        const-val ret[8442487]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[8442489]:owned SystemError[1554765] "temp"
        (8442491 'move' i_this[8442489](8442493 'set reference' _formal_tmp_x[8442482]))
        val coerce_tmp[8442495]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8442497 'move' coerce_tmp[8442495](8442499 '.v' i_this[8442489] chpl_p[1554760]))
        val call_tmp[8442502]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (8442504 'move' call_tmp[8442502](8442506 'cast' Error[85511] coerce_tmp[8442495]))
        val castPtr[8442509]:Error[85511] "dead at end of block" "insert auto destroy"
        (8442511 'move' castPtr[8442509] call_tmp[8442502])
        ref i_this[8442514]:owned SystemError[1554765] "temp"
        (8442516 'move' i_this[8442514](8442518 'set reference' _formal_tmp_x[8442482]))
        val tmp[8442520]:SystemError[13599] "temp"
        (8442522 'move' tmp[8442520](8442524 'cast' SystemError[13599] nil[32]))
        (8442527 '.=' i_this[8442514] chpl_p[1554760] tmp[8442520])
        val coerce_tmp[8442531]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8442533 'move' coerce_tmp[8442531](8442535 'cast' RootClass[236] call_tmp[8442502]))
        const-val call_tmp[8442538]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8442540 'move' call_tmp[8442538](8442542 '==' coerce_tmp[8442531] nil[32]))
        if call_tmp[8442538]
        {
          (8442548 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[8442551]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[8442553]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (8442556 call init[1499358] initTemp[8442553] castPtr[8442509])
        (8442559 'move' call_tmp[8442551] initTemp[8442553])
        (8442562 'move' ret[8442487] call_tmp[8442551])
        (8442566 call chpl__autoDestroy[3968549] _formal_tmp_x[8442482])
        (8442568 '=' i__retArg[8442476] ret[8442487])
        (8442571 'move' coerce_tmp[8442466] ret_tmp[8442468])
        const-val _formal_tmp_in_err[8442574]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (8442576 'move' _formal_tmp_in_err[8442574] coerce_tmp[8442466])
        (8442579 'move' call_tmp[8442464](8442582 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8442574]))
        (8442584 '=' error[8442405] call_tmp[8442464])
        gotoErrorHandlingReturn _endlock[8442647] _endlock[8442647]
      }
      const-val call_tmp[8442590]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442592 'move' call_tmp[8442590](8442595 call qio_err_iserr[12868] err[8442410]))
      const-val call_tmp[8442597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442599 'move' call_tmp[8442597](8442601 '!=' call_tmp[8442590] 0))
      if call_tmp[8442597]
      {
        val error[8442606]:Error[85511] "error variable" "temp"
        (8442608 'move' error[8442606] nil[32])
        (8442612 call _ch_ioerror[3285336] call_tmp[3379533] err[8442410] "in lock" error[8442606])
        val errorExists[8442617]:bool[19] "temp"
        (8442619 'move' errorExists[8442617](8442621 '!=' error[8442606] nil[32]))
        if errorExists[8442617]
        {
          gotoErrorHandling handler[8442629] handler[8442629]
        }
        label handler[8442629]
        val errorExists[8442631]:bool[19] "temp"
        (8442633 'move' errorExists[8442631](8442635 '!=' error[8442606] nil[32]))
        if errorExists[8442631]
        {
          (8442640 '=' error[8442405] error[8442606])
          gotoErrorHandlingReturn _endlock[8442647] _endlock[8442647]
        }
      }
      label _endlock[8442647]
      val errorExists[8442649]:bool[19] "temp"
      (8442651 'move' errorExists[8442649](8442653 '!=' error[8442405] nil[32]))
      if errorExists[8442649]
      {
        gotoErrorHandling handler[8442661] handler[8442661]
      }
      label handler[8442661]
      val errorExists[8442663]:bool[19] "temp"
      (8442665 'move' errorExists[8442663](8442667 '!=' error[8442405] nil[32]))
      if errorExists[8442663]
      {
        (8442673 call chpl_uncaught_error[87456] error[8442405])
      }
      const-val call_tmp[8442676]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret[8442678]:string[244] "dead after last mention" "RVV" "temp"
      val ret[8442680]:string[244] "dead at end of block" "insert auto destroy"
      (8442683 call init[21321] ret[8442680])
      const-val coerce_tmp[8442685]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8442687 'move' coerce_tmp[8442685](8442689 '.v' i_literal[8442346] cachedNumCodepoints[21293]))
      (8442692 '.=' ret[8442680] cachedNumCodepoints[21293] coerce_tmp[8442685])
      (8442697 call initWithBorrowedBuffer[1470549] ret[8442680] i_literal[8442346])
      (8442700 '=' ret[8442678] ret[8442680])
      (8442703 'move' call_tmp[8442676] ret[8442678])
      val coerce_tmp[8442706]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (8442708 'move' coerce_tmp[8442706](8442710 '.v' call_tmp[8442676] buff[21299]))
      (8442713 'noop')
      val call_tmp[8442714]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (8442716 'move' call_tmp[8442714](8442718 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8442706]))
      val ret[8442721]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8442723 '=' ret[8442721](8442725 '.v' i_literal[8442346] buffLen[21281]))
      const-val call_tmp[8442728]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[8442730]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8442732 'move' coerce_tmp[8442730](8442734 'cast' int(32)[66] 0))
      val coerce_tmp[8442737]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8442739 'move' coerce_tmp[8442737](8442741 '.v' call_tmp[3379533] _channel_internal[3276776]))
      const-val coerce_tmp[8442744]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8442746 'move' coerce_tmp[8442744](8442748 'cast' int(32)[66] inlineImm[8442352]))
      (8442751 'move' call_tmp[8442728](8442754 call qio_channel_scan_literal[167758] coerce_tmp[8442730] coerce_tmp[8442737] call_tmp[8442714] ret[8442721] coerce_tmp[8442744]))
      const-val err[8442760]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
      (8442762 'move' err[8442760] call_tmp[8442728])
      const-val action[8442765]:string[244] "dead at end of block" "const" "insert auto destroy"
      (8442767 'move' action[8442765] "reading")
      val error[8442770]:Error[85511] "error variable" "temp"
      (8442772 'move' error[8442770] nil[32])
      ref i_action[8442775]:string[244] "temp"
      (8442777 'move' i_action[8442775](8442779 'set reference' action[8442765]))
      val inlineImm[8442781]:bool[19] "temp"
      (8442783 'move' inlineImm[8442781] 1)
      const-val call_tmp[8442786]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442788 'move' call_tmp[8442786](8442791 call qio_err_to_int[12844] call_tmp[8442728]))
      const-val call_tmp[8442793]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442795 'move' call_tmp[8442793](8442797 'cast' int(32)[66] 0))
      const-val call_tmp[8442800]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442802 'move' call_tmp[8442800](8442804 '==' call_tmp[8442786] call_tmp[8442793]))
      const-val call_tmp[8442807]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442809 'move' call_tmp[8442807](8442811 'u!' call_tmp[8442800]))
      if call_tmp[8442807]
      {
        const-val call_tmp[8442815]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[8442817]:string[244] "temp"
        (8442820 call literalErrorHelper[3112834] i_literal[8442346] i_action[8442775] inlineImm[8442781] ret_tmp[8442817])
        (8442825 'move' call_tmp[8442815] ret_tmp[8442817])
        val msg[8442828]:string[244] "dead at end of block" "insert auto destroy"
        (8442830 'move' msg[8442828] call_tmp[8442815])
        const-val call_tmp[8442833]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (8442835 'move' call_tmp[8442833](8442838 call qio_err_to_int[12844] err[8442760]))
        const-val call_tmp[8442840]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8442842 'move' call_tmp[8442840](8442844 '==' call_tmp[8442833] EILSEQ[11191]))
        if call_tmp[8442840]
        {
          const-val call_tmp[8442849]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8442851]:string[244] "temp"
          (8442854 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8442851])
          (8442856 'move' call_tmp[8442849] ret_tmp[8442851])
          const-val call_tmp[8442859]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8442861]:string[244] "temp"
          (8442864 call +[28065] call_tmp[8442849] "Error: " ret_tmp[8442861])
          (8442868 'move' call_tmp[8442859] ret_tmp[8442861])
          const-val call_tmp[8442871]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8442873]:string[244] "temp"
          (8442876 call +[28065] call_tmp[8442859] msg[8442828] ret_tmp[8442873])
          (8442880 'move' call_tmp[8442871] ret_tmp[8442873])
          (8442884 call =[28046] msg[8442828] call_tmp[8442871])
          ref i_x[8442887]:string[244] "temp"
          (8442889 'move' i_x[8442887](8442891 'set reference' call_tmp[8442871]))
          (8442894 call deinit[21354] i_x[8442887])
          ref i_x[8442896]:string[244] "temp"
          (8442898 'move' i_x[8442896](8442900 'set reference' call_tmp[8442859]))
          (8442903 call deinit[21354] i_x[8442896])
          ref i_x[8442905]:string[244] "temp"
          (8442907 'move' i_x[8442905](8442909 'set reference' call_tmp[8442849]))
          (8442912 call deinit[21354] i_x[8442905])
        }
        val error[8442915]:Error[85511] "error variable" "temp"
        (8442917 'move' error[8442915] nil[32])
        (8442921 call _ch_ioerror[3285336] call_tmp[3379533] err[8442760] msg[8442828] error[8442915])
        val errorExists[8442926]:bool[19] "temp"
        (8442928 'move' errorExists[8442926](8442930 '!=' error[8442915] nil[32]))
        if errorExists[8442926]
        {
          gotoErrorHandling handler[8442938] handler[8442938]
        }
        label handler[8442938]
        val errorExists[8442940]:bool[19] "temp"
        (8442942 'move' errorExists[8442940](8442944 '!=' error[8442915] nil[32]))
        if errorExists[8442940]
        {
          (8442949 '=' error[8442770] error[8442915])
          ref i_x[8442952]:string[244] "temp"
          (8442954 'move' i_x[8442952](8442956 'set reference' msg[8442828]))
          (8442959 call deinit[21354] i_x[8442952])
          gotoErrorHandlingReturn _end_checkLiteralError[8442974] _end_checkLiteralError[8442974]
        }
        ref i_x[8442964]:string[244] "temp"
        (8442966 'move' i_x[8442964](8442968 'set reference' msg[8442828]))
        (8442971 call deinit[21354] i_x[8442964])
      }
      label _end_checkLiteralError[8442974]
      val errorExists[8442976]:bool[19] "temp"
      (8442978 'move' errorExists[8442976](8442980 '!=' error[8442770] nil[32]))
      if errorExists[8442976]
      {
        gotoErrorHandling handler[8442988] handler[8442988]
      }
      label handler[8442988]
      val errorExists[8442990]:bool[19] "temp"
      (8442992 'move' errorExists[8442990](8442994 '!=' error[8442770] nil[32]))
      if errorExists[8442990]
      {
        (8442999 '=' error[8442366] error[8442770])
        ref i_x[8443002]:string[244] "temp"
        (8443004 'move' i_x[8443002](8443006 'set reference' action[8442765]))
        (8443009 call deinit[21354] i_x[8443002])
        ref i_x[8443011]:string[244] "temp"
        (8443013 'move' i_x[8443011](8443015 'set reference' call_tmp[8442676]))
        (8443018 call deinit[21354] i_x[8443011])
        gotoErrorHandlingReturn _end_readLiteralCommon[8443041] _end_readLiteralCommon[8443041]
      }
      ref i_x[8443023]:string[244] "temp"
      (8443025 'move' i_x[8443023](8443027 'set reference' action[8442765]))
      (8443030 call deinit[21354] i_x[8443023])
      ref i_x[8443032]:string[244] "temp"
      (8443034 'move' i_x[8443032](8443036 'set reference' call_tmp[8442676]))
      (8443039 call deinit[21354] i_x[8443032])
      label _end_readLiteralCommon[8443041]
      val errorExists[8443043]:bool[19] "temp"
      (8443045 'move' errorExists[8443043](8443047 '!=' error[8442366] nil[32]))
      if errorExists[8443043]
      {
        (8443052 '=' i_error_out[8442357] error[8442366])
        gotoErrorHandlingReturn _endreadLiteral[8443058] _endreadLiteral[8443058]
      }
      label _endreadLiteral[8443058]
      val errorExists[7303064]:bool[19] "temp"
      (7303069 'move' errorExists[7303064](7303066 '!=' error[5510628] nil[32]))
      if errorExists[7303064]
      {
        (5510634 '=' error_out[5510608] error[5510628])
        gotoErrorHandlingReturn _endendClass[5510610] _endendClass[5510610]
      }
    }
    label _endendClass[5510610]
    (3379548 return _void[46])
  }
  function jsonDeserializer[356412].startList[3378433](const  ref arg this[3378437]:jsonDeserializer[356412], const  ref arg reader[3378441]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5510478]:Error[85511], ref arg _retArg[5589666]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[3378443]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "dead after last mention" "RVV" "temp"
    val default_arg_ignoreWhitespace[3378477]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5510483]:Error[85511] "error variable" "temp"
    (5510485 'move' error[5510483] nil[32])
    val inlineImm[8440178]:string[244] "temp"
    (8440181 'move' inlineImm[8440178] "[")
    ref i_literal[8440183]:string[244] "temp"
    (8440187 'move' i_literal[8440183](8440185 'set reference' inlineImm[8440178]))
    val inlineImm[8440189]:bool[19] "temp"
    (8440192 'move' inlineImm[8440189] 1)
    ref i_error_out[8440194]:Error[85511] "temp"
    (8440198 'move' i_error_out[8440194](8440196 'set reference' error[5510483]))
    val ret[8440201]:void[4] "dead after last mention" "RVV" "temp"
    val error[8440203]:Error[85511] "error variable" "temp"
    (8440205 'move' error[8440203] nil[32])
    ref call_tmp[8440208]:locale[234] "dead after last mention" "maybe param" "temp"
    (8440210 'move' call_tmp[8440208](8440212 '.' reader[3378441] _home[3276771]))
    val coerce_tmp[8440215]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8440217 'move' coerce_tmp[8440215](8440219 '.v' call_tmp[8440208] _instance[135293]))
    val coerce_tmp[8440222]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8440224 'move' coerce_tmp[8440222](8440226 'cast' RootClass[236] coerce_tmp[8440215]))
    const-val call_tmp[8440229]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440231 'move' call_tmp[8440229](8440233 '==' coerce_tmp[8440222] nil[32]))
    if call_tmp[8440229]
    {
      (8440239 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8440242]:Error[85511] "error variable" "temp"
    (8440244 'move' error[8440242] nil[32])
    const-val err[8440247]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8440249]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440251 'move' call_tmp[8440249](8440253 'cast' int(32)[66] 0))
    const-val call_tmp[8440256]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440258 'move' call_tmp[8440256](8440261 call qio_int_to_err[12856] call_tmp[8440249]))
    (8440263 'move' err[8440247] call_tmp[8440256])
    val coerce_tmp[8440266]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8440268 'move' coerce_tmp[8440266](8440270 '.v' reader[3378441] _channel_internal[3276776]))
    const-val call_tmp[8440273]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440275 'move' call_tmp[8440273](8440277 'ptr_eq' coerce_tmp[8440266] nil[32]))
    if call_tmp[8440273]
    {
      const-val call_tmp[8440282]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8440284]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8440286 'move' coerce_tmp[8440284](8440288 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8440291]:owned SystemError[1554765] "temp"
      (8440294 call createSystemError[14072] coerce_tmp[8440284] "Operation attempted on an invalid fileReader" ret_tmp[8440291])
      (8440298 'move' call_tmp[8440282] ret_tmp[8440291])
      val call_tmp[8440301]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8440303]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8440305]:owned Error[1498203] "temp"
      ref i_x[8440307]:owned SystemError[1554765] "temp"
      (8440309 'move' i_x[8440307](8440311 'set reference' call_tmp[8440282]))
      ref i__retArg[8440313]:owned Error[1498203] "temp"
      (8440315 'move' i__retArg[8440313](8440317 'set reference' ret_tmp[8440305]))
      val _formal_tmp_x[8440319]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8440321 'move' _formal_tmp_x[8440319] i_x[8440307])
      const-val ret[8440324]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8440326]:owned SystemError[1554765] "temp"
      (8440328 'move' i_this[8440326](8440330 'set reference' _formal_tmp_x[8440319]))
      val coerce_tmp[8440332]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8440334 'move' coerce_tmp[8440332](8440336 '.v' i_this[8440326] chpl_p[1554760]))
      val call_tmp[8440339]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440341 'move' call_tmp[8440339](8440343 'cast' Error[85511] coerce_tmp[8440332]))
      val castPtr[8440346]:Error[85511] "dead at end of block" "insert auto destroy"
      (8440348 'move' castPtr[8440346] call_tmp[8440339])
      ref i_this[8440351]:owned SystemError[1554765] "temp"
      (8440353 'move' i_this[8440351](8440355 'set reference' _formal_tmp_x[8440319]))
      val tmp[8440357]:SystemError[13599] "temp"
      (8440359 'move' tmp[8440357](8440361 'cast' SystemError[13599] nil[32]))
      (8440364 '.=' i_this[8440351] chpl_p[1554760] tmp[8440357])
      val coerce_tmp[8440368]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8440370 'move' coerce_tmp[8440368](8440372 'cast' RootClass[236] call_tmp[8440339]))
      const-val call_tmp[8440375]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440377 'move' call_tmp[8440375](8440379 '==' coerce_tmp[8440368] nil[32]))
      if call_tmp[8440375]
      {
        (8440385 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8440388]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8440390]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8440393 call init[1499358] initTemp[8440390] castPtr[8440346])
      (8440396 'move' call_tmp[8440388] initTemp[8440390])
      (8440399 'move' ret[8440324] call_tmp[8440388])
      (8440403 call chpl__autoDestroy[3968549] _formal_tmp_x[8440319])
      (8440405 '=' i__retArg[8440313] ret[8440324])
      (8440408 'move' coerce_tmp[8440303] ret_tmp[8440305])
      const-val _formal_tmp_in_err[8440411]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8440413 'move' _formal_tmp_in_err[8440411] coerce_tmp[8440303])
      (8440416 'move' call_tmp[8440301](8440419 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8440411]))
      (8440421 '=' error[8440242] call_tmp[8440301])
      gotoErrorHandlingReturn _endlock[8440484] _endlock[8440484]
    }
    const-val call_tmp[8440427]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440429 'move' call_tmp[8440427](8440432 call qio_err_iserr[12868] err[8440247]))
    const-val call_tmp[8440434]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440436 'move' call_tmp[8440434](8440438 '!=' call_tmp[8440427] 0))
    if call_tmp[8440434]
    {
      val error[8440443]:Error[85511] "error variable" "temp"
      (8440445 'move' error[8440443] nil[32])
      (8440449 call _ch_ioerror[3285336] reader[3378441] err[8440247] "in lock" error[8440443])
      val errorExists[8440454]:bool[19] "temp"
      (8440456 'move' errorExists[8440454](8440458 '!=' error[8440443] nil[32]))
      if errorExists[8440454]
      {
        gotoErrorHandling handler[8440466] handler[8440466]
      }
      label handler[8440466]
      val errorExists[8440468]:bool[19] "temp"
      (8440470 'move' errorExists[8440468](8440472 '!=' error[8440443] nil[32]))
      if errorExists[8440468]
      {
        (8440477 '=' error[8440242] error[8440443])
        gotoErrorHandlingReturn _endlock[8440484] _endlock[8440484]
      }
    }
    label _endlock[8440484]
    val errorExists[8440486]:bool[19] "temp"
    (8440488 'move' errorExists[8440486](8440490 '!=' error[8440242] nil[32]))
    if errorExists[8440486]
    {
      gotoErrorHandling handler[8440498] handler[8440498]
    }
    label handler[8440498]
    val errorExists[8440500]:bool[19] "temp"
    (8440502 'move' errorExists[8440500](8440504 '!=' error[8440242] nil[32]))
    if errorExists[8440500]
    {
      (8440510 call chpl_uncaught_error[87456] error[8440242])
    }
    const-val call_tmp[8440513]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8440515]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8440517]:string[244] "dead at end of block" "insert auto destroy"
    (8440520 call init[21321] ret[8440517])
    const-val coerce_tmp[8440522]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8440524 'move' coerce_tmp[8440522](8440526 '.v' i_literal[8440183] cachedNumCodepoints[21293]))
    (8440529 '.=' ret[8440517] cachedNumCodepoints[21293] coerce_tmp[8440522])
    (8440534 call initWithBorrowedBuffer[1470549] ret[8440517] i_literal[8440183])
    (8440537 '=' ret[8440515] ret[8440517])
    (8440540 'move' call_tmp[8440513] ret[8440515])
    val coerce_tmp[8440543]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8440545 'move' coerce_tmp[8440543](8440547 '.v' call_tmp[8440513] buff[21299]))
    (8440550 'noop')
    val call_tmp[8440551]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8440553 'move' call_tmp[8440551](8440555 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8440543]))
    val ret[8440558]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8440560 '=' ret[8440558](8440562 '.v' i_literal[8440183] buffLen[21281]))
    const-val call_tmp[8440565]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8440567]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8440569 'move' coerce_tmp[8440567](8440571 'cast' int(32)[66] 0))
    val coerce_tmp[8440574]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8440576 'move' coerce_tmp[8440574](8440578 '.v' reader[3378441] _channel_internal[3276776]))
    const-val coerce_tmp[8440581]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8440583 'move' coerce_tmp[8440581](8440585 'cast' int(32)[66] inlineImm[8440189]))
    (8440588 'move' call_tmp[8440565](8440591 call qio_channel_scan_literal[167758] coerce_tmp[8440567] coerce_tmp[8440574] call_tmp[8440551] ret[8440558] coerce_tmp[8440581]))
    const-val err[8440597]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8440599 'move' err[8440597] call_tmp[8440565])
    const-val action[8440602]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8440604 'move' action[8440602] "reading")
    val error[8440607]:Error[85511] "error variable" "temp"
    (8440609 'move' error[8440607] nil[32])
    ref i_action[8440612]:string[244] "temp"
    (8440614 'move' i_action[8440612](8440616 'set reference' action[8440602]))
    val inlineImm[8440618]:bool[19] "temp"
    (8440620 'move' inlineImm[8440618] 1)
    const-val call_tmp[8440623]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440625 'move' call_tmp[8440623](8440628 call qio_err_to_int[12844] call_tmp[8440565]))
    const-val call_tmp[8440630]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440632 'move' call_tmp[8440630](8440634 'cast' int(32)[66] 0))
    const-val call_tmp[8440637]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440639 'move' call_tmp[8440637](8440641 '==' call_tmp[8440623] call_tmp[8440630]))
    const-val call_tmp[8440644]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8440646 'move' call_tmp[8440644](8440648 'u!' call_tmp[8440637]))
    if call_tmp[8440644]
    {
      const-val call_tmp[8440652]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8440654]:string[244] "temp"
      (8440657 call literalErrorHelper[3112834] i_literal[8440183] i_action[8440612] inlineImm[8440618] ret_tmp[8440654])
      (8440662 'move' call_tmp[8440652] ret_tmp[8440654])
      val msg[8440665]:string[244] "dead at end of block" "insert auto destroy"
      (8440667 'move' msg[8440665] call_tmp[8440652])
      const-val call_tmp[8440670]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440672 'move' call_tmp[8440670](8440675 call qio_err_to_int[12844] err[8440597]))
      const-val call_tmp[8440677]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440679 'move' call_tmp[8440677](8440681 '==' call_tmp[8440670] EILSEQ[11191]))
      if call_tmp[8440677]
      {
        const-val call_tmp[8440686]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8440688]:string[244] "temp"
        (8440691 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8440688])
        (8440693 'move' call_tmp[8440686] ret_tmp[8440688])
        const-val call_tmp[8440696]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8440698]:string[244] "temp"
        (8440701 call +[28065] call_tmp[8440686] "Error: " ret_tmp[8440698])
        (8440705 'move' call_tmp[8440696] ret_tmp[8440698])
        const-val call_tmp[8440708]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8440710]:string[244] "temp"
        (8440713 call +[28065] call_tmp[8440696] msg[8440665] ret_tmp[8440710])
        (8440717 'move' call_tmp[8440708] ret_tmp[8440710])
        (8440721 call =[28046] msg[8440665] call_tmp[8440708])
        ref i_x[8440724]:string[244] "temp"
        (8440726 'move' i_x[8440724](8440728 'set reference' call_tmp[8440708]))
        (8440731 call deinit[21354] i_x[8440724])
        ref i_x[8440733]:string[244] "temp"
        (8440735 'move' i_x[8440733](8440737 'set reference' call_tmp[8440696]))
        (8440740 call deinit[21354] i_x[8440733])
        ref i_x[8440742]:string[244] "temp"
        (8440744 'move' i_x[8440742](8440746 'set reference' call_tmp[8440686]))
        (8440749 call deinit[21354] i_x[8440742])
      }
      val error[8440752]:Error[85511] "error variable" "temp"
      (8440754 'move' error[8440752] nil[32])
      (8440758 call _ch_ioerror[3285336] reader[3378441] err[8440597] msg[8440665] error[8440752])
      val errorExists[8440763]:bool[19] "temp"
      (8440765 'move' errorExists[8440763](8440767 '!=' error[8440752] nil[32]))
      if errorExists[8440763]
      {
        gotoErrorHandling handler[8440775] handler[8440775]
      }
      label handler[8440775]
      val errorExists[8440777]:bool[19] "temp"
      (8440779 'move' errorExists[8440777](8440781 '!=' error[8440752] nil[32]))
      if errorExists[8440777]
      {
        (8440786 '=' error[8440607] error[8440752])
        ref i_x[8440789]:string[244] "temp"
        (8440791 'move' i_x[8440789](8440793 'set reference' msg[8440665]))
        (8440796 call deinit[21354] i_x[8440789])
        gotoErrorHandlingReturn _end_checkLiteralError[8440811] _end_checkLiteralError[8440811]
      }
      ref i_x[8440801]:string[244] "temp"
      (8440803 'move' i_x[8440801](8440805 'set reference' msg[8440665]))
      (8440808 call deinit[21354] i_x[8440801])
    }
    label _end_checkLiteralError[8440811]
    val errorExists[8440813]:bool[19] "temp"
    (8440815 'move' errorExists[8440813](8440817 '!=' error[8440607] nil[32]))
    if errorExists[8440813]
    {
      gotoErrorHandling handler[8440825] handler[8440825]
    }
    label handler[8440825]
    val errorExists[8440827]:bool[19] "temp"
    (8440829 'move' errorExists[8440827](8440831 '!=' error[8440607] nil[32]))
    if errorExists[8440827]
    {
      (8440836 '=' error[8440203] error[8440607])
      ref i_x[8440839]:string[244] "temp"
      (8440841 'move' i_x[8440839](8440843 'set reference' action[8440602]))
      (8440846 call deinit[21354] i_x[8440839])
      ref i_x[8440848]:string[244] "temp"
      (8440850 'move' i_x[8440848](8440852 'set reference' call_tmp[8440513]))
      (8440855 call deinit[21354] i_x[8440848])
      gotoErrorHandlingReturn _end_readLiteralCommon[8440878] _end_readLiteralCommon[8440878]
    }
    ref i_x[8440860]:string[244] "temp"
    (8440862 'move' i_x[8440860](8440864 'set reference' action[8440602]))
    (8440867 call deinit[21354] i_x[8440860])
    ref i_x[8440869]:string[244] "temp"
    (8440871 'move' i_x[8440869](8440873 'set reference' call_tmp[8440513]))
    (8440876 call deinit[21354] i_x[8440869])
    label _end_readLiteralCommon[8440878]
    val errorExists[8440880]:bool[19] "temp"
    (8440882 'move' errorExists[8440880](8440884 '!=' error[8440203] nil[32]))
    if errorExists[8440880]
    {
      (8440889 '=' i_error_out[8440194] error[8440203])
      gotoErrorHandlingReturn _endreadLiteral[8440895] _endreadLiteral[8440895]
    }
    label _endreadLiteral[8440895]
    val errorExists[7303000]:bool[19] "temp"
    (7303005 'move' errorExists[7303000](7303002 '!=' error[5510483] nil[32]))
    if errorExists[7303000]
    {
      (5510489 '=' error_out[5510478] error[5510483])
      gotoErrorHandlingReturn _endstartList[5510480] _endstartList[5510480]
    }
    const-val call_tmp[3378458]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[3378489]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "dead after last mention" "delay instantiation" "temp"
    const-val _formal_tmp_in_reader[3378571]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "expr temp" "no auto destroy" "temp"
    val inlineImm[8454593]:bool[19] "temp"
    (8454596 'move' inlineImm[8454593] 0)
    val ret[8454599]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "RVV" "temp"
    const-val tmp[8454601]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "temp"
    (8454604 call init=[3282985] tmp[8454601] reader[3378441])
    (8454607 'move' ret[8454599] tmp[8454601])
    (3378576 'move' _formal_tmp_in_reader[3378571] ret[8454599])
    const-val default_arg__first[3378613]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (3378617 'move' default_arg__first[3378613] 1)
    (3378492 call init[3378497] initTemp[3378489] _formal_tmp_in_reader[3378571] default_arg__first[3378613])
    (3378460 'move' call_tmp[3378458] initTemp[3378489])
    (3378465 'move' ret[3378443] call_tmp[3378458])
    label _endstartList[5510480]
    (5589668 '=' _retArg[5589666] ret[3378443])
    (5589670 return _void[46])
  }
  function ListDeserializer(fileReader(false,jsonDeserializer))[3378540].readElement[3378816](ref arg this[3378820]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540], ref arg error_out[5510529]:Error[85511], ref arg _retArg[5589678]:string[244]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479987]:string[244] "temp"
    const-val ret[3378826]:string[244] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3378836]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8462012]:bool[19] "dead after last mention" "maybe param" "temp"
    (8462014 'move' call_tmp[8462012](8462016 '.' this[3378820] _first[3378536]))
    (3378838 'move' call_tmp[3378836] call_tmp[8462012])
    const-val call_tmp[3378844]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3378988]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3378992 'move' coerce_tmp[3378988](3378990 'deref' call_tmp[3378836]))
    const-val call_tmp[7351427]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351429 'move' call_tmp[7351427](7351431 'u!' coerce_tmp[3378988]))
    (3378846 'move' call_tmp[3378844] call_tmp[7351427])
    const-val call_tmp[3378851]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3378853 'move' call_tmp[3378851] call_tmp[3378844])
    if call_tmp[3378851]
    {
      const-ref call_tmp[3378860]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8461958]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8461960 'move' call_tmp[8461958](8461962 '.' this[3378820] reader[3378534]))
      (3378862 'move' call_tmp[3378860] call_tmp[8461958])
      val default_arg_ignoreWhitespace[3379001]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      val error[5510532]:Error[85511] "error variable" "temp"
      (5510534 'move' error[5510532] nil[32])
      val inlineImm[8440899]:string[244] "temp"
      (8440902 'move' inlineImm[8440899] ",")
      ref i_literal[8440904]:string[244] "temp"
      (8440908 'move' i_literal[8440904](8440906 'set reference' inlineImm[8440899]))
      val inlineImm[8440910]:bool[19] "temp"
      (8440913 'move' inlineImm[8440910] 1)
      ref i_error_out[8440915]:Error[85511] "temp"
      (8440919 'move' i_error_out[8440915](8440917 'set reference' error[5510532]))
      val ret[8440922]:void[4] "dead after last mention" "RVV" "temp"
      val error[8440924]:Error[85511] "error variable" "temp"
      (8440926 'move' error[8440924] nil[32])
      ref call_tmp[8440929]:locale[234] "dead after last mention" "maybe param" "temp"
      (8440931 'move' call_tmp[8440929](8440933 '.' call_tmp[3378860] _home[3276771]))
      val coerce_tmp[8440936]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8440938 'move' coerce_tmp[8440936](8440940 '.v' call_tmp[8440929] _instance[135293]))
      val coerce_tmp[8440943]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8440945 'move' coerce_tmp[8440943](8440947 'cast' RootClass[236] coerce_tmp[8440936]))
      const-val call_tmp[8440950]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440952 'move' call_tmp[8440950](8440954 '==' coerce_tmp[8440943] nil[32]))
      if call_tmp[8440950]
      {
        (8440960 call nilCheckHalt[392] "argument to ! is nil")
      }
      val error[8440963]:Error[85511] "error variable" "temp"
      (8440965 'move' error[8440963] nil[32])
      const-val err[8440968]:errorCode[12828] "dead at end of block" "insert auto destroy"
      const-val call_tmp[8440970]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440972 'move' call_tmp[8440970](8440974 'cast' int(32)[66] 0))
      const-val call_tmp[8440977]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440979 'move' call_tmp[8440977](8440982 call qio_int_to_err[12856] call_tmp[8440970]))
      (8440984 'move' err[8440968] call_tmp[8440977])
      val coerce_tmp[8440987]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8440989 'move' coerce_tmp[8440987](8440991 '.v' call_tmp[3378860] _channel_internal[3276776]))
      const-val call_tmp[8440994]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8440996 'move' call_tmp[8440994](8440998 'ptr_eq' coerce_tmp[8440987] nil[32]))
      if call_tmp[8440994]
      {
        const-val call_tmp[8441003]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val coerce_tmp[8441005]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8441007 'move' coerce_tmp[8441005](8441009 'cast' int(64)[10] EINVAL[11206]))
        const-val ret_tmp[8441012]:owned SystemError[1554765] "temp"
        (8441015 call createSystemError[14072] coerce_tmp[8441005] "Operation attempted on an invalid fileReader" ret_tmp[8441012])
        (8441019 'move' call_tmp[8441003] ret_tmp[8441012])
        val call_tmp[8441022]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[8441024]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[8441026]:owned Error[1498203] "temp"
        ref i_x[8441028]:owned SystemError[1554765] "temp"
        (8441030 'move' i_x[8441028](8441032 'set reference' call_tmp[8441003]))
        ref i__retArg[8441034]:owned Error[1498203] "temp"
        (8441036 'move' i__retArg[8441034](8441038 'set reference' ret_tmp[8441026]))
        val _formal_tmp_x[8441040]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (8441042 'move' _formal_tmp_x[8441040] i_x[8441028])
        const-val ret[8441045]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[8441047]:owned SystemError[1554765] "temp"
        (8441049 'move' i_this[8441047](8441051 'set reference' _formal_tmp_x[8441040]))
        val coerce_tmp[8441053]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8441055 'move' coerce_tmp[8441053](8441057 '.v' i_this[8441047] chpl_p[1554760]))
        val call_tmp[8441060]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (8441062 'move' call_tmp[8441060](8441064 'cast' Error[85511] coerce_tmp[8441053]))
        val castPtr[8441067]:Error[85511] "dead at end of block" "insert auto destroy"
        (8441069 'move' castPtr[8441067] call_tmp[8441060])
        ref i_this[8441072]:owned SystemError[1554765] "temp"
        (8441074 'move' i_this[8441072](8441076 'set reference' _formal_tmp_x[8441040]))
        val tmp[8441078]:SystemError[13599] "temp"
        (8441080 'move' tmp[8441078](8441082 'cast' SystemError[13599] nil[32]))
        (8441085 '.=' i_this[8441072] chpl_p[1554760] tmp[8441078])
        val coerce_tmp[8441089]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8441091 'move' coerce_tmp[8441089](8441093 'cast' RootClass[236] call_tmp[8441060]))
        const-val call_tmp[8441096]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8441098 'move' call_tmp[8441096](8441100 '==' coerce_tmp[8441089] nil[32]))
        if call_tmp[8441096]
        {
          (8441106 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[8441109]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[8441111]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (8441114 call init[1499358] initTemp[8441111] castPtr[8441067])
        (8441117 'move' call_tmp[8441109] initTemp[8441111])
        (8441120 'move' ret[8441045] call_tmp[8441109])
        (8441124 call chpl__autoDestroy[3968549] _formal_tmp_x[8441040])
        (8441126 '=' i__retArg[8441034] ret[8441045])
        (8441129 'move' coerce_tmp[8441024] ret_tmp[8441026])
        const-val _formal_tmp_in_err[8441132]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (8441134 'move' _formal_tmp_in_err[8441132] coerce_tmp[8441024])
        (8441137 'move' call_tmp[8441022](8441140 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8441132]))
        (8441142 '=' error[8440963] call_tmp[8441022])
        gotoErrorHandlingReturn _endlock[8441205] _endlock[8441205]
      }
      const-val call_tmp[8441148]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441150 'move' call_tmp[8441148](8441153 call qio_err_iserr[12868] err[8440968]))
      const-val call_tmp[8441155]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441157 'move' call_tmp[8441155](8441159 '!=' call_tmp[8441148] 0))
      if call_tmp[8441155]
      {
        val error[8441164]:Error[85511] "error variable" "temp"
        (8441166 'move' error[8441164] nil[32])
        (8441170 call _ch_ioerror[3285336] call_tmp[3378860] err[8440968] "in lock" error[8441164])
        val errorExists[8441175]:bool[19] "temp"
        (8441177 'move' errorExists[8441175](8441179 '!=' error[8441164] nil[32]))
        if errorExists[8441175]
        {
          gotoErrorHandling handler[8441187] handler[8441187]
        }
        label handler[8441187]
        val errorExists[8441189]:bool[19] "temp"
        (8441191 'move' errorExists[8441189](8441193 '!=' error[8441164] nil[32]))
        if errorExists[8441189]
        {
          (8441198 '=' error[8440963] error[8441164])
          gotoErrorHandlingReturn _endlock[8441205] _endlock[8441205]
        }
      }
      label _endlock[8441205]
      val errorExists[8441207]:bool[19] "temp"
      (8441209 'move' errorExists[8441207](8441211 '!=' error[8440963] nil[32]))
      if errorExists[8441207]
      {
        gotoErrorHandling handler[8441219] handler[8441219]
      }
      label handler[8441219]
      val errorExists[8441221]:bool[19] "temp"
      (8441223 'move' errorExists[8441221](8441225 '!=' error[8440963] nil[32]))
      if errorExists[8441221]
      {
        (8441231 call chpl_uncaught_error[87456] error[8440963])
      }
      const-val call_tmp[8441234]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret[8441236]:string[244] "dead after last mention" "RVV" "temp"
      val ret[8441238]:string[244] "dead at end of block" "insert auto destroy"
      (8441241 call init[21321] ret[8441238])
      const-val coerce_tmp[8441243]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8441245 'move' coerce_tmp[8441243](8441247 '.v' i_literal[8440904] cachedNumCodepoints[21293]))
      (8441250 '.=' ret[8441238] cachedNumCodepoints[21293] coerce_tmp[8441243])
      (8441255 call initWithBorrowedBuffer[1470549] ret[8441238] i_literal[8440904])
      (8441258 '=' ret[8441236] ret[8441238])
      (8441261 'move' call_tmp[8441234] ret[8441236])
      val coerce_tmp[8441264]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (8441266 'move' coerce_tmp[8441264](8441268 '.v' call_tmp[8441234] buff[21299]))
      (8441271 'noop')
      val call_tmp[8441272]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (8441274 'move' call_tmp[8441272](8441276 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8441264]))
      val ret[8441279]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8441281 '=' ret[8441279](8441283 '.v' i_literal[8440904] buffLen[21281]))
      const-val call_tmp[8441286]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[8441288]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8441290 'move' coerce_tmp[8441288](8441292 'cast' int(32)[66] 0))
      val coerce_tmp[8441295]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8441297 'move' coerce_tmp[8441295](8441299 '.v' call_tmp[3378860] _channel_internal[3276776]))
      const-val coerce_tmp[8441302]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8441304 'move' coerce_tmp[8441302](8441306 'cast' int(32)[66] inlineImm[8440910]))
      (8441309 'move' call_tmp[8441286](8441312 call qio_channel_scan_literal[167758] coerce_tmp[8441288] coerce_tmp[8441295] call_tmp[8441272] ret[8441279] coerce_tmp[8441302]))
      const-val err[8441318]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
      (8441320 'move' err[8441318] call_tmp[8441286])
      const-val action[8441323]:string[244] "dead at end of block" "const" "insert auto destroy"
      (8441325 'move' action[8441323] "reading")
      val error[8441328]:Error[85511] "error variable" "temp"
      (8441330 'move' error[8441328] nil[32])
      ref i_action[8441333]:string[244] "temp"
      (8441335 'move' i_action[8441333](8441337 'set reference' action[8441323]))
      val inlineImm[8441339]:bool[19] "temp"
      (8441341 'move' inlineImm[8441339] 1)
      const-val call_tmp[8441344]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441346 'move' call_tmp[8441344](8441349 call qio_err_to_int[12844] call_tmp[8441286]))
      const-val call_tmp[8441351]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441353 'move' call_tmp[8441351](8441355 'cast' int(32)[66] 0))
      const-val call_tmp[8441358]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441360 'move' call_tmp[8441358](8441362 '==' call_tmp[8441344] call_tmp[8441351]))
      const-val call_tmp[8441365]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441367 'move' call_tmp[8441365](8441369 'u!' call_tmp[8441358]))
      if call_tmp[8441365]
      {
        const-val call_tmp[8441373]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[8441375]:string[244] "temp"
        (8441378 call literalErrorHelper[3112834] i_literal[8440904] i_action[8441333] inlineImm[8441339] ret_tmp[8441375])
        (8441383 'move' call_tmp[8441373] ret_tmp[8441375])
        val msg[8441386]:string[244] "dead at end of block" "insert auto destroy"
        (8441388 'move' msg[8441386] call_tmp[8441373])
        const-val call_tmp[8441391]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (8441393 'move' call_tmp[8441391](8441396 call qio_err_to_int[12844] err[8441318]))
        const-val call_tmp[8441398]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8441400 'move' call_tmp[8441398](8441402 '==' call_tmp[8441391] EILSEQ[11191]))
        if call_tmp[8441398]
        {
          const-val call_tmp[8441407]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8441409]:string[244] "temp"
          (8441412 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8441409])
          (8441414 'move' call_tmp[8441407] ret_tmp[8441409])
          const-val call_tmp[8441417]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8441419]:string[244] "temp"
          (8441422 call +[28065] call_tmp[8441407] "Error: " ret_tmp[8441419])
          (8441426 'move' call_tmp[8441417] ret_tmp[8441419])
          const-val call_tmp[8441429]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8441431]:string[244] "temp"
          (8441434 call +[28065] call_tmp[8441417] msg[8441386] ret_tmp[8441431])
          (8441438 'move' call_tmp[8441429] ret_tmp[8441431])
          (8441442 call =[28046] msg[8441386] call_tmp[8441429])
          ref i_x[8441445]:string[244] "temp"
          (8441447 'move' i_x[8441445](8441449 'set reference' call_tmp[8441429]))
          (8441452 call deinit[21354] i_x[8441445])
          ref i_x[8441454]:string[244] "temp"
          (8441456 'move' i_x[8441454](8441458 'set reference' call_tmp[8441417]))
          (8441461 call deinit[21354] i_x[8441454])
          ref i_x[8441463]:string[244] "temp"
          (8441465 'move' i_x[8441463](8441467 'set reference' call_tmp[8441407]))
          (8441470 call deinit[21354] i_x[8441463])
        }
        val error[8441473]:Error[85511] "error variable" "temp"
        (8441475 'move' error[8441473] nil[32])
        (8441479 call _ch_ioerror[3285336] call_tmp[3378860] err[8441318] msg[8441386] error[8441473])
        val errorExists[8441484]:bool[19] "temp"
        (8441486 'move' errorExists[8441484](8441488 '!=' error[8441473] nil[32]))
        if errorExists[8441484]
        {
          gotoErrorHandling handler[8441496] handler[8441496]
        }
        label handler[8441496]
        val errorExists[8441498]:bool[19] "temp"
        (8441500 'move' errorExists[8441498](8441502 '!=' error[8441473] nil[32]))
        if errorExists[8441498]
        {
          (8441507 '=' error[8441328] error[8441473])
          ref i_x[8441510]:string[244] "temp"
          (8441512 'move' i_x[8441510](8441514 'set reference' msg[8441386]))
          (8441517 call deinit[21354] i_x[8441510])
          gotoErrorHandlingReturn _end_checkLiteralError[8441532] _end_checkLiteralError[8441532]
        }
        ref i_x[8441522]:string[244] "temp"
        (8441524 'move' i_x[8441522](8441526 'set reference' msg[8441386]))
        (8441529 call deinit[21354] i_x[8441522])
      }
      label _end_checkLiteralError[8441532]
      val errorExists[8441534]:bool[19] "temp"
      (8441536 'move' errorExists[8441534](8441538 '!=' error[8441328] nil[32]))
      if errorExists[8441534]
      {
        gotoErrorHandling handler[8441546] handler[8441546]
      }
      label handler[8441546]
      val errorExists[8441548]:bool[19] "temp"
      (8441550 'move' errorExists[8441548](8441552 '!=' error[8441328] nil[32]))
      if errorExists[8441548]
      {
        (8441557 '=' error[8440924] error[8441328])
        ref i_x[8441560]:string[244] "temp"
        (8441562 'move' i_x[8441560](8441564 'set reference' action[8441323]))
        (8441567 call deinit[21354] i_x[8441560])
        ref i_x[8441569]:string[244] "temp"
        (8441571 'move' i_x[8441569](8441573 'set reference' call_tmp[8441234]))
        (8441576 call deinit[21354] i_x[8441569])
        gotoErrorHandlingReturn _end_readLiteralCommon[8441599] _end_readLiteralCommon[8441599]
      }
      ref i_x[8441581]:string[244] "temp"
      (8441583 'move' i_x[8441581](8441585 'set reference' action[8441323]))
      (8441588 call deinit[21354] i_x[8441581])
      ref i_x[8441590]:string[244] "temp"
      (8441592 'move' i_x[8441590](8441594 'set reference' call_tmp[8441234]))
      (8441597 call deinit[21354] i_x[8441590])
      label _end_readLiteralCommon[8441599]
      val errorExists[8441601]:bool[19] "temp"
      (8441603 'move' errorExists[8441601](8441605 '!=' error[8440924] nil[32]))
      if errorExists[8441601]
      {
        (8441610 '=' i_error_out[8440915] error[8440924])
        gotoErrorHandlingReturn _endreadLiteral[8441616] _endreadLiteral[8441616]
      }
      label _endreadLiteral[8441616]
      val errorExists[7303024]:bool[19] "temp"
      (7303029 'move' errorExists[7303024](7303026 '!=' error[5510532] nil[32]))
      if errorExists[7303024]
      {
        (5510538 '=' error_out[5510529] error[5510532])
        gotoErrorHandlingReturn _end_readElement[3378955] _end_readElement[3378955]
      }
    }
    {
      ref call_tmp[3378875]:bool[19] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8462022]:bool[19] "dead after last mention" "maybe param" "temp"
      (8462024 'move' call_tmp[8462022](8462026 '.' this[3378820] _first[3378536]))
      (3378877 'move' call_tmp[3378875] call_tmp[8462022])
      val inlineImm[7394077]:bool[19] "temp"
      (7394080 'move' inlineImm[7394077] 0)
      (7394083 '=' call_tmp[3378875] inlineImm[7394077])
    }
    const-val call_tmp[3378888]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[5510547]:Error[85511] "error variable" "temp"
    (5510549 'move' error[5510547] nil[32])
    (3378890 'move' call_tmp[3378888](3378896 call hasMore[3378621] this[3378820] error[5510547]))
    val errorExists[7303032]:bool[19] "temp"
    (7303037 'move' errorExists[7303032](7303034 '!=' error[5510547] nil[32]))
    if errorExists[7303032]
    {
      (5510553 '=' error_out[5510529] error[5510547])
      gotoErrorHandlingReturn _end_readElement[3378955] _end_readElement[3378955]
    }
    const-val call_tmp[3378897]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351436]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351438 'move' call_tmp[7351436](7351440 'u!' call_tmp[3378888]))
    (3378899 'move' call_tmp[3378897] call_tmp[7351436])
    const-val call_tmp[3378904]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3378906 'move' call_tmp[3378904] call_tmp[3378897])
    if call_tmp[3378904]
    {
      const-val call_tmp[3378913]:owned BadFormatError[1544175] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[3379032]:BadFormatError[15094] "dead after last mention" "temp"
      val default_arg_details[3379061]:string[244] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      val default_arg_err_msg[3379088]:string[244] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      (3379034 'move' new_temp[3379032](3379020 call _new[1543717] "" ""))
      const-val initTemp[3379098]:owned BadFormatError[1544175] "dead after last mention" "delay instantiation" "temp"
      (3379101 call init[1543824] initTemp[3379098] new_temp[3379032])
      (3378915 'move' call_tmp[3378913] initTemp[3379098])
      val call_tmp[3378919]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3379115]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[5589122]:owned Error[1498203] "temp"
      ref i_x[8456579]:owned BadFormatError[1544175] "temp"
      (8456583 'move' i_x[8456579](8456581 'set reference' call_tmp[3378913]))
      ref i__retArg[8456585]:owned Error[1498203] "temp"
      (8456589 'move' i__retArg[8456585](8456587 'set reference' ret_tmp[5589122]))
      val _formal_tmp_x[8456592]:owned BadFormatError[1544175] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8456594 'move' _formal_tmp_x[8456592] i_x[8456579])
      const-val ret[8456597]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8456599]:owned BadFormatError[1544175] "temp"
      (8456601 'move' i_this[8456599](8456603 'set reference' _formal_tmp_x[8456592]))
      val coerce_tmp[8456605]:BadFormatError[15094] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8456607 'move' coerce_tmp[8456605](8456609 '.v' i_this[8456599] chpl_p[1544170]))
      val call_tmp[8456612]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8456614 'move' call_tmp[8456612](8456616 'cast' Error[85511] coerce_tmp[8456605]))
      val castPtr[8456619]:Error[85511] "dead at end of block" "insert auto destroy"
      (8456621 'move' castPtr[8456619] call_tmp[8456612])
      ref i_this[8456624]:owned BadFormatError[1544175] "temp"
      (8456626 'move' i_this[8456624](8456628 'set reference' _formal_tmp_x[8456592]))
      val tmp[8456630]:BadFormatError[15094] "temp"
      (8456632 'move' tmp[8456630](8456634 'cast' BadFormatError[15094] nil[32]))
      (8456637 '.=' i_this[8456624] chpl_p[1544170] tmp[8456630])
      val coerce_tmp[8456641]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8456643 'move' coerce_tmp[8456641](8456645 'cast' RootClass[236] call_tmp[8456612]))
      const-val call_tmp[8456648]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8456650 'move' call_tmp[8456648](8456652 '==' coerce_tmp[8456641] nil[32]))
      if call_tmp[8456648]
      {
        (8456658 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8456661]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8456663]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8456666 call init[1499358] initTemp[8456663] castPtr[8456619])
      (8456669 'move' call_tmp[8456661] initTemp[8456663])
      (8456672 'move' ret[8456597] call_tmp[8456661])
      (8456676 call chpl__autoDestroy[3940454] _formal_tmp_x[8456592])
      (8456680 '=' i__retArg[8456585] ret[8456597])
      (5589125 'move' coerce_tmp[3379115] ret_tmp[5589122])
      const-val _formal_tmp_in_err[3379334]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (3379339 'move' _formal_tmp_in_err[3379334] coerce_tmp[3379115])
      (3378921 'move' call_tmp[3378919](3378924 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3379334]))
      val castedError[5510562]:Error[85511] "temp"
      (5510568 'move' castedError[5510562] call_tmp[3378919])
      (5510570 '=' error_out[5510529] castedError[5510562])
      gotoErrorHandlingReturn _end_readElement[3378955] _end_readElement[3378955]
    }
    {
      const-ref call_tmp[3378929]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8461968]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8461970 'move' call_tmp[8461968](8461972 '.' this[3378820] reader[3378534]))
      (3378931 'move' call_tmp[3378929] call_tmp[8461968])
      const-val call_tmp[3378937]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[5510575]:Error[85511] "error variable" "temp"
      (5510577 'move' error[5510575] nil[32])
      const-val ret_tmp[5588672]:string[244] "temp"
      (3378945 call read[3290733] call_tmp[3378929] error[5510575] ret_tmp[5588672])
      (5588675 'move' call_tmp[3378937] ret_tmp[5588672])
      val errorExists[7303040]:bool[19] "temp"
      (7303045 'move' errorExists[7303040](7303042 '!=' error[5510575] nil[32]))
      if errorExists[7303040]
      {
        (5510581 '=' error_out[5510529] error[5510575])
        gotoErrorHandlingReturn _end_readElement[3378955] _end_readElement[3378955]
      }
      (3379347 '=' ret[3378826] call_tmp[3378937])
      gotoReturn _end_readElement[3378955] _end_readElement[3378955]
    }
    label _end_readElement[3378955]
    (5589680 '=' _retArg[5589678] ret[3378826])
    (5589682 return _void[46])
  }
  function ListDeserializer(fileReader(false,jsonDeserializer))[3378540].endList[3379351](const  ref arg this[3379355]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540], ref arg error_out[5510589]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3379361]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8461978]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8461980 'move' call_tmp[8461978](8461982 '.' this[3379355] reader[3378534]))
    (3379363 'move' call_tmp[3379361] call_tmp[8461978])
    val default_arg_ignoreWhitespace[3379384]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5510594]:Error[85511] "error variable" "temp"
    (5510596 'move' error[5510594] nil[32])
    val inlineImm[8441620]:string[244] "temp"
    (8441623 'move' inlineImm[8441620] "]")
    ref i_literal[8441625]:string[244] "temp"
    (8441629 'move' i_literal[8441625](8441627 'set reference' inlineImm[8441620]))
    val inlineImm[8441631]:bool[19] "temp"
    (8441634 'move' inlineImm[8441631] 1)
    ref i_error_out[8441636]:Error[85511] "temp"
    (8441640 'move' i_error_out[8441636](8441638 'set reference' error[5510594]))
    val ret[8441643]:void[4] "dead after last mention" "RVV" "temp"
    val error[8441645]:Error[85511] "error variable" "temp"
    (8441647 'move' error[8441645] nil[32])
    ref call_tmp[8441650]:locale[234] "dead after last mention" "maybe param" "temp"
    (8441652 'move' call_tmp[8441650](8441654 '.' call_tmp[3379361] _home[3276771]))
    val coerce_tmp[8441657]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8441659 'move' coerce_tmp[8441657](8441661 '.v' call_tmp[8441650] _instance[135293]))
    val coerce_tmp[8441664]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8441666 'move' coerce_tmp[8441664](8441668 'cast' RootClass[236] coerce_tmp[8441657]))
    const-val call_tmp[8441671]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8441673 'move' call_tmp[8441671](8441675 '==' coerce_tmp[8441664] nil[32]))
    if call_tmp[8441671]
    {
      (8441681 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8441684]:Error[85511] "error variable" "temp"
    (8441686 'move' error[8441684] nil[32])
    const-val err[8441689]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8441691]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8441693 'move' call_tmp[8441691](8441695 'cast' int(32)[66] 0))
    const-val call_tmp[8441698]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8441700 'move' call_tmp[8441698](8441703 call qio_int_to_err[12856] call_tmp[8441691]))
    (8441705 'move' err[8441689] call_tmp[8441698])
    val coerce_tmp[8441708]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8441710 'move' coerce_tmp[8441708](8441712 '.v' call_tmp[3379361] _channel_internal[3276776]))
    const-val call_tmp[8441715]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8441717 'move' call_tmp[8441715](8441719 'ptr_eq' coerce_tmp[8441708] nil[32]))
    if call_tmp[8441715]
    {
      const-val call_tmp[8441724]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8441726]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8441728 'move' coerce_tmp[8441726](8441730 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8441733]:owned SystemError[1554765] "temp"
      (8441736 call createSystemError[14072] coerce_tmp[8441726] "Operation attempted on an invalid fileReader" ret_tmp[8441733])
      (8441740 'move' call_tmp[8441724] ret_tmp[8441733])
      val call_tmp[8441743]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8441745]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8441747]:owned Error[1498203] "temp"
      ref i_x[8441749]:owned SystemError[1554765] "temp"
      (8441751 'move' i_x[8441749](8441753 'set reference' call_tmp[8441724]))
      ref i__retArg[8441755]:owned Error[1498203] "temp"
      (8441757 'move' i__retArg[8441755](8441759 'set reference' ret_tmp[8441747]))
      val _formal_tmp_x[8441761]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8441763 'move' _formal_tmp_x[8441761] i_x[8441749])
      const-val ret[8441766]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8441768]:owned SystemError[1554765] "temp"
      (8441770 'move' i_this[8441768](8441772 'set reference' _formal_tmp_x[8441761]))
      val coerce_tmp[8441774]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8441776 'move' coerce_tmp[8441774](8441778 '.v' i_this[8441768] chpl_p[1554760]))
      val call_tmp[8441781]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441783 'move' call_tmp[8441781](8441785 'cast' Error[85511] coerce_tmp[8441774]))
      val castPtr[8441788]:Error[85511] "dead at end of block" "insert auto destroy"
      (8441790 'move' castPtr[8441788] call_tmp[8441781])
      ref i_this[8441793]:owned SystemError[1554765] "temp"
      (8441795 'move' i_this[8441793](8441797 'set reference' _formal_tmp_x[8441761]))
      val tmp[8441799]:SystemError[13599] "temp"
      (8441801 'move' tmp[8441799](8441803 'cast' SystemError[13599] nil[32]))
      (8441806 '.=' i_this[8441793] chpl_p[1554760] tmp[8441799])
      val coerce_tmp[8441810]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8441812 'move' coerce_tmp[8441810](8441814 'cast' RootClass[236] call_tmp[8441781]))
      const-val call_tmp[8441817]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8441819 'move' call_tmp[8441817](8441821 '==' coerce_tmp[8441810] nil[32]))
      if call_tmp[8441817]
      {
        (8441827 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8441830]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8441832]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8441835 call init[1499358] initTemp[8441832] castPtr[8441788])
      (8441838 'move' call_tmp[8441830] initTemp[8441832])
      (8441841 'move' ret[8441766] call_tmp[8441830])
      (8441845 call chpl__autoDestroy[3968549] _formal_tmp_x[8441761])
      (8441847 '=' i__retArg[8441755] ret[8441766])
      (8441850 'move' coerce_tmp[8441745] ret_tmp[8441747])
      const-val _formal_tmp_in_err[8441853]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8441855 'move' _formal_tmp_in_err[8441853] coerce_tmp[8441745])
      (8441858 'move' call_tmp[8441743](8441861 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8441853]))
      (8441863 '=' error[8441684] call_tmp[8441743])
      gotoErrorHandlingReturn _endlock[8441926] _endlock[8441926]
    }
    const-val call_tmp[8441869]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8441871 'move' call_tmp[8441869](8441874 call qio_err_iserr[12868] err[8441689]))
    const-val call_tmp[8441876]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8441878 'move' call_tmp[8441876](8441880 '!=' call_tmp[8441869] 0))
    if call_tmp[8441876]
    {
      val error[8441885]:Error[85511] "error variable" "temp"
      (8441887 'move' error[8441885] nil[32])
      (8441891 call _ch_ioerror[3285336] call_tmp[3379361] err[8441689] "in lock" error[8441885])
      val errorExists[8441896]:bool[19] "temp"
      (8441898 'move' errorExists[8441896](8441900 '!=' error[8441885] nil[32]))
      if errorExists[8441896]
      {
        gotoErrorHandling handler[8441908] handler[8441908]
      }
      label handler[8441908]
      val errorExists[8441910]:bool[19] "temp"
      (8441912 'move' errorExists[8441910](8441914 '!=' error[8441885] nil[32]))
      if errorExists[8441910]
      {
        (8441919 '=' error[8441684] error[8441885])
        gotoErrorHandlingReturn _endlock[8441926] _endlock[8441926]
      }
    }
    label _endlock[8441926]
    val errorExists[8441928]:bool[19] "temp"
    (8441930 'move' errorExists[8441928](8441932 '!=' error[8441684] nil[32]))
    if errorExists[8441928]
    {
      gotoErrorHandling handler[8441940] handler[8441940]
    }
    label handler[8441940]
    val errorExists[8441942]:bool[19] "temp"
    (8441944 'move' errorExists[8441942](8441946 '!=' error[8441684] nil[32]))
    if errorExists[8441942]
    {
      (8441952 call chpl_uncaught_error[87456] error[8441684])
    }
    const-val call_tmp[8441955]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8441957]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8441959]:string[244] "dead at end of block" "insert auto destroy"
    (8441962 call init[21321] ret[8441959])
    const-val coerce_tmp[8441964]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8441966 'move' coerce_tmp[8441964](8441968 '.v' i_literal[8441625] cachedNumCodepoints[21293]))
    (8441971 '.=' ret[8441959] cachedNumCodepoints[21293] coerce_tmp[8441964])
    (8441976 call initWithBorrowedBuffer[1470549] ret[8441959] i_literal[8441625])
    (8441979 '=' ret[8441957] ret[8441959])
    (8441982 'move' call_tmp[8441955] ret[8441957])
    val coerce_tmp[8441985]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8441987 'move' coerce_tmp[8441985](8441989 '.v' call_tmp[8441955] buff[21299]))
    (8441992 'noop')
    val call_tmp[8441993]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8441995 'move' call_tmp[8441993](8441997 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8441985]))
    val ret[8442000]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8442002 '=' ret[8442000](8442004 '.v' i_literal[8441625] buffLen[21281]))
    const-val call_tmp[8442007]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8442009]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8442011 'move' coerce_tmp[8442009](8442013 'cast' int(32)[66] 0))
    val coerce_tmp[8442016]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8442018 'move' coerce_tmp[8442016](8442020 '.v' call_tmp[3379361] _channel_internal[3276776]))
    const-val coerce_tmp[8442023]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8442025 'move' coerce_tmp[8442023](8442027 'cast' int(32)[66] inlineImm[8441631]))
    (8442030 'move' call_tmp[8442007](8442033 call qio_channel_scan_literal[167758] coerce_tmp[8442009] coerce_tmp[8442016] call_tmp[8441993] ret[8442000] coerce_tmp[8442023]))
    const-val err[8442039]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8442041 'move' err[8442039] call_tmp[8442007])
    const-val action[8442044]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8442046 'move' action[8442044] "reading")
    val error[8442049]:Error[85511] "error variable" "temp"
    (8442051 'move' error[8442049] nil[32])
    ref i_action[8442054]:string[244] "temp"
    (8442056 'move' i_action[8442054](8442058 'set reference' action[8442044]))
    val inlineImm[8442060]:bool[19] "temp"
    (8442062 'move' inlineImm[8442060] 1)
    const-val call_tmp[8442065]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8442067 'move' call_tmp[8442065](8442070 call qio_err_to_int[12844] call_tmp[8442007]))
    const-val call_tmp[8442072]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8442074 'move' call_tmp[8442072](8442076 'cast' int(32)[66] 0))
    const-val call_tmp[8442079]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8442081 'move' call_tmp[8442079](8442083 '==' call_tmp[8442065] call_tmp[8442072]))
    const-val call_tmp[8442086]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8442088 'move' call_tmp[8442086](8442090 'u!' call_tmp[8442079]))
    if call_tmp[8442086]
    {
      const-val call_tmp[8442094]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8442096]:string[244] "temp"
      (8442099 call literalErrorHelper[3112834] i_literal[8441625] i_action[8442054] inlineImm[8442060] ret_tmp[8442096])
      (8442104 'move' call_tmp[8442094] ret_tmp[8442096])
      val msg[8442107]:string[244] "dead at end of block" "insert auto destroy"
      (8442109 'move' msg[8442107] call_tmp[8442094])
      const-val call_tmp[8442112]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442114 'move' call_tmp[8442112](8442117 call qio_err_to_int[12844] err[8442039]))
      const-val call_tmp[8442119]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8442121 'move' call_tmp[8442119](8442123 '==' call_tmp[8442112] EILSEQ[11191]))
      if call_tmp[8442119]
      {
        const-val call_tmp[8442128]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8442130]:string[244] "temp"
        (8442133 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8442130])
        (8442135 'move' call_tmp[8442128] ret_tmp[8442130])
        const-val call_tmp[8442138]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8442140]:string[244] "temp"
        (8442143 call +[28065] call_tmp[8442128] "Error: " ret_tmp[8442140])
        (8442147 'move' call_tmp[8442138] ret_tmp[8442140])
        const-val call_tmp[8442150]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8442152]:string[244] "temp"
        (8442155 call +[28065] call_tmp[8442138] msg[8442107] ret_tmp[8442152])
        (8442159 'move' call_tmp[8442150] ret_tmp[8442152])
        (8442163 call =[28046] msg[8442107] call_tmp[8442150])
        ref i_x[8442166]:string[244] "temp"
        (8442168 'move' i_x[8442166](8442170 'set reference' call_tmp[8442150]))
        (8442173 call deinit[21354] i_x[8442166])
        ref i_x[8442175]:string[244] "temp"
        (8442177 'move' i_x[8442175](8442179 'set reference' call_tmp[8442138]))
        (8442182 call deinit[21354] i_x[8442175])
        ref i_x[8442184]:string[244] "temp"
        (8442186 'move' i_x[8442184](8442188 'set reference' call_tmp[8442128]))
        (8442191 call deinit[21354] i_x[8442184])
      }
      val error[8442194]:Error[85511] "error variable" "temp"
      (8442196 'move' error[8442194] nil[32])
      (8442200 call _ch_ioerror[3285336] call_tmp[3379361] err[8442039] msg[8442107] error[8442194])
      val errorExists[8442205]:bool[19] "temp"
      (8442207 'move' errorExists[8442205](8442209 '!=' error[8442194] nil[32]))
      if errorExists[8442205]
      {
        gotoErrorHandling handler[8442217] handler[8442217]
      }
      label handler[8442217]
      val errorExists[8442219]:bool[19] "temp"
      (8442221 'move' errorExists[8442219](8442223 '!=' error[8442194] nil[32]))
      if errorExists[8442219]
      {
        (8442228 '=' error[8442049] error[8442194])
        ref i_x[8442231]:string[244] "temp"
        (8442233 'move' i_x[8442231](8442235 'set reference' msg[8442107]))
        (8442238 call deinit[21354] i_x[8442231])
        gotoErrorHandlingReturn _end_checkLiteralError[8442253] _end_checkLiteralError[8442253]
      }
      ref i_x[8442243]:string[244] "temp"
      (8442245 'move' i_x[8442243](8442247 'set reference' msg[8442107]))
      (8442250 call deinit[21354] i_x[8442243])
    }
    label _end_checkLiteralError[8442253]
    val errorExists[8442255]:bool[19] "temp"
    (8442257 'move' errorExists[8442255](8442259 '!=' error[8442049] nil[32]))
    if errorExists[8442255]
    {
      gotoErrorHandling handler[8442267] handler[8442267]
    }
    label handler[8442267]
    val errorExists[8442269]:bool[19] "temp"
    (8442271 'move' errorExists[8442269](8442273 '!=' error[8442049] nil[32]))
    if errorExists[8442269]
    {
      (8442278 '=' error[8441645] error[8442049])
      ref i_x[8442281]:string[244] "temp"
      (8442283 'move' i_x[8442281](8442285 'set reference' action[8442044]))
      (8442288 call deinit[21354] i_x[8442281])
      ref i_x[8442290]:string[244] "temp"
      (8442292 'move' i_x[8442290](8442294 'set reference' call_tmp[8441955]))
      (8442297 call deinit[21354] i_x[8442290])
      gotoErrorHandlingReturn _end_readLiteralCommon[8442320] _end_readLiteralCommon[8442320]
    }
    ref i_x[8442302]:string[244] "temp"
    (8442304 'move' i_x[8442302](8442306 'set reference' action[8442044]))
    (8442309 call deinit[21354] i_x[8442302])
    ref i_x[8442311]:string[244] "temp"
    (8442313 'move' i_x[8442311](8442315 'set reference' call_tmp[8441955]))
    (8442318 call deinit[21354] i_x[8442311])
    label _end_readLiteralCommon[8442320]
    val errorExists[8442322]:bool[19] "temp"
    (8442324 'move' errorExists[8442322](8442326 '!=' error[8441645] nil[32]))
    if errorExists[8442322]
    {
      (8442331 '=' i_error_out[8441636] error[8441645])
      gotoErrorHandlingReturn _endreadLiteral[8442337] _endreadLiteral[8442337]
    }
    label _endreadLiteral[8442337]
    val errorExists[7303048]:bool[19] "temp"
    (7303053 'move' errorExists[7303048](7303050 '!=' error[5510594] nil[32]))
    if errorExists[7303048]
    {
      (5510600 '=' error_out[5510589] error[5510594])
      gotoErrorHandlingReturn _endendList[5510591] _endendList[5510591]
    }
    label _endendList[5510591]
    (3379375 return _void[46])
  }
  function ListDeserializer(fileReader(false,jsonDeserializer))[3378540].hasMore[3378621](const  ref arg this[3378625]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540], ref arg error_out[5510497]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3378629]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3378637]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8461918]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8461920 'move' call_tmp[8461918](8461922 '.' this[3378625] reader[3378534]))
    (3378639 'move' call_tmp[3378637] call_tmp[8461918])
    const-val _return_tmp_[5468871]:int(64)[10] "dead after last mention" "temp"
    val error[5510500]:Error[85511] "error variable" "temp"
    (5510502 'move' error[5510500] nil[32])
    (5468873 'move' _return_tmp_[5468871](3378649 call mark[3288983] call_tmp[3378637] error[5510500]))
    val errorExists[7303008]:bool[19] "temp"
    (7303013 'move' errorExists[7303008](7303010 '!=' error[5510500] nil[32]))
    if errorExists[7303008]
    {
      (5510506 '=' error_out[5510497] error[5510500])
      gotoErrorHandlingReturn _end_hasMore[3378722] _end_hasMore[3378722]
    }
    const-ref call_tmp[3378651]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8461928]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8461930 'move' call_tmp[8461928](8461932 '.' this[3378625] reader[3378534]))
    (3378653 'move' call_tmp[3378651] call_tmp[8461928])
    const-val call_tmp[3378659]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_ignoreWhitespace[3378762]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5510515]:Error[85511] "error variable" "temp"
    (5510517 'move' error[5510515] nil[32])
    val inlineImm[8447194]:string[244] "temp"
    (8447197 'move' inlineImm[8447194] "]")
    ref i_literal[8447199]:string[244] "temp"
    (8447203 'move' i_literal[8447199](8447201 'set reference' inlineImm[8447194]))
    val inlineImm[8447205]:bool[19] "temp"
    (8447208 'move' inlineImm[8447205] 1)
    ref i_error_out[8447210]:Error[85511] "temp"
    (8447214 'move' i_error_out[8447210](8447212 'set reference' error[5510515]))
    val ret[8447217]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[8447219]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[8447221]:Error[85511] "error variable" "temp"
    (8447223 'move' error[8447221] nil[32])
    val ret[8447226]:bool[19] "dead after last mention" "RVV" "temp"
    val error[8447228]:Error[85511] "error variable" "temp"
    (8447230 'move' error[8447228] nil[32])
    ref call_tmp[8447233]:locale[234] "dead after last mention" "maybe param" "temp"
    (8447235 'move' call_tmp[8447233](8447237 '.' call_tmp[3378651] _home[3276771]))
    val coerce_tmp[8447240]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8447242 'move' coerce_tmp[8447240](8447244 '.v' call_tmp[8447233] _instance[135293]))
    val coerce_tmp[8447247]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8447249 'move' coerce_tmp[8447247](8447251 'cast' RootClass[236] coerce_tmp[8447240]))
    const-val call_tmp[8447254]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447256 'move' call_tmp[8447254](8447258 '==' coerce_tmp[8447247] nil[32]))
    if call_tmp[8447254]
    {
      (8447264 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8447267]:Error[85511] "error variable" "temp"
    (8447269 'move' error[8447267] nil[32])
    const-val err[8447272]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8447274]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447276 'move' call_tmp[8447274](8447278 'cast' int(32)[66] 0))
    const-val call_tmp[8447281]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447283 'move' call_tmp[8447281](8447286 call qio_int_to_err[12856] call_tmp[8447274]))
    (8447288 'move' err[8447272] call_tmp[8447281])
    val coerce_tmp[8447291]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8447293 'move' coerce_tmp[8447291](8447295 '.v' call_tmp[3378651] _channel_internal[3276776]))
    const-val call_tmp[8447298]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447300 'move' call_tmp[8447298](8447302 'ptr_eq' coerce_tmp[8447291] nil[32]))
    if call_tmp[8447298]
    {
      const-val call_tmp[8447307]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8447309]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8447311 'move' coerce_tmp[8447309](8447313 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8447316]:owned SystemError[1554765] "temp"
      (8447319 call createSystemError[14072] coerce_tmp[8447309] "Operation attempted on an invalid fileReader" ret_tmp[8447316])
      (8447323 'move' call_tmp[8447307] ret_tmp[8447316])
      val call_tmp[8447326]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8447328]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8447330]:owned Error[1498203] "temp"
      ref i_x[8447332]:owned SystemError[1554765] "temp"
      (8447334 'move' i_x[8447332](8447336 'set reference' call_tmp[8447307]))
      ref i__retArg[8447338]:owned Error[1498203] "temp"
      (8447340 'move' i__retArg[8447338](8447342 'set reference' ret_tmp[8447330]))
      val _formal_tmp_x[8447344]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8447346 'move' _formal_tmp_x[8447344] i_x[8447332])
      const-val ret[8447349]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8447351]:owned SystemError[1554765] "temp"
      (8447353 'move' i_this[8447351](8447355 'set reference' _formal_tmp_x[8447344]))
      val coerce_tmp[8447357]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8447359 'move' coerce_tmp[8447357](8447361 '.v' i_this[8447351] chpl_p[1554760]))
      val call_tmp[8447364]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8447366 'move' call_tmp[8447364](8447368 'cast' Error[85511] coerce_tmp[8447357]))
      val castPtr[8447371]:Error[85511] "dead at end of block" "insert auto destroy"
      (8447373 'move' castPtr[8447371] call_tmp[8447364])
      ref i_this[8447376]:owned SystemError[1554765] "temp"
      (8447378 'move' i_this[8447376](8447380 'set reference' _formal_tmp_x[8447344]))
      val tmp[8447382]:SystemError[13599] "temp"
      (8447384 'move' tmp[8447382](8447386 'cast' SystemError[13599] nil[32]))
      (8447389 '.=' i_this[8447376] chpl_p[1554760] tmp[8447382])
      val coerce_tmp[8447393]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8447395 'move' coerce_tmp[8447393](8447397 'cast' RootClass[236] call_tmp[8447364]))
      const-val call_tmp[8447400]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8447402 'move' call_tmp[8447400](8447404 '==' coerce_tmp[8447393] nil[32]))
      if call_tmp[8447400]
      {
        (8447410 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8447413]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8447415]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8447418 call init[1499358] initTemp[8447415] castPtr[8447371])
      (8447421 'move' call_tmp[8447413] initTemp[8447415])
      (8447424 'move' ret[8447349] call_tmp[8447413])
      (8447428 call chpl__autoDestroy[3968549] _formal_tmp_x[8447344])
      (8447430 '=' i__retArg[8447338] ret[8447349])
      (8447433 'move' coerce_tmp[8447328] ret_tmp[8447330])
      const-val _formal_tmp_in_err[8447436]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8447438 'move' _formal_tmp_in_err[8447436] coerce_tmp[8447328])
      (8447441 'move' call_tmp[8447326](8447444 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8447436]))
      (8447446 '=' error[8447267] call_tmp[8447326])
      gotoErrorHandlingReturn _endlock[8447509] _endlock[8447509]
    }
    const-val call_tmp[8447452]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447454 'move' call_tmp[8447452](8447457 call qio_err_iserr[12868] err[8447272]))
    const-val call_tmp[8447459]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447461 'move' call_tmp[8447459](8447463 '!=' call_tmp[8447452] 0))
    if call_tmp[8447459]
    {
      val error[8447468]:Error[85511] "error variable" "temp"
      (8447470 'move' error[8447468] nil[32])
      (8447474 call _ch_ioerror[3285336] call_tmp[3378651] err[8447272] "in lock" error[8447468])
      val errorExists[8447479]:bool[19] "temp"
      (8447481 'move' errorExists[8447479](8447483 '!=' error[8447468] nil[32]))
      if errorExists[8447479]
      {
        gotoErrorHandling handler[8447491] handler[8447491]
      }
      label handler[8447491]
      val errorExists[8447493]:bool[19] "temp"
      (8447495 'move' errorExists[8447493](8447497 '!=' error[8447468] nil[32]))
      if errorExists[8447493]
      {
        (8447502 '=' error[8447267] error[8447468])
        gotoErrorHandlingReturn _endlock[8447509] _endlock[8447509]
      }
    }
    label _endlock[8447509]
    val errorExists[8447511]:bool[19] "temp"
    (8447513 'move' errorExists[8447511](8447515 '!=' error[8447267] nil[32]))
    if errorExists[8447511]
    {
      gotoErrorHandling handler[8447523] handler[8447523]
    }
    label handler[8447523]
    val errorExists[8447525]:bool[19] "temp"
    (8447527 'move' errorExists[8447525](8447529 '!=' error[8447267] nil[32]))
    if errorExists[8447525]
    {
      (8447535 call chpl_uncaught_error[87456] error[8447267])
    }
    const-val call_tmp[8447538]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8447540]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8447542]:string[244] "dead at end of block" "insert auto destroy"
    (8447545 call init[21321] ret[8447542])
    const-val coerce_tmp[8447547]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8447549 'move' coerce_tmp[8447547](8447551 '.v' i_literal[8447199] cachedNumCodepoints[21293]))
    (8447554 '.=' ret[8447542] cachedNumCodepoints[21293] coerce_tmp[8447547])
    (8447559 call initWithBorrowedBuffer[1470549] ret[8447542] i_literal[8447199])
    (8447562 '=' ret[8447540] ret[8447542])
    (8447565 'move' call_tmp[8447538] ret[8447540])
    val coerce_tmp[8447568]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8447570 'move' coerce_tmp[8447568](8447572 '.v' call_tmp[8447538] buff[21299]))
    (8447575 'noop')
    val call_tmp[8447576]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8447578 'move' call_tmp[8447576](8447580 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8447568]))
    val ret[8447583]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8447585 '=' ret[8447583](8447587 '.v' i_literal[8447199] buffLen[21281]))
    const-val call_tmp[8447590]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8447592]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8447594 'move' coerce_tmp[8447592](8447596 'cast' int(32)[66] 0))
    val coerce_tmp[8447599]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8447601 'move' coerce_tmp[8447599](8447603 '.v' call_tmp[3378651] _channel_internal[3276776]))
    const-val coerce_tmp[8447606]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8447608 'move' coerce_tmp[8447606](8447610 'cast' int(32)[66] inlineImm[8447205]))
    (8447613 'move' call_tmp[8447590](8447616 call qio_channel_scan_literal[167758] coerce_tmp[8447592] coerce_tmp[8447599] call_tmp[8447576] ret[8447583] coerce_tmp[8447606]))
    const-val err[8447622]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8447624 'move' err[8447622] call_tmp[8447590])
    const-val action[8447627]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8447629 'move' action[8447627] "matching")
    val error[8447632]:Error[85511] "error variable" "temp"
    (8447634 'move' error[8447632] nil[32])
    ref i_action[8447637]:string[244] "temp"
    (8447639 'move' i_action[8447637](8447641 'set reference' action[8447627]))
    val inlineImm[8447643]:bool[19] "temp"
    (8447645 'move' inlineImm[8447643] 1)
    const-val call_tmp[8447648]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447650 'move' call_tmp[8447648](8447653 call qio_err_to_int[12844] call_tmp[8447590]))
    const-val call_tmp[8447655]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447657 'move' call_tmp[8447655](8447659 'cast' int(32)[66] 0))
    const-val call_tmp[8447662]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447664 'move' call_tmp[8447662](8447666 '==' call_tmp[8447648] call_tmp[8447655]))
    const-val call_tmp[8447669]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8447671 'move' call_tmp[8447669](8447673 'u!' call_tmp[8447662]))
    if call_tmp[8447669]
    {
      const-val call_tmp[8447677]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8447679]:string[244] "temp"
      (8447682 call literalErrorHelper[3112834] i_literal[8447199] i_action[8447637] inlineImm[8447643] ret_tmp[8447679])
      (8447687 'move' call_tmp[8447677] ret_tmp[8447679])
      val msg[8447690]:string[244] "dead at end of block" "insert auto destroy"
      (8447692 'move' msg[8447690] call_tmp[8447677])
      const-val call_tmp[8447695]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8447697 'move' call_tmp[8447695](8447700 call qio_err_to_int[12844] err[8447622]))
      const-val call_tmp[8447702]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8447704 'move' call_tmp[8447702](8447706 '==' call_tmp[8447695] EILSEQ[11191]))
      if call_tmp[8447702]
      {
        const-val call_tmp[8447711]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8447713]:string[244] "temp"
        (8447716 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8447713])
        (8447718 'move' call_tmp[8447711] ret_tmp[8447713])
        const-val call_tmp[8447721]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8447723]:string[244] "temp"
        (8447726 call +[28065] call_tmp[8447711] "Error: " ret_tmp[8447723])
        (8447730 'move' call_tmp[8447721] ret_tmp[8447723])
        const-val call_tmp[8447733]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8447735]:string[244] "temp"
        (8447738 call +[28065] call_tmp[8447721] msg[8447690] ret_tmp[8447735])
        (8447742 'move' call_tmp[8447733] ret_tmp[8447735])
        (8447746 call =[28046] msg[8447690] call_tmp[8447733])
        ref i_x[8447749]:string[244] "temp"
        (8447751 'move' i_x[8447749](8447753 'set reference' call_tmp[8447733]))
        (8447756 call deinit[21354] i_x[8447749])
        ref i_x[8447758]:string[244] "temp"
        (8447760 'move' i_x[8447758](8447762 'set reference' call_tmp[8447721]))
        (8447765 call deinit[21354] i_x[8447758])
        ref i_x[8447767]:string[244] "temp"
        (8447769 'move' i_x[8447767](8447771 'set reference' call_tmp[8447711]))
        (8447774 call deinit[21354] i_x[8447767])
      }
      val error[8447777]:Error[85511] "error variable" "temp"
      (8447779 'move' error[8447777] nil[32])
      (8447783 call _ch_ioerror[3285336] call_tmp[3378651] err[8447622] msg[8447690] error[8447777])
      val errorExists[8447788]:bool[19] "temp"
      (8447790 'move' errorExists[8447788](8447792 '!=' error[8447777] nil[32]))
      if errorExists[8447788]
      {
        gotoErrorHandling handler[8447800] handler[8447800]
      }
      label handler[8447800]
      val errorExists[8447802]:bool[19] "temp"
      (8447804 'move' errorExists[8447802](8447806 '!=' error[8447777] nil[32]))
      if errorExists[8447802]
      {
        (8447811 '=' error[8447632] error[8447777])
        ref i_x[8447814]:string[244] "temp"
        (8447816 'move' i_x[8447814](8447818 'set reference' msg[8447690]))
        (8447821 call deinit[21354] i_x[8447814])
        gotoErrorHandlingReturn _end_checkLiteralError[8447836] _end_checkLiteralError[8447836]
      }
      ref i_x[8447826]:string[244] "temp"
      (8447828 'move' i_x[8447826](8447830 'set reference' msg[8447690]))
      (8447833 call deinit[21354] i_x[8447826])
    }
    label _end_checkLiteralError[8447836]
    val errorExists[8447838]:bool[19] "temp"
    (8447840 'move' errorExists[8447838](8447842 '!=' error[8447632] nil[32]))
    if errorExists[8447838]
    {
      gotoErrorHandling handler[8447850] handler[8447850]
    }
    label handler[8447850]
    val errorExists[8447852]:bool[19] "temp"
    (8447854 'move' errorExists[8447852](8447856 '!=' error[8447632] nil[32]))
    if errorExists[8447852]
    {
      (8447861 '=' error[8447228] error[8447632])
      ref i_x[8447864]:string[244] "temp"
      (8447866 'move' i_x[8447864](8447868 'set reference' action[8447627]))
      (8447871 call deinit[21354] i_x[8447864])
      ref i_x[8447873]:string[244] "temp"
      (8447875 'move' i_x[8447873](8447877 'set reference' call_tmp[8447538]))
      (8447880 call deinit[21354] i_x[8447873])
      gotoErrorHandlingReturn _end_readLiteralCommon[8447903] _end_readLiteralCommon[8447903]
    }
    ref i_x[8447885]:string[244] "temp"
    (8447887 'move' i_x[8447885](8447889 'set reference' action[8447627]))
    (8447892 call deinit[21354] i_x[8447885])
    ref i_x[8447894]:string[244] "temp"
    (8447896 'move' i_x[8447894](8447898 'set reference' call_tmp[8447538]))
    (8447901 call deinit[21354] i_x[8447894])
    label _end_readLiteralCommon[8447903]
    val errorExists[8447905]:bool[19] "temp"
    (8447907 'move' errorExists[8447905](8447909 '!=' error[8447228] nil[32]))
    if errorExists[8447905]
    {
      gotoErrorHandling handler[8447917] handler[8447917]
    }
    label handler[8447917]
    val errorExists[8447919]:bool[19] "temp"
    (8447921 'move' errorExists[8447919](8447923 '!=' error[8447228] nil[32]))
    if errorExists[8447919]
    {
      val call_tmp[8447928]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
      (8447930 'move' call_tmp[8447928](8447932 'dynamic_cast' BadFormatError[15094] error[8447228]))
      val tmp[8447935]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
      (8447937 'move' tmp[8447935] call_tmp[8447928])
      const-val call_tmp[8447940]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8447942 'move' call_tmp[8447940](8447944 '!=' call_tmp[8447928] nil[32]))
      if call_tmp[8447940]
      {
        const-val call_tmp[8447949]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[8447951]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
        (8447954 call init[1543824] initTemp[8447951] tmp[8447935])
        (8447957 'move' call_tmp[8447949] initTemp[8447951])
        const-val e[8447960]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
        (8447962 'move' e[8447960] call_tmp[8447949])
        (8447965 'move' ret[8447226] 0)
        (8447969 call chpl__autoDestroy[3940454] e[8447960])
        gotoReturn _end__matchLiteralCommon[8448037] _end__matchLiteralCommon[8448037]
        (8447974 call chpl__autoDestroy[3940454] e[8447960])
      }
      {
        val call_tmp[8447977]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (8447979 'move' call_tmp[8447977](8447981 'dynamic_cast' EofError[14808] error[8447228]))
        val tmp[8447984]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
        (8447986 'move' tmp[8447984] call_tmp[8447977])
        const-val call_tmp[8447989]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8447991 'move' call_tmp[8447989](8447993 '!=' call_tmp[8447977] nil[32]))
        if call_tmp[8447989]
        {
          const-val call_tmp[8447998]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8448000]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (8448003 call init[1542524] initTemp[8448000] tmp[8447984])
          (8448006 'move' call_tmp[8447998] initTemp[8448000])
          const-val e[8448009]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8448011 'move' e[8448009] call_tmp[8447998])
          (8448014 'move' ret[8447226] 0)
          (8448018 call chpl__autoDestroy[3937692] e[8448009])
          gotoReturn _end__matchLiteralCommon[8448037] _end__matchLiteralCommon[8448037]
          (8448023 call chpl__autoDestroy[3937692] e[8448009])
        }
        {
          (8448026 '=' error[8447221] error[8447228])
          gotoErrorHandlingReturn _end__matchLiteralCommon[8448037] _end__matchLiteralCommon[8448037]
        }
      }
    }
    (8448034 'move' ret[8447226] 1)
    label _end__matchLiteralCommon[8448037]
    (8448039 'move' call_tmp[8447219] ret[8447226])
    val errorExists[8448042]:bool[19] "temp"
    (8448044 'move' errorExists[8448042](8448046 '!=' error[8447221] nil[32]))
    if errorExists[8448042]
    {
      (8448051 '=' i_error_out[8447210] error[8447221])
      gotoErrorHandlingReturn _endmatchLiteral[8448060] _endmatchLiteral[8448060]
    }
    (8448057 '=' ret[8447217] call_tmp[8447219])
    label _endmatchLiteral[8448060]
    (3378661 'move' call_tmp[3378659] ret[8447217])
    val errorExists[7303016]:bool[19] "temp"
    (7303021 'move' errorExists[7303016](7303018 '!=' error[5510515] nil[32]))
    if errorExists[7303016]
    {
      (5510521 '=' error_out[5510497] error[5510515])
      gotoErrorHandlingReturn _end_hasMore[3378722] _end_hasMore[3378722]
    }
    const-val call_tmp[3378669]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3378671 'move' call_tmp[3378669] call_tmp[3378659])
    if call_tmp[3378669]
    {
      const-ref call_tmp[3378678]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8461938]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8461940 'move' call_tmp[8461938](8461942 '.' this[3378625] reader[3378534]))
      (3378680 'move' call_tmp[3378678] call_tmp[8461938])
      val coerce_tmp[8454048]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454050 'move' coerce_tmp[8454048](8454052 '.v' call_tmp[3378678] _channel_internal[3276776]))
      (8454056 call qio_channel_revert_unlocked[166360] coerce_tmp[8454048])
      (3378692 'move' ret[3378629] 0)
      gotoReturn _end_hasMore[3378722] _end_hasMore[3378722]
    }
    {
      const-ref call_tmp[3378700]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8461948]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8461950 'move' call_tmp[8461948](8461952 '.' this[3378625] reader[3378534]))
      (3378702 'move' call_tmp[3378700] call_tmp[8461948])
      val coerce_tmp[8461995]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8461997 'move' coerce_tmp[8461995](8461999 '.v' call_tmp[3378700] _channel_internal[3276776]))
      (8462003 call qio_channel_commit_unlocked[166368] coerce_tmp[8461995])
      (3378714 'move' ret[3378629] 1)
      gotoReturn _end_hasMore[3378722] _end_hasMore[3378722]
    }
    label _end_hasMore[3378722]
    (3378724 return ret[3378629])
  }
  function jsonDeserializer[356412].startMap[3348715](const  ref arg this[3348719]:jsonDeserializer[356412], const  ref arg reader[3348723]:fileReader(false,jsonDeserializer)[3276790], ref arg error_out[5509678]:Error[85511], ref arg _retArg[5589316]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[3348725]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead after last mention" "RVV" "temp"
    val default_arg_ignoreWhitespace[3348759]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5509683]:Error[85511] "error variable" "temp"
    (5509685 'move' error[5509683] nil[32])
    val inlineImm[8436573]:string[244] "temp"
    (8436576 'move' inlineImm[8436573] "{")
    ref i_literal[8436578]:string[244] "temp"
    (8436582 'move' i_literal[8436578](8436580 'set reference' inlineImm[8436573]))
    val inlineImm[8436584]:bool[19] "temp"
    (8436587 'move' inlineImm[8436584] 1)
    ref i_error_out[8436589]:Error[85511] "temp"
    (8436593 'move' i_error_out[8436589](8436591 'set reference' error[5509683]))
    val ret[8436596]:void[4] "dead after last mention" "RVV" "temp"
    val error[8436598]:Error[85511] "error variable" "temp"
    (8436600 'move' error[8436598] nil[32])
    ref call_tmp[8436603]:locale[234] "dead after last mention" "maybe param" "temp"
    (8436605 'move' call_tmp[8436603](8436607 '.' reader[3348723] _home[3276771]))
    val coerce_tmp[8436610]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436612 'move' coerce_tmp[8436610](8436614 '.v' call_tmp[8436603] _instance[135293]))
    val coerce_tmp[8436617]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436619 'move' coerce_tmp[8436617](8436621 'cast' RootClass[236] coerce_tmp[8436610]))
    const-val call_tmp[8436624]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436626 'move' call_tmp[8436624](8436628 '==' coerce_tmp[8436617] nil[32]))
    if call_tmp[8436624]
    {
      (8436634 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8436637]:Error[85511] "error variable" "temp"
    (8436639 'move' error[8436637] nil[32])
    const-val err[8436642]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8436644]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436646 'move' call_tmp[8436644](8436648 'cast' int(32)[66] 0))
    const-val call_tmp[8436651]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436653 'move' call_tmp[8436651](8436656 call qio_int_to_err[12856] call_tmp[8436644]))
    (8436658 'move' err[8436642] call_tmp[8436651])
    val coerce_tmp[8436661]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436663 'move' coerce_tmp[8436661](8436665 '.v' reader[3348723] _channel_internal[3276776]))
    const-val call_tmp[8436668]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436670 'move' call_tmp[8436668](8436672 'ptr_eq' coerce_tmp[8436661] nil[32]))
    if call_tmp[8436668]
    {
      const-val call_tmp[8436677]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8436679]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8436681 'move' coerce_tmp[8436679](8436683 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8436686]:owned SystemError[1554765] "temp"
      (8436689 call createSystemError[14072] coerce_tmp[8436679] "Operation attempted on an invalid fileReader" ret_tmp[8436686])
      (8436693 'move' call_tmp[8436677] ret_tmp[8436686])
      val call_tmp[8436696]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8436698]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8436700]:owned Error[1498203] "temp"
      ref i_x[8436702]:owned SystemError[1554765] "temp"
      (8436704 'move' i_x[8436702](8436706 'set reference' call_tmp[8436677]))
      ref i__retArg[8436708]:owned Error[1498203] "temp"
      (8436710 'move' i__retArg[8436708](8436712 'set reference' ret_tmp[8436700]))
      val _formal_tmp_x[8436714]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8436716 'move' _formal_tmp_x[8436714] i_x[8436702])
      const-val ret[8436719]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8436721]:owned SystemError[1554765] "temp"
      (8436723 'move' i_this[8436721](8436725 'set reference' _formal_tmp_x[8436714]))
      val coerce_tmp[8436727]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8436729 'move' coerce_tmp[8436727](8436731 '.v' i_this[8436721] chpl_p[1554760]))
      val call_tmp[8436734]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8436736 'move' call_tmp[8436734](8436738 'cast' Error[85511] coerce_tmp[8436727]))
      val castPtr[8436741]:Error[85511] "dead at end of block" "insert auto destroy"
      (8436743 'move' castPtr[8436741] call_tmp[8436734])
      ref i_this[8436746]:owned SystemError[1554765] "temp"
      (8436748 'move' i_this[8436746](8436750 'set reference' _formal_tmp_x[8436714]))
      val tmp[8436752]:SystemError[13599] "temp"
      (8436754 'move' tmp[8436752](8436756 'cast' SystemError[13599] nil[32]))
      (8436759 '.=' i_this[8436746] chpl_p[1554760] tmp[8436752])
      val coerce_tmp[8436763]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8436765 'move' coerce_tmp[8436763](8436767 'cast' RootClass[236] call_tmp[8436734]))
      const-val call_tmp[8436770]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8436772 'move' call_tmp[8436770](8436774 '==' coerce_tmp[8436763] nil[32]))
      if call_tmp[8436770]
      {
        (8436780 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8436783]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8436785]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8436788 call init[1499358] initTemp[8436785] castPtr[8436741])
      (8436791 'move' call_tmp[8436783] initTemp[8436785])
      (8436794 'move' ret[8436719] call_tmp[8436783])
      (8436798 call chpl__autoDestroy[3968549] _formal_tmp_x[8436714])
      (8436800 '=' i__retArg[8436708] ret[8436719])
      (8436803 'move' coerce_tmp[8436698] ret_tmp[8436700])
      const-val _formal_tmp_in_err[8436806]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8436808 'move' _formal_tmp_in_err[8436806] coerce_tmp[8436698])
      (8436811 'move' call_tmp[8436696](8436814 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8436806]))
      (8436816 '=' error[8436637] call_tmp[8436696])
      gotoErrorHandlingReturn _endlock[8436879] _endlock[8436879]
    }
    const-val call_tmp[8436822]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436824 'move' call_tmp[8436822](8436827 call qio_err_iserr[12868] err[8436642]))
    const-val call_tmp[8436829]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8436831 'move' call_tmp[8436829](8436833 '!=' call_tmp[8436822] 0))
    if call_tmp[8436829]
    {
      val error[8436838]:Error[85511] "error variable" "temp"
      (8436840 'move' error[8436838] nil[32])
      (8436844 call _ch_ioerror[3285336] reader[3348723] err[8436642] "in lock" error[8436838])
      val errorExists[8436849]:bool[19] "temp"
      (8436851 'move' errorExists[8436849](8436853 '!=' error[8436838] nil[32]))
      if errorExists[8436849]
      {
        gotoErrorHandling handler[8436861] handler[8436861]
      }
      label handler[8436861]
      val errorExists[8436863]:bool[19] "temp"
      (8436865 'move' errorExists[8436863](8436867 '!=' error[8436838] nil[32]))
      if errorExists[8436863]
      {
        (8436872 '=' error[8436637] error[8436838])
        gotoErrorHandlingReturn _endlock[8436879] _endlock[8436879]
      }
    }
    label _endlock[8436879]
    val errorExists[8436881]:bool[19] "temp"
    (8436883 'move' errorExists[8436881](8436885 '!=' error[8436637] nil[32]))
    if errorExists[8436881]
    {
      gotoErrorHandling handler[8436893] handler[8436893]
    }
    label handler[8436893]
    val errorExists[8436895]:bool[19] "temp"
    (8436897 'move' errorExists[8436895](8436899 '!=' error[8436637] nil[32]))
    if errorExists[8436895]
    {
      (8436905 call chpl_uncaught_error[87456] error[8436637])
    }
    const-val call_tmp[8436908]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8436910]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8436912]:string[244] "dead at end of block" "insert auto destroy"
    (8436915 call init[21321] ret[8436912])
    const-val coerce_tmp[8436917]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436919 'move' coerce_tmp[8436917](8436921 '.v' i_literal[8436578] cachedNumCodepoints[21293]))
    (8436924 '.=' ret[8436912] cachedNumCodepoints[21293] coerce_tmp[8436917])
    (8436929 call initWithBorrowedBuffer[1470549] ret[8436912] i_literal[8436578])
    (8436932 '=' ret[8436910] ret[8436912])
    (8436935 'move' call_tmp[8436908] ret[8436910])
    val coerce_tmp[8436938]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8436940 'move' coerce_tmp[8436938](8436942 '.v' call_tmp[8436908] buff[21299]))
    (8436945 'noop')
    val call_tmp[8436946]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8436948 'move' call_tmp[8436946](8436950 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8436938]))
    val ret[8436953]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8436955 '=' ret[8436953](8436957 '.v' i_literal[8436578] buffLen[21281]))
    const-val call_tmp[8436960]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8436962]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436964 'move' coerce_tmp[8436962](8436966 'cast' int(32)[66] 0))
    val coerce_tmp[8436969]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436971 'move' coerce_tmp[8436969](8436973 '.v' reader[3348723] _channel_internal[3276776]))
    const-val coerce_tmp[8436976]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8436978 'move' coerce_tmp[8436976](8436980 'cast' int(32)[66] inlineImm[8436584]))
    (8436983 'move' call_tmp[8436960](8436986 call qio_channel_scan_literal[167758] coerce_tmp[8436962] coerce_tmp[8436969] call_tmp[8436946] ret[8436953] coerce_tmp[8436976]))
    const-val err[8436992]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8436994 'move' err[8436992] call_tmp[8436960])
    const-val action[8436997]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8436999 'move' action[8436997] "reading")
    val error[8437002]:Error[85511] "error variable" "temp"
    (8437004 'move' error[8437002] nil[32])
    ref i_action[8437007]:string[244] "temp"
    (8437009 'move' i_action[8437007](8437011 'set reference' action[8436997]))
    val inlineImm[8437013]:bool[19] "temp"
    (8437015 'move' inlineImm[8437013] 1)
    const-val call_tmp[8437018]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8437020 'move' call_tmp[8437018](8437023 call qio_err_to_int[12844] call_tmp[8436960]))
    const-val call_tmp[8437025]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8437027 'move' call_tmp[8437025](8437029 'cast' int(32)[66] 0))
    const-val call_tmp[8437032]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8437034 'move' call_tmp[8437032](8437036 '==' call_tmp[8437018] call_tmp[8437025]))
    const-val call_tmp[8437039]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8437041 'move' call_tmp[8437039](8437043 'u!' call_tmp[8437032]))
    if call_tmp[8437039]
    {
      const-val call_tmp[8437047]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8437049]:string[244] "temp"
      (8437052 call literalErrorHelper[3112834] i_literal[8436578] i_action[8437007] inlineImm[8437013] ret_tmp[8437049])
      (8437057 'move' call_tmp[8437047] ret_tmp[8437049])
      val msg[8437060]:string[244] "dead at end of block" "insert auto destroy"
      (8437062 'move' msg[8437060] call_tmp[8437047])
      const-val call_tmp[8437065]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437067 'move' call_tmp[8437065](8437070 call qio_err_to_int[12844] err[8436992]))
      const-val call_tmp[8437072]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437074 'move' call_tmp[8437072](8437076 '==' call_tmp[8437065] EILSEQ[11191]))
      if call_tmp[8437072]
      {
        const-val call_tmp[8437081]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8437083]:string[244] "temp"
        (8437086 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8437083])
        (8437088 'move' call_tmp[8437081] ret_tmp[8437083])
        const-val call_tmp[8437091]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8437093]:string[244] "temp"
        (8437096 call +[28065] call_tmp[8437081] "Error: " ret_tmp[8437093])
        (8437100 'move' call_tmp[8437091] ret_tmp[8437093])
        const-val call_tmp[8437103]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8437105]:string[244] "temp"
        (8437108 call +[28065] call_tmp[8437091] msg[8437060] ret_tmp[8437105])
        (8437112 'move' call_tmp[8437103] ret_tmp[8437105])
        (8437116 call =[28046] msg[8437060] call_tmp[8437103])
        ref i_x[8437119]:string[244] "temp"
        (8437121 'move' i_x[8437119](8437123 'set reference' call_tmp[8437103]))
        (8437126 call deinit[21354] i_x[8437119])
        ref i_x[8437128]:string[244] "temp"
        (8437130 'move' i_x[8437128](8437132 'set reference' call_tmp[8437091]))
        (8437135 call deinit[21354] i_x[8437128])
        ref i_x[8437137]:string[244] "temp"
        (8437139 'move' i_x[8437137](8437141 'set reference' call_tmp[8437081]))
        (8437144 call deinit[21354] i_x[8437137])
      }
      val error[8437147]:Error[85511] "error variable" "temp"
      (8437149 'move' error[8437147] nil[32])
      (8437153 call _ch_ioerror[3285336] reader[3348723] err[8436992] msg[8437060] error[8437147])
      val errorExists[8437158]:bool[19] "temp"
      (8437160 'move' errorExists[8437158](8437162 '!=' error[8437147] nil[32]))
      if errorExists[8437158]
      {
        gotoErrorHandling handler[8437170] handler[8437170]
      }
      label handler[8437170]
      val errorExists[8437172]:bool[19] "temp"
      (8437174 'move' errorExists[8437172](8437176 '!=' error[8437147] nil[32]))
      if errorExists[8437172]
      {
        (8437181 '=' error[8437002] error[8437147])
        ref i_x[8437184]:string[244] "temp"
        (8437186 'move' i_x[8437184](8437188 'set reference' msg[8437060]))
        (8437191 call deinit[21354] i_x[8437184])
        gotoErrorHandlingReturn _end_checkLiteralError[8437206] _end_checkLiteralError[8437206]
      }
      ref i_x[8437196]:string[244] "temp"
      (8437198 'move' i_x[8437196](8437200 'set reference' msg[8437060]))
      (8437203 call deinit[21354] i_x[8437196])
    }
    label _end_checkLiteralError[8437206]
    val errorExists[8437208]:bool[19] "temp"
    (8437210 'move' errorExists[8437208](8437212 '!=' error[8437002] nil[32]))
    if errorExists[8437208]
    {
      gotoErrorHandling handler[8437220] handler[8437220]
    }
    label handler[8437220]
    val errorExists[8437222]:bool[19] "temp"
    (8437224 'move' errorExists[8437222](8437226 '!=' error[8437002] nil[32]))
    if errorExists[8437222]
    {
      (8437231 '=' error[8436598] error[8437002])
      ref i_x[8437234]:string[244] "temp"
      (8437236 'move' i_x[8437234](8437238 'set reference' action[8436997]))
      (8437241 call deinit[21354] i_x[8437234])
      ref i_x[8437243]:string[244] "temp"
      (8437245 'move' i_x[8437243](8437247 'set reference' call_tmp[8436908]))
      (8437250 call deinit[21354] i_x[8437243])
      gotoErrorHandlingReturn _end_readLiteralCommon[8437273] _end_readLiteralCommon[8437273]
    }
    ref i_x[8437255]:string[244] "temp"
    (8437257 'move' i_x[8437255](8437259 'set reference' action[8436997]))
    (8437262 call deinit[21354] i_x[8437255])
    ref i_x[8437264]:string[244] "temp"
    (8437266 'move' i_x[8437264](8437268 'set reference' call_tmp[8436908]))
    (8437271 call deinit[21354] i_x[8437264])
    label _end_readLiteralCommon[8437273]
    val errorExists[8437275]:bool[19] "temp"
    (8437277 'move' errorExists[8437275](8437279 '!=' error[8436598] nil[32]))
    if errorExists[8437275]
    {
      (8437284 '=' i_error_out[8436589] error[8436598])
      gotoErrorHandlingReturn _endreadLiteral[8437290] _endreadLiteral[8437290]
    }
    label _endreadLiteral[8437290]
    val errorExists[7302616]:bool[19] "temp"
    (7302621 'move' errorExists[7302616](7302618 '!=' error[5509683] nil[32]))
    if errorExists[7302616]
    {
      (5509689 '=' error_out[5509678] error[5509683])
      gotoErrorHandlingReturn _endstartMap[5509680] _endstartMap[5509680]
    }
    const-val call_tmp[3348740]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[3348771]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822] "dead after last mention" "delay instantiation" "temp"
    const-val _formal_tmp_in_reader[3348853]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "expr temp" "no auto destroy" "temp"
    val inlineImm[8454574]:bool[19] "temp"
    (8454577 'move' inlineImm[8454574] 0)
    val ret[8454580]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "RVV" "temp"
    const-val tmp[8454582]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "temp"
    (8454585 call init=[3282985] tmp[8454582] reader[3348723])
    (8454588 'move' ret[8454580] tmp[8454582])
    (3348858 'move' _formal_tmp_in_reader[3348853] ret[8454580])
    const-val default_arg__first[3348895]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (3348899 'move' default_arg__first[3348895] 1)
    (3348774 call init[3348779] initTemp[3348771] _formal_tmp_in_reader[3348853] default_arg__first[3348895])
    (3348742 'move' call_tmp[3348740] initTemp[3348771])
    (3348747 'move' ret[3348725] call_tmp[3348740])
    label _endstartMap[5509680]
    (5589318 '=' _retArg[5589316] ret[3348725])
    (5589320 return _void[46])
  }
  function MapDeserializer(fileReader(false,jsonDeserializer))[3348822].readKey[3349035](ref arg this[3349039]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822], ref arg error_out[5509731]:Error[85511], ref arg _retArg[5589334]:string[244]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479910]:string[244] "temp"
    const-val ret[3349045]:string[244] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3349055]:bool[19] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459564]:bool[19] "dead after last mention" "maybe param" "temp"
    (8459566 'move' call_tmp[8459564](8459568 '.' this[3349039] _first[3348818]))
    (3349057 'move' call_tmp[3349055] call_tmp[8459564])
    const-val call_tmp[3349063]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3349291]:bool[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3349295 'move' coerce_tmp[3349291](3349293 'deref' call_tmp[3349055]))
    const-val call_tmp[7351373]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351375 'move' call_tmp[7351373](7351377 'u!' coerce_tmp[3349291]))
    (3349065 'move' call_tmp[3349063] call_tmp[7351373])
    const-val call_tmp[3349070]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (3349072 'move' call_tmp[3349070] call_tmp[3349063])
    if call_tmp[3349070]
    {
      const-ref call_tmp[3349079]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8459470]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8459472 'move' call_tmp[8459470](8459474 '.' this[3349039] reader[3348816]))
      (3349081 'move' call_tmp[3349079] call_tmp[8459470])
      val default_arg_ignoreWhitespace[3349304]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      val error[5509734]:Error[85511] "error variable" "temp"
      (5509736 'move' error[5509734] nil[32])
      val inlineImm[8437294]:string[244] "temp"
      (8437297 'move' inlineImm[8437294] ",")
      ref i_literal[8437299]:string[244] "temp"
      (8437303 'move' i_literal[8437299](8437301 'set reference' inlineImm[8437294]))
      val inlineImm[8437305]:bool[19] "temp"
      (8437308 'move' inlineImm[8437305] 1)
      ref i_error_out[8437310]:Error[85511] "temp"
      (8437314 'move' i_error_out[8437310](8437312 'set reference' error[5509734]))
      val ret[8437317]:void[4] "dead after last mention" "RVV" "temp"
      val error[8437319]:Error[85511] "error variable" "temp"
      (8437321 'move' error[8437319] nil[32])
      ref call_tmp[8437324]:locale[234] "dead after last mention" "maybe param" "temp"
      (8437326 'move' call_tmp[8437324](8437328 '.' call_tmp[3349079] _home[3276771]))
      val coerce_tmp[8437331]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8437333 'move' coerce_tmp[8437331](8437335 '.v' call_tmp[8437324] _instance[135293]))
      val coerce_tmp[8437338]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8437340 'move' coerce_tmp[8437338](8437342 'cast' RootClass[236] coerce_tmp[8437331]))
      const-val call_tmp[8437345]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437347 'move' call_tmp[8437345](8437349 '==' coerce_tmp[8437338] nil[32]))
      if call_tmp[8437345]
      {
        (8437355 call nilCheckHalt[392] "argument to ! is nil")
      }
      val error[8437358]:Error[85511] "error variable" "temp"
      (8437360 'move' error[8437358] nil[32])
      const-val err[8437363]:errorCode[12828] "dead at end of block" "insert auto destroy"
      const-val call_tmp[8437365]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437367 'move' call_tmp[8437365](8437369 'cast' int(32)[66] 0))
      const-val call_tmp[8437372]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437374 'move' call_tmp[8437372](8437377 call qio_int_to_err[12856] call_tmp[8437365]))
      (8437379 'move' err[8437363] call_tmp[8437372])
      val coerce_tmp[8437382]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8437384 'move' coerce_tmp[8437382](8437386 '.v' call_tmp[3349079] _channel_internal[3276776]))
      const-val call_tmp[8437389]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437391 'move' call_tmp[8437389](8437393 'ptr_eq' coerce_tmp[8437382] nil[32]))
      if call_tmp[8437389]
      {
        const-val call_tmp[8437398]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val coerce_tmp[8437400]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8437402 'move' coerce_tmp[8437400](8437404 'cast' int(64)[10] EINVAL[11206]))
        const-val ret_tmp[8437407]:owned SystemError[1554765] "temp"
        (8437410 call createSystemError[14072] coerce_tmp[8437400] "Operation attempted on an invalid fileReader" ret_tmp[8437407])
        (8437414 'move' call_tmp[8437398] ret_tmp[8437407])
        val call_tmp[8437417]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[8437419]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val ret_tmp[8437421]:owned Error[1498203] "temp"
        ref i_x[8437423]:owned SystemError[1554765] "temp"
        (8437425 'move' i_x[8437423](8437427 'set reference' call_tmp[8437398]))
        ref i__retArg[8437429]:owned Error[1498203] "temp"
        (8437431 'move' i__retArg[8437429](8437433 'set reference' ret_tmp[8437421]))
        val _formal_tmp_x[8437435]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (8437437 'move' _formal_tmp_x[8437435] i_x[8437423])
        const-val ret[8437440]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[8437442]:owned SystemError[1554765] "temp"
        (8437444 'move' i_this[8437442](8437446 'set reference' _formal_tmp_x[8437435]))
        val coerce_tmp[8437448]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8437450 'move' coerce_tmp[8437448](8437452 '.v' i_this[8437442] chpl_p[1554760]))
        val call_tmp[8437455]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (8437457 'move' call_tmp[8437455](8437459 'cast' Error[85511] coerce_tmp[8437448]))
        val castPtr[8437462]:Error[85511] "dead at end of block" "insert auto destroy"
        (8437464 'move' castPtr[8437462] call_tmp[8437455])
        ref i_this[8437467]:owned SystemError[1554765] "temp"
        (8437469 'move' i_this[8437467](8437471 'set reference' _formal_tmp_x[8437435]))
        val tmp[8437473]:SystemError[13599] "temp"
        (8437475 'move' tmp[8437473](8437477 'cast' SystemError[13599] nil[32]))
        (8437480 '.=' i_this[8437467] chpl_p[1554760] tmp[8437473])
        val coerce_tmp[8437484]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (8437486 'move' coerce_tmp[8437484](8437488 'cast' RootClass[236] call_tmp[8437455]))
        const-val call_tmp[8437491]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8437493 'move' call_tmp[8437491](8437495 '==' coerce_tmp[8437484] nil[32]))
        if call_tmp[8437491]
        {
          (8437501 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[8437504]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[8437506]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (8437509 call init[1499358] initTemp[8437506] castPtr[8437462])
        (8437512 'move' call_tmp[8437504] initTemp[8437506])
        (8437515 'move' ret[8437440] call_tmp[8437504])
        (8437519 call chpl__autoDestroy[3968549] _formal_tmp_x[8437435])
        (8437521 '=' i__retArg[8437429] ret[8437440])
        (8437524 'move' coerce_tmp[8437419] ret_tmp[8437421])
        const-val _formal_tmp_in_err[8437527]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (8437529 'move' _formal_tmp_in_err[8437527] coerce_tmp[8437419])
        (8437532 'move' call_tmp[8437417](8437535 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8437527]))
        (8437537 '=' error[8437358] call_tmp[8437417])
        gotoErrorHandlingReturn _endlock[8437600] _endlock[8437600]
      }
      const-val call_tmp[8437543]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437545 'move' call_tmp[8437543](8437548 call qio_err_iserr[12868] err[8437363]))
      const-val call_tmp[8437550]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437552 'move' call_tmp[8437550](8437554 '!=' call_tmp[8437543] 0))
      if call_tmp[8437550]
      {
        val error[8437559]:Error[85511] "error variable" "temp"
        (8437561 'move' error[8437559] nil[32])
        (8437565 call _ch_ioerror[3285336] call_tmp[3349079] err[8437363] "in lock" error[8437559])
        val errorExists[8437570]:bool[19] "temp"
        (8437572 'move' errorExists[8437570](8437574 '!=' error[8437559] nil[32]))
        if errorExists[8437570]
        {
          gotoErrorHandling handler[8437582] handler[8437582]
        }
        label handler[8437582]
        val errorExists[8437584]:bool[19] "temp"
        (8437586 'move' errorExists[8437584](8437588 '!=' error[8437559] nil[32]))
        if errorExists[8437584]
        {
          (8437593 '=' error[8437358] error[8437559])
          gotoErrorHandlingReturn _endlock[8437600] _endlock[8437600]
        }
      }
      label _endlock[8437600]
      val errorExists[8437602]:bool[19] "temp"
      (8437604 'move' errorExists[8437602](8437606 '!=' error[8437358] nil[32]))
      if errorExists[8437602]
      {
        gotoErrorHandling handler[8437614] handler[8437614]
      }
      label handler[8437614]
      val errorExists[8437616]:bool[19] "temp"
      (8437618 'move' errorExists[8437616](8437620 '!=' error[8437358] nil[32]))
      if errorExists[8437616]
      {
        (8437626 call chpl_uncaught_error[87456] error[8437358])
      }
      const-val call_tmp[8437629]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret[8437631]:string[244] "dead after last mention" "RVV" "temp"
      val ret[8437633]:string[244] "dead at end of block" "insert auto destroy"
      (8437636 call init[21321] ret[8437633])
      const-val coerce_tmp[8437638]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8437640 'move' coerce_tmp[8437638](8437642 '.v' i_literal[8437299] cachedNumCodepoints[21293]))
      (8437645 '.=' ret[8437633] cachedNumCodepoints[21293] coerce_tmp[8437638])
      (8437650 call initWithBorrowedBuffer[1470549] ret[8437633] i_literal[8437299])
      (8437653 '=' ret[8437631] ret[8437633])
      (8437656 'move' call_tmp[8437629] ret[8437631])
      val coerce_tmp[8437659]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (8437661 'move' coerce_tmp[8437659](8437663 '.v' call_tmp[8437629] buff[21299]))
      (8437666 'noop')
      val call_tmp[8437667]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (8437669 'move' call_tmp[8437667](8437671 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8437659]))
      val ret[8437674]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8437676 '=' ret[8437674](8437678 '.v' i_literal[8437299] buffLen[21281]))
      const-val call_tmp[8437681]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[8437683]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8437685 'move' coerce_tmp[8437683](8437687 'cast' int(32)[66] 0))
      val coerce_tmp[8437690]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8437692 'move' coerce_tmp[8437690](8437694 '.v' call_tmp[3349079] _channel_internal[3276776]))
      const-val coerce_tmp[8437697]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8437699 'move' coerce_tmp[8437697](8437701 'cast' int(32)[66] inlineImm[8437305]))
      (8437704 'move' call_tmp[8437681](8437707 call qio_channel_scan_literal[167758] coerce_tmp[8437683] coerce_tmp[8437690] call_tmp[8437667] ret[8437674] coerce_tmp[8437697]))
      const-val err[8437713]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
      (8437715 'move' err[8437713] call_tmp[8437681])
      const-val action[8437718]:string[244] "dead at end of block" "const" "insert auto destroy"
      (8437720 'move' action[8437718] "reading")
      val error[8437723]:Error[85511] "error variable" "temp"
      (8437725 'move' error[8437723] nil[32])
      ref i_action[8437728]:string[244] "temp"
      (8437730 'move' i_action[8437728](8437732 'set reference' action[8437718]))
      val inlineImm[8437734]:bool[19] "temp"
      (8437736 'move' inlineImm[8437734] 1)
      const-val call_tmp[8437739]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437741 'move' call_tmp[8437739](8437744 call qio_err_to_int[12844] call_tmp[8437681]))
      const-val call_tmp[8437746]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437748 'move' call_tmp[8437746](8437750 'cast' int(32)[66] 0))
      const-val call_tmp[8437753]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437755 'move' call_tmp[8437753](8437757 '==' call_tmp[8437739] call_tmp[8437746]))
      const-val call_tmp[8437760]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8437762 'move' call_tmp[8437760](8437764 'u!' call_tmp[8437753]))
      if call_tmp[8437760]
      {
        const-val call_tmp[8437768]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[8437770]:string[244] "temp"
        (8437773 call literalErrorHelper[3112834] i_literal[8437299] i_action[8437728] inlineImm[8437734] ret_tmp[8437770])
        (8437778 'move' call_tmp[8437768] ret_tmp[8437770])
        val msg[8437781]:string[244] "dead at end of block" "insert auto destroy"
        (8437783 'move' msg[8437781] call_tmp[8437768])
        const-val call_tmp[8437786]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (8437788 'move' call_tmp[8437786](8437791 call qio_err_to_int[12844] err[8437713]))
        const-val call_tmp[8437793]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8437795 'move' call_tmp[8437793](8437797 '==' call_tmp[8437786] EILSEQ[11191]))
        if call_tmp[8437793]
        {
          const-val call_tmp[8437802]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8437804]:string[244] "temp"
          (8437807 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8437804])
          (8437809 'move' call_tmp[8437802] ret_tmp[8437804])
          const-val call_tmp[8437812]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8437814]:string[244] "temp"
          (8437817 call +[28065] call_tmp[8437802] "Error: " ret_tmp[8437814])
          (8437821 'move' call_tmp[8437812] ret_tmp[8437814])
          const-val call_tmp[8437824]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8437826]:string[244] "temp"
          (8437829 call +[28065] call_tmp[8437812] msg[8437781] ret_tmp[8437826])
          (8437833 'move' call_tmp[8437824] ret_tmp[8437826])
          (8437837 call =[28046] msg[8437781] call_tmp[8437824])
          ref i_x[8437840]:string[244] "temp"
          (8437842 'move' i_x[8437840](8437844 'set reference' call_tmp[8437824]))
          (8437847 call deinit[21354] i_x[8437840])
          ref i_x[8437849]:string[244] "temp"
          (8437851 'move' i_x[8437849](8437853 'set reference' call_tmp[8437812]))
          (8437856 call deinit[21354] i_x[8437849])
          ref i_x[8437858]:string[244] "temp"
          (8437860 'move' i_x[8437858](8437862 'set reference' call_tmp[8437802]))
          (8437865 call deinit[21354] i_x[8437858])
        }
        val error[8437868]:Error[85511] "error variable" "temp"
        (8437870 'move' error[8437868] nil[32])
        (8437874 call _ch_ioerror[3285336] call_tmp[3349079] err[8437713] msg[8437781] error[8437868])
        val errorExists[8437879]:bool[19] "temp"
        (8437881 'move' errorExists[8437879](8437883 '!=' error[8437868] nil[32]))
        if errorExists[8437879]
        {
          gotoErrorHandling handler[8437891] handler[8437891]
        }
        label handler[8437891]
        val errorExists[8437893]:bool[19] "temp"
        (8437895 'move' errorExists[8437893](8437897 '!=' error[8437868] nil[32]))
        if errorExists[8437893]
        {
          (8437902 '=' error[8437723] error[8437868])
          ref i_x[8437905]:string[244] "temp"
          (8437907 'move' i_x[8437905](8437909 'set reference' msg[8437781]))
          (8437912 call deinit[21354] i_x[8437905])
          gotoErrorHandlingReturn _end_checkLiteralError[8437927] _end_checkLiteralError[8437927]
        }
        ref i_x[8437917]:string[244] "temp"
        (8437919 'move' i_x[8437917](8437921 'set reference' msg[8437781]))
        (8437924 call deinit[21354] i_x[8437917])
      }
      label _end_checkLiteralError[8437927]
      val errorExists[8437929]:bool[19] "temp"
      (8437931 'move' errorExists[8437929](8437933 '!=' error[8437723] nil[32]))
      if errorExists[8437929]
      {
        gotoErrorHandling handler[8437941] handler[8437941]
      }
      label handler[8437941]
      val errorExists[8437943]:bool[19] "temp"
      (8437945 'move' errorExists[8437943](8437947 '!=' error[8437723] nil[32]))
      if errorExists[8437943]
      {
        (8437952 '=' error[8437319] error[8437723])
        ref i_x[8437955]:string[244] "temp"
        (8437957 'move' i_x[8437955](8437959 'set reference' action[8437718]))
        (8437962 call deinit[21354] i_x[8437955])
        ref i_x[8437964]:string[244] "temp"
        (8437966 'move' i_x[8437964](8437968 'set reference' call_tmp[8437629]))
        (8437971 call deinit[21354] i_x[8437964])
        gotoErrorHandlingReturn _end_readLiteralCommon[8437994] _end_readLiteralCommon[8437994]
      }
      ref i_x[8437976]:string[244] "temp"
      (8437978 'move' i_x[8437976](8437980 'set reference' action[8437718]))
      (8437983 call deinit[21354] i_x[8437976])
      ref i_x[8437985]:string[244] "temp"
      (8437987 'move' i_x[8437985](8437989 'set reference' call_tmp[8437629]))
      (8437992 call deinit[21354] i_x[8437985])
      label _end_readLiteralCommon[8437994]
      val errorExists[8437996]:bool[19] "temp"
      (8437998 'move' errorExists[8437996](8438000 '!=' error[8437319] nil[32]))
      if errorExists[8437996]
      {
        (8438005 '=' i_error_out[8437310] error[8437319])
        gotoErrorHandlingReturn _endreadLiteral[8438011] _endreadLiteral[8438011]
      }
      label _endreadLiteral[8438011]
      val errorExists[7302640]:bool[19] "temp"
      (7302645 'move' errorExists[7302640](7302642 '!=' error[5509734] nil[32]))
      if errorExists[7302640]
      {
        (5509740 '=' error_out[5509731] error[5509734])
        gotoErrorHandlingReturn _end_readKey[3349258] _end_readKey[3349258]
      }
    }
    {
      ref call_tmp[3349094]:bool[19] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8459574]:bool[19] "dead after last mention" "maybe param" "temp"
      (8459576 'move' call_tmp[8459574](8459578 '.' this[3349039] _first[3348818]))
      (3349096 'move' call_tmp[3349094] call_tmp[8459574])
      val inlineImm[7394042]:bool[19] "temp"
      (7394045 'move' inlineImm[7394042] 0)
      (7394048 '=' call_tmp[3349094] inlineImm[7394042])
    }
    val call_tmp[3349107]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3349115]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-ref call_tmp[3349124]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459480]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459482 'move' call_tmp[8459480](8459484 '.' this[3349039] reader[3348816]))
    (3349126 'move' call_tmp[3349124] call_tmp[8459480])
    const-val call_tmp[3349132]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[5509749]:Error[85511] "error variable" "temp"
    (5509751 'move' error[5509749] nil[32])
    const-val ret_tmp[5588660]:string[244] "temp"
    (3349140 call read[3290733] call_tmp[3349124] error[5509749] ret_tmp[5588660])
    (5588663 'move' call_tmp[3349132] ret_tmp[5588660])
    val errorExists[7302648]:bool[19] "temp"
    (7302653 'move' errorExists[7302648](7302650 '!=' error[5509749] nil[32]))
    if errorExists[7302648]
    {
      (5509755 '=' error_out[5509731] error[5509749])
      gotoErrorHandlingReturn _end_readKey[3349258] _end_readKey[3349258]
    }
    (3349323 '=' ret[3349045] call_tmp[3349132])
    label _end_readKey[3349258]
    (5589336 '=' _retArg[5589334] ret[3349045])
    (5589338 return _void[46])
  }
  function MapDeserializer(fileReader(false,jsonDeserializer))[3348822].readValue[3349327](const  ref arg this[3349331]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822], ref arg error_out[5509763]:Error[85511], ref arg _retArg[5589346]:string[244]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479912]:string[244] "temp"
    const-val ret[3349337]:string[244] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3349347]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459490]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459492 'move' call_tmp[8459490](8459494 '.' this[3349331] reader[3348816]))
    (3349349 'move' call_tmp[3349347] call_tmp[8459490])
    val default_arg_ignoreWhitespace[3349394]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5509768]:Error[85511] "error variable" "temp"
    (5509770 'move' error[5509768] nil[32])
    val inlineImm[8438015]:string[244] "temp"
    (8438018 'move' inlineImm[8438015] ":")
    ref i_literal[8438020]:string[244] "temp"
    (8438024 'move' i_literal[8438020](8438022 'set reference' inlineImm[8438015]))
    val inlineImm[8438026]:bool[19] "temp"
    (8438029 'move' inlineImm[8438026] 1)
    ref i_error_out[8438031]:Error[85511] "temp"
    (8438035 'move' i_error_out[8438031](8438033 'set reference' error[5509768]))
    val ret[8438038]:void[4] "dead after last mention" "RVV" "temp"
    val error[8438040]:Error[85511] "error variable" "temp"
    (8438042 'move' error[8438040] nil[32])
    ref call_tmp[8438045]:locale[234] "dead after last mention" "maybe param" "temp"
    (8438047 'move' call_tmp[8438045](8438049 '.' call_tmp[3349347] _home[3276771]))
    val coerce_tmp[8438052]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438054 'move' coerce_tmp[8438052](8438056 '.v' call_tmp[8438045] _instance[135293]))
    val coerce_tmp[8438059]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438061 'move' coerce_tmp[8438059](8438063 'cast' RootClass[236] coerce_tmp[8438052]))
    const-val call_tmp[8438066]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438068 'move' call_tmp[8438066](8438070 '==' coerce_tmp[8438059] nil[32]))
    if call_tmp[8438066]
    {
      (8438076 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8438079]:Error[85511] "error variable" "temp"
    (8438081 'move' error[8438079] nil[32])
    const-val err[8438084]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8438086]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438088 'move' call_tmp[8438086](8438090 'cast' int(32)[66] 0))
    const-val call_tmp[8438093]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438095 'move' call_tmp[8438093](8438098 call qio_int_to_err[12856] call_tmp[8438086]))
    (8438100 'move' err[8438084] call_tmp[8438093])
    val coerce_tmp[8438103]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438105 'move' coerce_tmp[8438103](8438107 '.v' call_tmp[3349347] _channel_internal[3276776]))
    const-val call_tmp[8438110]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438112 'move' call_tmp[8438110](8438114 'ptr_eq' coerce_tmp[8438103] nil[32]))
    if call_tmp[8438110]
    {
      const-val call_tmp[8438119]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8438121]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8438123 'move' coerce_tmp[8438121](8438125 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8438128]:owned SystemError[1554765] "temp"
      (8438131 call createSystemError[14072] coerce_tmp[8438121] "Operation attempted on an invalid fileReader" ret_tmp[8438128])
      (8438135 'move' call_tmp[8438119] ret_tmp[8438128])
      val call_tmp[8438138]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8438140]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8438142]:owned Error[1498203] "temp"
      ref i_x[8438144]:owned SystemError[1554765] "temp"
      (8438146 'move' i_x[8438144](8438148 'set reference' call_tmp[8438119]))
      ref i__retArg[8438150]:owned Error[1498203] "temp"
      (8438152 'move' i__retArg[8438150](8438154 'set reference' ret_tmp[8438142]))
      val _formal_tmp_x[8438156]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8438158 'move' _formal_tmp_x[8438156] i_x[8438144])
      const-val ret[8438161]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8438163]:owned SystemError[1554765] "temp"
      (8438165 'move' i_this[8438163](8438167 'set reference' _formal_tmp_x[8438156]))
      val coerce_tmp[8438169]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8438171 'move' coerce_tmp[8438169](8438173 '.v' i_this[8438163] chpl_p[1554760]))
      val call_tmp[8438176]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8438178 'move' call_tmp[8438176](8438180 'cast' Error[85511] coerce_tmp[8438169]))
      val castPtr[8438183]:Error[85511] "dead at end of block" "insert auto destroy"
      (8438185 'move' castPtr[8438183] call_tmp[8438176])
      ref i_this[8438188]:owned SystemError[1554765] "temp"
      (8438190 'move' i_this[8438188](8438192 'set reference' _formal_tmp_x[8438156]))
      val tmp[8438194]:SystemError[13599] "temp"
      (8438196 'move' tmp[8438194](8438198 'cast' SystemError[13599] nil[32]))
      (8438201 '.=' i_this[8438188] chpl_p[1554760] tmp[8438194])
      val coerce_tmp[8438205]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8438207 'move' coerce_tmp[8438205](8438209 'cast' RootClass[236] call_tmp[8438176]))
      const-val call_tmp[8438212]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8438214 'move' call_tmp[8438212](8438216 '==' coerce_tmp[8438205] nil[32]))
      if call_tmp[8438212]
      {
        (8438222 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8438225]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8438227]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8438230 call init[1499358] initTemp[8438227] castPtr[8438183])
      (8438233 'move' call_tmp[8438225] initTemp[8438227])
      (8438236 'move' ret[8438161] call_tmp[8438225])
      (8438240 call chpl__autoDestroy[3968549] _formal_tmp_x[8438156])
      (8438242 '=' i__retArg[8438150] ret[8438161])
      (8438245 'move' coerce_tmp[8438140] ret_tmp[8438142])
      const-val _formal_tmp_in_err[8438248]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8438250 'move' _formal_tmp_in_err[8438248] coerce_tmp[8438140])
      (8438253 'move' call_tmp[8438138](8438256 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8438248]))
      (8438258 '=' error[8438079] call_tmp[8438138])
      gotoErrorHandlingReturn _endlock[8438321] _endlock[8438321]
    }
    const-val call_tmp[8438264]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438266 'move' call_tmp[8438264](8438269 call qio_err_iserr[12868] err[8438084]))
    const-val call_tmp[8438271]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438273 'move' call_tmp[8438271](8438275 '!=' call_tmp[8438264] 0))
    if call_tmp[8438271]
    {
      val error[8438280]:Error[85511] "error variable" "temp"
      (8438282 'move' error[8438280] nil[32])
      (8438286 call _ch_ioerror[3285336] call_tmp[3349347] err[8438084] "in lock" error[8438280])
      val errorExists[8438291]:bool[19] "temp"
      (8438293 'move' errorExists[8438291](8438295 '!=' error[8438280] nil[32]))
      if errorExists[8438291]
      {
        gotoErrorHandling handler[8438303] handler[8438303]
      }
      label handler[8438303]
      val errorExists[8438305]:bool[19] "temp"
      (8438307 'move' errorExists[8438305](8438309 '!=' error[8438280] nil[32]))
      if errorExists[8438305]
      {
        (8438314 '=' error[8438079] error[8438280])
        gotoErrorHandlingReturn _endlock[8438321] _endlock[8438321]
      }
    }
    label _endlock[8438321]
    val errorExists[8438323]:bool[19] "temp"
    (8438325 'move' errorExists[8438323](8438327 '!=' error[8438079] nil[32]))
    if errorExists[8438323]
    {
      gotoErrorHandling handler[8438335] handler[8438335]
    }
    label handler[8438335]
    val errorExists[8438337]:bool[19] "temp"
    (8438339 'move' errorExists[8438337](8438341 '!=' error[8438079] nil[32]))
    if errorExists[8438337]
    {
      (8438347 call chpl_uncaught_error[87456] error[8438079])
    }
    const-val call_tmp[8438350]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8438352]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8438354]:string[244] "dead at end of block" "insert auto destroy"
    (8438357 call init[21321] ret[8438354])
    const-val coerce_tmp[8438359]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438361 'move' coerce_tmp[8438359](8438363 '.v' i_literal[8438020] cachedNumCodepoints[21293]))
    (8438366 '.=' ret[8438354] cachedNumCodepoints[21293] coerce_tmp[8438359])
    (8438371 call initWithBorrowedBuffer[1470549] ret[8438354] i_literal[8438020])
    (8438374 '=' ret[8438352] ret[8438354])
    (8438377 'move' call_tmp[8438350] ret[8438352])
    val coerce_tmp[8438380]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8438382 'move' coerce_tmp[8438380](8438384 '.v' call_tmp[8438350] buff[21299]))
    (8438387 'noop')
    val call_tmp[8438388]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8438390 'move' call_tmp[8438388](8438392 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8438380]))
    val ret[8438395]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8438397 '=' ret[8438395](8438399 '.v' i_literal[8438020] buffLen[21281]))
    const-val call_tmp[8438402]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8438404]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438406 'move' coerce_tmp[8438404](8438408 'cast' int(32)[66] 0))
    val coerce_tmp[8438411]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438413 'move' coerce_tmp[8438411](8438415 '.v' call_tmp[3349347] _channel_internal[3276776]))
    const-val coerce_tmp[8438418]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438420 'move' coerce_tmp[8438418](8438422 'cast' int(32)[66] inlineImm[8438026]))
    (8438425 'move' call_tmp[8438402](8438428 call qio_channel_scan_literal[167758] coerce_tmp[8438404] coerce_tmp[8438411] call_tmp[8438388] ret[8438395] coerce_tmp[8438418]))
    const-val err[8438434]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8438436 'move' err[8438434] call_tmp[8438402])
    const-val action[8438439]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8438441 'move' action[8438439] "reading")
    val error[8438444]:Error[85511] "error variable" "temp"
    (8438446 'move' error[8438444] nil[32])
    ref i_action[8438449]:string[244] "temp"
    (8438451 'move' i_action[8438449](8438453 'set reference' action[8438439]))
    val inlineImm[8438455]:bool[19] "temp"
    (8438457 'move' inlineImm[8438455] 1)
    const-val call_tmp[8438460]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438462 'move' call_tmp[8438460](8438465 call qio_err_to_int[12844] call_tmp[8438402]))
    const-val call_tmp[8438467]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438469 'move' call_tmp[8438467](8438471 'cast' int(32)[66] 0))
    const-val call_tmp[8438474]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438476 'move' call_tmp[8438474](8438478 '==' call_tmp[8438460] call_tmp[8438467]))
    const-val call_tmp[8438481]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438483 'move' call_tmp[8438481](8438485 'u!' call_tmp[8438474]))
    if call_tmp[8438481]
    {
      const-val call_tmp[8438489]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8438491]:string[244] "temp"
      (8438494 call literalErrorHelper[3112834] i_literal[8438020] i_action[8438449] inlineImm[8438455] ret_tmp[8438491])
      (8438499 'move' call_tmp[8438489] ret_tmp[8438491])
      val msg[8438502]:string[244] "dead at end of block" "insert auto destroy"
      (8438504 'move' msg[8438502] call_tmp[8438489])
      const-val call_tmp[8438507]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8438509 'move' call_tmp[8438507](8438512 call qio_err_to_int[12844] err[8438434]))
      const-val call_tmp[8438514]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8438516 'move' call_tmp[8438514](8438518 '==' call_tmp[8438507] EILSEQ[11191]))
      if call_tmp[8438514]
      {
        const-val call_tmp[8438523]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8438525]:string[244] "temp"
        (8438528 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8438525])
        (8438530 'move' call_tmp[8438523] ret_tmp[8438525])
        const-val call_tmp[8438533]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8438535]:string[244] "temp"
        (8438538 call +[28065] call_tmp[8438523] "Error: " ret_tmp[8438535])
        (8438542 'move' call_tmp[8438533] ret_tmp[8438535])
        const-val call_tmp[8438545]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8438547]:string[244] "temp"
        (8438550 call +[28065] call_tmp[8438533] msg[8438502] ret_tmp[8438547])
        (8438554 'move' call_tmp[8438545] ret_tmp[8438547])
        (8438558 call =[28046] msg[8438502] call_tmp[8438545])
        ref i_x[8438561]:string[244] "temp"
        (8438563 'move' i_x[8438561](8438565 'set reference' call_tmp[8438545]))
        (8438568 call deinit[21354] i_x[8438561])
        ref i_x[8438570]:string[244] "temp"
        (8438572 'move' i_x[8438570](8438574 'set reference' call_tmp[8438533]))
        (8438577 call deinit[21354] i_x[8438570])
        ref i_x[8438579]:string[244] "temp"
        (8438581 'move' i_x[8438579](8438583 'set reference' call_tmp[8438523]))
        (8438586 call deinit[21354] i_x[8438579])
      }
      val error[8438589]:Error[85511] "error variable" "temp"
      (8438591 'move' error[8438589] nil[32])
      (8438595 call _ch_ioerror[3285336] call_tmp[3349347] err[8438434] msg[8438502] error[8438589])
      val errorExists[8438600]:bool[19] "temp"
      (8438602 'move' errorExists[8438600](8438604 '!=' error[8438589] nil[32]))
      if errorExists[8438600]
      {
        gotoErrorHandling handler[8438612] handler[8438612]
      }
      label handler[8438612]
      val errorExists[8438614]:bool[19] "temp"
      (8438616 'move' errorExists[8438614](8438618 '!=' error[8438589] nil[32]))
      if errorExists[8438614]
      {
        (8438623 '=' error[8438444] error[8438589])
        ref i_x[8438626]:string[244] "temp"
        (8438628 'move' i_x[8438626](8438630 'set reference' msg[8438502]))
        (8438633 call deinit[21354] i_x[8438626])
        gotoErrorHandlingReturn _end_checkLiteralError[8438648] _end_checkLiteralError[8438648]
      }
      ref i_x[8438638]:string[244] "temp"
      (8438640 'move' i_x[8438638](8438642 'set reference' msg[8438502]))
      (8438645 call deinit[21354] i_x[8438638])
    }
    label _end_checkLiteralError[8438648]
    val errorExists[8438650]:bool[19] "temp"
    (8438652 'move' errorExists[8438650](8438654 '!=' error[8438444] nil[32]))
    if errorExists[8438650]
    {
      gotoErrorHandling handler[8438662] handler[8438662]
    }
    label handler[8438662]
    val errorExists[8438664]:bool[19] "temp"
    (8438666 'move' errorExists[8438664](8438668 '!=' error[8438444] nil[32]))
    if errorExists[8438664]
    {
      (8438673 '=' error[8438040] error[8438444])
      ref i_x[8438676]:string[244] "temp"
      (8438678 'move' i_x[8438676](8438680 'set reference' action[8438439]))
      (8438683 call deinit[21354] i_x[8438676])
      ref i_x[8438685]:string[244] "temp"
      (8438687 'move' i_x[8438685](8438689 'set reference' call_tmp[8438350]))
      (8438692 call deinit[21354] i_x[8438685])
      gotoErrorHandlingReturn _end_readLiteralCommon[8438715] _end_readLiteralCommon[8438715]
    }
    ref i_x[8438697]:string[244] "temp"
    (8438699 'move' i_x[8438697](8438701 'set reference' action[8438439]))
    (8438704 call deinit[21354] i_x[8438697])
    ref i_x[8438706]:string[244] "temp"
    (8438708 'move' i_x[8438706](8438710 'set reference' call_tmp[8438350]))
    (8438713 call deinit[21354] i_x[8438706])
    label _end_readLiteralCommon[8438715]
    val errorExists[8438717]:bool[19] "temp"
    (8438719 'move' errorExists[8438717](8438721 '!=' error[8438040] nil[32]))
    if errorExists[8438717]
    {
      (8438726 '=' i_error_out[8438031] error[8438040])
      gotoErrorHandlingReturn _endreadLiteral[8438732] _endreadLiteral[8438732]
    }
    label _endreadLiteral[8438732]
    val errorExists[7302656]:bool[19] "temp"
    (7302661 'move' errorExists[7302656](7302658 '!=' error[5509768] nil[32]))
    if errorExists[7302656]
    {
      (5509774 '=' error_out[5509763] error[5509768])
      gotoErrorHandlingReturn _endreadValue[5509765] _endreadValue[5509765]
    }
    const-ref call_tmp[3349362]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459500]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459502 'move' call_tmp[8459500](8459504 '.' this[3349331] reader[3348816]))
    (3349364 'move' call_tmp[3349362] call_tmp[8459500])
    const-val call_tmp[3349370]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[5509783]:Error[85511] "error variable" "temp"
    (5509785 'move' error[5509783] nil[32])
    const-val ret_tmp[5588666]:string[244] "temp"
    (3349378 call read[3290733] call_tmp[3349362] error[5509783] ret_tmp[5588666])
    (5588669 'move' call_tmp[3349370] ret_tmp[5588666])
    val errorExists[7302664]:bool[19] "temp"
    (7302669 'move' errorExists[7302664](7302666 '!=' error[5509783] nil[32]))
    if errorExists[7302664]
    {
      (5509789 '=' error_out[5509763] error[5509783])
      gotoErrorHandlingReturn _endreadValue[5509765] _endreadValue[5509765]
    }
    (3349408 '=' ret[3349337] call_tmp[3349370])
    label _endreadValue[5509765]
    (5589348 '=' _retArg[5589346] ret[3349337])
    (5589350 return _void[46])
  }
  function MapDeserializer(fileReader(false,jsonDeserializer))[3348822].readValue[3366403](const  ref arg this[3366407]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822], ref arg error_out[5510098]:Error[85511], ref arg _retArg[5589522]:owned ModuleSpecification?[3283604]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[5479955]:owned ModuleSpecification?[3283604] "temp"
    const-val ret[3366413]:owned ModuleSpecification?[3283604] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3366423]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459520]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459522 'move' call_tmp[8459520](8459524 '.' this[3366407] reader[3348816]))
    (3366425 'move' call_tmp[3366423] call_tmp[8459520])
    val default_arg_ignoreWhitespace[3366470]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5510103]:Error[85511] "error variable" "temp"
    (5510105 'move' error[5510103] nil[32])
    val inlineImm[8439457]:string[244] "temp"
    (8439460 'move' inlineImm[8439457] ":")
    ref i_literal[8439462]:string[244] "temp"
    (8439466 'move' i_literal[8439462](8439464 'set reference' inlineImm[8439457]))
    val inlineImm[8439468]:bool[19] "temp"
    (8439471 'move' inlineImm[8439468] 1)
    ref i_error_out[8439473]:Error[85511] "temp"
    (8439477 'move' i_error_out[8439473](8439475 'set reference' error[5510103]))
    val ret[8439480]:void[4] "dead after last mention" "RVV" "temp"
    val error[8439482]:Error[85511] "error variable" "temp"
    (8439484 'move' error[8439482] nil[32])
    ref call_tmp[8439487]:locale[234] "dead after last mention" "maybe param" "temp"
    (8439489 'move' call_tmp[8439487](8439491 '.' call_tmp[3366423] _home[3276771]))
    val coerce_tmp[8439494]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439496 'move' coerce_tmp[8439494](8439498 '.v' call_tmp[8439487] _instance[135293]))
    val coerce_tmp[8439501]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439503 'move' coerce_tmp[8439501](8439505 'cast' RootClass[236] coerce_tmp[8439494]))
    const-val call_tmp[8439508]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439510 'move' call_tmp[8439508](8439512 '==' coerce_tmp[8439501] nil[32]))
    if call_tmp[8439508]
    {
      (8439518 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8439521]:Error[85511] "error variable" "temp"
    (8439523 'move' error[8439521] nil[32])
    const-val err[8439526]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8439528]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439530 'move' call_tmp[8439528](8439532 'cast' int(32)[66] 0))
    const-val call_tmp[8439535]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439537 'move' call_tmp[8439535](8439540 call qio_int_to_err[12856] call_tmp[8439528]))
    (8439542 'move' err[8439526] call_tmp[8439535])
    val coerce_tmp[8439545]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439547 'move' coerce_tmp[8439545](8439549 '.v' call_tmp[3366423] _channel_internal[3276776]))
    const-val call_tmp[8439552]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439554 'move' call_tmp[8439552](8439556 'ptr_eq' coerce_tmp[8439545] nil[32]))
    if call_tmp[8439552]
    {
      const-val call_tmp[8439561]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8439563]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8439565 'move' coerce_tmp[8439563](8439567 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8439570]:owned SystemError[1554765] "temp"
      (8439573 call createSystemError[14072] coerce_tmp[8439563] "Operation attempted on an invalid fileReader" ret_tmp[8439570])
      (8439577 'move' call_tmp[8439561] ret_tmp[8439570])
      val call_tmp[8439580]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8439582]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8439584]:owned Error[1498203] "temp"
      ref i_x[8439586]:owned SystemError[1554765] "temp"
      (8439588 'move' i_x[8439586](8439590 'set reference' call_tmp[8439561]))
      ref i__retArg[8439592]:owned Error[1498203] "temp"
      (8439594 'move' i__retArg[8439592](8439596 'set reference' ret_tmp[8439584]))
      val _formal_tmp_x[8439598]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8439600 'move' _formal_tmp_x[8439598] i_x[8439586])
      const-val ret[8439603]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8439605]:owned SystemError[1554765] "temp"
      (8439607 'move' i_this[8439605](8439609 'set reference' _formal_tmp_x[8439598]))
      val coerce_tmp[8439611]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8439613 'move' coerce_tmp[8439611](8439615 '.v' i_this[8439605] chpl_p[1554760]))
      val call_tmp[8439618]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8439620 'move' call_tmp[8439618](8439622 'cast' Error[85511] coerce_tmp[8439611]))
      val castPtr[8439625]:Error[85511] "dead at end of block" "insert auto destroy"
      (8439627 'move' castPtr[8439625] call_tmp[8439618])
      ref i_this[8439630]:owned SystemError[1554765] "temp"
      (8439632 'move' i_this[8439630](8439634 'set reference' _formal_tmp_x[8439598]))
      val tmp[8439636]:SystemError[13599] "temp"
      (8439638 'move' tmp[8439636](8439640 'cast' SystemError[13599] nil[32]))
      (8439643 '.=' i_this[8439630] chpl_p[1554760] tmp[8439636])
      val coerce_tmp[8439647]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8439649 'move' coerce_tmp[8439647](8439651 'cast' RootClass[236] call_tmp[8439618]))
      const-val call_tmp[8439654]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8439656 'move' call_tmp[8439654](8439658 '==' coerce_tmp[8439647] nil[32]))
      if call_tmp[8439654]
      {
        (8439664 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8439667]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8439669]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8439672 call init[1499358] initTemp[8439669] castPtr[8439625])
      (8439675 'move' call_tmp[8439667] initTemp[8439669])
      (8439678 'move' ret[8439603] call_tmp[8439667])
      (8439682 call chpl__autoDestroy[3968549] _formal_tmp_x[8439598])
      (8439684 '=' i__retArg[8439592] ret[8439603])
      (8439687 'move' coerce_tmp[8439582] ret_tmp[8439584])
      const-val _formal_tmp_in_err[8439690]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8439692 'move' _formal_tmp_in_err[8439690] coerce_tmp[8439582])
      (8439695 'move' call_tmp[8439580](8439698 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8439690]))
      (8439700 '=' error[8439521] call_tmp[8439580])
      gotoErrorHandlingReturn _endlock[8439763] _endlock[8439763]
    }
    const-val call_tmp[8439706]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439708 'move' call_tmp[8439706](8439711 call qio_err_iserr[12868] err[8439526]))
    const-val call_tmp[8439713]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439715 'move' call_tmp[8439713](8439717 '!=' call_tmp[8439706] 0))
    if call_tmp[8439713]
    {
      val error[8439722]:Error[85511] "error variable" "temp"
      (8439724 'move' error[8439722] nil[32])
      (8439728 call _ch_ioerror[3285336] call_tmp[3366423] err[8439526] "in lock" error[8439722])
      val errorExists[8439733]:bool[19] "temp"
      (8439735 'move' errorExists[8439733](8439737 '!=' error[8439722] nil[32]))
      if errorExists[8439733]
      {
        gotoErrorHandling handler[8439745] handler[8439745]
      }
      label handler[8439745]
      val errorExists[8439747]:bool[19] "temp"
      (8439749 'move' errorExists[8439747](8439751 '!=' error[8439722] nil[32]))
      if errorExists[8439747]
      {
        (8439756 '=' error[8439521] error[8439722])
        gotoErrorHandlingReturn _endlock[8439763] _endlock[8439763]
      }
    }
    label _endlock[8439763]
    val errorExists[8439765]:bool[19] "temp"
    (8439767 'move' errorExists[8439765](8439769 '!=' error[8439521] nil[32]))
    if errorExists[8439765]
    {
      gotoErrorHandling handler[8439777] handler[8439777]
    }
    label handler[8439777]
    val errorExists[8439779]:bool[19] "temp"
    (8439781 'move' errorExists[8439779](8439783 '!=' error[8439521] nil[32]))
    if errorExists[8439779]
    {
      (8439789 call chpl_uncaught_error[87456] error[8439521])
    }
    const-val call_tmp[8439792]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8439794]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8439796]:string[244] "dead at end of block" "insert auto destroy"
    (8439799 call init[21321] ret[8439796])
    const-val coerce_tmp[8439801]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439803 'move' coerce_tmp[8439801](8439805 '.v' i_literal[8439462] cachedNumCodepoints[21293]))
    (8439808 '.=' ret[8439796] cachedNumCodepoints[21293] coerce_tmp[8439801])
    (8439813 call initWithBorrowedBuffer[1470549] ret[8439796] i_literal[8439462])
    (8439816 '=' ret[8439794] ret[8439796])
    (8439819 'move' call_tmp[8439792] ret[8439794])
    val coerce_tmp[8439822]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8439824 'move' coerce_tmp[8439822](8439826 '.v' call_tmp[8439792] buff[21299]))
    (8439829 'noop')
    val call_tmp[8439830]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8439832 'move' call_tmp[8439830](8439834 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8439822]))
    val ret[8439837]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8439839 '=' ret[8439837](8439841 '.v' i_literal[8439462] buffLen[21281]))
    const-val call_tmp[8439844]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8439846]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439848 'move' coerce_tmp[8439846](8439850 'cast' int(32)[66] 0))
    val coerce_tmp[8439853]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439855 'move' coerce_tmp[8439853](8439857 '.v' call_tmp[3366423] _channel_internal[3276776]))
    const-val coerce_tmp[8439860]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439862 'move' coerce_tmp[8439860](8439864 'cast' int(32)[66] inlineImm[8439468]))
    (8439867 'move' call_tmp[8439844](8439870 call qio_channel_scan_literal[167758] coerce_tmp[8439846] coerce_tmp[8439853] call_tmp[8439830] ret[8439837] coerce_tmp[8439860]))
    const-val err[8439876]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8439878 'move' err[8439876] call_tmp[8439844])
    const-val action[8439881]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8439883 'move' action[8439881] "reading")
    val error[8439886]:Error[85511] "error variable" "temp"
    (8439888 'move' error[8439886] nil[32])
    ref i_action[8439891]:string[244] "temp"
    (8439893 'move' i_action[8439891](8439895 'set reference' action[8439881]))
    val inlineImm[8439897]:bool[19] "temp"
    (8439899 'move' inlineImm[8439897] 1)
    const-val call_tmp[8439902]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439904 'move' call_tmp[8439902](8439907 call qio_err_to_int[12844] call_tmp[8439844]))
    const-val call_tmp[8439909]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439911 'move' call_tmp[8439909](8439913 'cast' int(32)[66] 0))
    const-val call_tmp[8439916]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439918 'move' call_tmp[8439916](8439920 '==' call_tmp[8439902] call_tmp[8439909]))
    const-val call_tmp[8439923]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439925 'move' call_tmp[8439923](8439927 'u!' call_tmp[8439916]))
    if call_tmp[8439923]
    {
      const-val call_tmp[8439931]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8439933]:string[244] "temp"
      (8439936 call literalErrorHelper[3112834] i_literal[8439462] i_action[8439891] inlineImm[8439897] ret_tmp[8439933])
      (8439941 'move' call_tmp[8439931] ret_tmp[8439933])
      val msg[8439944]:string[244] "dead at end of block" "insert auto destroy"
      (8439946 'move' msg[8439944] call_tmp[8439931])
      const-val call_tmp[8439949]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8439951 'move' call_tmp[8439949](8439954 call qio_err_to_int[12844] err[8439876]))
      const-val call_tmp[8439956]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8439958 'move' call_tmp[8439956](8439960 '==' call_tmp[8439949] EILSEQ[11191]))
      if call_tmp[8439956]
      {
        const-val call_tmp[8439965]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8439967]:string[244] "temp"
        (8439970 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8439967])
        (8439972 'move' call_tmp[8439965] ret_tmp[8439967])
        const-val call_tmp[8439975]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8439977]:string[244] "temp"
        (8439980 call +[28065] call_tmp[8439965] "Error: " ret_tmp[8439977])
        (8439984 'move' call_tmp[8439975] ret_tmp[8439977])
        const-val call_tmp[8439987]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8439989]:string[244] "temp"
        (8439992 call +[28065] call_tmp[8439975] msg[8439944] ret_tmp[8439989])
        (8439996 'move' call_tmp[8439987] ret_tmp[8439989])
        (8440000 call =[28046] msg[8439944] call_tmp[8439987])
        ref i_x[8440003]:string[244] "temp"
        (8440005 'move' i_x[8440003](8440007 'set reference' call_tmp[8439987]))
        (8440010 call deinit[21354] i_x[8440003])
        ref i_x[8440012]:string[244] "temp"
        (8440014 'move' i_x[8440012](8440016 'set reference' call_tmp[8439975]))
        (8440019 call deinit[21354] i_x[8440012])
        ref i_x[8440021]:string[244] "temp"
        (8440023 'move' i_x[8440021](8440025 'set reference' call_tmp[8439965]))
        (8440028 call deinit[21354] i_x[8440021])
      }
      val error[8440031]:Error[85511] "error variable" "temp"
      (8440033 'move' error[8440031] nil[32])
      (8440037 call _ch_ioerror[3285336] call_tmp[3366423] err[8439876] msg[8439944] error[8440031])
      val errorExists[8440042]:bool[19] "temp"
      (8440044 'move' errorExists[8440042](8440046 '!=' error[8440031] nil[32]))
      if errorExists[8440042]
      {
        gotoErrorHandling handler[8440054] handler[8440054]
      }
      label handler[8440054]
      val errorExists[8440056]:bool[19] "temp"
      (8440058 'move' errorExists[8440056](8440060 '!=' error[8440031] nil[32]))
      if errorExists[8440056]
      {
        (8440065 '=' error[8439886] error[8440031])
        ref i_x[8440068]:string[244] "temp"
        (8440070 'move' i_x[8440068](8440072 'set reference' msg[8439944]))
        (8440075 call deinit[21354] i_x[8440068])
        gotoErrorHandlingReturn _end_checkLiteralError[8440090] _end_checkLiteralError[8440090]
      }
      ref i_x[8440080]:string[244] "temp"
      (8440082 'move' i_x[8440080](8440084 'set reference' msg[8439944]))
      (8440087 call deinit[21354] i_x[8440080])
    }
    label _end_checkLiteralError[8440090]
    val errorExists[8440092]:bool[19] "temp"
    (8440094 'move' errorExists[8440092](8440096 '!=' error[8439886] nil[32]))
    if errorExists[8440092]
    {
      gotoErrorHandling handler[8440104] handler[8440104]
    }
    label handler[8440104]
    val errorExists[8440106]:bool[19] "temp"
    (8440108 'move' errorExists[8440106](8440110 '!=' error[8439886] nil[32]))
    if errorExists[8440106]
    {
      (8440115 '=' error[8439482] error[8439886])
      ref i_x[8440118]:string[244] "temp"
      (8440120 'move' i_x[8440118](8440122 'set reference' action[8439881]))
      (8440125 call deinit[21354] i_x[8440118])
      ref i_x[8440127]:string[244] "temp"
      (8440129 'move' i_x[8440127](8440131 'set reference' call_tmp[8439792]))
      (8440134 call deinit[21354] i_x[8440127])
      gotoErrorHandlingReturn _end_readLiteralCommon[8440157] _end_readLiteralCommon[8440157]
    }
    ref i_x[8440139]:string[244] "temp"
    (8440141 'move' i_x[8440139](8440143 'set reference' action[8439881]))
    (8440146 call deinit[21354] i_x[8440139])
    ref i_x[8440148]:string[244] "temp"
    (8440150 'move' i_x[8440148](8440152 'set reference' call_tmp[8439792]))
    (8440155 call deinit[21354] i_x[8440148])
    label _end_readLiteralCommon[8440157]
    val errorExists[8440159]:bool[19] "temp"
    (8440161 'move' errorExists[8440159](8440163 '!=' error[8439482] nil[32]))
    if errorExists[8440159]
    {
      (8440168 '=' i_error_out[8439473] error[8439482])
      gotoErrorHandlingReturn _endreadLiteral[8440174] _endreadLiteral[8440174]
    }
    label _endreadLiteral[8440174]
    val errorExists[7302816]:bool[19] "temp"
    (7302821 'move' errorExists[7302816](7302818 '!=' error[5510103] nil[32]))
    if errorExists[7302816]
    {
      (5510109 '=' error_out[5510098] error[5510103])
      gotoErrorHandlingReturn _endreadValue[5510100] _endreadValue[5510100]
    }
    const-ref call_tmp[3366438]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459530]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459532 'move' call_tmp[8459530](8459534 '.' this[3366407] reader[3348816]))
    (3366440 'move' call_tmp[3366438] call_tmp[8459530])
    const-val call_tmp[3366446]:owned ModuleSpecification?[3283604] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[5510118]:Error[85511] "error variable" "temp"
    (5510120 'move' error[5510118] nil[32])
    const-val ret_tmp[5589528]:owned ModuleSpecification?[3283604] "temp"
    (3366454 call read[3366482] call_tmp[3366438] error[5510118] ret_tmp[5589528])
    (5589531 'move' call_tmp[3366446] ret_tmp[5589528])
    val errorExists[7302824]:bool[19] "temp"
    (7302829 'move' errorExists[7302824](7302826 '!=' error[5510118] nil[32]))
    if errorExists[7302824]
    {
      (5510124 '=' error_out[5510098] error[5510118])
      gotoErrorHandlingReturn _endreadValue[5510100] _endreadValue[5510100]
    }
    (3372003 '=' ret[3366413] call_tmp[3366446])
    label _endreadValue[5510100]
    (5589524 '=' _retArg[5589522] ret[3366413])
    (5589526 return _void[46])
  }
  function MapDeserializer(fileReader(false,jsonDeserializer))[3348822].endMap[3350681](const  ref arg this[3350685]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822], ref arg error_out[5509797]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[3350691]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459510]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459512 'move' call_tmp[8459510](8459514 '.' this[3350685] reader[3348816]))
    (3350693 'move' call_tmp[3350691] call_tmp[8459510])
    val default_arg_ignoreWhitespace[3350714]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5509802]:Error[85511] "error variable" "temp"
    (5509804 'move' error[5509802] nil[32])
    val inlineImm[8438736]:string[244] "temp"
    (8438739 'move' inlineImm[8438736] "}")
    ref i_literal[8438741]:string[244] "temp"
    (8438745 'move' i_literal[8438741](8438743 'set reference' inlineImm[8438736]))
    val inlineImm[8438747]:bool[19] "temp"
    (8438750 'move' inlineImm[8438747] 1)
    ref i_error_out[8438752]:Error[85511] "temp"
    (8438756 'move' i_error_out[8438752](8438754 'set reference' error[5509802]))
    val ret[8438759]:void[4] "dead after last mention" "RVV" "temp"
    val error[8438761]:Error[85511] "error variable" "temp"
    (8438763 'move' error[8438761] nil[32])
    ref call_tmp[8438766]:locale[234] "dead after last mention" "maybe param" "temp"
    (8438768 'move' call_tmp[8438766](8438770 '.' call_tmp[3350691] _home[3276771]))
    val coerce_tmp[8438773]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438775 'move' coerce_tmp[8438773](8438777 '.v' call_tmp[8438766] _instance[135293]))
    val coerce_tmp[8438780]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438782 'move' coerce_tmp[8438780](8438784 'cast' RootClass[236] coerce_tmp[8438773]))
    const-val call_tmp[8438787]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438789 'move' call_tmp[8438787](8438791 '==' coerce_tmp[8438780] nil[32]))
    if call_tmp[8438787]
    {
      (8438797 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8438800]:Error[85511] "error variable" "temp"
    (8438802 'move' error[8438800] nil[32])
    const-val err[8438805]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8438807]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438809 'move' call_tmp[8438807](8438811 'cast' int(32)[66] 0))
    const-val call_tmp[8438814]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438816 'move' call_tmp[8438814](8438819 call qio_int_to_err[12856] call_tmp[8438807]))
    (8438821 'move' err[8438805] call_tmp[8438814])
    val coerce_tmp[8438824]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8438826 'move' coerce_tmp[8438824](8438828 '.v' call_tmp[3350691] _channel_internal[3276776]))
    const-val call_tmp[8438831]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438833 'move' call_tmp[8438831](8438835 'ptr_eq' coerce_tmp[8438824] nil[32]))
    if call_tmp[8438831]
    {
      const-val call_tmp[8438840]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8438842]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8438844 'move' coerce_tmp[8438842](8438846 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8438849]:owned SystemError[1554765] "temp"
      (8438852 call createSystemError[14072] coerce_tmp[8438842] "Operation attempted on an invalid fileReader" ret_tmp[8438849])
      (8438856 'move' call_tmp[8438840] ret_tmp[8438849])
      val call_tmp[8438859]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8438861]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8438863]:owned Error[1498203] "temp"
      ref i_x[8438865]:owned SystemError[1554765] "temp"
      (8438867 'move' i_x[8438865](8438869 'set reference' call_tmp[8438840]))
      ref i__retArg[8438871]:owned Error[1498203] "temp"
      (8438873 'move' i__retArg[8438871](8438875 'set reference' ret_tmp[8438863]))
      val _formal_tmp_x[8438877]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8438879 'move' _formal_tmp_x[8438877] i_x[8438865])
      const-val ret[8438882]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8438884]:owned SystemError[1554765] "temp"
      (8438886 'move' i_this[8438884](8438888 'set reference' _formal_tmp_x[8438877]))
      val coerce_tmp[8438890]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8438892 'move' coerce_tmp[8438890](8438894 '.v' i_this[8438884] chpl_p[1554760]))
      val call_tmp[8438897]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8438899 'move' call_tmp[8438897](8438901 'cast' Error[85511] coerce_tmp[8438890]))
      val castPtr[8438904]:Error[85511] "dead at end of block" "insert auto destroy"
      (8438906 'move' castPtr[8438904] call_tmp[8438897])
      ref i_this[8438909]:owned SystemError[1554765] "temp"
      (8438911 'move' i_this[8438909](8438913 'set reference' _formal_tmp_x[8438877]))
      val tmp[8438915]:SystemError[13599] "temp"
      (8438917 'move' tmp[8438915](8438919 'cast' SystemError[13599] nil[32]))
      (8438922 '.=' i_this[8438909] chpl_p[1554760] tmp[8438915])
      val coerce_tmp[8438926]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8438928 'move' coerce_tmp[8438926](8438930 'cast' RootClass[236] call_tmp[8438897]))
      const-val call_tmp[8438933]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8438935 'move' call_tmp[8438933](8438937 '==' coerce_tmp[8438926] nil[32]))
      if call_tmp[8438933]
      {
        (8438943 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8438946]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8438948]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8438951 call init[1499358] initTemp[8438948] castPtr[8438904])
      (8438954 'move' call_tmp[8438946] initTemp[8438948])
      (8438957 'move' ret[8438882] call_tmp[8438946])
      (8438961 call chpl__autoDestroy[3968549] _formal_tmp_x[8438877])
      (8438963 '=' i__retArg[8438871] ret[8438882])
      (8438966 'move' coerce_tmp[8438861] ret_tmp[8438863])
      const-val _formal_tmp_in_err[8438969]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8438971 'move' _formal_tmp_in_err[8438969] coerce_tmp[8438861])
      (8438974 'move' call_tmp[8438859](8438977 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8438969]))
      (8438979 '=' error[8438800] call_tmp[8438859])
      gotoErrorHandlingReturn _endlock[8439042] _endlock[8439042]
    }
    const-val call_tmp[8438985]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438987 'move' call_tmp[8438985](8438990 call qio_err_iserr[12868] err[8438805]))
    const-val call_tmp[8438992]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8438994 'move' call_tmp[8438992](8438996 '!=' call_tmp[8438985] 0))
    if call_tmp[8438992]
    {
      val error[8439001]:Error[85511] "error variable" "temp"
      (8439003 'move' error[8439001] nil[32])
      (8439007 call _ch_ioerror[3285336] call_tmp[3350691] err[8438805] "in lock" error[8439001])
      val errorExists[8439012]:bool[19] "temp"
      (8439014 'move' errorExists[8439012](8439016 '!=' error[8439001] nil[32]))
      if errorExists[8439012]
      {
        gotoErrorHandling handler[8439024] handler[8439024]
      }
      label handler[8439024]
      val errorExists[8439026]:bool[19] "temp"
      (8439028 'move' errorExists[8439026](8439030 '!=' error[8439001] nil[32]))
      if errorExists[8439026]
      {
        (8439035 '=' error[8438800] error[8439001])
        gotoErrorHandlingReturn _endlock[8439042] _endlock[8439042]
      }
    }
    label _endlock[8439042]
    val errorExists[8439044]:bool[19] "temp"
    (8439046 'move' errorExists[8439044](8439048 '!=' error[8438800] nil[32]))
    if errorExists[8439044]
    {
      gotoErrorHandling handler[8439056] handler[8439056]
    }
    label handler[8439056]
    val errorExists[8439058]:bool[19] "temp"
    (8439060 'move' errorExists[8439058](8439062 '!=' error[8438800] nil[32]))
    if errorExists[8439058]
    {
      (8439068 call chpl_uncaught_error[87456] error[8438800])
    }
    const-val call_tmp[8439071]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8439073]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8439075]:string[244] "dead at end of block" "insert auto destroy"
    (8439078 call init[21321] ret[8439075])
    const-val coerce_tmp[8439080]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439082 'move' coerce_tmp[8439080](8439084 '.v' i_literal[8438741] cachedNumCodepoints[21293]))
    (8439087 '.=' ret[8439075] cachedNumCodepoints[21293] coerce_tmp[8439080])
    (8439092 call initWithBorrowedBuffer[1470549] ret[8439075] i_literal[8438741])
    (8439095 '=' ret[8439073] ret[8439075])
    (8439098 'move' call_tmp[8439071] ret[8439073])
    val coerce_tmp[8439101]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8439103 'move' coerce_tmp[8439101](8439105 '.v' call_tmp[8439071] buff[21299]))
    (8439108 'noop')
    val call_tmp[8439109]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8439111 'move' call_tmp[8439109](8439113 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8439101]))
    val ret[8439116]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8439118 '=' ret[8439116](8439120 '.v' i_literal[8438741] buffLen[21281]))
    const-val call_tmp[8439123]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8439125]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439127 'move' coerce_tmp[8439125](8439129 'cast' int(32)[66] 0))
    val coerce_tmp[8439132]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439134 'move' coerce_tmp[8439132](8439136 '.v' call_tmp[3350691] _channel_internal[3276776]))
    const-val coerce_tmp[8439139]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8439141 'move' coerce_tmp[8439139](8439143 'cast' int(32)[66] inlineImm[8438747]))
    (8439146 'move' call_tmp[8439123](8439149 call qio_channel_scan_literal[167758] coerce_tmp[8439125] coerce_tmp[8439132] call_tmp[8439109] ret[8439116] coerce_tmp[8439139]))
    const-val err[8439155]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8439157 'move' err[8439155] call_tmp[8439123])
    const-val action[8439160]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8439162 'move' action[8439160] "reading")
    val error[8439165]:Error[85511] "error variable" "temp"
    (8439167 'move' error[8439165] nil[32])
    ref i_action[8439170]:string[244] "temp"
    (8439172 'move' i_action[8439170](8439174 'set reference' action[8439160]))
    val inlineImm[8439176]:bool[19] "temp"
    (8439178 'move' inlineImm[8439176] 1)
    const-val call_tmp[8439181]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439183 'move' call_tmp[8439181](8439186 call qio_err_to_int[12844] call_tmp[8439123]))
    const-val call_tmp[8439188]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439190 'move' call_tmp[8439188](8439192 'cast' int(32)[66] 0))
    const-val call_tmp[8439195]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439197 'move' call_tmp[8439195](8439199 '==' call_tmp[8439181] call_tmp[8439188]))
    const-val call_tmp[8439202]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8439204 'move' call_tmp[8439202](8439206 'u!' call_tmp[8439195]))
    if call_tmp[8439202]
    {
      const-val call_tmp[8439210]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8439212]:string[244] "temp"
      (8439215 call literalErrorHelper[3112834] i_literal[8438741] i_action[8439170] inlineImm[8439176] ret_tmp[8439212])
      (8439220 'move' call_tmp[8439210] ret_tmp[8439212])
      val msg[8439223]:string[244] "dead at end of block" "insert auto destroy"
      (8439225 'move' msg[8439223] call_tmp[8439210])
      const-val call_tmp[8439228]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8439230 'move' call_tmp[8439228](8439233 call qio_err_to_int[12844] err[8439155]))
      const-val call_tmp[8439235]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8439237 'move' call_tmp[8439235](8439239 '==' call_tmp[8439228] EILSEQ[11191]))
      if call_tmp[8439235]
      {
        const-val call_tmp[8439244]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8439246]:string[244] "temp"
        (8439249 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8439246])
        (8439251 'move' call_tmp[8439244] ret_tmp[8439246])
        const-val call_tmp[8439254]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8439256]:string[244] "temp"
        (8439259 call +[28065] call_tmp[8439244] "Error: " ret_tmp[8439256])
        (8439263 'move' call_tmp[8439254] ret_tmp[8439256])
        const-val call_tmp[8439266]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8439268]:string[244] "temp"
        (8439271 call +[28065] call_tmp[8439254] msg[8439223] ret_tmp[8439268])
        (8439275 'move' call_tmp[8439266] ret_tmp[8439268])
        (8439279 call =[28046] msg[8439223] call_tmp[8439266])
        ref i_x[8439282]:string[244] "temp"
        (8439284 'move' i_x[8439282](8439286 'set reference' call_tmp[8439266]))
        (8439289 call deinit[21354] i_x[8439282])
        ref i_x[8439291]:string[244] "temp"
        (8439293 'move' i_x[8439291](8439295 'set reference' call_tmp[8439254]))
        (8439298 call deinit[21354] i_x[8439291])
        ref i_x[8439300]:string[244] "temp"
        (8439302 'move' i_x[8439300](8439304 'set reference' call_tmp[8439244]))
        (8439307 call deinit[21354] i_x[8439300])
      }
      val error[8439310]:Error[85511] "error variable" "temp"
      (8439312 'move' error[8439310] nil[32])
      (8439316 call _ch_ioerror[3285336] call_tmp[3350691] err[8439155] msg[8439223] error[8439310])
      val errorExists[8439321]:bool[19] "temp"
      (8439323 'move' errorExists[8439321](8439325 '!=' error[8439310] nil[32]))
      if errorExists[8439321]
      {
        gotoErrorHandling handler[8439333] handler[8439333]
      }
      label handler[8439333]
      val errorExists[8439335]:bool[19] "temp"
      (8439337 'move' errorExists[8439335](8439339 '!=' error[8439310] nil[32]))
      if errorExists[8439335]
      {
        (8439344 '=' error[8439165] error[8439310])
        ref i_x[8439347]:string[244] "temp"
        (8439349 'move' i_x[8439347](8439351 'set reference' msg[8439223]))
        (8439354 call deinit[21354] i_x[8439347])
        gotoErrorHandlingReturn _end_checkLiteralError[8439369] _end_checkLiteralError[8439369]
      }
      ref i_x[8439359]:string[244] "temp"
      (8439361 'move' i_x[8439359](8439363 'set reference' msg[8439223]))
      (8439366 call deinit[21354] i_x[8439359])
    }
    label _end_checkLiteralError[8439369]
    val errorExists[8439371]:bool[19] "temp"
    (8439373 'move' errorExists[8439371](8439375 '!=' error[8439165] nil[32]))
    if errorExists[8439371]
    {
      gotoErrorHandling handler[8439383] handler[8439383]
    }
    label handler[8439383]
    val errorExists[8439385]:bool[19] "temp"
    (8439387 'move' errorExists[8439385](8439389 '!=' error[8439165] nil[32]))
    if errorExists[8439385]
    {
      (8439394 '=' error[8438761] error[8439165])
      ref i_x[8439397]:string[244] "temp"
      (8439399 'move' i_x[8439397](8439401 'set reference' action[8439160]))
      (8439404 call deinit[21354] i_x[8439397])
      ref i_x[8439406]:string[244] "temp"
      (8439408 'move' i_x[8439406](8439410 'set reference' call_tmp[8439071]))
      (8439413 call deinit[21354] i_x[8439406])
      gotoErrorHandlingReturn _end_readLiteralCommon[8439436] _end_readLiteralCommon[8439436]
    }
    ref i_x[8439418]:string[244] "temp"
    (8439420 'move' i_x[8439418](8439422 'set reference' action[8439160]))
    (8439425 call deinit[21354] i_x[8439418])
    ref i_x[8439427]:string[244] "temp"
    (8439429 'move' i_x[8439427](8439431 'set reference' call_tmp[8439071]))
    (8439434 call deinit[21354] i_x[8439427])
    label _end_readLiteralCommon[8439436]
    val errorExists[8439438]:bool[19] "temp"
    (8439440 'move' errorExists[8439438](8439442 '!=' error[8438761] nil[32]))
    if errorExists[8439438]
    {
      (8439447 '=' i_error_out[8438752] error[8438761])
      gotoErrorHandlingReturn _endreadLiteral[8439453] _endreadLiteral[8439453]
    }
    label _endreadLiteral[8439453]
    val errorExists[7302672]:bool[19] "temp"
    (7302677 'move' errorExists[7302672](7302674 '!=' error[5509802] nil[32]))
    if errorExists[7302672]
    {
      (5509808 '=' error_out[5509797] error[5509802])
      gotoErrorHandlingReturn _endendMap[5509799] _endendMap[5509799]
    }
    label _endendMap[5509799]
    (3350705 return _void[46])
  }
  function MapDeserializer(fileReader(false,jsonDeserializer))[3348822].hasMore[3348903](const  ref arg this[3348907]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822], ref arg error_out[5509697]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[3348911]:bool[19] "dead after last mention" "RVV" "temp"
    const-ref call_tmp[3348919]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459450]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459452 'move' call_tmp[8459450](8459454 '.' this[3348907] reader[3348816]))
    (3348921 'move' call_tmp[3348919] call_tmp[8459450])
    const-val _return_tmp_[5468835]:int(64)[10] "dead after last mention" "temp"
    val error[5509702]:Error[85511] "error variable" "temp"
    (5509704 'move' error[5509702] nil[32])
    (5468837 'move' _return_tmp_[5468835](3348931 call mark[3288983] call_tmp[3348919] error[5509702]))
    val errorExists[7302624]:bool[19] "temp"
    (7302629 'move' errorExists[7302624](7302626 '!=' error[5509702] nil[32]))
    if errorExists[7302624]
    {
      (5509708 '=' error_out[5509697] error[5509702])
      gotoErrorHandlingReturn _endhasMore[5509699] _endhasMore[5509699]
    }
    const-ref call_tmp[3348948]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459460]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459462 'move' call_tmp[8459460](8459464 '.' this[3348907] reader[3348816]))
    (3348950 'move' call_tmp[3348948] call_tmp[8459460])
    const-val call_tmp[3348956]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_ignoreWhitespace[3349018]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    val error[5509717]:Error[85511] "error variable" "temp"
    (5509719 'move' error[5509717] nil[32])
    val inlineImm[8445454]:string[244] "temp"
    (8445457 'move' inlineImm[8445454] "}")
    ref i_literal[8445459]:string[244] "temp"
    (8445463 'move' i_literal[8445459](8445461 'set reference' inlineImm[8445454]))
    val inlineImm[8445465]:bool[19] "temp"
    (8445468 'move' inlineImm[8445465] 1)
    ref i_error_out[8445470]:Error[85511] "temp"
    (8445474 'move' i_error_out[8445470](8445472 'set reference' error[5509717]))
    val ret[8445477]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[8445479]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[8445481]:Error[85511] "error variable" "temp"
    (8445483 'move' error[8445481] nil[32])
    val ret[8445486]:bool[19] "dead after last mention" "RVV" "temp"
    val error[8445488]:Error[85511] "error variable" "temp"
    (8445490 'move' error[8445488] nil[32])
    ref call_tmp[8445493]:locale[234] "dead after last mention" "maybe param" "temp"
    (8445495 'move' call_tmp[8445493](8445497 '.' call_tmp[3348948] _home[3276771]))
    val coerce_tmp[8445500]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8445502 'move' coerce_tmp[8445500](8445504 '.v' call_tmp[8445493] _instance[135293]))
    val coerce_tmp[8445507]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8445509 'move' coerce_tmp[8445507](8445511 'cast' RootClass[236] coerce_tmp[8445500]))
    const-val call_tmp[8445514]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445516 'move' call_tmp[8445514](8445518 '==' coerce_tmp[8445507] nil[32]))
    if call_tmp[8445514]
    {
      (8445524 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[8445527]:Error[85511] "error variable" "temp"
    (8445529 'move' error[8445527] nil[32])
    const-val err[8445532]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[8445534]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445536 'move' call_tmp[8445534](8445538 'cast' int(32)[66] 0))
    const-val call_tmp[8445541]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445543 'move' call_tmp[8445541](8445546 call qio_int_to_err[12856] call_tmp[8445534]))
    (8445548 'move' err[8445532] call_tmp[8445541])
    val coerce_tmp[8445551]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8445553 'move' coerce_tmp[8445551](8445555 '.v' call_tmp[3348948] _channel_internal[3276776]))
    const-val call_tmp[8445558]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445560 'move' call_tmp[8445558](8445562 'ptr_eq' coerce_tmp[8445551] nil[32]))
    if call_tmp[8445558]
    {
      const-val call_tmp[8445567]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[8445569]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8445571 'move' coerce_tmp[8445569](8445573 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[8445576]:owned SystemError[1554765] "temp"
      (8445579 call createSystemError[14072] coerce_tmp[8445569] "Operation attempted on an invalid fileReader" ret_tmp[8445576])
      (8445583 'move' call_tmp[8445567] ret_tmp[8445576])
      val call_tmp[8445586]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[8445588]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[8445590]:owned Error[1498203] "temp"
      ref i_x[8445592]:owned SystemError[1554765] "temp"
      (8445594 'move' i_x[8445592](8445596 'set reference' call_tmp[8445567]))
      ref i__retArg[8445598]:owned Error[1498203] "temp"
      (8445600 'move' i__retArg[8445598](8445602 'set reference' ret_tmp[8445590]))
      val _formal_tmp_x[8445604]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (8445606 'move' _formal_tmp_x[8445604] i_x[8445592])
      const-val ret[8445609]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[8445611]:owned SystemError[1554765] "temp"
      (8445613 'move' i_this[8445611](8445615 'set reference' _formal_tmp_x[8445604]))
      val coerce_tmp[8445617]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8445619 'move' coerce_tmp[8445617](8445621 '.v' i_this[8445611] chpl_p[1554760]))
      val call_tmp[8445624]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445626 'move' call_tmp[8445624](8445628 'cast' Error[85511] coerce_tmp[8445617]))
      val castPtr[8445631]:Error[85511] "dead at end of block" "insert auto destroy"
      (8445633 'move' castPtr[8445631] call_tmp[8445624])
      ref i_this[8445636]:owned SystemError[1554765] "temp"
      (8445638 'move' i_this[8445636](8445640 'set reference' _formal_tmp_x[8445604]))
      val tmp[8445642]:SystemError[13599] "temp"
      (8445644 'move' tmp[8445642](8445646 'cast' SystemError[13599] nil[32]))
      (8445649 '.=' i_this[8445636] chpl_p[1554760] tmp[8445642])
      val coerce_tmp[8445653]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8445655 'move' coerce_tmp[8445653](8445657 'cast' RootClass[236] call_tmp[8445624]))
      const-val call_tmp[8445660]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445662 'move' call_tmp[8445660](8445664 '==' coerce_tmp[8445653] nil[32]))
      if call_tmp[8445660]
      {
        (8445670 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[8445673]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[8445675]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (8445678 call init[1499358] initTemp[8445675] castPtr[8445631])
      (8445681 'move' call_tmp[8445673] initTemp[8445675])
      (8445684 'move' ret[8445609] call_tmp[8445673])
      (8445688 call chpl__autoDestroy[3968549] _formal_tmp_x[8445604])
      (8445690 '=' i__retArg[8445598] ret[8445609])
      (8445693 'move' coerce_tmp[8445588] ret_tmp[8445590])
      const-val _formal_tmp_in_err[8445696]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (8445698 'move' _formal_tmp_in_err[8445696] coerce_tmp[8445588])
      (8445701 'move' call_tmp[8445586](8445704 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[8445696]))
      (8445706 '=' error[8445527] call_tmp[8445586])
      gotoErrorHandlingReturn _endlock[8445769] _endlock[8445769]
    }
    const-val call_tmp[8445712]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445714 'move' call_tmp[8445712](8445717 call qio_err_iserr[12868] err[8445532]))
    const-val call_tmp[8445719]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445721 'move' call_tmp[8445719](8445723 '!=' call_tmp[8445712] 0))
    if call_tmp[8445719]
    {
      val error[8445728]:Error[85511] "error variable" "temp"
      (8445730 'move' error[8445728] nil[32])
      (8445734 call _ch_ioerror[3285336] call_tmp[3348948] err[8445532] "in lock" error[8445728])
      val errorExists[8445739]:bool[19] "temp"
      (8445741 'move' errorExists[8445739](8445743 '!=' error[8445728] nil[32]))
      if errorExists[8445739]
      {
        gotoErrorHandling handler[8445751] handler[8445751]
      }
      label handler[8445751]
      val errorExists[8445753]:bool[19] "temp"
      (8445755 'move' errorExists[8445753](8445757 '!=' error[8445728] nil[32]))
      if errorExists[8445753]
      {
        (8445762 '=' error[8445527] error[8445728])
        gotoErrorHandlingReturn _endlock[8445769] _endlock[8445769]
      }
    }
    label _endlock[8445769]
    val errorExists[8445771]:bool[19] "temp"
    (8445773 'move' errorExists[8445771](8445775 '!=' error[8445527] nil[32]))
    if errorExists[8445771]
    {
      gotoErrorHandling handler[8445783] handler[8445783]
    }
    label handler[8445783]
    val errorExists[8445785]:bool[19] "temp"
    (8445787 'move' errorExists[8445785](8445789 '!=' error[8445527] nil[32]))
    if errorExists[8445785]
    {
      (8445795 call chpl_uncaught_error[87456] error[8445527])
    }
    const-val call_tmp[8445798]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[8445800]:string[244] "dead after last mention" "RVV" "temp"
    val ret[8445802]:string[244] "dead at end of block" "insert auto destroy"
    (8445805 call init[21321] ret[8445802])
    const-val coerce_tmp[8445807]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8445809 'move' coerce_tmp[8445807](8445811 '.v' i_literal[8445459] cachedNumCodepoints[21293]))
    (8445814 '.=' ret[8445802] cachedNumCodepoints[21293] coerce_tmp[8445807])
    (8445819 call initWithBorrowedBuffer[1470549] ret[8445802] i_literal[8445459])
    (8445822 '=' ret[8445800] ret[8445802])
    (8445825 'move' call_tmp[8445798] ret[8445800])
    val coerce_tmp[8445828]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (8445830 'move' coerce_tmp[8445828](8445832 '.v' call_tmp[8445798] buff[21299]))
    (8445835 'noop')
    val call_tmp[8445836]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (8445838 'move' call_tmp[8445836](8445840 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[8445828]))
    val ret[8445843]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8445845 '=' ret[8445843](8445847 '.v' i_literal[8445459] buffLen[21281]))
    const-val call_tmp[8445850]:errorCode[12828] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[8445852]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8445854 'move' coerce_tmp[8445852](8445856 'cast' int(32)[66] 0))
    val coerce_tmp[8445859]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8445861 'move' coerce_tmp[8445859](8445863 '.v' call_tmp[3348948] _channel_internal[3276776]))
    const-val coerce_tmp[8445866]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8445868 'move' coerce_tmp[8445866](8445870 'cast' int(32)[66] inlineImm[8445465]))
    (8445873 'move' call_tmp[8445850](8445876 call qio_channel_scan_literal[167758] coerce_tmp[8445852] coerce_tmp[8445859] call_tmp[8445836] ret[8445843] coerce_tmp[8445866]))
    const-val err[8445882]:errorCode[12828] "dead at end of block" "const" "insert auto destroy"
    (8445884 'move' err[8445882] call_tmp[8445850])
    const-val action[8445887]:string[244] "dead at end of block" "const" "insert auto destroy"
    (8445889 'move' action[8445887] "matching")
    val error[8445892]:Error[85511] "error variable" "temp"
    (8445894 'move' error[8445892] nil[32])
    ref i_action[8445897]:string[244] "temp"
    (8445899 'move' i_action[8445897](8445901 'set reference' action[8445887]))
    val inlineImm[8445903]:bool[19] "temp"
    (8445905 'move' inlineImm[8445903] 1)
    const-val call_tmp[8445908]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445910 'move' call_tmp[8445908](8445913 call qio_err_to_int[12844] call_tmp[8445850]))
    const-val call_tmp[8445915]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445917 'move' call_tmp[8445915](8445919 'cast' int(32)[66] 0))
    const-val call_tmp[8445922]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445924 'move' call_tmp[8445922](8445926 '==' call_tmp[8445908] call_tmp[8445915]))
    const-val call_tmp[8445929]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8445931 'move' call_tmp[8445929](8445933 'u!' call_tmp[8445922]))
    if call_tmp[8445929]
    {
      const-val call_tmp[8445937]:string[244] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[8445939]:string[244] "temp"
      (8445942 call literalErrorHelper[3112834] i_literal[8445459] i_action[8445897] inlineImm[8445903] ret_tmp[8445939])
      (8445947 'move' call_tmp[8445937] ret_tmp[8445939])
      val msg[8445950]:string[244] "dead at end of block" "insert auto destroy"
      (8445952 'move' msg[8445950] call_tmp[8445937])
      const-val call_tmp[8445955]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445957 'move' call_tmp[8445955](8445960 call qio_err_to_int[12844] err[8445882]))
      const-val call_tmp[8445962]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8445964 'move' call_tmp[8445962](8445966 '==' call_tmp[8445955] EILSEQ[11191]))
      if call_tmp[8445962]
      {
        const-val call_tmp[8445971]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8445973]:string[244] "temp"
        (8445976 call escapedNonUTF8ErrorMessage[183891] ret_tmp[8445973])
        (8445978 'move' call_tmp[8445971] ret_tmp[8445973])
        const-val call_tmp[8445981]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8445983]:string[244] "temp"
        (8445986 call +[28065] call_tmp[8445971] "Error: " ret_tmp[8445983])
        (8445990 'move' call_tmp[8445981] ret_tmp[8445983])
        const-val call_tmp[8445993]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8445995]:string[244] "temp"
        (8445998 call +[28065] call_tmp[8445981] msg[8445950] ret_tmp[8445995])
        (8446002 'move' call_tmp[8445993] ret_tmp[8445995])
        (8446006 call =[28046] msg[8445950] call_tmp[8445993])
        ref i_x[8446009]:string[244] "temp"
        (8446011 'move' i_x[8446009](8446013 'set reference' call_tmp[8445993]))
        (8446016 call deinit[21354] i_x[8446009])
        ref i_x[8446018]:string[244] "temp"
        (8446020 'move' i_x[8446018](8446022 'set reference' call_tmp[8445981]))
        (8446025 call deinit[21354] i_x[8446018])
        ref i_x[8446027]:string[244] "temp"
        (8446029 'move' i_x[8446027](8446031 'set reference' call_tmp[8445971]))
        (8446034 call deinit[21354] i_x[8446027])
      }
      val error[8446037]:Error[85511] "error variable" "temp"
      (8446039 'move' error[8446037] nil[32])
      (8446043 call _ch_ioerror[3285336] call_tmp[3348948] err[8445882] msg[8445950] error[8446037])
      val errorExists[8446048]:bool[19] "temp"
      (8446050 'move' errorExists[8446048](8446052 '!=' error[8446037] nil[32]))
      if errorExists[8446048]
      {
        gotoErrorHandling handler[8446060] handler[8446060]
      }
      label handler[8446060]
      val errorExists[8446062]:bool[19] "temp"
      (8446064 'move' errorExists[8446062](8446066 '!=' error[8446037] nil[32]))
      if errorExists[8446062]
      {
        (8446071 '=' error[8445892] error[8446037])
        ref i_x[8446074]:string[244] "temp"
        (8446076 'move' i_x[8446074](8446078 'set reference' msg[8445950]))
        (8446081 call deinit[21354] i_x[8446074])
        gotoErrorHandlingReturn _end_checkLiteralError[8446096] _end_checkLiteralError[8446096]
      }
      ref i_x[8446086]:string[244] "temp"
      (8446088 'move' i_x[8446086](8446090 'set reference' msg[8445950]))
      (8446093 call deinit[21354] i_x[8446086])
    }
    label _end_checkLiteralError[8446096]
    val errorExists[8446098]:bool[19] "temp"
    (8446100 'move' errorExists[8446098](8446102 '!=' error[8445892] nil[32]))
    if errorExists[8446098]
    {
      gotoErrorHandling handler[8446110] handler[8446110]
    }
    label handler[8446110]
    val errorExists[8446112]:bool[19] "temp"
    (8446114 'move' errorExists[8446112](8446116 '!=' error[8445892] nil[32]))
    if errorExists[8446112]
    {
      (8446121 '=' error[8445488] error[8445892])
      ref i_x[8446124]:string[244] "temp"
      (8446126 'move' i_x[8446124](8446128 'set reference' action[8445887]))
      (8446131 call deinit[21354] i_x[8446124])
      ref i_x[8446133]:string[244] "temp"
      (8446135 'move' i_x[8446133](8446137 'set reference' call_tmp[8445798]))
      (8446140 call deinit[21354] i_x[8446133])
      gotoErrorHandlingReturn _end_readLiteralCommon[8446163] _end_readLiteralCommon[8446163]
    }
    ref i_x[8446145]:string[244] "temp"
    (8446147 'move' i_x[8446145](8446149 'set reference' action[8445887]))
    (8446152 call deinit[21354] i_x[8446145])
    ref i_x[8446154]:string[244] "temp"
    (8446156 'move' i_x[8446154](8446158 'set reference' call_tmp[8445798]))
    (8446161 call deinit[21354] i_x[8446154])
    label _end_readLiteralCommon[8446163]
    val errorExists[8446165]:bool[19] "temp"
    (8446167 'move' errorExists[8446165](8446169 '!=' error[8445488] nil[32]))
    if errorExists[8446165]
    {
      gotoErrorHandling handler[8446177] handler[8446177]
    }
    label handler[8446177]
    val errorExists[8446179]:bool[19] "temp"
    (8446181 'move' errorExists[8446179](8446183 '!=' error[8445488] nil[32]))
    if errorExists[8446179]
    {
      val call_tmp[8446188]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
      (8446190 'move' call_tmp[8446188](8446192 'dynamic_cast' BadFormatError[15094] error[8445488]))
      val tmp[8446195]:BadFormatError[15094] "dead at end of block" "insert auto destroy" "temp"
      (8446197 'move' tmp[8446195] call_tmp[8446188])
      const-val call_tmp[8446200]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8446202 'move' call_tmp[8446200](8446204 '!=' call_tmp[8446188] nil[32]))
      if call_tmp[8446200]
      {
        const-val call_tmp[8446209]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[8446211]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
        (8446214 call init[1543824] initTemp[8446211] tmp[8446195])
        (8446217 'move' call_tmp[8446209] initTemp[8446211])
        const-val e[8446220]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
        (8446222 'move' e[8446220] call_tmp[8446209])
        (8446225 'move' ret[8445486] 0)
        (8446229 call chpl__autoDestroy[3940454] e[8446220])
        gotoReturn _end__matchLiteralCommon[8446297] _end__matchLiteralCommon[8446297]
        (8446234 call chpl__autoDestroy[3940454] e[8446220])
      }
      {
        val call_tmp[8446237]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (8446239 'move' call_tmp[8446237](8446241 'dynamic_cast' EofError[14808] error[8445488]))
        val tmp[8446244]:EofError[14808] "dead at end of block" "insert auto destroy" "temp"
        (8446246 'move' tmp[8446244] call_tmp[8446237])
        const-val call_tmp[8446249]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8446251 'move' call_tmp[8446249](8446253 '!=' call_tmp[8446237] nil[32]))
        if call_tmp[8446249]
        {
          const-val call_tmp[8446258]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[8446260]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (8446263 call init[1542524] initTemp[8446260] tmp[8446244])
          (8446266 'move' call_tmp[8446258] initTemp[8446260])
          const-val e[8446269]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (8446271 'move' e[8446269] call_tmp[8446258])
          (8446274 'move' ret[8445486] 0)
          (8446278 call chpl__autoDestroy[3937692] e[8446269])
          gotoReturn _end__matchLiteralCommon[8446297] _end__matchLiteralCommon[8446297]
          (8446283 call chpl__autoDestroy[3937692] e[8446269])
        }
        {
          (8446286 '=' error[8445481] error[8445488])
          gotoErrorHandlingReturn _end__matchLiteralCommon[8446297] _end__matchLiteralCommon[8446297]
        }
      }
    }
    (8446294 'move' ret[8445486] 1)
    label _end__matchLiteralCommon[8446297]
    (8446299 'move' call_tmp[8445479] ret[8445486])
    val errorExists[8446302]:bool[19] "temp"
    (8446304 'move' errorExists[8446302](8446306 '!=' error[8445481] nil[32]))
    if errorExists[8446302]
    {
      (8446311 '=' i_error_out[8445470] error[8445481])
      gotoErrorHandlingReturn _endmatchLiteral[8446320] _endmatchLiteral[8446320]
    }
    (8446317 '=' ret[8445477] call_tmp[8445479])
    label _endmatchLiteral[8446320]
    (3348958 'move' call_tmp[3348956] ret[8445477])
    val errorExists[7302632]:bool[19] "temp"
    (7302637 'move' errorExists[7302632](7302634 '!=' error[5509717] nil[32]))
    if errorExists[7302632]
    {
      (5509723 '=' error_out[5509697] error[5509717])
      const-ref call_tmp[5635029]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      ref call_tmp[8459540]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
      (8459542 'move' call_tmp[8459540](8459544 '.' this[3348907] reader[3348816]))
      (5635031 'move' call_tmp[5635029] call_tmp[8459540])
      val coerce_tmp[8454074]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8454076 'move' coerce_tmp[8454074](8454078 '.v' call_tmp[5635029] _channel_internal[3276776]))
      (8454082 call qio_channel_revert_unlocked[166360] coerce_tmp[8454074])
      gotoErrorHandlingReturn _endhasMore[5509699] _endhasMore[5509699]
    }
    const-val call_tmp[3348966]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7351364]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351366 'move' call_tmp[7351364](7351368 'u!' call_tmp[3348956]))
    (3348968 'move' call_tmp[3348966] call_tmp[7351364])
    (3349031 '=' ret[3348911] call_tmp[3348966])
    const-ref call_tmp[5635040]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    ref call_tmp[8459550]:fileReader(false,jsonDeserializer)[3276790] "dead after last mention" "maybe param" "temp"
    (8459552 'move' call_tmp[8459550](8459554 '.' this[3348907] reader[3348816]))
    (5635042 'move' call_tmp[5635040] call_tmp[8459550])
    val coerce_tmp[8454087]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8454089 'move' coerce_tmp[8454087](8454091 '.v' call_tmp[5635040] _channel_internal[3276776]))
    (8454095 call qio_channel_revert_unlocked[166360] coerce_tmp[8454087])
    label _endhasMore[5509699]
    (3348978 return ret[3348911])
  }
  function jsonDeserializer[356412].init=[1414826](ref arg this[1414830]:jsonDeserializer[356412], const  ref arg other[1414831]:jsonDeserializer[356412]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    (1414835 return _void[46])
  }
  type jsonDeserializer[356412]
  function AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851].init[3313769](ref arg this[3313773]:AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851], const  ref arg reader[3313775]:fileReader(false,jsonDeserializer)[3276790], const  ref arg _fieldOffsets[3313781]:map(string,int(64),false)[3288794], in arg _lastPos[3313789]:int(64)[10], in arg _parent[3313795]:bool[19]) : void[4] "compiler generated" "default initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_reader[3313822]:fileReader(false,jsonDeserializer)[3276790] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3313826 'move' _formal_tmp_reader[3313822] reader[3313775])
    val _formal_tmp__fieldOffsets[3313823]:map(string,int(64),false)[3288794] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3313830 'move' _formal_tmp__fieldOffsets[3313823] _fieldOffsets[3313781])
    (3313801 '.=' this[3313773] reader[3313834] _formal_tmp_reader[3313822])
    (3313805 '.=' this[3313773] _fieldOffsets[3313836] _formal_tmp__fieldOffsets[3313823])
    (3313810 '.=' this[3313773] _lastPos[3313842] _lastPos[3313789])
    (3313814 '.=' this[3313773] _parent[3313847] _parent[3313795])
    (3313819 return _void[46])
  }
  type AggregateDeserializer(fileReader(false,jsonDeserializer))[3313851] val reader[3313834]:fileReader(false,jsonDeserializer)[3276790] val _fieldOffsets[3313836]:map(string,int(64),false)[3288794] val _lastPos[3313842]:int(64)[10] val _parent[3313847]:bool[19]
  function ListDeserializer(fileReader(false,jsonDeserializer))[3378540].init[3378497](ref arg this[3378501]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540], const  ref arg reader[3378503]:fileReader(false,jsonDeserializer)[3276790], in arg _first[3378509]:bool[19]) : void[4] "compiler generated" "default initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_reader[3378527]:fileReader(false,jsonDeserializer)[3276790] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3378530 'move' _formal_tmp_reader[3378527] reader[3378503])
    (3378515 '.=' this[3378501] reader[3378534] _formal_tmp_reader[3378527])
    (3378519 '.=' this[3378501] _first[3378536] _first[3378509])
    (3378524 return _void[46])
  }
  type ListDeserializer(fileReader(false,jsonDeserializer))[3378540] val reader[3378534]:fileReader(false,jsonDeserializer)[3276790] val _first[3378536]:bool[19]
  function MapDeserializer(fileReader(false,jsonDeserializer))[3348822].init[3348779](ref arg this[3348783]:MapDeserializer(fileReader(false,jsonDeserializer))[3348822], const  ref arg reader[3348785]:fileReader(false,jsonDeserializer)[3276790], in arg _first[3348791]:bool[19]) : void[4] "compiler generated" "default initializer" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_reader[3348809]:fileReader(false,jsonDeserializer)[3276790] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3348812 'move' _formal_tmp_reader[3348809] reader[3348785])
    (3348797 '.=' this[3348783] reader[3348816] _formal_tmp_reader[3348809])
    (3348801 '.=' this[3348783] _first[3348818] _first[3348791])
    (3348806 return _void[46])
  }
  type MapDeserializer(fileReader(false,jsonDeserializer))[3348822] val reader[3348816]:fileReader(false,jsonDeserializer)[3276790] val _first[3348818]:bool[19]
}
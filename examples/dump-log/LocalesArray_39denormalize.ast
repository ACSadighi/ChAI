AST dump for LocalesArray after pass denormalize.
Module use list: ChapelStandard 

{
  function chpl__init_LocalesArray[468573](const in arg _ln[9365549]:int(64)[10], in arg _fn[9365551]:int(32)[66]) : void[4] "insert line file info" "module init" "resolved"
  {
    if chpl__init_LocalesArray_p[9309227]
    {
      goto _exit_chpl__init_LocalesArray[9309262] _exit_chpl__init_LocalesArray[9309262]
    }
    ref refIndentLevel[9309248]:int(32)[66] "temp"
    (9309246 call printModuleInit[386886] c"%*s\n" c"LocalesArray" 12 _ln[9365549] _fn[9365551])
    (9309252 'move' refIndentLevel[9309248](9309251 'addr of' moduleInitLevel[386877]))
    (9309255 '+=' refIndentLevel[9309248] 1)
    (9309233 'move' chpl__init_LocalesArray_p[9309227] 1)
    (9305626 call chpl_addModule[311360] c"LocalesArray"(9305622 'cast_to_type' chpl__deinit_LocalesArray[5658837] chpl_c_fn_ptr[123]) _ln[9365549] _fn[9365551])
    (309570 call chpl_init_rootLocale[136789] _ln[9365549] _fn[9365551])
    (937372 'move' call_tmp[937369](9196869 '.' rootLocale[136464] _instance[135293]))
    (1916187 'move' coerce_tmp[1916182](1916178 'deref' call_tmp[937369]))
    val _formal_type_tmp_[7879816]:RootLocale[309500] "temp"
    val ret[7879818]:RootLocale[309500] "dead after last mention" "RVV" "temp"
    if(7879831 '=='(7879824 'cast' RootClass[236] coerce_tmp[1916182] _ln[9365549] _fn[9365551]) nil[32])
    {
      (7879836 '=' ret[7879818](7879838 'cast' RootLocale[309500] nil[32] _ln[9365549] _fn[9365551]))
      gotoReturn _end_:[7879854] _end_:[7879854]
    }
    (7879851 'move' ret[7879818](7879848 'dynamic_cast' _formal_type_tmp_[7879816] coerce_tmp[1916182]))
    label _end_:[7879854]
    (937377 'move' call_tmp[937374] ret[7879818])
    if(7880018 '=='(7880011 'cast' RootClass[236] call_tmp[937374] _ln[9365549] _fn[9365551]) nil[32])
    {
      (7880024 call nilCheckHalt[392] "argument to ! is nil" _ln[9365549] _fn[9365551])
    }
    (937382 'move' call_tmp[937379] call_tmp[937374])
    (9310710 '_check_nil' call_tmp[937379] _ln[9365549] _fn[9365551])
    (937389 'move' call_tmp[937386](309587 call getDefaultLocaleArray[309399] call_tmp[937379] _ln[9365549] _fn[9365551]))
    (653806 'move' Locales[309572] call_tmp[937386])
    const-val call_tmp[937393]:domain(1,int(64),one)[1765496] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[5556362]:domain(1,int(64),one)[1765496] "temp"
    (309593 call _dom[1894490] Locales[309572] ret_tmp[5556362] _ln[9365549] _fn[9365551])
    (5556365 'move' call_tmp[937393] ret_tmp[5556362])
    (653810 'move' LocaleSpace[309591](1916193 call chpl__initCopy[1916196] call_tmp[937393] 1 _ln[9365549] _fn[9365551]))
    (9309258 '-=' refIndentLevel[9309248] 1)
    label _exit_chpl__init_LocalesArray[9309262]
    (631137 return _void[46])
  }
  const-ref Locales[309572]:[domain(1,int(64),one)] locale[1780406] "dead at end of block" "const" "locale private" "reference to a const" "ref var"
  const-val LocaleSpace[309591]:domain(1,int(64),one)[1765496] "dead at end of block" "const" "insert auto destroy"
  const-ref call_tmp[937369]:BaseLocale[136243] "dead at end of block" "maybe param" "temp"
  val call_tmp[937374]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
  val coerce_tmp[1916182]:BaseLocale[136243] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
  val call_tmp[937379]:RootLocale[309500] "dead at end of block" "expr temp" "maybe param" "temp"
  const-ref call_tmp[937386]:[domain(1,int(64),one)] locale[1780406] "dead at end of block" "maybe param" "reference to a const" "temp"
  function chpl__deinit_LocalesArray[5658837]:proc()[9305188](const in arg _ln[9468889]:int(64)[10], in arg _fn[9468891]:int(32)[66]) : void[4] "resolved"
  {
    const-val local_LocaleSpace[9288146]:domain(1,int(64),one)[1765496] "temp"
    (9288147 'move' local_LocaleSpace[9288146] LocaleSpace[309591])
    (5658845 call chpl__autoDestroy[3989014] local_LocaleSpace[9288146] _ln[9468889] _fn[9468891])
    (5658840 return _void[46])
  }
}
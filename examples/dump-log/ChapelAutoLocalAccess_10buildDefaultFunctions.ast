AST dump for ChapelAutoLocalAccess after pass buildDefaultFunctions.
Module use list: ChapelLocale 

{
  function chpl__init_ChapelAutoLocalAccess[468576]() : void[4] "insert line file info" "module init"
  {
    (631289 return _void[46])
  }
  function chpl__staticAutoLocalCheck[309604](arg accessBase[309609]:_array[255540](?), arg loopDomain[309613]:_domain[225034](?), param arg hasOffsets[309617] :
  0 =
  0) param : _unknown[42]
  {
    unknown ret[631141] "RVV" "param" "temp"
    unknown tmp[504612] "maybe param" "temp"
    (504623 'move' tmp[504612] hasOffsets[309617])
    unknown call_tmp[937398] "expr temp" "maybe param" "maybe type" "temp"
    (937401 'move' call_tmp[937398](504625 call _cond_invalid tmp[504612]))
    if call_tmp[937398]
    {
      (504628 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[707460] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[707461] "maybe param" "temp"
    unknown call_tmp[937403] "expr temp" "maybe param" "maybe type" "temp"
    (937406 'move' call_tmp[937403](504613 call isTrue tmp[504612]))
    (707466 'move' tmp[707461](707464 call _cond_test call_tmp[937403]))
    if tmp[707461]
    {
      unknown tmp[707468] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[937410] "expr temp" "maybe param" "maybe type" "temp"
      (937413 'move' call_tmp[937410](309630 call _dom _mt[203] accessBase[309609]))
      unknown call_tmp[937417] "expr temp" "maybe param" "maybe type" "temp"
      (937420 'move' call_tmp[937417](309638 call(309635 call (partial) supportsOffsetAutoLocalAccess _mt[203] call_tmp[937410])))
      unknown call_tmp[937422] "expr temp" "maybe param" "maybe type" "temp"
      (937425 'move' call_tmp[937422](309627 call ! call_tmp[937417]))
      (707470 'move' tmp[707468](504616 call isTrue call_tmp[937422]))
      (707475 'move' tmp[707460](707472 '_paramFoldLogical' tmp[707461] tmp[707468]))
    }
    {
      (707480 'move' tmp[707460](707477 '_paramFoldLogical' tmp[707461] 0))
    }
    unknown call_tmp[937427] "expr temp" "maybe param" "maybe type" "temp"
    (937430 'move' call_tmp[937427](309639 call _cond_test tmp[707460]))
    if call_tmp[937427]
    {
      (631146 'move' ret[631141](631145 'deref' 0))
      gotoReturn _end_chpl__staticAutoLocalCheck[631139] _end_chpl__staticAutoLocalCheck[631139]
    }
    { scopeless type
      unknown call_type_tmp[579033] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[937434] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (937437 'move' call_tmp[937434](309666 call _dom _mt[203] accessBase[309609]))
      (579037 'move' call_type_tmp[579033](309669 'typeof' call_tmp[937434]))
    }
    unknown call_tmp[937439] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (937442 'move' call_tmp[937439](309671 'typeof' loopDomain[309613]))
    unknown call_tmp[937444] "expr temp" "maybe param" "maybe type" "temp"
    (937447 'move' call_tmp[937444](309663 call == call_type_tmp[579033] call_tmp[937439]))
    unknown call_tmp[937449] "expr temp" "maybe param" "maybe type" "temp"
    (937452 'move' call_tmp[937449](309672 call _cond_test call_tmp[937444]))
    if call_tmp[937449]
    {
      unknown call_tmp[937454] "expr temp" "maybe param" "maybe type" "temp"
      (937457 'move' call_tmp[937454](309657 call chpl__isArrayViewWithDifferentDist accessBase[309609]))
      unknown call_tmp[937459] "expr temp" "maybe param" "maybe type" "temp"
      (937462 'move' call_tmp[937459](309659 call _cond_test call_tmp[937454]))
      if call_tmp[937459]
      {
        (631151 'move' ret[631141](631150 'deref' 0))
        gotoReturn _end_chpl__staticAutoLocalCheck[631139] _end_chpl__staticAutoLocalCheck[631139]
      }
      {
        unknown call_tmp[937466] "expr temp" "maybe param" "maybe type" "temp"
        (937469 'move' call_tmp[937466](309655 call(309652 call (partial) supportsAutoLocalAccess _mt[203] loopDomain[309613])))
        (631156 'move' ret[631141](631155 'deref' call_tmp[937466]))
        gotoReturn _end_chpl__staticAutoLocalCheck[631139] _end_chpl__staticAutoLocalCheck[631139]
      }
    }
    { scopeless type
      unknown call_type_tmp[579039] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[937473] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (937476 'move' call_tmp[937473](309687 call _value _mt[203] loopDomain[309613]))
      (579043 'move' call_type_tmp[579039](309690 'typeof' call_tmp[937473]))
    }
    unknown call_tmp[937480] "expr temp" "maybe param" "maybe type" "temp"
    (937483 'move' call_tmp[937480](309694 call(309691 call (partial) isDefaultRectangular _mt[203] call_type_tmp[579039])))
    unknown call_tmp[937485] "expr temp" "maybe param" "maybe type" "temp"
    (937488 'move' call_tmp[937485](309695 call _cond_test call_tmp[937480]))
    if call_tmp[937485]
    {
      unknown call_tmp[937492] "expr temp" "maybe param" "maybe type" "temp"
      (937495 'move' call_tmp[937492](309679 call _dom _mt[203] accessBase[309609]))
      unknown call_tmp[937499] "expr temp" "maybe param" "maybe type" "temp"
      (937502 'move' call_tmp[937499](309685 call(309682 call (partial) supportsAutoLocalAccess _mt[203] call_tmp[937492])))
      (631161 'move' ret[631141](631160 'deref' call_tmp[937499]))
      gotoReturn _end_chpl__staticAutoLocalCheck[631139] _end_chpl__staticAutoLocalCheck[631139]
    }
    (631166 'move' ret[631141](631165 'deref' 0))
    label _end_chpl__staticAutoLocalCheck[631139]
    (631143 return ret[631141])
  }
  function chpl__staticAutoLocalCheck[309703](arg accessBase[309705]:_any[141](?), arg loopDomain[309707]:_any[141](?), param arg hasOffsets[309710] :
  0 =
  0) param : _unknown[42]
  {
    unknown ret[631170] "RVV" "param" "temp"
    (631175 'move' ret[631170](631174 'deref' 0))
    (631172 return ret[631170])
  }
  function chpl__staticAutoLocalCheck[309718](arg accessBase[309720]:_any[141](?), arg loopDomain[309722]:_any[141](?), param arg hasOffsets[309725] :
  0 =
  0) param : _unknown[42]
  {
    unknown ret[631179] "RVV" "param" "temp"
    (631184 'move' ret[631179](631183 'deref' 0))
    (631181 return ret[631179])
  }
  function chpl__staticAutoLocalCheck[309733](arg accessBase[309735]:_any[141](?), arg loopDomain[309737]:_any[141](?), param arg hasOffsets[309740] :
  0 =
  0) param : _unknown[42]
  {
    unknown ret[631188] "RVV" "param" "temp"
    (631193 'move' ret[631188](631192 'deref' 0))
    (631190 return ret[631188])
  }
  function chpl__staticAutoLocalCheck[309748](arg accessBase[309750]:_any[141](?), arg loopDomain[309752]:_any[141](?), param arg hasOffsets[309755] :
  0 =
  0) param : _unknown[42]
  {
    unknown ret[631197] "RVV" "param" "temp"
    (631202 'move' ret[631197](631201 'deref' 0))
    (631199 return ret[631197])
  }
  function chpl__dynamicAutoLocalCheck[309763](arg accessBase[309765]:_any[141](?), arg loopDomain[309767]:_any[141](?), param arg hasOffsets[309770] :
  0 =
  0) : _unknown[42]
  {
    unknown ret[631206] "RVV" "temp"
    unknown call_tmp[937504] "expr temp" "maybe param" "maybe type" "temp"
    (937507 'move' call_tmp[937504](309889 call chpl__staticAutoLocalCheck accessBase[309765] loopDomain[309767] hasOffsets[309770]))
    unknown call_tmp[937509] "expr temp" "maybe param" "maybe type" "temp"
    (937512 'move' call_tmp[937509](309893 call _cond_test call_tmp[937504]))
    if call_tmp[937509]
    {
      unknown tmp[504633] "maybe param" "temp"
      unknown tmp[504654] "maybe param" "temp"
      unknown call_tmp[937516] "expr temp" "maybe param" "maybe type" "temp"
      (937519 'move' call_tmp[937516](309785 call _dom _mt[203] accessBase[309765]))
      (504665 'move' tmp[504654](309783 call chpl_sameDomainKind call_tmp[937516] loopDomain[309767]))
      unknown call_tmp[937521] "expr temp" "maybe param" "maybe type" "temp"
      (937524 'move' call_tmp[937521](504667 call _cond_invalid tmp[504654]))
      if call_tmp[937521]
      {
        (504670 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[707487] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[707488] "maybe param" "temp"
      unknown call_tmp[937526] "expr temp" "maybe param" "maybe type" "temp"
      (937529 'move' call_tmp[937526](504655 call isTrue tmp[504654]))
      (707493 'move' tmp[707488](707491 call _cond_test call_tmp[937526]))
      if tmp[707488]
      {
        unknown tmp[707495] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[937533] "expr temp" "maybe param" "maybe type" "temp"
        (937536 'move' call_tmp[937533](309792 call _dom _mt[203] accessBase[309765]))
        unknown call_tmp[937538] "expr temp" "maybe param" "maybe type" "temp"
        (937541 'move' call_tmp[937538](309789 call == call_tmp[937533] loopDomain[309767]))
        (707497 'move' tmp[707495](504658 call isTrue call_tmp[937538]))
        (707502 'move' tmp[707487](707499 '_paramFoldLogical' tmp[707488] tmp[707495]))
      }
      {
        (707507 'move' tmp[707487](707504 '_paramFoldLogical' tmp[707488] 0))
      }
      (504644 'move' tmp[504633] tmp[707487])
      unknown call_tmp[937543] "expr temp" "maybe param" "maybe type" "temp"
      (937546 'move' call_tmp[937543](504646 call _cond_invalid tmp[504633]))
      if call_tmp[937543]
      {
        (504649 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[707514] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[707515] "maybe param" "temp"
      unknown call_tmp[937548] "expr temp" "maybe param" "maybe type" "temp"
      (937551 'move' call_tmp[937548](504634 call isTrue tmp[504633]))
      (707520 'move' tmp[707515](707518 call _cond_test call_tmp[937548]))
      if tmp[707515]
      {
        unknown tmp[707522] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[937555] "expr temp" "maybe param" "maybe type" "temp"
        (937558 'move' call_tmp[937555](309797 call _dom _mt[203] accessBase[309765]))
        unknown call_tmp[937562] "expr temp" "maybe param" "maybe type" "temp"
        (937565 'move' call_tmp[937562](309800 call _value _mt[203] call_tmp[937555]))
        unknown call_tmp[937569] "expr temp" "maybe param" "maybe type" "temp"
        (937572 'move' call_tmp[937569](309803 call dist _mt[203] call_tmp[937562]))
        unknown call_tmp[937578] "expr temp" "maybe param" "maybe type" "temp"
        (937581 'move' call_tmp[937578](309811 call _value _mt[203] loopDomain[309767]))
        unknown call_tmp[937585] "expr temp" "maybe param" "maybe type" "temp"
        (937588 'move' call_tmp[937585](309814 call dist _mt[203] call_tmp[937578]))
        unknown call_tmp[937590] "expr temp" "maybe param" "maybe type" "temp"
        (937593 'move' call_tmp[937590](309809 call(309806 call (partial) dsiEqualDMaps _mt[203] call_tmp[937569]) call_tmp[937585]))
        (707524 'move' tmp[707522](504637 call isTrue call_tmp[937590]))
        (707529 'move' tmp[707514](707526 '_paramFoldLogical' tmp[707515] tmp[707522]))
      }
      {
        (707534 'move' tmp[707514](707531 '_paramFoldLogical' tmp[707515] 0))
      }
      unknown call_tmp[937595] "expr temp" "maybe param" "maybe type" "temp"
      (937598 'move' call_tmp[937595](309817 call _cond_test tmp[707514]))
      if call_tmp[937595]
      {
        (631211 'move' ret[631206](631210 'deref' 1))
        gotoReturn _end_chpl__dynamicAutoLocalCheck[631204] _end_chpl__dynamicAutoLocalCheck[631204]
      }
      unknown call_tmp[937602] "expr temp" "maybe param" "maybe type" "temp"
      (937605 'move' call_tmp[937602](309828 call _dom _mt[203] accessBase[309765]))
      unknown call_tmp[937609] "expr temp" "maybe param" "maybe type" "temp"
      (937612 'move' call_tmp[937609](309831 call distribution _mt[203] call_tmp[937602]))
      unknown call_tmp[937616] "expr temp" "maybe param" "maybe type" "temp"
      (937619 'move' call_tmp[937616](309835 call distribution _mt[203] loopDomain[309767]))
      unknown call_tmp[937621] "expr temp" "maybe param" "maybe type" "temp"
      (937624 'move' call_tmp[937621](309825 call == call_tmp[937609] call_tmp[937616]))
      unknown call_tmp[937626] "expr temp" "maybe param" "maybe type" "temp"
      (937629 'move' call_tmp[937626](309838 call _cond_test call_tmp[937621]))
      if call_tmp[937626]
      {
        (631216 'move' ret[631206](631215 'deref' 1))
        gotoReturn _end_chpl__dynamicAutoLocalCheck[631204] _end_chpl__dynamicAutoLocalCheck[631204]
      }
      { scopeless type
        unknown call_type_tmp[579045] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[937633] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (937636 'move' call_tmp[937633](309876 call _value _mt[203] loopDomain[309767]))
        (579049 'move' call_type_tmp[579045](309879 'typeof' call_tmp[937633]))
      }
      unknown call_tmp[937640] "expr temp" "maybe param" "maybe type" "temp"
      (937643 'move' call_tmp[937640](309883 call(309880 call (partial) isDefaultRectangular _mt[203] call_type_tmp[579045])))
      unknown call_tmp[937645] "expr temp" "maybe param" "maybe type" "temp"
      (937648 'move' call_tmp[937645](309884 call _cond_test call_tmp[937640]))
      if call_tmp[937645]
      {
        unknown call_tmp[937650] "expr temp" "maybe param" "maybe type" "temp"
        (937653 'move' call_tmp[937650](309867 '_wide_get_locale' loopDomain[309767]))
        unknown call_tmp[937655] "expr temp" "maybe param" "maybe type" "temp"
        (937658 'move' call_tmp[937655](309868 call chpl_localeID_to_locale call_tmp[937650]))
        unknown call_tmp[937660] "expr temp" "maybe param" "maybe type" "temp"
        (937663 'move' call_tmp[937660](459686 call here[135591]))
        unknown call_tmp[937665] "expr temp" "maybe param" "maybe type" "temp"
        (937668 'move' call_tmp[937665](309864 call == call_tmp[937655] call_tmp[937660]))
        unknown call_tmp[937670] "expr temp" "maybe param" "maybe type" "temp"
        (937673 'move' call_tmp[937670](309871 call _cond_test call_tmp[937665]))
        if call_tmp[937670]
        {
          unknown call_tmp[937677] "expr temp" "maybe param" "maybe type" "temp"
          (937680 'move' call_tmp[937677](309854 call(309851 call (partial) localSubdomain _mt[203] accessBase[309765])))
          unknown call_tmp[937684] "expr temp" "maybe param" "maybe type" "temp"
          (937687 'move' call_tmp[937684](309858 call(309855 call (partial) contains _mt[203] call_tmp[937677]) loopDomain[309767]))
          unknown call_tmp[937689] "expr temp" "maybe param" "maybe type" "temp"
          (937692 'move' call_tmp[937689](309860 call _cond_test call_tmp[937684]))
          if call_tmp[937689]
          {
            (631221 'move' ret[631206](631220 'deref' 1))
            gotoReturn _end_chpl__dynamicAutoLocalCheck[631204] _end_chpl__dynamicAutoLocalCheck[631204]
          }
        }
      }
    }
    (631226 'move' ret[631206](631225 'deref' 0))
    label _end_chpl__dynamicAutoLocalCheck[631204]
    (631208 return ret[631206])
  }
  function chpl__dynamicAutoLocalCheck[309901](arg accessBase[309903]:_any[141](?), arg loopDomain[309905]:_any[141](?), param arg hasOffsets[309908] :
  0 =
  0) : _unknown[42]
  {
    unknown ret[631230] "RVV" "temp"
    (631235 'move' ret[631230](631234 'deref' 0))
    (631232 return ret[631230])
  }
  function chpl__dynamicAutoLocalCheck[309916](arg accessBase[309918]:_any[141](?), arg loopDomain[309920]:_any[141](?), param arg hasOffsets[309923] :
  0 =
  0) : _unknown[42]
  {
    unknown ret[631239] "RVV" "temp"
    (631244 'move' ret[631239](631243 'deref' 0))
    (631241 return ret[631239])
  }
  function chpl__dynamicAutoLocalCheck[309931](arg accessBase[309933]:_any[141](?), arg loopDomain[309935]:_any[141](?), param arg hasOffsets[309938] :
  0 =
  0) : _unknown[42]
  {
    unknown ret[631248] "RVV" "temp"
    (631253 'move' ret[631248](631252 'deref' 0))
    (631250 return ret[631248])
  }
  function chpl__ala_offsetCheck[309946](arg accessBase[309951]:_array[255540](?), arg offsets[309956]:integral[159](?) ...) : _unknown[42] "inline"
  {
    unknown ret[631257] "RVV" "temp"
    unknown call_tmp[937696] "expr temp" "maybe param" "maybe type" "temp"
    (937699 'move' call_tmp[937696](309973 call size _mt[203] offsets[309956]))
    unknown call_tmp[937703] "expr temp" "maybe param" "maybe type" "temp"
    (937706 'move' call_tmp[937703](309977 call rank _mt[203] accessBase[309951]))
    unknown call_tmp[937708] "expr temp" "maybe param" "maybe type" "temp"
    (937711 'move' call_tmp[937708](309970 call != call_tmp[937696] call_tmp[937703]))
    unknown call_tmp[937713] "expr temp" "maybe param" "maybe type" "temp"
    (937716 'move' call_tmp[937713](309980 call _cond_test call_tmp[937708]))
    if call_tmp[937713]
    {
      (309963 call compilerError "Automatic local access optimization failure: " "Number of offsets doesn't match rank")
    }
    unknown call_tmp[937720] "expr temp" "maybe param" "maybe type" "temp"
    (937723 'move' call_tmp[937720](309986 call _dom _mt[203] accessBase[309951]))
    unknown call_tmp[937727] "expr temp" "maybe param" "maybe type" "temp"
    (937730 'move' call_tmp[937727](309994 call(309991 call (partial) autoLocalAccessOffsetCheck _mt[203] call_tmp[937720]) offsets[309956]))
    (631262 'move' ret[631257](631261 'deref' call_tmp[937727]))
    (631259 return ret[631257])
  }
  function chpl__ala_offsetCheck[309998](arg accessBase[310000]:_any[141](?), arg offsets[310003]:_any[141](?) ...) : _unknown[42] "inline"
  {
    unknown ret[631266] "RVV" "temp"
    (631271 'move' ret[631266](631270 'deref' 0))
    (631268 return ret[631266])
  }
  function chpl__isArrayViewWithDifferentDist[310011](arg arr[310016]:_array[255540](?)) param : _unknown[42]
  {
    unknown ret[631275] "RVV" "param" "temp"
    unknown call_tmp[937734] "expr temp" "maybe param" "maybe type" "temp"
    (937737 'move' call_tmp[937734](310046 call _value _mt[203] arr[310016]))
    unknown call_tmp[937741] "expr temp" "maybe param" "maybe type" "temp"
    (937744 'move' call_tmp[937741](310052 call(310049 call (partial) isSliceArrayView _mt[203] call_tmp[937734])))
    unknown call_tmp[937746] "expr temp" "maybe param" "maybe type" "temp"
    (937749 'move' call_tmp[937746](310053 call _cond_test call_tmp[937741]))
    if call_tmp[937746]
    {
      { scopeless type
        unknown call_type_tmp[579051] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[937753] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (937756 'move' call_tmp[937753](310027 call _value _mt[203] arr[310016]))
        unknown call_tmp[937758] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (937761 'move' call_tmp[937758](310025 call chpl__getActualArray call_tmp[937753]))
        unknown call_tmp[937765] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (937768 'move' call_tmp[937765](310030 call dom _mt[203] call_tmp[937758]))
        (579055 'move' call_type_tmp[579051](310033 'typeof' call_tmp[937765]))
      }
      { scopeless type
        unknown call_type_tmp[579057] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[937772] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (937775 'move' call_tmp[937772](310035 call _dom _mt[203] arr[310016]))
        unknown call_tmp[937779] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (937782 'move' call_tmp[937779](310038 call _value _mt[203] call_tmp[937772]))
        (579061 'move' call_type_tmp[579057](310041 'typeof' call_tmp[937779]))
      }
      unknown call_tmp[937784] "expr temp" "maybe param" "maybe type" "temp"
      (937787 'move' call_tmp[937784](310022 call != call_type_tmp[579051] call_type_tmp[579057]))
      (631280 'move' ret[631275](631279 'deref' call_tmp[937784]))
      gotoReturn _end_chpl__isArrayViewWithDifferentDist[631273] _end_chpl__isArrayViewWithDifferentDist[631273]
    }
    {
      (631285 'move' ret[631275](631284 'deref' 0))
      gotoReturn _end_chpl__isArrayViewWithDifferentDist[631273] _end_chpl__isArrayViewWithDifferentDist[631273]
    }
    label _end_chpl__isArrayViewWithDifferentDist[631273]
    (631277 return ret[631275])
  }
  (397050 'used modules list'(309602 'use' ChapelLocale[137388]))
}
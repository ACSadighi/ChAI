AST dump for OS after pass scopeResolve.
Module use list: ChapelStandard CTypes POSIX 

{
  def module POSIX[12822]  
  type errorCode[12828]
  function qio_err_eq[12830](arg a[12833] :
  errorCode[12828], arg b[12837] :
  errorCode[12828]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int[522]
  }
  function qio_err_to_int[12844](arg a[12847] :
  errorCode[12828]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (12851 call int(64)[10] 32)
  }
  function qio_int_to_err[12856](arg a[12861] :
  (12859 call int(64)[10] 32)) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    errorCode[12828]
  }
  function qio_err_iserr[12868](arg a[12871] :
  errorCode[12828]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int[522]
  }
  function errorCode[12828].==[12878](arg _mt[12892]:_MT[201], arg this[12881]:errorCode[12828] :
  errorCode[12828], arg a[12885] :
  errorCode[12828], arg b[12889] :
  errorCode[12828]) : _unknown[42] "inline" "method" "operator"
  {
    (12895 return(12896 call !=(12899 call qio_err_eq a[12885] b[12889])(12902 call : 0 c_int[522])))
  }
  function errorCode[12828].==[12908](arg _mt[12924]:_MT[201], arg this[12911]:errorCode[12828] :
  errorCode[12828], arg a[12915] :
  errorCode[12828], arg b[12921] :
  (12919 call int(64)[10] 32)) : _unknown[42] "inline" "method" "operator"
  {
    (12927 return(12928 call ==(12931 call qio_err_to_int a[12915])(12933 call : b[12921](12937 call int(64)[10] 32))))
  }
  function errorCode[12828].==[12941](arg _mt[12957]:_MT[201], arg this[12944]:errorCode[12828] :
  errorCode[12828], arg a[12948] :
  errorCode[12828], arg b[12954] :
  (12952 call int(64)[10] 64)) : _unknown[42] "inline" "method" "operator"
  {
    (12960 return(12961 call ==(12964 call qio_err_to_int a[12948])(12966 call : b[12954](12970 call int(64)[10] 32))))
  }
  function errorCode[12828].==[12974](arg _mt[12990]:_MT[201], arg this[12977]:errorCode[12828] :
  errorCode[12828], arg a[12983] :
  (12981 call int(64)[10] 32), arg b[12987] :
  errorCode[12828]) : _unknown[42] "inline" "method" "operator"
  {
    (12993 return(12994 call ==(12996 call : a[12983](13000 call int(64)[10] 32))(13003 call qio_err_to_int b[12987])))
  }
  function errorCode[12828].==[13007](arg _mt[13023]:_MT[201], arg this[13010]:errorCode[12828] :
  errorCode[12828], arg a[13016] :
  (13014 call int(64)[10] 64), arg b[13020] :
  errorCode[12828]) : _unknown[42] "inline" "method" "operator"
  {
    (13026 return(13027 call ==(13029 call : a[13016](13033 call int(64)[10] 32))(13036 call qio_err_to_int b[13020])))
  }
  function errorCode[12828].!=[13040](arg _mt[13054]:_MT[201], arg this[13043]:errorCode[12828] :
  errorCode[12828], arg a[13047] :
  errorCode[12828], arg b[13051] :
  errorCode[12828]) : _unknown[42] "inline" "method" "operator"
  {
    (13057 return(13058 call !(13060 call == a[13047] b[13051])))
  }
  function errorCode[12828].!=[13066](arg _mt[13082]:_MT[201], arg this[13069]:errorCode[12828] :
  errorCode[12828], arg a[13073] :
  errorCode[12828], arg b[13079] :
  (13077 call int(64)[10] 32)) : _unknown[42] "inline" "method" "operator"
  {
    (13085 return(13086 call !(13088 call == a[13073] b[13079])))
  }
  function errorCode[12828].!=[13094](arg _mt[13110]:_MT[201], arg this[13097]:errorCode[12828] :
  errorCode[12828], arg a[13101] :
  errorCode[12828], arg b[13107] :
  (13105 call int(64)[10] 64)) : _unknown[42] "inline" "method" "operator"
  {
    (13113 return(13114 call !(13116 call == a[13101] b[13107])))
  }
  function errorCode[12828].!=[13122](arg _mt[13138]:_MT[201], arg this[13125]:errorCode[12828] :
  errorCode[12828], arg a[13131] :
  (13129 call int(64)[10] 32), arg b[13135] :
  errorCode[12828]) : _unknown[42] "inline" "method" "operator"
  {
    (13141 return(13142 call !(13144 call == a[13131] b[13135])))
  }
  function errorCode[12828].!=[13150](arg _mt[13166]:_MT[201], arg this[13153]:errorCode[12828] :
  errorCode[12828], arg a[13159] :
  (13157 call int(64)[10] 64), arg b[13163] :
  errorCode[12828]) : _unknown[42] "inline" "method" "operator"
  {
    (13169 return(13170 call !(13172 call == a[13159] b[13163])))
  }
  function errorCode[12828].![13178](arg _mt[13188]:_MT[201], arg this[13181]:errorCode[12828] :
  errorCode[12828], arg a[13185] :
  errorCode[12828]) : _unknown[42] "inline" "method" "operator"
  {
    (13191 return(13192 call ==(13195 call qio_err_iserr a[13185])(13197 call : 0 c_int[522])))
  }
  function errorCode[12828].chpl_cond_test_method[13203](arg _mt[13209]:_MT[201], arg this[13206]:errorCode[12828] :
  errorCode[12828]) : _unknown[42] "inline" "method"
  {
    (13212 return(13213 call !=(13216 call qio_err_iserr this[13206])(13218 call : 0 c_int[522])))
  }
  function :[13224](arg x[13227] :
  errorCode[12828], arg t[13233] :
  (13231 call int(64)[10] 32)) : _unknown[42] "inline" "operator"
  {
    (13237 return(13239 call qio_err_to_int x[13227]))
  }
  function :[13243](arg x[13246] :
  errorCode[12828], arg t[13252] :
  (13250 call int(64)[10] 64)) : _unknown[42] "inline" "operator"
  {
    (13256 return(13257 call :(13260 call qio_err_to_int x[13246])(13263 call int(64)[10] 64)))
  }
  function :[13267](arg x[13272] :
  (13270 call int(64)[10] 32), arg t[13276] :
  errorCode[12828]) : _unknown[42] "inline" "operator"
  {
    (13280 return(13282 call qio_int_to_err x[13272]))
  }
  function :[13286](arg x[13291] :
  (13289 call int(64)[10] 64), arg t[13295] :
  errorCode[12828]) : _unknown[42] "inline" "operator"
  {
    (13299 return(13301 call qio_int_to_err(13302 call : x[13291](13306 call int(64)[10] 32))))
  }
  function errorCode[12828].=[13310](arg _mt[13324]:_MT[201], arg this[13313]:errorCode[12828] :
  errorCode[12828], ref arg ret[13317] :
  errorCode[12828], arg x[13321] :
  errorCode[12828]) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (13327 '=' ret[13317] x[13321])
  }
  function errorCode[12828].=[13332](arg _mt[13348]:_MT[201], arg this[13335]:errorCode[12828] :
  errorCode[12828], ref arg ret[13339] :
  errorCode[12828], arg x[13345] :
  (13343 call int(64)[10] 32)) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (13351 '=' ret[13339](13354 call qio_int_to_err x[13345]))
  }
  function errorCode[12828].=[13358](arg _mt[13374]:_MT[201], arg this[13361]:errorCode[12828] :
  errorCode[12828], ref arg ret[13365] :
  errorCode[12828], arg x[13371] :
  (13369 call int(64)[10] 64)) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (13377 '=' ret[13365](13380 call qio_int_to_err(13381 call : x[13371](13385 call int(64)[10] 32))))
  }
  function errorCode[12828].=[13389](arg _mt[13403]:_MT[201], arg this[13392]:errorCode[12828] :
  errorCode[12828], ref arg ret[13396] :
  c_int[522], arg x[13400] :
  errorCode[12828]) : _unknown[42] "assignop" "inline" "method" "operator" "no return value for void"
  {
    (13406 '=' ret[13396](13408 call :(13411 call qio_err_to_int x[13400]) c_int[522]))
  }
  function chpl_macro_int_EEOF[13422]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int[522]
  }
  function chpl_macro_int_ESHORT[13428]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int[522]
  }
  function chpl_macro_int_EFORMAT[13434]() : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_int[522]
  }
  function EEOF[13440]() : _unknown[42] "inline" "no parens" "private"
  {
    (13443 return(13444 call :(13447 call chpl_macro_int_EEOF) c_int[522]))
  }
  function ESHORT[13451]() : _unknown[42] "inline" "no parens" "private"
  {
    (13454 return(13455 call :(13458 call chpl_macro_int_ESHORT) c_int[522]))
  }
  function EFORMAT[13462]() : _unknown[42] "inline" "no parens" "private"
  {
    (13465 return(13466 call :(13469 call chpl_macro_int_EFORMAT) c_int[522]))
  }
  function SystemError[13599].init[13485](arg _mt[13501]:_MT[201], arg this[13487]:SystemError[13599], arg err[13490] :
  errorCode[12828], arg details[13497] :
  string[244] =
  "") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (13504 call =(13509 call . this[13487] c"err") err[13490])
    (13513 call =(13518 call . this[13487] c"details") details[13497])
  }
  function SystemError[13599].message[13524](arg _mt[13528]:_MT[201], arg this[13526]:SystemError[13599]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown strerror_err[13532] 0 c_int[522]
    (13536 'end of statement')
    unknown errstr[13538](13540 call sys_strerror_syserr_str(414388 call . this[13526] c"err") strerror_err[13532])
    (13544 'end of statement')
    unknown err_msg[13546] string[244]
    (13549 'end of statement')
    Try!
    {
      {
        (13551 call = err_msg[13546](13560 call(13557 call . string[244] c"createAdoptingBuffer") errstr[13538]))
      }
    }
    if(13589 call _cond_test(13580 call !(13588 call(13585 call .(398906 call . this[13526] c"details") c"isEmpty"))))
    {
      (13565 call += err_msg[13546](13568 call +(13570 call + " ("(414397 call . this[13526] c"details")) ")"))
    }
    (13594 return err_msg[13546])
  }
  type SystemError[13599] val super[397313]:Error[85511] "super class" unknown err[13476] errorCode[12828] unknown details[13481] string[244]
  type unmanaged SystemError?[468277]
  type unmanaged SystemError[468274]
  type SystemError[414438](?)
  function createSystemOrChplError[13601](arg err[13604] :
  errorCode[12828], arg details[13609] :
  string[244] =
  "") : _unknown[42] "always propagate line file info" "insert line file info"
  {
    unknown strerror_err[13616] 0 c_int[522]
    (13620 'end of statement')
    unknown errstr[13622](13624 call sys_strerror_syserr_str err[13604] strerror_err[13616])
    (13628 'end of statement')
    unknown err_msg[13630] string[244]
    (13633 'end of statement')
    Try!
    {
      {
        (13635 call = err_msg[13630](13642 call(13639 call . string[244] c"createAdoptingBuffer") errstr[13622]))
      }
    }
    {
      unknown tmp[13702] "expr temp" "maybe param" "maybe type" "temp"
      (13704 'move' tmp[13702] err[13604])
      if(13709 call _cond_test(13706 call == tmp[13702](414409 call EEOF[13440])))
      {
        (13652 return(13653 'new'(_chpl_manager = _owned[238](?))(13657 call EofError[414412](?) details[13609] err_msg[13630])))
      }
      {
        if(13715 call _cond_test(13712 call == tmp[13702](414417 call ESHORT[13451])))
        {
          (13666 return(13667 'new'(_chpl_manager = _owned[238](?))(13671 call UnexpectedEofError[348557](?) details[13609] err_msg[13630])))
        }
        {
          if(13722 call _cond_test(13719 call == tmp[13702](414422 call EFORMAT[13462])))
          {
            (13680 return(13681 'new'(_chpl_manager = _owned[238](?))(13685 call BadFormatError[414425](?) details[13609] err_msg[13630])))
          }
          {
            (13693 return(13695 call createSystemError err[13604] details[13609]))
          }
        }
      }
    }
  }
  { scopeless type
    Error[316409](?)
  }
  function createSystemOrChplError[13729](arg err[13732] :
  int(64)[10], arg details[13737] :
  string[244] =
  "") : _unknown[42] "always propagate line file info" "insert line file info"
  {
    (13743 return(13745 call createSystemOrChplError(13746 call : err[13732] errorCode[12828]) details[13737]))
  }
  { scopeless type
    Error[316409](?)
  }
  function createSystemError[13754](arg err[13757] :
  errorCode[12828], arg details[13762] :
  string[244] =
  "") : _unknown[42] "always propagate line file info" "insert line file info"
  {
    if(14056 call _cond_test(14034 call ||(14036 call ||(14038 call ||(14040 call == err[13757] EAGAIN[11096])(14044 call == err[13757] EALREADY[11101]))(14048 call == err[13757] EWOULDBLOCK[11446]))(14052 call == err[13757] EINPROGRESS[11196])))
    {
      (13769 return(13770 'new'(_chpl_manager = _owned[238](?))(13774 call BlockingIoError[414442](?) details[13762] err[13757])))
    }
    {
      if(14029 call _cond_test(14025 call == err[13757] ECHILD[11126]))
      {
        (13778 return(13779 'new'(_chpl_manager = _owned[238](?))(13783 call ChildProcessError[414448](?) details[13762] err[13757])))
      }
      {
        if(14020 call _cond_test(14016 call == err[13757] EPIPE[11391]))
        {
          (13787 return(13788 'new'(_chpl_manager = _owned[238](?))(13792 call BrokenPipeError[414454](?) details[13762] err[13757])))
        }
        {
          if(14011 call _cond_test(14007 call == err[13757] ECONNABORTED[11131]))
          {
            (13796 return(13797 'new'(_chpl_manager = _owned[238](?))(13801 call ConnectionAbortedError[414460](?) details[13762] err[13757])))
          }
          {
            if(14002 call _cond_test(13998 call == err[13757] ECONNREFUSED[11136]))
            {
              (13805 return(13806 'new'(_chpl_manager = _owned[238](?))(13810 call ConnectionRefusedError[414466](?) details[13762] err[13757])))
            }
            {
              if(13993 call _cond_test(13989 call == err[13757] ECONNRESET[11141]))
              {
                (13814 return(13815 'new'(_chpl_manager = _owned[238](?))(13819 call ConnectionResetError[414472](?) details[13762] err[13757])))
              }
              {
                if(13984 call _cond_test(13980 call == err[13757] EEXIST[11166]))
                {
                  (13823 return(13824 'new'(_chpl_manager = _owned[238](?))(13828 call FileExistsError[414478](?) details[13762] err[13757])))
                }
                {
                  if(13975 call _cond_test(13971 call == err[13757] ENOENT[11286]))
                  {
                    (13832 return(13833 'new'(_chpl_manager = _owned[238](?))(13837 call FileNotFoundError[414484](?) details[13762] err[13757])))
                  }
                  {
                    if(13966 call _cond_test(13962 call == err[13757] EINTR[11201]))
                    {
                      (13841 return(13842 'new'(_chpl_manager = _owned[238](?))(13846 call InterruptedError[414490](?) details[13762] err[13757])))
                    }
                    {
                      if(13957 call _cond_test(13953 call == err[13757] EISDIR[11221]))
                      {
                        (13850 return(13851 'new'(_chpl_manager = _owned[238](?))(13855 call IsADirectoryError[414496](?) details[13762] err[13757])))
                      }
                      {
                        if(13948 call _cond_test(13944 call == err[13757] ENOTDIR[11336]))
                        {
                          (13859 return(13860 'new'(_chpl_manager = _owned[238](?))(13864 call NotADirectoryError[414502](?) details[13762] err[13757])))
                        }
                        {
                          if(13939 call _cond_test(13929 call ||(13931 call == err[13757] EACCES[11076])(13935 call == err[13757] EPERM[11386])))
                          {
                            (13868 return(13869 'new'(_chpl_manager = _owned[238](?))(13873 call PermissionError[414508](?) details[13762] err[13757])))
                          }
                          {
                            if(13924 call _cond_test(13920 call == err[13757] ESRCH[11426]))
                            {
                              (13877 return(13878 'new'(_chpl_manager = _owned[238](?))(13882 call ProcessLookupError[414514](?) details[13762] err[13757])))
                            }
                            {
                              if(13915 call _cond_test(13911 call == err[13757] ETIMEDOUT[11436]))
                              {
                                (13886 return(13887 'new'(_chpl_manager = _owned[238](?))(13891 call TimeoutError[414520](?) details[13762] err[13757])))
                              }
                              {
                                if(13907 call _cond_test(13903 call == err[13757] EIO[11211]))
                                {
                                  (13895 return(13896 'new'(_chpl_manager = _owned[238](?))(13900 call IoError[414526](?) err[13757] details[13762])))
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (14061 return(14062 'new'(_chpl_manager = _owned[238](?))(14066 call SystemError[414438](?) err[13757] details[13762])))
  }
  { scopeless type
    SystemError[414438](?)
  }
  function createSystemError[14072](arg err[14075] :
  int(64)[10], arg details[14080] :
  string[244] =
  "") : _unknown[42] "always propagate line file info" "insert line file info"
  {
    (14085 return(14087 call createSystemError(14088 call : err[14075] errorCode[12828]) details[14080]))
  }
  function BlockingIoError[14131].init[14097](arg _mt[14116]:_MT[201], arg this[14099]:BlockingIoError[14131], arg details[14103] :
  string[244] =
  "", arg err[14112] :
  errorCode[12828] =
  (14108 call : EWOULDBLOCK[11446] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14125 call(14122 call .(398911 call . this[14099] c"super") c"init") err[14112] details[14103])
  }
  type BlockingIoError[14131] val super[397315]:SystemError[13599] "super class"
  type BlockingIoError[414442](?)
  function ChildProcessError[14167].init[14135](arg _mt[14154]:_MT[201], arg this[14137]:ChildProcessError[14167], arg details[14141] :
  string[244] =
  "", arg err[14150] :
  errorCode[12828] =
  (14146 call : ECHILD[11126] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14161 call(14158 call .(398916 call . this[14137] c"super") c"init") err[14150] details[14141])
  }
  type ChildProcessError[14167] val super[397317]:SystemError[13599] "super class"
  type ChildProcessError[414448](?)
  function ConnectionError[14198].init[14171](arg _mt[14185]:_MT[201], arg this[14173]:ConnectionError[14198], arg err[14176] :
  errorCode[12828], arg details[14181] :
  string[244] =
  "") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14192 call(14189 call .(398921 call . this[14173] c"super") c"init") err[14176] details[14181])
  }
  type ConnectionError[14198] val super[397319]:SystemError[13599] "super class"
  function BrokenPipeError[14234].init[14202](arg _mt[14221]:_MT[201], arg this[14204]:BrokenPipeError[14234], arg details[14208] :
  string[244] =
  "", arg err[14217] :
  errorCode[12828] =
  (14213 call : EPIPE[11391] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14228 call(14225 call .(398926 call . this[14204] c"super") c"init") err[14217] details[14208])
  }
  type BrokenPipeError[14234] val super[397321]:ConnectionError[14198] "super class"
  type BrokenPipeError[414454](?)
  function ConnectionAbortedError[14270].init[14238](arg _mt[14257]:_MT[201], arg this[14240]:ConnectionAbortedError[14270], arg details[14244] :
  string[244] =
  "", arg err[14253] :
  errorCode[12828] =
  (14249 call : ECONNABORTED[11131] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14264 call(14261 call .(398931 call . this[14240] c"super") c"init") err[14253] details[14244])
  }
  type ConnectionAbortedError[14270] val super[397323]:ConnectionError[14198] "super class"
  type ConnectionAbortedError[414460](?)
  function ConnectionRefusedError[14306].init[14274](arg _mt[14293]:_MT[201], arg this[14276]:ConnectionRefusedError[14306], arg details[14280] :
  string[244] =
  "", arg err[14289] :
  errorCode[12828] =
  (14285 call : ECONNREFUSED[11136] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14300 call(14297 call .(398936 call . this[14276] c"super") c"init") err[14289] details[14280])
  }
  type ConnectionRefusedError[14306] val super[397325]:ConnectionError[14198] "super class"
  type ConnectionRefusedError[414466](?)
  function ConnectionResetError[14342].init[14310](arg _mt[14329]:_MT[201], arg this[14312]:ConnectionResetError[14342], arg details[14316] :
  string[244] =
  "", arg err[14325] :
  errorCode[12828] =
  (14321 call : ECONNRESET[11141] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14336 call(14333 call .(398941 call . this[14312] c"super") c"init") err[14325] details[14316])
  }
  type ConnectionResetError[14342] val super[397327]:ConnectionError[14198] "super class"
  type ConnectionResetError[414472](?)
  function FileExistsError[14378].init[14346](arg _mt[14365]:_MT[201], arg this[14348]:FileExistsError[14378], arg details[14352] :
  string[244] =
  "", arg err[14361] :
  errorCode[12828] =
  (14357 call : EEXIST[11166] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14372 call(14369 call .(398946 call . this[14348] c"super") c"init") err[14361] details[14352])
  }
  type FileExistsError[14378] val super[397329]:SystemError[13599] "super class"
  type FileExistsError[414478](?)
  function FileNotFoundError[14414].init[14382](arg _mt[14401]:_MT[201], arg this[14384]:FileNotFoundError[14414], arg details[14388] :
  string[244] =
  "", arg err[14397] :
  errorCode[12828] =
  (14393 call : ENOENT[11286] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14408 call(14405 call .(398951 call . this[14384] c"super") c"init") err[14397] details[14388])
  }
  type FileNotFoundError[14414] val super[397331]:SystemError[13599] "super class"
  type FileNotFoundError[414484](?)
  function InterruptedError[14450].init[14418](arg _mt[14437]:_MT[201], arg this[14420]:InterruptedError[14450], arg details[14424] :
  string[244] =
  "", arg err[14433] :
  errorCode[12828] =
  (14429 call : EINTR[11201] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14444 call(14441 call .(398956 call . this[14420] c"super") c"init") err[14433] details[14424])
  }
  type InterruptedError[14450] val super[397333]:SystemError[13599] "super class"
  type InterruptedError[414490](?)
  function IsADirectoryError[14486].init[14454](arg _mt[14473]:_MT[201], arg this[14456]:IsADirectoryError[14486], arg details[14460] :
  string[244] =
  "", arg err[14469] :
  errorCode[12828] =
  (14465 call : EISDIR[11221] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14480 call(14477 call .(398961 call . this[14456] c"super") c"init") err[14469] details[14460])
  }
  type IsADirectoryError[14486] val super[397335]:SystemError[13599] "super class"
  type IsADirectoryError[414496](?)
  function NotADirectoryError[14522].init[14490](arg _mt[14509]:_MT[201], arg this[14492]:NotADirectoryError[14522], arg details[14496] :
  string[244] =
  "", arg err[14505] :
  errorCode[12828] =
  (14501 call : ENOTDIR[11336] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14516 call(14513 call .(398966 call . this[14492] c"super") c"init") err[14505] details[14496])
  }
  type NotADirectoryError[14522] val super[397337]:SystemError[13599] "super class"
  type NotADirectoryError[414502](?)
  function PermissionError[14558].init[14526](arg _mt[14545]:_MT[201], arg this[14528]:PermissionError[14558], arg details[14532] :
  string[244] =
  "", arg err[14541] :
  errorCode[12828] =
  (14537 call : EPERM[11386] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14552 call(14549 call .(398971 call . this[14528] c"super") c"init") err[14541] details[14532])
  }
  type PermissionError[14558] val super[397339]:SystemError[13599] "super class"
  type PermissionError[414508](?)
  function ProcessLookupError[14594].init[14562](arg _mt[14581]:_MT[201], arg this[14564]:ProcessLookupError[14594], arg details[14568] :
  string[244] =
  "", arg err[14577] :
  errorCode[12828] =
  (14573 call : ESRCH[11426] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14588 call(14585 call .(398976 call . this[14564] c"super") c"init") err[14577] details[14568])
  }
  type ProcessLookupError[14594] val super[397341]:SystemError[13599] "super class"
  type ProcessLookupError[414514](?)
  function TimeoutError[14630].init[14598](arg _mt[14617]:_MT[201], arg this[14600]:TimeoutError[14630], arg details[14604] :
  string[244] =
  "", arg err[14613] :
  errorCode[12828] =
  (14609 call : ETIMEDOUT[11436] errorCode[12828])) : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14624 call(14621 call .(398981 call . this[14600] c"super") c"init") err[14613] details[14604])
  }
  type TimeoutError[14630] val super[397343]:SystemError[13599] "super class"
  type TimeoutError[414520](?)
  function IoError[14663].init[14634](arg _mt[14650]:_MT[201], arg this[14636]:IoError[14663], arg err[14640] :
  errorCode[12828] =
  EIO[11211], arg details[14646] :
  string[244] =
  "") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14657 call(14654 call .(398986 call . this[14636] c"super") c"init") err[14640] details[14646])
  }
  type IoError[14663] val super[397345]:SystemError[13599] "super class"
  type IoError[414526](?)
  function EofError[14808].init[14672](arg _mt[14688]:_MT[201], arg this[14674]:EofError[14808], arg details[14678] :
  string[244] =
  "", arg err_msg[14684] :
  string[244] =
  "") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14691 call =(14694 call . this[14674] c"details") details[14678])
    (14698 call =(14703 call . this[14674] c"_msg") err_msg[14684])
  }
  function EofError[14808].message[14709](arg _mt[14713]:_MT[201], arg this[14711]:EofError[14808]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown generatedMsg[14717] string[244]
    (14720 'end of statement')
    if(14776 call _cond_test(14769 call !(14775 call(14772 call .(398993 call . this[14711] c"_msg") c"isEmpty"))))
    {
      (14722 call += generatedMsg[14717](414657 call . this[14711] c"_msg"))
    }
    {
      unknown err[14728](414661 call EEOF[13440]) errorCode[12828]
      (14732 'end of statement')
      unknown strerror_err_ignore[14734] 0 c_int[522]
      (14738 'end of statement')
      unknown errstr[14740](14742 call sys_strerror_syserr_str err[14728] strerror_err_ignore[14734])
      (14746 'end of statement')
      unknown errorcode_msg[14748] string[244]
      (14751 'end of statement')
      Try!
      {
        {
          (14753 call = errorcode_msg[14748](14760 call(14757 call . string[244] c"createAdoptingBuffer") errstr[14740]))
        }
      }
      (14765 call += generatedMsg[14717] errorcode_msg[14748])
    }
    if(14798 call _cond_test(14791 call !(14797 call(14794 call .(398998 call . this[14711] c"details") c"isEmpty"))))
    {
      (14780 call += generatedMsg[14717](14783 call +(14785 call + " ("(414673 call . this[14711] c"details")) ")"))
    }
    (14803 return generatedMsg[14717])
  }
  type EofError[14808] val super[397347]:Error[85511] "super class" unknown details[14668] string[244]
  type unmanaged EofError?[468265]
  type unmanaged EofError[468262]
  type EofError[414412](?)
  function UnexpectedEofError[14951].init[14817](arg _mt[14833]:_MT[201], arg this[14819]:UnexpectedEofError[14951], arg details[14823] :
  string[244] =
  "", arg err_msg[14829] :
  string[244] =
  "") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14836 call =(14839 call . this[14819] c"details") details[14823])
    (14843 call =(14846 call . this[14819] c"_msg") err_msg[14829])
  }
  function UnexpectedEofError[14951].message[14852](arg _mt[14856]:_MT[201], arg this[14854]:UnexpectedEofError[14951]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown generatedMsg[14860] string[244]
    (14863 'end of statement')
    if(14919 call _cond_test(14912 call !(14918 call(14915 call .(399005 call . this[14854] c"_msg") c"isEmpty"))))
    {
      (14865 call += generatedMsg[14860](414682 call . this[14854] c"_msg"))
    }
    {
      unknown err[14871](414686 call ESHORT[13451]) errorCode[12828]
      (14875 'end of statement')
      unknown strerror_err_ignore[14877] 0 c_int[522]
      (14881 'end of statement')
      unknown errstr[14883](14885 call sys_strerror_syserr_str err[14871] strerror_err_ignore[14877])
      (14889 'end of statement')
      unknown errorcode_msg[14891] string[244]
      (14894 'end of statement')
      Try!
      {
        {
          (14896 call = errorcode_msg[14891](14903 call(14900 call . string[244] c"createAdoptingBuffer") errstr[14883]))
        }
      }
      (14908 call += generatedMsg[14860] errorcode_msg[14891])
    }
    if(14941 call _cond_test(14934 call !(14940 call(14937 call .(399010 call . this[14854] c"details") c"isEmpty"))))
    {
      (14923 call += generatedMsg[14860](14926 call +(14928 call + " ("(414698 call . this[14854] c"details")) ")"))
    }
    (14946 return generatedMsg[14860])
  }
  type UnexpectedEofError[14951] val super[397349]:Error[85511] "super class" unknown details[14813] string[244]
  type unmanaged UnexpectedEofError?[468271]
  type unmanaged UnexpectedEofError[468268]
  type UnexpectedEofError[348557](?)
  function BadFormatError[15094].init[14960](arg _mt[14976]:_MT[201], arg this[14962]:BadFormatError[15094], arg details[14966] :
  string[244] =
  "", arg err_msg[14972] :
  string[244] =
  "") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (14979 call =(14982 call . this[14962] c"details") details[14966])
    (14986 call =(14989 call . this[14962] c"_msg") err_msg[14972])
  }
  function BadFormatError[15094].message[14995](arg _mt[14999]:_MT[201], arg this[14997]:BadFormatError[15094]) : _unknown[42] "method" "primary method" "method overrides"
  {
    unknown generatedMsg[15003] string[244]
    (15006 'end of statement')
    if(15062 call _cond_test(15055 call !(15061 call(15058 call .(399017 call . this[14997] c"_msg") c"isEmpty"))))
    {
      (15008 call += generatedMsg[15003](414707 call . this[14997] c"_msg"))
    }
    {
      unknown err[15014](414711 call EFORMAT[13462]) errorCode[12828]
      (15018 'end of statement')
      unknown strerror_err_ignore[15020] 0 c_int[522]
      (15024 'end of statement')
      unknown errstr[15026](15028 call sys_strerror_syserr_str err[15014] strerror_err_ignore[15020])
      (15032 'end of statement')
      unknown errorcode_msg[15034] string[244]
      (15037 'end of statement')
      Try!
      {
        {
          (15039 call = errorcode_msg[15034](15046 call(15043 call . string[244] c"createAdoptingBuffer") errstr[15026]))
        }
      }
      (15051 call += generatedMsg[15003] errorcode_msg[15034])
    }
    if(15084 call _cond_test(15077 call !(15083 call(15080 call .(399022 call . this[14997] c"details") c"isEmpty"))))
    {
      (15066 call += generatedMsg[15003](15069 call +(15071 call + " ("(414723 call . this[14997] c"details")) ")"))
    }
    (15089 return generatedMsg[15003])
  }
  type BadFormatError[15094] val super[397351]:Error[85511] "super class" unknown details[14956] string[244]
  type unmanaged BadFormatError?[468259]
  type unmanaged BadFormatError[468256]
  type BadFormatError[414425](?)
  function InsufficientCapacityError[15146].init[15098](arg _mt[15108]:_MT[201], arg this[15100]:InsufficientCapacityError[15146], arg details[15104] :
  string[244] =
  "") : _unknown[42] "method" "primary method" "no return value for void"
  {
    (15115 call(15112 call .(399027 call . this[15100] c"super") c"init")(15116 call : ERANGE[11411] errorCode[12828]) details[15104])
  }
  function InsufficientCapacityError[15146].message[15123](arg _mt[15127]:_MT[201], arg this[15125]:InsufficientCapacityError[15146]) : _unknown[42] "method" "primary method" "method overrides"
  {
    (15130 return(15140 IfExpr (15135 call(15132 call .(399032 call . this[15125] c"details") c"isEmpty")) then
    { scopeless
      "Result too large"
    } else
    { scopeless
      (414732 call . this[15125] c"details")
    } ))
  }
  type InsufficientCapacityError[15146] val super[397353]:IoError[14663] "super class"
  type InsufficientCapacityError[439715](?)
  function sys_strerror_syserr_str[15148](arg error[15151] :
  errorCode[12828], out arg err_in_strerror[15155] :
  c_int[522]) : _unknown[42] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    (15159 call c_ptrConst[46990](?) c_char[562])
  }
  function quote_string[15164](arg s[15167] :
  string[244], arg len[15171] :
  c_ssize_t[620]) : _unknown[42] "private"
  {
    const QIO_STRING_FORMAT_CHPL[15176] "const" "extern"(15178 call uint(64)[86] 8)
    (15181 'end of statement')
    function qio_quote_string[15182](arg s[15187] :
    (15185 call uint(64)[86] 8), arg e[15193] :
    (15191 call uint(64)[86] 8), arg f[15199] :
    (15197 call uint(64)[86] 8), arg ptr[15205] :
    (15203 call c_ptrConst[46990](?) c_char[562]), arg len[15209] :
    c_ssize_t[620], ref arg ret[15215] :
    (15213 call c_ptrConst[46990](?) c_char[562]), arg ti[15221] :
    (15219 call c_ptr[46891](?) void[4])) : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      errorCode[12828]
    }
    function qio_strdup[15228](arg s[15230]:_any[141](?)) : _unknown[42] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (15233 call c_ptrConst[46990](?) c_char[562])
    }
    unknown ret[15239](15241 call c_ptrConst[46990](?) c_char[562])
    (15244 'end of statement')
    unknown err[15246](15249 call qio_quote_string(15250 call : 34(15256 call uint(64)[86] 8))(15258 call : 34(15262 call uint(64)[86] 8)) QIO_STRING_FORMAT_CHPL[15176](15273 call(15270 call .(15269 call(15266 call . s[15167] c"localize")) c"c_str")) len[15171] ret[15239] nil[32]) errorCode[12828]
    (15278 'end of statement')
    Try!
    {
      {
        if(15293 call _cond_test err[15246])
        {
          (15280 return(15285 call(15282 call . string[244] c"createAdoptingBuffer")(15287 call qio_strdup "<error>")))
        }
        (15298 return(15303 call(15300 call . string[244] c"createAdoptingBuffer") ret[15239]))
      }
    }
  }
  function ioerror[15310](arg error[15313] :
  errorCode[12828], arg msg[15317] :
  string[244], arg path[15321] :
  string[244], arg offset[15327] :
  (15325 call int(64)[10] 64)) : _unknown[42] throws "always propagate line file info" "insert line file info" "no return value for void"
  {
    if(15378 call _cond_test error[15313])
    {
      const quotedpath[15333] "const"(15335 call quote_string path[15321](15337 call :(15342 call . path[15321] c"numBytes") c_ssize_t[620]))
      (15347 'end of statement')
      unknown details[15349](15350 call +(15352 call +(15354 call +(15356 call + msg[15317] " with path ") quotedpath[15333]) " offset ")(15366 call : offset[15327] string[244]))
      (15371 'end of statement')
      (15372 'throw'(15374 call createSystemOrChplError error[15313] details[15349]))
    }
  }
  function ioerror[15384](arg error[15387] :
  errorCode[12828], arg msg[15391] :
  string[244], arg path[15395] :
  string[244]) : _unknown[42] throws "always propagate line file info" "insert line file info" "no return value for void"
  {
    if(15431 call _cond_test error[15387])
    {
      const quotedpath[15401] "const"(15403 call quote_string path[15395](15405 call :(15408 call . path[15395] c"numBytes") c_ssize_t[620]))
      (15413 'end of statement')
      unknown details[15415](15416 call +(15418 call + msg[15391] " with path ") quotedpath[15401])
      (15424 'end of statement')
      (15425 'throw'(15427 call createSystemOrChplError error[15387] details[15415]))
    }
  }
  function ioerror[15437](arg error[15440] :
  errorCode[12828], arg msg[15444] :
  string[244]) : _unknown[42] throws "always propagate line file info" "insert line file info" "no return value for void"
  {
    if(15455 call _cond_test error[15440])
    {
      (15448 'throw'(15450 call createSystemOrChplError error[15440] msg[15444]))
    }
  }
  function ioerror[15462](arg errstr[15465] :
  string[244], arg msg[15469] :
  string[244], arg path[15473] :
  string[244], arg offset[15479] :
  (15477 call int(64)[10] 64)) : _unknown[42] throws "always propagate line file info" "insert line file info" "no return value for void"
  {
    const quotedpath[15484] "const"(15486 call quote_string path[15473](15488 call :(15491 call . path[15473] c"numBytes") c_ssize_t[620]))
    (15496 'end of statement')
    const details[15498] "const"(15499 call +(15501 call +(15503 call +(15505 call +(15507 call +(15509 call + errstr[15465] " ") msg[15469]) " with path ") quotedpath[15484]) " offset ")(15519 call : offset[15479] string[244]))
    (15524 'end of statement')
    (15525 'throw'(15527 call createSystemOrChplError(15528 call : EIO[11211] errorCode[12828]) details[15498]))
  }
  function errorToString[15535](arg error[15538] :
  errorCode[12828]) : _unknown[42]
  {
    unknown strerror_err[15544] 0 c_int[522]
    (15548 'end of statement')
    const errstr[15550] "const"(15552 call sys_strerror_syserr_str error[15538] strerror_err[15544])
    (15556 'end of statement')
    Try!
    {
      {
        (15558 return(15563 call(15560 call . string[244] c"createAdoptingBuffer") errstr[15550]))
      }
    }
  }
  { scopeless type
    string[244]
  }
  (395959 'used modules list'(387002 'use' ChapelStandard[315387])(13417 'use' CTypes[51217])(13420 'use' POSIX[12822]))
}
AST dump for List after pass codegen.
Module use list: ChapelStandard ChapelLocks HaltWrappers Math Sort IO Reflection 

{
  function chpl__init_List[468483](const in arg _ln[9365413]:int(64)[10], in arg _fn[9365415]:int(32)[66]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_List_p[9308047]
    {
      goto _exit_chpl__init_List[9308084] _exit_chpl__init_List[9308084]
    }
    ref refIndentLevel[9308070]:_ref(int(32))[1465743] "temp"
    (9308068 call printModuleInit[386886] c"%*s\n" c"List" 4 _ln[9365413] _fn[9365415])
    (9308074 'move' refIndentLevel[9308070](9308073 'addr of' moduleInitLevel[386877]))
    (9308077 '+=' refIndentLevel[9308070] 1)
    (9308053 'move' chpl__init_List_p[9308047] 1)
    {
      (9305310 call chpl__init_ChapelLocks[468384] _ln[9365413] _fn[9365415])
      (9305312 call chpl__init_HaltWrappers[468312] _ln[9365413] _fn[9365415])
      (9305314 call chpl__init_Math[468321] _ln[9365413] _fn[9365415])
      (9305316 call chpl__init_Sort[468513] _ln[9365413] _fn[9365415])
      (9305318 call chpl__init_IO[468474] _ln[9365413] _fn[9365415])
      (9305320 call chpl__init_Reflection[468315] _ln[9365413] _fn[9365415])
    }
    (649713 'move' _initialCapacity[225849] 8)
    (649715 'move' _initialArrayCapacity[225854] 16)
    (9308080 '-=' refIndentLevel[9308070] 1)
    label _exit_chpl__init_List[9308084]
    (622168 return _void[46])
  }
  const-val _initialCapacity[225849]:int(64)[10] "dead at end of block" "const" "insert auto destroy" "private"
  const-val _initialArrayCapacity[225854]:int(64)[10] "dead at end of block" "const" "insert auto destroy" "private"
  function _ref(list(string,false))[1950614].init[1950142](ref arg this[1950146]:_ref(list(string,false))[1950614], const in arg _ln[9370863]:int(64)[10], in arg _fn[9370865]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (1950183 '.=' this[1950146] _size[1950567] 0)
    val init_coerce_tmp[1950672]:_ddata(_ddata(string))[1950652] "dead after last mention" "temp"
    (1954964 '=' init_coerce_tmp[1950672](1954960 'cast' _ddata(_ddata(string))[1950652] nil[32] _ln[9370863] _fn[9370865]))
    (1950261 '.=' this[1950146] _arrays[1950579] init_coerce_tmp[1950672])
    (1950271 '.=' this[1950146] _arrayCapacity[1950587] 0)
    (1950281 '.=' this[1950146] _totalCapacity[1950590] 0)
    (1950316 call _firstTimeInitializeArrays[1950796] this[1950146] _ln[9370863] _fn[9370865])
    (1950317 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585].init[1955087](ref arg this[1955091]:_ref(list(shared Module(real(32)),false))[1955585], const in arg _ln[9370963]:int(64)[10], in arg _fn[9370965]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (1955128 '.=' this[1955091] _size[1955538] 0)
    val init_coerce_tmp[1955643]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "temp"
    (1959933 '=' init_coerce_tmp[1955643](1959929 'cast' _ddata(_ddata(shared Module(real(32))))[1955623] nil[32] _ln[9370963] _fn[9370965]))
    (1955206 '.=' this[1955091] _arrays[1955550] init_coerce_tmp[1955643])
    (1955216 '.=' this[1955091] _arrayCapacity[1955558] 0)
    (1955226 '.=' this[1955091] _totalCapacity[1955561] 0)
    (1955261 call _firstTimeInitializeArrays[1955767] this[1955091] _ln[9370963] _fn[9370965])
    (1955262 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554].init[3832724](ref arg this[3832728]:_ref(list(shared Module(real(64)),false))[3405554], const in arg _ln[9418613]:int(64)[10], in arg _fn[9418615]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3832765 '.=' this[3832728] _size[3405514] 0)
    val init_coerce_tmp[3833162]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "temp"
    (3837342 '=' init_coerce_tmp[3833162](3837338 'cast' _ddata(_ddata(shared Module(real(64))))[3405623] nil[32] _ln[9418613] _fn[9418615]))
    (3832843 '.=' this[3832728] _arrays[3405526] init_coerce_tmp[3833162])
    (3832853 '.=' this[3832728] _arrayCapacity[3405534] 0)
    (3832863 '.=' this[3832728] _totalCapacity[3405537] 0)
    (3832898 call _firstTimeInitializeArrays[3833176] this[3832728] _ln[9418613] _fn[9418615])
    (3832899 return _void[46])
  }
  function _ref(list(string,false))[1950614].init[3377206](ref arg this[3377210]:_ref(list(string,false))[1950614], const in arg _ln[9403813]:int(64)[10], in arg _fn[9403815]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "@unstable" "no return value for void"
  {
    (3377253 '.=' this[3377210] _size[1950567] 0)
    val init_coerce_tmp[3377425]:_ddata(_ddata(string))[1950652] "dead after last mention" "temp"
    (3377444 '=' init_coerce_tmp[3377425](3377440 'cast' _ddata(_ddata(string))[1950652] nil[32] _ln[9403813] _fn[9403815]))
    (3377331 '.=' this[3377210] _arrays[1950579] init_coerce_tmp[3377425])
    (3377341 '.=' this[3377210] _arrayCapacity[1950587] 0)
    (3377351 '.=' this[3377210] _totalCapacity[1950590] 0)
    (3377386 call _firstTimeInitializeArrays[1950796] this[3377210] _ln[9403813] _fn[9403815])
    (3377387 return _void[46])
  }
  function _ref(list(string,false))[1950614]._firstTimeInitializeArrays[1950796](ref arg this[1950800]:_ref(list(string,false))[1950614], const in arg _ln[9483635]:int(64)[10], in arg _fn[9483637]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9284445]:int(64)[10] "temp"
    (9284446 'move' local__initialCapacity[9284445] _initialCapacity[225849])
    const-val local__initialArrayCapacity[9284438]:int(64)[10] "temp"
    (9284439 'move' local__initialArrayCapacity[9284438] _initialArrayCapacity[225854])
    val call_tmp[1950874]:_ddata(_ddata(string))[1950652] "dead after last mention" "expr temp" "maybe param" "temp"
    (1950876 'move' call_tmp[1950874](1950882 call _makeBlockArray[1951080] this[1950800] local__initialArrayCapacity[9284438] _ln[9483635] _fn[9483637]))
    (9201208 '.=' this[1950800] _arrays[1950579] call_tmp[1950874])
    (9201214 '.=' this[1950800] _arrayCapacity[1950587] local__initialArrayCapacity[9284438])
    val coerce_tmp[1954125]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1954129 'move' coerce_tmp[1954125](9201220 '.v' this[1950800] _arrays[1950579]))
    ref call_tmp[7893209]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
    (7893211 'move' call_tmp[7893209](7893213 'array_get' coerce_tmp[1954125] 0))
    val call_tmp[1950912]:_ddata(string)[1950629] "dead after last mention" "expr temp" "maybe param" "temp"
    (1950914 'move' call_tmp[1950912](1950920 call _makeArray[1954132] this[1950800] local__initialCapacity[9284445] _ln[9483635] _fn[9483637]))
    (7893373 '=' call_tmp[7893209] call_tmp[1950912])
    (9201226 '.=' this[1950800] _totalCapacity[1950590] local__initialCapacity[9284445])
    (1950939 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._firstTimeInitializeArrays[1955767](ref arg this[1955771]:_ref(list(shared Module(real(32)),false))[1955585], const in arg _ln[9483601]:int(64)[10], in arg _fn[9483603]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9284459]:int(64)[10] "temp"
    (9284460 'move' local__initialCapacity[9284459] _initialCapacity[225849])
    const-val local__initialArrayCapacity[9284452]:int(64)[10] "temp"
    (9284453 'move' local__initialArrayCapacity[9284452] _initialArrayCapacity[225854])
    val call_tmp[1955845]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "expr temp" "maybe param" "temp"
    (1955847 'move' call_tmp[1955845](1955853 call _makeBlockArray[1956049] this[1955771] local__initialArrayCapacity[9284452] _ln[9483601] _fn[9483603]))
    (9201267 '.=' this[1955771] _arrays[1955550] call_tmp[1955845])
    (9201273 '.=' this[1955771] _arrayCapacity[1955558] local__initialArrayCapacity[9284452])
    val coerce_tmp[1959094]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1959098 'move' coerce_tmp[1959094](9201279 '.v' this[1955771] _arrays[1955550]))
    ref call_tmp[7894212]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
    (7894214 'move' call_tmp[7894212](7894216 'array_get' coerce_tmp[1959094] 0))
    val call_tmp[1955883]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "expr temp" "maybe param" "temp"
    (1955885 'move' call_tmp[1955883](1955891 call _makeArray[1959101] this[1955771] local__initialCapacity[9284459] _ln[9483601] _fn[9483603]))
    (7894376 '=' call_tmp[7894212] call_tmp[1955883])
    (9201285 '.=' this[1955771] _totalCapacity[1955561] local__initialCapacity[9284459])
    (1955910 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._firstTimeInitializeArrays[3833176](ref arg this[3833180]:_ref(list(shared Module(real(64)),false))[3405554], const in arg _ln[9472055]:int(64)[10], in arg _fn[9472057]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9286462]:int(64)[10] "temp"
    (9286463 'move' local__initialCapacity[9286462] _initialCapacity[225849])
    const-val local__initialArrayCapacity[9286455]:int(64)[10] "temp"
    (9286456 'move' local__initialArrayCapacity[9286455] _initialArrayCapacity[225854])
    val call_tmp[3833254]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "expr temp" "maybe param" "temp"
    (3833256 'move' call_tmp[3833254](3833262 call _makeBlockArray[3833458] this[3833180] local__initialArrayCapacity[9286455] _ln[9472055] _fn[9472057]))
    (9231242 '.=' this[3833180] _arrays[3405526] call_tmp[3833254])
    (9231248 '.=' this[3833180] _arrayCapacity[3405534] local__initialArrayCapacity[9286455])
    val coerce_tmp[3836503]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3836507 'move' coerce_tmp[3836503](9231254 '.v' this[3833180] _arrays[3405526]))
    ref call_tmp[8574620]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
    (8574622 'move' call_tmp[8574620](8574624 'array_get' coerce_tmp[3836503] 0))
    val call_tmp[3833292]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "expr temp" "maybe param" "temp"
    (3833294 'move' call_tmp[3833292](3833300 call _makeArray[3836510] this[3833180] local__initialCapacity[9286462] _ln[9472055] _fn[9472057]))
    (8574784 '=' call_tmp[8574620] call_tmp[3833292])
    (9231260 '.=' this[3833180] _totalCapacity[3405537] local__initialCapacity[9286462])
    (3833319 return _void[46])
  }
  function _ref(list(string,false))[1950614]._makeBlockArray[1951080](const  ref arg this[1951084]:_ref(list(string,false))[1950614], const in arg size[1951086]:int(64)[10], const in arg _ln[9370869]:int(64)[10], in arg _fn[9370871]:int(32)[66]) : _ddata(_ddata(string))[1950652] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val callPostAlloc[7892972]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[7892976]:_ddata(_ddata(string))[1950652] "dead after last mention" "maybe param" "temp"
    val _formal_tmp_out_callPostAlloc[7892978]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (7892980 'move' call_tmp[7892976](7892983 call _ddata_allocate_noinit[1951320] size[1951086] _formal_tmp_out_callPostAlloc[7892978] c_sublocid_none[135197] 1 _ln[9370869] _fn[9370871]))
    (7892988 'move' callPostAlloc[7892972] _formal_tmp_out_callPostAlloc[7892978])
    (7892995 call init_elts[1951925] call_tmp[7892976] size[1951086] 0 _ln[9370869] _fn[9370871])
    if callPostAlloc[7892972]
    {
      (7893029 call chpl_mem_array_postAlloc[1953947](7893005 'cast' c_ptr(void)[1465614] call_tmp[7892976] _ln[9370869] _fn[9370871])(7893012 'cast' uint(64)[86] size[1951086] _ln[9370869] _fn[9370871])(7893025 'cast' uint(64)[86](7893019 'sizeof_ddata_element' _ddata(_ddata(string))[1950652]) _ln[9370869] _fn[9370871]) _ln[9370869] _fn[9370871])
    }
    (1951123 return call_tmp[7892976])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._makeBlockArray[1956049](const  ref arg this[1956053]:_ref(list(shared Module(real(32)),false))[1955585], const in arg size[1956055]:int(64)[10], const in arg _ln[9370969]:int(64)[10], in arg _fn[9370971]:int(32)[66]) : _ddata(_ddata(shared Module(real(32))))[1955623] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val callPostAlloc[7893975]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[7893979]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "maybe param" "temp"
    val _formal_tmp_out_callPostAlloc[7893981]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (7893983 'move' call_tmp[7893979](7893986 call _ddata_allocate_noinit[1956289] size[1956055] _formal_tmp_out_callPostAlloc[7893981] c_sublocid_none[135197] 1 _ln[9370969] _fn[9370971]))
    (7893991 'move' callPostAlloc[7893975] _formal_tmp_out_callPostAlloc[7893981])
    (7893998 call init_elts[1956894] call_tmp[7893979] size[1956055] 0 _ln[9370969] _fn[9370971])
    if callPostAlloc[7893975]
    {
      (7894032 call chpl_mem_array_postAlloc[1958916](7894008 'cast' c_ptr(void)[1465614] call_tmp[7893979] _ln[9370969] _fn[9370971])(7894015 'cast' uint(64)[86] size[1956055] _ln[9370969] _fn[9370971])(7894028 'cast' uint(64)[86](7894022 'sizeof_ddata_element' _ddata(_ddata(shared Module(real(32))))[1955623]) _ln[9370969] _fn[9370971]) _ln[9370969] _fn[9370971])
    }
    (1956092 return call_tmp[7893979])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._makeBlockArray[3833458](const  ref arg this[3833462]:_ref(list(shared Module(real(64)),false))[3405554], const in arg size[3833464]:int(64)[10], const in arg _ln[9418619]:int(64)[10], in arg _fn[9418621]:int(32)[66]) : _ddata(_ddata(shared Module(real(64))))[3405623] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val callPostAlloc[8574383]:bool[19] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[8574387]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "maybe param" "temp"
    val _formal_tmp_out_callPostAlloc[8574389]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (8574391 'move' call_tmp[8574387](8574394 call _ddata_allocate_noinit[3833698] size[3833464] _formal_tmp_out_callPostAlloc[8574389] c_sublocid_none[135197] 1 _ln[9418619] _fn[9418621]))
    (8574399 'move' callPostAlloc[8574383] _formal_tmp_out_callPostAlloc[8574389])
    (8574406 call init_elts[3834303] call_tmp[8574387] size[3833464] 0 _ln[9418619] _fn[9418621])
    if callPostAlloc[8574383]
    {
      (8574440 call chpl_mem_array_postAlloc[3836325](8574416 'cast' c_ptr(void)[1465614] call_tmp[8574387] _ln[9418619] _fn[9418621])(8574423 'cast' uint(64)[86] size[3833464] _ln[9418619] _fn[9418621])(8574436 'cast' uint(64)[86](8574430 'sizeof_ddata_element' _ddata(_ddata(shared Module(real(64))))[3405623]) _ln[9418619] _fn[9418621]) _ln[9418619] _fn[9418621])
    }
    (3833501 return call_tmp[8574387])
  }
  function _ref(list(string,false))[1950614]._freeBlockArray[3254503](const  ref arg this[3254507]:_ref(list(string,false))[1950614], const in arg data[3254528]:_ddata(_ddata(string))[1950652], const in arg size[3254530]:int(64)[10], const in arg _ln[9401887]:int(64)[10], in arg _fn[9401889]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[8403859]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
    (8403861 'move' call_tmp[8403859](8403863 '_wide_get_locale' data[3254528]))
    const-val call_tmp[8403865]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (8403867 'move' call_tmp[8403865](8403870 call chpl_sublocFromLocaleID[306549] call_tmp[8403859] _ln[9401887] _fn[9401889]))
    (8403900 call chpl_mem_array_free[3254604](8403876 'cast' c_ptr(void)[1465614] data[3254528] _ln[9401887] _fn[9401889])(8403883 'cast' uint(64)[86] size[3254530] _ln[9401887] _fn[9401889])(8403896 'cast' uint(64)[86](8403890 'sizeof_ddata_element' _ddata(_ddata(string))[1950652]) _ln[9401887] _fn[9401889]) call_tmp[8403865] _ln[9401887] _fn[9401889])
    (3254558 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._freeBlockArray[3409910](const  ref arg this[3409914]:_ref(list(shared Module(real(32)),false))[1955585], const in arg data[3409935]:_ddata(_ddata(shared Module(real(32))))[1955623], const in arg size[3409937]:int(64)[10], const in arg _ln[9404533]:int(64)[10], in arg _fn[9404535]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[8465576]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
    (8465578 'move' call_tmp[8465576](8465580 '_wide_get_locale' data[3409935]))
    const-val call_tmp[8465582]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (8465584 'move' call_tmp[8465582](8465587 call chpl_sublocFromLocaleID[306549] call_tmp[8465576] _ln[9404533] _fn[9404535]))
    (8465617 call chpl_mem_array_free[3410011](8465593 'cast' c_ptr(void)[1465614] data[3409935] _ln[9404533] _fn[9404535])(8465600 'cast' uint(64)[86] size[3409937] _ln[9404533] _fn[9404535])(8465613 'cast' uint(64)[86](8465607 'sizeof_ddata_element' _ddata(_ddata(shared Module(real(32))))[1955623]) _ln[9404533] _fn[9404535]) call_tmp[8465582] _ln[9404533] _fn[9404535])
    (3409965 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._freeBlockArray[3866221](const  ref arg this[3866225]:_ref(list(shared Module(real(64)),false))[3405554], const in arg data[3866246]:_ddata(_ddata(shared Module(real(64))))[3405623], const in arg size[3866248]:int(64)[10], const in arg _ln[9419103]:int(64)[10], in arg _fn[9419105]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[8579012]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
    (8579014 'move' call_tmp[8579012](8579016 '_wide_get_locale' data[3866246]))
    const-val call_tmp[8579018]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (8579020 'move' call_tmp[8579018](8579023 call chpl_sublocFromLocaleID[306549] call_tmp[8579012] _ln[9419103] _fn[9419105]))
    (8579053 call chpl_mem_array_free[3866322](8579029 'cast' c_ptr(void)[1465614] data[3866246] _ln[9419103] _fn[9419105])(8579036 'cast' uint(64)[86] size[3866248] _ln[9419103] _fn[9419105])(8579049 'cast' uint(64)[86](8579043 'sizeof_ddata_element' _ddata(_ddata(shared Module(real(64))))[3405623]) _ln[9419103] _fn[9419105]) call_tmp[8579018] _ln[9419103] _fn[9419105])
    (3866276 return _void[46])
  }
  function _ref(list(string,false))[1950614]._makeArray[1954132](const  ref arg this[1954136]:_ref(list(string,false))[1950614], const in arg size[1954138]:int(64)[10], const in arg _ln[9370935]:int(64)[10], in arg _fn[9370937]:int(32)[66]) : _ddata(string)[1950629] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val callPostAlloc[1954148]:bool[19] "dead at end of block" "insert auto destroy"
    (1954150 'move' callPostAlloc[1954148] 0)
    val call_tmp[1954162]:_ddata(string)[1950629] "dead after last mention" "maybe param" "temp"
    val _formal_tmp_out_callPostAlloc[1954389]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (1954164 'move' call_tmp[1954162](1954167 call _ddata_allocate_noinit[1954209] size[1954138] _formal_tmp_out_callPostAlloc[1954389] c_sublocid_none[135197] 1 _ln[9370935] _fn[9370937]))
    (7392466 '=' callPostAlloc[1954148] _formal_tmp_out_callPostAlloc[1954389])
    if callPostAlloc[1954148]
    {
      (7893445 call chpl_mem_array_postAlloc[1954851](7893421 'cast' c_ptr(void)[1465614] call_tmp[1954162] _ln[9370935] _fn[9370937])(7893428 'cast' uint(64)[86] size[1954138] _ln[9370935] _fn[9370937])(7893441 'cast' uint(64)[86](7893435 'sizeof_ddata_element' _ddata(string)[1950629]) _ln[9370935] _fn[9370937]) _ln[9370935] _fn[9370937])
    }
    (1954204 return call_tmp[1954162])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._makeArray[1959101](const  ref arg this[1959105]:_ref(list(shared Module(real(32)),false))[1955585], const in arg size[1959107]:int(64)[10], const in arg _ln[9371035]:int(64)[10], in arg _fn[9371037]:int(32)[66]) : _ddata(shared Module(real(32)))[1955600] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val callPostAlloc[1959117]:bool[19] "dead at end of block" "insert auto destroy"
    (1959119 'move' callPostAlloc[1959117] 0)
    val call_tmp[1959131]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "maybe param" "temp"
    val _formal_tmp_out_callPostAlloc[1959358]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (1959133 'move' call_tmp[1959131](1959136 call _ddata_allocate_noinit[1959178] size[1959107] _formal_tmp_out_callPostAlloc[1959358] c_sublocid_none[135197] 1 _ln[9371035] _fn[9371037]))
    (7392478 '=' callPostAlloc[1959117] _formal_tmp_out_callPostAlloc[1959358])
    if callPostAlloc[1959117]
    {
      (7894448 call chpl_mem_array_postAlloc[1959820](7894424 'cast' c_ptr(void)[1465614] call_tmp[1959131] _ln[9371035] _fn[9371037])(7894431 'cast' uint(64)[86] size[1959107] _ln[9371035] _fn[9371037])(7894444 'cast' uint(64)[86](7894438 'sizeof_ddata_element' _ddata(shared Module(real(32)))[1955600]) _ln[9371035] _fn[9371037]) _ln[9371035] _fn[9371037])
    }
    (1959173 return call_tmp[1959131])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._makeArray[3836510](const  ref arg this[3836514]:_ref(list(shared Module(real(64)),false))[3405554], const in arg size[3836516]:int(64)[10], const in arg _ln[9418685]:int(64)[10], in arg _fn[9418687]:int(32)[66]) : _ddata(shared Module(real(64)))[3405600] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val callPostAlloc[3836526]:bool[19] "dead at end of block" "insert auto destroy"
    (3836528 'move' callPostAlloc[3836526] 0)
    val call_tmp[3836540]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "maybe param" "temp"
    val _formal_tmp_out_callPostAlloc[3836767]:bool[19] "dead after last mention" "expr temp" "formal temp out callsite" "insert auto destroy" "suppress lvalue error" "temp"
    (3836542 'move' call_tmp[3836540](3836545 call _ddata_allocate_noinit[3836587] size[3836516] _formal_tmp_out_callPostAlloc[3836767] c_sublocid_none[135197] 1 _ln[9418685] _fn[9418687]))
    (7394354 '=' callPostAlloc[3836526] _formal_tmp_out_callPostAlloc[3836767])
    if callPostAlloc[3836526]
    {
      (8574856 call chpl_mem_array_postAlloc[3837229](8574832 'cast' c_ptr(void)[1465614] call_tmp[3836540] _ln[9418685] _fn[9418687])(8574839 'cast' uint(64)[86] size[3836516] _ln[9418685] _fn[9418687])(8574852 'cast' uint(64)[86](8574846 'sizeof_ddata_element' _ddata(shared Module(real(64)))[3405600]) _ln[9418685] _fn[9418687]) _ln[9418685] _fn[9418687])
    }
    (3836582 return call_tmp[3836540])
  }
  function _ref(list(string,false))[1950614]._freeArray[3378212](const  ref arg this[3378216]:_ref(list(string,false))[1950614], const in arg data[3378230]:_ddata(string)[1950629], const in arg size[3378232]:int(64)[10], const in arg _ln[9403859]:int(64)[10], in arg _fn[9403861]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[8461862]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
    (8461864 'move' call_tmp[8461862](8461866 '_wide_get_locale' data[3378230]))
    const-val call_tmp[8461868]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (8461870 'move' call_tmp[8461868](8461873 call chpl_sublocFromLocaleID[306549] call_tmp[8461862] _ln[9403859] _fn[9403861]))
    (8461903 call chpl_mem_array_free[3378292](8461879 'cast' c_ptr(void)[1465614] data[3378230] _ln[9403859] _fn[9403861])(8461886 'cast' uint(64)[86] size[3378232] _ln[9403859] _fn[9403861])(8461899 'cast' uint(64)[86](8461893 'sizeof_ddata_element' _ddata(string)[1950629]) _ln[9403859] _fn[9403861]) call_tmp[8461868] _ln[9403859] _fn[9403861])
    (3378252 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._freeArray[4038955](const  ref arg this[4038959]:_ref(list(shared Module(real(32)),false))[1955585], const in arg data[4038973]:_ddata(shared Module(real(32)))[1955600], const in arg size[4038975]:int(64)[10], const in arg _ln[9420119]:int(64)[10], in arg _fn[9420121]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[8599638]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
    (8599640 'move' call_tmp[8599638](8599642 '_wide_get_locale' data[4038973]))
    const-val call_tmp[8599644]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (8599646 'move' call_tmp[8599644](8599649 call chpl_sublocFromLocaleID[306549] call_tmp[8599638] _ln[9420119] _fn[9420121]))
    (8599679 call chpl_mem_array_free[4039035](8599655 'cast' c_ptr(void)[1465614] data[4038973] _ln[9420119] _fn[9420121])(8599662 'cast' uint(64)[86] size[4038975] _ln[9420119] _fn[9420121])(8599675 'cast' uint(64)[86](8599669 'sizeof_ddata_element' _ddata(shared Module(real(32)))[1955600]) _ln[9420119] _fn[9420121]) call_tmp[8599644] _ln[9420119] _fn[9420121])
    (4038995 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._freeArray[4245506](const  ref arg this[4245510]:_ref(list(shared Module(real(64)),false))[3405554], const in arg data[4245524]:_ddata(shared Module(real(64)))[3405600], const in arg size[4245526]:int(64)[10], const in arg _ln[9423245]:int(64)[10], in arg _fn[9423247]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[8623684]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
    (8623686 'move' call_tmp[8623684](8623688 '_wide_get_locale' data[4245524]))
    const-val call_tmp[8623690]:int(32)[66] "dead at end of block" "maybe param" "temp"
    (8623692 'move' call_tmp[8623690](8623695 call chpl_sublocFromLocaleID[306549] call_tmp[8623684] _ln[9423245] _fn[9423247]))
    (8623725 call chpl_mem_array_free[4245586](8623701 'cast' c_ptr(void)[1465614] data[4245524] _ln[9423245] _fn[9423247])(8623708 'cast' uint(64)[86] size[4245526] _ln[9423245] _fn[9423247])(8623721 'cast' uint(64)[86](8623715 'sizeof_ddata_element' _ddata(shared Module(real(64)))[3405600]) _ln[9423245] _fn[9423247]) call_tmp[8623690] _ln[9423245] _fn[9423247])
    (4245546 return _void[46])
  }
  function _ref(list(string,false))[1950614]._maybeAcquireMem[3253651](ref arg this[3253655]:_ref(list(string,false))[1950614], const in arg amount[3253657]:int(64)[10], const in arg _ln[9401863]:int(64)[10], in arg _fn[9401865]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9285592]:int(64)[10] "temp"
    (9285593 'move' local__initialCapacity[9285592] _initialCapacity[225849])
    const-val call_tmp[7378000]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7378002 'move' call_tmp[7378000](7378004 '-'(9217767 '.v' this[3253655] _totalCapacity[1950590])(9217773 '.v' this[3253655] _size[1950567])))
    if(7379246 '>=' call_tmp[7378000] amount[3253657])
    {
      gotoReturn _end__maybeAcquireMem[3254194] _end__maybeAcquireMem[3254194]
    }
    val lastArrayIdx[3253726]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3253728]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7380998 '=='(9217779 '.v' this[3253655] _size[1950567]) 0)
    {
      (3253755 'move' tmp[3253728] 0)
    }
    {
      const-val call_tmp[8403619]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403621 'move' call_tmp[8403619](8403623 '+'(9531941 'cast' int(64)[10](8403616 '-'(8403609 '.v' this[3253655] _size[1950567]) 1)) local__initialCapacity[9285592]))
      if(8403642 '<' call_tmp[8403619] 1)
      {
        (8403648 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9401863] _fn[9401865])
      }
      const-val call_tmp[8403663]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403665 'move' call_tmp[8403663](8403668 call chpl_bitops_clz_64[1942612](8403660 'cast' uint(64)[86] call_tmp[8403619] _ln[9401863] _fn[9401865])))
      const-val call_tmp[8403677]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403679 'move' call_tmp[8403677](8403681 '-' 63(8403674 'cast' int(64)[10] call_tmp[8403663] _ln[9401863] _fn[9401865])))
      if(8403691 '==' 1 0)
      {
        (8403697 call halt[88131] "Attempt to divide by zero" _ln[9401863] _fn[9401865])
      }
      const-val call_tmp[8403700]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403702 'move' call_tmp[8403700](8403704 '/' call_tmp[8403677] 1))
      if(8403719 '<' local__initialCapacity[9285592] 1)
      {
        (8403725 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9401863] _fn[9401865])
      }
      const-val call_tmp[8403740]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403742 'move' call_tmp[8403740](8403745 call chpl_bitops_clz_64[1942612](8403737 'cast' uint(64)[86] local__initialCapacity[9285592] _ln[9401863] _fn[9401865])))
      const-val call_tmp[8403754]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403756 'move' call_tmp[8403754](8403758 '-' 63(8403751 'cast' int(64)[10] call_tmp[8403740] _ln[9401863] _fn[9401865])))
      if(8403768 '==' 1 0)
      {
        (8403774 call halt[88131] "Attempt to divide by zero" _ln[9401863] _fn[9401865])
      }
      const-val call_tmp[8403777]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403779 'move' call_tmp[8403777](8403781 '/' call_tmp[8403754] 1))
      (3253770 'move' tmp[3253728](9531929 'cast' int(64)[10](8403788 '-' call_tmp[8403700] call_tmp[8403777])))
    }
    (3253776 'move' lastArrayIdx[3253726] tmp[3253728])
    const-val call_tmp[7378020]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7378022 'move' call_tmp[7378020](7378024 '-' amount[3253657] call_tmp[7378000]))
    val req[3253788]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3253790 'move' req[3253788] call_tmp[7378020])
    val tmp[3253796]:bool[19] "dead after last mention" "temp"
    (3253806 'move' tmp[3253796](7316657 '>' call_tmp[7378020] 0))
    WhileDo[3253811] hazard
    {
      if(7379256 '>=' lastArrayIdx[3253726](9531937 'cast' int(64)[10](7445662 '-'(9217785 '.v' this[3253655] _arrayCapacity[1950587]) 1)))
      {
        val _narrays[3253890]:_ddata(_ddata(string))[1950652] "dead at end of block" "insert auto destroy"
        (3253892 'move' _narrays[3253890](3253888 call _makeBlockArray[1951080] this[3253655](9531931 'cast' int(64)[10](8403803 '*'(9217791 '.v' this[3253655] _arrayCapacity[1950587]) 2)) _ln[9401863] _fn[9401865]))
        const-val coerce_tmp[3254466]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (3254470 'move' coerce_tmp[3254466](9217797 '.v' this[3253655] _arrayCapacity[1950587]))
        if(7321212 '<' coerce_tmp[3254466] 0)
        {
          (6051653 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9401863] _fn[9401865])
        }
        val tmp[6051670]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(7389433 '==' coerce_tmp[3254466] 0)
        {
          (6051731 'move' tmp[6051670](7444152 'cast' int(64)[10](9531939 'cast' uint(64)[86](7442982 '-'(6051707 'cast' uint(64)[86] 0 _ln[9401863] _fn[9401865]) 1)) _ln[9401863] _fn[9401865]))
        }
        {
          (6051785 'move' tmp[6051670](9531933 'cast' int(64)[10](7374229 '+' 0(9531935 'cast' int(64)[10](7446902 '-' coerce_tmp[3254466] 1)))))
        }
        const-val _ic__F1_high[9017374]:int(64)[10] "temp"
        (7454222 'move' _ic__F1_high[9017374] tmp[6051670])
        val i[6381742]:int(64)[10] "dead at end of block" "insert auto destroy"
        (6381746 'move' i[6381742] 0)
        (6381778 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6051670] 1 0 tmp[6051670] 1 _ln[9401863] _fn[9401865])
        CForLoop[6381785]
        {
          ref call_tmp[7893249]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
          (7893251 'move' call_tmp[7893249](7893253 'array_get' _narrays[3253890] i[6381742]))
          val coerce_tmp[6381873]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (6381875 'move' coerce_tmp[6381873](9217803 '.v' this[3253655] _arrays[1950579]))
          ref call_tmp[7893259]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
          (7893261 'move' call_tmp[7893259](7893263 'array_get' coerce_tmp[6381873] i[6381742]))
          (7893385 '=' call_tmp[7893249](6381889 'deref' call_tmp[7893259]))
          {
            (6381787 '=' i[6381742] 0)
          }
          {
            (6381791 '<=' i[6381742] _ic__F1_high[9017374])
          }
          {
            (6381799 '+=' i[6381742] 1)
          }
        }
        (3253992 call _freeBlockArray[3254503] this[3253655](9217809 '.v' this[3253655] _arrays[1950579])(9217815 '.v' this[3253655] _arrayCapacity[1950587]) _ln[9401863] _fn[9401865])
        (9217821 '.=' this[3253655] _arrays[1950579] _narrays[3253890])
        ref call_tmp[7893163]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (7893165 'move' call_tmp[7893163](7893167 '.' this[3253655] _arrayCapacity[1950587]))
        (7517968 '*=' call_tmp[7893163] 2)
      }
      (3254052 'noop')
      if(8411047 '<' local__initialCapacity[9285592] 1)
      {
        (8411053 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9401863] _fn[9401865])
      }
      const-val call_tmp[8411068]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8411070 'move' call_tmp[8411068](8411073 call chpl_bitops_clz_64[1942612](8411065 'cast' uint(64)[86] local__initialCapacity[9285592] _ln[9401863] _fn[9401865])))
      const-val call_tmp[8411082]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8411084 'move' call_tmp[8411082](8411086 '-' 63(8411079 'cast' int(64)[10] call_tmp[8411068] _ln[9401863] _fn[9401865])))
      if(8411096 '==' 1 0)
      {
        (8411102 call halt[88131] "Attempt to divide by zero" _ln[9401863] _fn[9401865])
      }
      const-val call_tmp[8411105]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8411107 'move' call_tmp[8411105](8411109 '/' call_tmp[8411082] 1))
      const-val call_tmp[8411112]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8411114 'move' call_tmp[8411112](8411116 '+' lastArrayIdx[3253726] call_tmp[8411105]))
      const-val exp[8411119]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (8411121 'move' exp[8411119] call_tmp[8411112])
      val ret[8411124]:int(64)[10] "dead after last mention" "RVV" "temp"
      if(8411130 '==' call_tmp[8411112] 0)
      {
        (8411135 'move' ret[8411124] 1)
        gotoReturn _end__expBaseHelp[8412122] _end__expBaseHelp[8412122]
      }
      if(8411145 '<' call_tmp[8411112] 0)
      {
        (8411150 'move' ret[8411124] 0)
        gotoReturn _end__expBaseHelp[8412122] _end__expBaseHelp[8412122]
      }
      val c[8411156]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8411158 'move' c[8411156] 0)
      val x[8411161]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8411163 'move' x[8411161] 2)
      val tmp[8411166]:bool[19] "dead after last mention" "temp"
      (8411175 'move' tmp[8411166](8411172 '>' 2 1))
      const-val tmp[8411194]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8411196 'move' tmp[8411194](8411198 '<' 1 0))
      WhileDo[8411178]
      {
        ref i_lhs[8411180]:_ref(int(64))[1465689] "temp"
        (8411182 'move' i_lhs[8411180](8411184 'set reference' c[8411156]))
        (8411186 '+=' i_lhs[8411180] 1)
        if tmp[8411194]
        {
          const-val call_tmp[8411203]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411205]:string[244] "temp"
          (8411208 call :[1496816] x[8411161] ret_tmp[8411205] _ln[9401863] _fn[9401865])
          (8411211 'move' call_tmp[8411203] ret_tmp[8411205])
          const-val call_tmp[8411214]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411216]:string[244] "temp"
          (8411219 call +[28065] "Cannot bitshift " call_tmp[8411203] ret_tmp[8411216] _ln[9401863] _fn[9401865])
          (8411223 'move' call_tmp[8411214] ret_tmp[8411216])
          const-val call_tmp[8411226]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411228]:string[244] "temp"
          (8411231 call +[28065] call_tmp[8411214] " by " ret_tmp[8411228] _ln[9401863] _fn[9401865])
          (8411235 'move' call_tmp[8411226] ret_tmp[8411228])
          const-val call_tmp[8411238]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411240]:string[244] "temp"
          (8411243 call :[1496816] 1 ret_tmp[8411240] _ln[9401863] _fn[9401865])
          (8411246 'move' call_tmp[8411238] ret_tmp[8411240])
          const-val call_tmp[8411249]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411251]:string[244] "temp"
          (8411254 call +[28065] call_tmp[8411226] call_tmp[8411238] ret_tmp[8411251] _ln[9401863] _fn[9401865])
          (8411258 'move' call_tmp[8411249] ret_tmp[8411251])
          const-val call_tmp[8411261]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411263]:string[244] "temp"
          (8411266 call +[28065] call_tmp[8411249] " because " ret_tmp[8411263] _ln[9401863] _fn[9401865])
          (8411270 'move' call_tmp[8411261] ret_tmp[8411263])
          const-val call_tmp[8411273]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411275]:string[244] "temp"
          (8411278 call :[1496816] 1 ret_tmp[8411275] _ln[9401863] _fn[9401865])
          (8411281 'move' call_tmp[8411273] ret_tmp[8411275])
          const-val call_tmp[8411284]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411286]:string[244] "temp"
          (8411289 call +[28065] call_tmp[8411261] call_tmp[8411273] ret_tmp[8411286] _ln[9401863] _fn[9401865])
          (8411293 'move' call_tmp[8411284] ret_tmp[8411286])
          const-val ret_tmp[8411298]:string[244] "temp"
          (8411301 call +[28065] call_tmp[8411284] " is less than 0" ret_tmp[8411298] _ln[9401863] _fn[9401865])
          const-val msg[8411308]:string[244] "dead at end of block" "insert auto destroy"
          (8411310 'move' msg[8411308] ret_tmp[8411298])
          ref i_x[8411313]:_ref(string)[1466327] "temp"
          (8411315 'move' i_x[8411313](8411317 'set reference' call_tmp[8411284]))
          (8411320 call deinit[21354] i_x[8411313] _ln[9401863] _fn[9401865])
          ref i_x[8411322]:_ref(string)[1466327] "temp"
          (8411324 'move' i_x[8411322](8411326 'set reference' call_tmp[8411273]))
          (8411329 call deinit[21354] i_x[8411322] _ln[9401863] _fn[9401865])
          ref i_x[8411331]:_ref(string)[1466327] "temp"
          (8411333 'move' i_x[8411331](8411335 'set reference' call_tmp[8411261]))
          (8411338 call deinit[21354] i_x[8411331] _ln[9401863] _fn[9401865])
          ref i_x[8411340]:_ref(string)[1466327] "temp"
          (8411342 'move' i_x[8411340](8411344 'set reference' call_tmp[8411249]))
          (8411347 call deinit[21354] i_x[8411340] _ln[9401863] _fn[9401865])
          ref i_x[8411349]:_ref(string)[1466327] "temp"
          (8411351 'move' i_x[8411349](8411353 'set reference' call_tmp[8411238]))
          (8411356 call deinit[21354] i_x[8411349] _ln[9401863] _fn[9401865])
          ref i_x[8411358]:_ref(string)[1466327] "temp"
          (8411360 'move' i_x[8411358](8411362 'set reference' call_tmp[8411226]))
          (8411365 call deinit[21354] i_x[8411358] _ln[9401863] _fn[9401865])
          ref i_x[8411367]:_ref(string)[1466327] "temp"
          (8411369 'move' i_x[8411367](8411371 'set reference' call_tmp[8411214]))
          (8411374 call deinit[21354] i_x[8411367] _ln[9401863] _fn[9401865])
          ref i_x[8411376]:_ref(string)[1466327] "temp"
          (8411378 'move' i_x[8411376](8411380 'set reference' call_tmp[8411203]))
          (8411383 call deinit[21354] i_x[8411376] _ln[9401863] _fn[9401865])
          (8411386 call boundsCheckHalt[404] msg[8411308] _ln[9401863] _fn[9401865])
          ref i_x[8411388]:_ref(string)[1466327] "temp"
          (8411390 'move' i_x[8411388](8411392 'set reference' msg[8411308]))
          (8411395 call deinit[21354] i_x[8411388] _ln[9401863] _fn[9401865])
        }
        {
          if(8411402 '>=' 1 64)
          {
            const-val call_tmp[8411407]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411409]:string[244] "temp"
            (8411412 call :[1496816] x[8411161] ret_tmp[8411409] _ln[9401863] _fn[9401865])
            (8411415 'move' call_tmp[8411407] ret_tmp[8411409])
            const-val call_tmp[8411418]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411420]:string[244] "temp"
            (8411423 call +[28065] "Cannot bitshift " call_tmp[8411407] ret_tmp[8411420] _ln[9401863] _fn[9401865])
            (8411427 'move' call_tmp[8411418] ret_tmp[8411420])
            const-val call_tmp[8411430]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411432]:string[244] "temp"
            (8411435 call +[28065] call_tmp[8411418] " by " ret_tmp[8411432] _ln[9401863] _fn[9401865])
            (8411439 'move' call_tmp[8411430] ret_tmp[8411432])
            const-val call_tmp[8411442]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411444]:string[244] "temp"
            (8411447 call :[1496816] 1 ret_tmp[8411444] _ln[9401863] _fn[9401865])
            (8411450 'move' call_tmp[8411442] ret_tmp[8411444])
            const-val call_tmp[8411453]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411455]:string[244] "temp"
            (8411458 call +[28065] call_tmp[8411430] call_tmp[8411442] ret_tmp[8411455] _ln[9401863] _fn[9401865])
            (8411462 'move' call_tmp[8411453] ret_tmp[8411455])
            const-val call_tmp[8411465]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411467]:string[244] "temp"
            (8411470 call +[28065] call_tmp[8411453] " because " ret_tmp[8411467] _ln[9401863] _fn[9401865])
            (8411474 'move' call_tmp[8411465] ret_tmp[8411467])
            const-val call_tmp[8411477]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411479]:string[244] "temp"
            (8411482 call :[1496816] 1 ret_tmp[8411479] _ln[9401863] _fn[9401865])
            (8411485 'move' call_tmp[8411477] ret_tmp[8411479])
            const-val call_tmp[8411488]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411490]:string[244] "temp"
            (8411493 call +[28065] call_tmp[8411465] call_tmp[8411477] ret_tmp[8411490] _ln[9401863] _fn[9401865])
            (8411497 'move' call_tmp[8411488] ret_tmp[8411490])
            const-val call_tmp[8411500]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8411502]:string[244] "temp"
            (8411505 call +[28065] call_tmp[8411488] " is >= the bitwidth of " ret_tmp[8411502] _ln[9401863] _fn[9401865])
            (8411509 'move' call_tmp[8411500] ret_tmp[8411502])
            const-val ret_tmp[8411514]:string[244] "temp"
            (8411517 call +[28065] call_tmp[8411500] "int(64)" ret_tmp[8411514] _ln[9401863] _fn[9401865])
            const-val msg[8411524]:string[244] "dead at end of block" "insert auto destroy"
            (8411526 'move' msg[8411524] ret_tmp[8411514])
            ref i_x[8411529]:_ref(string)[1466327] "temp"
            (8411531 'move' i_x[8411529](8411533 'set reference' call_tmp[8411500]))
            (8411536 call deinit[21354] i_x[8411529] _ln[9401863] _fn[9401865])
            ref i_x[8411538]:_ref(string)[1466327] "temp"
            (8411540 'move' i_x[8411538](8411542 'set reference' call_tmp[8411488]))
            (8411545 call deinit[21354] i_x[8411538] _ln[9401863] _fn[9401865])
            ref i_x[8411547]:_ref(string)[1466327] "temp"
            (8411549 'move' i_x[8411547](8411551 'set reference' call_tmp[8411477]))
            (8411554 call deinit[21354] i_x[8411547] _ln[9401863] _fn[9401865])
            ref i_x[8411556]:_ref(string)[1466327] "temp"
            (8411558 'move' i_x[8411556](8411560 'set reference' call_tmp[8411465]))
            (8411563 call deinit[21354] i_x[8411556] _ln[9401863] _fn[9401865])
            ref i_x[8411565]:_ref(string)[1466327] "temp"
            (8411567 'move' i_x[8411565](8411569 'set reference' call_tmp[8411453]))
            (8411572 call deinit[21354] i_x[8411565] _ln[9401863] _fn[9401865])
            ref i_x[8411574]:_ref(string)[1466327] "temp"
            (8411576 'move' i_x[8411574](8411578 'set reference' call_tmp[8411442]))
            (8411581 call deinit[21354] i_x[8411574] _ln[9401863] _fn[9401865])
            ref i_x[8411583]:_ref(string)[1466327] "temp"
            (8411585 'move' i_x[8411583](8411587 'set reference' call_tmp[8411430]))
            (8411590 call deinit[21354] i_x[8411583] _ln[9401863] _fn[9401865])
            ref i_x[8411592]:_ref(string)[1466327] "temp"
            (8411594 'move' i_x[8411592](8411596 'set reference' call_tmp[8411418]))
            (8411599 call deinit[21354] i_x[8411592] _ln[9401863] _fn[9401865])
            ref i_x[8411601]:_ref(string)[1466327] "temp"
            (8411603 'move' i_x[8411601](8411605 'set reference' call_tmp[8411407]))
            (8411608 call deinit[21354] i_x[8411601] _ln[9401863] _fn[9401865])
            (8411611 call boundsCheckHalt[404] msg[8411524] _ln[9401863] _fn[9401865])
            ref i_x[8411613]:_ref(string)[1466327] "temp"
            (8411615 'move' i_x[8411613](8411617 'set reference' msg[8411524]))
            (8411620 call deinit[21354] i_x[8411613] _ln[9401863] _fn[9401865])
          }
        }
        const-val call_tmp[8411624]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8411626 'move' call_tmp[8411624](8411628 '>>' x[8411161] 1))
        (8411631 '=' x[8411161] call_tmp[8411624])
        (8411641 'move' tmp[8411166](8411638 '>' call_tmp[8411624] 1))
        tmp[8411166]
      }
      const-val call_tmp[8411651]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8411653 'move' call_tmp[8411651](8411655 '*' c[8411156](9531943 'cast' int(64)[10](8411648 '-' exp[8411119] 1))))
      if(8411672 '<' call_tmp[8411651] 0)
      {
        const-val call_tmp[8411677]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411679]:string[244] "temp"
        (8411682 call :[1496816] 2 ret_tmp[8411679] _ln[9401863] _fn[9401865])
        (8411685 'move' call_tmp[8411677] ret_tmp[8411679])
        const-val call_tmp[8411688]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411690]:string[244] "temp"
        (8411693 call +[28065] "Cannot bitshift " call_tmp[8411677] ret_tmp[8411690] _ln[9401863] _fn[9401865])
        (8411697 'move' call_tmp[8411688] ret_tmp[8411690])
        const-val call_tmp[8411700]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411702]:string[244] "temp"
        (8411705 call +[28065] call_tmp[8411688] " by " ret_tmp[8411702] _ln[9401863] _fn[9401865])
        (8411709 'move' call_tmp[8411700] ret_tmp[8411702])
        const-val call_tmp[8411712]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411714]:string[244] "temp"
        (8411717 call :[1496816] call_tmp[8411651] ret_tmp[8411714] _ln[9401863] _fn[9401865])
        (8411720 'move' call_tmp[8411712] ret_tmp[8411714])
        const-val call_tmp[8411723]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411725]:string[244] "temp"
        (8411728 call +[28065] call_tmp[8411700] call_tmp[8411712] ret_tmp[8411725] _ln[9401863] _fn[9401865])
        (8411732 'move' call_tmp[8411723] ret_tmp[8411725])
        const-val call_tmp[8411735]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411737]:string[244] "temp"
        (8411740 call +[28065] call_tmp[8411723] " because " ret_tmp[8411737] _ln[9401863] _fn[9401865])
        (8411744 'move' call_tmp[8411735] ret_tmp[8411737])
        const-val call_tmp[8411747]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411749]:string[244] "temp"
        (8411752 call :[1496816] call_tmp[8411651] ret_tmp[8411749] _ln[9401863] _fn[9401865])
        (8411755 'move' call_tmp[8411747] ret_tmp[8411749])
        const-val call_tmp[8411758]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8411760]:string[244] "temp"
        (8411763 call +[28065] call_tmp[8411735] call_tmp[8411747] ret_tmp[8411760] _ln[9401863] _fn[9401865])
        (8411767 'move' call_tmp[8411758] ret_tmp[8411760])
        const-val ret_tmp[8411772]:string[244] "temp"
        (8411775 call +[28065] call_tmp[8411758] " is less than 0" ret_tmp[8411772] _ln[9401863] _fn[9401865])
        const-val msg[8411782]:string[244] "dead at end of block" "insert auto destroy"
        (8411784 'move' msg[8411782] ret_tmp[8411772])
        ref i_x[8411787]:_ref(string)[1466327] "temp"
        (8411789 'move' i_x[8411787](8411791 'set reference' call_tmp[8411758]))
        (8411794 call deinit[21354] i_x[8411787] _ln[9401863] _fn[9401865])
        ref i_x[8411796]:_ref(string)[1466327] "temp"
        (8411798 'move' i_x[8411796](8411800 'set reference' call_tmp[8411747]))
        (8411803 call deinit[21354] i_x[8411796] _ln[9401863] _fn[9401865])
        ref i_x[8411805]:_ref(string)[1466327] "temp"
        (8411807 'move' i_x[8411805](8411809 'set reference' call_tmp[8411735]))
        (8411812 call deinit[21354] i_x[8411805] _ln[9401863] _fn[9401865])
        ref i_x[8411814]:_ref(string)[1466327] "temp"
        (8411816 'move' i_x[8411814](8411818 'set reference' call_tmp[8411723]))
        (8411821 call deinit[21354] i_x[8411814] _ln[9401863] _fn[9401865])
        ref i_x[8411823]:_ref(string)[1466327] "temp"
        (8411825 'move' i_x[8411823](8411827 'set reference' call_tmp[8411712]))
        (8411830 call deinit[21354] i_x[8411823] _ln[9401863] _fn[9401865])
        ref i_x[8411832]:_ref(string)[1466327] "temp"
        (8411834 'move' i_x[8411832](8411836 'set reference' call_tmp[8411700]))
        (8411839 call deinit[21354] i_x[8411832] _ln[9401863] _fn[9401865])
        ref i_x[8411841]:_ref(string)[1466327] "temp"
        (8411843 'move' i_x[8411841](8411845 'set reference' call_tmp[8411688]))
        (8411848 call deinit[21354] i_x[8411841] _ln[9401863] _fn[9401865])
        ref i_x[8411850]:_ref(string)[1466327] "temp"
        (8411852 'move' i_x[8411850](8411854 'set reference' call_tmp[8411677]))
        (8411857 call deinit[21354] i_x[8411850] _ln[9401863] _fn[9401865])
        (8411860 call boundsCheckHalt[404] msg[8411782] _ln[9401863] _fn[9401865])
        ref i_x[8411862]:_ref(string)[1466327] "temp"
        (8411864 'move' i_x[8411862](8411866 'set reference' msg[8411782]))
        (8411869 call deinit[21354] i_x[8411862] _ln[9401863] _fn[9401865])
      }
      {
        if(8411876 '>=' call_tmp[8411651] 64)
        {
          const-val call_tmp[8411881]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411883]:string[244] "temp"
          (8411886 call :[1496816] 2 ret_tmp[8411883] _ln[9401863] _fn[9401865])
          (8411889 'move' call_tmp[8411881] ret_tmp[8411883])
          const-val call_tmp[8411892]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411894]:string[244] "temp"
          (8411897 call +[28065] "Cannot bitshift " call_tmp[8411881] ret_tmp[8411894] _ln[9401863] _fn[9401865])
          (8411901 'move' call_tmp[8411892] ret_tmp[8411894])
          const-val call_tmp[8411904]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411906]:string[244] "temp"
          (8411909 call +[28065] call_tmp[8411892] " by " ret_tmp[8411906] _ln[9401863] _fn[9401865])
          (8411913 'move' call_tmp[8411904] ret_tmp[8411906])
          const-val call_tmp[8411916]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411918]:string[244] "temp"
          (8411921 call :[1496816] call_tmp[8411651] ret_tmp[8411918] _ln[9401863] _fn[9401865])
          (8411924 'move' call_tmp[8411916] ret_tmp[8411918])
          const-val call_tmp[8411927]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411929]:string[244] "temp"
          (8411932 call +[28065] call_tmp[8411904] call_tmp[8411916] ret_tmp[8411929] _ln[9401863] _fn[9401865])
          (8411936 'move' call_tmp[8411927] ret_tmp[8411929])
          const-val call_tmp[8411939]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411941]:string[244] "temp"
          (8411944 call +[28065] call_tmp[8411927] " because " ret_tmp[8411941] _ln[9401863] _fn[9401865])
          (8411948 'move' call_tmp[8411939] ret_tmp[8411941])
          const-val call_tmp[8411951]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411953]:string[244] "temp"
          (8411956 call :[1496816] call_tmp[8411651] ret_tmp[8411953] _ln[9401863] _fn[9401865])
          (8411959 'move' call_tmp[8411951] ret_tmp[8411953])
          const-val call_tmp[8411962]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411964]:string[244] "temp"
          (8411967 call +[28065] call_tmp[8411939] call_tmp[8411951] ret_tmp[8411964] _ln[9401863] _fn[9401865])
          (8411971 'move' call_tmp[8411962] ret_tmp[8411964])
          const-val call_tmp[8411974]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8411976]:string[244] "temp"
          (8411979 call +[28065] call_tmp[8411962] " is >= the bitwidth of " ret_tmp[8411976] _ln[9401863] _fn[9401865])
          (8411983 'move' call_tmp[8411974] ret_tmp[8411976])
          const-val ret_tmp[8411988]:string[244] "temp"
          (8411991 call +[28065] call_tmp[8411974] "int(64)" ret_tmp[8411988] _ln[9401863] _fn[9401865])
          const-val msg[8411998]:string[244] "dead at end of block" "insert auto destroy"
          (8412000 'move' msg[8411998] ret_tmp[8411988])
          ref i_x[8412003]:_ref(string)[1466327] "temp"
          (8412005 'move' i_x[8412003](8412007 'set reference' call_tmp[8411974]))
          (8412010 call deinit[21354] i_x[8412003] _ln[9401863] _fn[9401865])
          ref i_x[8412012]:_ref(string)[1466327] "temp"
          (8412014 'move' i_x[8412012](8412016 'set reference' call_tmp[8411962]))
          (8412019 call deinit[21354] i_x[8412012] _ln[9401863] _fn[9401865])
          ref i_x[8412021]:_ref(string)[1466327] "temp"
          (8412023 'move' i_x[8412021](8412025 'set reference' call_tmp[8411951]))
          (8412028 call deinit[21354] i_x[8412021] _ln[9401863] _fn[9401865])
          ref i_x[8412030]:_ref(string)[1466327] "temp"
          (8412032 'move' i_x[8412030](8412034 'set reference' call_tmp[8411939]))
          (8412037 call deinit[21354] i_x[8412030] _ln[9401863] _fn[9401865])
          ref i_x[8412039]:_ref(string)[1466327] "temp"
          (8412041 'move' i_x[8412039](8412043 'set reference' call_tmp[8411927]))
          (8412046 call deinit[21354] i_x[8412039] _ln[9401863] _fn[9401865])
          ref i_x[8412048]:_ref(string)[1466327] "temp"
          (8412050 'move' i_x[8412048](8412052 'set reference' call_tmp[8411916]))
          (8412055 call deinit[21354] i_x[8412048] _ln[9401863] _fn[9401865])
          ref i_x[8412057]:_ref(string)[1466327] "temp"
          (8412059 'move' i_x[8412057](8412061 'set reference' call_tmp[8411904]))
          (8412064 call deinit[21354] i_x[8412057] _ln[9401863] _fn[9401865])
          ref i_x[8412066]:_ref(string)[1466327] "temp"
          (8412068 'move' i_x[8412066](8412070 'set reference' call_tmp[8411892]))
          (8412073 call deinit[21354] i_x[8412066] _ln[9401863] _fn[9401865])
          ref i_x[8412075]:_ref(string)[1466327] "temp"
          (8412077 'move' i_x[8412075](8412079 'set reference' call_tmp[8411881]))
          (8412082 call deinit[21354] i_x[8412075] _ln[9401863] _fn[9401865])
          (8412085 call boundsCheckHalt[404] msg[8411998] _ln[9401863] _fn[9401865])
          ref i_x[8412087]:_ref(string)[1466327] "temp"
          (8412089 'move' i_x[8412087](8412091 'set reference' msg[8411998]))
          (8412094 call deinit[21354] i_x[8412087] _ln[9401863] _fn[9401865])
        }
      }
      (8412119 'move' ret[8411124](8412116 'cast' int(64)[10](9531945 'cast' uint(64)[86](8412109 '<<'(8412102 'cast' uint(64)[86] 2 _ln[9401863] _fn[9401865]) call_tmp[8411651])) _ln[9401863] _fn[9401865]))
      label _end__expBaseHelp[8412122]
      ref i_lhs[7512571]:_ref(int(64))[1465689] "temp"
      (7512575 'move' i_lhs[7512571](7512573 'set reference' lastArrayIdx[3253726]))
      (7512583 '+=' i_lhs[7512571] 1)
      val coerce_tmp[3256013]:_ddata(_ddata(string))[1950652] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (3256017 'move' coerce_tmp[3256013](9217836 '.v' this[3253655] _arrays[1950579]))
      ref call_tmp[7893229]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
      (7893231 'move' call_tmp[7893229](7893233 'array_get' coerce_tmp[3256013] lastArrayIdx[3253726]))
      const-val call_tmp[8403809]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403811 'move' call_tmp[8403809](8403813 '*' ret[8411124] 2))
      val call_tmp[3254139]:_ddata(string)[1950629] "dead after last mention" "expr temp" "maybe param" "temp"
      (3254141 'move' call_tmp[3254139](3254147 call _makeArray[1954132] this[3253655] call_tmp[8403809] _ln[9401863] _fn[9401865]))
      (7893379 '=' call_tmp[7893229] call_tmp[3254139])
      ref call_tmp[7636226]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (7636228 'move' call_tmp[7636226](7636230 '.' this[3253655] _totalCapacity[1950590]))
      (7512589 '+=' call_tmp[7636226] call_tmp[8403809])
      ref i_lhs[7517316]:_ref(int(64))[1465689] "temp"
      (7517320 'move' i_lhs[7517316](7517318 'set reference' req[3253788]))
      (7517323 '-=' i_lhs[7517316] call_tmp[8403809])
      (3254187 'move' tmp[3253796](7316702 '>' req[3253788] 0))
      tmp[3253796]
    }
    label _end__maybeAcquireMem[3254194]
    (3254196 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._maybeAcquireMem[3409104](ref arg this[3409108]:_ref(list(shared Module(real(32)),false))[1955585], const in arg amount[3409110]:int(64)[10], const in arg _ln[9404509]:int(64)[10], in arg _fn[9404511]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9285744]:int(64)[10] "temp"
    (9285745 'move' local__initialCapacity[9285744] _initialCapacity[225849])
    const-val call_tmp[7378080]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7378082 'move' call_tmp[7378080](7378084 '-'(9222210 '.v' this[3409108] _totalCapacity[1955561])(9222216 '.v' this[3409108] _size[1955538])))
    if(7379276 '>=' call_tmp[7378080] amount[3409110])
    {
      gotoReturn _end__maybeAcquireMem[3409647] _end__maybeAcquireMem[3409647]
    }
    val lastArrayIdx[3409179]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3409181]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7381433 '=='(9222222 '.v' this[3409108] _size[1955538]) 0)
    {
      (3409208 'move' tmp[3409181] 0)
    }
    {
      const-val call_tmp[8465396]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465398 'move' call_tmp[8465396](8465400 '+'(9532203 'cast' int(64)[10](8465393 '-'(8465386 '.v' this[3409108] _size[1955538]) 1)) local__initialCapacity[9285744]))
      if(8465419 '<' call_tmp[8465396] 1)
      {
        (8465425 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404509] _fn[9404511])
      }
      const-val call_tmp[8465440]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465442 'move' call_tmp[8465440](8465445 call chpl_bitops_clz_64[1942612](8465437 'cast' uint(64)[86] call_tmp[8465396] _ln[9404509] _fn[9404511])))
      const-val call_tmp[8465454]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465456 'move' call_tmp[8465454](8465458 '-' 63(8465451 'cast' int(64)[10] call_tmp[8465440] _ln[9404509] _fn[9404511])))
      if(8465468 '==' 1 0)
      {
        (8465474 call halt[88131] "Attempt to divide by zero" _ln[9404509] _fn[9404511])
      }
      const-val call_tmp[8465477]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465479 'move' call_tmp[8465477](8465481 '/' call_tmp[8465454] 1))
      if(8465496 '<' local__initialCapacity[9285744] 1)
      {
        (8465502 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404509] _fn[9404511])
      }
      const-val call_tmp[8465517]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465519 'move' call_tmp[8465517](8465522 call chpl_bitops_clz_64[1942612](8465514 'cast' uint(64)[86] local__initialCapacity[9285744] _ln[9404509] _fn[9404511])))
      const-val call_tmp[8465531]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465533 'move' call_tmp[8465531](8465535 '-' 63(8465528 'cast' int(64)[10] call_tmp[8465517] _ln[9404509] _fn[9404511])))
      if(8465545 '==' 1 0)
      {
        (8465551 call halt[88131] "Attempt to divide by zero" _ln[9404509] _fn[9404511])
      }
      const-val call_tmp[8465554]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465556 'move' call_tmp[8465554](8465558 '/' call_tmp[8465531] 1))
      (3409223 'move' tmp[3409181](9532191 'cast' int(64)[10](8465565 '-' call_tmp[8465477] call_tmp[8465554])))
    }
    (3409229 'move' lastArrayIdx[3409179] tmp[3409181])
    const-val call_tmp[7378100]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7378102 'move' call_tmp[7378100](7378104 '-' amount[3409110] call_tmp[7378080]))
    val req[3409241]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3409243 'move' req[3409241] call_tmp[7378100])
    val tmp[3409249]:bool[19] "dead after last mention" "temp"
    (3409259 'move' tmp[3409249](7316987 '>' call_tmp[7378100] 0))
    WhileDo[3409264] hazard
    {
      if(7379286 '>=' lastArrayIdx[3409179](9532199 'cast' int(64)[10](7445752 '-'(9222228 '.v' this[3409108] _arrayCapacity[1955558]) 1)))
      {
        val _narrays[3409343]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead at end of block" "insert auto destroy"
        (3409345 'move' _narrays[3409343](3409341 call _makeBlockArray[1956049] this[3409108](9532193 'cast' int(64)[10](8403823 '*'(9222234 '.v' this[3409108] _arrayCapacity[1955558]) 2)) _ln[9404509] _fn[9404511]))
        const-val coerce_tmp[3409873]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (3409877 'move' coerce_tmp[3409873](9222240 '.v' this[3409108] _arrayCapacity[1955558]))
        if(7321272 '<' coerce_tmp[3409873] 0)
        {
          (6064341 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9404509] _fn[9404511])
        }
        val tmp[6064358]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(7389568 '==' coerce_tmp[3409873] 0)
        {
          (6064419 'move' tmp[6064358](7444192 'cast' int(64)[10](9532201 'cast' uint(64)[86](7443022 '-'(6064395 'cast' uint(64)[86] 0 _ln[9404509] _fn[9404511]) 1)) _ln[9404509] _fn[9404511]))
        }
        {
          (6064473 'move' tmp[6064358](9532195 'cast' int(64)[10](7374269 '+' 0(9532197 'cast' int(64)[10](7446992 '-' coerce_tmp[3409873] 1)))))
        }
        const-val _ic__F1_high[9017469]:int(64)[10] "temp"
        (7454537 'move' _ic__F1_high[9017469] tmp[6064358])
        val i[6398049]:int(64)[10] "dead at end of block" "insert auto destroy"
        (6398053 'move' i[6398049] 0)
        (6398085 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6064358] 1 0 tmp[6064358] 1 _ln[9404509] _fn[9404511])
        CForLoop[6398092]
        {
          ref call_tmp[7894252]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
          (7894254 'move' call_tmp[7894252](7894256 'array_get' _narrays[3409343] i[6398049]))
          val coerce_tmp[6398180]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (6398182 'move' coerce_tmp[6398180](9222246 '.v' this[3409108] _arrays[1955550]))
          ref call_tmp[7894262]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
          (7894264 'move' call_tmp[7894262](7894266 'array_get' coerce_tmp[6398180] i[6398049]))
          (7894388 '=' call_tmp[7894252](6398196 'deref' call_tmp[7894262]))
          {
            (6398094 '=' i[6398049] 0)
          }
          {
            (6398098 '<=' i[6398049] _ic__F1_high[9017469])
          }
          {
            (6398106 '+=' i[6398049] 1)
          }
        }
        (3409445 call _freeBlockArray[3409910] this[3409108](9222252 '.v' this[3409108] _arrays[1955550])(9222258 '.v' this[3409108] _arrayCapacity[1955558]) _ln[9404509] _fn[9404511])
        (9222264 '.=' this[3409108] _arrays[1955550] _narrays[3409343])
        ref call_tmp[7894166]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (7894168 'move' call_tmp[7894166](7894170 '.' this[3409108] _arrayCapacity[1955558]))
        (7517979 '*=' call_tmp[7894166] 2)
      }
      (3409505 'noop')
      if(8465636 '<' local__initialCapacity[9285744] 1)
      {
        (8465642 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404509] _fn[9404511])
      }
      const-val call_tmp[8465657]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465659 'move' call_tmp[8465657](8465662 call chpl_bitops_clz_64[1942612](8465654 'cast' uint(64)[86] local__initialCapacity[9285744] _ln[9404509] _fn[9404511])))
      const-val call_tmp[8465671]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465673 'move' call_tmp[8465671](8465675 '-' 63(8465668 'cast' int(64)[10] call_tmp[8465657] _ln[9404509] _fn[9404511])))
      if(8465685 '==' 1 0)
      {
        (8465691 call halt[88131] "Attempt to divide by zero" _ln[9404509] _fn[9404511])
      }
      const-val call_tmp[8465694]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465696 'move' call_tmp[8465694](8465698 '/' call_tmp[8465671] 1))
      const-val call_tmp[8465701]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8465703 'move' call_tmp[8465701](8465705 '+' lastArrayIdx[3409179] call_tmp[8465694]))
      const-val exp[8465708]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (8465710 'move' exp[8465708] call_tmp[8465701])
      val ret[8465713]:int(64)[10] "dead after last mention" "RVV" "temp"
      if(8465719 '==' call_tmp[8465701] 0)
      {
        (8465724 'move' ret[8465713] 1)
        gotoReturn _end__expBaseHelp[8466711] _end__expBaseHelp[8466711]
      }
      if(8465734 '<' call_tmp[8465701] 0)
      {
        (8465739 'move' ret[8465713] 0)
        gotoReturn _end__expBaseHelp[8466711] _end__expBaseHelp[8466711]
      }
      val c[8465745]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8465747 'move' c[8465745] 0)
      val x[8465750]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8465752 'move' x[8465750] 2)
      val tmp[8465755]:bool[19] "dead after last mention" "temp"
      (8465764 'move' tmp[8465755](8465761 '>' 2 1))
      const-val tmp[8465783]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8465785 'move' tmp[8465783](8465787 '<' 1 0))
      WhileDo[8465767]
      {
        ref i_lhs[8465769]:_ref(int(64))[1465689] "temp"
        (8465771 'move' i_lhs[8465769](8465773 'set reference' c[8465745]))
        (8465775 '+=' i_lhs[8465769] 1)
        if tmp[8465783]
        {
          const-val call_tmp[8465792]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465794]:string[244] "temp"
          (8465797 call :[1496816] x[8465750] ret_tmp[8465794] _ln[9404509] _fn[9404511])
          (8465800 'move' call_tmp[8465792] ret_tmp[8465794])
          const-val call_tmp[8465803]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465805]:string[244] "temp"
          (8465808 call +[28065] "Cannot bitshift " call_tmp[8465792] ret_tmp[8465805] _ln[9404509] _fn[9404511])
          (8465812 'move' call_tmp[8465803] ret_tmp[8465805])
          const-val call_tmp[8465815]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465817]:string[244] "temp"
          (8465820 call +[28065] call_tmp[8465803] " by " ret_tmp[8465817] _ln[9404509] _fn[9404511])
          (8465824 'move' call_tmp[8465815] ret_tmp[8465817])
          const-val call_tmp[8465827]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465829]:string[244] "temp"
          (8465832 call :[1496816] 1 ret_tmp[8465829] _ln[9404509] _fn[9404511])
          (8465835 'move' call_tmp[8465827] ret_tmp[8465829])
          const-val call_tmp[8465838]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465840]:string[244] "temp"
          (8465843 call +[28065] call_tmp[8465815] call_tmp[8465827] ret_tmp[8465840] _ln[9404509] _fn[9404511])
          (8465847 'move' call_tmp[8465838] ret_tmp[8465840])
          const-val call_tmp[8465850]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465852]:string[244] "temp"
          (8465855 call +[28065] call_tmp[8465838] " because " ret_tmp[8465852] _ln[9404509] _fn[9404511])
          (8465859 'move' call_tmp[8465850] ret_tmp[8465852])
          const-val call_tmp[8465862]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465864]:string[244] "temp"
          (8465867 call :[1496816] 1 ret_tmp[8465864] _ln[9404509] _fn[9404511])
          (8465870 'move' call_tmp[8465862] ret_tmp[8465864])
          const-val call_tmp[8465873]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8465875]:string[244] "temp"
          (8465878 call +[28065] call_tmp[8465850] call_tmp[8465862] ret_tmp[8465875] _ln[9404509] _fn[9404511])
          (8465882 'move' call_tmp[8465873] ret_tmp[8465875])
          const-val ret_tmp[8465887]:string[244] "temp"
          (8465890 call +[28065] call_tmp[8465873] " is less than 0" ret_tmp[8465887] _ln[9404509] _fn[9404511])
          const-val msg[8465897]:string[244] "dead at end of block" "insert auto destroy"
          (8465899 'move' msg[8465897] ret_tmp[8465887])
          ref i_x[8465902]:_ref(string)[1466327] "temp"
          (8465904 'move' i_x[8465902](8465906 'set reference' call_tmp[8465873]))
          (8465909 call deinit[21354] i_x[8465902] _ln[9404509] _fn[9404511])
          ref i_x[8465911]:_ref(string)[1466327] "temp"
          (8465913 'move' i_x[8465911](8465915 'set reference' call_tmp[8465862]))
          (8465918 call deinit[21354] i_x[8465911] _ln[9404509] _fn[9404511])
          ref i_x[8465920]:_ref(string)[1466327] "temp"
          (8465922 'move' i_x[8465920](8465924 'set reference' call_tmp[8465850]))
          (8465927 call deinit[21354] i_x[8465920] _ln[9404509] _fn[9404511])
          ref i_x[8465929]:_ref(string)[1466327] "temp"
          (8465931 'move' i_x[8465929](8465933 'set reference' call_tmp[8465838]))
          (8465936 call deinit[21354] i_x[8465929] _ln[9404509] _fn[9404511])
          ref i_x[8465938]:_ref(string)[1466327] "temp"
          (8465940 'move' i_x[8465938](8465942 'set reference' call_tmp[8465827]))
          (8465945 call deinit[21354] i_x[8465938] _ln[9404509] _fn[9404511])
          ref i_x[8465947]:_ref(string)[1466327] "temp"
          (8465949 'move' i_x[8465947](8465951 'set reference' call_tmp[8465815]))
          (8465954 call deinit[21354] i_x[8465947] _ln[9404509] _fn[9404511])
          ref i_x[8465956]:_ref(string)[1466327] "temp"
          (8465958 'move' i_x[8465956](8465960 'set reference' call_tmp[8465803]))
          (8465963 call deinit[21354] i_x[8465956] _ln[9404509] _fn[9404511])
          ref i_x[8465965]:_ref(string)[1466327] "temp"
          (8465967 'move' i_x[8465965](8465969 'set reference' call_tmp[8465792]))
          (8465972 call deinit[21354] i_x[8465965] _ln[9404509] _fn[9404511])
          (8465975 call boundsCheckHalt[404] msg[8465897] _ln[9404509] _fn[9404511])
          ref i_x[8465977]:_ref(string)[1466327] "temp"
          (8465979 'move' i_x[8465977](8465981 'set reference' msg[8465897]))
          (8465984 call deinit[21354] i_x[8465977] _ln[9404509] _fn[9404511])
        }
        {
          if(8465991 '>=' 1 64)
          {
            const-val call_tmp[8465996]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8465998]:string[244] "temp"
            (8466001 call :[1496816] x[8465750] ret_tmp[8465998] _ln[9404509] _fn[9404511])
            (8466004 'move' call_tmp[8465996] ret_tmp[8465998])
            const-val call_tmp[8466007]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466009]:string[244] "temp"
            (8466012 call +[28065] "Cannot bitshift " call_tmp[8465996] ret_tmp[8466009] _ln[9404509] _fn[9404511])
            (8466016 'move' call_tmp[8466007] ret_tmp[8466009])
            const-val call_tmp[8466019]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466021]:string[244] "temp"
            (8466024 call +[28065] call_tmp[8466007] " by " ret_tmp[8466021] _ln[9404509] _fn[9404511])
            (8466028 'move' call_tmp[8466019] ret_tmp[8466021])
            const-val call_tmp[8466031]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466033]:string[244] "temp"
            (8466036 call :[1496816] 1 ret_tmp[8466033] _ln[9404509] _fn[9404511])
            (8466039 'move' call_tmp[8466031] ret_tmp[8466033])
            const-val call_tmp[8466042]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466044]:string[244] "temp"
            (8466047 call +[28065] call_tmp[8466019] call_tmp[8466031] ret_tmp[8466044] _ln[9404509] _fn[9404511])
            (8466051 'move' call_tmp[8466042] ret_tmp[8466044])
            const-val call_tmp[8466054]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466056]:string[244] "temp"
            (8466059 call +[28065] call_tmp[8466042] " because " ret_tmp[8466056] _ln[9404509] _fn[9404511])
            (8466063 'move' call_tmp[8466054] ret_tmp[8466056])
            const-val call_tmp[8466066]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466068]:string[244] "temp"
            (8466071 call :[1496816] 1 ret_tmp[8466068] _ln[9404509] _fn[9404511])
            (8466074 'move' call_tmp[8466066] ret_tmp[8466068])
            const-val call_tmp[8466077]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466079]:string[244] "temp"
            (8466082 call +[28065] call_tmp[8466054] call_tmp[8466066] ret_tmp[8466079] _ln[9404509] _fn[9404511])
            (8466086 'move' call_tmp[8466077] ret_tmp[8466079])
            const-val call_tmp[8466089]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8466091]:string[244] "temp"
            (8466094 call +[28065] call_tmp[8466077] " is >= the bitwidth of " ret_tmp[8466091] _ln[9404509] _fn[9404511])
            (8466098 'move' call_tmp[8466089] ret_tmp[8466091])
            const-val ret_tmp[8466103]:string[244] "temp"
            (8466106 call +[28065] call_tmp[8466089] "int(64)" ret_tmp[8466103] _ln[9404509] _fn[9404511])
            const-val msg[8466113]:string[244] "dead at end of block" "insert auto destroy"
            (8466115 'move' msg[8466113] ret_tmp[8466103])
            ref i_x[8466118]:_ref(string)[1466327] "temp"
            (8466120 'move' i_x[8466118](8466122 'set reference' call_tmp[8466089]))
            (8466125 call deinit[21354] i_x[8466118] _ln[9404509] _fn[9404511])
            ref i_x[8466127]:_ref(string)[1466327] "temp"
            (8466129 'move' i_x[8466127](8466131 'set reference' call_tmp[8466077]))
            (8466134 call deinit[21354] i_x[8466127] _ln[9404509] _fn[9404511])
            ref i_x[8466136]:_ref(string)[1466327] "temp"
            (8466138 'move' i_x[8466136](8466140 'set reference' call_tmp[8466066]))
            (8466143 call deinit[21354] i_x[8466136] _ln[9404509] _fn[9404511])
            ref i_x[8466145]:_ref(string)[1466327] "temp"
            (8466147 'move' i_x[8466145](8466149 'set reference' call_tmp[8466054]))
            (8466152 call deinit[21354] i_x[8466145] _ln[9404509] _fn[9404511])
            ref i_x[8466154]:_ref(string)[1466327] "temp"
            (8466156 'move' i_x[8466154](8466158 'set reference' call_tmp[8466042]))
            (8466161 call deinit[21354] i_x[8466154] _ln[9404509] _fn[9404511])
            ref i_x[8466163]:_ref(string)[1466327] "temp"
            (8466165 'move' i_x[8466163](8466167 'set reference' call_tmp[8466031]))
            (8466170 call deinit[21354] i_x[8466163] _ln[9404509] _fn[9404511])
            ref i_x[8466172]:_ref(string)[1466327] "temp"
            (8466174 'move' i_x[8466172](8466176 'set reference' call_tmp[8466019]))
            (8466179 call deinit[21354] i_x[8466172] _ln[9404509] _fn[9404511])
            ref i_x[8466181]:_ref(string)[1466327] "temp"
            (8466183 'move' i_x[8466181](8466185 'set reference' call_tmp[8466007]))
            (8466188 call deinit[21354] i_x[8466181] _ln[9404509] _fn[9404511])
            ref i_x[8466190]:_ref(string)[1466327] "temp"
            (8466192 'move' i_x[8466190](8466194 'set reference' call_tmp[8465996]))
            (8466197 call deinit[21354] i_x[8466190] _ln[9404509] _fn[9404511])
            (8466200 call boundsCheckHalt[404] msg[8466113] _ln[9404509] _fn[9404511])
            ref i_x[8466202]:_ref(string)[1466327] "temp"
            (8466204 'move' i_x[8466202](8466206 'set reference' msg[8466113]))
            (8466209 call deinit[21354] i_x[8466202] _ln[9404509] _fn[9404511])
          }
        }
        const-val call_tmp[8466213]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8466215 'move' call_tmp[8466213](8466217 '>>' x[8465750] 1))
        (8466220 '=' x[8465750] call_tmp[8466213])
        (8466230 'move' tmp[8465755](8466227 '>' call_tmp[8466213] 1))
        tmp[8465755]
      }
      const-val call_tmp[8466240]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8466242 'move' call_tmp[8466240](8466244 '*' c[8465745](9532205 'cast' int(64)[10](8466237 '-' exp[8465708] 1))))
      if(8466261 '<' call_tmp[8466240] 0)
      {
        const-val call_tmp[8466266]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466268]:string[244] "temp"
        (8466271 call :[1496816] 2 ret_tmp[8466268] _ln[9404509] _fn[9404511])
        (8466274 'move' call_tmp[8466266] ret_tmp[8466268])
        const-val call_tmp[8466277]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466279]:string[244] "temp"
        (8466282 call +[28065] "Cannot bitshift " call_tmp[8466266] ret_tmp[8466279] _ln[9404509] _fn[9404511])
        (8466286 'move' call_tmp[8466277] ret_tmp[8466279])
        const-val call_tmp[8466289]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466291]:string[244] "temp"
        (8466294 call +[28065] call_tmp[8466277] " by " ret_tmp[8466291] _ln[9404509] _fn[9404511])
        (8466298 'move' call_tmp[8466289] ret_tmp[8466291])
        const-val call_tmp[8466301]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466303]:string[244] "temp"
        (8466306 call :[1496816] call_tmp[8466240] ret_tmp[8466303] _ln[9404509] _fn[9404511])
        (8466309 'move' call_tmp[8466301] ret_tmp[8466303])
        const-val call_tmp[8466312]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466314]:string[244] "temp"
        (8466317 call +[28065] call_tmp[8466289] call_tmp[8466301] ret_tmp[8466314] _ln[9404509] _fn[9404511])
        (8466321 'move' call_tmp[8466312] ret_tmp[8466314])
        const-val call_tmp[8466324]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466326]:string[244] "temp"
        (8466329 call +[28065] call_tmp[8466312] " because " ret_tmp[8466326] _ln[9404509] _fn[9404511])
        (8466333 'move' call_tmp[8466324] ret_tmp[8466326])
        const-val call_tmp[8466336]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466338]:string[244] "temp"
        (8466341 call :[1496816] call_tmp[8466240] ret_tmp[8466338] _ln[9404509] _fn[9404511])
        (8466344 'move' call_tmp[8466336] ret_tmp[8466338])
        const-val call_tmp[8466347]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8466349]:string[244] "temp"
        (8466352 call +[28065] call_tmp[8466324] call_tmp[8466336] ret_tmp[8466349] _ln[9404509] _fn[9404511])
        (8466356 'move' call_tmp[8466347] ret_tmp[8466349])
        const-val ret_tmp[8466361]:string[244] "temp"
        (8466364 call +[28065] call_tmp[8466347] " is less than 0" ret_tmp[8466361] _ln[9404509] _fn[9404511])
        const-val msg[8466371]:string[244] "dead at end of block" "insert auto destroy"
        (8466373 'move' msg[8466371] ret_tmp[8466361])
        ref i_x[8466376]:_ref(string)[1466327] "temp"
        (8466378 'move' i_x[8466376](8466380 'set reference' call_tmp[8466347]))
        (8466383 call deinit[21354] i_x[8466376] _ln[9404509] _fn[9404511])
        ref i_x[8466385]:_ref(string)[1466327] "temp"
        (8466387 'move' i_x[8466385](8466389 'set reference' call_tmp[8466336]))
        (8466392 call deinit[21354] i_x[8466385] _ln[9404509] _fn[9404511])
        ref i_x[8466394]:_ref(string)[1466327] "temp"
        (8466396 'move' i_x[8466394](8466398 'set reference' call_tmp[8466324]))
        (8466401 call deinit[21354] i_x[8466394] _ln[9404509] _fn[9404511])
        ref i_x[8466403]:_ref(string)[1466327] "temp"
        (8466405 'move' i_x[8466403](8466407 'set reference' call_tmp[8466312]))
        (8466410 call deinit[21354] i_x[8466403] _ln[9404509] _fn[9404511])
        ref i_x[8466412]:_ref(string)[1466327] "temp"
        (8466414 'move' i_x[8466412](8466416 'set reference' call_tmp[8466301]))
        (8466419 call deinit[21354] i_x[8466412] _ln[9404509] _fn[9404511])
        ref i_x[8466421]:_ref(string)[1466327] "temp"
        (8466423 'move' i_x[8466421](8466425 'set reference' call_tmp[8466289]))
        (8466428 call deinit[21354] i_x[8466421] _ln[9404509] _fn[9404511])
        ref i_x[8466430]:_ref(string)[1466327] "temp"
        (8466432 'move' i_x[8466430](8466434 'set reference' call_tmp[8466277]))
        (8466437 call deinit[21354] i_x[8466430] _ln[9404509] _fn[9404511])
        ref i_x[8466439]:_ref(string)[1466327] "temp"
        (8466441 'move' i_x[8466439](8466443 'set reference' call_tmp[8466266]))
        (8466446 call deinit[21354] i_x[8466439] _ln[9404509] _fn[9404511])
        (8466449 call boundsCheckHalt[404] msg[8466371] _ln[9404509] _fn[9404511])
        ref i_x[8466451]:_ref(string)[1466327] "temp"
        (8466453 'move' i_x[8466451](8466455 'set reference' msg[8466371]))
        (8466458 call deinit[21354] i_x[8466451] _ln[9404509] _fn[9404511])
      }
      {
        if(8466465 '>=' call_tmp[8466240] 64)
        {
          const-val call_tmp[8466470]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466472]:string[244] "temp"
          (8466475 call :[1496816] 2 ret_tmp[8466472] _ln[9404509] _fn[9404511])
          (8466478 'move' call_tmp[8466470] ret_tmp[8466472])
          const-val call_tmp[8466481]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466483]:string[244] "temp"
          (8466486 call +[28065] "Cannot bitshift " call_tmp[8466470] ret_tmp[8466483] _ln[9404509] _fn[9404511])
          (8466490 'move' call_tmp[8466481] ret_tmp[8466483])
          const-val call_tmp[8466493]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466495]:string[244] "temp"
          (8466498 call +[28065] call_tmp[8466481] " by " ret_tmp[8466495] _ln[9404509] _fn[9404511])
          (8466502 'move' call_tmp[8466493] ret_tmp[8466495])
          const-val call_tmp[8466505]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466507]:string[244] "temp"
          (8466510 call :[1496816] call_tmp[8466240] ret_tmp[8466507] _ln[9404509] _fn[9404511])
          (8466513 'move' call_tmp[8466505] ret_tmp[8466507])
          const-val call_tmp[8466516]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466518]:string[244] "temp"
          (8466521 call +[28065] call_tmp[8466493] call_tmp[8466505] ret_tmp[8466518] _ln[9404509] _fn[9404511])
          (8466525 'move' call_tmp[8466516] ret_tmp[8466518])
          const-val call_tmp[8466528]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466530]:string[244] "temp"
          (8466533 call +[28065] call_tmp[8466516] " because " ret_tmp[8466530] _ln[9404509] _fn[9404511])
          (8466537 'move' call_tmp[8466528] ret_tmp[8466530])
          const-val call_tmp[8466540]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466542]:string[244] "temp"
          (8466545 call :[1496816] call_tmp[8466240] ret_tmp[8466542] _ln[9404509] _fn[9404511])
          (8466548 'move' call_tmp[8466540] ret_tmp[8466542])
          const-val call_tmp[8466551]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466553]:string[244] "temp"
          (8466556 call +[28065] call_tmp[8466528] call_tmp[8466540] ret_tmp[8466553] _ln[9404509] _fn[9404511])
          (8466560 'move' call_tmp[8466551] ret_tmp[8466553])
          const-val call_tmp[8466563]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466565]:string[244] "temp"
          (8466568 call +[28065] call_tmp[8466551] " is >= the bitwidth of " ret_tmp[8466565] _ln[9404509] _fn[9404511])
          (8466572 'move' call_tmp[8466563] ret_tmp[8466565])
          const-val ret_tmp[8466577]:string[244] "temp"
          (8466580 call +[28065] call_tmp[8466563] "int(64)" ret_tmp[8466577] _ln[9404509] _fn[9404511])
          const-val msg[8466587]:string[244] "dead at end of block" "insert auto destroy"
          (8466589 'move' msg[8466587] ret_tmp[8466577])
          ref i_x[8466592]:_ref(string)[1466327] "temp"
          (8466594 'move' i_x[8466592](8466596 'set reference' call_tmp[8466563]))
          (8466599 call deinit[21354] i_x[8466592] _ln[9404509] _fn[9404511])
          ref i_x[8466601]:_ref(string)[1466327] "temp"
          (8466603 'move' i_x[8466601](8466605 'set reference' call_tmp[8466551]))
          (8466608 call deinit[21354] i_x[8466601] _ln[9404509] _fn[9404511])
          ref i_x[8466610]:_ref(string)[1466327] "temp"
          (8466612 'move' i_x[8466610](8466614 'set reference' call_tmp[8466540]))
          (8466617 call deinit[21354] i_x[8466610] _ln[9404509] _fn[9404511])
          ref i_x[8466619]:_ref(string)[1466327] "temp"
          (8466621 'move' i_x[8466619](8466623 'set reference' call_tmp[8466528]))
          (8466626 call deinit[21354] i_x[8466619] _ln[9404509] _fn[9404511])
          ref i_x[8466628]:_ref(string)[1466327] "temp"
          (8466630 'move' i_x[8466628](8466632 'set reference' call_tmp[8466516]))
          (8466635 call deinit[21354] i_x[8466628] _ln[9404509] _fn[9404511])
          ref i_x[8466637]:_ref(string)[1466327] "temp"
          (8466639 'move' i_x[8466637](8466641 'set reference' call_tmp[8466505]))
          (8466644 call deinit[21354] i_x[8466637] _ln[9404509] _fn[9404511])
          ref i_x[8466646]:_ref(string)[1466327] "temp"
          (8466648 'move' i_x[8466646](8466650 'set reference' call_tmp[8466493]))
          (8466653 call deinit[21354] i_x[8466646] _ln[9404509] _fn[9404511])
          ref i_x[8466655]:_ref(string)[1466327] "temp"
          (8466657 'move' i_x[8466655](8466659 'set reference' call_tmp[8466481]))
          (8466662 call deinit[21354] i_x[8466655] _ln[9404509] _fn[9404511])
          ref i_x[8466664]:_ref(string)[1466327] "temp"
          (8466666 'move' i_x[8466664](8466668 'set reference' call_tmp[8466470]))
          (8466671 call deinit[21354] i_x[8466664] _ln[9404509] _fn[9404511])
          (8466674 call boundsCheckHalt[404] msg[8466587] _ln[9404509] _fn[9404511])
          ref i_x[8466676]:_ref(string)[1466327] "temp"
          (8466678 'move' i_x[8466676](8466680 'set reference' msg[8466587]))
          (8466683 call deinit[21354] i_x[8466676] _ln[9404509] _fn[9404511])
        }
      }
      (8466708 'move' ret[8465713](8466705 'cast' int(64)[10](9532207 'cast' uint(64)[86](8466698 '<<'(8466691 'cast' uint(64)[86] 2 _ln[9404509] _fn[9404511]) call_tmp[8466240])) _ln[9404509] _fn[9404511]))
      label _end__expBaseHelp[8466711]
      ref i_lhs[7512735]:_ref(int(64))[1465689] "temp"
      (7512739 'move' i_lhs[7512735](7512737 'set reference' lastArrayIdx[3409179]))
      (7512747 '+=' i_lhs[7512735] 1)
      val coerce_tmp[3410207]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (3410211 'move' coerce_tmp[3410207](9222279 '.v' this[3409108] _arrays[1955550]))
      ref call_tmp[7894232]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
      (7894234 'move' call_tmp[7894232](7894236 'array_get' coerce_tmp[3410207] lastArrayIdx[3409179]))
      const-val call_tmp[8403829]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403831 'move' call_tmp[8403829](8403833 '*' ret[8465713] 2))
      val call_tmp[3409592]:_ddata(shared Module(real(32)))[1955600] "dead after last mention" "expr temp" "maybe param" "temp"
      (3409594 'move' call_tmp[3409592](3409600 call _makeArray[1959101] this[3409108] call_tmp[8403829] _ln[9404509] _fn[9404511]))
      (7894382 '=' call_tmp[7894232] call_tmp[3409592])
      ref call_tmp[7893660]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (7893662 'move' call_tmp[7893660](7893664 '.' this[3409108] _totalCapacity[1955561]))
      (7512753 '+=' call_tmp[7893660] call_tmp[8403829])
      ref i_lhs[7517405]:_ref(int(64))[1465689] "temp"
      (7517409 'move' i_lhs[7517405](7517407 'set reference' req[3409241]))
      (7517412 '-=' i_lhs[7517405] call_tmp[8403829])
      (3409640 'move' tmp[3409249](7317002 '>' req[3409241] 0))
      tmp[3409249]
    }
    label _end__maybeAcquireMem[3409647]
    (3409649 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._maybeAcquireMem[3865415](ref arg this[3865419]:_ref(list(shared Module(real(64)),false))[3405554], const in arg amount[3865421]:int(64)[10], const in arg _ln[9419079]:int(64)[10], in arg _fn[9419081]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9286478]:int(64)[10] "temp"
    (9286479 'move' local__initialCapacity[9286478] _initialCapacity[225849])
    const-val call_tmp[7378150]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7378152 'move' call_tmp[7378150](7378154 '-'(9231876 '.v' this[3865419] _totalCapacity[3405537])(9231882 '.v' this[3865419] _size[3405514])))
    if(7379306 '>=' call_tmp[7378150] amount[3865421])
    {
      gotoReturn _end__maybeAcquireMem[3865958] _end__maybeAcquireMem[3865958]
    }
    val lastArrayIdx[3865490]:int(64)[10] "dead at end of block" "insert auto destroy"
    val tmp[3865492]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7382048 '=='(9231888 '.v' this[3865419] _size[3405514]) 0)
    {
      (3865519 'move' tmp[3865492] 0)
    }
    {
      const-val call_tmp[8578832]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8578834 'move' call_tmp[8578832](8578836 '+'(9533099 'cast' int(64)[10](8578829 '-'(8578822 '.v' this[3865419] _size[3405514]) 1)) local__initialCapacity[9286478]))
      if(8578855 '<' call_tmp[8578832] 1)
      {
        (8578861 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9419079] _fn[9419081])
      }
      const-val call_tmp[8578876]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8578878 'move' call_tmp[8578876](8578881 call chpl_bitops_clz_64[1942612](8578873 'cast' uint(64)[86] call_tmp[8578832] _ln[9419079] _fn[9419081])))
      const-val call_tmp[8578890]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8578892 'move' call_tmp[8578890](8578894 '-' 63(8578887 'cast' int(64)[10] call_tmp[8578876] _ln[9419079] _fn[9419081])))
      if(8578904 '==' 1 0)
      {
        (8578910 call halt[88131] "Attempt to divide by zero" _ln[9419079] _fn[9419081])
      }
      const-val call_tmp[8578913]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8578915 'move' call_tmp[8578913](8578917 '/' call_tmp[8578890] 1))
      if(8578932 '<' local__initialCapacity[9286478] 1)
      {
        (8578938 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9419079] _fn[9419081])
      }
      const-val call_tmp[8578953]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8578955 'move' call_tmp[8578953](8578958 call chpl_bitops_clz_64[1942612](8578950 'cast' uint(64)[86] local__initialCapacity[9286478] _ln[9419079] _fn[9419081])))
      const-val call_tmp[8578967]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8578969 'move' call_tmp[8578967](8578971 '-' 63(8578964 'cast' int(64)[10] call_tmp[8578953] _ln[9419079] _fn[9419081])))
      if(8578981 '==' 1 0)
      {
        (8578987 call halt[88131] "Attempt to divide by zero" _ln[9419079] _fn[9419081])
      }
      const-val call_tmp[8578990]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8578992 'move' call_tmp[8578990](8578994 '/' call_tmp[8578967] 1))
      (3865534 'move' tmp[3865492](9533087 'cast' int(64)[10](8579001 '-' call_tmp[8578913] call_tmp[8578990])))
    }
    (3865540 'move' lastArrayIdx[3865490] tmp[3865492])
    const-val call_tmp[7378170]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7378172 'move' call_tmp[7378170](7378174 '-' amount[3865421] call_tmp[7378150]))
    val req[3865552]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3865554 'move' req[3865552] call_tmp[7378170])
    val tmp[3865560]:bool[19] "dead after last mention" "temp"
    (3865570 'move' tmp[3865560](7317532 '>' call_tmp[7378170] 0))
    WhileDo[3865575] hazard
    {
      if(7379316 '>=' lastArrayIdx[3865490](9533095 'cast' int(64)[10](7445852 '-'(9231894 '.v' this[3865419] _arrayCapacity[3405534]) 1)))
      {
        val _narrays[3865654]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead at end of block" "insert auto destroy"
        (3865656 'move' _narrays[3865654](3865652 call _makeBlockArray[3833458] this[3865419](9533089 'cast' int(64)[10](8403843 '*'(9231900 '.v' this[3865419] _arrayCapacity[3405534]) 2)) _ln[9419079] _fn[9419081]))
        const-val coerce_tmp[3866184]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (3866188 'move' coerce_tmp[3866184](9231906 '.v' this[3865419] _arrayCapacity[3405534]))
        if(7321357 '<' coerce_tmp[3866184] 0)
        {
          (6093539 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9419079] _fn[9419081])
        }
        val tmp[6093556]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(7390003 '==' coerce_tmp[3866184] 0)
        {
          (6093617 'move' tmp[6093556](7444202 'cast' int(64)[10](9533097 'cast' uint(64)[86](7443032 '-'(6093593 'cast' uint(64)[86] 0 _ln[9419079] _fn[9419081]) 1)) _ln[9419079] _fn[9419081]))
        }
        {
          (6093671 'move' tmp[6093556](9533091 'cast' int(64)[10](7374519 '+' 0(9533093 'cast' int(64)[10](7447082 '-' coerce_tmp[3866184] 1)))))
        }
        const-val _ic__F1_high[9017621]:int(64)[10] "temp"
        (7455041 'move' _ic__F1_high[9017621] tmp[6093556])
        val i[6437475]:int(64)[10] "dead at end of block" "insert auto destroy"
        (6437479 'move' i[6437475] 0)
        (6437511 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6093556] 1 0 tmp[6093556] 1 _ln[9419079] _fn[9419081])
        CForLoop[6437518]
        {
          ref call_tmp[8574660]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
          (8574662 'move' call_tmp[8574660](8574664 'array_get' _narrays[3865654] i[6437475]))
          val coerce_tmp[6437606]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (6437608 'move' coerce_tmp[6437606](9231912 '.v' this[3865419] _arrays[3405526]))
          ref call_tmp[8574670]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
          (8574672 'move' call_tmp[8574670](8574674 'array_get' coerce_tmp[6437606] i[6437475]))
          (8574796 '=' call_tmp[8574660](6437622 'deref' call_tmp[8574670]))
          {
            (6437520 '=' i[6437475] 0)
          }
          {
            (6437524 '<=' i[6437475] _ic__F1_high[9017621])
          }
          {
            (6437532 '+=' i[6437475] 1)
          }
        }
        (3865756 call _freeBlockArray[3866221] this[3865419](9231918 '.v' this[3865419] _arrays[3405526])(9231924 '.v' this[3865419] _arrayCapacity[3405534]) _ln[9419079] _fn[9419081])
        (9231930 '.=' this[3865419] _arrays[3405526] _narrays[3865654])
        ref call_tmp[8574574]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
        (8574576 'move' call_tmp[8574574](8574578 '.' this[3865419] _arrayCapacity[3405534]))
        (7517990 '*=' call_tmp[8574574] 2)
      }
      (3865816 'noop')
      if(8579072 '<' local__initialCapacity[9286478] 1)
      {
        (8579078 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9419079] _fn[9419081])
      }
      const-val call_tmp[8579093]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8579095 'move' call_tmp[8579093](8579098 call chpl_bitops_clz_64[1942612](8579090 'cast' uint(64)[86] local__initialCapacity[9286478] _ln[9419079] _fn[9419081])))
      const-val call_tmp[8579107]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8579109 'move' call_tmp[8579107](8579111 '-' 63(8579104 'cast' int(64)[10] call_tmp[8579093] _ln[9419079] _fn[9419081])))
      if(8579121 '==' 1 0)
      {
        (8579127 call halt[88131] "Attempt to divide by zero" _ln[9419079] _fn[9419081])
      }
      const-val call_tmp[8579130]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8579132 'move' call_tmp[8579130](8579134 '/' call_tmp[8579107] 1))
      const-val call_tmp[8579137]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8579139 'move' call_tmp[8579137](8579141 '+' lastArrayIdx[3865490] call_tmp[8579130]))
      const-val exp[8579144]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (8579146 'move' exp[8579144] call_tmp[8579137])
      val ret[8579149]:int(64)[10] "dead after last mention" "RVV" "temp"
      if(8579155 '==' call_tmp[8579137] 0)
      {
        (8579160 'move' ret[8579149] 1)
        gotoReturn _end__expBaseHelp[8580147] _end__expBaseHelp[8580147]
      }
      if(8579170 '<' call_tmp[8579137] 0)
      {
        (8579175 'move' ret[8579149] 0)
        gotoReturn _end__expBaseHelp[8580147] _end__expBaseHelp[8580147]
      }
      val c[8579181]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8579183 'move' c[8579181] 0)
      val x[8579186]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8579188 'move' x[8579186] 2)
      val tmp[8579191]:bool[19] "dead after last mention" "temp"
      (8579200 'move' tmp[8579191](8579197 '>' 2 1))
      const-val tmp[8579219]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8579221 'move' tmp[8579219](8579223 '<' 1 0))
      WhileDo[8579203]
      {
        ref i_lhs[8579205]:_ref(int(64))[1465689] "temp"
        (8579207 'move' i_lhs[8579205](8579209 'set reference' c[8579181]))
        (8579211 '+=' i_lhs[8579205] 1)
        if tmp[8579219]
        {
          const-val call_tmp[8579228]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579230]:string[244] "temp"
          (8579233 call :[1496816] x[8579186] ret_tmp[8579230] _ln[9419079] _fn[9419081])
          (8579236 'move' call_tmp[8579228] ret_tmp[8579230])
          const-val call_tmp[8579239]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579241]:string[244] "temp"
          (8579244 call +[28065] "Cannot bitshift " call_tmp[8579228] ret_tmp[8579241] _ln[9419079] _fn[9419081])
          (8579248 'move' call_tmp[8579239] ret_tmp[8579241])
          const-val call_tmp[8579251]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579253]:string[244] "temp"
          (8579256 call +[28065] call_tmp[8579239] " by " ret_tmp[8579253] _ln[9419079] _fn[9419081])
          (8579260 'move' call_tmp[8579251] ret_tmp[8579253])
          const-val call_tmp[8579263]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579265]:string[244] "temp"
          (8579268 call :[1496816] 1 ret_tmp[8579265] _ln[9419079] _fn[9419081])
          (8579271 'move' call_tmp[8579263] ret_tmp[8579265])
          const-val call_tmp[8579274]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579276]:string[244] "temp"
          (8579279 call +[28065] call_tmp[8579251] call_tmp[8579263] ret_tmp[8579276] _ln[9419079] _fn[9419081])
          (8579283 'move' call_tmp[8579274] ret_tmp[8579276])
          const-val call_tmp[8579286]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579288]:string[244] "temp"
          (8579291 call +[28065] call_tmp[8579274] " because " ret_tmp[8579288] _ln[9419079] _fn[9419081])
          (8579295 'move' call_tmp[8579286] ret_tmp[8579288])
          const-val call_tmp[8579298]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579300]:string[244] "temp"
          (8579303 call :[1496816] 1 ret_tmp[8579300] _ln[9419079] _fn[9419081])
          (8579306 'move' call_tmp[8579298] ret_tmp[8579300])
          const-val call_tmp[8579309]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579311]:string[244] "temp"
          (8579314 call +[28065] call_tmp[8579286] call_tmp[8579298] ret_tmp[8579311] _ln[9419079] _fn[9419081])
          (8579318 'move' call_tmp[8579309] ret_tmp[8579311])
          const-val ret_tmp[8579323]:string[244] "temp"
          (8579326 call +[28065] call_tmp[8579309] " is less than 0" ret_tmp[8579323] _ln[9419079] _fn[9419081])
          const-val msg[8579333]:string[244] "dead at end of block" "insert auto destroy"
          (8579335 'move' msg[8579333] ret_tmp[8579323])
          ref i_x[8579338]:_ref(string)[1466327] "temp"
          (8579340 'move' i_x[8579338](8579342 'set reference' call_tmp[8579309]))
          (8579345 call deinit[21354] i_x[8579338] _ln[9419079] _fn[9419081])
          ref i_x[8579347]:_ref(string)[1466327] "temp"
          (8579349 'move' i_x[8579347](8579351 'set reference' call_tmp[8579298]))
          (8579354 call deinit[21354] i_x[8579347] _ln[9419079] _fn[9419081])
          ref i_x[8579356]:_ref(string)[1466327] "temp"
          (8579358 'move' i_x[8579356](8579360 'set reference' call_tmp[8579286]))
          (8579363 call deinit[21354] i_x[8579356] _ln[9419079] _fn[9419081])
          ref i_x[8579365]:_ref(string)[1466327] "temp"
          (8579367 'move' i_x[8579365](8579369 'set reference' call_tmp[8579274]))
          (8579372 call deinit[21354] i_x[8579365] _ln[9419079] _fn[9419081])
          ref i_x[8579374]:_ref(string)[1466327] "temp"
          (8579376 'move' i_x[8579374](8579378 'set reference' call_tmp[8579263]))
          (8579381 call deinit[21354] i_x[8579374] _ln[9419079] _fn[9419081])
          ref i_x[8579383]:_ref(string)[1466327] "temp"
          (8579385 'move' i_x[8579383](8579387 'set reference' call_tmp[8579251]))
          (8579390 call deinit[21354] i_x[8579383] _ln[9419079] _fn[9419081])
          ref i_x[8579392]:_ref(string)[1466327] "temp"
          (8579394 'move' i_x[8579392](8579396 'set reference' call_tmp[8579239]))
          (8579399 call deinit[21354] i_x[8579392] _ln[9419079] _fn[9419081])
          ref i_x[8579401]:_ref(string)[1466327] "temp"
          (8579403 'move' i_x[8579401](8579405 'set reference' call_tmp[8579228]))
          (8579408 call deinit[21354] i_x[8579401] _ln[9419079] _fn[9419081])
          (8579411 call boundsCheckHalt[404] msg[8579333] _ln[9419079] _fn[9419081])
          ref i_x[8579413]:_ref(string)[1466327] "temp"
          (8579415 'move' i_x[8579413](8579417 'set reference' msg[8579333]))
          (8579420 call deinit[21354] i_x[8579413] _ln[9419079] _fn[9419081])
        }
        {
          if(8579427 '>=' 1 64)
          {
            const-val call_tmp[8579432]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579434]:string[244] "temp"
            (8579437 call :[1496816] x[8579186] ret_tmp[8579434] _ln[9419079] _fn[9419081])
            (8579440 'move' call_tmp[8579432] ret_tmp[8579434])
            const-val call_tmp[8579443]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579445]:string[244] "temp"
            (8579448 call +[28065] "Cannot bitshift " call_tmp[8579432] ret_tmp[8579445] _ln[9419079] _fn[9419081])
            (8579452 'move' call_tmp[8579443] ret_tmp[8579445])
            const-val call_tmp[8579455]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579457]:string[244] "temp"
            (8579460 call +[28065] call_tmp[8579443] " by " ret_tmp[8579457] _ln[9419079] _fn[9419081])
            (8579464 'move' call_tmp[8579455] ret_tmp[8579457])
            const-val call_tmp[8579467]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579469]:string[244] "temp"
            (8579472 call :[1496816] 1 ret_tmp[8579469] _ln[9419079] _fn[9419081])
            (8579475 'move' call_tmp[8579467] ret_tmp[8579469])
            const-val call_tmp[8579478]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579480]:string[244] "temp"
            (8579483 call +[28065] call_tmp[8579455] call_tmp[8579467] ret_tmp[8579480] _ln[9419079] _fn[9419081])
            (8579487 'move' call_tmp[8579478] ret_tmp[8579480])
            const-val call_tmp[8579490]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579492]:string[244] "temp"
            (8579495 call +[28065] call_tmp[8579478] " because " ret_tmp[8579492] _ln[9419079] _fn[9419081])
            (8579499 'move' call_tmp[8579490] ret_tmp[8579492])
            const-val call_tmp[8579502]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579504]:string[244] "temp"
            (8579507 call :[1496816] 1 ret_tmp[8579504] _ln[9419079] _fn[9419081])
            (8579510 'move' call_tmp[8579502] ret_tmp[8579504])
            const-val call_tmp[8579513]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579515]:string[244] "temp"
            (8579518 call +[28065] call_tmp[8579490] call_tmp[8579502] ret_tmp[8579515] _ln[9419079] _fn[9419081])
            (8579522 'move' call_tmp[8579513] ret_tmp[8579515])
            const-val call_tmp[8579525]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8579527]:string[244] "temp"
            (8579530 call +[28065] call_tmp[8579513] " is >= the bitwidth of " ret_tmp[8579527] _ln[9419079] _fn[9419081])
            (8579534 'move' call_tmp[8579525] ret_tmp[8579527])
            const-val ret_tmp[8579539]:string[244] "temp"
            (8579542 call +[28065] call_tmp[8579525] "int(64)" ret_tmp[8579539] _ln[9419079] _fn[9419081])
            const-val msg[8579549]:string[244] "dead at end of block" "insert auto destroy"
            (8579551 'move' msg[8579549] ret_tmp[8579539])
            ref i_x[8579554]:_ref(string)[1466327] "temp"
            (8579556 'move' i_x[8579554](8579558 'set reference' call_tmp[8579525]))
            (8579561 call deinit[21354] i_x[8579554] _ln[9419079] _fn[9419081])
            ref i_x[8579563]:_ref(string)[1466327] "temp"
            (8579565 'move' i_x[8579563](8579567 'set reference' call_tmp[8579513]))
            (8579570 call deinit[21354] i_x[8579563] _ln[9419079] _fn[9419081])
            ref i_x[8579572]:_ref(string)[1466327] "temp"
            (8579574 'move' i_x[8579572](8579576 'set reference' call_tmp[8579502]))
            (8579579 call deinit[21354] i_x[8579572] _ln[9419079] _fn[9419081])
            ref i_x[8579581]:_ref(string)[1466327] "temp"
            (8579583 'move' i_x[8579581](8579585 'set reference' call_tmp[8579490]))
            (8579588 call deinit[21354] i_x[8579581] _ln[9419079] _fn[9419081])
            ref i_x[8579590]:_ref(string)[1466327] "temp"
            (8579592 'move' i_x[8579590](8579594 'set reference' call_tmp[8579478]))
            (8579597 call deinit[21354] i_x[8579590] _ln[9419079] _fn[9419081])
            ref i_x[8579599]:_ref(string)[1466327] "temp"
            (8579601 'move' i_x[8579599](8579603 'set reference' call_tmp[8579467]))
            (8579606 call deinit[21354] i_x[8579599] _ln[9419079] _fn[9419081])
            ref i_x[8579608]:_ref(string)[1466327] "temp"
            (8579610 'move' i_x[8579608](8579612 'set reference' call_tmp[8579455]))
            (8579615 call deinit[21354] i_x[8579608] _ln[9419079] _fn[9419081])
            ref i_x[8579617]:_ref(string)[1466327] "temp"
            (8579619 'move' i_x[8579617](8579621 'set reference' call_tmp[8579443]))
            (8579624 call deinit[21354] i_x[8579617] _ln[9419079] _fn[9419081])
            ref i_x[8579626]:_ref(string)[1466327] "temp"
            (8579628 'move' i_x[8579626](8579630 'set reference' call_tmp[8579432]))
            (8579633 call deinit[21354] i_x[8579626] _ln[9419079] _fn[9419081])
            (8579636 call boundsCheckHalt[404] msg[8579549] _ln[9419079] _fn[9419081])
            ref i_x[8579638]:_ref(string)[1466327] "temp"
            (8579640 'move' i_x[8579638](8579642 'set reference' msg[8579549]))
            (8579645 call deinit[21354] i_x[8579638] _ln[9419079] _fn[9419081])
          }
        }
        const-val call_tmp[8579649]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8579651 'move' call_tmp[8579649](8579653 '>>' x[8579186] 1))
        (8579656 '=' x[8579186] call_tmp[8579649])
        (8579666 'move' tmp[8579191](8579663 '>' call_tmp[8579649] 1))
        tmp[8579191]
      }
      const-val call_tmp[8579676]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8579678 'move' call_tmp[8579676](8579680 '*' c[8579181](9533101 'cast' int(64)[10](8579673 '-' exp[8579144] 1))))
      if(8579697 '<' call_tmp[8579676] 0)
      {
        const-val call_tmp[8579702]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579704]:string[244] "temp"
        (8579707 call :[1496816] 2 ret_tmp[8579704] _ln[9419079] _fn[9419081])
        (8579710 'move' call_tmp[8579702] ret_tmp[8579704])
        const-val call_tmp[8579713]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579715]:string[244] "temp"
        (8579718 call +[28065] "Cannot bitshift " call_tmp[8579702] ret_tmp[8579715] _ln[9419079] _fn[9419081])
        (8579722 'move' call_tmp[8579713] ret_tmp[8579715])
        const-val call_tmp[8579725]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579727]:string[244] "temp"
        (8579730 call +[28065] call_tmp[8579713] " by " ret_tmp[8579727] _ln[9419079] _fn[9419081])
        (8579734 'move' call_tmp[8579725] ret_tmp[8579727])
        const-val call_tmp[8579737]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579739]:string[244] "temp"
        (8579742 call :[1496816] call_tmp[8579676] ret_tmp[8579739] _ln[9419079] _fn[9419081])
        (8579745 'move' call_tmp[8579737] ret_tmp[8579739])
        const-val call_tmp[8579748]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579750]:string[244] "temp"
        (8579753 call +[28065] call_tmp[8579725] call_tmp[8579737] ret_tmp[8579750] _ln[9419079] _fn[9419081])
        (8579757 'move' call_tmp[8579748] ret_tmp[8579750])
        const-val call_tmp[8579760]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579762]:string[244] "temp"
        (8579765 call +[28065] call_tmp[8579748] " because " ret_tmp[8579762] _ln[9419079] _fn[9419081])
        (8579769 'move' call_tmp[8579760] ret_tmp[8579762])
        const-val call_tmp[8579772]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579774]:string[244] "temp"
        (8579777 call :[1496816] call_tmp[8579676] ret_tmp[8579774] _ln[9419079] _fn[9419081])
        (8579780 'move' call_tmp[8579772] ret_tmp[8579774])
        const-val call_tmp[8579783]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8579785]:string[244] "temp"
        (8579788 call +[28065] call_tmp[8579760] call_tmp[8579772] ret_tmp[8579785] _ln[9419079] _fn[9419081])
        (8579792 'move' call_tmp[8579783] ret_tmp[8579785])
        const-val ret_tmp[8579797]:string[244] "temp"
        (8579800 call +[28065] call_tmp[8579783] " is less than 0" ret_tmp[8579797] _ln[9419079] _fn[9419081])
        const-val msg[8579807]:string[244] "dead at end of block" "insert auto destroy"
        (8579809 'move' msg[8579807] ret_tmp[8579797])
        ref i_x[8579812]:_ref(string)[1466327] "temp"
        (8579814 'move' i_x[8579812](8579816 'set reference' call_tmp[8579783]))
        (8579819 call deinit[21354] i_x[8579812] _ln[9419079] _fn[9419081])
        ref i_x[8579821]:_ref(string)[1466327] "temp"
        (8579823 'move' i_x[8579821](8579825 'set reference' call_tmp[8579772]))
        (8579828 call deinit[21354] i_x[8579821] _ln[9419079] _fn[9419081])
        ref i_x[8579830]:_ref(string)[1466327] "temp"
        (8579832 'move' i_x[8579830](8579834 'set reference' call_tmp[8579760]))
        (8579837 call deinit[21354] i_x[8579830] _ln[9419079] _fn[9419081])
        ref i_x[8579839]:_ref(string)[1466327] "temp"
        (8579841 'move' i_x[8579839](8579843 'set reference' call_tmp[8579748]))
        (8579846 call deinit[21354] i_x[8579839] _ln[9419079] _fn[9419081])
        ref i_x[8579848]:_ref(string)[1466327] "temp"
        (8579850 'move' i_x[8579848](8579852 'set reference' call_tmp[8579737]))
        (8579855 call deinit[21354] i_x[8579848] _ln[9419079] _fn[9419081])
        ref i_x[8579857]:_ref(string)[1466327] "temp"
        (8579859 'move' i_x[8579857](8579861 'set reference' call_tmp[8579725]))
        (8579864 call deinit[21354] i_x[8579857] _ln[9419079] _fn[9419081])
        ref i_x[8579866]:_ref(string)[1466327] "temp"
        (8579868 'move' i_x[8579866](8579870 'set reference' call_tmp[8579713]))
        (8579873 call deinit[21354] i_x[8579866] _ln[9419079] _fn[9419081])
        ref i_x[8579875]:_ref(string)[1466327] "temp"
        (8579877 'move' i_x[8579875](8579879 'set reference' call_tmp[8579702]))
        (8579882 call deinit[21354] i_x[8579875] _ln[9419079] _fn[9419081])
        (8579885 call boundsCheckHalt[404] msg[8579807] _ln[9419079] _fn[9419081])
        ref i_x[8579887]:_ref(string)[1466327] "temp"
        (8579889 'move' i_x[8579887](8579891 'set reference' msg[8579807]))
        (8579894 call deinit[21354] i_x[8579887] _ln[9419079] _fn[9419081])
      }
      {
        if(8579901 '>=' call_tmp[8579676] 64)
        {
          const-val call_tmp[8579906]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579908]:string[244] "temp"
          (8579911 call :[1496816] 2 ret_tmp[8579908] _ln[9419079] _fn[9419081])
          (8579914 'move' call_tmp[8579906] ret_tmp[8579908])
          const-val call_tmp[8579917]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579919]:string[244] "temp"
          (8579922 call +[28065] "Cannot bitshift " call_tmp[8579906] ret_tmp[8579919] _ln[9419079] _fn[9419081])
          (8579926 'move' call_tmp[8579917] ret_tmp[8579919])
          const-val call_tmp[8579929]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579931]:string[244] "temp"
          (8579934 call +[28065] call_tmp[8579917] " by " ret_tmp[8579931] _ln[9419079] _fn[9419081])
          (8579938 'move' call_tmp[8579929] ret_tmp[8579931])
          const-val call_tmp[8579941]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579943]:string[244] "temp"
          (8579946 call :[1496816] call_tmp[8579676] ret_tmp[8579943] _ln[9419079] _fn[9419081])
          (8579949 'move' call_tmp[8579941] ret_tmp[8579943])
          const-val call_tmp[8579952]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579954]:string[244] "temp"
          (8579957 call +[28065] call_tmp[8579929] call_tmp[8579941] ret_tmp[8579954] _ln[9419079] _fn[9419081])
          (8579961 'move' call_tmp[8579952] ret_tmp[8579954])
          const-val call_tmp[8579964]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579966]:string[244] "temp"
          (8579969 call +[28065] call_tmp[8579952] " because " ret_tmp[8579966] _ln[9419079] _fn[9419081])
          (8579973 'move' call_tmp[8579964] ret_tmp[8579966])
          const-val call_tmp[8579976]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579978]:string[244] "temp"
          (8579981 call :[1496816] call_tmp[8579676] ret_tmp[8579978] _ln[9419079] _fn[9419081])
          (8579984 'move' call_tmp[8579976] ret_tmp[8579978])
          const-val call_tmp[8579987]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8579989]:string[244] "temp"
          (8579992 call +[28065] call_tmp[8579964] call_tmp[8579976] ret_tmp[8579989] _ln[9419079] _fn[9419081])
          (8579996 'move' call_tmp[8579987] ret_tmp[8579989])
          const-val call_tmp[8579999]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580001]:string[244] "temp"
          (8580004 call +[28065] call_tmp[8579987] " is >= the bitwidth of " ret_tmp[8580001] _ln[9419079] _fn[9419081])
          (8580008 'move' call_tmp[8579999] ret_tmp[8580001])
          const-val ret_tmp[8580013]:string[244] "temp"
          (8580016 call +[28065] call_tmp[8579999] "int(64)" ret_tmp[8580013] _ln[9419079] _fn[9419081])
          const-val msg[8580023]:string[244] "dead at end of block" "insert auto destroy"
          (8580025 'move' msg[8580023] ret_tmp[8580013])
          ref i_x[8580028]:_ref(string)[1466327] "temp"
          (8580030 'move' i_x[8580028](8580032 'set reference' call_tmp[8579999]))
          (8580035 call deinit[21354] i_x[8580028] _ln[9419079] _fn[9419081])
          ref i_x[8580037]:_ref(string)[1466327] "temp"
          (8580039 'move' i_x[8580037](8580041 'set reference' call_tmp[8579987]))
          (8580044 call deinit[21354] i_x[8580037] _ln[9419079] _fn[9419081])
          ref i_x[8580046]:_ref(string)[1466327] "temp"
          (8580048 'move' i_x[8580046](8580050 'set reference' call_tmp[8579976]))
          (8580053 call deinit[21354] i_x[8580046] _ln[9419079] _fn[9419081])
          ref i_x[8580055]:_ref(string)[1466327] "temp"
          (8580057 'move' i_x[8580055](8580059 'set reference' call_tmp[8579964]))
          (8580062 call deinit[21354] i_x[8580055] _ln[9419079] _fn[9419081])
          ref i_x[8580064]:_ref(string)[1466327] "temp"
          (8580066 'move' i_x[8580064](8580068 'set reference' call_tmp[8579952]))
          (8580071 call deinit[21354] i_x[8580064] _ln[9419079] _fn[9419081])
          ref i_x[8580073]:_ref(string)[1466327] "temp"
          (8580075 'move' i_x[8580073](8580077 'set reference' call_tmp[8579941]))
          (8580080 call deinit[21354] i_x[8580073] _ln[9419079] _fn[9419081])
          ref i_x[8580082]:_ref(string)[1466327] "temp"
          (8580084 'move' i_x[8580082](8580086 'set reference' call_tmp[8579929]))
          (8580089 call deinit[21354] i_x[8580082] _ln[9419079] _fn[9419081])
          ref i_x[8580091]:_ref(string)[1466327] "temp"
          (8580093 'move' i_x[8580091](8580095 'set reference' call_tmp[8579917]))
          (8580098 call deinit[21354] i_x[8580091] _ln[9419079] _fn[9419081])
          ref i_x[8580100]:_ref(string)[1466327] "temp"
          (8580102 'move' i_x[8580100](8580104 'set reference' call_tmp[8579906]))
          (8580107 call deinit[21354] i_x[8580100] _ln[9419079] _fn[9419081])
          (8580110 call boundsCheckHalt[404] msg[8580023] _ln[9419079] _fn[9419081])
          ref i_x[8580112]:_ref(string)[1466327] "temp"
          (8580114 'move' i_x[8580112](8580116 'set reference' msg[8580023]))
          (8580119 call deinit[21354] i_x[8580112] _ln[9419079] _fn[9419081])
        }
      }
      (8580144 'move' ret[8579149](8580141 'cast' int(64)[10](9533103 'cast' uint(64)[86](8580134 '<<'(8580127 'cast' uint(64)[86] 2 _ln[9419079] _fn[9419081]) call_tmp[8579676])) _ln[9419079] _fn[9419081]))
      label _end__expBaseHelp[8580147]
      ref i_lhs[7512809]:_ref(int(64))[1465689] "temp"
      (7512813 'move' i_lhs[7512809](7512811 'set reference' lastArrayIdx[3865490]))
      (7512821 '+=' i_lhs[7512809] 1)
      val coerce_tmp[3866518]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (3866522 'move' coerce_tmp[3866518](9231945 '.v' this[3865419] _arrays[3405526]))
      ref call_tmp[8574640]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
      (8574642 'move' call_tmp[8574640](8574644 'array_get' coerce_tmp[3866518] lastArrayIdx[3865490]))
      const-val call_tmp[8403849]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8403851 'move' call_tmp[8403849](8403853 '*' ret[8579149] 2))
      val call_tmp[3865903]:_ddata(shared Module(real(64)))[3405600] "dead after last mention" "expr temp" "maybe param" "temp"
      (3865905 'move' call_tmp[3865903](3865911 call _makeArray[3836510] this[3865419] call_tmp[8403849] _ln[9419079] _fn[9419081]))
      (8574790 '=' call_tmp[8574640] call_tmp[3865903])
      ref call_tmp[8574088]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (8574090 'move' call_tmp[8574088](8574092 '.' this[3865419] _totalCapacity[3405537]))
      (7512827 '+=' call_tmp[8574088] call_tmp[8403849])
      ref i_lhs[7517428]:_ref(int(64))[1465689] "temp"
      (7517432 'move' i_lhs[7517428](7517430 'set reference' req[3865552]))
      (7517435 '-=' i_lhs[7517428] call_tmp[8403849])
      (3865951 'move' tmp[3865560](7317547 '>' req[3865552] 0))
      tmp[3865560]
    }
    label _end__maybeAcquireMem[3865958]
    (3865960 return _void[46])
  }
  function _ref(list(string,false))[1950614]._appendByRef[3253564](ref arg this[3253568]:_ref(list(string,false))[1950614], const  ref arg x[3253575]:_ref(string)[1466327], const in arg _ln[9401843]:int(64)[10], in arg _fn[9401845]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9285583]:int(64)[10] "temp"
    (9285584 'move' local__initialCapacity[9285583] _initialCapacity[225849])
    (3253587 call _maybeAcquireMem[3253651] this[3253568] 1 _ln[9401843] _fn[9401845])
    ref dst[3253599]:_ref(string)[1466327] "dead at end of block" "ref var"
    const-val coerce_tmp[3256278]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3256282 'move' coerce_tmp[3256278](9217736 '.v' this[3253568] _size[1950567]))
    if(8413868 '>=' coerce_tmp[3256278] 0)
    {
    }
    {
    }
    const-val call_tmp[8413882]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8413884 'move' call_tmp[8413882](8413886 '+' coerce_tmp[3256278] local__initialCapacity[9285583]))
    if(8413905 '<' call_tmp[8413882] 1)
    {
      (8413911 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9401843] _fn[9401845])
    }
    const-val call_tmp[8413926]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8413928 'move' call_tmp[8413926](8413931 call chpl_bitops_clz_64[1942612](8413923 'cast' uint(64)[86] call_tmp[8413882] _ln[9401843] _fn[9401845])))
    const-val call_tmp[8413940]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8413942 'move' call_tmp[8413940](8413944 '-' 63(8413937 'cast' int(64)[10] call_tmp[8413926] _ln[9401843] _fn[9401845])))
    if(8413954 '==' 1 0)
    {
      (8413960 call halt[88131] "Attempt to divide by zero" _ln[9401843] _fn[9401845])
    }
    const-val call_tmp[8413963]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8413965 'move' call_tmp[8413963](8413967 '/' call_tmp[8413940] 1))
    if(8413982 '<' local__initialCapacity[9285583] 1)
    {
      (8413988 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9401843] _fn[9401845])
    }
    const-val call_tmp[8414003]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414005 'move' call_tmp[8414003](8414008 call chpl_bitops_clz_64[1942612](8414000 'cast' uint(64)[86] local__initialCapacity[9285583] _ln[9401843] _fn[9401845])))
    const-val call_tmp[8414017]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414019 'move' call_tmp[8414017](8414021 '-' 63(8414014 'cast' int(64)[10] call_tmp[8414003] _ln[9401843] _fn[9401845])))
    if(8414031 '==' 1 0)
    {
      (8414037 call halt[88131] "Attempt to divide by zero" _ln[9401843] _fn[9401845])
    }
    const-val call_tmp[8414040]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414042 'move' call_tmp[8414040](8414044 '/' call_tmp[8414017] 1))
    const-val call_tmp[8414047]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414049 'move' call_tmp[8414047](8414051 '-' call_tmp[8413963] call_tmp[8414040]))
    const-val call_tmp[8414059]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414061 'move' call_tmp[8414059](8414063 '+' coerce_tmp[3256278] local__initialCapacity[9285583]))
    if(8414082 '<' call_tmp[8414059] 1)
    {
      (8414088 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9401843] _fn[9401845])
    }
    const-val call_tmp[8414103]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414105 'move' call_tmp[8414103](8414108 call chpl_bitops_clz_64[1942612](8414100 'cast' uint(64)[86] call_tmp[8414059] _ln[9401843] _fn[9401845])))
    const-val call_tmp[8414117]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414119 'move' call_tmp[8414117](8414121 '-' 63(8414114 'cast' int(64)[10] call_tmp[8414103] _ln[9401843] _fn[9401845])))
    if(8414131 '==' 1 0)
    {
      (8414137 call halt[88131] "Attempt to divide by zero" _ln[9401843] _fn[9401845])
    }
    const-val call_tmp[8414140]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414142 'move' call_tmp[8414140](8414144 '/' call_tmp[8414117] 1))
    if(8414159 '<' call_tmp[8414140] 0)
    {
      const-val call_tmp[8414164]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414166]:string[244] "temp"
      (8414169 call :[1496816] 1 ret_tmp[8414166] _ln[9401843] _fn[9401845])
      (8414172 'move' call_tmp[8414164] ret_tmp[8414166])
      const-val call_tmp[8414175]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414177]:string[244] "temp"
      (8414180 call +[28065] "Cannot bitshift " call_tmp[8414164] ret_tmp[8414177] _ln[9401843] _fn[9401845])
      (8414184 'move' call_tmp[8414175] ret_tmp[8414177])
      const-val call_tmp[8414187]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414189]:string[244] "temp"
      (8414192 call +[28065] call_tmp[8414175] " by " ret_tmp[8414189] _ln[9401843] _fn[9401845])
      (8414196 'move' call_tmp[8414187] ret_tmp[8414189])
      const-val call_tmp[8414199]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414201]:string[244] "temp"
      (8414204 call :[1496816] call_tmp[8414140] ret_tmp[8414201] _ln[9401843] _fn[9401845])
      (8414207 'move' call_tmp[8414199] ret_tmp[8414201])
      const-val call_tmp[8414210]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414212]:string[244] "temp"
      (8414215 call +[28065] call_tmp[8414187] call_tmp[8414199] ret_tmp[8414212] _ln[9401843] _fn[9401845])
      (8414219 'move' call_tmp[8414210] ret_tmp[8414212])
      const-val call_tmp[8414222]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414224]:string[244] "temp"
      (8414227 call +[28065] call_tmp[8414210] " because " ret_tmp[8414224] _ln[9401843] _fn[9401845])
      (8414231 'move' call_tmp[8414222] ret_tmp[8414224])
      const-val call_tmp[8414234]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414236]:string[244] "temp"
      (8414239 call :[1496816] call_tmp[8414140] ret_tmp[8414236] _ln[9401843] _fn[9401845])
      (8414242 'move' call_tmp[8414234] ret_tmp[8414236])
      const-val call_tmp[8414245]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414247]:string[244] "temp"
      (8414250 call +[28065] call_tmp[8414222] call_tmp[8414234] ret_tmp[8414247] _ln[9401843] _fn[9401845])
      (8414254 'move' call_tmp[8414245] ret_tmp[8414247])
      const-val ret_tmp[8414259]:string[244] "temp"
      (8414262 call +[28065] call_tmp[8414245] " is less than 0" ret_tmp[8414259] _ln[9401843] _fn[9401845])
      const-val msg[8414269]:string[244] "dead at end of block" "insert auto destroy"
      (8414271 'move' msg[8414269] ret_tmp[8414259])
      ref i_x[8414274]:_ref(string)[1466327] "temp"
      (8414276 'move' i_x[8414274](8414278 'set reference' call_tmp[8414245]))
      (8414281 call deinit[21354] i_x[8414274] _ln[9401843] _fn[9401845])
      ref i_x[8414283]:_ref(string)[1466327] "temp"
      (8414285 'move' i_x[8414283](8414287 'set reference' call_tmp[8414234]))
      (8414290 call deinit[21354] i_x[8414283] _ln[9401843] _fn[9401845])
      ref i_x[8414292]:_ref(string)[1466327] "temp"
      (8414294 'move' i_x[8414292](8414296 'set reference' call_tmp[8414222]))
      (8414299 call deinit[21354] i_x[8414292] _ln[9401843] _fn[9401845])
      ref i_x[8414301]:_ref(string)[1466327] "temp"
      (8414303 'move' i_x[8414301](8414305 'set reference' call_tmp[8414210]))
      (8414308 call deinit[21354] i_x[8414301] _ln[9401843] _fn[9401845])
      ref i_x[8414310]:_ref(string)[1466327] "temp"
      (8414312 'move' i_x[8414310](8414314 'set reference' call_tmp[8414199]))
      (8414317 call deinit[21354] i_x[8414310] _ln[9401843] _fn[9401845])
      ref i_x[8414319]:_ref(string)[1466327] "temp"
      (8414321 'move' i_x[8414319](8414323 'set reference' call_tmp[8414187]))
      (8414326 call deinit[21354] i_x[8414319] _ln[9401843] _fn[9401845])
      ref i_x[8414328]:_ref(string)[1466327] "temp"
      (8414330 'move' i_x[8414328](8414332 'set reference' call_tmp[8414175]))
      (8414335 call deinit[21354] i_x[8414328] _ln[9401843] _fn[9401845])
      ref i_x[8414337]:_ref(string)[1466327] "temp"
      (8414339 'move' i_x[8414337](8414341 'set reference' call_tmp[8414164]))
      (8414344 call deinit[21354] i_x[8414337] _ln[9401843] _fn[9401845])
      (8414347 call boundsCheckHalt[404] msg[8414269] _ln[9401843] _fn[9401845])
      ref i_x[8414349]:_ref(string)[1466327] "temp"
      (8414351 'move' i_x[8414349](8414353 'set reference' msg[8414269]))
      (8414356 call deinit[21354] i_x[8414349] _ln[9401843] _fn[9401845])
    }
    {
      if(8414363 '>=' call_tmp[8414140] 64)
      {
        const-val call_tmp[8414368]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414370]:string[244] "temp"
        (8414373 call :[1496816] 1 ret_tmp[8414370] _ln[9401843] _fn[9401845])
        (8414376 'move' call_tmp[8414368] ret_tmp[8414370])
        const-val call_tmp[8414379]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414381]:string[244] "temp"
        (8414384 call +[28065] "Cannot bitshift " call_tmp[8414368] ret_tmp[8414381] _ln[9401843] _fn[9401845])
        (8414388 'move' call_tmp[8414379] ret_tmp[8414381])
        const-val call_tmp[8414391]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414393]:string[244] "temp"
        (8414396 call +[28065] call_tmp[8414379] " by " ret_tmp[8414393] _ln[9401843] _fn[9401845])
        (8414400 'move' call_tmp[8414391] ret_tmp[8414393])
        const-val call_tmp[8414403]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414405]:string[244] "temp"
        (8414408 call :[1496816] call_tmp[8414140] ret_tmp[8414405] _ln[9401843] _fn[9401845])
        (8414411 'move' call_tmp[8414403] ret_tmp[8414405])
        const-val call_tmp[8414414]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414416]:string[244] "temp"
        (8414419 call +[28065] call_tmp[8414391] call_tmp[8414403] ret_tmp[8414416] _ln[9401843] _fn[9401845])
        (8414423 'move' call_tmp[8414414] ret_tmp[8414416])
        const-val call_tmp[8414426]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414428]:string[244] "temp"
        (8414431 call +[28065] call_tmp[8414414] " because " ret_tmp[8414428] _ln[9401843] _fn[9401845])
        (8414435 'move' call_tmp[8414426] ret_tmp[8414428])
        const-val call_tmp[8414438]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414440]:string[244] "temp"
        (8414443 call :[1496816] call_tmp[8414140] ret_tmp[8414440] _ln[9401843] _fn[9401845])
        (8414446 'move' call_tmp[8414438] ret_tmp[8414440])
        const-val call_tmp[8414449]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414451]:string[244] "temp"
        (8414454 call +[28065] call_tmp[8414426] call_tmp[8414438] ret_tmp[8414451] _ln[9401843] _fn[9401845])
        (8414458 'move' call_tmp[8414449] ret_tmp[8414451])
        const-val call_tmp[8414461]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8414463]:string[244] "temp"
        (8414466 call +[28065] call_tmp[8414449] " is >= the bitwidth of " ret_tmp[8414463] _ln[9401843] _fn[9401845])
        (8414470 'move' call_tmp[8414461] ret_tmp[8414463])
        const-val ret_tmp[8414475]:string[244] "temp"
        (8414478 call +[28065] call_tmp[8414461] "int(64)" ret_tmp[8414475] _ln[9401843] _fn[9401845])
        const-val msg[8414485]:string[244] "dead at end of block" "insert auto destroy"
        (8414487 'move' msg[8414485] ret_tmp[8414475])
        ref i_x[8414490]:_ref(string)[1466327] "temp"
        (8414492 'move' i_x[8414490](8414494 'set reference' call_tmp[8414461]))
        (8414497 call deinit[21354] i_x[8414490] _ln[9401843] _fn[9401845])
        ref i_x[8414499]:_ref(string)[1466327] "temp"
        (8414501 'move' i_x[8414499](8414503 'set reference' call_tmp[8414449]))
        (8414506 call deinit[21354] i_x[8414499] _ln[9401843] _fn[9401845])
        ref i_x[8414508]:_ref(string)[1466327] "temp"
        (8414510 'move' i_x[8414508](8414512 'set reference' call_tmp[8414438]))
        (8414515 call deinit[21354] i_x[8414508] _ln[9401843] _fn[9401845])
        ref i_x[8414517]:_ref(string)[1466327] "temp"
        (8414519 'move' i_x[8414517](8414521 'set reference' call_tmp[8414426]))
        (8414524 call deinit[21354] i_x[8414517] _ln[9401843] _fn[9401845])
        ref i_x[8414526]:_ref(string)[1466327] "temp"
        (8414528 'move' i_x[8414526](8414530 'set reference' call_tmp[8414414]))
        (8414533 call deinit[21354] i_x[8414526] _ln[9401843] _fn[9401845])
        ref i_x[8414535]:_ref(string)[1466327] "temp"
        (8414537 'move' i_x[8414535](8414539 'set reference' call_tmp[8414403]))
        (8414542 call deinit[21354] i_x[8414535] _ln[9401843] _fn[9401845])
        ref i_x[8414544]:_ref(string)[1466327] "temp"
        (8414546 'move' i_x[8414544](8414548 'set reference' call_tmp[8414391]))
        (8414551 call deinit[21354] i_x[8414544] _ln[9401843] _fn[9401845])
        ref i_x[8414553]:_ref(string)[1466327] "temp"
        (8414555 'move' i_x[8414553](8414557 'set reference' call_tmp[8414379]))
        (8414560 call deinit[21354] i_x[8414553] _ln[9401843] _fn[9401845])
        ref i_x[8414562]:_ref(string)[1466327] "temp"
        (8414564 'move' i_x[8414562](8414566 'set reference' call_tmp[8414368]))
        (8414569 call deinit[21354] i_x[8414562] _ln[9401843] _fn[9401845])
        (8414572 call boundsCheckHalt[404] msg[8414485] _ln[9401843] _fn[9401845])
        ref i_x[8414574]:_ref(string)[1466327] "temp"
        (8414576 'move' i_x[8414574](8414578 'set reference' msg[8414485]))
        (8414581 call deinit[21354] i_x[8414574] _ln[9401843] _fn[9401845])
      }
    }
    const-val call_tmp[8414606]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414608 'move' call_tmp[8414606](8414610 '^' call_tmp[8414059](8414603 'cast' int(64)[10](9531927 'cast' uint(64)[86](8414596 '<<'(8414589 'cast' uint(64)[86] 1 _ln[9401843] _fn[9401845]) call_tmp[8414140])) _ln[9401843] _fn[9401845])))
    val coerce_tmp[8414613]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8414615 'move' coerce_tmp[8414613](8414617 '.v' this[3253568] _arrays[1950579]))
    ref call_tmp[8414620]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
    (8414622 'move' call_tmp[8414620](8414624 'array_get' coerce_tmp[8414613] call_tmp[8414047]))
    const array[8414627]:_ddata(string)[1950629] "dead at end of block" "const" "insert auto destroy"
    (8414635 '=' array[8414627](8414633 'deref' call_tmp[8414620]))
    (8414638 'noop')
    ref call_tmp[8414639]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (8414641 'move' call_tmp[8414639](8414643 'array_get' array[8414627] call_tmp[8414606]))
    (3253621 'move' dst[3253599] call_tmp[8414639])
    (8418586 '=' dst[3253599] x[3253575])
    ref call_tmp[7636350]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (7636352 'move' call_tmp[7636350](7636354 '.' this[3253568] _size[1950567]))
    (7512600 '+=' call_tmp[7636350] 1)
    (3253648 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._appendByRef[3409017](ref arg this[3409021]:_ref(list(shared Module(real(32)),false))[1955585], const  ref arg x[3409028]:_ref(shared Module(real(32)))[1955047], const in arg _ln[9404489]:int(64)[10], in arg _fn[9404491]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9285735]:int(64)[10] "temp"
    (9285736 'move' local__initialCapacity[9285735] _initialCapacity[225849])
    (3409040 call _maybeAcquireMem[3409104] this[3409021] 1 _ln[9404489] _fn[9404491])
    ref dst[3409052]:_ref(shared Module(real(32)))[1955047] "dead at end of block" "ref var"
    const-val coerce_tmp[3410472]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3410476 'move' coerce_tmp[3410472](9222179 '.v' this[3409021] _size[1955538]))
    if(8468457 '>=' coerce_tmp[3410472] 0)
    {
    }
    {
    }
    const-val call_tmp[8468471]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468473 'move' call_tmp[8468471](8468475 '+' coerce_tmp[3410472] local__initialCapacity[9285735]))
    if(8468494 '<' call_tmp[8468471] 1)
    {
      (8468500 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404489] _fn[9404491])
    }
    const-val call_tmp[8468515]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468517 'move' call_tmp[8468515](8468520 call chpl_bitops_clz_64[1942612](8468512 'cast' uint(64)[86] call_tmp[8468471] _ln[9404489] _fn[9404491])))
    const-val call_tmp[8468529]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468531 'move' call_tmp[8468529](8468533 '-' 63(8468526 'cast' int(64)[10] call_tmp[8468515] _ln[9404489] _fn[9404491])))
    if(8468543 '==' 1 0)
    {
      (8468549 call halt[88131] "Attempt to divide by zero" _ln[9404489] _fn[9404491])
    }
    const-val call_tmp[8468552]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468554 'move' call_tmp[8468552](8468556 '/' call_tmp[8468529] 1))
    if(8468571 '<' local__initialCapacity[9285735] 1)
    {
      (8468577 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404489] _fn[9404491])
    }
    const-val call_tmp[8468592]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468594 'move' call_tmp[8468592](8468597 call chpl_bitops_clz_64[1942612](8468589 'cast' uint(64)[86] local__initialCapacity[9285735] _ln[9404489] _fn[9404491])))
    const-val call_tmp[8468606]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468608 'move' call_tmp[8468606](8468610 '-' 63(8468603 'cast' int(64)[10] call_tmp[8468592] _ln[9404489] _fn[9404491])))
    if(8468620 '==' 1 0)
    {
      (8468626 call halt[88131] "Attempt to divide by zero" _ln[9404489] _fn[9404491])
    }
    const-val call_tmp[8468629]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468631 'move' call_tmp[8468629](8468633 '/' call_tmp[8468606] 1))
    const-val call_tmp[8468636]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468638 'move' call_tmp[8468636](8468640 '-' call_tmp[8468552] call_tmp[8468629]))
    const-val call_tmp[8468648]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468650 'move' call_tmp[8468648](8468652 '+' coerce_tmp[3410472] local__initialCapacity[9285735]))
    if(8468671 '<' call_tmp[8468648] 1)
    {
      (8468677 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404489] _fn[9404491])
    }
    const-val call_tmp[8468692]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468694 'move' call_tmp[8468692](8468697 call chpl_bitops_clz_64[1942612](8468689 'cast' uint(64)[86] call_tmp[8468648] _ln[9404489] _fn[9404491])))
    const-val call_tmp[8468706]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468708 'move' call_tmp[8468706](8468710 '-' 63(8468703 'cast' int(64)[10] call_tmp[8468692] _ln[9404489] _fn[9404491])))
    if(8468720 '==' 1 0)
    {
      (8468726 call halt[88131] "Attempt to divide by zero" _ln[9404489] _fn[9404491])
    }
    const-val call_tmp[8468729]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8468731 'move' call_tmp[8468729](8468733 '/' call_tmp[8468706] 1))
    if(8468748 '<' call_tmp[8468729] 0)
    {
      const-val call_tmp[8468753]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468755]:string[244] "temp"
      (8468758 call :[1496816] 1 ret_tmp[8468755] _ln[9404489] _fn[9404491])
      (8468761 'move' call_tmp[8468753] ret_tmp[8468755])
      const-val call_tmp[8468764]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468766]:string[244] "temp"
      (8468769 call +[28065] "Cannot bitshift " call_tmp[8468753] ret_tmp[8468766] _ln[9404489] _fn[9404491])
      (8468773 'move' call_tmp[8468764] ret_tmp[8468766])
      const-val call_tmp[8468776]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468778]:string[244] "temp"
      (8468781 call +[28065] call_tmp[8468764] " by " ret_tmp[8468778] _ln[9404489] _fn[9404491])
      (8468785 'move' call_tmp[8468776] ret_tmp[8468778])
      const-val call_tmp[8468788]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468790]:string[244] "temp"
      (8468793 call :[1496816] call_tmp[8468729] ret_tmp[8468790] _ln[9404489] _fn[9404491])
      (8468796 'move' call_tmp[8468788] ret_tmp[8468790])
      const-val call_tmp[8468799]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468801]:string[244] "temp"
      (8468804 call +[28065] call_tmp[8468776] call_tmp[8468788] ret_tmp[8468801] _ln[9404489] _fn[9404491])
      (8468808 'move' call_tmp[8468799] ret_tmp[8468801])
      const-val call_tmp[8468811]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468813]:string[244] "temp"
      (8468816 call +[28065] call_tmp[8468799] " because " ret_tmp[8468813] _ln[9404489] _fn[9404491])
      (8468820 'move' call_tmp[8468811] ret_tmp[8468813])
      const-val call_tmp[8468823]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468825]:string[244] "temp"
      (8468828 call :[1496816] call_tmp[8468729] ret_tmp[8468825] _ln[9404489] _fn[9404491])
      (8468831 'move' call_tmp[8468823] ret_tmp[8468825])
      const-val call_tmp[8468834]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8468836]:string[244] "temp"
      (8468839 call +[28065] call_tmp[8468811] call_tmp[8468823] ret_tmp[8468836] _ln[9404489] _fn[9404491])
      (8468843 'move' call_tmp[8468834] ret_tmp[8468836])
      const-val ret_tmp[8468848]:string[244] "temp"
      (8468851 call +[28065] call_tmp[8468834] " is less than 0" ret_tmp[8468848] _ln[9404489] _fn[9404491])
      const-val msg[8468858]:string[244] "dead at end of block" "insert auto destroy"
      (8468860 'move' msg[8468858] ret_tmp[8468848])
      ref i_x[8468863]:_ref(string)[1466327] "temp"
      (8468865 'move' i_x[8468863](8468867 'set reference' call_tmp[8468834]))
      (8468870 call deinit[21354] i_x[8468863] _ln[9404489] _fn[9404491])
      ref i_x[8468872]:_ref(string)[1466327] "temp"
      (8468874 'move' i_x[8468872](8468876 'set reference' call_tmp[8468823]))
      (8468879 call deinit[21354] i_x[8468872] _ln[9404489] _fn[9404491])
      ref i_x[8468881]:_ref(string)[1466327] "temp"
      (8468883 'move' i_x[8468881](8468885 'set reference' call_tmp[8468811]))
      (8468888 call deinit[21354] i_x[8468881] _ln[9404489] _fn[9404491])
      ref i_x[8468890]:_ref(string)[1466327] "temp"
      (8468892 'move' i_x[8468890](8468894 'set reference' call_tmp[8468799]))
      (8468897 call deinit[21354] i_x[8468890] _ln[9404489] _fn[9404491])
      ref i_x[8468899]:_ref(string)[1466327] "temp"
      (8468901 'move' i_x[8468899](8468903 'set reference' call_tmp[8468788]))
      (8468906 call deinit[21354] i_x[8468899] _ln[9404489] _fn[9404491])
      ref i_x[8468908]:_ref(string)[1466327] "temp"
      (8468910 'move' i_x[8468908](8468912 'set reference' call_tmp[8468776]))
      (8468915 call deinit[21354] i_x[8468908] _ln[9404489] _fn[9404491])
      ref i_x[8468917]:_ref(string)[1466327] "temp"
      (8468919 'move' i_x[8468917](8468921 'set reference' call_tmp[8468764]))
      (8468924 call deinit[21354] i_x[8468917] _ln[9404489] _fn[9404491])
      ref i_x[8468926]:_ref(string)[1466327] "temp"
      (8468928 'move' i_x[8468926](8468930 'set reference' call_tmp[8468753]))
      (8468933 call deinit[21354] i_x[8468926] _ln[9404489] _fn[9404491])
      (8468936 call boundsCheckHalt[404] msg[8468858] _ln[9404489] _fn[9404491])
      ref i_x[8468938]:_ref(string)[1466327] "temp"
      (8468940 'move' i_x[8468938](8468942 'set reference' msg[8468858]))
      (8468945 call deinit[21354] i_x[8468938] _ln[9404489] _fn[9404491])
    }
    {
      if(8468952 '>=' call_tmp[8468729] 64)
      {
        const-val call_tmp[8468957]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8468959]:string[244] "temp"
        (8468962 call :[1496816] 1 ret_tmp[8468959] _ln[9404489] _fn[9404491])
        (8468965 'move' call_tmp[8468957] ret_tmp[8468959])
        const-val call_tmp[8468968]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8468970]:string[244] "temp"
        (8468973 call +[28065] "Cannot bitshift " call_tmp[8468957] ret_tmp[8468970] _ln[9404489] _fn[9404491])
        (8468977 'move' call_tmp[8468968] ret_tmp[8468970])
        const-val call_tmp[8468980]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8468982]:string[244] "temp"
        (8468985 call +[28065] call_tmp[8468968] " by " ret_tmp[8468982] _ln[9404489] _fn[9404491])
        (8468989 'move' call_tmp[8468980] ret_tmp[8468982])
        const-val call_tmp[8468992]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8468994]:string[244] "temp"
        (8468997 call :[1496816] call_tmp[8468729] ret_tmp[8468994] _ln[9404489] _fn[9404491])
        (8469000 'move' call_tmp[8468992] ret_tmp[8468994])
        const-val call_tmp[8469003]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469005]:string[244] "temp"
        (8469008 call +[28065] call_tmp[8468980] call_tmp[8468992] ret_tmp[8469005] _ln[9404489] _fn[9404491])
        (8469012 'move' call_tmp[8469003] ret_tmp[8469005])
        const-val call_tmp[8469015]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469017]:string[244] "temp"
        (8469020 call +[28065] call_tmp[8469003] " because " ret_tmp[8469017] _ln[9404489] _fn[9404491])
        (8469024 'move' call_tmp[8469015] ret_tmp[8469017])
        const-val call_tmp[8469027]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469029]:string[244] "temp"
        (8469032 call :[1496816] call_tmp[8468729] ret_tmp[8469029] _ln[9404489] _fn[9404491])
        (8469035 'move' call_tmp[8469027] ret_tmp[8469029])
        const-val call_tmp[8469038]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469040]:string[244] "temp"
        (8469043 call +[28065] call_tmp[8469015] call_tmp[8469027] ret_tmp[8469040] _ln[9404489] _fn[9404491])
        (8469047 'move' call_tmp[8469038] ret_tmp[8469040])
        const-val call_tmp[8469050]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469052]:string[244] "temp"
        (8469055 call +[28065] call_tmp[8469038] " is >= the bitwidth of " ret_tmp[8469052] _ln[9404489] _fn[9404491])
        (8469059 'move' call_tmp[8469050] ret_tmp[8469052])
        const-val ret_tmp[8469064]:string[244] "temp"
        (8469067 call +[28065] call_tmp[8469050] "int(64)" ret_tmp[8469064] _ln[9404489] _fn[9404491])
        const-val msg[8469074]:string[244] "dead at end of block" "insert auto destroy"
        (8469076 'move' msg[8469074] ret_tmp[8469064])
        ref i_x[8469079]:_ref(string)[1466327] "temp"
        (8469081 'move' i_x[8469079](8469083 'set reference' call_tmp[8469050]))
        (8469086 call deinit[21354] i_x[8469079] _ln[9404489] _fn[9404491])
        ref i_x[8469088]:_ref(string)[1466327] "temp"
        (8469090 'move' i_x[8469088](8469092 'set reference' call_tmp[8469038]))
        (8469095 call deinit[21354] i_x[8469088] _ln[9404489] _fn[9404491])
        ref i_x[8469097]:_ref(string)[1466327] "temp"
        (8469099 'move' i_x[8469097](8469101 'set reference' call_tmp[8469027]))
        (8469104 call deinit[21354] i_x[8469097] _ln[9404489] _fn[9404491])
        ref i_x[8469106]:_ref(string)[1466327] "temp"
        (8469108 'move' i_x[8469106](8469110 'set reference' call_tmp[8469015]))
        (8469113 call deinit[21354] i_x[8469106] _ln[9404489] _fn[9404491])
        ref i_x[8469115]:_ref(string)[1466327] "temp"
        (8469117 'move' i_x[8469115](8469119 'set reference' call_tmp[8469003]))
        (8469122 call deinit[21354] i_x[8469115] _ln[9404489] _fn[9404491])
        ref i_x[8469124]:_ref(string)[1466327] "temp"
        (8469126 'move' i_x[8469124](8469128 'set reference' call_tmp[8468992]))
        (8469131 call deinit[21354] i_x[8469124] _ln[9404489] _fn[9404491])
        ref i_x[8469133]:_ref(string)[1466327] "temp"
        (8469135 'move' i_x[8469133](8469137 'set reference' call_tmp[8468980]))
        (8469140 call deinit[21354] i_x[8469133] _ln[9404489] _fn[9404491])
        ref i_x[8469142]:_ref(string)[1466327] "temp"
        (8469144 'move' i_x[8469142](8469146 'set reference' call_tmp[8468968]))
        (8469149 call deinit[21354] i_x[8469142] _ln[9404489] _fn[9404491])
        ref i_x[8469151]:_ref(string)[1466327] "temp"
        (8469153 'move' i_x[8469151](8469155 'set reference' call_tmp[8468957]))
        (8469158 call deinit[21354] i_x[8469151] _ln[9404489] _fn[9404491])
        (8469161 call boundsCheckHalt[404] msg[8469074] _ln[9404489] _fn[9404491])
        ref i_x[8469163]:_ref(string)[1466327] "temp"
        (8469165 'move' i_x[8469163](8469167 'set reference' msg[8469074]))
        (8469170 call deinit[21354] i_x[8469163] _ln[9404489] _fn[9404491])
      }
    }
    const-val call_tmp[8469195]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469197 'move' call_tmp[8469195](8469199 '^' call_tmp[8468648](8469192 'cast' int(64)[10](9532189 'cast' uint(64)[86](8469185 '<<'(8469178 'cast' uint(64)[86] 1 _ln[9404489] _fn[9404491]) call_tmp[8468729])) _ln[9404489] _fn[9404491])))
    val coerce_tmp[8469202]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8469204 'move' coerce_tmp[8469202](8469206 '.v' this[3409021] _arrays[1955550]))
    ref call_tmp[8469209]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
    (8469211 'move' call_tmp[8469209](8469213 'array_get' coerce_tmp[8469202] call_tmp[8468636]))
    const array[8469216]:_ddata(shared Module(real(32)))[1955600] "dead at end of block" "const" "insert auto destroy"
    (8469224 '=' array[8469216](8469222 'deref' call_tmp[8469209]))
    (8469227 'noop')
    ref call_tmp[8469228]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
    (8469230 'move' call_tmp[8469228](8469232 'array_get' array[8469216] call_tmp[8469195]))
    (3409074 'move' dst[3409052] call_tmp[8469228])
    (8470814 '=' dst[3409052] x[3409028])
    ref call_tmp[7893774]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (7893776 'move' call_tmp[7893774](7893778 '.' this[3409021] _size[1955538]))
    (7512764 '+=' call_tmp[7893774] 1)
    (3409101 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._appendByRef[3865328](ref arg this[3865332]:_ref(list(shared Module(real(64)),false))[3405554], const  ref arg x[3865339]:_ref(shared Module(real(64)))[3405437], const in arg _ln[9419059]:int(64)[10], in arg _fn[9419061]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9286469]:int(64)[10] "temp"
    (9286470 'move' local__initialCapacity[9286469] _initialCapacity[225849])
    (3865351 call _maybeAcquireMem[3865415] this[3865332] 1 _ln[9419059] _fn[9419061])
    ref dst[3865363]:_ref(shared Module(real(64)))[3405437] "dead at end of block" "ref var"
    const-val coerce_tmp[3866783]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3866787 'move' coerce_tmp[3866783](9231845 '.v' this[3865332] _size[3405514]))
    if(8581893 '>=' coerce_tmp[3866783] 0)
    {
    }
    {
    }
    const-val call_tmp[8581907]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8581909 'move' call_tmp[8581907](8581911 '+' coerce_tmp[3866783] local__initialCapacity[9286469]))
    if(8581930 '<' call_tmp[8581907] 1)
    {
      (8581936 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9419059] _fn[9419061])
    }
    const-val call_tmp[8581951]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8581953 'move' call_tmp[8581951](8581956 call chpl_bitops_clz_64[1942612](8581948 'cast' uint(64)[86] call_tmp[8581907] _ln[9419059] _fn[9419061])))
    const-val call_tmp[8581965]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8581967 'move' call_tmp[8581965](8581969 '-' 63(8581962 'cast' int(64)[10] call_tmp[8581951] _ln[9419059] _fn[9419061])))
    if(8581979 '==' 1 0)
    {
      (8581985 call halt[88131] "Attempt to divide by zero" _ln[9419059] _fn[9419061])
    }
    const-val call_tmp[8581988]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8581990 'move' call_tmp[8581988](8581992 '/' call_tmp[8581965] 1))
    if(8582007 '<' local__initialCapacity[9286469] 1)
    {
      (8582013 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9419059] _fn[9419061])
    }
    const-val call_tmp[8582028]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582030 'move' call_tmp[8582028](8582033 call chpl_bitops_clz_64[1942612](8582025 'cast' uint(64)[86] local__initialCapacity[9286469] _ln[9419059] _fn[9419061])))
    const-val call_tmp[8582042]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582044 'move' call_tmp[8582042](8582046 '-' 63(8582039 'cast' int(64)[10] call_tmp[8582028] _ln[9419059] _fn[9419061])))
    if(8582056 '==' 1 0)
    {
      (8582062 call halt[88131] "Attempt to divide by zero" _ln[9419059] _fn[9419061])
    }
    const-val call_tmp[8582065]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582067 'move' call_tmp[8582065](8582069 '/' call_tmp[8582042] 1))
    const-val call_tmp[8582072]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582074 'move' call_tmp[8582072](8582076 '-' call_tmp[8581988] call_tmp[8582065]))
    const-val call_tmp[8582084]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582086 'move' call_tmp[8582084](8582088 '+' coerce_tmp[3866783] local__initialCapacity[9286469]))
    if(8582107 '<' call_tmp[8582084] 1)
    {
      (8582113 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9419059] _fn[9419061])
    }
    const-val call_tmp[8582128]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582130 'move' call_tmp[8582128](8582133 call chpl_bitops_clz_64[1942612](8582125 'cast' uint(64)[86] call_tmp[8582084] _ln[9419059] _fn[9419061])))
    const-val call_tmp[8582142]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582144 'move' call_tmp[8582142](8582146 '-' 63(8582139 'cast' int(64)[10] call_tmp[8582128] _ln[9419059] _fn[9419061])))
    if(8582156 '==' 1 0)
    {
      (8582162 call halt[88131] "Attempt to divide by zero" _ln[9419059] _fn[9419061])
    }
    const-val call_tmp[8582165]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582167 'move' call_tmp[8582165](8582169 '/' call_tmp[8582142] 1))
    if(8582184 '<' call_tmp[8582165] 0)
    {
      const-val call_tmp[8582189]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582191]:string[244] "temp"
      (8582194 call :[1496816] 1 ret_tmp[8582191] _ln[9419059] _fn[9419061])
      (8582197 'move' call_tmp[8582189] ret_tmp[8582191])
      const-val call_tmp[8582200]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582202]:string[244] "temp"
      (8582205 call +[28065] "Cannot bitshift " call_tmp[8582189] ret_tmp[8582202] _ln[9419059] _fn[9419061])
      (8582209 'move' call_tmp[8582200] ret_tmp[8582202])
      const-val call_tmp[8582212]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582214]:string[244] "temp"
      (8582217 call +[28065] call_tmp[8582200] " by " ret_tmp[8582214] _ln[9419059] _fn[9419061])
      (8582221 'move' call_tmp[8582212] ret_tmp[8582214])
      const-val call_tmp[8582224]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582226]:string[244] "temp"
      (8582229 call :[1496816] call_tmp[8582165] ret_tmp[8582226] _ln[9419059] _fn[9419061])
      (8582232 'move' call_tmp[8582224] ret_tmp[8582226])
      const-val call_tmp[8582235]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582237]:string[244] "temp"
      (8582240 call +[28065] call_tmp[8582212] call_tmp[8582224] ret_tmp[8582237] _ln[9419059] _fn[9419061])
      (8582244 'move' call_tmp[8582235] ret_tmp[8582237])
      const-val call_tmp[8582247]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582249]:string[244] "temp"
      (8582252 call +[28065] call_tmp[8582235] " because " ret_tmp[8582249] _ln[9419059] _fn[9419061])
      (8582256 'move' call_tmp[8582247] ret_tmp[8582249])
      const-val call_tmp[8582259]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582261]:string[244] "temp"
      (8582264 call :[1496816] call_tmp[8582165] ret_tmp[8582261] _ln[9419059] _fn[9419061])
      (8582267 'move' call_tmp[8582259] ret_tmp[8582261])
      const-val call_tmp[8582270]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8582272]:string[244] "temp"
      (8582275 call +[28065] call_tmp[8582247] call_tmp[8582259] ret_tmp[8582272] _ln[9419059] _fn[9419061])
      (8582279 'move' call_tmp[8582270] ret_tmp[8582272])
      const-val ret_tmp[8582284]:string[244] "temp"
      (8582287 call +[28065] call_tmp[8582270] " is less than 0" ret_tmp[8582284] _ln[9419059] _fn[9419061])
      const-val msg[8582294]:string[244] "dead at end of block" "insert auto destroy"
      (8582296 'move' msg[8582294] ret_tmp[8582284])
      ref i_x[8582299]:_ref(string)[1466327] "temp"
      (8582301 'move' i_x[8582299](8582303 'set reference' call_tmp[8582270]))
      (8582306 call deinit[21354] i_x[8582299] _ln[9419059] _fn[9419061])
      ref i_x[8582308]:_ref(string)[1466327] "temp"
      (8582310 'move' i_x[8582308](8582312 'set reference' call_tmp[8582259]))
      (8582315 call deinit[21354] i_x[8582308] _ln[9419059] _fn[9419061])
      ref i_x[8582317]:_ref(string)[1466327] "temp"
      (8582319 'move' i_x[8582317](8582321 'set reference' call_tmp[8582247]))
      (8582324 call deinit[21354] i_x[8582317] _ln[9419059] _fn[9419061])
      ref i_x[8582326]:_ref(string)[1466327] "temp"
      (8582328 'move' i_x[8582326](8582330 'set reference' call_tmp[8582235]))
      (8582333 call deinit[21354] i_x[8582326] _ln[9419059] _fn[9419061])
      ref i_x[8582335]:_ref(string)[1466327] "temp"
      (8582337 'move' i_x[8582335](8582339 'set reference' call_tmp[8582224]))
      (8582342 call deinit[21354] i_x[8582335] _ln[9419059] _fn[9419061])
      ref i_x[8582344]:_ref(string)[1466327] "temp"
      (8582346 'move' i_x[8582344](8582348 'set reference' call_tmp[8582212]))
      (8582351 call deinit[21354] i_x[8582344] _ln[9419059] _fn[9419061])
      ref i_x[8582353]:_ref(string)[1466327] "temp"
      (8582355 'move' i_x[8582353](8582357 'set reference' call_tmp[8582200]))
      (8582360 call deinit[21354] i_x[8582353] _ln[9419059] _fn[9419061])
      ref i_x[8582362]:_ref(string)[1466327] "temp"
      (8582364 'move' i_x[8582362](8582366 'set reference' call_tmp[8582189]))
      (8582369 call deinit[21354] i_x[8582362] _ln[9419059] _fn[9419061])
      (8582372 call boundsCheckHalt[404] msg[8582294] _ln[9419059] _fn[9419061])
      ref i_x[8582374]:_ref(string)[1466327] "temp"
      (8582376 'move' i_x[8582374](8582378 'set reference' msg[8582294]))
      (8582381 call deinit[21354] i_x[8582374] _ln[9419059] _fn[9419061])
    }
    {
      if(8582388 '>=' call_tmp[8582165] 64)
      {
        const-val call_tmp[8582393]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582395]:string[244] "temp"
        (8582398 call :[1496816] 1 ret_tmp[8582395] _ln[9419059] _fn[9419061])
        (8582401 'move' call_tmp[8582393] ret_tmp[8582395])
        const-val call_tmp[8582404]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582406]:string[244] "temp"
        (8582409 call +[28065] "Cannot bitshift " call_tmp[8582393] ret_tmp[8582406] _ln[9419059] _fn[9419061])
        (8582413 'move' call_tmp[8582404] ret_tmp[8582406])
        const-val call_tmp[8582416]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582418]:string[244] "temp"
        (8582421 call +[28065] call_tmp[8582404] " by " ret_tmp[8582418] _ln[9419059] _fn[9419061])
        (8582425 'move' call_tmp[8582416] ret_tmp[8582418])
        const-val call_tmp[8582428]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582430]:string[244] "temp"
        (8582433 call :[1496816] call_tmp[8582165] ret_tmp[8582430] _ln[9419059] _fn[9419061])
        (8582436 'move' call_tmp[8582428] ret_tmp[8582430])
        const-val call_tmp[8582439]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582441]:string[244] "temp"
        (8582444 call +[28065] call_tmp[8582416] call_tmp[8582428] ret_tmp[8582441] _ln[9419059] _fn[9419061])
        (8582448 'move' call_tmp[8582439] ret_tmp[8582441])
        const-val call_tmp[8582451]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582453]:string[244] "temp"
        (8582456 call +[28065] call_tmp[8582439] " because " ret_tmp[8582453] _ln[9419059] _fn[9419061])
        (8582460 'move' call_tmp[8582451] ret_tmp[8582453])
        const-val call_tmp[8582463]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582465]:string[244] "temp"
        (8582468 call :[1496816] call_tmp[8582165] ret_tmp[8582465] _ln[9419059] _fn[9419061])
        (8582471 'move' call_tmp[8582463] ret_tmp[8582465])
        const-val call_tmp[8582474]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582476]:string[244] "temp"
        (8582479 call +[28065] call_tmp[8582451] call_tmp[8582463] ret_tmp[8582476] _ln[9419059] _fn[9419061])
        (8582483 'move' call_tmp[8582474] ret_tmp[8582476])
        const-val call_tmp[8582486]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582488]:string[244] "temp"
        (8582491 call +[28065] call_tmp[8582474] " is >= the bitwidth of " ret_tmp[8582488] _ln[9419059] _fn[9419061])
        (8582495 'move' call_tmp[8582486] ret_tmp[8582488])
        const-val ret_tmp[8582500]:string[244] "temp"
        (8582503 call +[28065] call_tmp[8582486] "int(64)" ret_tmp[8582500] _ln[9419059] _fn[9419061])
        const-val msg[8582510]:string[244] "dead at end of block" "insert auto destroy"
        (8582512 'move' msg[8582510] ret_tmp[8582500])
        ref i_x[8582515]:_ref(string)[1466327] "temp"
        (8582517 'move' i_x[8582515](8582519 'set reference' call_tmp[8582486]))
        (8582522 call deinit[21354] i_x[8582515] _ln[9419059] _fn[9419061])
        ref i_x[8582524]:_ref(string)[1466327] "temp"
        (8582526 'move' i_x[8582524](8582528 'set reference' call_tmp[8582474]))
        (8582531 call deinit[21354] i_x[8582524] _ln[9419059] _fn[9419061])
        ref i_x[8582533]:_ref(string)[1466327] "temp"
        (8582535 'move' i_x[8582533](8582537 'set reference' call_tmp[8582463]))
        (8582540 call deinit[21354] i_x[8582533] _ln[9419059] _fn[9419061])
        ref i_x[8582542]:_ref(string)[1466327] "temp"
        (8582544 'move' i_x[8582542](8582546 'set reference' call_tmp[8582451]))
        (8582549 call deinit[21354] i_x[8582542] _ln[9419059] _fn[9419061])
        ref i_x[8582551]:_ref(string)[1466327] "temp"
        (8582553 'move' i_x[8582551](8582555 'set reference' call_tmp[8582439]))
        (8582558 call deinit[21354] i_x[8582551] _ln[9419059] _fn[9419061])
        ref i_x[8582560]:_ref(string)[1466327] "temp"
        (8582562 'move' i_x[8582560](8582564 'set reference' call_tmp[8582428]))
        (8582567 call deinit[21354] i_x[8582560] _ln[9419059] _fn[9419061])
        ref i_x[8582569]:_ref(string)[1466327] "temp"
        (8582571 'move' i_x[8582569](8582573 'set reference' call_tmp[8582416]))
        (8582576 call deinit[21354] i_x[8582569] _ln[9419059] _fn[9419061])
        ref i_x[8582578]:_ref(string)[1466327] "temp"
        (8582580 'move' i_x[8582578](8582582 'set reference' call_tmp[8582404]))
        (8582585 call deinit[21354] i_x[8582578] _ln[9419059] _fn[9419061])
        ref i_x[8582587]:_ref(string)[1466327] "temp"
        (8582589 'move' i_x[8582587](8582591 'set reference' call_tmp[8582393]))
        (8582594 call deinit[21354] i_x[8582587] _ln[9419059] _fn[9419061])
        (8582597 call boundsCheckHalt[404] msg[8582510] _ln[9419059] _fn[9419061])
        ref i_x[8582599]:_ref(string)[1466327] "temp"
        (8582601 'move' i_x[8582599](8582603 'set reference' msg[8582510]))
        (8582606 call deinit[21354] i_x[8582599] _ln[9419059] _fn[9419061])
      }
    }
    const-val call_tmp[8582631]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8582633 'move' call_tmp[8582631](8582635 '^' call_tmp[8582084](8582628 'cast' int(64)[10](9533085 'cast' uint(64)[86](8582621 '<<'(8582614 'cast' uint(64)[86] 1 _ln[9419059] _fn[9419061]) call_tmp[8582165])) _ln[9419059] _fn[9419061])))
    val coerce_tmp[8582638]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8582640 'move' coerce_tmp[8582638](8582642 '.v' this[3865332] _arrays[3405526]))
    ref call_tmp[8582645]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
    (8582647 'move' call_tmp[8582645](8582649 'array_get' coerce_tmp[8582638] call_tmp[8582072]))
    const array[8582652]:_ddata(shared Module(real(64)))[3405600] "dead at end of block" "const" "insert auto destroy"
    (8582660 '=' array[8582652](8582658 'deref' call_tmp[8582645]))
    (8582663 'noop')
    ref call_tmp[8582664]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
    (8582666 'move' call_tmp[8582664](8582668 'array_get' array[8582652] call_tmp[8582631]))
    (3865385 'move' dst[3865363] call_tmp[8582664])
    (8583463 '=' dst[3865363] x[3865339])
    ref call_tmp[8574202]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    (8574204 'move' call_tmp[8574202](8574206 '.' this[3865332] _size[3405514]))
    (7512838 '+=' call_tmp[8574202] 1)
    (3865412 return _void[46])
  }
  function _ref(list(string,false))[1950614].pushBack[3253361](ref arg this[3253365]:_ref(list(string,false))[1950614], const  ref arg x[3253372]:_ref(string)[1466327], const in arg _ln[9475673]:int(64)[10], in arg _fn[9475675]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_x[3253457]:string[244] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3253460 'move' _formal_tmp_x[3253457] x[3253372])
    (3253403 call _appendByRef[3253564] this[3253365] _formal_tmp_x[3253457] _ln[9475673] _fn[9475675])
    const-val call_tmp[7445678]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7445680 'move' call_tmp[7445678](7445682 '-'(9217726 '.v' this[3253365] _size[1950567]) 1))
    (3253445 return call_tmp[7445678])
  }
  function _ref(list(shared Module(real(32)),false))[1955585].pushBack[3408814](ref arg this[3408818]:_ref(list(shared Module(real(32)),false))[1955585], const  ref arg x[3408825]:_ref(shared Module(real(32)))[1955047], const in arg _ln[9474667]:int(64)[10], in arg _fn[9474669]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_x[3408910]:shared Module(real(32))[1955038] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3408913 'move' _formal_tmp_x[3408910] x[3408825])
    (3408856 call _appendByRef[3409017] this[3408818] _formal_tmp_x[3408910] _ln[9474667] _fn[9474669])
    const-val call_tmp[7445758]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7445760 'move' call_tmp[7445758](7445762 '-'(9222169 '.v' this[3408818] _size[1955538]) 1))
    (3408898 return call_tmp[7445758])
  }
  function _ref(list(shared Module(real(64)),false))[3405554].pushBack[3864482](ref arg this[3864486]:_ref(list(shared Module(real(64)),false))[3405554], const  ref arg x[3864493]:_ref(shared Module(real(64)))[3405437], const in arg _ln[9471907]:int(64)[10], in arg _fn[9471909]:int(32)[66]) : int(64)[10] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val _formal_tmp_x[3865221]:shared Module(real(64))[3405428] "dead at end of block" "no auto destroy" "no copy" "temp"
    (3865224 'move' _formal_tmp_x[3865221] x[3864493])
    (3864524 call _appendByRef[3865328] this[3864486] _formal_tmp_x[3865221] _ln[9471907] _fn[9471909])
    const-val call_tmp[7445858]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7445860 'move' call_tmp[7445858](7445862 '-'(9231835 '.v' this[3864486] _size[3405514]) 1))
    (3864566 return call_tmp[7445858])
  }
  function _ref(list(string,false))[1950614].contains[3400199](const  ref arg this[3400203]:_ref(list(string,false))[1950614], const  ref arg x[3400210]:_ref(string)[1466327], const in arg _ln[9404317]:int(64)[10], in arg _fn[9404319]:int(32)[66]) : bool[19] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val local__initialCapacity[9285717]:int(64)[10] "temp"
    (9285718 'move' local__initialCapacity[9285717] _initialCapacity[225849])
    val result[3400224]:bool[19] "dead at end of block" "insert auto destroy"
    (3400226 'move' result[3400224] 0)
    const-val coerce_tmp[6061988]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (6061990 'move' coerce_tmp[6061988](9221681 '.v' this[3400203] _size[1950567]))
    if(7321257 '<' coerce_tmp[6061988] 0)
    {
      (6062120 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9404317] _fn[9404319])
    }
    val tmp[6062137]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7389538 '==' coerce_tmp[6061988] 0)
    {
      (6062198 'move' tmp[6062137](7444182 'cast' int(64)[10](9532159 'cast' uint(64)[86](7443012 '-'(6062174 'cast' uint(64)[86] 0 _ln[9404317] _fn[9404319]) 1)) _ln[9404317] _fn[9404319]))
    }
    {
      (6062252 'move' tmp[6062137](9532155 'cast' int(64)[10](7374259 '+' 0(9532157 'cast' int(64)[10](7446972 '-' coerce_tmp[6061988] 1)))))
    }
    const-val _ic__F1_high[9017450]:int(64)[10] "temp"
    (7454474 'move' _ic__F1_high[9017450] tmp[6062137])
    val i[6395666]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6395670 'move' i[6395666] 0)
    (6395702 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6062137] 1 0 tmp[6062137] 1 _ln[9404317] _fn[9404319])
    const-val call_tmp[8417275]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8417277 'move' call_tmp[8417275](8417279 '==' 1 0))
    const-val call_tmp[8417175]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8417177 'move' call_tmp[8417175](8417179 '==' 1 0))
    const-val tmp[8417126]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (8417128 'move' tmp[8417126](8417130 '<' local__initialCapacity[9285717] 1))
    const-val call_tmp[8417098]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8417100 'move' call_tmp[8417098](8417102 '==' 1 0))
    CForLoop[6395709] hazard
    {
      if(8417016 '>=' i[6395666] 0)
      {
      }
      {
      }
      const-val call_tmp[8417030]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417032 'move' call_tmp[8417030](8417034 '+' i[6395666] local__initialCapacity[9285717]))
      if(8417053 '<' call_tmp[8417030] 1)
      {
        (8417059 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404317] _fn[9404319])
      }
      const-val call_tmp[8417074]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417076 'move' call_tmp[8417074](8417079 call chpl_bitops_clz_64[1942612](8417071 'cast' uint(64)[86] call_tmp[8417030] _ln[9404317] _fn[9404319])))
      const-val call_tmp[8417088]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417090 'move' call_tmp[8417088](8417092 '-' 63(8417085 'cast' int(64)[10] call_tmp[8417074] _ln[9404317] _fn[9404319])))
      if call_tmp[8417098]
      {
        (8417108 call halt[88131] "Attempt to divide by zero" _ln[9404317] _fn[9404319])
      }
      const-val call_tmp[8417111]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417113 'move' call_tmp[8417111](8417115 '/' call_tmp[8417088] 1))
      if tmp[8417126]
      {
        (8417136 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404317] _fn[9404319])
      }
      const-val call_tmp[8417151]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417153 'move' call_tmp[8417151](8417156 call chpl_bitops_clz_64[1942612](8417148 'cast' uint(64)[86] local__initialCapacity[9285717] _ln[9404317] _fn[9404319])))
      const-val call_tmp[8417165]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417167 'move' call_tmp[8417165](8417169 '-' 63(8417162 'cast' int(64)[10] call_tmp[8417151] _ln[9404317] _fn[9404319])))
      if call_tmp[8417175]
      {
        (8417185 call halt[88131] "Attempt to divide by zero" _ln[9404317] _fn[9404319])
      }
      const-val call_tmp[8417188]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417190 'move' call_tmp[8417188](8417192 '/' call_tmp[8417165] 1))
      const-val call_tmp[8417195]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417197 'move' call_tmp[8417195](8417199 '-' call_tmp[8417111] call_tmp[8417188]))
      const-val call_tmp[8417207]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417209 'move' call_tmp[8417207](8417211 '+' i[6395666] local__initialCapacity[9285717]))
      if(8417230 '<' call_tmp[8417207] 1)
      {
        (8417236 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404317] _fn[9404319])
      }
      const-val call_tmp[8417251]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417253 'move' call_tmp[8417251](8417256 call chpl_bitops_clz_64[1942612](8417248 'cast' uint(64)[86] call_tmp[8417207] _ln[9404317] _fn[9404319])))
      const-val call_tmp[8417265]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417267 'move' call_tmp[8417265](8417269 '-' 63(8417262 'cast' int(64)[10] call_tmp[8417251] _ln[9404317] _fn[9404319])))
      if call_tmp[8417275]
      {
        (8417285 call halt[88131] "Attempt to divide by zero" _ln[9404317] _fn[9404319])
      }
      const-val call_tmp[8417288]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417290 'move' call_tmp[8417288](8417292 '/' call_tmp[8417265] 1))
      if(8417307 '<' call_tmp[8417288] 0)
      {
        const-val call_tmp[8417312]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417314]:string[244] "temp"
        (8417317 call :[1496816] 1 ret_tmp[8417314] _ln[9404317] _fn[9404319])
        (8417320 'move' call_tmp[8417312] ret_tmp[8417314])
        const-val call_tmp[8417323]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417325]:string[244] "temp"
        (8417328 call +[28065] "Cannot bitshift " call_tmp[8417312] ret_tmp[8417325] _ln[9404317] _fn[9404319])
        (8417332 'move' call_tmp[8417323] ret_tmp[8417325])
        const-val call_tmp[8417335]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417337]:string[244] "temp"
        (8417340 call +[28065] call_tmp[8417323] " by " ret_tmp[8417337] _ln[9404317] _fn[9404319])
        (8417344 'move' call_tmp[8417335] ret_tmp[8417337])
        const-val call_tmp[8417347]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417349]:string[244] "temp"
        (8417352 call :[1496816] call_tmp[8417288] ret_tmp[8417349] _ln[9404317] _fn[9404319])
        (8417355 'move' call_tmp[8417347] ret_tmp[8417349])
        const-val call_tmp[8417358]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417360]:string[244] "temp"
        (8417363 call +[28065] call_tmp[8417335] call_tmp[8417347] ret_tmp[8417360] _ln[9404317] _fn[9404319])
        (8417367 'move' call_tmp[8417358] ret_tmp[8417360])
        const-val call_tmp[8417370]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417372]:string[244] "temp"
        (8417375 call +[28065] call_tmp[8417358] " because " ret_tmp[8417372] _ln[9404317] _fn[9404319])
        (8417379 'move' call_tmp[8417370] ret_tmp[8417372])
        const-val call_tmp[8417382]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417384]:string[244] "temp"
        (8417387 call :[1496816] call_tmp[8417288] ret_tmp[8417384] _ln[9404317] _fn[9404319])
        (8417390 'move' call_tmp[8417382] ret_tmp[8417384])
        const-val call_tmp[8417393]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8417395]:string[244] "temp"
        (8417398 call +[28065] call_tmp[8417370] call_tmp[8417382] ret_tmp[8417395] _ln[9404317] _fn[9404319])
        (8417402 'move' call_tmp[8417393] ret_tmp[8417395])
        const-val ret_tmp[8417407]:string[244] "temp"
        (8417410 call +[28065] call_tmp[8417393] " is less than 0" ret_tmp[8417407] _ln[9404317] _fn[9404319])
        const-val msg[8417417]:string[244] "dead at end of block" "insert auto destroy"
        (8417419 'move' msg[8417417] ret_tmp[8417407])
        ref i_x[8417422]:_ref(string)[1466327] "temp"
        (8417424 'move' i_x[8417422](8417426 'set reference' call_tmp[8417393]))
        (8417429 call deinit[21354] i_x[8417422] _ln[9404317] _fn[9404319])
        ref i_x[8417431]:_ref(string)[1466327] "temp"
        (8417433 'move' i_x[8417431](8417435 'set reference' call_tmp[8417382]))
        (8417438 call deinit[21354] i_x[8417431] _ln[9404317] _fn[9404319])
        ref i_x[8417440]:_ref(string)[1466327] "temp"
        (8417442 'move' i_x[8417440](8417444 'set reference' call_tmp[8417370]))
        (8417447 call deinit[21354] i_x[8417440] _ln[9404317] _fn[9404319])
        ref i_x[8417449]:_ref(string)[1466327] "temp"
        (8417451 'move' i_x[8417449](8417453 'set reference' call_tmp[8417358]))
        (8417456 call deinit[21354] i_x[8417449] _ln[9404317] _fn[9404319])
        ref i_x[8417458]:_ref(string)[1466327] "temp"
        (8417460 'move' i_x[8417458](8417462 'set reference' call_tmp[8417347]))
        (8417465 call deinit[21354] i_x[8417458] _ln[9404317] _fn[9404319])
        ref i_x[8417467]:_ref(string)[1466327] "temp"
        (8417469 'move' i_x[8417467](8417471 'set reference' call_tmp[8417335]))
        (8417474 call deinit[21354] i_x[8417467] _ln[9404317] _fn[9404319])
        ref i_x[8417476]:_ref(string)[1466327] "temp"
        (8417478 'move' i_x[8417476](8417480 'set reference' call_tmp[8417323]))
        (8417483 call deinit[21354] i_x[8417476] _ln[9404317] _fn[9404319])
        ref i_x[8417485]:_ref(string)[1466327] "temp"
        (8417487 'move' i_x[8417485](8417489 'set reference' call_tmp[8417312]))
        (8417492 call deinit[21354] i_x[8417485] _ln[9404317] _fn[9404319])
        (8417495 call boundsCheckHalt[404] msg[8417417] _ln[9404317] _fn[9404319])
        ref i_x[8417497]:_ref(string)[1466327] "temp"
        (8417499 'move' i_x[8417497](8417501 'set reference' msg[8417417]))
        (8417504 call deinit[21354] i_x[8417497] _ln[9404317] _fn[9404319])
      }
      {
        if(8417511 '>=' call_tmp[8417288] 64)
        {
          const-val call_tmp[8417516]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417518]:string[244] "temp"
          (8417521 call :[1496816] 1 ret_tmp[8417518] _ln[9404317] _fn[9404319])
          (8417524 'move' call_tmp[8417516] ret_tmp[8417518])
          const-val call_tmp[8417527]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417529]:string[244] "temp"
          (8417532 call +[28065] "Cannot bitshift " call_tmp[8417516] ret_tmp[8417529] _ln[9404317] _fn[9404319])
          (8417536 'move' call_tmp[8417527] ret_tmp[8417529])
          const-val call_tmp[8417539]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417541]:string[244] "temp"
          (8417544 call +[28065] call_tmp[8417527] " by " ret_tmp[8417541] _ln[9404317] _fn[9404319])
          (8417548 'move' call_tmp[8417539] ret_tmp[8417541])
          const-val call_tmp[8417551]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417553]:string[244] "temp"
          (8417556 call :[1496816] call_tmp[8417288] ret_tmp[8417553] _ln[9404317] _fn[9404319])
          (8417559 'move' call_tmp[8417551] ret_tmp[8417553])
          const-val call_tmp[8417562]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417564]:string[244] "temp"
          (8417567 call +[28065] call_tmp[8417539] call_tmp[8417551] ret_tmp[8417564] _ln[9404317] _fn[9404319])
          (8417571 'move' call_tmp[8417562] ret_tmp[8417564])
          const-val call_tmp[8417574]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417576]:string[244] "temp"
          (8417579 call +[28065] call_tmp[8417562] " because " ret_tmp[8417576] _ln[9404317] _fn[9404319])
          (8417583 'move' call_tmp[8417574] ret_tmp[8417576])
          const-val call_tmp[8417586]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417588]:string[244] "temp"
          (8417591 call :[1496816] call_tmp[8417288] ret_tmp[8417588] _ln[9404317] _fn[9404319])
          (8417594 'move' call_tmp[8417586] ret_tmp[8417588])
          const-val call_tmp[8417597]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417599]:string[244] "temp"
          (8417602 call +[28065] call_tmp[8417574] call_tmp[8417586] ret_tmp[8417599] _ln[9404317] _fn[9404319])
          (8417606 'move' call_tmp[8417597] ret_tmp[8417599])
          const-val call_tmp[8417609]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8417611]:string[244] "temp"
          (8417614 call +[28065] call_tmp[8417597] " is >= the bitwidth of " ret_tmp[8417611] _ln[9404317] _fn[9404319])
          (8417618 'move' call_tmp[8417609] ret_tmp[8417611])
          const-val ret_tmp[8417623]:string[244] "temp"
          (8417626 call +[28065] call_tmp[8417609] "int(64)" ret_tmp[8417623] _ln[9404317] _fn[9404319])
          const-val msg[8417633]:string[244] "dead at end of block" "insert auto destroy"
          (8417635 'move' msg[8417633] ret_tmp[8417623])
          ref i_x[8417638]:_ref(string)[1466327] "temp"
          (8417640 'move' i_x[8417638](8417642 'set reference' call_tmp[8417609]))
          (8417645 call deinit[21354] i_x[8417638] _ln[9404317] _fn[9404319])
          ref i_x[8417647]:_ref(string)[1466327] "temp"
          (8417649 'move' i_x[8417647](8417651 'set reference' call_tmp[8417597]))
          (8417654 call deinit[21354] i_x[8417647] _ln[9404317] _fn[9404319])
          ref i_x[8417656]:_ref(string)[1466327] "temp"
          (8417658 'move' i_x[8417656](8417660 'set reference' call_tmp[8417586]))
          (8417663 call deinit[21354] i_x[8417656] _ln[9404317] _fn[9404319])
          ref i_x[8417665]:_ref(string)[1466327] "temp"
          (8417667 'move' i_x[8417665](8417669 'set reference' call_tmp[8417574]))
          (8417672 call deinit[21354] i_x[8417665] _ln[9404317] _fn[9404319])
          ref i_x[8417674]:_ref(string)[1466327] "temp"
          (8417676 'move' i_x[8417674](8417678 'set reference' call_tmp[8417562]))
          (8417681 call deinit[21354] i_x[8417674] _ln[9404317] _fn[9404319])
          ref i_x[8417683]:_ref(string)[1466327] "temp"
          (8417685 'move' i_x[8417683](8417687 'set reference' call_tmp[8417551]))
          (8417690 call deinit[21354] i_x[8417683] _ln[9404317] _fn[9404319])
          ref i_x[8417692]:_ref(string)[1466327] "temp"
          (8417694 'move' i_x[8417692](8417696 'set reference' call_tmp[8417539]))
          (8417699 call deinit[21354] i_x[8417692] _ln[9404317] _fn[9404319])
          ref i_x[8417701]:_ref(string)[1466327] "temp"
          (8417703 'move' i_x[8417701](8417705 'set reference' call_tmp[8417527]))
          (8417708 call deinit[21354] i_x[8417701] _ln[9404317] _fn[9404319])
          ref i_x[8417710]:_ref(string)[1466327] "temp"
          (8417712 'move' i_x[8417710](8417714 'set reference' call_tmp[8417516]))
          (8417717 call deinit[21354] i_x[8417710] _ln[9404317] _fn[9404319])
          (8417720 call boundsCheckHalt[404] msg[8417633] _ln[9404317] _fn[9404319])
          ref i_x[8417722]:_ref(string)[1466327] "temp"
          (8417724 'move' i_x[8417722](8417726 'set reference' msg[8417633]))
          (8417729 call deinit[21354] i_x[8417722] _ln[9404317] _fn[9404319])
        }
      }
      const-val call_tmp[8417754]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8417756 'move' call_tmp[8417754](8417758 '^' call_tmp[8417207](8417751 'cast' int(64)[10](9532161 'cast' uint(64)[86](8417744 '<<'(8417737 'cast' uint(64)[86] 1 _ln[9404317] _fn[9404319]) call_tmp[8417288])) _ln[9404317] _fn[9404319])))
      val coerce_tmp[8417761]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8417763 'move' coerce_tmp[8417761](8417765 '.v' this[3400203] _arrays[1950579]))
      ref call_tmp[8417768]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
      (8417770 'move' call_tmp[8417768](8417772 'array_get' coerce_tmp[8417761] call_tmp[8417195]))
      const array[8417775]:_ddata(string)[1950629] "dead at end of block" "const" "insert auto destroy"
      (8417783 '=' array[8417775](8417781 'deref' call_tmp[8417768]))
      (8417786 'noop')
      ref call_tmp[8417787]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (8417789 'move' call_tmp[8417787](8417791 'array_get' array[8417775] call_tmp[8417754]))
      const-val call_tmp[6395808]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (6395810 'move' call_tmp[6395808](6395813 call ==[28803] call_tmp[8417787] x[3400210] _ln[9404317] _fn[9404319]))
      if call_tmp[6395808]
      {
        (7395165 '=' result[3400224] 1)
        break _breakLabel[3400313] _breakLabel[3400313]
      }
      {
        (6395711 '=' i[6395666] 0)
      }
      {
        (6395715 '<=' i[6395666] _ic__F1_high[9017450])
      }
      {
        (6395723 '+=' i[6395666] 1)
      }
    }
    label _breakLabel[3400313]
    (3400331 return result[3400224])
  }
  function _ref(list(string,false))[1950614]._fireAllDestructors[3377679](ref arg this[3377683]:_ref(list(string,false))[1950614], const in arg _ln[9403819]:int(64)[10], in arg _fn[9403821]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9285686]:int(64)[10] "temp"
    (9285687 'move' local__initialCapacity[9285686] _initialCapacity[225849])
    const-val coerce_tmp[3377803]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3377807 'move' coerce_tmp[3377803](9221141 '.v' this[3377683] _size[1950567]))
    if(7321227 '<' coerce_tmp[3377803] 0)
    {
      (6059467 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9403819] _fn[9403821])
    }
    val tmp[6059484]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7389508 '==' coerce_tmp[3377803] 0)
    {
      (6059545 'move' tmp[6059484](7444162 'cast' int(64)[10](9532109 'cast' uint(64)[86](7442992 '-'(6059521 'cast' uint(64)[86] 0 _ln[9403819] _fn[9403821]) 1)) _ln[9403819] _fn[9403821]))
    }
    {
      (6059599 'move' tmp[6059484](9532105 'cast' int(64)[10](7374239 '+' 0(9532107 'cast' int(64)[10](7446952 '-' coerce_tmp[3377803] 1)))))
    }
    const-val _ic__F1_high[9017412]:int(64)[10] "temp"
    (7454348 'move' _ic__F1_high[9017412] tmp[6059484])
    val i[6391683]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6391687 'move' i[6391683] 0)
    (6391719 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6059484] 1 0 tmp[6059484] 1 _ln[9403819] _fn[9403821])
    const-val call_tmp[8415701]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8415703 'move' call_tmp[8415701](8415705 '==' 1 0))
    const-val call_tmp[8415601]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8415603 'move' call_tmp[8415601](8415605 '==' 1 0))
    const-val tmp[8415552]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (8415554 'move' tmp[8415552](8415556 '<' local__initialCapacity[9285686] 1))
    const-val call_tmp[8415524]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8415526 'move' call_tmp[8415524](8415528 '==' 1 0))
    CForLoop[6391726] hazard
    {
      if(8415442 '>=' i[6391683] 0)
      {
      }
      {
      }
      const-val call_tmp[8415456]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415458 'move' call_tmp[8415456](8415460 '+' i[6391683] local__initialCapacity[9285686]))
      if(8415479 '<' call_tmp[8415456] 1)
      {
        (8415485 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9403819] _fn[9403821])
      }
      const-val call_tmp[8415500]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415502 'move' call_tmp[8415500](8415505 call chpl_bitops_clz_64[1942612](8415497 'cast' uint(64)[86] call_tmp[8415456] _ln[9403819] _fn[9403821])))
      const-val call_tmp[8415514]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415516 'move' call_tmp[8415514](8415518 '-' 63(8415511 'cast' int(64)[10] call_tmp[8415500] _ln[9403819] _fn[9403821])))
      if call_tmp[8415524]
      {
        (8415534 call halt[88131] "Attempt to divide by zero" _ln[9403819] _fn[9403821])
      }
      const-val call_tmp[8415537]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415539 'move' call_tmp[8415537](8415541 '/' call_tmp[8415514] 1))
      if tmp[8415552]
      {
        (8415562 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9403819] _fn[9403821])
      }
      const-val call_tmp[8415577]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415579 'move' call_tmp[8415577](8415582 call chpl_bitops_clz_64[1942612](8415574 'cast' uint(64)[86] local__initialCapacity[9285686] _ln[9403819] _fn[9403821])))
      const-val call_tmp[8415591]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415593 'move' call_tmp[8415591](8415595 '-' 63(8415588 'cast' int(64)[10] call_tmp[8415577] _ln[9403819] _fn[9403821])))
      if call_tmp[8415601]
      {
        (8415611 call halt[88131] "Attempt to divide by zero" _ln[9403819] _fn[9403821])
      }
      const-val call_tmp[8415614]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415616 'move' call_tmp[8415614](8415618 '/' call_tmp[8415591] 1))
      const-val call_tmp[8415621]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415623 'move' call_tmp[8415621](8415625 '-' call_tmp[8415537] call_tmp[8415614]))
      const-val call_tmp[8415633]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415635 'move' call_tmp[8415633](8415637 '+' i[6391683] local__initialCapacity[9285686]))
      if(8415656 '<' call_tmp[8415633] 1)
      {
        (8415662 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9403819] _fn[9403821])
      }
      const-val call_tmp[8415677]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415679 'move' call_tmp[8415677](8415682 call chpl_bitops_clz_64[1942612](8415674 'cast' uint(64)[86] call_tmp[8415633] _ln[9403819] _fn[9403821])))
      const-val call_tmp[8415691]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415693 'move' call_tmp[8415691](8415695 '-' 63(8415688 'cast' int(64)[10] call_tmp[8415677] _ln[9403819] _fn[9403821])))
      if call_tmp[8415701]
      {
        (8415711 call halt[88131] "Attempt to divide by zero" _ln[9403819] _fn[9403821])
      }
      const-val call_tmp[8415714]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8415716 'move' call_tmp[8415714](8415718 '/' call_tmp[8415691] 1))
      if(8415733 '<' call_tmp[8415714] 0)
      {
        const-val call_tmp[8415738]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415740]:string[244] "temp"
        (8415743 call :[1496816] 1 ret_tmp[8415740] _ln[9403819] _fn[9403821])
        (8415746 'move' call_tmp[8415738] ret_tmp[8415740])
        const-val call_tmp[8415749]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415751]:string[244] "temp"
        (8415754 call +[28065] "Cannot bitshift " call_tmp[8415738] ret_tmp[8415751] _ln[9403819] _fn[9403821])
        (8415758 'move' call_tmp[8415749] ret_tmp[8415751])
        const-val call_tmp[8415761]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415763]:string[244] "temp"
        (8415766 call +[28065] call_tmp[8415749] " by " ret_tmp[8415763] _ln[9403819] _fn[9403821])
        (8415770 'move' call_tmp[8415761] ret_tmp[8415763])
        const-val call_tmp[8415773]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415775]:string[244] "temp"
        (8415778 call :[1496816] call_tmp[8415714] ret_tmp[8415775] _ln[9403819] _fn[9403821])
        (8415781 'move' call_tmp[8415773] ret_tmp[8415775])
        const-val call_tmp[8415784]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415786]:string[244] "temp"
        (8415789 call +[28065] call_tmp[8415761] call_tmp[8415773] ret_tmp[8415786] _ln[9403819] _fn[9403821])
        (8415793 'move' call_tmp[8415784] ret_tmp[8415786])
        const-val call_tmp[8415796]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415798]:string[244] "temp"
        (8415801 call +[28065] call_tmp[8415784] " because " ret_tmp[8415798] _ln[9403819] _fn[9403821])
        (8415805 'move' call_tmp[8415796] ret_tmp[8415798])
        const-val call_tmp[8415808]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415810]:string[244] "temp"
        (8415813 call :[1496816] call_tmp[8415714] ret_tmp[8415810] _ln[9403819] _fn[9403821])
        (8415816 'move' call_tmp[8415808] ret_tmp[8415810])
        const-val call_tmp[8415819]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415821]:string[244] "temp"
        (8415824 call +[28065] call_tmp[8415796] call_tmp[8415808] ret_tmp[8415821] _ln[9403819] _fn[9403821])
        (8415828 'move' call_tmp[8415819] ret_tmp[8415821])
        const-val ret_tmp[8415833]:string[244] "temp"
        (8415836 call +[28065] call_tmp[8415819] " is less than 0" ret_tmp[8415833] _ln[9403819] _fn[9403821])
        const-val msg[8415843]:string[244] "dead at end of block" "insert auto destroy"
        (8415845 'move' msg[8415843] ret_tmp[8415833])
        ref i_x[8415848]:_ref(string)[1466327] "temp"
        (8415850 'move' i_x[8415848](8415852 'set reference' call_tmp[8415819]))
        (8415855 call deinit[21354] i_x[8415848] _ln[9403819] _fn[9403821])
        ref i_x[8415857]:_ref(string)[1466327] "temp"
        (8415859 'move' i_x[8415857](8415861 'set reference' call_tmp[8415808]))
        (8415864 call deinit[21354] i_x[8415857] _ln[9403819] _fn[9403821])
        ref i_x[8415866]:_ref(string)[1466327] "temp"
        (8415868 'move' i_x[8415866](8415870 'set reference' call_tmp[8415796]))
        (8415873 call deinit[21354] i_x[8415866] _ln[9403819] _fn[9403821])
        ref i_x[8415875]:_ref(string)[1466327] "temp"
        (8415877 'move' i_x[8415875](8415879 'set reference' call_tmp[8415784]))
        (8415882 call deinit[21354] i_x[8415875] _ln[9403819] _fn[9403821])
        ref i_x[8415884]:_ref(string)[1466327] "temp"
        (8415886 'move' i_x[8415884](8415888 'set reference' call_tmp[8415773]))
        (8415891 call deinit[21354] i_x[8415884] _ln[9403819] _fn[9403821])
        ref i_x[8415893]:_ref(string)[1466327] "temp"
        (8415895 'move' i_x[8415893](8415897 'set reference' call_tmp[8415761]))
        (8415900 call deinit[21354] i_x[8415893] _ln[9403819] _fn[9403821])
        ref i_x[8415902]:_ref(string)[1466327] "temp"
        (8415904 'move' i_x[8415902](8415906 'set reference' call_tmp[8415749]))
        (8415909 call deinit[21354] i_x[8415902] _ln[9403819] _fn[9403821])
        ref i_x[8415911]:_ref(string)[1466327] "temp"
        (8415913 'move' i_x[8415911](8415915 'set reference' call_tmp[8415738]))
        (8415918 call deinit[21354] i_x[8415911] _ln[9403819] _fn[9403821])
        (8415921 call boundsCheckHalt[404] msg[8415843] _ln[9403819] _fn[9403821])
        ref i_x[8415923]:_ref(string)[1466327] "temp"
        (8415925 'move' i_x[8415923](8415927 'set reference' msg[8415843]))
        (8415930 call deinit[21354] i_x[8415923] _ln[9403819] _fn[9403821])
      }
      {
        if(8415937 '>=' call_tmp[8415714] 64)
        {
          const-val call_tmp[8415942]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8415944]:string[244] "temp"
          (8415947 call :[1496816] 1 ret_tmp[8415944] _ln[9403819] _fn[9403821])
          (8415950 'move' call_tmp[8415942] ret_tmp[8415944])
          const-val call_tmp[8415953]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8415955]:string[244] "temp"
          (8415958 call +[28065] "Cannot bitshift " call_tmp[8415942] ret_tmp[8415955] _ln[9403819] _fn[9403821])
          (8415962 'move' call_tmp[8415953] ret_tmp[8415955])
          const-val call_tmp[8415965]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8415967]:string[244] "temp"
          (8415970 call +[28065] call_tmp[8415953] " by " ret_tmp[8415967] _ln[9403819] _fn[9403821])
          (8415974 'move' call_tmp[8415965] ret_tmp[8415967])
          const-val call_tmp[8415977]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8415979]:string[244] "temp"
          (8415982 call :[1496816] call_tmp[8415714] ret_tmp[8415979] _ln[9403819] _fn[9403821])
          (8415985 'move' call_tmp[8415977] ret_tmp[8415979])
          const-val call_tmp[8415988]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8415990]:string[244] "temp"
          (8415993 call +[28065] call_tmp[8415965] call_tmp[8415977] ret_tmp[8415990] _ln[9403819] _fn[9403821])
          (8415997 'move' call_tmp[8415988] ret_tmp[8415990])
          const-val call_tmp[8416000]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8416002]:string[244] "temp"
          (8416005 call +[28065] call_tmp[8415988] " because " ret_tmp[8416002] _ln[9403819] _fn[9403821])
          (8416009 'move' call_tmp[8416000] ret_tmp[8416002])
          const-val call_tmp[8416012]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8416014]:string[244] "temp"
          (8416017 call :[1496816] call_tmp[8415714] ret_tmp[8416014] _ln[9403819] _fn[9403821])
          (8416020 'move' call_tmp[8416012] ret_tmp[8416014])
          const-val call_tmp[8416023]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8416025]:string[244] "temp"
          (8416028 call +[28065] call_tmp[8416000] call_tmp[8416012] ret_tmp[8416025] _ln[9403819] _fn[9403821])
          (8416032 'move' call_tmp[8416023] ret_tmp[8416025])
          const-val call_tmp[8416035]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8416037]:string[244] "temp"
          (8416040 call +[28065] call_tmp[8416023] " is >= the bitwidth of " ret_tmp[8416037] _ln[9403819] _fn[9403821])
          (8416044 'move' call_tmp[8416035] ret_tmp[8416037])
          const-val ret_tmp[8416049]:string[244] "temp"
          (8416052 call +[28065] call_tmp[8416035] "int(64)" ret_tmp[8416049] _ln[9403819] _fn[9403821])
          const-val msg[8416059]:string[244] "dead at end of block" "insert auto destroy"
          (8416061 'move' msg[8416059] ret_tmp[8416049])
          ref i_x[8416064]:_ref(string)[1466327] "temp"
          (8416066 'move' i_x[8416064](8416068 'set reference' call_tmp[8416035]))
          (8416071 call deinit[21354] i_x[8416064] _ln[9403819] _fn[9403821])
          ref i_x[8416073]:_ref(string)[1466327] "temp"
          (8416075 'move' i_x[8416073](8416077 'set reference' call_tmp[8416023]))
          (8416080 call deinit[21354] i_x[8416073] _ln[9403819] _fn[9403821])
          ref i_x[8416082]:_ref(string)[1466327] "temp"
          (8416084 'move' i_x[8416082](8416086 'set reference' call_tmp[8416012]))
          (8416089 call deinit[21354] i_x[8416082] _ln[9403819] _fn[9403821])
          ref i_x[8416091]:_ref(string)[1466327] "temp"
          (8416093 'move' i_x[8416091](8416095 'set reference' call_tmp[8416000]))
          (8416098 call deinit[21354] i_x[8416091] _ln[9403819] _fn[9403821])
          ref i_x[8416100]:_ref(string)[1466327] "temp"
          (8416102 'move' i_x[8416100](8416104 'set reference' call_tmp[8415988]))
          (8416107 call deinit[21354] i_x[8416100] _ln[9403819] _fn[9403821])
          ref i_x[8416109]:_ref(string)[1466327] "temp"
          (8416111 'move' i_x[8416109](8416113 'set reference' call_tmp[8415977]))
          (8416116 call deinit[21354] i_x[8416109] _ln[9403819] _fn[9403821])
          ref i_x[8416118]:_ref(string)[1466327] "temp"
          (8416120 'move' i_x[8416118](8416122 'set reference' call_tmp[8415965]))
          (8416125 call deinit[21354] i_x[8416118] _ln[9403819] _fn[9403821])
          ref i_x[8416127]:_ref(string)[1466327] "temp"
          (8416129 'move' i_x[8416127](8416131 'set reference' call_tmp[8415953]))
          (8416134 call deinit[21354] i_x[8416127] _ln[9403819] _fn[9403821])
          ref i_x[8416136]:_ref(string)[1466327] "temp"
          (8416138 'move' i_x[8416136](8416140 'set reference' call_tmp[8415942]))
          (8416143 call deinit[21354] i_x[8416136] _ln[9403819] _fn[9403821])
          (8416146 call boundsCheckHalt[404] msg[8416059] _ln[9403819] _fn[9403821])
          ref i_x[8416148]:_ref(string)[1466327] "temp"
          (8416150 'move' i_x[8416148](8416152 'set reference' msg[8416059]))
          (8416155 call deinit[21354] i_x[8416148] _ln[9403819] _fn[9403821])
        }
      }
      const-val call_tmp[8416180]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8416182 'move' call_tmp[8416180](8416184 '^' call_tmp[8415633](8416177 'cast' int(64)[10](9532111 'cast' uint(64)[86](8416170 '<<'(8416163 'cast' uint(64)[86] 1 _ln[9403819] _fn[9403821]) call_tmp[8415714])) _ln[9403819] _fn[9403821])))
      val coerce_tmp[8416187]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8416189 'move' coerce_tmp[8416187](8416191 '.v' this[3377683] _arrays[1950579]))
      ref call_tmp[8416194]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
      (8416196 'move' call_tmp[8416194](8416198 'array_get' coerce_tmp[8416187] call_tmp[8415621]))
      const array[8416201]:_ddata(string)[1950629] "dead at end of block" "const" "insert auto destroy"
      (8416209 '=' array[8416201](8416207 'deref' call_tmp[8416194]))
      (8416212 'noop')
      ref call_tmp[8416213]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
      (8416215 'move' call_tmp[8416213](8416217 'array_get' array[8416201] call_tmp[8416180]))
      (8461857 call deinit[21354] call_tmp[8416213] _ln[9403819] _fn[9403821])
      {
        (6391728 '=' i[6391683] 0)
      }
      {
        (6391732 '<=' i[6391683] _ic__F1_high[9017412])
      }
      {
        (6391740 '+=' i[6391683] 1)
      }
    }
    (9221147 '.=' this[3377683] _size[1950567] 0)
    (3377799 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._fireAllDestructors[4038422](ref arg this[4038426]:_ref(list(shared Module(real(32)),false))[1955585], const in arg _ln[9420079]:int(64)[10], in arg _fn[9420081]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9286488]:int(64)[10] "temp"
    (9286489 'move' local__initialCapacity[9286488] _initialCapacity[225849])
    const-val coerce_tmp[4038546]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (4038550 'move' coerce_tmp[4038546](9233032 '.v' this[4038426] _size[1955538]))
    if(7321372 '<' coerce_tmp[4038546] 0)
    {
      (6100384 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9420079] _fn[9420081])
    }
    val tmp[6100401]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7390018 '==' coerce_tmp[4038546] 0)
    {
      (6100462 'move' tmp[6100401](7444212 'cast' int(64)[10](9533149 'cast' uint(64)[86](7443042 '-'(6100438 'cast' uint(64)[86] 0 _ln[9420079] _fn[9420081]) 1)) _ln[9420079] _fn[9420081]))
    }
    {
      (6100516 'move' tmp[6100401](9533145 'cast' int(64)[10](7374529 '+' 0(9533147 'cast' int(64)[10](7447092 '-' coerce_tmp[4038546] 1)))))
    }
    const-val _ic__F1_high[9017640]:int(64)[10] "temp"
    (7455104 'move' _ic__F1_high[9017640] tmp[6100401])
    val i[6443137]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6443141 'move' i[6443137] 0)
    (6443173 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6100401] 1 0 tmp[6100401] 1 _ln[9420079] _fn[9420081])
    CForLoop[6443180] hazard
    {
      if(8470031 '>=' i[6443137] 0)
      {
      }
      {
      }
      const-val call_tmp[8470045]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470047 'move' call_tmp[8470045](8470049 '+' i[6443137] local__initialCapacity[9286488]))
      if(8470068 '<' call_tmp[8470045] 1)
      {
        (8470074 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9420079] _fn[9420081])
      }
      const-val call_tmp[8470089]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470091 'move' call_tmp[8470089](8470094 call chpl_bitops_clz_64[1942612](8470086 'cast' uint(64)[86] call_tmp[8470045] _ln[9420079] _fn[9420081])))
      const-val call_tmp[8470103]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470105 'move' call_tmp[8470103](8470107 '-' 63(8470100 'cast' int(64)[10] call_tmp[8470089] _ln[9420079] _fn[9420081])))
      if(8470117 '==' 1 0)
      {
        (8470123 call halt[88131] "Attempt to divide by zero" _ln[9420079] _fn[9420081])
      }
      const-val call_tmp[8470126]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470128 'move' call_tmp[8470126](8470130 '/' call_tmp[8470103] 1))
      if(8470145 '<' local__initialCapacity[9286488] 1)
      {
        (8470151 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9420079] _fn[9420081])
      }
      const-val call_tmp[8470166]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470168 'move' call_tmp[8470166](8470171 call chpl_bitops_clz_64[1942612](8470163 'cast' uint(64)[86] local__initialCapacity[9286488] _ln[9420079] _fn[9420081])))
      const-val call_tmp[8470180]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470182 'move' call_tmp[8470180](8470184 '-' 63(8470177 'cast' int(64)[10] call_tmp[8470166] _ln[9420079] _fn[9420081])))
      if(8470194 '==' 1 0)
      {
        (8470200 call halt[88131] "Attempt to divide by zero" _ln[9420079] _fn[9420081])
      }
      const-val call_tmp[8470203]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470205 'move' call_tmp[8470203](8470207 '/' call_tmp[8470180] 1))
      const-val call_tmp[8470210]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470212 'move' call_tmp[8470210](8470214 '-' call_tmp[8470126] call_tmp[8470203]))
      const-val call_tmp[8470222]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470224 'move' call_tmp[8470222](8470226 '+' i[6443137] local__initialCapacity[9286488]))
      if(8470245 '<' call_tmp[8470222] 1)
      {
        (8470251 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9420079] _fn[9420081])
      }
      const-val call_tmp[8470266]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470268 'move' call_tmp[8470266](8470271 call chpl_bitops_clz_64[1942612](8470263 'cast' uint(64)[86] call_tmp[8470222] _ln[9420079] _fn[9420081])))
      const-val call_tmp[8470280]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470282 'move' call_tmp[8470280](8470284 '-' 63(8470277 'cast' int(64)[10] call_tmp[8470266] _ln[9420079] _fn[9420081])))
      if(8470294 '==' 1 0)
      {
        (8470300 call halt[88131] "Attempt to divide by zero" _ln[9420079] _fn[9420081])
      }
      const-val call_tmp[8470303]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470305 'move' call_tmp[8470303](8470307 '/' call_tmp[8470280] 1))
      if(8470322 '<' call_tmp[8470303] 0)
      {
        const-val call_tmp[8470327]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470329]:string[244] "temp"
        (8470332 call :[1496816] 1 ret_tmp[8470329] _ln[9420079] _fn[9420081])
        (8470335 'move' call_tmp[8470327] ret_tmp[8470329])
        const-val call_tmp[8470338]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470340]:string[244] "temp"
        (8470343 call +[28065] "Cannot bitshift " call_tmp[8470327] ret_tmp[8470340] _ln[9420079] _fn[9420081])
        (8470347 'move' call_tmp[8470338] ret_tmp[8470340])
        const-val call_tmp[8470350]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470352]:string[244] "temp"
        (8470355 call +[28065] call_tmp[8470338] " by " ret_tmp[8470352] _ln[9420079] _fn[9420081])
        (8470359 'move' call_tmp[8470350] ret_tmp[8470352])
        const-val call_tmp[8470362]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470364]:string[244] "temp"
        (8470367 call :[1496816] call_tmp[8470303] ret_tmp[8470364] _ln[9420079] _fn[9420081])
        (8470370 'move' call_tmp[8470362] ret_tmp[8470364])
        const-val call_tmp[8470373]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470375]:string[244] "temp"
        (8470378 call +[28065] call_tmp[8470350] call_tmp[8470362] ret_tmp[8470375] _ln[9420079] _fn[9420081])
        (8470382 'move' call_tmp[8470373] ret_tmp[8470375])
        const-val call_tmp[8470385]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470387]:string[244] "temp"
        (8470390 call +[28065] call_tmp[8470373] " because " ret_tmp[8470387] _ln[9420079] _fn[9420081])
        (8470394 'move' call_tmp[8470385] ret_tmp[8470387])
        const-val call_tmp[8470397]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470399]:string[244] "temp"
        (8470402 call :[1496816] call_tmp[8470303] ret_tmp[8470399] _ln[9420079] _fn[9420081])
        (8470405 'move' call_tmp[8470397] ret_tmp[8470399])
        const-val call_tmp[8470408]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8470410]:string[244] "temp"
        (8470413 call +[28065] call_tmp[8470385] call_tmp[8470397] ret_tmp[8470410] _ln[9420079] _fn[9420081])
        (8470417 'move' call_tmp[8470408] ret_tmp[8470410])
        const-val ret_tmp[8470422]:string[244] "temp"
        (8470425 call +[28065] call_tmp[8470408] " is less than 0" ret_tmp[8470422] _ln[9420079] _fn[9420081])
        const-val msg[8470432]:string[244] "dead at end of block" "insert auto destroy"
        (8470434 'move' msg[8470432] ret_tmp[8470422])
        ref i_x[8470437]:_ref(string)[1466327] "temp"
        (8470439 'move' i_x[8470437](8470441 'set reference' call_tmp[8470408]))
        (8470444 call deinit[21354] i_x[8470437] _ln[9420079] _fn[9420081])
        ref i_x[8470446]:_ref(string)[1466327] "temp"
        (8470448 'move' i_x[8470446](8470450 'set reference' call_tmp[8470397]))
        (8470453 call deinit[21354] i_x[8470446] _ln[9420079] _fn[9420081])
        ref i_x[8470455]:_ref(string)[1466327] "temp"
        (8470457 'move' i_x[8470455](8470459 'set reference' call_tmp[8470385]))
        (8470462 call deinit[21354] i_x[8470455] _ln[9420079] _fn[9420081])
        ref i_x[8470464]:_ref(string)[1466327] "temp"
        (8470466 'move' i_x[8470464](8470468 'set reference' call_tmp[8470373]))
        (8470471 call deinit[21354] i_x[8470464] _ln[9420079] _fn[9420081])
        ref i_x[8470473]:_ref(string)[1466327] "temp"
        (8470475 'move' i_x[8470473](8470477 'set reference' call_tmp[8470362]))
        (8470480 call deinit[21354] i_x[8470473] _ln[9420079] _fn[9420081])
        ref i_x[8470482]:_ref(string)[1466327] "temp"
        (8470484 'move' i_x[8470482](8470486 'set reference' call_tmp[8470350]))
        (8470489 call deinit[21354] i_x[8470482] _ln[9420079] _fn[9420081])
        ref i_x[8470491]:_ref(string)[1466327] "temp"
        (8470493 'move' i_x[8470491](8470495 'set reference' call_tmp[8470338]))
        (8470498 call deinit[21354] i_x[8470491] _ln[9420079] _fn[9420081])
        ref i_x[8470500]:_ref(string)[1466327] "temp"
        (8470502 'move' i_x[8470500](8470504 'set reference' call_tmp[8470327]))
        (8470507 call deinit[21354] i_x[8470500] _ln[9420079] _fn[9420081])
        (8470510 call boundsCheckHalt[404] msg[8470432] _ln[9420079] _fn[9420081])
        ref i_x[8470512]:_ref(string)[1466327] "temp"
        (8470514 'move' i_x[8470512](8470516 'set reference' msg[8470432]))
        (8470519 call deinit[21354] i_x[8470512] _ln[9420079] _fn[9420081])
      }
      {
        if(8470526 '>=' call_tmp[8470303] 64)
        {
          const-val call_tmp[8470531]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470533]:string[244] "temp"
          (8470536 call :[1496816] 1 ret_tmp[8470533] _ln[9420079] _fn[9420081])
          (8470539 'move' call_tmp[8470531] ret_tmp[8470533])
          const-val call_tmp[8470542]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470544]:string[244] "temp"
          (8470547 call +[28065] "Cannot bitshift " call_tmp[8470531] ret_tmp[8470544] _ln[9420079] _fn[9420081])
          (8470551 'move' call_tmp[8470542] ret_tmp[8470544])
          const-val call_tmp[8470554]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470556]:string[244] "temp"
          (8470559 call +[28065] call_tmp[8470542] " by " ret_tmp[8470556] _ln[9420079] _fn[9420081])
          (8470563 'move' call_tmp[8470554] ret_tmp[8470556])
          const-val call_tmp[8470566]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470568]:string[244] "temp"
          (8470571 call :[1496816] call_tmp[8470303] ret_tmp[8470568] _ln[9420079] _fn[9420081])
          (8470574 'move' call_tmp[8470566] ret_tmp[8470568])
          const-val call_tmp[8470577]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470579]:string[244] "temp"
          (8470582 call +[28065] call_tmp[8470554] call_tmp[8470566] ret_tmp[8470579] _ln[9420079] _fn[9420081])
          (8470586 'move' call_tmp[8470577] ret_tmp[8470579])
          const-val call_tmp[8470589]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470591]:string[244] "temp"
          (8470594 call +[28065] call_tmp[8470577] " because " ret_tmp[8470591] _ln[9420079] _fn[9420081])
          (8470598 'move' call_tmp[8470589] ret_tmp[8470591])
          const-val call_tmp[8470601]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470603]:string[244] "temp"
          (8470606 call :[1496816] call_tmp[8470303] ret_tmp[8470603] _ln[9420079] _fn[9420081])
          (8470609 'move' call_tmp[8470601] ret_tmp[8470603])
          const-val call_tmp[8470612]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470614]:string[244] "temp"
          (8470617 call +[28065] call_tmp[8470589] call_tmp[8470601] ret_tmp[8470614] _ln[9420079] _fn[9420081])
          (8470621 'move' call_tmp[8470612] ret_tmp[8470614])
          const-val call_tmp[8470624]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8470626]:string[244] "temp"
          (8470629 call +[28065] call_tmp[8470612] " is >= the bitwidth of " ret_tmp[8470626] _ln[9420079] _fn[9420081])
          (8470633 'move' call_tmp[8470624] ret_tmp[8470626])
          const-val ret_tmp[8470638]:string[244] "temp"
          (8470641 call +[28065] call_tmp[8470624] "int(64)" ret_tmp[8470638] _ln[9420079] _fn[9420081])
          const-val msg[8470648]:string[244] "dead at end of block" "insert auto destroy"
          (8470650 'move' msg[8470648] ret_tmp[8470638])
          ref i_x[8470653]:_ref(string)[1466327] "temp"
          (8470655 'move' i_x[8470653](8470657 'set reference' call_tmp[8470624]))
          (8470660 call deinit[21354] i_x[8470653] _ln[9420079] _fn[9420081])
          ref i_x[8470662]:_ref(string)[1466327] "temp"
          (8470664 'move' i_x[8470662](8470666 'set reference' call_tmp[8470612]))
          (8470669 call deinit[21354] i_x[8470662] _ln[9420079] _fn[9420081])
          ref i_x[8470671]:_ref(string)[1466327] "temp"
          (8470673 'move' i_x[8470671](8470675 'set reference' call_tmp[8470601]))
          (8470678 call deinit[21354] i_x[8470671] _ln[9420079] _fn[9420081])
          ref i_x[8470680]:_ref(string)[1466327] "temp"
          (8470682 'move' i_x[8470680](8470684 'set reference' call_tmp[8470589]))
          (8470687 call deinit[21354] i_x[8470680] _ln[9420079] _fn[9420081])
          ref i_x[8470689]:_ref(string)[1466327] "temp"
          (8470691 'move' i_x[8470689](8470693 'set reference' call_tmp[8470577]))
          (8470696 call deinit[21354] i_x[8470689] _ln[9420079] _fn[9420081])
          ref i_x[8470698]:_ref(string)[1466327] "temp"
          (8470700 'move' i_x[8470698](8470702 'set reference' call_tmp[8470566]))
          (8470705 call deinit[21354] i_x[8470698] _ln[9420079] _fn[9420081])
          ref i_x[8470707]:_ref(string)[1466327] "temp"
          (8470709 'move' i_x[8470707](8470711 'set reference' call_tmp[8470554]))
          (8470714 call deinit[21354] i_x[8470707] _ln[9420079] _fn[9420081])
          ref i_x[8470716]:_ref(string)[1466327] "temp"
          (8470718 'move' i_x[8470716](8470720 'set reference' call_tmp[8470542]))
          (8470723 call deinit[21354] i_x[8470716] _ln[9420079] _fn[9420081])
          ref i_x[8470725]:_ref(string)[1466327] "temp"
          (8470727 'move' i_x[8470725](8470729 'set reference' call_tmp[8470531]))
          (8470732 call deinit[21354] i_x[8470725] _ln[9420079] _fn[9420081])
          (8470735 call boundsCheckHalt[404] msg[8470648] _ln[9420079] _fn[9420081])
          ref i_x[8470737]:_ref(string)[1466327] "temp"
          (8470739 'move' i_x[8470737](8470741 'set reference' msg[8470648]))
          (8470744 call deinit[21354] i_x[8470737] _ln[9420079] _fn[9420081])
        }
      }
      const-val call_tmp[8470769]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8470771 'move' call_tmp[8470769](8470773 '^' call_tmp[8470222](8470766 'cast' int(64)[10](9533151 'cast' uint(64)[86](8470759 '<<'(8470752 'cast' uint(64)[86] 1 _ln[9420079] _fn[9420081]) call_tmp[8470303])) _ln[9420079] _fn[9420081])))
      val coerce_tmp[8470776]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8470778 'move' coerce_tmp[8470776](8470780 '.v' this[4038426] _arrays[1955550]))
      ref call_tmp[8470783]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
      (8470785 'move' call_tmp[8470783](8470787 'array_get' coerce_tmp[8470776] call_tmp[8470210]))
      const array[8470790]:_ddata(shared Module(real(32)))[1955600] "dead at end of block" "const" "insert auto destroy"
      (8470798 '=' array[8470790](8470796 'deref' call_tmp[8470783]))
      (8470801 'noop')
      ref call_tmp[8470802]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
      (8470804 'move' call_tmp[8470802](8470806 'array_get' array[8470790] call_tmp[8470769]))
      (8599633 call chpl__autoDestroy[3404907] call_tmp[8470802] _ln[9420079] _fn[9420081])
      {
        (6443182 '=' i[6443137] 0)
      }
      {
        (6443186 '<=' i[6443137] _ic__F1_high[9017640])
      }
      {
        (6443194 '+=' i[6443137] 1)
      }
    }
    (9233038 '.=' this[4038426] _size[1955538] 0)
    (4038542 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._fireAllDestructors[4244973](ref arg this[4244977]:_ref(list(shared Module(real(64)),false))[3405554], const in arg _ln[9423205]:int(64)[10], in arg _fn[9423207]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9286534]:int(64)[10] "temp"
    (9286535 'move' local__initialCapacity[9286534] _initialCapacity[225849])
    const-val coerce_tmp[4245097]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (4245101 'move' coerce_tmp[4245097](9237758 '.v' this[4244977] _size[3405514]))
    if(7321402 '<' coerce_tmp[4245097] 0)
    {
      (6107352 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9423205] _fn[9423207])
    }
    val tmp[6107369]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7390048 '==' coerce_tmp[4245097] 0)
    {
      (6107430 'move' tmp[6107369](7444232 'cast' int(64)[10](9533393 'cast' uint(64)[86](7443062 '-'(6107406 'cast' uint(64)[86] 0 _ln[9423205] _fn[9423207]) 1)) _ln[9423205] _fn[9423207]))
    }
    {
      (6107484 'move' tmp[6107369](9533389 'cast' int(64)[10](7374549 '+' 0(9533391 'cast' int(64)[10](7447112 '-' coerce_tmp[4245097] 1)))))
    }
    const-val _ic__F1_high[9017678]:int(64)[10] "temp"
    (7455230 'move' _ic__F1_high[9017678] tmp[6107369])
    val i[6452478]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6452482 'move' i[6452478] 0)
    (6452514 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6107369] 1 0 tmp[6107369] 1 _ln[9423205] _fn[9423207])
    CForLoop[6452521] hazard
    {
      if(8582680 '>=' i[6452478] 0)
      {
      }
      {
      }
      const-val call_tmp[8582694]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582696 'move' call_tmp[8582694](8582698 '+' i[6452478] local__initialCapacity[9286534]))
      if(8582717 '<' call_tmp[8582694] 1)
      {
        (8582723 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9423205] _fn[9423207])
      }
      const-val call_tmp[8582738]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582740 'move' call_tmp[8582738](8582743 call chpl_bitops_clz_64[1942612](8582735 'cast' uint(64)[86] call_tmp[8582694] _ln[9423205] _fn[9423207])))
      const-val call_tmp[8582752]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582754 'move' call_tmp[8582752](8582756 '-' 63(8582749 'cast' int(64)[10] call_tmp[8582738] _ln[9423205] _fn[9423207])))
      if(8582766 '==' 1 0)
      {
        (8582772 call halt[88131] "Attempt to divide by zero" _ln[9423205] _fn[9423207])
      }
      const-val call_tmp[8582775]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582777 'move' call_tmp[8582775](8582779 '/' call_tmp[8582752] 1))
      if(8582794 '<' local__initialCapacity[9286534] 1)
      {
        (8582800 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9423205] _fn[9423207])
      }
      const-val call_tmp[8582815]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582817 'move' call_tmp[8582815](8582820 call chpl_bitops_clz_64[1942612](8582812 'cast' uint(64)[86] local__initialCapacity[9286534] _ln[9423205] _fn[9423207])))
      const-val call_tmp[8582829]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582831 'move' call_tmp[8582829](8582833 '-' 63(8582826 'cast' int(64)[10] call_tmp[8582815] _ln[9423205] _fn[9423207])))
      if(8582843 '==' 1 0)
      {
        (8582849 call halt[88131] "Attempt to divide by zero" _ln[9423205] _fn[9423207])
      }
      const-val call_tmp[8582852]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582854 'move' call_tmp[8582852](8582856 '/' call_tmp[8582829] 1))
      const-val call_tmp[8582859]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582861 'move' call_tmp[8582859](8582863 '-' call_tmp[8582775] call_tmp[8582852]))
      const-val call_tmp[8582871]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582873 'move' call_tmp[8582871](8582875 '+' i[6452478] local__initialCapacity[9286534]))
      if(8582894 '<' call_tmp[8582871] 1)
      {
        (8582900 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9423205] _fn[9423207])
      }
      const-val call_tmp[8582915]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582917 'move' call_tmp[8582915](8582920 call chpl_bitops_clz_64[1942612](8582912 'cast' uint(64)[86] call_tmp[8582871] _ln[9423205] _fn[9423207])))
      const-val call_tmp[8582929]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582931 'move' call_tmp[8582929](8582933 '-' 63(8582926 'cast' int(64)[10] call_tmp[8582915] _ln[9423205] _fn[9423207])))
      if(8582943 '==' 1 0)
      {
        (8582949 call halt[88131] "Attempt to divide by zero" _ln[9423205] _fn[9423207])
      }
      const-val call_tmp[8582952]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8582954 'move' call_tmp[8582952](8582956 '/' call_tmp[8582929] 1))
      if(8582971 '<' call_tmp[8582952] 0)
      {
        const-val call_tmp[8582976]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582978]:string[244] "temp"
        (8582981 call :[1496816] 1 ret_tmp[8582978] _ln[9423205] _fn[9423207])
        (8582984 'move' call_tmp[8582976] ret_tmp[8582978])
        const-val call_tmp[8582987]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8582989]:string[244] "temp"
        (8582992 call +[28065] "Cannot bitshift " call_tmp[8582976] ret_tmp[8582989] _ln[9423205] _fn[9423207])
        (8582996 'move' call_tmp[8582987] ret_tmp[8582989])
        const-val call_tmp[8582999]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8583001]:string[244] "temp"
        (8583004 call +[28065] call_tmp[8582987] " by " ret_tmp[8583001] _ln[9423205] _fn[9423207])
        (8583008 'move' call_tmp[8582999] ret_tmp[8583001])
        const-val call_tmp[8583011]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8583013]:string[244] "temp"
        (8583016 call :[1496816] call_tmp[8582952] ret_tmp[8583013] _ln[9423205] _fn[9423207])
        (8583019 'move' call_tmp[8583011] ret_tmp[8583013])
        const-val call_tmp[8583022]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8583024]:string[244] "temp"
        (8583027 call +[28065] call_tmp[8582999] call_tmp[8583011] ret_tmp[8583024] _ln[9423205] _fn[9423207])
        (8583031 'move' call_tmp[8583022] ret_tmp[8583024])
        const-val call_tmp[8583034]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8583036]:string[244] "temp"
        (8583039 call +[28065] call_tmp[8583022] " because " ret_tmp[8583036] _ln[9423205] _fn[9423207])
        (8583043 'move' call_tmp[8583034] ret_tmp[8583036])
        const-val call_tmp[8583046]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8583048]:string[244] "temp"
        (8583051 call :[1496816] call_tmp[8582952] ret_tmp[8583048] _ln[9423205] _fn[9423207])
        (8583054 'move' call_tmp[8583046] ret_tmp[8583048])
        const-val call_tmp[8583057]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8583059]:string[244] "temp"
        (8583062 call +[28065] call_tmp[8583034] call_tmp[8583046] ret_tmp[8583059] _ln[9423205] _fn[9423207])
        (8583066 'move' call_tmp[8583057] ret_tmp[8583059])
        const-val ret_tmp[8583071]:string[244] "temp"
        (8583074 call +[28065] call_tmp[8583057] " is less than 0" ret_tmp[8583071] _ln[9423205] _fn[9423207])
        const-val msg[8583081]:string[244] "dead at end of block" "insert auto destroy"
        (8583083 'move' msg[8583081] ret_tmp[8583071])
        ref i_x[8583086]:_ref(string)[1466327] "temp"
        (8583088 'move' i_x[8583086](8583090 'set reference' call_tmp[8583057]))
        (8583093 call deinit[21354] i_x[8583086] _ln[9423205] _fn[9423207])
        ref i_x[8583095]:_ref(string)[1466327] "temp"
        (8583097 'move' i_x[8583095](8583099 'set reference' call_tmp[8583046]))
        (8583102 call deinit[21354] i_x[8583095] _ln[9423205] _fn[9423207])
        ref i_x[8583104]:_ref(string)[1466327] "temp"
        (8583106 'move' i_x[8583104](8583108 'set reference' call_tmp[8583034]))
        (8583111 call deinit[21354] i_x[8583104] _ln[9423205] _fn[9423207])
        ref i_x[8583113]:_ref(string)[1466327] "temp"
        (8583115 'move' i_x[8583113](8583117 'set reference' call_tmp[8583022]))
        (8583120 call deinit[21354] i_x[8583113] _ln[9423205] _fn[9423207])
        ref i_x[8583122]:_ref(string)[1466327] "temp"
        (8583124 'move' i_x[8583122](8583126 'set reference' call_tmp[8583011]))
        (8583129 call deinit[21354] i_x[8583122] _ln[9423205] _fn[9423207])
        ref i_x[8583131]:_ref(string)[1466327] "temp"
        (8583133 'move' i_x[8583131](8583135 'set reference' call_tmp[8582999]))
        (8583138 call deinit[21354] i_x[8583131] _ln[9423205] _fn[9423207])
        ref i_x[8583140]:_ref(string)[1466327] "temp"
        (8583142 'move' i_x[8583140](8583144 'set reference' call_tmp[8582987]))
        (8583147 call deinit[21354] i_x[8583140] _ln[9423205] _fn[9423207])
        ref i_x[8583149]:_ref(string)[1466327] "temp"
        (8583151 'move' i_x[8583149](8583153 'set reference' call_tmp[8582976]))
        (8583156 call deinit[21354] i_x[8583149] _ln[9423205] _fn[9423207])
        (8583159 call boundsCheckHalt[404] msg[8583081] _ln[9423205] _fn[9423207])
        ref i_x[8583161]:_ref(string)[1466327] "temp"
        (8583163 'move' i_x[8583161](8583165 'set reference' msg[8583081]))
        (8583168 call deinit[21354] i_x[8583161] _ln[9423205] _fn[9423207])
      }
      {
        if(8583175 '>=' call_tmp[8582952] 64)
        {
          const-val call_tmp[8583180]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583182]:string[244] "temp"
          (8583185 call :[1496816] 1 ret_tmp[8583182] _ln[9423205] _fn[9423207])
          (8583188 'move' call_tmp[8583180] ret_tmp[8583182])
          const-val call_tmp[8583191]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583193]:string[244] "temp"
          (8583196 call +[28065] "Cannot bitshift " call_tmp[8583180] ret_tmp[8583193] _ln[9423205] _fn[9423207])
          (8583200 'move' call_tmp[8583191] ret_tmp[8583193])
          const-val call_tmp[8583203]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583205]:string[244] "temp"
          (8583208 call +[28065] call_tmp[8583191] " by " ret_tmp[8583205] _ln[9423205] _fn[9423207])
          (8583212 'move' call_tmp[8583203] ret_tmp[8583205])
          const-val call_tmp[8583215]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583217]:string[244] "temp"
          (8583220 call :[1496816] call_tmp[8582952] ret_tmp[8583217] _ln[9423205] _fn[9423207])
          (8583223 'move' call_tmp[8583215] ret_tmp[8583217])
          const-val call_tmp[8583226]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583228]:string[244] "temp"
          (8583231 call +[28065] call_tmp[8583203] call_tmp[8583215] ret_tmp[8583228] _ln[9423205] _fn[9423207])
          (8583235 'move' call_tmp[8583226] ret_tmp[8583228])
          const-val call_tmp[8583238]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583240]:string[244] "temp"
          (8583243 call +[28065] call_tmp[8583226] " because " ret_tmp[8583240] _ln[9423205] _fn[9423207])
          (8583247 'move' call_tmp[8583238] ret_tmp[8583240])
          const-val call_tmp[8583250]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583252]:string[244] "temp"
          (8583255 call :[1496816] call_tmp[8582952] ret_tmp[8583252] _ln[9423205] _fn[9423207])
          (8583258 'move' call_tmp[8583250] ret_tmp[8583252])
          const-val call_tmp[8583261]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583263]:string[244] "temp"
          (8583266 call +[28065] call_tmp[8583238] call_tmp[8583250] ret_tmp[8583263] _ln[9423205] _fn[9423207])
          (8583270 'move' call_tmp[8583261] ret_tmp[8583263])
          const-val call_tmp[8583273]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8583275]:string[244] "temp"
          (8583278 call +[28065] call_tmp[8583261] " is >= the bitwidth of " ret_tmp[8583275] _ln[9423205] _fn[9423207])
          (8583282 'move' call_tmp[8583273] ret_tmp[8583275])
          const-val ret_tmp[8583287]:string[244] "temp"
          (8583290 call +[28065] call_tmp[8583273] "int(64)" ret_tmp[8583287] _ln[9423205] _fn[9423207])
          const-val msg[8583297]:string[244] "dead at end of block" "insert auto destroy"
          (8583299 'move' msg[8583297] ret_tmp[8583287])
          ref i_x[8583302]:_ref(string)[1466327] "temp"
          (8583304 'move' i_x[8583302](8583306 'set reference' call_tmp[8583273]))
          (8583309 call deinit[21354] i_x[8583302] _ln[9423205] _fn[9423207])
          ref i_x[8583311]:_ref(string)[1466327] "temp"
          (8583313 'move' i_x[8583311](8583315 'set reference' call_tmp[8583261]))
          (8583318 call deinit[21354] i_x[8583311] _ln[9423205] _fn[9423207])
          ref i_x[8583320]:_ref(string)[1466327] "temp"
          (8583322 'move' i_x[8583320](8583324 'set reference' call_tmp[8583250]))
          (8583327 call deinit[21354] i_x[8583320] _ln[9423205] _fn[9423207])
          ref i_x[8583329]:_ref(string)[1466327] "temp"
          (8583331 'move' i_x[8583329](8583333 'set reference' call_tmp[8583238]))
          (8583336 call deinit[21354] i_x[8583329] _ln[9423205] _fn[9423207])
          ref i_x[8583338]:_ref(string)[1466327] "temp"
          (8583340 'move' i_x[8583338](8583342 'set reference' call_tmp[8583226]))
          (8583345 call deinit[21354] i_x[8583338] _ln[9423205] _fn[9423207])
          ref i_x[8583347]:_ref(string)[1466327] "temp"
          (8583349 'move' i_x[8583347](8583351 'set reference' call_tmp[8583215]))
          (8583354 call deinit[21354] i_x[8583347] _ln[9423205] _fn[9423207])
          ref i_x[8583356]:_ref(string)[1466327] "temp"
          (8583358 'move' i_x[8583356](8583360 'set reference' call_tmp[8583203]))
          (8583363 call deinit[21354] i_x[8583356] _ln[9423205] _fn[9423207])
          ref i_x[8583365]:_ref(string)[1466327] "temp"
          (8583367 'move' i_x[8583365](8583369 'set reference' call_tmp[8583191]))
          (8583372 call deinit[21354] i_x[8583365] _ln[9423205] _fn[9423207])
          ref i_x[8583374]:_ref(string)[1466327] "temp"
          (8583376 'move' i_x[8583374](8583378 'set reference' call_tmp[8583180]))
          (8583381 call deinit[21354] i_x[8583374] _ln[9423205] _fn[9423207])
          (8583384 call boundsCheckHalt[404] msg[8583297] _ln[9423205] _fn[9423207])
          ref i_x[8583386]:_ref(string)[1466327] "temp"
          (8583388 'move' i_x[8583386](8583390 'set reference' msg[8583297]))
          (8583393 call deinit[21354] i_x[8583386] _ln[9423205] _fn[9423207])
        }
      }
      const-val call_tmp[8583418]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8583420 'move' call_tmp[8583418](8583422 '^' call_tmp[8582871](8583415 'cast' int(64)[10](9533395 'cast' uint(64)[86](8583408 '<<'(8583401 'cast' uint(64)[86] 1 _ln[9423205] _fn[9423207]) call_tmp[8582952])) _ln[9423205] _fn[9423207])))
      val coerce_tmp[8583425]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8583427 'move' coerce_tmp[8583425](8583429 '.v' this[4244977] _arrays[3405526]))
      ref call_tmp[8583432]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
      (8583434 'move' call_tmp[8583432](8583436 'array_get' coerce_tmp[8583425] call_tmp[8582859]))
      const array[8583439]:_ddata(shared Module(real(64)))[3405600] "dead at end of block" "const" "insert auto destroy"
      (8583447 '=' array[8583439](8583445 'deref' call_tmp[8583432]))
      (8583450 'noop')
      ref call_tmp[8583451]:_ref(shared Module(real(64)))[3405437] "dead after last mention" "maybe param" "temp"
      (8583453 'move' call_tmp[8583451](8583455 'array_get' array[8583439] call_tmp[8583418]))
      (8623679 call chpl__autoDestroy[4242370] call_tmp[8583451] _ln[9423205] _fn[9423207])
      {
        (6452523 '=' i[6452478] 0)
      }
      {
        (6452527 '<=' i[6452478] _ic__F1_high[9017678])
      }
      {
        (6452535 '+=' i[6452478] 1)
      }
    }
    (9237764 '.=' this[4244977] _size[3405514] 0)
    (4245093 return _void[46])
  }
  function _ref(list(string,false))[1950614]._freeAllArrays[3377842](ref arg this[3377846]:_ref(list(string,false))[1950614], const in arg _ln[9403843]:int(64)[10], in arg _fn[9403845]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9285695]:int(64)[10] "temp"
    (9285696 'move' local__initialCapacity[9285695] _initialCapacity[225849])
    if(7636638 'ptr_eq'(9221171 '.v' this[3377846] _arrays[1950579]) nil[32])
    {
      gotoReturn _end__freeAllArrays[3378145] _end__freeAllArrays[3378145]
    }
    const-val coerce_tmp[3378177]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (3378181 'move' coerce_tmp[3378177](9221189 '.v' this[3377846] _arrayCapacity[1950587]))
    if(7321242 '<' coerce_tmp[3378177] 0)
    {
      (6059821 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9403843] _fn[9403845])
    }
    val tmp[6059838]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7389523 '==' coerce_tmp[3378177] 0)
    {
      (6059899 'move' tmp[6059838](7444172 'cast' int(64)[10](9532117 'cast' uint(64)[86](7443002 '-'(6059875 'cast' uint(64)[86] 0 _ln[9403843] _fn[9403845]) 1)) _ln[9403843] _fn[9403845]))
    }
    {
      (6059953 'move' tmp[6059838](9532113 'cast' int(64)[10](7374249 '+' 0(9532115 'cast' int(64)[10](7446962 '-' coerce_tmp[3378177] 1)))))
    }
    const-val _ic__F1_high[9017431]:int(64)[10] "temp"
    (7454411 'move' _ic__F1_high[9017431] tmp[6059838])
    val i[6391871]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6391875 'move' i[6391871] 0)
    (6391907 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6059838] 1 0 tmp[6059838] 1 _ln[9403843] _fn[9403845])
    CForLoop[6391914] hazard
    {
      val coerce_tmp[6391997]:_ddata(_ddata(string))[1950652] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (6391999 'move' coerce_tmp[6391997](9221195 '.v' this[3377846] _arrays[1950579]))
      ref call_tmp[7893269]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
      (7893271 'move' call_tmp[7893269](7893273 'array_get' coerce_tmp[6391997] i[6391871]))
      if(8413262 'ptr_eq'(6392018 'deref' call_tmp[7893269]) nil[32])
      {
        continue _continueLabel[6392075] _continueLabel[6392075]
      }
      if(8412143 '<' local__initialCapacity[9285695] 1)
      {
        (8412149 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9403843] _fn[9403845])
      }
      const-val call_tmp[8412164]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8412166 'move' call_tmp[8412164](8412169 call chpl_bitops_clz_64[1942612](8412161 'cast' uint(64)[86] local__initialCapacity[9285695] _ln[9403843] _fn[9403845])))
      const-val call_tmp[8412178]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8412180 'move' call_tmp[8412178](8412182 '-' 63(8412175 'cast' int(64)[10] call_tmp[8412164] _ln[9403843] _fn[9403845])))
      if(8412192 '==' 1 0)
      {
        (8412198 call halt[88131] "Attempt to divide by zero" _ln[9403843] _fn[9403845])
      }
      const-val call_tmp[8412201]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8412203 'move' call_tmp[8412201](8412205 '/' call_tmp[8412178] 1))
      const-val call_tmp[8412208]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8412210 'move' call_tmp[8412208](8412212 '+' i[6391871] call_tmp[8412201]))
      const-val exp[8412215]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (8412217 'move' exp[8412215] call_tmp[8412208])
      val ret[8412220]:int(64)[10] "dead after last mention" "RVV" "temp"
      if(8412226 '==' call_tmp[8412208] 0)
      {
        (8412231 'move' ret[8412220] 1)
        gotoReturn _end__expBaseHelp[8413218] _end__expBaseHelp[8413218]
      }
      if(8412241 '<' call_tmp[8412208] 0)
      {
        (8412246 'move' ret[8412220] 0)
        gotoReturn _end__expBaseHelp[8413218] _end__expBaseHelp[8413218]
      }
      val c[8412252]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8412254 'move' c[8412252] 0)
      val x[8412257]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8412259 'move' x[8412257] 2)
      val tmp[8412262]:bool[19] "dead after last mention" "temp"
      (8412271 'move' tmp[8412262](8412268 '>' 2 1))
      const-val tmp[8412290]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8412292 'move' tmp[8412290](8412294 '<' 1 0))
      WhileDo[8412274]
      {
        ref i_lhs[8412276]:_ref(int(64))[1465689] "temp"
        (8412278 'move' i_lhs[8412276](8412280 'set reference' c[8412252]))
        (8412282 '+=' i_lhs[8412276] 1)
        if tmp[8412290]
        {
          const-val call_tmp[8412299]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412301]:string[244] "temp"
          (8412304 call :[1496816] x[8412257] ret_tmp[8412301] _ln[9403843] _fn[9403845])
          (8412307 'move' call_tmp[8412299] ret_tmp[8412301])
          const-val call_tmp[8412310]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412312]:string[244] "temp"
          (8412315 call +[28065] "Cannot bitshift " call_tmp[8412299] ret_tmp[8412312] _ln[9403843] _fn[9403845])
          (8412319 'move' call_tmp[8412310] ret_tmp[8412312])
          const-val call_tmp[8412322]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412324]:string[244] "temp"
          (8412327 call +[28065] call_tmp[8412310] " by " ret_tmp[8412324] _ln[9403843] _fn[9403845])
          (8412331 'move' call_tmp[8412322] ret_tmp[8412324])
          const-val call_tmp[8412334]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412336]:string[244] "temp"
          (8412339 call :[1496816] 1 ret_tmp[8412336] _ln[9403843] _fn[9403845])
          (8412342 'move' call_tmp[8412334] ret_tmp[8412336])
          const-val call_tmp[8412345]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412347]:string[244] "temp"
          (8412350 call +[28065] call_tmp[8412322] call_tmp[8412334] ret_tmp[8412347] _ln[9403843] _fn[9403845])
          (8412354 'move' call_tmp[8412345] ret_tmp[8412347])
          const-val call_tmp[8412357]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412359]:string[244] "temp"
          (8412362 call +[28065] call_tmp[8412345] " because " ret_tmp[8412359] _ln[9403843] _fn[9403845])
          (8412366 'move' call_tmp[8412357] ret_tmp[8412359])
          const-val call_tmp[8412369]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412371]:string[244] "temp"
          (8412374 call :[1496816] 1 ret_tmp[8412371] _ln[9403843] _fn[9403845])
          (8412377 'move' call_tmp[8412369] ret_tmp[8412371])
          const-val call_tmp[8412380]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412382]:string[244] "temp"
          (8412385 call +[28065] call_tmp[8412357] call_tmp[8412369] ret_tmp[8412382] _ln[9403843] _fn[9403845])
          (8412389 'move' call_tmp[8412380] ret_tmp[8412382])
          const-val ret_tmp[8412394]:string[244] "temp"
          (8412397 call +[28065] call_tmp[8412380] " is less than 0" ret_tmp[8412394] _ln[9403843] _fn[9403845])
          const-val msg[8412404]:string[244] "dead at end of block" "insert auto destroy"
          (8412406 'move' msg[8412404] ret_tmp[8412394])
          ref i_x[8412409]:_ref(string)[1466327] "temp"
          (8412411 'move' i_x[8412409](8412413 'set reference' call_tmp[8412380]))
          (8412416 call deinit[21354] i_x[8412409] _ln[9403843] _fn[9403845])
          ref i_x[8412418]:_ref(string)[1466327] "temp"
          (8412420 'move' i_x[8412418](8412422 'set reference' call_tmp[8412369]))
          (8412425 call deinit[21354] i_x[8412418] _ln[9403843] _fn[9403845])
          ref i_x[8412427]:_ref(string)[1466327] "temp"
          (8412429 'move' i_x[8412427](8412431 'set reference' call_tmp[8412357]))
          (8412434 call deinit[21354] i_x[8412427] _ln[9403843] _fn[9403845])
          ref i_x[8412436]:_ref(string)[1466327] "temp"
          (8412438 'move' i_x[8412436](8412440 'set reference' call_tmp[8412345]))
          (8412443 call deinit[21354] i_x[8412436] _ln[9403843] _fn[9403845])
          ref i_x[8412445]:_ref(string)[1466327] "temp"
          (8412447 'move' i_x[8412445](8412449 'set reference' call_tmp[8412334]))
          (8412452 call deinit[21354] i_x[8412445] _ln[9403843] _fn[9403845])
          ref i_x[8412454]:_ref(string)[1466327] "temp"
          (8412456 'move' i_x[8412454](8412458 'set reference' call_tmp[8412322]))
          (8412461 call deinit[21354] i_x[8412454] _ln[9403843] _fn[9403845])
          ref i_x[8412463]:_ref(string)[1466327] "temp"
          (8412465 'move' i_x[8412463](8412467 'set reference' call_tmp[8412310]))
          (8412470 call deinit[21354] i_x[8412463] _ln[9403843] _fn[9403845])
          ref i_x[8412472]:_ref(string)[1466327] "temp"
          (8412474 'move' i_x[8412472](8412476 'set reference' call_tmp[8412299]))
          (8412479 call deinit[21354] i_x[8412472] _ln[9403843] _fn[9403845])
          (8412482 call boundsCheckHalt[404] msg[8412404] _ln[9403843] _fn[9403845])
          ref i_x[8412484]:_ref(string)[1466327] "temp"
          (8412486 'move' i_x[8412484](8412488 'set reference' msg[8412404]))
          (8412491 call deinit[21354] i_x[8412484] _ln[9403843] _fn[9403845])
        }
        {
          if(8412498 '>=' 1 64)
          {
            const-val call_tmp[8412503]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412505]:string[244] "temp"
            (8412508 call :[1496816] x[8412257] ret_tmp[8412505] _ln[9403843] _fn[9403845])
            (8412511 'move' call_tmp[8412503] ret_tmp[8412505])
            const-val call_tmp[8412514]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412516]:string[244] "temp"
            (8412519 call +[28065] "Cannot bitshift " call_tmp[8412503] ret_tmp[8412516] _ln[9403843] _fn[9403845])
            (8412523 'move' call_tmp[8412514] ret_tmp[8412516])
            const-val call_tmp[8412526]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412528]:string[244] "temp"
            (8412531 call +[28065] call_tmp[8412514] " by " ret_tmp[8412528] _ln[9403843] _fn[9403845])
            (8412535 'move' call_tmp[8412526] ret_tmp[8412528])
            const-val call_tmp[8412538]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412540]:string[244] "temp"
            (8412543 call :[1496816] 1 ret_tmp[8412540] _ln[9403843] _fn[9403845])
            (8412546 'move' call_tmp[8412538] ret_tmp[8412540])
            const-val call_tmp[8412549]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412551]:string[244] "temp"
            (8412554 call +[28065] call_tmp[8412526] call_tmp[8412538] ret_tmp[8412551] _ln[9403843] _fn[9403845])
            (8412558 'move' call_tmp[8412549] ret_tmp[8412551])
            const-val call_tmp[8412561]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412563]:string[244] "temp"
            (8412566 call +[28065] call_tmp[8412549] " because " ret_tmp[8412563] _ln[9403843] _fn[9403845])
            (8412570 'move' call_tmp[8412561] ret_tmp[8412563])
            const-val call_tmp[8412573]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412575]:string[244] "temp"
            (8412578 call :[1496816] 1 ret_tmp[8412575] _ln[9403843] _fn[9403845])
            (8412581 'move' call_tmp[8412573] ret_tmp[8412575])
            const-val call_tmp[8412584]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412586]:string[244] "temp"
            (8412589 call +[28065] call_tmp[8412561] call_tmp[8412573] ret_tmp[8412586] _ln[9403843] _fn[9403845])
            (8412593 'move' call_tmp[8412584] ret_tmp[8412586])
            const-val call_tmp[8412596]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8412598]:string[244] "temp"
            (8412601 call +[28065] call_tmp[8412584] " is >= the bitwidth of " ret_tmp[8412598] _ln[9403843] _fn[9403845])
            (8412605 'move' call_tmp[8412596] ret_tmp[8412598])
            const-val ret_tmp[8412610]:string[244] "temp"
            (8412613 call +[28065] call_tmp[8412596] "int(64)" ret_tmp[8412610] _ln[9403843] _fn[9403845])
            const-val msg[8412620]:string[244] "dead at end of block" "insert auto destroy"
            (8412622 'move' msg[8412620] ret_tmp[8412610])
            ref i_x[8412625]:_ref(string)[1466327] "temp"
            (8412627 'move' i_x[8412625](8412629 'set reference' call_tmp[8412596]))
            (8412632 call deinit[21354] i_x[8412625] _ln[9403843] _fn[9403845])
            ref i_x[8412634]:_ref(string)[1466327] "temp"
            (8412636 'move' i_x[8412634](8412638 'set reference' call_tmp[8412584]))
            (8412641 call deinit[21354] i_x[8412634] _ln[9403843] _fn[9403845])
            ref i_x[8412643]:_ref(string)[1466327] "temp"
            (8412645 'move' i_x[8412643](8412647 'set reference' call_tmp[8412573]))
            (8412650 call deinit[21354] i_x[8412643] _ln[9403843] _fn[9403845])
            ref i_x[8412652]:_ref(string)[1466327] "temp"
            (8412654 'move' i_x[8412652](8412656 'set reference' call_tmp[8412561]))
            (8412659 call deinit[21354] i_x[8412652] _ln[9403843] _fn[9403845])
            ref i_x[8412661]:_ref(string)[1466327] "temp"
            (8412663 'move' i_x[8412661](8412665 'set reference' call_tmp[8412549]))
            (8412668 call deinit[21354] i_x[8412661] _ln[9403843] _fn[9403845])
            ref i_x[8412670]:_ref(string)[1466327] "temp"
            (8412672 'move' i_x[8412670](8412674 'set reference' call_tmp[8412538]))
            (8412677 call deinit[21354] i_x[8412670] _ln[9403843] _fn[9403845])
            ref i_x[8412679]:_ref(string)[1466327] "temp"
            (8412681 'move' i_x[8412679](8412683 'set reference' call_tmp[8412526]))
            (8412686 call deinit[21354] i_x[8412679] _ln[9403843] _fn[9403845])
            ref i_x[8412688]:_ref(string)[1466327] "temp"
            (8412690 'move' i_x[8412688](8412692 'set reference' call_tmp[8412514]))
            (8412695 call deinit[21354] i_x[8412688] _ln[9403843] _fn[9403845])
            ref i_x[8412697]:_ref(string)[1466327] "temp"
            (8412699 'move' i_x[8412697](8412701 'set reference' call_tmp[8412503]))
            (8412704 call deinit[21354] i_x[8412697] _ln[9403843] _fn[9403845])
            (8412707 call boundsCheckHalt[404] msg[8412620] _ln[9403843] _fn[9403845])
            ref i_x[8412709]:_ref(string)[1466327] "temp"
            (8412711 'move' i_x[8412709](8412713 'set reference' msg[8412620]))
            (8412716 call deinit[21354] i_x[8412709] _ln[9403843] _fn[9403845])
          }
        }
        const-val call_tmp[8412720]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8412722 'move' call_tmp[8412720](8412724 '>>' x[8412257] 1))
        (8412727 '=' x[8412257] call_tmp[8412720])
        (8412737 'move' tmp[8412262](8412734 '>' call_tmp[8412720] 1))
        tmp[8412262]
      }
      const-val call_tmp[8412747]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8412749 'move' call_tmp[8412747](8412751 '*' c[8412252](9532119 'cast' int(64)[10](8412744 '-' exp[8412215] 1))))
      if(8412768 '<' call_tmp[8412747] 0)
      {
        const-val call_tmp[8412773]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412775]:string[244] "temp"
        (8412778 call :[1496816] 2 ret_tmp[8412775] _ln[9403843] _fn[9403845])
        (8412781 'move' call_tmp[8412773] ret_tmp[8412775])
        const-val call_tmp[8412784]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412786]:string[244] "temp"
        (8412789 call +[28065] "Cannot bitshift " call_tmp[8412773] ret_tmp[8412786] _ln[9403843] _fn[9403845])
        (8412793 'move' call_tmp[8412784] ret_tmp[8412786])
        const-val call_tmp[8412796]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412798]:string[244] "temp"
        (8412801 call +[28065] call_tmp[8412784] " by " ret_tmp[8412798] _ln[9403843] _fn[9403845])
        (8412805 'move' call_tmp[8412796] ret_tmp[8412798])
        const-val call_tmp[8412808]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412810]:string[244] "temp"
        (8412813 call :[1496816] call_tmp[8412747] ret_tmp[8412810] _ln[9403843] _fn[9403845])
        (8412816 'move' call_tmp[8412808] ret_tmp[8412810])
        const-val call_tmp[8412819]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412821]:string[244] "temp"
        (8412824 call +[28065] call_tmp[8412796] call_tmp[8412808] ret_tmp[8412821] _ln[9403843] _fn[9403845])
        (8412828 'move' call_tmp[8412819] ret_tmp[8412821])
        const-val call_tmp[8412831]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412833]:string[244] "temp"
        (8412836 call +[28065] call_tmp[8412819] " because " ret_tmp[8412833] _ln[9403843] _fn[9403845])
        (8412840 'move' call_tmp[8412831] ret_tmp[8412833])
        const-val call_tmp[8412843]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412845]:string[244] "temp"
        (8412848 call :[1496816] call_tmp[8412747] ret_tmp[8412845] _ln[9403843] _fn[9403845])
        (8412851 'move' call_tmp[8412843] ret_tmp[8412845])
        const-val call_tmp[8412854]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8412856]:string[244] "temp"
        (8412859 call +[28065] call_tmp[8412831] call_tmp[8412843] ret_tmp[8412856] _ln[9403843] _fn[9403845])
        (8412863 'move' call_tmp[8412854] ret_tmp[8412856])
        const-val ret_tmp[8412868]:string[244] "temp"
        (8412871 call +[28065] call_tmp[8412854] " is less than 0" ret_tmp[8412868] _ln[9403843] _fn[9403845])
        const-val msg[8412878]:string[244] "dead at end of block" "insert auto destroy"
        (8412880 'move' msg[8412878] ret_tmp[8412868])
        ref i_x[8412883]:_ref(string)[1466327] "temp"
        (8412885 'move' i_x[8412883](8412887 'set reference' call_tmp[8412854]))
        (8412890 call deinit[21354] i_x[8412883] _ln[9403843] _fn[9403845])
        ref i_x[8412892]:_ref(string)[1466327] "temp"
        (8412894 'move' i_x[8412892](8412896 'set reference' call_tmp[8412843]))
        (8412899 call deinit[21354] i_x[8412892] _ln[9403843] _fn[9403845])
        ref i_x[8412901]:_ref(string)[1466327] "temp"
        (8412903 'move' i_x[8412901](8412905 'set reference' call_tmp[8412831]))
        (8412908 call deinit[21354] i_x[8412901] _ln[9403843] _fn[9403845])
        ref i_x[8412910]:_ref(string)[1466327] "temp"
        (8412912 'move' i_x[8412910](8412914 'set reference' call_tmp[8412819]))
        (8412917 call deinit[21354] i_x[8412910] _ln[9403843] _fn[9403845])
        ref i_x[8412919]:_ref(string)[1466327] "temp"
        (8412921 'move' i_x[8412919](8412923 'set reference' call_tmp[8412808]))
        (8412926 call deinit[21354] i_x[8412919] _ln[9403843] _fn[9403845])
        ref i_x[8412928]:_ref(string)[1466327] "temp"
        (8412930 'move' i_x[8412928](8412932 'set reference' call_tmp[8412796]))
        (8412935 call deinit[21354] i_x[8412928] _ln[9403843] _fn[9403845])
        ref i_x[8412937]:_ref(string)[1466327] "temp"
        (8412939 'move' i_x[8412937](8412941 'set reference' call_tmp[8412784]))
        (8412944 call deinit[21354] i_x[8412937] _ln[9403843] _fn[9403845])
        ref i_x[8412946]:_ref(string)[1466327] "temp"
        (8412948 'move' i_x[8412946](8412950 'set reference' call_tmp[8412773]))
        (8412953 call deinit[21354] i_x[8412946] _ln[9403843] _fn[9403845])
        (8412956 call boundsCheckHalt[404] msg[8412878] _ln[9403843] _fn[9403845])
        ref i_x[8412958]:_ref(string)[1466327] "temp"
        (8412960 'move' i_x[8412958](8412962 'set reference' msg[8412878]))
        (8412965 call deinit[21354] i_x[8412958] _ln[9403843] _fn[9403845])
      }
      {
        if(8412972 '>=' call_tmp[8412747] 64)
        {
          const-val call_tmp[8412977]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412979]:string[244] "temp"
          (8412982 call :[1496816] 2 ret_tmp[8412979] _ln[9403843] _fn[9403845])
          (8412985 'move' call_tmp[8412977] ret_tmp[8412979])
          const-val call_tmp[8412988]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8412990]:string[244] "temp"
          (8412993 call +[28065] "Cannot bitshift " call_tmp[8412977] ret_tmp[8412990] _ln[9403843] _fn[9403845])
          (8412997 'move' call_tmp[8412988] ret_tmp[8412990])
          const-val call_tmp[8413000]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8413002]:string[244] "temp"
          (8413005 call +[28065] call_tmp[8412988] " by " ret_tmp[8413002] _ln[9403843] _fn[9403845])
          (8413009 'move' call_tmp[8413000] ret_tmp[8413002])
          const-val call_tmp[8413012]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8413014]:string[244] "temp"
          (8413017 call :[1496816] call_tmp[8412747] ret_tmp[8413014] _ln[9403843] _fn[9403845])
          (8413020 'move' call_tmp[8413012] ret_tmp[8413014])
          const-val call_tmp[8413023]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8413025]:string[244] "temp"
          (8413028 call +[28065] call_tmp[8413000] call_tmp[8413012] ret_tmp[8413025] _ln[9403843] _fn[9403845])
          (8413032 'move' call_tmp[8413023] ret_tmp[8413025])
          const-val call_tmp[8413035]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8413037]:string[244] "temp"
          (8413040 call +[28065] call_tmp[8413023] " because " ret_tmp[8413037] _ln[9403843] _fn[9403845])
          (8413044 'move' call_tmp[8413035] ret_tmp[8413037])
          const-val call_tmp[8413047]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8413049]:string[244] "temp"
          (8413052 call :[1496816] call_tmp[8412747] ret_tmp[8413049] _ln[9403843] _fn[9403845])
          (8413055 'move' call_tmp[8413047] ret_tmp[8413049])
          const-val call_tmp[8413058]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8413060]:string[244] "temp"
          (8413063 call +[28065] call_tmp[8413035] call_tmp[8413047] ret_tmp[8413060] _ln[9403843] _fn[9403845])
          (8413067 'move' call_tmp[8413058] ret_tmp[8413060])
          const-val call_tmp[8413070]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8413072]:string[244] "temp"
          (8413075 call +[28065] call_tmp[8413058] " is >= the bitwidth of " ret_tmp[8413072] _ln[9403843] _fn[9403845])
          (8413079 'move' call_tmp[8413070] ret_tmp[8413072])
          const-val ret_tmp[8413084]:string[244] "temp"
          (8413087 call +[28065] call_tmp[8413070] "int(64)" ret_tmp[8413084] _ln[9403843] _fn[9403845])
          const-val msg[8413094]:string[244] "dead at end of block" "insert auto destroy"
          (8413096 'move' msg[8413094] ret_tmp[8413084])
          ref i_x[8413099]:_ref(string)[1466327] "temp"
          (8413101 'move' i_x[8413099](8413103 'set reference' call_tmp[8413070]))
          (8413106 call deinit[21354] i_x[8413099] _ln[9403843] _fn[9403845])
          ref i_x[8413108]:_ref(string)[1466327] "temp"
          (8413110 'move' i_x[8413108](8413112 'set reference' call_tmp[8413058]))
          (8413115 call deinit[21354] i_x[8413108] _ln[9403843] _fn[9403845])
          ref i_x[8413117]:_ref(string)[1466327] "temp"
          (8413119 'move' i_x[8413117](8413121 'set reference' call_tmp[8413047]))
          (8413124 call deinit[21354] i_x[8413117] _ln[9403843] _fn[9403845])
          ref i_x[8413126]:_ref(string)[1466327] "temp"
          (8413128 'move' i_x[8413126](8413130 'set reference' call_tmp[8413035]))
          (8413133 call deinit[21354] i_x[8413126] _ln[9403843] _fn[9403845])
          ref i_x[8413135]:_ref(string)[1466327] "temp"
          (8413137 'move' i_x[8413135](8413139 'set reference' call_tmp[8413023]))
          (8413142 call deinit[21354] i_x[8413135] _ln[9403843] _fn[9403845])
          ref i_x[8413144]:_ref(string)[1466327] "temp"
          (8413146 'move' i_x[8413144](8413148 'set reference' call_tmp[8413012]))
          (8413151 call deinit[21354] i_x[8413144] _ln[9403843] _fn[9403845])
          ref i_x[8413153]:_ref(string)[1466327] "temp"
          (8413155 'move' i_x[8413153](8413157 'set reference' call_tmp[8413000]))
          (8413160 call deinit[21354] i_x[8413153] _ln[9403843] _fn[9403845])
          ref i_x[8413162]:_ref(string)[1466327] "temp"
          (8413164 'move' i_x[8413162](8413166 'set reference' call_tmp[8412988]))
          (8413169 call deinit[21354] i_x[8413162] _ln[9403843] _fn[9403845])
          ref i_x[8413171]:_ref(string)[1466327] "temp"
          (8413173 'move' i_x[8413171](8413175 'set reference' call_tmp[8412977]))
          (8413178 call deinit[21354] i_x[8413171] _ln[9403843] _fn[9403845])
          (8413181 call boundsCheckHalt[404] msg[8413094] _ln[9403843] _fn[9403845])
          ref i_x[8413183]:_ref(string)[1466327] "temp"
          (8413185 'move' i_x[8413183](8413187 'set reference' msg[8413094]))
          (8413190 call deinit[21354] i_x[8413183] _ln[9403843] _fn[9403845])
        }
      }
      (8413215 'move' ret[8412220](8413212 'cast' int(64)[10](9532121 'cast' uint(64)[86](8413205 '<<'(8413198 'cast' uint(64)[86] 2 _ln[9403843] _fn[9403845]) call_tmp[8412747])) _ln[9403843] _fn[9403845]))
      label _end__expBaseHelp[8413218]
      ref call_tmp[7636286]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (7636288 'move' call_tmp[7636286](7636290 '.' this[3377846] _totalCapacity[1950590]))
      (7517441 '-=' call_tmp[7636286] ret[8412220])
      (6392067 call _freeArray[3378212] this[3377846](6392064 'deref' call_tmp[7893269]) ret[8412220] _ln[9403843] _fn[9403845])
      (7893391 '=' call_tmp[7893269] nil[32])
      label _continueLabel[6392075]
      {
        (6391916 '=' i[6391871] 0)
      }
      {
        (6391920 '<=' i[6391871] _ic__F1_high[9017431])
      }
      {
        (6391928 '+=' i[6391871] 1)
      }
    }
    (3378116 call _freeBlockArray[3254503] this[3377846](9221210 '.v' this[3377846] _arrays[1950579])(9221216 '.v' this[3377846] _arrayCapacity[1950587]) _ln[9403843] _fn[9403845])
    (9221222 '.=' this[3377846] _arrays[1950579] nil[32])
    (9221228 '.=' this[3377846] _size[1950567] 0)
    label _end__freeAllArrays[3378145]
    (3378147 return _void[46])
  }
  function _ref(list(shared Module(real(32)),false))[1955585]._freeAllArrays[4038585](ref arg this[4038589]:_ref(list(shared Module(real(32)),false))[1955585], const in arg _ln[9420103]:int(64)[10], in arg _fn[9420105]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9286497]:int(64)[10] "temp"
    (9286498 'move' local__initialCapacity[9286497] _initialCapacity[225849])
    if(7893610 'ptr_eq'(9233062 '.v' this[4038589] _arrays[1955550]) nil[32])
    {
      gotoReturn _end__freeAllArrays[4038888] _end__freeAllArrays[4038888]
    }
    const-val coerce_tmp[4038920]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (4038924 'move' coerce_tmp[4038920](9233080 '.v' this[4038589] _arrayCapacity[1955558]))
    if(7321387 '<' coerce_tmp[4038920] 0)
    {
      (6100738 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9420103] _fn[9420105])
    }
    val tmp[6100755]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7390033 '==' coerce_tmp[4038920] 0)
    {
      (6100816 'move' tmp[6100755](7444222 'cast' int(64)[10](9533157 'cast' uint(64)[86](7443052 '-'(6100792 'cast' uint(64)[86] 0 _ln[9420103] _fn[9420105]) 1)) _ln[9420103] _fn[9420105]))
    }
    {
      (6100870 'move' tmp[6100755](9533153 'cast' int(64)[10](7374539 '+' 0(9533155 'cast' int(64)[10](7447102 '-' coerce_tmp[4038920] 1)))))
    }
    const-val _ic__F1_high[9017659]:int(64)[10] "temp"
    (7455167 'move' _ic__F1_high[9017659] tmp[6100755])
    val i[6443325]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6443329 'move' i[6443325] 0)
    (6443361 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6100755] 1 0 tmp[6100755] 1 _ln[9420103] _fn[9420105])
    CForLoop[6443368] hazard
    {
      val coerce_tmp[6443451]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (6443453 'move' coerce_tmp[6443451](9233086 '.v' this[4038589] _arrays[1955550]))
      ref call_tmp[7894272]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
      (7894274 'move' call_tmp[7894272](7894276 'array_get' coerce_tmp[6443451] i[6443325]))
      if(8467851 'ptr_eq'(6443472 'deref' call_tmp[7894272]) nil[32])
      {
        continue _continueLabel[6443529] _continueLabel[6443529]
      }
      if(8466732 '<' local__initialCapacity[9286497] 1)
      {
        (8466738 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9420103] _fn[9420105])
      }
      const-val call_tmp[8466753]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8466755 'move' call_tmp[8466753](8466758 call chpl_bitops_clz_64[1942612](8466750 'cast' uint(64)[86] local__initialCapacity[9286497] _ln[9420103] _fn[9420105])))
      const-val call_tmp[8466767]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8466769 'move' call_tmp[8466767](8466771 '-' 63(8466764 'cast' int(64)[10] call_tmp[8466753] _ln[9420103] _fn[9420105])))
      if(8466781 '==' 1 0)
      {
        (8466787 call halt[88131] "Attempt to divide by zero" _ln[9420103] _fn[9420105])
      }
      const-val call_tmp[8466790]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8466792 'move' call_tmp[8466790](8466794 '/' call_tmp[8466767] 1))
      const-val call_tmp[8466797]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8466799 'move' call_tmp[8466797](8466801 '+' i[6443325] call_tmp[8466790]))
      const-val exp[8466804]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (8466806 'move' exp[8466804] call_tmp[8466797])
      val ret[8466809]:int(64)[10] "dead after last mention" "RVV" "temp"
      if(8466815 '==' call_tmp[8466797] 0)
      {
        (8466820 'move' ret[8466809] 1)
        gotoReturn _end__expBaseHelp[8467807] _end__expBaseHelp[8467807]
      }
      if(8466830 '<' call_tmp[8466797] 0)
      {
        (8466835 'move' ret[8466809] 0)
        gotoReturn _end__expBaseHelp[8467807] _end__expBaseHelp[8467807]
      }
      val c[8466841]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8466843 'move' c[8466841] 0)
      val x[8466846]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8466848 'move' x[8466846] 2)
      val tmp[8466851]:bool[19] "dead after last mention" "temp"
      (8466860 'move' tmp[8466851](8466857 '>' 2 1))
      const-val tmp[8466879]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8466881 'move' tmp[8466879](8466883 '<' 1 0))
      WhileDo[8466863]
      {
        ref i_lhs[8466865]:_ref(int(64))[1465689] "temp"
        (8466867 'move' i_lhs[8466865](8466869 'set reference' c[8466841]))
        (8466871 '+=' i_lhs[8466865] 1)
        if tmp[8466879]
        {
          const-val call_tmp[8466888]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466890]:string[244] "temp"
          (8466893 call :[1496816] x[8466846] ret_tmp[8466890] _ln[9420103] _fn[9420105])
          (8466896 'move' call_tmp[8466888] ret_tmp[8466890])
          const-val call_tmp[8466899]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466901]:string[244] "temp"
          (8466904 call +[28065] "Cannot bitshift " call_tmp[8466888] ret_tmp[8466901] _ln[9420103] _fn[9420105])
          (8466908 'move' call_tmp[8466899] ret_tmp[8466901])
          const-val call_tmp[8466911]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466913]:string[244] "temp"
          (8466916 call +[28065] call_tmp[8466899] " by " ret_tmp[8466913] _ln[9420103] _fn[9420105])
          (8466920 'move' call_tmp[8466911] ret_tmp[8466913])
          const-val call_tmp[8466923]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466925]:string[244] "temp"
          (8466928 call :[1496816] 1 ret_tmp[8466925] _ln[9420103] _fn[9420105])
          (8466931 'move' call_tmp[8466923] ret_tmp[8466925])
          const-val call_tmp[8466934]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466936]:string[244] "temp"
          (8466939 call +[28065] call_tmp[8466911] call_tmp[8466923] ret_tmp[8466936] _ln[9420103] _fn[9420105])
          (8466943 'move' call_tmp[8466934] ret_tmp[8466936])
          const-val call_tmp[8466946]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466948]:string[244] "temp"
          (8466951 call +[28065] call_tmp[8466934] " because " ret_tmp[8466948] _ln[9420103] _fn[9420105])
          (8466955 'move' call_tmp[8466946] ret_tmp[8466948])
          const-val call_tmp[8466958]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466960]:string[244] "temp"
          (8466963 call :[1496816] 1 ret_tmp[8466960] _ln[9420103] _fn[9420105])
          (8466966 'move' call_tmp[8466958] ret_tmp[8466960])
          const-val call_tmp[8466969]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8466971]:string[244] "temp"
          (8466974 call +[28065] call_tmp[8466946] call_tmp[8466958] ret_tmp[8466971] _ln[9420103] _fn[9420105])
          (8466978 'move' call_tmp[8466969] ret_tmp[8466971])
          const-val ret_tmp[8466983]:string[244] "temp"
          (8466986 call +[28065] call_tmp[8466969] " is less than 0" ret_tmp[8466983] _ln[9420103] _fn[9420105])
          const-val msg[8466993]:string[244] "dead at end of block" "insert auto destroy"
          (8466995 'move' msg[8466993] ret_tmp[8466983])
          ref i_x[8466998]:_ref(string)[1466327] "temp"
          (8467000 'move' i_x[8466998](8467002 'set reference' call_tmp[8466969]))
          (8467005 call deinit[21354] i_x[8466998] _ln[9420103] _fn[9420105])
          ref i_x[8467007]:_ref(string)[1466327] "temp"
          (8467009 'move' i_x[8467007](8467011 'set reference' call_tmp[8466958]))
          (8467014 call deinit[21354] i_x[8467007] _ln[9420103] _fn[9420105])
          ref i_x[8467016]:_ref(string)[1466327] "temp"
          (8467018 'move' i_x[8467016](8467020 'set reference' call_tmp[8466946]))
          (8467023 call deinit[21354] i_x[8467016] _ln[9420103] _fn[9420105])
          ref i_x[8467025]:_ref(string)[1466327] "temp"
          (8467027 'move' i_x[8467025](8467029 'set reference' call_tmp[8466934]))
          (8467032 call deinit[21354] i_x[8467025] _ln[9420103] _fn[9420105])
          ref i_x[8467034]:_ref(string)[1466327] "temp"
          (8467036 'move' i_x[8467034](8467038 'set reference' call_tmp[8466923]))
          (8467041 call deinit[21354] i_x[8467034] _ln[9420103] _fn[9420105])
          ref i_x[8467043]:_ref(string)[1466327] "temp"
          (8467045 'move' i_x[8467043](8467047 'set reference' call_tmp[8466911]))
          (8467050 call deinit[21354] i_x[8467043] _ln[9420103] _fn[9420105])
          ref i_x[8467052]:_ref(string)[1466327] "temp"
          (8467054 'move' i_x[8467052](8467056 'set reference' call_tmp[8466899]))
          (8467059 call deinit[21354] i_x[8467052] _ln[9420103] _fn[9420105])
          ref i_x[8467061]:_ref(string)[1466327] "temp"
          (8467063 'move' i_x[8467061](8467065 'set reference' call_tmp[8466888]))
          (8467068 call deinit[21354] i_x[8467061] _ln[9420103] _fn[9420105])
          (8467071 call boundsCheckHalt[404] msg[8466993] _ln[9420103] _fn[9420105])
          ref i_x[8467073]:_ref(string)[1466327] "temp"
          (8467075 'move' i_x[8467073](8467077 'set reference' msg[8466993]))
          (8467080 call deinit[21354] i_x[8467073] _ln[9420103] _fn[9420105])
        }
        {
          if(8467087 '>=' 1 64)
          {
            const-val call_tmp[8467092]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467094]:string[244] "temp"
            (8467097 call :[1496816] x[8466846] ret_tmp[8467094] _ln[9420103] _fn[9420105])
            (8467100 'move' call_tmp[8467092] ret_tmp[8467094])
            const-val call_tmp[8467103]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467105]:string[244] "temp"
            (8467108 call +[28065] "Cannot bitshift " call_tmp[8467092] ret_tmp[8467105] _ln[9420103] _fn[9420105])
            (8467112 'move' call_tmp[8467103] ret_tmp[8467105])
            const-val call_tmp[8467115]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467117]:string[244] "temp"
            (8467120 call +[28065] call_tmp[8467103] " by " ret_tmp[8467117] _ln[9420103] _fn[9420105])
            (8467124 'move' call_tmp[8467115] ret_tmp[8467117])
            const-val call_tmp[8467127]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467129]:string[244] "temp"
            (8467132 call :[1496816] 1 ret_tmp[8467129] _ln[9420103] _fn[9420105])
            (8467135 'move' call_tmp[8467127] ret_tmp[8467129])
            const-val call_tmp[8467138]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467140]:string[244] "temp"
            (8467143 call +[28065] call_tmp[8467115] call_tmp[8467127] ret_tmp[8467140] _ln[9420103] _fn[9420105])
            (8467147 'move' call_tmp[8467138] ret_tmp[8467140])
            const-val call_tmp[8467150]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467152]:string[244] "temp"
            (8467155 call +[28065] call_tmp[8467138] " because " ret_tmp[8467152] _ln[9420103] _fn[9420105])
            (8467159 'move' call_tmp[8467150] ret_tmp[8467152])
            const-val call_tmp[8467162]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467164]:string[244] "temp"
            (8467167 call :[1496816] 1 ret_tmp[8467164] _ln[9420103] _fn[9420105])
            (8467170 'move' call_tmp[8467162] ret_tmp[8467164])
            const-val call_tmp[8467173]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467175]:string[244] "temp"
            (8467178 call +[28065] call_tmp[8467150] call_tmp[8467162] ret_tmp[8467175] _ln[9420103] _fn[9420105])
            (8467182 'move' call_tmp[8467173] ret_tmp[8467175])
            const-val call_tmp[8467185]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8467187]:string[244] "temp"
            (8467190 call +[28065] call_tmp[8467173] " is >= the bitwidth of " ret_tmp[8467187] _ln[9420103] _fn[9420105])
            (8467194 'move' call_tmp[8467185] ret_tmp[8467187])
            const-val ret_tmp[8467199]:string[244] "temp"
            (8467202 call +[28065] call_tmp[8467185] "int(64)" ret_tmp[8467199] _ln[9420103] _fn[9420105])
            const-val msg[8467209]:string[244] "dead at end of block" "insert auto destroy"
            (8467211 'move' msg[8467209] ret_tmp[8467199])
            ref i_x[8467214]:_ref(string)[1466327] "temp"
            (8467216 'move' i_x[8467214](8467218 'set reference' call_tmp[8467185]))
            (8467221 call deinit[21354] i_x[8467214] _ln[9420103] _fn[9420105])
            ref i_x[8467223]:_ref(string)[1466327] "temp"
            (8467225 'move' i_x[8467223](8467227 'set reference' call_tmp[8467173]))
            (8467230 call deinit[21354] i_x[8467223] _ln[9420103] _fn[9420105])
            ref i_x[8467232]:_ref(string)[1466327] "temp"
            (8467234 'move' i_x[8467232](8467236 'set reference' call_tmp[8467162]))
            (8467239 call deinit[21354] i_x[8467232] _ln[9420103] _fn[9420105])
            ref i_x[8467241]:_ref(string)[1466327] "temp"
            (8467243 'move' i_x[8467241](8467245 'set reference' call_tmp[8467150]))
            (8467248 call deinit[21354] i_x[8467241] _ln[9420103] _fn[9420105])
            ref i_x[8467250]:_ref(string)[1466327] "temp"
            (8467252 'move' i_x[8467250](8467254 'set reference' call_tmp[8467138]))
            (8467257 call deinit[21354] i_x[8467250] _ln[9420103] _fn[9420105])
            ref i_x[8467259]:_ref(string)[1466327] "temp"
            (8467261 'move' i_x[8467259](8467263 'set reference' call_tmp[8467127]))
            (8467266 call deinit[21354] i_x[8467259] _ln[9420103] _fn[9420105])
            ref i_x[8467268]:_ref(string)[1466327] "temp"
            (8467270 'move' i_x[8467268](8467272 'set reference' call_tmp[8467115]))
            (8467275 call deinit[21354] i_x[8467268] _ln[9420103] _fn[9420105])
            ref i_x[8467277]:_ref(string)[1466327] "temp"
            (8467279 'move' i_x[8467277](8467281 'set reference' call_tmp[8467103]))
            (8467284 call deinit[21354] i_x[8467277] _ln[9420103] _fn[9420105])
            ref i_x[8467286]:_ref(string)[1466327] "temp"
            (8467288 'move' i_x[8467286](8467290 'set reference' call_tmp[8467092]))
            (8467293 call deinit[21354] i_x[8467286] _ln[9420103] _fn[9420105])
            (8467296 call boundsCheckHalt[404] msg[8467209] _ln[9420103] _fn[9420105])
            ref i_x[8467298]:_ref(string)[1466327] "temp"
            (8467300 'move' i_x[8467298](8467302 'set reference' msg[8467209]))
            (8467305 call deinit[21354] i_x[8467298] _ln[9420103] _fn[9420105])
          }
        }
        const-val call_tmp[8467309]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8467311 'move' call_tmp[8467309](8467313 '>>' x[8466846] 1))
        (8467316 '=' x[8466846] call_tmp[8467309])
        (8467326 'move' tmp[8466851](8467323 '>' call_tmp[8467309] 1))
        tmp[8466851]
      }
      const-val call_tmp[8467336]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8467338 'move' call_tmp[8467336](8467340 '*' c[8466841](9533159 'cast' int(64)[10](8467333 '-' exp[8466804] 1))))
      if(8467357 '<' call_tmp[8467336] 0)
      {
        const-val call_tmp[8467362]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467364]:string[244] "temp"
        (8467367 call :[1496816] 2 ret_tmp[8467364] _ln[9420103] _fn[9420105])
        (8467370 'move' call_tmp[8467362] ret_tmp[8467364])
        const-val call_tmp[8467373]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467375]:string[244] "temp"
        (8467378 call +[28065] "Cannot bitshift " call_tmp[8467362] ret_tmp[8467375] _ln[9420103] _fn[9420105])
        (8467382 'move' call_tmp[8467373] ret_tmp[8467375])
        const-val call_tmp[8467385]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467387]:string[244] "temp"
        (8467390 call +[28065] call_tmp[8467373] " by " ret_tmp[8467387] _ln[9420103] _fn[9420105])
        (8467394 'move' call_tmp[8467385] ret_tmp[8467387])
        const-val call_tmp[8467397]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467399]:string[244] "temp"
        (8467402 call :[1496816] call_tmp[8467336] ret_tmp[8467399] _ln[9420103] _fn[9420105])
        (8467405 'move' call_tmp[8467397] ret_tmp[8467399])
        const-val call_tmp[8467408]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467410]:string[244] "temp"
        (8467413 call +[28065] call_tmp[8467385] call_tmp[8467397] ret_tmp[8467410] _ln[9420103] _fn[9420105])
        (8467417 'move' call_tmp[8467408] ret_tmp[8467410])
        const-val call_tmp[8467420]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467422]:string[244] "temp"
        (8467425 call +[28065] call_tmp[8467408] " because " ret_tmp[8467422] _ln[9420103] _fn[9420105])
        (8467429 'move' call_tmp[8467420] ret_tmp[8467422])
        const-val call_tmp[8467432]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467434]:string[244] "temp"
        (8467437 call :[1496816] call_tmp[8467336] ret_tmp[8467434] _ln[9420103] _fn[9420105])
        (8467440 'move' call_tmp[8467432] ret_tmp[8467434])
        const-val call_tmp[8467443]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8467445]:string[244] "temp"
        (8467448 call +[28065] call_tmp[8467420] call_tmp[8467432] ret_tmp[8467445] _ln[9420103] _fn[9420105])
        (8467452 'move' call_tmp[8467443] ret_tmp[8467445])
        const-val ret_tmp[8467457]:string[244] "temp"
        (8467460 call +[28065] call_tmp[8467443] " is less than 0" ret_tmp[8467457] _ln[9420103] _fn[9420105])
        const-val msg[8467467]:string[244] "dead at end of block" "insert auto destroy"
        (8467469 'move' msg[8467467] ret_tmp[8467457])
        ref i_x[8467472]:_ref(string)[1466327] "temp"
        (8467474 'move' i_x[8467472](8467476 'set reference' call_tmp[8467443]))
        (8467479 call deinit[21354] i_x[8467472] _ln[9420103] _fn[9420105])
        ref i_x[8467481]:_ref(string)[1466327] "temp"
        (8467483 'move' i_x[8467481](8467485 'set reference' call_tmp[8467432]))
        (8467488 call deinit[21354] i_x[8467481] _ln[9420103] _fn[9420105])
        ref i_x[8467490]:_ref(string)[1466327] "temp"
        (8467492 'move' i_x[8467490](8467494 'set reference' call_tmp[8467420]))
        (8467497 call deinit[21354] i_x[8467490] _ln[9420103] _fn[9420105])
        ref i_x[8467499]:_ref(string)[1466327] "temp"
        (8467501 'move' i_x[8467499](8467503 'set reference' call_tmp[8467408]))
        (8467506 call deinit[21354] i_x[8467499] _ln[9420103] _fn[9420105])
        ref i_x[8467508]:_ref(string)[1466327] "temp"
        (8467510 'move' i_x[8467508](8467512 'set reference' call_tmp[8467397]))
        (8467515 call deinit[21354] i_x[8467508] _ln[9420103] _fn[9420105])
        ref i_x[8467517]:_ref(string)[1466327] "temp"
        (8467519 'move' i_x[8467517](8467521 'set reference' call_tmp[8467385]))
        (8467524 call deinit[21354] i_x[8467517] _ln[9420103] _fn[9420105])
        ref i_x[8467526]:_ref(string)[1466327] "temp"
        (8467528 'move' i_x[8467526](8467530 'set reference' call_tmp[8467373]))
        (8467533 call deinit[21354] i_x[8467526] _ln[9420103] _fn[9420105])
        ref i_x[8467535]:_ref(string)[1466327] "temp"
        (8467537 'move' i_x[8467535](8467539 'set reference' call_tmp[8467362]))
        (8467542 call deinit[21354] i_x[8467535] _ln[9420103] _fn[9420105])
        (8467545 call boundsCheckHalt[404] msg[8467467] _ln[9420103] _fn[9420105])
        ref i_x[8467547]:_ref(string)[1466327] "temp"
        (8467549 'move' i_x[8467547](8467551 'set reference' msg[8467467]))
        (8467554 call deinit[21354] i_x[8467547] _ln[9420103] _fn[9420105])
      }
      {
        if(8467561 '>=' call_tmp[8467336] 64)
        {
          const-val call_tmp[8467566]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467568]:string[244] "temp"
          (8467571 call :[1496816] 2 ret_tmp[8467568] _ln[9420103] _fn[9420105])
          (8467574 'move' call_tmp[8467566] ret_tmp[8467568])
          const-val call_tmp[8467577]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467579]:string[244] "temp"
          (8467582 call +[28065] "Cannot bitshift " call_tmp[8467566] ret_tmp[8467579] _ln[9420103] _fn[9420105])
          (8467586 'move' call_tmp[8467577] ret_tmp[8467579])
          const-val call_tmp[8467589]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467591]:string[244] "temp"
          (8467594 call +[28065] call_tmp[8467577] " by " ret_tmp[8467591] _ln[9420103] _fn[9420105])
          (8467598 'move' call_tmp[8467589] ret_tmp[8467591])
          const-val call_tmp[8467601]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467603]:string[244] "temp"
          (8467606 call :[1496816] call_tmp[8467336] ret_tmp[8467603] _ln[9420103] _fn[9420105])
          (8467609 'move' call_tmp[8467601] ret_tmp[8467603])
          const-val call_tmp[8467612]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467614]:string[244] "temp"
          (8467617 call +[28065] call_tmp[8467589] call_tmp[8467601] ret_tmp[8467614] _ln[9420103] _fn[9420105])
          (8467621 'move' call_tmp[8467612] ret_tmp[8467614])
          const-val call_tmp[8467624]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467626]:string[244] "temp"
          (8467629 call +[28065] call_tmp[8467612] " because " ret_tmp[8467626] _ln[9420103] _fn[9420105])
          (8467633 'move' call_tmp[8467624] ret_tmp[8467626])
          const-val call_tmp[8467636]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467638]:string[244] "temp"
          (8467641 call :[1496816] call_tmp[8467336] ret_tmp[8467638] _ln[9420103] _fn[9420105])
          (8467644 'move' call_tmp[8467636] ret_tmp[8467638])
          const-val call_tmp[8467647]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467649]:string[244] "temp"
          (8467652 call +[28065] call_tmp[8467624] call_tmp[8467636] ret_tmp[8467649] _ln[9420103] _fn[9420105])
          (8467656 'move' call_tmp[8467647] ret_tmp[8467649])
          const-val call_tmp[8467659]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8467661]:string[244] "temp"
          (8467664 call +[28065] call_tmp[8467647] " is >= the bitwidth of " ret_tmp[8467661] _ln[9420103] _fn[9420105])
          (8467668 'move' call_tmp[8467659] ret_tmp[8467661])
          const-val ret_tmp[8467673]:string[244] "temp"
          (8467676 call +[28065] call_tmp[8467659] "int(64)" ret_tmp[8467673] _ln[9420103] _fn[9420105])
          const-val msg[8467683]:string[244] "dead at end of block" "insert auto destroy"
          (8467685 'move' msg[8467683] ret_tmp[8467673])
          ref i_x[8467688]:_ref(string)[1466327] "temp"
          (8467690 'move' i_x[8467688](8467692 'set reference' call_tmp[8467659]))
          (8467695 call deinit[21354] i_x[8467688] _ln[9420103] _fn[9420105])
          ref i_x[8467697]:_ref(string)[1466327] "temp"
          (8467699 'move' i_x[8467697](8467701 'set reference' call_tmp[8467647]))
          (8467704 call deinit[21354] i_x[8467697] _ln[9420103] _fn[9420105])
          ref i_x[8467706]:_ref(string)[1466327] "temp"
          (8467708 'move' i_x[8467706](8467710 'set reference' call_tmp[8467636]))
          (8467713 call deinit[21354] i_x[8467706] _ln[9420103] _fn[9420105])
          ref i_x[8467715]:_ref(string)[1466327] "temp"
          (8467717 'move' i_x[8467715](8467719 'set reference' call_tmp[8467624]))
          (8467722 call deinit[21354] i_x[8467715] _ln[9420103] _fn[9420105])
          ref i_x[8467724]:_ref(string)[1466327] "temp"
          (8467726 'move' i_x[8467724](8467728 'set reference' call_tmp[8467612]))
          (8467731 call deinit[21354] i_x[8467724] _ln[9420103] _fn[9420105])
          ref i_x[8467733]:_ref(string)[1466327] "temp"
          (8467735 'move' i_x[8467733](8467737 'set reference' call_tmp[8467601]))
          (8467740 call deinit[21354] i_x[8467733] _ln[9420103] _fn[9420105])
          ref i_x[8467742]:_ref(string)[1466327] "temp"
          (8467744 'move' i_x[8467742](8467746 'set reference' call_tmp[8467589]))
          (8467749 call deinit[21354] i_x[8467742] _ln[9420103] _fn[9420105])
          ref i_x[8467751]:_ref(string)[1466327] "temp"
          (8467753 'move' i_x[8467751](8467755 'set reference' call_tmp[8467577]))
          (8467758 call deinit[21354] i_x[8467751] _ln[9420103] _fn[9420105])
          ref i_x[8467760]:_ref(string)[1466327] "temp"
          (8467762 'move' i_x[8467760](8467764 'set reference' call_tmp[8467566]))
          (8467767 call deinit[21354] i_x[8467760] _ln[9420103] _fn[9420105])
          (8467770 call boundsCheckHalt[404] msg[8467683] _ln[9420103] _fn[9420105])
          ref i_x[8467772]:_ref(string)[1466327] "temp"
          (8467774 'move' i_x[8467772](8467776 'set reference' msg[8467683]))
          (8467779 call deinit[21354] i_x[8467772] _ln[9420103] _fn[9420105])
        }
      }
      (8467804 'move' ret[8466809](8467801 'cast' int(64)[10](9533161 'cast' uint(64)[86](8467794 '<<'(8467787 'cast' uint(64)[86] 2 _ln[9420103] _fn[9420105]) call_tmp[8467336])) _ln[9420103] _fn[9420105]))
      label _end__expBaseHelp[8467807]
      ref call_tmp[7893710]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (7893712 'move' call_tmp[7893710](7893714 '.' this[4038589] _totalCapacity[1955561]))
      (7517447 '-=' call_tmp[7893710] ret[8466809])
      (6443521 call _freeArray[4038955] this[4038589](6443518 'deref' call_tmp[7894272]) ret[8466809] _ln[9420103] _fn[9420105])
      (7894394 '=' call_tmp[7894272] nil[32])
      label _continueLabel[6443529]
      {
        (6443370 '=' i[6443325] 0)
      }
      {
        (6443374 '<=' i[6443325] _ic__F1_high[9017659])
      }
      {
        (6443382 '+=' i[6443325] 1)
      }
    }
    (4038859 call _freeBlockArray[3409910] this[4038589](9233101 '.v' this[4038589] _arrays[1955550])(9233107 '.v' this[4038589] _arrayCapacity[1955558]) _ln[9420103] _fn[9420105])
    (9233113 '.=' this[4038589] _arrays[1955550] nil[32])
    (9233119 '.=' this[4038589] _size[1955538] 0)
    label _end__freeAllArrays[4038888]
    (4038890 return _void[46])
  }
  function _ref(list(shared Module(real(64)),false))[3405554]._freeAllArrays[4245136](ref arg this[4245140]:_ref(list(shared Module(real(64)),false))[3405554], const in arg _ln[9423229]:int(64)[10], in arg _fn[9423231]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val local__initialCapacity[9286543]:int(64)[10] "temp"
    (9286544 'move' local__initialCapacity[9286543] _initialCapacity[225849])
    if(8574038 'ptr_eq'(9237788 '.v' this[4245140] _arrays[3405526]) nil[32])
    {
      gotoReturn _end__freeAllArrays[4245439] _end__freeAllArrays[4245439]
    }
    const-val coerce_tmp[4245471]:int(64)[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (4245475 'move' coerce_tmp[4245471](9237806 '.v' this[4245140] _arrayCapacity[3405534]))
    if(7321417 '<' coerce_tmp[4245471] 0)
    {
      (6107706 call boundsCheckHalt[404] "With a negative count, the range must have a last index." _ln[9423229] _fn[9423231])
    }
    val tmp[6107723]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(7390063 '==' coerce_tmp[4245471] 0)
    {
      (6107784 'move' tmp[6107723](7444242 'cast' int(64)[10](9533401 'cast' uint(64)[86](7443072 '-'(6107760 'cast' uint(64)[86] 0 _ln[9423229] _fn[9423231]) 1)) _ln[9423229] _fn[9423231]))
    }
    {
      (6107838 'move' tmp[6107723](9533397 'cast' int(64)[10](7374559 '+' 0(9533399 'cast' int(64)[10](7447122 '-' coerce_tmp[4245471] 1)))))
    }
    const-val _ic__F1_high[9017697]:int(64)[10] "temp"
    (7455293 'move' _ic__F1_high[9017697] tmp[6107723])
    val i[6452666]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6452670 'move' i[6452666] 0)
    (6452702 call chpl_checkIfRangeIterWillOverflow[1518856] 0 tmp[6107723] 1 0 tmp[6107723] 1 _ln[9423229] _fn[9423231])
    CForLoop[6452709] hazard
    {
      val coerce_tmp[6452792]:_ddata(_ddata(shared Module(real(64))))[3405623] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (6452794 'move' coerce_tmp[6452792](9237812 '.v' this[4245140] _arrays[3405526]))
      ref call_tmp[8574680]:_ref(_ddata(shared Module(real(64))))[3405609] "dead after last mention" "maybe param" "temp"
      (8574682 'move' call_tmp[8574680](8574684 'array_get' coerce_tmp[6452792] i[6452666]))
      if(8581287 'ptr_eq'(6452813 'deref' call_tmp[8574680]) nil[32])
      {
        continue _continueLabel[6452870] _continueLabel[6452870]
      }
      if(8580168 '<' local__initialCapacity[9286543] 1)
      {
        (8580174 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9423229] _fn[9423231])
      }
      const-val call_tmp[8580189]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (8580191 'move' call_tmp[8580189](8580194 call chpl_bitops_clz_64[1942612](8580186 'cast' uint(64)[86] local__initialCapacity[9286543] _ln[9423229] _fn[9423231])))
      const-val call_tmp[8580203]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8580205 'move' call_tmp[8580203](8580207 '-' 63(8580200 'cast' int(64)[10] call_tmp[8580189] _ln[9423229] _fn[9423231])))
      if(8580217 '==' 1 0)
      {
        (8580223 call halt[88131] "Attempt to divide by zero" _ln[9423229] _fn[9423231])
      }
      const-val call_tmp[8580226]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8580228 'move' call_tmp[8580226](8580230 '/' call_tmp[8580203] 1))
      const-val call_tmp[8580233]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8580235 'move' call_tmp[8580233](8580237 '+' i[6452666] call_tmp[8580226]))
      const-val exp[8580240]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
      (8580242 'move' exp[8580240] call_tmp[8580233])
      val ret[8580245]:int(64)[10] "dead after last mention" "RVV" "temp"
      if(8580251 '==' call_tmp[8580233] 0)
      {
        (8580256 'move' ret[8580245] 1)
        gotoReturn _end__expBaseHelp[8581243] _end__expBaseHelp[8581243]
      }
      if(8580266 '<' call_tmp[8580233] 0)
      {
        (8580271 'move' ret[8580245] 0)
        gotoReturn _end__expBaseHelp[8581243] _end__expBaseHelp[8581243]
      }
      val c[8580277]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8580279 'move' c[8580277] 0)
      val x[8580282]:int(64)[10] "dead at end of block" "insert auto destroy"
      (8580284 'move' x[8580282] 2)
      val tmp[8580287]:bool[19] "dead after last mention" "temp"
      (8580296 'move' tmp[8580287](8580293 '>' 2 1))
      const-val tmp[8580315]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8580317 'move' tmp[8580315](8580319 '<' 1 0))
      WhileDo[8580299]
      {
        ref i_lhs[8580301]:_ref(int(64))[1465689] "temp"
        (8580303 'move' i_lhs[8580301](8580305 'set reference' c[8580277]))
        (8580307 '+=' i_lhs[8580301] 1)
        if tmp[8580315]
        {
          const-val call_tmp[8580324]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580326]:string[244] "temp"
          (8580329 call :[1496816] x[8580282] ret_tmp[8580326] _ln[9423229] _fn[9423231])
          (8580332 'move' call_tmp[8580324] ret_tmp[8580326])
          const-val call_tmp[8580335]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580337]:string[244] "temp"
          (8580340 call +[28065] "Cannot bitshift " call_tmp[8580324] ret_tmp[8580337] _ln[9423229] _fn[9423231])
          (8580344 'move' call_tmp[8580335] ret_tmp[8580337])
          const-val call_tmp[8580347]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580349]:string[244] "temp"
          (8580352 call +[28065] call_tmp[8580335] " by " ret_tmp[8580349] _ln[9423229] _fn[9423231])
          (8580356 'move' call_tmp[8580347] ret_tmp[8580349])
          const-val call_tmp[8580359]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580361]:string[244] "temp"
          (8580364 call :[1496816] 1 ret_tmp[8580361] _ln[9423229] _fn[9423231])
          (8580367 'move' call_tmp[8580359] ret_tmp[8580361])
          const-val call_tmp[8580370]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580372]:string[244] "temp"
          (8580375 call +[28065] call_tmp[8580347] call_tmp[8580359] ret_tmp[8580372] _ln[9423229] _fn[9423231])
          (8580379 'move' call_tmp[8580370] ret_tmp[8580372])
          const-val call_tmp[8580382]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580384]:string[244] "temp"
          (8580387 call +[28065] call_tmp[8580370] " because " ret_tmp[8580384] _ln[9423229] _fn[9423231])
          (8580391 'move' call_tmp[8580382] ret_tmp[8580384])
          const-val call_tmp[8580394]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580396]:string[244] "temp"
          (8580399 call :[1496816] 1 ret_tmp[8580396] _ln[9423229] _fn[9423231])
          (8580402 'move' call_tmp[8580394] ret_tmp[8580396])
          const-val call_tmp[8580405]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8580407]:string[244] "temp"
          (8580410 call +[28065] call_tmp[8580382] call_tmp[8580394] ret_tmp[8580407] _ln[9423229] _fn[9423231])
          (8580414 'move' call_tmp[8580405] ret_tmp[8580407])
          const-val ret_tmp[8580419]:string[244] "temp"
          (8580422 call +[28065] call_tmp[8580405] " is less than 0" ret_tmp[8580419] _ln[9423229] _fn[9423231])
          const-val msg[8580429]:string[244] "dead at end of block" "insert auto destroy"
          (8580431 'move' msg[8580429] ret_tmp[8580419])
          ref i_x[8580434]:_ref(string)[1466327] "temp"
          (8580436 'move' i_x[8580434](8580438 'set reference' call_tmp[8580405]))
          (8580441 call deinit[21354] i_x[8580434] _ln[9423229] _fn[9423231])
          ref i_x[8580443]:_ref(string)[1466327] "temp"
          (8580445 'move' i_x[8580443](8580447 'set reference' call_tmp[8580394]))
          (8580450 call deinit[21354] i_x[8580443] _ln[9423229] _fn[9423231])
          ref i_x[8580452]:_ref(string)[1466327] "temp"
          (8580454 'move' i_x[8580452](8580456 'set reference' call_tmp[8580382]))
          (8580459 call deinit[21354] i_x[8580452] _ln[9423229] _fn[9423231])
          ref i_x[8580461]:_ref(string)[1466327] "temp"
          (8580463 'move' i_x[8580461](8580465 'set reference' call_tmp[8580370]))
          (8580468 call deinit[21354] i_x[8580461] _ln[9423229] _fn[9423231])
          ref i_x[8580470]:_ref(string)[1466327] "temp"
          (8580472 'move' i_x[8580470](8580474 'set reference' call_tmp[8580359]))
          (8580477 call deinit[21354] i_x[8580470] _ln[9423229] _fn[9423231])
          ref i_x[8580479]:_ref(string)[1466327] "temp"
          (8580481 'move' i_x[8580479](8580483 'set reference' call_tmp[8580347]))
          (8580486 call deinit[21354] i_x[8580479] _ln[9423229] _fn[9423231])
          ref i_x[8580488]:_ref(string)[1466327] "temp"
          (8580490 'move' i_x[8580488](8580492 'set reference' call_tmp[8580335]))
          (8580495 call deinit[21354] i_x[8580488] _ln[9423229] _fn[9423231])
          ref i_x[8580497]:_ref(string)[1466327] "temp"
          (8580499 'move' i_x[8580497](8580501 'set reference' call_tmp[8580324]))
          (8580504 call deinit[21354] i_x[8580497] _ln[9423229] _fn[9423231])
          (8580507 call boundsCheckHalt[404] msg[8580429] _ln[9423229] _fn[9423231])
          ref i_x[8580509]:_ref(string)[1466327] "temp"
          (8580511 'move' i_x[8580509](8580513 'set reference' msg[8580429]))
          (8580516 call deinit[21354] i_x[8580509] _ln[9423229] _fn[9423231])
        }
        {
          if(8580523 '>=' 1 64)
          {
            const-val call_tmp[8580528]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580530]:string[244] "temp"
            (8580533 call :[1496816] x[8580282] ret_tmp[8580530] _ln[9423229] _fn[9423231])
            (8580536 'move' call_tmp[8580528] ret_tmp[8580530])
            const-val call_tmp[8580539]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580541]:string[244] "temp"
            (8580544 call +[28065] "Cannot bitshift " call_tmp[8580528] ret_tmp[8580541] _ln[9423229] _fn[9423231])
            (8580548 'move' call_tmp[8580539] ret_tmp[8580541])
            const-val call_tmp[8580551]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580553]:string[244] "temp"
            (8580556 call +[28065] call_tmp[8580539] " by " ret_tmp[8580553] _ln[9423229] _fn[9423231])
            (8580560 'move' call_tmp[8580551] ret_tmp[8580553])
            const-val call_tmp[8580563]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580565]:string[244] "temp"
            (8580568 call :[1496816] 1 ret_tmp[8580565] _ln[9423229] _fn[9423231])
            (8580571 'move' call_tmp[8580563] ret_tmp[8580565])
            const-val call_tmp[8580574]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580576]:string[244] "temp"
            (8580579 call +[28065] call_tmp[8580551] call_tmp[8580563] ret_tmp[8580576] _ln[9423229] _fn[9423231])
            (8580583 'move' call_tmp[8580574] ret_tmp[8580576])
            const-val call_tmp[8580586]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580588]:string[244] "temp"
            (8580591 call +[28065] call_tmp[8580574] " because " ret_tmp[8580588] _ln[9423229] _fn[9423231])
            (8580595 'move' call_tmp[8580586] ret_tmp[8580588])
            const-val call_tmp[8580598]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580600]:string[244] "temp"
            (8580603 call :[1496816] 1 ret_tmp[8580600] _ln[9423229] _fn[9423231])
            (8580606 'move' call_tmp[8580598] ret_tmp[8580600])
            const-val call_tmp[8580609]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580611]:string[244] "temp"
            (8580614 call +[28065] call_tmp[8580586] call_tmp[8580598] ret_tmp[8580611] _ln[9423229] _fn[9423231])
            (8580618 'move' call_tmp[8580609] ret_tmp[8580611])
            const-val call_tmp[8580621]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[8580623]:string[244] "temp"
            (8580626 call +[28065] call_tmp[8580609] " is >= the bitwidth of " ret_tmp[8580623] _ln[9423229] _fn[9423231])
            (8580630 'move' call_tmp[8580621] ret_tmp[8580623])
            const-val ret_tmp[8580635]:string[244] "temp"
            (8580638 call +[28065] call_tmp[8580621] "int(64)" ret_tmp[8580635] _ln[9423229] _fn[9423231])
            const-val msg[8580645]:string[244] "dead at end of block" "insert auto destroy"
            (8580647 'move' msg[8580645] ret_tmp[8580635])
            ref i_x[8580650]:_ref(string)[1466327] "temp"
            (8580652 'move' i_x[8580650](8580654 'set reference' call_tmp[8580621]))
            (8580657 call deinit[21354] i_x[8580650] _ln[9423229] _fn[9423231])
            ref i_x[8580659]:_ref(string)[1466327] "temp"
            (8580661 'move' i_x[8580659](8580663 'set reference' call_tmp[8580609]))
            (8580666 call deinit[21354] i_x[8580659] _ln[9423229] _fn[9423231])
            ref i_x[8580668]:_ref(string)[1466327] "temp"
            (8580670 'move' i_x[8580668](8580672 'set reference' call_tmp[8580598]))
            (8580675 call deinit[21354] i_x[8580668] _ln[9423229] _fn[9423231])
            ref i_x[8580677]:_ref(string)[1466327] "temp"
            (8580679 'move' i_x[8580677](8580681 'set reference' call_tmp[8580586]))
            (8580684 call deinit[21354] i_x[8580677] _ln[9423229] _fn[9423231])
            ref i_x[8580686]:_ref(string)[1466327] "temp"
            (8580688 'move' i_x[8580686](8580690 'set reference' call_tmp[8580574]))
            (8580693 call deinit[21354] i_x[8580686] _ln[9423229] _fn[9423231])
            ref i_x[8580695]:_ref(string)[1466327] "temp"
            (8580697 'move' i_x[8580695](8580699 'set reference' call_tmp[8580563]))
            (8580702 call deinit[21354] i_x[8580695] _ln[9423229] _fn[9423231])
            ref i_x[8580704]:_ref(string)[1466327] "temp"
            (8580706 'move' i_x[8580704](8580708 'set reference' call_tmp[8580551]))
            (8580711 call deinit[21354] i_x[8580704] _ln[9423229] _fn[9423231])
            ref i_x[8580713]:_ref(string)[1466327] "temp"
            (8580715 'move' i_x[8580713](8580717 'set reference' call_tmp[8580539]))
            (8580720 call deinit[21354] i_x[8580713] _ln[9423229] _fn[9423231])
            ref i_x[8580722]:_ref(string)[1466327] "temp"
            (8580724 'move' i_x[8580722](8580726 'set reference' call_tmp[8580528]))
            (8580729 call deinit[21354] i_x[8580722] _ln[9423229] _fn[9423231])
            (8580732 call boundsCheckHalt[404] msg[8580645] _ln[9423229] _fn[9423231])
            ref i_x[8580734]:_ref(string)[1466327] "temp"
            (8580736 'move' i_x[8580734](8580738 'set reference' msg[8580645]))
            (8580741 call deinit[21354] i_x[8580734] _ln[9423229] _fn[9423231])
          }
        }
        const-val call_tmp[8580745]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8580747 'move' call_tmp[8580745](8580749 '>>' x[8580282] 1))
        (8580752 '=' x[8580282] call_tmp[8580745])
        (8580762 'move' tmp[8580287](8580759 '>' call_tmp[8580745] 1))
        tmp[8580287]
      }
      const-val call_tmp[8580772]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8580774 'move' call_tmp[8580772](8580776 '*' c[8580277](9533403 'cast' int(64)[10](8580769 '-' exp[8580240] 1))))
      if(8580793 '<' call_tmp[8580772] 0)
      {
        const-val call_tmp[8580798]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580800]:string[244] "temp"
        (8580803 call :[1496816] 2 ret_tmp[8580800] _ln[9423229] _fn[9423231])
        (8580806 'move' call_tmp[8580798] ret_tmp[8580800])
        const-val call_tmp[8580809]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580811]:string[244] "temp"
        (8580814 call +[28065] "Cannot bitshift " call_tmp[8580798] ret_tmp[8580811] _ln[9423229] _fn[9423231])
        (8580818 'move' call_tmp[8580809] ret_tmp[8580811])
        const-val call_tmp[8580821]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580823]:string[244] "temp"
        (8580826 call +[28065] call_tmp[8580809] " by " ret_tmp[8580823] _ln[9423229] _fn[9423231])
        (8580830 'move' call_tmp[8580821] ret_tmp[8580823])
        const-val call_tmp[8580833]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580835]:string[244] "temp"
        (8580838 call :[1496816] call_tmp[8580772] ret_tmp[8580835] _ln[9423229] _fn[9423231])
        (8580841 'move' call_tmp[8580833] ret_tmp[8580835])
        const-val call_tmp[8580844]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580846]:string[244] "temp"
        (8580849 call +[28065] call_tmp[8580821] call_tmp[8580833] ret_tmp[8580846] _ln[9423229] _fn[9423231])
        (8580853 'move' call_tmp[8580844] ret_tmp[8580846])
        const-val call_tmp[8580856]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580858]:string[244] "temp"
        (8580861 call +[28065] call_tmp[8580844] " because " ret_tmp[8580858] _ln[9423229] _fn[9423231])
        (8580865 'move' call_tmp[8580856] ret_tmp[8580858])
        const-val call_tmp[8580868]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580870]:string[244] "temp"
        (8580873 call :[1496816] call_tmp[8580772] ret_tmp[8580870] _ln[9423229] _fn[9423231])
        (8580876 'move' call_tmp[8580868] ret_tmp[8580870])
        const-val call_tmp[8580879]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8580881]:string[244] "temp"
        (8580884 call +[28065] call_tmp[8580856] call_tmp[8580868] ret_tmp[8580881] _ln[9423229] _fn[9423231])
        (8580888 'move' call_tmp[8580879] ret_tmp[8580881])
        const-val ret_tmp[8580893]:string[244] "temp"
        (8580896 call +[28065] call_tmp[8580879] " is less than 0" ret_tmp[8580893] _ln[9423229] _fn[9423231])
        const-val msg[8580903]:string[244] "dead at end of block" "insert auto destroy"
        (8580905 'move' msg[8580903] ret_tmp[8580893])
        ref i_x[8580908]:_ref(string)[1466327] "temp"
        (8580910 'move' i_x[8580908](8580912 'set reference' call_tmp[8580879]))
        (8580915 call deinit[21354] i_x[8580908] _ln[9423229] _fn[9423231])
        ref i_x[8580917]:_ref(string)[1466327] "temp"
        (8580919 'move' i_x[8580917](8580921 'set reference' call_tmp[8580868]))
        (8580924 call deinit[21354] i_x[8580917] _ln[9423229] _fn[9423231])
        ref i_x[8580926]:_ref(string)[1466327] "temp"
        (8580928 'move' i_x[8580926](8580930 'set reference' call_tmp[8580856]))
        (8580933 call deinit[21354] i_x[8580926] _ln[9423229] _fn[9423231])
        ref i_x[8580935]:_ref(string)[1466327] "temp"
        (8580937 'move' i_x[8580935](8580939 'set reference' call_tmp[8580844]))
        (8580942 call deinit[21354] i_x[8580935] _ln[9423229] _fn[9423231])
        ref i_x[8580944]:_ref(string)[1466327] "temp"
        (8580946 'move' i_x[8580944](8580948 'set reference' call_tmp[8580833]))
        (8580951 call deinit[21354] i_x[8580944] _ln[9423229] _fn[9423231])
        ref i_x[8580953]:_ref(string)[1466327] "temp"
        (8580955 'move' i_x[8580953](8580957 'set reference' call_tmp[8580821]))
        (8580960 call deinit[21354] i_x[8580953] _ln[9423229] _fn[9423231])
        ref i_x[8580962]:_ref(string)[1466327] "temp"
        (8580964 'move' i_x[8580962](8580966 'set reference' call_tmp[8580809]))
        (8580969 call deinit[21354] i_x[8580962] _ln[9423229] _fn[9423231])
        ref i_x[8580971]:_ref(string)[1466327] "temp"
        (8580973 'move' i_x[8580971](8580975 'set reference' call_tmp[8580798]))
        (8580978 call deinit[21354] i_x[8580971] _ln[9423229] _fn[9423231])
        (8580981 call boundsCheckHalt[404] msg[8580903] _ln[9423229] _fn[9423231])
        ref i_x[8580983]:_ref(string)[1466327] "temp"
        (8580985 'move' i_x[8580983](8580987 'set reference' msg[8580903]))
        (8580990 call deinit[21354] i_x[8580983] _ln[9423229] _fn[9423231])
      }
      {
        if(8580997 '>=' call_tmp[8580772] 64)
        {
          const-val call_tmp[8581002]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581004]:string[244] "temp"
          (8581007 call :[1496816] 2 ret_tmp[8581004] _ln[9423229] _fn[9423231])
          (8581010 'move' call_tmp[8581002] ret_tmp[8581004])
          const-val call_tmp[8581013]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581015]:string[244] "temp"
          (8581018 call +[28065] "Cannot bitshift " call_tmp[8581002] ret_tmp[8581015] _ln[9423229] _fn[9423231])
          (8581022 'move' call_tmp[8581013] ret_tmp[8581015])
          const-val call_tmp[8581025]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581027]:string[244] "temp"
          (8581030 call +[28065] call_tmp[8581013] " by " ret_tmp[8581027] _ln[9423229] _fn[9423231])
          (8581034 'move' call_tmp[8581025] ret_tmp[8581027])
          const-val call_tmp[8581037]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581039]:string[244] "temp"
          (8581042 call :[1496816] call_tmp[8580772] ret_tmp[8581039] _ln[9423229] _fn[9423231])
          (8581045 'move' call_tmp[8581037] ret_tmp[8581039])
          const-val call_tmp[8581048]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581050]:string[244] "temp"
          (8581053 call +[28065] call_tmp[8581025] call_tmp[8581037] ret_tmp[8581050] _ln[9423229] _fn[9423231])
          (8581057 'move' call_tmp[8581048] ret_tmp[8581050])
          const-val call_tmp[8581060]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581062]:string[244] "temp"
          (8581065 call +[28065] call_tmp[8581048] " because " ret_tmp[8581062] _ln[9423229] _fn[9423231])
          (8581069 'move' call_tmp[8581060] ret_tmp[8581062])
          const-val call_tmp[8581072]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581074]:string[244] "temp"
          (8581077 call :[1496816] call_tmp[8580772] ret_tmp[8581074] _ln[9423229] _fn[9423231])
          (8581080 'move' call_tmp[8581072] ret_tmp[8581074])
          const-val call_tmp[8581083]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581085]:string[244] "temp"
          (8581088 call +[28065] call_tmp[8581060] call_tmp[8581072] ret_tmp[8581085] _ln[9423229] _fn[9423231])
          (8581092 'move' call_tmp[8581083] ret_tmp[8581085])
          const-val call_tmp[8581095]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[8581097]:string[244] "temp"
          (8581100 call +[28065] call_tmp[8581083] " is >= the bitwidth of " ret_tmp[8581097] _ln[9423229] _fn[9423231])
          (8581104 'move' call_tmp[8581095] ret_tmp[8581097])
          const-val ret_tmp[8581109]:string[244] "temp"
          (8581112 call +[28065] call_tmp[8581095] "int(64)" ret_tmp[8581109] _ln[9423229] _fn[9423231])
          const-val msg[8581119]:string[244] "dead at end of block" "insert auto destroy"
          (8581121 'move' msg[8581119] ret_tmp[8581109])
          ref i_x[8581124]:_ref(string)[1466327] "temp"
          (8581126 'move' i_x[8581124](8581128 'set reference' call_tmp[8581095]))
          (8581131 call deinit[21354] i_x[8581124] _ln[9423229] _fn[9423231])
          ref i_x[8581133]:_ref(string)[1466327] "temp"
          (8581135 'move' i_x[8581133](8581137 'set reference' call_tmp[8581083]))
          (8581140 call deinit[21354] i_x[8581133] _ln[9423229] _fn[9423231])
          ref i_x[8581142]:_ref(string)[1466327] "temp"
          (8581144 'move' i_x[8581142](8581146 'set reference' call_tmp[8581072]))
          (8581149 call deinit[21354] i_x[8581142] _ln[9423229] _fn[9423231])
          ref i_x[8581151]:_ref(string)[1466327] "temp"
          (8581153 'move' i_x[8581151](8581155 'set reference' call_tmp[8581060]))
          (8581158 call deinit[21354] i_x[8581151] _ln[9423229] _fn[9423231])
          ref i_x[8581160]:_ref(string)[1466327] "temp"
          (8581162 'move' i_x[8581160](8581164 'set reference' call_tmp[8581048]))
          (8581167 call deinit[21354] i_x[8581160] _ln[9423229] _fn[9423231])
          ref i_x[8581169]:_ref(string)[1466327] "temp"
          (8581171 'move' i_x[8581169](8581173 'set reference' call_tmp[8581037]))
          (8581176 call deinit[21354] i_x[8581169] _ln[9423229] _fn[9423231])
          ref i_x[8581178]:_ref(string)[1466327] "temp"
          (8581180 'move' i_x[8581178](8581182 'set reference' call_tmp[8581025]))
          (8581185 call deinit[21354] i_x[8581178] _ln[9423229] _fn[9423231])
          ref i_x[8581187]:_ref(string)[1466327] "temp"
          (8581189 'move' i_x[8581187](8581191 'set reference' call_tmp[8581013]))
          (8581194 call deinit[21354] i_x[8581187] _ln[9423229] _fn[9423231])
          ref i_x[8581196]:_ref(string)[1466327] "temp"
          (8581198 'move' i_x[8581196](8581200 'set reference' call_tmp[8581002]))
          (8581203 call deinit[21354] i_x[8581196] _ln[9423229] _fn[9423231])
          (8581206 call boundsCheckHalt[404] msg[8581119] _ln[9423229] _fn[9423231])
          ref i_x[8581208]:_ref(string)[1466327] "temp"
          (8581210 'move' i_x[8581208](8581212 'set reference' msg[8581119]))
          (8581215 call deinit[21354] i_x[8581208] _ln[9423229] _fn[9423231])
        }
      }
      (8581240 'move' ret[8580245](8581237 'cast' int(64)[10](9533405 'cast' uint(64)[86](8581230 '<<'(8581223 'cast' uint(64)[86] 2 _ln[9423229] _fn[9423231]) call_tmp[8580772])) _ln[9423229] _fn[9423231]))
      label _end__expBaseHelp[8581243]
      ref call_tmp[8574138]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
      (8574140 'move' call_tmp[8574138](8574142 '.' this[4245140] _totalCapacity[3405537]))
      (7517453 '-=' call_tmp[8574138] ret[8580245])
      (6452862 call _freeArray[4245506] this[4245140](6452859 'deref' call_tmp[8574680]) ret[8580245] _ln[9423229] _fn[9423231])
      (8574802 '=' call_tmp[8574680] nil[32])
      label _continueLabel[6452870]
      {
        (6452711 '=' i[6452666] 0)
      }
      {
        (6452715 '<=' i[6452666] _ic__F1_high[9017697])
      }
      {
        (6452723 '+=' i[6452666] 1)
      }
    }
    (4245410 call _freeBlockArray[3866221] this[4245140](9237827 '.v' this[4245140] _arrays[3405526])(9237833 '.v' this[4245140] _arrayCapacity[3405534]) _ln[9423229] _fn[9423231])
    (9237839 '.=' this[4245140] _arrays[3405526] nil[32])
    (9237845 '.=' this[4245140] _size[3405514] 0)
    label _end__freeAllArrays[4245439]
    (4245441 return _void[46])
  }
  function _ref(list(string,false))[1950614]._clearLocked[3377589](ref arg this[3377593]:_ref(list(string,false))[1950614], const in arg _ln[9474857]:int(64)[10], in arg _fn[9474859]:int(32)[66]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3377603 call _fireAllDestructors[3377679] this[3377593] _ln[9474857] _fn[9474859])
    (3377609 call _freeAllArrays[3377842] this[3377593] _ln[9474857] _fn[9474859])
    (3377675 call _firstTimeInitializeArrays[1950796] this[3377593] _ln[9474857] _fn[9474859])
    (3377676 return _void[46])
  }
  function _ref(list(string,false))[1950614].this[3420332](const  ref arg this[3420336]:_ref(list(string,false))[1950614], const in arg i[3420338]:int(64)[10], const in arg _ln[9404659]:int(64)[10], in arg _fn[9404661]:int(32)[66]) const ref : _ref(string)[1466327] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val local__initialCapacity[9285754]:int(64)[10] "temp"
    (9285755 'move' local__initialCapacity[9285754] _initialCapacity[225849])
    val tmp[8472262]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(8472259 '>=' i[3420338] 0)
    {
      (8472280 'move' tmp[8472262](8472277 '<' i[3420338](8472270 '.v' this[3420336] _size[1950567])))
    }
    {
      (8472284 'move' tmp[8472262] 0)
    }
    if(7351512 'u!' tmp[8472262])
    {
      const-val call_tmp[3420589]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546563]:string[244] "temp"
      (3420594 call :[1496816] i[3420338] ret_tmp[5546563] _ln[9404659] _fn[9404661])
      (5546566 'move' call_tmp[3420589] ret_tmp[5546563])
      const-val ret_tmp[5540388]:string[244] "temp"
      (3420602 call +[28065] "Invalid list index: " call_tmp[3420589] ret_tmp[5540388] _ln[9404659] _fn[9404661])
      const-val msg[3420605]:string[244] "dead at end of block" "const" "insert auto destroy"
      (3420607 'move' msg[3420605] ret_tmp[5540388])
      ref i_x[7342990]:_ref(string)[1466327] "temp"
      (7342994 'move' i_x[7342990](7342992 'set reference' call_tmp[3420589]))
      (7342998 call deinit[21354] i_x[7342990] _ln[9404659] _fn[9404661])
      (3420612 call halt[88131] msg[3420605] _ln[9404659] _fn[9404661])
      ref i_x[7343002]:_ref(string)[1466327] "temp"
      (7343006 'move' i_x[7343002](7343004 'set reference' msg[3420605]))
      (7343010 call deinit[21354] i_x[7343002] _ln[9404659] _fn[9404661])
    }
    if(8414655 '>=' i[3420338] 0)
    {
    }
    {
    }
    const-val call_tmp[8414669]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414671 'move' call_tmp[8414669](8414673 '+' i[3420338] local__initialCapacity[9285754]))
    if(8414692 '<' call_tmp[8414669] 1)
    {
      (8414698 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404659] _fn[9404661])
    }
    const-val call_tmp[8414713]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414715 'move' call_tmp[8414713](8414718 call chpl_bitops_clz_64[1942612](8414710 'cast' uint(64)[86] call_tmp[8414669] _ln[9404659] _fn[9404661])))
    const-val call_tmp[8414727]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414729 'move' call_tmp[8414727](8414731 '-' 63(8414724 'cast' int(64)[10] call_tmp[8414713] _ln[9404659] _fn[9404661])))
    if(8414741 '==' 1 0)
    {
      (8414747 call halt[88131] "Attempt to divide by zero" _ln[9404659] _fn[9404661])
    }
    const-val call_tmp[8414750]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414752 'move' call_tmp[8414750](8414754 '/' call_tmp[8414727] 1))
    if(8414769 '<' local__initialCapacity[9285754] 1)
    {
      (8414775 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404659] _fn[9404661])
    }
    const-val call_tmp[8414790]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414792 'move' call_tmp[8414790](8414795 call chpl_bitops_clz_64[1942612](8414787 'cast' uint(64)[86] local__initialCapacity[9285754] _ln[9404659] _fn[9404661])))
    const-val call_tmp[8414804]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414806 'move' call_tmp[8414804](8414808 '-' 63(8414801 'cast' int(64)[10] call_tmp[8414790] _ln[9404659] _fn[9404661])))
    if(8414818 '==' 1 0)
    {
      (8414824 call halt[88131] "Attempt to divide by zero" _ln[9404659] _fn[9404661])
    }
    const-val call_tmp[8414827]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414829 'move' call_tmp[8414827](8414831 '/' call_tmp[8414804] 1))
    const-val call_tmp[8414834]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414836 'move' call_tmp[8414834](8414838 '-' call_tmp[8414750] call_tmp[8414827]))
    const-val call_tmp[8414846]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414848 'move' call_tmp[8414846](8414850 '+' i[3420338] local__initialCapacity[9285754]))
    if(8414869 '<' call_tmp[8414846] 1)
    {
      (8414875 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9404659] _fn[9404661])
    }
    const-val call_tmp[8414890]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414892 'move' call_tmp[8414890](8414895 call chpl_bitops_clz_64[1942612](8414887 'cast' uint(64)[86] call_tmp[8414846] _ln[9404659] _fn[9404661])))
    const-val call_tmp[8414904]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414906 'move' call_tmp[8414904](8414908 '-' 63(8414901 'cast' int(64)[10] call_tmp[8414890] _ln[9404659] _fn[9404661])))
    if(8414918 '==' 1 0)
    {
      (8414924 call halt[88131] "Attempt to divide by zero" _ln[9404659] _fn[9404661])
    }
    const-val call_tmp[8414927]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8414929 'move' call_tmp[8414927](8414931 '/' call_tmp[8414904] 1))
    if(8414946 '<' call_tmp[8414927] 0)
    {
      const-val call_tmp[8414951]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414953]:string[244] "temp"
      (8414956 call :[1496816] 1 ret_tmp[8414953] _ln[9404659] _fn[9404661])
      (8414959 'move' call_tmp[8414951] ret_tmp[8414953])
      const-val call_tmp[8414962]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414964]:string[244] "temp"
      (8414967 call +[28065] "Cannot bitshift " call_tmp[8414951] ret_tmp[8414964] _ln[9404659] _fn[9404661])
      (8414971 'move' call_tmp[8414962] ret_tmp[8414964])
      const-val call_tmp[8414974]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414976]:string[244] "temp"
      (8414979 call +[28065] call_tmp[8414962] " by " ret_tmp[8414976] _ln[9404659] _fn[9404661])
      (8414983 'move' call_tmp[8414974] ret_tmp[8414976])
      const-val call_tmp[8414986]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414988]:string[244] "temp"
      (8414991 call :[1496816] call_tmp[8414927] ret_tmp[8414988] _ln[9404659] _fn[9404661])
      (8414994 'move' call_tmp[8414986] ret_tmp[8414988])
      const-val call_tmp[8414997]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8414999]:string[244] "temp"
      (8415002 call +[28065] call_tmp[8414974] call_tmp[8414986] ret_tmp[8414999] _ln[9404659] _fn[9404661])
      (8415006 'move' call_tmp[8414997] ret_tmp[8414999])
      const-val call_tmp[8415009]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8415011]:string[244] "temp"
      (8415014 call +[28065] call_tmp[8414997] " because " ret_tmp[8415011] _ln[9404659] _fn[9404661])
      (8415018 'move' call_tmp[8415009] ret_tmp[8415011])
      const-val call_tmp[8415021]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8415023]:string[244] "temp"
      (8415026 call :[1496816] call_tmp[8414927] ret_tmp[8415023] _ln[9404659] _fn[9404661])
      (8415029 'move' call_tmp[8415021] ret_tmp[8415023])
      const-val call_tmp[8415032]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8415034]:string[244] "temp"
      (8415037 call +[28065] call_tmp[8415009] call_tmp[8415021] ret_tmp[8415034] _ln[9404659] _fn[9404661])
      (8415041 'move' call_tmp[8415032] ret_tmp[8415034])
      const-val ret_tmp[8415046]:string[244] "temp"
      (8415049 call +[28065] call_tmp[8415032] " is less than 0" ret_tmp[8415046] _ln[9404659] _fn[9404661])
      const-val msg[8415056]:string[244] "dead at end of block" "insert auto destroy"
      (8415058 'move' msg[8415056] ret_tmp[8415046])
      ref i_x[8415061]:_ref(string)[1466327] "temp"
      (8415063 'move' i_x[8415061](8415065 'set reference' call_tmp[8415032]))
      (8415068 call deinit[21354] i_x[8415061] _ln[9404659] _fn[9404661])
      ref i_x[8415070]:_ref(string)[1466327] "temp"
      (8415072 'move' i_x[8415070](8415074 'set reference' call_tmp[8415021]))
      (8415077 call deinit[21354] i_x[8415070] _ln[9404659] _fn[9404661])
      ref i_x[8415079]:_ref(string)[1466327] "temp"
      (8415081 'move' i_x[8415079](8415083 'set reference' call_tmp[8415009]))
      (8415086 call deinit[21354] i_x[8415079] _ln[9404659] _fn[9404661])
      ref i_x[8415088]:_ref(string)[1466327] "temp"
      (8415090 'move' i_x[8415088](8415092 'set reference' call_tmp[8414997]))
      (8415095 call deinit[21354] i_x[8415088] _ln[9404659] _fn[9404661])
      ref i_x[8415097]:_ref(string)[1466327] "temp"
      (8415099 'move' i_x[8415097](8415101 'set reference' call_tmp[8414986]))
      (8415104 call deinit[21354] i_x[8415097] _ln[9404659] _fn[9404661])
      ref i_x[8415106]:_ref(string)[1466327] "temp"
      (8415108 'move' i_x[8415106](8415110 'set reference' call_tmp[8414974]))
      (8415113 call deinit[21354] i_x[8415106] _ln[9404659] _fn[9404661])
      ref i_x[8415115]:_ref(string)[1466327] "temp"
      (8415117 'move' i_x[8415115](8415119 'set reference' call_tmp[8414962]))
      (8415122 call deinit[21354] i_x[8415115] _ln[9404659] _fn[9404661])
      ref i_x[8415124]:_ref(string)[1466327] "temp"
      (8415126 'move' i_x[8415124](8415128 'set reference' call_tmp[8414951]))
      (8415131 call deinit[21354] i_x[8415124] _ln[9404659] _fn[9404661])
      (8415134 call boundsCheckHalt[404] msg[8415056] _ln[9404659] _fn[9404661])
      ref i_x[8415136]:_ref(string)[1466327] "temp"
      (8415138 'move' i_x[8415136](8415140 'set reference' msg[8415056]))
      (8415143 call deinit[21354] i_x[8415136] _ln[9404659] _fn[9404661])
    }
    {
      if(8415150 '>=' call_tmp[8414927] 64)
      {
        const-val call_tmp[8415155]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415157]:string[244] "temp"
        (8415160 call :[1496816] 1 ret_tmp[8415157] _ln[9404659] _fn[9404661])
        (8415163 'move' call_tmp[8415155] ret_tmp[8415157])
        const-val call_tmp[8415166]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415168]:string[244] "temp"
        (8415171 call +[28065] "Cannot bitshift " call_tmp[8415155] ret_tmp[8415168] _ln[9404659] _fn[9404661])
        (8415175 'move' call_tmp[8415166] ret_tmp[8415168])
        const-val call_tmp[8415178]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415180]:string[244] "temp"
        (8415183 call +[28065] call_tmp[8415166] " by " ret_tmp[8415180] _ln[9404659] _fn[9404661])
        (8415187 'move' call_tmp[8415178] ret_tmp[8415180])
        const-val call_tmp[8415190]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415192]:string[244] "temp"
        (8415195 call :[1496816] call_tmp[8414927] ret_tmp[8415192] _ln[9404659] _fn[9404661])
        (8415198 'move' call_tmp[8415190] ret_tmp[8415192])
        const-val call_tmp[8415201]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415203]:string[244] "temp"
        (8415206 call +[28065] call_tmp[8415178] call_tmp[8415190] ret_tmp[8415203] _ln[9404659] _fn[9404661])
        (8415210 'move' call_tmp[8415201] ret_tmp[8415203])
        const-val call_tmp[8415213]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415215]:string[244] "temp"
        (8415218 call +[28065] call_tmp[8415201] " because " ret_tmp[8415215] _ln[9404659] _fn[9404661])
        (8415222 'move' call_tmp[8415213] ret_tmp[8415215])
        const-val call_tmp[8415225]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415227]:string[244] "temp"
        (8415230 call :[1496816] call_tmp[8414927] ret_tmp[8415227] _ln[9404659] _fn[9404661])
        (8415233 'move' call_tmp[8415225] ret_tmp[8415227])
        const-val call_tmp[8415236]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415238]:string[244] "temp"
        (8415241 call +[28065] call_tmp[8415213] call_tmp[8415225] ret_tmp[8415238] _ln[9404659] _fn[9404661])
        (8415245 'move' call_tmp[8415236] ret_tmp[8415238])
        const-val call_tmp[8415248]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8415250]:string[244] "temp"
        (8415253 call +[28065] call_tmp[8415236] " is >= the bitwidth of " ret_tmp[8415250] _ln[9404659] _fn[9404661])
        (8415257 'move' call_tmp[8415248] ret_tmp[8415250])
        const-val ret_tmp[8415262]:string[244] "temp"
        (8415265 call +[28065] call_tmp[8415248] "int(64)" ret_tmp[8415262] _ln[9404659] _fn[9404661])
        const-val msg[8415272]:string[244] "dead at end of block" "insert auto destroy"
        (8415274 'move' msg[8415272] ret_tmp[8415262])
        ref i_x[8415277]:_ref(string)[1466327] "temp"
        (8415279 'move' i_x[8415277](8415281 'set reference' call_tmp[8415248]))
        (8415284 call deinit[21354] i_x[8415277] _ln[9404659] _fn[9404661])
        ref i_x[8415286]:_ref(string)[1466327] "temp"
        (8415288 'move' i_x[8415286](8415290 'set reference' call_tmp[8415236]))
        (8415293 call deinit[21354] i_x[8415286] _ln[9404659] _fn[9404661])
        ref i_x[8415295]:_ref(string)[1466327] "temp"
        (8415297 'move' i_x[8415295](8415299 'set reference' call_tmp[8415225]))
        (8415302 call deinit[21354] i_x[8415295] _ln[9404659] _fn[9404661])
        ref i_x[8415304]:_ref(string)[1466327] "temp"
        (8415306 'move' i_x[8415304](8415308 'set reference' call_tmp[8415213]))
        (8415311 call deinit[21354] i_x[8415304] _ln[9404659] _fn[9404661])
        ref i_x[8415313]:_ref(string)[1466327] "temp"
        (8415315 'move' i_x[8415313](8415317 'set reference' call_tmp[8415201]))
        (8415320 call deinit[21354] i_x[8415313] _ln[9404659] _fn[9404661])
        ref i_x[8415322]:_ref(string)[1466327] "temp"
        (8415324 'move' i_x[8415322](8415326 'set reference' call_tmp[8415190]))
        (8415329 call deinit[21354] i_x[8415322] _ln[9404659] _fn[9404661])
        ref i_x[8415331]:_ref(string)[1466327] "temp"
        (8415333 'move' i_x[8415331](8415335 'set reference' call_tmp[8415178]))
        (8415338 call deinit[21354] i_x[8415331] _ln[9404659] _fn[9404661])
        ref i_x[8415340]:_ref(string)[1466327] "temp"
        (8415342 'move' i_x[8415340](8415344 'set reference' call_tmp[8415166]))
        (8415347 call deinit[21354] i_x[8415340] _ln[9404659] _fn[9404661])
        ref i_x[8415349]:_ref(string)[1466327] "temp"
        (8415351 'move' i_x[8415349](8415353 'set reference' call_tmp[8415155]))
        (8415356 call deinit[21354] i_x[8415349] _ln[9404659] _fn[9404661])
        (8415359 call boundsCheckHalt[404] msg[8415272] _ln[9404659] _fn[9404661])
        ref i_x[8415361]:_ref(string)[1466327] "temp"
        (8415363 'move' i_x[8415361](8415365 'set reference' msg[8415272]))
        (8415368 call deinit[21354] i_x[8415361] _ln[9404659] _fn[9404661])
      }
    }
    const-val call_tmp[8415393]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8415395 'move' call_tmp[8415393](8415397 '^' call_tmp[8414846](8415390 'cast' int(64)[10](9532209 'cast' uint(64)[86](8415383 '<<'(8415376 'cast' uint(64)[86] 1 _ln[9404659] _fn[9404661]) call_tmp[8414927])) _ln[9404659] _fn[9404661])))
    val coerce_tmp[8415400]:_ddata(_ddata(string))[1950652] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8415402 'move' coerce_tmp[8415400](8415404 '.v' this[3420336] _arrays[1950579]))
    ref call_tmp[8415407]:_ref(_ddata(string))[1950638] "dead after last mention" "maybe param" "temp"
    (8415409 'move' call_tmp[8415407](8415411 'array_get' coerce_tmp[8415400] call_tmp[8414834]))
    const array[8415414]:_ddata(string)[1950629] "dead at end of block" "const" "insert auto destroy"
    (8415422 '=' array[8415414](8415420 'deref' call_tmp[8415407]))
    (8415425 'noop')
    ref call_tmp[8415426]:_ref(string)[1466327] "dead after last mention" "maybe param" "temp"
    (8415428 'move' call_tmp[8415426](8415430 'array_get' array[8415414] call_tmp[8415393]))
    (3420646 return call_tmp[8415426])
  }
  function _ref(list(shared Module(real(32)),false))[1955585].this[5199374](const  ref arg this[5199378]:_ref(list(shared Module(real(32)),false))[1955585], const in arg i[5199380]:int(64)[10], const in arg _ln[9436669]:int(64)[10], in arg _fn[9436671]:int(32)[66]) const ref : _ref(shared Module(real(32)))[1955047] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val local__initialCapacity[9288137]:int(64)[10] "temp"
    (9288138 'move' local__initialCapacity[9288137] _initialCapacity[225849])
    val tmp[8916003]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(8916000 '>=' i[5199380] 0)
    {
      (8916021 'move' tmp[8916003](8916018 '<' i[5199380](8916011 '.v' this[5199378] _size[1955538])))
    }
    {
      (8916025 'move' tmp[8916003] 0)
    }
    if(7353105 'u!' tmp[8916003])
    {
      const-val call_tmp[5199631]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546971]:string[244] "temp"
      (5199636 call :[1496816] i[5199380] ret_tmp[5546971] _ln[9436669] _fn[9436671])
      (5546974 'move' call_tmp[5199631] ret_tmp[5546971])
      const-val ret_tmp[5541168]:string[244] "temp"
      (5199644 call +[28065] "Invalid list index: " call_tmp[5199631] ret_tmp[5541168] _ln[9436669] _fn[9436671])
      const-val msg[5199647]:string[244] "dead at end of block" "const" "insert auto destroy"
      (5199649 'move' msg[5199647] ret_tmp[5541168])
      ref i_x[7346146]:_ref(string)[1466327] "temp"
      (7346150 'move' i_x[7346146](7346148 'set reference' call_tmp[5199631]))
      (7346154 call deinit[21354] i_x[7346146] _ln[9436669] _fn[9436671])
      (5199654 call halt[88131] msg[5199647] _ln[9436669] _fn[9436671])
      ref i_x[7346158]:_ref(string)[1466327] "temp"
      (7346162 'move' i_x[7346158](7346160 'set reference' msg[5199647]))
      (7346166 call deinit[21354] i_x[7346158] _ln[9436669] _fn[9436671])
    }
    if(8469244 '>=' i[5199380] 0)
    {
    }
    {
    }
    const-val call_tmp[8469258]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469260 'move' call_tmp[8469258](8469262 '+' i[5199380] local__initialCapacity[9288137]))
    if(8469281 '<' call_tmp[8469258] 1)
    {
      (8469287 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9436669] _fn[9436671])
    }
    const-val call_tmp[8469302]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469304 'move' call_tmp[8469302](8469307 call chpl_bitops_clz_64[1942612](8469299 'cast' uint(64)[86] call_tmp[8469258] _ln[9436669] _fn[9436671])))
    const-val call_tmp[8469316]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469318 'move' call_tmp[8469316](8469320 '-' 63(8469313 'cast' int(64)[10] call_tmp[8469302] _ln[9436669] _fn[9436671])))
    if(8469330 '==' 1 0)
    {
      (8469336 call halt[88131] "Attempt to divide by zero" _ln[9436669] _fn[9436671])
    }
    const-val call_tmp[8469339]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469341 'move' call_tmp[8469339](8469343 '/' call_tmp[8469316] 1))
    if(8469358 '<' local__initialCapacity[9288137] 1)
    {
      (8469364 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9436669] _fn[9436671])
    }
    const-val call_tmp[8469379]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469381 'move' call_tmp[8469379](8469384 call chpl_bitops_clz_64[1942612](8469376 'cast' uint(64)[86] local__initialCapacity[9288137] _ln[9436669] _fn[9436671])))
    const-val call_tmp[8469393]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469395 'move' call_tmp[8469393](8469397 '-' 63(8469390 'cast' int(64)[10] call_tmp[8469379] _ln[9436669] _fn[9436671])))
    if(8469407 '==' 1 0)
    {
      (8469413 call halt[88131] "Attempt to divide by zero" _ln[9436669] _fn[9436671])
    }
    const-val call_tmp[8469416]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469418 'move' call_tmp[8469416](8469420 '/' call_tmp[8469393] 1))
    const-val call_tmp[8469423]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469425 'move' call_tmp[8469423](8469427 '-' call_tmp[8469339] call_tmp[8469416]))
    const-val call_tmp[8469435]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469437 'move' call_tmp[8469435](8469439 '+' i[5199380] local__initialCapacity[9288137]))
    if(8469458 '<' call_tmp[8469435] 1)
    {
      (8469464 call halt[88131] "Can't take the log() of a non-positive integer" _ln[9436669] _fn[9436671])
    }
    const-val call_tmp[8469479]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469481 'move' call_tmp[8469479](8469484 call chpl_bitops_clz_64[1942612](8469476 'cast' uint(64)[86] call_tmp[8469435] _ln[9436669] _fn[9436671])))
    const-val call_tmp[8469493]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469495 'move' call_tmp[8469493](8469497 '-' 63(8469490 'cast' int(64)[10] call_tmp[8469479] _ln[9436669] _fn[9436671])))
    if(8469507 '==' 1 0)
    {
      (8469513 call halt[88131] "Attempt to divide by zero" _ln[9436669] _fn[9436671])
    }
    const-val call_tmp[8469516]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469518 'move' call_tmp[8469516](8469520 '/' call_tmp[8469493] 1))
    if(8469535 '<' call_tmp[8469516] 0)
    {
      const-val call_tmp[8469540]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469542]:string[244] "temp"
      (8469545 call :[1496816] 1 ret_tmp[8469542] _ln[9436669] _fn[9436671])
      (8469548 'move' call_tmp[8469540] ret_tmp[8469542])
      const-val call_tmp[8469551]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469553]:string[244] "temp"
      (8469556 call +[28065] "Cannot bitshift " call_tmp[8469540] ret_tmp[8469553] _ln[9436669] _fn[9436671])
      (8469560 'move' call_tmp[8469551] ret_tmp[8469553])
      const-val call_tmp[8469563]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469565]:string[244] "temp"
      (8469568 call +[28065] call_tmp[8469551] " by " ret_tmp[8469565] _ln[9436669] _fn[9436671])
      (8469572 'move' call_tmp[8469563] ret_tmp[8469565])
      const-val call_tmp[8469575]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469577]:string[244] "temp"
      (8469580 call :[1496816] call_tmp[8469516] ret_tmp[8469577] _ln[9436669] _fn[9436671])
      (8469583 'move' call_tmp[8469575] ret_tmp[8469577])
      const-val call_tmp[8469586]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469588]:string[244] "temp"
      (8469591 call +[28065] call_tmp[8469563] call_tmp[8469575] ret_tmp[8469588] _ln[9436669] _fn[9436671])
      (8469595 'move' call_tmp[8469586] ret_tmp[8469588])
      const-val call_tmp[8469598]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469600]:string[244] "temp"
      (8469603 call +[28065] call_tmp[8469586] " because " ret_tmp[8469600] _ln[9436669] _fn[9436671])
      (8469607 'move' call_tmp[8469598] ret_tmp[8469600])
      const-val call_tmp[8469610]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469612]:string[244] "temp"
      (8469615 call :[1496816] call_tmp[8469516] ret_tmp[8469612] _ln[9436669] _fn[9436671])
      (8469618 'move' call_tmp[8469610] ret_tmp[8469612])
      const-val call_tmp[8469621]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[8469623]:string[244] "temp"
      (8469626 call +[28065] call_tmp[8469598] call_tmp[8469610] ret_tmp[8469623] _ln[9436669] _fn[9436671])
      (8469630 'move' call_tmp[8469621] ret_tmp[8469623])
      const-val ret_tmp[8469635]:string[244] "temp"
      (8469638 call +[28065] call_tmp[8469621] " is less than 0" ret_tmp[8469635] _ln[9436669] _fn[9436671])
      const-val msg[8469645]:string[244] "dead at end of block" "insert auto destroy"
      (8469647 'move' msg[8469645] ret_tmp[8469635])
      ref i_x[8469650]:_ref(string)[1466327] "temp"
      (8469652 'move' i_x[8469650](8469654 'set reference' call_tmp[8469621]))
      (8469657 call deinit[21354] i_x[8469650] _ln[9436669] _fn[9436671])
      ref i_x[8469659]:_ref(string)[1466327] "temp"
      (8469661 'move' i_x[8469659](8469663 'set reference' call_tmp[8469610]))
      (8469666 call deinit[21354] i_x[8469659] _ln[9436669] _fn[9436671])
      ref i_x[8469668]:_ref(string)[1466327] "temp"
      (8469670 'move' i_x[8469668](8469672 'set reference' call_tmp[8469598]))
      (8469675 call deinit[21354] i_x[8469668] _ln[9436669] _fn[9436671])
      ref i_x[8469677]:_ref(string)[1466327] "temp"
      (8469679 'move' i_x[8469677](8469681 'set reference' call_tmp[8469586]))
      (8469684 call deinit[21354] i_x[8469677] _ln[9436669] _fn[9436671])
      ref i_x[8469686]:_ref(string)[1466327] "temp"
      (8469688 'move' i_x[8469686](8469690 'set reference' call_tmp[8469575]))
      (8469693 call deinit[21354] i_x[8469686] _ln[9436669] _fn[9436671])
      ref i_x[8469695]:_ref(string)[1466327] "temp"
      (8469697 'move' i_x[8469695](8469699 'set reference' call_tmp[8469563]))
      (8469702 call deinit[21354] i_x[8469695] _ln[9436669] _fn[9436671])
      ref i_x[8469704]:_ref(string)[1466327] "temp"
      (8469706 'move' i_x[8469704](8469708 'set reference' call_tmp[8469551]))
      (8469711 call deinit[21354] i_x[8469704] _ln[9436669] _fn[9436671])
      ref i_x[8469713]:_ref(string)[1466327] "temp"
      (8469715 'move' i_x[8469713](8469717 'set reference' call_tmp[8469540]))
      (8469720 call deinit[21354] i_x[8469713] _ln[9436669] _fn[9436671])
      (8469723 call boundsCheckHalt[404] msg[8469645] _ln[9436669] _fn[9436671])
      ref i_x[8469725]:_ref(string)[1466327] "temp"
      (8469727 'move' i_x[8469725](8469729 'set reference' msg[8469645]))
      (8469732 call deinit[21354] i_x[8469725] _ln[9436669] _fn[9436671])
    }
    {
      if(8469739 '>=' call_tmp[8469516] 64)
      {
        const-val call_tmp[8469744]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469746]:string[244] "temp"
        (8469749 call :[1496816] 1 ret_tmp[8469746] _ln[9436669] _fn[9436671])
        (8469752 'move' call_tmp[8469744] ret_tmp[8469746])
        const-val call_tmp[8469755]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469757]:string[244] "temp"
        (8469760 call +[28065] "Cannot bitshift " call_tmp[8469744] ret_tmp[8469757] _ln[9436669] _fn[9436671])
        (8469764 'move' call_tmp[8469755] ret_tmp[8469757])
        const-val call_tmp[8469767]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469769]:string[244] "temp"
        (8469772 call +[28065] call_tmp[8469755] " by " ret_tmp[8469769] _ln[9436669] _fn[9436671])
        (8469776 'move' call_tmp[8469767] ret_tmp[8469769])
        const-val call_tmp[8469779]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469781]:string[244] "temp"
        (8469784 call :[1496816] call_tmp[8469516] ret_tmp[8469781] _ln[9436669] _fn[9436671])
        (8469787 'move' call_tmp[8469779] ret_tmp[8469781])
        const-val call_tmp[8469790]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469792]:string[244] "temp"
        (8469795 call +[28065] call_tmp[8469767] call_tmp[8469779] ret_tmp[8469792] _ln[9436669] _fn[9436671])
        (8469799 'move' call_tmp[8469790] ret_tmp[8469792])
        const-val call_tmp[8469802]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469804]:string[244] "temp"
        (8469807 call +[28065] call_tmp[8469790] " because " ret_tmp[8469804] _ln[9436669] _fn[9436671])
        (8469811 'move' call_tmp[8469802] ret_tmp[8469804])
        const-val call_tmp[8469814]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469816]:string[244] "temp"
        (8469819 call :[1496816] call_tmp[8469516] ret_tmp[8469816] _ln[9436669] _fn[9436671])
        (8469822 'move' call_tmp[8469814] ret_tmp[8469816])
        const-val call_tmp[8469825]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469827]:string[244] "temp"
        (8469830 call +[28065] call_tmp[8469802] call_tmp[8469814] ret_tmp[8469827] _ln[9436669] _fn[9436671])
        (8469834 'move' call_tmp[8469825] ret_tmp[8469827])
        const-val call_tmp[8469837]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8469839]:string[244] "temp"
        (8469842 call +[28065] call_tmp[8469825] " is >= the bitwidth of " ret_tmp[8469839] _ln[9436669] _fn[9436671])
        (8469846 'move' call_tmp[8469837] ret_tmp[8469839])
        const-val ret_tmp[8469851]:string[244] "temp"
        (8469854 call +[28065] call_tmp[8469837] "int(64)" ret_tmp[8469851] _ln[9436669] _fn[9436671])
        const-val msg[8469861]:string[244] "dead at end of block" "insert auto destroy"
        (8469863 'move' msg[8469861] ret_tmp[8469851])
        ref i_x[8469866]:_ref(string)[1466327] "temp"
        (8469868 'move' i_x[8469866](8469870 'set reference' call_tmp[8469837]))
        (8469873 call deinit[21354] i_x[8469866] _ln[9436669] _fn[9436671])
        ref i_x[8469875]:_ref(string)[1466327] "temp"
        (8469877 'move' i_x[8469875](8469879 'set reference' call_tmp[8469825]))
        (8469882 call deinit[21354] i_x[8469875] _ln[9436669] _fn[9436671])
        ref i_x[8469884]:_ref(string)[1466327] "temp"
        (8469886 'move' i_x[8469884](8469888 'set reference' call_tmp[8469814]))
        (8469891 call deinit[21354] i_x[8469884] _ln[9436669] _fn[9436671])
        ref i_x[8469893]:_ref(string)[1466327] "temp"
        (8469895 'move' i_x[8469893](8469897 'set reference' call_tmp[8469802]))
        (8469900 call deinit[21354] i_x[8469893] _ln[9436669] _fn[9436671])
        ref i_x[8469902]:_ref(string)[1466327] "temp"
        (8469904 'move' i_x[8469902](8469906 'set reference' call_tmp[8469790]))
        (8469909 call deinit[21354] i_x[8469902] _ln[9436669] _fn[9436671])
        ref i_x[8469911]:_ref(string)[1466327] "temp"
        (8469913 'move' i_x[8469911](8469915 'set reference' call_tmp[8469779]))
        (8469918 call deinit[21354] i_x[8469911] _ln[9436669] _fn[9436671])
        ref i_x[8469920]:_ref(string)[1466327] "temp"
        (8469922 'move' i_x[8469920](8469924 'set reference' call_tmp[8469767]))
        (8469927 call deinit[21354] i_x[8469920] _ln[9436669] _fn[9436671])
        ref i_x[8469929]:_ref(string)[1466327] "temp"
        (8469931 'move' i_x[8469929](8469933 'set reference' call_tmp[8469755]))
        (8469936 call deinit[21354] i_x[8469929] _ln[9436669] _fn[9436671])
        ref i_x[8469938]:_ref(string)[1466327] "temp"
        (8469940 'move' i_x[8469938](8469942 'set reference' call_tmp[8469744]))
        (8469945 call deinit[21354] i_x[8469938] _ln[9436669] _fn[9436671])
        (8469948 call boundsCheckHalt[404] msg[8469861] _ln[9436669] _fn[9436671])
        ref i_x[8469950]:_ref(string)[1466327] "temp"
        (8469952 'move' i_x[8469950](8469954 'set reference' msg[8469861]))
        (8469957 call deinit[21354] i_x[8469950] _ln[9436669] _fn[9436671])
      }
    }
    const-val call_tmp[8469982]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (8469984 'move' call_tmp[8469982](8469986 '^' call_tmp[8469435](8469979 'cast' int(64)[10](9533769 'cast' uint(64)[86](8469972 '<<'(8469965 'cast' uint(64)[86] 1 _ln[9436669] _fn[9436671]) call_tmp[8469516])) _ln[9436669] _fn[9436671])))
    val coerce_tmp[8469989]:_ddata(_ddata(shared Module(real(32))))[1955623] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (8469991 'move' coerce_tmp[8469989](8469993 '.v' this[5199378] _arrays[1955550]))
    ref call_tmp[8469996]:_ref(_ddata(shared Module(real(32))))[1955609] "dead after last mention" "maybe param" "temp"
    (8469998 'move' call_tmp[8469996](8470000 'array_get' coerce_tmp[8469989] call_tmp[8469423]))
    const array[8470003]:_ddata(shared Module(real(32)))[1955600] "dead at end of block" "const" "insert auto destroy"
    (8470011 '=' array[8470003](8470009 'deref' call_tmp[8469996]))
    (8470014 'noop')
    ref call_tmp[8470015]:_ref(shared Module(real(32)))[1955047] "dead after last mention" "maybe param" "temp"
    (8470017 'move' call_tmp[8470015](8470019 'array_get' array[8470003] call_tmp[8469982]))
    (5199688 return call_tmp[8470015])
  }
  function _ref(list(string,false))[1950614].init[3377164](ref arg this[3377168]:_ref(list(string,false))[1950614], const  ref arg reader[3377174]:_ref(fileReader(false,jsonDeserializer))[3276799], const  ref arg deserializer[3377176]:_ref(jsonDeserializer)[1922054], ref arg error_out[5510380]:_ref(Error)[1471765], const in arg _ln[9462361]:int(64)[10], in arg _fn[9462363]:int(32)[66]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3377192 call init[3377206] this[3377168] _ln[9462361] _fn[9462363])
    val error[5510385]:Error[85511] "error variable" "temp"
    (5510387 'move' error[5510385] nil[32])
    (3377200 call _readHelper[3377450] this[3377168] reader[3377174] deserializer[3377176] error[5510385] _ln[9462361] _fn[9462363])
    if(7302954 '!=' error[5510385] nil[32])
    {
      (5510391 '=' error_out[5510380] error[5510385])
      gotoErrorHandlingReturn _endinit[5510382] _endinit[5510382]
    }
    label _endinit[5510382]
    (3377203 return _void[46])
  }
  function _ref(list(string,false))[1950614]._readHelper[3377450](ref arg this[3377454]:_ref(list(string,false))[1950614], const  ref arg r[3377456]:_ref(fileReader(false,jsonDeserializer))[3276799], const  ref arg deserializer[3377458]:_ref(jsonDeserializer)[1922054], ref arg error_out[5510399]:_ref(Error)[1471765], const in arg _ln[9462355]:int(64)[10], in arg _fn[9462357]:int(32)[66]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (3377478 call _clearLocked[3377589] this[3377454] _ln[9462355] _fn[9462357])
    const-val call_tmp[3377480]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "dead at end of block" "maybe param" "temp"
    val error[5510404]:Error[85511] "error variable" "temp"
    (5510406 'move' error[5510404] nil[32])
    const-val ret_tmp[5589660]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "temp"
    (3377488 call startList[3378433] deserializer[3377458] r[3377456] error[5510404] ret_tmp[5589660] _ln[9462355] _fn[9462357])
    (5589663 'move' call_tmp[3377480] ret_tmp[5589660])
    if(7302962 '!=' error[5510404] nil[32])
    {
      (5510410 '=' error_out[5510399] error[5510404])
      gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
    }
    val des[3377490]:ListDeserializer(fileReader(false,jsonDeserializer))[3378540] "dead at end of block" "insert auto destroy"
    (3377492 'move' des[3377490] call_tmp[3377480])
    val tmp[3377503]:bool[19] "dead after last mention" "temp"
    const-val call_tmp[3377505]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[5510419]:Error[85511] "error variable" "temp"
    (5510421 'move' error[5510419] nil[32])
    (3377507 'move' call_tmp[3377505](3377513 call hasMore[3378621] des[3377490] error[5510419] _ln[9462355] _fn[9462357]))
    if(7302970 '!=' error[5510419] nil[32])
    {
      (5510425 '=' error_out[5510399] error[5510419])
      ref _field_destructor_tmp_[8622623]:_ref(fileReader(false,jsonDeserializer))[3276799] "temp"
      (8622625 'move' _field_destructor_tmp_[8622623](8622627 '.' des[3377490] reader[3378534]))
      (8622631 call deinit[4209365] _field_destructor_tmp_[8622623] _ln[9462355] _fn[9462357])
      gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
    }
    (3377514 'move' tmp[3377503] call_tmp[3377505])
    WhileDo[3377519] hazard
    {
      const-val call_tmp[3377530]:string[244] "dead at end of block" "maybe param" "temp"
      val error[5510434]:Error[85511] "error variable" "temp"
      (5510436 'move' error[5510434] nil[32])
      const-val ret_tmp[5589672]:string[244] "temp"
      (3377538 call readElement[3378816] des[3377490] error[5510434] ret_tmp[5589672] _ln[9462355] _fn[9462357])
      (5589675 'move' call_tmp[3377530] ret_tmp[5589672])
      if(7302978 '!=' error[5510434] nil[32])
      {
        (5510440 '=' error_out[5510399] error[5510434])
        ref _field_destructor_tmp_[8622642]:_ref(fileReader(false,jsonDeserializer))[3276799] "temp"
        (8622644 'move' _field_destructor_tmp_[8622642](8622646 '.' des[3377490] reader[3378534]))
        (8622650 call deinit[4209365] _field_destructor_tmp_[8622642] _ln[9462355] _fn[9462357])
        gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
      }
      const-val elt[3377540]:string[244] "dead at end of block" "no auto destroy"
      (3377542 'move' elt[3377540] call_tmp[3377530])
      (3377551 call _appendByRef[3253564] this[3377454] elt[3377540] _ln[9462355] _fn[9462357])
      const-val call_tmp[3377557]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[5510449]:Error[85511] "error variable" "temp"
      (5510451 'move' error[5510449] nil[32])
      (3377559 'move' call_tmp[3377557](3377565 call hasMore[3378621] des[3377490] error[5510449] _ln[9462355] _fn[9462357]))
      if(7302986 '!=' error[5510449] nil[32])
      {
        (5510455 '=' error_out[5510399] error[5510449])
        ref _field_destructor_tmp_[8622661]:_ref(fileReader(false,jsonDeserializer))[3276799] "temp"
        (8622663 'move' _field_destructor_tmp_[8622661](8622665 '.' des[3377490] reader[3378534]))
        (8622669 call deinit[4209365] _field_destructor_tmp_[8622661] _ln[9462355] _fn[9462357])
        gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
      }
      (3377566 'move' tmp[3377503] call_tmp[3377557])
      tmp[3377503]
    }
    val error[5510464]:Error[85511] "error variable" "temp"
    (5510466 'move' error[5510464] nil[32])
    (3377577 call endList[3379351] des[3377490] error[5510464] _ln[9462355] _fn[9462357])
    if(7302994 '!=' error[5510464] nil[32])
    {
      (5510470 '=' error_out[5510399] error[5510464])
      ref _field_destructor_tmp_[8622680]:_ref(fileReader(false,jsonDeserializer))[3276799] "temp"
      (8622682 'move' _field_destructor_tmp_[8622680](8622684 '.' des[3377490] reader[3378534]))
      (8622688 call deinit[4209365] _field_destructor_tmp_[8622680] _ln[9462355] _fn[9462357])
      gotoErrorHandlingReturn _end_readHelper[5510401] _end_readHelper[5510401]
    }
    ref _field_destructor_tmp_[8622699]:_ref(fileReader(false,jsonDeserializer))[3276799] "temp"
    (8622701 'move' _field_destructor_tmp_[8622699](8622703 '.' des[3377490] reader[3378534]))
    (8622707 call deinit[4209365] _field_destructor_tmp_[8622699] _ln[9462355] _fn[9462357])
    label _end_readHelper[5510401]
    (3377585 return _void[46])
  }
  type list(string,false)[1950598] val _size[1950567]:int(64)[10] val _arrays[1950579]:_ddata(_ddata(string))[1950652] val _arrayCapacity[1950587]:int(64)[10] val _totalCapacity[1950590]:int(64)[10]
  type list(shared Module(real(32)),false)[1955569] val _size[1955538]:int(64)[10] val _arrays[1955550]:_ddata(_ddata(shared Module(real(32))))[1955623] val _arrayCapacity[1955558]:int(64)[10] val _totalCapacity[1955561]:int(64)[10]
  type list(shared Module(real(64)),false)[3405545] val _size[3405514]:int(64)[10] val _arrays[3405526]:_ddata(_ddata(shared Module(real(64))))[3405623] val _arrayCapacity[3405534]:int(64)[10] val _totalCapacity[3405537]:int(64)[10]
}
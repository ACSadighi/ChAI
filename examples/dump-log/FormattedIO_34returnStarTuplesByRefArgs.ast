AST dump for FormattedIO after pass returnStarTuplesByRefArgs.
Module use list: ChapelStandard IO CTypes POSIX OS Regex 

{
  function chpl__init_FormattedIO[468471]() : void[4] "insert line file info" "module init" "resolved"
  {
    (619055 return _void[46])
  }
  function _toChar[3322847](const  ref arg x[3322849]:string[244], ref arg _retArg[5588996]:(int(32),bool)[3040996]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val chr[3322967]:int(32)[66] "dead at end of block" "insert auto destroy"
    (3323086 'move' chr[3322967] 0)
    val nbytes[3322980]:int(32)[66] "dead at end of block" "insert auto destroy"
    (3323089 'move' nbytes[3322980] 0)
    const-val ret[7400685]:string[244] "dead after last mention" "RVV" "temp"
    val ret[7400687]:string[244] "dead at end of block" "insert auto destroy"
    (7400690 call init[21321] ret[7400687])
    const-val coerce_tmp[7400692]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7400694 'move' coerce_tmp[7400692](7400696 '.v' x[3322849] cachedNumCodepoints[21293]))
    (7400699 '.=' ret[7400687] cachedNumCodepoints[21293] coerce_tmp[7400692])
    (7400704 call initWithBorrowedBuffer[1470549] ret[7400687] x[3322849])
    (7400707 '=' ret[7400685] ret[7400687])
    const-val local_x[3322995]:string[244] "dead at end of block" "insert auto destroy"
    (3322997 'move' local_x[3322995] ret[7400685])
    val coerce_tmp[7489576]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (7489578 'move' coerce_tmp[7489576](7489580 '.v' local_x[3322995] buff[21299]))
    (7489583 'noop')
    val call_tmp[7489584]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
    (7489586 'move' call_tmp[7489584](7489588 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489576]))
    val ret[7398220]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7398222 '=' ret[7398220](7398224 '.v' local_x[3322995] buffLen[21281]))
    (3323027 call qio_decode_char_buf[167528] chr[3322967] nbytes[3322980] call_tmp[7489584] ret[7398220])
    const-val ret_tmp[5584402]:(int(32),bool)[3040996] "temp"
    val this_x0[9109074]:int(32)[66]
    (8355357 'move' this_x0[9109074] chr[3322967])
    (9109082 '.=' ret_tmp[5584402] x0[3040992] this_x0[9109074])
    (9109086 '.=' ret_tmp[5584402] x1[3040994] 1)
    ref i_x[7342402]:string[244] "temp"
    (7342406 'move' i_x[7342402](7342404 'set reference' local_x[3322995]))
    (7342410 call deinit[21354] i_x[7342402])
    label _end__toChar[3323052]
    (5588998 '=' _retArg[5588996] ret_tmp[5584402])
    (5589000 return _void[46])
  }
  function fileWriter(false,defaultSerializer)[1838949]._format_reader[3037225](const  ref arg this[3037231]:fileWriter(false,defaultSerializer)[1838949], const  ref arg fmtStr[3037233]:string[244], ref arg cur[3037237]:uint(64)[86], const in arg len[3037241]:uint(64)[86], ref arg error[3037243]:errorCode[12828], ref arg conv[3037245]:qio_conv_t[167955], ref arg gotConv[3037247]:bool[19], ref arg style[3037249]:iostyleInternal[164872]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val coerce_tmp[3037547]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3037551 'move' coerce_tmp[3037547](3037549 'deref' error[3037243]))
    const-val call_tmp[7354668]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354670 'move' call_tmp[7354668](7354673 call qio_err_iserr[12868] coerce_tmp[3037547]))
    const-val call_tmp[7354675]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354677 'move' call_tmp[7354675](7354679 '==' call_tmp[7354668] 0))
    if call_tmp[7354675]
    {
      const-val call_tmp[3037277]:string[244] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret[7400509]:string[244] "dead after last mention" "RVV" "temp"
      val ret[7400511]:string[244] "dead at end of block" "insert auto destroy"
      (7400514 call init[21321] ret[7400511])
      const-val coerce_tmp[7400516]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7400518 'move' coerce_tmp[7400516](7400520 '.v' fmtStr[3037233] cachedNumCodepoints[21293]))
      (7400523 '.=' ret[7400511] cachedNumCodepoints[21293] coerce_tmp[7400516])
      (7400528 call initWithBorrowedBuffer[1470549] ret[7400511] fmtStr[3037233])
      (7400531 '=' ret[7400509] ret[7400511])
      (5538823 'move' call_tmp[3037277] ret[7400509])
      val call_tmp[3037286]:c_ptrConst(int(8))[1466333] "dead at end of block" "expr temp" "maybe param" "temp"
      val coerce_tmp[7489408]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (7489410 'move' coerce_tmp[7489408](7489412 '.v' call_tmp[3037277] buff[21299]))
      (7489415 'noop')
      val call_tmp[7489416]:c_ptrConst(int(8))[1466333] "dead after last mention" "maybe param" "temp"
      (7489418 'move' call_tmp[7489416](7489420 'cast' c_ptrConst(int(8))[1466333] coerce_tmp[7489408]))
      (3037288 'move' call_tmp[3037286] call_tmp[7489416])
      val tmp[3037301]:bool[19] "dead after last mention" "temp"
      const-val coerce_tmp[3037556]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037560 'move' coerce_tmp[3037556](3037558 'deref' cur[3037237]))
      const-val tmp[7566008]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7566010 'move' tmp[7566008](7566012 '<' coerce_tmp[3037556] len[3037241]))
      (3037311 'move' tmp[3037301] tmp[7566008])
      WhileDo[3037316] hazard
      {
        (7393726 '=' gotConv[3037247] 0)
        const-val coerce_tmp[3037564]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037568 'move' coerce_tmp[3037564](3037566 'deref' error[3037243]))
        const-val call_tmp[7654502]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7654504 'move' call_tmp[7654502](7654507 call qio_err_iserr[12868] coerce_tmp[3037564]))
        const-val call_tmp[7654509]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7654511 'move' call_tmp[7654509](7654513 '!=' call_tmp[7654502] 0))
        if call_tmp[7654509]
        {
          break _breakLabel[3037536] _breakLabel[3037536]
        }
        val end[3037336]:uint(64)[86] "dead at end of block" "insert auto destroy"
        (3037731 'move' end[3037336] 0)
        const-val call_tmp[3037349]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3037588]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037592 'move' coerce_tmp[3037588](3037590 'deref' cur[3037237]))
        const-val coerce_tmp[3037594]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037600 'move' coerce_tmp[3037594](3037596 'cast' int(32)[66] 0))
        (3037351 'move' call_tmp[3037349](3037354 call qio_conv_parse[168112] call_tmp[3037286] coerce_tmp[3037588] end[3037336] coerce_tmp[3037594] conv[3037245] style[3037249]))
        (7356613 '=' error[3037243] call_tmp[3037349])
        const-val coerce_tmp[3037610]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037614 'move' coerce_tmp[3037610](3037612 'deref' error[3037243]))
        const-val call_tmp[7654526]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7654528 'move' call_tmp[7654526](7654531 call qio_err_iserr[12868] coerce_tmp[3037610]))
        const-val call_tmp[7654533]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7654535 'move' call_tmp[7654533](7654537 '!=' call_tmp[7654526] 0))
        if call_tmp[7654533]
        {
        }
        const-val call_tmp[3037378]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (3037380 'move' call_tmp[3037378] end[3037336])
        (7490592 '=' cur[3037237] call_tmp[3037378])
        const-val coerce_tmp[3037619]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037623 'move' coerce_tmp[3037619](3037621 'deref' error[3037243]))
        const-val call_tmp[7654550]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7654552 'move' call_tmp[7654550](7654555 call qio_err_iserr[12868] coerce_tmp[3037619]))
        const-val call_tmp[7654557]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7654559 'move' call_tmp[7654557](7654561 '!=' call_tmp[7654550] 0))
        if call_tmp[7654557]
        {
          break _breakLabel[3037536] _breakLabel[3037536]
        }
        const-val coerce_tmp[3037627]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037631 'move' coerce_tmp[3037627](9214808 '.v' conv[3037245] argType[167899]))
        const-val coerce_tmp[3037633]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037639 'move' coerce_tmp[3037633](3037635 'cast' int(32)[66] coerce_tmp[3037627]))
        const-val call_tmp[7347681]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7347683 'move' call_tmp[7347681](7347685 '==' coerce_tmp[3037633] QIO_CONV_ARG_TYPE_NONE_LITERAL[168048]))
        if call_tmp[7347681]
        {
          const-val call_tmp[3037453]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val cast_tmp[3037655]:uint(32)[81] "dead after last mention" "const" "temp"
          (3037658 'move' cast_tmp[3037655](9214826 '.v' conv[3037245] literal_length[167913]))
          (3037455 'move' call_tmp[3037453](3037458 'cast' int(64)[10] cast_tmp[3037655]))
          const-val call_tmp[3037461]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3037670]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3037676 'move' coerce_tmp[3037670](3037672 'cast' int(32)[66] 0))
          val coerce_tmp[3037678]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3037682 'move' coerce_tmp[3037678](9214814 '.v' this[3037231] _channel_internal[1838935]))
          val coerce_tmp[3037684]:c_ptr(void)[1465614] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3037688 'move' coerce_tmp[3037684](9214820 '.v' conv[3037245] literal[167920]))
          (3037463 'move' call_tmp[3037461](3037466 call qio_channel_print_literal_2[167838] coerce_tmp[3037670] coerce_tmp[3037678] coerce_tmp[3037684] call_tmp[3037453]))
          (7356619 '=' error[3037243] call_tmp[3037461])
        }
        {
          const-val coerce_tmp[3037699]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3037703 'move' coerce_tmp[3037699](9214832 '.v' conv[3037245] argType[167899]))
          const-val coerce_tmp[3037705]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3037711 'move' coerce_tmp[3037705](3037707 'cast' int(32)[66] coerce_tmp[3037699]))
          const-val call_tmp[7347691]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7347693 'move' call_tmp[7347691](7347695 '==' coerce_tmp[3037705] QIO_CONV_ARG_TYPE_NONE_REGEX_LITERAL[168043]))
          if call_tmp[7347691]
          {
            const-val call_tmp[3037501]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3037503 'move' call_tmp[3037501](3037506 call qio_format_error_write_regex[168174]))
            (7356625 '=' error[3037243] call_tmp[3037501])
          }
          {
            (7393737 '=' gotConv[3037247] 1)
            break _breakLabel[3037536] _breakLabel[3037536]
          }
        }
        const-val coerce_tmp[3037723]:uint(64)[86] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037727 'move' coerce_tmp[3037723](3037725 'deref' cur[3037237]))
        const-val tmp[7566018]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7566020 'move' tmp[7566018](7566022 '<' coerce_tmp[3037723] len[3037241]))
        (3037531 'move' tmp[3037301] tmp[7566018])
        tmp[3037301]
      }
      label _breakLabel[3037536]
      ref i_x[7341166]:string[244] "temp"
      (7341170 'move' i_x[7341166](7341168 'set reference' call_tmp[3037277]))
      (7341174 call deinit[21354] i_x[7341166])
    }
    (3037539 return _void[46])
  }
  function _conv_helper[200155](const  ref arg error[200158]:errorCode[12828], ref arg conv[200162]:qio_conv_t[167955], const  ref arg gotConv[200166]:bool[19], ref arg j[200170]:int(64)[10], const in arg argType[200176]:c_ptr(int(32))[3035159], const in arg argTypeLen[200180]:int(64)[10]) : void[4] "private" "resolved" "no return value for void"
  {
    (200215 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
    const-val coerce_tmp[3037759]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3037763 'move' coerce_tmp[3037759](3037761 'deref' error[200158]))
    const-val call_tmp[7654574]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654576 'move' call_tmp[7654574](7654579 call qio_err_iserr[12868] coerce_tmp[3037759]))
    const-val call_tmp[7654581]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654583 'move' call_tmp[7654581](7654585 '!=' call_tmp[7654574] 0))
    if call_tmp[7654581]
    {
      gotoReturn _end__conv_helper[618740] _end__conv_helper[618740]
    }
    const-val tmp[3037766]:bool[19] "dead after last mention" "const" "temp"
    (3037768 'move' tmp[3037766](3037770 'deref' gotConv[200166]))
    if tmp[3037766]
    {
      const-val coerce_tmp[3037773]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037777 'move' coerce_tmp[3037773](9196266 '.v' conv[200162] preArg1[167878]))
      const-val coerce_tmp[3037779]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037785 'move' coerce_tmp[3037779](3037781 'cast' int(32)[66] coerce_tmp[3037773]))
      const-val call_tmp[7354964]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7354966 'move' call_tmp[7354964](7354968 '!=' coerce_tmp[3037779] QIO_CONV_UNK[167958]))
      if call_tmp[7354964]
      {
        const-val coerce_tmp[3037858]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037862 'move' coerce_tmp[3037858](3037860 'deref' j[200170]))
        ref call_tmp[8354411]:int(32)[66] "dead after last mention" "maybe param" "temp"
        (8354413 'move' call_tmp[8354411](8354415 'array_get' argType[200176] coerce_tmp[3037858]))
        const-val coerce_tmp[3037923]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037927 'move' coerce_tmp[3037923](9196272 '.v' conv[200162] preArg1[167878]))
        const-val coerce_tmp[3037929]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037935 'move' coerce_tmp[3037929](3037931 'cast' int(32)[66] coerce_tmp[3037923]))
        (7490196 '=' call_tmp[8354411] coerce_tmp[3037929])
        (7512359 '+=' j[200170] 1)
      }
      (200251 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
      const-val coerce_tmp[3037941]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037945 'move' coerce_tmp[3037941](9196278 '.v' conv[200162] preArg2[167885]))
      const-val coerce_tmp[3037947]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037953 'move' coerce_tmp[3037947](3037949 'cast' int(32)[66] coerce_tmp[3037941]))
      const-val call_tmp[7354974]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7354976 'move' call_tmp[7354974](7354978 '!=' coerce_tmp[3037947] QIO_CONV_UNK[167958]))
      if call_tmp[7354974]
      {
        const-val coerce_tmp[3037958]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037962 'move' coerce_tmp[3037958](3037960 'deref' j[200170]))
        ref call_tmp[8354421]:int(32)[66] "dead after last mention" "maybe param" "temp"
        (8354423 'move' call_tmp[8354421](8354425 'array_get' argType[200176] coerce_tmp[3037958]))
        const-val coerce_tmp[3037966]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037970 'move' coerce_tmp[3037966](9196284 '.v' conv[200162] preArg2[167885]))
        const-val coerce_tmp[3037972]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3037978 'move' coerce_tmp[3037972](3037974 'cast' int(32)[66] coerce_tmp[3037966]))
        (7490202 '=' call_tmp[8354421] coerce_tmp[3037972])
        (7512370 '+=' j[200170] 1)
      }
      (200278 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
      const-val coerce_tmp[3037984]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037988 'move' coerce_tmp[3037984](9196290 '.v' conv[200162] preArg3[167892]))
      const-val coerce_tmp[3037990]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037996 'move' coerce_tmp[3037990](3037992 'cast' int(32)[66] coerce_tmp[3037984]))
      const-val call_tmp[7354984]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7354986 'move' call_tmp[7354984](7354988 '!=' coerce_tmp[3037990] QIO_CONV_UNK[167958]))
      if call_tmp[7354984]
      {
        const-val coerce_tmp[3038001]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038005 'move' coerce_tmp[3038001](3038003 'deref' j[200170]))
        ref call_tmp[8354431]:int(32)[66] "dead after last mention" "maybe param" "temp"
        (8354433 'move' call_tmp[8354431](8354435 'array_get' argType[200176] coerce_tmp[3038001]))
        const-val coerce_tmp[3038009]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038013 'move' coerce_tmp[3038009](9196296 '.v' conv[200162] preArg3[167892]))
        const-val coerce_tmp[3038015]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038021 'move' coerce_tmp[3038015](3038017 'cast' int(32)[66] coerce_tmp[3038009]))
        (7490208 '=' call_tmp[8354431] coerce_tmp[3038015])
        (7512381 '+=' j[200170] 1)
      }
      (200305 call boundsCheckHelp[200184] j[200170] argTypeLen[200180])
      const-val coerce_tmp[3038027]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3038031 'move' coerce_tmp[3038027](9196302 '.v' conv[200162] argType[167899]))
      const-val coerce_tmp[3038033]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3038039 'move' coerce_tmp[3038033](3038035 'cast' int(32)[66] coerce_tmp[3038027]))
      const-val call_tmp[7354994]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7354996 'move' call_tmp[7354994](7354998 '!=' coerce_tmp[3038033] QIO_CONV_UNK[167958]))
      if call_tmp[7354994]
      {
        const-val coerce_tmp[3038044]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038048 'move' coerce_tmp[3038044](3038046 'deref' j[200170]))
        ref call_tmp[8354441]:int(32)[66] "dead after last mention" "maybe param" "temp"
        (8354443 'move' call_tmp[8354441](8354445 'array_get' argType[200176] coerce_tmp[3038044]))
        const-val coerce_tmp[3038051]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3038055 'move' coerce_tmp[3038051](3038053 'deref' call_tmp[8354441]))
        const-val call_tmp[7347701]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7347703 'move' call_tmp[7347701](7347705 '==' coerce_tmp[3038051] QIO_CONV_UNK[167958]))
        if call_tmp[7347701]
        {
          const-val coerce_tmp[3038060]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3038064 'move' coerce_tmp[3038060](3038062 'deref' j[200170]))
          ref call_tmp[8354451]:int(32)[66] "dead after last mention" "maybe param" "temp"
          (8354453 'move' call_tmp[8354451](8354455 'array_get' argType[200176] coerce_tmp[3038060]))
          const-val coerce_tmp[3038068]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3038072 'move' coerce_tmp[3038068](9196308 '.v' conv[200162] argType[167899]))
          const-val coerce_tmp[3038074]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3038080 'move' coerce_tmp[3038074](3038076 'cast' int(32)[66] coerce_tmp[3038068]))
          (7490214 '=' call_tmp[8354451] coerce_tmp[3038074])
        }
        (7512392 '+=' j[200170] 1)
      }
    }
    label _end__conv_helper[618740]
    (618742 return _void[46])
  }
  function _conv_sethandler[3038087](ref arg error[3038089]:errorCode[12828], const in arg argtypei[3038093]:int(32)[66], ref arg style[3038095]:iostyleInternal[164872], const in arg i[3038097]:int(64)[10], const in arg argi[3038099]:real(64)[13], const in arg isReadf[3038101]:bool[19], ref arg error_out[5503523]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[3038105]:bool[19] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[3039434]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3039438 'move' coerce_tmp[3039434](3039436 'deref' error[3038089]))
    const-val call_tmp[7654598]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654600 'move' call_tmp[7654598](7654603 call qio_err_iserr[12868] coerce_tmp[3039434]))
    const-val call_tmp[7654605]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654607 'move' call_tmp[7654605](7654609 '!=' call_tmp[7654598] 0))
    if call_tmp[7654605]
    {
      (3038122 'move' ret[3038105] 0)
      gotoReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
    }
    const-val call_tmp[7347711]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7347713 'move' call_tmp[7347711](7347715 '==' argtypei[3038093] QIO_CONV_SET_MIN_WIDTH_COLS[168053]))
    if call_tmp[7347711]
    {
      const-val call_tmp[3038153]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      val error[5503526]:Error[85511] "error variable" "temp"
      (5503528 'move' error[5503526] nil[32])
      const-val ret[8354926]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
      const-val call_tmp[8354928]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8354930 'move' call_tmp[8354928](8354932 'cast' int(64)[10] argi[3038099]))
      (9109654 '.=' ret[8354926] x0[3040014] call_tmp[8354928])
      (9109658 '.=' ret[8354926] x1[3040016] 1)
      (5584261 'move' call_tmp[3038153] ret[8354926])
      val errorExists[7299752]:bool[19] "temp"
      (7299757 'move' errorExists[7299752](7299754 '!=' error[5503526] nil[32]))
      if errorExists[7299752]
      {
        (5503532 '=' error_out[5503523] error[5503526])
        gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
      }
      val tmp_x0[9109268]:int(64)[10] "temp"
      val tmp_x1[9109270]:bool[19] "temp"
      (9109276 'move' tmp_x0[9109268](9109274 '.v' call_tmp[3038153] x0[3040014]))
      (9109281 'move' tmp_x1[9109270](9109279 '.v' call_tmp[3038153] x1[3040016]))
      (3038179 'noop')
      (3038191 'noop')
      const-val call_tmp[7350932]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7350934 'move' call_tmp[7350932](7350936 'u!' tmp_x1[9109270]))
      if call_tmp[7350932]
      {
        const-val call_tmp[3038211]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        (3038213 'move' call_tmp[3038211](3038216 call qio_format_error_arg_mismatch[168158] i[3038097]))
        (7356631 '=' error[3038089] call_tmp[3038211])
      }
      {
        const-val call_tmp[8355169]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
        (8355171 'move' call_tmp[8355169](8355173 'cast' uint(32)[81] tmp_x0[9109268]))
        (9214851 '.=' style[3038095] min_width_columns[164622] call_tmp[8355169])
      }
    }
    {
      const-val call_tmp[7347721]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7347723 'move' call_tmp[7347721](7347725 '==' argtypei[3038093] QIO_CONV_SET_MAX_WIDTH_COLS[168058]))
      if call_tmp[7347721]
      {
        const-val call_tmp[3038271]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        val error[5503541]:Error[85511] "error variable" "temp"
        (5503543 'move' error[5503541] nil[32])
        const-val ret[8354968]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
        const-val call_tmp[8354970]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8354972 'move' call_tmp[8354970](8354974 'cast' int(64)[10] argi[3038099]))
        (9109668 '.=' ret[8354968] x0[3040014] call_tmp[8354970])
        (9109672 '.=' ret[8354968] x1[3040016] 1)
        (5584267 'move' call_tmp[3038271] ret[8354968])
        val errorExists[7299760]:bool[19] "temp"
        (7299765 'move' errorExists[7299760](7299762 '!=' error[5503541] nil[32]))
        if errorExists[7299760]
        {
          (5503547 '=' error_out[5503523] error[5503541])
          gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
        }
        val tmp_x0[9109286]:int(64)[10] "temp"
        val tmp_x1[9109288]:bool[19] "temp"
        (9109294 'move' tmp_x0[9109286](9109292 '.v' call_tmp[3038271] x0[3040014]))
        (9109299 'move' tmp_x1[9109288](9109297 '.v' call_tmp[3038271] x1[3040016]))
        const-val call_tmp[7350941]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7350943 'move' call_tmp[7350941](7350945 'u!' tmp_x1[9109288]))
        if call_tmp[7350941]
        {
          const-val call_tmp[3038329]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3038331 'move' call_tmp[3038329](3038334 call qio_format_error_arg_mismatch[168158] i[3038097]))
          (7356637 '=' error[3038089] call_tmp[3038329])
        }
        {
          const-val call_tmp[8355179]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (8355181 'move' call_tmp[8355179](8355183 'cast' uint(32)[81] tmp_x0[9109286]))
          (9214859 '.=' style[3038095] max_width_columns[164630] call_tmp[8355179])
        }
      }
      {
        const-val call_tmp[7347731]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7347733 'move' call_tmp[7347731](7347735 '==' argtypei[3038093] QIO_CONV_SET_MAX_WIDTH_CHARS[168063]))
        if call_tmp[7347731]
        {
          const-val call_tmp[3038389]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          val error[5503556]:Error[85511] "error variable" "temp"
          (5503558 'move' error[5503556] nil[32])
          const-val ret[8355010]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
          const-val call_tmp[8355012]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (8355014 'move' call_tmp[8355012](8355016 'cast' int(64)[10] argi[3038099]))
          (9109682 '.=' ret[8355010] x0[3040014] call_tmp[8355012])
          (9109686 '.=' ret[8355010] x1[3040016] 1)
          (5584273 'move' call_tmp[3038389] ret[8355010])
          val errorExists[7299768]:bool[19] "temp"
          (7299773 'move' errorExists[7299768](7299770 '!=' error[5503556] nil[32]))
          if errorExists[7299768]
          {
            (5503562 '=' error_out[5503523] error[5503556])
            gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
          }
          val tmp_x0[9109304]:int(64)[10] "temp"
          val tmp_x1[9109306]:bool[19] "temp"
          (9109312 'move' tmp_x0[9109304](9109310 '.v' call_tmp[3038389] x0[3040014]))
          (9109317 'move' tmp_x1[9109306](9109315 '.v' call_tmp[3038389] x1[3040016]))
          const-val call_tmp[7350950]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7350952 'move' call_tmp[7350950](7350954 'u!' tmp_x1[9109306]))
          if call_tmp[7350950]
          {
            const-val call_tmp[3038447]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3038449 'move' call_tmp[3038447](3038452 call qio_format_error_arg_mismatch[168158] i[3038097]))
            (7356643 '=' error[3038089] call_tmp[3038447])
          }
          {
            const-val call_tmp[8355189]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (8355191 'move' call_tmp[8355189](8355193 'cast' uint(32)[81] tmp_x0[9109304]))
            (9214867 '.=' style[3038095] max_width_characters[164642] call_tmp[8355189])
          }
        }
        {
          const-val call_tmp[7347741]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7347743 'move' call_tmp[7347741](7347745 '==' argtypei[3038093] QIO_CONV_SET_MAX_WIDTH_BYTES[168068]))
          if call_tmp[7347741]
          {
            const-val call_tmp[3038507]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
            val error[5503571]:Error[85511] "error variable" "temp"
            (5503573 'move' error[5503571] nil[32])
            const-val ret[8355052]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
            const-val call_tmp[8355054]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (8355056 'move' call_tmp[8355054](8355058 'cast' int(64)[10] argi[3038099]))
            (9109696 '.=' ret[8355052] x0[3040014] call_tmp[8355054])
            (9109700 '.=' ret[8355052] x1[3040016] 1)
            (5584279 'move' call_tmp[3038507] ret[8355052])
            val errorExists[7299776]:bool[19] "temp"
            (7299781 'move' errorExists[7299776](7299778 '!=' error[5503571] nil[32]))
            if errorExists[7299776]
            {
              (5503577 '=' error_out[5503523] error[5503571])
              gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
            }
            val tmp_x0[9109322]:int(64)[10] "temp"
            val tmp_x1[9109324]:bool[19] "temp"
            (9109330 'move' tmp_x0[9109322](9109328 '.v' call_tmp[3038507] x0[3040014]))
            (9109335 'move' tmp_x1[9109324](9109333 '.v' call_tmp[3038507] x1[3040016]))
            const-val call_tmp[7350959]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7350961 'move' call_tmp[7350959](7350963 'u!' tmp_x1[9109324]))
            if call_tmp[7350959]
            {
              const-val call_tmp[3038565]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3038567 'move' call_tmp[3038565](3038570 call qio_format_error_arg_mismatch[168158] i[3038097]))
              (7356649 '=' error[3038089] call_tmp[3038565])
            }
            {
              const-val call_tmp[8355199]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
              (8355201 'move' call_tmp[8355199](8355203 'cast' uint(32)[81] tmp_x0[9109322]))
              (9214875 '.=' style[3038095] max_width_bytes[164654] call_tmp[8355199])
            }
          }
          {
            const-val call_tmp[7347751]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7347753 'move' call_tmp[7347751](7347755 '==' argtypei[3038093] QIO_CONV_SET_PRECISION[168073]))
            if call_tmp[7347751]
            {
              const-val call_tmp[3038625]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
              val error[5503586]:Error[85511] "error variable" "temp"
              (5503588 'move' error[5503586] nil[32])
              const-val ret[8355094]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
              const-val call_tmp[8355096]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (8355098 'move' call_tmp[8355096](8355100 'cast' int(64)[10] argi[3038099]))
              (9109710 '.=' ret[8355094] x0[3040014] call_tmp[8355096])
              (9109714 '.=' ret[8355094] x1[3040016] 1)
              (5584285 'move' call_tmp[3038625] ret[8355094])
              val errorExists[7299784]:bool[19] "temp"
              (7299789 'move' errorExists[7299784](7299786 '!=' error[5503586] nil[32]))
              if errorExists[7299784]
              {
                (5503592 '=' error_out[5503523] error[5503586])
                gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
              }
              val tmp_x0[9109340]:int(64)[10] "temp"
              val tmp_x1[9109342]:bool[19] "temp"
              (9109348 'move' tmp_x0[9109340](9109346 '.v' call_tmp[3038625] x0[3040014]))
              (9109353 'move' tmp_x1[9109342](9109351 '.v' call_tmp[3038625] x1[3040016]))
              const-val call_tmp[7350968]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7350970 'move' call_tmp[7350968](7350972 'u!' tmp_x1[9109342]))
              if call_tmp[7350968]
              {
                const-val call_tmp[3038683]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3038685 'move' call_tmp[3038683](3038688 call qio_format_error_arg_mismatch[168158] i[3038097]))
                (7356655 '=' error[3038089] call_tmp[3038683])
              }
              {
                const-val call_tmp[7349686]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7349688 'move' call_tmp[7349686](7349690 'cast' int(32)[66] tmp_x0[9109340]))
                (9214883 '.=' style[3038095] precision[164822] call_tmp[7349686])
              }
            }
            {
              const-val call_tmp[7347761]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7347763 'move' call_tmp[7347761](7347765 '==' argtypei[3038093] QIO_CONV_SET_STRINGSTART[168088]))
              if call_tmp[7347761]
              {
                const-val call_tmp[3038743]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                const-val ret_tmp[5584366]:(int(32),bool)[3040996] "temp"
                (9109110 '.=' ret_tmp[5584366] x0[3040992] 0)
                (9109114 '.=' ret_tmp[5584366] x1[3040994] 0)
                (5584369 'move' call_tmp[3038743] ret_tmp[5584366])
                val tmp_x0[9108822]:int(32)[66] "temp"
                val tmp_x1[9108824]:bool[19] "temp"
                (9108830 'move' tmp_x0[9108822](9108828 '.v' call_tmp[3038743] x0[3040992]))
                (9108835 'move' tmp_x1[9108824](9108833 '.v' call_tmp[3038743] x1[3040994]))
                const-val call_tmp[7350977]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7350979 'move' call_tmp[7350977](7350981 'u!' tmp_x1[9108824]))
                if call_tmp[7350977]
                {
                  const-val call_tmp[3038801]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3038803 'move' call_tmp[3038801](3038806 call qio_format_error_arg_mismatch[168158] i[3038097]))
                  (7356661 '=' error[3038089] call_tmp[3038801])
                }
                {
                  const-val call_tmp[8355517]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                  (8355519 'move' call_tmp[8355517](8355521 'cast' uint(8)[71] tmp_x0[9108822]))
                  (9214891 '.=' style[3038095] string_start[164666] call_tmp[8355517])
                }
              }
              {
                const-val call_tmp[7347771]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7347773 'move' call_tmp[7347771](7347775 '==' argtypei[3038093] QIO_CONV_SET_STRINGEND[168098]))
                if call_tmp[7347771]
                {
                  const-val call_tmp[3038854]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                  const-val ret_tmp[5584372]:(int(32),bool)[3040996] "temp"
                  (9109124 '.=' ret_tmp[5584372] x0[3040992] 0)
                  (9109128 '.=' ret_tmp[5584372] x1[3040994] 0)
                  (5584375 'move' call_tmp[3038854] ret_tmp[5584372])
                  val tmp_x0[9108840]:int(32)[66] "temp"
                  val tmp_x1[9108842]:bool[19] "temp"
                  (9108848 'move' tmp_x0[9108840](9108846 '.v' call_tmp[3038854] x0[3040992]))
                  (9108853 'move' tmp_x1[9108842](9108851 '.v' call_tmp[3038854] x1[3040994]))
                  const-val call_tmp[7350986]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7350988 'move' call_tmp[7350986](7350990 'u!' tmp_x1[9108842]))
                  if call_tmp[7350986]
                  {
                    const-val call_tmp[3038912]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3038914 'move' call_tmp[3038912](3038917 call qio_format_error_arg_mismatch[168158] i[3038097]))
                    (7356667 '=' error[3038089] call_tmp[3038912])
                  }
                  {
                    const-val call_tmp[8355527]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                    (8355529 'move' call_tmp[8355527](8355531 'cast' uint(8)[71] tmp_x0[9108840]))
                    (9214899 '.=' style[3038095] string_end[164672] call_tmp[8355527])
                  }
                }
                {
                  const-val call_tmp[7347781]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7347783 'move' call_tmp[7347781](7347785 '==' argtypei[3038093] QIO_CONV_SET_STRINGSTARTEND[168093]))
                  if call_tmp[7347781]
                  {
                    const-val call_tmp[3038965]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5584378]:(int(32),bool)[3040996] "temp"
                    (9109138 '.=' ret_tmp[5584378] x0[3040992] 0)
                    (9109142 '.=' ret_tmp[5584378] x1[3040994] 0)
                    (5584381 'move' call_tmp[3038965] ret_tmp[5584378])
                    val tmp_x0[9108858]:int(32)[66] "temp"
                    val tmp_x1[9108860]:bool[19] "temp"
                    (9108866 'move' tmp_x0[9108858](9108864 '.v' call_tmp[3038965] x0[3040992]))
                    (9108871 'move' tmp_x1[9108860](9108869 '.v' call_tmp[3038965] x1[3040994]))
                    const-val call_tmp[7350995]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7350997 'move' call_tmp[7350995](7350999 'u!' tmp_x1[9108860]))
                    if call_tmp[7350995]
                    {
                      const-val call_tmp[3039023]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3039025 'move' call_tmp[3039023](3039028 call qio_format_error_arg_mismatch[168158] i[3038097]))
                      (7356673 '=' error[3038089] call_tmp[3039023])
                    }
                    {
                      const-val call_tmp[8355537]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8355539 'move' call_tmp[8355537](8355541 'cast' uint(8)[71] tmp_x0[9108858]))
                      (9214907 '.=' style[3038095] string_start[164666] call_tmp[8355537])
                      const-val call_tmp[8355547]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8355549 'move' call_tmp[8355547](8355551 'cast' uint(8)[71] tmp_x0[9108858]))
                      (9214913 '.=' style[3038095] string_end[164672] call_tmp[8355547])
                    }
                  }
                  {
                    const-val call_tmp[7347791]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7347793 'move' call_tmp[7347791](7347795 '==' argtypei[3038093] QIO_CONV_SET_STRINGLEN[168078]))
                    if call_tmp[7347791]
                    {
                      const-val call_tmp[3039098]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                      val error[5503601]:Error[85511] "error variable" "temp"
                      (5503603 'move' error[5503601] nil[32])
                      const-val ret[8355136]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
                      const-val call_tmp[8355138]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8355140 'move' call_tmp[8355138](8355142 'cast' int(64)[10] argi[3038099]))
                      (9109724 '.=' ret[8355136] x0[3040014] call_tmp[8355138])
                      (9109728 '.=' ret[8355136] x1[3040016] 1)
                      (5584291 'move' call_tmp[3039098] ret[8355136])
                      val errorExists[7299792]:bool[19] "temp"
                      (7299797 'move' errorExists[7299792](7299794 '!=' error[5503601] nil[32]))
                      if errorExists[7299792]
                      {
                        (5503607 '=' error_out[5503523] error[5503601])
                        gotoErrorHandlingReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
                      }
                      val tmp_x0[9109358]:int(64)[10] "temp"
                      val tmp_x1[9109360]:bool[19] "temp"
                      (9109366 'move' tmp_x0[9109358](9109364 '.v' call_tmp[3039098] x0[3040014]))
                      (9109371 'move' tmp_x1[9109360](9109369 '.v' call_tmp[3039098] x1[3040016]))
                      const-val call_tmp[7351004]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7351006 'move' call_tmp[7351004](7351008 'u!' tmp_x1[9109360]))
                      if call_tmp[7351004]
                      {
                        const-val call_tmp[3039156]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3039158 'move' call_tmp[3039156](3039161 call qio_format_error_arg_mismatch[168158] i[3038097]))
                        (7356679 '=' error[3038089] call_tmp[3039156])
                      }
                      {
                        (9214921 '.=' style[3038095] str_style[164604] tmp_x0[9109358])
                      }
                    }
                    {
                      const-val call_tmp[7347801]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7347803 'move' call_tmp[7347801](7347805 '==' argtypei[3038093] QIO_CONV_SET_TERMINATOR[168083]))
                      if call_tmp[7347801]
                      {
                        const-val call_tmp[3039216]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                        const-val ret_tmp[5584384]:(int(32),bool)[3040996] "temp"
                        (9109152 '.=' ret_tmp[5584384] x0[3040992] 0)
                        (9109156 '.=' ret_tmp[5584384] x1[3040994] 0)
                        (5584387 'move' call_tmp[3039216] ret_tmp[5584384])
                        val tmp_x0[9108876]:int(32)[66] "temp"
                        val tmp_x1[9108878]:bool[19] "temp"
                        (9108884 'move' tmp_x0[9108876](9108882 '.v' call_tmp[3039216] x0[3040992]))
                        (9108889 'move' tmp_x1[9108878](9108887 '.v' call_tmp[3039216] x1[3040994]))
                        const-val call_tmp[7351013]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7351015 'move' call_tmp[7351013](7351017 'u!' tmp_x1[9108878]))
                        if call_tmp[7351013]
                        {
                          const-val call_tmp[3039274]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3039276 'move' call_tmp[3039274](3039279 call qio_format_error_arg_mismatch[168158] i[3038097]))
                          (7356685 '=' error[3038089] call_tmp[3039274])
                        }
                        {
                          const-val call_tmp[8355557]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                          (8355559 'move' call_tmp[8355557](8355561 'cast' uint(8)[71] tmp_x0[9108876]))
                          const-val coerce_tmp[3042374]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3042380 'move' coerce_tmp[3042374](3042376 'cast' int(16)[61] call_tmp[8355557]))
                          const-val coerce_tmp[3042382]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3042388 'move' coerce_tmp[3042382](3042384 'cast' int(16)[61] -256))
                          const-val call_tmp[7498842]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7498844 'move' call_tmp[7498842](7498846 '-' coerce_tmp[3042374] coerce_tmp[3042382]))
                          const-val call_tmp[7629450]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7629452 'move' call_tmp[7629450](7629454 'u-' call_tmp[7498842]))
                          const-val coerce_tmp[3042392]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3042398 'move' coerce_tmp[3042392](3042394 'cast' int(64)[10] call_tmp[7629450]))
                          (9214929 '.=' style[3038095] str_style[164604] coerce_tmp[3042392])
                        }
                      }
                      {
                        const-val call_tmp[7347811]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7347813 'move' call_tmp[7347811](7347815 '==' argtypei[3038093] QIO_CONV_SET_DONE[168108]))
                        if call_tmp[7347811]
                        {
                        }
                        {
                          const-val call_tmp[7347821]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7347823 'move' call_tmp[7347821](7347825 '==' argtypei[3038093] QIO_CONV_UNK[167958]))
                          if call_tmp[7347821]
                          {
                            const-val call_tmp[3039382]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3039384 'move' call_tmp[3039382](3039387 call qio_format_error_too_many_args[168146]))
                            (7356691 '=' error[3038089] call_tmp[3039382])
                          }
                          {
                            (3039393 'move' ret[3038105] 1)
                            gotoReturn _end__conv_sethandler[3039417] _end__conv_sethandler[3039417]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (3039412 'move' ret[3038105] 0)
    label _end__conv_sethandler[3039417]
    (3039419 return ret[3038105])
  }
  function _conv_sethandler[3320936](ref arg error[3320938]:errorCode[12828], const in arg argtypei[3320942]:int(32)[66], ref arg style[3320944]:iostyleInternal[164872], const in arg i[3320946]:int(64)[10], const  ref arg argi[3320948]:string[244], const in arg isReadf[3320950]:bool[19], ref arg error_out[5509069]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[3320954]:bool[19] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[3322277]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3322281 'move' coerce_tmp[3322277](3322279 'deref' error[3320938]))
    const-val call_tmp[7654766]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654768 'move' call_tmp[7654766](7654771 call qio_err_iserr[12868] coerce_tmp[3322277]))
    const-val call_tmp[7654773]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654775 'move' call_tmp[7654773](7654777 '!=' call_tmp[7654766] 0))
    if call_tmp[7654773]
    {
      (3320971 'move' ret[3320954] 0)
      gotoReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
    }
    const-val call_tmp[7348041]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7348043 'move' call_tmp[7348041](7348045 '==' argtypei[3320942] QIO_CONV_SET_MIN_WIDTH_COLS[168053]))
    if call_tmp[7348041]
    {
      const-val call_tmp[3321002]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      val error[5509072]:Error[85511] "error variable" "temp"
      (5509074 'move' error[5509072] nil[32])
      const-val ret[8455107]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
      const-val call_tmp[8455109]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[8455111]:Error[85511] "error variable" "temp"
      (8455113 'move' error[8455111] nil[32])
      (8455116 'move' call_tmp[8455109](8455119 call :[1751964] argi[3320948] error[8455111]))
      val errorExists[8455122]:bool[19] "temp"
      (8455124 'move' errorExists[8455122](8455126 '!=' error[8455111] nil[32]))
      if errorExists[8455122]
      {
        (8455131 '=' error[5509072] error[8455111])
        gotoErrorHandlingReturn _end__toIntegral[8455150] _end__toIntegral[8455150]
      }
      (9109752 '.=' ret[8455107] x0[3040014] call_tmp[8455109])
      (9109756 '.=' ret[8455107] x1[3040016] 1)
      label _end__toIntegral[8455150]
      (5588927 'move' call_tmp[3321002] ret[8455107])
      val errorExists[7302344]:bool[19] "temp"
      (7302349 'move' errorExists[7302344](7302346 '!=' error[5509072] nil[32]))
      if errorExists[7302344]
      {
        (5509078 '=' error_out[5509069] error[5509072])
        gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
      }
      val tmp_x0[9109412]:int(64)[10] "temp"
      val tmp_x1[9109414]:bool[19] "temp"
      (9109420 'move' tmp_x0[9109412](9109418 '.v' call_tmp[3321002] x0[3040014]))
      (9109425 'move' tmp_x1[9109414](9109423 '.v' call_tmp[3321002] x1[3040016]))
      (3321028 'noop')
      (3321040 'noop')
      const-val call_tmp[7351157]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7351159 'move' call_tmp[7351157](7351161 'u!' tmp_x1[9109414]))
      if call_tmp[7351157]
      {
        const-val call_tmp[3321060]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        (3321062 'move' call_tmp[3321060](3321065 call qio_format_error_arg_mismatch[168158] i[3320946]))
        (7357363 '=' error[3320938] call_tmp[3321060])
      }
      {
        const-val call_tmp[8355209]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
        (8355211 'move' call_tmp[8355209](8355213 'cast' uint(32)[81] tmp_x0[9109412]))
        (9219660 '.=' style[3320944] min_width_columns[164622] call_tmp[8355209])
      }
    }
    {
      const-val call_tmp[7348051]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7348053 'move' call_tmp[7348051](7348055 '==' argtypei[3320942] QIO_CONV_SET_MAX_WIDTH_COLS[168058]))
      if call_tmp[7348051]
      {
        const-val call_tmp[3321120]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        val error[5509087]:Error[85511] "error variable" "temp"
        (5509089 'move' error[5509087] nil[32])
        const-val ret[8455170]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
        const-val call_tmp[8455172]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val error[8455174]:Error[85511] "error variable" "temp"
        (8455176 'move' error[8455174] nil[32])
        (8455179 'move' call_tmp[8455172](8455182 call :[1751964] argi[3320948] error[8455174]))
        val errorExists[8455185]:bool[19] "temp"
        (8455187 'move' errorExists[8455185](8455189 '!=' error[8455174] nil[32]))
        if errorExists[8455185]
        {
          (8455194 '=' error[5509087] error[8455174])
          gotoErrorHandlingReturn _end__toIntegral[8455213] _end__toIntegral[8455213]
        }
        (9109766 '.=' ret[8455170] x0[3040014] call_tmp[8455172])
        (9109770 '.=' ret[8455170] x1[3040016] 1)
        label _end__toIntegral[8455213]
        (5588933 'move' call_tmp[3321120] ret[8455170])
        val errorExists[7302352]:bool[19] "temp"
        (7302357 'move' errorExists[7302352](7302354 '!=' error[5509087] nil[32]))
        if errorExists[7302352]
        {
          (5509093 '=' error_out[5509069] error[5509087])
          gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
        }
        val tmp_x0[9109430]:int(64)[10] "temp"
        val tmp_x1[9109432]:bool[19] "temp"
        (9109438 'move' tmp_x0[9109430](9109436 '.v' call_tmp[3321120] x0[3040014]))
        (9109443 'move' tmp_x1[9109432](9109441 '.v' call_tmp[3321120] x1[3040016]))
        const-val call_tmp[7351166]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7351168 'move' call_tmp[7351166](7351170 'u!' tmp_x1[9109432]))
        if call_tmp[7351166]
        {
          const-val call_tmp[3321178]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3321180 'move' call_tmp[3321178](3321183 call qio_format_error_arg_mismatch[168158] i[3320946]))
          (7357369 '=' error[3320938] call_tmp[3321178])
        }
        {
          const-val call_tmp[8355219]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (8355221 'move' call_tmp[8355219](8355223 'cast' uint(32)[81] tmp_x0[9109430]))
          (9219669 '.=' style[3320944] max_width_columns[164630] call_tmp[8355219])
        }
      }
      {
        const-val call_tmp[7348061]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7348063 'move' call_tmp[7348061](7348065 '==' argtypei[3320942] QIO_CONV_SET_MAX_WIDTH_CHARS[168063]))
        if call_tmp[7348061]
        {
          const-val call_tmp[3321238]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          val error[5509102]:Error[85511] "error variable" "temp"
          (5509104 'move' error[5509102] nil[32])
          const-val ret[8455233]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
          const-val call_tmp[8455235]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val error[8455237]:Error[85511] "error variable" "temp"
          (8455239 'move' error[8455237] nil[32])
          (8455242 'move' call_tmp[8455235](8455245 call :[1751964] argi[3320948] error[8455237]))
          val errorExists[8455248]:bool[19] "temp"
          (8455250 'move' errorExists[8455248](8455252 '!=' error[8455237] nil[32]))
          if errorExists[8455248]
          {
            (8455257 '=' error[5509102] error[8455237])
            gotoErrorHandlingReturn _end__toIntegral[8455276] _end__toIntegral[8455276]
          }
          (9109780 '.=' ret[8455233] x0[3040014] call_tmp[8455235])
          (9109784 '.=' ret[8455233] x1[3040016] 1)
          label _end__toIntegral[8455276]
          (5588939 'move' call_tmp[3321238] ret[8455233])
          val errorExists[7302360]:bool[19] "temp"
          (7302365 'move' errorExists[7302360](7302362 '!=' error[5509102] nil[32]))
          if errorExists[7302360]
          {
            (5509108 '=' error_out[5509069] error[5509102])
            gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
          }
          val tmp_x0[9109448]:int(64)[10] "temp"
          val tmp_x1[9109450]:bool[19] "temp"
          (9109456 'move' tmp_x0[9109448](9109454 '.v' call_tmp[3321238] x0[3040014]))
          (9109461 'move' tmp_x1[9109450](9109459 '.v' call_tmp[3321238] x1[3040016]))
          const-val call_tmp[7351175]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7351177 'move' call_tmp[7351175](7351179 'u!' tmp_x1[9109450]))
          if call_tmp[7351175]
          {
            const-val call_tmp[3321296]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3321298 'move' call_tmp[3321296](3321301 call qio_format_error_arg_mismatch[168158] i[3320946]))
            (7357375 '=' error[3320938] call_tmp[3321296])
          }
          {
            const-val call_tmp[8355229]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (8355231 'move' call_tmp[8355229](8355233 'cast' uint(32)[81] tmp_x0[9109448]))
            (9219678 '.=' style[3320944] max_width_characters[164642] call_tmp[8355229])
          }
        }
        {
          const-val call_tmp[7348071]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348073 'move' call_tmp[7348071](7348075 '==' argtypei[3320942] QIO_CONV_SET_MAX_WIDTH_BYTES[168068]))
          if call_tmp[7348071]
          {
            const-val call_tmp[3321356]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
            val error[5509117]:Error[85511] "error variable" "temp"
            (5509119 'move' error[5509117] nil[32])
            const-val ret[8455296]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
            const-val call_tmp[8455298]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val error[8455300]:Error[85511] "error variable" "temp"
            (8455302 'move' error[8455300] nil[32])
            (8455305 'move' call_tmp[8455298](8455308 call :[1751964] argi[3320948] error[8455300]))
            val errorExists[8455311]:bool[19] "temp"
            (8455313 'move' errorExists[8455311](8455315 '!=' error[8455300] nil[32]))
            if errorExists[8455311]
            {
              (8455320 '=' error[5509117] error[8455300])
              gotoErrorHandlingReturn _end__toIntegral[8455339] _end__toIntegral[8455339]
            }
            (9109794 '.=' ret[8455296] x0[3040014] call_tmp[8455298])
            (9109798 '.=' ret[8455296] x1[3040016] 1)
            label _end__toIntegral[8455339]
            (5588945 'move' call_tmp[3321356] ret[8455296])
            val errorExists[7302368]:bool[19] "temp"
            (7302373 'move' errorExists[7302368](7302370 '!=' error[5509117] nil[32]))
            if errorExists[7302368]
            {
              (5509123 '=' error_out[5509069] error[5509117])
              gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
            }
            val tmp_x0[9109466]:int(64)[10] "temp"
            val tmp_x1[9109468]:bool[19] "temp"
            (9109474 'move' tmp_x0[9109466](9109472 '.v' call_tmp[3321356] x0[3040014]))
            (9109479 'move' tmp_x1[9109468](9109477 '.v' call_tmp[3321356] x1[3040016]))
            const-val call_tmp[7351184]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7351186 'move' call_tmp[7351184](7351188 'u!' tmp_x1[9109468]))
            if call_tmp[7351184]
            {
              const-val call_tmp[3321414]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3321416 'move' call_tmp[3321414](3321419 call qio_format_error_arg_mismatch[168158] i[3320946]))
              (7357381 '=' error[3320938] call_tmp[3321414])
            }
            {
              const-val call_tmp[8355239]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
              (8355241 'move' call_tmp[8355239](8355243 'cast' uint(32)[81] tmp_x0[9109466]))
              (9219687 '.=' style[3320944] max_width_bytes[164654] call_tmp[8355239])
            }
          }
          {
            const-val call_tmp[7348081]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348083 'move' call_tmp[7348081](7348085 '==' argtypei[3320942] QIO_CONV_SET_PRECISION[168073]))
            if call_tmp[7348081]
            {
              const-val call_tmp[3321474]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
              val error[5509132]:Error[85511] "error variable" "temp"
              (5509134 'move' error[5509132] nil[32])
              const-val ret[8455359]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
              const-val call_tmp[8455361]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              val error[8455363]:Error[85511] "error variable" "temp"
              (8455365 'move' error[8455363] nil[32])
              (8455368 'move' call_tmp[8455361](8455371 call :[1751964] argi[3320948] error[8455363]))
              val errorExists[8455374]:bool[19] "temp"
              (8455376 'move' errorExists[8455374](8455378 '!=' error[8455363] nil[32]))
              if errorExists[8455374]
              {
                (8455383 '=' error[5509132] error[8455363])
                gotoErrorHandlingReturn _end__toIntegral[8455402] _end__toIntegral[8455402]
              }
              (9109808 '.=' ret[8455359] x0[3040014] call_tmp[8455361])
              (9109812 '.=' ret[8455359] x1[3040016] 1)
              label _end__toIntegral[8455402]
              (5588951 'move' call_tmp[3321474] ret[8455359])
              val errorExists[7302376]:bool[19] "temp"
              (7302381 'move' errorExists[7302376](7302378 '!=' error[5509132] nil[32]))
              if errorExists[7302376]
              {
                (5509138 '=' error_out[5509069] error[5509132])
                gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
              }
              val tmp_x0[9109484]:int(64)[10] "temp"
              val tmp_x1[9109486]:bool[19] "temp"
              (9109492 'move' tmp_x0[9109484](9109490 '.v' call_tmp[3321474] x0[3040014]))
              (9109497 'move' tmp_x1[9109486](9109495 '.v' call_tmp[3321474] x1[3040016]))
              const-val call_tmp[7351193]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7351195 'move' call_tmp[7351193](7351197 'u!' tmp_x1[9109486]))
              if call_tmp[7351193]
              {
                const-val call_tmp[3321532]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3321534 'move' call_tmp[3321532](3321537 call qio_format_error_arg_mismatch[168158] i[3320946]))
                (7357387 '=' error[3320938] call_tmp[3321532])
              }
              {
                const-val call_tmp[7349706]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7349708 'move' call_tmp[7349706](7349710 'cast' int(32)[66] tmp_x0[9109484]))
                (9219696 '.=' style[3320944] precision[164822] call_tmp[7349706])
              }
            }
            {
              const-val call_tmp[7348091]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348093 'move' call_tmp[7348091](7348095 '==' argtypei[3320942] QIO_CONV_SET_STRINGSTART[168088]))
              if call_tmp[7348091]
              {
                const-val call_tmp[3321592]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                const-val ret_tmp[5588972]:(int(32),bool)[3040996] "temp"
                (3321597 call _toChar[3322847] argi[3320948] ret_tmp[5588972])
                (5588975 'move' call_tmp[3321592] ret_tmp[5588972])
                val tmp_x0[9108912]:int(32)[66] "temp"
                val tmp_x1[9108914]:bool[19] "temp"
                (9108920 'move' tmp_x0[9108912](9108918 '.v' call_tmp[3321592] x0[3040992]))
                (9108925 'move' tmp_x1[9108914](9108923 '.v' call_tmp[3321592] x1[3040994]))
                const-val call_tmp[7351202]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7351204 'move' call_tmp[7351202](7351206 'u!' tmp_x1[9108914]))
                if call_tmp[7351202]
                {
                  const-val call_tmp[3321650]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3321652 'move' call_tmp[3321650](3321655 call qio_format_error_arg_mismatch[168158] i[3320946]))
                  (7357393 '=' error[3320938] call_tmp[3321650])
                }
                {
                  const-val call_tmp[8355577]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                  (8355579 'move' call_tmp[8355577](8355581 'cast' uint(8)[71] tmp_x0[9108912]))
                  (9219704 '.=' style[3320944] string_start[164666] call_tmp[8355577])
                }
              }
              {
                const-val call_tmp[7348101]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348103 'move' call_tmp[7348101](7348105 '==' argtypei[3320942] QIO_CONV_SET_STRINGEND[168098]))
                if call_tmp[7348101]
                {
                  const-val call_tmp[3321703]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                  const-val ret_tmp[5588978]:(int(32),bool)[3040996] "temp"
                  (3321708 call _toChar[3322847] argi[3320948] ret_tmp[5588978])
                  (5588981 'move' call_tmp[3321703] ret_tmp[5588978])
                  val tmp_x0[9108930]:int(32)[66] "temp"
                  val tmp_x1[9108932]:bool[19] "temp"
                  (9108938 'move' tmp_x0[9108930](9108936 '.v' call_tmp[3321703] x0[3040992]))
                  (9108943 'move' tmp_x1[9108932](9108941 '.v' call_tmp[3321703] x1[3040994]))
                  const-val call_tmp[7351211]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7351213 'move' call_tmp[7351211](7351215 'u!' tmp_x1[9108932]))
                  if call_tmp[7351211]
                  {
                    const-val call_tmp[3321761]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3321763 'move' call_tmp[3321761](3321766 call qio_format_error_arg_mismatch[168158] i[3320946]))
                    (7357399 '=' error[3320938] call_tmp[3321761])
                  }
                  {
                    const-val call_tmp[8355587]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                    (8355589 'move' call_tmp[8355587](8355591 'cast' uint(8)[71] tmp_x0[9108930]))
                    (9219712 '.=' style[3320944] string_end[164672] call_tmp[8355587])
                  }
                }
                {
                  const-val call_tmp[7348111]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7348113 'move' call_tmp[7348111](7348115 '==' argtypei[3320942] QIO_CONV_SET_STRINGSTARTEND[168093]))
                  if call_tmp[7348111]
                  {
                    const-val call_tmp[3321814]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5588984]:(int(32),bool)[3040996] "temp"
                    (3321819 call _toChar[3322847] argi[3320948] ret_tmp[5588984])
                    (5588987 'move' call_tmp[3321814] ret_tmp[5588984])
                    val tmp_x0[9108948]:int(32)[66] "temp"
                    val tmp_x1[9108950]:bool[19] "temp"
                    (9108956 'move' tmp_x0[9108948](9108954 '.v' call_tmp[3321814] x0[3040992]))
                    (9108961 'move' tmp_x1[9108950](9108959 '.v' call_tmp[3321814] x1[3040994]))
                    const-val call_tmp[7351220]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7351222 'move' call_tmp[7351220](7351224 'u!' tmp_x1[9108950]))
                    if call_tmp[7351220]
                    {
                      const-val call_tmp[3321872]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3321874 'move' call_tmp[3321872](3321877 call qio_format_error_arg_mismatch[168158] i[3320946]))
                      (7357405 '=' error[3320938] call_tmp[3321872])
                    }
                    {
                      const-val call_tmp[8355597]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8355599 'move' call_tmp[8355597](8355601 'cast' uint(8)[71] tmp_x0[9108948]))
                      (9219720 '.=' style[3320944] string_start[164666] call_tmp[8355597])
                      const-val call_tmp[8355607]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8355609 'move' call_tmp[8355607](8355611 'cast' uint(8)[71] tmp_x0[9108948]))
                      (9219726 '.=' style[3320944] string_end[164672] call_tmp[8355607])
                    }
                  }
                  {
                    const-val call_tmp[7348121]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7348123 'move' call_tmp[7348121](7348125 '==' argtypei[3320942] QIO_CONV_SET_STRINGLEN[168078]))
                    if call_tmp[7348121]
                    {
                      const-val call_tmp[3321947]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                      val error[5509147]:Error[85511] "error variable" "temp"
                      (5509149 'move' error[5509147] nil[32])
                      const-val ret[8455422]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
                      const-val call_tmp[8455424]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      val error[8455426]:Error[85511] "error variable" "temp"
                      (8455428 'move' error[8455426] nil[32])
                      (8455431 'move' call_tmp[8455424](8455434 call :[1751964] argi[3320948] error[8455426]))
                      val errorExists[8455437]:bool[19] "temp"
                      (8455439 'move' errorExists[8455437](8455441 '!=' error[8455426] nil[32]))
                      if errorExists[8455437]
                      {
                        (8455446 '=' error[5509147] error[8455426])
                        gotoErrorHandlingReturn _end__toIntegral[8455465] _end__toIntegral[8455465]
                      }
                      (9109822 '.=' ret[8455422] x0[3040014] call_tmp[8455424])
                      (9109826 '.=' ret[8455422] x1[3040016] 1)
                      label _end__toIntegral[8455465]
                      (5588957 'move' call_tmp[3321947] ret[8455422])
                      val errorExists[7302384]:bool[19] "temp"
                      (7302389 'move' errorExists[7302384](7302386 '!=' error[5509147] nil[32]))
                      if errorExists[7302384]
                      {
                        (5509153 '=' error_out[5509069] error[5509147])
                        gotoErrorHandlingReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
                      }
                      val tmp_x0[9109502]:int(64)[10] "temp"
                      val tmp_x1[9109504]:bool[19] "temp"
                      (9109510 'move' tmp_x0[9109502](9109508 '.v' call_tmp[3321947] x0[3040014]))
                      (9109515 'move' tmp_x1[9109504](9109513 '.v' call_tmp[3321947] x1[3040016]))
                      const-val call_tmp[7351229]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7351231 'move' call_tmp[7351229](7351233 'u!' tmp_x1[9109504]))
                      if call_tmp[7351229]
                      {
                        const-val call_tmp[3322005]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3322007 'move' call_tmp[3322005](3322010 call qio_format_error_arg_mismatch[168158] i[3320946]))
                        (7357411 '=' error[3320938] call_tmp[3322005])
                      }
                      {
                        (9219735 '.=' style[3320944] str_style[164604] tmp_x0[9109502])
                      }
                    }
                    {
                      const-val call_tmp[7348131]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7348133 'move' call_tmp[7348131](7348135 '==' argtypei[3320942] QIO_CONV_SET_TERMINATOR[168083]))
                      if call_tmp[7348131]
                      {
                        const-val call_tmp[3322065]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                        const-val ret_tmp[5588990]:(int(32),bool)[3040996] "temp"
                        (3322070 call _toChar[3322847] argi[3320948] ret_tmp[5588990])
                        (5588993 'move' call_tmp[3322065] ret_tmp[5588990])
                        val tmp_x0[9108966]:int(32)[66] "temp"
                        val tmp_x1[9108968]:bool[19] "temp"
                        (9108974 'move' tmp_x0[9108966](9108972 '.v' call_tmp[3322065] x0[3040992]))
                        (9108979 'move' tmp_x1[9108968](9108977 '.v' call_tmp[3322065] x1[3040994]))
                        const-val call_tmp[7351238]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7351240 'move' call_tmp[7351238](7351242 'u!' tmp_x1[9108968]))
                        if call_tmp[7351238]
                        {
                          const-val call_tmp[3322123]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3322125 'move' call_tmp[3322123](3322128 call qio_format_error_arg_mismatch[168158] i[3320946]))
                          (7357417 '=' error[3320938] call_tmp[3322123])
                        }
                        {
                          const-val call_tmp[8355617]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                          (8355619 'move' call_tmp[8355617](8355621 'cast' uint(8)[71] tmp_x0[9108966]))
                          const-val coerce_tmp[3323345]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3323351 'move' coerce_tmp[3323345](3323347 'cast' int(16)[61] call_tmp[8355617]))
                          const-val coerce_tmp[3323353]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3323359 'move' coerce_tmp[3323353](3323355 'cast' int(16)[61] -256))
                          const-val call_tmp[7498852]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7498854 'move' call_tmp[7498852](7498856 '-' coerce_tmp[3323345] coerce_tmp[3323353]))
                          const-val call_tmp[7629459]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7629461 'move' call_tmp[7629459](7629463 'u-' call_tmp[7498852]))
                          const-val coerce_tmp[3323363]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3323369 'move' coerce_tmp[3323363](3323365 'cast' int(64)[10] call_tmp[7629459]))
                          (9219743 '.=' style[3320944] str_style[164604] coerce_tmp[3323363])
                        }
                      }
                      {
                        const-val call_tmp[7348141]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7348143 'move' call_tmp[7348141](7348145 '==' argtypei[3320942] QIO_CONV_SET_DONE[168108]))
                        if call_tmp[7348141]
                        {
                        }
                        {
                          const-val call_tmp[7348151]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7348153 'move' call_tmp[7348151](7348155 '==' argtypei[3320942] QIO_CONV_UNK[167958]))
                          if call_tmp[7348151]
                          {
                            const-val call_tmp[3322231]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3322233 'move' call_tmp[3322231](3322236 call qio_format_error_too_many_args[168146]))
                            (7357423 '=' error[3320938] call_tmp[3322231])
                          }
                          {
                            (3322242 'move' ret[3320954] 1)
                            gotoReturn _end__conv_sethandler[3322266] _end__conv_sethandler[3322266]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (3322261 'move' ret[3320954] 0)
    label _end__conv_sethandler[3322266]
    (3322268 return ret[3320954])
  }
  function _conv_sethandler[3729933](ref arg error[3729935]:errorCode[12828], const in arg argtypei[3729939]:int(32)[66], ref arg style[3729941]:iostyleInternal[164872], const in arg i[3729943]:int(64)[10], const in arg argi[3729945]:real(32)[91], const in arg isReadf[3729947]:bool[19], ref arg error_out[5519145]:Error[85511]) : bool[19] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[3729951]:bool[19] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[3731280]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3731284 'move' coerce_tmp[3731280](3731282 'deref' error[3729935]))
    const-val call_tmp[7654934]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654936 'move' call_tmp[7654934](7654939 call qio_err_iserr[12868] coerce_tmp[3731280]))
    const-val call_tmp[7654941]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654943 'move' call_tmp[7654941](7654945 '!=' call_tmp[7654934] 0))
    if call_tmp[7654941]
    {
      (3729968 'move' ret[3729951] 0)
      gotoReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
    }
    const-val call_tmp[7348371]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7348373 'move' call_tmp[7348371](7348375 '==' argtypei[3729939] QIO_CONV_SET_MIN_WIDTH_COLS[168053]))
    if call_tmp[7348371]
    {
      const-val call_tmp[3729999]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
      val error[5519148]:Error[85511] "error variable" "temp"
      (5519150 'move' error[5519148] nil[32])
      const-val ret[8547575]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
      const-val call_tmp[8547577]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8547579 'move' call_tmp[8547577](8547581 'cast' int(64)[10] argi[3729945]))
      (9109864 '.=' ret[8547575] x0[3040014] call_tmp[8547577])
      (9109868 '.=' ret[8547575] x1[3040016] 1)
      (5593618 'move' call_tmp[3729999] ret[8547575])
      val errorExists[7306960]:bool[19] "temp"
      (7306965 'move' errorExists[7306960](7306962 '!=' error[5519148] nil[32]))
      if errorExists[7306960]
      {
        (5519154 '=' error_out[5519145] error[5519148])
        gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
      }
      val tmp_x0[9109538]:int(64)[10] "temp"
      val tmp_x1[9109540]:bool[19] "temp"
      (9109546 'move' tmp_x0[9109538](9109544 '.v' call_tmp[3729999] x0[3040014]))
      (9109551 'move' tmp_x1[9109540](9109549 '.v' call_tmp[3729999] x1[3040016]))
      (3730025 'noop')
      (3730037 'noop')
      const-val call_tmp[7351715]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7351717 'move' call_tmp[7351715](7351719 'u!' tmp_x1[9109540]))
      if call_tmp[7351715]
      {
        const-val call_tmp[3730057]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        (3730059 'move' call_tmp[3730057](3730062 call qio_format_error_arg_mismatch[168158] i[3729943]))
        (7357615 '=' error[3729935] call_tmp[3730057])
      }
      {
        const-val call_tmp[8355249]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
        (8355251 'move' call_tmp[8355249](8355253 'cast' uint(32)[81] tmp_x0[9109538]))
        (9229185 '.=' style[3729941] min_width_columns[164622] call_tmp[8355249])
      }
    }
    {
      const-val call_tmp[7348381]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7348383 'move' call_tmp[7348381](7348385 '==' argtypei[3729939] QIO_CONV_SET_MAX_WIDTH_COLS[168058]))
      if call_tmp[7348381]
      {
        const-val call_tmp[3730117]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        val error[5519163]:Error[85511] "error variable" "temp"
        (5519165 'move' error[5519163] nil[32])
        const-val ret[8547617]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
        const-val call_tmp[8547619]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8547621 'move' call_tmp[8547619](8547623 'cast' int(64)[10] argi[3729945]))
        (9109878 '.=' ret[8547617] x0[3040014] call_tmp[8547619])
        (9109882 '.=' ret[8547617] x1[3040016] 1)
        (5593624 'move' call_tmp[3730117] ret[8547617])
        val errorExists[7306968]:bool[19] "temp"
        (7306973 'move' errorExists[7306968](7306970 '!=' error[5519163] nil[32]))
        if errorExists[7306968]
        {
          (5519169 '=' error_out[5519145] error[5519163])
          gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
        }
        val tmp_x0[9109556]:int(64)[10] "temp"
        val tmp_x1[9109558]:bool[19] "temp"
        (9109564 'move' tmp_x0[9109556](9109562 '.v' call_tmp[3730117] x0[3040014]))
        (9109569 'move' tmp_x1[9109558](9109567 '.v' call_tmp[3730117] x1[3040016]))
        const-val call_tmp[7351724]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7351726 'move' call_tmp[7351724](7351728 'u!' tmp_x1[9109558]))
        if call_tmp[7351724]
        {
          const-val call_tmp[3730175]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3730177 'move' call_tmp[3730175](3730180 call qio_format_error_arg_mismatch[168158] i[3729943]))
          (7357621 '=' error[3729935] call_tmp[3730175])
        }
        {
          const-val call_tmp[8355259]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (8355261 'move' call_tmp[8355259](8355263 'cast' uint(32)[81] tmp_x0[9109556]))
          (9229193 '.=' style[3729941] max_width_columns[164630] call_tmp[8355259])
        }
      }
      {
        const-val call_tmp[7348391]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7348393 'move' call_tmp[7348391](7348395 '==' argtypei[3729939] QIO_CONV_SET_MAX_WIDTH_CHARS[168063]))
        if call_tmp[7348391]
        {
          const-val call_tmp[3730235]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
          val error[5519178]:Error[85511] "error variable" "temp"
          (5519180 'move' error[5519178] nil[32])
          const-val ret[8547659]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
          const-val call_tmp[8547661]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (8547663 'move' call_tmp[8547661](8547665 'cast' int(64)[10] argi[3729945]))
          (9109892 '.=' ret[8547659] x0[3040014] call_tmp[8547661])
          (9109896 '.=' ret[8547659] x1[3040016] 1)
          (5593630 'move' call_tmp[3730235] ret[8547659])
          val errorExists[7306976]:bool[19] "temp"
          (7306981 'move' errorExists[7306976](7306978 '!=' error[5519178] nil[32]))
          if errorExists[7306976]
          {
            (5519184 '=' error_out[5519145] error[5519178])
            gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
          }
          val tmp_x0[9109574]:int(64)[10] "temp"
          val tmp_x1[9109576]:bool[19] "temp"
          (9109582 'move' tmp_x0[9109574](9109580 '.v' call_tmp[3730235] x0[3040014]))
          (9109587 'move' tmp_x1[9109576](9109585 '.v' call_tmp[3730235] x1[3040016]))
          const-val call_tmp[7351733]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7351735 'move' call_tmp[7351733](7351737 'u!' tmp_x1[9109576]))
          if call_tmp[7351733]
          {
            const-val call_tmp[3730293]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3730295 'move' call_tmp[3730293](3730298 call qio_format_error_arg_mismatch[168158] i[3729943]))
            (7357627 '=' error[3729935] call_tmp[3730293])
          }
          {
            const-val call_tmp[8355269]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (8355271 'move' call_tmp[8355269](8355273 'cast' uint(32)[81] tmp_x0[9109574]))
            (9229201 '.=' style[3729941] max_width_characters[164642] call_tmp[8355269])
          }
        }
        {
          const-val call_tmp[7348401]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348403 'move' call_tmp[7348401](7348405 '==' argtypei[3729939] QIO_CONV_SET_MAX_WIDTH_BYTES[168068]))
          if call_tmp[7348401]
          {
            const-val call_tmp[3730353]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
            val error[5519193]:Error[85511] "error variable" "temp"
            (5519195 'move' error[5519193] nil[32])
            const-val ret[8547701]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
            const-val call_tmp[8547703]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (8547705 'move' call_tmp[8547703](8547707 'cast' int(64)[10] argi[3729945]))
            (9109906 '.=' ret[8547701] x0[3040014] call_tmp[8547703])
            (9109910 '.=' ret[8547701] x1[3040016] 1)
            (5593636 'move' call_tmp[3730353] ret[8547701])
            val errorExists[7306984]:bool[19] "temp"
            (7306989 'move' errorExists[7306984](7306986 '!=' error[5519193] nil[32]))
            if errorExists[7306984]
            {
              (5519199 '=' error_out[5519145] error[5519193])
              gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
            }
            val tmp_x0[9109592]:int(64)[10] "temp"
            val tmp_x1[9109594]:bool[19] "temp"
            (9109600 'move' tmp_x0[9109592](9109598 '.v' call_tmp[3730353] x0[3040014]))
            (9109605 'move' tmp_x1[9109594](9109603 '.v' call_tmp[3730353] x1[3040016]))
            const-val call_tmp[7351742]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7351744 'move' call_tmp[7351742](7351746 'u!' tmp_x1[9109594]))
            if call_tmp[7351742]
            {
              const-val call_tmp[3730411]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3730413 'move' call_tmp[3730411](3730416 call qio_format_error_arg_mismatch[168158] i[3729943]))
              (7357633 '=' error[3729935] call_tmp[3730411])
            }
            {
              const-val call_tmp[8355279]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
              (8355281 'move' call_tmp[8355279](8355283 'cast' uint(32)[81] tmp_x0[9109592]))
              (9229209 '.=' style[3729941] max_width_bytes[164654] call_tmp[8355279])
            }
          }
          {
            const-val call_tmp[7348411]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348413 'move' call_tmp[7348411](7348415 '==' argtypei[3729939] QIO_CONV_SET_PRECISION[168073]))
            if call_tmp[7348411]
            {
              const-val call_tmp[3730471]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
              val error[5519208]:Error[85511] "error variable" "temp"
              (5519210 'move' error[5519208] nil[32])
              const-val ret[8547743]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
              const-val call_tmp[8547745]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (8547747 'move' call_tmp[8547745](8547749 'cast' int(64)[10] argi[3729945]))
              (9109920 '.=' ret[8547743] x0[3040014] call_tmp[8547745])
              (9109924 '.=' ret[8547743] x1[3040016] 1)
              (5593642 'move' call_tmp[3730471] ret[8547743])
              val errorExists[7306992]:bool[19] "temp"
              (7306997 'move' errorExists[7306992](7306994 '!=' error[5519208] nil[32]))
              if errorExists[7306992]
              {
                (5519214 '=' error_out[5519145] error[5519208])
                gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
              }
              val tmp_x0[9109610]:int(64)[10] "temp"
              val tmp_x1[9109612]:bool[19] "temp"
              (9109618 'move' tmp_x0[9109610](9109616 '.v' call_tmp[3730471] x0[3040014]))
              (9109623 'move' tmp_x1[9109612](9109621 '.v' call_tmp[3730471] x1[3040016]))
              const-val call_tmp[7351751]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7351753 'move' call_tmp[7351751](7351755 'u!' tmp_x1[9109612]))
              if call_tmp[7351751]
              {
                const-val call_tmp[3730529]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3730531 'move' call_tmp[3730529](3730534 call qio_format_error_arg_mismatch[168158] i[3729943]))
                (7357639 '=' error[3729935] call_tmp[3730529])
              }
              {
                const-val call_tmp[7349716]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
                (7349718 'move' call_tmp[7349716](7349720 'cast' int(32)[66] tmp_x0[9109610]))
                (9229217 '.=' style[3729941] precision[164822] call_tmp[7349716])
              }
            }
            {
              const-val call_tmp[7348421]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348423 'move' call_tmp[7348421](7348425 '==' argtypei[3729939] QIO_CONV_SET_STRINGSTART[168088]))
              if call_tmp[7348421]
              {
                const-val call_tmp[3730589]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                const-val ret_tmp[5593663]:(int(32),bool)[3040996] "temp"
                (9109180 '.=' ret_tmp[5593663] x0[3040992] 0)
                (9109184 '.=' ret_tmp[5593663] x1[3040994] 0)
                (5593666 'move' call_tmp[3730589] ret_tmp[5593663])
                val tmp_x0[9109002]:int(32)[66] "temp"
                val tmp_x1[9109004]:bool[19] "temp"
                (9109010 'move' tmp_x0[9109002](9109008 '.v' call_tmp[3730589] x0[3040992]))
                (9109015 'move' tmp_x1[9109004](9109013 '.v' call_tmp[3730589] x1[3040994]))
                const-val call_tmp[7351760]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7351762 'move' call_tmp[7351760](7351764 'u!' tmp_x1[9109004]))
                if call_tmp[7351760]
                {
                  const-val call_tmp[3730647]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3730649 'move' call_tmp[3730647](3730652 call qio_format_error_arg_mismatch[168158] i[3729943]))
                  (7357645 '=' error[3729935] call_tmp[3730647])
                }
                {
                  const-val call_tmp[8355627]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                  (8355629 'move' call_tmp[8355627](8355631 'cast' uint(8)[71] tmp_x0[9109002]))
                  (9229225 '.=' style[3729941] string_start[164666] call_tmp[8355627])
                }
              }
              {
                const-val call_tmp[7348431]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348433 'move' call_tmp[7348431](7348435 '==' argtypei[3729939] QIO_CONV_SET_STRINGEND[168098]))
                if call_tmp[7348431]
                {
                  const-val call_tmp[3730700]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                  const-val ret_tmp[5593669]:(int(32),bool)[3040996] "temp"
                  (9109194 '.=' ret_tmp[5593669] x0[3040992] 0)
                  (9109198 '.=' ret_tmp[5593669] x1[3040994] 0)
                  (5593672 'move' call_tmp[3730700] ret_tmp[5593669])
                  val tmp_x0[9109020]:int(32)[66] "temp"
                  val tmp_x1[9109022]:bool[19] "temp"
                  (9109028 'move' tmp_x0[9109020](9109026 '.v' call_tmp[3730700] x0[3040992]))
                  (9109033 'move' tmp_x1[9109022](9109031 '.v' call_tmp[3730700] x1[3040994]))
                  const-val call_tmp[7351769]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7351771 'move' call_tmp[7351769](7351773 'u!' tmp_x1[9109022]))
                  if call_tmp[7351769]
                  {
                    const-val call_tmp[3730758]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3730760 'move' call_tmp[3730758](3730763 call qio_format_error_arg_mismatch[168158] i[3729943]))
                    (7357651 '=' error[3729935] call_tmp[3730758])
                  }
                  {
                    const-val call_tmp[8355637]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                    (8355639 'move' call_tmp[8355637](8355641 'cast' uint(8)[71] tmp_x0[9109020]))
                    (9229233 '.=' style[3729941] string_end[164672] call_tmp[8355637])
                  }
                }
                {
                  const-val call_tmp[7348441]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7348443 'move' call_tmp[7348441](7348445 '==' argtypei[3729939] QIO_CONV_SET_STRINGSTARTEND[168093]))
                  if call_tmp[7348441]
                  {
                    const-val call_tmp[3730811]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5593675]:(int(32),bool)[3040996] "temp"
                    (9109208 '.=' ret_tmp[5593675] x0[3040992] 0)
                    (9109212 '.=' ret_tmp[5593675] x1[3040994] 0)
                    (5593678 'move' call_tmp[3730811] ret_tmp[5593675])
                    val tmp_x0[9109038]:int(32)[66] "temp"
                    val tmp_x1[9109040]:bool[19] "temp"
                    (9109046 'move' tmp_x0[9109038](9109044 '.v' call_tmp[3730811] x0[3040992]))
                    (9109051 'move' tmp_x1[9109040](9109049 '.v' call_tmp[3730811] x1[3040994]))
                    const-val call_tmp[7351778]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7351780 'move' call_tmp[7351778](7351782 'u!' tmp_x1[9109040]))
                    if call_tmp[7351778]
                    {
                      const-val call_tmp[3730869]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3730871 'move' call_tmp[3730869](3730874 call qio_format_error_arg_mismatch[168158] i[3729943]))
                      (7357657 '=' error[3729935] call_tmp[3730869])
                    }
                    {
                      const-val call_tmp[8355647]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8355649 'move' call_tmp[8355647](8355651 'cast' uint(8)[71] tmp_x0[9109038]))
                      (9229241 '.=' style[3729941] string_start[164666] call_tmp[8355647])
                      const-val call_tmp[8355657]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8355659 'move' call_tmp[8355657](8355661 'cast' uint(8)[71] tmp_x0[9109038]))
                      (9229247 '.=' style[3729941] string_end[164672] call_tmp[8355657])
                    }
                  }
                  {
                    const-val call_tmp[7348451]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7348453 'move' call_tmp[7348451](7348455 '==' argtypei[3729939] QIO_CONV_SET_STRINGLEN[168078]))
                    if call_tmp[7348451]
                    {
                      const-val call_tmp[3730944]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                      val error[5519223]:Error[85511] "error variable" "temp"
                      (5519225 'move' error[5519223] nil[32])
                      const-val ret[8547785]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
                      const-val call_tmp[8547787]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (8547789 'move' call_tmp[8547787](8547791 'cast' int(64)[10] argi[3729945]))
                      (9109934 '.=' ret[8547785] x0[3040014] call_tmp[8547787])
                      (9109938 '.=' ret[8547785] x1[3040016] 1)
                      (5593648 'move' call_tmp[3730944] ret[8547785])
                      val errorExists[7307000]:bool[19] "temp"
                      (7307005 'move' errorExists[7307000](7307002 '!=' error[5519223] nil[32]))
                      if errorExists[7307000]
                      {
                        (5519229 '=' error_out[5519145] error[5519223])
                        gotoErrorHandlingReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
                      }
                      val tmp_x0[9109628]:int(64)[10] "temp"
                      val tmp_x1[9109630]:bool[19] "temp"
                      (9109636 'move' tmp_x0[9109628](9109634 '.v' call_tmp[3730944] x0[3040014]))
                      (9109641 'move' tmp_x1[9109630](9109639 '.v' call_tmp[3730944] x1[3040016]))
                      const-val call_tmp[7351787]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7351789 'move' call_tmp[7351787](7351791 'u!' tmp_x1[9109630]))
                      if call_tmp[7351787]
                      {
                        const-val call_tmp[3731002]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3731004 'move' call_tmp[3731002](3731007 call qio_format_error_arg_mismatch[168158] i[3729943]))
                        (7357663 '=' error[3729935] call_tmp[3731002])
                      }
                      {
                        (9229255 '.=' style[3729941] str_style[164604] tmp_x0[9109628])
                      }
                    }
                    {
                      const-val call_tmp[7348461]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7348463 'move' call_tmp[7348461](7348465 '==' argtypei[3729939] QIO_CONV_SET_TERMINATOR[168083]))
                      if call_tmp[7348461]
                      {
                        const-val call_tmp[3731062]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                        const-val ret_tmp[5593681]:(int(32),bool)[3040996] "temp"
                        (9109222 '.=' ret_tmp[5593681] x0[3040992] 0)
                        (9109226 '.=' ret_tmp[5593681] x1[3040994] 0)
                        (5593684 'move' call_tmp[3731062] ret_tmp[5593681])
                        val tmp_x0[9109056]:int(32)[66] "temp"
                        val tmp_x1[9109058]:bool[19] "temp"
                        (9109064 'move' tmp_x0[9109056](9109062 '.v' call_tmp[3731062] x0[3040992]))
                        (9109069 'move' tmp_x1[9109058](9109067 '.v' call_tmp[3731062] x1[3040994]))
                        const-val call_tmp[7351796]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7351798 'move' call_tmp[7351796](7351800 'u!' tmp_x1[9109058]))
                        if call_tmp[7351796]
                        {
                          const-val call_tmp[3731120]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3731122 'move' call_tmp[3731120](3731125 call qio_format_error_arg_mismatch[168158] i[3729943]))
                          (7357669 '=' error[3729935] call_tmp[3731120])
                        }
                        {
                          const-val call_tmp[8355667]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
                          (8355669 'move' call_tmp[8355667](8355671 'cast' uint(8)[71] tmp_x0[9109056]))
                          const-val coerce_tmp[3732289]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3732295 'move' coerce_tmp[3732289](3732291 'cast' int(16)[61] call_tmp[8355667]))
                          const-val coerce_tmp[3732297]:int(16)[61] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3732303 'move' coerce_tmp[3732297](3732299 'cast' int(16)[61] -256))
                          const-val call_tmp[7498862]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7498864 'move' call_tmp[7498862](7498866 '-' coerce_tmp[3732289] coerce_tmp[3732297]))
                          const-val call_tmp[7629468]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7629470 'move' call_tmp[7629468](7629472 'u-' call_tmp[7498862]))
                          const-val coerce_tmp[3732307]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3732313 'move' coerce_tmp[3732307](3732309 'cast' int(64)[10] call_tmp[7629468]))
                          (9229263 '.=' style[3729941] str_style[164604] coerce_tmp[3732307])
                        }
                      }
                      {
                        const-val call_tmp[7348471]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7348473 'move' call_tmp[7348471](7348475 '==' argtypei[3729939] QIO_CONV_SET_DONE[168108]))
                        if call_tmp[7348471]
                        {
                        }
                        {
                          const-val call_tmp[7348481]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7348483 'move' call_tmp[7348481](7348485 '==' argtypei[3729939] QIO_CONV_UNK[167958]))
                          if call_tmp[7348481]
                          {
                            const-val call_tmp[3731228]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                            (3731230 'move' call_tmp[3731228](3731233 call qio_format_error_too_many_args[168146]))
                            (7357675 '=' error[3729935] call_tmp[3731228])
                          }
                          {
                            (3731239 'move' ret[3729951] 1)
                            gotoReturn _end__conv_sethandler[3731263] _end__conv_sethandler[3731263]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (3731258 'move' ret[3729951] 0)
    label _end__conv_sethandler[3731263]
    (3731265 return ret[3729951])
  }
  function fileWriter(false,defaultSerializer)[1838949]._write_signed[3042764](const  ref arg this[3042770]:fileWriter(false,defaultSerializer)[1838949], const in arg width[3042774]:uint(32)[81], const in arg t[3042776]:int(64)[10], const in arg i[3042778]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val err[3042790]:errorCode[12828] "dead at end of block" "insert auto destroy" "split inited"
    const-val call_tmp[3042809]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3043124]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3043128 'move' coerce_tmp[3043124](9214940 '.v' this[3042770] _channel_internal[1838935]))
    (3042811 'move' call_tmp[3042809](3042814 call qio_channel_byteorder[166012] coerce_tmp[3043124]))
    const-val coerce_tmp[3043131]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3043137 'move' coerce_tmp[3043131](3043133 'cast' int(32)[66] 1))
    const-val tmp[7520598]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7520600 'move' tmp[7520598](7520602 '<' coerce_tmp[3043131] 0))
    const-val call_tmp[7520605]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7520607 'move' call_tmp[7520605](7520609 'u!' tmp[7520598]))
    val tmp[7520611]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7520605]
    {
      const-val call_tmp[7520615]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520617 'move' call_tmp[7520615](7520619 'cast' uint(32)[81] coerce_tmp[3043131]))
      const-val call_tmp[7520622]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520624 'move' call_tmp[7520622](7520626 '==' width[3042774] call_tmp[7520615]))
      (7520629 'move' tmp[7520611] call_tmp[7520622])
    }
    {
      (7520633 'move' tmp[7520611] 0)
    }
    if tmp[7520611]
    {
      const-val call_tmp[8355720]:int(8)[56] "dead after last mention" "expr temp" "maybe param" "temp"
      (8355722 'move' call_tmp[8355720](8355724 'cast' int(8)[56] t[3042776]))
      const-val call_tmp[3042874]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[3043174]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3043180 'move' coerce_tmp[3043174](3043176 'cast' int(32)[66] 0))
      val coerce_tmp[3043182]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3043186 'move' coerce_tmp[3043182](9214946 '.v' this[3042770] _channel_internal[1838935]))
      (3042876 'move' call_tmp[3042874](3042879 call qio_channel_write_int8[166664] coerce_tmp[3043174] coerce_tmp[3043182] call_tmp[8355720]))
      (3042883 'move' err[3042790] call_tmp[3042874])
    }
    {
      const-val coerce_tmp[3043193]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3043199 'move' coerce_tmp[3043193](3043195 'cast' int(32)[66] 2))
      const-val tmp[7520640]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7520642 'move' tmp[7520640](7520644 '<' coerce_tmp[3043193] 0))
      const-val call_tmp[7520647]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520649 'move' call_tmp[7520647](7520651 'u!' tmp[7520640]))
      val tmp[7520653]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7520647]
      {
        const-val call_tmp[7520657]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
        (7520659 'move' call_tmp[7520657](7520661 'cast' uint(32)[81] coerce_tmp[3043193]))
        const-val call_tmp[7520664]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7520666 'move' call_tmp[7520664](7520668 '==' width[3042774] call_tmp[7520657]))
        (7520671 'move' tmp[7520653] call_tmp[7520664])
      }
      {
        (7520675 'move' tmp[7520653] 0)
      }
      if tmp[7520653]
      {
        const-val call_tmp[8355730]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
        (8355732 'move' call_tmp[8355730](8355734 'cast' int(16)[61] t[3042776]))
        const-val call_tmp[3042937]:errorCode[12828] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3043236]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3043242 'move' coerce_tmp[3043236](3043238 'cast' int(32)[66] 0))
        const-val coerce_tmp[3043244]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3043250 'move' coerce_tmp[3043244](3043246 'cast' int(32)[66] call_tmp[3042809]))
        val coerce_tmp[3043252]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3043256 'move' coerce_tmp[3043252](9214952 '.v' this[3042770] _channel_internal[1838935]))
        (3042939 'move' call_tmp[3042937](3042942 call qio_channel_write_int16[166748] coerce_tmp[3043236] coerce_tmp[3043244] coerce_tmp[3043252] call_tmp[8355730]))
        (3042947 'move' err[3042790] call_tmp[3042937])
      }
      {
        const-val coerce_tmp[3043263]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3043269 'move' coerce_tmp[3043263](3043265 'cast' int(32)[66] 4))
        const-val tmp[7520682]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7520684 'move' tmp[7520682](7520686 '<' coerce_tmp[3043263] 0))
        const-val call_tmp[7520689]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7520691 'move' call_tmp[7520689](7520693 'u!' tmp[7520682]))
        val tmp[7520695]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[7520689]
        {
          const-val call_tmp[7520699]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (7520701 'move' call_tmp[7520699](7520703 'cast' uint(32)[81] coerce_tmp[3043263]))
          const-val call_tmp[7520706]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7520708 'move' call_tmp[7520706](7520710 '==' width[3042774] call_tmp[7520699]))
          (7520713 'move' tmp[7520695] call_tmp[7520706])
        }
        {
          (7520717 'move' tmp[7520695] 0)
        }
        if tmp[7520695]
        {
          const-val call_tmp[7349696]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
          (7349698 'move' call_tmp[7349696](7349700 'cast' int(32)[66] t[3042776]))
          const-val call_tmp[3043002]:errorCode[12828] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3043276]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043282 'move' coerce_tmp[3043276](3043278 'cast' int(32)[66] 0))
          const-val coerce_tmp[3043284]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043290 'move' coerce_tmp[3043284](3043286 'cast' int(32)[66] call_tmp[3042809]))
          val coerce_tmp[3043292]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043296 'move' coerce_tmp[3043292](9214958 '.v' this[3042770] _channel_internal[1838935]))
          (3043004 'move' call_tmp[3043002](3043007 call qio_channel_write_int32[166844] coerce_tmp[3043276] coerce_tmp[3043284] coerce_tmp[3043292] call_tmp[7349696]))
          (3043012 'move' err[3042790] call_tmp[3043002])
        }
        {
          const-val coerce_tmp[3043303]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3043309 'move' coerce_tmp[3043303](3043305 'cast' int(32)[66] 8))
          const-val tmp[7520724]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7520726 'move' tmp[7520724](7520728 '<' coerce_tmp[3043303] 0))
          const-val call_tmp[7520731]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7520733 'move' call_tmp[7520731](7520735 'u!' tmp[7520724]))
          val tmp[7520737]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[7520731]
          {
            const-val call_tmp[7520741]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (7520743 'move' call_tmp[7520741](7520745 'cast' uint(32)[81] coerce_tmp[3043303]))
            const-val call_tmp[7520748]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7520750 'move' call_tmp[7520748](7520752 '==' width[3042774] call_tmp[7520741]))
            (7520755 'move' tmp[7520737] call_tmp[7520748])
          }
          {
            (7520759 'move' tmp[7520737] 0)
          }
          if tmp[7520737]
          {
            const-val call_tmp[3043067]:errorCode[12828] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3043316]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043322 'move' coerce_tmp[3043316](3043318 'cast' int(32)[66] 0))
            const-val coerce_tmp[3043324]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043330 'move' coerce_tmp[3043324](3043326 'cast' int(32)[66] call_tmp[3042809]))
            val coerce_tmp[3043332]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043336 'move' coerce_tmp[3043332](9214964 '.v' this[3042770] _channel_internal[1838935]))
            (3043069 'move' call_tmp[3043067](3043072 call qio_channel_write_int64[166940] coerce_tmp[3043316] coerce_tmp[3043324] coerce_tmp[3043332] t[3042776]))
            (3043077 'move' err[3042790] call_tmp[3043067])
          }
          {
            const-val call_tmp[3043086]:errorCode[12828] "dead after last mention" "maybe param" "temp"
            (3043088 'move' call_tmp[3043086](3043091 call qio_format_error_arg_mismatch[168158] i[3042778]))
            (3043093 'move' err[3042790] call_tmp[3043086])
          }
        }
      }
    }
    label _end__write_signed[3043112]
    (3043114 return err[3042790])
  }
  function fileWriter(false,defaultSerializer)[1838949]._write_unsigned[3051637](const  ref arg this[3051643]:fileWriter(false,defaultSerializer)[1838949], const in arg width[3051647]:uint(32)[81], const in arg t[3051649]:uint(64)[86], const in arg i[3051651]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val err[3051661]:errorCode[12828] "dead at end of block" "insert auto destroy" "split inited"
    const-val call_tmp[3051680]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3051994]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3051998 'move' coerce_tmp[3051994](9214986 '.v' this[3051643] _channel_internal[1838935]))
    (3051682 'move' call_tmp[3051680](3051685 call qio_channel_byteorder[166012] coerce_tmp[3051994]))
    const-val coerce_tmp[3052001]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3052007 'move' coerce_tmp[3052001](3052003 'cast' int(32)[66] 1))
    const-val tmp[7520766]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7520768 'move' tmp[7520766](7520770 '<' coerce_tmp[3052001] 0))
    const-val call_tmp[7520773]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7520775 'move' call_tmp[7520773](7520777 'u!' tmp[7520766]))
    val tmp[7520779]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7520773]
    {
      const-val call_tmp[7520783]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520785 'move' call_tmp[7520783](7520787 'cast' uint(32)[81] coerce_tmp[3052001]))
      const-val call_tmp[7520790]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520792 'move' call_tmp[7520790](7520794 '==' width[3051647] call_tmp[7520783]))
      (7520797 'move' tmp[7520779] call_tmp[7520790])
    }
    {
      (7520801 'move' tmp[7520779] 0)
    }
    if tmp[7520779]
    {
      const-val call_tmp[8355900]:uint(8)[71] "dead after last mention" "expr temp" "maybe param" "temp"
      (8355902 'move' call_tmp[8355900](8355904 'cast' uint(8)[71] t[3051649]))
      const-val call_tmp[3051745]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[3052044]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3052050 'move' coerce_tmp[3052044](3052046 'cast' int(32)[66] 0))
      val coerce_tmp[3052052]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3052056 'move' coerce_tmp[3052052](9214992 '.v' this[3051643] _channel_internal[1838935]))
      (3051747 'move' call_tmp[3051745](3051750 call qio_channel_write_uint8[166704] coerce_tmp[3052044] coerce_tmp[3052052] call_tmp[8355900]))
      (3051754 'move' err[3051661] call_tmp[3051745])
    }
    {
      const-val coerce_tmp[3052063]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3052069 'move' coerce_tmp[3052063](3052065 'cast' int(32)[66] 2))
      const-val tmp[7520808]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7520810 'move' tmp[7520808](7520812 '<' coerce_tmp[3052063] 0))
      const-val call_tmp[7520815]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520817 'move' call_tmp[7520815](7520819 'u!' tmp[7520808]))
      val tmp[7520821]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7520815]
      {
        const-val call_tmp[7520825]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
        (7520827 'move' call_tmp[7520825](7520829 'cast' uint(32)[81] coerce_tmp[3052063]))
        const-val call_tmp[7520832]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7520834 'move' call_tmp[7520832](7520836 '==' width[3051647] call_tmp[7520825]))
        (7520839 'move' tmp[7520821] call_tmp[7520832])
      }
      {
        (7520843 'move' tmp[7520821] 0)
      }
      if tmp[7520821]
      {
        const-val call_tmp[8355910]:uint(16)[76] "dead after last mention" "expr temp" "maybe param" "temp"
        (8355912 'move' call_tmp[8355910](8355914 'cast' uint(16)[76] t[3051649]))
        const-val call_tmp[3051808]:errorCode[12828] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3052106]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3052112 'move' coerce_tmp[3052106](3052108 'cast' int(32)[66] 0))
        const-val coerce_tmp[3052114]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3052120 'move' coerce_tmp[3052114](3052116 'cast' int(32)[66] call_tmp[3051680]))
        val coerce_tmp[3052122]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3052126 'move' coerce_tmp[3052122](9214998 '.v' this[3051643] _channel_internal[1838935]))
        (3051810 'move' call_tmp[3051808](3051813 call qio_channel_write_uint16[166796] coerce_tmp[3052106] coerce_tmp[3052114] coerce_tmp[3052122] call_tmp[8355910]))
        (3051818 'move' err[3051661] call_tmp[3051808])
      }
      {
        const-val coerce_tmp[3052133]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3052139 'move' coerce_tmp[3052133](3052135 'cast' int(32)[66] 4))
        const-val tmp[7520850]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7520852 'move' tmp[7520850](7520854 '<' coerce_tmp[3052133] 0))
        const-val call_tmp[7520857]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7520859 'move' call_tmp[7520857](7520861 'u!' tmp[7520850]))
        val tmp[7520863]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[7520857]
        {
          const-val call_tmp[7520867]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (7520869 'move' call_tmp[7520867](7520871 'cast' uint(32)[81] coerce_tmp[3052133]))
          const-val call_tmp[7520874]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7520876 'move' call_tmp[7520874](7520878 '==' width[3051647] call_tmp[7520867]))
          (7520881 'move' tmp[7520863] call_tmp[7520874])
        }
        {
          (7520885 'move' tmp[7520863] 0)
        }
        if tmp[7520863]
        {
          const-val call_tmp[8355920]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
          (8355922 'move' call_tmp[8355920](8355924 'cast' uint(32)[81] t[3051649]))
          const-val call_tmp[3051873]:errorCode[12828] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3052176]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052182 'move' coerce_tmp[3052176](3052178 'cast' int(32)[66] 0))
          const-val coerce_tmp[3052184]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052190 'move' coerce_tmp[3052184](3052186 'cast' int(32)[66] call_tmp[3051680]))
          val coerce_tmp[3052192]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052196 'move' coerce_tmp[3052192](9215004 '.v' this[3051643] _channel_internal[1838935]))
          (3051875 'move' call_tmp[3051873](3051878 call qio_channel_write_uint32[166892] coerce_tmp[3052176] coerce_tmp[3052184] coerce_tmp[3052192] call_tmp[8355920]))
          (3051883 'move' err[3051661] call_tmp[3051873])
        }
        {
          const-val coerce_tmp[3052203]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3052209 'move' coerce_tmp[3052203](3052205 'cast' int(32)[66] 8))
          const-val tmp[7520892]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          (7520894 'move' tmp[7520892](7520896 '<' coerce_tmp[3052203] 0))
          const-val call_tmp[7520899]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7520901 'move' call_tmp[7520899](7520903 'u!' tmp[7520892]))
          val tmp[7520905]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[7520899]
          {
            const-val call_tmp[7520909]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
            (7520911 'move' call_tmp[7520909](7520913 'cast' uint(32)[81] coerce_tmp[3052203]))
            const-val call_tmp[7520916]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7520918 'move' call_tmp[7520916](7520920 '==' width[3051647] call_tmp[7520909]))
            (7520923 'move' tmp[7520905] call_tmp[7520916])
          }
          {
            (7520927 'move' tmp[7520905] 0)
          }
          if tmp[7520905]
          {
            const-val call_tmp[3051938]:errorCode[12828] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3052216]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3052222 'move' coerce_tmp[3052216](3052218 'cast' int(32)[66] 0))
            const-val coerce_tmp[3052224]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3052230 'move' coerce_tmp[3052224](3052226 'cast' int(32)[66] call_tmp[3051680]))
            val coerce_tmp[3052232]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3052236 'move' coerce_tmp[3052232](9215010 '.v' this[3051643] _channel_internal[1838935]))
            (3051940 'move' call_tmp[3051938](3051943 call qio_channel_write_uint64[166988] coerce_tmp[3052216] coerce_tmp[3052224] coerce_tmp[3052232] t[3051649]))
            (3051948 'move' err[3051661] call_tmp[3051938])
          }
          {
            const-val call_tmp[3051957]:errorCode[12828] "dead after last mention" "maybe param" "temp"
            (3051959 'move' call_tmp[3051957](3051962 call qio_format_error_arg_mismatch[168158] i[3051651]))
            (3051964 'move' err[3051661] call_tmp[3051957])
          }
        }
      }
    }
    label _end__write_unsigned[3051982]
    (3051984 return err[3051661])
  }
  function fileWriter(false,defaultSerializer)[1838949]._write_real[3060196](const  ref arg this[3060202]:fileWriter(false,defaultSerializer)[1838949], const in arg width[3060206]:uint(32)[81], const in arg t[3060208]:real(64)[13], const in arg i[3060210]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val err[3060220]:errorCode[12828] "dead at end of block" "insert auto destroy" "split inited"
    const-val call_tmp[3060239]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3060423]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3060427 'move' coerce_tmp[3060423](9215030 '.v' this[3060202] _channel_internal[1838935]))
    (3060241 'move' call_tmp[3060239](3060244 call qio_channel_byteorder[166012] coerce_tmp[3060423]))
    const-val coerce_tmp[3060430]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3060436 'move' coerce_tmp[3060430](3060432 'cast' int(32)[66] 4))
    const-val tmp[7520934]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7520936 'move' tmp[7520934](7520938 '<' coerce_tmp[3060430] 0))
    const-val call_tmp[7520941]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7520943 'move' call_tmp[7520941](7520945 'u!' tmp[7520934]))
    val tmp[7520947]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7520941]
    {
      const-val call_tmp[7520951]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520953 'move' call_tmp[7520951](7520955 'cast' uint(32)[81] coerce_tmp[3060430]))
      const-val call_tmp[7520958]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520960 'move' call_tmp[7520958](7520962 '==' width[3060206] call_tmp[7520951]))
      (7520965 'move' tmp[7520947] call_tmp[7520958])
    }
    {
      (7520969 'move' tmp[7520947] 0)
    }
    if tmp[7520947]
    {
      const-val call_tmp[8031330]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp"
      (8031332 'move' call_tmp[8031330](8031334 'cast' real(32)[91] t[3060208]))
      const-val call_tmp[3060304]:errorCode[12828] "dead after last mention" "maybe param" "temp"
      const-val coerce_tmp[3060444]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3060450 'move' coerce_tmp[3060444](3060446 'cast' int(32)[66] 0))
      const-val coerce_tmp[3060452]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3060458 'move' coerce_tmp[3060452](3060454 'cast' int(32)[66] call_tmp[3060239]))
      val coerce_tmp[3060460]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3060464 'move' coerce_tmp[3060460](9215036 '.v' this[3060202] _channel_internal[1838935]))
      (3060306 'move' call_tmp[3060304](3060309 call qio_channel_write_float32[167036] coerce_tmp[3060444] coerce_tmp[3060452] coerce_tmp[3060460] call_tmp[8031330]))
      (3060314 'move' err[3060220] call_tmp[3060304])
    }
    {
      const-val coerce_tmp[3060471]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3060477 'move' coerce_tmp[3060471](3060473 'cast' int(32)[66] 8))
      const-val tmp[7520976]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7520978 'move' tmp[7520976](7520980 '<' coerce_tmp[3060471] 0))
      const-val call_tmp[7520983]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520985 'move' call_tmp[7520983](7520987 'u!' tmp[7520976]))
      val tmp[7520989]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7520983]
      {
        const-val call_tmp[7520993]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
        (7520995 'move' call_tmp[7520993](7520997 'cast' uint(32)[81] coerce_tmp[3060471]))
        const-val call_tmp[7521000]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521002 'move' call_tmp[7521000](7521004 '==' width[3060206] call_tmp[7520993]))
        (7521007 'move' tmp[7520989] call_tmp[7521000])
      }
      {
        (7521011 'move' tmp[7520989] 0)
      }
      if tmp[7520989]
      {
        const-val call_tmp[3060369]:errorCode[12828] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3060485]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3060491 'move' coerce_tmp[3060485](3060487 'cast' int(32)[66] 0))
        const-val coerce_tmp[3060493]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3060499 'move' coerce_tmp[3060493](3060495 'cast' int(32)[66] call_tmp[3060239]))
        val coerce_tmp[3060501]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3060505 'move' coerce_tmp[3060501](9215042 '.v' this[3060202] _channel_internal[1838935]))
        (3060371 'move' call_tmp[3060369](3060374 call qio_channel_write_float64[167132] coerce_tmp[3060485] coerce_tmp[3060493] coerce_tmp[3060501] t[3060208]))
        (3060379 'move' err[3060220] call_tmp[3060369])
      }
      {
        const-val call_tmp[3060388]:errorCode[12828] "dead after last mention" "maybe param" "temp"
        (3060390 'move' call_tmp[3060388](3060393 call qio_format_error_arg_mismatch[168158] i[3060210]))
        (3060395 'move' err[3060220] call_tmp[3060388])
      }
    }
    label _end__write_real[3060411]
    (3060413 return err[3060220])
  }
  function fileWriter(false,defaultSerializer)[1838949]._write_complex[3078407](const  ref arg this[3078413]:fileWriter(false,defaultSerializer)[1838949], const in arg width[3078417]:uint(32)[81], const in arg t[3078419]:complex(128)[111], const in arg i[3078421]:int(64)[10]) : errorCode[12828] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val err[3078431]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[7355736]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7355738 'move' call_tmp[7355736](7355740 'cast' int(32)[66] 0))
    const-val call_tmp[7355743]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7355745 'move' call_tmp[7355743](7355748 call qio_int_to_err[12856] call_tmp[7355736]))
    (3078433 'move' err[3078431] call_tmp[7355743])
    const-val call_tmp[3078446]:uint(8)[71] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[3078780]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3078784 'move' coerce_tmp[3078780](9215075 '.v' this[3078413] _channel_internal[1838935]))
    (3078448 'move' call_tmp[3078446](3078451 call qio_channel_byteorder[166012] coerce_tmp[3078780]))
    const-val coerce_tmp[3078787]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3078793 'move' coerce_tmp[3078787](3078789 'cast' int(32)[66] 8))
    const-val tmp[7521018]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7521020 'move' tmp[7521018](7521022 '<' coerce_tmp[3078787] 0))
    const-val call_tmp[7521025]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7521027 'move' call_tmp[7521025](7521029 'u!' tmp[7521018]))
    val tmp[7521031]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7521025]
    {
      const-val call_tmp[7521035]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (7521037 'move' call_tmp[7521035](7521039 'cast' uint(32)[81] coerce_tmp[3078787]))
      const-val call_tmp[7521042]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7521044 'move' call_tmp[7521042](7521046 '==' width[3078417] call_tmp[7521035]))
      (7521049 'move' tmp[7521031] call_tmp[7521042])
    }
    {
      (7521053 'move' tmp[7521031] 0)
    }
    if tmp[7521031]
    {
      const-val call_tmp[8356864]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (8356866 'move' call_tmp[8356864](8356869 call chpl_creal[3078930] t[3078419]))
      const-val call_tmp[8356871]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (8356873 'move' call_tmp[8356871](8356876 call chpl_cimag[3079078] t[3078419]))
      const-val call_tmp[8356900]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp"
      (8356902 'move' call_tmp[8356900](8356904 'cast' real(32)[91] call_tmp[8356864]))
      const-val call_tmp[8356914]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp"
      (8356916 'move' call_tmp[8356914](8356918 'cast' real(32)[91] call_tmp[8356871]))
      const-val call_tmp[8356921]:complex(64)[106] "dead after last mention" "expr temp" "maybe param" "temp"
      (8356923 'move' call_tmp[8356921](8356926 call _chpl_complex64[3079338] call_tmp[8356900] call_tmp[8356914]))
      const-val call_tmp[8356934]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp"
      (8356936 'move' call_tmp[8356934](8356939 call chpl_crealf[3079553] call_tmp[8356921]))
      (3078513 'noop')
      const-val call_tmp[8356951]:real(32)[91] "dead after last mention" "expr temp" "maybe param" "temp"
      (8356953 'move' call_tmp[8356951](8356956 call chpl_cimagf[3079711] call_tmp[8356921]))
      (3078527 'noop')
      const-val call_tmp[3078540]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[3079764]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3079770 'move' coerce_tmp[3079764](3079766 'cast' int(32)[66] 0))
      const-val coerce_tmp[3079772]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3079778 'move' coerce_tmp[3079772](3079774 'cast' int(32)[66] call_tmp[3078446]))
      val coerce_tmp[3079780]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3079784 'move' coerce_tmp[3079780](9215083 '.v' this[3078413] _channel_internal[1838935]))
      (3078542 'move' call_tmp[3078540](3078545 call qio_channel_write_float32[167036] coerce_tmp[3079764] coerce_tmp[3079772] coerce_tmp[3079780] call_tmp[8356934]))
      (7356949 '=' err[3078431] call_tmp[3078540])
      const-val call_tmp[7354685]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7354687 'move' call_tmp[7354685](7354690 call qio_err_iserr[12868] call_tmp[3078540]))
      const-val call_tmp[7354692]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7354694 'move' call_tmp[7354692](7354696 '==' call_tmp[7354685] 0))
      if call_tmp[7354692]
      {
        const-val call_tmp[3078582]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3079801]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079807 'move' coerce_tmp[3079801](3079803 'cast' int(32)[66] 0))
        const-val coerce_tmp[3079809]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079815 'move' coerce_tmp[3079809](3079811 'cast' int(32)[66] call_tmp[3078446]))
        val coerce_tmp[3079817]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079821 'move' coerce_tmp[3079817](9215090 '.v' this[3078413] _channel_internal[1838935]))
        (3078584 'move' call_tmp[3078582](3078587 call qio_channel_write_float32[167036] coerce_tmp[3079801] coerce_tmp[3079809] coerce_tmp[3079817] call_tmp[8356951]))
        (7356961 '=' err[3078431] call_tmp[3078582])
      }
    }
    {
      const-val coerce_tmp[3079831]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3079837 'move' coerce_tmp[3079831](3079833 'cast' int(32)[66] 16))
      const-val tmp[7521060]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7521062 'move' tmp[7521060](7521064 '<' coerce_tmp[3079831] 0))
      const-val call_tmp[7521067]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7521069 'move' call_tmp[7521067](7521071 'u!' tmp[7521060]))
      val tmp[7521073]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7521067]
      {
        const-val call_tmp[7521077]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521079 'move' call_tmp[7521077](7521081 'cast' uint(32)[81] coerce_tmp[3079831]))
        const-val call_tmp[7521084]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521086 'move' call_tmp[7521084](7521088 '==' width[3078417] call_tmp[7521077]))
        (7521091 'move' tmp[7521073] call_tmp[7521084])
      }
      {
        (7521095 'move' tmp[7521073] 0)
      }
      if tmp[7521073]
      {
        const-val call_tmp[8356591]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (8356593 'move' call_tmp[8356591](8356596 call chpl_creal[3078930] t[3078419]))
        const-val call_tmp[8356693]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (8356695 'move' call_tmp[8356693](8356698 call chpl_cimag[3079078] t[3078419]))
        const-val call_tmp[3078677]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3079877]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079883 'move' coerce_tmp[3079877](3079879 'cast' int(32)[66] 0))
        const-val coerce_tmp[3079885]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079891 'move' coerce_tmp[3079885](3079887 'cast' int(32)[66] call_tmp[3078446]))
        val coerce_tmp[3079893]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3079897 'move' coerce_tmp[3079893](9215099 '.v' this[3078413] _channel_internal[1838935]))
        (3078679 'move' call_tmp[3078677](3078682 call qio_channel_write_float64[167132] coerce_tmp[3079877] coerce_tmp[3079885] coerce_tmp[3079893] call_tmp[8356591]))
        (7356973 '=' err[3078431] call_tmp[3078677])
        const-val call_tmp[7354702]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
        (7354704 'move' call_tmp[7354702](7354707 call qio_err_iserr[12868] call_tmp[3078677]))
        const-val call_tmp[7354709]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7354711 'move' call_tmp[7354709](7354713 '==' call_tmp[7354702] 0))
        if call_tmp[7354709]
        {
          const-val call_tmp[3078719]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3079914]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079920 'move' coerce_tmp[3079914](3079916 'cast' int(32)[66] 0))
          const-val coerce_tmp[3079922]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079928 'move' coerce_tmp[3079922](3079924 'cast' int(32)[66] call_tmp[3078446]))
          val coerce_tmp[3079930]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3079934 'move' coerce_tmp[3079930](9215106 '.v' this[3078413] _channel_internal[1838935]))
          (3078721 'move' call_tmp[3078719](3078724 call qio_channel_write_float64[167132] coerce_tmp[3079914] coerce_tmp[3079922] coerce_tmp[3079930] call_tmp[8356693]))
          (7356985 '=' err[3078431] call_tmp[3078719])
        }
      }
      {
        const-val call_tmp[3078739]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        (3078741 'move' call_tmp[3078739](3078744 call qio_format_error_arg_mismatch[168158] i[3078421]))
        (7356997 '=' err[3078431] call_tmp[3078739])
      }
    }
    label _end__write_complex[3078762]
    (3078764 return err[3078431])
  }
  function fileWriter(false,defaultSerializer)[1838949]._writefOne[3035286](const  ref arg this[3035292]:fileWriter(false,defaultSerializer)[1838949], const  ref arg fmtStr[3035294]:string[244], const  ref arg arg[3035296]:real(64)[13], const in arg i[3035298]:int(64)[10], ref arg cur[3035302]:uint(64)[86], ref arg j[3035304]:int(64)[10], const in arg argType[3035308]:c_ptr(int(32))[3035159], const in arg argTypeLen[3035310]:int(64)[10], ref arg conv[3035312]:qio_conv_t[167955], ref arg gotConv[3035314]:bool[19], ref arg style[3035316]:iostyleInternal[164872], ref arg err[3035318]:errorCode[12828], const  ref arg origLocale[3035320]:locale[234], const in arg len[3035324]:uint(64)[86], ref arg error_out[5503164]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[7379182]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7379184 'move' call_tmp[7379182](7379186 '>=' i[3035298] argTypeLen[3035310]))
    if call_tmp[7379182]
    {
      (3035361 call halt[1673640] "Index " i[3035298] " is accessed on argType of length " argTypeLen[3035310])
    }
    (7393715 '=' gotConv[3035314] 0)
    const-val coerce_tmp[3037218]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3037222 'move' coerce_tmp[3037218](3037220 'deref' j[3035304]))
    const-val call_tmp[7498077]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498079 'move' call_tmp[7498077](7498081 '<=' coerce_tmp[3037218] i[3035298]))
    if call_tmp[7498077]
    {
      (3035394 call _format_reader[3037225] this[3035292] fmtStr[3035294] cur[3035302] len[3035324] err[3035318] conv[3035312] gotConv[3035314] style[3035316])
    }
    (3035404 call _conv_helper[200155] err[3035318] conv[3035312] gotConv[3035314] j[3035304] argType[3035308] argTypeLen[3035310])
    ref call_tmp[8354461]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (8354463 'move' call_tmp[8354461](8354465 'array_get' argType[3035308] i[3035298]))
    const-val call_tmp[3035419]:bool[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3039421]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3039425 'move' coerce_tmp[3039421](3039423 'deref' call_tmp[8354461]))
    const-val coerce_tmp[3039427]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3039431 'move' coerce_tmp[3039427](3039429 'deref' arg[3035296]))
    val error[5503169]:Error[85511] "error variable" "temp"
    (5503171 'move' error[5503169] nil[32])
    (3035421 'move' call_tmp[3035419](3035424 call _conv_sethandler[3038087] err[3035318] coerce_tmp[3039421] style[3035316] i[3035298] coerce_tmp[3039427] 0 error[5503169]))
    val errorExists[7299560]:bool[19] "temp"
    (7299565 'move' errorExists[7299560](7299562 '!=' error[5503169] nil[32]))
    if errorExists[7299560]
    {
      (5503175 '=' error_out[5503164] error[5503169])
      gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
    }
    if call_tmp[3035419]
    {
      (3035450 call _set_styleInternal[3033186] this[3035292] style[3035316])
      ref call_tmp[8354471]:int(32)[66] "dead after last mention" "maybe param" "temp"
      (8354473 'move' call_tmp[8354471](8354475 'array_get' argType[3035308] i[3035298]))
      const-val coerce_tmp[3042419]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3042423 'move' coerce_tmp[3042419](3042421 'deref' call_tmp[8354471]))
      const-val call_tmp[7347831]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7347833 'move' call_tmp[7347831](7347835 '==' coerce_tmp[3042419] QIO_CONV_ARG_TYPE_SIGNED[167968]))
      val tmp[3035482]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7347831]
      {
        (3035500 'move' tmp[3035482] 1)
      }
      {
        const-val coerce_tmp[3042429]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3042433 'move' coerce_tmp[3042429](3042431 'deref' call_tmp[8354471]))
        const-val call_tmp[7347841]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7347843 'move' call_tmp[7347841](7347845 '==' coerce_tmp[3042429] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
        (3035521 'move' tmp[3035482] call_tmp[7347841])
      }
      if tmp[3035482]
      {
        const-val coerce_tmp[3042439]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3042443 'move' coerce_tmp[3042439](9214730 '.v' style[3035316] precision[164822]))
        const-val coerce_tmp[3042445]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3042451 'move' coerce_tmp[3042445](3042447 'cast' int(32)[66] -1))
        const-val call_tmp[7355004]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7355006 'move' call_tmp[7355004](7355008 '!=' coerce_tmp[3042439] coerce_tmp[3042445]))
        if call_tmp[7355004]
        {
          (3035569 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
        }
        const-val call_tmp[3035572]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3042687]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3042691 'move' coerce_tmp[3042687](3042689 'deref' arg[3035296]))
        val error[5503184]:Error[85511] "error variable" "temp"
        (5503186 'move' error[5503184] nil[32])
        const-val ret[8355690]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
        const-val call_tmp[8355692]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8355694 'move' call_tmp[8355692](8355696 'cast' int(64)[10] coerce_tmp[3042687]))
        (9109738 '.=' ret[8355690] x0[3040014] call_tmp[8355692])
        (9109742 '.=' ret[8355690] x1[3040016] 1)
        (5584435 'move' call_tmp[3035572] ret[8355690])
        val errorExists[7299568]:bool[19] "temp"
        (7299573 'move' errorExists[7299568](7299570 '!=' error[5503184] nil[32]))
        if errorExists[7299568]
        {
          (5503190 '=' error_out[5503164] error[5503184])
          gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
        }
        val tmp_x0[9109250]:int(64)[10] "temp"
        val tmp_x1[9109252]:bool[19] "temp"
        (9109258 'move' tmp_x0[9109250](9109256 '.v' call_tmp[3035572] x0[3040014]))
        (9109263 'move' tmp_x1[9109252](9109261 '.v' call_tmp[3035572] x1[3040016]))
        const-val call_tmp[7351022]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7351024 'move' call_tmp[7351022](7351026 'u!' tmp_x1[9109252]))
        if call_tmp[7351022]
        {
          const-val call_tmp[3035630]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3035632 'move' call_tmp[3035630](3035635 call qio_format_error_arg_mismatch[168158] i[3035298]))
          (7356697 '=' err[3035318] call_tmp[3035630])
        }
        {
          ref call_tmp[8354481]:int(32)[66] "dead after last mention" "maybe param" "temp"
          (8354483 'move' call_tmp[8354481](8354485 'array_get' argType[3035308] i[3035298]))
          const-val coerce_tmp[3042755]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3042759 'move' coerce_tmp[3042755](3042757 'deref' call_tmp[8354481]))
          const-val call_tmp[7347851]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7347853 'move' call_tmp[7347851](7347855 '==' coerce_tmp[3042755] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
          if call_tmp[7347851]
          {
            const-val call_tmp[3035674]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3043116]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3043120 'move' coerce_tmp[3043116](9214738 '.v' style[3035316] max_width_bytes[164654]))
            (3035676 'move' call_tmp[3035674](3035682 call _write_signed[3042764] this[3035292] coerce_tmp[3043116] tmp_x0[9109250] i[3035298]))
            (7356703 '=' err[3035318] call_tmp[3035674])
          }
          {
            val error[5503198]:Error[85511] "error variable" "temp"
            (5503207 'move' error[5503198] nil[32])
            (3035698 call _writeOne[3043358] this[3035292] tmp_x0[9109250] origLocale[3035320] error[5503198])
            val errorExists[7299576]:bool[19] "temp"
            (7299581 'move' errorExists[7299576](7299578 '!=' error[5503198] nil[32]))
            if errorExists[7299576]
            {
              gotoErrorHandling handler[5503199] handler[5503199]
            }
            label handler[5503199]
            val errorExists[7299584]:bool[19] "temp"
            (7299589 'move' errorExists[7299584](7299586 '!=' error[5503198] nil[32]))
            if errorExists[7299584]
            {
              (5503214 '=' error_out[5503164] error[5503198])
              gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
            }
          }
        }
      }
      {
        const-val coerce_tmp[3050835]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3050839 'move' coerce_tmp[3050835](3050837 'deref' call_tmp[8354471]))
        const-val call_tmp[7347861]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7347863 'move' call_tmp[7347861](7347865 '==' coerce_tmp[3050835] QIO_CONV_ARG_TYPE_UNSIGNED[167978]))
        val tmp[3035729]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[7347861]
        {
          (3035747 'move' tmp[3035729] 1)
        }
        {
          const-val coerce_tmp[3050845]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3050849 'move' coerce_tmp[3050845](3050847 'deref' call_tmp[8354471]))
          const-val call_tmp[7347871]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7347873 'move' call_tmp[7347871](7347875 '==' coerce_tmp[3050845] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
          (3035768 'move' tmp[3035729] call_tmp[7347871])
        }
        if tmp[3035729]
        {
          const-val coerce_tmp[3050855]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3050859 'move' coerce_tmp[3050855](9214744 '.v' style[3035316] precision[164822]))
          const-val coerce_tmp[3050861]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3050867 'move' coerce_tmp[3050861](3050863 'cast' int(32)[66] -1))
          const-val call_tmp[7355014]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7355016 'move' call_tmp[7355014](7355018 '!=' coerce_tmp[3050855] coerce_tmp[3050861]))
          if call_tmp[7355014]
          {
            (3035816 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
          }
          const-val call_tmp[3035819]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3051111]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3051115 'move' coerce_tmp[3051111](3051113 'deref' arg[3035296]))
          val error[5503227]:Error[85511] "error variable" "temp"
          (5503229 'move' error[5503227] nil[32])
          const-val ret[8355867]:(uint(64),bool)[3051128] "dead after last mention" "RVV" "temp"
          const-val call_tmp[8355869]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (8355871 'move' call_tmp[8355869](8355873 'cast' uint(64)[86] coerce_tmp[3051111]))
          (9108759 '.=' ret[8355867] x0[3051124] call_tmp[8355869])
          (9108763 '.=' ret[8355867] x1[3051126] 1)
          (5584462 'move' call_tmp[3035819] ret[8355867])
          val errorExists[7299592]:bool[19] "temp"
          (7299597 'move' errorExists[7299592](7299594 '!=' error[5503227] nil[32]))
          if errorExists[7299592]
          {
            (5503233 '=' error_out[5503164] error[5503227])
            gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
          }
          val tmp_x0[9108697]:uint(64)[86] "temp"
          val tmp_x1[9108699]:bool[19] "temp"
          (9108705 'move' tmp_x0[9108697](9108703 '.v' call_tmp[3035819] x0[3051124]))
          (9108710 'move' tmp_x1[9108699](9108708 '.v' call_tmp[3035819] x1[3051126]))
          const-val call_tmp[7351031]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7351033 'move' call_tmp[7351031](7351035 'u!' tmp_x1[9108699]))
          if call_tmp[7351031]
          {
            const-val call_tmp[3035877]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3035879 'move' call_tmp[3035877](3035882 call qio_format_error_arg_mismatch[168158] i[3035298]))
            (7356757 '=' err[3035318] call_tmp[3035877])
          }
          {
            ref call_tmp[8354491]:int(32)[66] "dead after last mention" "maybe param" "temp"
            (8354493 'move' call_tmp[8354491](8354495 'array_get' argType[3035308] i[3035298]))
            const-val coerce_tmp[3051628]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3051632 'move' coerce_tmp[3051628](3051630 'deref' call_tmp[8354491]))
            const-val call_tmp[7347881]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7347883 'move' call_tmp[7347881](7347885 '==' coerce_tmp[3051628] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
            if call_tmp[7347881]
            {
              const-val call_tmp[3035921]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3051986]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3051990 'move' coerce_tmp[3051986](9214752 '.v' style[3035316] max_width_bytes[164654]))
              (3035923 'move' call_tmp[3035921](3035929 call _write_unsigned[3051637] this[3035292] coerce_tmp[3051986] tmp_x0[9108697] i[3035298]))
              (7356763 '=' err[3035318] call_tmp[3035921])
            }
            {
              val error[5503241]:Error[85511] "error variable" "temp"
              (5503250 'move' error[5503241] nil[32])
              (3035945 call _writeOne[3052255] this[3035292] tmp_x0[9108697] origLocale[3035320] error[5503241])
              val errorExists[7299600]:bool[19] "temp"
              (7299605 'move' errorExists[7299600](7299602 '!=' error[5503241] nil[32]))
              if errorExists[7299600]
              {
                gotoErrorHandling handler[5503242] handler[5503242]
              }
              label handler[5503242]
              val errorExists[7299608]:bool[19] "temp"
              (7299613 'move' errorExists[7299608](7299610 '!=' error[5503241] nil[32]))
              if errorExists[7299608]
              {
                (5503257 '=' error_out[5503164] error[5503241])
                gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
              }
            }
          }
        }
        {
          const-val coerce_tmp[3059522]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3059526 'move' coerce_tmp[3059522](3059524 'deref' call_tmp[8354471]))
          const-val call_tmp[7347891]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7347893 'move' call_tmp[7347891](7347895 '==' coerce_tmp[3059522] QIO_CONV_ARG_TYPE_REAL[167988]))
          val tmp[3035976]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[7347891]
          {
            (3035994 'move' tmp[3035976] 1)
          }
          {
            const-val coerce_tmp[3059532]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3059536 'move' coerce_tmp[3059532](3059534 'deref' call_tmp[8354471]))
            const-val call_tmp[7347901]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7347903 'move' call_tmp[7347901](7347905 '==' coerce_tmp[3059532] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
            (3036015 'move' tmp[3035976] call_tmp[7347901])
          }
          if tmp[3035976]
          {
            const-val call_tmp[3036030]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3059712]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3059716 'move' coerce_tmp[3059712](3059714 'deref' arg[3035296]))
            const-val ret_tmp[5584522]:(real(64),bool)[3059761] "temp"
            (9108660 '.=' ret_tmp[5584522] x0[3059757] coerce_tmp[3059712])
            (9108664 '.=' ret_tmp[5584522] x1[3059759] 1)
            (5584525 'move' call_tmp[3036030] ret_tmp[5584522])
            val tmp_x0[9108598]:real(64)[13] "temp"
            val tmp_x1[9108600]:bool[19] "temp"
            (9108606 'move' tmp_x0[9108598](9108604 '.v' call_tmp[3036030] x0[3059757]))
            (9108611 'move' tmp_x1[9108600](9108609 '.v' call_tmp[3036030] x1[3059759]))
            const-val call_tmp[7351040]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7351042 'move' call_tmp[7351040](7351044 'u!' tmp_x1[9108600]))
            if call_tmp[7351040]
            {
              const-val call_tmp[3036088]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3036090 'move' call_tmp[3036088](3036093 call qio_format_error_arg_mismatch[168158] i[3035298]))
              (7356817 '=' err[3035318] call_tmp[3036088])
            }
            {
              ref call_tmp[8354501]:int(32)[66] "dead after last mention" "maybe param" "temp"
              (8354503 'move' call_tmp[8354501](8354505 'array_get' argType[3035308] i[3035298]))
              const-val coerce_tmp[3060187]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3060191 'move' coerce_tmp[3060187](3060189 'deref' call_tmp[8354501]))
              const-val call_tmp[7347911]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7347913 'move' call_tmp[7347911](7347915 '==' coerce_tmp[3060187] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
              if call_tmp[7347911]
              {
                const-val call_tmp[3036132]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3060415]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3060419 'move' coerce_tmp[3060415](9214760 '.v' style[3035316] max_width_bytes[164654]))
                (3036134 'move' call_tmp[3036132](3036140 call _write_real[3060196] this[3035292] coerce_tmp[3060415] tmp_x0[9108598] i[3035298]))
                (7356823 '=' err[3035318] call_tmp[3036132])
              }
              {
                val error[5503269]:Error[85511] "error variable" "temp"
                (5503278 'move' error[5503269] nil[32])
                (3036156 call _writeOne[3060524] this[3035292] tmp_x0[9108598] origLocale[3035320] error[5503269])
                val errorExists[7299616]:bool[19] "temp"
                (7299621 'move' errorExists[7299616](7299618 '!=' error[5503269] nil[32]))
                if errorExists[7299616]
                {
                  gotoErrorHandling handler[5503270] handler[5503270]
                }
                label handler[5503270]
                val errorExists[7299624]:bool[19] "temp"
                (7299629 'move' errorExists[7299624](7299626 '!=' error[5503269] nil[32]))
                if errorExists[7299624]
                {
                  (5503285 '=' error_out[5503164] error[5503269])
                  gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                }
              }
            }
          }
          {
            const-val coerce_tmp[3067460]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3067464 'move' coerce_tmp[3067460](3067462 'deref' call_tmp[8354471]))
            const-val call_tmp[7347921]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7347923 'move' call_tmp[7347921](7347925 '==' coerce_tmp[3067460] QIO_CONV_ARG_TYPE_IMAG[167998]))
            val tmp[3036187]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[7347921]
            {
              (3036205 'move' tmp[3036187] 1)
            }
            {
              const-val coerce_tmp[3067470]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3067474 'move' coerce_tmp[3067470](3067472 'deref' call_tmp[8354471]))
              const-val call_tmp[7347931]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7347933 'move' call_tmp[7347931](7347935 '==' coerce_tmp[3067470] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
              (3036226 'move' tmp[3036187] call_tmp[7347931])
            }
            if tmp[3036187]
            {
              const-val call_tmp[3036241]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3067830]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3067834 'move' coerce_tmp[3067830](3067832 'deref' arg[3035296]))
              val error[5503298]:Error[85511] "error variable" "temp"
              (5503300 'move' error[5503298] nil[32])
              const-val ret[8356187]:(imag(64),bool)[3067847] "dead after last mention" "RVV" "temp"
              const-val call_tmp[8356189]:imag(64)[101] "dead after last mention" "expr temp" "maybe param" "temp"
              (8356191 'move' call_tmp[8356189](8356193 'cast' imag(64)[101] coerce_tmp[3067830]))
              (9108561 '.=' ret[8356187] x0[3067843] call_tmp[8356189])
              (9108565 '.=' ret[8356187] x1[3067845] 1)
              (5584588 'move' call_tmp[3036241] ret[8356187])
              val errorExists[7299632]:bool[19] "temp"
              (7299637 'move' errorExists[7299632](7299634 '!=' error[5503298] nil[32]))
              if errorExists[7299632]
              {
                (5503304 '=' error_out[5503164] error[5503298])
                gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
              }
              val tmp_x0[9108499]:imag(64)[101] "temp"
              val tmp_x1[9108501]:bool[19] "temp"
              (9108507 'move' tmp_x0[9108499](9108505 '.v' call_tmp[3036241] x0[3067843]))
              (9108512 'move' tmp_x1[9108501](9108510 '.v' call_tmp[3036241] x1[3067845]))
              const-val call_tmp[7351049]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7351051 'move' call_tmp[7351049](7351053 'u!' tmp_x1[9108501]))
              if call_tmp[7351049]
              {
                const-val call_tmp[3036299]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3036301 'move' call_tmp[3036299](3036304 call qio_format_error_arg_mismatch[168158] i[3035298]))
                (7356877 '=' err[3035318] call_tmp[3036299])
              }
              {
                ref call_tmp[8354511]:int(32)[66] "dead after last mention" "maybe param" "temp"
                (8354513 'move' call_tmp[8354511](8354515 'array_get' argType[3035308] i[3035298]))
                const-val coerce_tmp[3068396]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3068400 'move' coerce_tmp[3068396](3068398 'deref' call_tmp[8354511]))
                const-val call_tmp[7347941]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7347943 'move' call_tmp[7347941](7347945 '==' coerce_tmp[3068396] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                if call_tmp[7347941]
                {
                  const-val call_tmp[8356220]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (8356222 'move' call_tmp[8356220](8356224 'cast' real(64)[13] tmp_x0[9108499]))
                  const-val call_tmp[3036351]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3068435]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3068439 'move' coerce_tmp[3068435](9214768 '.v' style[3035316] max_width_bytes[164654]))
                  (3036353 'move' call_tmp[3036351](3036359 call _write_real[3060196] this[3035292] coerce_tmp[3068435] call_tmp[8356220] i[3035298]))
                  (7356883 '=' err[3035318] call_tmp[3036351])
                }
                {
                  val error[5503312]:Error[85511] "error variable" "temp"
                  (5503321 'move' error[5503312] nil[32])
                  (3036375 call _writeOne[3068449] this[3035292] tmp_x0[9108499] origLocale[3035320] error[5503312])
                  val errorExists[7299640]:bool[19] "temp"
                  (7299645 'move' errorExists[7299640](7299642 '!=' error[5503312] nil[32]))
                  if errorExists[7299640]
                  {
                    gotoErrorHandling handler[5503313] handler[5503313]
                  }
                  label handler[5503313]
                  val errorExists[7299648]:bool[19] "temp"
                  (7299653 'move' errorExists[7299648](7299650 '!=' error[5503312] nil[32]))
                  if errorExists[7299648]
                  {
                    (5503328 '=' error_out[5503164] error[5503312])
                    gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                  }
                }
              }
            }
            {
              const-val coerce_tmp[3077192]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3077196 'move' coerce_tmp[3077192](3077194 'deref' call_tmp[8354471]))
              const-val call_tmp[7347951]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7347953 'move' call_tmp[7347951](7347955 '==' coerce_tmp[3077192] QIO_CONV_ARG_TYPE_COMPLEX[168008]))
              val tmp[3036406]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[7347951]
              {
                (3036424 'move' tmp[3036406] 1)
              }
              {
                const-val coerce_tmp[3077202]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3077206 'move' coerce_tmp[3077202](3077204 'deref' call_tmp[8354471]))
                const-val call_tmp[7347961]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7347963 'move' call_tmp[7347961](7347965 '==' coerce_tmp[3077202] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                (3036445 'move' tmp[3036406] call_tmp[7347961])
              }
              if tmp[3036406]
              {
                const-val call_tmp[3036460]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[3077570]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3077574 'move' coerce_tmp[3077570](3077572 'deref' arg[3035296]))
                val error[5503341]:Error[85511] "error variable" "temp"
                (5503343 'move' error[5503341] nil[32])
                const-val ret[8356502]:(complex(128),bool)[3077587] "dead after last mention" "RVV" "temp"
                const-val call_tmp[8356519]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (8356528 'move' call_tmp[8356519](8356530 'cast' real(64)[13] 0))
                const-val call_tmp[8356533]:complex(128)[111] "dead after last mention" "expr temp" "maybe param" "temp"
                (8356542 'move' call_tmp[8356533](8356545 call _chpl_complex128[3077850] coerce_tmp[3077570] call_tmp[8356519]))
                (9108462 '.=' ret[8356502] x0[3077583] call_tmp[8356533])
                (9108466 '.=' ret[8356502] x1[3077585] 1)
                (5584651 'move' call_tmp[3036460] ret[8356502])
                val errorExists[7299656]:bool[19] "temp"
                (7299661 'move' errorExists[7299656](7299658 '!=' error[5503341] nil[32]))
                if errorExists[7299656]
                {
                  (5503347 '=' error_out[5503164] error[5503341])
                  gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                }
                val tmp_x0[9108400]:complex(128)[111] "temp"
                val tmp_x1[9108402]:bool[19] "temp"
                (9108408 'move' tmp_x0[9108400](9108406 '.v' call_tmp[3036460] x0[3077583]))
                (9108413 'move' tmp_x1[9108402](9108411 '.v' call_tmp[3036460] x1[3077585]))
                const-val call_tmp[7351058]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7351060 'move' call_tmp[7351058](7351062 'u!' tmp_x1[9108402]))
                if call_tmp[7351058]
                {
                  const-val call_tmp[3036518]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3036520 'move' call_tmp[3036518](3036523 call qio_format_error_arg_mismatch[168158] i[3035298]))
                  (7356937 '=' err[3035318] call_tmp[3036518])
                }
                {
                  ref call_tmp[8354521]:int(32)[66] "dead after last mention" "maybe param" "temp"
                  (8354523 'move' call_tmp[8354521](8354525 'array_get' argType[3035308] i[3035298]))
                  const-val coerce_tmp[3078398]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3078402 'move' coerce_tmp[3078398](3078400 'deref' call_tmp[8354521]))
                  const-val call_tmp[7347971]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7347973 'move' call_tmp[7347971](7347975 '==' coerce_tmp[3078398] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                  if call_tmp[7347971]
                  {
                    const-val call_tmp[3036562]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3078766]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3078770 'move' coerce_tmp[3078766](9214776 '.v' style[3035316] max_width_bytes[164654]))
                    (3036564 'move' call_tmp[3036562](3036570 call _write_complex[3078407] this[3035292] coerce_tmp[3078766] tmp_x0[9108400] i[3035298]))
                    (7357003 '=' err[3035318] call_tmp[3036562])
                  }
                  {
                    val error[5503355]:Error[85511] "error variable" "temp"
                    (5503364 'move' error[5503355] nil[32])
                    (3036586 call _writeOne[3079967] this[3035292] tmp_x0[9108400] origLocale[3035320] error[5503355])
                    val errorExists[7299664]:bool[19] "temp"
                    (7299669 'move' errorExists[7299664](7299666 '!=' error[5503355] nil[32]))
                    if errorExists[7299664]
                    {
                      gotoErrorHandling handler[5503356] handler[5503356]
                    }
                    label handler[5503356]
                    val errorExists[7299672]:bool[19] "temp"
                    (7299677 'move' errorExists[7299672](7299674 '!=' error[5503355] nil[32]))
                    if errorExists[7299672]
                    {
                      (5503371 '=' error_out[5503164] error[5503355])
                      gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                    }
                  }
                }
              }
              {
                const-val coerce_tmp[3088725]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3088729 'move' coerce_tmp[3088725](3088727 'deref' call_tmp[8354471]))
                const-val call_tmp[7347981]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7347983 'move' call_tmp[7347981](7347985 '==' coerce_tmp[3088725] QIO_CONV_ARG_TYPE_NUMERIC[167963]))
                if call_tmp[7347981]
                {
                  const-val call_tmp[3036613]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp"
                  const-val coerce_tmp[3088905]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3088909 'move' coerce_tmp[3088905](3088907 'deref' arg[3035296]))
                  const-val ret_tmp[5584735]:(real(64),bool)[3059761] "temp"
                  (9108674 '.=' ret_tmp[5584735] x0[3059757] coerce_tmp[3088905])
                  (9108678 '.=' ret_tmp[5584735] x1[3059759] 1)
                  (5584738 'move' call_tmp[3036613] ret_tmp[5584735])
                  val tmp_x0[9108616]:real(64)[13] "temp"
                  val tmp_x1[9108618]:bool[19] "temp"
                  (9108624 'move' tmp_x0[9108616](9108622 '.v' call_tmp[3036613] x0[3059757]))
                  (9108629 'move' tmp_x1[9108618](9108627 '.v' call_tmp[3036613] x1[3059759]))
                  const-val call_tmp[7351067]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7351069 'move' call_tmp[7351067](7351071 'u!' tmp_x1[9108618]))
                  if call_tmp[7351067]
                  {
                    const-val call_tmp[3036671]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3036673 'move' call_tmp[3036671](3036676 call qio_format_error_arg_mismatch[168158] i[3035298]))
                    (7357129 '=' err[3035318] call_tmp[3036671])
                  }
                  {
                    val error[5503383]:Error[85511] "error variable" "temp"
                    (5503392 'move' error[5503383] nil[32])
                    (3036688 call _writeOne[3060524] this[3035292] tmp_x0[9108616] origLocale[3035320] error[5503383])
                    val errorExists[7299680]:bool[19] "temp"
                    (7299685 'move' errorExists[7299680](7299682 '!=' error[5503383] nil[32]))
                    if errorExists[7299680]
                    {
                      gotoErrorHandling handler[5503384] handler[5503384]
                    }
                    label handler[5503384]
                    val errorExists[7299688]:bool[19] "temp"
                    (7299693 'move' errorExists[7299688](7299690 '!=' error[5503383] nil[32]))
                    if errorExists[7299688]
                    {
                      (5503399 '=' error_out[5503164] error[5503383])
                      gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                    }
                  }
                }
                {
                  const-val coerce_tmp[3088959]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3088963 'move' coerce_tmp[3088959](3088961 'deref' call_tmp[8354471]))
                  const-val call_tmp[7347991]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7347993 'move' call_tmp[7347991](7347995 '==' coerce_tmp[3088959] QIO_CONV_ARG_TYPE_CHAR[168018]))
                  if call_tmp[7347991]
                  {
                    const-val call_tmp[3036714]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5584360]:(int(32),bool)[3040996] "temp"
                    (9109096 '.=' ret_tmp[5584360] x0[3040992] 0)
                    (9109100 '.=' ret_tmp[5584360] x1[3040994] 0)
                    (5584363 'move' call_tmp[3036714] ret_tmp[5584360])
                    val tmp_x0[9108804]:int(32)[66] "temp"
                    val tmp_x1[9108806]:bool[19] "temp"
                    (9108812 'move' tmp_x0[9108804](9108810 '.v' call_tmp[3036714] x0[3040992]))
                    (9108817 'move' tmp_x1[9108806](9108815 '.v' call_tmp[3036714] x1[3040994]))
                    const-val call_tmp[7351076]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7351078 'move' call_tmp[7351076](7351080 'u!' tmp_x1[9108806]))
                    if call_tmp[7351076]
                    {
                      const-val call_tmp[3036772]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3036774 'move' call_tmp[3036772](3036777 call qio_format_error_arg_mismatch[168158] i[3035298]))
                      (7357135 '=' err[3035318] call_tmp[3036772])
                    }
                    {
                      val error[5503411]:Error[85511] "error variable" "temp"
                      (5503420 'move' error[5503411] nil[32])
                      const-val call_tmp[3036785]:_internalIoChar[176999] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                      const-val initTemp[3089019]:_internalIoChar[176999] "dead after last mention" "temp"
                      (3089022 call init[1213162] initTemp[3089019] tmp_x0[9108804])
                      (3036787 'move' call_tmp[3036785] initTemp[3089019])
                      (3036796 call _writeOne[3089040] this[3035292] call_tmp[3036785] origLocale[3035320] error[5503411])
                      val errorExists[7299696]:bool[19] "temp"
                      (7299701 'move' errorExists[7299696](7299698 '!=' error[5503411] nil[32]))
                      if errorExists[7299696]
                      {
                        gotoErrorHandling handler[5503412] handler[5503412]
                      }
                      label handler[5503412]
                      val errorExists[7299704]:bool[19] "temp"
                      (7299709 'move' errorExists[7299704](7299706 '!=' error[5503411] nil[32]))
                      if errorExists[7299704]
                      {
                        (5503427 '=' error_out[5503164] error[5503411])
                        gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                      }
                    }
                  }
                  {
                    const-val coerce_tmp[3091833]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3091837 'move' coerce_tmp[3091833](3091835 'deref' call_tmp[8354471]))
                    const-val call_tmp[7348001]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7348003 'move' call_tmp[7348001](7348005 '==' coerce_tmp[3091833] QIO_CONV_ARG_TYPE_BINARY_STRING[168028]))
                    if call_tmp[7348001]
                    {
                      const-val call_tmp[3036822]:(bytes,bool)[3092705] "dead after last mention" "maybe param" "temp"
                      const-val ret_tmp[5584762]:(bytes,bool)[3092705] "temp"
                      val inlineImm[8356998]:bytes[232] "temp"
                      (8357000 'move' inlineImm[8356998] b"")
                      ref i__e0_x[8357003]:bytes[232] "temp"
                      (8357005 'move' i__e0_x[8357003](8357007 'set reference' inlineImm[8356998]))
                      val ret[8357033]:bytes[232] "dead after last mention" "RVV" "temp"
                      const-val tmp[8357035]:bytes[232] "dead after last mention" "temp"
                      (8357038 call init=[33890] tmp[8357035] i__e0_x[8357003])
                      (8357041 'move' ret[8357033] tmp[8357035])
                      (8357055 'noop')
                      (9011370 '.=' ret_tmp[5584762] x0[3092701] ret[8357033])
                      (9011374 '.=' ret_tmp[5584762] x1[3092703] 0)
                      (5584765 'move' call_tmp[3036822] ret_tmp[5584762])
                      val tmp_x0[9011282]:bytes[232] "temp"
                      val tmp_x1[9011284]:bool[19] "temp"
                      (9011290 'move' tmp_x0[9011282](9011288 '.v' call_tmp[3036822] x0[3092701]))
                      (9011295 'move' tmp_x1[9011284](9011293 '.v' call_tmp[3036822] x1[3092703]))
                      const-ref call_tmp[3036839]:bytes[232] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                      (3036841 'move' call_tmp[3036839](9011297 'set reference' tmp_x0[9011282]))
                      const-val t[3036846]:bytes[232] "dead at end of block" "insert auto destroy"
                      (3036848 call init=[33890] t[3036846] call_tmp[3036839])
                      const-val call_tmp[7351085]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7351087 'move' call_tmp[7351085](7351089 'u!' tmp_x1[9011284]))
                      if call_tmp[7351085]
                      {
                        const-val call_tmp[3036880]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3036882 'move' call_tmp[3036880](3036885 call qio_format_error_arg_mismatch[168158] i[3035298]))
                        (7357141 '=' err[3035318] call_tmp[3036880])
                      }
                      {
                        val error[5503439]:Error[85511] "error variable" "temp"
                        (5503448 'move' error[5503439] nil[32])
                        (3036897 call _writeOne[3093219] this[3035292] t[3036846] origLocale[3035320] error[5503439])
                        val errorExists[7299712]:bool[19] "temp"
                        (7299717 'move' errorExists[7299712](7299714 '!=' error[5503439] nil[32]))
                        if errorExists[7299712]
                        {
                          gotoErrorHandling handler[5503440] handler[5503440]
                        }
                        label handler[5503440]
                        val errorExists[7299720]:bool[19] "temp"
                        (7299725 'move' errorExists[7299720](7299722 '!=' error[5503439] nil[32]))
                        if errorExists[7299720]
                        {
                          (5503455 '=' error_out[5503164] error[5503439])
                          ref i_x[7610085]:bytes[232] "temp"
                          (7610089 'move' i_x[7610085](7610087 'set reference' t[3036846]))
                          (7610093 call deinit[33658] i_x[7610085])
                          ref _field_destructor_tmp_[8619563]:bytes[232] "temp"
                          (8619565 'move' _field_destructor_tmp_[8619563](9011301 'set reference' tmp_x0[9011282]))
                          (8619571 call deinit[33658] _field_destructor_tmp_[8619563])
                          gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                        }
                      }
                      ref i_x[7610097]:bytes[232] "temp"
                      (7610101 'move' i_x[7610097](7610099 'set reference' t[3036846]))
                      (7610105 call deinit[33658] i_x[7610097])
                      ref _field_destructor_tmp_[8619582]:bytes[232] "temp"
                      (8619584 'move' _field_destructor_tmp_[8619582](9011303 'set reference' tmp_x0[9011282]))
                      (8619590 call deinit[33658] _field_destructor_tmp_[8619582])
                    }
                    {
                      const-val coerce_tmp[3102645]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3102649 'move' coerce_tmp[3102645](3102647 'deref' call_tmp[8354471]))
                      const-val call_tmp[7348011]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7348013 'move' call_tmp[7348011](7348015 '==' coerce_tmp[3102645] QIO_CONV_ARG_TYPE_STRING[168023]))
                      if call_tmp[7348011]
                      {
                        const-val call_tmp[3036923]:(string,bool)[3103815] "dead after last mention" "maybe param" "temp"
                        const-val coerce_tmp[3102925]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3102929 'move' coerce_tmp[3102925](3102927 'deref' arg[3035296]))
                        const-val ret[8357554]:(string,bool)[3103815] "dead after last mention" "RVV" "temp"
                        const-val call_tmp[8357556]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val call_tmp[8357558]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[8357560]:string[244] "temp"
                        (8357563 call _real_cast_helper[3103452] coerce_tmp[3102925] ret_tmp[8357560])
                        (8357566 'move' call_tmp[8357558] ret_tmp[8357560])
                        (8357569 'move' call_tmp[8357556] call_tmp[8357558])
                        ref i__e0_x[8357572]:string[244] "temp"
                        (8357574 'move' i__e0_x[8357572](8357576 'set reference' call_tmp[8357556]))
                        val ret[8357602]:string[244] "dead after last mention" "RVV" "temp"
                        const-val tmp[8357604]:string[244] "dead after last mention" "temp"
                        (8357607 call init=[21330] tmp[8357604] i__e0_x[8357572])
                        (8357610 'move' ret[8357602] tmp[8357604])
                        (8357624 'noop')
                        (9011553 '.=' ret[8357554] x0[3103811] ret[8357602])
                        (9011557 '.=' ret[8357554] x1[3103813] 1)
                        ref i_x[8357632]:string[244] "temp"
                        (8357634 'move' i_x[8357632](8357636 'set reference' call_tmp[8357556]))
                        (8357639 call deinit[21354] i_x[8357632])
                        (5584828 'move' call_tmp[3036923] ret[8357554])
                        val tmp_x0[9011465]:string[244] "temp"
                        val tmp_x1[9011467]:bool[19] "temp"
                        (9011473 'move' tmp_x0[9011465](9011471 '.v' call_tmp[3036923] x0[3103811]))
                        (9011478 'move' tmp_x1[9011467](9011476 '.v' call_tmp[3036923] x1[3103813]))
                        const-ref call_tmp[3036940]:string[244] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                        (3036942 'move' call_tmp[3036940](9011480 'set reference' tmp_x0[9011465]))
                        const-val t[3036947]:string[244] "dead at end of block" "insert auto destroy"
                        (3036949 call init=[21330] t[3036947] call_tmp[3036940])
                        const-val call_tmp[7351094]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7351096 'move' call_tmp[7351094](7351098 'u!' tmp_x1[9011467]))
                        if call_tmp[7351094]
                        {
                          const-val call_tmp[3036981]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3036983 'move' call_tmp[3036981](3036986 call qio_format_error_arg_mismatch[168158] i[3035298]))
                          (7357195 '=' err[3035318] call_tmp[3036981])
                        }
                        {
                          val error[5503467]:Error[85511] "error variable" "temp"
                          (5503476 'move' error[5503467] nil[32])
                          (3036998 call _writeOne[1845361] this[3035292] t[3036947] origLocale[3035320] error[5503467])
                          val errorExists[7299728]:bool[19] "temp"
                          (7299733 'move' errorExists[7299728](7299730 '!=' error[5503467] nil[32]))
                          if errorExists[7299728]
                          {
                            gotoErrorHandling handler[5503468] handler[5503468]
                          }
                          label handler[5503468]
                          val errorExists[7299736]:bool[19] "temp"
                          (7299741 'move' errorExists[7299736](7299738 '!=' error[5503467] nil[32]))
                          if errorExists[7299736]
                          {
                            (5503483 '=' error_out[5503164] error[5503467])
                            ref i_x[7341022]:string[244] "temp"
                            (7341026 'move' i_x[7341022](7341024 'set reference' t[3036947]))
                            (7341030 call deinit[21354] i_x[7341022])
                            ref _field_destructor_tmp_[8619677]:string[244] "temp"
                            (8619679 'move' _field_destructor_tmp_[8619677](9011484 'set reference' tmp_x0[9011465]))
                            (8619685 call deinit[21354] _field_destructor_tmp_[8619677])
                            gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                          }
                        }
                        ref i_x[7341034]:string[244] "temp"
                        (7341038 'move' i_x[7341034](7341036 'set reference' t[3036947]))
                        (7341042 call deinit[21354] i_x[7341034])
                        ref _field_destructor_tmp_[8619696]:string[244] "temp"
                        (8619698 'move' _field_destructor_tmp_[8619696](9011486 'set reference' tmp_x0[9011465]))
                        (8619704 call deinit[21354] _field_destructor_tmp_[8619696])
                      }
                      {
                        const-val coerce_tmp[3104330]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3104334 'move' coerce_tmp[3104330](3104332 'deref' call_tmp[8354471]))
                        const-val call_tmp[7348021]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7348023 'move' call_tmp[7348021](7348025 '==' coerce_tmp[3104330] QIO_CONV_ARG_TYPE_REGEX[168038]))
                        if call_tmp[7348021]
                        {
                          const-val call_tmp[3037024]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3037026 'move' call_tmp[3037024](3037029 call qio_format_error_write_regex[168174]))
                          (7357201 '=' err[3035318] call_tmp[3037024])
                        }
                        {
                          const-val coerce_tmp[3104345]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3104349 'move' coerce_tmp[3104345](3104347 'deref' call_tmp[8354471]))
                          const-val call_tmp[7348031]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7348033 'move' call_tmp[7348031](7348035 '==' coerce_tmp[3104345] QIO_CONV_ARG_TYPE_SERDE[168033]))
                          if call_tmp[7348031]
                          {
                            const-val coerce_tmp[3104752]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3104756 'move' coerce_tmp[3104752](3104754 'deref' arg[3035296]))
                            val error[5503496]:Error[85511] "error variable" "temp"
                            (5503498 'move' error[5503496] nil[32])
                            (3037117 call _serializeOne[3104362] this[3035292] coerce_tmp[3104752] origLocale[3035320] error[5503496])
                            val errorExists[7299744]:bool[19] "temp"
                            (7299749 'move' errorExists[7299744](7299746 '!=' error[5503496] nil[32]))
                            if errorExists[7299744]
                            {
                              (5503502 '=' error_out[5503164] error[5503496])
                              gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                            }
                          }
                          {
                            const-val call_tmp[3037133]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5546545]:string[244] "temp"
                            (3037138 call :[1496816] i[3035298] ret_tmp[5546545])
                            (5546548 'move' call_tmp[3037133] ret_tmp[5546545])
                            const-val call_tmp[3037141]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540100]:string[244] "temp"
                            (3037146 call +[28065] "illegal argument 'args(" call_tmp[3037133] ret_tmp[5540100])
                            (5540103 'move' call_tmp[3037141] ret_tmp[5540100])
                            const-val call_tmp[3037149]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540106]:string[244] "temp"
                            (3037154 call +[28065] call_tmp[3037141] ")': writef internal error " ret_tmp[5540106])
                            (5540109 'move' call_tmp[3037149] ret_tmp[5540106])
                            ref call_tmp[8354531]:int(32)[66] "dead after last mention" "maybe param" "temp"
                            (8354533 'move' call_tmp[8354531](8354535 'array_get' argType[3035308] i[3035298]))
                            const-val call_tmp[3037164]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val coerce_tmp[3105436]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3105440 'move' coerce_tmp[3105436](3105438 'deref' call_tmp[8354531]))
                            const-val ret_tmp[5555472]:string[244] "temp"
                            (3037169 call :[1816123] coerce_tmp[3105436] ret_tmp[5555472])
                            (5555475 'move' call_tmp[3037164] ret_tmp[5555472])
                            const-val call_tmp[3037172]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540112]:string[244] "temp"
                            (3037177 call +[28065] call_tmp[3037149] call_tmp[3037164] ret_tmp[5540112])
                            (5540115 'move' call_tmp[3037172] ret_tmp[5540112])
                            const-val call_tmp[3037180]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
                            val new_temp[3105467]:IllegalArgumentError[85616] "dead after last mention" "temp"
                            (3105469 'move' new_temp[3105467](3105454 call _new[1475209] call_tmp[3037172]))
                            const-val initTemp[3105476]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
                            (3105479 call init[1475364] initTemp[3105476] new_temp[3105467])
                            (3037182 'move' call_tmp[3037180] initTemp[3105476])
                            val call_tmp[3037189]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3105493]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                            const-val ret_tmp[5547103]:owned Error[1498203] "temp"
                            ref i_x[7644533]:owned IllegalArgumentError[1475882] "temp"
                            (7644537 'move' i_x[7644533](7644535 'set reference' call_tmp[3037180]))
                            ref i__retArg[7644539]:owned Error[1498203] "temp"
                            (7644543 'move' i__retArg[7644539](7644541 'set reference' ret_tmp[5547103]))
                            val _formal_tmp_x[7644546]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
                            (7644548 'move' _formal_tmp_x[7644546] i_x[7644533])
                            const-val ret[7644551]:owned Error[1498203] "dead after last mention" "RVV" "temp"
                            ref i_this[7644553]:owned IllegalArgumentError[1475882] "temp"
                            (7644555 'move' i_this[7644553](7644557 'set reference' _formal_tmp_x[7644546]))
                            val coerce_tmp[7644559]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (7644561 'move' coerce_tmp[7644559](7644563 '.v' i_this[7644553] chpl_p[1475877]))
                            val call_tmp[7644566]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                            (7644568 'move' call_tmp[7644566](7644570 'cast' Error[85511] coerce_tmp[7644559]))
                            ref i_this[7644578]:owned IllegalArgumentError[1475882] "temp"
                            (7644580 'move' i_this[7644578](7644582 'set reference' _formal_tmp_x[7644546]))
                            val tmp[7644584]:IllegalArgumentError[85616] "temp"
                            (7644586 'move' tmp[7644584](7644588 'cast' IllegalArgumentError[85616] nil[32]))
                            (7644591 '.=' i_this[7644578] chpl_p[1475877] tmp[7644584])
                            val coerce_tmp[7644595]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (7644597 'move' coerce_tmp[7644595](7644599 'cast' RootClass[236] call_tmp[7644566]))
                            const-val call_tmp[7644602]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (7644604 'move' call_tmp[7644602](7644606 '==' coerce_tmp[7644595] nil[32]))
                            if call_tmp[7644602]
                            {
                              (7644612 call nilCheckHalt[392] "argument to ! is nil")
                            }
                            const-val call_tmp[7644615]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
                            const-val initTemp[7644617]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
                            (7644620 call init[1499358] initTemp[7644617] call_tmp[7644566])
                            (7644623 'move' call_tmp[7644615] initTemp[7644617])
                            (7644626 'move' ret[7644551] call_tmp[7644615])
                            (7644630 call chpl__autoDestroy[3929468] _formal_tmp_x[7644546])
                            (7644634 '=' i__retArg[7644539] ret[7644551])
                            (5547106 'move' coerce_tmp[3105493] ret_tmp[5547103])
                            const-val _formal_tmp_in_err[3105712]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                            (3105717 'move' _formal_tmp_in_err[3105712] coerce_tmp[3105493])
                            (3037191 'move' call_tmp[3037189](3037194 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3105712]))
                            (5503519 '=' error_out[5503164] call_tmp[3037189])
                            ref i_x[7341046]:string[244] "temp"
                            (7341050 'move' i_x[7341046](7341048 'set reference' call_tmp[3037172]))
                            (7341054 call deinit[21354] i_x[7341046])
                            ref i_x[7341058]:string[244] "temp"
                            (7341062 'move' i_x[7341058](7341060 'set reference' call_tmp[3037164]))
                            (7341066 call deinit[21354] i_x[7341058])
                            ref i_x[7341070]:string[244] "temp"
                            (7341074 'move' i_x[7341070](7341072 'set reference' call_tmp[3037149]))
                            (7341078 call deinit[21354] i_x[7341070])
                            ref i_x[7341082]:string[244] "temp"
                            (7341086 'move' i_x[7341082](7341084 'set reference' call_tmp[3037141]))
                            (7341090 call deinit[21354] i_x[7341082])
                            ref i_x[7341094]:string[244] "temp"
                            (7341098 'move' i_x[7341094](7341096 'set reference' call_tmp[3037133]))
                            (7341102 call deinit[21354] i_x[7341094])
                            gotoErrorHandlingReturn _end_writefOne[5503166] _end_writefOne[5503166]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_writefOne[5503166]
    (3037210 return _void[46])
  }
  function fileWriter(false,defaultSerializer)[1838949]._writefOne[3318992](const  ref arg this[3318998]:fileWriter(false,defaultSerializer)[1838949], const  ref arg fmtStr[3319000]:string[244], const  ref arg arg[3319002]:string[244], const in arg i[3319004]:int(64)[10], ref arg cur[3319008]:uint(64)[86], ref arg j[3319010]:int(64)[10], const in arg argType[3319014]:c_ptr(int(32))[3035159], const in arg argTypeLen[3319016]:int(64)[10], ref arg conv[3319018]:qio_conv_t[167955], ref arg gotConv[3319020]:bool[19], ref arg style[3319022]:iostyleInternal[164872], ref arg err[3319024]:errorCode[12828], const  ref arg origLocale[3319026]:locale[234], const in arg len[3319030]:uint(64)[86], ref arg error_out[5508680]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[7379262]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7379264 'move' call_tmp[7379262](7379266 '>=' i[3319004] argTypeLen[3319016]))
    if call_tmp[7379262]
    {
      (3319067 call halt[1673640] "Index " i[3319004] " is accessed on argType of length " argTypeLen[3319016])
    }
    (7394037 '=' gotConv[3319020] 0)
    const-val coerce_tmp[3320924]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3320928 'move' coerce_tmp[3320924](3320926 'deref' j[3319010]))
    const-val call_tmp[7498087]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498089 'move' call_tmp[7498087](7498091 '<=' coerce_tmp[3320924] i[3319004]))
    if call_tmp[7498087]
    {
      (3319100 call _format_reader[3037225] this[3318998] fmtStr[3319000] cur[3319008] len[3319030] err[3319024] conv[3319018] gotConv[3319020] style[3319022])
    }
    (3319110 call _conv_helper[200155] err[3319024] conv[3319018] gotConv[3319020] j[3319010] argType[3319014] argTypeLen[3319016])
    ref call_tmp[8354541]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (8354543 'move' call_tmp[8354541](8354545 'array_get' argType[3319014] i[3319004]))
    const-val call_tmp[3319125]:bool[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3322270]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3322274 'move' coerce_tmp[3322270](3322272 'deref' call_tmp[8354541]))
    val error[5508685]:Error[85511] "error variable" "temp"
    (5508687 'move' error[5508685] nil[32])
    (3319127 'move' call_tmp[3319125](3319130 call _conv_sethandler[3320936] err[3319024] coerce_tmp[3322270] style[3319022] i[3319004] arg[3319002] 0 error[5508685]))
    val errorExists[7302136]:bool[19] "temp"
    (7302141 'move' errorExists[7302136](7302138 '!=' error[5508685] nil[32]))
    if errorExists[7302136]
    {
      (5508691 '=' error_out[5508680] error[5508685])
      gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
    }
    if call_tmp[3319125]
    {
      (3319156 call _set_styleInternal[3033186] this[3318998] style[3319022])
      ref call_tmp[8354551]:int(32)[66] "dead after last mention" "maybe param" "temp"
      (8354553 'move' call_tmp[8354551](8354555 'array_get' argType[3319014] i[3319004]))
      const-val coerce_tmp[3323390]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3323394 'move' coerce_tmp[3323390](3323392 'deref' call_tmp[8354551]))
      const-val call_tmp[7348161]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7348163 'move' call_tmp[7348161](7348165 '==' coerce_tmp[3323390] QIO_CONV_ARG_TYPE_SIGNED[167968]))
      val tmp[3319188]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7348161]
      {
        (3319206 'move' tmp[3319188] 1)
      }
      {
        const-val coerce_tmp[3323400]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3323404 'move' coerce_tmp[3323400](3323402 'deref' call_tmp[8354551]))
        const-val call_tmp[7348171]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7348173 'move' call_tmp[7348171](7348175 '==' coerce_tmp[3323400] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
        (3319227 'move' tmp[3319188] call_tmp[7348171])
      }
      if tmp[3319188]
      {
        const-val coerce_tmp[3323410]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3323414 'move' coerce_tmp[3323410](9219576 '.v' style[3319022] precision[164822]))
        const-val coerce_tmp[3323416]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3323422 'move' coerce_tmp[3323416](3323418 'cast' int(32)[66] -1))
        const-val call_tmp[7355044]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7355046 'move' call_tmp[7355044](7355048 '!=' coerce_tmp[3323410] coerce_tmp[3323416]))
        if call_tmp[7355044]
        {
          (3319275 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
        }
        const-val call_tmp[3319278]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        val error[5508700]:Error[85511] "error variable" "temp"
        (5508702 'move' error[5508700] nil[32])
        const-val ret[8455486]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
        const-val call_tmp[8455488]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val error[8455490]:Error[85511] "error variable" "temp"
        (8455492 'move' error[8455490] nil[32])
        (8455495 'move' call_tmp[8455488](8455498 call :[1751964] arg[3319002] error[8455490]))
        val errorExists[8455501]:bool[19] "temp"
        (8455503 'move' errorExists[8455501](8455505 '!=' error[8455490] nil[32]))
        if errorExists[8455501]
        {
          (8455510 '=' error[5508700] error[8455490])
          gotoErrorHandlingReturn _end__toSigned[8455529] _end__toSigned[8455529]
        }
        (9109836 '.=' ret[8455486] x0[3040014] call_tmp[8455488])
        (9109840 '.=' ret[8455486] x1[3040016] 1)
        label _end__toSigned[8455529]
        (5589005 'move' call_tmp[3319278] ret[8455486])
        val errorExists[7302144]:bool[19] "temp"
        (7302149 'move' errorExists[7302144](7302146 '!=' error[5508700] nil[32]))
        if errorExists[7302144]
        {
          (5508706 '=' error_out[5508680] error[5508700])
          gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
        }
        val tmp_x0[9109376]:int(64)[10] "temp"
        val tmp_x1[9109378]:bool[19] "temp"
        (9109384 'move' tmp_x0[9109376](9109382 '.v' call_tmp[3319278] x0[3040014]))
        (9109389 'move' tmp_x1[9109378](9109387 '.v' call_tmp[3319278] x1[3040016]))
        const-val call_tmp[7351247]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7351249 'move' call_tmp[7351247](7351251 'u!' tmp_x1[9109378]))
        if call_tmp[7351247]
        {
          const-val call_tmp[3319336]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3319338 'move' call_tmp[3319336](3319341 call qio_format_error_arg_mismatch[168158] i[3319004]))
          (7357429 '=' err[3319024] call_tmp[3319336])
        }
        {
          ref call_tmp[8354561]:int(32)[66] "dead after last mention" "maybe param" "temp"
          (8354563 'move' call_tmp[8354561](8354565 'array_get' argType[3319014] i[3319004]))
          const-val coerce_tmp[3323712]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323716 'move' coerce_tmp[3323712](3323714 'deref' call_tmp[8354561]))
          const-val call_tmp[7348181]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348183 'move' call_tmp[7348181](7348185 '==' coerce_tmp[3323712] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
          if call_tmp[7348181]
          {
            const-val call_tmp[3319380]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3323720]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3323724 'move' coerce_tmp[3323720](9219585 '.v' style[3319022] max_width_bytes[164654]))
            (3319382 'move' call_tmp[3319380](3319388 call _write_signed[3042764] this[3318998] coerce_tmp[3323720] tmp_x0[9109376] i[3319004]))
            (7357435 '=' err[3319024] call_tmp[3319380])
          }
          {
            val error[5508714]:Error[85511] "error variable" "temp"
            (5508723 'move' error[5508714] nil[32])
            (3319404 call _writeOne[3043358] this[3318998] tmp_x0[9109376] origLocale[3319026] error[5508714])
            val errorExists[7302152]:bool[19] "temp"
            (7302157 'move' errorExists[7302152](7302154 '!=' error[5508714] nil[32]))
            if errorExists[7302152]
            {
              gotoErrorHandling handler[5508715] handler[5508715]
            }
            label handler[5508715]
            val errorExists[7302160]:bool[19] "temp"
            (7302165 'move' errorExists[7302160](7302162 '!=' error[5508714] nil[32]))
            if errorExists[7302160]
            {
              (5508730 '=' error_out[5508680] error[5508714])
              gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
            }
          }
        }
      }
      {
        const-val coerce_tmp[3323735]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3323739 'move' coerce_tmp[3323735](3323737 'deref' call_tmp[8354551]))
        const-val call_tmp[7348191]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7348193 'move' call_tmp[7348191](7348195 '==' coerce_tmp[3323735] QIO_CONV_ARG_TYPE_UNSIGNED[167978]))
        val tmp[3319435]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[7348191]
        {
          (3319453 'move' tmp[3319435] 1)
        }
        {
          const-val coerce_tmp[3323745]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323749 'move' coerce_tmp[3323745](3323747 'deref' call_tmp[8354551]))
          const-val call_tmp[7348201]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348203 'move' call_tmp[7348201](7348205 '==' coerce_tmp[3323745] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
          (3319474 'move' tmp[3319435] call_tmp[7348201])
        }
        if tmp[3319435]
        {
          const-val coerce_tmp[3323755]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323759 'move' coerce_tmp[3323755](9219591 '.v' style[3319022] precision[164822]))
          const-val coerce_tmp[3323761]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3323767 'move' coerce_tmp[3323761](3323763 'cast' int(32)[66] -1))
          const-val call_tmp[7355054]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7355056 'move' call_tmp[7355054](7355058 '!=' coerce_tmp[3323755] coerce_tmp[3323761]))
          if call_tmp[7355054]
          {
            (3319522 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
          }
          const-val call_tmp[3319525]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
          val error[5508743]:Error[85511] "error variable" "temp"
          (5508745 'move' error[5508743] nil[32])
          const-val ret[8455550]:(uint(64),bool)[3051128] "dead after last mention" "RVV" "temp"
          const-val call_tmp[8455552]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          val error[8455554]:Error[85511] "error variable" "temp"
          (8455556 'move' error[8455554] nil[32])
          (8455559 'move' call_tmp[8455552](8455562 call :[1918271] arg[3319002] error[8455554]))
          val errorExists[8455565]:bool[19] "temp"
          (8455567 'move' errorExists[8455565](8455569 '!=' error[8455554] nil[32]))
          if errorExists[8455565]
          {
            (8455574 '=' error[5508743] error[8455554])
            gotoErrorHandlingReturn _end__toUnsigned[8455593] _end__toUnsigned[8455593]
          }
          (9108773 '.=' ret[8455550] x0[3051124] call_tmp[8455552])
          (9108777 '.=' ret[8455550] x1[3051126] 1)
          label _end__toUnsigned[8455593]
          (5589017 'move' call_tmp[3319525] ret[8455550])
          val errorExists[7302168]:bool[19] "temp"
          (7302173 'move' errorExists[7302168](7302170 '!=' error[5508743] nil[32]))
          if errorExists[7302168]
          {
            (5508749 '=' error_out[5508680] error[5508743])
            gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
          }
          val tmp_x0[9108715]:uint(64)[86] "temp"
          val tmp_x1[9108717]:bool[19] "temp"
          (9108723 'move' tmp_x0[9108715](9108721 '.v' call_tmp[3319525] x0[3051124]))
          (9108728 'move' tmp_x1[9108717](9108726 '.v' call_tmp[3319525] x1[3051126]))
          const-val call_tmp[7351256]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7351258 'move' call_tmp[7351256](7351260 'u!' tmp_x1[9108717]))
          if call_tmp[7351256]
          {
            const-val call_tmp[3319583]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3319585 'move' call_tmp[3319583](3319588 call qio_format_error_arg_mismatch[168158] i[3319004]))
            (7357441 '=' err[3319024] call_tmp[3319583])
          }
          {
            ref call_tmp[8354571]:int(32)[66] "dead after last mention" "maybe param" "temp"
            (8354573 'move' call_tmp[8354571](8354575 'array_get' argType[3319014] i[3319004]))
            const-val coerce_tmp[3324065]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3324069 'move' coerce_tmp[3324065](3324067 'deref' call_tmp[8354571]))
            const-val call_tmp[7348211]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348213 'move' call_tmp[7348211](7348215 '==' coerce_tmp[3324065] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
            if call_tmp[7348211]
            {
              const-val call_tmp[3319627]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3324073]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324077 'move' coerce_tmp[3324073](9219600 '.v' style[3319022] max_width_bytes[164654]))
              (3319629 'move' call_tmp[3319627](3319635 call _write_unsigned[3051637] this[3318998] coerce_tmp[3324073] tmp_x0[9108715] i[3319004]))
              (7357447 '=' err[3319024] call_tmp[3319627])
            }
            {
              val error[5508757]:Error[85511] "error variable" "temp"
              (5508766 'move' error[5508757] nil[32])
              (3319651 call _writeOne[3052255] this[3318998] tmp_x0[9108715] origLocale[3319026] error[5508757])
              val errorExists[7302176]:bool[19] "temp"
              (7302181 'move' errorExists[7302176](7302178 '!=' error[5508757] nil[32]))
              if errorExists[7302176]
              {
                gotoErrorHandling handler[5508758] handler[5508758]
              }
              label handler[5508758]
              val errorExists[7302184]:bool[19] "temp"
              (7302189 'move' errorExists[7302184](7302186 '!=' error[5508757] nil[32]))
              if errorExists[7302184]
              {
                (5508773 '=' error_out[5508680] error[5508757])
                gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
              }
            }
          }
        }
        {
          const-val coerce_tmp[3324088]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3324092 'move' coerce_tmp[3324088](3324090 'deref' call_tmp[8354551]))
          const-val call_tmp[7348221]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348223 'move' call_tmp[7348221](7348225 '==' coerce_tmp[3324088] QIO_CONV_ARG_TYPE_REAL[167988]))
          val tmp[3319682]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[7348221]
          {
            (3319700 'move' tmp[3319682] 1)
          }
          {
            const-val coerce_tmp[3324098]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3324102 'move' coerce_tmp[3324098](3324100 'deref' call_tmp[8354551]))
            const-val call_tmp[7348231]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348233 'move' call_tmp[7348231](7348235 '==' coerce_tmp[3324098] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
            (3319721 'move' tmp[3319682] call_tmp[7348231])
          }
          if tmp[3319682]
          {
            const-val call_tmp[3319736]:(real(64),bool)[3059761] "dead after last mention" "maybe param" "temp"
            val error[5508786]:Error[85511] "error variable" "temp"
            (5508788 'move' error[5508786] nil[32])
            const-val ret[8455614]:(real(64),bool)[3059761] "dead after last mention" "RVV" "temp"
            const-val call_tmp[8455616]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            val error[8455618]:Error[85511] "error variable" "temp"
            (8455620 'move' error[8455618] nil[32])
            (8455623 'move' call_tmp[8455616](8455626 call :[1598415] arg[3319002] error[8455618]))
            val errorExists[8455629]:bool[19] "temp"
            (8455631 'move' errorExists[8455629](8455633 '!=' error[8455618] nil[32]))
            if errorExists[8455629]
            {
              (8455638 '=' error[5508786] error[8455618])
              gotoErrorHandlingReturn _end__toReal[8455657] _end__toReal[8455657]
            }
            (9108688 '.=' ret[8455614] x0[3059757] call_tmp[8455616])
            (9108692 '.=' ret[8455614] x1[3059759] 1)
            label _end__toReal[8455657]
            (5589029 'move' call_tmp[3319736] ret[8455614])
            val errorExists[7302192]:bool[19] "temp"
            (7302197 'move' errorExists[7302192](7302194 '!=' error[5508786] nil[32]))
            if errorExists[7302192]
            {
              (5508792 '=' error_out[5508680] error[5508786])
              gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
            }
            val tmp_x0[9108634]:real(64)[13] "temp"
            val tmp_x1[9108636]:bool[19] "temp"
            (9108642 'move' tmp_x0[9108634](9108640 '.v' call_tmp[3319736] x0[3059757]))
            (9108647 'move' tmp_x1[9108636](9108645 '.v' call_tmp[3319736] x1[3059759]))
            const-val call_tmp[7351265]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7351267 'move' call_tmp[7351265](7351269 'u!' tmp_x1[9108636]))
            if call_tmp[7351265]
            {
              const-val call_tmp[3319794]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3319796 'move' call_tmp[3319794](3319799 call qio_format_error_arg_mismatch[168158] i[3319004]))
              (7357453 '=' err[3319024] call_tmp[3319794])
            }
            {
              ref call_tmp[8354581]:int(32)[66] "dead after last mention" "maybe param" "temp"
              (8354583 'move' call_tmp[8354581](8354585 'array_get' argType[3319014] i[3319004]))
              const-val coerce_tmp[3324412]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324416 'move' coerce_tmp[3324412](3324414 'deref' call_tmp[8354581]))
              const-val call_tmp[7348241]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348243 'move' call_tmp[7348241](7348245 '==' coerce_tmp[3324412] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
              if call_tmp[7348241]
              {
                const-val call_tmp[3319838]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3324420]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3324424 'move' coerce_tmp[3324420](9219609 '.v' style[3319022] max_width_bytes[164654]))
                (3319840 'move' call_tmp[3319838](3319846 call _write_real[3060196] this[3318998] coerce_tmp[3324420] tmp_x0[9108634] i[3319004]))
                (7357459 '=' err[3319024] call_tmp[3319838])
              }
              {
                val error[5508800]:Error[85511] "error variable" "temp"
                (5508809 'move' error[5508800] nil[32])
                (3319862 call _writeOne[3060524] this[3318998] tmp_x0[9108634] origLocale[3319026] error[5508800])
                val errorExists[7302200]:bool[19] "temp"
                (7302205 'move' errorExists[7302200](7302202 '!=' error[5508800] nil[32]))
                if errorExists[7302200]
                {
                  gotoErrorHandling handler[5508801] handler[5508801]
                }
                label handler[5508801]
                val errorExists[7302208]:bool[19] "temp"
                (7302213 'move' errorExists[7302208](7302210 '!=' error[5508800] nil[32]))
                if errorExists[7302208]
                {
                  (5508816 '=' error_out[5508680] error[5508800])
                  gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                }
              }
            }
          }
          {
            const-val coerce_tmp[3324435]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3324439 'move' coerce_tmp[3324435](3324437 'deref' call_tmp[8354551]))
            const-val call_tmp[7348251]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348253 'move' call_tmp[7348251](7348255 '==' coerce_tmp[3324435] QIO_CONV_ARG_TYPE_IMAG[167998]))
            val tmp[3319893]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[7348251]
            {
              (3319911 'move' tmp[3319893] 1)
            }
            {
              const-val coerce_tmp[3324445]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3324449 'move' coerce_tmp[3324445](3324447 'deref' call_tmp[8354551]))
              const-val call_tmp[7348261]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348263 'move' call_tmp[7348261](7348265 '==' coerce_tmp[3324445] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
              (3319932 'move' tmp[3319893] call_tmp[7348261])
            }
            if tmp[3319893]
            {
              const-val call_tmp[3319947]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
              val error[5508829]:Error[85511] "error variable" "temp"
              (5508831 'move' error[5508829] nil[32])
              const-val ret[8455678]:(imag(64),bool)[3067847] "dead after last mention" "RVV" "temp"
              const-val call_tmp[8455680]:imag(64)[101] "dead after last mention" "expr temp" "maybe param" "temp"
              val error[8455682]:Error[85511] "error variable" "temp"
              (8455684 'move' error[8455682] nil[32])
              (8455687 'move' call_tmp[8455680](8455690 call :[3324705] arg[3319002] error[8455682]))
              val errorExists[8455693]:bool[19] "temp"
              (8455695 'move' errorExists[8455693](8455697 '!=' error[8455682] nil[32]))
              if errorExists[8455693]
              {
                (8455702 '=' error[5508829] error[8455682])
                gotoErrorHandlingReturn _end__toImag[8455721] _end__toImag[8455721]
              }
              (9108575 '.=' ret[8455678] x0[3067843] call_tmp[8455680])
              (9108579 '.=' ret[8455678] x1[3067845] 1)
              label _end__toImag[8455721]
              (5589041 'move' call_tmp[3319947] ret[8455678])
              val errorExists[7302216]:bool[19] "temp"
              (7302221 'move' errorExists[7302216](7302218 '!=' error[5508829] nil[32]))
              if errorExists[7302216]
              {
                (5508835 '=' error_out[5508680] error[5508829])
                gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
              }
              val tmp_x0[9108517]:imag(64)[101] "temp"
              val tmp_x1[9108519]:bool[19] "temp"
              (9108525 'move' tmp_x0[9108517](9108523 '.v' call_tmp[3319947] x0[3067843]))
              (9108530 'move' tmp_x1[9108519](9108528 '.v' call_tmp[3319947] x1[3067845]))
              const-val call_tmp[7351274]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7351276 'move' call_tmp[7351274](7351278 'u!' tmp_x1[9108519]))
              if call_tmp[7351274]
              {
                const-val call_tmp[3320005]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3320007 'move' call_tmp[3320005](3320010 call qio_format_error_arg_mismatch[168158] i[3319004]))
                (7357465 '=' err[3319024] call_tmp[3320005])
              }
              {
                ref call_tmp[8354591]:int(32)[66] "dead after last mention" "maybe param" "temp"
                (8354593 'move' call_tmp[8354591](8354595 'array_get' argType[3319014] i[3319004]))
                const-val coerce_tmp[3325751]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3325755 'move' coerce_tmp[3325751](3325753 'deref' call_tmp[8354591]))
                const-val call_tmp[7348271]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348273 'move' call_tmp[7348271](7348275 '==' coerce_tmp[3325751] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                if call_tmp[7348271]
                {
                  const-val call_tmp[8356230]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (8356232 'move' call_tmp[8356230](8356234 'cast' real(64)[13] tmp_x0[9108517]))
                  const-val call_tmp[3320057]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3325760]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3325764 'move' coerce_tmp[3325760](9219618 '.v' style[3319022] max_width_bytes[164654]))
                  (3320059 'move' call_tmp[3320057](3320065 call _write_real[3060196] this[3318998] coerce_tmp[3325760] call_tmp[8356230] i[3319004]))
                  (7357471 '=' err[3319024] call_tmp[3320057])
                }
                {
                  val error[5508843]:Error[85511] "error variable" "temp"
                  (5508852 'move' error[5508843] nil[32])
                  (3320081 call _writeOne[3068449] this[3318998] tmp_x0[9108517] origLocale[3319026] error[5508843])
                  val errorExists[7302224]:bool[19] "temp"
                  (7302229 'move' errorExists[7302224](7302226 '!=' error[5508843] nil[32]))
                  if errorExists[7302224]
                  {
                    gotoErrorHandling handler[5508844] handler[5508844]
                  }
                  label handler[5508844]
                  val errorExists[7302232]:bool[19] "temp"
                  (7302237 'move' errorExists[7302232](7302234 '!=' error[5508843] nil[32]))
                  if errorExists[7302232]
                  {
                    (5508859 '=' error_out[5508680] error[5508843])
                    gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                  }
                }
              }
            }
            {
              const-val coerce_tmp[3325775]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3325779 'move' coerce_tmp[3325775](3325777 'deref' call_tmp[8354551]))
              const-val call_tmp[7348281]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348283 'move' call_tmp[7348281](7348285 '==' coerce_tmp[3325775] QIO_CONV_ARG_TYPE_COMPLEX[168008]))
              val tmp[3320112]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[7348281]
              {
                (3320130 'move' tmp[3320112] 1)
              }
              {
                const-val coerce_tmp[3325785]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3325789 'move' coerce_tmp[3325785](3325787 'deref' call_tmp[8354551]))
                const-val call_tmp[7348291]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348293 'move' call_tmp[7348291](7348295 '==' coerce_tmp[3325785] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                (3320151 'move' tmp[3320112] call_tmp[7348291])
              }
              if tmp[3320112]
              {
                const-val call_tmp[3320166]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
                val error[5508872]:Error[85511] "error variable" "temp"
                (5508874 'move' error[5508872] nil[32])
                const-val ret[8455742]:(complex(128),bool)[3077587] "dead after last mention" "RVV" "temp"
                const-val call_tmp[8455744]:complex(128)[111] "dead after last mention" "expr temp" "maybe param" "temp"
                val error[8455746]:Error[85511] "error variable" "temp"
                (8455748 'move' error[8455746] nil[32])
                (8455751 'move' call_tmp[8455744](8455754 call :[3326053] arg[3319002] error[8455746]))
                val errorExists[8455757]:bool[19] "temp"
                (8455759 'move' errorExists[8455757](8455761 '!=' error[8455746] nil[32]))
                if errorExists[8455757]
                {
                  (8455766 '=' error[5508872] error[8455746])
                  gotoErrorHandlingReturn _end__toComplex[8455785] _end__toComplex[8455785]
                }
                (9108476 '.=' ret[8455742] x0[3077583] call_tmp[8455744])
                (9108480 '.=' ret[8455742] x1[3077585] 1)
                label _end__toComplex[8455785]
                (5589053 'move' call_tmp[3320166] ret[8455742])
                val errorExists[7302240]:bool[19] "temp"
                (7302245 'move' errorExists[7302240](7302242 '!=' error[5508872] nil[32]))
                if errorExists[7302240]
                {
                  (5508878 '=' error_out[5508680] error[5508872])
                  gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                }
                val tmp_x0[9108418]:complex(128)[111] "temp"
                val tmp_x1[9108420]:bool[19] "temp"
                (9108426 'move' tmp_x0[9108418](9108424 '.v' call_tmp[3320166] x0[3077583]))
                (9108431 'move' tmp_x1[9108420](9108429 '.v' call_tmp[3320166] x1[3077585]))
                const-val call_tmp[7351283]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7351285 'move' call_tmp[7351283](7351287 'u!' tmp_x1[9108420]))
                if call_tmp[7351283]
                {
                  const-val call_tmp[3320224]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3320226 'move' call_tmp[3320224](3320229 call qio_format_error_arg_mismatch[168158] i[3319004]))
                  (7357477 '=' err[3319024] call_tmp[3320224])
                }
                {
                  ref call_tmp[8354601]:int(32)[66] "dead after last mention" "maybe param" "temp"
                  (8354603 'move' call_tmp[8354601](8354605 'array_get' argType[3319014] i[3319004]))
                  const-val coerce_tmp[3327914]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3327918 'move' coerce_tmp[3327914](3327916 'deref' call_tmp[8354601]))
                  const-val call_tmp[7348301]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7348303 'move' call_tmp[7348301](7348305 '==' coerce_tmp[3327914] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                  if call_tmp[7348301]
                  {
                    const-val call_tmp[3320268]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3327922]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3327926 'move' coerce_tmp[3327922](9219627 '.v' style[3319022] max_width_bytes[164654]))
                    (3320270 'move' call_tmp[3320268](3320276 call _write_complex[3078407] this[3318998] coerce_tmp[3327922] tmp_x0[9108418] i[3319004]))
                    (7357483 '=' err[3319024] call_tmp[3320268])
                  }
                  {
                    val error[5508886]:Error[85511] "error variable" "temp"
                    (5508895 'move' error[5508886] nil[32])
                    (3320292 call _writeOne[3079967] this[3318998] tmp_x0[9108418] origLocale[3319026] error[5508886])
                    val errorExists[7302248]:bool[19] "temp"
                    (7302253 'move' errorExists[7302248](7302250 '!=' error[5508886] nil[32]))
                    if errorExists[7302248]
                    {
                      gotoErrorHandling handler[5508887] handler[5508887]
                    }
                    label handler[5508887]
                    val errorExists[7302256]:bool[19] "temp"
                    (7302261 'move' errorExists[7302256](7302258 '!=' error[5508886] nil[32]))
                    if errorExists[7302256]
                    {
                      (5508902 '=' error_out[5508680] error[5508886])
                      gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                    }
                  }
                }
              }
              {
                const-val coerce_tmp[3327937]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3327941 'move' coerce_tmp[3327937](3327939 'deref' call_tmp[8354551]))
                const-val call_tmp[7348311]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348313 'move' call_tmp[7348311](7348315 '==' coerce_tmp[3327937] QIO_CONV_ARG_TYPE_NUMERIC[167963]))
                if call_tmp[7348311]
                {
                  const-val call_tmp[3320319]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
                  val error[5508915]:Error[85511] "error variable" "temp"
                  (5508917 'move' error[5508915] nil[32])
                  const-val ret[8455806]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
                  const-val call_tmp[8455808]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[8455810]:Error[85511] "error variable" "temp"
                  (8455812 'move' error[8455810] nil[32])
                  (8455815 'move' call_tmp[8455808](8455818 call :[1751964] arg[3319002] error[8455810]))
                  val errorExists[8455821]:bool[19] "temp"
                  (8455823 'move' errorExists[8455821](8455825 '!=' error[8455810] nil[32]))
                  if errorExists[8455821]
                  {
                    (8455830 '=' error[5508915] error[8455810])
                    gotoErrorHandlingReturn _end__toNumeric[8455849] _end__toNumeric[8455849]
                  }
                  (9109850 '.=' ret[8455806] x0[3040014] call_tmp[8455808])
                  (9109854 '.=' ret[8455806] x1[3040016] 1)
                  label _end__toNumeric[8455849]
                  (5589065 'move' call_tmp[3320319] ret[8455806])
                  val errorExists[7302264]:bool[19] "temp"
                  (7302269 'move' errorExists[7302264](7302266 '!=' error[5508915] nil[32]))
                  if errorExists[7302264]
                  {
                    (5508921 '=' error_out[5508680] error[5508915])
                    gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                  }
                  val tmp_x0[9109394]:int(64)[10] "temp"
                  val tmp_x1[9109396]:bool[19] "temp"
                  (9109402 'move' tmp_x0[9109394](9109400 '.v' call_tmp[3320319] x0[3040014]))
                  (9109407 'move' tmp_x1[9109396](9109405 '.v' call_tmp[3320319] x1[3040016]))
                  const-val call_tmp[7351292]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7351294 'move' call_tmp[7351292](7351296 'u!' tmp_x1[9109396]))
                  if call_tmp[7351292]
                  {
                    const-val call_tmp[3320377]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3320379 'move' call_tmp[3320377](3320382 call qio_format_error_arg_mismatch[168158] i[3319004]))
                    (7357489 '=' err[3319024] call_tmp[3320377])
                  }
                  {
                    val error[5508929]:Error[85511] "error variable" "temp"
                    (5508938 'move' error[5508929] nil[32])
                    (3320394 call _writeOne[3043358] this[3318998] tmp_x0[9109394] origLocale[3319026] error[5508929])
                    val errorExists[7302272]:bool[19] "temp"
                    (7302277 'move' errorExists[7302272](7302274 '!=' error[5508929] nil[32]))
                    if errorExists[7302272]
                    {
                      gotoErrorHandling handler[5508930] handler[5508930]
                    }
                    label handler[5508930]
                    val errorExists[7302280]:bool[19] "temp"
                    (7302285 'move' errorExists[7302280](7302282 '!=' error[5508929] nil[32]))
                    if errorExists[7302280]
                    {
                      (5508945 '=' error_out[5508680] error[5508929])
                      gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                    }
                  }
                }
                {
                  const-val coerce_tmp[3328249]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3328253 'move' coerce_tmp[3328249](3328251 'deref' call_tmp[8354551]))
                  const-val call_tmp[7348321]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7348323 'move' call_tmp[7348321](7348325 '==' coerce_tmp[3328249] QIO_CONV_ARG_TYPE_CHAR[168018]))
                  if call_tmp[7348321]
                  {
                    const-val call_tmp[3320420]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5588966]:(int(32),bool)[3040996] "temp"
                    (3320425 call _toChar[3322847] arg[3319002] ret_tmp[5588966])
                    (5588969 'move' call_tmp[3320420] ret_tmp[5588966])
                    val tmp_x0[9108894]:int(32)[66] "temp"
                    val tmp_x1[9108896]:bool[19] "temp"
                    (9108902 'move' tmp_x0[9108894](9108900 '.v' call_tmp[3320420] x0[3040992]))
                    (9108907 'move' tmp_x1[9108896](9108905 '.v' call_tmp[3320420] x1[3040994]))
                    const-val call_tmp[7351301]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7351303 'move' call_tmp[7351301](7351305 'u!' tmp_x1[9108896]))
                    if call_tmp[7351301]
                    {
                      const-val call_tmp[3320478]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3320480 'move' call_tmp[3320478](3320483 call qio_format_error_arg_mismatch[168158] i[3319004]))
                      (7357495 '=' err[3319024] call_tmp[3320478])
                    }
                    {
                      val error[5508957]:Error[85511] "error variable" "temp"
                      (5508966 'move' error[5508957] nil[32])
                      const-val call_tmp[3320491]:_internalIoChar[176999] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                      const-val initTemp[3328303]:_internalIoChar[176999] "dead after last mention" "temp"
                      (3328306 call init[1213162] initTemp[3328303] tmp_x0[9108894])
                      (3320493 'move' call_tmp[3320491] initTemp[3328303])
                      (3320502 call _writeOne[3089040] this[3318998] call_tmp[3320491] origLocale[3319026] error[5508957])
                      val errorExists[7302288]:bool[19] "temp"
                      (7302293 'move' errorExists[7302288](7302290 '!=' error[5508957] nil[32]))
                      if errorExists[7302288]
                      {
                        gotoErrorHandling handler[5508958] handler[5508958]
                      }
                      label handler[5508958]
                      val errorExists[7302296]:bool[19] "temp"
                      (7302301 'move' errorExists[7302296](7302298 '!=' error[5508957] nil[32]))
                      if errorExists[7302296]
                      {
                        (5508973 '=' error_out[5508680] error[5508957])
                        gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                      }
                    }
                  }
                  {
                    const-val coerce_tmp[3328321]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3328325 'move' coerce_tmp[3328321](3328323 'deref' call_tmp[8354551]))
                    const-val call_tmp[7348331]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7348333 'move' call_tmp[7348331](7348335 '==' coerce_tmp[3328321] QIO_CONV_ARG_TYPE_BINARY_STRING[168028]))
                    if call_tmp[7348331]
                    {
                      const-val call_tmp[3320528]:(bytes,bool)[3092705] "dead after last mention" "maybe param" "temp"
                      const-val ret_tmp[5545386]:(bytes,bool)[3092705] "temp"
                      const-val call_tmp[7610216]:bytes[232] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[7610218]:int(64)[10] "dead after last mention" "RVV" "temp"
                      (7610220 '=' ret[7610218](7610222 '.v' arg[3319002] buffLen[21281]))
                      val ret[7610225]:int(64)[10] "dead after last mention" "RVV" "temp"
                      (7610227 '=' ret[7610225](7610229 '.v' arg[3319002] buffLen[21281]))
                      const-val call_tmp[7610232]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7610234 'move' call_tmp[7610232](7610236 '+' ret[7610225] 1))
                      val coerce_tmp[7610239]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (7610241 'move' coerce_tmp[7610239](7610243 '.v' arg[3319002] buff[21299]))
                      const-val ret[7610246]:bytes[232] "dead after last mention" "RVV" "temp"
                      val ret[7610248]:bytes[232] "dead at end of block" "insert auto destroy"
                      (7610251 call init[33649] ret[7610248])
                      (7610254 call initWithNewBuffer[3275520] ret[7610248] coerce_tmp[7610239] ret[7610218] call_tmp[7610232])
                      (7610259 '=' ret[7610246] ret[7610248])
                      (7610262 'move' call_tmp[7610216] ret[7610246])
                      ref i__e0_x[7610265]:bytes[232] "temp"
                      (7610267 'move' i__e0_x[7610265](7610269 'set reference' call_tmp[7610216]))
                      val ret[7610295]:bytes[232] "dead after last mention" "RVV" "temp"
                      const-val tmp[7610297]:bytes[232] "dead after last mention" "temp"
                      (7610300 call init=[33890] tmp[7610297] i__e0_x[7610265])
                      (7610303 'move' ret[7610295] tmp[7610297])
                      (7610317 'noop')
                      (9011356 '.=' ret_tmp[5545386] x0[3092701] ret[7610295])
                      (9011360 '.=' ret_tmp[5545386] x1[3092703] 1)
                      ref i_x[7610325]:bytes[232] "temp"
                      (7610327 'move' i_x[7610325](7610329 'set reference' call_tmp[7610216]))
                      (7610332 call deinit[33658] i_x[7610325])
                      (5545389 'move' call_tmp[3320528] ret_tmp[5545386])
                      val tmp_x0[9011304]:bytes[232] "temp"
                      val tmp_x1[9011306]:bool[19] "temp"
                      (9011312 'move' tmp_x0[9011304](9011310 '.v' call_tmp[3320528] x0[3092701]))
                      (9011317 'move' tmp_x1[9011306](9011315 '.v' call_tmp[3320528] x1[3092703]))
                      const-ref call_tmp[3320545]:bytes[232] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                      (3320547 'move' call_tmp[3320545](9011319 'set reference' tmp_x0[9011304]))
                      const-val t[3320552]:bytes[232] "dead at end of block" "insert auto destroy"
                      (3320554 call init=[33890] t[3320552] call_tmp[3320545])
                      const-val call_tmp[7351310]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7351312 'move' call_tmp[7351310](7351314 'u!' tmp_x1[9011306]))
                      if call_tmp[7351310]
                      {
                        const-val call_tmp[3320586]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3320588 'move' call_tmp[3320586](3320591 call qio_format_error_arg_mismatch[168158] i[3319004]))
                        (7357501 '=' err[3319024] call_tmp[3320586])
                      }
                      {
                        val error[5508985]:Error[85511] "error variable" "temp"
                        (5508994 'move' error[5508985] nil[32])
                        (3320603 call _writeOne[3093219] this[3318998] t[3320552] origLocale[3319026] error[5508985])
                        val errorExists[7302304]:bool[19] "temp"
                        (7302309 'move' errorExists[7302304](7302306 '!=' error[5508985] nil[32]))
                        if errorExists[7302304]
                        {
                          gotoErrorHandling handler[5508986] handler[5508986]
                        }
                        label handler[5508986]
                        val errorExists[7302312]:bool[19] "temp"
                        (7302317 'move' errorExists[7302312](7302314 '!=' error[5508985] nil[32]))
                        if errorExists[7302312]
                        {
                          (5509001 '=' error_out[5508680] error[5508985])
                          ref i_x[7610157]:bytes[232] "temp"
                          (7610161 'move' i_x[7610157](7610159 'set reference' t[3320552]))
                          (7610165 call deinit[33658] i_x[7610157])
                          ref _field_destructor_tmp_[8619601]:bytes[232] "temp"
                          (8619603 'move' _field_destructor_tmp_[8619601](9011323 'set reference' tmp_x0[9011304]))
                          (8619609 call deinit[33658] _field_destructor_tmp_[8619601])
                          gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                        }
                      }
                      ref i_x[7610169]:bytes[232] "temp"
                      (7610173 'move' i_x[7610169](7610171 'set reference' t[3320552]))
                      (7610177 call deinit[33658] i_x[7610169])
                      ref _field_destructor_tmp_[8619620]:bytes[232] "temp"
                      (8619622 'move' _field_destructor_tmp_[8619620](9011325 'set reference' tmp_x0[9011304]))
                      (8619628 call deinit[33658] _field_destructor_tmp_[8619620])
                    }
                    {
                      const-val coerce_tmp[3328398]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3328402 'move' coerce_tmp[3328398](3328400 'deref' call_tmp[8354551]))
                      const-val call_tmp[7348341]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7348343 'move' call_tmp[7348341](7348345 '==' coerce_tmp[3328398] QIO_CONV_ARG_TYPE_STRING[168023]))
                      if call_tmp[7348341]
                      {
                        const-val call_tmp[3320629]:(string,bool)[3103815] "dead after last mention" "maybe param" "temp"
                        const-val ret_tmp[5545398]:(string,bool)[3103815] "temp"
                        val ret[7613260]:string[244] "dead after last mention" "RVV" "temp"
                        const-val tmp[7613262]:string[244] "dead after last mention" "temp"
                        (7613265 call init=[21330] tmp[7613262] arg[3319002])
                        (7613268 'move' ret[7613260] tmp[7613262])
                        (7613282 'noop')
                        (9011539 '.=' ret_tmp[5545398] x0[3103811] ret[7613260])
                        (9011543 '.=' ret_tmp[5545398] x1[3103813] 1)
                        (5545401 'move' call_tmp[3320629] ret_tmp[5545398])
                        val tmp_x0[9011487]:string[244] "temp"
                        val tmp_x1[9011489]:bool[19] "temp"
                        (9011495 'move' tmp_x0[9011487](9011493 '.v' call_tmp[3320629] x0[3103811]))
                        (9011500 'move' tmp_x1[9011489](9011498 '.v' call_tmp[3320629] x1[3103813]))
                        const-ref call_tmp[3320646]:string[244] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                        (3320648 'move' call_tmp[3320646](9011502 'set reference' tmp_x0[9011487]))
                        const-val t[3320653]:string[244] "dead at end of block" "insert auto destroy"
                        (3320655 call init=[21330] t[3320653] call_tmp[3320646])
                        const-val call_tmp[7351319]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7351321 'move' call_tmp[7351319](7351323 'u!' tmp_x1[9011489]))
                        if call_tmp[7351319]
                        {
                          const-val call_tmp[3320687]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3320689 'move' call_tmp[3320687](3320692 call qio_format_error_arg_mismatch[168158] i[3319004]))
                          (7357507 '=' err[3319024] call_tmp[3320687])
                        }
                        {
                          val error[5509013]:Error[85511] "error variable" "temp"
                          (5509022 'move' error[5509013] nil[32])
                          (3320704 call _writeOne[1845361] this[3318998] t[3320653] origLocale[3319026] error[5509013])
                          val errorExists[7302320]:bool[19] "temp"
                          (7302325 'move' errorExists[7302320](7302322 '!=' error[5509013] nil[32]))
                          if errorExists[7302320]
                          {
                            gotoErrorHandling handler[5509014] handler[5509014]
                          }
                          label handler[5509014]
                          val errorExists[7302328]:bool[19] "temp"
                          (7302333 'move' errorExists[7302328](7302330 '!=' error[5509013] nil[32]))
                          if errorExists[7302328]
                          {
                            (5509029 '=' error_out[5508680] error[5509013])
                            ref i_x[7342258]:string[244] "temp"
                            (7342262 'move' i_x[7342258](7342260 'set reference' t[3320653]))
                            (7342266 call deinit[21354] i_x[7342258])
                            ref _field_destructor_tmp_[8619715]:string[244] "temp"
                            (8619717 'move' _field_destructor_tmp_[8619715](9011506 'set reference' tmp_x0[9011487]))
                            (8619723 call deinit[21354] _field_destructor_tmp_[8619715])
                            gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                          }
                        }
                        ref i_x[7342270]:string[244] "temp"
                        (7342274 'move' i_x[7342270](7342272 'set reference' t[3320653]))
                        (7342278 call deinit[21354] i_x[7342270])
                        ref _field_destructor_tmp_[8619734]:string[244] "temp"
                        (8619736 'move' _field_destructor_tmp_[8619734](9011508 'set reference' tmp_x0[9011487]))
                        (8619742 call deinit[21354] _field_destructor_tmp_[8619734])
                      }
                      {
                        const-val coerce_tmp[3328653]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3328657 'move' coerce_tmp[3328653](3328655 'deref' call_tmp[8354551]))
                        const-val call_tmp[7348351]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7348353 'move' call_tmp[7348351](7348355 '==' coerce_tmp[3328653] QIO_CONV_ARG_TYPE_REGEX[168038]))
                        if call_tmp[7348351]
                        {
                          const-val call_tmp[3320730]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3320732 'move' call_tmp[3320730](3320735 call qio_format_error_write_regex[168174]))
                          (7357513 '=' err[3319024] call_tmp[3320730])
                        }
                        {
                          const-val coerce_tmp[3328668]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3328672 'move' coerce_tmp[3328668](3328670 'deref' call_tmp[8354551]))
                          const-val call_tmp[7348361]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7348363 'move' call_tmp[7348361](7348365 '==' coerce_tmp[3328668] QIO_CONV_ARG_TYPE_SERDE[168033]))
                          if call_tmp[7348361]
                          {
                            val error[5509042]:Error[85511] "error variable" "temp"
                            (5509044 'move' error[5509042] nil[32])
                            (3320823 call _serializeOne[1844087] this[3318998] arg[3319002] origLocale[3319026] error[5509042])
                            val errorExists[7302336]:bool[19] "temp"
                            (7302341 'move' errorExists[7302336](7302338 '!=' error[5509042] nil[32]))
                            if errorExists[7302336]
                            {
                              (5509048 '=' error_out[5508680] error[5509042])
                              gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                            }
                          }
                          {
                            const-val call_tmp[3320839]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5546551]:string[244] "temp"
                            (3320844 call :[1496816] i[3319004] ret_tmp[5546551])
                            (5546554 'move' call_tmp[3320839] ret_tmp[5546551])
                            const-val call_tmp[3320847]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540244]:string[244] "temp"
                            (3320852 call +[28065] "illegal argument 'args(" call_tmp[3320839] ret_tmp[5540244])
                            (5540247 'move' call_tmp[3320847] ret_tmp[5540244])
                            const-val call_tmp[3320855]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540250]:string[244] "temp"
                            (3320860 call +[28065] call_tmp[3320847] ")': writef internal error " ret_tmp[5540250])
                            (5540253 'move' call_tmp[3320855] ret_tmp[5540250])
                            ref call_tmp[8354611]:int(32)[66] "dead after last mention" "maybe param" "temp"
                            (8354613 'move' call_tmp[8354611](8354615 'array_get' argType[3319014] i[3319004]))
                            const-val call_tmp[3320870]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val coerce_tmp[3328704]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3328708 'move' coerce_tmp[3328704](3328706 'deref' call_tmp[8354611]))
                            const-val ret_tmp[5555478]:string[244] "temp"
                            (3320875 call :[1816123] coerce_tmp[3328704] ret_tmp[5555478])
                            (5555481 'move' call_tmp[3320870] ret_tmp[5555478])
                            const-val call_tmp[3320878]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540256]:string[244] "temp"
                            (3320883 call +[28065] call_tmp[3320855] call_tmp[3320870] ret_tmp[5540256])
                            (5540259 'move' call_tmp[3320878] ret_tmp[5540256])
                            const-val call_tmp[3320886]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
                            val new_temp[3328735]:IllegalArgumentError[85616] "dead after last mention" "temp"
                            (3328737 'move' new_temp[3328735](3328722 call _new[1475209] call_tmp[3320878]))
                            const-val initTemp[3328744]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
                            (3328747 call init[1475364] initTemp[3328744] new_temp[3328735])
                            (3320888 'move' call_tmp[3320886] initTemp[3328744])
                            val call_tmp[3320895]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3328761]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                            const-val ret_tmp[5547139]:owned Error[1498203] "temp"
                            ref i_x[7645169]:owned IllegalArgumentError[1475882] "temp"
                            (7645173 'move' i_x[7645169](7645171 'set reference' call_tmp[3320886]))
                            ref i__retArg[7645175]:owned Error[1498203] "temp"
                            (7645179 'move' i__retArg[7645175](7645177 'set reference' ret_tmp[5547139]))
                            val _formal_tmp_x[7645182]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
                            (7645184 'move' _formal_tmp_x[7645182] i_x[7645169])
                            const-val ret[7645187]:owned Error[1498203] "dead after last mention" "RVV" "temp"
                            ref i_this[7645189]:owned IllegalArgumentError[1475882] "temp"
                            (7645191 'move' i_this[7645189](7645193 'set reference' _formal_tmp_x[7645182]))
                            val coerce_tmp[7645195]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (7645197 'move' coerce_tmp[7645195](7645199 '.v' i_this[7645189] chpl_p[1475877]))
                            val call_tmp[7645202]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                            (7645204 'move' call_tmp[7645202](7645206 'cast' Error[85511] coerce_tmp[7645195]))
                            ref i_this[7645214]:owned IllegalArgumentError[1475882] "temp"
                            (7645216 'move' i_this[7645214](7645218 'set reference' _formal_tmp_x[7645182]))
                            val tmp[7645220]:IllegalArgumentError[85616] "temp"
                            (7645222 'move' tmp[7645220](7645224 'cast' IllegalArgumentError[85616] nil[32]))
                            (7645227 '.=' i_this[7645214] chpl_p[1475877] tmp[7645220])
                            val coerce_tmp[7645231]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (7645233 'move' coerce_tmp[7645231](7645235 'cast' RootClass[236] call_tmp[7645202]))
                            const-val call_tmp[7645238]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (7645240 'move' call_tmp[7645238](7645242 '==' coerce_tmp[7645231] nil[32]))
                            if call_tmp[7645238]
                            {
                              (7645248 call nilCheckHalt[392] "argument to ! is nil")
                            }
                            const-val call_tmp[7645251]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
                            const-val initTemp[7645253]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
                            (7645256 call init[1499358] initTemp[7645253] call_tmp[7645202])
                            (7645259 'move' call_tmp[7645251] initTemp[7645253])
                            (7645262 'move' ret[7645187] call_tmp[7645251])
                            (7645266 call chpl__autoDestroy[3929468] _formal_tmp_x[7645182])
                            (7645270 '=' i__retArg[7645175] ret[7645187])
                            (5547142 'move' coerce_tmp[3328761] ret_tmp[5547139])
                            const-val _formal_tmp_in_err[3328980]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                            (3328985 'move' _formal_tmp_in_err[3328980] coerce_tmp[3328761])
                            (3320897 'move' call_tmp[3320895](3320900 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3328980]))
                            (5509065 '=' error_out[5508680] call_tmp[3320895])
                            ref i_x[7342282]:string[244] "temp"
                            (7342286 'move' i_x[7342282](7342284 'set reference' call_tmp[3320878]))
                            (7342290 call deinit[21354] i_x[7342282])
                            ref i_x[7342294]:string[244] "temp"
                            (7342298 'move' i_x[7342294](7342296 'set reference' call_tmp[3320870]))
                            (7342302 call deinit[21354] i_x[7342294])
                            ref i_x[7342306]:string[244] "temp"
                            (7342310 'move' i_x[7342306](7342308 'set reference' call_tmp[3320855]))
                            (7342314 call deinit[21354] i_x[7342306])
                            ref i_x[7342318]:string[244] "temp"
                            (7342322 'move' i_x[7342318](7342320 'set reference' call_tmp[3320847]))
                            (7342326 call deinit[21354] i_x[7342318])
                            ref i_x[7342330]:string[244] "temp"
                            (7342334 'move' i_x[7342330](7342332 'set reference' call_tmp[3320839]))
                            (7342338 call deinit[21354] i_x[7342330])
                            gotoErrorHandlingReturn _end_writefOne[5508682] _end_writefOne[5508682]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_writefOne[5508682]
    (3320916 return _void[46])
  }
  function fileWriter(false,defaultSerializer)[1838949]._writefOne[3727989](const  ref arg this[3727995]:fileWriter(false,defaultSerializer)[1838949], const  ref arg fmtStr[3727997]:string[244], const  ref arg arg[3727999]:real(32)[91], const in arg i[3728001]:int(64)[10], ref arg cur[3728005]:uint(64)[86], ref arg j[3728007]:int(64)[10], const in arg argType[3728011]:c_ptr(int(32))[3035159], const in arg argTypeLen[3728013]:int(64)[10], ref arg conv[3728015]:qio_conv_t[167955], ref arg gotConv[3728017]:bool[19], ref arg style[3728019]:iostyleInternal[164872], ref arg err[3728021]:errorCode[12828], const  ref arg origLocale[3728023]:locale[234], const in arg len[3728027]:uint(64)[86], ref arg error_out[5518786]:Error[85511]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[7379292]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7379294 'move' call_tmp[7379292](7379296 '>=' i[3728001] argTypeLen[3728013]))
    if call_tmp[7379292]
    {
      (3728064 call halt[1673640] "Index " i[3728001] " is accessed on argType of length " argTypeLen[3728013])
    }
    (7394292 '=' gotConv[3728017] 0)
    const-val coerce_tmp[3729921]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3729925 'move' coerce_tmp[3729921](3729923 'deref' j[3728007]))
    const-val call_tmp[7498097]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498099 'move' call_tmp[7498097](7498101 '<=' coerce_tmp[3729921] i[3728001]))
    if call_tmp[7498097]
    {
      (3728097 call _format_reader[3037225] this[3727995] fmtStr[3727997] cur[3728005] len[3728027] err[3728021] conv[3728015] gotConv[3728017] style[3728019])
    }
    (3728107 call _conv_helper[200155] err[3728021] conv[3728015] gotConv[3728017] j[3728007] argType[3728011] argTypeLen[3728013])
    ref call_tmp[8354621]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (8354623 'move' call_tmp[8354621](8354625 'array_get' argType[3728011] i[3728001]))
    const-val call_tmp[3728122]:bool[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[3731267]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3731271 'move' coerce_tmp[3731267](3731269 'deref' call_tmp[8354621]))
    const-val coerce_tmp[3731273]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3731277 'move' coerce_tmp[3731273](3731275 'deref' arg[3727999]))
    val error[5518791]:Error[85511] "error variable" "temp"
    (5518793 'move' error[5518791] nil[32])
    (3728124 'move' call_tmp[3728122](3728127 call _conv_sethandler[3729933] err[3728021] coerce_tmp[3731267] style[3728019] i[3728001] coerce_tmp[3731273] 0 error[5518791]))
    val errorExists[7306768]:bool[19] "temp"
    (7306773 'move' errorExists[7306768](7306770 '!=' error[5518791] nil[32]))
    if errorExists[7306768]
    {
      (5518797 '=' error_out[5518786] error[5518791])
      gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
    }
    if call_tmp[3728122]
    {
      (3728153 call _set_styleInternal[3033186] this[3727995] style[3728019])
      ref call_tmp[8354631]:int(32)[66] "dead after last mention" "maybe param" "temp"
      (8354633 'move' call_tmp[8354631](8354635 'array_get' argType[3728011] i[3728001]))
      const-val coerce_tmp[3732334]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3732338 'move' coerce_tmp[3732334](3732336 'deref' call_tmp[8354631]))
      const-val call_tmp[7348491]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7348493 'move' call_tmp[7348491](7348495 '==' coerce_tmp[3732334] QIO_CONV_ARG_TYPE_SIGNED[167968]))
      val tmp[3728185]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[7348491]
      {
        (3728203 'move' tmp[3728185] 1)
      }
      {
        const-val coerce_tmp[3732344]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3732348 'move' coerce_tmp[3732344](3732346 'deref' call_tmp[8354631]))
        const-val call_tmp[7348501]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7348503 'move' call_tmp[7348501](7348505 '==' coerce_tmp[3732344] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
        (3728224 'move' tmp[3728185] call_tmp[7348501])
      }
      if tmp[3728185]
      {
        const-val coerce_tmp[3732354]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3732358 'move' coerce_tmp[3732354](9229102 '.v' style[3728019] precision[164822]))
        const-val coerce_tmp[3732360]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3732366 'move' coerce_tmp[3732360](3732362 'cast' int(32)[66] -1))
        const-val call_tmp[7355064]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7355066 'move' call_tmp[7355064](7355068 '!=' coerce_tmp[3732354] coerce_tmp[3732360]))
        if call_tmp[7355064]
        {
          (3728272 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
        }
        const-val call_tmp[3728275]:(int(64),bool)[3040018] "dead after last mention" "maybe param" "temp"
        const-val coerce_tmp[3732594]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3732598 'move' coerce_tmp[3732594](3732596 'deref' arg[3727999]))
        val error[5518806]:Error[85511] "error variable" "temp"
        (5518808 'move' error[5518806] nil[32])
        const-val ret[8547939]:(int(64),bool)[3040018] "dead after last mention" "RVV" "temp"
        const-val call_tmp[8547941]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (8547943 'move' call_tmp[8547941](8547945 'cast' int(64)[10] coerce_tmp[3732594]))
        (9109948 '.=' ret[8547939] x0[3040014] call_tmp[8547941])
        (9109952 '.=' ret[8547939] x1[3040016] 1)
        (5593696 'move' call_tmp[3728275] ret[8547939])
        val errorExists[7306776]:bool[19] "temp"
        (7306781 'move' errorExists[7306776](7306778 '!=' error[5518806] nil[32]))
        if errorExists[7306776]
        {
          (5518812 '=' error_out[5518786] error[5518806])
          gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
        }
        val tmp_x0[9109520]:int(64)[10] "temp"
        val tmp_x1[9109522]:bool[19] "temp"
        (9109528 'move' tmp_x0[9109520](9109526 '.v' call_tmp[3728275] x0[3040014]))
        (9109533 'move' tmp_x1[9109522](9109531 '.v' call_tmp[3728275] x1[3040016]))
        const-val call_tmp[7351805]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7351807 'move' call_tmp[7351805](7351809 'u!' tmp_x1[9109522]))
        if call_tmp[7351805]
        {
          const-val call_tmp[3728333]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
          (3728335 'move' call_tmp[3728333](3728338 call qio_format_error_arg_mismatch[168158] i[3728001]))
          (7357681 '=' err[3728021] call_tmp[3728333])
        }
        {
          ref call_tmp[8354641]:int(32)[66] "dead after last mention" "maybe param" "temp"
          (8354643 'move' call_tmp[8354641](8354645 'array_get' argType[3728011] i[3728001]))
          const-val coerce_tmp[3732662]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732666 'move' coerce_tmp[3732662](3732664 'deref' call_tmp[8354641]))
          const-val call_tmp[7348511]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348513 'move' call_tmp[7348511](7348515 '==' coerce_tmp[3732662] QIO_CONV_ARG_TYPE_BINARY_SIGNED[167973]))
          if call_tmp[7348511]
          {
            const-val call_tmp[3728377]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3732670]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3732674 'move' coerce_tmp[3732670](9229110 '.v' style[3728019] max_width_bytes[164654]))
            (3728379 'move' call_tmp[3728377](3728385 call _write_signed[3042764] this[3727995] coerce_tmp[3732670] tmp_x0[9109520] i[3728001]))
            (7357687 '=' err[3728021] call_tmp[3728377])
          }
          {
            val error[5518820]:Error[85511] "error variable" "temp"
            (5518829 'move' error[5518820] nil[32])
            (3728401 call _writeOne[3043358] this[3727995] tmp_x0[9109520] origLocale[3728023] error[5518820])
            val errorExists[7306784]:bool[19] "temp"
            (7306789 'move' errorExists[7306784](7306786 '!=' error[5518820] nil[32]))
            if errorExists[7306784]
            {
              gotoErrorHandling handler[5518821] handler[5518821]
            }
            label handler[5518821]
            val errorExists[7306792]:bool[19] "temp"
            (7306797 'move' errorExists[7306792](7306794 '!=' error[5518820] nil[32]))
            if errorExists[7306792]
            {
              (5518836 '=' error_out[5518786] error[5518820])
              gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
            }
          }
        }
      }
      {
        const-val coerce_tmp[3732685]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (3732689 'move' coerce_tmp[3732685](3732687 'deref' call_tmp[8354631]))
        const-val call_tmp[7348521]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7348523 'move' call_tmp[7348521](7348525 '==' coerce_tmp[3732685] QIO_CONV_ARG_TYPE_UNSIGNED[167978]))
        val tmp[3728432]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[7348521]
        {
          (3728450 'move' tmp[3728432] 1)
        }
        {
          const-val coerce_tmp[3732695]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732699 'move' coerce_tmp[3732695](3732697 'deref' call_tmp[8354631]))
          const-val call_tmp[7348531]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348533 'move' call_tmp[7348531](7348535 '==' coerce_tmp[3732695] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
          (3728471 'move' tmp[3728432] call_tmp[7348531])
        }
        if tmp[3728432]
        {
          const-val coerce_tmp[3732705]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732709 'move' coerce_tmp[3732705](9229116 '.v' style[3728019] precision[164822]))
          const-val coerce_tmp[3732711]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732717 'move' coerce_tmp[3732711](3732713 'cast' int(32)[66] -1))
          const-val call_tmp[7355074]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7355076 'move' call_tmp[7355074](7355078 '!=' coerce_tmp[3732705] coerce_tmp[3732711]))
          if call_tmp[7355074]
          {
            (3728519 call warning[88179] "Setting precision for integer format specifiers is not supported; use '%n' instead")
          }
          const-val call_tmp[3728522]:(uint(64),bool)[3051128] "dead after last mention" "maybe param" "temp"
          const-val coerce_tmp[3732953]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3732957 'move' coerce_tmp[3732953](3732955 'deref' arg[3727999]))
          val error[5518849]:Error[85511] "error variable" "temp"
          (5518851 'move' error[5518849] nil[32])
          const-val ret[8547992]:(uint(64),bool)[3051128] "dead after last mention" "RVV" "temp"
          const-val call_tmp[8547994]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
          (8547996 'move' call_tmp[8547994](8547998 'cast' uint(64)[86] coerce_tmp[3732953]))
          (9108787 '.=' ret[8547992] x0[3051124] call_tmp[8547994])
          (9108791 '.=' ret[8547992] x1[3051126] 1)
          (5593708 'move' call_tmp[3728522] ret[8547992])
          val errorExists[7306800]:bool[19] "temp"
          (7306805 'move' errorExists[7306800](7306802 '!=' error[5518849] nil[32]))
          if errorExists[7306800]
          {
            (5518855 '=' error_out[5518786] error[5518849])
            gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
          }
          val tmp_x0[9108733]:uint(64)[86] "temp"
          val tmp_x1[9108735]:bool[19] "temp"
          (9108741 'move' tmp_x0[9108733](9108739 '.v' call_tmp[3728522] x0[3051124]))
          (9108746 'move' tmp_x1[9108735](9108744 '.v' call_tmp[3728522] x1[3051126]))
          const-val call_tmp[7351814]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7351816 'move' call_tmp[7351814](7351818 'u!' tmp_x1[9108735]))
          if call_tmp[7351814]
          {
            const-val call_tmp[3728580]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
            (3728582 'move' call_tmp[3728580](3728585 call qio_format_error_arg_mismatch[168158] i[3728001]))
            (7357693 '=' err[3728021] call_tmp[3728580])
          }
          {
            ref call_tmp[8354651]:int(32)[66] "dead after last mention" "maybe param" "temp"
            (8354653 'move' call_tmp[8354651](8354655 'array_get' argType[3728011] i[3728001]))
            const-val coerce_tmp[3733051]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3733055 'move' coerce_tmp[3733051](3733053 'deref' call_tmp[8354651]))
            const-val call_tmp[7348541]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348543 'move' call_tmp[7348541](7348545 '==' coerce_tmp[3733051] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[167983]))
            if call_tmp[7348541]
            {
              const-val call_tmp[3728624]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3733059]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3733063 'move' coerce_tmp[3733059](9229124 '.v' style[3728019] max_width_bytes[164654]))
              (3728626 'move' call_tmp[3728624](3728632 call _write_unsigned[3051637] this[3727995] coerce_tmp[3733059] tmp_x0[9108733] i[3728001]))
              (7357699 '=' err[3728021] call_tmp[3728624])
            }
            {
              val error[5518863]:Error[85511] "error variable" "temp"
              (5518872 'move' error[5518863] nil[32])
              (3728648 call _writeOne[3052255] this[3727995] tmp_x0[9108733] origLocale[3728023] error[5518863])
              val errorExists[7306808]:bool[19] "temp"
              (7306813 'move' errorExists[7306808](7306810 '!=' error[5518863] nil[32]))
              if errorExists[7306808]
              {
                gotoErrorHandling handler[5518864] handler[5518864]
              }
              label handler[5518864]
              val errorExists[7306816]:bool[19] "temp"
              (7306821 'move' errorExists[7306816](7306818 '!=' error[5518863] nil[32]))
              if errorExists[7306816]
              {
                (5518879 '=' error_out[5518786] error[5518863])
                gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
              }
            }
          }
        }
        {
          const-val coerce_tmp[3733074]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (3733078 'move' coerce_tmp[3733074](3733076 'deref' call_tmp[8354631]))
          const-val call_tmp[7348551]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (7348553 'move' call_tmp[7348551](7348555 '==' coerce_tmp[3733074] QIO_CONV_ARG_TYPE_REAL[167988]))
          val tmp[3728679]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[7348551]
          {
            (3728697 'move' tmp[3728679] 1)
          }
          {
            const-val coerce_tmp[3733084]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3733088 'move' coerce_tmp[3733084](3733086 'deref' call_tmp[8354631]))
            const-val call_tmp[7348561]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348563 'move' call_tmp[7348561](7348565 '==' coerce_tmp[3733084] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
            (3728718 'move' tmp[3728679] call_tmp[7348561])
          }
          if tmp[3728679]
          {
            const-val call_tmp[3728733]:(real(32),bool)[3733313] "dead after last mention" "maybe param" "temp"
            const-val coerce_tmp[3733264]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3733268 'move' coerce_tmp[3733264](3733266 'deref' arg[3727999]))
            const-val ret_tmp[5593717]:(real(32),bool)[3733313] "temp"
            (9192366 '.=' ret_tmp[5593717] x0[3733309] coerce_tmp[3733264])
            (9192370 '.=' ret_tmp[5593717] x1[3733311] 1)
            (5593720 'move' call_tmp[3728733] ret_tmp[5593717])
            val tmp_x0[9192322]:real(32)[91] "temp"
            val tmp_x1[9192324]:bool[19] "temp"
            (9192330 'move' tmp_x0[9192322](9192328 '.v' call_tmp[3728733] x0[3733309]))
            (9192335 'move' tmp_x1[9192324](9192333 '.v' call_tmp[3728733] x1[3733311]))
            const-val call_tmp[7351823]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7351825 'move' call_tmp[7351823](7351827 'u!' tmp_x1[9192324]))
            if call_tmp[7351823]
            {
              const-val call_tmp[3728791]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
              (3728793 'move' call_tmp[3728791](3728796 call qio_format_error_arg_mismatch[168158] i[3728001]))
              (7357705 '=' err[3728021] call_tmp[3728791])
            }
            {
              ref call_tmp[8354661]:int(32)[66] "dead after last mention" "maybe param" "temp"
              (8354663 'move' call_tmp[8354661](8354665 'array_get' argType[3728011] i[3728001]))
              const-val coerce_tmp[3733739]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3733743 'move' coerce_tmp[3733739](3733741 'deref' call_tmp[8354661]))
              const-val call_tmp[7348571]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348573 'move' call_tmp[7348571](7348575 '==' coerce_tmp[3733739] QIO_CONV_ARG_TYPE_BINARY_REAL[167993]))
              if call_tmp[7348571]
              {
                const-val call_tmp[3728835]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[3733747]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3733751 'move' coerce_tmp[3733747](9229132 '.v' style[3728019] max_width_bytes[164654]))
                const-val coerce_tmp[3733753]:real(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3733759 'move' coerce_tmp[3733753](3733755 'cast' real(64)[13] tmp_x0[9192322]))
                (3728837 'move' call_tmp[3728835](3728843 call _write_real[3060196] this[3727995] coerce_tmp[3733747] coerce_tmp[3733753] i[3728001]))
                (7357711 '=' err[3728021] call_tmp[3728835])
              }
              {
                val error[5518891]:Error[85511] "error variable" "temp"
                (5518900 'move' error[5518891] nil[32])
                (3728859 call _writeOne[3733769] this[3727995] tmp_x0[9192322] origLocale[3728023] error[5518891])
                val errorExists[7306824]:bool[19] "temp"
                (7306829 'move' errorExists[7306824](7306826 '!=' error[5518891] nil[32]))
                if errorExists[7306824]
                {
                  gotoErrorHandling handler[5518892] handler[5518892]
                }
                label handler[5518892]
                val errorExists[7306832]:bool[19] "temp"
                (7306837 'move' errorExists[7306832](7306834 '!=' error[5518891] nil[32]))
                if errorExists[7306832]
                {
                  (5518907 '=' error_out[5518786] error[5518891])
                  gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                }
              }
            }
          }
          {
            const-val coerce_tmp[3740672]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (3740676 'move' coerce_tmp[3740672](3740674 'deref' call_tmp[8354631]))
            const-val call_tmp[7348581]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (7348583 'move' call_tmp[7348581](7348585 '==' coerce_tmp[3740672] QIO_CONV_ARG_TYPE_IMAG[167998]))
            val tmp[3728890]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[7348581]
            {
              (3728908 'move' tmp[3728890] 1)
            }
            {
              const-val coerce_tmp[3740682]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3740686 'move' coerce_tmp[3740682](3740684 'deref' call_tmp[8354631]))
              const-val call_tmp[7348591]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348593 'move' call_tmp[7348591](7348595 '==' coerce_tmp[3740682] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
              (3728929 'move' tmp[3728890] call_tmp[7348591])
            }
            if tmp[3728890]
            {
              const-val call_tmp[3728944]:(imag(64),bool)[3067847] "dead after last mention" "maybe param" "temp"
              const-val coerce_tmp[3741042]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3741046 'move' coerce_tmp[3741042](3741044 'deref' arg[3727999]))
              val error[5518920]:Error[85511] "error variable" "temp"
              (5518922 'move' error[5518920] nil[32])
              const-val ret[8548148]:(imag(64),bool)[3067847] "dead after last mention" "RVV" "temp"
              const-val call_tmp[8548150]:imag(64)[101] "dead after last mention" "expr temp" "maybe param" "temp"
              (8548152 'move' call_tmp[8548150](8548154 'cast' imag(64)[101] coerce_tmp[3741042]))
              (9108589 '.=' ret[8548148] x0[3067843] call_tmp[8548150])
              (9108593 '.=' ret[8548148] x1[3067845] 1)
              (5593777 'move' call_tmp[3728944] ret[8548148])
              val errorExists[7306840]:bool[19] "temp"
              (7306845 'move' errorExists[7306840](7306842 '!=' error[5518920] nil[32]))
              if errorExists[7306840]
              {
                (5518926 '=' error_out[5518786] error[5518920])
                gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
              }
              val tmp_x0[9108535]:imag(64)[101] "temp"
              val tmp_x1[9108537]:bool[19] "temp"
              (9108543 'move' tmp_x0[9108535](9108541 '.v' call_tmp[3728944] x0[3067843]))
              (9108548 'move' tmp_x1[9108537](9108546 '.v' call_tmp[3728944] x1[3067845]))
              const-val call_tmp[7351832]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7351834 'move' call_tmp[7351832](7351836 'u!' tmp_x1[9108537]))
              if call_tmp[7351832]
              {
                const-val call_tmp[3729002]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                (3729004 'move' call_tmp[3729002](3729007 call qio_format_error_arg_mismatch[168158] i[3728001]))
                (7357765 '=' err[3728021] call_tmp[3729002])
              }
              {
                ref call_tmp[8354671]:int(32)[66] "dead after last mention" "maybe param" "temp"
                (8354673 'move' call_tmp[8354671](8354675 'array_get' argType[3728011] i[3728001]))
                const-val coerce_tmp[3741140]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741144 'move' coerce_tmp[3741140](3741142 'deref' call_tmp[8354671]))
                const-val call_tmp[7348601]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348603 'move' call_tmp[7348601](7348605 '==' coerce_tmp[3741140] QIO_CONV_ARG_TYPE_BINARY_IMAG[168003]))
                if call_tmp[7348601]
                {
                  const-val call_tmp[8356240]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (8356242 'move' call_tmp[8356240](8356244 'cast' real(64)[13] tmp_x0[9108535]))
                  const-val call_tmp[3729054]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[3741149]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741153 'move' coerce_tmp[3741149](9229140 '.v' style[3728019] max_width_bytes[164654]))
                  (3729056 'move' call_tmp[3729054](3729062 call _write_real[3060196] this[3727995] coerce_tmp[3741149] call_tmp[8356240] i[3728001]))
                  (7357771 '=' err[3728021] call_tmp[3729054])
                }
                {
                  val error[5518934]:Error[85511] "error variable" "temp"
                  (5518943 'move' error[5518934] nil[32])
                  (3729078 call _writeOne[3068449] this[3727995] tmp_x0[9108535] origLocale[3728023] error[5518934])
                  val errorExists[7306848]:bool[19] "temp"
                  (7306853 'move' errorExists[7306848](7306850 '!=' error[5518934] nil[32]))
                  if errorExists[7306848]
                  {
                    gotoErrorHandling handler[5518935] handler[5518935]
                  }
                  label handler[5518935]
                  val errorExists[7306856]:bool[19] "temp"
                  (7306861 'move' errorExists[7306856](7306858 '!=' error[5518934] nil[32]))
                  if errorExists[7306856]
                  {
                    (5518950 '=' error_out[5518786] error[5518934])
                    gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                  }
                }
              }
            }
            {
              const-val coerce_tmp[3741164]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (3741168 'move' coerce_tmp[3741164](3741166 'deref' call_tmp[8354631]))
              const-val call_tmp[7348611]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (7348613 'move' call_tmp[7348611](7348615 '==' coerce_tmp[3741164] QIO_CONV_ARG_TYPE_COMPLEX[168008]))
              val tmp[3729109]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[7348611]
              {
                (3729127 'move' tmp[3729109] 1)
              }
              {
                const-val coerce_tmp[3741174]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741178 'move' coerce_tmp[3741174](3741176 'deref' call_tmp[8354631]))
                const-val call_tmp[7348621]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348623 'move' call_tmp[7348621](7348625 '==' coerce_tmp[3741174] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                (3729148 'move' tmp[3729109] call_tmp[7348621])
              }
              if tmp[3729109]
              {
                const-val call_tmp[3729163]:(complex(128),bool)[3077587] "dead after last mention" "maybe param" "temp"
                const-val coerce_tmp[3741542]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741546 'move' coerce_tmp[3741542](3741544 'deref' arg[3727999]))
                val error[5518963]:Error[85511] "error variable" "temp"
                (5518965 'move' error[5518963] nil[32])
                const-val ret[8548336]:(complex(128),bool)[3077587] "dead after last mention" "RVV" "temp"
                const-val call_tmp[8548353]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (8548362 'move' call_tmp[8548353](8548364 'cast' real(64)[13] coerce_tmp[3741542]))
                const-val call_tmp[8548367]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (8548376 'move' call_tmp[8548367](8548378 'cast' real(64)[13] 0))
                const-val call_tmp[8548381]:complex(128)[111] "dead after last mention" "expr temp" "maybe param" "temp"
                (8548383 'move' call_tmp[8548381](8548386 call _chpl_complex128[3741740] call_tmp[8548353] call_tmp[8548367]))
                (9108490 '.=' ret[8548336] x0[3077583] call_tmp[8548381])
                (9108494 '.=' ret[8548336] x1[3077585] 1)
                (5593789 'move' call_tmp[3729163] ret[8548336])
                val errorExists[7306864]:bool[19] "temp"
                (7306869 'move' errorExists[7306864](7306866 '!=' error[5518963] nil[32]))
                if errorExists[7306864]
                {
                  (5518969 '=' error_out[5518786] error[5518963])
                  gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                }
                val tmp_x0[9108436]:complex(128)[111] "temp"
                val tmp_x1[9108438]:bool[19] "temp"
                (9108444 'move' tmp_x0[9108436](9108442 '.v' call_tmp[3729163] x0[3077583]))
                (9108449 'move' tmp_x1[9108438](9108447 '.v' call_tmp[3729163] x1[3077585]))
                const-val call_tmp[7351841]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7351843 'move' call_tmp[7351841](7351845 'u!' tmp_x1[9108438]))
                if call_tmp[7351841]
                {
                  const-val call_tmp[3729221]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (3729223 'move' call_tmp[3729221](3729226 call qio_format_error_arg_mismatch[168158] i[3728001]))
                  (7357777 '=' err[3728021] call_tmp[3729221])
                }
                {
                  ref call_tmp[8354681]:int(32)[66] "dead after last mention" "maybe param" "temp"
                  (8354683 'move' call_tmp[8354681](8354685 'array_get' argType[3728011] i[3728001]))
                  const-val coerce_tmp[3741902]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3741906 'move' coerce_tmp[3741902](3741904 'deref' call_tmp[8354681]))
                  const-val call_tmp[7348631]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7348633 'move' call_tmp[7348631](7348635 '==' coerce_tmp[3741902] QIO_CONV_ARG_TYPE_BINARY_COMPLEX[168013]))
                  if call_tmp[7348631]
                  {
                    const-val call_tmp[3729265]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[3741910]:uint(32)[81] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3741914 'move' coerce_tmp[3741910](9229148 '.v' style[3728019] max_width_bytes[164654]))
                    (3729267 'move' call_tmp[3729265](3729273 call _write_complex[3078407] this[3727995] coerce_tmp[3741910] tmp_x0[9108436] i[3728001]))
                    (7357783 '=' err[3728021] call_tmp[3729265])
                  }
                  {
                    val error[5518977]:Error[85511] "error variable" "temp"
                    (5518986 'move' error[5518977] nil[32])
                    (3729289 call _writeOne[3079967] this[3727995] tmp_x0[9108436] origLocale[3728023] error[5518977])
                    val errorExists[7306872]:bool[19] "temp"
                    (7306877 'move' errorExists[7306872](7306874 '!=' error[5518977] nil[32]))
                    if errorExists[7306872]
                    {
                      gotoErrorHandling handler[5518978] handler[5518978]
                    }
                    label handler[5518978]
                    val errorExists[7306880]:bool[19] "temp"
                    (7306885 'move' errorExists[7306880](7306882 '!=' error[5518977] nil[32]))
                    if errorExists[7306880]
                    {
                      (5518993 '=' error_out[5518786] error[5518977])
                      gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                    }
                  }
                }
              }
              {
                const-val coerce_tmp[3741925]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3741929 'move' coerce_tmp[3741925](3741927 'deref' call_tmp[8354631]))
                const-val call_tmp[7348641]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (7348643 'move' call_tmp[7348641](7348645 '==' coerce_tmp[3741925] QIO_CONV_ARG_TYPE_NUMERIC[167963]))
                if call_tmp[7348641]
                {
                  const-val call_tmp[3729316]:(real(32),bool)[3733313] "dead after last mention" "maybe param" "temp"
                  const-val coerce_tmp[3742105]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3742109 'move' coerce_tmp[3742105](3742107 'deref' arg[3727999]))
                  const-val ret_tmp[5593810]:(real(32),bool)[3733313] "temp"
                  (9192380 '.=' ret_tmp[5593810] x0[3733309] coerce_tmp[3742105])
                  (9192384 '.=' ret_tmp[5593810] x1[3733311] 1)
                  (5593813 'move' call_tmp[3729316] ret_tmp[5593810])
                  val tmp_x0[9192340]:real(32)[91] "temp"
                  val tmp_x1[9192342]:bool[19] "temp"
                  (9192348 'move' tmp_x0[9192340](9192346 '.v' call_tmp[3729316] x0[3733309]))
                  (9192353 'move' tmp_x1[9192342](9192351 '.v' call_tmp[3729316] x1[3733311]))
                  const-val call_tmp[7351850]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7351852 'move' call_tmp[7351850](7351854 'u!' tmp_x1[9192342]))
                  if call_tmp[7351850]
                  {
                    const-val call_tmp[3729374]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                    (3729376 'move' call_tmp[3729374](3729379 call qio_format_error_arg_mismatch[168158] i[3728001]))
                    (7357789 '=' err[3728021] call_tmp[3729374])
                  }
                  {
                    val error[5519005]:Error[85511] "error variable" "temp"
                    (5519014 'move' error[5519005] nil[32])
                    (3729391 call _writeOne[3733769] this[3727995] tmp_x0[9192340] origLocale[3728023] error[5519005])
                    val errorExists[7306888]:bool[19] "temp"
                    (7306893 'move' errorExists[7306888](7306890 '!=' error[5519005] nil[32]))
                    if errorExists[7306888]
                    {
                      gotoErrorHandling handler[5519006] handler[5519006]
                    }
                    label handler[5519006]
                    val errorExists[7306896]:bool[19] "temp"
                    (7306901 'move' errorExists[7306896](7306898 '!=' error[5519005] nil[32]))
                    if errorExists[7306896]
                    {
                      (5519021 '=' error_out[5518786] error[5519005])
                      gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                    }
                  }
                }
                {
                  const-val coerce_tmp[3742159]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (3742163 'move' coerce_tmp[3742159](3742161 'deref' call_tmp[8354631]))
                  const-val call_tmp[7348651]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7348653 'move' call_tmp[7348651](7348655 '==' coerce_tmp[3742159] QIO_CONV_ARG_TYPE_CHAR[168018]))
                  if call_tmp[7348651]
                  {
                    const-val call_tmp[3729417]:(int(32),bool)[3040996] "dead after last mention" "maybe param" "temp"
                    const-val ret_tmp[5593657]:(int(32),bool)[3040996] "temp"
                    (9109166 '.=' ret_tmp[5593657] x0[3040992] 0)
                    (9109170 '.=' ret_tmp[5593657] x1[3040994] 0)
                    (5593660 'move' call_tmp[3729417] ret_tmp[5593657])
                    val tmp_x0[9108984]:int(32)[66] "temp"
                    val tmp_x1[9108986]:bool[19] "temp"
                    (9108992 'move' tmp_x0[9108984](9108990 '.v' call_tmp[3729417] x0[3040992]))
                    (9108997 'move' tmp_x1[9108986](9108995 '.v' call_tmp[3729417] x1[3040994]))
                    const-val call_tmp[7351859]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7351861 'move' call_tmp[7351859](7351863 'u!' tmp_x1[9108986]))
                    if call_tmp[7351859]
                    {
                      const-val call_tmp[3729475]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                      (3729477 'move' call_tmp[3729475](3729480 call qio_format_error_arg_mismatch[168158] i[3728001]))
                      (7357795 '=' err[3728021] call_tmp[3729475])
                    }
                    {
                      val error[5519033]:Error[85511] "error variable" "temp"
                      (5519042 'move' error[5519033] nil[32])
                      const-val call_tmp[3729488]:_internalIoChar[176999] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                      const-val initTemp[3742219]:_internalIoChar[176999] "dead after last mention" "temp"
                      (3742222 call init[1213162] initTemp[3742219] tmp_x0[9108984])
                      (3729490 'move' call_tmp[3729488] initTemp[3742219])
                      (3729499 call _writeOne[3089040] this[3727995] call_tmp[3729488] origLocale[3728023] error[5519033])
                      val errorExists[7306904]:bool[19] "temp"
                      (7306909 'move' errorExists[7306904](7306906 '!=' error[5519033] nil[32]))
                      if errorExists[7306904]
                      {
                        gotoErrorHandling handler[5519034] handler[5519034]
                      }
                      label handler[5519034]
                      val errorExists[7306912]:bool[19] "temp"
                      (7306917 'move' errorExists[7306912](7306914 '!=' error[5519033] nil[32]))
                      if errorExists[7306912]
                      {
                        (5519049 '=' error_out[5518786] error[5519033])
                        gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                      }
                    }
                  }
                  {
                    const-val coerce_tmp[3742237]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (3742241 'move' coerce_tmp[3742237](3742239 'deref' call_tmp[8354631]))
                    const-val call_tmp[7348661]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                    (7348663 'move' call_tmp[7348661](7348665 '==' coerce_tmp[3742237] QIO_CONV_ARG_TYPE_BINARY_STRING[168028]))
                    if call_tmp[7348661]
                    {
                      const-val call_tmp[3729525]:(bytes,bool)[3092705] "dead after last mention" "maybe param" "temp"
                      const-val ret_tmp[5593822]:(bytes,bool)[3092705] "temp"
                      val inlineImm[8548442]:bytes[232] "temp"
                      (8548444 'move' inlineImm[8548442] b"")
                      ref i__e0_x[8548447]:bytes[232] "temp"
                      (8548449 'move' i__e0_x[8548447](8548451 'set reference' inlineImm[8548442]))
                      val ret[8548477]:bytes[232] "dead after last mention" "RVV" "temp"
                      const-val tmp[8548479]:bytes[232] "dead after last mention" "temp"
                      (8548482 call init=[33890] tmp[8548479] i__e0_x[8548447])
                      (8548485 'move' ret[8548477] tmp[8548479])
                      (8548499 'noop')
                      (9011384 '.=' ret_tmp[5593822] x0[3092701] ret[8548477])
                      (9011388 '.=' ret_tmp[5593822] x1[3092703] 0)
                      (5593825 'move' call_tmp[3729525] ret_tmp[5593822])
                      val tmp_x0[9011326]:bytes[232] "temp"
                      val tmp_x1[9011328]:bool[19] "temp"
                      (9011334 'move' tmp_x0[9011326](9011332 '.v' call_tmp[3729525] x0[3092701]))
                      (9011339 'move' tmp_x1[9011328](9011337 '.v' call_tmp[3729525] x1[3092703]))
                      const-ref call_tmp[3729542]:bytes[232] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                      (3729544 'move' call_tmp[3729542](9011341 'set reference' tmp_x0[9011326]))
                      const-val t[3729549]:bytes[232] "dead at end of block" "insert auto destroy"
                      (3729551 call init=[33890] t[3729549] call_tmp[3729542])
                      const-val call_tmp[7351868]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7351870 'move' call_tmp[7351868](7351872 'u!' tmp_x1[9011328]))
                      if call_tmp[7351868]
                      {
                        const-val call_tmp[3729583]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                        (3729585 'move' call_tmp[3729583](3729588 call qio_format_error_arg_mismatch[168158] i[3728001]))
                        (7357801 '=' err[3728021] call_tmp[3729583])
                      }
                      {
                        val error[5519061]:Error[85511] "error variable" "temp"
                        (5519070 'move' error[5519061] nil[32])
                        (3729600 call _writeOne[3093219] this[3727995] t[3729549] origLocale[3728023] error[5519061])
                        val errorExists[7306920]:bool[19] "temp"
                        (7306925 'move' errorExists[7306920](7306922 '!=' error[5519061] nil[32]))
                        if errorExists[7306920]
                        {
                          gotoErrorHandling handler[5519062] handler[5519062]
                        }
                        label handler[5519062]
                        val errorExists[7306928]:bool[19] "temp"
                        (7306933 'move' errorExists[7306928](7306930 '!=' error[5519061] nil[32]))
                        if errorExists[7306928]
                        {
                          (5519077 '=' error_out[5518786] error[5519061])
                          ref i_x[7610181]:bytes[232] "temp"
                          (7610185 'move' i_x[7610181](7610183 'set reference' t[3729549]))
                          (7610189 call deinit[33658] i_x[7610181])
                          ref _field_destructor_tmp_[8619639]:bytes[232] "temp"
                          (8619641 'move' _field_destructor_tmp_[8619639](9011345 'set reference' tmp_x0[9011326]))
                          (8619647 call deinit[33658] _field_destructor_tmp_[8619639])
                          gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                        }
                      }
                      ref i_x[7610193]:bytes[232] "temp"
                      (7610197 'move' i_x[7610193](7610195 'set reference' t[3729549]))
                      (7610201 call deinit[33658] i_x[7610193])
                      ref _field_destructor_tmp_[8619658]:bytes[232] "temp"
                      (8619660 'move' _field_destructor_tmp_[8619658](9011347 'set reference' tmp_x0[9011326]))
                      (8619666 call deinit[33658] _field_destructor_tmp_[8619658])
                    }
                    {
                      const-val coerce_tmp[3742334]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (3742338 'move' coerce_tmp[3742334](3742336 'deref' call_tmp[8354631]))
                      const-val call_tmp[7348671]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                      (7348673 'move' call_tmp[7348671](7348675 '==' coerce_tmp[3742334] QIO_CONV_ARG_TYPE_STRING[168023]))
                      if call_tmp[7348671]
                      {
                        const-val call_tmp[3729626]:(string,bool)[3103815] "dead after last mention" "maybe param" "temp"
                        const-val coerce_tmp[3742614]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3742618 'move' coerce_tmp[3742614](3742616 'deref' arg[3727999]))
                        const-val ret[8548550]:(string,bool)[3103815] "dead after last mention" "RVV" "temp"
                        const-val call_tmp[8548552]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val call_tmp[8548554]:real(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (8548556 'move' call_tmp[8548554](8548558 'cast' real(64)[13] coerce_tmp[3742614]))
                        const-val call_tmp[8548561]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[8548563]:string[244] "temp"
                        (8548566 call _real_cast_helper[3103452] call_tmp[8548554] ret_tmp[8548563])
                        (8548569 'move' call_tmp[8548561] ret_tmp[8548563])
                        (8548572 'move' call_tmp[8548552] call_tmp[8548561])
                        ref i__e0_x[8548575]:string[244] "temp"
                        (8548577 'move' i__e0_x[8548575](8548579 'set reference' call_tmp[8548552]))
                        val ret[8548605]:string[244] "dead after last mention" "RVV" "temp"
                        const-val tmp[8548607]:string[244] "dead after last mention" "temp"
                        (8548610 call init=[21330] tmp[8548607] i__e0_x[8548575])
                        (8548613 'move' ret[8548605] tmp[8548607])
                        (8548627 'noop')
                        (9011567 '.=' ret[8548550] x0[3103811] ret[8548605])
                        (9011571 '.=' ret[8548550] x1[3103813] 1)
                        ref i_x[8548635]:string[244] "temp"
                        (8548637 'move' i_x[8548635](8548639 'set reference' call_tmp[8548552]))
                        (8548642 call deinit[21354] i_x[8548635])
                        (5593837 'move' call_tmp[3729626] ret[8548550])
                        val tmp_x0[9011509]:string[244] "temp"
                        val tmp_x1[9011511]:bool[19] "temp"
                        (9011517 'move' tmp_x0[9011509](9011515 '.v' call_tmp[3729626] x0[3103811]))
                        (9011522 'move' tmp_x1[9011511](9011520 '.v' call_tmp[3729626] x1[3103813]))
                        const-ref call_tmp[3729643]:string[244] "dead after last mention" "insert auto destroy" "maybe param" "temp"
                        (3729645 'move' call_tmp[3729643](9011524 'set reference' tmp_x0[9011509]))
                        const-val t[3729650]:string[244] "dead at end of block" "insert auto destroy"
                        (3729652 call init=[21330] t[3729650] call_tmp[3729643])
                        const-val call_tmp[7351877]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7351879 'move' call_tmp[7351877](7351881 'u!' tmp_x1[9011511]))
                        if call_tmp[7351877]
                        {
                          const-val call_tmp[3729684]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3729686 'move' call_tmp[3729684](3729689 call qio_format_error_arg_mismatch[168158] i[3728001]))
                          (7357807 '=' err[3728021] call_tmp[3729684])
                        }
                        {
                          val error[5519089]:Error[85511] "error variable" "temp"
                          (5519098 'move' error[5519089] nil[32])
                          (3729701 call _writeOne[1845361] this[3727995] t[3729650] origLocale[3728023] error[5519089])
                          val errorExists[7306936]:bool[19] "temp"
                          (7306941 'move' errorExists[7306936](7306938 '!=' error[5519089] nil[32]))
                          if errorExists[7306936]
                          {
                            gotoErrorHandling handler[5519090] handler[5519090]
                          }
                          label handler[5519090]
                          val errorExists[7306944]:bool[19] "temp"
                          (7306949 'move' errorExists[7306944](7306946 '!=' error[5519089] nil[32]))
                          if errorExists[7306944]
                          {
                            (5519105 '=' error_out[5518786] error[5519089])
                            ref i_x[7343350]:string[244] "temp"
                            (7343354 'move' i_x[7343350](7343352 'set reference' t[3729650]))
                            (7343358 call deinit[21354] i_x[7343350])
                            ref _field_destructor_tmp_[8619753]:string[244] "temp"
                            (8619755 'move' _field_destructor_tmp_[8619753](9011528 'set reference' tmp_x0[9011509]))
                            (8619761 call deinit[21354] _field_destructor_tmp_[8619753])
                            gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                          }
                        }
                        ref i_x[7343362]:string[244] "temp"
                        (7343366 'move' i_x[7343362](7343364 'set reference' t[3729650]))
                        (7343370 call deinit[21354] i_x[7343362])
                        ref _field_destructor_tmp_[8619772]:string[244] "temp"
                        (8619774 'move' _field_destructor_tmp_[8619772](9011530 'set reference' tmp_x0[9011509]))
                        (8619780 call deinit[21354] _field_destructor_tmp_[8619772])
                      }
                      {
                        const-val coerce_tmp[3743189]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (3743193 'move' coerce_tmp[3743189](3743191 'deref' call_tmp[8354631]))
                        const-val call_tmp[7348681]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                        (7348683 'move' call_tmp[7348681](7348685 '==' coerce_tmp[3743189] QIO_CONV_ARG_TYPE_REGEX[168038]))
                        if call_tmp[7348681]
                        {
                          const-val call_tmp[3729727]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                          (3729729 'move' call_tmp[3729727](3729732 call qio_format_error_write_regex[168174]))
                          (7357813 '=' err[3728021] call_tmp[3729727])
                        }
                        {
                          const-val coerce_tmp[3743204]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (3743208 'move' coerce_tmp[3743204](3743206 'deref' call_tmp[8354631]))
                          const-val call_tmp[7348691]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                          (7348693 'move' call_tmp[7348691](7348695 '==' coerce_tmp[3743204] QIO_CONV_ARG_TYPE_SERDE[168033]))
                          if call_tmp[7348691]
                          {
                            const-val coerce_tmp[3743611]:real(32)[91] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3743615 'move' coerce_tmp[3743611](3743613 'deref' arg[3727999]))
                            val error[5519118]:Error[85511] "error variable" "temp"
                            (5519120 'move' error[5519118] nil[32])
                            (3729820 call _serializeOne[3743221] this[3727995] coerce_tmp[3743611] origLocale[3728023] error[5519118])
                            val errorExists[7306952]:bool[19] "temp"
                            (7306957 'move' errorExists[7306952](7306954 '!=' error[5519118] nil[32]))
                            if errorExists[7306952]
                            {
                              (5519124 '=' error_out[5518786] error[5519118])
                              gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                            }
                          }
                          {
                            const-val call_tmp[3729836]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5546581]:string[244] "temp"
                            (3729841 call :[1496816] i[3728001] ret_tmp[5546581])
                            (5546584 'move' call_tmp[3729836] ret_tmp[5546581])
                            const-val call_tmp[3729844]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540406]:string[244] "temp"
                            (3729849 call +[28065] "illegal argument 'args(" call_tmp[3729836] ret_tmp[5540406])
                            (5540409 'move' call_tmp[3729844] ret_tmp[5540406])
                            const-val call_tmp[3729852]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540412]:string[244] "temp"
                            (3729857 call +[28065] call_tmp[3729844] ")': writef internal error " ret_tmp[5540412])
                            (5540415 'move' call_tmp[3729852] ret_tmp[5540412])
                            ref call_tmp[8354691]:int(32)[66] "dead after last mention" "maybe param" "temp"
                            (8354693 'move' call_tmp[8354691](8354695 'array_get' argType[3728011] i[3728001]))
                            const-val call_tmp[3729867]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val coerce_tmp[3744295]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (3744299 'move' coerce_tmp[3744295](3744297 'deref' call_tmp[8354691]))
                            const-val ret_tmp[5555484]:string[244] "temp"
                            (3729872 call :[1816123] coerce_tmp[3744295] ret_tmp[5555484])
                            (5555487 'move' call_tmp[3729867] ret_tmp[5555484])
                            const-val call_tmp[3729875]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[5540418]:string[244] "temp"
                            (3729880 call +[28065] call_tmp[3729852] call_tmp[3729867] ret_tmp[5540418])
                            (5540421 'move' call_tmp[3729875] ret_tmp[5540418])
                            const-val call_tmp[3729883]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
                            val new_temp[3744326]:IllegalArgumentError[85616] "dead after last mention" "temp"
                            (3744328 'move' new_temp[3744326](3744313 call _new[1475209] call_tmp[3729875]))
                            const-val initTemp[3744335]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
                            (3744338 call init[1475364] initTemp[3744335] new_temp[3744326])
                            (3729885 'move' call_tmp[3729883] initTemp[3744335])
                            val call_tmp[3729892]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[3744352]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
                            const-val ret_tmp[5547253]:owned Error[1498203] "temp"
                            ref i_x[7647183]:owned IllegalArgumentError[1475882] "temp"
                            (7647187 'move' i_x[7647183](7647185 'set reference' call_tmp[3729883]))
                            ref i__retArg[7647189]:owned Error[1498203] "temp"
                            (7647193 'move' i__retArg[7647189](7647191 'set reference' ret_tmp[5547253]))
                            val _formal_tmp_x[7647196]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
                            (7647198 'move' _formal_tmp_x[7647196] i_x[7647183])
                            const-val ret[7647201]:owned Error[1498203] "dead after last mention" "RVV" "temp"
                            ref i_this[7647203]:owned IllegalArgumentError[1475882] "temp"
                            (7647205 'move' i_this[7647203](7647207 'set reference' _formal_tmp_x[7647196]))
                            val coerce_tmp[7647209]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (7647211 'move' coerce_tmp[7647209](7647213 '.v' i_this[7647203] chpl_p[1475877]))
                            val call_tmp[7647216]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                            (7647218 'move' call_tmp[7647216](7647220 'cast' Error[85511] coerce_tmp[7647209]))
                            ref i_this[7647228]:owned IllegalArgumentError[1475882] "temp"
                            (7647230 'move' i_this[7647228](7647232 'set reference' _formal_tmp_x[7647196]))
                            val tmp[7647234]:IllegalArgumentError[85616] "temp"
                            (7647236 'move' tmp[7647234](7647238 'cast' IllegalArgumentError[85616] nil[32]))
                            (7647241 '.=' i_this[7647228] chpl_p[1475877] tmp[7647234])
                            val coerce_tmp[7647245]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (7647247 'move' coerce_tmp[7647245](7647249 'cast' RootClass[236] call_tmp[7647216]))
                            const-val call_tmp[7647252]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                            (7647254 'move' call_tmp[7647252](7647256 '==' coerce_tmp[7647245] nil[32]))
                            if call_tmp[7647252]
                            {
                              (7647262 call nilCheckHalt[392] "argument to ! is nil")
                            }
                            const-val call_tmp[7647265]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
                            const-val initTemp[7647267]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
                            (7647270 call init[1499358] initTemp[7647267] call_tmp[7647216])
                            (7647273 'move' call_tmp[7647265] initTemp[7647267])
                            (7647276 'move' ret[7647201] call_tmp[7647265])
                            (7647280 call chpl__autoDestroy[3929468] _formal_tmp_x[7647196])
                            (7647284 '=' i__retArg[7647189] ret[7647201])
                            (5547256 'move' coerce_tmp[3744352] ret_tmp[5547253])
                            const-val _formal_tmp_in_err[3744571]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
                            (3744576 'move' _formal_tmp_in_err[3744571] coerce_tmp[3744352])
                            (3729894 'move' call_tmp[3729892](3729897 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3744571]))
                            (5519141 '=' error_out[5518786] call_tmp[3729892])
                            ref i_x[7343374]:string[244] "temp"
                            (7343378 'move' i_x[7343374](7343376 'set reference' call_tmp[3729875]))
                            (7343382 call deinit[21354] i_x[7343374])
                            ref i_x[7343386]:string[244] "temp"
                            (7343390 'move' i_x[7343386](7343388 'set reference' call_tmp[3729867]))
                            (7343394 call deinit[21354] i_x[7343386])
                            ref i_x[7343398]:string[244] "temp"
                            (7343402 'move' i_x[7343398](7343400 'set reference' call_tmp[3729852]))
                            (7343406 call deinit[21354] i_x[7343398])
                            ref i_x[7343410]:string[244] "temp"
                            (7343414 'move' i_x[7343410](7343412 'set reference' call_tmp[3729844]))
                            (7343418 call deinit[21354] i_x[7343410])
                            ref i_x[7343422]:string[244] "temp"
                            (7343426 'move' i_x[7343422](7343424 'set reference' call_tmp[3729836]))
                            (7343430 call deinit[21354] i_x[7343422])
                            gotoErrorHandlingReturn _end_writefOne[5518788] _end_writefOne[5518788]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_writefOne[5518788]
    (3729913 return _void[46])
  }
  function fileWriter(false,defaultSerializer)[1838949].writef[3032440](const  ref arg this[3032446]:fileWriter(false,defaultSerializer)[1838949], const  ref arg fmtStr[3032448]:string[244], const in arg _e0_args[3032450]:real(64)[13], ref arg error_out[5503089]:Error[85511]) : void[4] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val local_nilLocale[9285469]:locale[234] "temp"
    (9285470 'move' local_nilLocale[9285469] nilLocale[135253])
    val args_x0[9110051]:real(64)[13]
    (9110057 'move' args_x0[9110051] _e0_args[3032450])
    const-val ret[7859858]:locale[234] "dead after last mention" "RVV" "temp"
    ref call_tmp[7859860]:locale[234] "dead after last mention" "maybe param" "temp"
    (7859862 'move' call_tmp[7859860](7859864 '.' this[3032446] _readWriteThisFromLocale[1838946]))
    val ret[7859867]:locale[234] "dead at end of block" "insert auto destroy"
    (7859870 call init=[135460] ret[7859867] call_tmp[7859860])
    const-val call_tmp[7859873]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7859875 'move' call_tmp[7859873](7859878 call ==[1003295] ret[7859867] local_nilLocale[9285469]))
    if call_tmp[7859873]
    {
      const-val call_tmp[7859883]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7859885]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7859887]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7859889 'move' call_tmp[7859887](7859892 call chpl_nodeID[305038]))
      const-val call_tmp[7859893]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (7859895 'move' call_tmp[7859893](7859898 call chpl_rt_buildLocaleID[306484] call_tmp[7859887] c_sublocid_any[135202]))
      (7859901 'move' call_tmp[7859885] call_tmp[7859893])
      const-val call_tmp[7859904]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[7859906]:locale[234] "temp"
      (7859909 call chpl_localeID_to_locale[137251] call_tmp[7859885] ret_tmp[7859906])
      (7859912 'move' call_tmp[7859904] ret_tmp[7859906])
      (7859915 'move' call_tmp[7859883] call_tmp[7859904])
      (7859919 call =[135747] ret[7859867] call_tmp[7859883])
      ref i_x[7859922]:locale[234] "temp"
      (7859924 'move' i_x[7859922](7859926 'set reference' call_tmp[7859883]))
      (7859929 call deinit[135483] i_x[7859922])
    }
    (7859932 'move' ret[7859858] ret[7859867])
    const-val origLocale[3032590]:locale[234] "dead at end of block" "const" "insert auto destroy"
    (3032592 'move' origLocale[3032590] ret[7859858])
    val err[3032596]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[7355890]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7355892 'move' call_tmp[7355890](7355894 'cast' int(32)[66] 0))
    const-val call_tmp[7355897]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7355899 'move' call_tmp[7355897](7355902 call qio_int_to_err[12856] call_tmp[7355890]))
    (3032598 'move' err[3032596] call_tmp[7355897])
    ref call_tmp[7857454]:locale[234] "dead after last mention" "maybe param" "temp"
    (7857456 'move' call_tmp[7857454](7857458 '.' this[3032446] _home[1838930]))
    val coerce_tmp[7545396]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7545398 'move' coerce_tmp[7545396](7545400 '.v' call_tmp[7857454] _instance[135293]))
    val coerce_tmp[7545403]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7545405 'move' coerce_tmp[7545403](7545407 'cast' RootClass[236] coerce_tmp[7545396]))
    const-val call_tmp[7545410]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7545412 'move' call_tmp[7545410](7545414 '==' coerce_tmp[7545403] nil[32]))
    if call_tmp[7545410]
    {
      (7545420 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[5503093]:Error[85511] "error variable" "temp"
    (5503102 'move' error[5503093] nil[32])
    const-val call_tmp[7862678]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7862680 'move' call_tmp[7862678](7862682 'cast' int(32)[66] 0))
    const-val call_tmp[7862685]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7862687 'move' call_tmp[7862685](7862690 call qio_int_to_err[12856] call_tmp[7862678]))
    val coerce_tmp[7862695]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7862697 'move' coerce_tmp[7862695](7862699 '.v' this[3032446] _channel_internal[1838935]))
    const-val call_tmp[7862702]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7862704 'move' call_tmp[7862702](7862706 'ptr_eq' coerce_tmp[7862695] nil[32]))
    if call_tmp[7862702]
    {
      const-val call_tmp[7862711]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[7862713]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7862715 'move' coerce_tmp[7862713](7862717 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[7862720]:owned SystemError[1554765] "temp"
      (7862723 call createSystemError[14072] coerce_tmp[7862713] "Operation attempted on an invalid fileWriter" ret_tmp[7862720])
      (7862727 'move' call_tmp[7862711] ret_tmp[7862720])
      val call_tmp[7862730]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7862732]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[7862734]:owned Error[1498203] "temp"
      ref i_x[7862736]:owned SystemError[1554765] "temp"
      (7862738 'move' i_x[7862736](7862740 'set reference' call_tmp[7862711]))
      ref i__retArg[7862742]:owned Error[1498203] "temp"
      (7862744 'move' i__retArg[7862742](7862746 'set reference' ret_tmp[7862734]))
      val _formal_tmp_x[7862748]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (7862750 'move' _formal_tmp_x[7862748] i_x[7862736])
      const-val ret[7862753]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[7862755]:owned SystemError[1554765] "temp"
      (7862757 'move' i_this[7862755](7862759 'set reference' _formal_tmp_x[7862748]))
      val coerce_tmp[7862761]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7862763 'move' coerce_tmp[7862761](7862765 '.v' i_this[7862755] chpl_p[1554760]))
      val call_tmp[7862768]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (7862770 'move' call_tmp[7862768](7862772 'cast' Error[85511] coerce_tmp[7862761]))
      ref i_this[7862780]:owned SystemError[1554765] "temp"
      (7862782 'move' i_this[7862780](7862784 'set reference' _formal_tmp_x[7862748]))
      val tmp[7862786]:SystemError[13599] "temp"
      (7862788 'move' tmp[7862786](7862790 'cast' SystemError[13599] nil[32]))
      (7862793 '.=' i_this[7862780] chpl_p[1554760] tmp[7862786])
      val coerce_tmp[7862797]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7862799 'move' coerce_tmp[7862797](7862801 'cast' RootClass[236] call_tmp[7862768]))
      const-val call_tmp[7862804]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7862806 'move' call_tmp[7862804](7862808 '==' coerce_tmp[7862797] nil[32]))
      if call_tmp[7862804]
      {
        (7862814 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[7862817]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[7862819]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (7862822 call init[1499358] initTemp[7862819] call_tmp[7862768])
      (7862825 'move' call_tmp[7862817] initTemp[7862819])
      (7862828 'move' ret[7862753] call_tmp[7862817])
      (7862832 call chpl__autoDestroy[3968549] _formal_tmp_x[7862748])
      (7862834 '=' i__retArg[7862742] ret[7862753])
      (7862837 'move' coerce_tmp[7862732] ret_tmp[7862734])
      const-val _formal_tmp_in_err[7862840]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (7862842 'move' _formal_tmp_in_err[7862840] coerce_tmp[7862732])
      (7862845 'move' call_tmp[7862730](7862848 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[7862840]))
      (7862850 '=' error[5503093] call_tmp[7862730])
      gotoErrorHandlingReturn _endlock[7862913] _endlock[7862913]
    }
    const-val call_tmp[7862856]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7862858 'move' call_tmp[7862856](7862861 call qio_err_iserr[12868] call_tmp[7862685]))
    const-val call_tmp[7862863]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7862865 'move' call_tmp[7862863](7862867 '!=' call_tmp[7862856] 0))
    if call_tmp[7862863]
    {
      val error[7862872]:Error[85511] "error variable" "temp"
      (7862874 'move' error[7862872] nil[32])
      (7862878 call _ch_ioerror[1841920] this[3032446] call_tmp[7862685] "in lock" error[7862872])
      val errorExists[7862883]:bool[19] "temp"
      (7862885 'move' errorExists[7862883](7862887 '!=' error[7862872] nil[32]))
      if errorExists[7862883]
      {
        gotoErrorHandling handler[7862895] handler[7862895]
      }
      label handler[7862895]
      val errorExists[7862897]:bool[19] "temp"
      (7862899 'move' errorExists[7862897](7862901 '!=' error[7862872] nil[32]))
      if errorExists[7862897]
      {
        (7862906 '=' error[5503093] error[7862872])
        gotoErrorHandlingReturn _endlock[7862913] _endlock[7862913]
      }
    }
    label _endlock[7862913]
    val errorExists[7299520]:bool[19] "temp"
    (7299525 'move' errorExists[7299520](7299522 '!=' error[5503093] nil[32]))
    if errorExists[7299520]
    {
      gotoErrorHandling handler[5503094] handler[5503094]
    }
    label handler[5503094]
    val errorExists[7299528]:bool[19] "temp"
    (7299533 'move' errorExists[7299528](7299530 '!=' error[5503093] nil[32]))
    if errorExists[7299528]
    {
      (5503109 '=' error_out[5503089] error[5503093])
      ref i_x[7552211]:locale[234] "temp"
      (7552215 'move' i_x[7552211](7552213 'set reference' origLocale[3032590]))
      (7552219 call deinit[135483] i_x[7552211])
      gotoErrorHandlingReturn _endwritef[5503091] _endwritef[5503091]
    }
    const-val call_tmp[3032642]:iostyleInternal[164872] "dead at end of block" "maybe param" "temp"
    (3032644 'move' call_tmp[3032642](3032650 call _styleInternal[3033070] this[3032446]))
    const-val save_style[3032651]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3032653 'move' save_style[3032651] call_tmp[3032642])
    val cur[3032668]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3032670 'move' cur[3032668] 0)
    val ret[7399352]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7399354 '=' ret[7399352](7399356 '.v' fmtStr[3032448] cachedNumCodepoints[21293]))
    const-val call_tmp[3032683]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3032685 'move' call_tmp[3032683](3032688 'cast' uint(64)[86] ret[7399352]))
    const-val len[3032691]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3032693 'move' len[3032691] call_tmp[3032683])
    val conv[3032698]:qio_conv_t[167955] "dead at end of block" "insert auto destroy"
    (3105757 'zero variable' conv[3032698])
    val gotConv[3032704]:bool[19] "dead at end of block" "insert auto destroy"
    (3105760 'move' gotConv[3032704] 0)
    val style[3032710]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3105762 'zero variable' style[3032710])
    val argType[3032730]:c_array(int(32),6)[3033347] "dead at end of block" "insert auto destroy"
    (3105766 call init[3105773] argType[3032730])
    const-val _ic__F1_high[9017317]:int(64)[10] "temp"
    (7454033 'move' _ic__F1_high[9017317] 5)
    val i[6042906]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6042910 'move' i[6042906] 0)
    (6042970 call chpl_checkIfRangeIterWillOverflow[1518856] 0 5 1 0 5 1)
    CForLoop[6042977] hazard
    {
      ref i_this[8353864]:c_array(int(32),6)[3033347] "temp"
      (8353868 'move' i_this[8353864](8353866 'set reference' argType[3032730]))
      const-val tmp[8353871]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8353873 'move' tmp[8353871](8353875 '<' i[6042906] 0))
      val tmp[8353878]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if tmp[8353871]
      {
        (8353882 'move' tmp[8353878] 1)
      }
      {
        const-val call_tmp[8353886]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8353888 'move' call_tmp[8353886](8353890 '>=' i[6042906] 6))
        (8353893 'move' tmp[8353878] call_tmp[8353886])
      }
      if tmp[8353878]
      {
        const-val call_tmp[8353899]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8353901]:string[244] "temp"
        (8353904 call :[1496816] i[6042906] ret_tmp[8353901])
        (8353907 'move' call_tmp[8353899] ret_tmp[8353901])
        const-val call_tmp[8353910]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8353912]:string[244] "temp"
        (8353915 call +[28065] "c array index out of bounds " call_tmp[8353899] ret_tmp[8353912])
        (8353919 'move' call_tmp[8353910] ret_tmp[8353912])
        const-val call_tmp[8353922]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8353924]:string[244] "temp"
        (8353927 call +[28065] call_tmp[8353910] "(indices are 0.." ret_tmp[8353924])
        (8353931 'move' call_tmp[8353922] ret_tmp[8353924])
        const-val call_tmp[8353934]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8353936]:string[244] "temp"
        (8353939 call +[28065] call_tmp[8353922] "5" ret_tmp[8353936])
        (8353943 'move' call_tmp[8353934] ret_tmp[8353936])
        const-val call_tmp[8353946]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8353948]:string[244] "temp"
        (8353951 call +[28065] call_tmp[8353934] ")" ret_tmp[8353948])
        (8353955 'move' call_tmp[8353946] ret_tmp[8353948])
        (8353959 call boundsCheckHalt[404] call_tmp[8353946])
        ref i_x[8353961]:string[244] "temp"
        (8353963 'move' i_x[8353961](8353965 'set reference' call_tmp[8353946]))
        (8353968 call deinit[21354] i_x[8353961])
        ref i_x[8353970]:string[244] "temp"
        (8353972 'move' i_x[8353970](8353974 'set reference' call_tmp[8353934]))
        (8353977 call deinit[21354] i_x[8353970])
        ref i_x[8353979]:string[244] "temp"
        (8353981 'move' i_x[8353979](8353983 'set reference' call_tmp[8353922]))
        (8353986 call deinit[21354] i_x[8353979])
        ref i_x[8353988]:string[244] "temp"
        (8353990 'move' i_x[8353988](8353992 'set reference' call_tmp[8353910]))
        (8353995 call deinit[21354] i_x[8353988])
        ref i_x[8353997]:string[244] "temp"
        (8353999 'move' i_x[8353997](8354001 'set reference' call_tmp[8353899]))
        (8354004 call deinit[21354] i_x[8353997])
      }
      ref call_tmp[8354007]:int(32)[66] "dead after last mention" "maybe param" "temp"
      (8354009 'move' call_tmp[8354007](8354011 'array_get' i_this[8353864] i[6042906]))
      (7490286 '=' call_tmp[8354007] QIO_CONV_UNK[167958])
      {
        (6042986 '=' i[6042906] 0)
      }
      {
        (6042997 '<=' i[6042906] _ic__F1_high[9017317])
      }
      {
        (6043005 '+=' i[6042906] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6043039]
    label _endchpl_direct_range_iter[6043044]
    val j[3032819]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3032821 'move' j[3032819] 0)
    const-ref call_tmp[3034049]:real(64)[13] "dead after last mention" "maybe param" "temp"
    (3034051 'move' call_tmp[3034049](9110059 'set reference' args_x0[9110051]))
    ref i_this[8354321]:c_array(int(32),6)[3033347] "temp"
    (8354325 'move' i_this[8354321](8354323 'set reference' argType[3032730]))
    ref call_tmp[8354328]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (8354330 'move' call_tmp[8354328](8354332 'array_get' i_this[8354321] 0))
    val call_tmp[8354380]:c_ptr(int(32))[3035159] "dead after last mention" "expr temp" "maybe param" "temp"
    (8354382 'move' call_tmp[8354380](8354385 call c_pointer_return[3035240] call_tmp[8354328]))
    val error[5503122]:Error[85511] "error variable" "temp"
    (5503124 'move' error[5503122] nil[32])
    (3034074 call _writefOne[3035286] this[3032446] fmtStr[3032448] call_tmp[3034049] 0 cur[3032668] j[3032819] call_tmp[8354380] 6 conv[3032698] gotConv[3032704] style[3032710] err[3032596] origLocale[3032590] len[3032691] error[5503122])
    val errorExists[7299536]:bool[19] "temp"
    (7299541 'move' errorExists[7299536](7299538 '!=' error[5503122] nil[32]))
    if errorExists[7299536]
    {
      (5503128 '=' error_out[5503089] error[5503122])
      ref i_x[8618872]:c_array(int(32),6)[3033347] "temp"
      (8618876 'move' i_x[8618872](8618874 'set reference' argType[3032730]))
      (8618880 call deinit[4184480] i_x[8618872])
      (5630058 call _set_styleInternal[3033186] this[3032446] save_style[3032651])
      ref i_x[7552223]:locale[234] "temp"
      (7552227 'move' i_x[7552223](7552225 'set reference' origLocale[3032590]))
      (7552231 call deinit[135483] i_x[7552223])
      gotoErrorHandlingReturn _endwritef[5503091] _endwritef[5503091]
    }
    const-val call_tmp[7354770]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354772 'move' call_tmp[7354770](7354775 call qio_err_iserr[12868] err[3032596]))
    const-val call_tmp[7354777]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354779 'move' call_tmp[7354777](7354781 '==' call_tmp[7354770] 0))
    if call_tmp[7354777]
    {
      const-val tmp[7566028]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7566030 'move' tmp[7566028](7566032 '<' cur[3032668] len[3032691]))
      if tmp[7566028]
      {
        (3032973 call _format_reader[3037225] this[3032446] fmtStr[3032448] cur[3032668] len[3032691] err[3032596] conv[3032698] gotConv[3032704] style[3032710])
      }
      const-val tmp[7566038]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7566040 'move' tmp[7566038](7566042 '<' cur[3032668] len[3032691]))
      if tmp[7566038]
      {
        const-val call_tmp[3033006]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        (3033008 'move' call_tmp[3033006](3033011 call qio_format_error_too_few_args[168152]))
        (7357213 '=' err[3032596] call_tmp[3033006])
      }
    }
    ref i_x[8618884]:c_array(int(32),6)[3033347] "temp"
    (8618888 'move' i_x[8618884](8618886 'set reference' argType[3032730]))
    (8618892 call deinit[4184480] i_x[8618884])
    (5630079 call _set_styleInternal[3033186] this[3032446] save_style[3032651])
    const-val call_tmp[7654622]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654624 'move' call_tmp[7654622](7654627 call qio_err_iserr[12868] err[3032596]))
    const-val call_tmp[7654629]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654631 'move' call_tmp[7654629](7654633 '!=' call_tmp[7654622] 0))
    if call_tmp[7654629]
    {
      val error[5503136]:Error[85511] "error variable" "temp"
      (5503145 'move' error[5503136] nil[32])
      (3033034 call _ch_ioerror[1841920] this[3032446] err[3032596] "in fileWriter.writef(fmt:string)" error[5503136])
      val errorExists[7299544]:bool[19] "temp"
      (7299549 'move' errorExists[7299544](7299546 '!=' error[5503136] nil[32]))
      if errorExists[7299544]
      {
        gotoErrorHandling handler[5503137] handler[5503137]
      }
      label handler[5503137]
      val errorExists[7299552]:bool[19] "temp"
      (7299557 'move' errorExists[7299552](7299554 '!=' error[5503136] nil[32]))
      if errorExists[7299552]
      {
        (5503152 '=' error_out[5503089] error[5503136])
        ref i_x[7552235]:locale[234] "temp"
        (7552239 'move' i_x[7552235](7552237 'set reference' origLocale[3032590]))
        (7552243 call deinit[135483] i_x[7552235])
        gotoErrorHandlingReturn _endwritef[5503091] _endwritef[5503091]
      }
    }
    ref i_x[7552247]:locale[234] "temp"
    (7552251 'move' i_x[7552247](7552249 'set reference' origLocale[3032590]))
    (7552255 call deinit[135483] i_x[7552247])
    label _endwritef[5503091]
    (3033041 return _void[46])
  }
  function fileWriter(false,defaultSerializer)[1838949].writef[3318270](const  ref arg this[3318276]:fileWriter(false,defaultSerializer)[1838949], const  ref arg fmtStr[3318278]:string[244], const  ref arg _e0_args[3318280]:string[244], ref arg error_out[5508605]:Error[85511]) : void[4] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val local_nilLocale[9285644]:locale[234] "temp"
    (9285645 'move' local_nilLocale[9285644] nilLocale[135253])
    const-val ret[7861144]:locale[234] "dead after last mention" "RVV" "temp"
    ref call_tmp[7861146]:locale[234] "dead after last mention" "maybe param" "temp"
    (7861148 'move' call_tmp[7861146](7861150 '.' this[3318276] _readWriteThisFromLocale[1838946]))
    val ret[7861153]:locale[234] "dead at end of block" "insert auto destroy"
    (7861156 call init=[135460] ret[7861153] call_tmp[7861146])
    const-val call_tmp[7861159]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7861161 'move' call_tmp[7861159](7861164 call ==[1003295] ret[7861153] local_nilLocale[9285644]))
    if call_tmp[7861159]
    {
      const-val call_tmp[7861169]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7861171]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7861173]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7861175 'move' call_tmp[7861173](7861178 call chpl_nodeID[305038]))
      const-val call_tmp[7861179]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (7861181 'move' call_tmp[7861179](7861184 call chpl_rt_buildLocaleID[306484] call_tmp[7861173] c_sublocid_any[135202]))
      (7861187 'move' call_tmp[7861171] call_tmp[7861179])
      const-val call_tmp[7861190]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[7861192]:locale[234] "temp"
      (7861195 call chpl_localeID_to_locale[137251] call_tmp[7861171] ret_tmp[7861192])
      (7861198 'move' call_tmp[7861190] ret_tmp[7861192])
      (7861201 'move' call_tmp[7861169] call_tmp[7861190])
      (7861205 call =[135747] ret[7861153] call_tmp[7861169])
      ref i_x[7861208]:locale[234] "temp"
      (7861210 'move' i_x[7861208](7861212 'set reference' call_tmp[7861169]))
      (7861215 call deinit[135483] i_x[7861208])
    }
    (7861218 'move' ret[7861144] ret[7861153])
    const-val origLocale[3318392]:locale[234] "dead at end of block" "const" "insert auto destroy"
    (3318394 'move' origLocale[3318392] ret[7861144])
    val err[3318398]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[7356110]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7356112 'move' call_tmp[7356110](7356114 'cast' int(32)[66] 0))
    const-val call_tmp[7356117]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7356119 'move' call_tmp[7356117](7356122 call qio_int_to_err[12856] call_tmp[7356110]))
    (3318400 'move' err[3318398] call_tmp[7356117])
    ref call_tmp[7857870]:locale[234] "dead after last mention" "maybe param" "temp"
    (7857872 'move' call_tmp[7857870](7857874 '.' this[3318276] _home[1838930]))
    val coerce_tmp[7546536]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7546538 'move' coerce_tmp[7546536](7546540 '.v' call_tmp[7857870] _instance[135293]))
    val coerce_tmp[7546543]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7546545 'move' coerce_tmp[7546543](7546547 'cast' RootClass[236] coerce_tmp[7546536]))
    const-val call_tmp[7546550]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7546552 'move' call_tmp[7546550](7546554 '==' coerce_tmp[7546543] nil[32]))
    if call_tmp[7546550]
    {
      (7546560 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[5508609]:Error[85511] "error variable" "temp"
    (5508618 'move' error[5508609] nil[32])
    const-val call_tmp[7865660]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865662 'move' call_tmp[7865660](7865664 'cast' int(32)[66] 0))
    const-val call_tmp[7865667]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865669 'move' call_tmp[7865667](7865672 call qio_int_to_err[12856] call_tmp[7865660]))
    val coerce_tmp[7865677]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7865679 'move' coerce_tmp[7865677](7865681 '.v' this[3318276] _channel_internal[1838935]))
    const-val call_tmp[7865684]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865686 'move' call_tmp[7865684](7865688 'ptr_eq' coerce_tmp[7865677] nil[32]))
    if call_tmp[7865684]
    {
      const-val call_tmp[7865693]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[7865695]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865697 'move' coerce_tmp[7865695](7865699 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[7865702]:owned SystemError[1554765] "temp"
      (7865705 call createSystemError[14072] coerce_tmp[7865695] "Operation attempted on an invalid fileWriter" ret_tmp[7865702])
      (7865709 'move' call_tmp[7865693] ret_tmp[7865702])
      val call_tmp[7865712]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7865714]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[7865716]:owned Error[1498203] "temp"
      ref i_x[7865718]:owned SystemError[1554765] "temp"
      (7865720 'move' i_x[7865718](7865722 'set reference' call_tmp[7865693]))
      ref i__retArg[7865724]:owned Error[1498203] "temp"
      (7865726 'move' i__retArg[7865724](7865728 'set reference' ret_tmp[7865716]))
      val _formal_tmp_x[7865730]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (7865732 'move' _formal_tmp_x[7865730] i_x[7865718])
      const-val ret[7865735]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[7865737]:owned SystemError[1554765] "temp"
      (7865739 'move' i_this[7865737](7865741 'set reference' _formal_tmp_x[7865730]))
      val coerce_tmp[7865743]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865745 'move' coerce_tmp[7865743](7865747 '.v' i_this[7865737] chpl_p[1554760]))
      val call_tmp[7865750]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (7865752 'move' call_tmp[7865750](7865754 'cast' Error[85511] coerce_tmp[7865743]))
      ref i_this[7865762]:owned SystemError[1554765] "temp"
      (7865764 'move' i_this[7865762](7865766 'set reference' _formal_tmp_x[7865730]))
      val tmp[7865768]:SystemError[13599] "temp"
      (7865770 'move' tmp[7865768](7865772 'cast' SystemError[13599] nil[32]))
      (7865775 '.=' i_this[7865762] chpl_p[1554760] tmp[7865768])
      val coerce_tmp[7865779]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865781 'move' coerce_tmp[7865779](7865783 'cast' RootClass[236] call_tmp[7865750]))
      const-val call_tmp[7865786]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7865788 'move' call_tmp[7865786](7865790 '==' coerce_tmp[7865779] nil[32]))
      if call_tmp[7865786]
      {
        (7865796 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[7865799]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[7865801]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (7865804 call init[1499358] initTemp[7865801] call_tmp[7865750])
      (7865807 'move' call_tmp[7865799] initTemp[7865801])
      (7865810 'move' ret[7865735] call_tmp[7865799])
      (7865814 call chpl__autoDestroy[3968549] _formal_tmp_x[7865730])
      (7865816 '=' i__retArg[7865724] ret[7865735])
      (7865819 'move' coerce_tmp[7865714] ret_tmp[7865716])
      const-val _formal_tmp_in_err[7865822]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (7865824 'move' _formal_tmp_in_err[7865822] coerce_tmp[7865714])
      (7865827 'move' call_tmp[7865712](7865830 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[7865822]))
      (7865832 '=' error[5508609] call_tmp[7865712])
      gotoErrorHandlingReturn _endlock[7865895] _endlock[7865895]
    }
    const-val call_tmp[7865838]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865840 'move' call_tmp[7865838](7865843 call qio_err_iserr[12868] call_tmp[7865667]))
    const-val call_tmp[7865845]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865847 'move' call_tmp[7865845](7865849 '!=' call_tmp[7865838] 0))
    if call_tmp[7865845]
    {
      val error[7865854]:Error[85511] "error variable" "temp"
      (7865856 'move' error[7865854] nil[32])
      (7865860 call _ch_ioerror[1841920] this[3318276] call_tmp[7865667] "in lock" error[7865854])
      val errorExists[7865865]:bool[19] "temp"
      (7865867 'move' errorExists[7865865](7865869 '!=' error[7865854] nil[32]))
      if errorExists[7865865]
      {
        gotoErrorHandling handler[7865877] handler[7865877]
      }
      label handler[7865877]
      val errorExists[7865879]:bool[19] "temp"
      (7865881 'move' errorExists[7865879](7865883 '!=' error[7865854] nil[32]))
      if errorExists[7865879]
      {
        (7865888 '=' error[5508609] error[7865854])
        gotoErrorHandlingReturn _endlock[7865895] _endlock[7865895]
      }
    }
    label _endlock[7865895]
    val errorExists[7302096]:bool[19] "temp"
    (7302101 'move' errorExists[7302096](7302098 '!=' error[5508609] nil[32]))
    if errorExists[7302096]
    {
      gotoErrorHandling handler[5508610] handler[5508610]
    }
    label handler[5508610]
    val errorExists[7302104]:bool[19] "temp"
    (7302109 'move' errorExists[7302104](7302106 '!=' error[5508609] nil[32]))
    if errorExists[7302104]
    {
      (5508625 '=' error_out[5508605] error[5508609])
      ref i_x[7553303]:locale[234] "temp"
      (7553307 'move' i_x[7553303](7553305 'set reference' origLocale[3318392]))
      (7553311 call deinit[135483] i_x[7553303])
      gotoErrorHandlingReturn _endwritef[5508607] _endwritef[5508607]
    }
    const-val call_tmp[3318444]:iostyleInternal[164872] "dead at end of block" "maybe param" "temp"
    (3318446 'move' call_tmp[3318444](3318452 call _styleInternal[3033070] this[3318276]))
    const-val save_style[3318453]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3318455 'move' save_style[3318453] call_tmp[3318444])
    val cur[3318470]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3318472 'move' cur[3318470] 0)
    val ret[7399362]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7399364 '=' ret[7399362](7399366 '.v' fmtStr[3318278] cachedNumCodepoints[21293]))
    const-val call_tmp[3318485]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3318487 'move' call_tmp[3318485](3318490 'cast' uint(64)[86] ret[7399362]))
    const-val len[3318493]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3318495 'move' len[3318493] call_tmp[3318485])
    val conv[3318500]:qio_conv_t[167955] "dead at end of block" "insert auto destroy"
    (3329025 'zero variable' conv[3318500])
    val gotConv[3318506]:bool[19] "dead at end of block" "insert auto destroy"
    (3329028 'move' gotConv[3318506] 0)
    val style[3318512]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3329030 'zero variable' style[3318512])
    val argType[3318532]:c_array(int(32),6)[3033347] "dead at end of block" "insert auto destroy"
    (3329034 call init[3105773] argType[3318532])
    const-val _ic__F1_high[9017393]:int(64)[10] "temp"
    (7454285 'move' _ic__F1_high[9017393] 5)
    val i[6055913]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6055917 'move' i[6055913] 0)
    (6055977 call chpl_checkIfRangeIterWillOverflow[1518856] 0 5 1 0 5 1)
    CForLoop[6055984] hazard
    {
      ref i_this[8354016]:c_array(int(32),6)[3033347] "temp"
      (8354020 'move' i_this[8354016](8354018 'set reference' argType[3318532]))
      const-val tmp[8354023]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8354025 'move' tmp[8354023](8354027 '<' i[6055913] 0))
      val tmp[8354030]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if tmp[8354023]
      {
        (8354034 'move' tmp[8354030] 1)
      }
      {
        const-val call_tmp[8354038]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8354040 'move' call_tmp[8354038](8354042 '>=' i[6055913] 6))
        (8354045 'move' tmp[8354030] call_tmp[8354038])
      }
      if tmp[8354030]
      {
        const-val call_tmp[8354051]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354053]:string[244] "temp"
        (8354056 call :[1496816] i[6055913] ret_tmp[8354053])
        (8354059 'move' call_tmp[8354051] ret_tmp[8354053])
        const-val call_tmp[8354062]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354064]:string[244] "temp"
        (8354067 call +[28065] "c array index out of bounds " call_tmp[8354051] ret_tmp[8354064])
        (8354071 'move' call_tmp[8354062] ret_tmp[8354064])
        const-val call_tmp[8354074]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354076]:string[244] "temp"
        (8354079 call +[28065] call_tmp[8354062] "(indices are 0.." ret_tmp[8354076])
        (8354083 'move' call_tmp[8354074] ret_tmp[8354076])
        const-val call_tmp[8354086]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354088]:string[244] "temp"
        (8354091 call +[28065] call_tmp[8354074] "5" ret_tmp[8354088])
        (8354095 'move' call_tmp[8354086] ret_tmp[8354088])
        const-val call_tmp[8354098]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354100]:string[244] "temp"
        (8354103 call +[28065] call_tmp[8354086] ")" ret_tmp[8354100])
        (8354107 'move' call_tmp[8354098] ret_tmp[8354100])
        (8354111 call boundsCheckHalt[404] call_tmp[8354098])
        ref i_x[8354113]:string[244] "temp"
        (8354115 'move' i_x[8354113](8354117 'set reference' call_tmp[8354098]))
        (8354120 call deinit[21354] i_x[8354113])
        ref i_x[8354122]:string[244] "temp"
        (8354124 'move' i_x[8354122](8354126 'set reference' call_tmp[8354086]))
        (8354129 call deinit[21354] i_x[8354122])
        ref i_x[8354131]:string[244] "temp"
        (8354133 'move' i_x[8354131](8354135 'set reference' call_tmp[8354074]))
        (8354138 call deinit[21354] i_x[8354131])
        ref i_x[8354140]:string[244] "temp"
        (8354142 'move' i_x[8354140](8354144 'set reference' call_tmp[8354062]))
        (8354147 call deinit[21354] i_x[8354140])
        ref i_x[8354149]:string[244] "temp"
        (8354151 'move' i_x[8354149](8354153 'set reference' call_tmp[8354051]))
        (8354156 call deinit[21354] i_x[8354149])
      }
      ref call_tmp[8354159]:int(32)[66] "dead after last mention" "maybe param" "temp"
      (8354161 'move' call_tmp[8354159](8354163 'array_get' i_this[8354016] i[6055913]))
      (7490292 '=' call_tmp[8354159] QIO_CONV_UNK[167958])
      {
        (6055993 '=' i[6055913] 0)
      }
      {
        (6056004 '<=' i[6055913] _ic__F1_high[9017393])
      }
      {
        (6056012 '+=' i[6055913] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6056046]
    label _endchpl_direct_range_iter[6056051]
    val j[3318621]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3318623 'move' j[3318621] 0)
    ref i_this[8354337]:c_array(int(32),6)[3033347] "temp"
    (8354341 'move' i_this[8354337](8354339 'set reference' argType[3318532]))
    ref call_tmp[8354344]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (8354346 'move' call_tmp[8354344](8354348 'array_get' i_this[8354337] 0))
    val call_tmp[8354390]:c_ptr(int(32))[3035159] "dead after last mention" "expr temp" "maybe param" "temp"
    (8354392 'move' call_tmp[8354390](8354395 call c_pointer_return[3035240] call_tmp[8354344]))
    val error[5508638]:Error[85511] "error variable" "temp"
    (5508640 'move' error[5508638] nil[32])
    (3318951 call _writefOne[3318992] this[3318276] fmtStr[3318278] _e0_args[3318280] 0 cur[3318470] j[3318621] call_tmp[8354390] 6 conv[3318500] gotConv[3318506] style[3318512] err[3318398] origLocale[3318392] len[3318493] error[5508638])
    val errorExists[7302112]:bool[19] "temp"
    (7302117 'move' errorExists[7302112](7302114 '!=' error[5508638] nil[32]))
    if errorExists[7302112]
    {
      (5508644 '=' error_out[5508605] error[5508638])
      ref i_x[8618896]:c_array(int(32),6)[3033347] "temp"
      (8618900 'move' i_x[8618896](8618898 'set reference' argType[3318532]))
      (8618904 call deinit[4184480] i_x[8618896])
      (5634560 call _set_styleInternal[3033186] this[3318276] save_style[3318453])
      ref i_x[7553315]:locale[234] "temp"
      (7553319 'move' i_x[7553315](7553317 'set reference' origLocale[3318392]))
      (7553323 call deinit[135483] i_x[7553315])
      gotoErrorHandlingReturn _endwritef[5508607] _endwritef[5508607]
    }
    const-val call_tmp[7354821]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354823 'move' call_tmp[7354821](7354826 call qio_err_iserr[12868] err[3318398]))
    const-val call_tmp[7354828]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354830 'move' call_tmp[7354828](7354832 '==' call_tmp[7354821] 0))
    if call_tmp[7354828]
    {
      const-val tmp[7566048]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7566050 'move' tmp[7566048](7566052 '<' cur[3318470] len[3318493]))
      if tmp[7566048]
      {
        (3318775 call _format_reader[3037225] this[3318276] fmtStr[3318278] cur[3318470] len[3318493] err[3318398] conv[3318500] gotConv[3318506] style[3318512])
      }
      const-val tmp[7566058]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7566060 'move' tmp[7566058](7566062 '<' cur[3318470] len[3318493]))
      if tmp[7566058]
      {
        const-val call_tmp[3318808]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        (3318810 'move' call_tmp[3318808](3318813 call qio_format_error_too_few_args[168152]))
        (7357525 '=' err[3318398] call_tmp[3318808])
      }
    }
    ref i_x[8618908]:c_array(int(32),6)[3033347] "temp"
    (8618912 'move' i_x[8618908](8618910 'set reference' argType[3318532]))
    (8618916 call deinit[4184480] i_x[8618908])
    (5634581 call _set_styleInternal[3033186] this[3318276] save_style[3318453])
    const-val call_tmp[7654790]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654792 'move' call_tmp[7654790](7654795 call qio_err_iserr[12868] err[3318398]))
    const-val call_tmp[7654797]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654799 'move' call_tmp[7654797](7654801 '!=' call_tmp[7654790] 0))
    if call_tmp[7654797]
    {
      val error[5508652]:Error[85511] "error variable" "temp"
      (5508661 'move' error[5508652] nil[32])
      (3318836 call _ch_ioerror[1841920] this[3318276] err[3318398] "in fileWriter.writef(fmt:string)" error[5508652])
      val errorExists[7302120]:bool[19] "temp"
      (7302125 'move' errorExists[7302120](7302122 '!=' error[5508652] nil[32]))
      if errorExists[7302120]
      {
        gotoErrorHandling handler[5508653] handler[5508653]
      }
      label handler[5508653]
      val errorExists[7302128]:bool[19] "temp"
      (7302133 'move' errorExists[7302128](7302130 '!=' error[5508652] nil[32]))
      if errorExists[7302128]
      {
        (5508668 '=' error_out[5508605] error[5508652])
        ref i_x[7553327]:locale[234] "temp"
        (7553331 'move' i_x[7553327](7553329 'set reference' origLocale[3318392]))
        (7553335 call deinit[135483] i_x[7553327])
        gotoErrorHandlingReturn _endwritef[5508607] _endwritef[5508607]
      }
    }
    ref i_x[7553339]:locale[234] "temp"
    (7553343 'move' i_x[7553339](7553341 'set reference' origLocale[3318392]))
    (7553347 call deinit[135483] i_x[7553339])
    label _endwritef[5508607]
    (3318843 return _void[46])
  }
  function fileWriter(false,defaultSerializer)[1838949].writef[3727261](const  ref arg this[3727267]:fileWriter(false,defaultSerializer)[1838949], const  ref arg fmtStr[3727269]:string[244], const in arg _e0_args[3727271]:real(32)[91], ref arg error_out[5518711]:Error[85511]) : void[4] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val local_nilLocale[9286305]:locale[234] "temp"
    (9286306 'move' local_nilLocale[9286305] nilLocale[135253])
    val args_x0[9108375]:real(32)[91]
    (9108381 'move' args_x0[9108375] _e0_args[3727271])
    const-val ret[7861235]:locale[234] "dead after last mention" "RVV" "temp"
    ref call_tmp[7861237]:locale[234] "dead after last mention" "maybe param" "temp"
    (7861239 'move' call_tmp[7861237](7861241 '.' this[3727267] _readWriteThisFromLocale[1838946]))
    val ret[7861244]:locale[234] "dead at end of block" "insert auto destroy"
    (7861247 call init=[135460] ret[7861244] call_tmp[7861237])
    const-val call_tmp[7861250]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7861252 'move' call_tmp[7861250](7861255 call ==[1003295] ret[7861244] local_nilLocale[9286305]))
    if call_tmp[7861250]
    {
      const-val call_tmp[7861260]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7861262]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[7861264]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (7861266 'move' call_tmp[7861264](7861269 call chpl_nodeID[305038]))
      const-val call_tmp[7861270]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (7861272 'move' call_tmp[7861270](7861275 call chpl_rt_buildLocaleID[306484] call_tmp[7861264] c_sublocid_any[135202]))
      (7861278 'move' call_tmp[7861262] call_tmp[7861270])
      const-val call_tmp[7861281]:locale[234] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[7861283]:locale[234] "temp"
      (7861286 call chpl_localeID_to_locale[137251] call_tmp[7861262] ret_tmp[7861283])
      (7861289 'move' call_tmp[7861281] ret_tmp[7861283])
      (7861292 'move' call_tmp[7861260] call_tmp[7861281])
      (7861296 call =[135747] ret[7861244] call_tmp[7861260])
      ref i_x[7861299]:locale[234] "temp"
      (7861301 'move' i_x[7861299](7861303 'set reference' call_tmp[7861260]))
      (7861306 call deinit[135483] i_x[7861299])
    }
    (7861309 'move' ret[7861235] ret[7861244])
    const-val origLocale[3727383]:locale[234] "dead at end of block" "const" "insert auto destroy"
    (3727385 'move' origLocale[3727383] ret[7861235])
    val err[3727389]:errorCode[12828] "dead at end of block" "insert auto destroy"
    const-val call_tmp[7356308]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7356310 'move' call_tmp[7356308](7356312 'cast' int(32)[66] 0))
    const-val call_tmp[7356315]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7356317 'move' call_tmp[7356315](7356320 call qio_int_to_err[12856] call_tmp[7356308]))
    (3727391 'move' err[3727389] call_tmp[7356315])
    ref call_tmp[7857928]:locale[234] "dead after last mention" "maybe param" "temp"
    (7857930 'move' call_tmp[7857928](7857932 '.' this[3727267] _home[1838930]))
    val coerce_tmp[7547736]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7547738 'move' coerce_tmp[7547736](7547740 '.v' call_tmp[7857928] _instance[135293]))
    val coerce_tmp[7547743]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7547745 'move' coerce_tmp[7547743](7547747 'cast' RootClass[236] coerce_tmp[7547736]))
    const-val call_tmp[7547750]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7547752 'move' call_tmp[7547750](7547754 '==' coerce_tmp[7547743] nil[32]))
    if call_tmp[7547750]
    {
      (7547760 call nilCheckHalt[392] "argument to ! is nil")
    }
    val error[5518715]:Error[85511] "error variable" "temp"
    (5518724 'move' error[5518715] nil[32])
    const-val call_tmp[7865908]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865910 'move' call_tmp[7865908](7865912 'cast' int(32)[66] 0))
    const-val call_tmp[7865915]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865917 'move' call_tmp[7865915](7865920 call qio_int_to_err[12856] call_tmp[7865908]))
    val coerce_tmp[7865925]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7865927 'move' coerce_tmp[7865925](7865929 '.v' this[3727267] _channel_internal[1838935]))
    const-val call_tmp[7865932]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865934 'move' call_tmp[7865932](7865936 'ptr_eq' coerce_tmp[7865925] nil[32]))
    if call_tmp[7865932]
    {
      const-val call_tmp[7865941]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[7865943]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865945 'move' coerce_tmp[7865943](7865947 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[7865950]:owned SystemError[1554765] "temp"
      (7865953 call createSystemError[14072] coerce_tmp[7865943] "Operation attempted on an invalid fileWriter" ret_tmp[7865950])
      (7865957 'move' call_tmp[7865941] ret_tmp[7865950])
      val call_tmp[7865960]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7865962]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[7865964]:owned Error[1498203] "temp"
      ref i_x[7865966]:owned SystemError[1554765] "temp"
      (7865968 'move' i_x[7865966](7865970 'set reference' call_tmp[7865941]))
      ref i__retArg[7865972]:owned Error[1498203] "temp"
      (7865974 'move' i__retArg[7865972](7865976 'set reference' ret_tmp[7865964]))
      val _formal_tmp_x[7865978]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (7865980 'move' _formal_tmp_x[7865978] i_x[7865966])
      const-val ret[7865983]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[7865985]:owned SystemError[1554765] "temp"
      (7865987 'move' i_this[7865985](7865989 'set reference' _formal_tmp_x[7865978]))
      val coerce_tmp[7865991]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865993 'move' coerce_tmp[7865991](7865995 '.v' i_this[7865985] chpl_p[1554760]))
      val call_tmp[7865998]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (7866000 'move' call_tmp[7865998](7866002 'cast' Error[85511] coerce_tmp[7865991]))
      ref i_this[7866010]:owned SystemError[1554765] "temp"
      (7866012 'move' i_this[7866010](7866014 'set reference' _formal_tmp_x[7865978]))
      val tmp[7866016]:SystemError[13599] "temp"
      (7866018 'move' tmp[7866016](7866020 'cast' SystemError[13599] nil[32]))
      (7866023 '.=' i_this[7866010] chpl_p[1554760] tmp[7866016])
      val coerce_tmp[7866027]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7866029 'move' coerce_tmp[7866027](7866031 'cast' RootClass[236] call_tmp[7865998]))
      const-val call_tmp[7866034]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7866036 'move' call_tmp[7866034](7866038 '==' coerce_tmp[7866027] nil[32]))
      if call_tmp[7866034]
      {
        (7866044 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[7866047]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[7866049]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (7866052 call init[1499358] initTemp[7866049] call_tmp[7865998])
      (7866055 'move' call_tmp[7866047] initTemp[7866049])
      (7866058 'move' ret[7865983] call_tmp[7866047])
      (7866062 call chpl__autoDestroy[3968549] _formal_tmp_x[7865978])
      (7866064 '=' i__retArg[7865972] ret[7865983])
      (7866067 'move' coerce_tmp[7865962] ret_tmp[7865964])
      const-val _formal_tmp_in_err[7866070]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (7866072 'move' _formal_tmp_in_err[7866070] coerce_tmp[7865962])
      (7866075 'move' call_tmp[7865960](7866078 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[7866070]))
      (7866080 '=' error[5518715] call_tmp[7865960])
      gotoErrorHandlingReturn _endlock[7866143] _endlock[7866143]
    }
    const-val call_tmp[7866086]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7866088 'move' call_tmp[7866086](7866091 call qio_err_iserr[12868] call_tmp[7865915]))
    const-val call_tmp[7866093]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7866095 'move' call_tmp[7866093](7866097 '!=' call_tmp[7866086] 0))
    if call_tmp[7866093]
    {
      val error[7866102]:Error[85511] "error variable" "temp"
      (7866104 'move' error[7866102] nil[32])
      (7866108 call _ch_ioerror[1841920] this[3727267] call_tmp[7865915] "in lock" error[7866102])
      val errorExists[7866113]:bool[19] "temp"
      (7866115 'move' errorExists[7866113](7866117 '!=' error[7866102] nil[32]))
      if errorExists[7866113]
      {
        gotoErrorHandling handler[7866125] handler[7866125]
      }
      label handler[7866125]
      val errorExists[7866127]:bool[19] "temp"
      (7866129 'move' errorExists[7866127](7866131 '!=' error[7866102] nil[32]))
      if errorExists[7866127]
      {
        (7866136 '=' error[5518715] error[7866102])
        gotoErrorHandlingReturn _endlock[7866143] _endlock[7866143]
      }
    }
    label _endlock[7866143]
    val errorExists[7306728]:bool[19] "temp"
    (7306733 'move' errorExists[7306728](7306730 '!=' error[5518715] nil[32]))
    if errorExists[7306728]
    {
      gotoErrorHandling handler[5518716] handler[5518716]
    }
    label handler[5518716]
    val errorExists[7306736]:bool[19] "temp"
    (7306741 'move' errorExists[7306736](7306738 '!=' error[5518715] nil[32]))
    if errorExists[7306736]
    {
      (5518731 '=' error_out[5518711] error[5518715])
      ref i_x[7555331]:locale[234] "temp"
      (7555335 'move' i_x[7555331](7555333 'set reference' origLocale[3727383]))
      (7555339 call deinit[135483] i_x[7555331])
      gotoErrorHandlingReturn _endwritef[5518713] _endwritef[5518713]
    }
    const-val call_tmp[3727435]:iostyleInternal[164872] "dead at end of block" "maybe param" "temp"
    (3727437 'move' call_tmp[3727435](3727443 call _styleInternal[3033070] this[3727267]))
    const-val save_style[3727444]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3727446 'move' save_style[3727444] call_tmp[3727435])
    val cur[3727461]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3727463 'move' cur[3727461] 0)
    val ret[7399372]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7399374 '=' ret[7399372](7399376 '.v' fmtStr[3727269] cachedNumCodepoints[21293]))
    const-val call_tmp[3727476]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3727478 'move' call_tmp[3727476](3727481 'cast' uint(64)[86] ret[7399372]))
    const-val len[3727484]:uint(64)[86] "dead at end of block" "insert auto destroy"
    (3727486 'move' len[3727484] call_tmp[3727476])
    val conv[3727491]:qio_conv_t[167955] "dead at end of block" "insert auto destroy"
    (3744616 'zero variable' conv[3727491])
    val gotConv[3727497]:bool[19] "dead at end of block" "insert auto destroy"
    (3744619 'move' gotConv[3727497] 0)
    val style[3727503]:iostyleInternal[164872] "dead at end of block" "insert auto destroy"
    (3744621 'zero variable' style[3727503])
    val argType[3727523]:c_array(int(32),6)[3033347] "dead at end of block" "insert auto destroy"
    (3744625 call init[3105773] argType[3727523])
    const-val _ic__F1_high[9017564]:int(64)[10] "temp"
    (7454852 'move' _ic__F1_high[9017564] 5)
    val i[6084833]:int(64)[10] "dead at end of block" "insert auto destroy"
    (6084837 'move' i[6084833] 0)
    (6084897 call chpl_checkIfRangeIterWillOverflow[1518856] 0 5 1 0 5 1)
    CForLoop[6084904] hazard
    {
      ref i_this[8354168]:c_array(int(32),6)[3033347] "temp"
      (8354172 'move' i_this[8354168](8354170 'set reference' argType[3727523]))
      const-val tmp[8354175]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (8354177 'move' tmp[8354175](8354179 '<' i[6084833] 0))
      val tmp[8354182]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if tmp[8354175]
      {
        (8354186 'move' tmp[8354182] 1)
      }
      {
        const-val call_tmp[8354190]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (8354192 'move' call_tmp[8354190](8354194 '>=' i[6084833] 6))
        (8354197 'move' tmp[8354182] call_tmp[8354190])
      }
      if tmp[8354182]
      {
        const-val call_tmp[8354203]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354205]:string[244] "temp"
        (8354208 call :[1496816] i[6084833] ret_tmp[8354205])
        (8354211 'move' call_tmp[8354203] ret_tmp[8354205])
        const-val call_tmp[8354214]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354216]:string[244] "temp"
        (8354219 call +[28065] "c array index out of bounds " call_tmp[8354203] ret_tmp[8354216])
        (8354223 'move' call_tmp[8354214] ret_tmp[8354216])
        const-val call_tmp[8354226]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354228]:string[244] "temp"
        (8354231 call +[28065] call_tmp[8354214] "(indices are 0.." ret_tmp[8354228])
        (8354235 'move' call_tmp[8354226] ret_tmp[8354228])
        const-val call_tmp[8354238]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354240]:string[244] "temp"
        (8354243 call +[28065] call_tmp[8354226] "5" ret_tmp[8354240])
        (8354247 'move' call_tmp[8354238] ret_tmp[8354240])
        const-val call_tmp[8354250]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[8354252]:string[244] "temp"
        (8354255 call +[28065] call_tmp[8354238] ")" ret_tmp[8354252])
        (8354259 'move' call_tmp[8354250] ret_tmp[8354252])
        (8354263 call boundsCheckHalt[404] call_tmp[8354250])
        ref i_x[8354265]:string[244] "temp"
        (8354267 'move' i_x[8354265](8354269 'set reference' call_tmp[8354250]))
        (8354272 call deinit[21354] i_x[8354265])
        ref i_x[8354274]:string[244] "temp"
        (8354276 'move' i_x[8354274](8354278 'set reference' call_tmp[8354238]))
        (8354281 call deinit[21354] i_x[8354274])
        ref i_x[8354283]:string[244] "temp"
        (8354285 'move' i_x[8354283](8354287 'set reference' call_tmp[8354226]))
        (8354290 call deinit[21354] i_x[8354283])
        ref i_x[8354292]:string[244] "temp"
        (8354294 'move' i_x[8354292](8354296 'set reference' call_tmp[8354214]))
        (8354299 call deinit[21354] i_x[8354292])
        ref i_x[8354301]:string[244] "temp"
        (8354303 'move' i_x[8354301](8354305 'set reference' call_tmp[8354203]))
        (8354308 call deinit[21354] i_x[8354301])
      }
      ref call_tmp[8354311]:int(32)[66] "dead after last mention" "maybe param" "temp"
      (8354313 'move' call_tmp[8354311](8354315 'array_get' i_this[8354168] i[6084833]))
      (7490298 '=' call_tmp[8354311] QIO_CONV_UNK[167958])
      {
        (6084913 '=' i[6084833] 0)
      }
      {
        (6084924 '<=' i[6084833] _ic__F1_high[9017564])
      }
      {
        (6084932 '+=' i[6084833] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[6084966]
    label _endchpl_direct_range_iter[6084971]
    val j[3727612]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3727614 'move' j[3727612] 0)
    const-ref call_tmp[3727923]:real(32)[91] "dead after last mention" "maybe param" "temp"
    (3727925 'move' call_tmp[3727923](9108383 'set reference' args_x0[9108375]))
    ref i_this[8354353]:c_array(int(32),6)[3033347] "temp"
    (8354357 'move' i_this[8354353](8354355 'set reference' argType[3727523]))
    ref call_tmp[8354360]:int(32)[66] "dead after last mention" "maybe param" "temp"
    (8354362 'move' call_tmp[8354360](8354364 'array_get' i_this[8354353] 0))
    val call_tmp[8354400]:c_ptr(int(32))[3035159] "dead after last mention" "expr temp" "maybe param" "temp"
    (8354402 'move' call_tmp[8354400](8354405 call c_pointer_return[3035240] call_tmp[8354360]))
    val error[5518744]:Error[85511] "error variable" "temp"
    (5518746 'move' error[5518744] nil[32])
    (3727948 call _writefOne[3727989] this[3727267] fmtStr[3727269] call_tmp[3727923] 0 cur[3727461] j[3727612] call_tmp[8354400] 6 conv[3727491] gotConv[3727497] style[3727503] err[3727389] origLocale[3727383] len[3727484] error[5518744])
    val errorExists[7306744]:bool[19] "temp"
    (7306749 'move' errorExists[7306744](7306746 '!=' error[5518744] nil[32]))
    if errorExists[7306744]
    {
      (5518750 '=' error_out[5518711] error[5518744])
      ref i_x[8618920]:c_array(int(32),6)[3033347] "temp"
      (8618924 'move' i_x[8618920](8618922 'set reference' argType[3727523]))
      (8618928 call deinit[4184480] i_x[8618920])
      (5640658 call _set_styleInternal[3033186] this[3727267] save_style[3727444])
      ref i_x[7555343]:locale[234] "temp"
      (7555347 'move' i_x[7555343](7555345 'set reference' origLocale[3727383]))
      (7555351 call deinit[135483] i_x[7555343])
      gotoErrorHandlingReturn _endwritef[5518713] _endwritef[5518713]
    }
    const-val call_tmp[7354872]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354874 'move' call_tmp[7354872](7354877 call qio_err_iserr[12868] err[3727389]))
    const-val call_tmp[7354879]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7354881 'move' call_tmp[7354879](7354883 '==' call_tmp[7354872] 0))
    if call_tmp[7354879]
    {
      const-val tmp[7566068]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7566070 'move' tmp[7566068](7566072 '<' cur[3727461] len[3727484]))
      if tmp[7566068]
      {
        (3727766 call _format_reader[3037225] this[3727267] fmtStr[3727269] cur[3727461] len[3727484] err[3727389] conv[3727491] gotConv[3727497] style[3727503])
      }
      const-val tmp[7566078]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7566080 'move' tmp[7566078](7566082 '<' cur[3727461] len[3727484]))
      if tmp[7566078]
      {
        const-val call_tmp[3727799]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
        (3727801 'move' call_tmp[3727799](3727804 call qio_format_error_too_few_args[168152]))
        (7357825 '=' err[3727389] call_tmp[3727799])
      }
    }
    ref i_x[8618932]:c_array(int(32),6)[3033347] "temp"
    (8618936 'move' i_x[8618932](8618934 'set reference' argType[3727523]))
    (8618940 call deinit[4184480] i_x[8618932])
    (5640679 call _set_styleInternal[3033186] this[3727267] save_style[3727444])
    const-val call_tmp[7654958]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654960 'move' call_tmp[7654958](7654963 call qio_err_iserr[12868] err[3727389]))
    const-val call_tmp[7654965]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7654967 'move' call_tmp[7654965](7654969 '!=' call_tmp[7654958] 0))
    if call_tmp[7654965]
    {
      val error[5518758]:Error[85511] "error variable" "temp"
      (5518767 'move' error[5518758] nil[32])
      (3727827 call _ch_ioerror[1841920] this[3727267] err[3727389] "in fileWriter.writef(fmt:string)" error[5518758])
      val errorExists[7306752]:bool[19] "temp"
      (7306757 'move' errorExists[7306752](7306754 '!=' error[5518758] nil[32]))
      if errorExists[7306752]
      {
        gotoErrorHandling handler[5518759] handler[5518759]
      }
      label handler[5518759]
      val errorExists[7306760]:bool[19] "temp"
      (7306765 'move' errorExists[7306760](7306762 '!=' error[5518758] nil[32]))
      if errorExists[7306760]
      {
        (5518774 '=' error_out[5518711] error[5518758])
        ref i_x[7555355]:locale[234] "temp"
        (7555359 'move' i_x[7555355](7555357 'set reference' origLocale[3727383]))
        (7555363 call deinit[135483] i_x[7555355])
        gotoErrorHandlingReturn _endwritef[5518713] _endwritef[5518713]
      }
    }
    ref i_x[7555367]:locale[234] "temp"
    (7555371 'move' i_x[7555367](7555369 'set reference' origLocale[3727383]))
    (7555375 call deinit[135483] i_x[7555367])
    label _endwritef[5518713]
    (3727834 return _void[46])
  }
  function string[244].format[3316409](const  ref arg this[3316415]:string[244], const  ref arg _e0_args[3316417]:string[244], ref arg error_out[5508047]:Error[85511], ref arg _retArg[5588903]:string[244]) : void[4] throws "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[3316421]:string[244] "dead after last mention" "RVV" "temp"
    val error[5508049]:Error[85511] "error variable" "temp"
    (5508058 'move' error[5508049] nil[32])
    const-val call_tmp[3316782]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5588912]:string[244] "temp"
    (3316787 call chpl_do_format[3317706] this[3316415] _e0_args[3316417] error[5508049] ret_tmp[5588912])
    (5588915 'move' call_tmp[3316782] ret_tmp[5588912])
    val errorExists[7301856]:bool[19] "temp"
    (7301861 'move' errorExists[7301856](7301858 '!=' error[5508049] nil[32]))
    if errorExists[7301856]
    {
      gotoErrorHandling handler[5508050] handler[5508050]
    }
    (3333687 '=' ret[3316421] call_tmp[3316782])
    gotoReturn _end_format[3317229] _end_format[3317229]
    label handler[5508050]
    val errorExists[7301912]:bool[19] "temp"
    (7301917 'move' errorExists[7301912](7301914 '!=' error[5508049] nil[32]))
    if errorExists[7301912]
    {
      val call_tmp[3316800]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (3316802 'move' call_tmp[3316800] error[5508049])
      val call_tmp[3316805]:IllegalArgumentError[85616] "dead after last mention" "maybe param" "temp"
      (3316807 'move' call_tmp[3316805](3316809 'dynamic_cast' IllegalArgumentError[85616] call_tmp[3316800]))
      const-val call_tmp[3316817]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (3316819 'move' call_tmp[3316817](3316821 '!=' call_tmp[3316805] nil[32]))
      if call_tmp[3316817]
      {
        const-val call_tmp[3316832]:owned IllegalArgumentError[1475882] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[3329202]:owned IllegalArgumentError[1475882] "dead at end of block" "delay instantiation" "temp"
        (3329205 call init[1475364] initTemp[3329202] call_tmp[3316805])
        (3316834 'move' call_tmp[3316832] initTemp[3329202])
        val e[3316839]:owned IllegalArgumentError[1475882] "dead at end of block" "delay instantiation" "insert auto destroy"
        (3316841 'move' e[3316839] call_tmp[3316832])
        val call_tmp[3316846]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[3329219]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
        const-val _formal_tmp_in_x[3329437]:owned IllegalArgumentError[1475882] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (3329442 'move' _formal_tmp_in_x[3329437](3329438 call chpl__initCopy[3329445] e[3316839] 0))
        const-val ret_tmp[5547145]:owned Error[1498203] "temp"
        ref i_x[7645275]:owned IllegalArgumentError[1475882] "temp"
        (7645279 'move' i_x[7645275](7645277 'set reference' _formal_tmp_in_x[3329437]))
        ref i__retArg[7645281]:owned Error[1498203] "temp"
        (7645285 'move' i__retArg[7645281](7645283 'set reference' ret_tmp[5547145]))
        val _formal_tmp_x[7645288]:owned IllegalArgumentError[1475882] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (7645290 'move' _formal_tmp_x[7645288] i_x[7645275])
        const-val ret[7645293]:owned Error[1498203] "dead after last mention" "RVV" "temp"
        ref i_this[7645295]:owned IllegalArgumentError[1475882] "temp"
        (7645297 'move' i_this[7645295](7645299 'set reference' _formal_tmp_x[7645288]))
        val coerce_tmp[7645301]:IllegalArgumentError[85616] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645303 'move' coerce_tmp[7645301](7645305 '.v' i_this[7645295] chpl_p[1475877]))
        val call_tmp[7645308]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645310 'move' call_tmp[7645308](7645312 'cast' Error[85511] coerce_tmp[7645301]))
        ref i_this[7645320]:owned IllegalArgumentError[1475882] "temp"
        (7645322 'move' i_this[7645320](7645324 'set reference' _formal_tmp_x[7645288]))
        val tmp[7645326]:IllegalArgumentError[85616] "temp"
        (7645328 'move' tmp[7645326](7645330 'cast' IllegalArgumentError[85616] nil[32]))
        (7645333 '.=' i_this[7645320] chpl_p[1475877] tmp[7645326])
        val coerce_tmp[7645337]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (7645339 'move' coerce_tmp[7645337](7645341 'cast' RootClass[236] call_tmp[7645308]))
        const-val call_tmp[7645344]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7645346 'move' call_tmp[7645344](7645348 '==' coerce_tmp[7645337] nil[32]))
        if call_tmp[7645344]
        {
          (7645354 call nilCheckHalt[392] "argument to ! is nil")
        }
        const-val call_tmp[7645357]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[7645359]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
        (7645362 call init[1499358] initTemp[7645359] call_tmp[7645308])
        (7645365 'move' call_tmp[7645357] initTemp[7645359])
        (7645368 'move' ret[7645293] call_tmp[7645357])
        (7645372 call chpl__autoDestroy[3929468] _formal_tmp_x[7645288])
        (7645376 '=' i__retArg[7645281] ret[7645293])
        (5547148 'move' coerce_tmp[3329219] ret_tmp[5547145])
        const-val _formal_tmp_in_err[3329848]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (3329853 'move' _formal_tmp_in_err[3329848] coerce_tmp[3329219])
        (3316848 'move' call_tmp[3316846](3316851 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3329848]))
        (5508073 '=' error_out[5508047] call_tmp[3316846])
        (5632761 call chpl__autoDestroy[3929468] e[3316839])
        gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
      }
      {
        val call_tmp[3316862]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
        (3316864 'move' call_tmp[3316862] error[5508049])
        val call_tmp[3316867]:EofError[14808] "dead after last mention" "maybe param" "temp"
        (3316869 'move' call_tmp[3316867](3316871 'dynamic_cast' EofError[14808] call_tmp[3316862]))
        const-val call_tmp[3316879]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (3316881 'move' call_tmp[3316879](3316883 '!=' call_tmp[3316867] nil[32]))
        if call_tmp[3316879]
        {
          const-val call_tmp[3316894]:owned EofError[1542875] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[3329865]:owned EofError[1542875] "dead at end of block" "delay instantiation" "temp"
          (3329868 call init[1542524] initTemp[3329865] call_tmp[3316867])
          (3316896 'move' call_tmp[3316894] initTemp[3329865])
          val e[3316901]:owned EofError[1542875] "dead at end of block" "delay instantiation" "insert auto destroy"
          (3316903 'move' e[3316901] call_tmp[3316894])
          val call_tmp[3316908]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[3329882]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
          const-val _formal_tmp_in_x[3330460]:owned EofError[1542875] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (3330465 'move' _formal_tmp_in_x[3330460](3330461 call chpl__initCopy[3330468] e[3316901] 0))
          const-val ret_tmp[5589074]:owned Error[1498203] "temp"
          ref i_x[8455885]:owned EofError[1542875] "temp"
          (8455889 'move' i_x[8455885](8455887 'set reference' _formal_tmp_in_x[3330460]))
          ref i__retArg[8455891]:owned Error[1498203] "temp"
          (8455895 'move' i__retArg[8455891](8455893 'set reference' ret_tmp[5589074]))
          val _formal_tmp_x[8455898]:owned EofError[1542875] "dead at end of block" "insert auto destroy" "no copy" "temp"
          (8455900 'move' _formal_tmp_x[8455898] i_x[8455885])
          const-val ret[8455903]:owned Error[1498203] "dead after last mention" "RVV" "temp"
          ref i_this[8455905]:owned EofError[1542875] "temp"
          (8455907 'move' i_this[8455905](8455909 'set reference' _formal_tmp_x[8455898]))
          val coerce_tmp[8455911]:EofError[14808] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (8455913 'move' coerce_tmp[8455911](8455915 '.v' i_this[8455905] chpl_p[1542870]))
          val call_tmp[8455918]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
          (8455920 'move' call_tmp[8455918](8455922 'cast' Error[85511] coerce_tmp[8455911]))
          ref i_this[8455930]:owned EofError[1542875] "temp"
          (8455932 'move' i_this[8455930](8455934 'set reference' _formal_tmp_x[8455898]))
          val tmp[8455936]:EofError[14808] "temp"
          (8455938 'move' tmp[8455936](8455940 'cast' EofError[14808] nil[32]))
          (8455943 '.=' i_this[8455930] chpl_p[1542870] tmp[8455936])
          val coerce_tmp[8455947]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (8455949 'move' coerce_tmp[8455947](8455951 'cast' RootClass[236] call_tmp[8455918]))
          const-val call_tmp[8455954]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (8455956 'move' call_tmp[8455954](8455958 '==' coerce_tmp[8455947] nil[32]))
          if call_tmp[8455954]
          {
            (8455964 call nilCheckHalt[392] "argument to ! is nil")
          }
          const-val call_tmp[8455967]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
          const-val initTemp[8455969]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
          (8455972 call init[1499358] initTemp[8455969] call_tmp[8455918])
          (8455975 'move' call_tmp[8455967] initTemp[8455969])
          (8455978 'move' ret[8455903] call_tmp[8455967])
          (8455982 call chpl__autoDestroy[3937692] _formal_tmp_x[8455898])
          (8455986 '=' i__retArg[8455891] ret[8455903])
          (5589077 'move' coerce_tmp[3329882] ret_tmp[5589074])
          const-val _formal_tmp_in_err[3331031]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (3331036 'move' _formal_tmp_in_err[3331031] coerce_tmp[3329882])
          (3316910 'move' call_tmp[3316908](3316913 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3331031]))
          (5508087 '=' error_out[5508047] call_tmp[3316908])
          (5632768 call chpl__autoDestroy[3937692] e[3316901])
          gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
        }
        {
          val call_tmp[3316924]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
          (3316926 'move' call_tmp[3316924] error[5508049])
          val call_tmp[3316929]:UnexpectedEofError[14951] "dead after last mention" "maybe param" "temp"
          (3316931 'move' call_tmp[3316929](3316933 'dynamic_cast' UnexpectedEofError[14951] call_tmp[3316924]))
          const-val call_tmp[3316941]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (3316943 'move' call_tmp[3316941](3316945 '!=' call_tmp[3316929] nil[32]))
          if call_tmp[3316941]
          {
            const-val call_tmp[3316956]:owned UnexpectedEofError[1543525] "dead at end of block" "delay instantiation" "maybe param" "temp"
            const-val initTemp[3331078]:owned UnexpectedEofError[1543525] "dead at end of block" "delay instantiation" "temp"
            (3331081 call init[1543174] initTemp[3331078] call_tmp[3316929])
            (3316958 'move' call_tmp[3316956] initTemp[3331078])
            val e[3316963]:owned UnexpectedEofError[1543525] "dead at end of block" "delay instantiation" "insert auto destroy"
            (3316965 'move' e[3316963] call_tmp[3316956])
            val call_tmp[3316970]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[3331095]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
            const-val _formal_tmp_in_x[3331673]:owned UnexpectedEofError[1543525] "dead after last mention" "expr temp" "no auto destroy" "temp"
            (3331678 'move' _formal_tmp_in_x[3331673](3331674 call chpl__initCopy[3331681] e[3316963] 0))
            const-val ret_tmp[5589104]:owned Error[1498203] "temp"
            ref i_x[8456338]:owned UnexpectedEofError[1543525] "temp"
            (8456342 'move' i_x[8456338](8456340 'set reference' _formal_tmp_in_x[3331673]))
            ref i__retArg[8456344]:owned Error[1498203] "temp"
            (8456348 'move' i__retArg[8456344](8456346 'set reference' ret_tmp[5589104]))
            val _formal_tmp_x[8456351]:owned UnexpectedEofError[1543525] "dead at end of block" "insert auto destroy" "no copy" "temp"
            (8456353 'move' _formal_tmp_x[8456351] i_x[8456338])
            const-val ret[8456356]:owned Error[1498203] "dead after last mention" "RVV" "temp"
            ref i_this[8456358]:owned UnexpectedEofError[1543525] "temp"
            (8456360 'move' i_this[8456358](8456362 'set reference' _formal_tmp_x[8456351]))
            val coerce_tmp[8456364]:UnexpectedEofError[14951] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (8456366 'move' coerce_tmp[8456364](8456368 '.v' i_this[8456358] chpl_p[1543520]))
            val call_tmp[8456371]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (8456373 'move' call_tmp[8456371](8456375 'cast' Error[85511] coerce_tmp[8456364]))
            ref i_this[8456383]:owned UnexpectedEofError[1543525] "temp"
            (8456385 'move' i_this[8456383](8456387 'set reference' _formal_tmp_x[8456351]))
            val tmp[8456389]:UnexpectedEofError[14951] "temp"
            (8456391 'move' tmp[8456389](8456393 'cast' UnexpectedEofError[14951] nil[32]))
            (8456396 '.=' i_this[8456383] chpl_p[1543520] tmp[8456389])
            val coerce_tmp[8456400]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (8456402 'move' coerce_tmp[8456400](8456404 'cast' RootClass[236] call_tmp[8456371]))
            const-val call_tmp[8456407]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (8456409 'move' call_tmp[8456407](8456411 '==' coerce_tmp[8456400] nil[32]))
            if call_tmp[8456407]
            {
              (8456417 call nilCheckHalt[392] "argument to ! is nil")
            }
            const-val call_tmp[8456420]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
            const-val initTemp[8456422]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
            (8456425 call init[1499358] initTemp[8456422] call_tmp[8456371])
            (8456428 'move' call_tmp[8456420] initTemp[8456422])
            (8456431 'move' ret[8456356] call_tmp[8456420])
            (8456435 call chpl__autoDestroy[3939073] _formal_tmp_x[8456351])
            (8456439 '=' i__retArg[8456344] ret[8456356])
            (5589107 'move' coerce_tmp[3331095] ret_tmp[5589104])
            const-val _formal_tmp_in_err[3332244]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
            (3332249 'move' _formal_tmp_in_err[3332244] coerce_tmp[3331095])
            (3316972 'move' call_tmp[3316970](3316975 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3332244]))
            (5508101 '=' error_out[5508047] call_tmp[3316970])
            (5632775 call chpl__autoDestroy[3939073] e[3316963])
            gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
          }
          {
            val call_tmp[3316986]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
            (3316988 'move' call_tmp[3316986] error[5508049])
            val call_tmp[3316991]:BadFormatError[15094] "dead after last mention" "maybe param" "temp"
            (3316993 'move' call_tmp[3316991](3316995 'dynamic_cast' BadFormatError[15094] call_tmp[3316986]))
            const-val call_tmp[3317003]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
            (3317005 'move' call_tmp[3317003](3317007 '!=' call_tmp[3316991] nil[32]))
            if call_tmp[3317003]
            {
              const-val call_tmp[3317018]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[3332261]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "temp"
              (3332264 call init[1543824] initTemp[3332261] call_tmp[3316991])
              (3317020 'move' call_tmp[3317018] initTemp[3332261])
              val e[3317025]:owned BadFormatError[1544175] "dead at end of block" "delay instantiation" "insert auto destroy"
              (3317027 'move' e[3317025] call_tmp[3317018])
              val call_tmp[3317032]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[3332278]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
              const-val _formal_tmp_in_x[3332856]:owned BadFormatError[1544175] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (3332861 'move' _formal_tmp_in_x[3332856](3332857 call chpl__initCopy[3332864] e[3317025] 0))
              const-val ret_tmp[5589116]:owned Error[1498203] "temp"
              ref i_x[8456473]:owned BadFormatError[1544175] "temp"
              (8456477 'move' i_x[8456473](8456475 'set reference' _formal_tmp_in_x[3332856]))
              ref i__retArg[8456479]:owned Error[1498203] "temp"
              (8456483 'move' i__retArg[8456479](8456481 'set reference' ret_tmp[5589116]))
              val _formal_tmp_x[8456486]:owned BadFormatError[1544175] "dead at end of block" "insert auto destroy" "no copy" "temp"
              (8456488 'move' _formal_tmp_x[8456486] i_x[8456473])
              const-val ret[8456491]:owned Error[1498203] "dead after last mention" "RVV" "temp"
              ref i_this[8456493]:owned BadFormatError[1544175] "temp"
              (8456495 'move' i_this[8456493](8456497 'set reference' _formal_tmp_x[8456486]))
              val coerce_tmp[8456499]:BadFormatError[15094] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (8456501 'move' coerce_tmp[8456499](8456503 '.v' i_this[8456493] chpl_p[1544170]))
              val call_tmp[8456506]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (8456508 'move' call_tmp[8456506](8456510 'cast' Error[85511] coerce_tmp[8456499]))
              ref i_this[8456518]:owned BadFormatError[1544175] "temp"
              (8456520 'move' i_this[8456518](8456522 'set reference' _formal_tmp_x[8456486]))
              val tmp[8456524]:BadFormatError[15094] "temp"
              (8456526 'move' tmp[8456524](8456528 'cast' BadFormatError[15094] nil[32]))
              (8456531 '.=' i_this[8456518] chpl_p[1544170] tmp[8456524])
              val coerce_tmp[8456535]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (8456537 'move' coerce_tmp[8456535](8456539 'cast' RootClass[236] call_tmp[8456506]))
              const-val call_tmp[8456542]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (8456544 'move' call_tmp[8456542](8456546 '==' coerce_tmp[8456535] nil[32]))
              if call_tmp[8456542]
              {
                (8456552 call nilCheckHalt[392] "argument to ! is nil")
              }
              const-val call_tmp[8456555]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
              const-val initTemp[8456557]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
              (8456560 call init[1499358] initTemp[8456557] call_tmp[8456506])
              (8456563 'move' call_tmp[8456555] initTemp[8456557])
              (8456566 'move' ret[8456491] call_tmp[8456555])
              (8456570 call chpl__autoDestroy[3940454] _formal_tmp_x[8456486])
              (8456574 '=' i__retArg[8456479] ret[8456491])
              (5589119 'move' coerce_tmp[3332278] ret_tmp[5589116])
              const-val _formal_tmp_in_err[3333427]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (3333432 'move' _formal_tmp_in_err[3333427] coerce_tmp[3332278])
              (3317034 'move' call_tmp[3317032](3317037 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[3333427]))
              (5508115 '=' error_out[5508047] call_tmp[3317032])
              (5632782 call chpl__autoDestroy[3940454] e[3317025])
              gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
            }
            {
              val call_tmp[3317048]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
              (3317050 'move' call_tmp[3317048] error[5508049])
              val call_tmp[3317053]:SystemError[13599] "dead after last mention" "maybe param" "temp"
              (3317055 'move' call_tmp[3317053](3317057 'dynamic_cast' SystemError[13599] call_tmp[3317048]))
              const-val call_tmp[3317065]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (3317067 'move' call_tmp[3317065](3317069 '!=' call_tmp[3317053] nil[32]))
              if call_tmp[3317065]
              {
                const-val call_tmp[3317080]:owned SystemError[1554765] "dead at end of block" "delay instantiation" "maybe param" "temp"
                const-val initTemp[3333464]:owned SystemError[1554765] "dead at end of block" "delay instantiation" "temp"
                (3333467 call init[1554414] initTemp[3333464] call_tmp[3317053])
                (3317082 'move' call_tmp[3317080] initTemp[3333464])
                const-val e[3317087]:owned SystemError[1554765] "dead at end of block" "delay instantiation" "insert auto destroy"
                (3317089 'move' e[3317087] call_tmp[3317080])
                val error[5508120]:Error[85511] "error variable" "temp"
                (5508129 'move' error[5508120] nil[32])
                val coerce_tmp[3333481]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3333487 'move' coerce_tmp[3333481](3333483 call borrow[3333489] e[3317087]))
                const-val coerce_tmp[3333605]:errorCode[12828] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (3333609 'move' coerce_tmp[3333605](9219504 '.v' coerce_tmp[3333481] err[13476]))
                (3317104 call ioerror[15437] coerce_tmp[3333605] "in string.format" error[5508120])
                val errorExists[7301864]:bool[19] "temp"
                (7301869 'move' errorExists[7301864](7301866 '!=' error[5508120] nil[32]))
                if errorExists[7301864]
                {
                  gotoErrorHandling handler[5508121] handler[5508121]
                }
                label handler[5508121]
                val errorExists[7301872]:bool[19] "temp"
                (7301877 'move' errorExists[7301872](7301874 '!=' error[5508120] nil[32]))
                if errorExists[7301872]
                {
                  (5508136 '=' error_out[5508047] error[5508120])
                  (5632789 call chpl__autoDestroy[3968549] e[3317087])
                  gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                }
                (5632793 call chpl__autoDestroy[3968549] e[3317087])
              }
              {
                val call_tmp[3317115]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
                (3317117 'move' call_tmp[3317115] error[5508049])
                val call_tmp[3317120]:DecodeError[85583] "dead after last mention" "maybe param" "temp"
                (3317122 'move' call_tmp[3317120](3317124 'dynamic_cast' DecodeError[85583] call_tmp[3317115]))
                const-val call_tmp[3317132]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (3317134 'move' call_tmp[3317132](3317136 '!=' call_tmp[3317120] nil[32]))
                if call_tmp[3317132]
                {
                  const-val call_tmp[3317147]:owned DecodeError[1515063] "dead at end of block" "delay instantiation" "maybe param" "temp"
                  const-val initTemp[3333639]:owned DecodeError[1515063] "dead at end of block" "delay instantiation" "temp"
                  (3333642 call init[1514712] initTemp[3333639] call_tmp[3317120])
                  (3317149 'move' call_tmp[3317147] initTemp[3333639])
                  const-val e[3317154]:owned DecodeError[1515063] "dead at end of block" "delay instantiation" "insert auto destroy"
                  (3317156 'move' e[3317154] call_tmp[3317147])
                  val error[5508149]:Error[85511] "error variable" "temp"
                  (5508158 'move' error[5508149] nil[32])
                  const-val call_tmp[7355281]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7355283 'move' call_tmp[7355281](7355286 call qio_int_to_err[12856] EILSEQ[11191]))
                  (3317171 call ioerror[15437] call_tmp[7355281] "in string.format" error[5508149])
                  val errorExists[7301880]:bool[19] "temp"
                  (7301885 'move' errorExists[7301880](7301882 '!=' error[5508149] nil[32]))
                  if errorExists[7301880]
                  {
                    gotoErrorHandling handler[5508150] handler[5508150]
                  }
                  label handler[5508150]
                  val errorExists[7301888]:bool[19] "temp"
                  (7301893 'move' errorExists[7301888](7301890 '!=' error[5508149] nil[32]))
                  if errorExists[7301888]
                  {
                    (5508165 '=' error_out[5508047] error[5508149])
                    (5632796 call chpl__autoDestroy[3932740] e[3317154])
                    gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                  }
                  (5632800 call chpl__autoDestroy[3932740] e[3317154])
                }
                {
                  val call_tmp[3317179]:Error[85511] "dead after last mention" "maybe param" "temp"
                  (3317181 'move' call_tmp[3317179] error[5508049])
                  const-val call_tmp[3317195]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
                  const-val initTemp[3333665]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
                  (3333668 call init[1499358] initTemp[3333665] call_tmp[3317179])
                  (3317197 'move' call_tmp[3317195] initTemp[3333665])
                  const-val chpl_anon_error[3317202]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
                  (3317204 'move' chpl_anon_error[3317202] call_tmp[3317195])
                  val error[5508178]:Error[85511] "error variable" "temp"
                  (5508187 'move' error[5508178] nil[32])
                  const-val call_tmp[7355291]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
                  (7355293 'move' call_tmp[7355291](7355296 call qio_int_to_err[12856] EINVAL[11206]))
                  (3317219 call ioerror[15437] call_tmp[7355291] "in string.format" error[5508178])
                  val errorExists[7301896]:bool[19] "temp"
                  (7301901 'move' errorExists[7301896](7301898 '!=' error[5508178] nil[32]))
                  if errorExists[7301896]
                  {
                    gotoErrorHandling handler[5508179] handler[5508179]
                  }
                  label handler[5508179]
                  val errorExists[7301904]:bool[19] "temp"
                  (7301909 'move' errorExists[7301904](7301906 '!=' error[5508178] nil[32]))
                  if errorExists[7301904]
                  {
                    (5508194 '=' error_out[5508047] error[5508178])
                    (5632803 call chpl__autoDestroy[3930254] chpl_anon_error[3317202])
                    gotoErrorHandlingReturn _end_format[3317229] _end_format[3317229]
                  }
                  (5632807 call chpl__autoDestroy[3930254] chpl_anon_error[3317202])
                }
              }
            }
          }
        }
      }
    }
    val inlineImm[7612226]:string[244] "temp"
    (7612229 'move' inlineImm[7612226] "")
    ref i_x[7612231]:string[244] "temp"
    (7612235 'move' i_x[7612231](7612233 'set reference' inlineImm[7612226]))
    val ret[7612243]:string[244] "dead after last mention" "RVV" "temp"
    const-val tmp[7612245]:string[244] "dead after last mention" "temp"
    (7612248 call init=[21330] tmp[7612245] i_x[7612231])
    (7612251 'move' ret[7612243] tmp[7612245])
    (3317224 'move' ret[3316421] ret[7612243])
    label _end_format[3317229]
    (5588905 '=' _retArg[5588903] ret[3316421])
    (5588910 return _void[46])
  }
  function chpl_do_format[3317706](const  ref arg fmt[3317708]:string[244], const  ref arg _e0_args[3317710]:string[244], ref arg error_out[5508215]:Error[85511], ref arg _retArg[5588918]:string[244]) : void[4] throws "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val ret[3317795]:string[244] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3317810]:file[168704] "dead at end of block" "maybe param" "temp"
    val error[5508218]:Error[85511] "error variable" "temp"
    (5508220 'move' error[5508218] nil[32])
    const-val ret_tmp[5545275]:file[168704] "temp"
    (3317815 call openMemFile[170606] error[5508218] ret_tmp[5545275])
    (5545278 'move' call_tmp[3317810] ret_tmp[5545275])
    val errorExists[7301920]:bool[19] "temp"
    (7301925 'move' errorExists[7301920](7301922 '!=' error[5508218] nil[32]))
    if errorExists[7301920]
    {
      (5508224 '=' error_out[5508215] error[5508218])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val f[3317816]:file[168704] "dead at end of block" "insert auto destroy"
    (3317818 'move' f[3317816] call_tmp[3317810])
    const-val call_tmp[3317873]:fileWriter(false,defaultSerializer)[1838949] "dead at end of block" "maybe param" "temp"
    val error[5508257]:Error[85511] "error variable" "temp"
    (5508259 'move' error[5508257] nil[32])
    const-val region[7856430]:range(int(64),low,one)[1576928] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[7856432]:range(int(64),low,one)[1576928] "temp"
    (7856435 call chpl_build_low_bounded_range[1576395] 0 ret_tmp[7856432])
    (7856438 'move' region[7856430] ret_tmp[7856432])
    val errorExists[7301928]:bool[19] "temp"
    (7301933 'move' errorExists[7301928](7301930 '!=' error[5508257] nil[32]))
    if errorExists[7301928]
    {
      (5508263 '=' error_out[5508215] error[5508257])
      val error[5632816]:Error[85511] "error variable" "temp"
      (5632818 'move' error[5632816] nil[32])
      (5632822 call close[169420] f[3317816] error[5632816])
      val errorExists[7308888]:bool[19] "temp"
      (7308893 'move' errorExists[7308888](7308890 '!=' error[5632816] nil[32]))
      if errorExists[7308888]
      {
        gotoErrorHandling handler[5632833] handler[5632833]
      }
      label handler[5632833]
      val errorExists[7308896]:bool[19] "temp"
      (7308901 'move' errorExists[7308896](7308898 '!=' error[5632816] nil[32]))
      if errorExists[7308896]
      {
        val call_tmp[5632844]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5632846 'move' call_tmp[5632844] error[5632816])
        const-val call_tmp[5632862]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5632864]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5632867 call init[1499358] initTemp[5632864] call_tmp[5632844])
        (5632870 'move' call_tmp[5632862] initTemp[5632864])
        const-val chpl_anon_error[5632873]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5632875 'move' chpl_anon_error[5632873] call_tmp[5632862])
        (5632881 call chpl__autoDestroy[3930254] chpl_anon_error[5632873])
      }
      ref i_x[8586898]:file[168704] "temp"
      (8586902 'move' i_x[8586898](8586900 'set reference' f[3317816]))
      (8586906 call deinit[169291] i_x[8586898])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val default_arg_hints[3318223]:ioHintSet[168555] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[5508272]:Error[85511] "error variable" "temp"
    (5508274 'move' error[5508272] nil[32])
    const-val hints[7856554]:ioHintSet[168555] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[7856556]:ioHintSet[168555] "temp"
    (7856559 call empty[168454] ret_tmp[7856556])
    (7856561 'move' hints[7856554] ret_tmp[7856556])
    (5555748 'move' default_arg_hints[3318223] hints[7856554])
    val errorExists[7301936]:bool[19] "temp"
    (7301941 'move' errorExists[7301936](7301938 '!=' error[5508272] nil[32]))
    if errorExists[7301936]
    {
      (5508278 '=' error_out[5508215] error[5508272])
      val error[5632892]:Error[85511] "error variable" "temp"
      (5632894 'move' error[5632892] nil[32])
      (5632898 call close[169420] f[3317816] error[5632892])
      val errorExists[7308904]:bool[19] "temp"
      (7308909 'move' errorExists[7308904](7308906 '!=' error[5632892] nil[32]))
      if errorExists[7308904]
      {
        gotoErrorHandling handler[5632909] handler[5632909]
      }
      label handler[5632909]
      val errorExists[7308912]:bool[19] "temp"
      (7308917 'move' errorExists[7308912](7308914 '!=' error[5632892] nil[32]))
      if errorExists[7308912]
      {
        val call_tmp[5632920]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5632922 'move' call_tmp[5632920] error[5632892])
        const-val call_tmp[5632938]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5632940]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5632943 call init[1499358] initTemp[5632940] call_tmp[5632920])
        (5632946 'move' call_tmp[5632938] initTemp[5632940])
        const-val chpl_anon_error[5632949]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5632951 'move' chpl_anon_error[5632949] call_tmp[5632938])
        (5632957 call chpl__autoDestroy[3930254] chpl_anon_error[5632949])
      }
      ref i_x[8586910]:file[168704] "temp"
      (8586914 'move' i_x[8586910](8586912 'set reference' f[3317816]))
      (8586918 call deinit[169291] i_x[8586910])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val default_arg_serializer[3318234]:defaultSerializer[171969] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    val error[5508287]:Error[85511] "error variable" "temp"
    (5508289 'move' error[5508287] nil[32])
    const-val serializer[7856677]:defaultSerializer[171969] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[7856679]:defaultSerializer[171969] "temp"
    (7856682 call defaultSerializeVal[1591091] ret_tmp[7856679])
    (7856684 'move' serializer[7856677] ret_tmp[7856679])
    (5555772 'move' default_arg_serializer[3318234] serializer[7856677])
    val errorExists[7301944]:bool[19] "temp"
    (7301949 'move' errorExists[7301944](7301946 '!=' error[5508287] nil[32]))
    if errorExists[7301944]
    {
      (5508293 '=' error_out[5508215] error[5508287])
      val error[5632971]:Error[85511] "error variable" "temp"
      (5632973 'move' error[5632971] nil[32])
      (5632977 call close[169420] f[3317816] error[5632971])
      val errorExists[7308920]:bool[19] "temp"
      (7308925 'move' errorExists[7308920](7308922 '!=' error[5632971] nil[32]))
      if errorExists[7308920]
      {
        gotoErrorHandling handler[5632988] handler[5632988]
      }
      label handler[5632988]
      val errorExists[7308928]:bool[19] "temp"
      (7308933 'move' errorExists[7308928](7308930 '!=' error[5632971] nil[32]))
      if errorExists[7308928]
      {
        val call_tmp[5632999]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633001 'move' call_tmp[5632999] error[5632971])
        const-val call_tmp[5633017]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633019]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633022 call init[1499358] initTemp[5633019] call_tmp[5632999])
        (5633025 'move' call_tmp[5633017] initTemp[5633019])
        const-val chpl_anon_error[5633028]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633030 'move' chpl_anon_error[5633028] call_tmp[5633017])
        (5633036 call chpl__autoDestroy[3930254] chpl_anon_error[5633028])
      }
      ref i_x[8586922]:file[168704] "temp"
      (8586926 'move' i_x[8586922](8586924 'set reference' f[3317816]))
      (8586930 call deinit[169291] i_x[8586922])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val error[5508302]:Error[85511] "error variable" "temp"
    (5508304 'move' error[5508302] nil[32])
    const-val ret_tmp[5555697]:fileWriter(false,defaultSerializer)[1838949] "temp"
    (3317881 call writer[1838832] f[3317816] region[7856430] default_arg_hints[3318223] default_arg_serializer[3318234] error[5508302] ret_tmp[5555697])
    (5555700 'move' call_tmp[3317873] ret_tmp[5555697])
    val errorExists[7301952]:bool[19] "temp"
    (7301957 'move' errorExists[7301952](7301954 '!=' error[5508302] nil[32]))
    if errorExists[7301952]
    {
      (5508308 '=' error_out[5508215] error[5508302])
      val error[5633050]:Error[85511] "error variable" "temp"
      (5633052 'move' error[5633050] nil[32])
      (5633056 call close[169420] f[3317816] error[5633050])
      val errorExists[7308936]:bool[19] "temp"
      (7308941 'move' errorExists[7308936](7308938 '!=' error[5633050] nil[32]))
      if errorExists[7308936]
      {
        gotoErrorHandling handler[5633067] handler[5633067]
      }
      label handler[5633067]
      val errorExists[7308944]:bool[19] "temp"
      (7308949 'move' errorExists[7308944](7308946 '!=' error[5633050] nil[32]))
      if errorExists[7308944]
      {
        val call_tmp[5633078]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633080 'move' call_tmp[5633078] error[5633050])
        const-val call_tmp[5633096]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633098]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633101 call init[1499358] initTemp[5633098] call_tmp[5633078])
        (5633104 'move' call_tmp[5633096] initTemp[5633098])
        const-val chpl_anon_error[5633107]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633109 'move' chpl_anon_error[5633107] call_tmp[5633096])
        (5633115 call chpl__autoDestroy[3930254] chpl_anon_error[5633107])
      }
      ref i_x[8586934]:file[168704] "temp"
      (8586938 'move' i_x[8586934](8586936 'set reference' f[3317816]))
      (8586942 call deinit[169291] i_x[8586934])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val w[3317884]:fileWriter(false,defaultSerializer)[1838949] "dead at end of block" "insert auto destroy"
    (3317886 'move' w[3317884] call_tmp[3317873])
    val error[5508340]:Error[85511] "error variable" "temp"
    (5508349 'move' error[5508340] nil[32])
    (3317939 call writef[3318270] w[3317884] fmt[3317708] _e0_args[3317710] error[5508340])
    val errorExists[7301960]:bool[19] "temp"
    (7301965 'move' errorExists[7301960](7301962 '!=' error[5508340] nil[32]))
    if errorExists[7301960]
    {
      gotoErrorHandling handler[5508341] handler[5508341]
    }
    label handler[5508341]
    val errorExists[7301968]:bool[19] "temp"
    (7301973 'move' errorExists[7301968](7301970 '!=' error[5508340] nil[32]))
    if errorExists[7301968]
    {
      (5508356 '=' error_out[5508215] error[5508340])
      val error[5633133]:Error[85511] "error variable" "temp"
      (5633135 'move' error[5633133] nil[32])
      (5633139 call close[1841632] w[3317884] error[5633133])
      val errorExists[7308952]:bool[19] "temp"
      (7308957 'move' errorExists[7308952](7308954 '!=' error[5633133] nil[32]))
      if errorExists[7308952]
      {
        gotoErrorHandling handler[5633150] handler[5633150]
      }
      label handler[5633150]
      val errorExists[7308960]:bool[19] "temp"
      (7308965 'move' errorExists[7308960](7308962 '!=' error[5633133] nil[32]))
      if errorExists[7308960]
      {
        val call_tmp[5633161]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633163 'move' call_tmp[5633161] error[5633133])
        const-val call_tmp[5633179]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633181]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633184 call init[1499358] initTemp[5633181] call_tmp[5633161])
        (5633187 'move' call_tmp[5633179] initTemp[5633181])
        const-val chpl_anon_error[5633190]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633192 'move' chpl_anon_error[5633190] call_tmp[5633179])
        (5633198 call chpl__autoDestroy[3930254] chpl_anon_error[5633190])
      }
      ref i_x[8598431]:fileWriter(false,defaultSerializer)[1838949] "temp"
      (8598435 'move' i_x[8598431](8598433 'set reference' w[3317884]))
      (8598439 call deinit[4023035] i_x[8598431])
      val error[5633206]:Error[85511] "error variable" "temp"
      (5633208 'move' error[5633206] nil[32])
      (5633212 call close[169420] f[3317816] error[5633206])
      val errorExists[7308968]:bool[19] "temp"
      (7308973 'move' errorExists[7308968](7308970 '!=' error[5633206] nil[32]))
      if errorExists[7308968]
      {
        gotoErrorHandling handler[5633223] handler[5633223]
      }
      label handler[5633223]
      val errorExists[7308976]:bool[19] "temp"
      (7308981 'move' errorExists[7308976](7308978 '!=' error[5633206] nil[32]))
      if errorExists[7308976]
      {
        val call_tmp[5633234]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633236 'move' call_tmp[5633234] error[5633206])
        const-val call_tmp[5633252]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633254]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633257 call init[1499358] initTemp[5633254] call_tmp[5633234])
        (5633260 'move' call_tmp[5633252] initTemp[5633254])
        const-val chpl_anon_error[5633263]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633265 'move' chpl_anon_error[5633263] call_tmp[5633252])
        (5633271 call chpl__autoDestroy[3930254] chpl_anon_error[5633263])
      }
      ref i_x[8586946]:file[168704] "temp"
      (8586950 'move' i_x[8586946](8586948 'set reference' f[3317816]))
      (8586954 call deinit[169291] i_x[8586946])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val error[5508368]:Error[85511] "error variable" "temp"
    (5508377 'move' error[5508368] nil[32])
    ref i_this[7865397]:fileWriter(false,defaultSerializer)[1838949] "temp"
    (7865401 'move' i_this[7865397](7865399 'set reference' w[3317884]))
    const-val call_tmp[7865412]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865414 'move' call_tmp[7865412](7865416 'cast' int(32)[66] 0))
    const-val call_tmp[7865419]:errorCode[12828] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865421 'move' call_tmp[7865419](7865424 call qio_int_to_err[12856] call_tmp[7865412]))
    val coerce_tmp[7865429]:c_ptr(qio_channel_t)[1466049] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7865431 'move' coerce_tmp[7865429](7865433 '.v' w[3317884] _channel_internal[1838935]))
    const-val call_tmp[7865436]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865438 'move' call_tmp[7865436](7865440 'ptr_eq' coerce_tmp[7865429] nil[32]))
    if call_tmp[7865436]
    {
      const-val call_tmp[7865445]:owned SystemError[1554765] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[7865447]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865449 'move' coerce_tmp[7865447](7865451 'cast' int(64)[10] EINVAL[11206]))
      const-val ret_tmp[7865454]:owned SystemError[1554765] "temp"
      (7865457 call createSystemError[14072] coerce_tmp[7865447] "Operation attempted on an invalid fileWriter" ret_tmp[7865454])
      (7865461 'move' call_tmp[7865445] ret_tmp[7865454])
      val call_tmp[7865464]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[7865466]:owned Error[1498203] "dead after last mention" "coerce temp" "no auto destroy" "temp"
      const-val ret_tmp[7865468]:owned Error[1498203] "temp"
      ref i_x[7865470]:owned SystemError[1554765] "temp"
      (7865472 'move' i_x[7865470](7865474 'set reference' call_tmp[7865445]))
      ref i__retArg[7865476]:owned Error[1498203] "temp"
      (7865478 'move' i__retArg[7865476](7865480 'set reference' ret_tmp[7865468]))
      val _formal_tmp_x[7865482]:owned SystemError[1554765] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (7865484 'move' _formal_tmp_x[7865482] i_x[7865470])
      const-val ret[7865487]:owned Error[1498203] "dead after last mention" "RVV" "temp"
      ref i_this[7865489]:owned SystemError[1554765] "temp"
      (7865491 'move' i_this[7865489](7865493 'set reference' _formal_tmp_x[7865482]))
      val coerce_tmp[7865495]:SystemError[13599] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865497 'move' coerce_tmp[7865495](7865499 '.v' i_this[7865489] chpl_p[1554760]))
      val call_tmp[7865502]:Error[85511] "dead after last mention" "expr temp" "maybe param" "temp"
      (7865504 'move' call_tmp[7865502](7865506 'cast' Error[85511] coerce_tmp[7865495]))
      ref i_this[7865514]:owned SystemError[1554765] "temp"
      (7865516 'move' i_this[7865514](7865518 'set reference' _formal_tmp_x[7865482]))
      val tmp[7865520]:SystemError[13599] "temp"
      (7865522 'move' tmp[7865520](7865524 'cast' SystemError[13599] nil[32]))
      (7865527 '.=' i_this[7865514] chpl_p[1554760] tmp[7865520])
      val coerce_tmp[7865531]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7865533 'move' coerce_tmp[7865531](7865535 'cast' RootClass[236] call_tmp[7865502]))
      const-val call_tmp[7865538]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7865540 'move' call_tmp[7865538](7865542 '==' coerce_tmp[7865531] nil[32]))
      if call_tmp[7865538]
      {
        (7865548 call nilCheckHalt[392] "argument to ! is nil")
      }
      const-val call_tmp[7865551]:owned Error[1498203] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[7865553]:owned Error[1498203] "dead after last mention" "delay instantiation" "temp"
      (7865556 call init[1499358] initTemp[7865553] call_tmp[7865502])
      (7865559 'move' call_tmp[7865551] initTemp[7865553])
      (7865562 'move' ret[7865487] call_tmp[7865551])
      (7865566 call chpl__autoDestroy[3968549] _formal_tmp_x[7865482])
      (7865568 '=' i__retArg[7865476] ret[7865487])
      (7865571 'move' coerce_tmp[7865466] ret_tmp[7865468])
      const-val _formal_tmp_in_err[7865574]:owned Error[1498203] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (7865576 'move' _formal_tmp_in_err[7865574] coerce_tmp[7865466])
      (7865579 'move' call_tmp[7865464](7865582 call chpl_fix_thrown_error[87309] _formal_tmp_in_err[7865574]))
      (7865584 '=' error[5508368] call_tmp[7865464])
      gotoErrorHandlingReturn _endlock[7865647] _endlock[7865647]
    }
    const-val call_tmp[7865590]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865592 'move' call_tmp[7865590](7865595 call qio_err_iserr[12868] call_tmp[7865419]))
    const-val call_tmp[7865597]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7865599 'move' call_tmp[7865597](7865601 '!=' call_tmp[7865590] 0))
    if call_tmp[7865597]
    {
      val error[7865606]:Error[85511] "error variable" "temp"
      (7865608 'move' error[7865606] nil[32])
      (7865612 call _ch_ioerror[1841920] i_this[7865397] call_tmp[7865419] "in lock" error[7865606])
      val errorExists[7865617]:bool[19] "temp"
      (7865619 'move' errorExists[7865617](7865621 '!=' error[7865606] nil[32]))
      if errorExists[7865617]
      {
        gotoErrorHandling handler[7865629] handler[7865629]
      }
      label handler[7865629]
      val errorExists[7865631]:bool[19] "temp"
      (7865633 'move' errorExists[7865631](7865635 '!=' error[7865606] nil[32]))
      if errorExists[7865631]
      {
        (7865640 '=' error[5508368] error[7865606])
        gotoErrorHandlingReturn _endlock[7865647] _endlock[7865647]
      }
    }
    label _endlock[7865647]
    val errorExists[7301976]:bool[19] "temp"
    (7301981 'move' errorExists[7301976](7301978 '!=' error[5508368] nil[32]))
    if errorExists[7301976]
    {
      gotoErrorHandling handler[5508369] handler[5508369]
    }
    label handler[5508369]
    val errorExists[7301984]:bool[19] "temp"
    (7301989 'move' errorExists[7301984](7301986 '!=' error[5508368] nil[32]))
    if errorExists[7301984]
    {
      (5508383 call chpl_uncaught_error[87456] error[5508368])
    }
    const-val call_tmp[3317954]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (3317956 'move' call_tmp[3317954](3317962 call offset[1871304] w[3317884]))
    val error[5508394]:Error[85511] "error variable" "temp"
    (5508403 'move' error[5508394] nil[32])
    (3317982 call close[1841632] w[3317884] error[5508394])
    val errorExists[7301992]:bool[19] "temp"
    (7301997 'move' errorExists[7301992](7301994 '!=' error[5508394] nil[32]))
    if errorExists[7301992]
    {
      gotoErrorHandling handler[5508395] handler[5508395]
    }
    label handler[5508395]
    val errorExists[7302000]:bool[19] "temp"
    (7302005 'move' errorExists[7302000](7302002 '!=' error[5508394] nil[32]))
    if errorExists[7302000]
    {
      (5508410 '=' error_out[5508215] error[5508394])
      val error[5633279]:Error[85511] "error variable" "temp"
      (5633281 'move' error[5633279] nil[32])
      (5633285 call close[1841632] w[3317884] error[5633279])
      val errorExists[7308984]:bool[19] "temp"
      (7308989 'move' errorExists[7308984](7308986 '!=' error[5633279] nil[32]))
      if errorExists[7308984]
      {
        gotoErrorHandling handler[5633296] handler[5633296]
      }
      label handler[5633296]
      val errorExists[7308992]:bool[19] "temp"
      (7308997 'move' errorExists[7308992](7308994 '!=' error[5633279] nil[32]))
      if errorExists[7308992]
      {
        val call_tmp[5633307]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633309 'move' call_tmp[5633307] error[5633279])
        const-val call_tmp[5633325]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633327]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633330 call init[1499358] initTemp[5633327] call_tmp[5633307])
        (5633333 'move' call_tmp[5633325] initTemp[5633327])
        const-val chpl_anon_error[5633336]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633338 'move' chpl_anon_error[5633336] call_tmp[5633325])
        (5633344 call chpl__autoDestroy[3930254] chpl_anon_error[5633336])
      }
      ref i_x[8598443]:fileWriter(false,defaultSerializer)[1838949] "temp"
      (8598447 'move' i_x[8598443](8598445 'set reference' w[3317884]))
      (8598451 call deinit[4023035] i_x[8598443])
      val error[5633352]:Error[85511] "error variable" "temp"
      (5633354 'move' error[5633352] nil[32])
      (5633358 call close[169420] f[3317816] error[5633352])
      val errorExists[7309000]:bool[19] "temp"
      (7309005 'move' errorExists[7309000](7309002 '!=' error[5633352] nil[32]))
      if errorExists[7309000]
      {
        gotoErrorHandling handler[5633369] handler[5633369]
      }
      label handler[5633369]
      val errorExists[7309008]:bool[19] "temp"
      (7309013 'move' errorExists[7309008](7309010 '!=' error[5633352] nil[32]))
      if errorExists[7309008]
      {
        val call_tmp[5633380]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633382 'move' call_tmp[5633380] error[5633352])
        const-val call_tmp[5633398]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633400]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633403 call init[1499358] initTemp[5633400] call_tmp[5633380])
        (5633406 'move' call_tmp[5633398] initTemp[5633400])
        const-val chpl_anon_error[5633409]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633411 'move' chpl_anon_error[5633409] call_tmp[5633398])
        (5633417 call chpl__autoDestroy[3930254] chpl_anon_error[5633409])
      }
      ref i_x[8586958]:file[168704] "temp"
      (8586962 'move' i_x[8586958](8586960 'set reference' f[3317816]))
      (8586966 call deinit[169291] i_x[8586958])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val error[5633426]:Error[85511] "error variable" "temp"
    (5633428 'move' error[5633426] nil[32])
    (5633432 call close[1841632] w[3317884] error[5633426])
    val errorExists[7309016]:bool[19] "temp"
    (7309021 'move' errorExists[7309016](7309018 '!=' error[5633426] nil[32]))
    if errorExists[7309016]
    {
      gotoErrorHandling handler[5633443] handler[5633443]
    }
    label handler[5633443]
    val errorExists[7309024]:bool[19] "temp"
    (7309029 'move' errorExists[7309024](7309026 '!=' error[5633426] nil[32]))
    if errorExists[7309024]
    {
      val call_tmp[5633454]:Error[85511] "dead after last mention" "maybe param" "temp"
      (5633456 'move' call_tmp[5633454] error[5633426])
      const-val call_tmp[5633472]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[5633474]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
      (5633477 call init[1499358] initTemp[5633474] call_tmp[5633454])
      (5633480 'move' call_tmp[5633472] initTemp[5633474])
      const-val chpl_anon_error[5633483]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
      (5633485 'move' chpl_anon_error[5633483] call_tmp[5633472])
      (5633491 call chpl__autoDestroy[3930254] chpl_anon_error[5633483])
    }
    ref i_x[8598455]:fileWriter(false,defaultSerializer)[1838949] "temp"
    (8598459 'move' i_x[8598455](8598457 'set reference' w[3317884]))
    (8598463 call deinit[4023035] i_x[8598455])
    const-val call_tmp[3317993]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7480180]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7480182 'move' call_tmp[7480180](7480184 '+' call_tmp[3317954] 1))
    (3317995 'move' call_tmp[3317993] call_tmp[7480180])
    const-val call_tmp[7408277]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[7408279]:owned IllegalArgumentError?[1471812] "temp"
    (7408282 call chpl_checkValue[1471704] call_tmp[7480180] ret_tmp[7408279])
    (7408285 'move' call_tmp[7408277] ret_tmp[7408279])
    ref i_arg[7408290]:owned IllegalArgumentError?[1471812] "temp"
    (7408292 'move' i_arg[7408290](7408294 'set reference' call_tmp[7408277]))
    val call_tmp[7408296]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7408298 'move' call_tmp[7408296](7408301 call borrow[1479886] i_arg[7408290]))
    val coerce_tmp[7408306]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7408308 'move' coerce_tmp[7408306](7408310 'cast' RootClass[236] call_tmp[7408296]))
    const-val call_tmp[7408313]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7408315 'move' call_tmp[7408313](7408317 '!=' coerce_tmp[7408306] nil[32]))
    if call_tmp[7408313]
    {
      const-val call_tmp[7408322]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[7408324]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7408326 'move' coerce_tmp[7408324](7408328 'cast' Error[85511] call_tmp[7408296]))
      val _virtual_method_tmp_[7408331]:int(32)[66] "temp"
      (7408333 'move' _virtual_method_tmp_[7408331](7408335 'getcid' coerce_tmp[7408324]))
      val ret_tmp[7408337]:string[244] "temp"
      (7408339 'virtual method call' message[85497] _virtual_method_tmp_[7408331] coerce_tmp[7408324] ret_tmp[7408337])
      (7408344 'move' call_tmp[7408322] ret_tmp[7408337])
      (7408348 call safeCastCheckHalt[440] call_tmp[7408322])
      ref i_x[7408350]:string[244] "temp"
      (7408352 'move' i_x[7408350](7408354 'set reference' call_tmp[7408322]))
      (7408357 call deinit[21354] i_x[7408350])
    }
    (7408361 call chpl__autoDestroy[3929258] call_tmp[7408277])
    const-val call_tmp[7408363]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7408365 'move' call_tmp[7408363](7408367 'cast' uint(64)[86] call_tmp[3317993]))
    const-val call_tmp[7867765]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7867767 'move' call_tmp[7867765](7867770 call sizeof[1528174] uint(8)[71]))
    const-val call_tmp[7867772]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7867774 'move' call_tmp[7867772](7867776 '*' call_tmp[7408363] call_tmp[7867765]))
    const-val tmp[7867789]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7867791 'move' tmp[7867789](7867793 '<' 0 0))
    val tmp[7867796]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7867789]
    {
      (7867800 'move' tmp[7867796] 1)
    }
    {
      const-val call_tmp[7867804]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7867806 'move' call_tmp[7867804](7867808 'cast' uint(64)[86] 0))
      const-val call_tmp[7867811]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7867813 'move' call_tmp[7867811](7867815 '!=' 0 call_tmp[7867804]))
      (7867818 'move' tmp[7867796] call_tmp[7867811])
    }
    val ptr[7867822]:c_ptr(void)[1465614] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[7867824]:c_ptr(void)[1465614] "dead at end of block" "temp"
    (7867826 '=' init_coerce_tmp[7867824](7867828 'cast' c_ptr(void)[1465614] nil[32]))
    (7867831 'move' ptr[7867822] init_coerce_tmp[7867824])
    const-val call_tmp[7867834]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7867836 'move' call_tmp[7867834](7867838 'u!' tmp[7867796]))
    if call_tmp[7867834]
    {
      (9276523 'noop')
      {
        const-val call_tmp[7867863]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
        (7867865 'move' call_tmp[7867863](7867868 call offset_ARRAY_ELEMENTS[50769]))
        val call_tmp[7867869]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
        (7867871 'move' call_tmp[7867869](7867874 call chpl_here_alloc[1819901] call_tmp[7867772] call_tmp[7867863]))
        (7867877 '=' ptr[7867822] call_tmp[7867869])
      }
    }
    {
      const-val call_tmp[7867897]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7867899 'move' call_tmp[7867897](7867902 call chpl_bitops_clz_64[1820112] 0))
      const-val call_tmp[7867904]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7867906 'move' call_tmp[7867904](7867908 'cast' int(64)[10] call_tmp[7867897]))
      const-val call_tmp[7867911]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7867913 'move' call_tmp[7867911](7867915 '-' 63 call_tmp[7867904]))
      const-val call_tmp[7867921]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7867923 'move' call_tmp[7867921](7867925 '==' 1 0))
      if call_tmp[7867921]
      {
        (7867931 call halt[88131] "Attempt to divide by zero")
      }
      const-val call_tmp[7867934]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7867936 'move' call_tmp[7867934](7867938 '/' call_tmp[7867911] 1))
      val p[7867941]:int(64)[10] "dead at end of block" "insert auto destroy"
      (7867943 'move' p[7867941] call_tmp[7867934])
      const-val tmp[7867946]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7867948 'move' tmp[7867946](7867950 '<' call_tmp[7867934] 0))
      if tmp[7867946]
      {
        const-val call_tmp[7867955]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7867957]:string[244] "temp"
        (7867960 call :[1721023] 1 ret_tmp[7867957])
        (7867963 'move' call_tmp[7867955] ret_tmp[7867957])
        const-val call_tmp[7867966]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7867968]:string[244] "temp"
        (7867971 call +[28065] "Cannot bitshift " call_tmp[7867955] ret_tmp[7867968])
        (7867975 'move' call_tmp[7867966] ret_tmp[7867968])
        const-val call_tmp[7867978]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7867980]:string[244] "temp"
        (7867983 call +[28065] call_tmp[7867966] " by " ret_tmp[7867980])
        (7867987 'move' call_tmp[7867978] ret_tmp[7867980])
        const-val call_tmp[7867990]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7867992]:string[244] "temp"
        (7867995 call :[1496816] call_tmp[7867934] ret_tmp[7867992])
        (7867998 'move' call_tmp[7867990] ret_tmp[7867992])
        const-val call_tmp[7868001]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868003]:string[244] "temp"
        (7868006 call +[28065] call_tmp[7867978] call_tmp[7867990] ret_tmp[7868003])
        (7868010 'move' call_tmp[7868001] ret_tmp[7868003])
        const-val call_tmp[7868013]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868015]:string[244] "temp"
        (7868018 call +[28065] call_tmp[7868001] " because " ret_tmp[7868015])
        (7868022 'move' call_tmp[7868013] ret_tmp[7868015])
        const-val call_tmp[7868025]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868027]:string[244] "temp"
        (7868030 call :[1496816] call_tmp[7867934] ret_tmp[7868027])
        (7868033 'move' call_tmp[7868025] ret_tmp[7868027])
        const-val call_tmp[7868036]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868038]:string[244] "temp"
        (7868041 call +[28065] call_tmp[7868013] call_tmp[7868025] ret_tmp[7868038])
        (7868045 'move' call_tmp[7868036] ret_tmp[7868038])
        const-val call_tmp[7868048]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7868050]:string[244] "temp"
        (7868053 call +[28065] call_tmp[7868036] " is less than 0" ret_tmp[7868050])
        (7868057 'move' call_tmp[7868048] ret_tmp[7868050])
        const-val msg[7868060]:string[244] "dead at end of block" "insert auto destroy"
        (7868062 'move' msg[7868060] call_tmp[7868048])
        ref i_x[7868065]:string[244] "temp"
        (7868067 'move' i_x[7868065](7868069 'set reference' call_tmp[7868036]))
        (7868072 call deinit[21354] i_x[7868065])
        ref i_x[7868074]:string[244] "temp"
        (7868076 'move' i_x[7868074](7868078 'set reference' call_tmp[7868025]))
        (7868081 call deinit[21354] i_x[7868074])
        ref i_x[7868083]:string[244] "temp"
        (7868085 'move' i_x[7868083](7868087 'set reference' call_tmp[7868013]))
        (7868090 call deinit[21354] i_x[7868083])
        ref i_x[7868092]:string[244] "temp"
        (7868094 'move' i_x[7868092](7868096 'set reference' call_tmp[7868001]))
        (7868099 call deinit[21354] i_x[7868092])
        ref i_x[7868101]:string[244] "temp"
        (7868103 'move' i_x[7868101](7868105 'set reference' call_tmp[7867990]))
        (7868108 call deinit[21354] i_x[7868101])
        ref i_x[7868110]:string[244] "temp"
        (7868112 'move' i_x[7868110](7868114 'set reference' call_tmp[7867978]))
        (7868117 call deinit[21354] i_x[7868110])
        ref i_x[7868119]:string[244] "temp"
        (7868121 'move' i_x[7868119](7868123 'set reference' call_tmp[7867966]))
        (7868126 call deinit[21354] i_x[7868119])
        ref i_x[7868128]:string[244] "temp"
        (7868130 'move' i_x[7868128](7868132 'set reference' call_tmp[7867955]))
        (7868135 call deinit[21354] i_x[7868128])
        (7868138 call boundsCheckHalt[404] msg[7868060])
        ref i_x[7868140]:string[244] "temp"
        (7868142 'move' i_x[7868140](7868144 'set reference' msg[7868060]))
        (7868147 call deinit[21354] i_x[7868140])
      }
      {
        const-val call_tmp[7868150]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7868152 'move' call_tmp[7868150](7868154 '>=' call_tmp[7867934] 64))
        if call_tmp[7868150]
        {
          const-val call_tmp[7868159]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868161]:string[244] "temp"
          (7868164 call :[1721023] 1 ret_tmp[7868161])
          (7868167 'move' call_tmp[7868159] ret_tmp[7868161])
          const-val call_tmp[7868170]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868172]:string[244] "temp"
          (7868175 call +[28065] "Cannot bitshift " call_tmp[7868159] ret_tmp[7868172])
          (7868179 'move' call_tmp[7868170] ret_tmp[7868172])
          const-val call_tmp[7868182]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868184]:string[244] "temp"
          (7868187 call +[28065] call_tmp[7868170] " by " ret_tmp[7868184])
          (7868191 'move' call_tmp[7868182] ret_tmp[7868184])
          const-val call_tmp[7868194]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868196]:string[244] "temp"
          (7868199 call :[1496816] call_tmp[7867934] ret_tmp[7868196])
          (7868202 'move' call_tmp[7868194] ret_tmp[7868196])
          const-val call_tmp[7868205]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868207]:string[244] "temp"
          (7868210 call +[28065] call_tmp[7868182] call_tmp[7868194] ret_tmp[7868207])
          (7868214 'move' call_tmp[7868205] ret_tmp[7868207])
          const-val call_tmp[7868217]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868219]:string[244] "temp"
          (7868222 call +[28065] call_tmp[7868205] " because " ret_tmp[7868219])
          (7868226 'move' call_tmp[7868217] ret_tmp[7868219])
          const-val call_tmp[7868229]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868231]:string[244] "temp"
          (7868234 call :[1496816] call_tmp[7867934] ret_tmp[7868231])
          (7868237 'move' call_tmp[7868229] ret_tmp[7868231])
          const-val call_tmp[7868240]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868242]:string[244] "temp"
          (7868245 call +[28065] call_tmp[7868217] call_tmp[7868229] ret_tmp[7868242])
          (7868249 'move' call_tmp[7868240] ret_tmp[7868242])
          const-val call_tmp[7868252]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868254]:string[244] "temp"
          (7868257 call +[28065] call_tmp[7868240] " is >= the bitwidth of " ret_tmp[7868254])
          (7868261 'move' call_tmp[7868252] ret_tmp[7868254])
          const-val call_tmp[7868264]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7868266]:string[244] "temp"
          (7868269 call +[28065] call_tmp[7868252] "uint(64)" ret_tmp[7868266])
          (7868273 'move' call_tmp[7868264] ret_tmp[7868266])
          const-val msg[7868276]:string[244] "dead at end of block" "insert auto destroy"
          (7868278 'move' msg[7868276] call_tmp[7868264])
          ref i_x[7868281]:string[244] "temp"
          (7868283 'move' i_x[7868281](7868285 'set reference' call_tmp[7868252]))
          (7868288 call deinit[21354] i_x[7868281])
          ref i_x[7868290]:string[244] "temp"
          (7868292 'move' i_x[7868290](7868294 'set reference' call_tmp[7868240]))
          (7868297 call deinit[21354] i_x[7868290])
          ref i_x[7868299]:string[244] "temp"
          (7868301 'move' i_x[7868299](7868303 'set reference' call_tmp[7868229]))
          (7868306 call deinit[21354] i_x[7868299])
          ref i_x[7868308]:string[244] "temp"
          (7868310 'move' i_x[7868308](7868312 'set reference' call_tmp[7868217]))
          (7868315 call deinit[21354] i_x[7868308])
          ref i_x[7868317]:string[244] "temp"
          (7868319 'move' i_x[7868317](7868321 'set reference' call_tmp[7868205]))
          (7868324 call deinit[21354] i_x[7868317])
          ref i_x[7868326]:string[244] "temp"
          (7868328 'move' i_x[7868326](7868330 'set reference' call_tmp[7868194]))
          (7868333 call deinit[21354] i_x[7868326])
          ref i_x[7868335]:string[244] "temp"
          (7868337 'move' i_x[7868335](7868339 'set reference' call_tmp[7868182]))
          (7868342 call deinit[21354] i_x[7868335])
          ref i_x[7868344]:string[244] "temp"
          (7868346 'move' i_x[7868344](7868348 'set reference' call_tmp[7868170]))
          (7868351 call deinit[21354] i_x[7868344])
          ref i_x[7868353]:string[244] "temp"
          (7868355 'move' i_x[7868353](7868357 'set reference' call_tmp[7868159]))
          (7868360 call deinit[21354] i_x[7868353])
          (7868363 call boundsCheckHalt[404] msg[7868276])
          ref i_x[7868365]:string[244] "temp"
          (7868367 'move' i_x[7868365](7868369 'set reference' msg[7868276]))
          (7868372 call deinit[21354] i_x[7868365])
        }
      }
      const-val call_tmp[7868376]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7868378 'move' call_tmp[7868376](7868380 '<<' 1 call_tmp[7867934]))
      const-val tmp[7868383]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7868385 'move' tmp[7868383](7868387 '<' call_tmp[7868376] 0))
      if tmp[7868383]
      {
        ref i_lhs[7868392]:int(64)[10] "temp"
        (7868394 'move' i_lhs[7868392](7868396 'set reference' p[7867941]))
        (7868398 '+=' i_lhs[7868392] 1)
      }
      const-val tmp[7868402]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7868404 'move' tmp[7868402](7868406 '<' p[7867941] 0))
      if tmp[7868402]
      {
        const-val call_tmp[7868411]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868413]:string[244] "temp"
        (7868416 call :[1721023] 1 ret_tmp[7868413])
        (7868419 'move' call_tmp[7868411] ret_tmp[7868413])
        const-val call_tmp[7868422]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868424]:string[244] "temp"
        (7868427 call +[28065] "Cannot bitshift " call_tmp[7868411] ret_tmp[7868424])
        (7868431 'move' call_tmp[7868422] ret_tmp[7868424])
        const-val call_tmp[7868434]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868436]:string[244] "temp"
        (7868439 call +[28065] call_tmp[7868422] " by " ret_tmp[7868436])
        (7868443 'move' call_tmp[7868434] ret_tmp[7868436])
        const-val call_tmp[7868446]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868448]:string[244] "temp"
        (7868451 call :[1496816] p[7867941] ret_tmp[7868448])
        (7868454 'move' call_tmp[7868446] ret_tmp[7868448])
        const-val call_tmp[7868457]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868459]:string[244] "temp"
        (7868462 call +[28065] call_tmp[7868434] call_tmp[7868446] ret_tmp[7868459])
        (7868466 'move' call_tmp[7868457] ret_tmp[7868459])
        const-val call_tmp[7868469]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868471]:string[244] "temp"
        (7868474 call +[28065] call_tmp[7868457] " because " ret_tmp[7868471])
        (7868478 'move' call_tmp[7868469] ret_tmp[7868471])
        const-val call_tmp[7868481]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868483]:string[244] "temp"
        (7868486 call :[1496816] p[7867941] ret_tmp[7868483])
        (7868489 'move' call_tmp[7868481] ret_tmp[7868483])
        const-val call_tmp[7868492]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868494]:string[244] "temp"
        (7868497 call +[28065] call_tmp[7868469] call_tmp[7868481] ret_tmp[7868494])
        (7868501 'move' call_tmp[7868492] ret_tmp[7868494])
        const-val call_tmp[7868504]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7868506]:string[244] "temp"
        (7868509 call +[28065] call_tmp[7868492] " is less than 0" ret_tmp[7868506])
        (7868513 'move' call_tmp[7868504] ret_tmp[7868506])
        const-val msg[7868516]:string[244] "dead at end of block" "insert auto destroy"
        (7868518 'move' msg[7868516] call_tmp[7868504])
        ref i_x[7868521]:string[244] "temp"
        (7868523 'move' i_x[7868521](7868525 'set reference' call_tmp[7868492]))
        (7868528 call deinit[21354] i_x[7868521])
        ref i_x[7868530]:string[244] "temp"
        (7868532 'move' i_x[7868530](7868534 'set reference' call_tmp[7868481]))
        (7868537 call deinit[21354] i_x[7868530])
        ref i_x[7868539]:string[244] "temp"
        (7868541 'move' i_x[7868539](7868543 'set reference' call_tmp[7868469]))
        (7868546 call deinit[21354] i_x[7868539])
        ref i_x[7868548]:string[244] "temp"
        (7868550 'move' i_x[7868548](7868552 'set reference' call_tmp[7868457]))
        (7868555 call deinit[21354] i_x[7868548])
        ref i_x[7868557]:string[244] "temp"
        (7868559 'move' i_x[7868557](7868561 'set reference' call_tmp[7868446]))
        (7868564 call deinit[21354] i_x[7868557])
        ref i_x[7868566]:string[244] "temp"
        (7868568 'move' i_x[7868566](7868570 'set reference' call_tmp[7868434]))
        (7868573 call deinit[21354] i_x[7868566])
        ref i_x[7868575]:string[244] "temp"
        (7868577 'move' i_x[7868575](7868579 'set reference' call_tmp[7868422]))
        (7868582 call deinit[21354] i_x[7868575])
        ref i_x[7868584]:string[244] "temp"
        (7868586 'move' i_x[7868584](7868588 'set reference' call_tmp[7868411]))
        (7868591 call deinit[21354] i_x[7868584])
        (7868594 call boundsCheckHalt[404] msg[7868516])
        ref i_x[7868596]:string[244] "temp"
        (7868598 'move' i_x[7868596](7868600 'set reference' msg[7868516]))
        (7868603 call deinit[21354] i_x[7868596])
      }
      {
        const-val call_tmp[7868606]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7868608 'move' call_tmp[7868606](7868610 '>=' p[7867941] 64))
        if call_tmp[7868606]
        {
          const-val call_tmp[7868615]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868617]:string[244] "temp"
          (7868620 call :[1721023] 1 ret_tmp[7868617])
          (7868623 'move' call_tmp[7868615] ret_tmp[7868617])
          const-val call_tmp[7868626]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868628]:string[244] "temp"
          (7868631 call +[28065] "Cannot bitshift " call_tmp[7868615] ret_tmp[7868628])
          (7868635 'move' call_tmp[7868626] ret_tmp[7868628])
          const-val call_tmp[7868638]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868640]:string[244] "temp"
          (7868643 call +[28065] call_tmp[7868626] " by " ret_tmp[7868640])
          (7868647 'move' call_tmp[7868638] ret_tmp[7868640])
          const-val call_tmp[7868650]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868652]:string[244] "temp"
          (7868655 call :[1496816] p[7867941] ret_tmp[7868652])
          (7868658 'move' call_tmp[7868650] ret_tmp[7868652])
          const-val call_tmp[7868661]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868663]:string[244] "temp"
          (7868666 call +[28065] call_tmp[7868638] call_tmp[7868650] ret_tmp[7868663])
          (7868670 'move' call_tmp[7868661] ret_tmp[7868663])
          const-val call_tmp[7868673]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868675]:string[244] "temp"
          (7868678 call +[28065] call_tmp[7868661] " because " ret_tmp[7868675])
          (7868682 'move' call_tmp[7868673] ret_tmp[7868675])
          const-val call_tmp[7868685]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868687]:string[244] "temp"
          (7868690 call :[1496816] p[7867941] ret_tmp[7868687])
          (7868693 'move' call_tmp[7868685] ret_tmp[7868687])
          const-val call_tmp[7868696]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868698]:string[244] "temp"
          (7868701 call +[28065] call_tmp[7868673] call_tmp[7868685] ret_tmp[7868698])
          (7868705 'move' call_tmp[7868696] ret_tmp[7868698])
          const-val call_tmp[7868708]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7868710]:string[244] "temp"
          (7868713 call +[28065] call_tmp[7868696] " is >= the bitwidth of " ret_tmp[7868710])
          (7868717 'move' call_tmp[7868708] ret_tmp[7868710])
          const-val call_tmp[7868720]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7868722]:string[244] "temp"
          (7868725 call +[28065] call_tmp[7868708] "uint(64)" ret_tmp[7868722])
          (7868729 'move' call_tmp[7868720] ret_tmp[7868722])
          const-val msg[7868732]:string[244] "dead at end of block" "insert auto destroy"
          (7868734 'move' msg[7868732] call_tmp[7868720])
          ref i_x[7868737]:string[244] "temp"
          (7868739 'move' i_x[7868737](7868741 'set reference' call_tmp[7868708]))
          (7868744 call deinit[21354] i_x[7868737])
          ref i_x[7868746]:string[244] "temp"
          (7868748 'move' i_x[7868746](7868750 'set reference' call_tmp[7868696]))
          (7868753 call deinit[21354] i_x[7868746])
          ref i_x[7868755]:string[244] "temp"
          (7868757 'move' i_x[7868755](7868759 'set reference' call_tmp[7868685]))
          (7868762 call deinit[21354] i_x[7868755])
          ref i_x[7868764]:string[244] "temp"
          (7868766 'move' i_x[7868764](7868768 'set reference' call_tmp[7868673]))
          (7868771 call deinit[21354] i_x[7868764])
          ref i_x[7868773]:string[244] "temp"
          (7868775 'move' i_x[7868773](7868777 'set reference' call_tmp[7868661]))
          (7868780 call deinit[21354] i_x[7868773])
          ref i_x[7868782]:string[244] "temp"
          (7868784 'move' i_x[7868782](7868786 'set reference' call_tmp[7868650]))
          (7868789 call deinit[21354] i_x[7868782])
          ref i_x[7868791]:string[244] "temp"
          (7868793 'move' i_x[7868791](7868795 'set reference' call_tmp[7868638]))
          (7868798 call deinit[21354] i_x[7868791])
          ref i_x[7868800]:string[244] "temp"
          (7868802 'move' i_x[7868800](7868804 'set reference' call_tmp[7868626]))
          (7868807 call deinit[21354] i_x[7868800])
          ref i_x[7868809]:string[244] "temp"
          (7868811 'move' i_x[7868809](7868813 'set reference' call_tmp[7868615]))
          (7868816 call deinit[21354] i_x[7868809])
          (7868819 call boundsCheckHalt[404] msg[7868732])
          ref i_x[7868821]:string[244] "temp"
          (7868823 'move' i_x[7868821](7868825 'set reference' msg[7868732]))
          (7868828 call deinit[21354] i_x[7868821])
        }
      }
      const-val call_tmp[7868832]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7868834 'move' call_tmp[7868832](7868836 '<<' 1 p[7867941]))
      const-val call_tmp[7868839]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7868841 'move' call_tmp[7868839](7868843 '<=' 0 call_tmp[7868832]))
      (7868847 call assert[87867] call_tmp[7868839])
      const-val tmp[7868849]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7868851 'move' tmp[7868849](7868853 '<' p[7867941] 0))
      if tmp[7868849]
      {
        const-val call_tmp[7868858]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868860]:string[244] "temp"
        (7868863 call :[1721023] 1 ret_tmp[7868860])
        (7868866 'move' call_tmp[7868858] ret_tmp[7868860])
        const-val call_tmp[7868869]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868871]:string[244] "temp"
        (7868874 call +[28065] "Cannot bitshift " call_tmp[7868858] ret_tmp[7868871])
        (7868878 'move' call_tmp[7868869] ret_tmp[7868871])
        const-val call_tmp[7868881]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868883]:string[244] "temp"
        (7868886 call +[28065] call_tmp[7868869] " by " ret_tmp[7868883])
        (7868890 'move' call_tmp[7868881] ret_tmp[7868883])
        const-val call_tmp[7868893]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868895]:string[244] "temp"
        (7868898 call :[1496816] p[7867941] ret_tmp[7868895])
        (7868901 'move' call_tmp[7868893] ret_tmp[7868895])
        const-val call_tmp[7868904]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868906]:string[244] "temp"
        (7868909 call +[28065] call_tmp[7868881] call_tmp[7868893] ret_tmp[7868906])
        (7868913 'move' call_tmp[7868904] ret_tmp[7868906])
        const-val call_tmp[7868916]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868918]:string[244] "temp"
        (7868921 call +[28065] call_tmp[7868904] " because " ret_tmp[7868918])
        (7868925 'move' call_tmp[7868916] ret_tmp[7868918])
        const-val call_tmp[7868928]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868930]:string[244] "temp"
        (7868933 call :[1496816] p[7867941] ret_tmp[7868930])
        (7868936 'move' call_tmp[7868928] ret_tmp[7868930])
        const-val call_tmp[7868939]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7868941]:string[244] "temp"
        (7868944 call +[28065] call_tmp[7868916] call_tmp[7868928] ret_tmp[7868941])
        (7868948 'move' call_tmp[7868939] ret_tmp[7868941])
        const-val call_tmp[7868951]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7868953]:string[244] "temp"
        (7868956 call +[28065] call_tmp[7868939] " is less than 0" ret_tmp[7868953])
        (7868960 'move' call_tmp[7868951] ret_tmp[7868953])
        const-val msg[7868963]:string[244] "dead at end of block" "insert auto destroy"
        (7868965 'move' msg[7868963] call_tmp[7868951])
        ref i_x[7868968]:string[244] "temp"
        (7868970 'move' i_x[7868968](7868972 'set reference' call_tmp[7868939]))
        (7868975 call deinit[21354] i_x[7868968])
        ref i_x[7868977]:string[244] "temp"
        (7868979 'move' i_x[7868977](7868981 'set reference' call_tmp[7868928]))
        (7868984 call deinit[21354] i_x[7868977])
        ref i_x[7868986]:string[244] "temp"
        (7868988 'move' i_x[7868986](7868990 'set reference' call_tmp[7868916]))
        (7868993 call deinit[21354] i_x[7868986])
        ref i_x[7868995]:string[244] "temp"
        (7868997 'move' i_x[7868995](7868999 'set reference' call_tmp[7868904]))
        (7869002 call deinit[21354] i_x[7868995])
        ref i_x[7869004]:string[244] "temp"
        (7869006 'move' i_x[7869004](7869008 'set reference' call_tmp[7868893]))
        (7869011 call deinit[21354] i_x[7869004])
        ref i_x[7869013]:string[244] "temp"
        (7869015 'move' i_x[7869013](7869017 'set reference' call_tmp[7868881]))
        (7869020 call deinit[21354] i_x[7869013])
        ref i_x[7869022]:string[244] "temp"
        (7869024 'move' i_x[7869022](7869026 'set reference' call_tmp[7868869]))
        (7869029 call deinit[21354] i_x[7869022])
        ref i_x[7869031]:string[244] "temp"
        (7869033 'move' i_x[7869031](7869035 'set reference' call_tmp[7868858]))
        (7869038 call deinit[21354] i_x[7869031])
        (7869041 call boundsCheckHalt[404] msg[7868963])
        ref i_x[7869043]:string[244] "temp"
        (7869045 'move' i_x[7869043](7869047 'set reference' msg[7868963]))
        (7869050 call deinit[21354] i_x[7869043])
      }
      {
        const-val call_tmp[7869053]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7869055 'move' call_tmp[7869053](7869057 '>=' p[7867941] 64))
        if call_tmp[7869053]
        {
          const-val call_tmp[7869062]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869064]:string[244] "temp"
          (7869067 call :[1721023] 1 ret_tmp[7869064])
          (7869070 'move' call_tmp[7869062] ret_tmp[7869064])
          const-val call_tmp[7869073]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869075]:string[244] "temp"
          (7869078 call +[28065] "Cannot bitshift " call_tmp[7869062] ret_tmp[7869075])
          (7869082 'move' call_tmp[7869073] ret_tmp[7869075])
          const-val call_tmp[7869085]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869087]:string[244] "temp"
          (7869090 call +[28065] call_tmp[7869073] " by " ret_tmp[7869087])
          (7869094 'move' call_tmp[7869085] ret_tmp[7869087])
          const-val call_tmp[7869097]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869099]:string[244] "temp"
          (7869102 call :[1496816] p[7867941] ret_tmp[7869099])
          (7869105 'move' call_tmp[7869097] ret_tmp[7869099])
          const-val call_tmp[7869108]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869110]:string[244] "temp"
          (7869113 call +[28065] call_tmp[7869085] call_tmp[7869097] ret_tmp[7869110])
          (7869117 'move' call_tmp[7869108] ret_tmp[7869110])
          const-val call_tmp[7869120]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869122]:string[244] "temp"
          (7869125 call +[28065] call_tmp[7869108] " because " ret_tmp[7869122])
          (7869129 'move' call_tmp[7869120] ret_tmp[7869122])
          const-val call_tmp[7869132]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869134]:string[244] "temp"
          (7869137 call :[1496816] p[7867941] ret_tmp[7869134])
          (7869140 'move' call_tmp[7869132] ret_tmp[7869134])
          const-val call_tmp[7869143]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869145]:string[244] "temp"
          (7869148 call +[28065] call_tmp[7869120] call_tmp[7869132] ret_tmp[7869145])
          (7869152 'move' call_tmp[7869143] ret_tmp[7869145])
          const-val call_tmp[7869155]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7869157]:string[244] "temp"
          (7869160 call +[28065] call_tmp[7869143] " is >= the bitwidth of " ret_tmp[7869157])
          (7869164 'move' call_tmp[7869155] ret_tmp[7869157])
          const-val call_tmp[7869167]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7869169]:string[244] "temp"
          (7869172 call +[28065] call_tmp[7869155] "uint(64)" ret_tmp[7869169])
          (7869176 'move' call_tmp[7869167] ret_tmp[7869169])
          const-val msg[7869179]:string[244] "dead at end of block" "insert auto destroy"
          (7869181 'move' msg[7869179] call_tmp[7869167])
          ref i_x[7869184]:string[244] "temp"
          (7869186 'move' i_x[7869184](7869188 'set reference' call_tmp[7869155]))
          (7869191 call deinit[21354] i_x[7869184])
          ref i_x[7869193]:string[244] "temp"
          (7869195 'move' i_x[7869193](7869197 'set reference' call_tmp[7869143]))
          (7869200 call deinit[21354] i_x[7869193])
          ref i_x[7869202]:string[244] "temp"
          (7869204 'move' i_x[7869202](7869206 'set reference' call_tmp[7869132]))
          (7869209 call deinit[21354] i_x[7869202])
          ref i_x[7869211]:string[244] "temp"
          (7869213 'move' i_x[7869211](7869215 'set reference' call_tmp[7869120]))
          (7869218 call deinit[21354] i_x[7869211])
          ref i_x[7869220]:string[244] "temp"
          (7869222 'move' i_x[7869220](7869224 'set reference' call_tmp[7869108]))
          (7869227 call deinit[21354] i_x[7869220])
          ref i_x[7869229]:string[244] "temp"
          (7869231 'move' i_x[7869229](7869233 'set reference' call_tmp[7869097]))
          (7869236 call deinit[21354] i_x[7869229])
          ref i_x[7869238]:string[244] "temp"
          (7869240 'move' i_x[7869238](7869242 'set reference' call_tmp[7869085]))
          (7869245 call deinit[21354] i_x[7869238])
          ref i_x[7869247]:string[244] "temp"
          (7869249 'move' i_x[7869247](7869251 'set reference' call_tmp[7869073]))
          (7869254 call deinit[21354] i_x[7869247])
          ref i_x[7869256]:string[244] "temp"
          (7869258 'move' i_x[7869256](7869260 'set reference' call_tmp[7869062]))
          (7869263 call deinit[21354] i_x[7869256])
          (7869266 call boundsCheckHalt[404] msg[7869179])
          ref i_x[7869268]:string[244] "temp"
          (7869270 'move' i_x[7869268](7869272 'set reference' msg[7869179]))
          (7869275 call deinit[21354] i_x[7869268])
        }
      }
      const-val call_tmp[7869279]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7869281 'move' call_tmp[7869279](7869283 '<<' 1 p[7867941]))
      const-val call_tmp[7869286]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7869288 'move' call_tmp[7869286](7869290 '!=' 0 call_tmp[7869279]))
      if call_tmp[7869286]
      {
        (7869296 call halt[1821083] "allocate called with non-power-of-2 alignment " 0)
      }
      const-val call_tmp[7869300]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7869302 'move' call_tmp[7869300](7869305 call sizeof[1521716] c_ptr(void)[1465614]))
      const-val tmp[7869307]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7869309 'move' tmp[7869307](7869311 '<' 0 call_tmp[7869300]))
      if tmp[7869307]
      {
        (7869317 call halt[88131] "allocate called with alignment smaller than pointer size")
      }
      const-val call_tmp[7869320]:int(16)[61] "dead after last mention" "expr temp" "maybe param" "temp"
      (7869322 'move' call_tmp[7869320](7869325 call offset_ARRAY_ELEMENTS[50769]))
      val call_tmp[7869326]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
      (7869328 'move' call_tmp[7869326](7869331 call chpl_here_aligned_alloc[1827971] 0 call_tmp[7867772] call_tmp[7869320]))
      (7869335 '=' ptr[7867822] call_tmp[7869326])
      (9276524 'noop')
    }
    val call_tmp[7869445]:c_ptr(uint(8))[1466369] "dead after last mention" "expr temp" "maybe param" "temp"
    (7869447 'move' call_tmp[7869445](7869449 'cast' c_ptr(uint(8))[1466369] ptr[7867822]))
    val buf[3318019]:c_ptr(uint(8))[1466369] "dead at end of block" "insert auto destroy"
    (3318021 'move' buf[3318019] call_tmp[7869445])
    const-val call_tmp[3318025]:fileReader(false,defaultDeserializer)[1872106] "dead at end of block" "maybe param" "temp"
    val error[5508423]:Error[85511] "error variable" "temp"
    (5508425 'move' error[5508423] nil[32])
    const-val region[7872977]:range(int(64),low,one)[1576928] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[7872979]:range(int(64),low,one)[1576928] "temp"
    (7872982 call chpl_build_low_bounded_range[1576395] 0 ret_tmp[7872979])
    (7872985 'move' region[7872977] ret_tmp[7872979])
    val errorExists[7302008]:bool[19] "temp"
    (7302013 'move' errorExists[7302008](7302010 '!=' error[5508423] nil[32]))
    if errorExists[7302008]
    {
      (5508429 '=' error_out[5508215] error[5508423])
      val error[5633499]:Error[85511] "error variable" "temp"
      (5633501 'move' error[5633499] nil[32])
      (5633505 call close[169420] f[3317816] error[5633499])
      val errorExists[7309032]:bool[19] "temp"
      (7309037 'move' errorExists[7309032](7309034 '!=' error[5633499] nil[32]))
      if errorExists[7309032]
      {
        gotoErrorHandling handler[5633516] handler[5633516]
      }
      label handler[5633516]
      val errorExists[7309040]:bool[19] "temp"
      (7309045 'move' errorExists[7309040](7309042 '!=' error[5633499] nil[32]))
      if errorExists[7309040]
      {
        val call_tmp[5633527]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633529 'move' call_tmp[5633527] error[5633499])
        const-val call_tmp[5633545]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633547]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633550 call init[1499358] initTemp[5633547] call_tmp[5633527])
        (5633553 'move' call_tmp[5633545] initTemp[5633547])
        const-val chpl_anon_error[5633556]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633558 'move' chpl_anon_error[5633556] call_tmp[5633545])
        (5633564 call chpl__autoDestroy[3930254] chpl_anon_error[5633556])
      }
      ref i_x[8586970]:file[168704] "temp"
      (8586974 'move' i_x[8586970](8586972 'set reference' f[3317816]))
      (8586978 call deinit[169291] i_x[8586970])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val default_arg_hints[3329108]:ioHintSet[168555] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[5508438]:Error[85511] "error variable" "temp"
    (5508440 'move' error[5508438] nil[32])
    const-val hints[7873101]:ioHintSet[168555] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[7873103]:ioHintSet[168555] "temp"
    (7873106 call empty[168454] ret_tmp[7873103])
    (7873108 'move' hints[7873101] ret_tmp[7873103])
    (5556036 'move' default_arg_hints[3329108] hints[7873101])
    val errorExists[7302016]:bool[19] "temp"
    (7302021 'move' errorExists[7302016](7302018 '!=' error[5508438] nil[32]))
    if errorExists[7302016]
    {
      (5508444 '=' error_out[5508215] error[5508438])
      val error[5633575]:Error[85511] "error variable" "temp"
      (5633577 'move' error[5633575] nil[32])
      (5633581 call close[169420] f[3317816] error[5633575])
      val errorExists[7309048]:bool[19] "temp"
      (7309053 'move' errorExists[7309048](7309050 '!=' error[5633575] nil[32]))
      if errorExists[7309048]
      {
        gotoErrorHandling handler[5633592] handler[5633592]
      }
      label handler[5633592]
      val errorExists[7309056]:bool[19] "temp"
      (7309061 'move' errorExists[7309056](7309058 '!=' error[5633575] nil[32]))
      if errorExists[7309056]
      {
        val call_tmp[5633603]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633605 'move' call_tmp[5633603] error[5633575])
        const-val call_tmp[5633621]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633623]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633626 call init[1499358] initTemp[5633623] call_tmp[5633603])
        (5633629 'move' call_tmp[5633621] initTemp[5633623])
        const-val chpl_anon_error[5633632]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633634 'move' chpl_anon_error[5633632] call_tmp[5633621])
        (5633640 call chpl__autoDestroy[3930254] chpl_anon_error[5633632])
      }
      ref i_x[8586982]:file[168704] "temp"
      (8586986 'move' i_x[8586982](8586984 'set reference' f[3317816]))
      (8586990 call deinit[169291] i_x[8586982])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val default_arg_deserializer[3329119]:defaultDeserializer[173096] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    val error[5508453]:Error[85511] "error variable" "temp"
    (5508455 'move' error[5508453] nil[32])
    const-val deserializer[7873224]:defaultDeserializer[173096] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[7873226]:defaultDeserializer[173096] "temp"
    (7873229 call defaultSerializeVal[1577483] ret_tmp[7873226])
    (7873231 'move' deserializer[7873224] ret_tmp[7873226])
    (5556060 'move' default_arg_deserializer[3329119] deserializer[7873224])
    val errorExists[7302024]:bool[19] "temp"
    (7302029 'move' errorExists[7302024](7302026 '!=' error[5508453] nil[32]))
    if errorExists[7302024]
    {
      (5508459 '=' error_out[5508215] error[5508453])
      val error[5633654]:Error[85511] "error variable" "temp"
      (5633656 'move' error[5633654] nil[32])
      (5633660 call close[169420] f[3317816] error[5633654])
      val errorExists[7309064]:bool[19] "temp"
      (7309069 'move' errorExists[7309064](7309066 '!=' error[5633654] nil[32]))
      if errorExists[7309064]
      {
        gotoErrorHandling handler[5633671] handler[5633671]
      }
      label handler[5633671]
      val errorExists[7309072]:bool[19] "temp"
      (7309077 'move' errorExists[7309072](7309074 '!=' error[5633654] nil[32]))
      if errorExists[7309072]
      {
        val call_tmp[5633682]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633684 'move' call_tmp[5633682] error[5633654])
        const-val call_tmp[5633700]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633702]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633705 call init[1499358] initTemp[5633702] call_tmp[5633682])
        (5633708 'move' call_tmp[5633700] initTemp[5633702])
        const-val chpl_anon_error[5633711]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633713 'move' chpl_anon_error[5633711] call_tmp[5633700])
        (5633719 call chpl__autoDestroy[3930254] chpl_anon_error[5633711])
      }
      ref i_x[8586994]:file[168704] "temp"
      (8586998 'move' i_x[8586994](8586996 'set reference' f[3317816]))
      (8587002 call deinit[169291] i_x[8586994])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val error[5508468]:Error[85511] "error variable" "temp"
    (5508470 'move' error[5508468] nil[32])
    const-val ret_tmp[5555985]:fileReader(false,defaultDeserializer)[1872106] "temp"
    (3318033 call reader[1871989] f[3317816] region[7872977] default_arg_hints[3329108] default_arg_deserializer[3329119] error[5508468] ret_tmp[5555985])
    (5555988 'move' call_tmp[3318025] ret_tmp[5555985])
    val errorExists[7302032]:bool[19] "temp"
    (7302037 'move' errorExists[7302032](7302034 '!=' error[5508468] nil[32]))
    if errorExists[7302032]
    {
      (5508474 '=' error_out[5508215] error[5508468])
      val error[5633733]:Error[85511] "error variable" "temp"
      (5633735 'move' error[5633733] nil[32])
      (5633739 call close[169420] f[3317816] error[5633733])
      val errorExists[7309080]:bool[19] "temp"
      (7309085 'move' errorExists[7309080](7309082 '!=' error[5633733] nil[32]))
      if errorExists[7309080]
      {
        gotoErrorHandling handler[5633750] handler[5633750]
      }
      label handler[5633750]
      val errorExists[7309088]:bool[19] "temp"
      (7309093 'move' errorExists[7309088](7309090 '!=' error[5633733] nil[32]))
      if errorExists[7309088]
      {
        val call_tmp[5633761]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633763 'move' call_tmp[5633761] error[5633733])
        const-val call_tmp[5633779]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633781]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633784 call init[1499358] initTemp[5633781] call_tmp[5633761])
        (5633787 'move' call_tmp[5633779] initTemp[5633781])
        const-val chpl_anon_error[5633790]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633792 'move' chpl_anon_error[5633790] call_tmp[5633779])
        (5633798 call chpl__autoDestroy[3930254] chpl_anon_error[5633790])
      }
      ref i_x[8587006]:file[168704] "temp"
      (8587010 'move' i_x[8587006](8587008 'set reference' f[3317816]))
      (8587014 call deinit[169291] i_x[8587006])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    const-val r[3318036]:fileReader(false,defaultDeserializer)[1872106] "dead at end of block" "insert auto destroy"
    (3318038 'move' r[3318036] call_tmp[3318025])
    val error[5508506]:Error[85511] "error variable" "temp"
    (5508515 'move' error[5508506] nil[32])
    (3318092 call readBinary[1875424] r[3318036] call_tmp[7869445] call_tmp[3317954] error[5508506])
    val errorExists[7302040]:bool[19] "temp"
    (7302045 'move' errorExists[7302040](7302042 '!=' error[5508506] nil[32]))
    if errorExists[7302040]
    {
      gotoErrorHandling handler[5508507] handler[5508507]
    }
    label handler[5508507]
    val errorExists[7302048]:bool[19] "temp"
    (7302053 'move' errorExists[7302048](7302050 '!=' error[5508506] nil[32]))
    if errorExists[7302048]
    {
      (5508522 '=' error_out[5508215] error[5508506])
      val error[5633816]:Error[85511] "error variable" "temp"
      (5633818 'move' error[5633816] nil[32])
      (5633822 call close[1874827] r[3318036] error[5633816])
      val errorExists[7309096]:bool[19] "temp"
      (7309101 'move' errorExists[7309096](7309098 '!=' error[5633816] nil[32]))
      if errorExists[7309096]
      {
        gotoErrorHandling handler[5633833] handler[5633833]
      }
      label handler[5633833]
      val errorExists[7309104]:bool[19] "temp"
      (7309109 'move' errorExists[7309104](7309106 '!=' error[5633816] nil[32]))
      if errorExists[7309104]
      {
        val call_tmp[5633844]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633846 'move' call_tmp[5633844] error[5633816])
        const-val call_tmp[5633862]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633864]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633867 call init[1499358] initTemp[5633864] call_tmp[5633844])
        (5633870 'move' call_tmp[5633862] initTemp[5633864])
        const-val chpl_anon_error[5633873]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633875 'move' chpl_anon_error[5633873] call_tmp[5633862])
        (5633881 call chpl__autoDestroy[3930254] chpl_anon_error[5633873])
      }
      ref i_x[8598599]:fileReader(false,defaultDeserializer)[1872106] "temp"
      (8598603 'move' i_x[8598599](8598601 'set reference' r[3318036]))
      (8598607 call deinit[4023387] i_x[8598599])
      val error[5633889]:Error[85511] "error variable" "temp"
      (5633891 'move' error[5633889] nil[32])
      (5633895 call close[169420] f[3317816] error[5633889])
      val errorExists[7309112]:bool[19] "temp"
      (7309117 'move' errorExists[7309112](7309114 '!=' error[5633889] nil[32]))
      if errorExists[7309112]
      {
        gotoErrorHandling handler[5633906] handler[5633906]
      }
      label handler[5633906]
      val errorExists[7309120]:bool[19] "temp"
      (7309125 'move' errorExists[7309120](7309122 '!=' error[5633889] nil[32]))
      if errorExists[7309120]
      {
        val call_tmp[5633917]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633919 'move' call_tmp[5633917] error[5633889])
        const-val call_tmp[5633935]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5633937]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5633940 call init[1499358] initTemp[5633937] call_tmp[5633917])
        (5633943 'move' call_tmp[5633935] initTemp[5633937])
        const-val chpl_anon_error[5633946]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5633948 'move' chpl_anon_error[5633946] call_tmp[5633935])
        (5633954 call chpl__autoDestroy[3930254] chpl_anon_error[5633946])
      }
      ref i_x[8587018]:file[168704] "temp"
      (8587022 'move' i_x[8587018](8587020 'set reference' f[3317816]))
      (8587026 call deinit[169291] i_x[8587018])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val error[5508534]:Error[85511] "error variable" "temp"
    (5508543 'move' error[5508534] nil[32])
    (3318105 call close[1874827] r[3318036] error[5508534])
    val errorExists[7302056]:bool[19] "temp"
    (7302061 'move' errorExists[7302056](7302058 '!=' error[5508534] nil[32]))
    if errorExists[7302056]
    {
      gotoErrorHandling handler[5508535] handler[5508535]
    }
    label handler[5508535]
    val errorExists[7302064]:bool[19] "temp"
    (7302069 'move' errorExists[7302064](7302066 '!=' error[5508534] nil[32]))
    if errorExists[7302064]
    {
      (5508550 '=' error_out[5508215] error[5508534])
      val error[5633962]:Error[85511] "error variable" "temp"
      (5633964 'move' error[5633962] nil[32])
      (5633968 call close[1874827] r[3318036] error[5633962])
      val errorExists[7309128]:bool[19] "temp"
      (7309133 'move' errorExists[7309128](7309130 '!=' error[5633962] nil[32]))
      if errorExists[7309128]
      {
        gotoErrorHandling handler[5633979] handler[5633979]
      }
      label handler[5633979]
      val errorExists[7309136]:bool[19] "temp"
      (7309141 'move' errorExists[7309136](7309138 '!=' error[5633962] nil[32]))
      if errorExists[7309136]
      {
        val call_tmp[5633990]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5633992 'move' call_tmp[5633990] error[5633962])
        const-val call_tmp[5634008]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5634010]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5634013 call init[1499358] initTemp[5634010] call_tmp[5633990])
        (5634016 'move' call_tmp[5634008] initTemp[5634010])
        const-val chpl_anon_error[5634019]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5634021 'move' chpl_anon_error[5634019] call_tmp[5634008])
        (5634027 call chpl__autoDestroy[3930254] chpl_anon_error[5634019])
      }
      ref i_x[8598611]:fileReader(false,defaultDeserializer)[1872106] "temp"
      (8598615 'move' i_x[8598611](8598613 'set reference' r[3318036]))
      (8598619 call deinit[4023387] i_x[8598611])
      val error[5634035]:Error[85511] "error variable" "temp"
      (5634037 'move' error[5634035] nil[32])
      (5634041 call close[169420] f[3317816] error[5634035])
      val errorExists[7309144]:bool[19] "temp"
      (7309149 'move' errorExists[7309144](7309146 '!=' error[5634035] nil[32]))
      if errorExists[7309144]
      {
        gotoErrorHandling handler[5634052] handler[5634052]
      }
      label handler[5634052]
      val errorExists[7309152]:bool[19] "temp"
      (7309157 'move' errorExists[7309152](7309154 '!=' error[5634035] nil[32]))
      if errorExists[7309152]
      {
        val call_tmp[5634063]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5634065 'move' call_tmp[5634063] error[5634035])
        const-val call_tmp[5634081]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5634083]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5634086 call init[1499358] initTemp[5634083] call_tmp[5634063])
        (5634089 'move' call_tmp[5634081] initTemp[5634083])
        const-val chpl_anon_error[5634092]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5634094 'move' chpl_anon_error[5634092] call_tmp[5634081])
        (5634100 call chpl__autoDestroy[3930254] chpl_anon_error[5634092])
      }
      ref i_x[8587030]:file[168704] "temp"
      (8587034 'move' i_x[8587030](8587032 'set reference' f[3317816]))
      (8587038 call deinit[169291] i_x[8587030])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    val error[5508562]:Error[85511] "error variable" "temp"
    (5508571 'move' error[5508562] nil[32])
    (3318114 call close[169420] f[3317816] error[5508562])
    val errorExists[7302072]:bool[19] "temp"
    (7302077 'move' errorExists[7302072](7302074 '!=' error[5508562] nil[32]))
    if errorExists[7302072]
    {
      gotoErrorHandling handler[5508563] handler[5508563]
    }
    label handler[5508563]
    val errorExists[7302080]:bool[19] "temp"
    (7302085 'move' errorExists[7302080](7302082 '!=' error[5508562] nil[32]))
    if errorExists[7302080]
    {
      (5508578 '=' error_out[5508215] error[5508562])
      val error[5634108]:Error[85511] "error variable" "temp"
      (5634110 'move' error[5634108] nil[32])
      (5634114 call close[1874827] r[3318036] error[5634108])
      val errorExists[7309160]:bool[19] "temp"
      (7309165 'move' errorExists[7309160](7309162 '!=' error[5634108] nil[32]))
      if errorExists[7309160]
      {
        gotoErrorHandling handler[5634125] handler[5634125]
      }
      label handler[5634125]
      val errorExists[7309168]:bool[19] "temp"
      (7309173 'move' errorExists[7309168](7309170 '!=' error[5634108] nil[32]))
      if errorExists[7309168]
      {
        val call_tmp[5634136]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5634138 'move' call_tmp[5634136] error[5634108])
        const-val call_tmp[5634154]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5634156]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5634159 call init[1499358] initTemp[5634156] call_tmp[5634136])
        (5634162 'move' call_tmp[5634154] initTemp[5634156])
        const-val chpl_anon_error[5634165]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5634167 'move' chpl_anon_error[5634165] call_tmp[5634154])
        (5634173 call chpl__autoDestroy[3930254] chpl_anon_error[5634165])
      }
      ref i_x[8598623]:fileReader(false,defaultDeserializer)[1872106] "temp"
      (8598627 'move' i_x[8598623](8598625 'set reference' r[3318036]))
      (8598631 call deinit[4023387] i_x[8598623])
      val error[5634181]:Error[85511] "error variable" "temp"
      (5634183 'move' error[5634181] nil[32])
      (5634187 call close[169420] f[3317816] error[5634181])
      val errorExists[7309176]:bool[19] "temp"
      (7309181 'move' errorExists[7309176](7309178 '!=' error[5634181] nil[32]))
      if errorExists[7309176]
      {
        gotoErrorHandling handler[5634198] handler[5634198]
      }
      label handler[5634198]
      val errorExists[7309184]:bool[19] "temp"
      (7309189 'move' errorExists[7309184](7309186 '!=' error[5634181] nil[32]))
      if errorExists[7309184]
      {
        val call_tmp[5634209]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5634211 'move' call_tmp[5634209] error[5634181])
        const-val call_tmp[5634227]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5634229]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5634232 call init[1499358] initTemp[5634229] call_tmp[5634209])
        (5634235 'move' call_tmp[5634227] initTemp[5634229])
        const-val chpl_anon_error[5634238]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5634240 'move' chpl_anon_error[5634238] call_tmp[5634227])
        (5634246 call chpl__autoDestroy[3930254] chpl_anon_error[5634238])
      }
      ref i_x[8587042]:file[168704] "temp"
      (8587046 'move' i_x[8587042](8587044 'set reference' f[3317816]))
      (8587050 call deinit[169291] i_x[8587042])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    ref call_tmp[7472526]:uint(8)[71] "dead after last mention" "maybe param" "temp"
    (7472528 'move' call_tmp[7472526](7472530 'array_get' buf[3318019] call_tmp[3317954]))
    const-val coerce_tmp[3329161]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3329167 'move' coerce_tmp[3329161](3329163 'cast' uint(8)[71] 0))
    (7483534 '=' call_tmp[7472526] coerce_tmp[3329161])
    const-val call_tmp[7480190]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7480192 'move' call_tmp[7480190](7480194 '+' call_tmp[3317954] 1))
    val error[5508591]:Error[85511] "error variable" "temp"
    (5508593 'move' error[5508591] nil[32])
    const-val ret[7655909]:string[244] "dead after last mention" "RVV" "temp"
    val ret[7655911]:string[244] "dead at end of block" "insert auto destroy"
    (7655914 call init[21321] ret[7655911])
    const-val call_tmp[7655916]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[7655918]:Error[85511] "error variable" "temp"
    (7655920 'move' error[7655918] nil[32])
    (7655923 'move' call_tmp[7655916](7655926 call validateEncoding[1540096] call_tmp[7869445] call_tmp[3317954] error[7655918]))
    val errorExists[7655930]:bool[19] "temp"
    (7655932 'move' errorExists[7655930](7655934 '!=' error[7655918] nil[32]))
    if errorExists[7655930]
    {
      (7655939 '=' error[5508591] error[7655918])
      ref i_x[7655942]:string[244] "temp"
      (7655944 'move' i_x[7655942](7655946 'set reference' ret[7655911]))
      (7655949 call deinit[21354] i_x[7655942])
      gotoErrorHandlingReturn _end_createAdoptingBuffer[7655983] _end_createAdoptingBuffer[7655983]
    }
    (7655954 '.=' ret[7655911] cachedNumCodepoints[21293] call_tmp[7655916])
    ref i_x[7655958]:string[244] "temp"
    (7655960 'move' i_x[7655958](7655962 'set reference' ret[7655911]))
    (7655964 '.=' i_x[7655958] isOwned[21305] 1)
    (7655968 '.=' i_x[7655958] buff[21299] call_tmp[7869445])
    (7655972 '.=' i_x[7655958] buffSize[21287] call_tmp[7480190])
    (7655976 '.=' i_x[7655958] buffLen[21281] call_tmp[3317954])
    (7655980 '=' ret[7655909] ret[7655911])
    label _end_createAdoptingBuffer[7655983]
    val errorExists[7302088]:bool[19] "temp"
    (7302093 'move' errorExists[7302088](7302090 '!=' error[5508591] nil[32]))
    if errorExists[7302088]
    {
      (5508597 '=' error_out[5508215] error[5508591])
      val error[5634254]:Error[85511] "error variable" "temp"
      (5634256 'move' error[5634254] nil[32])
      (5634260 call close[1874827] r[3318036] error[5634254])
      val errorExists[7309192]:bool[19] "temp"
      (7309197 'move' errorExists[7309192](7309194 '!=' error[5634254] nil[32]))
      if errorExists[7309192]
      {
        gotoErrorHandling handler[5634271] handler[5634271]
      }
      label handler[5634271]
      val errorExists[7309200]:bool[19] "temp"
      (7309205 'move' errorExists[7309200](7309202 '!=' error[5634254] nil[32]))
      if errorExists[7309200]
      {
        val call_tmp[5634282]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5634284 'move' call_tmp[5634282] error[5634254])
        const-val call_tmp[5634300]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5634302]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5634305 call init[1499358] initTemp[5634302] call_tmp[5634282])
        (5634308 'move' call_tmp[5634300] initTemp[5634302])
        const-val chpl_anon_error[5634311]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5634313 'move' chpl_anon_error[5634311] call_tmp[5634300])
        (5634319 call chpl__autoDestroy[3930254] chpl_anon_error[5634311])
      }
      ref i_x[8598635]:fileReader(false,defaultDeserializer)[1872106] "temp"
      (8598639 'move' i_x[8598635](8598637 'set reference' r[3318036]))
      (8598643 call deinit[4023387] i_x[8598635])
      val error[5634327]:Error[85511] "error variable" "temp"
      (5634329 'move' error[5634327] nil[32])
      (5634333 call close[169420] f[3317816] error[5634327])
      val errorExists[7309208]:bool[19] "temp"
      (7309213 'move' errorExists[7309208](7309210 '!=' error[5634327] nil[32]))
      if errorExists[7309208]
      {
        gotoErrorHandling handler[5634344] handler[5634344]
      }
      label handler[5634344]
      val errorExists[7309216]:bool[19] "temp"
      (7309221 'move' errorExists[7309216](7309218 '!=' error[5634327] nil[32]))
      if errorExists[7309216]
      {
        val call_tmp[5634355]:Error[85511] "dead after last mention" "maybe param" "temp"
        (5634357 'move' call_tmp[5634355] error[5634327])
        const-val call_tmp[5634373]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
        const-val initTemp[5634375]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
        (5634378 call init[1499358] initTemp[5634375] call_tmp[5634355])
        (5634381 'move' call_tmp[5634373] initTemp[5634375])
        const-val chpl_anon_error[5634384]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
        (5634386 'move' chpl_anon_error[5634384] call_tmp[5634373])
        (5634392 call chpl__autoDestroy[3930254] chpl_anon_error[5634384])
      }
      ref i_x[8587054]:file[168704] "temp"
      (8587058 'move' i_x[8587054](8587056 'set reference' f[3317816]))
      (8587062 call deinit[169291] i_x[8587054])
      gotoErrorHandlingReturn _end_chpl_do_format[3318174] _end_chpl_do_format[3318174]
    }
    (3329173 '=' ret[3317795] ret[7655909])
    val error[5634400]:Error[85511] "error variable" "temp"
    (5634402 'move' error[5634400] nil[32])
    (5634406 call close[1874827] r[3318036] error[5634400])
    val errorExists[7309224]:bool[19] "temp"
    (7309229 'move' errorExists[7309224](7309226 '!=' error[5634400] nil[32]))
    if errorExists[7309224]
    {
      gotoErrorHandling handler[5634417] handler[5634417]
    }
    label handler[5634417]
    val errorExists[7309232]:bool[19] "temp"
    (7309237 'move' errorExists[7309232](7309234 '!=' error[5634400] nil[32]))
    if errorExists[7309232]
    {
      val call_tmp[5634428]:Error[85511] "dead after last mention" "maybe param" "temp"
      (5634430 'move' call_tmp[5634428] error[5634400])
      const-val call_tmp[5634446]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[5634448]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
      (5634451 call init[1499358] initTemp[5634448] call_tmp[5634428])
      (5634454 'move' call_tmp[5634446] initTemp[5634448])
      const-val chpl_anon_error[5634457]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
      (5634459 'move' chpl_anon_error[5634457] call_tmp[5634446])
      (5634465 call chpl__autoDestroy[3930254] chpl_anon_error[5634457])
    }
    ref i_x[8598647]:fileReader(false,defaultDeserializer)[1872106] "temp"
    (8598651 'move' i_x[8598647](8598649 'set reference' r[3318036]))
    (8598655 call deinit[4023387] i_x[8598647])
    val error[5634473]:Error[85511] "error variable" "temp"
    (5634475 'move' error[5634473] nil[32])
    (5634479 call close[169420] f[3317816] error[5634473])
    val errorExists[7309240]:bool[19] "temp"
    (7309245 'move' errorExists[7309240](7309242 '!=' error[5634473] nil[32]))
    if errorExists[7309240]
    {
      gotoErrorHandling handler[5634490] handler[5634490]
    }
    label handler[5634490]
    val errorExists[7309248]:bool[19] "temp"
    (7309253 'move' errorExists[7309248](7309250 '!=' error[5634473] nil[32]))
    if errorExists[7309248]
    {
      val call_tmp[5634501]:Error[85511] "dead after last mention" "maybe param" "temp"
      (5634503 'move' call_tmp[5634501] error[5634473])
      const-val call_tmp[5634519]:owned Error[1498203] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[5634521]:owned Error[1498203] "dead at end of block" "delay instantiation" "temp"
      (5634524 call init[1499358] initTemp[5634521] call_tmp[5634501])
      (5634527 'move' call_tmp[5634519] initTemp[5634521])
      const-val chpl_anon_error[5634530]:owned Error[1498203] "dead at end of block" "delay instantiation" "insert auto destroy"
      (5634532 'move' chpl_anon_error[5634530] call_tmp[5634519])
      (5634538 call chpl__autoDestroy[3930254] chpl_anon_error[5634530])
    }
    ref i_x[8587066]:file[168704] "temp"
    (8587070 'move' i_x[8587066](8587068 'set reference' f[3317816]))
    (8587074 call deinit[169291] i_x[8587066])
    label _end_chpl_do_format[3318174]
    (5588920 '=' _retArg[5588918] ret[3317795])
    (5588922 return _void[46])
  }
  function boundsCheckHelp[200184](const  ref arg j[5491290]:int(64)[10], const in arg argTypeLen[5491292]:int(64)[10]) : void[4] "resolved" "fn synchronization free" "no return value for void"
  {
    const-val coerce_tmp[3037745]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3037749 'move' coerce_tmp[3037745](3037747 'deref' j[5491290]))
    const-val call_tmp[7379322]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7379324 'move' call_tmp[7379322](7379326 '>=' coerce_tmp[3037745] argTypeLen[5491292]))
    if call_tmp[7379322]
    {
      const-val coerce_tmp[3037752]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (3037756 'move' coerce_tmp[3037752](3037754 'deref' j[5491290]))
      (200190 call halt[1673640] "Index " coerce_tmp[3037752] " is accessed on argType of length " argTypeLen[5491292])
    }
    (618738 return _void[46])
  }
}
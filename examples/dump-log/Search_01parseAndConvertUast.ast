AST dump for Search after pass parseAndConvertUast.
Module use list: 

{
  (387058 'use' ChapelStandard)
  (275195 'use' Sort 'only' DefaultComparator, ReverseComparator)
  def module HideDeprecatedReexport[275204]  
  (275207 'use' HideDeprecatedReexport)
  (275210 'use' Sort)
  function search[275212](arg Data[275218] :
  (275216 call chpl__buildArrayRuntimeType unknown Dom[275214]), arg val[275221]:_any[141](?), arg comparator[275228] :
  unknown rec[275223] =
  (275225 'new'(275227 call DefaultComparator)), arg lo[275236] =
  (275233 call . Dom c"low"), arg hi[275243] =
  (275240 call . Dom c"high"), arg sorted[275247] =
  0) : _unknown[42]
  {
    if(275270 call _cond_test sorted)
    {
      { scopeless
        (275251 return(275253 call binarySearch Data val comparator lo hi))
      }
    }
    {
      { scopeless
        (275260 return(275262 call linearSearch Data val comparator lo hi))
      }
    }
  }
  function search[275278](arg Data[275284] :
  (275282 call chpl__buildArrayRuntimeType unknown Dom[275280]), arg val[275287]:_any[141](?), arg comparator[275294] :
  unknown rec[275289] =
  (275291 'new'(275293 call DefaultComparator)), arg lo[275302] =
  (275299 call . Dom c"low"), arg hi[275309] =
  (275306 call . Dom c"high"), arg sorted[275313] =
  0) : _unknown[42]
  {
    (275325 call compilerError "search() requires 1-D array")
  }
  where {
    (275316 call !=(275319 call . Dom c"rank") 1)
  }
  function linearSearch[275332](arg Data[275338] :
  (275336 call chpl__buildArrayRuntimeType unknown Dom[275334]), arg val[275341]:_any[141](?), arg comparator[275348] :
  unknown rec[275343] =
  (275345 'new'(275347 call DefaultComparator)), arg lo[275356] =
  (275353 call . Dom c"low"), arg hi[275363] =
  (275360 call . Dom c"high")) : _unknown[42]
  {
    (275368 call chpl_check_comparator comparator(275371 call . Data c"eltType"))
    { scopeless
      const stride[275375] "const"(275377 call abs(275379 call . Dom c"stride"))
      (275383 'end of statement')
    }
    {
      unknown _indexOfInterest[275428] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[275429] "expr temp" "temp"
      (275438 'move' _iterator[275429](275436 call _getIterator(275459 call chpl_direct_strided_range_iter lo hi(275456 IfExpr (275448 call(275445 call . Dom c"hasPosNegUnitStride")) then
      { scopeless
        1
      } else
      { scopeless
        (275453 call : stride uint[86])
      } ))))
      Defer
      {
        {
          (275474 call _freeIterator _iterator[275429])
        }
      }
      { scopeless type
        (275464 'move' _indexOfInterest[275428](275461 call iteratorIndex _iterator[275429]))
      }
      ForLoop[275430]
      {
        unknown i[275384] "index var" "insert auto destroy"
        (275469 'move' i[275384] _indexOfInterest[275428])
        { scopeless
          if(275423 call _cond_test(275412 call ==(275415 call chpl_compare(275417 call Data i) val(comparator = comparator)) 0))
          {
            { scopeless
              (275405 return(275409 call _build_tuple 1 i))
            }
          }
        }
        label _continueLabel[275433]
        _indexOfInterest[275428]
        _iterator[275429]
      }
      label _breakLabel[275434]
    }
    (275481 return(275488 call _build_tuple 0(275484 call + hi stride)))
  }
  function linearSearch[275492](arg Data[275498] :
  (275496 call chpl__buildArrayRuntimeType unknown Dom[275494]), arg val[275501]:_any[141](?), arg comparator[275508] :
  unknown rec[275503] =
  (275505 'new'(275507 call DefaultComparator)), arg lo[275516] =
  (275513 call . Dom c"low"), arg hi[275523] =
  (275520 call . Dom c"high")) : _unknown[42]
  {
    (275535 call compilerError "linearSearch() requires 1-D array")
  }
  where {
    (275526 call !=(275529 call . Dom c"rank") 1)
  }
  function binarySearch[275542](arg Data[275548] :
  (275546 call chpl__buildArrayRuntimeType unknown Dom[275544]), arg val[275551]:_any[141](?), arg comparator[275558] :
  unknown rec[275553] =
  (275555 'new'(275557 call DefaultComparator)), in arg lo[275566] =
  (275563 call . Dom c"low"), in arg hi[275573] =
  (275570 call . Dom c"high")) : _unknown[42]
  {
    (275578 call chpl_check_comparator comparator(275581 call . Data c"eltType"))
    if(275597 call _cond_test(275590 call !=(275593 call . Dom c"rank") 1))
    {
      { scopeless
        (275585 call compilerError "binarySearch() requires 1-D array")
      }
    }
    { scopeless
      const stride[275603] "const"(275605 call abs(275607 call . Dom c"stride"))
      (275611 'end of statement')
    }
    {
      unknown tmp[275730] "temp"
      (275754 'move' tmp[275730](275749 call _cond_test(275751 call <= lo hi)))
      WhileDo[275735]
      {
        {
          { scopeless
            { scopeless
              const size[275663] "const"(275664 call /(275666 call - hi lo) stride)
            }
            { scopeless
              const mid[275619] "const"(275658 IfExpr (275620 call == hi lo) then
              { scopeless
                hi
              } else
              { scopeless(275655 IfExpr (275625 call % size 2) then
                { scopeless
                  (275629 call + lo(275632 call *(275634 call /(275636 call - size 1) 2) stride))
                } else
                { scopeless
                  (275642 call + lo(275645 call *(275647 call -(275649 call / size 2) 1) stride))
                } )
              } )
            }
            (275672 'end of statement')
          }
          if(275724 call _cond_test(275713 call ==(275716 call chpl_compare(275718 call Data mid) val(comparator = comparator)) 0))
          {
            { scopeless
              (275673 return(275677 call _build_tuple 1 mid))
            }
          }
          {
            { scopeless
              if(275707 call _cond_test(275696 call >(275699 call chpl_compare val(275702 call Data mid)(comparator = comparator)) 0))
              {
                { scopeless
                  (275680 call = lo(275683 call + mid stride))
                }
              }
              {
                { scopeless
                  (275688 call = hi(275691 call - mid stride))
                }
              }
            }
          }
        }
        label _continueLabel[275733]
        (275744 'move' tmp[275730](275739 call _cond_test(275741 call <= lo hi)))
        tmp[275730]
      }
      label _breakLabel[275734]
    }
    (275757 return(275761 call _build_tuple 0 lo))
  }
  function binarySearch[275765](arg Data[275771] :
  (275769 call chpl__buildArrayRuntimeType unknown Dom[275767]), arg val[275774]:_any[141](?), arg comparator[275781] :
  unknown rec[275776] =
  (275778 'new'(275780 call DefaultComparator)), in arg lo[275789] =
  (275786 call . Dom c"low"), in arg hi[275796] =
  (275793 call . Dom c"high")) : _unknown[42]
  {
    (275806 call chpl_check_comparator comparator(275809 call . Data c"eltType"))
    if(275823 call _cond_test(275816 call !=(275819 call . Dom c"rank") 1))
    {
      { scopeless
        (275813 call compilerError "binarySearch() requires 1-D array")
      }
    }
    {
      unknown tmp[275904] "temp"
      (275928 'move' tmp[275904](275923 call _cond_test(275925 call <= lo hi)))
      WhileDo[275909]
      {
        {
          { scopeless
            const mid[275834] "const"(275835 call +(275837 call /(275839 call - hi lo) 2) lo)
            (275846 'end of statement')
          }
          if(275898 call _cond_test(275887 call ==(275890 call chpl_compare(275892 call Data mid) val(comparator = comparator)) 0))
          {
            { scopeless
              (275847 return(275851 call _build_tuple 1 mid))
            }
          }
          {
            { scopeless
              if(275881 call _cond_test(275870 call >(275873 call chpl_compare val(275876 call Data mid)(comparator = comparator)) 0))
              {
                { scopeless
                  (275854 call = lo(275857 call + mid 1))
                }
              }
              {
                { scopeless
                  (275862 call = hi(275865 call - mid 1))
                }
              }
            }
          }
        }
        label _continueLabel[275907]
        (275918 'move' tmp[275904](275913 call _cond_test(275915 call <= lo hi)))
        tmp[275904]
      }
      label _breakLabel[275908]
    }
    (275931 return(275935 call _build_tuple 0 lo))
  }
  where {
    (275803 call(275800 call . Dom c"hasUnitStride"))
  }
}
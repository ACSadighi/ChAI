AST dump for ChapelArrayViewElision after pass buildDefaultFunctions.
Module use list: ChapelBase ChapelRange DefaultRectangular CTypes ChapelArray Reflection 

{
  function chpl__init_ChapelArrayViewElision[468453]() : void[4] "insert line file info" "module init"
  {
    (611384 return _void[46])
  }
  function chpl__createProtoSlice[147284](ref arg Arr[147286]:_any[141](?), arg slicingExprs[147289]:_any[141](?) ...) : _unknown[42]
  {
    unknown ret[610946] "RVV" "temp"
    unknown call_tmp[818576] "expr temp" "maybe param" "maybe type" "temp"
    (818579 'move' call_tmp[818576](147324 call size _mt[203] slicingExprs[147289]))
    unknown call_tmp[818581] "expr temp" "maybe param" "maybe type" "temp"
    (818584 'move' call_tmp[818581](147321 call == call_tmp[818576] 1))
    unknown call_tmp[818586] "expr temp" "maybe param" "maybe type" "temp"
    (818589 'move' call_tmp[818586](147328 call _cond_test call_tmp[818581]))
    if call_tmp[818586]
    {
      unknown call_tmp[818591] "expr temp" "maybe param" "maybe type" "temp"
      (818594 'move' call_tmp[818591](147304 call c_addrOf Arr[147286]))
      unknown call_tmp[818596] "expr temp" "maybe param" "maybe type" "temp"
      (818599 'move' call_tmp[818596](147307 call slicingExprs[147289] 0))
      unknown call_tmp[818601] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (818604 'move' call_tmp[818601](1000143 'new' chpl__protoSlice[148800](?)(isConst = 0) call_tmp[818591] call_tmp[818596]))
      (610951 'move' ret[610946](610950 'deref' call_tmp[818601]))
      gotoReturn _end_chpl__createProtoSlice[610944] _end_chpl__createProtoSlice[610944]
    }
    {
      unknown call_tmp[818606] "expr temp" "maybe param" "maybe type" "temp"
      (818609 'move' call_tmp[818606](147317 call c_addrOf Arr[147286]))
      unknown call_tmp[818611] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (818614 'move' call_tmp[818611](1000144 'new' chpl__protoSlice[148800](?)(isConst = 0) call_tmp[818606] slicingExprs[147289]))
      (610956 'move' ret[610946](610955 'deref' call_tmp[818611]))
      gotoReturn _end_chpl__createProtoSlice[610944] _end_chpl__createProtoSlice[610944]
    }
    label _end_chpl__createProtoSlice[610944]
    (610948 return ret[610946])
  }
  where {
    (147293 call chpl__createProtoSliceArgCheck Arr[147286] slicingExprs[147289])
  }
  function chpl__createConstProtoSlice[147337](const  ref arg Arr[147339]:_any[141](?), arg slicingExprs[147342]:_any[141](?) ...) : _unknown[42]
  {
    unknown ret[610962] "RVV" "temp"
    unknown call_tmp[818618] "expr temp" "maybe param" "maybe type" "temp"
    (818621 'move' call_tmp[818618](147377 call size _mt[203] slicingExprs[147342]))
    unknown call_tmp[818623] "expr temp" "maybe param" "maybe type" "temp"
    (818626 'move' call_tmp[818623](147374 call == call_tmp[818618] 1))
    unknown call_tmp[818628] "expr temp" "maybe param" "maybe type" "temp"
    (818631 'move' call_tmp[818628](147381 call _cond_test call_tmp[818623]))
    if call_tmp[818628]
    {
      unknown call_tmp[818633] "expr temp" "maybe param" "maybe type" "temp"
      (818636 'move' call_tmp[818633](147358 call c_addrOfConst Arr[147339]))
      unknown call_tmp[818638] "expr temp" "maybe param" "maybe type" "temp"
      (818641 'move' call_tmp[818638](147361 call slicingExprs[147342] 0))
      unknown call_tmp[818643] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (818646 'move' call_tmp[818643](1000145 'new' chpl__protoSlice[148800](?)(isConst = 1) call_tmp[818633] call_tmp[818638]))
      (610967 'move' ret[610962](610966 'deref' call_tmp[818643]))
      gotoReturn _end_chpl__createConstProtoSlice[610960] _end_chpl__createConstProtoSlice[610960]
    }
    {
      unknown call_tmp[818648] "expr temp" "maybe param" "maybe type" "temp"
      (818651 'move' call_tmp[818648](147370 call c_addrOfConst Arr[147339]))
      unknown call_tmp[818653] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (818656 'move' call_tmp[818653](1000146 'new' chpl__protoSlice[148800](?)(isConst = 1) call_tmp[818648] slicingExprs[147342]))
      (610972 'move' ret[610962](610971 'deref' call_tmp[818653]))
      gotoReturn _end_chpl__createConstProtoSlice[610960] _end_chpl__createConstProtoSlice[610960]
    }
    label _end_chpl__createConstProtoSlice[610960]
    (610964 return ret[610962])
  }
  where {
    (147346 call chpl__createProtoSliceArgCheck Arr[147339] slicingExprs[147342])
  }
  function chpl__createProtoSlice[147389](arg x[147391]:_any[141](?), arg slicingExprs[147394]:_any[141](?) ...) : _unknown[42]
  {
    unknown ret[610978] "RVV" "temp"
    unknown call_tmp[818658] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (818661 'move' call_tmp[818658](1000147 'new' chpl__protoSlice[148800](?)))
    (610983 'move' ret[610978](610982 'deref' call_tmp[818658]))
    (610980 return ret[610978])
  }
  function chpl__createConstProtoSlice[147404](arg x[147406]:_any[141](?), arg slicingExprs[147409]:_any[141](?) ...) : _unknown[42]
  {
    unknown ret[610987] "RVV" "temp"
    unknown call_tmp[818663] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (818666 'move' call_tmp[818663](1000148 'new' chpl__protoSlice[148800](?)))
    (610992 'move' ret[610987](610991 'deref' call_tmp[818663]))
    (610989 return ret[610987])
  }
  function chpl__ave_exprCanBeProtoSlice[147419](arg base[147421]:_any[141](?), arg idxExprs[147424]:_any[141](?) ...) param : _unknown[42]
  {
    unknown ret[610996] "RVV" "param" "temp"
    unknown tmp[488673] "maybe param" "temp"
    (488684 'move' tmp[488673](147433 call chpl__ave_baseTypeSupports base[147421]))
    unknown call_tmp[818668] "expr temp" "maybe param" "maybe type" "temp"
    (818671 'move' call_tmp[818668](488686 call _cond_invalid tmp[488673]))
    if call_tmp[818668]
    {
      (488689 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681043] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681044] "maybe param" "temp"
    unknown call_tmp[818673] "expr temp" "maybe param" "maybe type" "temp"
    (818676 'move' call_tmp[818673](488674 call isTrue tmp[488673]))
    (681049 'move' tmp[681044](681047 call _cond_test call_tmp[818673]))
    if tmp[681044]
    {
      unknown tmp[681051] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[818680] "expr temp" "maybe param" "maybe type" "temp"
      (818683 'move' call_tmp[818680](147438 call idxType _mt[203] base[147421]))
      unknown call_tmp[818685] "expr temp" "maybe param" "maybe type" "temp"
      (818688 'move' call_tmp[818685](147436 call chpl__ave_idxExprsSupport call_tmp[818680](147442 'expand_tuple' idxExprs[147424])))
      (681053 'move' tmp[681051](488677 call isTrue call_tmp[818685]))
      (681058 'move' tmp[681043](681055 '_paramFoldLogical' tmp[681044] tmp[681051]))
    }
    {
      (681063 'move' tmp[681043](681060 '_paramFoldLogical' tmp[681044] 0))
    }
    (611002 'move' ret[610996](611001 'coerce' tmp[681043] bool[19]))
    (610998 return ret[610996])
  }
  { scopeless type
    bool[19]
  }
  function chpl__ave_protoSlicesSupportAssignment[147446](arg a[147449]:chpl__protoSlice[148800](?), arg b[147453]:chpl__protoSlice[148800](?)) param : _unknown[42]
  {
    unknown ret[611006] "RVV" "param" "temp"
    unknown call_tmp[818692] "expr temp" "maybe param" "maybe type" "temp"
    (818695 'move' call_tmp[818692](147466 call isRankChange _mt[203] a[147449]))
    unknown call_tmp[818699] "expr temp" "maybe param" "maybe type" "temp"
    (818702 'move' call_tmp[818699](147470 call isRankChange _mt[203] b[147453]))
    unknown call_tmp[818704] "expr temp" "maybe param" "maybe type" "temp"
    (818707 'move' call_tmp[818704](147461 call != call_tmp[818692] call_tmp[818699]))
    unknown call_tmp[818709] "expr temp" "maybe param" "maybe type" "temp"
    (818712 'move' call_tmp[818709](147473 call _cond_test call_tmp[818704]))
    if call_tmp[818709]
    {
      (611012 'move' ret[611006](611011 'coerce' 0 bool[19]))
      gotoReturn _end_chpl__ave_protoSlicesSupportAssignment[611004] _end_chpl__ave_protoSlicesSupportAssignment[611004]
    }
    unknown call_tmp[818716] "expr temp" "maybe param" "maybe type" "temp"
    (818719 'move' call_tmp[818716](147484 call isRankChange _mt[203] a[147449]))
    unknown call_tmp[818721] "expr temp" "maybe param" "maybe type" "temp"
    (818724 'move' call_tmp[818721](147481 call ! call_tmp[818716]))
    unknown call_tmp[818726] "expr temp" "maybe param" "maybe type" "temp"
    (818729 'move' call_tmp[818726](147487 call _cond_test call_tmp[818721]))
    if call_tmp[818726]
    {
      (611018 'move' ret[611006](611017 'coerce' 1 bool[19]))
      gotoReturn _end_chpl__ave_protoSlicesSupportAssignment[611004] _end_chpl__ave_protoSlicesSupportAssignment[611004]
    }
    unknown aType[147493] "dead at end of block" "insert auto destroy" "type variable"
    (646216 'move' aType[147493](646213 call slicingExprType _mt[203] a[147449]))
    (554894 'end of statement')
    unknown bType[147502] "dead at end of block" "insert auto destroy" "type variable"
    (646222 'move' bType[147502](646219 call slicingExprType _mt[203] b[147453]))
    (554895 'end of statement')
    unknown call_tmp[818737] "expr temp" "maybe param" "maybe type" "temp"
    (818740 'move' call_tmp[818737](147513 call slicingExprType _mt[203] a[147449]))
    unknown call_tmp[818744] "expr temp" "maybe param" "maybe type" "temp"
    (818747 'move' call_tmp[818744](147516 call size _mt[203] call_tmp[818737]))
    unknown call_tmp[818751] "expr temp" "maybe param" "maybe type" "temp"
    (818754 'move' call_tmp[818751](147520 call slicingExprType _mt[203] b[147453]))
    unknown call_tmp[818758] "expr temp" "maybe param" "maybe type" "temp"
    (818761 'move' call_tmp[818758](147523 call size _mt[203] call_tmp[818751]))
    unknown call_tmp[818763] "expr temp" "maybe param" "maybe type" "temp"
    (818766 'move' call_tmp[818763](147510 call == call_tmp[818744] call_tmp[818758]))
    (147509 call compilerAssert call_tmp[818763])
    (554896 'end of statement')
    {
      unknown i[147526] "dead at end of block" "index var" "insert auto destroy"
      (646224 'init var' i[147526] 0)
      (554897 'end of statement')
      unknown tmp[147578] "maybe param" "temp"
      unknown call_tmp[818770] "expr temp" "maybe param" "maybe type" "temp"
      (818773 'move' call_tmp[818770](147530 call slicingExprType _mt[203] a[147449]))
      unknown call_tmp[818777] "expr temp" "maybe param" "maybe type" "temp"
      (818780 'move' call_tmp[818777](147533 call size _mt[203] call_tmp[818770]))
      unknown call_tmp[818782] "expr temp" "maybe param" "maybe type" "temp"
      (818785 'move' call_tmp[818782](147536 call chpl__nudgeHighBound call_tmp[818777]))
      (147590 'move' tmp[147578](147588 call chpl_compute_low_param_loop_bound 0 call_tmp[818782]))
      unknown tmp[147579] "maybe param" "temp"
      unknown call_tmp[818789] "expr temp" "maybe param" "maybe type" "temp"
      (818792 'move' call_tmp[818789](147599 call slicingExprType _mt[203] a[147449]))
      unknown call_tmp[818796] "expr temp" "maybe param" "maybe type" "temp"
      (818799 'move' call_tmp[818796](147597 call size _mt[203] call_tmp[818789]))
      unknown call_tmp[818801] "expr temp" "maybe param" "maybe type" "temp"
      (818804 'move' call_tmp[818801](147595 call chpl__nudgeHighBound call_tmp[818796]))
      (147605 'move' tmp[147579](147603 call chpl_compute_high_param_loop_bound 0 call_tmp[818801]))
      unknown tmp[147580] "maybe param" "temp"
      (147608 'move' tmp[147580] 1)
      ParamForLoop[147610]
      { i[147526] tmp[147578] tmp[147579] tmp[147580]
        {
          unknown tmp[488694] "maybe param" "temp"
          unknown tmp[488715] "maybe param" "temp"
          unknown call_tmp[818806] "expr temp" "maybe param" "maybe type" "temp"
          (818809 'move' call_tmp[818806](147551 call aType[147493] i[147526]))
          (488726 'move' tmp[488715](147549 call isRangeType call_tmp[818806]))
          unknown call_tmp[818811] "expr temp" "maybe param" "maybe type" "temp"
          (818814 'move' call_tmp[818811](488728 call _cond_invalid tmp[488715]))
          if call_tmp[818811]
          {
            (488731 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[681070] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[681071] "maybe param" "temp"
          unknown call_tmp[818816] "expr temp" "maybe param" "maybe type" "temp"
          (818819 'move' call_tmp[818816](488716 call isTrue tmp[488715]))
          (681076 'move' tmp[681071](681074 call _cond_test call_tmp[818816]))
          if tmp[681071]
          {
            unknown tmp[681078] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[818821] "expr temp" "maybe param" "maybe type" "temp"
            (818824 'move' call_tmp[818821](147558 call bType[147502] i[147526]))
            unknown call_tmp[818826] "expr temp" "maybe param" "maybe type" "temp"
            (818829 'move' call_tmp[818826](147556 call isRangeType call_tmp[818821]))
            unknown call_tmp[818831] "expr temp" "maybe param" "maybe type" "temp"
            (818834 'move' call_tmp[818831](147553 call ! call_tmp[818826]))
            (681080 'move' tmp[681078](488719 call isTrue call_tmp[818831]))
            (681085 'move' tmp[681070](681082 '_paramFoldLogical' tmp[681071] tmp[681078]))
          }
          {
            (681090 'move' tmp[681070](681087 '_paramFoldLogical' tmp[681071] 0))
          }
          (488705 'move' tmp[488694] tmp[681070])
          unknown call_tmp[818836] "expr temp" "maybe param" "maybe type" "temp"
          (818839 'move' call_tmp[818836](488707 call _cond_invalid tmp[488694]))
          if call_tmp[818836]
          {
            (488710 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[681124] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[681125] "maybe param" "temp"
          unknown call_tmp[818841] "expr temp" "maybe param" "maybe type" "temp"
          (818844 'move' call_tmp[818841](488695 call isTrue tmp[488694]))
          (681130 'move' tmp[681125](681128 call _cond_test call_tmp[818841]))
          if tmp[681125]
          {
            (681135 'move' tmp[681124](681132 '_paramFoldLogical' tmp[681125] 1))
          }
          {
            unknown tmp[488736] "maybe param" "temp"
            unknown call_tmp[818846] "expr temp" "maybe param" "maybe type" "temp"
            (818849 'move' call_tmp[818846](147567 call aType[147493] i[147526]))
            unknown call_tmp[818851] "expr temp" "maybe param" "maybe type" "temp"
            (818854 'move' call_tmp[818851](147565 call isRangeType call_tmp[818846]))
            (488747 'move' tmp[488736](147562 call ! call_tmp[818851]))
            unknown call_tmp[818856] "expr temp" "maybe param" "maybe type" "temp"
            (818859 'move' call_tmp[818856](488749 call _cond_invalid tmp[488736]))
            if call_tmp[818856]
            {
              (488752 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[681097] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[681098] "maybe param" "temp"
            unknown call_tmp[818861] "expr temp" "maybe param" "maybe type" "temp"
            (818864 'move' call_tmp[818861](488737 call isTrue tmp[488736]))
            (681103 'move' tmp[681098](681101 call _cond_test call_tmp[818861]))
            if tmp[681098]
            {
              unknown tmp[681105] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[818866] "expr temp" "maybe param" "maybe type" "temp"
              (818869 'move' call_tmp[818866](147572 call bType[147502] i[147526]))
              unknown call_tmp[818871] "expr temp" "maybe param" "maybe type" "temp"
              (818874 'move' call_tmp[818871](147570 call isRangeType call_tmp[818866]))
              (681107 'move' tmp[681105](488740 call isTrue call_tmp[818871]))
              (681112 'move' tmp[681097](681109 '_paramFoldLogical' tmp[681098] tmp[681105]))
            }
            {
              (681117 'move' tmp[681097](681114 '_paramFoldLogical' tmp[681098] 0))
            }
            unknown tmp[681137] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (681139 'move' tmp[681137](488699 call isTrue tmp[681097]))
            (681144 'move' tmp[681124](681141 '_paramFoldLogical' tmp[681125] tmp[681137]))
          }
          unknown call_tmp[818876] "expr temp" "maybe param" "maybe type" "temp"
          (818879 'move' call_tmp[818876](147574 call _cond_test tmp[681124]))
          if call_tmp[818876]
          {
            (611024 'move' ret[611006](611023 'coerce' 0 bool[19]))
            gotoReturn _end_chpl__ave_protoSlicesSupportAssignment[611004] _end_chpl__ave_protoSlicesSupportAssignment[611004]
          }
        }
      }
      label _unused_continueLabel[147582]
      label _breakLabel[147581]
    }
    (611030 'move' ret[611006](611029 'coerce' 1 bool[19]))
    label _end_chpl__ave_protoSlicesSupportAssignment[611004]
    (611008 return ret[611006])
  }
  { scopeless type
    bool[19]
  }
  function chpl__protoSlice[148800](?).init[147649](arg _mt[147653]:_MT[201], ref arg this[147651]:chpl__protoSlice[148800](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown rank[525939] "param" "temp"
    (525941 'init var' rank[525939] 1)
    (525943 'init field' this[147651] c"rank" rank[525939])
    (554902 'end of statement')
    unknown isConst[525947] "param" "temp"
    (525949 'init var' isConst[525947] 1)
    (525951 'init field' this[147651] c"isConst" isConst[525947])
    (554903 'end of statement')
    unknown call_tmp[818881] "maybe param" "maybe type" "temp"
    (818884 'move' call_tmp[818881](147676 call chpl__buildArrayExpr 1))
    unknown dummyArr[147673] "dead at end of block" "insert auto destroy"
    (646226 'init var' dummyArr[147673] call_tmp[818881])
    (147679 'end of statement')
    unknown call_tmp[818886] "maybe param" "maybe type" "temp"
    (818889 'move' call_tmp[818886](147689 call c_addrOf dummyArr[147673]))
    unknown ptrToArr[525955] "temp"
    (525957 'init var' ptrToArr[525955] call_tmp[818886])
    (525959 'init field' this[147651] c"ptrToArr" ptrToArr[525955])
    (554904 'end of statement' dummyArr[147673])
    unknown call_tmp[818891] "maybe param" "maybe type" "temp"
    (818894 'move' call_tmp[818891](147695 call chpl_build_bounded_range 1 0))
    unknown dummyRange[147692] "dead at end of block" "insert auto destroy"
    (646228 'init var' dummyRange[147692] call_tmp[818891])
    (147698 'end of statement')
    unknown slicingExprType[525963] "temp" "type variable"
    (525965 'move' slicingExprType[525963](147706 'typeof' dummyRange[147692]))
    (525967 'init field' this[147651] c"slicingExprType" slicingExprType[525963])
    (554906 'end of statement')
    unknown ranges[525971] "temp"
    (525973 'init var' ranges[525971] dummyRange[147692])
    (525975 'init field' this[147651] c"ranges" ranges[525971])
    (554907 'end of statement' dummyRange[147692])
    unknown isRankChange[525981] "param" "temp"
    (525983 'init var' isRankChange[525981] 0)
    (525985 'init field' this[147651] c"isRankChange" isRankChange[525981])
    (554909 'end of statement')
    (611032 return _void[46])
  }
  function chpl__protoSlice[148800](?).init[147718](arg _mt[147728]:_MT[201], ref arg this[147720]:chpl__protoSlice[148800](?), param arg isConst[147722]:_any[141](?), arg ptrToArr[147724]:_any[141](?), arg slicingExprs[147726]:_any[141](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[818898] "expr temp" "maybe param" "maybe type" "temp"
    (818901 'move' call_tmp[818898](147741 call(147738 call (partial) deref _mt[203] ptrToArr[147724])))
    unknown call_tmp[818905] "maybe param" "maybe type" "temp"
    (818908 'move' call_tmp[818905](147742 call rank _mt[203] call_tmp[818898]))
    unknown rank[525989] "param" "temp"
    (525991 'init var' rank[525989] call_tmp[818905])
    (525993 'init field' this[147720] c"rank" rank[525989])
    (554910 'end of statement')
    unknown isConst[525997] "param" "temp"
    (525999 'init var' isConst[525997] isConst[147722])
    (526001 'init field' this[147720] c"isConst" isConst[525997])
    (554911 'end of statement')
    unknown ptrToArr[526005] "temp"
    (526007 'init var' ptrToArr[526005] ptrToArr[147724])
    (526009 'init field' this[147720] c"ptrToArr" ptrToArr[526005])
    (554912 'end of statement')
    unknown slicingExprType[526013] "temp" "type variable"
    (526015 'move' slicingExprType[526013](147766 'typeof' slicingExprs[147726]))
    (526017 'init field' this[147720] c"slicingExprType" slicingExprType[526013])
    (554913 'end of statement')
    unknown call_tmp[818910] "expr temp" "maybe param" "maybe type" "temp"
    (818913 'move' call_tmp[818910](147910 call isDomain slicingExprs[147726]))
    unknown call_tmp[818915] "expr temp" "maybe param" "maybe type" "temp"
    (818918 'move' call_tmp[818915](147912 call _cond_test call_tmp[818910]))
    if call_tmp[818915]
    {
      unknown ranges[526021] "temp"
      (526023 'init var' ranges[526021] slicingExprs[147726])
      (526025 'init field' this[147720] c"ranges" ranges[526021])
      (554914 'end of statement')
      unknown isRankChange[526109] "param" "temp"
      (526111 'init var' isRankChange[526109] 0)
      (526113 'init field' this[147720] c"isRankChange" isRankChange[526109])
      (554915 'end of statement')
    }
    {
      unknown call_tmp[818920] "expr temp" "maybe param" "maybe type" "temp"
      (818923 'move' call_tmp[818920](147902 call isRange slicingExprs[147726]))
      unknown call_tmp[818925] "expr temp" "maybe param" "maybe type" "temp"
      (818928 'move' call_tmp[818925](147904 call _cond_test call_tmp[818920]))
      if call_tmp[818925]
      {
        unknown call_tmp[818930] "expr temp" "maybe param" "maybe type" "temp"
        (818933 'move' call_tmp[818930](147809 call allBounded slicingExprs[147726]))
        unknown call_tmp[818935] "expr temp" "maybe param" "maybe type" "temp"
        (818938 'move' call_tmp[818935](147811 call _cond_test call_tmp[818930]))
        if call_tmp[818935]
        {
          unknown ranges[526029] "temp"
          (526031 'init var' ranges[526029] slicingExprs[147726])
          (526033 'init field' this[147720] c"ranges" ranges[526029])
          (554916 'end of statement')
        }
        {
          unknown call_tmp[818942] "expr temp" "maybe param" "maybe type" "temp"
          (818945 'move' call_tmp[818942](147797 call(147794 call (partial) deref _mt[203] ptrToArr[147724])))
          unknown call_tmp[818949] "expr temp" "maybe param" "maybe type" "temp"
          (818952 'move' call_tmp[818949](147801 call(147798 call (partial) dims _mt[203] call_tmp[818942])))
          unknown call_tmp[818954] "expr temp" "maybe param" "maybe type" "temp"
          (818957 'move' call_tmp[818954](147804 call _build_tuple slicingExprs[147726]))
          unknown call_tmp[818959] "expr temp" "maybe param" "maybe type" "temp"
          (818962 'move' call_tmp[818959](147792 call tupleOfRangesSlice call_tmp[818949] call_tmp[818954]))
          unknown call_tmp[818964] "maybe param" "maybe type" "temp"
          (818967 'move' call_tmp[818964](147806 call call_tmp[818959] 0))
          unknown ranges[526037] "temp"
          (526039 'init var' ranges[526037] call_tmp[818964])
          (526041 'init field' this[147720] c"ranges" ranges[526037])
          (554917 'end of statement')
        }
        unknown isRankChange[526099] "param" "temp"
        (526101 'init var' isRankChange[526099] 0)
        (526103 'init field' this[147720] c"isRankChange" isRankChange[526099])
        (554918 'end of statement')
      }
      {
        unknown call_tmp[818969] "expr temp" "maybe param" "maybe type" "temp"
        (818972 'move' call_tmp[818969](147894 call chpl__isTupleOfRanges slicingExprs[147726]))
        unknown call_tmp[818974] "expr temp" "maybe param" "maybe type" "temp"
        (818977 'move' call_tmp[818974](147896 call _cond_test call_tmp[818969]))
        if call_tmp[818974]
        {
          unknown call_tmp[818981] "expr temp" "maybe param" "maybe type" "temp"
          (818984 'move' call_tmp[818981](147828 call(147825 call (partial) deref _mt[203] ptrToArr[147724])))
          unknown call_tmp[818988] "expr temp" "maybe param" "maybe type" "temp"
          (818991 'move' call_tmp[818988](147832 call(147829 call (partial) dims _mt[203] call_tmp[818981])))
          unknown call_tmp[818993] "maybe param" "maybe type" "temp"
          (818996 'move' call_tmp[818993](147823 call tupleOfRangesSlice call_tmp[818988] slicingExprs[147726]))
          unknown ranges[526045] "temp"
          (526047 'init var' ranges[526045] call_tmp[818993])
          (526049 'init field' this[147720] c"ranges" ranges[526045])
          (554919 'end of statement')
          unknown isRankChange[526089] "param" "temp"
          (526091 'init var' isRankChange[526089] 0)
          (526093 'init field' this[147720] c"isRankChange" isRankChange[526089])
          (554920 'end of statement')
        }
        {
          unknown call_tmp[819000] "expr temp" "maybe param" "maybe type" "temp"
          (819003 'move' call_tmp[819000](147885 call(147882 call (partial) deref _mt[203] ptrToArr[147724])))
          unknown call_tmp[819007] "expr temp" "maybe param" "maybe type" "temp"
          (819010 'move' call_tmp[819007](147886 call idxType _mt[203] call_tmp[819000]))
          unknown call_tmp[819012] "expr temp" "maybe param" "maybe type" "temp"
          (819015 'move' call_tmp[819012](147879 call _validRankChangeArgs slicingExprs[147726] call_tmp[819007]))
          unknown call_tmp[819017] "expr temp" "maybe param" "maybe type" "temp"
          (819020 'move' call_tmp[819017](147889 call _cond_test call_tmp[819012]))
          if call_tmp[819017]
          {
            unknown call_tmp[819024] "expr temp" "maybe param" "maybe type" "temp"
            (819027 'move' call_tmp[819024](147847 call(147844 call (partial) deref _mt[203] ptrToArr[147724])))
            unknown call_tmp[819031] "expr temp" "maybe param" "maybe type" "temp"
            (819034 'move' call_tmp[819031](147851 call(147848 call (partial) dims _mt[203] call_tmp[819024])))
            unknown call_tmp[819036] "expr temp" "maybe param" "maybe type" "temp"
            (819039 'move' call_tmp[819036](147853 call rangify slicingExprs[147726]))
            unknown call_tmp[819041] "maybe param" "maybe type" "temp"
            (819044 'move' call_tmp[819041](147842 call tupleOfRangesSlice call_tmp[819031] call_tmp[819036]))
            unknown ranges[526053] "temp"
            (526055 'init var' ranges[526053] call_tmp[819041])
            (526057 'init field' this[147720] c"ranges" ranges[526053])
            (554921 'end of statement')
            unknown isRankChange[526061] "param" "temp"
            (526063 'init var' isRankChange[526061] 1)
            (526065 'init field' this[147720] c"isRankChange" isRankChange[526061])
            (554922 'end of statement')
          }
          {
            unknown call_tmp[819046] "maybe param" "maybe type" "temp"
            (819049 'move' call_tmp[819046](147871 call chpl_build_bounded_range 1 0))
            unknown ranges[526069] "temp"
            (526071 'init var' ranges[526069] call_tmp[819046])
            (526073 'init field' this[147720] c"ranges" ranges[526069])
            (554923 'end of statement')
            (147874 call compilerError "Unexpected slicing expr in chpl__protoSlice.init")
            (554924 'end of statement')
            unknown isRankChange[526079] "param" "temp"
            (526081 'init var' isRankChange[526079] 0)
            (526083 'init field' this[147720] c"isRankChange" isRankChange[526079])
            (554925 'end of statement')
          }
        }
      }
    }
    (611034 return _void[46])
  }
  function chpl__protoSlice[148800](?).init=[147919](arg _mt[147927]:_MT[201], ref arg this[147921]:chpl__protoSlice[148800](?), arg other[147924]:chpl__protoSlice[148800](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[819053] "maybe param" "maybe type" "temp"
    (819056 'move' call_tmp[819053](147937 call rank _mt[203] other[147924]))
    unknown rank[526117] "param" "temp"
    (526119 'init var' rank[526117] call_tmp[819053])
    (526121 'init field' this[147921] c"rank" rank[526117])
    (554926 'end of statement')
    unknown call_tmp[819060] "maybe param" "maybe type" "temp"
    (819063 'move' call_tmp[819060](147947 call isConst _mt[203] other[147924]))
    unknown isConst[526125] "param" "temp"
    (526127 'init var' isConst[526125] call_tmp[819060])
    (526129 'init field' this[147921] c"isConst" isConst[526125])
    (554927 'end of statement')
    unknown call_tmp[819067] "maybe param" "maybe type" "temp"
    (819070 'move' call_tmp[819067](147957 call ptrToArr _mt[203] other[147924]))
    unknown ptrToArr[526133] "temp"
    (526135 'init var' ptrToArr[526133] call_tmp[819067])
    (526137 'init field' this[147921] c"ptrToArr" ptrToArr[526133])
    (554928 'end of statement')
    unknown slicingExprType[526141] "temp" "type variable"
    (526143 'move' slicingExprType[526141](147967 call slicingExprType _mt[203] other[147924]))
    (526145 'init field' this[147921] c"slicingExprType" slicingExprType[526141])
    (554929 'end of statement')
    unknown call_tmp[819076] "maybe param" "maybe type" "temp"
    (819079 'move' call_tmp[819076](147977 call ranges _mt[203] other[147924]))
    unknown ranges[526149] "temp"
    (526151 'init var' ranges[526149] call_tmp[819076])
    (526153 'init field' this[147921] c"ranges" ranges[526149])
    (554930 'end of statement')
    unknown call_tmp[819083] "maybe param" "maybe type" "temp"
    (819086 'move' call_tmp[819083](147987 call isRankChange _mt[203] other[147924]))
    unknown isRankChange[526157] "param" "temp"
    (526159 'init var' isRankChange[526157] call_tmp[819083])
    (526161 'init field' this[147921] c"isRankChange" isRankChange[526157])
    (554931 'end of statement')
    (526165 'init done')
    (554932 'end of statement')
    (147996 call halt "protoSlice copy initializer should never be called")
    (611036 return _void[46])
  }
  function chpl__protoSlice[148800](?).domOrRange[148002](arg _mt[148006]:_MT[201], arg this[148004]:chpl__protoSlice[148800](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[611040] "RVV" "temp"
    unknown call_tmp[819090] "expr temp" "maybe param" "maybe type" "temp"
    (819093 'move' call_tmp[819090](433361 call ranges _mt[203] this[148004]))
    (611045 'move' ret[611040](611044 'deref' call_tmp[819090]))
    (611042 return ret[611040])
  }
  where {
    unknown call_tmp[819097] "expr temp" "maybe param" "maybe type" "temp"
    (819100 'move' call_tmp[819097](433356 call rank _mt[203] this[148004]))
    (148008 call == call_tmp[819097] 1)
  }
  function chpl__protoSlice[148800](?).domOrRange[148018](arg _mt[148022]:_MT[201], arg this[148020]:chpl__protoSlice[148800](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[611049] "RVV" "temp"
    unknown call_tmp[819104] "expr temp" "maybe param" "maybe type" "temp"
    (819107 'move' call_tmp[819104](433381 call ranges _mt[203] this[148020]))
    unknown call_tmp[819109] "expr temp" "maybe param" "maybe type" "temp"
    (819112 'move' call_tmp[819109](148041 call isDomain call_tmp[819104]))
    unknown call_tmp[819114] "expr temp" "maybe param" "maybe type" "temp"
    (819117 'move' call_tmp[819114](148043 call _cond_test call_tmp[819109]))
    if call_tmp[819114]
    {
      unknown call_tmp[819121] "expr temp" "maybe param" "maybe type" "temp"
      (819124 'move' call_tmp[819121](433371 call ranges _mt[203] this[148020]))
      (611054 'move' ret[611049](611053 'deref' call_tmp[819121]))
      gotoReturn _end_domOrRange[611047] _end_domOrRange[611047]
    }
    {
      unknown call_tmp[819128] "expr temp" "maybe param" "maybe type" "temp"
      (819131 'move' call_tmp[819128](433376 call ranges _mt[203] this[148020]))
      unknown call_tmp[819133] "expr temp" "maybe param" "maybe type" "temp"
      (819136 'move' call_tmp[819133](148037 call chpl__buildDomainExpr(148035 'expand_tuple' call_tmp[819128]) 1))
      (611059 'move' ret[611049](611058 'deref' call_tmp[819133]))
      gotoReturn _end_domOrRange[611047] _end_domOrRange[611047]
    }
    label _end_domOrRange[611047]
    (611051 return ret[611049])
  }
  where {
    unknown call_tmp[819140] "expr temp" "maybe param" "maybe type" "temp"
    (819143 'move' call_tmp[819140](433366 call rank _mt[203] this[148020]))
    (148024 call > call_tmp[819140] 1)
  }
  function chpl__protoSlice[148800](?).dims[148052](arg _mt[148056]:_MT[201], arg this[148054]:chpl__protoSlice[148800](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[611065] "RVV" "temp"
    unknown call_tmp[819147] "expr temp" "maybe param" "maybe type" "temp"
    (819150 'move' call_tmp[819147](148105 call ranges _mt[203] this[148054]))
    unknown call_tmp[819152] "expr temp" "maybe param" "maybe type" "temp"
    (819155 'move' call_tmp[819152](148103 call chpl__isTupleOfRanges call_tmp[819147]))
    unknown call_tmp[819157] "expr temp" "maybe param" "maybe type" "temp"
    (819160 'move' call_tmp[819157](148108 call _cond_test call_tmp[819152]))
    if call_tmp[819157]
    {
      unknown call_tmp[819164] "expr temp" "maybe param" "maybe type" "temp"
      (819167 'move' call_tmp[819164](433386 call ranges _mt[203] this[148054]))
      (611070 'move' ret[611065](611069 'deref' call_tmp[819164]))
      gotoReturn _end_dims[611063] _end_dims[611063]
    }
    {
      unknown call_tmp[819171] "expr temp" "maybe param" "maybe type" "temp"
      (819174 'move' call_tmp[819171](148094 call ranges _mt[203] this[148054]))
      unknown call_tmp[819176] "expr temp" "maybe param" "maybe type" "temp"
      (819179 'move' call_tmp[819176](148092 call isDomain call_tmp[819171]))
      unknown call_tmp[819181] "expr temp" "maybe param" "maybe type" "temp"
      (819184 'move' call_tmp[819181](148097 call _cond_test call_tmp[819176]))
      if call_tmp[819181]
      {
        unknown call_tmp[819188] "expr temp" "maybe param" "maybe type" "temp"
        (819191 'move' call_tmp[819188](403607 call ranges _mt[203] this[148054]))
        unknown call_tmp[819195] "expr temp" "maybe param" "maybe type" "temp"
        (819198 'move' call_tmp[819195](148068 call(148065 call (partial) dims _mt[203] call_tmp[819188])))
        (611075 'move' ret[611065](611074 'deref' call_tmp[819195]))
        gotoReturn _end_dims[611063] _end_dims[611063]
      }
      {
        unknown call_tmp[819202] "expr temp" "maybe param" "maybe type" "temp"
        (819205 'move' call_tmp[819202](148084 call ranges _mt[203] this[148054]))
        unknown call_tmp[819207] "expr temp" "maybe param" "maybe type" "temp"
        (819210 'move' call_tmp[819207](148082 call isRange call_tmp[819202]))
        unknown call_tmp[819212] "expr temp" "maybe param" "maybe type" "temp"
        (819215 'move' call_tmp[819212](148087 call _cond_test call_tmp[819207]))
        if call_tmp[819212]
        {
          unknown call_tmp[819219] "expr temp" "maybe param" "maybe type" "temp"
          (819222 'move' call_tmp[819219](433391 call ranges _mt[203] this[148054]))
          unknown call_tmp[819224] "expr temp" "maybe param" "maybe type" "temp"
          (819227 'move' call_tmp[819224](148073 call _build_tuple call_tmp[819219]))
          (611080 'move' ret[611065](611079 'deref' call_tmp[819224]))
          gotoReturn _end_dims[611063] _end_dims[611063]
        }
        {
          (148077 call compilerError "Unhandled case in chpl__protoSlice.dims()")
        }
      }
    }
    label _end_dims[611063]
    (611067 return ret[611065])
  }
  function chpl__protoSlice[148800](?).rank[148115](arg _mt[148119]:_MT[201], arg this[148117]:chpl__protoSlice[148800](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no parens" "reference to const when const this"
  {
    unknown ret[611086] "RVV" "param" "temp"
    unknown call_tmp[819231] "expr temp" "maybe param" "maybe type" "temp"
    (819234 'move' call_tmp[819231](403615 call ptrToArr _mt[203] this[148117]))
    unknown call_tmp[819238] "expr temp" "maybe param" "maybe type" "temp"
    (819241 'move' call_tmp[819238](148127 call(148124 call (partial) deref _mt[203] call_tmp[819231])))
    unknown call_tmp[819245] "expr temp" "maybe param" "maybe type" "temp"
    (819248 'move' call_tmp[819245](148128 call rank _mt[203] call_tmp[819238]))
    (611091 'move' ret[611086](611090 'deref' call_tmp[819245]))
    (611088 return ret[611086])
  }
  function chpl__protoSlice[148800](?).eltType[148133](arg _mt[148137]:_MT[201], arg this[148135]:chpl__protoSlice[148800](?)) type : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[611095] "RVV" "temp" "type variable"
    unknown call_tmp[819252] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (819255 'move' call_tmp[819252](403620 call ptrToArr _mt[203] this[148135]))
    unknown call_tmp[819259] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (819262 'move' call_tmp[819259](148145 call(148142 call (partial) deref _mt[203] call_tmp[819252])))
    unknown call_tmp[819266] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (819269 'move' call_tmp[819266](148146 call eltType _mt[203] call_tmp[819259]))
    (611100 'move' ret[611095](611099 'deref' call_tmp[819266]))
    (611097 return ret[611095])
  }
  function chpl__protoSlice[148800](?)._value[148151](arg _mt[148155]:_MT[201], arg this[148153]:chpl__protoSlice[148800](?)) : _unknown[42] "inline" "method" "primary method" "no parens"
  {
    unknown ret[611104] "RVV" "temp"
    unknown call_tmp[819273] "expr temp" "maybe param" "maybe type" "temp"
    (819276 'move' call_tmp[819273](403625 call ptrToArr _mt[203] this[148153]))
    unknown call_tmp[819280] "expr temp" "maybe param" "maybe type" "temp"
    (819283 'move' call_tmp[819280](148163 call(148160 call (partial) deref _mt[203] call_tmp[819273])))
    unknown call_tmp[819287] "expr temp" "maybe param" "maybe type" "temp"
    (819290 'move' call_tmp[819287](148164 call _value _mt[203] call_tmp[819280]))
    (611109 'move' ret[611104](611108 'deref' call_tmp[819287]))
    (611106 return ret[611104])
  }
  function chpl__protoSlice[148800](?).sizeAs[148169](arg _mt[148175]:_MT[201], arg this[148171]:chpl__protoSlice[148800](?), arg t[148173]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[611113] "RVV" "temp"
    unknown call_tmp[819294] "expr temp" "maybe param" "maybe type" "temp"
    (819297 'move' call_tmp[819294](403630 call ranges _mt[203] this[148171]))
    unknown call_tmp[819301] "expr temp" "maybe param" "maybe type" "temp"
    (819304 'move' call_tmp[819301](148187 call(148184 call (partial) sizeAs _mt[203] call_tmp[819294]) t[148173]))
    (611118 'move' ret[611113](611117 'deref' call_tmp[819301]))
    (611115 return ret[611113])
  }
  where {
    unknown call_tmp[819308] "expr temp" "maybe param" "maybe type" "temp"
    (819311 'move' call_tmp[819308](433396 call rank _mt[203] this[148171]))
    (148177 call == call_tmp[819308] 1)
  }
  function chpl__protoSlice[148800](?).sizeAs[148192](arg _mt[148198]:_MT[201], arg this[148194]:chpl__protoSlice[148800](?), arg t[148196]:_any[141](?)) : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[611122] "RVV" "temp"
    unknown call_tmp[819315] "expr temp" "maybe param" "maybe type" "temp"
    (819318 'move' call_tmp[819315](148278 call ranges _mt[203] this[148194]))
    unknown call_tmp[819320] "expr temp" "maybe param" "maybe type" "temp"
    (819323 'move' call_tmp[819320](148276 call isDomain call_tmp[819315]))
    unknown call_tmp[819325] "expr temp" "maybe param" "maybe type" "temp"
    (819328 'move' call_tmp[819325](148281 call _cond_test call_tmp[819320]))
    if call_tmp[819325]
    {
      unknown call_tmp[819332] "expr temp" "maybe param" "maybe type" "temp"
      (819335 'move' call_tmp[819332](403635 call ranges _mt[203] this[148194]))
      unknown call_tmp[819339] "expr temp" "maybe param" "maybe type" "temp"
      (819342 'move' call_tmp[819339](148207 call(148204 call (partial) sizeAs _mt[203] call_tmp[819332]) t[148196]))
      (611127 'move' ret[611122](611126 'deref' call_tmp[819339]))
      gotoReturn _end_sizeAs[611120] _end_sizeAs[611120]
    }
    {
      unknown call_tmp[819344] "maybe param" "maybe type" "temp"
      (819347 'move' call_tmp[819344](148212 call : 1 t[148196]))
      unknown size[148211] "dead at end of block" "insert auto destroy"
      (646230 'init var' size[148211] call_tmp[819344])
      (148217 'end of statement')
      {
        unknown r[148218] "dead at end of block" "index var" "insert auto destroy"
        (646232 'init var' r[148218] 0)
        (554946 'end of statement')
        unknown tmp[148238] "maybe param" "temp"
        unknown call_tmp[819351] "expr temp" "maybe param" "maybe type" "temp"
        (819354 'move' call_tmp[819351](433404 call rank _mt[203] this[148194]))
        unknown call_tmp[819356] "expr temp" "maybe param" "maybe type" "temp"
        (819359 'move' call_tmp[819356](148222 call chpl__nudgeHighBound call_tmp[819351]))
        (148250 'move' tmp[148238](148248 call chpl_compute_low_param_loop_bound 0 call_tmp[819356]))
        unknown tmp[148239] "maybe param" "temp"
        unknown call_tmp[819363] "expr temp" "maybe param" "maybe type" "temp"
        (819366 'move' call_tmp[819363](433417 call rank _mt[203] this[148194]))
        unknown call_tmp[819368] "expr temp" "maybe param" "maybe type" "temp"
        (819371 'move' call_tmp[819368](148255 call chpl__nudgeHighBound call_tmp[819363]))
        (148259 'move' tmp[148239](148257 call chpl_compute_high_param_loop_bound 0 call_tmp[819368]))
        unknown tmp[148240] "maybe param" "temp"
        (148262 'move' tmp[148240] 1)
        ParamForLoop[148264]
        { r[148218] tmp[148238] tmp[148239] tmp[148240]
          {
            unknown call_tmp[819375] "expr temp" "maybe param" "maybe type" "temp"
            (819378 'move' call_tmp[819375](148231 call(433410 call (partial) ranges _mt[203] this[148194]) r[148218]))
            unknown call_tmp[819382] "expr temp" "maybe param" "maybe type" "temp"
            (819385 'move' call_tmp[819382](148236 call(148233 call (partial) sizeAs _mt[203] call_tmp[819375]) t[148196]))
            (148227 call *= size[148211] call_tmp[819382])
            (554947 'end of statement' size[148211] r[148218])
          }
        }
        label _unused_continueLabel[148242]
        label _breakLabel[148241]
      }
      (611132 'move' ret[611122](611131 'deref' size[148211]))
      gotoReturn _end_sizeAs[611120] _end_sizeAs[611120]
      (554950 'end of statement' size[148211])
    }
    label _end_sizeAs[611120]
    (611124 return ret[611122])
  }
  function chpl__protoSlice[148800](?).isRectangular[148287](arg _mt[148291]:_MT[201], arg this[148289]:chpl__protoSlice[148800](?)) param : _unknown[42] "inline" "method" "primary method"
  {
    unknown ret[611138] "RVV" "param" "temp"
    unknown call_tmp[819389] "expr temp" "maybe param" "maybe type" "temp"
    (819392 'move' call_tmp[819389](403641 call ptrToArr _mt[203] this[148289]))
    unknown call_tmp[819396] "expr temp" "maybe param" "maybe type" "temp"
    (819399 'move' call_tmp[819396](148299 call(148296 call (partial) deref _mt[203] call_tmp[819389])))
    unknown call_tmp[819403] "expr temp" "maybe param" "maybe type" "temp"
    (819406 'move' call_tmp[819403](148305 call(148302 call (partial) isRectangular _mt[203] call_tmp[819396])))
    (611143 'move' ret[611138](611142 'deref' call_tmp[819403]))
    (611140 return ret[611138])
  }
  function chpl__protoSlice[148800](?).these[148308](arg _mt[148312]:_MT[201], arg this[148310]:chpl__protoSlice[148800](?)) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611147] "RVV" "temp"
    unknown call_tmp[819410] "expr temp" "maybe param" "maybe type" "temp"
    (819413 'move' call_tmp[819410](433434 call rank _mt[203] this[148310]))
    unknown call_tmp[819415] "expr temp" "maybe param" "maybe type" "temp"
    (819418 'move' call_tmp[819415](148423 call == call_tmp[819410] 1))
    unknown call_tmp[819420] "expr temp" "maybe param" "maybe type" "temp"
    (819423 'move' call_tmp[819420](148427 call _cond_test call_tmp[819415]))
    if call_tmp[819420]
    {
      {
        unknown _indexOfInterest[148337] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[148338] "expr temp" "temp"
        unknown call_tmp[819427] "expr temp" "maybe param" "maybe type" "temp"
        (819430 'move' call_tmp[819427](403646 call ptrToArr _mt[203] this[148310]))
        unknown call_tmp[819434] "expr temp" "maybe param" "maybe type" "temp"
        (819437 'move' call_tmp[819434](148327 call(148324 call (partial) deref _mt[203] call_tmp[819427])))
        unknown call_tmp[819441] "expr temp" "maybe param" "maybe type" "temp"
        (819444 'move' call_tmp[819441](148328 call _instance _mt[203] call_tmp[819434]))
        unknown call_tmp[819448] "expr temp" "maybe param" "maybe type" "temp"
        (819451 'move' call_tmp[819448](433427 call domOrRange _mt[203] this[148310]))
        unknown call_tmp[819453] "expr temp" "maybe param" "maybe type" "temp"
        (819456 'move' call_tmp[819453](148322 call chpl__serialViewIter1D call_tmp[819441] call_tmp[819448]))
        (148347 'move' _iterator[148338](148345 call _getIterator call_tmp[819453]))
        Defer
        {
          {
            (148362 call _freeIterator _iterator[148338])
          }
        }
        { scopeless type
          (148352 'move' _indexOfInterest[148337](148349 call iteratorIndex _iterator[148338]))
        }
        ForLoop[148339] order-independent
        {
          unknown elem[148319] "index var" "insert auto destroy"
          (554954 'end of statement')
          (148357 'move' elem[148319] _indexOfInterest[148337])
          (554955 'end of statement' elem[148319])
          {
            ref yret[611151] "YVV" "temp"
            (611154 'move' yret[611151](611153 'addr of' elem[148319]))
            (148333 yield yret[611151])
            (554957 'end of statement' elem[148319])
          }
          label _continueLabel[148342]
          _indexOfInterest[148337]
          _iterator[148338]
        }
        label _breakLabel[148343]
      }
    }
    {
      {
        unknown _indexOfInterest[148391] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[148392] "expr temp" "temp"
        unknown call_tmp[819460] "expr temp" "maybe param" "maybe type" "temp"
        (819463 'move' call_tmp[819460](403651 call ptrToArr _mt[203] this[148310]))
        unknown call_tmp[819467] "expr temp" "maybe param" "maybe type" "temp"
        (819470 'move' call_tmp[819467](148378 call(148375 call (partial) deref _mt[203] call_tmp[819460])))
        unknown call_tmp[819474] "expr temp" "maybe param" "maybe type" "temp"
        (819477 'move' call_tmp[819474](148379 call _instance _mt[203] call_tmp[819467]))
        unknown call_tmp[819481] "expr temp" "maybe param" "maybe type" "temp"
        (819484 'move' call_tmp[819481](403655 call domOrRange _mt[203] this[148310]))
        unknown call_tmp[819488] "expr temp" "maybe param" "maybe type" "temp"
        (819491 'move' call_tmp[819488](148383 call _instance _mt[203] call_tmp[819481]))
        unknown call_tmp[819493] "expr temp" "maybe param" "maybe type" "temp"
        (819496 'move' call_tmp[819493](148373 call chpl__serialViewIter call_tmp[819474] call_tmp[819488]))
        (148401 'move' _iterator[148392](148399 call _getIterator call_tmp[819493]))
        Defer
        {
          {
            (148416 call _freeIterator _iterator[148392])
          }
        }
        { scopeless type
          (148406 'move' _indexOfInterest[148391](148403 call iteratorIndex _iterator[148392]))
        }
        ForLoop[148393] order-independent
        {
          unknown elem[148370] "index var" "insert auto destroy"
          (554960 'end of statement')
          (148411 'move' elem[148370] _indexOfInterest[148391])
          (554961 'end of statement' elem[148370])
          {
            ref yret[611157] "YVV" "temp"
            (611160 'move' yret[611157](611159 'addr of' elem[148370]))
            (148387 yield yret[611157])
            (554963 'end of statement' elem[148370])
          }
          label _continueLabel[148396]
          _indexOfInterest[148391]
          _iterator[148392]
        }
        label _breakLabel[148397]
      }
    }
    (611149 return ret[611147])
  }
  where {
    unknown call_tmp[819500] "expr temp" "maybe param" "maybe type" "temp"
    (819503 'move' call_tmp[819500](433423 call isConst _mt[203] this[148310]))
    (148314 call ! call_tmp[819500])
  }
  function chpl__protoSlice[148800](?).these[148434](arg _mt[148438]:_MT[201], arg this[148436]:chpl__protoSlice[148800](?)) const ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611165] "RVV" "temp"
    unknown call_tmp[819507] "expr temp" "maybe param" "maybe type" "temp"
    (819510 'move' call_tmp[819507](433450 call rank _mt[203] this[148436]))
    unknown call_tmp[819512] "expr temp" "maybe param" "maybe type" "temp"
    (819515 'move' call_tmp[819512](148547 call == call_tmp[819507] 1))
    unknown call_tmp[819517] "expr temp" "maybe param" "maybe type" "temp"
    (819520 'move' call_tmp[819517](148551 call _cond_test call_tmp[819512]))
    if call_tmp[819517]
    {
      {
        unknown _indexOfInterest[148461] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[148462] "expr temp" "temp"
        unknown call_tmp[819524] "expr temp" "maybe param" "maybe type" "temp"
        (819527 'move' call_tmp[819524](403660 call ptrToArr _mt[203] this[148436]))
        unknown call_tmp[819531] "expr temp" "maybe param" "maybe type" "temp"
        (819534 'move' call_tmp[819531](148451 call(148448 call (partial) deref _mt[203] call_tmp[819524])))
        unknown call_tmp[819538] "expr temp" "maybe param" "maybe type" "temp"
        (819541 'move' call_tmp[819538](148452 call _instance _mt[203] call_tmp[819531]))
        unknown call_tmp[819545] "expr temp" "maybe param" "maybe type" "temp"
        (819548 'move' call_tmp[819545](433443 call domOrRange _mt[203] this[148436]))
        unknown call_tmp[819550] "expr temp" "maybe param" "maybe type" "temp"
        (819553 'move' call_tmp[819550](148446 call chpl__serialViewIter1D call_tmp[819538] call_tmp[819545]))
        (148471 'move' _iterator[148462](148469 call _getIterator call_tmp[819550]))
        Defer
        {
          {
            (148486 call _freeIterator _iterator[148462])
          }
        }
        { scopeless type
          (148476 'move' _indexOfInterest[148461](148473 call iteratorIndex _iterator[148462]))
        }
        ForLoop[148463] order-independent
        {
          unknown elem[148443] "index var" "insert auto destroy"
          (554966 'end of statement')
          (148481 'move' elem[148443] _indexOfInterest[148461])
          (554967 'end of statement' elem[148443])
          {
            const-ref yret[611169] "YVV" "temp"
            (611172 'move' yret[611169](611171 'addr of' elem[148443]))
            (148457 yield yret[611169])
            (554969 'end of statement' elem[148443])
          }
          label _continueLabel[148466]
          _indexOfInterest[148461]
          _iterator[148462]
        }
        label _breakLabel[148467]
      }
    }
    {
      {
        unknown _indexOfInterest[148515] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[148516] "expr temp" "temp"
        unknown call_tmp[819557] "expr temp" "maybe param" "maybe type" "temp"
        (819560 'move' call_tmp[819557](403665 call ptrToArr _mt[203] this[148436]))
        unknown call_tmp[819564] "expr temp" "maybe param" "maybe type" "temp"
        (819567 'move' call_tmp[819564](148502 call(148499 call (partial) deref _mt[203] call_tmp[819557])))
        unknown call_tmp[819571] "expr temp" "maybe param" "maybe type" "temp"
        (819574 'move' call_tmp[819571](148503 call _instance _mt[203] call_tmp[819564]))
        unknown call_tmp[819578] "expr temp" "maybe param" "maybe type" "temp"
        (819581 'move' call_tmp[819578](403669 call domOrRange _mt[203] this[148436]))
        unknown call_tmp[819585] "expr temp" "maybe param" "maybe type" "temp"
        (819588 'move' call_tmp[819585](148507 call _instance _mt[203] call_tmp[819578]))
        unknown call_tmp[819590] "expr temp" "maybe param" "maybe type" "temp"
        (819593 'move' call_tmp[819590](148497 call chpl__serialViewIter call_tmp[819571] call_tmp[819585]))
        (148525 'move' _iterator[148516](148523 call _getIterator call_tmp[819590]))
        Defer
        {
          {
            (148540 call _freeIterator _iterator[148516])
          }
        }
        { scopeless type
          (148530 'move' _indexOfInterest[148515](148527 call iteratorIndex _iterator[148516]))
        }
        ForLoop[148517] order-independent
        {
          unknown elem[148494] "index var" "insert auto destroy"
          (554972 'end of statement')
          (148535 'move' elem[148494] _indexOfInterest[148515])
          (554973 'end of statement' elem[148494])
          {
            const-ref yret[611175] "YVV" "temp"
            (611178 'move' yret[611175](611177 'addr of' elem[148494]))
            (148511 yield yret[611175])
            (554975 'end of statement' elem[148494])
          }
          label _continueLabel[148520]
          _indexOfInterest[148515]
          _iterator[148516]
        }
        label _breakLabel[148521]
      }
    }
    (611167 return ret[611165])
  }
  where {
    (433439 call isConst _mt[203] this[148436])
  }
  function chpl__protoSlice[148800](?).these[148558](arg _mt[148566]:_MT[201], arg this[148560]:chpl__protoSlice[148800](?), param arg tag[148563]:iterKind[52144]) : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611183] "RVV" "temp"
    {
      unknown _indexOfInterest[148590] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[148591] "expr temp" "temp"
      unknown call_tmp[819599] "expr temp" "maybe param" "maybe type" "temp"
      (819602 'move' call_tmp[819599](403674 call domOrRange _mt[203] this[148560]))
      unknown call_tmp[819606] "expr temp" "maybe param" "maybe type" "temp"
      (819609 'move' call_tmp[819606](148582 call(148579 call (partial) these _mt[203] call_tmp[819599]) leader[52138]))
      (148600 'move' _iterator[148591](148598 call _getIterator call_tmp[819606]))
      Defer
      {
        {
          (148615 call _freeIterator _iterator[148591])
        }
      }
      { scopeless type
        (148605 'move' _indexOfInterest[148590](148602 call iteratorIndex _iterator[148591]))
      }
      ForLoop[148592]
      {
        unknown followThis[148576] "index var" "insert auto destroy"
        (554978 'end of statement')
        (148610 'move' followThis[148576] _indexOfInterest[148590])
        (554979 'end of statement' followThis[148576])
        {
          unknown yret[611187] "YVV" "temp"
          (611190 'move' yret[611187](611189 'deref' followThis[148576]))
          (148588 yield yret[611187])
          (554981 'end of statement' followThis[148576])
        }
        label _continueLabel[148595]
        _indexOfInterest[148590]
        _iterator[148591]
      }
      label _breakLabel[148596]
    }
    (611185 return ret[611183])
  }
  where {
    (148568 call == tag[148563] leader[52138])
  }
  function chpl__protoSlice[148800](?).these[148625](arg _mt[148635]:_MT[201], arg this[148627]:chpl__protoSlice[148800](?), param arg tag[148630]:iterKind[52144], arg followThis[148633]:_any[141](?)) ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611195] "RVV" "temp"
    unknown arr[148651] "dead at end of block" "ref var"
    (646237 'init ref decl' arr[148651])
    unknown call_tmp[819613] "expr temp" "maybe param" "maybe type" "temp"
    (819616 'move' call_tmp[819613](403681 call ptrToArr _mt[203] this[148627]))
    unknown call_tmp[819620] "expr temp" "maybe param" "maybe type" "temp"
    (819623 'move' call_tmp[819620](148656 call(148653 call (partial) deref _mt[203] call_tmp[819613])))
    (646235 'move' arr[148651](646234 'addr of' call_tmp[819620]))
    (148658 'end of statement')
    {
      unknown _indexOfInterest[148678] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[148679] "expr temp" "temp"
      unknown call_tmp[819627] "expr temp" "maybe param" "maybe type" "temp"
      (819630 'move' call_tmp[819627](403685 call domOrRange _mt[203] this[148627]))
      unknown call_tmp[819634] "expr temp" "maybe param" "maybe type" "temp"
      (819637 'move' call_tmp[819634](148665 call(148662 call (partial) these _mt[203] call_tmp[819627]) follower[52140] followThis[148633]))
      (148688 'move' _iterator[148679](148686 call _getIterator call_tmp[819634]))
      Defer
      {
        {
          (148703 call _freeIterator _iterator[148679])
        }
      }
      { scopeless type
        (148693 'move' _indexOfInterest[148678](148690 call iteratorIndex _iterator[148679]))
      }
      ForLoop[148680] order-independent
      {
        unknown i[148659] "index var" "insert auto destroy"
        (554984 'end of statement')
        (148698 'move' i[148659] _indexOfInterest[148678])
        (554985 'end of statement' i[148659])
        {
          ref yret[611199] "YVV" "temp"
          unknown call_tmp[819639] "expr temp" "maybe param" "maybe type" "temp"
          (819642 'move' call_tmp[819639](148674 call arr[148651] i[148659]))
          (611202 'move' yret[611199](611201 'addr of' call_tmp[819639]))
          (148672 yield yret[611199])
          (554987 'end of statement' arr[148651] i[148659])
        }
        label _continueLabel[148683]
        _indexOfInterest[148678]
        _iterator[148679]
      }
      label _breakLabel[148684]
    }
    (611197 return ret[611195])
  }
  where {
    unknown tmp[488757] "maybe param" "temp"
    (488768 'move' tmp[488757](148639 call == tag[148630] follower[52140]))
    unknown call_tmp[819644] "expr temp" "maybe param" "maybe type" "temp"
    (819647 'move' call_tmp[819644](488770 call _cond_invalid tmp[488757]))
    if call_tmp[819644]
    {
      (488773 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681151] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681152] "maybe param" "temp"
    unknown call_tmp[819649] "expr temp" "maybe param" "maybe type" "temp"
    (819652 'move' call_tmp[819649](488758 call isTrue tmp[488757]))
    (681157 'move' tmp[681152](681155 call _cond_test call_tmp[819649]))
    if tmp[681152]
    {
      unknown tmp[681159] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[819656] "expr temp" "maybe param" "maybe type" "temp"
      (819659 'move' call_tmp[819656](433460 call isConst _mt[203] this[148627]))
      unknown call_tmp[819661] "expr temp" "maybe param" "maybe type" "temp"
      (819664 'move' call_tmp[819661](148646 call ! call_tmp[819656]))
      (681161 'move' tmp[681159](488761 call isTrue call_tmp[819661]))
      (681166 'move' tmp[681151](681163 '_paramFoldLogical' tmp[681152] tmp[681159]))
    }
    {
      (681171 'move' tmp[681151](681168 '_paramFoldLogical' tmp[681152] 0))
    }
    (1001444 call chpl_statementLevelSymbol tmp[681151])
  }
  function chpl__protoSlice[148800](?).these[148713](arg _mt[148723]:_MT[201], arg this[148715]:chpl__protoSlice[148800](?), param arg tag[148718]:iterKind[52144], arg followThis[148721]:_any[141](?)) const ref : _unknown[42] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[611207] "RVV" "temp"
    const arr[148737] "dead at end of block" "const" "ref var"
    (646242 'init ref decl' arr[148737])
    unknown call_tmp[819668] "expr temp" "maybe param" "maybe type" "temp"
    (819671 'move' call_tmp[819668](403692 call ptrToArr _mt[203] this[148715]))
    unknown call_tmp[819675] "expr temp" "maybe param" "maybe type" "temp"
    (819678 'move' call_tmp[819675](148742 call(148739 call (partial) deref _mt[203] call_tmp[819668])))
    (646240 'move' arr[148737](646239 'addr of' call_tmp[819675]))
    (148744 'end of statement')
    {
      unknown _indexOfInterest[148764] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[148765] "expr temp" "temp"
      unknown call_tmp[819682] "expr temp" "maybe param" "maybe type" "temp"
      (819685 'move' call_tmp[819682](403696 call domOrRange _mt[203] this[148715]))
      unknown call_tmp[819689] "expr temp" "maybe param" "maybe type" "temp"
      (819692 'move' call_tmp[819689](148751 call(148748 call (partial) these _mt[203] call_tmp[819682]) follower[52140] followThis[148721]))
      (148774 'move' _iterator[148765](148772 call _getIterator call_tmp[819689]))
      Defer
      {
        {
          (148789 call _freeIterator _iterator[148765])
        }
      }
      { scopeless type
        (148779 'move' _indexOfInterest[148764](148776 call iteratorIndex _iterator[148765]))
      }
      ForLoop[148766] order-independent
      {
        unknown i[148745] "index var" "insert auto destroy"
        (554991 'end of statement')
        (148784 'move' i[148745] _indexOfInterest[148764])
        (554992 'end of statement' i[148745])
        {
          const-ref yret[611211] "YVV" "temp"
          unknown call_tmp[819694] "expr temp" "maybe param" "maybe type" "temp"
          (819697 'move' call_tmp[819694](148760 call arr[148737] i[148745]))
          (611214 'move' yret[611211](611213 'addr of' call_tmp[819694]))
          (148758 yield yret[611211])
          (554994 'end of statement' arr[148737] i[148745])
        }
        label _continueLabel[148769]
        _indexOfInterest[148764]
        _iterator[148765]
      }
      label _breakLabel[148770]
    }
    (611209 return ret[611207])
  }
  where {
    unknown tmp[488778] "maybe param" "temp"
    (488789 'move' tmp[488778](148727 call == tag[148718] follower[52140]))
    unknown call_tmp[819699] "expr temp" "maybe param" "maybe type" "temp"
    (819702 'move' call_tmp[819699](488791 call _cond_invalid tmp[488778]))
    if call_tmp[819699]
    {
      (488794 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681178] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681179] "maybe param" "temp"
    unknown call_tmp[819704] "expr temp" "maybe param" "maybe type" "temp"
    (819707 'move' call_tmp[819704](488779 call isTrue tmp[488778]))
    (681184 'move' tmp[681179](681182 call _cond_test call_tmp[819704]))
    if tmp[681179]
    {
      unknown tmp[681186] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[819711] "expr temp" "maybe param" "maybe type" "temp"
      (819714 'move' call_tmp[819711](433470 call isConst _mt[203] this[148715]))
      (681188 'move' tmp[681186](488782 call isTrue call_tmp[819711]))
      (681193 'move' tmp[681178](681190 '_paramFoldLogical' tmp[681179] tmp[681186]))
    }
    {
      (681198 'move' tmp[681178](681195 '_paramFoldLogical' tmp[681179] 0))
    }
    (1001446 call chpl_statementLevelSymbol tmp[681178])
  }
  function chpl__protoSlice[148800](?).isConst[1087895](arg _mt[1087897]:_MT[201], arg this[1087899]:chpl__protoSlice[148800](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1087918] "RVV" "param" "temp"
    unknown call_tmp[1087932] "expr temp" "maybe param" "maybe type" "temp"
    (1087935 'move' call_tmp[1087932](1087904 'is bound' this[1087899] c"isConst"))
    if call_tmp[1087932]
    {
      unknown call_tmp[1087937] "expr temp" "maybe param" "maybe type" "temp"
      (1087940 'move' call_tmp[1087937](1087903 '.' this[1087899] c"isConst"))
      (1087923 'move' ret[1087918](1087922 'deref' call_tmp[1087937]))
      gotoReturn _end_isConst[1087916] _end_isConst[1087916]
    }
    {
      (1087928 'move' ret[1087918](1087927 'deref' ?[227]))
      gotoReturn _end_isConst[1087916] _end_isConst[1087916]
    }
    label _end_isConst[1087916]
    (1087920 return ret[1087918])
  }
  function chpl__protoSlice[148800](?).isConst[1087942](arg _mt[1087944]:_MT[201], arg this[1087946]:chpl__protoSlice[148800](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1087965] "RVV" "param" "temp"
    unknown call_tmp[1087979] "expr temp" "maybe param" "maybe type" "temp"
    (1087982 'move' call_tmp[1087979](1087951 'is bound' this[1087946] c"isConst"))
    if call_tmp[1087979]
    {
      unknown call_tmp[1087984] "expr temp" "maybe param" "maybe type" "temp"
      (1087987 'move' call_tmp[1087984](1087950 '.' this[1087946] c"isConst"))
      (1087970 'move' ret[1087965](1087969 'deref' call_tmp[1087984]))
      gotoReturn _end_isConst[1087963] _end_isConst[1087963]
    }
    {
      (1087975 'move' ret[1087965](1087974 'deref' ?[227]))
      gotoReturn _end_isConst[1087963] _end_isConst[1087963]
    }
    label _end_isConst[1087963]
    (1087967 return ret[1087965])
  }
  function chpl__protoSlice[148800](?).ptrToArr[1087989](arg _mt[1087991]:_MT[201], ref arg this[1087993]:chpl__protoSlice[148800](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1088003] "RVV" "temp"
    unknown call_tmp[1088010] "expr temp" "maybe param" "maybe type" "temp"
    (1088013 'move' call_tmp[1088010](1087997 '.' this[1087993] c"ptrToArr"))
    (1088008 'move' ret[1088003](1088007 'addr of' call_tmp[1088010]))
    (1088005 return ret[1088003])
  }
  function chpl__protoSlice[148800](?).slicingExprType[1088015](arg _mt[1088017]:_MT[201], arg this[1088019]:chpl__protoSlice[148800](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1088038] "RVV" "temp" "type variable"
    unknown call_tmp[1088052] "expr temp" "maybe param" "maybe type" "temp"
    (1088055 'move' call_tmp[1088052](1088024 'is bound' this[1088019] c"slicingExprType"))
    if call_tmp[1088052]
    {
      unknown call_tmp[1088057] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1088060 'move' call_tmp[1088057](1088023 '.v' this[1088019] c"slicingExprType"))
      (1088043 'move' ret[1088038](1088042 'deref' call_tmp[1088057]))
      gotoReturn _end_slicingExprType[1088036] _end_slicingExprType[1088036]
    }
    {
      (1088048 'move' ret[1088038](1088047 'deref' _uninstantiated[225]))
      gotoReturn _end_slicingExprType[1088036] _end_slicingExprType[1088036]
    }
    label _end_slicingExprType[1088036]
    (1088040 return ret[1088038])
  }
  function chpl__protoSlice[148800](?).slicingExprType[1088062](arg _mt[1088064]:_MT[201], arg this[1088066]:chpl__protoSlice[148800](?)) type : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1088085] "RVV" "temp" "type variable"
    unknown call_tmp[1088099] "expr temp" "maybe param" "maybe type" "temp"
    (1088102 'move' call_tmp[1088099](1088071 'is bound' this[1088066] c"slicingExprType"))
    if call_tmp[1088099]
    {
      unknown call_tmp[1088104] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (1088107 'move' call_tmp[1088104](1088070 '.v' this[1088066] c"slicingExprType"))
      (1088090 'move' ret[1088085](1088089 'deref' call_tmp[1088104]))
      gotoReturn _end_slicingExprType[1088083] _end_slicingExprType[1088083]
    }
    {
      (1088095 'move' ret[1088085](1088094 'deref' _uninstantiated[225]))
      gotoReturn _end_slicingExprType[1088083] _end_slicingExprType[1088083]
    }
    label _end_slicingExprType[1088083]
    (1088087 return ret[1088085])
  }
  function chpl__protoSlice[148800](?).ranges[1088109](arg _mt[1088111]:_MT[201], ref arg this[1088113]:chpl__protoSlice[148800](?)) ref : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1088123] "RVV" "temp"
    unknown call_tmp[1088130] "expr temp" "maybe param" "maybe type" "temp"
    (1088133 'move' call_tmp[1088130](1088117 '.' this[1088113] c"ranges"))
    (1088128 'move' ret[1088123](1088127 'addr of' call_tmp[1088130]))
    (1088125 return ret[1088123])
  }
  function chpl__protoSlice[148800](?).isRankChange[1088135](arg _mt[1088137]:_MT[201], arg this[1088139]:chpl__protoSlice[148800](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[1088158] "RVV" "param" "temp"
    unknown call_tmp[1088172] "expr temp" "maybe param" "maybe type" "temp"
    (1088175 'move' call_tmp[1088172](1088144 'is bound' this[1088139] c"isRankChange"))
    if call_tmp[1088172]
    {
      unknown call_tmp[1088177] "expr temp" "maybe param" "maybe type" "temp"
      (1088180 'move' call_tmp[1088177](1088143 '.' this[1088139] c"isRankChange"))
      (1088163 'move' ret[1088158](1088162 'deref' call_tmp[1088177]))
      gotoReturn _end_isRankChange[1088156] _end_isRankChange[1088156]
    }
    {
      (1088168 'move' ret[1088158](1088167 'deref' ?[227]))
      gotoReturn _end_isRankChange[1088156] _end_isRankChange[1088156]
    }
    label _end_isRankChange[1088156]
    (1088160 return ret[1088158])
  }
  function chpl__protoSlice[148800](?).isRankChange[1088182](arg _mt[1088184]:_MT[201], arg this[1088186]:chpl__protoSlice[148800](?)) param : _unknown[42] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[1088205] "RVV" "param" "temp"
    unknown call_tmp[1088219] "expr temp" "maybe param" "maybe type" "temp"
    (1088222 'move' call_tmp[1088219](1088191 'is bound' this[1088186] c"isRankChange"))
    if call_tmp[1088219]
    {
      unknown call_tmp[1088224] "expr temp" "maybe param" "maybe type" "temp"
      (1088227 'move' call_tmp[1088224](1088190 '.' this[1088186] c"isRankChange"))
      (1088210 'move' ret[1088205](1088209 'deref' call_tmp[1088224]))
      gotoReturn _end_isRankChange[1088203] _end_isRankChange[1088203]
    }
    {
      (1088215 'move' ret[1088205](1088214 'deref' ?[227]))
      gotoReturn _end_isRankChange[1088203] _end_isRankChange[1088203]
    }
    label _end_isRankChange[1088203]
    (1088207 return ret[1088205])
  }
  function chpl__protoSlice[148800](?).deinit[1088229](arg _mt[1088231]:_MT[201], arg this[1088233]:chpl__protoSlice[148800](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (1088241 return _void[46])
  }
  function chpl__protoSlice[148800](?).serialize[1088243](arg _mt[1088247]:_MT[201], arg this[1088245]:chpl__protoSlice[148800](?), arg writer[1088246]:_any[141](?), ref arg serializer[1088251]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (1088254 call serializeDefaultImpl writer[1088246] serializer[1088251] this[1088245])
    (1088260 return _void[46])
  }
  function chpl__protoSlice[148800](?).deserialize[1088262](arg _mt[1088266]:_MT[201], ref arg this[1088264]:chpl__protoSlice[148800](?), arg reader[1088265]:_any[141](?), ref arg deserializer[1088271]:_any[141](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    unknown _deser_temp[1088273] "temp"
    (1088275 'move' _deser_temp[1088273] this[1088264])
    (1088278 call deserializeDefaultImpl reader[1088265] deserializer[1088271] _deser_temp[1088273])
    (1088284 return _void[46])
  }
  function chpl_fields_are_comparable[1088302](arg _arg1[1088304]:chpl__protoSlice[148800](?), arg _arg2[1088305]:chpl__protoSlice[148800](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1088364]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1088371] "expr temp" "maybe param" "maybe type" "temp"
    (1088374 'move' call_tmp[1088371](1088308 call rank _mt[203] _arg1[1088304]))
    unknown call_tmp[1088376] "expr temp" "maybe param" "maybe type" "temp"
    (1088379 'move' call_tmp[1088376](1088312 call rank _mt[203] _arg2[1088305]))
    unknown call_tmp[1088381] "expr temp" "maybe param" "maybe type" "temp"
    (1088384 'move' call_tmp[1088381](1088316 'call resolves' c"!=" call_tmp[1088371] call_tmp[1088376]))
    unknown call_tmp[1088386] "expr temp" "maybe param" "maybe type" "temp"
    (1088389 'move' call_tmp[1088386](1088318 call isConst _mt[203] _arg1[1088304]))
    unknown call_tmp[1088391] "expr temp" "maybe param" "maybe type" "temp"
    (1088394 'move' call_tmp[1088391](1088322 call isConst _mt[203] _arg2[1088305]))
    unknown call_tmp[1088396] "expr temp" "maybe param" "maybe type" "temp"
    (1088399 'move' call_tmp[1088396](1088326 'call resolves' c"!=" call_tmp[1088386] call_tmp[1088391]))
    unknown call_tmp[1088401] "expr temp" "maybe param" "maybe type" "temp"
    (1088404 'move' call_tmp[1088401](1088328 call ptrToArr _mt[203] _arg1[1088304]))
    unknown call_tmp[1088406] "expr temp" "maybe param" "maybe type" "temp"
    (1088409 'move' call_tmp[1088406](1088332 call ptrToArr _mt[203] _arg2[1088305]))
    unknown call_tmp[1088411] "expr temp" "maybe param" "maybe type" "temp"
    (1088414 'move' call_tmp[1088411](1088336 'call resolves' c"!=" call_tmp[1088401] call_tmp[1088406]))
    unknown call_tmp[1088416] "expr temp" "maybe param" "maybe type" "temp"
    (1088419 'move' call_tmp[1088416](1088338 call ranges _mt[203] _arg1[1088304]))
    unknown call_tmp[1088421] "expr temp" "maybe param" "maybe type" "temp"
    (1088424 'move' call_tmp[1088421](1088342 call ranges _mt[203] _arg2[1088305]))
    unknown call_tmp[1088426] "expr temp" "maybe param" "maybe type" "temp"
    (1088429 'move' call_tmp[1088426](1088346 'call resolves' c"!=" call_tmp[1088416] call_tmp[1088421]))
    unknown call_tmp[1088431] "expr temp" "maybe param" "maybe type" "temp"
    (1088434 'move' call_tmp[1088431](1088348 call isRankChange _mt[203] _arg1[1088304]))
    unknown call_tmp[1088436] "expr temp" "maybe param" "maybe type" "temp"
    (1088439 'move' call_tmp[1088436](1088352 call isRankChange _mt[203] _arg2[1088305]))
    unknown call_tmp[1088441] "expr temp" "maybe param" "maybe type" "temp"
    (1088444 'move' call_tmp[1088441](1088356 'call resolves' c"!=" call_tmp[1088431] call_tmp[1088436]))
    unknown call_tmp[1088446] "expr temp" "maybe param" "maybe type" "temp"
    (1088449 'move' call_tmp[1088446](1088358 '&' call_tmp[1088381] call_tmp[1088396] call_tmp[1088411] call_tmp[1088426] call_tmp[1088441]))
    (1088369 'move' ret[1088364](1088368 'deref' call_tmp[1088446]))
    (1088366 return ret[1088364])
  }
  function chpl__protoSlice[148800](?).!=[1088286](arg _mt[1088288]:_MT[201], arg this[1088290]:chpl__protoSlice[148800](?), arg _arg1[1088292]:chpl__protoSlice[148800](?), arg _arg2[1088293]:chpl__protoSlice[148800](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1088538]:bool[19] "RVV" "temp"
    unknown call_tmp[1088570] "expr temp" "maybe param" "maybe type" "temp"
    (1088573 'move' call_tmp[1088570](1088457 call rank _mt[203] _arg1[1088292]))
    unknown call_tmp[1088575] "expr temp" "maybe param" "maybe type" "temp"
    (1088578 'move' call_tmp[1088575](1088461 call rank _mt[203] _arg2[1088293]))
    unknown call_tmp[1088580] "expr temp" "maybe param" "maybe type" "temp"
    (1088583 'move' call_tmp[1088580](1088465 call chpl_field_neq call_tmp[1088570] call_tmp[1088575]))
    if call_tmp[1088580]
    {
      (1088543 'move' ret[1088538](1088542 'deref' 1))
      gotoReturn _end_!=[1088536] _end_!=[1088536]
    }
    unknown call_tmp[1088585] "expr temp" "maybe param" "maybe type" "temp"
    (1088588 'move' call_tmp[1088585](1088471 call isConst _mt[203] _arg1[1088292]))
    unknown call_tmp[1088590] "expr temp" "maybe param" "maybe type" "temp"
    (1088593 'move' call_tmp[1088590](1088475 call isConst _mt[203] _arg2[1088293]))
    unknown call_tmp[1088595] "expr temp" "maybe param" "maybe type" "temp"
    (1088598 'move' call_tmp[1088595](1088479 call chpl_field_neq call_tmp[1088585] call_tmp[1088590]))
    if call_tmp[1088595]
    {
      (1088548 'move' ret[1088538](1088547 'deref' 1))
      gotoReturn _end_!=[1088536] _end_!=[1088536]
    }
    unknown call_tmp[1088600] "expr temp" "maybe param" "maybe type" "temp"
    (1088603 'move' call_tmp[1088600](1088485 call ptrToArr _mt[203] _arg1[1088292]))
    unknown call_tmp[1088605] "expr temp" "maybe param" "maybe type" "temp"
    (1088608 'move' call_tmp[1088605](1088489 call ptrToArr _mt[203] _arg2[1088293]))
    unknown call_tmp[1088610] "expr temp" "maybe param" "maybe type" "temp"
    (1088613 'move' call_tmp[1088610](1088493 call chpl_field_neq call_tmp[1088600] call_tmp[1088605]))
    if call_tmp[1088610]
    {
      (1088553 'move' ret[1088538](1088552 'deref' 1))
      gotoReturn _end_!=[1088536] _end_!=[1088536]
    }
    unknown call_tmp[1088615] "expr temp" "maybe param" "maybe type" "temp"
    (1088618 'move' call_tmp[1088615](1088499 call ranges _mt[203] _arg1[1088292]))
    unknown call_tmp[1088620] "expr temp" "maybe param" "maybe type" "temp"
    (1088623 'move' call_tmp[1088620](1088503 call ranges _mt[203] _arg2[1088293]))
    unknown call_tmp[1088625] "expr temp" "maybe param" "maybe type" "temp"
    (1088628 'move' call_tmp[1088625](1088507 call chpl_field_neq call_tmp[1088615] call_tmp[1088620]))
    if call_tmp[1088625]
    {
      (1088558 'move' ret[1088538](1088557 'deref' 1))
      gotoReturn _end_!=[1088536] _end_!=[1088536]
    }
    unknown call_tmp[1088630] "expr temp" "maybe param" "maybe type" "temp"
    (1088633 'move' call_tmp[1088630](1088513 call isRankChange _mt[203] _arg1[1088292]))
    unknown call_tmp[1088635] "expr temp" "maybe param" "maybe type" "temp"
    (1088638 'move' call_tmp[1088635](1088517 call isRankChange _mt[203] _arg2[1088293]))
    unknown call_tmp[1088640] "expr temp" "maybe param" "maybe type" "temp"
    (1088643 'move' call_tmp[1088640](1088521 call chpl_field_neq call_tmp[1088630] call_tmp[1088635]))
    if call_tmp[1088640]
    {
      (1088563 'move' ret[1088538](1088562 'deref' 1))
      gotoReturn _end_!=[1088536] _end_!=[1088536]
    }
    (1088568 'move' ret[1088538](1088567 'deref' 0))
    label _end_!=[1088536]
    (1088540 return ret[1088538])
  }
  where {
    unknown call_tmp[1088645] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1088648 'move' call_tmp[1088645](1088296 'typeof' _arg1[1088292]))
    unknown call_tmp[1088650] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1088653 'move' call_tmp[1088650](1088298 'typeof' _arg2[1088293]))
    unknown call_tmp[1088655] "expr temp" "maybe param" "maybe type" "temp"
    (1088658 'move' call_tmp[1088655](1088300 call == call_tmp[1088645] call_tmp[1088650]))
    unknown call_tmp[1088660] "expr temp" "maybe param" "maybe type" "temp"
    (1088663 'move' call_tmp[1088660](1088451 call chpl_fields_are_comparable[1088302] _arg1[1088292] _arg2[1088293]))
    (1088455 '&' call_tmp[1088655] call_tmp[1088660])
  }
  function chpl_fields_are_comparable[1088681](arg _arg1[1088683]:chpl__protoSlice[148800](?), arg _arg2[1088684]:chpl__protoSlice[148800](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1088743]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1088750] "expr temp" "maybe param" "maybe type" "temp"
    (1088753 'move' call_tmp[1088750](1088687 call rank _mt[203] _arg1[1088683]))
    unknown call_tmp[1088755] "expr temp" "maybe param" "maybe type" "temp"
    (1088758 'move' call_tmp[1088755](1088691 call rank _mt[203] _arg2[1088684]))
    unknown call_tmp[1088760] "expr temp" "maybe param" "maybe type" "temp"
    (1088763 'move' call_tmp[1088760](1088695 'call resolves' c"<" call_tmp[1088750] call_tmp[1088755]))
    unknown call_tmp[1088765] "expr temp" "maybe param" "maybe type" "temp"
    (1088768 'move' call_tmp[1088765](1088697 call isConst _mt[203] _arg1[1088683]))
    unknown call_tmp[1088770] "expr temp" "maybe param" "maybe type" "temp"
    (1088773 'move' call_tmp[1088770](1088701 call isConst _mt[203] _arg2[1088684]))
    unknown call_tmp[1088775] "expr temp" "maybe param" "maybe type" "temp"
    (1088778 'move' call_tmp[1088775](1088705 'call resolves' c"<" call_tmp[1088765] call_tmp[1088770]))
    unknown call_tmp[1088780] "expr temp" "maybe param" "maybe type" "temp"
    (1088783 'move' call_tmp[1088780](1088707 call ptrToArr _mt[203] _arg1[1088683]))
    unknown call_tmp[1088785] "expr temp" "maybe param" "maybe type" "temp"
    (1088788 'move' call_tmp[1088785](1088711 call ptrToArr _mt[203] _arg2[1088684]))
    unknown call_tmp[1088790] "expr temp" "maybe param" "maybe type" "temp"
    (1088793 'move' call_tmp[1088790](1088715 'call resolves' c"<" call_tmp[1088780] call_tmp[1088785]))
    unknown call_tmp[1088795] "expr temp" "maybe param" "maybe type" "temp"
    (1088798 'move' call_tmp[1088795](1088717 call ranges _mt[203] _arg1[1088683]))
    unknown call_tmp[1088800] "expr temp" "maybe param" "maybe type" "temp"
    (1088803 'move' call_tmp[1088800](1088721 call ranges _mt[203] _arg2[1088684]))
    unknown call_tmp[1088805] "expr temp" "maybe param" "maybe type" "temp"
    (1088808 'move' call_tmp[1088805](1088725 'call resolves' c"<" call_tmp[1088795] call_tmp[1088800]))
    unknown call_tmp[1088810] "expr temp" "maybe param" "maybe type" "temp"
    (1088813 'move' call_tmp[1088810](1088727 call isRankChange _mt[203] _arg1[1088683]))
    unknown call_tmp[1088815] "expr temp" "maybe param" "maybe type" "temp"
    (1088818 'move' call_tmp[1088815](1088731 call isRankChange _mt[203] _arg2[1088684]))
    unknown call_tmp[1088820] "expr temp" "maybe param" "maybe type" "temp"
    (1088823 'move' call_tmp[1088820](1088735 'call resolves' c"<" call_tmp[1088810] call_tmp[1088815]))
    unknown call_tmp[1088825] "expr temp" "maybe param" "maybe type" "temp"
    (1088828 'move' call_tmp[1088825](1088737 '&' call_tmp[1088760] call_tmp[1088775] call_tmp[1088790] call_tmp[1088805] call_tmp[1088820]))
    (1088748 'move' ret[1088743](1088747 'deref' call_tmp[1088825]))
    (1088745 return ret[1088743])
  }
  function chpl__protoSlice[148800](?).<[1088665](arg _mt[1088667]:_MT[201], arg this[1088669]:chpl__protoSlice[148800](?), arg _arg1[1088671]:chpl__protoSlice[148800](?), arg _arg2[1088672]:chpl__protoSlice[148800](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1088992]:bool[19] "RVV" "temp"
    unknown call_tmp[1089049] "expr temp" "maybe param" "maybe type" "temp"
    (1089052 'move' call_tmp[1089049](1088836 call rank _mt[203] _arg1[1088671]))
    unknown call_tmp[1089054] "expr temp" "maybe param" "maybe type" "temp"
    (1089057 'move' call_tmp[1089054](1088840 call rank _mt[203] _arg2[1088672]))
    unknown call_tmp[1089059] "expr temp" "maybe param" "maybe type" "temp"
    (1089062 'move' call_tmp[1089059](1088844 call chpl_field_lt call_tmp[1089049] call_tmp[1089054]))
    if call_tmp[1089059]
    {
      (1088997 'move' ret[1088992](1088996 'deref' 1))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089064] "expr temp" "maybe param" "maybe type" "temp"
    (1089067 'move' call_tmp[1089064](1088850 call rank _mt[203] _arg1[1088671]))
    unknown call_tmp[1089069] "expr temp" "maybe param" "maybe type" "temp"
    (1089072 'move' call_tmp[1089069](1088854 call rank _mt[203] _arg2[1088672]))
    unknown call_tmp[1089074] "expr temp" "maybe param" "maybe type" "temp"
    (1089077 'move' call_tmp[1089074](1088858 call chpl_field_gt call_tmp[1089064] call_tmp[1089069]))
    if call_tmp[1089074]
    {
      (1089002 'move' ret[1088992](1089001 'deref' 0))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089079] "expr temp" "maybe param" "maybe type" "temp"
    (1089082 'move' call_tmp[1089079](1088864 call isConst _mt[203] _arg1[1088671]))
    unknown call_tmp[1089084] "expr temp" "maybe param" "maybe type" "temp"
    (1089087 'move' call_tmp[1089084](1088868 call isConst _mt[203] _arg2[1088672]))
    unknown call_tmp[1089089] "expr temp" "maybe param" "maybe type" "temp"
    (1089092 'move' call_tmp[1089089](1088872 call chpl_field_lt call_tmp[1089079] call_tmp[1089084]))
    if call_tmp[1089089]
    {
      (1089007 'move' ret[1088992](1089006 'deref' 1))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089094] "expr temp" "maybe param" "maybe type" "temp"
    (1089097 'move' call_tmp[1089094](1088878 call isConst _mt[203] _arg1[1088671]))
    unknown call_tmp[1089099] "expr temp" "maybe param" "maybe type" "temp"
    (1089102 'move' call_tmp[1089099](1088882 call isConst _mt[203] _arg2[1088672]))
    unknown call_tmp[1089104] "expr temp" "maybe param" "maybe type" "temp"
    (1089107 'move' call_tmp[1089104](1088886 call chpl_field_gt call_tmp[1089094] call_tmp[1089099]))
    if call_tmp[1089104]
    {
      (1089012 'move' ret[1088992](1089011 'deref' 0))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089109] "expr temp" "maybe param" "maybe type" "temp"
    (1089112 'move' call_tmp[1089109](1088892 call ptrToArr _mt[203] _arg1[1088671]))
    unknown call_tmp[1089114] "expr temp" "maybe param" "maybe type" "temp"
    (1089117 'move' call_tmp[1089114](1088896 call ptrToArr _mt[203] _arg2[1088672]))
    unknown call_tmp[1089119] "expr temp" "maybe param" "maybe type" "temp"
    (1089122 'move' call_tmp[1089119](1088900 call chpl_field_lt call_tmp[1089109] call_tmp[1089114]))
    if call_tmp[1089119]
    {
      (1089017 'move' ret[1088992](1089016 'deref' 1))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089124] "expr temp" "maybe param" "maybe type" "temp"
    (1089127 'move' call_tmp[1089124](1088906 call ptrToArr _mt[203] _arg1[1088671]))
    unknown call_tmp[1089129] "expr temp" "maybe param" "maybe type" "temp"
    (1089132 'move' call_tmp[1089129](1088910 call ptrToArr _mt[203] _arg2[1088672]))
    unknown call_tmp[1089134] "expr temp" "maybe param" "maybe type" "temp"
    (1089137 'move' call_tmp[1089134](1088914 call chpl_field_gt call_tmp[1089124] call_tmp[1089129]))
    if call_tmp[1089134]
    {
      (1089022 'move' ret[1088992](1089021 'deref' 0))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089139] "expr temp" "maybe param" "maybe type" "temp"
    (1089142 'move' call_tmp[1089139](1088920 call ranges _mt[203] _arg1[1088671]))
    unknown call_tmp[1089144] "expr temp" "maybe param" "maybe type" "temp"
    (1089147 'move' call_tmp[1089144](1088924 call ranges _mt[203] _arg2[1088672]))
    unknown call_tmp[1089149] "expr temp" "maybe param" "maybe type" "temp"
    (1089152 'move' call_tmp[1089149](1088928 call chpl_field_lt call_tmp[1089139] call_tmp[1089144]))
    if call_tmp[1089149]
    {
      (1089027 'move' ret[1088992](1089026 'deref' 1))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089154] "expr temp" "maybe param" "maybe type" "temp"
    (1089157 'move' call_tmp[1089154](1088934 call ranges _mt[203] _arg1[1088671]))
    unknown call_tmp[1089159] "expr temp" "maybe param" "maybe type" "temp"
    (1089162 'move' call_tmp[1089159](1088938 call ranges _mt[203] _arg2[1088672]))
    unknown call_tmp[1089164] "expr temp" "maybe param" "maybe type" "temp"
    (1089167 'move' call_tmp[1089164](1088942 call chpl_field_gt call_tmp[1089154] call_tmp[1089159]))
    if call_tmp[1089164]
    {
      (1089032 'move' ret[1088992](1089031 'deref' 0))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089169] "expr temp" "maybe param" "maybe type" "temp"
    (1089172 'move' call_tmp[1089169](1088948 call isRankChange _mt[203] _arg1[1088671]))
    unknown call_tmp[1089174] "expr temp" "maybe param" "maybe type" "temp"
    (1089177 'move' call_tmp[1089174](1088952 call isRankChange _mt[203] _arg2[1088672]))
    unknown call_tmp[1089179] "expr temp" "maybe param" "maybe type" "temp"
    (1089182 'move' call_tmp[1089179](1088956 call chpl_field_lt call_tmp[1089169] call_tmp[1089174]))
    if call_tmp[1089179]
    {
      (1089037 'move' ret[1088992](1089036 'deref' 1))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    unknown call_tmp[1089184] "expr temp" "maybe param" "maybe type" "temp"
    (1089187 'move' call_tmp[1089184](1088962 call isRankChange _mt[203] _arg1[1088671]))
    unknown call_tmp[1089189] "expr temp" "maybe param" "maybe type" "temp"
    (1089192 'move' call_tmp[1089189](1088966 call isRankChange _mt[203] _arg2[1088672]))
    unknown call_tmp[1089194] "expr temp" "maybe param" "maybe type" "temp"
    (1089197 'move' call_tmp[1089194](1088970 call chpl_field_gt call_tmp[1089184] call_tmp[1089189]))
    if call_tmp[1089194]
    {
      (1089042 'move' ret[1088992](1089041 'deref' 0))
      gotoReturn _end_<[1088990] _end_<[1088990]
    }
    (1089047 'move' ret[1088992](1089046 'deref' 0))
    label _end_<[1088990]
    (1088994 return ret[1088992])
  }
  where {
    unknown call_tmp[1089199] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1089202 'move' call_tmp[1089199](1088675 'typeof' _arg1[1088671]))
    unknown call_tmp[1089204] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1089207 'move' call_tmp[1089204](1088677 'typeof' _arg2[1088672]))
    unknown call_tmp[1089209] "expr temp" "maybe param" "maybe type" "temp"
    (1089212 'move' call_tmp[1089209](1088679 call == call_tmp[1089199] call_tmp[1089204]))
    unknown call_tmp[1089214] "expr temp" "maybe param" "maybe type" "temp"
    (1089217 'move' call_tmp[1089214](1088830 call chpl_fields_are_comparable[1088681] _arg1[1088671] _arg2[1088672]))
    (1088834 '&' call_tmp[1089209] call_tmp[1089214])
  }
  function chpl_fields_are_comparable[1089235](arg _arg1[1089237]:chpl__protoSlice[148800](?), arg _arg2[1089238]:chpl__protoSlice[148800](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1089297]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1089304] "expr temp" "maybe param" "maybe type" "temp"
    (1089307 'move' call_tmp[1089304](1089241 call rank _mt[203] _arg1[1089237]))
    unknown call_tmp[1089309] "expr temp" "maybe param" "maybe type" "temp"
    (1089312 'move' call_tmp[1089309](1089245 call rank _mt[203] _arg2[1089238]))
    unknown call_tmp[1089314] "expr temp" "maybe param" "maybe type" "temp"
    (1089317 'move' call_tmp[1089314](1089249 'call resolves' c"<=" call_tmp[1089304] call_tmp[1089309]))
    unknown call_tmp[1089319] "expr temp" "maybe param" "maybe type" "temp"
    (1089322 'move' call_tmp[1089319](1089251 call isConst _mt[203] _arg1[1089237]))
    unknown call_tmp[1089324] "expr temp" "maybe param" "maybe type" "temp"
    (1089327 'move' call_tmp[1089324](1089255 call isConst _mt[203] _arg2[1089238]))
    unknown call_tmp[1089329] "expr temp" "maybe param" "maybe type" "temp"
    (1089332 'move' call_tmp[1089329](1089259 'call resolves' c"<=" call_tmp[1089319] call_tmp[1089324]))
    unknown call_tmp[1089334] "expr temp" "maybe param" "maybe type" "temp"
    (1089337 'move' call_tmp[1089334](1089261 call ptrToArr _mt[203] _arg1[1089237]))
    unknown call_tmp[1089339] "expr temp" "maybe param" "maybe type" "temp"
    (1089342 'move' call_tmp[1089339](1089265 call ptrToArr _mt[203] _arg2[1089238]))
    unknown call_tmp[1089344] "expr temp" "maybe param" "maybe type" "temp"
    (1089347 'move' call_tmp[1089344](1089269 'call resolves' c"<=" call_tmp[1089334] call_tmp[1089339]))
    unknown call_tmp[1089349] "expr temp" "maybe param" "maybe type" "temp"
    (1089352 'move' call_tmp[1089349](1089271 call ranges _mt[203] _arg1[1089237]))
    unknown call_tmp[1089354] "expr temp" "maybe param" "maybe type" "temp"
    (1089357 'move' call_tmp[1089354](1089275 call ranges _mt[203] _arg2[1089238]))
    unknown call_tmp[1089359] "expr temp" "maybe param" "maybe type" "temp"
    (1089362 'move' call_tmp[1089359](1089279 'call resolves' c"<=" call_tmp[1089349] call_tmp[1089354]))
    unknown call_tmp[1089364] "expr temp" "maybe param" "maybe type" "temp"
    (1089367 'move' call_tmp[1089364](1089281 call isRankChange _mt[203] _arg1[1089237]))
    unknown call_tmp[1089369] "expr temp" "maybe param" "maybe type" "temp"
    (1089372 'move' call_tmp[1089369](1089285 call isRankChange _mt[203] _arg2[1089238]))
    unknown call_tmp[1089374] "expr temp" "maybe param" "maybe type" "temp"
    (1089377 'move' call_tmp[1089374](1089289 'call resolves' c"<=" call_tmp[1089364] call_tmp[1089369]))
    unknown call_tmp[1089379] "expr temp" "maybe param" "maybe type" "temp"
    (1089382 'move' call_tmp[1089379](1089291 '&' call_tmp[1089314] call_tmp[1089329] call_tmp[1089344] call_tmp[1089359] call_tmp[1089374]))
    (1089302 'move' ret[1089297](1089301 'deref' call_tmp[1089379]))
    (1089299 return ret[1089297])
  }
  function chpl__protoSlice[148800](?).<=[1089219](arg _mt[1089221]:_MT[201], arg this[1089223]:chpl__protoSlice[148800](?), arg _arg1[1089225]:chpl__protoSlice[148800](?), arg _arg2[1089226]:chpl__protoSlice[148800](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1089546]:bool[19] "RVV" "temp"
    unknown call_tmp[1089603] "expr temp" "maybe param" "maybe type" "temp"
    (1089606 'move' call_tmp[1089603](1089390 call rank _mt[203] _arg1[1089225]))
    unknown call_tmp[1089608] "expr temp" "maybe param" "maybe type" "temp"
    (1089611 'move' call_tmp[1089608](1089394 call rank _mt[203] _arg2[1089226]))
    unknown call_tmp[1089613] "expr temp" "maybe param" "maybe type" "temp"
    (1089616 'move' call_tmp[1089613](1089398 call chpl_field_lt call_tmp[1089603] call_tmp[1089608]))
    if call_tmp[1089613]
    {
      (1089551 'move' ret[1089546](1089550 'deref' 1))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089618] "expr temp" "maybe param" "maybe type" "temp"
    (1089621 'move' call_tmp[1089618](1089404 call rank _mt[203] _arg1[1089225]))
    unknown call_tmp[1089623] "expr temp" "maybe param" "maybe type" "temp"
    (1089626 'move' call_tmp[1089623](1089408 call rank _mt[203] _arg2[1089226]))
    unknown call_tmp[1089628] "expr temp" "maybe param" "maybe type" "temp"
    (1089631 'move' call_tmp[1089628](1089412 call chpl_field_gt call_tmp[1089618] call_tmp[1089623]))
    if call_tmp[1089628]
    {
      (1089556 'move' ret[1089546](1089555 'deref' 0))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089633] "expr temp" "maybe param" "maybe type" "temp"
    (1089636 'move' call_tmp[1089633](1089418 call isConst _mt[203] _arg1[1089225]))
    unknown call_tmp[1089638] "expr temp" "maybe param" "maybe type" "temp"
    (1089641 'move' call_tmp[1089638](1089422 call isConst _mt[203] _arg2[1089226]))
    unknown call_tmp[1089643] "expr temp" "maybe param" "maybe type" "temp"
    (1089646 'move' call_tmp[1089643](1089426 call chpl_field_lt call_tmp[1089633] call_tmp[1089638]))
    if call_tmp[1089643]
    {
      (1089561 'move' ret[1089546](1089560 'deref' 1))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089648] "expr temp" "maybe param" "maybe type" "temp"
    (1089651 'move' call_tmp[1089648](1089432 call isConst _mt[203] _arg1[1089225]))
    unknown call_tmp[1089653] "expr temp" "maybe param" "maybe type" "temp"
    (1089656 'move' call_tmp[1089653](1089436 call isConst _mt[203] _arg2[1089226]))
    unknown call_tmp[1089658] "expr temp" "maybe param" "maybe type" "temp"
    (1089661 'move' call_tmp[1089658](1089440 call chpl_field_gt call_tmp[1089648] call_tmp[1089653]))
    if call_tmp[1089658]
    {
      (1089566 'move' ret[1089546](1089565 'deref' 0))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089663] "expr temp" "maybe param" "maybe type" "temp"
    (1089666 'move' call_tmp[1089663](1089446 call ptrToArr _mt[203] _arg1[1089225]))
    unknown call_tmp[1089668] "expr temp" "maybe param" "maybe type" "temp"
    (1089671 'move' call_tmp[1089668](1089450 call ptrToArr _mt[203] _arg2[1089226]))
    unknown call_tmp[1089673] "expr temp" "maybe param" "maybe type" "temp"
    (1089676 'move' call_tmp[1089673](1089454 call chpl_field_lt call_tmp[1089663] call_tmp[1089668]))
    if call_tmp[1089673]
    {
      (1089571 'move' ret[1089546](1089570 'deref' 1))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089678] "expr temp" "maybe param" "maybe type" "temp"
    (1089681 'move' call_tmp[1089678](1089460 call ptrToArr _mt[203] _arg1[1089225]))
    unknown call_tmp[1089683] "expr temp" "maybe param" "maybe type" "temp"
    (1089686 'move' call_tmp[1089683](1089464 call ptrToArr _mt[203] _arg2[1089226]))
    unknown call_tmp[1089688] "expr temp" "maybe param" "maybe type" "temp"
    (1089691 'move' call_tmp[1089688](1089468 call chpl_field_gt call_tmp[1089678] call_tmp[1089683]))
    if call_tmp[1089688]
    {
      (1089576 'move' ret[1089546](1089575 'deref' 0))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089693] "expr temp" "maybe param" "maybe type" "temp"
    (1089696 'move' call_tmp[1089693](1089474 call ranges _mt[203] _arg1[1089225]))
    unknown call_tmp[1089698] "expr temp" "maybe param" "maybe type" "temp"
    (1089701 'move' call_tmp[1089698](1089478 call ranges _mt[203] _arg2[1089226]))
    unknown call_tmp[1089703] "expr temp" "maybe param" "maybe type" "temp"
    (1089706 'move' call_tmp[1089703](1089482 call chpl_field_lt call_tmp[1089693] call_tmp[1089698]))
    if call_tmp[1089703]
    {
      (1089581 'move' ret[1089546](1089580 'deref' 1))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089708] "expr temp" "maybe param" "maybe type" "temp"
    (1089711 'move' call_tmp[1089708](1089488 call ranges _mt[203] _arg1[1089225]))
    unknown call_tmp[1089713] "expr temp" "maybe param" "maybe type" "temp"
    (1089716 'move' call_tmp[1089713](1089492 call ranges _mt[203] _arg2[1089226]))
    unknown call_tmp[1089718] "expr temp" "maybe param" "maybe type" "temp"
    (1089721 'move' call_tmp[1089718](1089496 call chpl_field_gt call_tmp[1089708] call_tmp[1089713]))
    if call_tmp[1089718]
    {
      (1089586 'move' ret[1089546](1089585 'deref' 0))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089723] "expr temp" "maybe param" "maybe type" "temp"
    (1089726 'move' call_tmp[1089723](1089502 call isRankChange _mt[203] _arg1[1089225]))
    unknown call_tmp[1089728] "expr temp" "maybe param" "maybe type" "temp"
    (1089731 'move' call_tmp[1089728](1089506 call isRankChange _mt[203] _arg2[1089226]))
    unknown call_tmp[1089733] "expr temp" "maybe param" "maybe type" "temp"
    (1089736 'move' call_tmp[1089733](1089510 call chpl_field_lt call_tmp[1089723] call_tmp[1089728]))
    if call_tmp[1089733]
    {
      (1089591 'move' ret[1089546](1089590 'deref' 1))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    unknown call_tmp[1089738] "expr temp" "maybe param" "maybe type" "temp"
    (1089741 'move' call_tmp[1089738](1089516 call isRankChange _mt[203] _arg1[1089225]))
    unknown call_tmp[1089743] "expr temp" "maybe param" "maybe type" "temp"
    (1089746 'move' call_tmp[1089743](1089520 call isRankChange _mt[203] _arg2[1089226]))
    unknown call_tmp[1089748] "expr temp" "maybe param" "maybe type" "temp"
    (1089751 'move' call_tmp[1089748](1089524 call chpl_field_gt call_tmp[1089738] call_tmp[1089743]))
    if call_tmp[1089748]
    {
      (1089596 'move' ret[1089546](1089595 'deref' 0))
      gotoReturn _end_<=[1089544] _end_<=[1089544]
    }
    (1089601 'move' ret[1089546](1089600 'deref' 1))
    label _end_<=[1089544]
    (1089548 return ret[1089546])
  }
  where {
    unknown call_tmp[1089753] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1089756 'move' call_tmp[1089753](1089229 'typeof' _arg1[1089225]))
    unknown call_tmp[1089758] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1089761 'move' call_tmp[1089758](1089231 'typeof' _arg2[1089226]))
    unknown call_tmp[1089763] "expr temp" "maybe param" "maybe type" "temp"
    (1089766 'move' call_tmp[1089763](1089233 call == call_tmp[1089753] call_tmp[1089758]))
    unknown call_tmp[1089768] "expr temp" "maybe param" "maybe type" "temp"
    (1089771 'move' call_tmp[1089768](1089384 call chpl_fields_are_comparable[1089235] _arg1[1089225] _arg2[1089226]))
    (1089388 '&' call_tmp[1089763] call_tmp[1089768])
  }
  function chpl_fields_are_comparable[1089789](arg _arg1[1089791]:chpl__protoSlice[148800](?), arg _arg2[1089792]:chpl__protoSlice[148800](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1089851]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1089858] "expr temp" "maybe param" "maybe type" "temp"
    (1089861 'move' call_tmp[1089858](1089795 call rank _mt[203] _arg1[1089791]))
    unknown call_tmp[1089863] "expr temp" "maybe param" "maybe type" "temp"
    (1089866 'move' call_tmp[1089863](1089799 call rank _mt[203] _arg2[1089792]))
    unknown call_tmp[1089868] "expr temp" "maybe param" "maybe type" "temp"
    (1089871 'move' call_tmp[1089868](1089803 'call resolves' c">" call_tmp[1089858] call_tmp[1089863]))
    unknown call_tmp[1089873] "expr temp" "maybe param" "maybe type" "temp"
    (1089876 'move' call_tmp[1089873](1089805 call isConst _mt[203] _arg1[1089791]))
    unknown call_tmp[1089878] "expr temp" "maybe param" "maybe type" "temp"
    (1089881 'move' call_tmp[1089878](1089809 call isConst _mt[203] _arg2[1089792]))
    unknown call_tmp[1089883] "expr temp" "maybe param" "maybe type" "temp"
    (1089886 'move' call_tmp[1089883](1089813 'call resolves' c">" call_tmp[1089873] call_tmp[1089878]))
    unknown call_tmp[1089888] "expr temp" "maybe param" "maybe type" "temp"
    (1089891 'move' call_tmp[1089888](1089815 call ptrToArr _mt[203] _arg1[1089791]))
    unknown call_tmp[1089893] "expr temp" "maybe param" "maybe type" "temp"
    (1089896 'move' call_tmp[1089893](1089819 call ptrToArr _mt[203] _arg2[1089792]))
    unknown call_tmp[1089898] "expr temp" "maybe param" "maybe type" "temp"
    (1089901 'move' call_tmp[1089898](1089823 'call resolves' c">" call_tmp[1089888] call_tmp[1089893]))
    unknown call_tmp[1089903] "expr temp" "maybe param" "maybe type" "temp"
    (1089906 'move' call_tmp[1089903](1089825 call ranges _mt[203] _arg1[1089791]))
    unknown call_tmp[1089908] "expr temp" "maybe param" "maybe type" "temp"
    (1089911 'move' call_tmp[1089908](1089829 call ranges _mt[203] _arg2[1089792]))
    unknown call_tmp[1089913] "expr temp" "maybe param" "maybe type" "temp"
    (1089916 'move' call_tmp[1089913](1089833 'call resolves' c">" call_tmp[1089903] call_tmp[1089908]))
    unknown call_tmp[1089918] "expr temp" "maybe param" "maybe type" "temp"
    (1089921 'move' call_tmp[1089918](1089835 call isRankChange _mt[203] _arg1[1089791]))
    unknown call_tmp[1089923] "expr temp" "maybe param" "maybe type" "temp"
    (1089926 'move' call_tmp[1089923](1089839 call isRankChange _mt[203] _arg2[1089792]))
    unknown call_tmp[1089928] "expr temp" "maybe param" "maybe type" "temp"
    (1089931 'move' call_tmp[1089928](1089843 'call resolves' c">" call_tmp[1089918] call_tmp[1089923]))
    unknown call_tmp[1089933] "expr temp" "maybe param" "maybe type" "temp"
    (1089936 'move' call_tmp[1089933](1089845 '&' call_tmp[1089868] call_tmp[1089883] call_tmp[1089898] call_tmp[1089913] call_tmp[1089928]))
    (1089856 'move' ret[1089851](1089855 'deref' call_tmp[1089933]))
    (1089853 return ret[1089851])
  }
  function chpl__protoSlice[148800](?).>[1089773](arg _mt[1089775]:_MT[201], arg this[1089777]:chpl__protoSlice[148800](?), arg _arg1[1089779]:chpl__protoSlice[148800](?), arg _arg2[1089780]:chpl__protoSlice[148800](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1090100]:bool[19] "RVV" "temp"
    unknown call_tmp[1090157] "expr temp" "maybe param" "maybe type" "temp"
    (1090160 'move' call_tmp[1090157](1089944 call rank _mt[203] _arg1[1089779]))
    unknown call_tmp[1090162] "expr temp" "maybe param" "maybe type" "temp"
    (1090165 'move' call_tmp[1090162](1089948 call rank _mt[203] _arg2[1089780]))
    unknown call_tmp[1090167] "expr temp" "maybe param" "maybe type" "temp"
    (1090170 'move' call_tmp[1090167](1089952 call chpl_field_gt call_tmp[1090157] call_tmp[1090162]))
    if call_tmp[1090167]
    {
      (1090105 'move' ret[1090100](1090104 'deref' 1))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090172] "expr temp" "maybe param" "maybe type" "temp"
    (1090175 'move' call_tmp[1090172](1089958 call rank _mt[203] _arg1[1089779]))
    unknown call_tmp[1090177] "expr temp" "maybe param" "maybe type" "temp"
    (1090180 'move' call_tmp[1090177](1089962 call rank _mt[203] _arg2[1089780]))
    unknown call_tmp[1090182] "expr temp" "maybe param" "maybe type" "temp"
    (1090185 'move' call_tmp[1090182](1089966 call chpl_field_lt call_tmp[1090172] call_tmp[1090177]))
    if call_tmp[1090182]
    {
      (1090110 'move' ret[1090100](1090109 'deref' 0))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090187] "expr temp" "maybe param" "maybe type" "temp"
    (1090190 'move' call_tmp[1090187](1089972 call isConst _mt[203] _arg1[1089779]))
    unknown call_tmp[1090192] "expr temp" "maybe param" "maybe type" "temp"
    (1090195 'move' call_tmp[1090192](1089976 call isConst _mt[203] _arg2[1089780]))
    unknown call_tmp[1090197] "expr temp" "maybe param" "maybe type" "temp"
    (1090200 'move' call_tmp[1090197](1089980 call chpl_field_gt call_tmp[1090187] call_tmp[1090192]))
    if call_tmp[1090197]
    {
      (1090115 'move' ret[1090100](1090114 'deref' 1))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090202] "expr temp" "maybe param" "maybe type" "temp"
    (1090205 'move' call_tmp[1090202](1089986 call isConst _mt[203] _arg1[1089779]))
    unknown call_tmp[1090207] "expr temp" "maybe param" "maybe type" "temp"
    (1090210 'move' call_tmp[1090207](1089990 call isConst _mt[203] _arg2[1089780]))
    unknown call_tmp[1090212] "expr temp" "maybe param" "maybe type" "temp"
    (1090215 'move' call_tmp[1090212](1089994 call chpl_field_lt call_tmp[1090202] call_tmp[1090207]))
    if call_tmp[1090212]
    {
      (1090120 'move' ret[1090100](1090119 'deref' 0))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090217] "expr temp" "maybe param" "maybe type" "temp"
    (1090220 'move' call_tmp[1090217](1090000 call ptrToArr _mt[203] _arg1[1089779]))
    unknown call_tmp[1090222] "expr temp" "maybe param" "maybe type" "temp"
    (1090225 'move' call_tmp[1090222](1090004 call ptrToArr _mt[203] _arg2[1089780]))
    unknown call_tmp[1090227] "expr temp" "maybe param" "maybe type" "temp"
    (1090230 'move' call_tmp[1090227](1090008 call chpl_field_gt call_tmp[1090217] call_tmp[1090222]))
    if call_tmp[1090227]
    {
      (1090125 'move' ret[1090100](1090124 'deref' 1))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090232] "expr temp" "maybe param" "maybe type" "temp"
    (1090235 'move' call_tmp[1090232](1090014 call ptrToArr _mt[203] _arg1[1089779]))
    unknown call_tmp[1090237] "expr temp" "maybe param" "maybe type" "temp"
    (1090240 'move' call_tmp[1090237](1090018 call ptrToArr _mt[203] _arg2[1089780]))
    unknown call_tmp[1090242] "expr temp" "maybe param" "maybe type" "temp"
    (1090245 'move' call_tmp[1090242](1090022 call chpl_field_lt call_tmp[1090232] call_tmp[1090237]))
    if call_tmp[1090242]
    {
      (1090130 'move' ret[1090100](1090129 'deref' 0))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090247] "expr temp" "maybe param" "maybe type" "temp"
    (1090250 'move' call_tmp[1090247](1090028 call ranges _mt[203] _arg1[1089779]))
    unknown call_tmp[1090252] "expr temp" "maybe param" "maybe type" "temp"
    (1090255 'move' call_tmp[1090252](1090032 call ranges _mt[203] _arg2[1089780]))
    unknown call_tmp[1090257] "expr temp" "maybe param" "maybe type" "temp"
    (1090260 'move' call_tmp[1090257](1090036 call chpl_field_gt call_tmp[1090247] call_tmp[1090252]))
    if call_tmp[1090257]
    {
      (1090135 'move' ret[1090100](1090134 'deref' 1))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090262] "expr temp" "maybe param" "maybe type" "temp"
    (1090265 'move' call_tmp[1090262](1090042 call ranges _mt[203] _arg1[1089779]))
    unknown call_tmp[1090267] "expr temp" "maybe param" "maybe type" "temp"
    (1090270 'move' call_tmp[1090267](1090046 call ranges _mt[203] _arg2[1089780]))
    unknown call_tmp[1090272] "expr temp" "maybe param" "maybe type" "temp"
    (1090275 'move' call_tmp[1090272](1090050 call chpl_field_lt call_tmp[1090262] call_tmp[1090267]))
    if call_tmp[1090272]
    {
      (1090140 'move' ret[1090100](1090139 'deref' 0))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090277] "expr temp" "maybe param" "maybe type" "temp"
    (1090280 'move' call_tmp[1090277](1090056 call isRankChange _mt[203] _arg1[1089779]))
    unknown call_tmp[1090282] "expr temp" "maybe param" "maybe type" "temp"
    (1090285 'move' call_tmp[1090282](1090060 call isRankChange _mt[203] _arg2[1089780]))
    unknown call_tmp[1090287] "expr temp" "maybe param" "maybe type" "temp"
    (1090290 'move' call_tmp[1090287](1090064 call chpl_field_gt call_tmp[1090277] call_tmp[1090282]))
    if call_tmp[1090287]
    {
      (1090145 'move' ret[1090100](1090144 'deref' 1))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    unknown call_tmp[1090292] "expr temp" "maybe param" "maybe type" "temp"
    (1090295 'move' call_tmp[1090292](1090070 call isRankChange _mt[203] _arg1[1089779]))
    unknown call_tmp[1090297] "expr temp" "maybe param" "maybe type" "temp"
    (1090300 'move' call_tmp[1090297](1090074 call isRankChange _mt[203] _arg2[1089780]))
    unknown call_tmp[1090302] "expr temp" "maybe param" "maybe type" "temp"
    (1090305 'move' call_tmp[1090302](1090078 call chpl_field_lt call_tmp[1090292] call_tmp[1090297]))
    if call_tmp[1090302]
    {
      (1090150 'move' ret[1090100](1090149 'deref' 0))
      gotoReturn _end_>[1090098] _end_>[1090098]
    }
    (1090155 'move' ret[1090100](1090154 'deref' 0))
    label _end_>[1090098]
    (1090102 return ret[1090100])
  }
  where {
    unknown call_tmp[1090307] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1090310 'move' call_tmp[1090307](1089783 'typeof' _arg1[1089779]))
    unknown call_tmp[1090312] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1090315 'move' call_tmp[1090312](1089785 'typeof' _arg2[1089780]))
    unknown call_tmp[1090317] "expr temp" "maybe param" "maybe type" "temp"
    (1090320 'move' call_tmp[1090317](1089787 call == call_tmp[1090307] call_tmp[1090312]))
    unknown call_tmp[1090322] "expr temp" "maybe param" "maybe type" "temp"
    (1090325 'move' call_tmp[1090322](1089938 call chpl_fields_are_comparable[1089789] _arg1[1089779] _arg2[1089780]))
    (1089942 '&' call_tmp[1090317] call_tmp[1090322])
  }
  function chpl_fields_are_comparable[1090343](arg _arg1[1090345]:chpl__protoSlice[148800](?), arg _arg2[1090346]:chpl__protoSlice[148800](?)) param : bool[19] "compiler generated" "last resort" "param"
  {
    val ret[1090405]:bool[19] "RVV" "param" "temp"
    unknown call_tmp[1090412] "expr temp" "maybe param" "maybe type" "temp"
    (1090415 'move' call_tmp[1090412](1090349 call rank _mt[203] _arg1[1090345]))
    unknown call_tmp[1090417] "expr temp" "maybe param" "maybe type" "temp"
    (1090420 'move' call_tmp[1090417](1090353 call rank _mt[203] _arg2[1090346]))
    unknown call_tmp[1090422] "expr temp" "maybe param" "maybe type" "temp"
    (1090425 'move' call_tmp[1090422](1090357 'call resolves' c">=" call_tmp[1090412] call_tmp[1090417]))
    unknown call_tmp[1090427] "expr temp" "maybe param" "maybe type" "temp"
    (1090430 'move' call_tmp[1090427](1090359 call isConst _mt[203] _arg1[1090345]))
    unknown call_tmp[1090432] "expr temp" "maybe param" "maybe type" "temp"
    (1090435 'move' call_tmp[1090432](1090363 call isConst _mt[203] _arg2[1090346]))
    unknown call_tmp[1090437] "expr temp" "maybe param" "maybe type" "temp"
    (1090440 'move' call_tmp[1090437](1090367 'call resolves' c">=" call_tmp[1090427] call_tmp[1090432]))
    unknown call_tmp[1090442] "expr temp" "maybe param" "maybe type" "temp"
    (1090445 'move' call_tmp[1090442](1090369 call ptrToArr _mt[203] _arg1[1090345]))
    unknown call_tmp[1090447] "expr temp" "maybe param" "maybe type" "temp"
    (1090450 'move' call_tmp[1090447](1090373 call ptrToArr _mt[203] _arg2[1090346]))
    unknown call_tmp[1090452] "expr temp" "maybe param" "maybe type" "temp"
    (1090455 'move' call_tmp[1090452](1090377 'call resolves' c">=" call_tmp[1090442] call_tmp[1090447]))
    unknown call_tmp[1090457] "expr temp" "maybe param" "maybe type" "temp"
    (1090460 'move' call_tmp[1090457](1090379 call ranges _mt[203] _arg1[1090345]))
    unknown call_tmp[1090462] "expr temp" "maybe param" "maybe type" "temp"
    (1090465 'move' call_tmp[1090462](1090383 call ranges _mt[203] _arg2[1090346]))
    unknown call_tmp[1090467] "expr temp" "maybe param" "maybe type" "temp"
    (1090470 'move' call_tmp[1090467](1090387 'call resolves' c">=" call_tmp[1090457] call_tmp[1090462]))
    unknown call_tmp[1090472] "expr temp" "maybe param" "maybe type" "temp"
    (1090475 'move' call_tmp[1090472](1090389 call isRankChange _mt[203] _arg1[1090345]))
    unknown call_tmp[1090477] "expr temp" "maybe param" "maybe type" "temp"
    (1090480 'move' call_tmp[1090477](1090393 call isRankChange _mt[203] _arg2[1090346]))
    unknown call_tmp[1090482] "expr temp" "maybe param" "maybe type" "temp"
    (1090485 'move' call_tmp[1090482](1090397 'call resolves' c">=" call_tmp[1090472] call_tmp[1090477]))
    unknown call_tmp[1090487] "expr temp" "maybe param" "maybe type" "temp"
    (1090490 'move' call_tmp[1090487](1090399 '&' call_tmp[1090422] call_tmp[1090437] call_tmp[1090452] call_tmp[1090467] call_tmp[1090482]))
    (1090410 'move' ret[1090405](1090409 'deref' call_tmp[1090487]))
    (1090407 return ret[1090405])
  }
  function chpl__protoSlice[148800](?).>=[1090327](arg _mt[1090329]:_MT[201], arg this[1090331]:chpl__protoSlice[148800](?), arg _arg1[1090333]:chpl__protoSlice[148800](?), arg _arg2[1090334]:chpl__protoSlice[148800](?)) : bool[19] "compiler generated" "last resort" "method" "operator"
  {
    val ret[1090654]:bool[19] "RVV" "temp"
    unknown call_tmp[1090711] "expr temp" "maybe param" "maybe type" "temp"
    (1090714 'move' call_tmp[1090711](1090498 call rank _mt[203] _arg1[1090333]))
    unknown call_tmp[1090716] "expr temp" "maybe param" "maybe type" "temp"
    (1090719 'move' call_tmp[1090716](1090502 call rank _mt[203] _arg2[1090334]))
    unknown call_tmp[1090721] "expr temp" "maybe param" "maybe type" "temp"
    (1090724 'move' call_tmp[1090721](1090506 call chpl_field_gt call_tmp[1090711] call_tmp[1090716]))
    if call_tmp[1090721]
    {
      (1090659 'move' ret[1090654](1090658 'deref' 1))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090726] "expr temp" "maybe param" "maybe type" "temp"
    (1090729 'move' call_tmp[1090726](1090512 call rank _mt[203] _arg1[1090333]))
    unknown call_tmp[1090731] "expr temp" "maybe param" "maybe type" "temp"
    (1090734 'move' call_tmp[1090731](1090516 call rank _mt[203] _arg2[1090334]))
    unknown call_tmp[1090736] "expr temp" "maybe param" "maybe type" "temp"
    (1090739 'move' call_tmp[1090736](1090520 call chpl_field_lt call_tmp[1090726] call_tmp[1090731]))
    if call_tmp[1090736]
    {
      (1090664 'move' ret[1090654](1090663 'deref' 0))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090741] "expr temp" "maybe param" "maybe type" "temp"
    (1090744 'move' call_tmp[1090741](1090526 call isConst _mt[203] _arg1[1090333]))
    unknown call_tmp[1090746] "expr temp" "maybe param" "maybe type" "temp"
    (1090749 'move' call_tmp[1090746](1090530 call isConst _mt[203] _arg2[1090334]))
    unknown call_tmp[1090751] "expr temp" "maybe param" "maybe type" "temp"
    (1090754 'move' call_tmp[1090751](1090534 call chpl_field_gt call_tmp[1090741] call_tmp[1090746]))
    if call_tmp[1090751]
    {
      (1090669 'move' ret[1090654](1090668 'deref' 1))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090756] "expr temp" "maybe param" "maybe type" "temp"
    (1090759 'move' call_tmp[1090756](1090540 call isConst _mt[203] _arg1[1090333]))
    unknown call_tmp[1090761] "expr temp" "maybe param" "maybe type" "temp"
    (1090764 'move' call_tmp[1090761](1090544 call isConst _mt[203] _arg2[1090334]))
    unknown call_tmp[1090766] "expr temp" "maybe param" "maybe type" "temp"
    (1090769 'move' call_tmp[1090766](1090548 call chpl_field_lt call_tmp[1090756] call_tmp[1090761]))
    if call_tmp[1090766]
    {
      (1090674 'move' ret[1090654](1090673 'deref' 0))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090771] "expr temp" "maybe param" "maybe type" "temp"
    (1090774 'move' call_tmp[1090771](1090554 call ptrToArr _mt[203] _arg1[1090333]))
    unknown call_tmp[1090776] "expr temp" "maybe param" "maybe type" "temp"
    (1090779 'move' call_tmp[1090776](1090558 call ptrToArr _mt[203] _arg2[1090334]))
    unknown call_tmp[1090781] "expr temp" "maybe param" "maybe type" "temp"
    (1090784 'move' call_tmp[1090781](1090562 call chpl_field_gt call_tmp[1090771] call_tmp[1090776]))
    if call_tmp[1090781]
    {
      (1090679 'move' ret[1090654](1090678 'deref' 1))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090786] "expr temp" "maybe param" "maybe type" "temp"
    (1090789 'move' call_tmp[1090786](1090568 call ptrToArr _mt[203] _arg1[1090333]))
    unknown call_tmp[1090791] "expr temp" "maybe param" "maybe type" "temp"
    (1090794 'move' call_tmp[1090791](1090572 call ptrToArr _mt[203] _arg2[1090334]))
    unknown call_tmp[1090796] "expr temp" "maybe param" "maybe type" "temp"
    (1090799 'move' call_tmp[1090796](1090576 call chpl_field_lt call_tmp[1090786] call_tmp[1090791]))
    if call_tmp[1090796]
    {
      (1090684 'move' ret[1090654](1090683 'deref' 0))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090801] "expr temp" "maybe param" "maybe type" "temp"
    (1090804 'move' call_tmp[1090801](1090582 call ranges _mt[203] _arg1[1090333]))
    unknown call_tmp[1090806] "expr temp" "maybe param" "maybe type" "temp"
    (1090809 'move' call_tmp[1090806](1090586 call ranges _mt[203] _arg2[1090334]))
    unknown call_tmp[1090811] "expr temp" "maybe param" "maybe type" "temp"
    (1090814 'move' call_tmp[1090811](1090590 call chpl_field_gt call_tmp[1090801] call_tmp[1090806]))
    if call_tmp[1090811]
    {
      (1090689 'move' ret[1090654](1090688 'deref' 1))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090816] "expr temp" "maybe param" "maybe type" "temp"
    (1090819 'move' call_tmp[1090816](1090596 call ranges _mt[203] _arg1[1090333]))
    unknown call_tmp[1090821] "expr temp" "maybe param" "maybe type" "temp"
    (1090824 'move' call_tmp[1090821](1090600 call ranges _mt[203] _arg2[1090334]))
    unknown call_tmp[1090826] "expr temp" "maybe param" "maybe type" "temp"
    (1090829 'move' call_tmp[1090826](1090604 call chpl_field_lt call_tmp[1090816] call_tmp[1090821]))
    if call_tmp[1090826]
    {
      (1090694 'move' ret[1090654](1090693 'deref' 0))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090831] "expr temp" "maybe param" "maybe type" "temp"
    (1090834 'move' call_tmp[1090831](1090610 call isRankChange _mt[203] _arg1[1090333]))
    unknown call_tmp[1090836] "expr temp" "maybe param" "maybe type" "temp"
    (1090839 'move' call_tmp[1090836](1090614 call isRankChange _mt[203] _arg2[1090334]))
    unknown call_tmp[1090841] "expr temp" "maybe param" "maybe type" "temp"
    (1090844 'move' call_tmp[1090841](1090618 call chpl_field_gt call_tmp[1090831] call_tmp[1090836]))
    if call_tmp[1090841]
    {
      (1090699 'move' ret[1090654](1090698 'deref' 1))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    unknown call_tmp[1090846] "expr temp" "maybe param" "maybe type" "temp"
    (1090849 'move' call_tmp[1090846](1090624 call isRankChange _mt[203] _arg1[1090333]))
    unknown call_tmp[1090851] "expr temp" "maybe param" "maybe type" "temp"
    (1090854 'move' call_tmp[1090851](1090628 call isRankChange _mt[203] _arg2[1090334]))
    unknown call_tmp[1090856] "expr temp" "maybe param" "maybe type" "temp"
    (1090859 'move' call_tmp[1090856](1090632 call chpl_field_lt call_tmp[1090846] call_tmp[1090851]))
    if call_tmp[1090856]
    {
      (1090704 'move' ret[1090654](1090703 'deref' 0))
      gotoReturn _end_>=[1090652] _end_>=[1090652]
    }
    (1090709 'move' ret[1090654](1090708 'deref' 1))
    label _end_>=[1090652]
    (1090656 return ret[1090654])
  }
  where {
    unknown call_tmp[1090861] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1090864 'move' call_tmp[1090861](1090337 'typeof' _arg1[1090333]))
    unknown call_tmp[1090866] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (1090869 'move' call_tmp[1090866](1090339 'typeof' _arg2[1090334]))
    unknown call_tmp[1090871] "expr temp" "maybe param" "maybe type" "temp"
    (1090874 'move' call_tmp[1090871](1090341 call == call_tmp[1090861] call_tmp[1090866]))
    unknown call_tmp[1090876] "expr temp" "maybe param" "maybe type" "temp"
    (1090879 'move' call_tmp[1090876](1090492 call chpl_fields_are_comparable[1090343] _arg1[1090333] _arg2[1090334]))
    (1090496 '&' call_tmp[1090871] call_tmp[1090876])
  }
  type chpl__protoSlice[148800](?) unknown rank[147626] "param" unknown isConst[147630] "param" unknown ptrToArr[147634] unknown slicingExprType[147638] "type variable" unknown ranges[147641] unknown isRankChange[147645] "param" 0
  function ==[148802](const  ref arg lhs[148807]:chpl__protoSlice[148800](?), const  ref arg rhs[148813]:chpl__protoSlice[148800](?)) : _unknown[42] "operator"
  {
    unknown ret[611219] "RVV" "temp"
    unknown tmp[488799] "maybe param" "temp"
    unknown tmp[488820] "maybe param" "temp"
    unknown tmp[488841] "maybe param" "temp"
    unknown call_tmp[819716] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (819719 'move' call_tmp[819716](148827 'typeof' lhs[148807]))
    unknown call_tmp[819721] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (819724 'move' call_tmp[819721](148829 'typeof' rhs[148813]))
    (488852 'move' tmp[488841](148824 call == call_tmp[819716] call_tmp[819721]))
    unknown call_tmp[819726] "expr temp" "maybe param" "maybe type" "temp"
    (819729 'move' call_tmp[819726](488854 call _cond_invalid tmp[488841]))
    if call_tmp[819726]
    {
      (488857 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681205] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681206] "maybe param" "temp"
    unknown call_tmp[819731] "expr temp" "maybe param" "maybe type" "temp"
    (819734 'move' call_tmp[819731](488842 call isTrue tmp[488841]))
    (681211 'move' tmp[681206](681209 call _cond_test call_tmp[819731]))
    if tmp[681206]
    {
      unknown tmp[681213] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[819738] "expr temp" "maybe param" "maybe type" "temp"
      (819741 'move' call_tmp[819738](148833 call rank _mt[203] lhs[148807]))
      unknown call_tmp[819745] "expr temp" "maybe param" "maybe type" "temp"
      (819748 'move' call_tmp[819745](148837 call rank _mt[203] rhs[148813]))
      unknown call_tmp[819750] "expr temp" "maybe param" "maybe type" "temp"
      (819753 'move' call_tmp[819750](148830 call == call_tmp[819738] call_tmp[819745]))
      (681215 'move' tmp[681213](488845 call isTrue call_tmp[819750]))
      (681220 'move' tmp[681205](681217 '_paramFoldLogical' tmp[681206] tmp[681213]))
    }
    {
      (681225 'move' tmp[681205](681222 '_paramFoldLogical' tmp[681206] 0))
    }
    (488831 'move' tmp[488820] tmp[681205])
    unknown call_tmp[819755] "expr temp" "maybe param" "maybe type" "temp"
    (819758 'move' call_tmp[819755](488833 call _cond_invalid tmp[488820]))
    if call_tmp[819755]
    {
      (488836 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681232] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681233] "maybe param" "temp"
    unknown call_tmp[819760] "expr temp" "maybe param" "maybe type" "temp"
    (819763 'move' call_tmp[819760](488821 call isTrue tmp[488820]))
    (681238 'move' tmp[681233](681236 call _cond_test call_tmp[819760]))
    if tmp[681233]
    {
      unknown tmp[681240] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[819767] "expr temp" "maybe param" "maybe type" "temp"
      (819770 'move' call_tmp[819767](148843 call ptrToArr _mt[203] lhs[148807]))
      unknown call_tmp[819774] "expr temp" "maybe param" "maybe type" "temp"
      (819777 'move' call_tmp[819774](148847 call ptrToArr _mt[203] rhs[148813]))
      unknown call_tmp[819779] "expr temp" "maybe param" "maybe type" "temp"
      (819782 'move' call_tmp[819779](148840 call == call_tmp[819767] call_tmp[819774]))
      (681242 'move' tmp[681240](488824 call isTrue call_tmp[819779]))
      (681247 'move' tmp[681232](681244 '_paramFoldLogical' tmp[681233] tmp[681240]))
    }
    {
      (681252 'move' tmp[681232](681249 '_paramFoldLogical' tmp[681233] 0))
    }
    (488810 'move' tmp[488799] tmp[681232])
    unknown call_tmp[819784] "expr temp" "maybe param" "maybe type" "temp"
    (819787 'move' call_tmp[819784](488812 call _cond_invalid tmp[488799]))
    if call_tmp[819784]
    {
      (488815 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681259] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681260] "maybe param" "temp"
    unknown call_tmp[819789] "expr temp" "maybe param" "maybe type" "temp"
    (819792 'move' call_tmp[819789](488800 call isTrue tmp[488799]))
    (681265 'move' tmp[681260](681263 call _cond_test call_tmp[819789]))
    if tmp[681260]
    {
      unknown tmp[681267] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[819796] "expr temp" "maybe param" "maybe type" "temp"
      (819799 'move' call_tmp[819796](148853 call ranges _mt[203] lhs[148807]))
      unknown call_tmp[819803] "expr temp" "maybe param" "maybe type" "temp"
      (819806 'move' call_tmp[819803](148857 call ranges _mt[203] rhs[148813]))
      unknown call_tmp[819808] "expr temp" "maybe param" "maybe type" "temp"
      (819811 'move' call_tmp[819808](148850 call == call_tmp[819796] call_tmp[819803]))
      (681269 'move' tmp[681267](488803 call isTrue call_tmp[819808]))
      (681274 'move' tmp[681259](681271 '_paramFoldLogical' tmp[681260] tmp[681267]))
    }
    {
      (681279 'move' tmp[681259](681276 '_paramFoldLogical' tmp[681260] 0))
    }
    (611224 'move' ret[611219](611223 'deref' tmp[681259]))
    (611221 return ret[611219])
  }
  function :[148862](ref arg a[148865]:chpl__protoSlice[148800](?), arg b[148869]:chpl__protoSlice[148800](?)) : _unknown[42] "inline" "operator" "no return value for void"
  {
    (148874 call compilerError "Should never cast proto slices")
    (611226 return _void[46])
  }
  function isProtoSlice[148880](arg a[148882]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[611230] "RVV" "param" "temp"
    unknown call_tmp[819813] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (819816 'move' call_tmp[819813](148889 'typeof' a[148882]))
    unknown call_tmp[819818] "expr temp" "maybe param" "maybe type" "temp"
    (819821 'move' call_tmp[819818](394784 'is_subtype' chpl__protoSlice[148800](?) call_tmp[819813]))
    (611235 'move' ret[611230](611234 'deref' call_tmp[819818]))
    (611232 return ret[611230])
  }
  function chpl__createProtoSliceArgCheck[148893](arg Arr[148895]:_any[141](?), arg slicingExprs[148897]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[611239] "RVV" "param" "temp"
    unknown call_tmp[819823] "expr temp" "maybe param" "maybe type" "temp"
    (819826 'move' call_tmp[819823](148904 call isTuple slicingExprs[148897]))
    (148902 call compilerAssert call_tmp[819823])
    (555003 'end of statement')
    unknown tmp[488862] "maybe param" "temp"
    (488873 'move' tmp[488862](148910 call chpl__ave_baseTypeSupports Arr[148895]))
    unknown call_tmp[819828] "expr temp" "maybe param" "maybe type" "temp"
    (819831 'move' call_tmp[819828](488875 call _cond_invalid tmp[488862]))
    if call_tmp[819828]
    {
      (488878 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681367] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681368] "maybe param" "temp"
    unknown call_tmp[819833] "expr temp" "maybe param" "maybe type" "temp"
    (819836 'move' call_tmp[819833](488863 call isTrue tmp[488862]))
    (681373 'move' tmp[681368](681371 call _cond_test call_tmp[819833]))
    if tmp[681368]
    {
      unknown tmp[488883] "maybe param" "temp"
      unknown tmp[488904] "maybe param" "temp"
      (488915 'move' tmp[488904](148917 call chpl__isTupleOfRanges slicingExprs[148897]))
      unknown call_tmp[819838] "expr temp" "maybe param" "maybe type" "temp"
      (819841 'move' call_tmp[819838](488917 call _cond_invalid tmp[488904]))
      if call_tmp[819838]
      {
        (488920 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[681313] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[681314] "maybe param" "temp"
      unknown call_tmp[819843] "expr temp" "maybe param" "maybe type" "temp"
      (819846 'move' call_tmp[819843](488905 call isTrue tmp[488904]))
      (681319 'move' tmp[681314](681317 call _cond_test call_tmp[819843]))
      if tmp[681314]
      {
        (681324 'move' tmp[681313](681321 '_paramFoldLogical' tmp[681314] 1))
      }
      {
        unknown tmp[488925] "maybe param" "temp"
        unknown call_tmp[819850] "expr temp" "maybe param" "maybe type" "temp"
        (819853 'move' call_tmp[819850](148924 call size _mt[203] slicingExprs[148897]))
        (488936 'move' tmp[488925](148921 call == call_tmp[819850] 1))
        unknown call_tmp[819855] "expr temp" "maybe param" "maybe type" "temp"
        (819858 'move' call_tmp[819855](488938 call _cond_invalid tmp[488925]))
        if call_tmp[819855]
        {
          (488941 call compilerError "cannot promote short-circuiting && operator")
        }
        unknown tmp[681286] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[681287] "maybe param" "temp"
        unknown call_tmp[819860] "expr temp" "maybe param" "maybe type" "temp"
        (819863 'move' call_tmp[819860](488926 call isTrue tmp[488925]))
        (681292 'move' tmp[681287](681290 call _cond_test call_tmp[819860]))
        if tmp[681287]
        {
          unknown tmp[681294] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[819865] "expr temp" "maybe param" "maybe type" "temp"
          (819868 'move' call_tmp[819865](148931 call slicingExprs[148897] 0))
          unknown call_tmp[819870] "expr temp" "maybe param" "maybe type" "temp"
          (819873 'move' call_tmp[819870](148929 call isDomain call_tmp[819865]))
          (681296 'move' tmp[681294](488929 call isTrue call_tmp[819870]))
          (681301 'move' tmp[681286](681298 '_paramFoldLogical' tmp[681287] tmp[681294]))
        }
        {
          (681306 'move' tmp[681286](681303 '_paramFoldLogical' tmp[681287] 0))
        }
        unknown tmp[681326] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (681328 'move' tmp[681326](488909 call isTrue tmp[681286]))
        (681333 'move' tmp[681313](681330 '_paramFoldLogical' tmp[681314] tmp[681326]))
      }
      (488894 'move' tmp[488883] tmp[681313])
      unknown call_tmp[819875] "expr temp" "maybe param" "maybe type" "temp"
      (819878 'move' call_tmp[819875](488896 call _cond_invalid tmp[488883]))
      if call_tmp[819875]
      {
        (488899 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[681340] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[681341] "maybe param" "temp"
      unknown call_tmp[819880] "expr temp" "maybe param" "maybe type" "temp"
      (819883 'move' call_tmp[819880](488884 call isTrue tmp[488883]))
      (681346 'move' tmp[681341](681344 call _cond_test call_tmp[819880]))
      if tmp[681341]
      {
        (681351 'move' tmp[681340](681348 '_paramFoldLogical' tmp[681341] 1))
      }
      {
        unknown tmp[681353] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[819887] "expr temp" "maybe param" "maybe type" "temp"
        (819890 'move' call_tmp[819887](148937 call idxType _mt[203] Arr[148895]))
        unknown call_tmp[819892] "expr temp" "maybe param" "maybe type" "temp"
        (819895 'move' call_tmp[819892](148934 call _validRankChangeArgs slicingExprs[148897] call_tmp[819887]))
        (681355 'move' tmp[681353](488888 call isTrue call_tmp[819892]))
        (681360 'move' tmp[681340](681357 '_paramFoldLogical' tmp[681341] tmp[681353]))
      }
      unknown tmp[681375] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (681377 'move' tmp[681375](488866 call isTrue tmp[681340]))
      (681382 'move' tmp[681367](681379 '_paramFoldLogical' tmp[681368] tmp[681375]))
    }
    {
      (681387 'move' tmp[681367](681384 '_paramFoldLogical' tmp[681368] 0))
    }
    (611245 'move' ret[611239](611244 'coerce' tmp[681367] bool[19]))
    (611241 return ret[611239])
  }
  { scopeless type
    bool[19]
  }
  function chpl__ave_baseTypeSupports[148943](arg base[148945]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[611249] "RVV" "param" "temp"
    unknown tmp[488946] "maybe param" "temp"
    unknown tmp[488967] "maybe param" "temp"
    (488978 'move' tmp[488967](148958 call isArray base[148945]))
    unknown call_tmp[819897] "expr temp" "maybe param" "maybe type" "temp"
    (819900 'move' call_tmp[819897](488980 call _cond_invalid tmp[488967]))
    if call_tmp[819897]
    {
      (488983 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681394] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681395] "maybe param" "temp"
    unknown call_tmp[819902] "expr temp" "maybe param" "maybe type" "temp"
    (819905 'move' call_tmp[819902](488968 call isTrue tmp[488967]))
    (681400 'move' tmp[681395](681398 call _cond_test call_tmp[819902]))
    if tmp[681395]
    {
      { scopeless type
        unknown call_type_tmp[577767] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[819909] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (819912 'move' call_tmp[819909](148963 call _instance _mt[203] base[148945]))
        (577771 'move' call_type_tmp[577767](148966 'typeof' call_tmp[819909]))
      }
      unknown tmp[681402] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[819914] "expr temp" "maybe param" "maybe type" "temp"
      (819917 'move' call_tmp[819914](394785 'is_subtype' DefaultRectangularArr[433493](?) call_type_tmp[577767]))
      (681404 'move' tmp[681402](488971 call isTrue call_tmp[819914]))
      (681409 'move' tmp[681394](681406 '_paramFoldLogical' tmp[681395] tmp[681402]))
    }
    {
      (681414 'move' tmp[681394](681411 '_paramFoldLogical' tmp[681395] 0))
    }
    (488957 'move' tmp[488946] tmp[681394])
    unknown call_tmp[819919] "expr temp" "maybe param" "maybe type" "temp"
    (819922 'move' call_tmp[819919](488959 call _cond_invalid tmp[488946]))
    if call_tmp[819919]
    {
      (488962 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[681421] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681422] "maybe param" "temp"
    unknown call_tmp[819924] "expr temp" "maybe param" "maybe type" "temp"
    (819927 'move' call_tmp[819924](488947 call isTrue tmp[488946]))
    (681427 'move' tmp[681422](681425 call _cond_test call_tmp[819924]))
    if tmp[681422]
    {
      unknown tmp[681429] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[819929] "expr temp" "maybe param" "maybe type" "temp"
      (819932 'move' call_tmp[819929](148972 call canResolve module=[222] Reflection[1804] "c_addrOf" base[148945]))
      (681431 'move' tmp[681429](488950 call isTrue call_tmp[819929]))
      (681436 'move' tmp[681421](681433 '_paramFoldLogical' tmp[681422] tmp[681429]))
    }
    {
      (681441 'move' tmp[681421](681438 '_paramFoldLogical' tmp[681422] 0))
    }
    (611255 'move' ret[611249](611254 'coerce' tmp[681421] bool[19]))
    (611251 return ret[611249])
    (396718 'used modules list'(148951 'import' Reflection[1804]))
    (403710 'referenced modules list' Reflection[1804])
  }
  { scopeless type
    bool[19]
  }
  function chpl__ave_idxExprsSupport[148980](arg idxType[148982]:_any[141](?), arg idxExprs[148985]:_any[141](?) ...) param : _unknown[42] "private"
  {
    unknown ret[611259] "RVV" "param" "temp"
    {
      unknown tid[148990] "dead at end of block" "index var" "insert auto destroy"
      (646244 'init var' tid[148990] 0)
      (555009 'end of statement')
      unknown tmp[149052] "maybe param" "temp"
      unknown call_tmp[819936] "expr temp" "maybe param" "maybe type" "temp"
      (819939 'move' call_tmp[819936](148994 call size _mt[203] idxExprs[148985]))
      unknown call_tmp[819941] "expr temp" "maybe param" "maybe type" "temp"
      (819944 'move' call_tmp[819941](148997 call chpl__nudgeHighBound call_tmp[819936]))
      (149064 'move' tmp[149052](149062 call chpl_compute_low_param_loop_bound 0 call_tmp[819941]))
      unknown tmp[149053] "maybe param" "temp"
      unknown call_tmp[819948] "expr temp" "maybe param" "maybe type" "temp"
      (819951 'move' call_tmp[819948](149071 call size _mt[203] idxExprs[148985]))
      unknown call_tmp[819953] "expr temp" "maybe param" "maybe type" "temp"
      (819956 'move' call_tmp[819953](149069 call chpl__nudgeHighBound call_tmp[819948]))
      (149076 'move' tmp[149053](149074 call chpl_compute_high_param_loop_bound 0 call_tmp[819953]))
      unknown tmp[149054] "maybe param" "temp"
      (149079 'move' tmp[149054] 1)
      ParamForLoop[149081]
      { tid[148990] tmp[149052] tmp[149053] tmp[149054]
        {
          unknown call_tmp[819958] "expr temp" "maybe param" "maybe type" "temp"
          (819961 'move' call_tmp[819958](149045 call idxExprs[148985] tid[148990]))
          unknown call_tmp[819963] "expr temp" "maybe param" "maybe type" "temp"
          (819966 'move' call_tmp[819963](149043 call isRange call_tmp[819958]))
          unknown call_tmp[819968] "expr temp" "maybe param" "maybe type" "temp"
          (819971 'move' call_tmp[819968](149040 call ! call_tmp[819963]))
          unknown call_tmp[819973] "expr temp" "maybe param" "maybe type" "temp"
          (819976 'move' call_tmp[819973](149047 call _cond_test call_tmp[819968]))
          if call_tmp[819973]
          {
            (611265 'move' ret[611259](611264 'coerce' 0 bool[19]))
            gotoReturn _end_chpl__ave_idxExprsSupport[611257] _end_chpl__ave_idxExprsSupport[611257]
          }
          {
            unknown tmp[488988] "maybe param" "temp"
            unknown call_tmp[819978] "expr temp" "maybe param" "maybe type" "temp"
            (819981 'move' call_tmp[819978](149015 call idxExprs[148985] tid[148990]))
            unknown call_tmp[819985] "expr temp" "maybe param" "maybe type" "temp"
            (819988 'move' call_tmp[819985](149017 call strides _mt[203] call_tmp[819978]))
            (488999 'move' tmp[488988](149012 call == call_tmp[819985] positive[107131]))
            unknown call_tmp[819990] "expr temp" "maybe param" "maybe type" "temp"
            (819993 'move' call_tmp[819990](489001 call _cond_invalid tmp[488988]))
            if call_tmp[819990]
            {
              (489004 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[681448] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[681449] "maybe param" "temp"
            unknown call_tmp[819995] "expr temp" "maybe param" "maybe type" "temp"
            (819998 'move' call_tmp[819995](488989 call isTrue tmp[488988]))
            (681454 'move' tmp[681449](681452 call _cond_test call_tmp[819995]))
            if tmp[681449]
            {
              (681459 'move' tmp[681448](681456 '_paramFoldLogical' tmp[681449] 1))
            }
            {
              unknown tmp[681461] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[820000] "expr temp" "maybe param" "maybe type" "temp"
              (820003 'move' call_tmp[820000](149027 call idxExprs[148985] tid[148990]))
              unknown call_tmp[820007] "expr temp" "maybe param" "maybe type" "temp"
              (820010 'move' call_tmp[820007](149029 call strides _mt[203] call_tmp[820000]))
              unknown call_tmp[820012] "expr temp" "maybe param" "maybe type" "temp"
              (820015 'move' call_tmp[820012](149024 call == call_tmp[820007] one[107127]))
              (681463 'move' tmp[681461](488993 call isTrue call_tmp[820012]))
              (681468 'move' tmp[681448](681465 '_paramFoldLogical' tmp[681449] tmp[681461]))
            }
            unknown call_tmp[820017] "expr temp" "maybe param" "maybe type" "temp"
            (820020 'move' call_tmp[820017](149008 call ! tmp[681448]))
            unknown call_tmp[820022] "expr temp" "maybe param" "maybe type" "temp"
            (820025 'move' call_tmp[820022](149036 call _cond_test call_tmp[820017]))
            if call_tmp[820022]
            {
              (611271 'move' ret[611259](611270 'coerce' 0 bool[19]))
              gotoReturn _end_chpl__ave_idxExprsSupport[611257] _end_chpl__ave_idxExprsSupport[611257]
            }
          }
        }
      }
      label _unused_continueLabel[149056]
      label _breakLabel[149055]
    }
    (611277 'move' ret[611259](611276 'coerce' 1 bool[19]))
    label _end_chpl__ave_idxExprsSupport[611257]
    (611261 return ret[611259])
  }
  { scopeless type
    bool[19]
  }
  function chpl__ave_idxExprsSupport[149095](arg idxType[149097]:_any[141](?), arg idxExprs[149100]:_domain[225034](?)) param : _unknown[42] "private"
  {
    unknown ret[611281] "RVV" "param" "temp"
    unknown tmp[489009] "maybe param" "temp"
    unknown call_tmp[820029] "expr temp" "maybe param" "maybe type" "temp"
    (820032 'move' call_tmp[820029](149115 call strides _mt[203] idxExprs[149100]))
    (489020 'move' tmp[489009](149112 call == call_tmp[820029] positive[107131]))
    unknown call_tmp[820034] "expr temp" "maybe param" "maybe type" "temp"
    (820037 'move' call_tmp[820034](489022 call _cond_invalid tmp[489009]))
    if call_tmp[820034]
    {
      (489025 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[681475] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[681476] "maybe param" "temp"
    unknown call_tmp[820039] "expr temp" "maybe param" "maybe type" "temp"
    (820042 'move' call_tmp[820039](489010 call isTrue tmp[489009]))
    (681481 'move' tmp[681476](681479 call _cond_test call_tmp[820039]))
    if tmp[681476]
    {
      (681486 'move' tmp[681475](681483 '_paramFoldLogical' tmp[681476] 1))
    }
    {
      unknown tmp[681488] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[820046] "expr temp" "maybe param" "maybe type" "temp"
      (820049 'move' call_tmp[820046](149125 call strides _mt[203] idxExprs[149100]))
      unknown call_tmp[820051] "expr temp" "maybe param" "maybe type" "temp"
      (820054 'move' call_tmp[820051](149122 call == call_tmp[820046] one[107127]))
      (681490 'move' tmp[681488](489014 call isTrue call_tmp[820051]))
      (681495 'move' tmp[681475](681492 '_paramFoldLogical' tmp[681476] tmp[681488]))
    }
    unknown call_tmp[820056] "expr temp" "maybe param" "maybe type" "temp"
    (820059 'move' call_tmp[820056](149108 call ! tmp[681475]))
    unknown call_tmp[820061] "expr temp" "maybe param" "maybe type" "temp"
    (820064 'move' call_tmp[820061](149132 call _cond_test call_tmp[820056]))
    if call_tmp[820061]
    {
      (611287 'move' ret[611281](611286 'coerce' 0 bool[19]))
      gotoReturn _end_chpl__ave_idxExprsSupport[611279] _end_chpl__ave_idxExprsSupport[611279]
    }
    (611293 'move' ret[611281](611292 'coerce' 1 bool[19]))
    label _end_chpl__ave_idxExprsSupport[611279]
    (611283 return ret[611281])
  }
  { scopeless type
    bool[19]
  }
  function chpl__ave_idxExprsSupport[149141](arg idxType[149143]:_any[141](?), arg idxExprs[149146]:_any[141](?) ...) param : _unknown[42] "private"
  {
    unknown ret[611297] "RVV" "param" "temp"
    (611303 'move' ret[611297](611302 'coerce' 1 bool[19]))
    (611299 return ret[611297])
  }
  where {
    (149151 call _validRankChangeArgs idxExprs[149146] idxType[149143])
  }
  { scopeless type
    bool[19]
  }
  function allBounded[149161](arg ranges[149166]:range[240](?)) param : _unknown[42] "private"
  {
    unknown ret[611307] "RVV" "param" "temp"
    unknown call_tmp[820068] "expr temp" "maybe param" "maybe type" "temp"
    (820071 'move' call_tmp[820068](149174 call bounds _mt[203] ranges[149166]))
    unknown call_tmp[820073] "expr temp" "maybe param" "maybe type" "temp"
    (820076 'move' call_tmp[820073](149171 call == call_tmp[820068] both[107114]))
    (611312 'move' ret[611307](611311 'deref' call_tmp[820073]))
    (611309 return ret[611307])
  }
  function allBounded[149183](arg ranges[149185]:_any[141](?)) param : _unknown[42] "private"
  {
    unknown ret[611316] "RVV" "param" "temp"
    unknown call_tmp[820078] "expr temp" "maybe param" "maybe type" "temp"
    (820081 'move' call_tmp[820078](149261 call chpl__isTupleOfRanges ranges[149185]))
    unknown call_tmp[820083] "expr temp" "maybe param" "maybe type" "temp"
    (820086 'move' call_tmp[820083](149263 call _cond_test call_tmp[820078]))
    if call_tmp[820083]
    {
      {
        unknown i[149189] "dead at end of block" "index var" "insert auto destroy"
        (646246 'init var' i[149189] 0)
        (555019 'end of statement')
        unknown tmp[149220] "maybe param" "temp"
        unknown call_tmp[820090] "expr temp" "maybe param" "maybe type" "temp"
        (820093 'move' call_tmp[820090](149193 call size _mt[203] ranges[149185]))
        unknown call_tmp[820095] "expr temp" "maybe param" "maybe type" "temp"
        (820098 'move' call_tmp[820095](149196 call chpl__nudgeHighBound call_tmp[820090]))
        (149232 'move' tmp[149220](149230 call chpl_compute_low_param_loop_bound 0 call_tmp[820095]))
        unknown tmp[149221] "maybe param" "temp"
        unknown call_tmp[820102] "expr temp" "maybe param" "maybe type" "temp"
        (820105 'move' call_tmp[820102](149239 call size _mt[203] ranges[149185]))
        unknown call_tmp[820107] "expr temp" "maybe param" "maybe type" "temp"
        (820110 'move' call_tmp[820107](149237 call chpl__nudgeHighBound call_tmp[820102]))
        (149244 'move' tmp[149221](149242 call chpl_compute_high_param_loop_bound 0 call_tmp[820107]))
        unknown tmp[149222] "maybe param" "temp"
        (149247 'move' tmp[149222] 1)
        ParamForLoop[149249]
        { i[149189] tmp[149220] tmp[149221] tmp[149222]
          {
            unknown call_tmp[820112] "expr temp" "maybe param" "maybe type" "temp"
            (820115 'move' call_tmp[820112](149207 call ranges[149185] i[149189]))
            unknown call_tmp[820119] "expr temp" "maybe param" "maybe type" "temp"
            (820122 'move' call_tmp[820119](149209 call bounds _mt[203] call_tmp[820112]))
            unknown call_tmp[820124] "expr temp" "maybe param" "maybe type" "temp"
            (820127 'move' call_tmp[820124](149204 call != call_tmp[820119] both[107114]))
            unknown call_tmp[820129] "expr temp" "maybe param" "maybe type" "temp"
            (820132 'move' call_tmp[820129](149216 call _cond_test call_tmp[820124]))
            if call_tmp[820129]
            {
              (611321 'move' ret[611316](611320 'deref' 0))
              gotoReturn _end_allBounded[611314] _end_allBounded[611314]
            }
          }
        }
        label _unused_continueLabel[149224]
        label _breakLabel[149223]
      }
      (611326 'move' ret[611316](611325 'deref' 1))
      gotoReturn _end_allBounded[611314] _end_allBounded[611314]
    }
    (149268 call compilerError "Unexpected type to allBounded")
    (555022 'end of statement')
    (611331 'move' ret[611316](611330 'deref' 0))
    label _end_allBounded[611314]
    (611318 return ret[611316])
  }
  function rangify[149276](arg rcTup[149278]:_any[141](?)) : _unknown[42] "private"
  {
    unknown ret[611375] "RVV" "temp"
    unknown call_tmp[820134] "expr temp" "maybe param" "maybe type" "temp"
    (820137 'move' call_tmp[820134](149284 call isTuple rcTup[149278]))
    (149282 call compilerAssert call_tmp[820134])
    (555024 'end of statement')
    function createRangifiedType[149286](arg rcTupType[149288]:_any[141](?)) type : _unknown[42]
    {
      unknown ret[611366] "RVV" "temp" "type variable"
      function recurse[149291](arg curType[149293]:_any[141](?), param arg dim[149295]:_any[141](?)) type : _unknown[42]
      {
        unknown ret[611335] "RVV" "temp" "type variable"
        unknown call_tmp[820141] "expr temp" "maybe param" "maybe type" "temp"
        (820144 'move' call_tmp[820141](149405 call size _mt[203] rcTupType[149288]))
        unknown call_tmp[820146] "expr temp" "maybe param" "maybe type" "temp"
        (820149 'move' call_tmp[820146](149401 call == dim[149295] call_tmp[820141]))
        unknown call_tmp[820151] "expr temp" "maybe param" "maybe type" "temp"
        (820154 'move' call_tmp[820151](149408 call _cond_test call_tmp[820146]))
        if call_tmp[820151]
        {
          (611340 'move' ret[611335](611339 'deref' curType[149293]))
          gotoReturn _end_recurse[611333] _end_recurse[611333]
        }
        {
          unknown call_tmp[820156] "expr temp" "maybe param" "maybe type" "temp"
          (820159 'move' call_tmp[820156](149395 call rcTupType[149288] dim[149295]))
          unknown call_tmp[820161] "expr temp" "maybe param" "maybe type" "temp"
          (820164 'move' call_tmp[820161](149393 call isRangeType call_tmp[820156]))
          unknown call_tmp[820166] "expr temp" "maybe param" "maybe type" "temp"
          (820169 'move' call_tmp[820166](149397 call _cond_test call_tmp[820161]))
          if call_tmp[820166]
          {
            unknown call_tmp[820171] "expr temp" "maybe param" "maybe type" "temp"
            (820174 'move' call_tmp[820171](149332 call == dim[149295] 0))
            unknown call_tmp[820176] "expr temp" "maybe param" "maybe type" "temp"
            (820179 'move' call_tmp[820176](149336 call _cond_test call_tmp[820171]))
            if call_tmp[820176]
            {
              unknown call_tmp[820181] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820184 'move' call_tmp[820181](149308 call rcTupType[149288] dim[149295]))
              unknown call_tmp[820186] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820189 'move' call_tmp[820186](149310 call _build_tuple call_tmp[820181]))
              unknown call_tmp[820191] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820194 'move' call_tmp[820191](149312 call + dim[149295] 1))
              unknown call_tmp[820196] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820199 'move' call_tmp[820196](149305 call recurse call_tmp[820186] call_tmp[820191]))
              (611345 'move' ret[611335](611344 'deref' call_tmp[820196]))
              gotoReturn _end_recurse[611333] _end_recurse[611333]
            }
            {
              unknown call_tmp[820201] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820204 'move' call_tmp[820201](149324 call rcTupType[149288] dim[149295]))
              unknown call_tmp[820206] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820209 'move' call_tmp[820206](149326 call _build_tuple(149322 'expand_tuple' curType[149293]) call_tmp[820201]))
              unknown call_tmp[820211] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820214 'move' call_tmp[820211](149328 call + dim[149295] 1))
              unknown call_tmp[820216] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820219 'move' call_tmp[820216](149319 call recurse call_tmp[820206] call_tmp[820211]))
              (611350 'move' ret[611335](611349 'deref' call_tmp[820216]))
              gotoReturn _end_recurse[611333] _end_recurse[611333]
            }
          }
          {
            const dummy[149342] "dead at end of block" "const" "insert auto destroy"
            unknown call_tmp[820221] "expr temp" "maybe param" "maybe type" "temp"
            (820224 'move' call_tmp[820221](149344 call rcTupType[149288] dim[149295]))
            (646248 'default init var' dummy[149342] call_tmp[820221])
            (149347 'end of statement')
            unknown call_tmp[820226] "maybe param" "maybe type" "temp"
            (820229 'move' call_tmp[820226](149352 call chpl_build_bounded_range dummy[149342] dummy[149342]))
            const dummyRange[149349] "dead at end of block" "const" "insert auto destroy"
            (646250 'init var' dummyRange[149349] call_tmp[820226])
            (149355 'end of statement' dummy[149342])
            unknown call_tmp[820231] "expr temp" "maybe param" "maybe type" "temp"
            (820234 'move' call_tmp[820231](149384 call == dim[149295] 0))
            unknown call_tmp[820236] "expr temp" "maybe param" "maybe type" "temp"
            (820239 'move' call_tmp[820236](149388 call _cond_test call_tmp[820231]))
            if call_tmp[820236]
            {
              unknown call_tmp[820241] "expr temp" "maybe param" "used in type" "maybe type" "temp" "type variable"
              (820244 'move' call_tmp[820241](149362 'typeof' dummyRange[149349]))
              unknown call_tmp[820246] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820249 'move' call_tmp[820246](149363 call _build_tuple call_tmp[820241]))
              unknown call_tmp[820251] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820254 'move' call_tmp[820251](149365 call + dim[149295] 1))
              unknown call_tmp[820256] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820259 'move' call_tmp[820256](149359 call recurse call_tmp[820246] call_tmp[820251]))
              (611355 'move' ret[611335](611354 'deref' call_tmp[820256]))
              gotoReturn _end_recurse[611333] _end_recurse[611333]
              (555029 'end of statement' dummyRange[149349])
            }
            {
              unknown call_tmp[820261] "expr temp" "maybe param" "used in type" "maybe type" "temp" "type variable"
              (820264 'move' call_tmp[820261](149377 'typeof' dummyRange[149349]))
              unknown call_tmp[820266] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820269 'move' call_tmp[820266](149378 call _build_tuple(149375 'expand_tuple' curType[149293]) call_tmp[820261]))
              unknown call_tmp[820271] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820274 'move' call_tmp[820271](149380 call + dim[149295] 1))
              unknown call_tmp[820276] "expr temp" "maybe param" "used in type" "maybe type" "temp"
              (820279 'move' call_tmp[820276](149372 call recurse call_tmp[820266] call_tmp[820271]))
              (611360 'move' ret[611335](611359 'deref' call_tmp[820276]))
              gotoReturn _end_recurse[611333] _end_recurse[611333]
              (555031 'end of statement' dummyRange[149349])
            }
          }
        }
        label _end_recurse[611333]
        (611337 return ret[611335])
      }
      unknown call_tmp[820281] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (820284 'move' call_tmp[820281](149417 call recurse nothing[7] 0))
      (611371 'move' ret[611366](611370 'deref' call_tmp[820281]))
      (611368 return ret[611366])
    }
    unknown ret[149423] "dead at end of block" "insert auto destroy"
    unknown call_tmp[820286] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (820289 'move' call_tmp[820286](149427 'typeof' rcTup[149278]))
    unknown call_tmp[820291] "expr temp" "maybe param" "maybe type" "temp"
    (820294 'move' call_tmp[820291](149425 call createRangifiedType call_tmp[820286]))
    (646252 'default init var' ret[149423] call_tmp[820291])
    (149429 'end of statement')
    {
      unknown i[149430] "dead at end of block" "index var" "insert auto destroy"
      (646254 'init var' i[149430] 0)
      (555034 'end of statement')
      unknown tmp[149474] "maybe param" "temp"
      unknown call_tmp[820298] "expr temp" "maybe param" "maybe type" "temp"
      (820301 'move' call_tmp[820298](149434 call size _mt[203] ret[149423]))
      unknown call_tmp[820303] "expr temp" "maybe param" "maybe type" "temp"
      (820306 'move' call_tmp[820303](149437 call chpl__nudgeHighBound call_tmp[820298]))
      (149486 'move' tmp[149474](149484 call chpl_compute_low_param_loop_bound 0 call_tmp[820303]))
      unknown tmp[149475] "maybe param" "temp"
      unknown call_tmp[820310] "expr temp" "maybe param" "maybe type" "temp"
      (820313 'move' call_tmp[820310](149493 call size _mt[203] ret[149423]))
      unknown call_tmp[820315] "expr temp" "maybe param" "maybe type" "temp"
      (820318 'move' call_tmp[820315](149491 call chpl__nudgeHighBound call_tmp[820310]))
      (149498 'move' tmp[149475](149496 call chpl_compute_high_param_loop_bound 0 call_tmp[820315]))
      unknown tmp[149476] "maybe param" "temp"
      (149501 'move' tmp[149476] 1)
      ParamForLoop[149503]
      { i[149430] tmp[149474] tmp[149475] tmp[149476]
        {
          unknown call_tmp[820320] "expr temp" "maybe param" "maybe type" "temp"
          (820323 'move' call_tmp[820320](149468 call rcTup[149278] i[149430]))
          unknown call_tmp[820325] "expr temp" "maybe param" "maybe type" "temp"
          (820328 'move' call_tmp[820325](149466 call isRange call_tmp[820320]))
          unknown call_tmp[820330] "expr temp" "maybe param" "maybe type" "temp"
          (820333 'move' call_tmp[820330](149470 call _cond_test call_tmp[820325]))
          if call_tmp[820330]
          {
            unknown call_tmp[820335] "expr temp" "maybe param" "maybe type" "temp"
            (820338 'move' call_tmp[820335](149446 call ret[149423] i[149430]))
            unknown call_tmp[820340] "expr temp" "maybe param" "maybe type" "temp"
            (820343 'move' call_tmp[820340](149449 call rcTup[149278] i[149430]))
            (149443 call = call_tmp[820335] call_tmp[820340])
            (555035 'end of statement' ret[149423] i[149430])
          }
          {
            unknown call_tmp[820345] "expr temp" "maybe param" "maybe type" "temp"
            (820348 'move' call_tmp[820345](149455 call ret[149423] i[149430]))
            unknown call_tmp[820350] "expr temp" "maybe param" "maybe type" "temp"
            (820353 'move' call_tmp[820350](149458 call rcTup[149278] i[149430]))
            unknown call_tmp[820355] "expr temp" "maybe param" "maybe type" "temp"
            (820358 'move' call_tmp[820355](149461 call rcTup[149278] i[149430]))
            unknown call_tmp[820360] "expr temp" "maybe param" "maybe type" "temp"
            (820363 'move' call_tmp[820360](149463 call chpl_build_bounded_range call_tmp[820350] call_tmp[820355]))
            (149452 call = call_tmp[820345] call_tmp[820360])
            (555038 'end of statement' ret[149423] i[149430])
          }
        }
      }
      label _unused_continueLabel[149478]
      label _breakLabel[149477]
    }
    (611380 'move' ret[611375](611379 'deref' ret[149423]))
    gotoReturn _end_rangify[611373] _end_rangify[611373]
    (555041 'end of statement' ret[149423])
    label _end_rangify[611373]
    (611377 return ret[611375])
  }
  (396172 'used modules list'(147268 'use' ChapelBase[77907] 'only' iterKind)(147271 'use' ChapelRange[129915])(147274 'use' DefaultRectangular[304994])(147277 'use' CTypes[51217])(147282 'use' ChapelArray[264652] 'only' _validRankChangeArgs))
}
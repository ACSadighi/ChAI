AST dump for ChapelTuple after pass normalize.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[468411]() : void[4] "insert line file info" "module init"
  {
    (644914 'init var' CHPL_WARN_TUPLE_ITERATION[99985] "unset")
    (99990 'end of statement')
    (602485 return _void[46])
  }
  type _tuple[246](?) unknown size[99457] "param" int(64)[10]
  function chpl__init_tuple[99463](param arg size[99466]:int(64)[10]) : _unknown[42] "tuple init fn" "inline" "no return value for void"
  {
    (601544 return _void[46])
  }
  function _build_tuple[99472](arg t[99475]:_any[141](?) ...) type : _unknown[42] "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (601546 return _void[46])
  }
  function _build_tuple[99481](arg x[99484]:_any[141](?) ...) : _unknown[42] "build tuple" "inline"
  {
    unknown ret[601550] "RVV" "temp"
    (601555 'move' ret[601550](601554 'deref' x[99484]))
    (601552 return ret[601550])
  }
  function _build_tuple_noref[99492](arg t[99495]:_any[141](?) ...) type : _unknown[42] "do not allow ref" "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (601557 return _void[46])
  }
  function _build_tuple_always_allow_ref[99501](arg x[99504]:_any[141](?) ...) : _unknown[42] "allow ref" "build tuple" "inline" "suppress lvalue error"
  {
    unknown ret[601561] "RVV" "temp"
    (601566 'move' ret[601561](601565 'deref' x[99504]))
    (601563 return ret[601561])
  }
  function chpl__unref[99512](arg t[99514]:_any[141](?)) type : _unknown[42] "inline"
  {
    unknown ret[601570] "RVV" "temp" "type variable"
    unknown call_tmp[779429] "expr temp" "maybe param" "maybe type" "temp"
    (779432 'move' call_tmp[779429](99527 call isTupleType t[99514]))
    unknown call_tmp[779434] "expr temp" "maybe param" "maybe type" "temp"
    (779437 'move' call_tmp[779434](99529 call _cond_test call_tmp[779429]))
    if call_tmp[779434]
    {
      unknown call_tmp[779439] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (779442 'move' call_tmp[779439](99519 call _build_tuple_noref(99521 'expand_tuple' t[99514])))
      (601575 'move' ret[601570](601574 'deref' call_tmp[779439]))
      gotoReturn _end_chpl__unref[601568] _end_chpl__unref[601568]
    }
    {
      (601580 'move' ret[601570](601579 'deref' t[99514]))
      gotoReturn _end_chpl__unref[601568] _end_chpl__unref[601568]
    }
    label _end_chpl__unref[601568]
    (601572 return ret[601570])
  }
  function *[99537](param arg p[99540]:int(64)[10], arg t[99543]:_any[141](?)) type : _unknown[42] "build tuple" "build tuple type" "operator" "star tuple" "no return value for void"
  {
    (601584 return _void[46])
  }
  function *[99548](param arg p[99551]:uint(64)[86], arg t[99554]:_any[141](?)) type : _unknown[42] "operator"
  {
    unknown ret[601588] "RVV" "temp" "type variable"
    unknown call_tmp[779444] "expr temp" "maybe param" "maybe type" "temp"
    (779447 'move' call_tmp[779444](99580 call max int(64)[10]))
    unknown call_tmp[779449] "expr temp" "maybe param" "maybe type" "temp"
    (779452 'move' call_tmp[779449](99576 call > p[99551] call_tmp[779444]))
    unknown call_tmp[779454] "expr temp" "maybe param" "maybe type" "temp"
    (779457 'move' call_tmp[779454](99582 call _cond_test call_tmp[779449]))
    if call_tmp[779454]
    {
      unknown call_tmp[779459] "expr temp" "maybe param" "maybe type" "temp"
      (779462 'move' call_tmp[779459](99569 call max int(64)[10]))
      unknown call_tmp[779464] "expr temp" "maybe param" "maybe type" "temp"
      (779467 'move' call_tmp[779464](99566 call : call_tmp[779459] string[244]))
      unknown call_tmp[779469] "expr temp" "maybe param" "maybe type" "temp"
      (779472 'move' call_tmp[779469](99561 call + "Tuples of size >" call_tmp[779464]))
      unknown call_tmp[779474] "expr temp" "maybe param" "maybe type" "temp"
      (779477 'move' call_tmp[779474](99559 call + call_tmp[779469] " are not currently supported"))
      (99558 call compilerError call_tmp[779474])
    }
    unknown call_tmp[779479] "maybe param" "maybe type" "temp"
    (779482 'move' call_tmp[779479](99589 call : p[99551] int(64)[10]))
    unknown pAsInt[99588] "dead at end of block" "param"
    (644910 'init var' pAsInt[99588] call_tmp[779479])
    (99594 'end of statement')
    unknown call_tmp[779484] "expr temp" "maybe param" "used in type" "maybe type" "temp"
    (779487 'move' call_tmp[779484](99596 call * pAsInt[99588] t[99554]))
    (601593 'move' ret[601588](601592 'deref' call_tmp[779484]))
    (601590 return ret[601588])
  }
  function *[99602](param arg p[99605]:bool[19], arg t[99608]:_any[141](?)) type : _unknown[42] "last resort" "operator" "no return value for void"
  {
    (99612 call compilerError "Tuple types cannot be defined using boolean sizes")
    (601595 return _void[46])
  }
  function *[99618](arg p[99621]:bool[19], arg t[99624]:_any[141](?)) type : _unknown[42] "last resort" "operator" "no return value for void"
  {
    (99628 call compilerError "Tuple types cannot be defined using boolean sizes")
    (601597 return _void[46])
  }
  function _build_star_tuple_noref[99632](param arg p[99635]:int(64)[10], arg t[99638]:_any[141](?)) type : _unknown[42] "do not allow ref" "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (601599 return _void[46])
  }
  function *[99643](arg t[99645]:_any[141](?), param arg p[99648]:int(64)[10]) : _unknown[42] "last resort" "operator" "no return value for void"
  {
    (99653 call compilerError "<type>*<param int> not supported.  If you're trying to specify a homogeneous tuple type, use <param int>*<type>.")
    (601601 return _void[46])
  }
  function *[99659](arg p[99662]:integral[159](?), arg t[99665]:_any[141](?)) type : _unknown[42] "last resort" "operator" "no return value for void"
  {
    (99669 call compilerError "tuple size must be known at compile-time")
    (601603 return _void[46])
  }
  function chpl__tuplify[99675](arg x[99677]:_any[141](?)) : _unknown[42] "inline"
  {
    unknown ret[601607] "RVV" "temp"
    unknown call_tmp[779489] "expr temp" "maybe param" "maybe type" "temp"
    (779492 'move' call_tmp[779489](99690 call isTuple x[99677]))
    unknown call_tmp[779494] "expr temp" "maybe param" "maybe type" "temp"
    (779497 'move' call_tmp[779494](99692 call _cond_test call_tmp[779489]))
    if call_tmp[779494]
    {
      (601612 'move' ret[601607](601611 'deref' x[99677]))
      gotoReturn _end_chpl__tuplify[601605] _end_chpl__tuplify[601605]
    }
    {
      unknown call_tmp[779499] "expr temp" "maybe param" "maybe type" "temp"
      (779502 'move' call_tmp[779499](99686 call _build_tuple x[99677]))
      (601617 'move' ret[601607](601616 'deref' call_tmp[779499]))
      gotoReturn _end_chpl__tuplify[601605] _end_chpl__tuplify[601605]
    }
    label _end_chpl__tuplify[601605]
    (601609 return ret[601607])
  }
  function _check_tuple_var_decl[99700](const  ref arg x[99703]:_tuple[246](?), param arg p[99706]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[601623] "RVV" "param" "temp"
    unknown call_tmp[779506] "expr temp" "maybe param" "maybe type" "temp"
    (779509 'move' call_tmp[779506](99747 call size _mt[203] x[99703]))
    unknown call_tmp[779511] "expr temp" "maybe param" "maybe type" "temp"
    (779514 'move' call_tmp[779511](99743 call == p[99706] call_tmp[779506]))
    unknown call_tmp[779516] "expr temp" "maybe param" "maybe type" "temp"
    (779519 'move' call_tmp[779516](99750 call _cond_test call_tmp[779511]))
    if call_tmp[779516]
    {
      (601628 'move' ret[601623](601627 'deref' 1))
      gotoReturn _end__check_tuple_var_decl[601621] _end__check_tuple_var_decl[601621]
    }
    {
      unknown call_tmp[779523] "expr temp" "maybe param" "maybe type" "temp"
      (779526 'move' call_tmp[779523](99729 call size _mt[203] x[99703]))
      unknown call_tmp[779528] "expr temp" "maybe param" "maybe type" "temp"
      (779531 'move' call_tmp[779528](99726 call : call_tmp[779523] string[244]))
      unknown call_tmp[779533] "expr temp" "maybe param" "maybe type" "temp"
      (779536 'move' call_tmp[779533](99721 call + "tuple size (" call_tmp[779528]))
      unknown call_tmp[779538] "expr temp" "maybe param" "maybe type" "temp"
      (779541 'move' call_tmp[779538](99719 call + call_tmp[779533] ") must match the number of grouped variables ("))
      unknown call_tmp[779543] "expr temp" "maybe param" "maybe type" "temp"
      (779546 'move' call_tmp[779543](99736 call : p[99706] string[244]))
      unknown call_tmp[779548] "expr temp" "maybe param" "maybe type" "temp"
      (779551 'move' call_tmp[779548](99717 call + call_tmp[779538] call_tmp[779543]))
      unknown call_tmp[779553] "expr temp" "maybe param" "maybe type" "temp"
      (779556 'move' call_tmp[779553](99715 call + call_tmp[779548] ")"))
      (99714 call compilerError call_tmp[779553])
      (551154 'end of statement')
      (601633 'move' ret[601623](601632 'deref' 0))
      gotoReturn _end__check_tuple_var_decl[601621] _end__check_tuple_var_decl[601621]
    }
    label _end__check_tuple_var_decl[601621]
    (601625 return ret[601623])
  }
  function _check_tuple_var_decl[99756](const  ref arg x[99758]:_any[141](?), param arg p[99760]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[601639] "RVV" "param" "temp"
    (99764 call compilerError "illegal tuple variable declaration with non-tuple initializer")
    (551156 'end of statement')
    (601644 'move' ret[601639](601643 'deref' 0))
    (601641 return ret[601639])
  }
  function =[99772](ref arg x[99775]:_tuple[246](?), const?  ref arg y[99779]:_tuple[246](?)) : _unknown[42] "no array view elision" "assignop" "compiler generated" "inline" "last resort" "operator" "no return value for void"
  {
    {
      unknown i[99793] "dead at end of block" "index var" "insert auto destroy"
      (644912 'init var' i[99793] 0)
      unknown tmp[99814] "maybe param" "temp"
      unknown call_tmp[779560] "expr temp" "maybe param" "maybe type" "temp"
      (779563 'move' call_tmp[779560](99799 call size _mt[203] x[99775]))
      unknown call_tmp[779565] "expr temp" "maybe param" "maybe type" "temp"
      (779568 'move' call_tmp[779565](99796 call - call_tmp[779560] 1))
      (99826 'move' tmp[99814](99824 call chpl_compute_low_param_loop_bound 0 call_tmp[779565]))
      unknown tmp[99815] "maybe param" "temp"
      unknown call_tmp[779572] "expr temp" "maybe param" "maybe type" "temp"
      (779575 'move' call_tmp[779572](99833 call size _mt[203] x[99775]))
      unknown call_tmp[779577] "expr temp" "maybe param" "maybe type" "temp"
      (779580 'move' call_tmp[779577](99831 call - call_tmp[779572] 1))
      (99839 'move' tmp[99815](99837 call chpl_compute_high_param_loop_bound 0 call_tmp[779577]))
      unknown tmp[99816] "maybe param" "temp"
      (99842 'move' tmp[99816] 1)
      ParamForLoop[99844]
      { i[99793] tmp[99814] tmp[99815] tmp[99816]
        unknown call_tmp[779582] "expr temp" "maybe param" "maybe type" "temp"
        (779585 'move' call_tmp[779582](99808 call x[99775] i[99793]))
        unknown call_tmp[779587] "expr temp" "maybe param" "maybe type" "temp"
        (779590 'move' call_tmp[779587](99811 call y[99779] i[99793]))
        (99805 call = call_tmp[779582] call_tmp[779587])
      }
      label _unused_continueLabel[99818]
      label _breakLabel[99817]
    }
    (601646 return _void[46])
  }
  where {
    unknown call_tmp[779594] "expr temp" "maybe param" "maybe type" "temp"
    (779597 'move' call_tmp[779594](99785 call size _mt[203] x[99775]))
    unknown call_tmp[779601] "expr temp" "maybe param" "maybe type" "temp"
    (779604 'move' call_tmp[779601](99789 call size _mt[203] y[99779]))
    (99782 call == call_tmp[779594] call_tmp[779601])
  }
  function _tuple[246](?).this[99856](arg _mt[99866]:_MT[201], arg this[99859]:_tuple[246](?) :
  _tuple[246](?), arg i[99863]:integral[159](?)) ref : _unknown[42] "method" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[601650] "RVV" "temp"
    unknown call_tmp[779606] "expr temp" "maybe param" "maybe type" "temp"
    (779609 'move' call_tmp[779606](99878 call isHomogeneousTuple this[99859]))
    unknown call_tmp[779611] "expr temp" "maybe param" "maybe type" "temp"
    (779614 'move' call_tmp[779611](99875 call ! call_tmp[779606]))
    unknown call_tmp[779616] "expr temp" "maybe param" "maybe type" "temp"
    (779619 'move' call_tmp[779616](99880 call _cond_test call_tmp[779611]))
    if call_tmp[779616]
    {
      (99870 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[779621] "expr temp" "maybe param" "maybe type" "temp"
    (779624 'move' call_tmp[779621](99911 call _cond_test 1))
    if call_tmp[779621]
    {
      unknown tmp[482814] "maybe param" "temp"
      (482825 'move' tmp[482814](99894 call < i[99863] 0))
      unknown call_tmp[779626] "expr temp" "maybe param" "maybe type" "temp"
      (779629 'move' call_tmp[779626](482827 call _cond_invalid tmp[482814]))
      if call_tmp[779626]
      {
        (482830 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[670605] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[670606] "maybe param" "temp"
      unknown call_tmp[779631] "expr temp" "maybe param" "maybe type" "temp"
      (779634 'move' call_tmp[779631](482815 call isTrue tmp[482814]))
      (670611 'move' tmp[670606](670609 call _cond_test call_tmp[779631]))
      if tmp[670606]
      {
        (670616 'move' tmp[670605](670613 '_paramFoldLogical' tmp[670606] 1))
      }
      {
        unknown tmp[670618] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[779638] "expr temp" "maybe param" "maybe type" "temp"
        (779641 'move' call_tmp[779638](425061 call size _mt[203] this[99859]))
        unknown call_tmp[779643] "expr temp" "maybe param" "maybe type" "temp"
        (779646 'move' call_tmp[779643](99901 call - call_tmp[779638] 1))
        unknown call_tmp[779648] "expr temp" "maybe param" "maybe type" "temp"
        (779651 'move' call_tmp[779648](99898 call > i[99863] call_tmp[779643]))
        (670620 'move' tmp[670618](482819 call isTrue call_tmp[779648]))
        (670625 'move' tmp[670605](670622 '_paramFoldLogical' tmp[670606] tmp[670618]))
      }
      unknown call_tmp[779653] "expr temp" "maybe param" "maybe type" "temp"
      (779656 'move' call_tmp[779653](99905 call _cond_test tmp[670605]))
      if call_tmp[779653]
      {
        (99886 call halt "tuple access out of bounds: " i[99863])
      }
    }
    unknown call_tmp[779658] "expr temp" "maybe param" "maybe type" "temp"
    (779661 'move' call_tmp[779658](99917 'get svec member' this[99859] i[99863]))
    (601655 'move' ret[601650](601654 'addr of' call_tmp[779658]))
    (601652 return ret[601650])
  }
  function _tuple[246](?).this[99922](arg _mt[99932]:_MT[201], arg this[99925]:_tuple[246](?) :
  _tuple[246](?), arg i[99929]:bool[19]) ref : _unknown[42] "method" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[601659] "RVV" "temp"
    unknown call_tmp[779663] "expr temp" "maybe param" "maybe type" "temp"
    (779666 'move' call_tmp[779663](99942 call isHomogeneousTuple this[99925]))
    unknown call_tmp[779668] "expr temp" "maybe param" "maybe type" "temp"
    (779671 'move' call_tmp[779668](99939 call ! call_tmp[779663]))
    unknown call_tmp[779673] "expr temp" "maybe param" "maybe type" "temp"
    (779676 'move' call_tmp[779673](99944 call _cond_test call_tmp[779668]))
    if call_tmp[779673]
    {
      (99936 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[779678] "expr temp" "maybe param" "maybe type" "temp"
    (779681 'move' call_tmp[779678](99973 call _cond_test 1))
    if call_tmp[779678]
    {
      unknown tmp[482835] "maybe param" "temp"
      (482846 'move' tmp[482835](99956 call < i[99929] 0))
      unknown call_tmp[779683] "expr temp" "maybe param" "maybe type" "temp"
      (779686 'move' call_tmp[779683](482848 call _cond_invalid tmp[482835]))
      if call_tmp[779683]
      {
        (482851 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[670632] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[670633] "maybe param" "temp"
      unknown call_tmp[779688] "expr temp" "maybe param" "maybe type" "temp"
      (779691 'move' call_tmp[779688](482836 call isTrue tmp[482835]))
      (670638 'move' tmp[670633](670636 call _cond_test call_tmp[779688]))
      if tmp[670633]
      {
        (670643 'move' tmp[670632](670640 '_paramFoldLogical' tmp[670633] 1))
      }
      {
        unknown tmp[670645] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[779695] "expr temp" "maybe param" "maybe type" "temp"
        (779698 'move' call_tmp[779695](425074 call size _mt[203] this[99925]))
        unknown call_tmp[779700] "expr temp" "maybe param" "maybe type" "temp"
        (779703 'move' call_tmp[779700](99963 call - call_tmp[779695] 1))
        unknown call_tmp[779705] "expr temp" "maybe param" "maybe type" "temp"
        (779708 'move' call_tmp[779705](99960 call > i[99929] call_tmp[779700]))
        (670647 'move' tmp[670645](482840 call isTrue call_tmp[779705]))
        (670652 'move' tmp[670632](670649 '_paramFoldLogical' tmp[670633] tmp[670645]))
      }
      unknown call_tmp[779710] "expr temp" "maybe param" "maybe type" "temp"
      (779713 'move' call_tmp[779710](99967 call _cond_test tmp[670632]))
      if call_tmp[779710]
      {
        (99950 call halt "tuple access out of bounds: " i[99929])
      }
    }
    unknown call_tmp[779715] "expr temp" "maybe param" "maybe type" "temp"
    (779718 'move' call_tmp[779715](99979 'get svec member' this[99925] i[99929]))
    (601664 'move' ret[601659](601663 'addr of' call_tmp[779715]))
    (601661 return ret[601659])
  }
  unknown CHPL_WARN_TUPLE_ITERATION[99985] "config" "param"
  function _tuple[246](?).these[99991](arg _mt[99997]:_MT[201], ref arg this[99994]:_tuple[246](?) :
  _tuple[246](?)) ref : _unknown[42] "iterator fn" "method" "reference to const when const this" "no return value for void"
  {
    unknown ret[601668] "RVV" "temp"
    unknown call_tmp[779720] "expr temp" "maybe param" "maybe type" "temp"
    (779723 'move' call_tmp[779720](100009 call isHomogeneousTuple this[99994]))
    unknown call_tmp[779725] "expr temp" "maybe param" "maybe type" "temp"
    (779728 'move' call_tmp[779725](100006 call ! call_tmp[779720]))
    unknown call_tmp[779730] "expr temp" "maybe param" "maybe type" "temp"
    (779733 'move' call_tmp[779730](100011 call _cond_test call_tmp[779725]))
    if call_tmp[779730]
    {
      (100001 call compilerError "Heterogeneous tuples don't support this style of loop yet")
    }
    unknown call_tmp[779735] "expr temp" "maybe param" "maybe type" "temp"
    (779738 'move' call_tmp[779735](100022 call == CHPL_WARN_TUPLE_ITERATION[99985] "true"))
    unknown call_tmp[779740] "expr temp" "maybe param" "maybe type" "temp"
    (779743 'move' call_tmp[779740](100026 call _cond_test call_tmp[779735]))
    if call_tmp[779740]
    {
      (100017 call compilerWarning "Iterating over tuples. If you intended to use zippered iteration, add the new keyword 'zip' before the tuple of iteratable exp)
    }
    {
      unknown _indexOfInterest[100055] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[100056] "expr temp" "temp"
      unknown call_tmp[779747] "expr temp" "maybe param" "maybe type" "temp"
      (779750 'move' call_tmp[779747](100071 call size _mt[203] this[99994]))
      unknown call_tmp[779752] "expr temp" "maybe param" "maybe type" "temp"
      (779755 'move' call_tmp[779752](100075 call chpl_direct_counted_range_iter 0 call_tmp[779747]))
      (100065 'move' _iterator[100056](100063 call _getIterator call_tmp[779752]))
      Defer
      {
        {
          (100090 call _freeIterator _iterator[100056])
        }
      }
      { scopeless type
        (100080 'move' _indexOfInterest[100055](100077 call iteratorIndex _iterator[100056]))
      }
      ForLoop[100057] order-independent
      {
        unknown i[100031] "index var" "insert auto destroy"
        (551169 'end of statement')
        (100085 'move' i[100031] _indexOfInterest[100055])
        (551170 'end of statement' i[100031])
        {
          ref yret[601672] "YVV" "temp"
          unknown call_tmp[779757] "expr temp" "maybe param" "maybe type" "temp"
          (779760 'move' call_tmp[779757](100051 call this[100044] i[100031]))
          (601675 'move' yret[601672](601674 'addr of' call_tmp[779757]))
          (100049 yield yret[601672])
          (551172 'end of statement' this[100044] i[100031])
        }
        label _continueLabel[100060]
        _indexOfInterest[100055]
        _iterator[100056]
      }
      label _breakLabel[100061]
    }
    (601670 return ret[601668])
  }
  function _tuple[246](?).these[100099](arg _mt[100109]:_MT[201], arg this[100102]:_tuple[246](?) :
  _tuple[246](?), param arg tag[100106]:iterKind[52144]) : _unknown[42] "iterator fn" "method" "no return value for void"
  {
    unknown ret[601680] "RVV" "temp"
    const numTasks[100122] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[670659] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670660] "maybe param" "temp"
    unknown call_tmp[779762] "expr temp" "maybe param" "maybe type" "temp"
    (779765 'move' call_tmp[779762](100123 call == dataParTasksPerLocale[287582] 0))
    (670665 'move' tmp[670660](670663 call _cond_test call_tmp[779762]))
    if tmp[670660]
    {
      unknown tmp[670667] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[779767] "expr temp" "maybe param" "maybe type" "temp"
      (779770 'move' call_tmp[779767](401005 call here[135591]))
      (670669 'move' tmp[670667](100128 call maxTaskPar _mt[203] call_tmp[779767]))
      (670674 'move' tmp[670659](670671 '_paramFoldLogical' tmp[670660] tmp[670667]))
    }
    {
      (670679 'move' tmp[670659](670676 '_paramFoldLogical' tmp[670660] dataParTasksPerLocale[287582]))
    }
    (644916 'init var' numTasks[100122] tmp[670659])
    (100136 'end of statement')
    const ignoreRunning[100138] "dead at end of block" "const" "insert auto destroy"
    (644918 'init var' ignoreRunning[100138] dataParIgnoreRunningTasks[287587])
    (100141 'end of statement')
    const minIndicesPerTask[100143] "dead at end of block" "const" "insert auto destroy"
    (644920 'init var' minIndicesPerTask[100143] dataParMinGranularity[287592])
    (100146 'end of statement')
    unknown call_tmp[779776] "maybe param" "maybe type" "temp"
    (779779 'move' call_tmp[779776](100150 call size _mt[203] this[100102]))
    const length[100148] "dead at end of block" "const" "insert auto destroy"
    (644922 'init var' length[100148] call_tmp[779776])
    (100154 'end of statement')
    unknown call_tmp[779781] "expr temp" "maybe param" "maybe type" "temp"
    (779784 'move' call_tmp[779781](100161 call chpl_build_low_bounded_range 0))
    unknown call_tmp[779786] "expr temp" "maybe param" "maybe type" "temp"
    (779789 'move' call_tmp[779786](100158 call # call_tmp[779781] length[100148]))
    unknown call_tmp[779791] "maybe param" "maybe type" "temp"
    (779794 'move' call_tmp[779791](100164 call _build_tuple call_tmp[779786]))
    const myRange[100156] "dead at end of block" "const" "insert auto destroy"
    (644924 'init var' myRange[100156] call_tmp[779791])
    (100167 'end of statement')
    unknown call_tmp[779796] "maybe param" "maybe type" "temp"
    (779799 'move' call_tmp[779796](100174 call _computeChunkStuff numTasks[100122] ignoreRunning[100138] minIndicesPerTask[100143] myRange[100156]))
    unknown tmp[100179] "dead at end of block" "insert auto destroy" "temp"
    (644926 'init var' tmp[100179] call_tmp[779796])
    (100183 call _check_tuple_var_decl tmp[100179] 2)
    (551176 'end of statement')
    unknown call_tmp[779801] "maybe param" "maybe type" "temp"
    (779804 'move' call_tmp[779801](100180 call tmp[100179] 0))
    unknown numChunks[100169] "dead at end of block" "insert auto destroy"
    (644928 'init var' numChunks[100169] call_tmp[779801])
    (100188 'end of statement' length[100148])
    {
      unknown tmpIter[387126] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[779806] "expr temp" "maybe param" "maybe type" "temp"
      (779809 'move' call_tmp[779806](100194 call chpl_build_low_bounded_range 0))
      (387129 'move' tmpIter[387126](100191 call # call_tmp[779806] numChunks[100169]))
      unknown isBounded[387302] "maybe param" "temp"
      (387308 'move' isBounded[387302](387304 call chpl_supportsBoundedCoforall tmpIter[387126] 0))
      if isBounded[387302]
      {
        const _coforallCount[387171] "const" "end count" "temp"
        (387239 'move' _coforallCount[387171](387236 call _endCountAlloc 1))
        unknown numTasks[387172] "temp"
        (387223 'move' numTasks[387172](387219 call chpl_boundedCoforallSize tmpIter[387126] 0))
        (387214 call _upEndCount _coforallCount[387171] 1 numTasks[387172])
        (551177 'end of statement')
        (387211 call chpl_resetTaskSpawn numTasks[387172])
        (551178 'end of statement')
        unknown _indexOfInterest[387179] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[387180] "expr temp" "temp"
        (387189 'move' _iterator[387180](387187 call _getIterator tmpIter[387126]))
        Defer
        {
          {
            (387204 call _freeIterator _iterator[387180])
          }
        }
        { scopeless type
          (387194 'move' _indexOfInterest[387179](387191 call iteratorIndex _iterator[387180]))
        }
        ForLoop[387181]
        {
          unknown chunk[387133] "coforall index var" "index var" "insert auto destroy"
          (551180 'end of statement')
          (387199 'move' chunk[387133] _indexOfInterest[387179])
          (551181 'end of statement' chunk[387133])
          {
            {
              unknown call_tmp[779811] "expr temp" "maybe param" "maybe type" "temp"
              (779814 'move' call_tmp[779811](387144 call - length[100148] 1))
              unknown call_tmp[779816] "maybe param" "maybe type" "temp"
              (779819 'move' call_tmp[779816](387139 call _computeBlock length[100148] numChunks[100169] chunk[387133] call_tmp[779811]))
              const tmp[387137] "dead at end of block" "const" "insert auto destroy" "temp"
              (644930 'init var' tmp[387137] call_tmp[779816])
              (387149 call _check_tuple_var_decl tmp[387137] 2)
              (551183 'end of statement')
              unknown call_tmp[779821] "maybe param" "maybe type" "temp"
              (779824 'move' call_tmp[779821](387154 call tmp[387137] 0))
              const lo[387152] "dead at end of block" "const" "insert auto destroy"
              (644932 'init var' lo[387152] call_tmp[779821])
              unknown call_tmp[779826] "maybe param" "maybe type" "temp"
              (779829 'move' call_tmp[779826](387159 call tmp[387137] 1))
              const hi[387157] "dead at end of block" "const" "insert auto destroy"
              (644934 'init var' hi[387157] call_tmp[779826])
              (387162 'end of statement')
              unknown yret[601684] "YVV" "temp"
              unknown call_tmp[779831] "expr temp" "maybe param" "maybe type" "temp"
              (779834 'move' call_tmp[779831](387167 call chpl_build_bounded_range lo[387152] hi[387157]))
              unknown call_tmp[779836] "expr temp" "maybe param" "maybe type" "temp"
              (779839 'move' call_tmp[779836](387165 call _build_tuple call_tmp[779831]))
              (601687 'move' yret[601684](601686 'deref' call_tmp[779836]))
              (387163 yield yret[601684])
              (551184 'end of statement' lo[387152] hi[387157])
            }
            (387174 call _downEndCount _coforallCount[387171] nil[32])
            (387173 'coforall loop')
          }
          label _continueLabel[387184]
          _indexOfInterest[387179]
          _iterator[387180]
        }
        label _breakLabel[387185]
        Defer
        {
          {
            (387226 call _endCountFree _coforallCount[387171])
          }
        }
        (387231 call _waitEndCount _coforallCount[387171] 1 numTasks[387172])
      }
      {
        const _coforallCount[387243] "const" "end count" "temp"
        (387299 'move' _coforallCount[387243](387296 call _endCountAlloc 1))
        unknown _indexOfInterest[387251] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[387252] "expr temp" "temp"
        (387261 'move' _iterator[387252](387259 call _getIterator tmpIter[387126]))
        Defer
        {
          {
            (387276 call _freeIterator _iterator[387252])
          }
        }
        { scopeless type
          (387266 'move' _indexOfInterest[387251](387263 call iteratorIndex _iterator[387252]))
        }
        ForLoop[387253]
        {
          unknown chunk[100189] "coforall index var" "index var" "insert auto destroy"
          (551191 'end of statement')
          (387271 'move' chunk[100189] _indexOfInterest[387251])
          (551192 'end of statement' chunk[100189])
          (387283 call _upEndCount _coforallCount[387243] 1)
          (551194 'end of statement')
          {
            {
              unknown call_tmp[779841] "expr temp" "maybe param" "maybe type" "temp"
              (779844 'move' call_tmp[779841](100208 call - length[100148] 1))
              unknown call_tmp[779846] "maybe param" "maybe type" "temp"
              (779849 'move' call_tmp[779846](100204 call _computeBlock length[100148] numChunks[100169] chunk[100189] call_tmp[779841]))
              const tmp[100212] "dead at end of block" "const" "insert auto destroy" "temp"
              (644936 'init var' tmp[100212] call_tmp[779846])
              (100219 call _check_tuple_var_decl tmp[100212] 2)
              (551195 'end of statement')
              unknown call_tmp[779851] "maybe param" "maybe type" "temp"
              (779854 'move' call_tmp[779851](100213 call tmp[100212] 0))
              const lo[100199] "dead at end of block" "const" "insert auto destroy"
              (644938 'init var' lo[100199] call_tmp[779851])
              unknown call_tmp[779856] "maybe param" "maybe type" "temp"
              (779859 'move' call_tmp[779856](100216 call tmp[100212] 1))
              const hi[100201] "dead at end of block" "const" "insert auto destroy"
              (644940 'init var' hi[100201] call_tmp[779856])
              (100224 'end of statement')
              unknown yret[601690] "YVV" "temp"
              unknown call_tmp[779861] "expr temp" "maybe param" "maybe type" "temp"
              (779864 'move' call_tmp[779861](100229 call chpl_build_bounded_range lo[100199] hi[100201]))
              unknown call_tmp[779866] "expr temp" "maybe param" "maybe type" "temp"
              (779869 'move' call_tmp[779866](100231 call _build_tuple call_tmp[779861]))
              (601693 'move' yret[601690](601692 'deref' call_tmp[779866]))
              (100225 yield yret[601690])
              (551196 'end of statement' lo[100199] hi[100201])
            }
            (387246 call _downEndCount _coforallCount[387243] nil[32])
            (387245 'coforall loop')
          }
          label _continueLabel[387256]
          _indexOfInterest[387251]
          _iterator[387252]
        }
        label _breakLabel[387257]
        Defer
        {
          {
            (387287 call _endCountFree _coforallCount[387243])
          }
        }
        (387292 call _waitEndCount _coforallCount[387243] 1)
      }
    }
    (601682 return ret[601680])
  }
  where {
    (100111 call == tag[100106] leader[52138])
  }
  function _tuple[246](?).these[100237](arg _mt[100251]:_MT[201], ref arg this[100240]:_tuple[246](?) :
  _tuple[246](?), param arg tag[100244]:iterKind[52144], arg followThis[100248]:_tuple[246](?)) ref : _unknown[42] "iterator fn" "method" "reference to const when const this" "no return value for void"
  {
    unknown ret[601698] "RVV" "temp"
    unknown call_tmp[779873] "expr temp" "maybe param" "maybe type" "temp"
    (779876 'move' call_tmp[779873](100272 call size _mt[203] followThis[100248]))
    unknown call_tmp[779878] "expr temp" "maybe param" "maybe type" "temp"
    (779881 'move' call_tmp[779878](100269 call != call_tmp[779873] 1))
    unknown call_tmp[779883] "expr temp" "maybe param" "maybe type" "temp"
    (779886 'move' call_tmp[779883](100276 call _cond_test call_tmp[779878]))
    if call_tmp[779883]
    {
      (100264 call compilerError "Tuple zipped with incompatible iterator expression.")
    }
    unknown call_tmp[779888] "maybe param" "maybe type" "temp"
    (779891 'move' call_tmp[779888](100284 call followThis[100248] 0))
    unknown fThis[100282] "dead at end of block" "insert auto destroy"
    (644942 'init var' fThis[100282] call_tmp[779888])
    (100287 'end of statement')
    {
      unknown _indexOfInterest[100304] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[100305] "expr temp" "temp"
      (100314 'move' _iterator[100305](100312 call _getIterator fThis[100282]))
      Defer
      {
        {
          (100329 call _freeIterator _iterator[100305])
        }
      }
      { scopeless type
        (100319 'move' _indexOfInterest[100304](100316 call iteratorIndex _iterator[100305]))
      }
      ForLoop[100306] order-independent
      {
        unknown i[100288] "index var" "insert auto destroy"
        (551204 'end of statement')
        (100324 'move' i[100288] _indexOfInterest[100304])
        (551205 'end of statement' i[100288])
        {
          ref yret[601702] "YVV" "temp"
          unknown call_tmp[779893] "expr temp" "maybe param" "maybe type" "temp"
          (779896 'move' call_tmp[779893](100300 call this[100293] i[100288]))
          (601705 'move' yret[601702](601704 'addr of' call_tmp[779893]))
          (100298 yield yret[601702])
          (551207 'end of statement' this[100293] i[100288])
        }
        label _continueLabel[100309]
        _indexOfInterest[100304]
        _iterator[100305]
      }
      label _breakLabel[100310]
    }
    (601700 return ret[601698])
  }
  where {
    (100253 call == tag[100244] follower[52140])
  }
  function _tuple[246](?).indices[100339](arg _mt[100345]:_MT[201], arg this[100342]:_tuple[246](?) :
  _tuple[246](?)) : _unknown[42] "method" "no parens"
  {
    unknown ret[601710] "RVV" "temp"
    unknown call_tmp[779900] "expr temp" "maybe param" "maybe type" "temp"
    (779903 'move' call_tmp[779900](100351 call size _mt[203] this[100342]))
    unknown call_tmp[779905] "expr temp" "maybe param" "maybe type" "temp"
    (779908 'move' call_tmp[779905](100354 call chpl__nudgeHighBound call_tmp[779900]))
    unknown call_tmp[779910] "expr temp" "maybe param" "maybe type" "temp"
    (779913 'move' call_tmp[779910](100356 call chpl_build_bounded_range 0 call_tmp[779905]))
    (601715 'move' ret[601710](601714 'deref' call_tmp[779910]))
    (601712 return ret[601710])
  }
  function :[100360](arg x[100367]:_tuple[246](?), arg t[100373] :
  (100371 call complex(128)[111] 64)) : _unknown[42] "compiler added where" "inline" "operator"
  {
    unknown ret[601719] "RVV" "temp"
    function _chpl_complex64[100377](arg re[100382] :
    (100380 call real(64)[13] 32), arg im[100388] :
    (100386 call real(64)[13] 32)) : _unknown[42] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (100392 call complex(128)[111] 64)
    }
    unknown call_tmp[779915] "expr temp" "maybe param" "maybe type" "temp"
    (779918 'move' call_tmp[779915](100403 call x[100367] 0))
    unknown call_tmp[779920] "expr temp" "maybe param" "maybe type" "temp"
    (779923 'move' call_tmp[779920](100406 call real(64)[13] 32))
    unknown call_tmp[779925] "expr temp" "maybe param" "maybe type" "temp"
    (779928 'move' call_tmp[779925](100400 call : call_tmp[779915] call_tmp[779920]))
    unknown call_tmp[779930] "expr temp" "maybe param" "maybe type" "temp"
    (779933 'move' call_tmp[779930](100411 call x[100367] 1))
    unknown call_tmp[779935] "expr temp" "maybe param" "maybe type" "temp"
    (779938 'move' call_tmp[779935](100414 call real(64)[13] 32))
    unknown call_tmp[779940] "expr temp" "maybe param" "maybe type" "temp"
    (779943 'move' call_tmp[779940](100408 call : call_tmp[779930] call_tmp[779935]))
    unknown call_tmp[779945] "expr temp" "maybe param" "maybe type" "temp"
    (779948 'move' call_tmp[779945](100399 call _chpl_complex64 call_tmp[779925] call_tmp[779940]))
    (601724 'move' ret[601719](601723 'deref' call_tmp[779945]))
    (601721 return ret[601719])
  }
  where {
    unknown call_tmp[779950] "expr temp" "maybe param" "maybe type" "temp"
    (779953 'move' call_tmp[779950](520707 'query' x[100367] c"size"))
    unknown call_tmp[779955] "expr temp" "maybe param" "maybe type" "temp"
    (779958 'move' call_tmp[779955](520708 call == 2 call_tmp[779950]))
    (520712 call & 1 call_tmp[779955])
  }
  function :[100418](arg x[100425]:_tuple[246](?), arg t[100431] :
  (100429 call complex(128)[111] 128)) : _unknown[42] "compiler added where" "inline" "operator"
  {
    unknown ret[601728] "RVV" "temp"
    function _chpl_complex128[100435](arg re[100440] :
    (100438 call real(64)[13] 64), arg im[100446] :
    (100444 call real(64)[13] 64)) : _unknown[42] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      (100450 call complex(128)[111] 128)
    }
    unknown call_tmp[779960] "expr temp" "maybe param" "maybe type" "temp"
    (779963 'move' call_tmp[779960](100461 call x[100425] 0))
    unknown call_tmp[779965] "expr temp" "maybe param" "maybe type" "temp"
    (779968 'move' call_tmp[779965](100464 call real(64)[13] 64))
    unknown call_tmp[779970] "expr temp" "maybe param" "maybe type" "temp"
    (779973 'move' call_tmp[779970](100458 call : call_tmp[779960] call_tmp[779965]))
    unknown call_tmp[779975] "expr temp" "maybe param" "maybe type" "temp"
    (779978 'move' call_tmp[779975](100469 call x[100425] 1))
    unknown call_tmp[779980] "expr temp" "maybe param" "maybe type" "temp"
    (779983 'move' call_tmp[779980](100472 call real(64)[13] 64))
    unknown call_tmp[779985] "expr temp" "maybe param" "maybe type" "temp"
    (779988 'move' call_tmp[779985](100466 call : call_tmp[779975] call_tmp[779980]))
    unknown call_tmp[779990] "expr temp" "maybe param" "maybe type" "temp"
    (779993 'move' call_tmp[779990](100457 call _chpl_complex128 call_tmp[779970] call_tmp[779985]))
    (601733 'move' ret[601728](601732 'deref' call_tmp[779990]))
    (601730 return ret[601728])
  }
  where {
    unknown call_tmp[779995] "expr temp" "maybe param" "maybe type" "temp"
    (779998 'move' call_tmp[779995](520728 'query' x[100425] c"size"))
    unknown call_tmp[780000] "expr temp" "maybe param" "maybe type" "temp"
    (780003 'move' call_tmp[780000](520729 call == 2 call_tmp[779995]))
    (520733 call & 1 call_tmp[780000])
  }
  function :[100476](arg x[100479]:_tuple[246](?), arg t[100483]:_tuple[246](?)) : _unknown[42] "inline" "operator" "tuple cast fn" "unsafe" "no return value for void"
  {
    (601735 return _void[46])
  }
  function chpl__tupleRest[100489](arg t[100492]:_tuple[246](?)) : _unknown[42] "inline"
  {
    unknown ret[601748] "RVV" "temp"
    function chpl__tupleRestHelper[100496](arg first[100498]:_any[141](?), arg rest[100501]:_any[141](?) ...) : _unknown[42] "inline"
    {
      unknown ret[601739] "RVV" "temp"
      (601744 'move' ret[601739](601743 'deref' rest[100501]))
      (601741 return ret[601739])
    }
    unknown call_tmp[780005] "expr temp" "maybe param" "maybe type" "temp"
    (780008 'move' call_tmp[780005](100511 call chpl__tupleRestHelper(100513 'expand_tuple' t[100492])))
    (601753 'move' ret[601748](601752 'deref' call_tmp[780005]))
    (601750 return ret[601748])
  }
  function +[100516](arg a[100519]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601757] "RVV" "temp"
    unknown result[100524] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780010] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (780013 'move' call_tmp[780010](100526 'typeof' a[100519]))
    (644944 'default init var' result[100524] call_tmp[780010])
    (100528 'end of statement')
    {
      unknown d[100529] "dead at end of block" "index var" "insert auto destroy"
      (644946 'init var' d[100529] 0)
      (551215 'end of statement')
      unknown tmp[100552] "maybe param" "temp"
      unknown call_tmp[780017] "expr temp" "maybe param" "maybe type" "temp"
      (780020 'move' call_tmp[780017](100535 call size _mt[203] a[100519]))
      unknown call_tmp[780022] "expr temp" "maybe param" "maybe type" "temp"
      (780025 'move' call_tmp[780022](100532 call - call_tmp[780017] 1))
      (100564 'move' tmp[100552](100562 call chpl_compute_low_param_loop_bound 0 call_tmp[780022]))
      unknown tmp[100553] "maybe param" "temp"
      unknown call_tmp[780029] "expr temp" "maybe param" "maybe type" "temp"
      (780032 'move' call_tmp[780029](100571 call size _mt[203] a[100519]))
      unknown call_tmp[780034] "expr temp" "maybe param" "maybe type" "temp"
      (780037 'move' call_tmp[780034](100569 call - call_tmp[780029] 1))
      (100577 'move' tmp[100553](100575 call chpl_compute_high_param_loop_bound 0 call_tmp[780034]))
      unknown tmp[100554] "maybe param" "temp"
      (100580 'move' tmp[100554] 1)
      ParamForLoop[100582]
      { d[100529] tmp[100552] tmp[100553] tmp[100554]
        unknown call_tmp[780039] "expr temp" "maybe param" "maybe type" "temp"
        (780042 'move' call_tmp[780039](100544 call result[100524] d[100529]))
        unknown call_tmp[780044] "expr temp" "maybe param" "maybe type" "temp"
        (780047 'move' call_tmp[780044](100549 call a[100519] d[100529]))
        unknown call_tmp[780049] "expr temp" "maybe param" "maybe type" "temp"
        (780052 'move' call_tmp[780049](100546 call + call_tmp[780044]))
        (100541 call = call_tmp[780039] call_tmp[780049])
        (551216 'end of statement' result[100524] d[100529])
      }
      label _unused_continueLabel[100556]
      label _breakLabel[100555]
    }
    (601762 'move' ret[601757](601761 'deref' result[100524]))
    gotoReturn _end_+[601755] _end_+[601755]
    (551219 'end of statement' result[100524])
    label _end_+[601755]
    (601759 return ret[601757])
  }
  function -[100595](arg a[100598]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601768] "RVV" "temp"
    unknown result[100603] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780054] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (780057 'move' call_tmp[780054](100605 'typeof' a[100598]))
    (644948 'default init var' result[100603] call_tmp[780054])
    (100607 'end of statement')
    {
      unknown d[100608] "dead at end of block" "index var" "insert auto destroy"
      (644950 'init var' d[100608] 0)
      (551221 'end of statement')
      unknown tmp[100631] "maybe param" "temp"
      unknown call_tmp[780061] "expr temp" "maybe param" "maybe type" "temp"
      (780064 'move' call_tmp[780061](100614 call size _mt[203] a[100598]))
      unknown call_tmp[780066] "expr temp" "maybe param" "maybe type" "temp"
      (780069 'move' call_tmp[780066](100611 call - call_tmp[780061] 1))
      (100643 'move' tmp[100631](100641 call chpl_compute_low_param_loop_bound 0 call_tmp[780066]))
      unknown tmp[100632] "maybe param" "temp"
      unknown call_tmp[780073] "expr temp" "maybe param" "maybe type" "temp"
      (780076 'move' call_tmp[780073](100650 call size _mt[203] a[100598]))
      unknown call_tmp[780078] "expr temp" "maybe param" "maybe type" "temp"
      (780081 'move' call_tmp[780078](100648 call - call_tmp[780073] 1))
      (100656 'move' tmp[100632](100654 call chpl_compute_high_param_loop_bound 0 call_tmp[780078]))
      unknown tmp[100633] "maybe param" "temp"
      (100659 'move' tmp[100633] 1)
      ParamForLoop[100661]
      { d[100608] tmp[100631] tmp[100632] tmp[100633]
        unknown call_tmp[780083] "expr temp" "maybe param" "maybe type" "temp"
        (780086 'move' call_tmp[780083](100623 call result[100603] d[100608]))
        unknown call_tmp[780088] "expr temp" "maybe param" "maybe type" "temp"
        (780091 'move' call_tmp[780088](100628 call a[100598] d[100608]))
        unknown call_tmp[780093] "expr temp" "maybe param" "maybe type" "temp"
        (780096 'move' call_tmp[780093](100625 call - call_tmp[780088]))
        (100620 call = call_tmp[780083] call_tmp[780093])
        (551222 'end of statement' result[100603] d[100608])
      }
      label _unused_continueLabel[100635]
      label _breakLabel[100634]
    }
    (601773 'move' ret[601768](601772 'deref' result[100603]))
    gotoReturn _end_-[601766] _end_-[601766]
    (551225 'end of statement' result[100603])
    label _end_-[601766]
    (601770 return ret[601768])
  }
  function ~[100674](arg a[100677]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601779] "RVV" "temp"
    unknown result[100682] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780098] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (780101 'move' call_tmp[780098](100684 'typeof' a[100677]))
    (644952 'default init var' result[100682] call_tmp[780098])
    (100686 'end of statement')
    {
      unknown d[100687] "dead at end of block" "index var" "insert auto destroy"
      (644954 'init var' d[100687] 0)
      (551227 'end of statement')
      unknown tmp[100710] "maybe param" "temp"
      unknown call_tmp[780105] "expr temp" "maybe param" "maybe type" "temp"
      (780108 'move' call_tmp[780105](100693 call size _mt[203] a[100677]))
      unknown call_tmp[780110] "expr temp" "maybe param" "maybe type" "temp"
      (780113 'move' call_tmp[780110](100690 call - call_tmp[780105] 1))
      (100722 'move' tmp[100710](100720 call chpl_compute_low_param_loop_bound 0 call_tmp[780110]))
      unknown tmp[100711] "maybe param" "temp"
      unknown call_tmp[780117] "expr temp" "maybe param" "maybe type" "temp"
      (780120 'move' call_tmp[780117](100729 call size _mt[203] a[100677]))
      unknown call_tmp[780122] "expr temp" "maybe param" "maybe type" "temp"
      (780125 'move' call_tmp[780122](100727 call - call_tmp[780117] 1))
      (100735 'move' tmp[100711](100733 call chpl_compute_high_param_loop_bound 0 call_tmp[780122]))
      unknown tmp[100712] "maybe param" "temp"
      (100738 'move' tmp[100712] 1)
      ParamForLoop[100740]
      { d[100687] tmp[100710] tmp[100711] tmp[100712]
        unknown call_tmp[780127] "expr temp" "maybe param" "maybe type" "temp"
        (780130 'move' call_tmp[780127](100702 call result[100682] d[100687]))
        unknown call_tmp[780132] "expr temp" "maybe param" "maybe type" "temp"
        (780135 'move' call_tmp[780132](100707 call a[100677] d[100687]))
        unknown call_tmp[780137] "expr temp" "maybe param" "maybe type" "temp"
        (780140 'move' call_tmp[780137](100704 call ~ call_tmp[780132]))
        (100699 call = call_tmp[780127] call_tmp[780137])
        (551228 'end of statement' result[100682] d[100687])
      }
      label _unused_continueLabel[100714]
      label _breakLabel[100713]
    }
    (601784 'move' ret[601779](601783 'deref' result[100682]))
    gotoReturn _end_~[601777] _end_~[601777]
    (551231 'end of statement' result[100682])
    label _end_~[601777]
    (601781 return ret[601779])
  }
  function ![100753](arg a[100756]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601790] "RVV" "temp"
    unknown result[100761] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780142] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (780145 'move' call_tmp[780142](100763 'typeof' a[100756]))
    (644956 'default init var' result[100761] call_tmp[780142])
    (100765 'end of statement')
    {
      unknown d[100766] "dead at end of block" "index var" "insert auto destroy"
      (644958 'init var' d[100766] 0)
      (551233 'end of statement')
      unknown tmp[100789] "maybe param" "temp"
      unknown call_tmp[780149] "expr temp" "maybe param" "maybe type" "temp"
      (780152 'move' call_tmp[780149](100772 call size _mt[203] a[100756]))
      unknown call_tmp[780154] "expr temp" "maybe param" "maybe type" "temp"
      (780157 'move' call_tmp[780154](100769 call - call_tmp[780149] 1))
      (100801 'move' tmp[100789](100799 call chpl_compute_low_param_loop_bound 0 call_tmp[780154]))
      unknown tmp[100790] "maybe param" "temp"
      unknown call_tmp[780161] "expr temp" "maybe param" "maybe type" "temp"
      (780164 'move' call_tmp[780161](100808 call size _mt[203] a[100756]))
      unknown call_tmp[780166] "expr temp" "maybe param" "maybe type" "temp"
      (780169 'move' call_tmp[780166](100806 call - call_tmp[780161] 1))
      (100814 'move' tmp[100790](100812 call chpl_compute_high_param_loop_bound 0 call_tmp[780166]))
      unknown tmp[100791] "maybe param" "temp"
      (100817 'move' tmp[100791] 1)
      ParamForLoop[100819]
      { d[100766] tmp[100789] tmp[100790] tmp[100791]
        unknown call_tmp[780171] "expr temp" "maybe param" "maybe type" "temp"
        (780174 'move' call_tmp[780171](100781 call result[100761] d[100766]))
        unknown call_tmp[780176] "expr temp" "maybe param" "maybe type" "temp"
        (780179 'move' call_tmp[780176](100786 call a[100756] d[100766]))
        unknown call_tmp[780181] "expr temp" "maybe param" "maybe type" "temp"
        (780184 'move' call_tmp[780181](100783 call ! call_tmp[780176]))
        (100778 call = call_tmp[780171] call_tmp[780181])
        (551234 'end of statement' result[100761] d[100766])
      }
      label _unused_continueLabel[100793]
      label _breakLabel[100792]
    }
    (601795 'move' ret[601790](601794 'deref' result[100761]))
    gotoReturn _end_![601788] _end_![601788]
    (551237 'end of statement' result[100761])
    label _end_![601788]
    (601792 return ret[601790])
  }
  function max[100832](arg t[100834]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601801] "RVV" "temp"
    unknown result[100842] "dead at end of block" "insert auto destroy"
    (644960 'default init var' result[100842] t[100834])
    (100845 'end of statement')
    {
      unknown i[100846] "dead at end of block" "index var" "insert auto destroy"
      (644962 'init var' i[100846] 0)
      (551239 'end of statement')
      unknown tmp[100869] "maybe param" "temp"
      unknown call_tmp[780188] "expr temp" "maybe param" "maybe type" "temp"
      (780191 'move' call_tmp[780188](100852 call size _mt[203] result[100842]))
      unknown call_tmp[780193] "expr temp" "maybe param" "maybe type" "temp"
      (780196 'move' call_tmp[780193](100849 call - call_tmp[780188] 1))
      (100881 'move' tmp[100869](100879 call chpl_compute_low_param_loop_bound 0 call_tmp[780193]))
      unknown tmp[100870] "maybe param" "temp"
      unknown call_tmp[780200] "expr temp" "maybe param" "maybe type" "temp"
      (780203 'move' call_tmp[780200](100888 call size _mt[203] result[100842]))
      unknown call_tmp[780205] "expr temp" "maybe param" "maybe type" "temp"
      (780208 'move' call_tmp[780205](100886 call - call_tmp[780200] 1))
      (100894 'move' tmp[100870](100892 call chpl_compute_high_param_loop_bound 0 call_tmp[780205]))
      unknown tmp[100871] "maybe param" "temp"
      (100897 'move' tmp[100871] 1)
      ParamForLoop[100899]
      { i[100846] tmp[100869] tmp[100870] tmp[100871]
        {
          unknown call_tmp[780210] "expr temp" "maybe param" "maybe type" "temp"
          (780213 'move' call_tmp[780210](100862 call result[100842] i[100846]))
          unknown call_tmp[780215] "expr temp" "maybe param" "maybe type" "temp"
          (780218 'move' call_tmp[780215](100867 call t[100834] i[100846]))
          unknown call_tmp[780220] "expr temp" "maybe param" "maybe type" "temp"
          (780223 'move' call_tmp[780220](100865 call max call_tmp[780215]))
          (100859 call = call_tmp[780210] call_tmp[780220])
          (551240 'end of statement' result[100842] i[100846])
        }
      }
      label _unused_continueLabel[100873]
      label _breakLabel[100872]
    }
    (601807 'move' ret[601801](601806 'coerce' result[100842] t[100834]))
    gotoReturn _end_max[601799] _end_max[601799]
    (551243 'end of statement' result[100842])
    label _end_max[601799]
    (601803 return ret[601801])
  }
  where {
    (100838 call isTupleType t[100834])
  }
  { scopeless type
    t[100834]
  }
  function min[100914](arg t[100916]:_any[141](?)) : _unknown[42]
  {
    unknown ret[601813] "RVV" "temp"
    unknown result[100924] "dead at end of block" "insert auto destroy"
    (644964 'default init var' result[100924] t[100916])
    (100927 'end of statement')
    {
      unknown i[100928] "dead at end of block" "index var" "insert auto destroy"
      (644966 'init var' i[100928] 0)
      (551245 'end of statement')
      unknown tmp[100951] "maybe param" "temp"
      unknown call_tmp[780227] "expr temp" "maybe param" "maybe type" "temp"
      (780230 'move' call_tmp[780227](100934 call size _mt[203] result[100924]))
      unknown call_tmp[780232] "expr temp" "maybe param" "maybe type" "temp"
      (780235 'move' call_tmp[780232](100931 call - call_tmp[780227] 1))
      (100963 'move' tmp[100951](100961 call chpl_compute_low_param_loop_bound 0 call_tmp[780232]))
      unknown tmp[100952] "maybe param" "temp"
      unknown call_tmp[780239] "expr temp" "maybe param" "maybe type" "temp"
      (780242 'move' call_tmp[780239](100970 call size _mt[203] result[100924]))
      unknown call_tmp[780244] "expr temp" "maybe param" "maybe type" "temp"
      (780247 'move' call_tmp[780244](100968 call - call_tmp[780239] 1))
      (100976 'move' tmp[100952](100974 call chpl_compute_high_param_loop_bound 0 call_tmp[780244]))
      unknown tmp[100953] "maybe param" "temp"
      (100979 'move' tmp[100953] 1)
      ParamForLoop[100981]
      { i[100928] tmp[100951] tmp[100952] tmp[100953]
        {
          unknown call_tmp[780249] "expr temp" "maybe param" "maybe type" "temp"
          (780252 'move' call_tmp[780249](100944 call result[100924] i[100928]))
          unknown call_tmp[780254] "expr temp" "maybe param" "maybe type" "temp"
          (780257 'move' call_tmp[780254](100949 call t[100916] i[100928]))
          unknown call_tmp[780259] "expr temp" "maybe param" "maybe type" "temp"
          (780262 'move' call_tmp[780259](100947 call min call_tmp[780254]))
          (100941 call = call_tmp[780249] call_tmp[780259])
          (551246 'end of statement' result[100924] i[100928])
        }
      }
      label _unused_continueLabel[100955]
      label _breakLabel[100954]
    }
    (601819 'move' ret[601813](601818 'coerce' result[100924] t[100916]))
    gotoReturn _end_min[601811] _end_min[601811]
    (551249 'end of statement' result[100924])
    label _end_min[601811]
    (601815 return ret[601813])
  }
  where {
    (100920 call isTupleType t[100916])
  }
  { scopeless type
    t[100916]
  }
  function chpl_TwoHomogTuples[100996](arg t1[100998]:_any[141](?), arg t2[101000]:_any[141](?)) param : _unknown[42]
  {
    unknown ret[601825] "RVV" "param" "temp"
    unknown tmp[482856] "maybe param" "temp"
    (482867 'move' tmp[482856](101007 call isHomogeneousTuple t1[100998]))
    unknown call_tmp[780264] "expr temp" "maybe param" "maybe type" "temp"
    (780267 'move' call_tmp[780264](482869 call _cond_invalid tmp[482856]))
    if call_tmp[780264]
    {
      (482872 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670686] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670687] "maybe param" "temp"
    unknown call_tmp[780269] "expr temp" "maybe param" "maybe type" "temp"
    (780272 'move' call_tmp[780269](482857 call isTrue tmp[482856]))
    (670692 'move' tmp[670687](670690 call _cond_test call_tmp[780269]))
    if tmp[670687]
    {
      unknown tmp[670694] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[780274] "expr temp" "maybe param" "maybe type" "temp"
      (780277 'move' call_tmp[780274](101010 call isHomogeneousTuple t2[101000]))
      (670696 'move' tmp[670694](482860 call isTrue call_tmp[780274]))
      (670701 'move' tmp[670686](670698 '_paramFoldLogical' tmp[670687] tmp[670694]))
    }
    {
      (670706 'move' tmp[670686](670703 '_paramFoldLogical' tmp[670687] 0))
    }
    (601830 'move' ret[601825](601829 'deref' tmp[670686]))
    (601827 return ret[601825])
  }
  function +[101014](arg a[101017]:_tuple[246](?), arg b[101021]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601834] "RVV" "temp"
    unknown call_tmp[780281] "expr temp" "maybe param" "maybe type" "temp"
    (780284 'move' call_tmp[780281](101038 call size _mt[203] a[101017]))
    unknown call_tmp[780288] "expr temp" "maybe param" "maybe type" "temp"
    (780291 'move' call_tmp[780288](101042 call size _mt[203] b[101021]))
    unknown call_tmp[780293] "expr temp" "maybe param" "maybe type" "temp"
    (780296 'move' call_tmp[780293](101035 call != call_tmp[780281] call_tmp[780288]))
    unknown call_tmp[780298] "expr temp" "maybe param" "maybe type" "temp"
    (780301 'move' call_tmp[780298](101045 call _cond_test call_tmp[780293]))
    if call_tmp[780298]
    {
      (101030 call compilerError "tuple operands to + have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577177] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[780303] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780306 'move' call_tmp[780303](101061 call a[101017] 0))
      unknown call_tmp[780308] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780311 'move' call_tmp[780308](101064 call b[101021] 0))
      unknown call_tmp[780313] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780316 'move' call_tmp[780313](101058 call + call_tmp[780303] call_tmp[780308]))
      (577181 'move' call_type_tmp[577177](101066 'typeof' call_tmp[780313]))
    }
    unknown result[101051] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780320] "expr temp" "maybe param" "maybe type" "temp"
    (780323 'move' call_tmp[780320](101055 call size _mt[203] a[101017]))
    unknown call_tmp[780325] "expr temp" "maybe param" "maybe type" "temp"
    (780328 'move' call_tmp[780325](101052 call * call_tmp[780320] call_type_tmp[577177]))
    (644968 'default init var' result[101051] call_tmp[780325])
    (101068 'end of statement')
    {
      unknown d[101069] "dead at end of block" "index var" "insert auto destroy"
      (644970 'init var' d[101069] 0)
      (551254 'end of statement')
      unknown tmp[101095] "maybe param" "temp"
      unknown call_tmp[780332] "expr temp" "maybe param" "maybe type" "temp"
      (780335 'move' call_tmp[780332](101075 call size _mt[203] a[101017]))
      unknown call_tmp[780337] "expr temp" "maybe param" "maybe type" "temp"
      (780340 'move' call_tmp[780337](101072 call - call_tmp[780332] 1))
      (101107 'move' tmp[101095](101105 call chpl_compute_low_param_loop_bound 0 call_tmp[780337]))
      unknown tmp[101096] "maybe param" "temp"
      unknown call_tmp[780344] "expr temp" "maybe param" "maybe type" "temp"
      (780347 'move' call_tmp[780344](101114 call size _mt[203] a[101017]))
      unknown call_tmp[780349] "expr temp" "maybe param" "maybe type" "temp"
      (780352 'move' call_tmp[780349](101112 call - call_tmp[780344] 1))
      (101120 'move' tmp[101096](101118 call chpl_compute_high_param_loop_bound 0 call_tmp[780349]))
      unknown tmp[101097] "maybe param" "temp"
      (101123 'move' tmp[101097] 1)
      ParamForLoop[101125]
      { d[101069] tmp[101095] tmp[101096] tmp[101097]
        unknown call_tmp[780354] "expr temp" "maybe param" "maybe type" "temp"
        (780357 'move' call_tmp[780354](101084 call result[101051] d[101069]))
        unknown call_tmp[780359] "expr temp" "maybe param" "maybe type" "temp"
        (780362 'move' call_tmp[780359](101089 call a[101017] d[101069]))
        unknown call_tmp[780364] "expr temp" "maybe param" "maybe type" "temp"
        (780367 'move' call_tmp[780364](101092 call b[101021] d[101069]))
        unknown call_tmp[780369] "expr temp" "maybe param" "maybe type" "temp"
        (780372 'move' call_tmp[780369](101086 call + call_tmp[780359] call_tmp[780364]))
        (101081 call = call_tmp[780354] call_tmp[780369])
        (551255 'end of statement' result[101051] d[101069])
      }
      label _unused_continueLabel[101099]
      label _breakLabel[101098]
    }
    (601839 'move' ret[601834](601838 'deref' result[101051]))
    gotoReturn _end_+[601832] _end_+[601832]
    (551258 'end of statement' result[101051])
    label _end_+[601832]
    (601836 return ret[601834])
  }
  where {
    (101025 call chpl_TwoHomogTuples a[101017] b[101021])
  }
  function +[101139](arg a[101142]:_tuple[246](?), arg b[101146]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601845] "RVV" "temp"
    unknown call_tmp[780376] "expr temp" "maybe param" "maybe type" "temp"
    (780379 'move' call_tmp[780376](101157 call size _mt[203] a[101142]))
    unknown call_tmp[780383] "expr temp" "maybe param" "maybe type" "temp"
    (780386 'move' call_tmp[780383](101161 call size _mt[203] b[101146]))
    unknown call_tmp[780388] "expr temp" "maybe param" "maybe type" "temp"
    (780391 'move' call_tmp[780388](101154 call != call_tmp[780376] call_tmp[780383]))
    unknown call_tmp[780393] "expr temp" "maybe param" "maybe type" "temp"
    (780396 'move' call_tmp[780393](101164 call _cond_test call_tmp[780388]))
    if call_tmp[780393]
    {
      (101151 call compilerError "tuple operands to + have different sizes")
    }
    unknown call_tmp[780400] "expr temp" "maybe param" "maybe type" "temp"
    (780403 'move' call_tmp[780400](101207 call size _mt[203] a[101142]))
    unknown call_tmp[780405] "expr temp" "maybe param" "maybe type" "temp"
    (780408 'move' call_tmp[780405](101204 call == call_tmp[780400] 1))
    unknown call_tmp[780410] "expr temp" "maybe param" "maybe type" "temp"
    (780413 'move' call_tmp[780410](101211 call _cond_test call_tmp[780405]))
    if call_tmp[780410]
    {
      unknown call_tmp[780415] "expr temp" "maybe param" "maybe type" "temp"
      (780418 'move' call_tmp[780415](101174 call a[101142] 0))
      unknown call_tmp[780420] "expr temp" "maybe param" "maybe type" "temp"
      (780423 'move' call_tmp[780420](101177 call b[101146] 0))
      unknown call_tmp[780425] "expr temp" "maybe param" "maybe type" "temp"
      (780428 'move' call_tmp[780425](101171 call + call_tmp[780415] call_tmp[780420]))
      unknown call_tmp[780430] "expr temp" "maybe param" "maybe type" "temp"
      (780433 'move' call_tmp[780430](101179 call _build_tuple call_tmp[780425]))
      (601850 'move' ret[601845](601849 'deref' call_tmp[780430]))
      gotoReturn _end_+[601843] _end_+[601843]
    }
    {
      unknown call_tmp[780435] "expr temp" "maybe param" "maybe type" "temp"
      (780438 'move' call_tmp[780435](101187 call a[101142] 0))
      unknown call_tmp[780440] "expr temp" "maybe param" "maybe type" "temp"
      (780443 'move' call_tmp[780440](101190 call b[101146] 0))
      unknown call_tmp[780445] "expr temp" "maybe param" "maybe type" "temp"
      (780448 'move' call_tmp[780445](101184 call + call_tmp[780435] call_tmp[780440]))
      unknown call_tmp[780450] "expr temp" "maybe param" "maybe type" "temp"
      (780453 'move' call_tmp[780450](101195 call chpl__tupleRest a[101142]))
      unknown call_tmp[780455] "expr temp" "maybe param" "maybe type" "temp"
      (780458 'move' call_tmp[780455](101198 call chpl__tupleRest b[101146]))
      unknown call_tmp[780460] "expr temp" "maybe param" "maybe type" "temp"
      (780463 'move' call_tmp[780460](101192 call + call_tmp[780450] call_tmp[780455]))
      unknown call_tmp[780465] "expr temp" "maybe param" "maybe type" "temp"
      (780468 'move' call_tmp[780465](101201 call _build_tuple call_tmp[780445](101200 'expand_tuple' call_tmp[780460])))
      (601855 'move' ret[601845](601854 'deref' call_tmp[780465]))
      gotoReturn _end_+[601843] _end_+[601843]
    }
    label _end_+[601843]
    (601847 return ret[601845])
  }
  function -[101219](arg a[101222]:_tuple[246](?), arg b[101226]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601861] "RVV" "temp"
    unknown call_tmp[780472] "expr temp" "maybe param" "maybe type" "temp"
    (780475 'move' call_tmp[780472](101243 call size _mt[203] a[101222]))
    unknown call_tmp[780479] "expr temp" "maybe param" "maybe type" "temp"
    (780482 'move' call_tmp[780479](101247 call size _mt[203] b[101226]))
    unknown call_tmp[780484] "expr temp" "maybe param" "maybe type" "temp"
    (780487 'move' call_tmp[780484](101240 call != call_tmp[780472] call_tmp[780479]))
    unknown call_tmp[780489] "expr temp" "maybe param" "maybe type" "temp"
    (780492 'move' call_tmp[780489](101250 call _cond_test call_tmp[780484]))
    if call_tmp[780489]
    {
      (101235 call compilerError "tuple operands to - have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577183] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[780494] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780497 'move' call_tmp[780494](101266 call a[101222] 0))
      unknown call_tmp[780499] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780502 'move' call_tmp[780499](101269 call b[101226] 0))
      unknown call_tmp[780504] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780507 'move' call_tmp[780504](101263 call - call_tmp[780494] call_tmp[780499]))
      (577187 'move' call_type_tmp[577183](101271 'typeof' call_tmp[780504]))
    }
    unknown result[101256] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780511] "expr temp" "maybe param" "maybe type" "temp"
    (780514 'move' call_tmp[780511](101260 call size _mt[203] a[101222]))
    unknown call_tmp[780516] "expr temp" "maybe param" "maybe type" "temp"
    (780519 'move' call_tmp[780516](101257 call * call_tmp[780511] call_type_tmp[577183]))
    (644972 'default init var' result[101256] call_tmp[780516])
    (101273 'end of statement')
    {
      unknown d[101274] "dead at end of block" "index var" "insert auto destroy"
      (644974 'init var' d[101274] 0)
      (551264 'end of statement')
      unknown tmp[101300] "maybe param" "temp"
      unknown call_tmp[780523] "expr temp" "maybe param" "maybe type" "temp"
      (780526 'move' call_tmp[780523](101280 call size _mt[203] a[101222]))
      unknown call_tmp[780528] "expr temp" "maybe param" "maybe type" "temp"
      (780531 'move' call_tmp[780528](101277 call - call_tmp[780523] 1))
      (101312 'move' tmp[101300](101310 call chpl_compute_low_param_loop_bound 0 call_tmp[780528]))
      unknown tmp[101301] "maybe param" "temp"
      unknown call_tmp[780535] "expr temp" "maybe param" "maybe type" "temp"
      (780538 'move' call_tmp[780535](101319 call size _mt[203] a[101222]))
      unknown call_tmp[780540] "expr temp" "maybe param" "maybe type" "temp"
      (780543 'move' call_tmp[780540](101317 call - call_tmp[780535] 1))
      (101325 'move' tmp[101301](101323 call chpl_compute_high_param_loop_bound 0 call_tmp[780540]))
      unknown tmp[101302] "maybe param" "temp"
      (101328 'move' tmp[101302] 1)
      ParamForLoop[101330]
      { d[101274] tmp[101300] tmp[101301] tmp[101302]
        unknown call_tmp[780545] "expr temp" "maybe param" "maybe type" "temp"
        (780548 'move' call_tmp[780545](101289 call result[101256] d[101274]))
        unknown call_tmp[780550] "expr temp" "maybe param" "maybe type" "temp"
        (780553 'move' call_tmp[780550](101294 call a[101222] d[101274]))
        unknown call_tmp[780555] "expr temp" "maybe param" "maybe type" "temp"
        (780558 'move' call_tmp[780555](101297 call b[101226] d[101274]))
        unknown call_tmp[780560] "expr temp" "maybe param" "maybe type" "temp"
        (780563 'move' call_tmp[780560](101291 call - call_tmp[780550] call_tmp[780555]))
        (101286 call = call_tmp[780545] call_tmp[780560])
        (551265 'end of statement' result[101256] d[101274])
      }
      label _unused_continueLabel[101304]
      label _breakLabel[101303]
    }
    (601866 'move' ret[601861](601865 'deref' result[101256]))
    gotoReturn _end_-[601859] _end_-[601859]
    (551268 'end of statement' result[101256])
    label _end_-[601859]
    (601863 return ret[601861])
  }
  where {
    (101230 call chpl_TwoHomogTuples a[101222] b[101226])
  }
  function -[101344](arg a[101347]:_tuple[246](?), arg b[101351]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601872] "RVV" "temp"
    unknown call_tmp[780567] "expr temp" "maybe param" "maybe type" "temp"
    (780570 'move' call_tmp[780567](101362 call size _mt[203] a[101347]))
    unknown call_tmp[780574] "expr temp" "maybe param" "maybe type" "temp"
    (780577 'move' call_tmp[780574](101366 call size _mt[203] b[101351]))
    unknown call_tmp[780579] "expr temp" "maybe param" "maybe type" "temp"
    (780582 'move' call_tmp[780579](101359 call != call_tmp[780567] call_tmp[780574]))
    unknown call_tmp[780584] "expr temp" "maybe param" "maybe type" "temp"
    (780587 'move' call_tmp[780584](101369 call _cond_test call_tmp[780579]))
    if call_tmp[780584]
    {
      (101356 call compilerError "tuple operands to - have different sizes")
    }
    unknown call_tmp[780591] "expr temp" "maybe param" "maybe type" "temp"
    (780594 'move' call_tmp[780591](101412 call size _mt[203] a[101347]))
    unknown call_tmp[780596] "expr temp" "maybe param" "maybe type" "temp"
    (780599 'move' call_tmp[780596](101409 call == call_tmp[780591] 1))
    unknown call_tmp[780601] "expr temp" "maybe param" "maybe type" "temp"
    (780604 'move' call_tmp[780601](101416 call _cond_test call_tmp[780596]))
    if call_tmp[780601]
    {
      unknown call_tmp[780606] "expr temp" "maybe param" "maybe type" "temp"
      (780609 'move' call_tmp[780606](101379 call a[101347] 0))
      unknown call_tmp[780611] "expr temp" "maybe param" "maybe type" "temp"
      (780614 'move' call_tmp[780611](101382 call b[101351] 0))
      unknown call_tmp[780616] "expr temp" "maybe param" "maybe type" "temp"
      (780619 'move' call_tmp[780616](101376 call - call_tmp[780606] call_tmp[780611]))
      unknown call_tmp[780621] "expr temp" "maybe param" "maybe type" "temp"
      (780624 'move' call_tmp[780621](101384 call _build_tuple call_tmp[780616]))
      (601877 'move' ret[601872](601876 'deref' call_tmp[780621]))
      gotoReturn _end_-[601870] _end_-[601870]
    }
    {
      unknown call_tmp[780626] "expr temp" "maybe param" "maybe type" "temp"
      (780629 'move' call_tmp[780626](101392 call a[101347] 0))
      unknown call_tmp[780631] "expr temp" "maybe param" "maybe type" "temp"
      (780634 'move' call_tmp[780631](101395 call b[101351] 0))
      unknown call_tmp[780636] "expr temp" "maybe param" "maybe type" "temp"
      (780639 'move' call_tmp[780636](101389 call - call_tmp[780626] call_tmp[780631]))
      unknown call_tmp[780641] "expr temp" "maybe param" "maybe type" "temp"
      (780644 'move' call_tmp[780641](101400 call chpl__tupleRest a[101347]))
      unknown call_tmp[780646] "expr temp" "maybe param" "maybe type" "temp"
      (780649 'move' call_tmp[780646](101403 call chpl__tupleRest b[101351]))
      unknown call_tmp[780651] "expr temp" "maybe param" "maybe type" "temp"
      (780654 'move' call_tmp[780651](101397 call - call_tmp[780641] call_tmp[780646]))
      unknown call_tmp[780656] "expr temp" "maybe param" "maybe type" "temp"
      (780659 'move' call_tmp[780656](101406 call _build_tuple call_tmp[780636](101405 'expand_tuple' call_tmp[780651])))
      (601882 'move' ret[601872](601881 'deref' call_tmp[780656]))
      gotoReturn _end_-[601870] _end_-[601870]
    }
    label _end_-[601870]
    (601874 return ret[601872])
  }
  function *[101424](arg a[101427]:_tuple[246](?), arg b[101431]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601888] "RVV" "temp"
    unknown call_tmp[780663] "expr temp" "maybe param" "maybe type" "temp"
    (780666 'move' call_tmp[780663](101448 call size _mt[203] a[101427]))
    unknown call_tmp[780670] "expr temp" "maybe param" "maybe type" "temp"
    (780673 'move' call_tmp[780670](101452 call size _mt[203] b[101431]))
    unknown call_tmp[780675] "expr temp" "maybe param" "maybe type" "temp"
    (780678 'move' call_tmp[780675](101445 call != call_tmp[780663] call_tmp[780670]))
    unknown call_tmp[780680] "expr temp" "maybe param" "maybe type" "temp"
    (780683 'move' call_tmp[780680](101455 call _cond_test call_tmp[780675]))
    if call_tmp[780680]
    {
      (101440 call compilerError "tuple operands to * have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577189] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[780685] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780688 'move' call_tmp[780685](101471 call a[101427] 0))
      unknown call_tmp[780690] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780693 'move' call_tmp[780690](101474 call b[101431] 0))
      unknown call_tmp[780695] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780698 'move' call_tmp[780695](101468 call * call_tmp[780685] call_tmp[780690]))
      (577193 'move' call_type_tmp[577189](101476 'typeof' call_tmp[780695]))
    }
    unknown result[101461] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780702] "expr temp" "maybe param" "maybe type" "temp"
    (780705 'move' call_tmp[780702](101465 call size _mt[203] a[101427]))
    unknown call_tmp[780707] "expr temp" "maybe param" "maybe type" "temp"
    (780710 'move' call_tmp[780707](101462 call * call_tmp[780702] call_type_tmp[577189]))
    (644976 'default init var' result[101461] call_tmp[780707])
    (101478 'end of statement')
    {
      unknown d[101479] "dead at end of block" "index var" "insert auto destroy"
      (644978 'init var' d[101479] 0)
      (551274 'end of statement')
      unknown tmp[101505] "maybe param" "temp"
      unknown call_tmp[780714] "expr temp" "maybe param" "maybe type" "temp"
      (780717 'move' call_tmp[780714](101485 call size _mt[203] a[101427]))
      unknown call_tmp[780719] "expr temp" "maybe param" "maybe type" "temp"
      (780722 'move' call_tmp[780719](101482 call - call_tmp[780714] 1))
      (101517 'move' tmp[101505](101515 call chpl_compute_low_param_loop_bound 0 call_tmp[780719]))
      unknown tmp[101506] "maybe param" "temp"
      unknown call_tmp[780726] "expr temp" "maybe param" "maybe type" "temp"
      (780729 'move' call_tmp[780726](101524 call size _mt[203] a[101427]))
      unknown call_tmp[780731] "expr temp" "maybe param" "maybe type" "temp"
      (780734 'move' call_tmp[780731](101522 call - call_tmp[780726] 1))
      (101530 'move' tmp[101506](101528 call chpl_compute_high_param_loop_bound 0 call_tmp[780731]))
      unknown tmp[101507] "maybe param" "temp"
      (101533 'move' tmp[101507] 1)
      ParamForLoop[101535]
      { d[101479] tmp[101505] tmp[101506] tmp[101507]
        unknown call_tmp[780736] "expr temp" "maybe param" "maybe type" "temp"
        (780739 'move' call_tmp[780736](101494 call result[101461] d[101479]))
        unknown call_tmp[780741] "expr temp" "maybe param" "maybe type" "temp"
        (780744 'move' call_tmp[780741](101499 call a[101427] d[101479]))
        unknown call_tmp[780746] "expr temp" "maybe param" "maybe type" "temp"
        (780749 'move' call_tmp[780746](101502 call b[101431] d[101479]))
        unknown call_tmp[780751] "expr temp" "maybe param" "maybe type" "temp"
        (780754 'move' call_tmp[780751](101496 call * call_tmp[780741] call_tmp[780746]))
        (101491 call = call_tmp[780736] call_tmp[780751])
        (551275 'end of statement' result[101461] d[101479])
      }
      label _unused_continueLabel[101509]
      label _breakLabel[101508]
    }
    (601893 'move' ret[601888](601892 'deref' result[101461]))
    gotoReturn _end_*[601886] _end_*[601886]
    (551278 'end of statement' result[101461])
    label _end_*[601886]
    (601890 return ret[601888])
  }
  where {
    (101435 call chpl_TwoHomogTuples a[101427] b[101431])
  }
  function *[101549](arg a[101552]:_tuple[246](?), arg b[101556]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601899] "RVV" "temp"
    unknown call_tmp[780758] "expr temp" "maybe param" "maybe type" "temp"
    (780761 'move' call_tmp[780758](101567 call size _mt[203] a[101552]))
    unknown call_tmp[780765] "expr temp" "maybe param" "maybe type" "temp"
    (780768 'move' call_tmp[780765](101571 call size _mt[203] b[101556]))
    unknown call_tmp[780770] "expr temp" "maybe param" "maybe type" "temp"
    (780773 'move' call_tmp[780770](101564 call != call_tmp[780758] call_tmp[780765]))
    unknown call_tmp[780775] "expr temp" "maybe param" "maybe type" "temp"
    (780778 'move' call_tmp[780775](101574 call _cond_test call_tmp[780770]))
    if call_tmp[780775]
    {
      (101561 call compilerError "tuple operands to * have different sizes")
    }
    unknown call_tmp[780782] "expr temp" "maybe param" "maybe type" "temp"
    (780785 'move' call_tmp[780782](101617 call size _mt[203] a[101552]))
    unknown call_tmp[780787] "expr temp" "maybe param" "maybe type" "temp"
    (780790 'move' call_tmp[780787](101614 call == call_tmp[780782] 1))
    unknown call_tmp[780792] "expr temp" "maybe param" "maybe type" "temp"
    (780795 'move' call_tmp[780792](101621 call _cond_test call_tmp[780787]))
    if call_tmp[780792]
    {
      unknown call_tmp[780797] "expr temp" "maybe param" "maybe type" "temp"
      (780800 'move' call_tmp[780797](101584 call a[101552] 0))
      unknown call_tmp[780802] "expr temp" "maybe param" "maybe type" "temp"
      (780805 'move' call_tmp[780802](101587 call b[101556] 0))
      unknown call_tmp[780807] "expr temp" "maybe param" "maybe type" "temp"
      (780810 'move' call_tmp[780807](101581 call * call_tmp[780797] call_tmp[780802]))
      unknown call_tmp[780812] "expr temp" "maybe param" "maybe type" "temp"
      (780815 'move' call_tmp[780812](101589 call _build_tuple call_tmp[780807]))
      (601904 'move' ret[601899](601903 'deref' call_tmp[780812]))
      gotoReturn _end_*[601897] _end_*[601897]
    }
    {
      unknown call_tmp[780817] "expr temp" "maybe param" "maybe type" "temp"
      (780820 'move' call_tmp[780817](101597 call a[101552] 0))
      unknown call_tmp[780822] "expr temp" "maybe param" "maybe type" "temp"
      (780825 'move' call_tmp[780822](101600 call b[101556] 0))
      unknown call_tmp[780827] "expr temp" "maybe param" "maybe type" "temp"
      (780830 'move' call_tmp[780827](101594 call * call_tmp[780817] call_tmp[780822]))
      unknown call_tmp[780832] "expr temp" "maybe param" "maybe type" "temp"
      (780835 'move' call_tmp[780832](101605 call chpl__tupleRest a[101552]))
      unknown call_tmp[780837] "expr temp" "maybe param" "maybe type" "temp"
      (780840 'move' call_tmp[780837](101608 call chpl__tupleRest b[101556]))
      unknown call_tmp[780842] "expr temp" "maybe param" "maybe type" "temp"
      (780845 'move' call_tmp[780842](101602 call * call_tmp[780832] call_tmp[780837]))
      unknown call_tmp[780847] "expr temp" "maybe param" "maybe type" "temp"
      (780850 'move' call_tmp[780847](101611 call _build_tuple call_tmp[780827](101610 'expand_tuple' call_tmp[780842])))
      (601909 'move' ret[601899](601908 'deref' call_tmp[780847]))
      gotoReturn _end_*[601897] _end_*[601897]
    }
    label _end_*[601897]
    (601901 return ret[601899])
  }
  function /[101629](arg a[101632]:_tuple[246](?), arg b[101636]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601915] "RVV" "temp"
    unknown call_tmp[780854] "expr temp" "maybe param" "maybe type" "temp"
    (780857 'move' call_tmp[780854](101653 call size _mt[203] a[101632]))
    unknown call_tmp[780861] "expr temp" "maybe param" "maybe type" "temp"
    (780864 'move' call_tmp[780861](101657 call size _mt[203] b[101636]))
    unknown call_tmp[780866] "expr temp" "maybe param" "maybe type" "temp"
    (780869 'move' call_tmp[780866](101650 call != call_tmp[780854] call_tmp[780861]))
    unknown call_tmp[780871] "expr temp" "maybe param" "maybe type" "temp"
    (780874 'move' call_tmp[780871](101660 call _cond_test call_tmp[780866]))
    if call_tmp[780871]
    {
      (101645 call compilerError "tuple operands to / have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577195] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[780876] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780879 'move' call_tmp[780876](101676 call a[101632] 0))
      unknown call_tmp[780881] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780884 'move' call_tmp[780881](101679 call b[101636] 0))
      unknown call_tmp[780886] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (780889 'move' call_tmp[780886](101673 call / call_tmp[780876] call_tmp[780881]))
      (577199 'move' call_type_tmp[577195](101681 'typeof' call_tmp[780886]))
    }
    unknown result[101666] "dead at end of block" "insert auto destroy"
    unknown call_tmp[780893] "expr temp" "maybe param" "maybe type" "temp"
    (780896 'move' call_tmp[780893](101670 call size _mt[203] a[101632]))
    unknown call_tmp[780898] "expr temp" "maybe param" "maybe type" "temp"
    (780901 'move' call_tmp[780898](101667 call * call_tmp[780893] call_type_tmp[577195]))
    (644980 'default init var' result[101666] call_tmp[780898])
    (101683 'end of statement')
    {
      unknown d[101684] "dead at end of block" "index var" "insert auto destroy"
      (644982 'init var' d[101684] 0)
      (551284 'end of statement')
      unknown tmp[101710] "maybe param" "temp"
      unknown call_tmp[780905] "expr temp" "maybe param" "maybe type" "temp"
      (780908 'move' call_tmp[780905](101690 call size _mt[203] a[101632]))
      unknown call_tmp[780910] "expr temp" "maybe param" "maybe type" "temp"
      (780913 'move' call_tmp[780910](101687 call - call_tmp[780905] 1))
      (101722 'move' tmp[101710](101720 call chpl_compute_low_param_loop_bound 0 call_tmp[780910]))
      unknown tmp[101711] "maybe param" "temp"
      unknown call_tmp[780917] "expr temp" "maybe param" "maybe type" "temp"
      (780920 'move' call_tmp[780917](101729 call size _mt[203] a[101632]))
      unknown call_tmp[780922] "expr temp" "maybe param" "maybe type" "temp"
      (780925 'move' call_tmp[780922](101727 call - call_tmp[780917] 1))
      (101735 'move' tmp[101711](101733 call chpl_compute_high_param_loop_bound 0 call_tmp[780922]))
      unknown tmp[101712] "maybe param" "temp"
      (101738 'move' tmp[101712] 1)
      ParamForLoop[101740]
      { d[101684] tmp[101710] tmp[101711] tmp[101712]
        unknown call_tmp[780927] "expr temp" "maybe param" "maybe type" "temp"
        (780930 'move' call_tmp[780927](101699 call result[101666] d[101684]))
        unknown call_tmp[780932] "expr temp" "maybe param" "maybe type" "temp"
        (780935 'move' call_tmp[780932](101704 call a[101632] d[101684]))
        unknown call_tmp[780937] "expr temp" "maybe param" "maybe type" "temp"
        (780940 'move' call_tmp[780937](101707 call b[101636] d[101684]))
        unknown call_tmp[780942] "expr temp" "maybe param" "maybe type" "temp"
        (780945 'move' call_tmp[780942](101701 call / call_tmp[780932] call_tmp[780937]))
        (101696 call = call_tmp[780927] call_tmp[780942])
        (551285 'end of statement' result[101666] d[101684])
      }
      label _unused_continueLabel[101714]
      label _breakLabel[101713]
    }
    (601920 'move' ret[601915](601919 'deref' result[101666]))
    gotoReturn _end_/[601913] _end_/[601913]
    (551288 'end of statement' result[101666])
    label _end_/[601913]
    (601917 return ret[601915])
  }
  where {
    (101640 call chpl_TwoHomogTuples a[101632] b[101636])
  }
  function /[101754](arg a[101757]:_tuple[246](?), arg b[101761]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601926] "RVV" "temp"
    unknown call_tmp[780949] "expr temp" "maybe param" "maybe type" "temp"
    (780952 'move' call_tmp[780949](101772 call size _mt[203] a[101757]))
    unknown call_tmp[780956] "expr temp" "maybe param" "maybe type" "temp"
    (780959 'move' call_tmp[780956](101776 call size _mt[203] b[101761]))
    unknown call_tmp[780961] "expr temp" "maybe param" "maybe type" "temp"
    (780964 'move' call_tmp[780961](101769 call != call_tmp[780949] call_tmp[780956]))
    unknown call_tmp[780966] "expr temp" "maybe param" "maybe type" "temp"
    (780969 'move' call_tmp[780966](101779 call _cond_test call_tmp[780961]))
    if call_tmp[780966]
    {
      (101766 call compilerError "tuple operands to / have different sizes")
    }
    unknown call_tmp[780973] "expr temp" "maybe param" "maybe type" "temp"
    (780976 'move' call_tmp[780973](101822 call size _mt[203] a[101757]))
    unknown call_tmp[780978] "expr temp" "maybe param" "maybe type" "temp"
    (780981 'move' call_tmp[780978](101819 call == call_tmp[780973] 1))
    unknown call_tmp[780983] "expr temp" "maybe param" "maybe type" "temp"
    (780986 'move' call_tmp[780983](101826 call _cond_test call_tmp[780978]))
    if call_tmp[780983]
    {
      unknown call_tmp[780988] "expr temp" "maybe param" "maybe type" "temp"
      (780991 'move' call_tmp[780988](101789 call a[101757] 0))
      unknown call_tmp[780993] "expr temp" "maybe param" "maybe type" "temp"
      (780996 'move' call_tmp[780993](101792 call b[101761] 0))
      unknown call_tmp[780998] "expr temp" "maybe param" "maybe type" "temp"
      (781001 'move' call_tmp[780998](101786 call / call_tmp[780988] call_tmp[780993]))
      unknown call_tmp[781003] "expr temp" "maybe param" "maybe type" "temp"
      (781006 'move' call_tmp[781003](101794 call _build_tuple call_tmp[780998]))
      (601931 'move' ret[601926](601930 'deref' call_tmp[781003]))
      gotoReturn _end_/[601924] _end_/[601924]
    }
    {
      unknown call_tmp[781008] "expr temp" "maybe param" "maybe type" "temp"
      (781011 'move' call_tmp[781008](101802 call a[101757] 0))
      unknown call_tmp[781013] "expr temp" "maybe param" "maybe type" "temp"
      (781016 'move' call_tmp[781013](101805 call b[101761] 0))
      unknown call_tmp[781018] "expr temp" "maybe param" "maybe type" "temp"
      (781021 'move' call_tmp[781018](101799 call / call_tmp[781008] call_tmp[781013]))
      unknown call_tmp[781023] "expr temp" "maybe param" "maybe type" "temp"
      (781026 'move' call_tmp[781023](101810 call chpl__tupleRest a[101757]))
      unknown call_tmp[781028] "expr temp" "maybe param" "maybe type" "temp"
      (781031 'move' call_tmp[781028](101813 call chpl__tupleRest b[101761]))
      unknown call_tmp[781033] "expr temp" "maybe param" "maybe type" "temp"
      (781036 'move' call_tmp[781033](101807 call / call_tmp[781023] call_tmp[781028]))
      unknown call_tmp[781038] "expr temp" "maybe param" "maybe type" "temp"
      (781041 'move' call_tmp[781038](101816 call _build_tuple call_tmp[781018](101815 'expand_tuple' call_tmp[781033])))
      (601936 'move' ret[601926](601935 'deref' call_tmp[781038]))
      gotoReturn _end_/[601924] _end_/[601924]
    }
    label _end_/[601924]
    (601928 return ret[601926])
  }
  function %[101834](arg a[101837]:_tuple[246](?), arg b[101841]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601942] "RVV" "temp"
    unknown call_tmp[781045] "expr temp" "maybe param" "maybe type" "temp"
    (781048 'move' call_tmp[781045](101858 call size _mt[203] a[101837]))
    unknown call_tmp[781052] "expr temp" "maybe param" "maybe type" "temp"
    (781055 'move' call_tmp[781052](101862 call size _mt[203] b[101841]))
    unknown call_tmp[781057] "expr temp" "maybe param" "maybe type" "temp"
    (781060 'move' call_tmp[781057](101855 call != call_tmp[781045] call_tmp[781052]))
    unknown call_tmp[781062] "expr temp" "maybe param" "maybe type" "temp"
    (781065 'move' call_tmp[781062](101865 call _cond_test call_tmp[781057]))
    if call_tmp[781062]
    {
      (101850 call compilerError "tuple operands to % have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577201] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[781067] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781070 'move' call_tmp[781067](101881 call a[101837] 0))
      unknown call_tmp[781072] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781075 'move' call_tmp[781072](101884 call b[101841] 0))
      unknown call_tmp[781077] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781080 'move' call_tmp[781077](101878 call % call_tmp[781067] call_tmp[781072]))
      (577205 'move' call_type_tmp[577201](101886 'typeof' call_tmp[781077]))
    }
    unknown result[101871] "dead at end of block" "insert auto destroy"
    unknown call_tmp[781084] "expr temp" "maybe param" "maybe type" "temp"
    (781087 'move' call_tmp[781084](101875 call size _mt[203] a[101837]))
    unknown call_tmp[781089] "expr temp" "maybe param" "maybe type" "temp"
    (781092 'move' call_tmp[781089](101872 call * call_tmp[781084] call_type_tmp[577201]))
    (644984 'default init var' result[101871] call_tmp[781089])
    (101888 'end of statement')
    {
      unknown d[101889] "dead at end of block" "index var" "insert auto destroy"
      (644986 'init var' d[101889] 0)
      (551294 'end of statement')
      unknown tmp[101915] "maybe param" "temp"
      unknown call_tmp[781096] "expr temp" "maybe param" "maybe type" "temp"
      (781099 'move' call_tmp[781096](101895 call size _mt[203] a[101837]))
      unknown call_tmp[781101] "expr temp" "maybe param" "maybe type" "temp"
      (781104 'move' call_tmp[781101](101892 call - call_tmp[781096] 1))
      (101927 'move' tmp[101915](101925 call chpl_compute_low_param_loop_bound 0 call_tmp[781101]))
      unknown tmp[101916] "maybe param" "temp"
      unknown call_tmp[781108] "expr temp" "maybe param" "maybe type" "temp"
      (781111 'move' call_tmp[781108](101934 call size _mt[203] a[101837]))
      unknown call_tmp[781113] "expr temp" "maybe param" "maybe type" "temp"
      (781116 'move' call_tmp[781113](101932 call - call_tmp[781108] 1))
      (101940 'move' tmp[101916](101938 call chpl_compute_high_param_loop_bound 0 call_tmp[781113]))
      unknown tmp[101917] "maybe param" "temp"
      (101943 'move' tmp[101917] 1)
      ParamForLoop[101945]
      { d[101889] tmp[101915] tmp[101916] tmp[101917]
        unknown call_tmp[781118] "expr temp" "maybe param" "maybe type" "temp"
        (781121 'move' call_tmp[781118](101904 call result[101871] d[101889]))
        unknown call_tmp[781123] "expr temp" "maybe param" "maybe type" "temp"
        (781126 'move' call_tmp[781123](101909 call a[101837] d[101889]))
        unknown call_tmp[781128] "expr temp" "maybe param" "maybe type" "temp"
        (781131 'move' call_tmp[781128](101912 call b[101841] d[101889]))
        unknown call_tmp[781133] "expr temp" "maybe param" "maybe type" "temp"
        (781136 'move' call_tmp[781133](101906 call % call_tmp[781123] call_tmp[781128]))
        (101901 call = call_tmp[781118] call_tmp[781133])
        (551295 'end of statement' result[101871] d[101889])
      }
      label _unused_continueLabel[101919]
      label _breakLabel[101918]
    }
    (601947 'move' ret[601942](601946 'deref' result[101871]))
    gotoReturn _end_%[601940] _end_%[601940]
    (551298 'end of statement' result[101871])
    label _end_%[601940]
    (601944 return ret[601942])
  }
  where {
    (101845 call chpl_TwoHomogTuples a[101837] b[101841])
  }
  function %[101959](arg a[101962]:_tuple[246](?), arg b[101966]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601953] "RVV" "temp"
    unknown call_tmp[781140] "expr temp" "maybe param" "maybe type" "temp"
    (781143 'move' call_tmp[781140](101977 call size _mt[203] a[101962]))
    unknown call_tmp[781147] "expr temp" "maybe param" "maybe type" "temp"
    (781150 'move' call_tmp[781147](101981 call size _mt[203] b[101966]))
    unknown call_tmp[781152] "expr temp" "maybe param" "maybe type" "temp"
    (781155 'move' call_tmp[781152](101974 call != call_tmp[781140] call_tmp[781147]))
    unknown call_tmp[781157] "expr temp" "maybe param" "maybe type" "temp"
    (781160 'move' call_tmp[781157](101984 call _cond_test call_tmp[781152]))
    if call_tmp[781157]
    {
      (101971 call compilerError "tuple operands to % have different sizes")
    }
    unknown call_tmp[781164] "expr temp" "maybe param" "maybe type" "temp"
    (781167 'move' call_tmp[781164](102027 call size _mt[203] a[101962]))
    unknown call_tmp[781169] "expr temp" "maybe param" "maybe type" "temp"
    (781172 'move' call_tmp[781169](102024 call == call_tmp[781164] 1))
    unknown call_tmp[781174] "expr temp" "maybe param" "maybe type" "temp"
    (781177 'move' call_tmp[781174](102031 call _cond_test call_tmp[781169]))
    if call_tmp[781174]
    {
      unknown call_tmp[781179] "expr temp" "maybe param" "maybe type" "temp"
      (781182 'move' call_tmp[781179](101994 call a[101962] 0))
      unknown call_tmp[781184] "expr temp" "maybe param" "maybe type" "temp"
      (781187 'move' call_tmp[781184](101997 call b[101966] 0))
      unknown call_tmp[781189] "expr temp" "maybe param" "maybe type" "temp"
      (781192 'move' call_tmp[781189](101991 call % call_tmp[781179] call_tmp[781184]))
      unknown call_tmp[781194] "expr temp" "maybe param" "maybe type" "temp"
      (781197 'move' call_tmp[781194](101999 call _build_tuple call_tmp[781189]))
      (601958 'move' ret[601953](601957 'deref' call_tmp[781194]))
      gotoReturn _end_%[601951] _end_%[601951]
    }
    {
      unknown call_tmp[781199] "expr temp" "maybe param" "maybe type" "temp"
      (781202 'move' call_tmp[781199](102007 call a[101962] 0))
      unknown call_tmp[781204] "expr temp" "maybe param" "maybe type" "temp"
      (781207 'move' call_tmp[781204](102010 call b[101966] 0))
      unknown call_tmp[781209] "expr temp" "maybe param" "maybe type" "temp"
      (781212 'move' call_tmp[781209](102004 call % call_tmp[781199] call_tmp[781204]))
      unknown call_tmp[781214] "expr temp" "maybe param" "maybe type" "temp"
      (781217 'move' call_tmp[781214](102015 call chpl__tupleRest a[101962]))
      unknown call_tmp[781219] "expr temp" "maybe param" "maybe type" "temp"
      (781222 'move' call_tmp[781219](102018 call chpl__tupleRest b[101966]))
      unknown call_tmp[781224] "expr temp" "maybe param" "maybe type" "temp"
      (781227 'move' call_tmp[781224](102012 call % call_tmp[781214] call_tmp[781219]))
      unknown call_tmp[781229] "expr temp" "maybe param" "maybe type" "temp"
      (781232 'move' call_tmp[781229](102021 call _build_tuple call_tmp[781209](102020 'expand_tuple' call_tmp[781224])))
      (601963 'move' ret[601953](601962 'deref' call_tmp[781229]))
      gotoReturn _end_%[601951] _end_%[601951]
    }
    label _end_%[601951]
    (601955 return ret[601953])
  }
  function **[102039](arg a[102042]:_tuple[246](?), arg b[102046]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601969] "RVV" "temp"
    unknown call_tmp[781236] "expr temp" "maybe param" "maybe type" "temp"
    (781239 'move' call_tmp[781236](102063 call size _mt[203] a[102042]))
    unknown call_tmp[781243] "expr temp" "maybe param" "maybe type" "temp"
    (781246 'move' call_tmp[781243](102067 call size _mt[203] b[102046]))
    unknown call_tmp[781248] "expr temp" "maybe param" "maybe type" "temp"
    (781251 'move' call_tmp[781248](102060 call != call_tmp[781236] call_tmp[781243]))
    unknown call_tmp[781253] "expr temp" "maybe param" "maybe type" "temp"
    (781256 'move' call_tmp[781253](102070 call _cond_test call_tmp[781248]))
    if call_tmp[781253]
    {
      (102055 call compilerError "tuple operands to ** have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577207] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[781258] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781261 'move' call_tmp[781258](102086 call a[102042] 0))
      unknown call_tmp[781263] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781266 'move' call_tmp[781263](102089 call b[102046] 0))
      unknown call_tmp[781268] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781271 'move' call_tmp[781268](102083 call ** call_tmp[781258] call_tmp[781263]))
      (577211 'move' call_type_tmp[577207](102091 'typeof' call_tmp[781268]))
    }
    unknown result[102076] "dead at end of block" "insert auto destroy"
    unknown call_tmp[781275] "expr temp" "maybe param" "maybe type" "temp"
    (781278 'move' call_tmp[781275](102080 call size _mt[203] a[102042]))
    unknown call_tmp[781280] "expr temp" "maybe param" "maybe type" "temp"
    (781283 'move' call_tmp[781280](102077 call * call_tmp[781275] call_type_tmp[577207]))
    (644988 'default init var' result[102076] call_tmp[781280])
    (102093 'end of statement')
    {
      unknown d[102094] "dead at end of block" "index var" "insert auto destroy"
      (644990 'init var' d[102094] 0)
      (551304 'end of statement')
      unknown tmp[102120] "maybe param" "temp"
      unknown call_tmp[781287] "expr temp" "maybe param" "maybe type" "temp"
      (781290 'move' call_tmp[781287](102100 call size _mt[203] a[102042]))
      unknown call_tmp[781292] "expr temp" "maybe param" "maybe type" "temp"
      (781295 'move' call_tmp[781292](102097 call - call_tmp[781287] 1))
      (102132 'move' tmp[102120](102130 call chpl_compute_low_param_loop_bound 0 call_tmp[781292]))
      unknown tmp[102121] "maybe param" "temp"
      unknown call_tmp[781299] "expr temp" "maybe param" "maybe type" "temp"
      (781302 'move' call_tmp[781299](102139 call size _mt[203] a[102042]))
      unknown call_tmp[781304] "expr temp" "maybe param" "maybe type" "temp"
      (781307 'move' call_tmp[781304](102137 call - call_tmp[781299] 1))
      (102145 'move' tmp[102121](102143 call chpl_compute_high_param_loop_bound 0 call_tmp[781304]))
      unknown tmp[102122] "maybe param" "temp"
      (102148 'move' tmp[102122] 1)
      ParamForLoop[102150]
      { d[102094] tmp[102120] tmp[102121] tmp[102122]
        unknown call_tmp[781309] "expr temp" "maybe param" "maybe type" "temp"
        (781312 'move' call_tmp[781309](102109 call result[102076] d[102094]))
        unknown call_tmp[781314] "expr temp" "maybe param" "maybe type" "temp"
        (781317 'move' call_tmp[781314](102114 call a[102042] d[102094]))
        unknown call_tmp[781319] "expr temp" "maybe param" "maybe type" "temp"
        (781322 'move' call_tmp[781319](102117 call b[102046] d[102094]))
        unknown call_tmp[781324] "expr temp" "maybe param" "maybe type" "temp"
        (781327 'move' call_tmp[781324](102111 call ** call_tmp[781314] call_tmp[781319]))
        (102106 call = call_tmp[781309] call_tmp[781324])
        (551305 'end of statement' result[102076] d[102094])
      }
      label _unused_continueLabel[102124]
      label _breakLabel[102123]
    }
    (601974 'move' ret[601969](601973 'deref' result[102076]))
    gotoReturn _end_**[601967] _end_**[601967]
    (551308 'end of statement' result[102076])
    label _end_**[601967]
    (601971 return ret[601969])
  }
  where {
    (102050 call chpl_TwoHomogTuples a[102042] b[102046])
  }
  function **[102164](arg a[102167]:_tuple[246](?), arg b[102171]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601980] "RVV" "temp"
    unknown call_tmp[781331] "expr temp" "maybe param" "maybe type" "temp"
    (781334 'move' call_tmp[781331](102182 call size _mt[203] a[102167]))
    unknown call_tmp[781338] "expr temp" "maybe param" "maybe type" "temp"
    (781341 'move' call_tmp[781338](102186 call size _mt[203] b[102171]))
    unknown call_tmp[781343] "expr temp" "maybe param" "maybe type" "temp"
    (781346 'move' call_tmp[781343](102179 call != call_tmp[781331] call_tmp[781338]))
    unknown call_tmp[781348] "expr temp" "maybe param" "maybe type" "temp"
    (781351 'move' call_tmp[781348](102189 call _cond_test call_tmp[781343]))
    if call_tmp[781348]
    {
      (102176 call compilerError "tuple operands to ** have different sizes")
    }
    unknown call_tmp[781355] "expr temp" "maybe param" "maybe type" "temp"
    (781358 'move' call_tmp[781355](102232 call size _mt[203] a[102167]))
    unknown call_tmp[781360] "expr temp" "maybe param" "maybe type" "temp"
    (781363 'move' call_tmp[781360](102229 call == call_tmp[781355] 1))
    unknown call_tmp[781365] "expr temp" "maybe param" "maybe type" "temp"
    (781368 'move' call_tmp[781365](102236 call _cond_test call_tmp[781360]))
    if call_tmp[781365]
    {
      unknown call_tmp[781370] "expr temp" "maybe param" "maybe type" "temp"
      (781373 'move' call_tmp[781370](102199 call a[102167] 0))
      unknown call_tmp[781375] "expr temp" "maybe param" "maybe type" "temp"
      (781378 'move' call_tmp[781375](102202 call b[102171] 0))
      unknown call_tmp[781380] "expr temp" "maybe param" "maybe type" "temp"
      (781383 'move' call_tmp[781380](102196 call ** call_tmp[781370] call_tmp[781375]))
      unknown call_tmp[781385] "expr temp" "maybe param" "maybe type" "temp"
      (781388 'move' call_tmp[781385](102204 call _build_tuple call_tmp[781380]))
      (601985 'move' ret[601980](601984 'deref' call_tmp[781385]))
      gotoReturn _end_**[601978] _end_**[601978]
    }
    {
      unknown call_tmp[781390] "expr temp" "maybe param" "maybe type" "temp"
      (781393 'move' call_tmp[781390](102212 call a[102167] 0))
      unknown call_tmp[781395] "expr temp" "maybe param" "maybe type" "temp"
      (781398 'move' call_tmp[781395](102215 call b[102171] 0))
      unknown call_tmp[781400] "expr temp" "maybe param" "maybe type" "temp"
      (781403 'move' call_tmp[781400](102209 call ** call_tmp[781390] call_tmp[781395]))
      unknown call_tmp[781405] "expr temp" "maybe param" "maybe type" "temp"
      (781408 'move' call_tmp[781405](102220 call chpl__tupleRest a[102167]))
      unknown call_tmp[781410] "expr temp" "maybe param" "maybe type" "temp"
      (781413 'move' call_tmp[781410](102223 call chpl__tupleRest b[102171]))
      unknown call_tmp[781415] "expr temp" "maybe param" "maybe type" "temp"
      (781418 'move' call_tmp[781415](102217 call ** call_tmp[781405] call_tmp[781410]))
      unknown call_tmp[781420] "expr temp" "maybe param" "maybe type" "temp"
      (781423 'move' call_tmp[781420](102226 call _build_tuple call_tmp[781400](102225 'expand_tuple' call_tmp[781415])))
      (601990 'move' ret[601980](601989 'deref' call_tmp[781420]))
      gotoReturn _end_**[601978] _end_**[601978]
    }
    label _end_**[601978]
    (601982 return ret[601980])
  }
  function &[102244](arg a[102247]:_tuple[246](?), arg b[102251]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[601996] "RVV" "temp"
    unknown call_tmp[781427] "expr temp" "maybe param" "maybe type" "temp"
    (781430 'move' call_tmp[781427](102268 call size _mt[203] a[102247]))
    unknown call_tmp[781434] "expr temp" "maybe param" "maybe type" "temp"
    (781437 'move' call_tmp[781434](102272 call size _mt[203] b[102251]))
    unknown call_tmp[781439] "expr temp" "maybe param" "maybe type" "temp"
    (781442 'move' call_tmp[781439](102265 call != call_tmp[781427] call_tmp[781434]))
    unknown call_tmp[781444] "expr temp" "maybe param" "maybe type" "temp"
    (781447 'move' call_tmp[781444](102275 call _cond_test call_tmp[781439]))
    if call_tmp[781444]
    {
      (102260 call compilerError "tuple operands to & have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577213] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[781449] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781452 'move' call_tmp[781449](102291 call a[102247] 0))
      unknown call_tmp[781454] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781457 'move' call_tmp[781454](102294 call b[102251] 0))
      unknown call_tmp[781459] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781462 'move' call_tmp[781459](102288 call & call_tmp[781449] call_tmp[781454]))
      (577217 'move' call_type_tmp[577213](102296 'typeof' call_tmp[781459]))
    }
    unknown result[102281] "dead at end of block" "insert auto destroy"
    unknown call_tmp[781466] "expr temp" "maybe param" "maybe type" "temp"
    (781469 'move' call_tmp[781466](102285 call size _mt[203] a[102247]))
    unknown call_tmp[781471] "expr temp" "maybe param" "maybe type" "temp"
    (781474 'move' call_tmp[781471](102282 call * call_tmp[781466] call_type_tmp[577213]))
    (644992 'default init var' result[102281] call_tmp[781471])
    (102298 'end of statement')
    {
      unknown d[102299] "dead at end of block" "index var" "insert auto destroy"
      (644994 'init var' d[102299] 0)
      (551314 'end of statement')
      unknown tmp[102325] "maybe param" "temp"
      unknown call_tmp[781478] "expr temp" "maybe param" "maybe type" "temp"
      (781481 'move' call_tmp[781478](102305 call size _mt[203] a[102247]))
      unknown call_tmp[781483] "expr temp" "maybe param" "maybe type" "temp"
      (781486 'move' call_tmp[781483](102302 call - call_tmp[781478] 1))
      (102337 'move' tmp[102325](102335 call chpl_compute_low_param_loop_bound 0 call_tmp[781483]))
      unknown tmp[102326] "maybe param" "temp"
      unknown call_tmp[781490] "expr temp" "maybe param" "maybe type" "temp"
      (781493 'move' call_tmp[781490](102344 call size _mt[203] a[102247]))
      unknown call_tmp[781495] "expr temp" "maybe param" "maybe type" "temp"
      (781498 'move' call_tmp[781495](102342 call - call_tmp[781490] 1))
      (102350 'move' tmp[102326](102348 call chpl_compute_high_param_loop_bound 0 call_tmp[781495]))
      unknown tmp[102327] "maybe param" "temp"
      (102353 'move' tmp[102327] 1)
      ParamForLoop[102355]
      { d[102299] tmp[102325] tmp[102326] tmp[102327]
        unknown call_tmp[781500] "expr temp" "maybe param" "maybe type" "temp"
        (781503 'move' call_tmp[781500](102314 call result[102281] d[102299]))
        unknown call_tmp[781505] "expr temp" "maybe param" "maybe type" "temp"
        (781508 'move' call_tmp[781505](102319 call a[102247] d[102299]))
        unknown call_tmp[781510] "expr temp" "maybe param" "maybe type" "temp"
        (781513 'move' call_tmp[781510](102322 call b[102251] d[102299]))
        unknown call_tmp[781515] "expr temp" "maybe param" "maybe type" "temp"
        (781518 'move' call_tmp[781515](102316 call & call_tmp[781505] call_tmp[781510]))
        (102311 call = call_tmp[781500] call_tmp[781515])
        (551315 'end of statement' result[102281] d[102299])
      }
      label _unused_continueLabel[102329]
      label _breakLabel[102328]
    }
    (602001 'move' ret[601996](602000 'deref' result[102281]))
    gotoReturn _end_&[601994] _end_&[601994]
    (551318 'end of statement' result[102281])
    label _end_&[601994]
    (601998 return ret[601996])
  }
  where {
    (102255 call chpl_TwoHomogTuples a[102247] b[102251])
  }
  function &[102369](arg a[102372]:_tuple[246](?), arg b[102376]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602007] "RVV" "temp"
    unknown call_tmp[781522] "expr temp" "maybe param" "maybe type" "temp"
    (781525 'move' call_tmp[781522](102387 call size _mt[203] a[102372]))
    unknown call_tmp[781529] "expr temp" "maybe param" "maybe type" "temp"
    (781532 'move' call_tmp[781529](102391 call size _mt[203] b[102376]))
    unknown call_tmp[781534] "expr temp" "maybe param" "maybe type" "temp"
    (781537 'move' call_tmp[781534](102384 call != call_tmp[781522] call_tmp[781529]))
    unknown call_tmp[781539] "expr temp" "maybe param" "maybe type" "temp"
    (781542 'move' call_tmp[781539](102394 call _cond_test call_tmp[781534]))
    if call_tmp[781539]
    {
      (102381 call compilerError "tuple operands to & have different sizes")
    }
    unknown call_tmp[781546] "expr temp" "maybe param" "maybe type" "temp"
    (781549 'move' call_tmp[781546](102437 call size _mt[203] a[102372]))
    unknown call_tmp[781551] "expr temp" "maybe param" "maybe type" "temp"
    (781554 'move' call_tmp[781551](102434 call == call_tmp[781546] 1))
    unknown call_tmp[781556] "expr temp" "maybe param" "maybe type" "temp"
    (781559 'move' call_tmp[781556](102441 call _cond_test call_tmp[781551]))
    if call_tmp[781556]
    {
      unknown call_tmp[781561] "expr temp" "maybe param" "maybe type" "temp"
      (781564 'move' call_tmp[781561](102404 call a[102372] 0))
      unknown call_tmp[781566] "expr temp" "maybe param" "maybe type" "temp"
      (781569 'move' call_tmp[781566](102407 call b[102376] 0))
      unknown call_tmp[781571] "expr temp" "maybe param" "maybe type" "temp"
      (781574 'move' call_tmp[781571](102401 call & call_tmp[781561] call_tmp[781566]))
      unknown call_tmp[781576] "expr temp" "maybe param" "maybe type" "temp"
      (781579 'move' call_tmp[781576](102409 call _build_tuple call_tmp[781571]))
      (602012 'move' ret[602007](602011 'deref' call_tmp[781576]))
      gotoReturn _end_&[602005] _end_&[602005]
    }
    {
      unknown call_tmp[781581] "expr temp" "maybe param" "maybe type" "temp"
      (781584 'move' call_tmp[781581](102417 call a[102372] 0))
      unknown call_tmp[781586] "expr temp" "maybe param" "maybe type" "temp"
      (781589 'move' call_tmp[781586](102420 call b[102376] 0))
      unknown call_tmp[781591] "expr temp" "maybe param" "maybe type" "temp"
      (781594 'move' call_tmp[781591](102414 call & call_tmp[781581] call_tmp[781586]))
      unknown call_tmp[781596] "expr temp" "maybe param" "maybe type" "temp"
      (781599 'move' call_tmp[781596](102425 call chpl__tupleRest a[102372]))
      unknown call_tmp[781601] "expr temp" "maybe param" "maybe type" "temp"
      (781604 'move' call_tmp[781601](102428 call chpl__tupleRest b[102376]))
      unknown call_tmp[781606] "expr temp" "maybe param" "maybe type" "temp"
      (781609 'move' call_tmp[781606](102422 call & call_tmp[781596] call_tmp[781601]))
      unknown call_tmp[781611] "expr temp" "maybe param" "maybe type" "temp"
      (781614 'move' call_tmp[781611](102431 call _build_tuple call_tmp[781591](102430 'expand_tuple' call_tmp[781606])))
      (602017 'move' ret[602007](602016 'deref' call_tmp[781611]))
      gotoReturn _end_&[602005] _end_&[602005]
    }
    label _end_&[602005]
    (602009 return ret[602007])
  }
  function |[102449](arg a[102452]:_tuple[246](?), arg b[102456]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602023] "RVV" "temp"
    unknown call_tmp[781618] "expr temp" "maybe param" "maybe type" "temp"
    (781621 'move' call_tmp[781618](102473 call size _mt[203] a[102452]))
    unknown call_tmp[781625] "expr temp" "maybe param" "maybe type" "temp"
    (781628 'move' call_tmp[781625](102477 call size _mt[203] b[102456]))
    unknown call_tmp[781630] "expr temp" "maybe param" "maybe type" "temp"
    (781633 'move' call_tmp[781630](102470 call != call_tmp[781618] call_tmp[781625]))
    unknown call_tmp[781635] "expr temp" "maybe param" "maybe type" "temp"
    (781638 'move' call_tmp[781635](102480 call _cond_test call_tmp[781630]))
    if call_tmp[781635]
    {
      (102465 call compilerError "tuple operands to | have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577219] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[781640] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781643 'move' call_tmp[781640](102496 call a[102452] 0))
      unknown call_tmp[781645] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781648 'move' call_tmp[781645](102499 call b[102456] 0))
      unknown call_tmp[781650] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781653 'move' call_tmp[781650](102493 call | call_tmp[781640] call_tmp[781645]))
      (577223 'move' call_type_tmp[577219](102501 'typeof' call_tmp[781650]))
    }
    unknown result[102486] "dead at end of block" "insert auto destroy"
    unknown call_tmp[781657] "expr temp" "maybe param" "maybe type" "temp"
    (781660 'move' call_tmp[781657](102490 call size _mt[203] a[102452]))
    unknown call_tmp[781662] "expr temp" "maybe param" "maybe type" "temp"
    (781665 'move' call_tmp[781662](102487 call * call_tmp[781657] call_type_tmp[577219]))
    (644996 'default init var' result[102486] call_tmp[781662])
    (102503 'end of statement')
    {
      unknown d[102504] "dead at end of block" "index var" "insert auto destroy"
      (644998 'init var' d[102504] 0)
      (551324 'end of statement')
      unknown tmp[102530] "maybe param" "temp"
      unknown call_tmp[781669] "expr temp" "maybe param" "maybe type" "temp"
      (781672 'move' call_tmp[781669](102510 call size _mt[203] a[102452]))
      unknown call_tmp[781674] "expr temp" "maybe param" "maybe type" "temp"
      (781677 'move' call_tmp[781674](102507 call - call_tmp[781669] 1))
      (102542 'move' tmp[102530](102540 call chpl_compute_low_param_loop_bound 0 call_tmp[781674]))
      unknown tmp[102531] "maybe param" "temp"
      unknown call_tmp[781681] "expr temp" "maybe param" "maybe type" "temp"
      (781684 'move' call_tmp[781681](102549 call size _mt[203] a[102452]))
      unknown call_tmp[781686] "expr temp" "maybe param" "maybe type" "temp"
      (781689 'move' call_tmp[781686](102547 call - call_tmp[781681] 1))
      (102555 'move' tmp[102531](102553 call chpl_compute_high_param_loop_bound 0 call_tmp[781686]))
      unknown tmp[102532] "maybe param" "temp"
      (102558 'move' tmp[102532] 1)
      ParamForLoop[102560]
      { d[102504] tmp[102530] tmp[102531] tmp[102532]
        unknown call_tmp[781691] "expr temp" "maybe param" "maybe type" "temp"
        (781694 'move' call_tmp[781691](102519 call result[102486] d[102504]))
        unknown call_tmp[781696] "expr temp" "maybe param" "maybe type" "temp"
        (781699 'move' call_tmp[781696](102524 call a[102452] d[102504]))
        unknown call_tmp[781701] "expr temp" "maybe param" "maybe type" "temp"
        (781704 'move' call_tmp[781701](102527 call b[102456] d[102504]))
        unknown call_tmp[781706] "expr temp" "maybe param" "maybe type" "temp"
        (781709 'move' call_tmp[781706](102521 call | call_tmp[781696] call_tmp[781701]))
        (102516 call = call_tmp[781691] call_tmp[781706])
        (551325 'end of statement' result[102486] d[102504])
      }
      label _unused_continueLabel[102534]
      label _breakLabel[102533]
    }
    (602028 'move' ret[602023](602027 'deref' result[102486]))
    gotoReturn _end_|[602021] _end_|[602021]
    (551328 'end of statement' result[102486])
    label _end_|[602021]
    (602025 return ret[602023])
  }
  where {
    (102460 call chpl_TwoHomogTuples a[102452] b[102456])
  }
  function |[102574](arg a[102577]:_tuple[246](?), arg b[102581]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602034] "RVV" "temp"
    unknown call_tmp[781713] "expr temp" "maybe param" "maybe type" "temp"
    (781716 'move' call_tmp[781713](102592 call size _mt[203] a[102577]))
    unknown call_tmp[781720] "expr temp" "maybe param" "maybe type" "temp"
    (781723 'move' call_tmp[781720](102596 call size _mt[203] b[102581]))
    unknown call_tmp[781725] "expr temp" "maybe param" "maybe type" "temp"
    (781728 'move' call_tmp[781725](102589 call != call_tmp[781713] call_tmp[781720]))
    unknown call_tmp[781730] "expr temp" "maybe param" "maybe type" "temp"
    (781733 'move' call_tmp[781730](102599 call _cond_test call_tmp[781725]))
    if call_tmp[781730]
    {
      (102586 call compilerError "tuple operands to | have different sizes")
    }
    unknown call_tmp[781737] "expr temp" "maybe param" "maybe type" "temp"
    (781740 'move' call_tmp[781737](102642 call size _mt[203] a[102577]))
    unknown call_tmp[781742] "expr temp" "maybe param" "maybe type" "temp"
    (781745 'move' call_tmp[781742](102639 call == call_tmp[781737] 1))
    unknown call_tmp[781747] "expr temp" "maybe param" "maybe type" "temp"
    (781750 'move' call_tmp[781747](102646 call _cond_test call_tmp[781742]))
    if call_tmp[781747]
    {
      unknown call_tmp[781752] "expr temp" "maybe param" "maybe type" "temp"
      (781755 'move' call_tmp[781752](102609 call a[102577] 0))
      unknown call_tmp[781757] "expr temp" "maybe param" "maybe type" "temp"
      (781760 'move' call_tmp[781757](102612 call b[102581] 0))
      unknown call_tmp[781762] "expr temp" "maybe param" "maybe type" "temp"
      (781765 'move' call_tmp[781762](102606 call | call_tmp[781752] call_tmp[781757]))
      unknown call_tmp[781767] "expr temp" "maybe param" "maybe type" "temp"
      (781770 'move' call_tmp[781767](102614 call _build_tuple call_tmp[781762]))
      (602039 'move' ret[602034](602038 'deref' call_tmp[781767]))
      gotoReturn _end_|[602032] _end_|[602032]
    }
    {
      unknown call_tmp[781772] "expr temp" "maybe param" "maybe type" "temp"
      (781775 'move' call_tmp[781772](102622 call a[102577] 0))
      unknown call_tmp[781777] "expr temp" "maybe param" "maybe type" "temp"
      (781780 'move' call_tmp[781777](102625 call b[102581] 0))
      unknown call_tmp[781782] "expr temp" "maybe param" "maybe type" "temp"
      (781785 'move' call_tmp[781782](102619 call | call_tmp[781772] call_tmp[781777]))
      unknown call_tmp[781787] "expr temp" "maybe param" "maybe type" "temp"
      (781790 'move' call_tmp[781787](102630 call chpl__tupleRest a[102577]))
      unknown call_tmp[781792] "expr temp" "maybe param" "maybe type" "temp"
      (781795 'move' call_tmp[781792](102633 call chpl__tupleRest b[102581]))
      unknown call_tmp[781797] "expr temp" "maybe param" "maybe type" "temp"
      (781800 'move' call_tmp[781797](102627 call | call_tmp[781787] call_tmp[781792]))
      unknown call_tmp[781802] "expr temp" "maybe param" "maybe type" "temp"
      (781805 'move' call_tmp[781802](102636 call _build_tuple call_tmp[781782](102635 'expand_tuple' call_tmp[781797])))
      (602044 'move' ret[602034](602043 'deref' call_tmp[781802]))
      gotoReturn _end_|[602032] _end_|[602032]
    }
    label _end_|[602032]
    (602036 return ret[602034])
  }
  function ^[102654](arg a[102657]:_tuple[246](?), arg b[102661]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602050] "RVV" "temp"
    unknown call_tmp[781809] "expr temp" "maybe param" "maybe type" "temp"
    (781812 'move' call_tmp[781809](102678 call size _mt[203] a[102657]))
    unknown call_tmp[781816] "expr temp" "maybe param" "maybe type" "temp"
    (781819 'move' call_tmp[781816](102682 call size _mt[203] b[102661]))
    unknown call_tmp[781821] "expr temp" "maybe param" "maybe type" "temp"
    (781824 'move' call_tmp[781821](102675 call != call_tmp[781809] call_tmp[781816]))
    unknown call_tmp[781826] "expr temp" "maybe param" "maybe type" "temp"
    (781829 'move' call_tmp[781826](102685 call _cond_test call_tmp[781821]))
    if call_tmp[781826]
    {
      (102670 call compilerError "tuple operands to ^ have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577225] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[781831] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781834 'move' call_tmp[781831](102701 call a[102657] 0))
      unknown call_tmp[781836] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781839 'move' call_tmp[781836](102704 call b[102661] 0))
      unknown call_tmp[781841] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (781844 'move' call_tmp[781841](102698 call ^ call_tmp[781831] call_tmp[781836]))
      (577229 'move' call_type_tmp[577225](102706 'typeof' call_tmp[781841]))
    }
    unknown result[102691] "dead at end of block" "insert auto destroy"
    unknown call_tmp[781848] "expr temp" "maybe param" "maybe type" "temp"
    (781851 'move' call_tmp[781848](102695 call size _mt[203] a[102657]))
    unknown call_tmp[781853] "expr temp" "maybe param" "maybe type" "temp"
    (781856 'move' call_tmp[781853](102692 call * call_tmp[781848] call_type_tmp[577225]))
    (645000 'default init var' result[102691] call_tmp[781853])
    (102708 'end of statement')
    {
      unknown d[102709] "dead at end of block" "index var" "insert auto destroy"
      (645002 'init var' d[102709] 0)
      (551334 'end of statement')
      unknown tmp[102735] "maybe param" "temp"
      unknown call_tmp[781860] "expr temp" "maybe param" "maybe type" "temp"
      (781863 'move' call_tmp[781860](102715 call size _mt[203] a[102657]))
      unknown call_tmp[781865] "expr temp" "maybe param" "maybe type" "temp"
      (781868 'move' call_tmp[781865](102712 call - call_tmp[781860] 1))
      (102747 'move' tmp[102735](102745 call chpl_compute_low_param_loop_bound 0 call_tmp[781865]))
      unknown tmp[102736] "maybe param" "temp"
      unknown call_tmp[781872] "expr temp" "maybe param" "maybe type" "temp"
      (781875 'move' call_tmp[781872](102754 call size _mt[203] a[102657]))
      unknown call_tmp[781877] "expr temp" "maybe param" "maybe type" "temp"
      (781880 'move' call_tmp[781877](102752 call - call_tmp[781872] 1))
      (102760 'move' tmp[102736](102758 call chpl_compute_high_param_loop_bound 0 call_tmp[781877]))
      unknown tmp[102737] "maybe param" "temp"
      (102763 'move' tmp[102737] 1)
      ParamForLoop[102765]
      { d[102709] tmp[102735] tmp[102736] tmp[102737]
        unknown call_tmp[781882] "expr temp" "maybe param" "maybe type" "temp"
        (781885 'move' call_tmp[781882](102724 call result[102691] d[102709]))
        unknown call_tmp[781887] "expr temp" "maybe param" "maybe type" "temp"
        (781890 'move' call_tmp[781887](102729 call a[102657] d[102709]))
        unknown call_tmp[781892] "expr temp" "maybe param" "maybe type" "temp"
        (781895 'move' call_tmp[781892](102732 call b[102661] d[102709]))
        unknown call_tmp[781897] "expr temp" "maybe param" "maybe type" "temp"
        (781900 'move' call_tmp[781897](102726 call ^ call_tmp[781887] call_tmp[781892]))
        (102721 call = call_tmp[781882] call_tmp[781897])
        (551335 'end of statement' result[102691] d[102709])
      }
      label _unused_continueLabel[102739]
      label _breakLabel[102738]
    }
    (602055 'move' ret[602050](602054 'deref' result[102691]))
    gotoReturn _end_^[602048] _end_^[602048]
    (551338 'end of statement' result[102691])
    label _end_^[602048]
    (602052 return ret[602050])
  }
  where {
    (102665 call chpl_TwoHomogTuples a[102657] b[102661])
  }
  function ^[102779](arg a[102782]:_tuple[246](?), arg b[102786]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602061] "RVV" "temp"
    unknown call_tmp[781904] "expr temp" "maybe param" "maybe type" "temp"
    (781907 'move' call_tmp[781904](102797 call size _mt[203] a[102782]))
    unknown call_tmp[781911] "expr temp" "maybe param" "maybe type" "temp"
    (781914 'move' call_tmp[781911](102801 call size _mt[203] b[102786]))
    unknown call_tmp[781916] "expr temp" "maybe param" "maybe type" "temp"
    (781919 'move' call_tmp[781916](102794 call != call_tmp[781904] call_tmp[781911]))
    unknown call_tmp[781921] "expr temp" "maybe param" "maybe type" "temp"
    (781924 'move' call_tmp[781921](102804 call _cond_test call_tmp[781916]))
    if call_tmp[781921]
    {
      (102791 call compilerError "tuple operands to ^ have different sizes")
    }
    unknown call_tmp[781928] "expr temp" "maybe param" "maybe type" "temp"
    (781931 'move' call_tmp[781928](102847 call size _mt[203] a[102782]))
    unknown call_tmp[781933] "expr temp" "maybe param" "maybe type" "temp"
    (781936 'move' call_tmp[781933](102844 call == call_tmp[781928] 1))
    unknown call_tmp[781938] "expr temp" "maybe param" "maybe type" "temp"
    (781941 'move' call_tmp[781938](102851 call _cond_test call_tmp[781933]))
    if call_tmp[781938]
    {
      unknown call_tmp[781943] "expr temp" "maybe param" "maybe type" "temp"
      (781946 'move' call_tmp[781943](102814 call a[102782] 0))
      unknown call_tmp[781948] "expr temp" "maybe param" "maybe type" "temp"
      (781951 'move' call_tmp[781948](102817 call b[102786] 0))
      unknown call_tmp[781953] "expr temp" "maybe param" "maybe type" "temp"
      (781956 'move' call_tmp[781953](102811 call ^ call_tmp[781943] call_tmp[781948]))
      unknown call_tmp[781958] "expr temp" "maybe param" "maybe type" "temp"
      (781961 'move' call_tmp[781958](102819 call _build_tuple call_tmp[781953]))
      (602066 'move' ret[602061](602065 'deref' call_tmp[781958]))
      gotoReturn _end_^[602059] _end_^[602059]
    }
    {
      unknown call_tmp[781963] "expr temp" "maybe param" "maybe type" "temp"
      (781966 'move' call_tmp[781963](102827 call a[102782] 0))
      unknown call_tmp[781968] "expr temp" "maybe param" "maybe type" "temp"
      (781971 'move' call_tmp[781968](102830 call b[102786] 0))
      unknown call_tmp[781973] "expr temp" "maybe param" "maybe type" "temp"
      (781976 'move' call_tmp[781973](102824 call ^ call_tmp[781963] call_tmp[781968]))
      unknown call_tmp[781978] "expr temp" "maybe param" "maybe type" "temp"
      (781981 'move' call_tmp[781978](102835 call chpl__tupleRest a[102782]))
      unknown call_tmp[781983] "expr temp" "maybe param" "maybe type" "temp"
      (781986 'move' call_tmp[781983](102838 call chpl__tupleRest b[102786]))
      unknown call_tmp[781988] "expr temp" "maybe param" "maybe type" "temp"
      (781991 'move' call_tmp[781988](102832 call ^ call_tmp[781978] call_tmp[781983]))
      unknown call_tmp[781993] "expr temp" "maybe param" "maybe type" "temp"
      (781996 'move' call_tmp[781993](102841 call _build_tuple call_tmp[781973](102840 'expand_tuple' call_tmp[781988])))
      (602071 'move' ret[602061](602070 'deref' call_tmp[781993]))
      gotoReturn _end_^[602059] _end_^[602059]
    }
    label _end_^[602059]
    (602063 return ret[602061])
  }
  function <<[102859](arg a[102862]:_tuple[246](?), arg b[102866]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602077] "RVV" "temp"
    unknown call_tmp[782000] "expr temp" "maybe param" "maybe type" "temp"
    (782003 'move' call_tmp[782000](102883 call size _mt[203] a[102862]))
    unknown call_tmp[782007] "expr temp" "maybe param" "maybe type" "temp"
    (782010 'move' call_tmp[782007](102887 call size _mt[203] b[102866]))
    unknown call_tmp[782012] "expr temp" "maybe param" "maybe type" "temp"
    (782015 'move' call_tmp[782012](102880 call != call_tmp[782000] call_tmp[782007]))
    unknown call_tmp[782017] "expr temp" "maybe param" "maybe type" "temp"
    (782020 'move' call_tmp[782017](102890 call _cond_test call_tmp[782012]))
    if call_tmp[782017]
    {
      (102875 call compilerError "tuple operands to << have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577231] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[782022] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782025 'move' call_tmp[782022](102906 call a[102862] 0))
      unknown call_tmp[782027] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782030 'move' call_tmp[782027](102909 call b[102866] 0))
      unknown call_tmp[782032] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782035 'move' call_tmp[782032](102903 call << call_tmp[782022] call_tmp[782027]))
      (577235 'move' call_type_tmp[577231](102911 'typeof' call_tmp[782032]))
    }
    unknown result[102896] "dead at end of block" "insert auto destroy"
    unknown call_tmp[782039] "expr temp" "maybe param" "maybe type" "temp"
    (782042 'move' call_tmp[782039](102900 call size _mt[203] a[102862]))
    unknown call_tmp[782044] "expr temp" "maybe param" "maybe type" "temp"
    (782047 'move' call_tmp[782044](102897 call * call_tmp[782039] call_type_tmp[577231]))
    (645004 'default init var' result[102896] call_tmp[782044])
    (102913 'end of statement')
    {
      unknown d[102914] "dead at end of block" "index var" "insert auto destroy"
      (645006 'init var' d[102914] 0)
      (551344 'end of statement')
      unknown tmp[102940] "maybe param" "temp"
      unknown call_tmp[782051] "expr temp" "maybe param" "maybe type" "temp"
      (782054 'move' call_tmp[782051](102920 call size _mt[203] a[102862]))
      unknown call_tmp[782056] "expr temp" "maybe param" "maybe type" "temp"
      (782059 'move' call_tmp[782056](102917 call - call_tmp[782051] 1))
      (102952 'move' tmp[102940](102950 call chpl_compute_low_param_loop_bound 0 call_tmp[782056]))
      unknown tmp[102941] "maybe param" "temp"
      unknown call_tmp[782063] "expr temp" "maybe param" "maybe type" "temp"
      (782066 'move' call_tmp[782063](102959 call size _mt[203] a[102862]))
      unknown call_tmp[782068] "expr temp" "maybe param" "maybe type" "temp"
      (782071 'move' call_tmp[782068](102957 call - call_tmp[782063] 1))
      (102965 'move' tmp[102941](102963 call chpl_compute_high_param_loop_bound 0 call_tmp[782068]))
      unknown tmp[102942] "maybe param" "temp"
      (102968 'move' tmp[102942] 1)
      ParamForLoop[102970]
      { d[102914] tmp[102940] tmp[102941] tmp[102942]
        unknown call_tmp[782073] "expr temp" "maybe param" "maybe type" "temp"
        (782076 'move' call_tmp[782073](102929 call result[102896] d[102914]))
        unknown call_tmp[782078] "expr temp" "maybe param" "maybe type" "temp"
        (782081 'move' call_tmp[782078](102934 call a[102862] d[102914]))
        unknown call_tmp[782083] "expr temp" "maybe param" "maybe type" "temp"
        (782086 'move' call_tmp[782083](102937 call b[102866] d[102914]))
        unknown call_tmp[782088] "expr temp" "maybe param" "maybe type" "temp"
        (782091 'move' call_tmp[782088](102931 call << call_tmp[782078] call_tmp[782083]))
        (102926 call = call_tmp[782073] call_tmp[782088])
        (551345 'end of statement' result[102896] d[102914])
      }
      label _unused_continueLabel[102944]
      label _breakLabel[102943]
    }
    (602082 'move' ret[602077](602081 'deref' result[102896]))
    gotoReturn _end_<<[602075] _end_<<[602075]
    (551348 'end of statement' result[102896])
    label _end_<<[602075]
    (602079 return ret[602077])
  }
  where {
    (102870 call chpl_TwoHomogTuples a[102862] b[102866])
  }
  function <<[102984](arg a[102987]:_tuple[246](?), arg b[102991]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602088] "RVV" "temp"
    unknown call_tmp[782095] "expr temp" "maybe param" "maybe type" "temp"
    (782098 'move' call_tmp[782095](103002 call size _mt[203] a[102987]))
    unknown call_tmp[782102] "expr temp" "maybe param" "maybe type" "temp"
    (782105 'move' call_tmp[782102](103006 call size _mt[203] b[102991]))
    unknown call_tmp[782107] "expr temp" "maybe param" "maybe type" "temp"
    (782110 'move' call_tmp[782107](102999 call != call_tmp[782095] call_tmp[782102]))
    unknown call_tmp[782112] "expr temp" "maybe param" "maybe type" "temp"
    (782115 'move' call_tmp[782112](103009 call _cond_test call_tmp[782107]))
    if call_tmp[782112]
    {
      (102996 call compilerError "tuple operands to << have different sizes")
    }
    unknown call_tmp[782119] "expr temp" "maybe param" "maybe type" "temp"
    (782122 'move' call_tmp[782119](103052 call size _mt[203] a[102987]))
    unknown call_tmp[782124] "expr temp" "maybe param" "maybe type" "temp"
    (782127 'move' call_tmp[782124](103049 call == call_tmp[782119] 1))
    unknown call_tmp[782129] "expr temp" "maybe param" "maybe type" "temp"
    (782132 'move' call_tmp[782129](103056 call _cond_test call_tmp[782124]))
    if call_tmp[782129]
    {
      unknown call_tmp[782134] "expr temp" "maybe param" "maybe type" "temp"
      (782137 'move' call_tmp[782134](103019 call a[102987] 0))
      unknown call_tmp[782139] "expr temp" "maybe param" "maybe type" "temp"
      (782142 'move' call_tmp[782139](103022 call b[102991] 0))
      unknown call_tmp[782144] "expr temp" "maybe param" "maybe type" "temp"
      (782147 'move' call_tmp[782144](103016 call << call_tmp[782134] call_tmp[782139]))
      unknown call_tmp[782149] "expr temp" "maybe param" "maybe type" "temp"
      (782152 'move' call_tmp[782149](103024 call _build_tuple call_tmp[782144]))
      (602093 'move' ret[602088](602092 'deref' call_tmp[782149]))
      gotoReturn _end_<<[602086] _end_<<[602086]
    }
    {
      unknown call_tmp[782154] "expr temp" "maybe param" "maybe type" "temp"
      (782157 'move' call_tmp[782154](103032 call a[102987] 0))
      unknown call_tmp[782159] "expr temp" "maybe param" "maybe type" "temp"
      (782162 'move' call_tmp[782159](103035 call b[102991] 0))
      unknown call_tmp[782164] "expr temp" "maybe param" "maybe type" "temp"
      (782167 'move' call_tmp[782164](103029 call << call_tmp[782154] call_tmp[782159]))
      unknown call_tmp[782169] "expr temp" "maybe param" "maybe type" "temp"
      (782172 'move' call_tmp[782169](103040 call chpl__tupleRest a[102987]))
      unknown call_tmp[782174] "expr temp" "maybe param" "maybe type" "temp"
      (782177 'move' call_tmp[782174](103043 call chpl__tupleRest b[102991]))
      unknown call_tmp[782179] "expr temp" "maybe param" "maybe type" "temp"
      (782182 'move' call_tmp[782179](103037 call << call_tmp[782169] call_tmp[782174]))
      unknown call_tmp[782184] "expr temp" "maybe param" "maybe type" "temp"
      (782187 'move' call_tmp[782184](103046 call _build_tuple call_tmp[782164](103045 'expand_tuple' call_tmp[782179])))
      (602098 'move' ret[602088](602097 'deref' call_tmp[782184]))
      gotoReturn _end_<<[602086] _end_<<[602086]
    }
    label _end_<<[602086]
    (602090 return ret[602088])
  }
  function >>[103064](arg a[103067]:_tuple[246](?), arg b[103071]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602104] "RVV" "temp"
    unknown call_tmp[782191] "expr temp" "maybe param" "maybe type" "temp"
    (782194 'move' call_tmp[782191](103088 call size _mt[203] a[103067]))
    unknown call_tmp[782198] "expr temp" "maybe param" "maybe type" "temp"
    (782201 'move' call_tmp[782198](103092 call size _mt[203] b[103071]))
    unknown call_tmp[782203] "expr temp" "maybe param" "maybe type" "temp"
    (782206 'move' call_tmp[782203](103085 call != call_tmp[782191] call_tmp[782198]))
    unknown call_tmp[782208] "expr temp" "maybe param" "maybe type" "temp"
    (782211 'move' call_tmp[782208](103095 call _cond_test call_tmp[782203]))
    if call_tmp[782208]
    {
      (103080 call compilerError "tuple operands to >> have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[577237] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[782213] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782216 'move' call_tmp[782213](103111 call a[103067] 0))
      unknown call_tmp[782218] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782221 'move' call_tmp[782218](103114 call b[103071] 0))
      unknown call_tmp[782223] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782226 'move' call_tmp[782223](103108 call >> call_tmp[782213] call_tmp[782218]))
      (577241 'move' call_type_tmp[577237](103116 'typeof' call_tmp[782223]))
    }
    unknown result[103101] "dead at end of block" "insert auto destroy"
    unknown call_tmp[782230] "expr temp" "maybe param" "maybe type" "temp"
    (782233 'move' call_tmp[782230](103105 call size _mt[203] a[103067]))
    unknown call_tmp[782235] "expr temp" "maybe param" "maybe type" "temp"
    (782238 'move' call_tmp[782235](103102 call * call_tmp[782230] call_type_tmp[577237]))
    (645008 'default init var' result[103101] call_tmp[782235])
    (103118 'end of statement')
    {
      unknown d[103119] "dead at end of block" "index var" "insert auto destroy"
      (645010 'init var' d[103119] 0)
      (551354 'end of statement')
      unknown tmp[103145] "maybe param" "temp"
      unknown call_tmp[782242] "expr temp" "maybe param" "maybe type" "temp"
      (782245 'move' call_tmp[782242](103125 call size _mt[203] a[103067]))
      unknown call_tmp[782247] "expr temp" "maybe param" "maybe type" "temp"
      (782250 'move' call_tmp[782247](103122 call - call_tmp[782242] 1))
      (103157 'move' tmp[103145](103155 call chpl_compute_low_param_loop_bound 0 call_tmp[782247]))
      unknown tmp[103146] "maybe param" "temp"
      unknown call_tmp[782254] "expr temp" "maybe param" "maybe type" "temp"
      (782257 'move' call_tmp[782254](103164 call size _mt[203] a[103067]))
      unknown call_tmp[782259] "expr temp" "maybe param" "maybe type" "temp"
      (782262 'move' call_tmp[782259](103162 call - call_tmp[782254] 1))
      (103170 'move' tmp[103146](103168 call chpl_compute_high_param_loop_bound 0 call_tmp[782259]))
      unknown tmp[103147] "maybe param" "temp"
      (103173 'move' tmp[103147] 1)
      ParamForLoop[103175]
      { d[103119] tmp[103145] tmp[103146] tmp[103147]
        unknown call_tmp[782264] "expr temp" "maybe param" "maybe type" "temp"
        (782267 'move' call_tmp[782264](103134 call result[103101] d[103119]))
        unknown call_tmp[782269] "expr temp" "maybe param" "maybe type" "temp"
        (782272 'move' call_tmp[782269](103139 call a[103067] d[103119]))
        unknown call_tmp[782274] "expr temp" "maybe param" "maybe type" "temp"
        (782277 'move' call_tmp[782274](103142 call b[103071] d[103119]))
        unknown call_tmp[782279] "expr temp" "maybe param" "maybe type" "temp"
        (782282 'move' call_tmp[782279](103136 call >> call_tmp[782269] call_tmp[782274]))
        (103131 call = call_tmp[782264] call_tmp[782279])
        (551355 'end of statement' result[103101] d[103119])
      }
      label _unused_continueLabel[103149]
      label _breakLabel[103148]
    }
    (602109 'move' ret[602104](602108 'deref' result[103101]))
    gotoReturn _end_>>[602102] _end_>>[602102]
    (551358 'end of statement' result[103101])
    label _end_>>[602102]
    (602106 return ret[602104])
  }
  where {
    (103075 call chpl_TwoHomogTuples a[103067] b[103071])
  }
  function >>[103189](arg a[103192]:_tuple[246](?), arg b[103196]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602115] "RVV" "temp"
    unknown call_tmp[782286] "expr temp" "maybe param" "maybe type" "temp"
    (782289 'move' call_tmp[782286](103207 call size _mt[203] a[103192]))
    unknown call_tmp[782293] "expr temp" "maybe param" "maybe type" "temp"
    (782296 'move' call_tmp[782293](103211 call size _mt[203] b[103196]))
    unknown call_tmp[782298] "expr temp" "maybe param" "maybe type" "temp"
    (782301 'move' call_tmp[782298](103204 call != call_tmp[782286] call_tmp[782293]))
    unknown call_tmp[782303] "expr temp" "maybe param" "maybe type" "temp"
    (782306 'move' call_tmp[782303](103214 call _cond_test call_tmp[782298]))
    if call_tmp[782303]
    {
      (103201 call compilerError "tuple operands to >> have different sizes")
    }
    unknown call_tmp[782310] "expr temp" "maybe param" "maybe type" "temp"
    (782313 'move' call_tmp[782310](103257 call size _mt[203] a[103192]))
    unknown call_tmp[782315] "expr temp" "maybe param" "maybe type" "temp"
    (782318 'move' call_tmp[782315](103254 call == call_tmp[782310] 1))
    unknown call_tmp[782320] "expr temp" "maybe param" "maybe type" "temp"
    (782323 'move' call_tmp[782320](103261 call _cond_test call_tmp[782315]))
    if call_tmp[782320]
    {
      unknown call_tmp[782325] "expr temp" "maybe param" "maybe type" "temp"
      (782328 'move' call_tmp[782325](103224 call a[103192] 0))
      unknown call_tmp[782330] "expr temp" "maybe param" "maybe type" "temp"
      (782333 'move' call_tmp[782330](103227 call b[103196] 0))
      unknown call_tmp[782335] "expr temp" "maybe param" "maybe type" "temp"
      (782338 'move' call_tmp[782335](103221 call >> call_tmp[782325] call_tmp[782330]))
      unknown call_tmp[782340] "expr temp" "maybe param" "maybe type" "temp"
      (782343 'move' call_tmp[782340](103229 call _build_tuple call_tmp[782335]))
      (602120 'move' ret[602115](602119 'deref' call_tmp[782340]))
      gotoReturn _end_>>[602113] _end_>>[602113]
    }
    {
      unknown call_tmp[782345] "expr temp" "maybe param" "maybe type" "temp"
      (782348 'move' call_tmp[782345](103237 call a[103192] 0))
      unknown call_tmp[782350] "expr temp" "maybe param" "maybe type" "temp"
      (782353 'move' call_tmp[782350](103240 call b[103196] 0))
      unknown call_tmp[782355] "expr temp" "maybe param" "maybe type" "temp"
      (782358 'move' call_tmp[782355](103234 call >> call_tmp[782345] call_tmp[782350]))
      unknown call_tmp[782360] "expr temp" "maybe param" "maybe type" "temp"
      (782363 'move' call_tmp[782360](103245 call chpl__tupleRest a[103192]))
      unknown call_tmp[782365] "expr temp" "maybe param" "maybe type" "temp"
      (782368 'move' call_tmp[782365](103248 call chpl__tupleRest b[103196]))
      unknown call_tmp[782370] "expr temp" "maybe param" "maybe type" "temp"
      (782373 'move' call_tmp[782370](103242 call >> call_tmp[782360] call_tmp[782365]))
      unknown call_tmp[782375] "expr temp" "maybe param" "maybe type" "temp"
      (782378 'move' call_tmp[782375](103251 call _build_tuple call_tmp[782355](103250 'expand_tuple' call_tmp[782370])))
      (602125 'move' ret[602115](602124 'deref' call_tmp[782375]))
      gotoReturn _end_>>[602113] _end_>>[602113]
    }
    label _end_>>[602113]
    (602117 return ret[602115])
  }
  function >[103269](arg a[103272]:_tuple[246](?), arg b[103276]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602131] "RVV" "temp"
    unknown call_tmp[782382] "expr temp" "maybe param" "maybe type" "temp"
    (782385 'move' call_tmp[782382](103289 call size _mt[203] a[103272]))
    unknown call_tmp[782389] "expr temp" "maybe param" "maybe type" "temp"
    (782392 'move' call_tmp[782389](103293 call size _mt[203] b[103276]))
    unknown call_tmp[782394] "expr temp" "maybe param" "maybe type" "temp"
    (782397 'move' call_tmp[782394](103286 call != call_tmp[782382] call_tmp[782389]))
    unknown call_tmp[782399] "expr temp" "maybe param" "maybe type" "temp"
    (782402 'move' call_tmp[782399](103296 call _cond_test call_tmp[782394]))
    if call_tmp[782399]
    {
      (103281 call compilerError "tuple operands to > have different sizes")
    }
    {
      unknown i[103301] "dead at end of block" "index var" "insert auto destroy"
      (645012 'init var' i[103301] 0)
      (551364 'end of statement')
      unknown tmp[103346] "maybe param" "temp"
      unknown call_tmp[782406] "expr temp" "maybe param" "maybe type" "temp"
      (782409 'move' call_tmp[782406](103307 call size _mt[203] a[103272]))
      unknown call_tmp[782411] "expr temp" "maybe param" "maybe type" "temp"
      (782414 'move' call_tmp[782411](103304 call - call_tmp[782406] 1))
      (103358 'move' tmp[103346](103356 call chpl_compute_low_param_loop_bound 0 call_tmp[782411]))
      unknown tmp[103347] "maybe param" "temp"
      unknown call_tmp[782418] "expr temp" "maybe param" "maybe type" "temp"
      (782421 'move' call_tmp[782418](103365 call size _mt[203] a[103272]))
      unknown call_tmp[782423] "expr temp" "maybe param" "maybe type" "temp"
      (782426 'move' call_tmp[782423](103363 call - call_tmp[782418] 1))
      (103371 'move' tmp[103347](103369 call chpl_compute_high_param_loop_bound 0 call_tmp[782423]))
      unknown tmp[103348] "maybe param" "temp"
      (103374 'move' tmp[103348] 1)
      ParamForLoop[103376]
      { i[103301] tmp[103346] tmp[103347] tmp[103348]
        unknown call_tmp[782428] "expr temp" "maybe param" "maybe type" "temp"
        (782431 'move' call_tmp[782428](103335 call a[103272] i[103301]))
        unknown call_tmp[782433] "expr temp" "maybe param" "maybe type" "temp"
        (782436 'move' call_tmp[782433](103338 call b[103276] i[103301]))
        unknown call_tmp[782438] "expr temp" "maybe param" "maybe type" "temp"
        (782441 'move' call_tmp[782438](103332 call > call_tmp[782428] call_tmp[782433]))
        unknown call_tmp[782443] "expr temp" "maybe param" "maybe type" "temp"
        (782446 'move' call_tmp[782443](103340 call _cond_test call_tmp[782438]))
        if call_tmp[782443]
        {
          (602136 'move' ret[602131](602135 'deref' 1))
          gotoReturn _end_>[602129] _end_>[602129]
        }
        {
          unknown call_tmp[782448] "expr temp" "maybe param" "maybe type" "temp"
          (782451 'move' call_tmp[782448](103322 call a[103272] i[103301]))
          unknown call_tmp[782453] "expr temp" "maybe param" "maybe type" "temp"
          (782456 'move' call_tmp[782453](103325 call b[103276] i[103301]))
          unknown call_tmp[782458] "expr temp" "maybe param" "maybe type" "temp"
          (782461 'move' call_tmp[782458](103319 call < call_tmp[782448] call_tmp[782453]))
          unknown call_tmp[782463] "expr temp" "maybe param" "maybe type" "temp"
          (782466 'move' call_tmp[782463](103327 call _cond_test call_tmp[782458]))
          if call_tmp[782463]
          {
            (602141 'move' ret[602131](602140 'deref' 0))
            gotoReturn _end_>[602129] _end_>[602129]
          }
        }
      }
      label _unused_continueLabel[103350]
      label _breakLabel[103349]
    }
    (602146 'move' ret[602131](602145 'deref' 0))
    label _end_>[602129]
    (602133 return ret[602131])
  }
  function >=[103389](arg a[103392]:_tuple[246](?), arg b[103396]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602150] "RVV" "temp"
    unknown call_tmp[782470] "expr temp" "maybe param" "maybe type" "temp"
    (782473 'move' call_tmp[782470](103409 call size _mt[203] a[103392]))
    unknown call_tmp[782477] "expr temp" "maybe param" "maybe type" "temp"
    (782480 'move' call_tmp[782477](103413 call size _mt[203] b[103396]))
    unknown call_tmp[782482] "expr temp" "maybe param" "maybe type" "temp"
    (782485 'move' call_tmp[782482](103406 call != call_tmp[782470] call_tmp[782477]))
    unknown call_tmp[782487] "expr temp" "maybe param" "maybe type" "temp"
    (782490 'move' call_tmp[782487](103416 call _cond_test call_tmp[782482]))
    if call_tmp[782487]
    {
      (103401 call compilerError "tuple operands to >= have different sizes")
    }
    {
      unknown i[103421] "dead at end of block" "index var" "insert auto destroy"
      (645014 'init var' i[103421] 0)
      (551369 'end of statement')
      unknown tmp[103466] "maybe param" "temp"
      unknown call_tmp[782494] "expr temp" "maybe param" "maybe type" "temp"
      (782497 'move' call_tmp[782494](103427 call size _mt[203] a[103392]))
      unknown call_tmp[782499] "expr temp" "maybe param" "maybe type" "temp"
      (782502 'move' call_tmp[782499](103424 call - call_tmp[782494] 1))
      (103478 'move' tmp[103466](103476 call chpl_compute_low_param_loop_bound 0 call_tmp[782499]))
      unknown tmp[103467] "maybe param" "temp"
      unknown call_tmp[782506] "expr temp" "maybe param" "maybe type" "temp"
      (782509 'move' call_tmp[782506](103485 call size _mt[203] a[103392]))
      unknown call_tmp[782511] "expr temp" "maybe param" "maybe type" "temp"
      (782514 'move' call_tmp[782511](103483 call - call_tmp[782506] 1))
      (103491 'move' tmp[103467](103489 call chpl_compute_high_param_loop_bound 0 call_tmp[782511]))
      unknown tmp[103468] "maybe param" "temp"
      (103494 'move' tmp[103468] 1)
      ParamForLoop[103496]
      { i[103421] tmp[103466] tmp[103467] tmp[103468]
        unknown call_tmp[782516] "expr temp" "maybe param" "maybe type" "temp"
        (782519 'move' call_tmp[782516](103455 call a[103392] i[103421]))
        unknown call_tmp[782521] "expr temp" "maybe param" "maybe type" "temp"
        (782524 'move' call_tmp[782521](103458 call b[103396] i[103421]))
        unknown call_tmp[782526] "expr temp" "maybe param" "maybe type" "temp"
        (782529 'move' call_tmp[782526](103452 call > call_tmp[782516] call_tmp[782521]))
        unknown call_tmp[782531] "expr temp" "maybe param" "maybe type" "temp"
        (782534 'move' call_tmp[782531](103460 call _cond_test call_tmp[782526]))
        if call_tmp[782531]
        {
          (602155 'move' ret[602150](602154 'deref' 1))
          gotoReturn _end_>=[602148] _end_>=[602148]
        }
        {
          unknown call_tmp[782536] "expr temp" "maybe param" "maybe type" "temp"
          (782539 'move' call_tmp[782536](103442 call a[103392] i[103421]))
          unknown call_tmp[782541] "expr temp" "maybe param" "maybe type" "temp"
          (782544 'move' call_tmp[782541](103445 call b[103396] i[103421]))
          unknown call_tmp[782546] "expr temp" "maybe param" "maybe type" "temp"
          (782549 'move' call_tmp[782546](103439 call < call_tmp[782536] call_tmp[782541]))
          unknown call_tmp[782551] "expr temp" "maybe param" "maybe type" "temp"
          (782554 'move' call_tmp[782551](103447 call _cond_test call_tmp[782546]))
          if call_tmp[782551]
          {
            (602160 'move' ret[602150](602159 'deref' 0))
            gotoReturn _end_>=[602148] _end_>=[602148]
          }
        }
      }
      label _unused_continueLabel[103470]
      label _breakLabel[103469]
    }
    (602165 'move' ret[602150](602164 'deref' 1))
    label _end_>=[602148]
    (602152 return ret[602150])
  }
  function <[103509](arg a[103512]:_tuple[246](?), arg b[103516]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602169] "RVV" "temp"
    unknown call_tmp[782558] "expr temp" "maybe param" "maybe type" "temp"
    (782561 'move' call_tmp[782558](103529 call size _mt[203] a[103512]))
    unknown call_tmp[782565] "expr temp" "maybe param" "maybe type" "temp"
    (782568 'move' call_tmp[782565](103533 call size _mt[203] b[103516]))
    unknown call_tmp[782570] "expr temp" "maybe param" "maybe type" "temp"
    (782573 'move' call_tmp[782570](103526 call != call_tmp[782558] call_tmp[782565]))
    unknown call_tmp[782575] "expr temp" "maybe param" "maybe type" "temp"
    (782578 'move' call_tmp[782575](103536 call _cond_test call_tmp[782570]))
    if call_tmp[782575]
    {
      (103521 call compilerError "tuple operands to < have different sizes")
    }
    {
      unknown i[103541] "dead at end of block" "index var" "insert auto destroy"
      (645016 'init var' i[103541] 0)
      (551374 'end of statement')
      unknown tmp[103586] "maybe param" "temp"
      unknown call_tmp[782582] "expr temp" "maybe param" "maybe type" "temp"
      (782585 'move' call_tmp[782582](103547 call size _mt[203] a[103512]))
      unknown call_tmp[782587] "expr temp" "maybe param" "maybe type" "temp"
      (782590 'move' call_tmp[782587](103544 call - call_tmp[782582] 1))
      (103598 'move' tmp[103586](103596 call chpl_compute_low_param_loop_bound 0 call_tmp[782587]))
      unknown tmp[103587] "maybe param" "temp"
      unknown call_tmp[782594] "expr temp" "maybe param" "maybe type" "temp"
      (782597 'move' call_tmp[782594](103605 call size _mt[203] a[103512]))
      unknown call_tmp[782599] "expr temp" "maybe param" "maybe type" "temp"
      (782602 'move' call_tmp[782599](103603 call - call_tmp[782594] 1))
      (103611 'move' tmp[103587](103609 call chpl_compute_high_param_loop_bound 0 call_tmp[782599]))
      unknown tmp[103588] "maybe param" "temp"
      (103614 'move' tmp[103588] 1)
      ParamForLoop[103616]
      { i[103541] tmp[103586] tmp[103587] tmp[103588]
        unknown call_tmp[782604] "expr temp" "maybe param" "maybe type" "temp"
        (782607 'move' call_tmp[782604](103575 call a[103512] i[103541]))
        unknown call_tmp[782609] "expr temp" "maybe param" "maybe type" "temp"
        (782612 'move' call_tmp[782609](103578 call b[103516] i[103541]))
        unknown call_tmp[782614] "expr temp" "maybe param" "maybe type" "temp"
        (782617 'move' call_tmp[782614](103572 call < call_tmp[782604] call_tmp[782609]))
        unknown call_tmp[782619] "expr temp" "maybe param" "maybe type" "temp"
        (782622 'move' call_tmp[782619](103580 call _cond_test call_tmp[782614]))
        if call_tmp[782619]
        {
          (602174 'move' ret[602169](602173 'deref' 1))
          gotoReturn _end_<[602167] _end_<[602167]
        }
        {
          unknown call_tmp[782624] "expr temp" "maybe param" "maybe type" "temp"
          (782627 'move' call_tmp[782624](103562 call a[103512] i[103541]))
          unknown call_tmp[782629] "expr temp" "maybe param" "maybe type" "temp"
          (782632 'move' call_tmp[782629](103565 call b[103516] i[103541]))
          unknown call_tmp[782634] "expr temp" "maybe param" "maybe type" "temp"
          (782637 'move' call_tmp[782634](103559 call > call_tmp[782624] call_tmp[782629]))
          unknown call_tmp[782639] "expr temp" "maybe param" "maybe type" "temp"
          (782642 'move' call_tmp[782639](103567 call _cond_test call_tmp[782634]))
          if call_tmp[782639]
          {
            (602179 'move' ret[602169](602178 'deref' 0))
            gotoReturn _end_<[602167] _end_<[602167]
          }
        }
      }
      label _unused_continueLabel[103590]
      label _breakLabel[103589]
    }
    (602184 'move' ret[602169](602183 'deref' 0))
    label _end_<[602167]
    (602171 return ret[602169])
  }
  function <=[103629](arg a[103632]:_tuple[246](?), arg b[103636]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602188] "RVV" "temp"
    unknown call_tmp[782646] "expr temp" "maybe param" "maybe type" "temp"
    (782649 'move' call_tmp[782646](103649 call size _mt[203] a[103632]))
    unknown call_tmp[782653] "expr temp" "maybe param" "maybe type" "temp"
    (782656 'move' call_tmp[782653](103653 call size _mt[203] b[103636]))
    unknown call_tmp[782658] "expr temp" "maybe param" "maybe type" "temp"
    (782661 'move' call_tmp[782658](103646 call != call_tmp[782646] call_tmp[782653]))
    unknown call_tmp[782663] "expr temp" "maybe param" "maybe type" "temp"
    (782666 'move' call_tmp[782663](103656 call _cond_test call_tmp[782658]))
    if call_tmp[782663]
    {
      (103641 call compilerError "tuple operands to <= have different sizes")
    }
    {
      unknown i[103661] "dead at end of block" "index var" "insert auto destroy"
      (645018 'init var' i[103661] 0)
      (551379 'end of statement')
      unknown tmp[103706] "maybe param" "temp"
      unknown call_tmp[782670] "expr temp" "maybe param" "maybe type" "temp"
      (782673 'move' call_tmp[782670](103667 call size _mt[203] a[103632]))
      unknown call_tmp[782675] "expr temp" "maybe param" "maybe type" "temp"
      (782678 'move' call_tmp[782675](103664 call - call_tmp[782670] 1))
      (103718 'move' tmp[103706](103716 call chpl_compute_low_param_loop_bound 0 call_tmp[782675]))
      unknown tmp[103707] "maybe param" "temp"
      unknown call_tmp[782682] "expr temp" "maybe param" "maybe type" "temp"
      (782685 'move' call_tmp[782682](103725 call size _mt[203] a[103632]))
      unknown call_tmp[782687] "expr temp" "maybe param" "maybe type" "temp"
      (782690 'move' call_tmp[782687](103723 call - call_tmp[782682] 1))
      (103731 'move' tmp[103707](103729 call chpl_compute_high_param_loop_bound 0 call_tmp[782687]))
      unknown tmp[103708] "maybe param" "temp"
      (103734 'move' tmp[103708] 1)
      ParamForLoop[103736]
      { i[103661] tmp[103706] tmp[103707] tmp[103708]
        unknown call_tmp[782692] "expr temp" "maybe param" "maybe type" "temp"
        (782695 'move' call_tmp[782692](103695 call a[103632] i[103661]))
        unknown call_tmp[782697] "expr temp" "maybe param" "maybe type" "temp"
        (782700 'move' call_tmp[782697](103698 call b[103636] i[103661]))
        unknown call_tmp[782702] "expr temp" "maybe param" "maybe type" "temp"
        (782705 'move' call_tmp[782702](103692 call < call_tmp[782692] call_tmp[782697]))
        unknown call_tmp[782707] "expr temp" "maybe param" "maybe type" "temp"
        (782710 'move' call_tmp[782707](103700 call _cond_test call_tmp[782702]))
        if call_tmp[782707]
        {
          (602193 'move' ret[602188](602192 'deref' 1))
          gotoReturn _end_<=[602186] _end_<=[602186]
        }
        {
          unknown call_tmp[782712] "expr temp" "maybe param" "maybe type" "temp"
          (782715 'move' call_tmp[782712](103682 call a[103632] i[103661]))
          unknown call_tmp[782717] "expr temp" "maybe param" "maybe type" "temp"
          (782720 'move' call_tmp[782717](103685 call b[103636] i[103661]))
          unknown call_tmp[782722] "expr temp" "maybe param" "maybe type" "temp"
          (782725 'move' call_tmp[782722](103679 call > call_tmp[782712] call_tmp[782717]))
          unknown call_tmp[782727] "expr temp" "maybe param" "maybe type" "temp"
          (782730 'move' call_tmp[782727](103687 call _cond_test call_tmp[782722]))
          if call_tmp[782727]
          {
            (602198 'move' ret[602188](602197 'deref' 0))
            gotoReturn _end_<=[602186] _end_<=[602186]
          }
        }
      }
      label _unused_continueLabel[103710]
      label _breakLabel[103709]
    }
    (602203 'move' ret[602188](602202 'deref' 1))
    label _end_<=[602186]
    (602190 return ret[602188])
  }
  function ==[103749](arg a[103752]:_tuple[246](?), arg b[103756]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602207] "RVV" "temp"
    unknown call_tmp[782734] "expr temp" "maybe param" "maybe type" "temp"
    (782737 'move' call_tmp[782734](103834 call size _mt[203] a[103752]))
    unknown call_tmp[782741] "expr temp" "maybe param" "maybe type" "temp"
    (782744 'move' call_tmp[782741](103838 call size _mt[203] b[103756]))
    unknown call_tmp[782746] "expr temp" "maybe param" "maybe type" "temp"
    (782749 'move' call_tmp[782746](103831 call != call_tmp[782734] call_tmp[782741]))
    unknown call_tmp[782751] "expr temp" "maybe param" "maybe type" "temp"
    (782754 'move' call_tmp[782751](103841 call _cond_test call_tmp[782746]))
    if call_tmp[782751]
    {
      (602212 'move' ret[602207](602211 'deref' 0))
      gotoReturn _end_==[602205] _end_==[602205]
    }
    {
      {
        unknown i[103764] "dead at end of block" "index var" "insert auto destroy"
        (645020 'init var' i[103764] 0)
        (551384 'end of statement')
        unknown tmp[103792] "maybe param" "temp"
        unknown call_tmp[782758] "expr temp" "maybe param" "maybe type" "temp"
        (782761 'move' call_tmp[782758](103770 call size _mt[203] a[103752]))
        unknown call_tmp[782763] "expr temp" "maybe param" "maybe type" "temp"
        (782766 'move' call_tmp[782763](103767 call - call_tmp[782758] 1))
        (103804 'move' tmp[103792](103802 call chpl_compute_low_param_loop_bound 0 call_tmp[782763]))
        unknown tmp[103793] "maybe param" "temp"
        unknown call_tmp[782770] "expr temp" "maybe param" "maybe type" "temp"
        (782773 'move' call_tmp[782770](103811 call size _mt[203] a[103752]))
        unknown call_tmp[782775] "expr temp" "maybe param" "maybe type" "temp"
        (782778 'move' call_tmp[782775](103809 call - call_tmp[782770] 1))
        (103817 'move' tmp[103793](103815 call chpl_compute_high_param_loop_bound 0 call_tmp[782775]))
        unknown tmp[103794] "maybe param" "temp"
        (103820 'move' tmp[103794] 1)
        ParamForLoop[103822]
        { i[103764] tmp[103792] tmp[103793] tmp[103794]
          unknown call_tmp[782780] "expr temp" "maybe param" "maybe type" "temp"
          (782783 'move' call_tmp[782780](103782 call a[103752] i[103764]))
          unknown call_tmp[782785] "expr temp" "maybe param" "maybe type" "temp"
          (782788 'move' call_tmp[782785](103785 call b[103756] i[103764]))
          unknown call_tmp[782790] "expr temp" "maybe param" "maybe type" "temp"
          (782793 'move' call_tmp[782790](103779 call != call_tmp[782780] call_tmp[782785]))
          unknown call_tmp[782795] "expr temp" "maybe param" "maybe type" "temp"
          (782798 'move' call_tmp[782795](103787 call _cond_test call_tmp[782790]))
          if call_tmp[782795]
          {
            (602217 'move' ret[602207](602216 'deref' 0))
            gotoReturn _end_==[602205] _end_==[602205]
          }
        }
        label _unused_continueLabel[103796]
        label _breakLabel[103795]
      }
    }
    (602222 'move' ret[602207](602221 'deref' 1))
    label _end_==[602205]
    (602209 return ret[602207])
  }
  function !=[103849](arg a[103852]:_tuple[246](?), arg b[103856]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602226] "RVV" "temp"
    unknown call_tmp[782802] "expr temp" "maybe param" "maybe type" "temp"
    (782805 'move' call_tmp[782802](103934 call size _mt[203] a[103852]))
    unknown call_tmp[782809] "expr temp" "maybe param" "maybe type" "temp"
    (782812 'move' call_tmp[782809](103938 call size _mt[203] b[103856]))
    unknown call_tmp[782814] "expr temp" "maybe param" "maybe type" "temp"
    (782817 'move' call_tmp[782814](103931 call != call_tmp[782802] call_tmp[782809]))
    unknown call_tmp[782819] "expr temp" "maybe param" "maybe type" "temp"
    (782822 'move' call_tmp[782819](103941 call _cond_test call_tmp[782814]))
    if call_tmp[782819]
    {
      (602231 'move' ret[602226](602230 'deref' 1))
      gotoReturn _end_!=[602224] _end_!=[602224]
    }
    {
      {
        unknown i[103864] "dead at end of block" "index var" "insert auto destroy"
        (645022 'init var' i[103864] 0)
        (551388 'end of statement')
        unknown tmp[103892] "maybe param" "temp"
        unknown call_tmp[782826] "expr temp" "maybe param" "maybe type" "temp"
        (782829 'move' call_tmp[782826](103870 call size _mt[203] a[103852]))
        unknown call_tmp[782831] "expr temp" "maybe param" "maybe type" "temp"
        (782834 'move' call_tmp[782831](103867 call - call_tmp[782826] 1))
        (103904 'move' tmp[103892](103902 call chpl_compute_low_param_loop_bound 0 call_tmp[782831]))
        unknown tmp[103893] "maybe param" "temp"
        unknown call_tmp[782838] "expr temp" "maybe param" "maybe type" "temp"
        (782841 'move' call_tmp[782838](103911 call size _mt[203] a[103852]))
        unknown call_tmp[782843] "expr temp" "maybe param" "maybe type" "temp"
        (782846 'move' call_tmp[782843](103909 call - call_tmp[782838] 1))
        (103917 'move' tmp[103893](103915 call chpl_compute_high_param_loop_bound 0 call_tmp[782843]))
        unknown tmp[103894] "maybe param" "temp"
        (103920 'move' tmp[103894] 1)
        ParamForLoop[103922]
        { i[103864] tmp[103892] tmp[103893] tmp[103894]
          unknown call_tmp[782848] "expr temp" "maybe param" "maybe type" "temp"
          (782851 'move' call_tmp[782848](103882 call a[103852] i[103864]))
          unknown call_tmp[782853] "expr temp" "maybe param" "maybe type" "temp"
          (782856 'move' call_tmp[782853](103885 call b[103856] i[103864]))
          unknown call_tmp[782858] "expr temp" "maybe param" "maybe type" "temp"
          (782861 'move' call_tmp[782858](103879 call != call_tmp[782848] call_tmp[782853]))
          unknown call_tmp[782863] "expr temp" "maybe param" "maybe type" "temp"
          (782866 'move' call_tmp[782863](103887 call _cond_test call_tmp[782858]))
          if call_tmp[782863]
          {
            (602236 'move' ret[602226](602235 'deref' 1))
            gotoReturn _end_!=[602224] _end_!=[602224]
          }
        }
        label _unused_continueLabel[103896]
        label _breakLabel[103895]
      }
    }
    (602241 'move' ret[602226](602240 'deref' 0))
    label _end_!=[602224]
    (602228 return ret[602226])
  }
  function +[103949](arg x[103952]:_tuple[246](?), arg y[103959] :
  unknown call_tmp[782868] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602245] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577243] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[782873] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782876 'move' call_tmp[782873](103975 call x[103952] 0))
      (577247 'move' call_type_tmp[577243](103977 'typeof' call_tmp[782873]))
    }
    unknown result[103967] "dead at end of block" "insert auto destroy"
    unknown call_tmp[782880] "expr temp" "maybe param" "maybe type" "temp"
    (782883 'move' call_tmp[782880](103971 call size _mt[203] x[103952]))
    unknown call_tmp[782885] "expr temp" "maybe param" "maybe type" "temp"
    (782888 'move' call_tmp[782885](103968 call * call_tmp[782880] call_type_tmp[577243]))
    (645024 'default init var' result[103967] call_tmp[782885])
    (103979 'end of statement')
    {
      unknown d[103980] "dead at end of block" "index var" "insert auto destroy"
      (645026 'init var' d[103980] 0)
      (551391 'end of statement')
      unknown tmp[104004] "maybe param" "temp"
      unknown call_tmp[782892] "expr temp" "maybe param" "maybe type" "temp"
      (782895 'move' call_tmp[782892](103986 call size _mt[203] x[103952]))
      unknown call_tmp[782897] "expr temp" "maybe param" "maybe type" "temp"
      (782900 'move' call_tmp[782897](103983 call - call_tmp[782892] 1))
      (104016 'move' tmp[104004](104014 call chpl_compute_low_param_loop_bound 0 call_tmp[782897]))
      unknown tmp[104005] "maybe param" "temp"
      unknown call_tmp[782904] "expr temp" "maybe param" "maybe type" "temp"
      (782907 'move' call_tmp[782904](104023 call size _mt[203] x[103952]))
      unknown call_tmp[782909] "expr temp" "maybe param" "maybe type" "temp"
      (782912 'move' call_tmp[782909](104021 call - call_tmp[782904] 1))
      (104029 'move' tmp[104005](104027 call chpl_compute_high_param_loop_bound 0 call_tmp[782909]))
      unknown tmp[104006] "maybe param" "temp"
      (104032 'move' tmp[104006] 1)
      ParamForLoop[104034]
      { d[103980] tmp[104004] tmp[104005] tmp[104006]
        unknown call_tmp[782914] "expr temp" "maybe param" "maybe type" "temp"
        (782917 'move' call_tmp[782914](103995 call result[103967] d[103980]))
        unknown call_tmp[782919] "expr temp" "maybe param" "maybe type" "temp"
        (782922 'move' call_tmp[782919](104000 call x[103952] d[103980]))
        unknown call_tmp[782924] "expr temp" "maybe param" "maybe type" "temp"
        (782927 'move' call_tmp[782924](103997 call + call_tmp[782919] y[103959]))
        (103992 call = call_tmp[782914] call_tmp[782924])
        (551392 'end of statement' result[103967] d[103980])
      }
      label _unused_continueLabel[104008]
      label _breakLabel[104007]
    }
    (602250 'move' ret[602245](602249 'deref' result[103967]))
    gotoReturn _end_+[602243] _end_+[602243]
    (551395 'end of statement' result[103967])
    label _end_+[602243]
    (602247 return ret[602245])
  }
  where {
    (103963 call isHomogeneousTuple x[103952])
  }
  function +[104048](arg x[104052]:_any[141](?), arg y[104056]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602256] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577249] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[782929] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (782932 'move' call_tmp[782929](104081 call y[104056] 0))
      (577253 'move' call_type_tmp[577249](104083 'typeof' call_tmp[782929]))
    }
    unknown result[104073] "dead at end of block" "insert auto destroy"
    unknown call_tmp[782936] "expr temp" "maybe param" "maybe type" "temp"
    (782939 'move' call_tmp[782936](104077 call size _mt[203] y[104056]))
    unknown call_tmp[782941] "expr temp" "maybe param" "maybe type" "temp"
    (782944 'move' call_tmp[782941](104074 call * call_tmp[782936] call_type_tmp[577249]))
    (645028 'default init var' result[104073] call_tmp[782941])
    (104085 'end of statement')
    {
      unknown d[104086] "dead at end of block" "index var" "insert auto destroy"
      (645030 'init var' d[104086] 0)
      (551397 'end of statement')
      unknown tmp[104110] "maybe param" "temp"
      unknown call_tmp[782948] "expr temp" "maybe param" "maybe type" "temp"
      (782951 'move' call_tmp[782948](104092 call size _mt[203] y[104056]))
      unknown call_tmp[782953] "expr temp" "maybe param" "maybe type" "temp"
      (782956 'move' call_tmp[782953](104089 call - call_tmp[782948] 1))
      (104122 'move' tmp[104110](104120 call chpl_compute_low_param_loop_bound 0 call_tmp[782953]))
      unknown tmp[104111] "maybe param" "temp"
      unknown call_tmp[782960] "expr temp" "maybe param" "maybe type" "temp"
      (782963 'move' call_tmp[782960](104129 call size _mt[203] y[104056]))
      unknown call_tmp[782965] "expr temp" "maybe param" "maybe type" "temp"
      (782968 'move' call_tmp[782965](104127 call - call_tmp[782960] 1))
      (104135 'move' tmp[104111](104133 call chpl_compute_high_param_loop_bound 0 call_tmp[782965]))
      unknown tmp[104112] "maybe param" "temp"
      (104138 'move' tmp[104112] 1)
      ParamForLoop[104140]
      { d[104086] tmp[104110] tmp[104111] tmp[104112]
        unknown call_tmp[782970] "expr temp" "maybe param" "maybe type" "temp"
        (782973 'move' call_tmp[782970](104101 call result[104073] d[104086]))
        unknown call_tmp[782975] "expr temp" "maybe param" "maybe type" "temp"
        (782978 'move' call_tmp[782975](104107 call y[104056] d[104086]))
        unknown call_tmp[782980] "expr temp" "maybe param" "maybe type" "temp"
        (782983 'move' call_tmp[782980](104103 call + x[104052] call_tmp[782975]))
        (104098 call = call_tmp[782970] call_tmp[782980])
        (551398 'end of statement' result[104073] d[104086])
      }
      label _unused_continueLabel[104114]
      label _breakLabel[104113]
    }
    (602261 'move' ret[602256](602260 'deref' result[104073]))
    gotoReturn _end_+[602254] _end_+[602254]
    (551401 'end of statement' result[104073])
    label _end_+[602254]
    (602258 return ret[602256])
  }
  where {
    unknown tmp[482877] "maybe param" "temp"
    (482888 'move' tmp[482877](104062 call isHomogeneousTuple y[104056]))
    unknown call_tmp[782985] "expr temp" "maybe param" "maybe type" "temp"
    (782988 'move' call_tmp[782985](482890 call _cond_invalid tmp[482877]))
    if call_tmp[782985]
    {
      (482893 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670713] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670714] "maybe param" "temp"
    unknown call_tmp[782990] "expr temp" "maybe param" "maybe type" "temp"
    (782993 'move' call_tmp[782990](482878 call isTrue tmp[482877]))
    (670719 'move' tmp[670714](670717 call _cond_test call_tmp[782990]))
    if tmp[670714]
    {
      { scopeless type
        unknown call_type_tmp[577255] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[782995] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (782998 'move' call_tmp[782995](104068 call y[104056] 0))
        (577259 'move' call_type_tmp[577255](104070 'typeof' call_tmp[782995]))
      }
      unknown tmp[670721] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783000] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783003 'move' call_tmp[783000](520745 'typeof' x[104052]))
      unknown call_tmp[783005] "expr temp" "maybe param" "maybe type" "temp"
      (783008 'move' call_tmp[783005](394768 'is_coercible' call_type_tmp[577255] call_tmp[783000]))
      (670723 'move' tmp[670721](482881 call isTrue call_tmp[783005]))
      (670728 'move' tmp[670713](670725 '_paramFoldLogical' tmp[670714] tmp[670721]))
    }
    {
      (670733 'move' tmp[670713](670730 '_paramFoldLogical' tmp[670714] 0))
    }
    (1001366 call chpl_statementLevelSymbol tmp[670713])
  }
  function -[104154](arg x[104157]:_tuple[246](?), arg y[104164] :
  unknown call_tmp[783010] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602267] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577261] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783015] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783018 'move' call_tmp[783015](104180 call x[104157] 0))
      (577265 'move' call_type_tmp[577261](104182 'typeof' call_tmp[783015]))
    }
    unknown result[104172] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783022] "expr temp" "maybe param" "maybe type" "temp"
    (783025 'move' call_tmp[783022](104176 call size _mt[203] x[104157]))
    unknown call_tmp[783027] "expr temp" "maybe param" "maybe type" "temp"
    (783030 'move' call_tmp[783027](104173 call * call_tmp[783022] call_type_tmp[577261]))
    (645032 'default init var' result[104172] call_tmp[783027])
    (104184 'end of statement')
    {
      unknown d[104185] "dead at end of block" "index var" "insert auto destroy"
      (645034 'init var' d[104185] 0)
      (551403 'end of statement')
      unknown tmp[104209] "maybe param" "temp"
      unknown call_tmp[783034] "expr temp" "maybe param" "maybe type" "temp"
      (783037 'move' call_tmp[783034](104191 call size _mt[203] x[104157]))
      unknown call_tmp[783039] "expr temp" "maybe param" "maybe type" "temp"
      (783042 'move' call_tmp[783039](104188 call - call_tmp[783034] 1))
      (104221 'move' tmp[104209](104219 call chpl_compute_low_param_loop_bound 0 call_tmp[783039]))
      unknown tmp[104210] "maybe param" "temp"
      unknown call_tmp[783046] "expr temp" "maybe param" "maybe type" "temp"
      (783049 'move' call_tmp[783046](104228 call size _mt[203] x[104157]))
      unknown call_tmp[783051] "expr temp" "maybe param" "maybe type" "temp"
      (783054 'move' call_tmp[783051](104226 call - call_tmp[783046] 1))
      (104234 'move' tmp[104210](104232 call chpl_compute_high_param_loop_bound 0 call_tmp[783051]))
      unknown tmp[104211] "maybe param" "temp"
      (104237 'move' tmp[104211] 1)
      ParamForLoop[104239]
      { d[104185] tmp[104209] tmp[104210] tmp[104211]
        unknown call_tmp[783056] "expr temp" "maybe param" "maybe type" "temp"
        (783059 'move' call_tmp[783056](104200 call result[104172] d[104185]))
        unknown call_tmp[783061] "expr temp" "maybe param" "maybe type" "temp"
        (783064 'move' call_tmp[783061](104205 call x[104157] d[104185]))
        unknown call_tmp[783066] "expr temp" "maybe param" "maybe type" "temp"
        (783069 'move' call_tmp[783066](104202 call - call_tmp[783061] y[104164]))
        (104197 call = call_tmp[783056] call_tmp[783066])
        (551404 'end of statement' result[104172] d[104185])
      }
      label _unused_continueLabel[104213]
      label _breakLabel[104212]
    }
    (602272 'move' ret[602267](602271 'deref' result[104172]))
    gotoReturn _end_-[602265] _end_-[602265]
    (551407 'end of statement' result[104172])
    label _end_-[602265]
    (602269 return ret[602267])
  }
  where {
    (104168 call isHomogeneousTuple x[104157])
  }
  function -[104253](arg x[104257]:_any[141](?), arg y[104261]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602278] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577267] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783071] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783074 'move' call_tmp[783071](104286 call y[104261] 0))
      (577271 'move' call_type_tmp[577267](104288 'typeof' call_tmp[783071]))
    }
    unknown result[104278] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783078] "expr temp" "maybe param" "maybe type" "temp"
    (783081 'move' call_tmp[783078](104282 call size _mt[203] y[104261]))
    unknown call_tmp[783083] "expr temp" "maybe param" "maybe type" "temp"
    (783086 'move' call_tmp[783083](104279 call * call_tmp[783078] call_type_tmp[577267]))
    (645036 'default init var' result[104278] call_tmp[783083])
    (104290 'end of statement')
    {
      unknown d[104291] "dead at end of block" "index var" "insert auto destroy"
      (645038 'init var' d[104291] 0)
      (551409 'end of statement')
      unknown tmp[104315] "maybe param" "temp"
      unknown call_tmp[783090] "expr temp" "maybe param" "maybe type" "temp"
      (783093 'move' call_tmp[783090](104297 call size _mt[203] y[104261]))
      unknown call_tmp[783095] "expr temp" "maybe param" "maybe type" "temp"
      (783098 'move' call_tmp[783095](104294 call - call_tmp[783090] 1))
      (104327 'move' tmp[104315](104325 call chpl_compute_low_param_loop_bound 0 call_tmp[783095]))
      unknown tmp[104316] "maybe param" "temp"
      unknown call_tmp[783102] "expr temp" "maybe param" "maybe type" "temp"
      (783105 'move' call_tmp[783102](104334 call size _mt[203] y[104261]))
      unknown call_tmp[783107] "expr temp" "maybe param" "maybe type" "temp"
      (783110 'move' call_tmp[783107](104332 call - call_tmp[783102] 1))
      (104340 'move' tmp[104316](104338 call chpl_compute_high_param_loop_bound 0 call_tmp[783107]))
      unknown tmp[104317] "maybe param" "temp"
      (104343 'move' tmp[104317] 1)
      ParamForLoop[104345]
      { d[104291] tmp[104315] tmp[104316] tmp[104317]
        unknown call_tmp[783112] "expr temp" "maybe param" "maybe type" "temp"
        (783115 'move' call_tmp[783112](104306 call result[104278] d[104291]))
        unknown call_tmp[783117] "expr temp" "maybe param" "maybe type" "temp"
        (783120 'move' call_tmp[783117](104312 call y[104261] d[104291]))
        unknown call_tmp[783122] "expr temp" "maybe param" "maybe type" "temp"
        (783125 'move' call_tmp[783122](104308 call - x[104257] call_tmp[783117]))
        (104303 call = call_tmp[783112] call_tmp[783122])
        (551410 'end of statement' result[104278] d[104291])
      }
      label _unused_continueLabel[104319]
      label _breakLabel[104318]
    }
    (602283 'move' ret[602278](602282 'deref' result[104278]))
    gotoReturn _end_-[602276] _end_-[602276]
    (551413 'end of statement' result[104278])
    label _end_-[602276]
    (602280 return ret[602278])
  }
  where {
    unknown tmp[482898] "maybe param" "temp"
    (482909 'move' tmp[482898](104267 call isHomogeneousTuple y[104261]))
    unknown call_tmp[783127] "expr temp" "maybe param" "maybe type" "temp"
    (783130 'move' call_tmp[783127](482911 call _cond_invalid tmp[482898]))
    if call_tmp[783127]
    {
      (482914 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670740] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670741] "maybe param" "temp"
    unknown call_tmp[783132] "expr temp" "maybe param" "maybe type" "temp"
    (783135 'move' call_tmp[783132](482899 call isTrue tmp[482898]))
    (670746 'move' tmp[670741](670744 call _cond_test call_tmp[783132]))
    if tmp[670741]
    {
      { scopeless type
        unknown call_type_tmp[577273] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[783137] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (783140 'move' call_tmp[783137](104273 call y[104261] 0))
        (577277 'move' call_type_tmp[577273](104275 'typeof' call_tmp[783137]))
      }
      unknown tmp[670748] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783142] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783145 'move' call_tmp[783142](520747 'typeof' x[104257]))
      unknown call_tmp[783147] "expr temp" "maybe param" "maybe type" "temp"
      (783150 'move' call_tmp[783147](394769 'is_coercible' call_type_tmp[577273] call_tmp[783142]))
      (670750 'move' tmp[670748](482902 call isTrue call_tmp[783147]))
      (670755 'move' tmp[670740](670752 '_paramFoldLogical' tmp[670741] tmp[670748]))
    }
    {
      (670760 'move' tmp[670740](670757 '_paramFoldLogical' tmp[670741] 0))
    }
    (1001368 call chpl_statementLevelSymbol tmp[670740])
  }
  function *[104359](arg x[104362]:_tuple[246](?), arg y[104369] :
  unknown call_tmp[783152] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602289] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577279] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783157] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783160 'move' call_tmp[783157](104385 call x[104362] 0))
      (577283 'move' call_type_tmp[577279](104387 'typeof' call_tmp[783157]))
    }
    unknown result[104377] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783164] "expr temp" "maybe param" "maybe type" "temp"
    (783167 'move' call_tmp[783164](104381 call size _mt[203] x[104362]))
    unknown call_tmp[783169] "expr temp" "maybe param" "maybe type" "temp"
    (783172 'move' call_tmp[783169](104378 call * call_tmp[783164] call_type_tmp[577279]))
    (645040 'default init var' result[104377] call_tmp[783169])
    (104389 'end of statement')
    {
      unknown d[104390] "dead at end of block" "index var" "insert auto destroy"
      (645042 'init var' d[104390] 0)
      (551415 'end of statement')
      unknown tmp[104414] "maybe param" "temp"
      unknown call_tmp[783176] "expr temp" "maybe param" "maybe type" "temp"
      (783179 'move' call_tmp[783176](104396 call size _mt[203] x[104362]))
      unknown call_tmp[783181] "expr temp" "maybe param" "maybe type" "temp"
      (783184 'move' call_tmp[783181](104393 call - call_tmp[783176] 1))
      (104426 'move' tmp[104414](104424 call chpl_compute_low_param_loop_bound 0 call_tmp[783181]))
      unknown tmp[104415] "maybe param" "temp"
      unknown call_tmp[783188] "expr temp" "maybe param" "maybe type" "temp"
      (783191 'move' call_tmp[783188](104433 call size _mt[203] x[104362]))
      unknown call_tmp[783193] "expr temp" "maybe param" "maybe type" "temp"
      (783196 'move' call_tmp[783193](104431 call - call_tmp[783188] 1))
      (104439 'move' tmp[104415](104437 call chpl_compute_high_param_loop_bound 0 call_tmp[783193]))
      unknown tmp[104416] "maybe param" "temp"
      (104442 'move' tmp[104416] 1)
      ParamForLoop[104444]
      { d[104390] tmp[104414] tmp[104415] tmp[104416]
        unknown call_tmp[783198] "expr temp" "maybe param" "maybe type" "temp"
        (783201 'move' call_tmp[783198](104405 call result[104377] d[104390]))
        unknown call_tmp[783203] "expr temp" "maybe param" "maybe type" "temp"
        (783206 'move' call_tmp[783203](104410 call x[104362] d[104390]))
        unknown call_tmp[783208] "expr temp" "maybe param" "maybe type" "temp"
        (783211 'move' call_tmp[783208](104407 call * call_tmp[783203] y[104369]))
        (104402 call = call_tmp[783198] call_tmp[783208])
        (551416 'end of statement' result[104377] d[104390])
      }
      label _unused_continueLabel[104418]
      label _breakLabel[104417]
    }
    (602294 'move' ret[602289](602293 'deref' result[104377]))
    gotoReturn _end_*[602287] _end_*[602287]
    (551419 'end of statement' result[104377])
    label _end_*[602287]
    (602291 return ret[602289])
  }
  where {
    (104373 call isHomogeneousTuple x[104362])
  }
  function *[104458](arg x[104462]:_any[141](?), arg y[104466]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602300] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577285] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783213] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783216 'move' call_tmp[783213](104491 call y[104466] 0))
      (577289 'move' call_type_tmp[577285](104493 'typeof' call_tmp[783213]))
    }
    unknown result[104483] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783220] "expr temp" "maybe param" "maybe type" "temp"
    (783223 'move' call_tmp[783220](104487 call size _mt[203] y[104466]))
    unknown call_tmp[783225] "expr temp" "maybe param" "maybe type" "temp"
    (783228 'move' call_tmp[783225](104484 call * call_tmp[783220] call_type_tmp[577285]))
    (645044 'default init var' result[104483] call_tmp[783225])
    (104495 'end of statement')
    {
      unknown d[104496] "dead at end of block" "index var" "insert auto destroy"
      (645046 'init var' d[104496] 0)
      (551421 'end of statement')
      unknown tmp[104520] "maybe param" "temp"
      unknown call_tmp[783232] "expr temp" "maybe param" "maybe type" "temp"
      (783235 'move' call_tmp[783232](104502 call size _mt[203] y[104466]))
      unknown call_tmp[783237] "expr temp" "maybe param" "maybe type" "temp"
      (783240 'move' call_tmp[783237](104499 call - call_tmp[783232] 1))
      (104532 'move' tmp[104520](104530 call chpl_compute_low_param_loop_bound 0 call_tmp[783237]))
      unknown tmp[104521] "maybe param" "temp"
      unknown call_tmp[783244] "expr temp" "maybe param" "maybe type" "temp"
      (783247 'move' call_tmp[783244](104539 call size _mt[203] y[104466]))
      unknown call_tmp[783249] "expr temp" "maybe param" "maybe type" "temp"
      (783252 'move' call_tmp[783249](104537 call - call_tmp[783244] 1))
      (104545 'move' tmp[104521](104543 call chpl_compute_high_param_loop_bound 0 call_tmp[783249]))
      unknown tmp[104522] "maybe param" "temp"
      (104548 'move' tmp[104522] 1)
      ParamForLoop[104550]
      { d[104496] tmp[104520] tmp[104521] tmp[104522]
        unknown call_tmp[783254] "expr temp" "maybe param" "maybe type" "temp"
        (783257 'move' call_tmp[783254](104511 call result[104483] d[104496]))
        unknown call_tmp[783259] "expr temp" "maybe param" "maybe type" "temp"
        (783262 'move' call_tmp[783259](104517 call y[104466] d[104496]))
        unknown call_tmp[783264] "expr temp" "maybe param" "maybe type" "temp"
        (783267 'move' call_tmp[783264](104513 call * x[104462] call_tmp[783259]))
        (104508 call = call_tmp[783254] call_tmp[783264])
        (551422 'end of statement' result[104483] d[104496])
      }
      label _unused_continueLabel[104524]
      label _breakLabel[104523]
    }
    (602305 'move' ret[602300](602304 'deref' result[104483]))
    gotoReturn _end_*[602298] _end_*[602298]
    (551425 'end of statement' result[104483])
    label _end_*[602298]
    (602302 return ret[602300])
  }
  where {
    unknown tmp[482919] "maybe param" "temp"
    (482930 'move' tmp[482919](104472 call isHomogeneousTuple y[104466]))
    unknown call_tmp[783269] "expr temp" "maybe param" "maybe type" "temp"
    (783272 'move' call_tmp[783269](482932 call _cond_invalid tmp[482919]))
    if call_tmp[783269]
    {
      (482935 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670767] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670768] "maybe param" "temp"
    unknown call_tmp[783274] "expr temp" "maybe param" "maybe type" "temp"
    (783277 'move' call_tmp[783274](482920 call isTrue tmp[482919]))
    (670773 'move' tmp[670768](670771 call _cond_test call_tmp[783274]))
    if tmp[670768]
    {
      { scopeless type
        unknown call_type_tmp[577291] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[783279] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (783282 'move' call_tmp[783279](104478 call y[104466] 0))
        (577295 'move' call_type_tmp[577291](104480 'typeof' call_tmp[783279]))
      }
      unknown tmp[670775] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783284] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783287 'move' call_tmp[783284](520749 'typeof' x[104462]))
      unknown call_tmp[783289] "expr temp" "maybe param" "maybe type" "temp"
      (783292 'move' call_tmp[783289](394770 'is_coercible' call_type_tmp[577291] call_tmp[783284]))
      (670777 'move' tmp[670775](482923 call isTrue call_tmp[783289]))
      (670782 'move' tmp[670767](670779 '_paramFoldLogical' tmp[670768] tmp[670775]))
    }
    {
      (670787 'move' tmp[670767](670784 '_paramFoldLogical' tmp[670768] 0))
    }
    (1001370 call chpl_statementLevelSymbol tmp[670767])
  }
  function /[104564](arg x[104567]:_tuple[246](?), arg y[104574] :
  unknown call_tmp[783294] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602311] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577297] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783299] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783302 'move' call_tmp[783299](104590 call x[104567] 0))
      (577301 'move' call_type_tmp[577297](104592 'typeof' call_tmp[783299]))
    }
    unknown result[104582] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783306] "expr temp" "maybe param" "maybe type" "temp"
    (783309 'move' call_tmp[783306](104586 call size _mt[203] x[104567]))
    unknown call_tmp[783311] "expr temp" "maybe param" "maybe type" "temp"
    (783314 'move' call_tmp[783311](104583 call * call_tmp[783306] call_type_tmp[577297]))
    (645048 'default init var' result[104582] call_tmp[783311])
    (104594 'end of statement')
    {
      unknown d[104595] "dead at end of block" "index var" "insert auto destroy"
      (645050 'init var' d[104595] 0)
      (551427 'end of statement')
      unknown tmp[104619] "maybe param" "temp"
      unknown call_tmp[783318] "expr temp" "maybe param" "maybe type" "temp"
      (783321 'move' call_tmp[783318](104601 call size _mt[203] x[104567]))
      unknown call_tmp[783323] "expr temp" "maybe param" "maybe type" "temp"
      (783326 'move' call_tmp[783323](104598 call - call_tmp[783318] 1))
      (104631 'move' tmp[104619](104629 call chpl_compute_low_param_loop_bound 0 call_tmp[783323]))
      unknown tmp[104620] "maybe param" "temp"
      unknown call_tmp[783330] "expr temp" "maybe param" "maybe type" "temp"
      (783333 'move' call_tmp[783330](104638 call size _mt[203] x[104567]))
      unknown call_tmp[783335] "expr temp" "maybe param" "maybe type" "temp"
      (783338 'move' call_tmp[783335](104636 call - call_tmp[783330] 1))
      (104644 'move' tmp[104620](104642 call chpl_compute_high_param_loop_bound 0 call_tmp[783335]))
      unknown tmp[104621] "maybe param" "temp"
      (104647 'move' tmp[104621] 1)
      ParamForLoop[104649]
      { d[104595] tmp[104619] tmp[104620] tmp[104621]
        unknown call_tmp[783340] "expr temp" "maybe param" "maybe type" "temp"
        (783343 'move' call_tmp[783340](104610 call result[104582] d[104595]))
        unknown call_tmp[783345] "expr temp" "maybe param" "maybe type" "temp"
        (783348 'move' call_tmp[783345](104615 call x[104567] d[104595]))
        unknown call_tmp[783350] "expr temp" "maybe param" "maybe type" "temp"
        (783353 'move' call_tmp[783350](104612 call / call_tmp[783345] y[104574]))
        (104607 call = call_tmp[783340] call_tmp[783350])
        (551428 'end of statement' result[104582] d[104595])
      }
      label _unused_continueLabel[104623]
      label _breakLabel[104622]
    }
    (602316 'move' ret[602311](602315 'deref' result[104582]))
    gotoReturn _end_/[602309] _end_/[602309]
    (551431 'end of statement' result[104582])
    label _end_/[602309]
    (602313 return ret[602311])
  }
  where {
    (104578 call isHomogeneousTuple x[104567])
  }
  function /[104663](arg x[104667]:_any[141](?), arg y[104671]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602322] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577303] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783355] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783358 'move' call_tmp[783355](104696 call y[104671] 0))
      (577307 'move' call_type_tmp[577303](104698 'typeof' call_tmp[783355]))
    }
    unknown result[104688] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783362] "expr temp" "maybe param" "maybe type" "temp"
    (783365 'move' call_tmp[783362](104692 call size _mt[203] y[104671]))
    unknown call_tmp[783367] "expr temp" "maybe param" "maybe type" "temp"
    (783370 'move' call_tmp[783367](104689 call * call_tmp[783362] call_type_tmp[577303]))
    (645052 'default init var' result[104688] call_tmp[783367])
    (104700 'end of statement')
    {
      unknown d[104701] "dead at end of block" "index var" "insert auto destroy"
      (645054 'init var' d[104701] 0)
      (551433 'end of statement')
      unknown tmp[104725] "maybe param" "temp"
      unknown call_tmp[783374] "expr temp" "maybe param" "maybe type" "temp"
      (783377 'move' call_tmp[783374](104707 call size _mt[203] y[104671]))
      unknown call_tmp[783379] "expr temp" "maybe param" "maybe type" "temp"
      (783382 'move' call_tmp[783379](104704 call - call_tmp[783374] 1))
      (104737 'move' tmp[104725](104735 call chpl_compute_low_param_loop_bound 0 call_tmp[783379]))
      unknown tmp[104726] "maybe param" "temp"
      unknown call_tmp[783386] "expr temp" "maybe param" "maybe type" "temp"
      (783389 'move' call_tmp[783386](104744 call size _mt[203] y[104671]))
      unknown call_tmp[783391] "expr temp" "maybe param" "maybe type" "temp"
      (783394 'move' call_tmp[783391](104742 call - call_tmp[783386] 1))
      (104750 'move' tmp[104726](104748 call chpl_compute_high_param_loop_bound 0 call_tmp[783391]))
      unknown tmp[104727] "maybe param" "temp"
      (104753 'move' tmp[104727] 1)
      ParamForLoop[104755]
      { d[104701] tmp[104725] tmp[104726] tmp[104727]
        unknown call_tmp[783396] "expr temp" "maybe param" "maybe type" "temp"
        (783399 'move' call_tmp[783396](104716 call result[104688] d[104701]))
        unknown call_tmp[783401] "expr temp" "maybe param" "maybe type" "temp"
        (783404 'move' call_tmp[783401](104722 call y[104671] d[104701]))
        unknown call_tmp[783406] "expr temp" "maybe param" "maybe type" "temp"
        (783409 'move' call_tmp[783406](104718 call / x[104667] call_tmp[783401]))
        (104713 call = call_tmp[783396] call_tmp[783406])
        (551434 'end of statement' result[104688] d[104701])
      }
      label _unused_continueLabel[104729]
      label _breakLabel[104728]
    }
    (602327 'move' ret[602322](602326 'deref' result[104688]))
    gotoReturn _end_/[602320] _end_/[602320]
    (551437 'end of statement' result[104688])
    label _end_/[602320]
    (602324 return ret[602322])
  }
  where {
    unknown tmp[482940] "maybe param" "temp"
    (482951 'move' tmp[482940](104677 call isHomogeneousTuple y[104671]))
    unknown call_tmp[783411] "expr temp" "maybe param" "maybe type" "temp"
    (783414 'move' call_tmp[783411](482953 call _cond_invalid tmp[482940]))
    if call_tmp[783411]
    {
      (482956 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670794] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670795] "maybe param" "temp"
    unknown call_tmp[783416] "expr temp" "maybe param" "maybe type" "temp"
    (783419 'move' call_tmp[783416](482941 call isTrue tmp[482940]))
    (670800 'move' tmp[670795](670798 call _cond_test call_tmp[783416]))
    if tmp[670795]
    {
      { scopeless type
        unknown call_type_tmp[577309] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[783421] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (783424 'move' call_tmp[783421](104683 call y[104671] 0))
        (577313 'move' call_type_tmp[577309](104685 'typeof' call_tmp[783421]))
      }
      unknown tmp[670802] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783426] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783429 'move' call_tmp[783426](520751 'typeof' x[104667]))
      unknown call_tmp[783431] "expr temp" "maybe param" "maybe type" "temp"
      (783434 'move' call_tmp[783431](394771 'is_coercible' call_type_tmp[577309] call_tmp[783426]))
      (670804 'move' tmp[670802](482944 call isTrue call_tmp[783431]))
      (670809 'move' tmp[670794](670806 '_paramFoldLogical' tmp[670795] tmp[670802]))
    }
    {
      (670814 'move' tmp[670794](670811 '_paramFoldLogical' tmp[670795] 0))
    }
    (1001372 call chpl_statementLevelSymbol tmp[670794])
  }
  function %[104769](arg x[104772]:_tuple[246](?), arg y[104779] :
  unknown call_tmp[783436] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602333] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577315] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783441] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783444 'move' call_tmp[783441](104795 call x[104772] 0))
      (577319 'move' call_type_tmp[577315](104797 'typeof' call_tmp[783441]))
    }
    unknown result[104787] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783448] "expr temp" "maybe param" "maybe type" "temp"
    (783451 'move' call_tmp[783448](104791 call size _mt[203] x[104772]))
    unknown call_tmp[783453] "expr temp" "maybe param" "maybe type" "temp"
    (783456 'move' call_tmp[783453](104788 call * call_tmp[783448] call_type_tmp[577315]))
    (645056 'default init var' result[104787] call_tmp[783453])
    (104799 'end of statement')
    {
      unknown d[104800] "dead at end of block" "index var" "insert auto destroy"
      (645058 'init var' d[104800] 0)
      (551439 'end of statement')
      unknown tmp[104824] "maybe param" "temp"
      unknown call_tmp[783460] "expr temp" "maybe param" "maybe type" "temp"
      (783463 'move' call_tmp[783460](104806 call size _mt[203] x[104772]))
      unknown call_tmp[783465] "expr temp" "maybe param" "maybe type" "temp"
      (783468 'move' call_tmp[783465](104803 call - call_tmp[783460] 1))
      (104836 'move' tmp[104824](104834 call chpl_compute_low_param_loop_bound 0 call_tmp[783465]))
      unknown tmp[104825] "maybe param" "temp"
      unknown call_tmp[783472] "expr temp" "maybe param" "maybe type" "temp"
      (783475 'move' call_tmp[783472](104843 call size _mt[203] x[104772]))
      unknown call_tmp[783477] "expr temp" "maybe param" "maybe type" "temp"
      (783480 'move' call_tmp[783477](104841 call - call_tmp[783472] 1))
      (104849 'move' tmp[104825](104847 call chpl_compute_high_param_loop_bound 0 call_tmp[783477]))
      unknown tmp[104826] "maybe param" "temp"
      (104852 'move' tmp[104826] 1)
      ParamForLoop[104854]
      { d[104800] tmp[104824] tmp[104825] tmp[104826]
        unknown call_tmp[783482] "expr temp" "maybe param" "maybe type" "temp"
        (783485 'move' call_tmp[783482](104815 call result[104787] d[104800]))
        unknown call_tmp[783487] "expr temp" "maybe param" "maybe type" "temp"
        (783490 'move' call_tmp[783487](104820 call x[104772] d[104800]))
        unknown call_tmp[783492] "expr temp" "maybe param" "maybe type" "temp"
        (783495 'move' call_tmp[783492](104817 call % call_tmp[783487] y[104779]))
        (104812 call = call_tmp[783482] call_tmp[783492])
        (551440 'end of statement' result[104787] d[104800])
      }
      label _unused_continueLabel[104828]
      label _breakLabel[104827]
    }
    (602338 'move' ret[602333](602337 'deref' result[104787]))
    gotoReturn _end_%[602331] _end_%[602331]
    (551443 'end of statement' result[104787])
    label _end_%[602331]
    (602335 return ret[602333])
  }
  where {
    (104783 call isHomogeneousTuple x[104772])
  }
  function %[104868](arg x[104872]:_any[141](?), arg y[104876]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602344] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577321] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783497] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783500 'move' call_tmp[783497](104901 call y[104876] 0))
      (577325 'move' call_type_tmp[577321](104903 'typeof' call_tmp[783497]))
    }
    unknown result[104893] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783504] "expr temp" "maybe param" "maybe type" "temp"
    (783507 'move' call_tmp[783504](104897 call size _mt[203] y[104876]))
    unknown call_tmp[783509] "expr temp" "maybe param" "maybe type" "temp"
    (783512 'move' call_tmp[783509](104894 call * call_tmp[783504] call_type_tmp[577321]))
    (645060 'default init var' result[104893] call_tmp[783509])
    (104905 'end of statement')
    {
      unknown d[104906] "dead at end of block" "index var" "insert auto destroy"
      (645062 'init var' d[104906] 0)
      (551445 'end of statement')
      unknown tmp[104930] "maybe param" "temp"
      unknown call_tmp[783516] "expr temp" "maybe param" "maybe type" "temp"
      (783519 'move' call_tmp[783516](104912 call size _mt[203] y[104876]))
      unknown call_tmp[783521] "expr temp" "maybe param" "maybe type" "temp"
      (783524 'move' call_tmp[783521](104909 call - call_tmp[783516] 1))
      (104942 'move' tmp[104930](104940 call chpl_compute_low_param_loop_bound 0 call_tmp[783521]))
      unknown tmp[104931] "maybe param" "temp"
      unknown call_tmp[783528] "expr temp" "maybe param" "maybe type" "temp"
      (783531 'move' call_tmp[783528](104949 call size _mt[203] y[104876]))
      unknown call_tmp[783533] "expr temp" "maybe param" "maybe type" "temp"
      (783536 'move' call_tmp[783533](104947 call - call_tmp[783528] 1))
      (104955 'move' tmp[104931](104953 call chpl_compute_high_param_loop_bound 0 call_tmp[783533]))
      unknown tmp[104932] "maybe param" "temp"
      (104958 'move' tmp[104932] 1)
      ParamForLoop[104960]
      { d[104906] tmp[104930] tmp[104931] tmp[104932]
        unknown call_tmp[783538] "expr temp" "maybe param" "maybe type" "temp"
        (783541 'move' call_tmp[783538](104921 call result[104893] d[104906]))
        unknown call_tmp[783543] "expr temp" "maybe param" "maybe type" "temp"
        (783546 'move' call_tmp[783543](104927 call y[104876] d[104906]))
        unknown call_tmp[783548] "expr temp" "maybe param" "maybe type" "temp"
        (783551 'move' call_tmp[783548](104923 call % x[104872] call_tmp[783543]))
        (104918 call = call_tmp[783538] call_tmp[783548])
        (551446 'end of statement' result[104893] d[104906])
      }
      label _unused_continueLabel[104934]
      label _breakLabel[104933]
    }
    (602349 'move' ret[602344](602348 'deref' result[104893]))
    gotoReturn _end_%[602342] _end_%[602342]
    (551449 'end of statement' result[104893])
    label _end_%[602342]
    (602346 return ret[602344])
  }
  where {
    unknown tmp[482961] "maybe param" "temp"
    (482972 'move' tmp[482961](104882 call isHomogeneousTuple y[104876]))
    unknown call_tmp[783553] "expr temp" "maybe param" "maybe type" "temp"
    (783556 'move' call_tmp[783553](482974 call _cond_invalid tmp[482961]))
    if call_tmp[783553]
    {
      (482977 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670821] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670822] "maybe param" "temp"
    unknown call_tmp[783558] "expr temp" "maybe param" "maybe type" "temp"
    (783561 'move' call_tmp[783558](482962 call isTrue tmp[482961]))
    (670827 'move' tmp[670822](670825 call _cond_test call_tmp[783558]))
    if tmp[670822]
    {
      { scopeless type
        unknown call_type_tmp[577327] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[783563] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (783566 'move' call_tmp[783563](104888 call y[104876] 0))
        (577331 'move' call_type_tmp[577327](104890 'typeof' call_tmp[783563]))
      }
      unknown tmp[670829] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783568] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783571 'move' call_tmp[783568](520753 'typeof' x[104872]))
      unknown call_tmp[783573] "expr temp" "maybe param" "maybe type" "temp"
      (783576 'move' call_tmp[783573](394772 'is_coercible' call_type_tmp[577327] call_tmp[783568]))
      (670831 'move' tmp[670829](482965 call isTrue call_tmp[783573]))
      (670836 'move' tmp[670821](670833 '_paramFoldLogical' tmp[670822] tmp[670829]))
    }
    {
      (670841 'move' tmp[670821](670838 '_paramFoldLogical' tmp[670822] 0))
    }
    (1001374 call chpl_statementLevelSymbol tmp[670821])
  }
  function **[104974](arg x[104977]:_tuple[246](?), arg y[104984] :
  unknown call_tmp[783578] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602355] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577333] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783583] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783586 'move' call_tmp[783583](105000 call x[104977] 0))
      (577337 'move' call_type_tmp[577333](105002 'typeof' call_tmp[783583]))
    }
    unknown result[104992] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783590] "expr temp" "maybe param" "maybe type" "temp"
    (783593 'move' call_tmp[783590](104996 call size _mt[203] x[104977]))
    unknown call_tmp[783595] "expr temp" "maybe param" "maybe type" "temp"
    (783598 'move' call_tmp[783595](104993 call * call_tmp[783590] call_type_tmp[577333]))
    (645064 'default init var' result[104992] call_tmp[783595])
    (105004 'end of statement')
    {
      unknown d[105005] "dead at end of block" "index var" "insert auto destroy"
      (645066 'init var' d[105005] 0)
      (551451 'end of statement')
      unknown tmp[105029] "maybe param" "temp"
      unknown call_tmp[783602] "expr temp" "maybe param" "maybe type" "temp"
      (783605 'move' call_tmp[783602](105011 call size _mt[203] x[104977]))
      unknown call_tmp[783607] "expr temp" "maybe param" "maybe type" "temp"
      (783610 'move' call_tmp[783607](105008 call - call_tmp[783602] 1))
      (105041 'move' tmp[105029](105039 call chpl_compute_low_param_loop_bound 0 call_tmp[783607]))
      unknown tmp[105030] "maybe param" "temp"
      unknown call_tmp[783614] "expr temp" "maybe param" "maybe type" "temp"
      (783617 'move' call_tmp[783614](105048 call size _mt[203] x[104977]))
      unknown call_tmp[783619] "expr temp" "maybe param" "maybe type" "temp"
      (783622 'move' call_tmp[783619](105046 call - call_tmp[783614] 1))
      (105054 'move' tmp[105030](105052 call chpl_compute_high_param_loop_bound 0 call_tmp[783619]))
      unknown tmp[105031] "maybe param" "temp"
      (105057 'move' tmp[105031] 1)
      ParamForLoop[105059]
      { d[105005] tmp[105029] tmp[105030] tmp[105031]
        unknown call_tmp[783624] "expr temp" "maybe param" "maybe type" "temp"
        (783627 'move' call_tmp[783624](105020 call result[104992] d[105005]))
        unknown call_tmp[783629] "expr temp" "maybe param" "maybe type" "temp"
        (783632 'move' call_tmp[783629](105025 call x[104977] d[105005]))
        unknown call_tmp[783634] "expr temp" "maybe param" "maybe type" "temp"
        (783637 'move' call_tmp[783634](105022 call ** call_tmp[783629] y[104984]))
        (105017 call = call_tmp[783624] call_tmp[783634])
        (551452 'end of statement' result[104992] d[105005])
      }
      label _unused_continueLabel[105033]
      label _breakLabel[105032]
    }
    (602360 'move' ret[602355](602359 'deref' result[104992]))
    gotoReturn _end_**[602353] _end_**[602353]
    (551455 'end of statement' result[104992])
    label _end_**[602353]
    (602357 return ret[602355])
  }
  where {
    (104988 call isHomogeneousTuple x[104977])
  }
  function **[105073](arg x[105077]:_any[141](?), arg y[105081]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602366] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577339] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783639] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783642 'move' call_tmp[783639](105106 call y[105081] 0))
      (577343 'move' call_type_tmp[577339](105108 'typeof' call_tmp[783639]))
    }
    unknown result[105098] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783646] "expr temp" "maybe param" "maybe type" "temp"
    (783649 'move' call_tmp[783646](105102 call size _mt[203] y[105081]))
    unknown call_tmp[783651] "expr temp" "maybe param" "maybe type" "temp"
    (783654 'move' call_tmp[783651](105099 call * call_tmp[783646] call_type_tmp[577339]))
    (645068 'default init var' result[105098] call_tmp[783651])
    (105110 'end of statement')
    {
      unknown d[105111] "dead at end of block" "index var" "insert auto destroy"
      (645070 'init var' d[105111] 0)
      (551457 'end of statement')
      unknown tmp[105135] "maybe param" "temp"
      unknown call_tmp[783658] "expr temp" "maybe param" "maybe type" "temp"
      (783661 'move' call_tmp[783658](105117 call size _mt[203] y[105081]))
      unknown call_tmp[783663] "expr temp" "maybe param" "maybe type" "temp"
      (783666 'move' call_tmp[783663](105114 call - call_tmp[783658] 1))
      (105147 'move' tmp[105135](105145 call chpl_compute_low_param_loop_bound 0 call_tmp[783663]))
      unknown tmp[105136] "maybe param" "temp"
      unknown call_tmp[783670] "expr temp" "maybe param" "maybe type" "temp"
      (783673 'move' call_tmp[783670](105154 call size _mt[203] y[105081]))
      unknown call_tmp[783675] "expr temp" "maybe param" "maybe type" "temp"
      (783678 'move' call_tmp[783675](105152 call - call_tmp[783670] 1))
      (105160 'move' tmp[105136](105158 call chpl_compute_high_param_loop_bound 0 call_tmp[783675]))
      unknown tmp[105137] "maybe param" "temp"
      (105163 'move' tmp[105137] 1)
      ParamForLoop[105165]
      { d[105111] tmp[105135] tmp[105136] tmp[105137]
        unknown call_tmp[783680] "expr temp" "maybe param" "maybe type" "temp"
        (783683 'move' call_tmp[783680](105126 call result[105098] d[105111]))
        unknown call_tmp[783685] "expr temp" "maybe param" "maybe type" "temp"
        (783688 'move' call_tmp[783685](105132 call y[105081] d[105111]))
        unknown call_tmp[783690] "expr temp" "maybe param" "maybe type" "temp"
        (783693 'move' call_tmp[783690](105128 call ** x[105077] call_tmp[783685]))
        (105123 call = call_tmp[783680] call_tmp[783690])
        (551458 'end of statement' result[105098] d[105111])
      }
      label _unused_continueLabel[105139]
      label _breakLabel[105138]
    }
    (602371 'move' ret[602366](602370 'deref' result[105098]))
    gotoReturn _end_**[602364] _end_**[602364]
    (551461 'end of statement' result[105098])
    label _end_**[602364]
    (602368 return ret[602366])
  }
  where {
    unknown tmp[482982] "maybe param" "temp"
    (482993 'move' tmp[482982](105087 call isHomogeneousTuple y[105081]))
    unknown call_tmp[783695] "expr temp" "maybe param" "maybe type" "temp"
    (783698 'move' call_tmp[783695](482995 call _cond_invalid tmp[482982]))
    if call_tmp[783695]
    {
      (482998 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670848] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670849] "maybe param" "temp"
    unknown call_tmp[783700] "expr temp" "maybe param" "maybe type" "temp"
    (783703 'move' call_tmp[783700](482983 call isTrue tmp[482982]))
    (670854 'move' tmp[670849](670852 call _cond_test call_tmp[783700]))
    if tmp[670849]
    {
      { scopeless type
        unknown call_type_tmp[577345] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[783705] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (783708 'move' call_tmp[783705](105093 call y[105081] 0))
        (577349 'move' call_type_tmp[577345](105095 'typeof' call_tmp[783705]))
      }
      unknown tmp[670856] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783710] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783713 'move' call_tmp[783710](520755 'typeof' x[105077]))
      unknown call_tmp[783715] "expr temp" "maybe param" "maybe type" "temp"
      (783718 'move' call_tmp[783715](394773 'is_coercible' call_type_tmp[577345] call_tmp[783710]))
      (670858 'move' tmp[670856](482986 call isTrue call_tmp[783715]))
      (670863 'move' tmp[670848](670860 '_paramFoldLogical' tmp[670849] tmp[670856]))
    }
    {
      (670868 'move' tmp[670848](670865 '_paramFoldLogical' tmp[670849] 0))
    }
    (1001376 call chpl_statementLevelSymbol tmp[670848])
  }
  function &[105179](arg x[105182]:_tuple[246](?), arg y[105189] :
  unknown call_tmp[783720] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602377] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577351] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783725] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783728 'move' call_tmp[783725](105205 call x[105182] 0))
      (577355 'move' call_type_tmp[577351](105207 'typeof' call_tmp[783725]))
    }
    unknown result[105197] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783732] "expr temp" "maybe param" "maybe type" "temp"
    (783735 'move' call_tmp[783732](105201 call size _mt[203] x[105182]))
    unknown call_tmp[783737] "expr temp" "maybe param" "maybe type" "temp"
    (783740 'move' call_tmp[783737](105198 call * call_tmp[783732] call_type_tmp[577351]))
    (645072 'default init var' result[105197] call_tmp[783737])
    (105209 'end of statement')
    {
      unknown d[105210] "dead at end of block" "index var" "insert auto destroy"
      (645074 'init var' d[105210] 0)
      (551463 'end of statement')
      unknown tmp[105234] "maybe param" "temp"
      unknown call_tmp[783744] "expr temp" "maybe param" "maybe type" "temp"
      (783747 'move' call_tmp[783744](105216 call size _mt[203] x[105182]))
      unknown call_tmp[783749] "expr temp" "maybe param" "maybe type" "temp"
      (783752 'move' call_tmp[783749](105213 call - call_tmp[783744] 1))
      (105246 'move' tmp[105234](105244 call chpl_compute_low_param_loop_bound 0 call_tmp[783749]))
      unknown tmp[105235] "maybe param" "temp"
      unknown call_tmp[783756] "expr temp" "maybe param" "maybe type" "temp"
      (783759 'move' call_tmp[783756](105253 call size _mt[203] x[105182]))
      unknown call_tmp[783761] "expr temp" "maybe param" "maybe type" "temp"
      (783764 'move' call_tmp[783761](105251 call - call_tmp[783756] 1))
      (105259 'move' tmp[105235](105257 call chpl_compute_high_param_loop_bound 0 call_tmp[783761]))
      unknown tmp[105236] "maybe param" "temp"
      (105262 'move' tmp[105236] 1)
      ParamForLoop[105264]
      { d[105210] tmp[105234] tmp[105235] tmp[105236]
        unknown call_tmp[783766] "expr temp" "maybe param" "maybe type" "temp"
        (783769 'move' call_tmp[783766](105225 call result[105197] d[105210]))
        unknown call_tmp[783771] "expr temp" "maybe param" "maybe type" "temp"
        (783774 'move' call_tmp[783771](105230 call x[105182] d[105210]))
        unknown call_tmp[783776] "expr temp" "maybe param" "maybe type" "temp"
        (783779 'move' call_tmp[783776](105227 call & call_tmp[783771] y[105189]))
        (105222 call = call_tmp[783766] call_tmp[783776])
        (551464 'end of statement' result[105197] d[105210])
      }
      label _unused_continueLabel[105238]
      label _breakLabel[105237]
    }
    (602382 'move' ret[602377](602381 'deref' result[105197]))
    gotoReturn _end_&[602375] _end_&[602375]
    (551467 'end of statement' result[105197])
    label _end_&[602375]
    (602379 return ret[602377])
  }
  where {
    (105193 call isHomogeneousTuple x[105182])
  }
  function &[105278](arg x[105282]:_any[141](?), arg y[105286]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602388] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577357] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783781] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783784 'move' call_tmp[783781](105311 call y[105286] 0))
      (577361 'move' call_type_tmp[577357](105313 'typeof' call_tmp[783781]))
    }
    unknown result[105303] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783788] "expr temp" "maybe param" "maybe type" "temp"
    (783791 'move' call_tmp[783788](105307 call size _mt[203] y[105286]))
    unknown call_tmp[783793] "expr temp" "maybe param" "maybe type" "temp"
    (783796 'move' call_tmp[783793](105304 call * call_tmp[783788] call_type_tmp[577357]))
    (645076 'default init var' result[105303] call_tmp[783793])
    (105315 'end of statement')
    {
      unknown d[105316] "dead at end of block" "index var" "insert auto destroy"
      (645078 'init var' d[105316] 0)
      (551469 'end of statement')
      unknown tmp[105340] "maybe param" "temp"
      unknown call_tmp[783800] "expr temp" "maybe param" "maybe type" "temp"
      (783803 'move' call_tmp[783800](105322 call size _mt[203] y[105286]))
      unknown call_tmp[783805] "expr temp" "maybe param" "maybe type" "temp"
      (783808 'move' call_tmp[783805](105319 call - call_tmp[783800] 1))
      (105352 'move' tmp[105340](105350 call chpl_compute_low_param_loop_bound 0 call_tmp[783805]))
      unknown tmp[105341] "maybe param" "temp"
      unknown call_tmp[783812] "expr temp" "maybe param" "maybe type" "temp"
      (783815 'move' call_tmp[783812](105359 call size _mt[203] y[105286]))
      unknown call_tmp[783817] "expr temp" "maybe param" "maybe type" "temp"
      (783820 'move' call_tmp[783817](105357 call - call_tmp[783812] 1))
      (105365 'move' tmp[105341](105363 call chpl_compute_high_param_loop_bound 0 call_tmp[783817]))
      unknown tmp[105342] "maybe param" "temp"
      (105368 'move' tmp[105342] 1)
      ParamForLoop[105370]
      { d[105316] tmp[105340] tmp[105341] tmp[105342]
        unknown call_tmp[783822] "expr temp" "maybe param" "maybe type" "temp"
        (783825 'move' call_tmp[783822](105331 call result[105303] d[105316]))
        unknown call_tmp[783827] "expr temp" "maybe param" "maybe type" "temp"
        (783830 'move' call_tmp[783827](105337 call y[105286] d[105316]))
        unknown call_tmp[783832] "expr temp" "maybe param" "maybe type" "temp"
        (783835 'move' call_tmp[783832](105333 call & x[105282] call_tmp[783827]))
        (105328 call = call_tmp[783822] call_tmp[783832])
        (551470 'end of statement' result[105303] d[105316])
      }
      label _unused_continueLabel[105344]
      label _breakLabel[105343]
    }
    (602393 'move' ret[602388](602392 'deref' result[105303]))
    gotoReturn _end_&[602386] _end_&[602386]
    (551473 'end of statement' result[105303])
    label _end_&[602386]
    (602390 return ret[602388])
  }
  where {
    unknown tmp[483003] "maybe param" "temp"
    (483014 'move' tmp[483003](105292 call isHomogeneousTuple y[105286]))
    unknown call_tmp[783837] "expr temp" "maybe param" "maybe type" "temp"
    (783840 'move' call_tmp[783837](483016 call _cond_invalid tmp[483003]))
    if call_tmp[783837]
    {
      (483019 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670875] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670876] "maybe param" "temp"
    unknown call_tmp[783842] "expr temp" "maybe param" "maybe type" "temp"
    (783845 'move' call_tmp[783842](483004 call isTrue tmp[483003]))
    (670881 'move' tmp[670876](670879 call _cond_test call_tmp[783842]))
    if tmp[670876]
    {
      { scopeless type
        unknown call_type_tmp[577363] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[783847] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (783850 'move' call_tmp[783847](105298 call y[105286] 0))
        (577367 'move' call_type_tmp[577363](105300 'typeof' call_tmp[783847]))
      }
      unknown tmp[670883] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783852] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783855 'move' call_tmp[783852](520757 'typeof' x[105282]))
      unknown call_tmp[783857] "expr temp" "maybe param" "maybe type" "temp"
      (783860 'move' call_tmp[783857](394774 'is_coercible' call_type_tmp[577363] call_tmp[783852]))
      (670885 'move' tmp[670883](483007 call isTrue call_tmp[783857]))
      (670890 'move' tmp[670875](670887 '_paramFoldLogical' tmp[670876] tmp[670883]))
    }
    {
      (670895 'move' tmp[670875](670892 '_paramFoldLogical' tmp[670876] 0))
    }
    (1001378 call chpl_statementLevelSymbol tmp[670875])
  }
  function |[105384](arg x[105387]:_tuple[246](?), arg y[105394] :
  unknown call_tmp[783862] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602399] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577369] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783867] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783870 'move' call_tmp[783867](105410 call x[105387] 0))
      (577373 'move' call_type_tmp[577369](105412 'typeof' call_tmp[783867]))
    }
    unknown result[105402] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783874] "expr temp" "maybe param" "maybe type" "temp"
    (783877 'move' call_tmp[783874](105406 call size _mt[203] x[105387]))
    unknown call_tmp[783879] "expr temp" "maybe param" "maybe type" "temp"
    (783882 'move' call_tmp[783879](105403 call * call_tmp[783874] call_type_tmp[577369]))
    (645080 'default init var' result[105402] call_tmp[783879])
    (105414 'end of statement')
    {
      unknown d[105415] "dead at end of block" "index var" "insert auto destroy"
      (645082 'init var' d[105415] 0)
      (551475 'end of statement')
      unknown tmp[105439] "maybe param" "temp"
      unknown call_tmp[783886] "expr temp" "maybe param" "maybe type" "temp"
      (783889 'move' call_tmp[783886](105421 call size _mt[203] x[105387]))
      unknown call_tmp[783891] "expr temp" "maybe param" "maybe type" "temp"
      (783894 'move' call_tmp[783891](105418 call - call_tmp[783886] 1))
      (105451 'move' tmp[105439](105449 call chpl_compute_low_param_loop_bound 0 call_tmp[783891]))
      unknown tmp[105440] "maybe param" "temp"
      unknown call_tmp[783898] "expr temp" "maybe param" "maybe type" "temp"
      (783901 'move' call_tmp[783898](105458 call size _mt[203] x[105387]))
      unknown call_tmp[783903] "expr temp" "maybe param" "maybe type" "temp"
      (783906 'move' call_tmp[783903](105456 call - call_tmp[783898] 1))
      (105464 'move' tmp[105440](105462 call chpl_compute_high_param_loop_bound 0 call_tmp[783903]))
      unknown tmp[105441] "maybe param" "temp"
      (105467 'move' tmp[105441] 1)
      ParamForLoop[105469]
      { d[105415] tmp[105439] tmp[105440] tmp[105441]
        unknown call_tmp[783908] "expr temp" "maybe param" "maybe type" "temp"
        (783911 'move' call_tmp[783908](105430 call result[105402] d[105415]))
        unknown call_tmp[783913] "expr temp" "maybe param" "maybe type" "temp"
        (783916 'move' call_tmp[783913](105435 call x[105387] d[105415]))
        unknown call_tmp[783918] "expr temp" "maybe param" "maybe type" "temp"
        (783921 'move' call_tmp[783918](105432 call | call_tmp[783913] y[105394]))
        (105427 call = call_tmp[783908] call_tmp[783918])
        (551476 'end of statement' result[105402] d[105415])
      }
      label _unused_continueLabel[105443]
      label _breakLabel[105442]
    }
    (602404 'move' ret[602399](602403 'deref' result[105402]))
    gotoReturn _end_|[602397] _end_|[602397]
    (551479 'end of statement' result[105402])
    label _end_|[602397]
    (602401 return ret[602399])
  }
  where {
    (105398 call isHomogeneousTuple x[105387])
  }
  function |[105483](arg x[105487]:_any[141](?), arg y[105491]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602410] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577375] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[783923] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (783926 'move' call_tmp[783923](105516 call y[105491] 0))
      (577379 'move' call_type_tmp[577375](105518 'typeof' call_tmp[783923]))
    }
    unknown result[105508] "dead at end of block" "insert auto destroy"
    unknown call_tmp[783930] "expr temp" "maybe param" "maybe type" "temp"
    (783933 'move' call_tmp[783930](105512 call size _mt[203] y[105491]))
    unknown call_tmp[783935] "expr temp" "maybe param" "maybe type" "temp"
    (783938 'move' call_tmp[783935](105509 call * call_tmp[783930] call_type_tmp[577375]))
    (645084 'default init var' result[105508] call_tmp[783935])
    (105520 'end of statement')
    {
      unknown d[105521] "dead at end of block" "index var" "insert auto destroy"
      (645086 'init var' d[105521] 0)
      (551481 'end of statement')
      unknown tmp[105545] "maybe param" "temp"
      unknown call_tmp[783942] "expr temp" "maybe param" "maybe type" "temp"
      (783945 'move' call_tmp[783942](105527 call size _mt[203] y[105491]))
      unknown call_tmp[783947] "expr temp" "maybe param" "maybe type" "temp"
      (783950 'move' call_tmp[783947](105524 call - call_tmp[783942] 1))
      (105557 'move' tmp[105545](105555 call chpl_compute_low_param_loop_bound 0 call_tmp[783947]))
      unknown tmp[105546] "maybe param" "temp"
      unknown call_tmp[783954] "expr temp" "maybe param" "maybe type" "temp"
      (783957 'move' call_tmp[783954](105564 call size _mt[203] y[105491]))
      unknown call_tmp[783959] "expr temp" "maybe param" "maybe type" "temp"
      (783962 'move' call_tmp[783959](105562 call - call_tmp[783954] 1))
      (105570 'move' tmp[105546](105568 call chpl_compute_high_param_loop_bound 0 call_tmp[783959]))
      unknown tmp[105547] "maybe param" "temp"
      (105573 'move' tmp[105547] 1)
      ParamForLoop[105575]
      { d[105521] tmp[105545] tmp[105546] tmp[105547]
        unknown call_tmp[783964] "expr temp" "maybe param" "maybe type" "temp"
        (783967 'move' call_tmp[783964](105536 call result[105508] d[105521]))
        unknown call_tmp[783969] "expr temp" "maybe param" "maybe type" "temp"
        (783972 'move' call_tmp[783969](105542 call y[105491] d[105521]))
        unknown call_tmp[783974] "expr temp" "maybe param" "maybe type" "temp"
        (783977 'move' call_tmp[783974](105538 call | x[105487] call_tmp[783969]))
        (105533 call = call_tmp[783964] call_tmp[783974])
        (551482 'end of statement' result[105508] d[105521])
      }
      label _unused_continueLabel[105549]
      label _breakLabel[105548]
    }
    (602415 'move' ret[602410](602414 'deref' result[105508]))
    gotoReturn _end_|[602408] _end_|[602408]
    (551485 'end of statement' result[105508])
    label _end_|[602408]
    (602412 return ret[602410])
  }
  where {
    unknown tmp[483024] "maybe param" "temp"
    (483035 'move' tmp[483024](105497 call isHomogeneousTuple y[105491]))
    unknown call_tmp[783979] "expr temp" "maybe param" "maybe type" "temp"
    (783982 'move' call_tmp[783979](483037 call _cond_invalid tmp[483024]))
    if call_tmp[783979]
    {
      (483040 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670902] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670903] "maybe param" "temp"
    unknown call_tmp[783984] "expr temp" "maybe param" "maybe type" "temp"
    (783987 'move' call_tmp[783984](483025 call isTrue tmp[483024]))
    (670908 'move' tmp[670903](670906 call _cond_test call_tmp[783984]))
    if tmp[670903]
    {
      { scopeless type
        unknown call_type_tmp[577381] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[783989] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (783992 'move' call_tmp[783989](105503 call y[105491] 0))
        (577385 'move' call_type_tmp[577381](105505 'typeof' call_tmp[783989]))
      }
      unknown tmp[670910] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[783994] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (783997 'move' call_tmp[783994](520759 'typeof' x[105487]))
      unknown call_tmp[783999] "expr temp" "maybe param" "maybe type" "temp"
      (784002 'move' call_tmp[783999](394775 'is_coercible' call_type_tmp[577381] call_tmp[783994]))
      (670912 'move' tmp[670910](483028 call isTrue call_tmp[783999]))
      (670917 'move' tmp[670902](670914 '_paramFoldLogical' tmp[670903] tmp[670910]))
    }
    {
      (670922 'move' tmp[670902](670919 '_paramFoldLogical' tmp[670903] 0))
    }
    (1001380 call chpl_statementLevelSymbol tmp[670902])
  }
  function ^[105589](arg x[105592]:_tuple[246](?), arg y[105599] :
  unknown call_tmp[784004] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602421] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577387] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[784009] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (784012 'move' call_tmp[784009](105615 call x[105592] 0))
      (577391 'move' call_type_tmp[577387](105617 'typeof' call_tmp[784009]))
    }
    unknown result[105607] "dead at end of block" "insert auto destroy"
    unknown call_tmp[784016] "expr temp" "maybe param" "maybe type" "temp"
    (784019 'move' call_tmp[784016](105611 call size _mt[203] x[105592]))
    unknown call_tmp[784021] "expr temp" "maybe param" "maybe type" "temp"
    (784024 'move' call_tmp[784021](105608 call * call_tmp[784016] call_type_tmp[577387]))
    (645088 'default init var' result[105607] call_tmp[784021])
    (105619 'end of statement')
    {
      unknown d[105620] "dead at end of block" "index var" "insert auto destroy"
      (645090 'init var' d[105620] 0)
      (551487 'end of statement')
      unknown tmp[105644] "maybe param" "temp"
      unknown call_tmp[784028] "expr temp" "maybe param" "maybe type" "temp"
      (784031 'move' call_tmp[784028](105626 call size _mt[203] x[105592]))
      unknown call_tmp[784033] "expr temp" "maybe param" "maybe type" "temp"
      (784036 'move' call_tmp[784033](105623 call - call_tmp[784028] 1))
      (105656 'move' tmp[105644](105654 call chpl_compute_low_param_loop_bound 0 call_tmp[784033]))
      unknown tmp[105645] "maybe param" "temp"
      unknown call_tmp[784040] "expr temp" "maybe param" "maybe type" "temp"
      (784043 'move' call_tmp[784040](105663 call size _mt[203] x[105592]))
      unknown call_tmp[784045] "expr temp" "maybe param" "maybe type" "temp"
      (784048 'move' call_tmp[784045](105661 call - call_tmp[784040] 1))
      (105669 'move' tmp[105645](105667 call chpl_compute_high_param_loop_bound 0 call_tmp[784045]))
      unknown tmp[105646] "maybe param" "temp"
      (105672 'move' tmp[105646] 1)
      ParamForLoop[105674]
      { d[105620] tmp[105644] tmp[105645] tmp[105646]
        unknown call_tmp[784050] "expr temp" "maybe param" "maybe type" "temp"
        (784053 'move' call_tmp[784050](105635 call result[105607] d[105620]))
        unknown call_tmp[784055] "expr temp" "maybe param" "maybe type" "temp"
        (784058 'move' call_tmp[784055](105640 call x[105592] d[105620]))
        unknown call_tmp[784060] "expr temp" "maybe param" "maybe type" "temp"
        (784063 'move' call_tmp[784060](105637 call ^ call_tmp[784055] y[105599]))
        (105632 call = call_tmp[784050] call_tmp[784060])
        (551488 'end of statement' result[105607] d[105620])
      }
      label _unused_continueLabel[105648]
      label _breakLabel[105647]
    }
    (602426 'move' ret[602421](602425 'deref' result[105607]))
    gotoReturn _end_^[602419] _end_^[602419]
    (551491 'end of statement' result[105607])
    label _end_^[602419]
    (602423 return ret[602421])
  }
  where {
    (105603 call isHomogeneousTuple x[105592])
  }
  function ^[105688](arg x[105692]:_any[141](?), arg y[105696]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602432] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577393] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[784065] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (784068 'move' call_tmp[784065](105721 call y[105696] 0))
      (577397 'move' call_type_tmp[577393](105723 'typeof' call_tmp[784065]))
    }
    unknown result[105713] "dead at end of block" "insert auto destroy"
    unknown call_tmp[784072] "expr temp" "maybe param" "maybe type" "temp"
    (784075 'move' call_tmp[784072](105717 call size _mt[203] y[105696]))
    unknown call_tmp[784077] "expr temp" "maybe param" "maybe type" "temp"
    (784080 'move' call_tmp[784077](105714 call * call_tmp[784072] call_type_tmp[577393]))
    (645092 'default init var' result[105713] call_tmp[784077])
    (105725 'end of statement')
    {
      unknown d[105726] "dead at end of block" "index var" "insert auto destroy"
      (645094 'init var' d[105726] 0)
      (551493 'end of statement')
      unknown tmp[105750] "maybe param" "temp"
      unknown call_tmp[784084] "expr temp" "maybe param" "maybe type" "temp"
      (784087 'move' call_tmp[784084](105732 call size _mt[203] y[105696]))
      unknown call_tmp[784089] "expr temp" "maybe param" "maybe type" "temp"
      (784092 'move' call_tmp[784089](105729 call - call_tmp[784084] 1))
      (105762 'move' tmp[105750](105760 call chpl_compute_low_param_loop_bound 0 call_tmp[784089]))
      unknown tmp[105751] "maybe param" "temp"
      unknown call_tmp[784096] "expr temp" "maybe param" "maybe type" "temp"
      (784099 'move' call_tmp[784096](105769 call size _mt[203] y[105696]))
      unknown call_tmp[784101] "expr temp" "maybe param" "maybe type" "temp"
      (784104 'move' call_tmp[784101](105767 call - call_tmp[784096] 1))
      (105775 'move' tmp[105751](105773 call chpl_compute_high_param_loop_bound 0 call_tmp[784101]))
      unknown tmp[105752] "maybe param" "temp"
      (105778 'move' tmp[105752] 1)
      ParamForLoop[105780]
      { d[105726] tmp[105750] tmp[105751] tmp[105752]
        unknown call_tmp[784106] "expr temp" "maybe param" "maybe type" "temp"
        (784109 'move' call_tmp[784106](105741 call result[105713] d[105726]))
        unknown call_tmp[784111] "expr temp" "maybe param" "maybe type" "temp"
        (784114 'move' call_tmp[784111](105747 call y[105696] d[105726]))
        unknown call_tmp[784116] "expr temp" "maybe param" "maybe type" "temp"
        (784119 'move' call_tmp[784116](105743 call ^ x[105692] call_tmp[784111]))
        (105738 call = call_tmp[784106] call_tmp[784116])
        (551494 'end of statement' result[105713] d[105726])
      }
      label _unused_continueLabel[105754]
      label _breakLabel[105753]
    }
    (602437 'move' ret[602432](602436 'deref' result[105713]))
    gotoReturn _end_^[602430] _end_^[602430]
    (551497 'end of statement' result[105713])
    label _end_^[602430]
    (602434 return ret[602432])
  }
  where {
    unknown tmp[483045] "maybe param" "temp"
    (483056 'move' tmp[483045](105702 call isHomogeneousTuple y[105696]))
    unknown call_tmp[784121] "expr temp" "maybe param" "maybe type" "temp"
    (784124 'move' call_tmp[784121](483058 call _cond_invalid tmp[483045]))
    if call_tmp[784121]
    {
      (483061 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670929] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670930] "maybe param" "temp"
    unknown call_tmp[784126] "expr temp" "maybe param" "maybe type" "temp"
    (784129 'move' call_tmp[784126](483046 call isTrue tmp[483045]))
    (670935 'move' tmp[670930](670933 call _cond_test call_tmp[784126]))
    if tmp[670930]
    {
      { scopeless type
        unknown call_type_tmp[577399] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[784131] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (784134 'move' call_tmp[784131](105708 call y[105696] 0))
        (577403 'move' call_type_tmp[577399](105710 'typeof' call_tmp[784131]))
      }
      unknown tmp[670937] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[784136] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (784139 'move' call_tmp[784136](520761 'typeof' x[105692]))
      unknown call_tmp[784141] "expr temp" "maybe param" "maybe type" "temp"
      (784144 'move' call_tmp[784141](394776 'is_coercible' call_type_tmp[577399] call_tmp[784136]))
      (670939 'move' tmp[670937](483049 call isTrue call_tmp[784141]))
      (670944 'move' tmp[670929](670941 '_paramFoldLogical' tmp[670930] tmp[670937]))
    }
    {
      (670949 'move' tmp[670929](670946 '_paramFoldLogical' tmp[670930] 0))
    }
    (1001382 call chpl_statementLevelSymbol tmp[670929])
  }
  function <<[105794](arg x[105797]:_tuple[246](?), arg y[105804] :
  unknown call_tmp[784146] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602443] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577405] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[784151] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (784154 'move' call_tmp[784151](105820 call x[105797] 0))
      (577409 'move' call_type_tmp[577405](105822 'typeof' call_tmp[784151]))
    }
    unknown result[105812] "dead at end of block" "insert auto destroy"
    unknown call_tmp[784158] "expr temp" "maybe param" "maybe type" "temp"
    (784161 'move' call_tmp[784158](105816 call size _mt[203] x[105797]))
    unknown call_tmp[784163] "expr temp" "maybe param" "maybe type" "temp"
    (784166 'move' call_tmp[784163](105813 call * call_tmp[784158] call_type_tmp[577405]))
    (645096 'default init var' result[105812] call_tmp[784163])
    (105824 'end of statement')
    {
      unknown d[105825] "dead at end of block" "index var" "insert auto destroy"
      (645098 'init var' d[105825] 0)
      (551499 'end of statement')
      unknown tmp[105849] "maybe param" "temp"
      unknown call_tmp[784170] "expr temp" "maybe param" "maybe type" "temp"
      (784173 'move' call_tmp[784170](105831 call size _mt[203] x[105797]))
      unknown call_tmp[784175] "expr temp" "maybe param" "maybe type" "temp"
      (784178 'move' call_tmp[784175](105828 call - call_tmp[784170] 1))
      (105861 'move' tmp[105849](105859 call chpl_compute_low_param_loop_bound 0 call_tmp[784175]))
      unknown tmp[105850] "maybe param" "temp"
      unknown call_tmp[784182] "expr temp" "maybe param" "maybe type" "temp"
      (784185 'move' call_tmp[784182](105868 call size _mt[203] x[105797]))
      unknown call_tmp[784187] "expr temp" "maybe param" "maybe type" "temp"
      (784190 'move' call_tmp[784187](105866 call - call_tmp[784182] 1))
      (105874 'move' tmp[105850](105872 call chpl_compute_high_param_loop_bound 0 call_tmp[784187]))
      unknown tmp[105851] "maybe param" "temp"
      (105877 'move' tmp[105851] 1)
      ParamForLoop[105879]
      { d[105825] tmp[105849] tmp[105850] tmp[105851]
        unknown call_tmp[784192] "expr temp" "maybe param" "maybe type" "temp"
        (784195 'move' call_tmp[784192](105840 call result[105812] d[105825]))
        unknown call_tmp[784197] "expr temp" "maybe param" "maybe type" "temp"
        (784200 'move' call_tmp[784197](105845 call x[105797] d[105825]))
        unknown call_tmp[784202] "expr temp" "maybe param" "maybe type" "temp"
        (784205 'move' call_tmp[784202](105842 call << call_tmp[784197] y[105804]))
        (105837 call = call_tmp[784192] call_tmp[784202])
        (551500 'end of statement' result[105812] d[105825])
      }
      label _unused_continueLabel[105853]
      label _breakLabel[105852]
    }
    (602448 'move' ret[602443](602447 'deref' result[105812]))
    gotoReturn _end_<<[602441] _end_<<[602441]
    (551503 'end of statement' result[105812])
    label _end_<<[602441]
    (602445 return ret[602443])
  }
  where {
    (105808 call isHomogeneousTuple x[105797])
  }
  function <<[105893](arg x[105897]:_any[141](?), arg y[105901]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602454] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577411] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[784207] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (784210 'move' call_tmp[784207](105926 call y[105901] 0))
      (577415 'move' call_type_tmp[577411](105928 'typeof' call_tmp[784207]))
    }
    unknown result[105918] "dead at end of block" "insert auto destroy"
    unknown call_tmp[784214] "expr temp" "maybe param" "maybe type" "temp"
    (784217 'move' call_tmp[784214](105922 call size _mt[203] y[105901]))
    unknown call_tmp[784219] "expr temp" "maybe param" "maybe type" "temp"
    (784222 'move' call_tmp[784219](105919 call * call_tmp[784214] call_type_tmp[577411]))
    (645100 'default init var' result[105918] call_tmp[784219])
    (105930 'end of statement')
    {
      unknown d[105931] "dead at end of block" "index var" "insert auto destroy"
      (645102 'init var' d[105931] 0)
      (551505 'end of statement')
      unknown tmp[105955] "maybe param" "temp"
      unknown call_tmp[784226] "expr temp" "maybe param" "maybe type" "temp"
      (784229 'move' call_tmp[784226](105937 call size _mt[203] y[105901]))
      unknown call_tmp[784231] "expr temp" "maybe param" "maybe type" "temp"
      (784234 'move' call_tmp[784231](105934 call - call_tmp[784226] 1))
      (105967 'move' tmp[105955](105965 call chpl_compute_low_param_loop_bound 0 call_tmp[784231]))
      unknown tmp[105956] "maybe param" "temp"
      unknown call_tmp[784238] "expr temp" "maybe param" "maybe type" "temp"
      (784241 'move' call_tmp[784238](105974 call size _mt[203] y[105901]))
      unknown call_tmp[784243] "expr temp" "maybe param" "maybe type" "temp"
      (784246 'move' call_tmp[784243](105972 call - call_tmp[784238] 1))
      (105980 'move' tmp[105956](105978 call chpl_compute_high_param_loop_bound 0 call_tmp[784243]))
      unknown tmp[105957] "maybe param" "temp"
      (105983 'move' tmp[105957] 1)
      ParamForLoop[105985]
      { d[105931] tmp[105955] tmp[105956] tmp[105957]
        unknown call_tmp[784248] "expr temp" "maybe param" "maybe type" "temp"
        (784251 'move' call_tmp[784248](105946 call result[105918] d[105931]))
        unknown call_tmp[784253] "expr temp" "maybe param" "maybe type" "temp"
        (784256 'move' call_tmp[784253](105952 call y[105901] d[105931]))
        unknown call_tmp[784258] "expr temp" "maybe param" "maybe type" "temp"
        (784261 'move' call_tmp[784258](105948 call << x[105897] call_tmp[784253]))
        (105943 call = call_tmp[784248] call_tmp[784258])
        (551506 'end of statement' result[105918] d[105931])
      }
      label _unused_continueLabel[105959]
      label _breakLabel[105958]
    }
    (602459 'move' ret[602454](602458 'deref' result[105918]))
    gotoReturn _end_<<[602452] _end_<<[602452]
    (551509 'end of statement' result[105918])
    label _end_<<[602452]
    (602456 return ret[602454])
  }
  where {
    unknown tmp[483066] "maybe param" "temp"
    (483077 'move' tmp[483066](105907 call isHomogeneousTuple y[105901]))
    unknown call_tmp[784263] "expr temp" "maybe param" "maybe type" "temp"
    (784266 'move' call_tmp[784263](483079 call _cond_invalid tmp[483066]))
    if call_tmp[784263]
    {
      (483082 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670956] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670957] "maybe param" "temp"
    unknown call_tmp[784268] "expr temp" "maybe param" "maybe type" "temp"
    (784271 'move' call_tmp[784268](483067 call isTrue tmp[483066]))
    (670962 'move' tmp[670957](670960 call _cond_test call_tmp[784268]))
    if tmp[670957]
    {
      { scopeless type
        unknown call_type_tmp[577417] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[784273] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (784276 'move' call_tmp[784273](105913 call y[105901] 0))
        (577421 'move' call_type_tmp[577417](105915 'typeof' call_tmp[784273]))
      }
      unknown tmp[670964] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[784278] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (784281 'move' call_tmp[784278](520763 'typeof' x[105897]))
      unknown call_tmp[784283] "expr temp" "maybe param" "maybe type" "temp"
      (784286 'move' call_tmp[784283](394777 'is_coercible' call_type_tmp[577417] call_tmp[784278]))
      (670966 'move' tmp[670964](483070 call isTrue call_tmp[784283]))
      (670971 'move' tmp[670956](670968 '_paramFoldLogical' tmp[670957] tmp[670964]))
    }
    {
      (670976 'move' tmp[670956](670973 '_paramFoldLogical' tmp[670957] 0))
    }
    (1001384 call chpl_statementLevelSymbol tmp[670956])
  }
  function >>[105999](arg x[106002]:_tuple[246](?), arg y[106009] :
  unknown call_tmp[784288] "expr temp" "maybe param" "maybe type" "temp") : _unknown[42] "inline" "operator"
  {
    unknown ret[602465] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577423] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[784293] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (784296 'move' call_tmp[784293](106025 call x[106002] 0))
      (577427 'move' call_type_tmp[577423](106027 'typeof' call_tmp[784293]))
    }
    unknown result[106017] "dead at end of block" "insert auto destroy"
    unknown call_tmp[784300] "expr temp" "maybe param" "maybe type" "temp"
    (784303 'move' call_tmp[784300](106021 call size _mt[203] x[106002]))
    unknown call_tmp[784305] "expr temp" "maybe param" "maybe type" "temp"
    (784308 'move' call_tmp[784305](106018 call * call_tmp[784300] call_type_tmp[577423]))
    (645104 'default init var' result[106017] call_tmp[784305])
    (106029 'end of statement')
    {
      unknown d[106030] "dead at end of block" "index var" "insert auto destroy"
      (645106 'init var' d[106030] 0)
      (551511 'end of statement')
      unknown tmp[106054] "maybe param" "temp"
      unknown call_tmp[784312] "expr temp" "maybe param" "maybe type" "temp"
      (784315 'move' call_tmp[784312](106036 call size _mt[203] x[106002]))
      unknown call_tmp[784317] "expr temp" "maybe param" "maybe type" "temp"
      (784320 'move' call_tmp[784317](106033 call - call_tmp[784312] 1))
      (106066 'move' tmp[106054](106064 call chpl_compute_low_param_loop_bound 0 call_tmp[784317]))
      unknown tmp[106055] "maybe param" "temp"
      unknown call_tmp[784324] "expr temp" "maybe param" "maybe type" "temp"
      (784327 'move' call_tmp[784324](106073 call size _mt[203] x[106002]))
      unknown call_tmp[784329] "expr temp" "maybe param" "maybe type" "temp"
      (784332 'move' call_tmp[784329](106071 call - call_tmp[784324] 1))
      (106079 'move' tmp[106055](106077 call chpl_compute_high_param_loop_bound 0 call_tmp[784329]))
      unknown tmp[106056] "maybe param" "temp"
      (106082 'move' tmp[106056] 1)
      ParamForLoop[106084]
      { d[106030] tmp[106054] tmp[106055] tmp[106056]
        unknown call_tmp[784334] "expr temp" "maybe param" "maybe type" "temp"
        (784337 'move' call_tmp[784334](106045 call result[106017] d[106030]))
        unknown call_tmp[784339] "expr temp" "maybe param" "maybe type" "temp"
        (784342 'move' call_tmp[784339](106050 call x[106002] d[106030]))
        unknown call_tmp[784344] "expr temp" "maybe param" "maybe type" "temp"
        (784347 'move' call_tmp[784344](106047 call >> call_tmp[784339] y[106009]))
        (106042 call = call_tmp[784334] call_tmp[784344])
        (551512 'end of statement' result[106017] d[106030])
      }
      label _unused_continueLabel[106058]
      label _breakLabel[106057]
    }
    (602470 'move' ret[602465](602469 'deref' result[106017]))
    gotoReturn _end_>>[602463] _end_>>[602463]
    (551515 'end of statement' result[106017])
    label _end_>>[602463]
    (602467 return ret[602465])
  }
  where {
    (106013 call isHomogeneousTuple x[106002])
  }
  function >>[106098](arg x[106102]:_any[141](?), arg y[106106]:_tuple[246](?)) : _unknown[42] "inline" "operator"
  {
    unknown ret[602476] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[577429] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[784349] "expr temp" "maybe param" "used in type" "maybe type" "temp"
      (784352 'move' call_tmp[784349](106131 call y[106106] 0))
      (577433 'move' call_type_tmp[577429](106133 'typeof' call_tmp[784349]))
    }
    unknown result[106123] "dead at end of block" "insert auto destroy"
    unknown call_tmp[784356] "expr temp" "maybe param" "maybe type" "temp"
    (784359 'move' call_tmp[784356](106127 call size _mt[203] y[106106]))
    unknown call_tmp[784361] "expr temp" "maybe param" "maybe type" "temp"
    (784364 'move' call_tmp[784361](106124 call * call_tmp[784356] call_type_tmp[577429]))
    (645108 'default init var' result[106123] call_tmp[784361])
    (106135 'end of statement')
    {
      unknown d[106136] "dead at end of block" "index var" "insert auto destroy"
      (645110 'init var' d[106136] 0)
      (551517 'end of statement')
      unknown tmp[106160] "maybe param" "temp"
      unknown call_tmp[784368] "expr temp" "maybe param" "maybe type" "temp"
      (784371 'move' call_tmp[784368](106142 call size _mt[203] y[106106]))
      unknown call_tmp[784373] "expr temp" "maybe param" "maybe type" "temp"
      (784376 'move' call_tmp[784373](106139 call - call_tmp[784368] 1))
      (106172 'move' tmp[106160](106170 call chpl_compute_low_param_loop_bound 0 call_tmp[784373]))
      unknown tmp[106161] "maybe param" "temp"
      unknown call_tmp[784380] "expr temp" "maybe param" "maybe type" "temp"
      (784383 'move' call_tmp[784380](106179 call size _mt[203] y[106106]))
      unknown call_tmp[784385] "expr temp" "maybe param" "maybe type" "temp"
      (784388 'move' call_tmp[784385](106177 call - call_tmp[784380] 1))
      (106185 'move' tmp[106161](106183 call chpl_compute_high_param_loop_bound 0 call_tmp[784385]))
      unknown tmp[106162] "maybe param" "temp"
      (106188 'move' tmp[106162] 1)
      ParamForLoop[106190]
      { d[106136] tmp[106160] tmp[106161] tmp[106162]
        unknown call_tmp[784390] "expr temp" "maybe param" "maybe type" "temp"
        (784393 'move' call_tmp[784390](106151 call result[106123] d[106136]))
        unknown call_tmp[784395] "expr temp" "maybe param" "maybe type" "temp"
        (784398 'move' call_tmp[784395](106157 call y[106106] d[106136]))
        unknown call_tmp[784400] "expr temp" "maybe param" "maybe type" "temp"
        (784403 'move' call_tmp[784400](106153 call >> x[106102] call_tmp[784395]))
        (106148 call = call_tmp[784390] call_tmp[784400])
        (551518 'end of statement' result[106123] d[106136])
      }
      label _unused_continueLabel[106164]
      label _breakLabel[106163]
    }
    (602481 'move' ret[602476](602480 'deref' result[106123]))
    gotoReturn _end_>>[602474] _end_>>[602474]
    (551521 'end of statement' result[106123])
    label _end_>>[602474]
    (602478 return ret[602476])
  }
  where {
    unknown tmp[483087] "maybe param" "temp"
    (483098 'move' tmp[483087](106112 call isHomogeneousTuple y[106106]))
    unknown call_tmp[784405] "expr temp" "maybe param" "maybe type" "temp"
    (784408 'move' call_tmp[784405](483100 call _cond_invalid tmp[483087]))
    if call_tmp[784405]
    {
      (483103 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[670983] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[670984] "maybe param" "temp"
    unknown call_tmp[784410] "expr temp" "maybe param" "maybe type" "temp"
    (784413 'move' call_tmp[784410](483088 call isTrue tmp[483087]))
    (670989 'move' tmp[670984](670987 call _cond_test call_tmp[784410]))
    if tmp[670984]
    {
      { scopeless type
        unknown call_type_tmp[577435] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[784415] "expr temp" "maybe param" "used in type" "maybe type" "temp"
        (784418 'move' call_tmp[784415](106118 call y[106106] 0))
        (577439 'move' call_type_tmp[577435](106120 'typeof' call_tmp[784415]))
      }
      unknown tmp[670991] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[784420] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (784423 'move' call_tmp[784420](520765 'typeof' x[106102]))
      unknown call_tmp[784425] "expr temp" "maybe param" "maybe type" "temp"
      (784428 'move' call_tmp[784425](394778 'is_coercible' call_type_tmp[577435] call_tmp[784420]))
      (670993 'move' tmp[670991](483091 call isTrue call_tmp[784425]))
      (670998 'move' tmp[670983](670995 '_paramFoldLogical' tmp[670984] tmp[670991]))
    }
    {
      (671003 'move' tmp[670983](671000 '_paramFoldLogical' tmp[670984] 0))
    }
    (1001386 call chpl_statementLevelSymbol tmp[670983])
  }
  (396107 'used modules list'(99452 'use' ChapelStandard[315387])(99454 'use' DSIUtil[99447]))
}
AST dump for ChapelRange after pass copyPropagation.
Module use list: ChapelBase HaltWrappers AutoMath DSIUtil Reflection ChapelDebugPrint 

{
  function chpl__init_ChapelRange[468420]() : void[4] "insert line file info" "module init" "resolved"
  {
    (607001 return _void[46])
  }
  type boundKind[107122] def both[107114]:boundKind[107122] def low[107116]:boundKind[107122] def high[107118]:boundKind[107122] def neither[107120]:boundKind[107122]
  type strideKind[107137] def one[107127]:strideKind[107137] def negOne[107129]:strideKind[107137] def positive[107131]:strideKind[107137] def negative[107133]:strideKind[107137] def any[107135]:strideKind[107137]
  type range(int(64),low,one)[1576928] val _low[1576890]:int(64)[10] val _high[1576895]:int(64)[10]
  type range(int(64),both,one)[1610039] val _low[1610001]:int(64)[10] val _high[1610006]:int(64)[10]
  type range(int(64),both,any)[3464570] val _low[3464532]:int(64)[10] val _high[3464537]:int(64)[10] val _stride[3464542]:int(64)[10] val _alignment[3464556]:int(64)[10]
  type range(int(64),high,one)[1730829] val _low[1730791]:int(64)[10] val _high[1730796]:int(64)[10]
  type range(byteIndex,both,one)[1655317] val _low[1655279]:int(64)[10] val _high[1655284]:int(64)[10]
  type range(byteIndex,low,one)[1698271] val _low[1698233]:int(64)[10] val _high[1698238]:int(64)[10]
  type range(byteIndex,high,one)[1726799] val _low[1726761]:int(64)[10] val _high[1726766]:int(64)[10]
  function range(int(64),both,one)[1610039].init[1610254](ref arg this[1610260]:range(int(64),both,one)[1610039], const in arg low[1610266]:int(64)[10], const in arg high[1610270]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1610338 '.=' this[1610260] _low[1610001] low[1610266])
    (1610370 '.=' this[1610260] _high[1610006] high[1610270])
    (1610501 return _void[46])
  }
  function range(byteIndex,both,one)[1655317].init[1654908](ref arg this[1654914]:range(byteIndex,both,one)[1655317], const  ref arg low[1654920]:byteIndex[18611], const  ref arg high[1654924]:byteIndex[18611]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[7362589]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362591 'move' ret[7362589](7362593 '.v' low[1654920] _bindex[18495]))
    (1654992 '.=' this[1654914] _low[1655279] ret[7362589])
    val ret[7362599]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362601 'move' ret[7362599](7362603 '.v' high[1654924] _bindex[18495]))
    (1655024 '.=' this[1654914] _high[1655284] ret[7362599])
    (1655155 return _void[46])
  }
  function range(int(64),low,one)[1576928].init[1576460](ref arg this[1576466]:range(int(64),low,one)[1576928], const in arg low[1576468]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1576537 '.=' this[1576466] _low[1576890] low[1576468])
    (1576561 '.=' this[1576466] _high[1576895] 0)
    (1576746 return _void[46])
  }
  function range(byteIndex,low,one)[1698271].init[1697875](ref arg this[1697881]:range(byteIndex,low,one)[1698271], const  ref arg low[1697883]:byteIndex[18611]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[7362609]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362611 'move' ret[7362609](7362613 '.v' low[1697883] _bindex[18495]))
    (1697952 '.=' this[1697881] _low[1698233] ret[7362609])
    (1697976 '.=' this[1697881] _high[1698238] 0)
    (1698161 return _void[46])
  }
  function range(byteIndex,high,one)[1726799].init[1726403](ref arg this[1726409]:range(byteIndex,high,one)[1726799], const  ref arg high[1726411]:byteIndex[18611]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1726472 '.=' this[1726409] _low[1726761] 0)
    val ret[7362619]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362621 'move' ret[7362619](7362623 '.v' high[1726411] _bindex[18495]))
    (1726504 '.=' this[1726409] _high[1726766] ret[7362619])
    (1726689 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1763679](ref arg this[1763685]:range(int(64),both,one)[1610039]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1763894 call init[1638161] this[1763685] 1 0 1 0)
    (1763906 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1662481](ref arg this[1662487]:range(int(64),both,one)[1610039]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1662566 call init[1638161] this[1662487] 1 0 1 0)
    (1662578 return _void[46])
  }
  function range(int(64),low,one)[1576928].init[1703333](ref arg this[1703339]:range(int(64),low,one)[1576928]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1703418 call init[1703894] this[1703339] 1 0 1 0)
    (1703430 return _void[46])
  }
  function range(int(64),high,one)[1730829].init[1732335](ref arg this[1732341]:range(int(64),high,one)[1730829]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1732420 call init[1732941] this[1732341] 0 0 1 0)
    (1732432 return _void[46])
  }
  function range(int(64),both,any)[3464570].init[3462587](ref arg this[3462593]:range(int(64),both,any)[3464570], const in arg _low[3462601]:int(64)[10], const in arg _high[3462603]:int(64)[10], const in arg _stride[3462605]:int(64)[10], const in arg _alignment[3462607]:int(64)[10], const in arg _aligned[3462609]:bool[19]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[3462670]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "temp"
    const-val call_tmp[7351553]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7351555 'move' call_tmp[7351553](7351557 'u!' _aligned[3462609]))
    if call_tmp[7351553]
    {
      (3462696 'move' tmp[3462670] -1)
    }
    {
      const-val call_tmp[3462715]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (3462717 'move' call_tmp[3462715](3462720 call chpl__mod[3462785] _alignment[3462607] _stride[3462605]))
      (3462741 'move' tmp[3462670] call_tmp[3462715])
    }
    (3462762 call init[3464064] this[3462593] _low[3462601] _high[3462603] _stride[3462605] tmp[3462670])
    (3462772 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1628396](ref arg this[1628402]:range(int(64),both,one)[1610039], const in arg _low[1628410]:int(64)[10], const in arg _high[1628412]:int(64)[10], const in arg _stride[1628414]:int(64)[10], const in arg alignmentValue[1628416]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1628506 '.=' this[1628402] _low[1610001] _low[1628410])
    (1628546 '.=' this[1628402] _high[1610006] _high[1628412])
    (1628846 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1629805](ref arg this[1629811]:range(int(64),both,one)[1610039], const in arg _low[1629819]:int(64)[10], const in arg _high[1629821]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1629913 '.=' this[1629811] _low[1610001] _low[1629819])
    (1629953 '.=' this[1629811] _high[1610006] _high[1629821])
    (1630253 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1638161](ref arg this[1638167]:range(int(64),both,one)[1610039], const in arg _low[1638175]:int(64)[10], const in arg _high[1638177]:int(64)[10], const in arg _stride[1638179]:int(64)[10], const in arg alignmentValue[1638181]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1638269 '.=' this[1638167] _low[1610001] _low[1638175])
    (1638309 '.=' this[1638167] _high[1610006] _high[1638177])
    (1638609 return _void[46])
  }
  function range(byteIndex,both,one)[1655317].init[1666040](ref arg this[1666046]:range(byteIndex,both,one)[1655317], const in arg _low[1666054]:int(64)[10], const in arg _high[1666056]:int(64)[10], const in arg _stride[1666058]:int(64)[10], const in arg alignmentValue[1666060]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    (1666150 '.=' this[1666046] _low[1655279] _low[1666054])
    (1666190 '.=' this[1666046] _high[1655284] _high[1666056])
    (1666490 return _void[46])
  }
  function range(int(64),low,one)[1576928].init[1684084](ref arg this[1684090]:range(int(64),low,one)[1576928], const in arg _low[1684098]:int(64)[10], const in arg _high[1684100]:int(64)[10], const in arg _stride[1684102]:int(64)[10], const in arg alignmentValue[1684104]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1684194 '.=' this[1684090] _low[1576890] _low[1684098])
    (1684234 '.=' this[1684090] _high[1576895] _high[1684100])
    (1684534 return _void[46])
  }
  function range(int(64),low,one)[1576928].init[1703894](ref arg this[1703900]:range(int(64),low,one)[1576928], const in arg _low[1703908]:int(64)[10], const in arg _high[1703910]:int(64)[10], const in arg _stride[1703912]:int(64)[10], const in arg alignmentValue[1703914]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1704002 '.=' this[1703900] _low[1576890] _low[1703908])
    (1704042 '.=' this[1703900] _high[1576895] _high[1703910])
    (1704342 return _void[46])
  }
  function range(byteIndex,low,one)[1698271].init[1707123](ref arg this[1707129]:range(byteIndex,low,one)[1698271], const in arg _low[1707137]:int(64)[10], const in arg _high[1707139]:int(64)[10], const in arg _stride[1707141]:int(64)[10], const in arg alignmentValue[1707143]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    (1707233 '.=' this[1707129] _low[1698233] _low[1707137])
    (1707273 '.=' this[1707129] _high[1698238] _high[1707139])
    (1707573 return _void[46])
  }
  function range(int(64),both,one)[1610039].init[1716487](ref arg this[1716493]:range(int(64),both,one)[1610039], const in arg _low[1716501]:int(64)[10], const in arg _high[1716503]:int(64)[10], const in arg _stride[1716505]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1716595 '.=' this[1716493] _low[1610001] _low[1716501])
    (1716635 '.=' this[1716493] _high[1610006] _high[1716503])
    (1716935 return _void[46])
  }
  function range(int(64),high,one)[1730829].init[1732941](ref arg this[1732947]:range(int(64),high,one)[1730829], const in arg _low[1732955]:int(64)[10], const in arg _high[1732957]:int(64)[10], const in arg _stride[1732959]:int(64)[10], const in arg alignmentValue[1732961]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1733049 '.=' this[1732947] _low[1730791] _low[1732955])
    (1733089 '.=' this[1732947] _high[1730796] _high[1732957])
    (1733389 return _void[46])
  }
  function range(byteIndex,high,one)[1726799].init[1737592](ref arg this[1737598]:range(byteIndex,high,one)[1726799], const in arg _low[1737606]:int(64)[10], const in arg _high[1737608]:int(64)[10], const in arg _stride[1737610]:int(64)[10], const in arg alignmentValue[1737612]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    (1737702 '.=' this[1737598] _low[1726761] _low[1737606])
    (1737742 '.=' this[1737598] _high[1726766] _high[1737608])
    (1738042 return _void[46])
  }
  function range(int(64),both,any)[3464570].init[3464064](ref arg this[3464070]:range(int(64),both,any)[3464570], const in arg _low[3464078]:int(64)[10], const in arg _high[3464080]:int(64)[10], const in arg _stride[3464082]:int(64)[10], const in arg alignmentValue[3464084]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (3464172 '.=' this[3464070] _low[3464532] _low[3464078])
    (3464212 '.=' this[3464070] _high[3464537] _high[3464080])
    (3464301 '.=' this[3464070] _stride[3464542] _stride[3464082])
    (3464365 '.=' this[3464070] _alignment[3464556] alignmentValue[3464084])
    (3464380 call verifyAppropriateStride[3464843] _stride[3464082])
    (3464512 return _void[46])
  }
  function range(int(64),both,one)[1610039].init=[1626644](ref arg this[1626650]:range(int(64),both,one)[1610039], const in arg other[1626652]:range(int(64),both,one)[1610039]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val coerce_tmp[1628316]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1628320 'move' coerce_tmp[1628316](9198674 '.v' other[1626652] _low[1610001]))
    (1627193 'noop')
    const-val coerce_tmp[1628334]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1628338 'move' coerce_tmp[1628334](9198684 '.v' other[1626652] _high[1610006]))
    (1627316 'noop')
    (1627545 call init[1628396] this[1626650] coerce_tmp[1628316] coerce_tmp[1628334] 1 0)
    (1627559 return _void[46])
  }
  function range(byteIndex,both,one)[1655317].init=[1664609](ref arg this[1664615]:range(byteIndex,both,one)[1655317], const in arg other[1664617]:range(byteIndex,both,one)[1655317]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1665960]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1665964 'move' coerce_tmp[1665960](9198863 '.v' other[1664617] _low[1655279]))
    (1665158 'noop')
    const-val coerce_tmp[1665978]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1665982 'move' coerce_tmp[1665978](9198873 '.v' other[1664617] _high[1655284]))
    (1665281 'noop')
    (1665510 call init[1666040] this[1664615] coerce_tmp[1665960] coerce_tmp[1665978] 1 0)
    (1665524 return _void[46])
  }
  function range(int(64),low,one)[1576928].init=[1682387](ref arg this[1682393]:range(int(64),low,one)[1576928], const in arg other[1682395]:range(int(64),low,one)[1576928]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val coerce_tmp[1683770]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1683774 'move' coerce_tmp[1683770](9199166 '.v' other[1682395] _low[1576890]))
    (1682936 'noop')
    const-val coerce_tmp[1683815]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1683819 'move' coerce_tmp[1683815](9199176 '.v' other[1682395] _high[1576895]))
    (1683059 'noop')
    (1683288 call init[1684084] this[1682393] coerce_tmp[1683770] coerce_tmp[1683815] 1 0)
    (1683302 return _void[46])
  }
  function range(byteIndex,low,one)[1698271].init=[1705861](ref arg this[1705867]:range(byteIndex,low,one)[1698271], const in arg other[1705869]:range(byteIndex,low,one)[1698271]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1707043]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1707047 'move' coerce_tmp[1707043](9199405 '.v' other[1705869] _low[1698233]))
    (1706410 'noop')
    const-val coerce_tmp[1707061]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1707065 'move' coerce_tmp[1707061](9199415 '.v' other[1705869] _high[1698238]))
    (1706533 'noop')
    (1706762 call init[1707123] this[1705867] coerce_tmp[1707043] coerce_tmp[1707061] 1 0)
    (1706776 return _void[46])
  }
  function range(byteIndex,high,one)[1726799].init=[1736330](ref arg this[1736336]:range(byteIndex,high,one)[1726799], const in arg other[1736338]:range(byteIndex,high,one)[1726799]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1737512]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1737516 'move' coerce_tmp[1737512](9199628 '.v' other[1736338] _low[1726761]))
    (1736879 'noop')
    const-val coerce_tmp[1737530]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1737534 'move' coerce_tmp[1737530](9199638 '.v' other[1736338] _high[1726766]))
    (1737002 'noop')
    (1737231 call init[1737592] this[1736336] coerce_tmp[1737512] coerce_tmp[1737530] 1 0)
    (1737245 return _void[46])
  }
  function chpl_build_bounded_range[1489158](ref arg _retArg[5546254]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val call_tmp[1489299]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4442685]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4442688 call init[1610254] initTemp[4442685] 0 2)
    (1489301 'move' call_tmp[1489299] initTemp[4442685])
    label _end_chpl_build_bounded_range[1489318]
    (5546256 '=' _retArg[5546254] call_tmp[1489299])
    (5546258 return _void[46])
  }
  function chpl_build_bounded_range[1509041](ref arg _retArg[5547430]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1509066]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1907803]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1907806 call init[1610254] initTemp[1907803] 0 0)
    (1509068 'move' call_tmp[1509066] initTemp[1907803])
    label _end_chpl_build_bounded_range[1509085]
    (5547432 '=' _retArg[5547430] call_tmp[1509066])
    (5547434 return _void[46])
  }
  function chpl_build_bounded_range[1605270](ref arg _retArg[5548949]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val call_tmp[1605295]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4460535]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4460538 call init[1610254] initTemp[4460535] 0 4)
    (1605297 'move' call_tmp[1605295] initTemp[4460535])
    label _end_chpl_build_bounded_range[1605314]
    (5548951 '=' _retArg[5548949] call_tmp[1605295])
    (5548953 return _void[46])
  }
  function chpl_build_bounded_range[1622277](ref arg _retArg[5549055]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val call_tmp[1622302]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4428836]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4428839 call init[1610254] initTemp[4428836] 0 1)
    (1622304 'move' call_tmp[1622302] initTemp[4428836])
    label _end_chpl_build_bounded_range[1622321]
    (5549057 '=' _retArg[5549055] call_tmp[1622302])
    (5549059 return _void[46])
  }
  function chpl_build_bounded_range[1645149](ref arg _retArg[5549760]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val call_tmp[1645174]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4410846]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4410849 call init[1610254] initTemp[4410846] 0 3)
    (1645176 'move' call_tmp[1645174] initTemp[4410846])
    label _end_chpl_build_bounded_range[1645193]
    (5549762 '=' _retArg[5549760] call_tmp[1645174])
    (5549764 return _void[46])
  }
  function chpl_build_bounded_range[1759352](ref arg _retArg[5551527]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val call_tmp[1759377]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1760492]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1760495 call init[1610254] initTemp[1760492] 1 0)
    (1759379 'move' call_tmp[1759377] initTemp[1760492])
    label _end_chpl_build_bounded_range[1759396]
    (5551529 '=' _retArg[5551527] call_tmp[1759377])
    (5551531 return _void[46])
  }
  function chpl_build_bounded_range[2833325](ref arg _retArg[5579652]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val call_tmp[2833350]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[4476428]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (4476431 call init[1610254] initTemp[4476428] 0 5)
    (2833352 'move' call_tmp[2833350] initTemp[4476428])
    label _end_chpl_build_bounded_range[2833369]
    (5579654 '=' _retArg[5579652] call_tmp[2833350])
    (5579656 return _void[46])
  }
  function chpl_build_bounded_range[108787](const in arg low[108792]:int(64)[10], const in arg high[108798]:int(64)[10], ref arg _retArg[5542616]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[786667]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1610242]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1610245 call init[1610254] initTemp[1610242] low[108792] high[108798])
    (786670 'move' call_tmp[786667] initTemp[1610242])
    (5542618 '=' _retArg[5542616] call_tmp[786667])
    (5542620 return _void[46])
  }
  function chpl__nudgeHighBound[1599937](const in arg high[1599939]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7444818]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7444820 'move' call_tmp[7444818](7444822 '-' high[1599939] 1))
    (1599982 return call_tmp[7444818])
  }
  function chpl_build_low_bounded_range[1576395](const in arg low[1576397]:int(64)[10], ref arg _retArg[5548649]:range(int(64),low,one)[1576928]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1576435]:range(int(64),low,one)[1576928] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1576451]:range(int(64),low,one)[1576928] "dead after last mention" "delay instantiation" "temp"
    (1576454 call init[1576460] initTemp[1576451] low[1576397])
    (1576437 'move' call_tmp[1576435] initTemp[1576451])
    (5548651 '=' _retArg[5548649] call_tmp[1576435])
    (5548653 return _void[46])
  }
  function range(int(64),both,any)[3464570].hasPositiveStride[3467799](const in arg this[3467805]:range(int(64),both,any)[3464570]) : bool[19] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[3467857]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3467861 'move' coerce_tmp[3467857](9223147 '.v' this[3467805] _stride[3464542]))
    const-val call_tmp[7317058]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7317060 'move' call_tmp[7317058](7317062 '>' coerce_tmp[3467857] 0))
    (3467853 return call_tmp[7317058])
  }
  function verifyAppropriateStride[3464843](const in arg stride[3464847]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (3464915 return _void[46])
  }
  function verifyAppropriateStride[3810065](const in arg stride[3810069]:int(64)[10]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[7317433]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7317435 'move' call_tmp[7317433](7317437 '>' stride[3810069] 0))
    (3810104 call assert[87867] call_tmp[7317433])
    (3810137 return _void[46])
  }
  function range(int(64),both,one)[1610039].size[1649150](const in arg this[1649156]:range(int(64),both,one)[1610039]) : int(64)[10] "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[1649168]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1649170 'move' call_tmp[1649168](1649176 call sizeAs[1649186] this[1649156]))
    (1649183 return call_tmp[1649168])
  }
  function range(int(64),both,one)[1610039].sizeAs[1630327](const in arg this[1630333]:range(int(64),both,one)[1610039]) : uint(64)[86] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val call_tmp[1630444]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    val ret[7796852]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7796854 'move' ret[7796852](7796856 '.v' this[1630333] _low[1610001]))
    val ret[7796862]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7796864 'move' ret[7796862](7796866 '.v' this[1630333] _high[1610006]))
    (1630446 'move' call_tmp[1630444](1630452 call sizeAsHelp[1630476] this[1630333] ret[7796852] ret[7796862]))
    label _end_sizeAs[1630459]
    (1630461 return call_tmp[1630444])
  }
  function range(int(64),both,one)[1610039].sizeAs[1649186](const in arg this[1649192]:range(int(64),both,one)[1610039]) : int(64)[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val call_tmp[1649303]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val ret[7801753]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7801755 'move' ret[7801753](7801757 '.v' this[1649192] _low[1610001]))
    val ret[7801763]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7801765 'move' ret[7801763](7801767 '.v' this[1649192] _high[1610006]))
    (1649305 'move' call_tmp[1649303](1649311 call sizeAsHelp[1649335] this[1649192] ret[7801753] ret[7801763]))
    label _end_sizeAs[1649318]
    (1649320 return call_tmp[1649303])
  }
  function range(int(64),both,one)[1610039].sizeAsHelp[1630476](const in arg this[1630482]:range(int(64),both,one)[1610039], const in arg al[1630496]:int(64)[10], const in arg ah[1630508]:int(64)[10]) : uint(64)[86] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1630512]:uint(64)[86] "dead after last mention" "RVV" "temp"
    val ret[7745963]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7745965 'move' ret[7745963](7745967 '.v' this[1630482] _high[1610006]))
    val ret[7743268]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7743270 'move' ret[7743268](7743272 '.v' this[1630482] _low[1610001]))
    const-val call_tmp[7315083]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315085 'move' call_tmp[7315083](7315087 '>' ret[7743268] ret[7745963]))
    if call_tmp[7315083]
    {
      (1632619 '=' ret[1630512] 0)
      gotoReturn _end_sizeAsHelp[1630905] _end_sizeAsHelp[1630905]
    }
    const-val call_tmp[1630631]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1630633 'move' call_tmp[1630631](1630636 'cast' uint(64)[86] ret[7745963]))
    const-val call_tmp[1630646]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1630648 'move' call_tmp[1630646](1630651 'cast' uint(64)[86] ret[7743268]))
    const-val call_tmp[7498912]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498914 'move' call_tmp[7498912](7498916 '-' call_tmp[1630631] call_tmp[1630646]))
    const-val tmp[7508775]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7508777 'move' tmp[7508775](7508779 '<' 0 0))
    const-val call_tmp[7508782]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7508784 'move' call_tmp[7508782](7508786 'u!' tmp[7508775]))
    val tmp[7508788]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7508782]
    {
      const-val call_tmp[7508792]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7508794 'move' call_tmp[7508792](7508796 'cast' uint(64)[86] 0))
      const-val call_tmp[7508799]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7508801 'move' call_tmp[7508799](7508803 '==' 1 call_tmp[7508792]))
      (7508806 'move' tmp[7508788] call_tmp[7508799])
    }
    {
      (7508810 'move' tmp[7508788] 0)
    }
    if tmp[7508788]
    {
      (7508817 call halt[88131] "Attempt to divide by zero")
    }
    const-val call_tmp[7508820]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7508822 'move' call_tmp[7508820](7508824 '/' call_tmp[7498912] 1))
    const-val call_tmp[7637409]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7637411 'move' call_tmp[7637409](7637413 '+' call_tmp[7508820] 1))
    const-val tmp[7507083]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7507085 'move' tmp[7507083](7507087 '<' 0 0))
    const-val call_tmp[7507090]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7507092 'move' call_tmp[7507090](7507094 'u!' tmp[7507083]))
    val tmp[7507096]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7507090]
    {
      const-val call_tmp[7507100]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507102 'move' call_tmp[7507100](7507104 'cast' uint(64)[86] 0))
      const-val call_tmp[7507107]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507109 'move' call_tmp[7507107](7507111 '==' call_tmp[7637409] call_tmp[7507100]))
      (7507114 'move' tmp[7507096] call_tmp[7507107])
    }
    {
      (7507118 'move' tmp[7507096] 0)
    }
    val tmp[1630752]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7507096]
    {
      (1630770 'move' tmp[1630752] 1)
    }
    {
      const-val call_tmp[7498407]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7498409 'move' call_tmp[7498407](7498411 '>' call_tmp[7637409] 18446744073709551615))
      (1630798 'move' tmp[1630752] call_tmp[7498407])
    }
    if tmp[1630752]
    {
      const-val call_tmp[1630858]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5549202]:string[244] "temp"
      (1630863 call :[1631991] this[1630482] ret_tmp[5549202])
      (5549205 'move' call_tmp[1630858] ret_tmp[5549202])
      const-val call_tmp[1630866]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539350]:string[244] "temp"
      (1630871 call +[28065] "range.size exceeds max(uint(64)) for: '" call_tmp[1630858] ret_tmp[5539350])
      (5539353 'move' call_tmp[1630866] ret_tmp[5539350])
      const-val call_tmp[1630874]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539356]:string[244] "temp"
      (1630879 call +[28065] call_tmp[1630866] "'" ret_tmp[5539356])
      (5539359 'move' call_tmp[1630874] ret_tmp[5539356])
      (1630883 call boundsCheckHalt[404] call_tmp[1630874])
      ref i_x[7336570]:string[244] "temp"
      (7336574 'move' i_x[7336570](7336572 'set reference' call_tmp[1630874]))
      (7336578 call deinit[21354] i_x[7336570])
      ref i_x[7336582]:string[244] "temp"
      (7336586 'move' i_x[7336582](7336584 'set reference' call_tmp[1630866]))
      (7336590 call deinit[21354] i_x[7336582])
      ref i_x[7336594]:string[244] "temp"
      (7336598 'move' i_x[7336594](7336596 'set reference' call_tmp[1630858]))
      (7336602 call deinit[21354] i_x[7336594])
    }
    (1632622 '=' ret[1630512] call_tmp[7637409])
    label _end_sizeAsHelp[1630905]
    (1630907 return ret[1630512])
  }
  function range(int(64),both,one)[1610039].sizeAsHelp[1649335](const in arg this[1649341]:range(int(64),both,one)[1610039], const in arg al[1649355]:int(64)[10], const in arg ah[1649367]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1649371]:int(64)[10] "dead after last mention" "RVV" "temp"
    val ret[7745987]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7745989 'move' ret[7745987](7745991 '.v' this[1649341] _high[1610006]))
    val ret[7743292]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7743294 'move' ret[7743292](7743296 '.v' this[1649341] _low[1610001]))
    const-val call_tmp[7315093]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315095 'move' call_tmp[7315093](7315097 '>' ret[7743292] ret[7745987]))
    if call_tmp[7315093]
    {
      (1649427 'move' ret[1649371] 0)
      gotoReturn _end_sizeAsHelp[1649764] _end_sizeAsHelp[1649764]
    }
    const-val call_tmp[1649490]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1649492 'move' call_tmp[1649490](1649495 'cast' uint(64)[86] ret[7745987]))
    const-val call_tmp[1649505]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1649507 'move' call_tmp[1649505](1649510 'cast' uint(64)[86] ret[7743292]))
    const-val call_tmp[7498922]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7498924 'move' call_tmp[7498922](7498926 '-' call_tmp[1649490] call_tmp[1649505]))
    const-val tmp[7508835]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7508837 'move' tmp[7508835](7508839 '<' 0 0))
    const-val call_tmp[7508842]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7508844 'move' call_tmp[7508842](7508846 'u!' tmp[7508835]))
    val tmp[7508848]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7508842]
    {
      const-val call_tmp[7508852]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7508854 'move' call_tmp[7508852](7508856 'cast' uint(64)[86] 0))
      const-val call_tmp[7508859]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7508861 'move' call_tmp[7508859](7508863 '==' 1 call_tmp[7508852]))
      (7508866 'move' tmp[7508848] call_tmp[7508859])
    }
    {
      (7508870 'move' tmp[7508848] 0)
    }
    if tmp[7508848]
    {
      (7508877 call halt[88131] "Attempt to divide by zero")
    }
    const-val call_tmp[7508880]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7508882 'move' call_tmp[7508880](7508884 '/' call_tmp[7498922] 1))
    const-val call_tmp[7637419]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7637421 'move' call_tmp[7637419](7637423 '+' call_tmp[7508880] 1))
    const-val tmp[7507365]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7507367 'move' tmp[7507365](7507369 '<' 0 0))
    const-val call_tmp[7507372]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7507374 'move' call_tmp[7507372](7507376 'u!' tmp[7507365]))
    val tmp[7507378]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7507372]
    {
      const-val call_tmp[7507382]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507384 'move' call_tmp[7507382](7507386 'cast' uint(64)[86] 0))
      const-val call_tmp[7507389]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507391 'move' call_tmp[7507389](7507393 '==' call_tmp[7637419] call_tmp[7507382]))
      (7507396 'move' tmp[7507378] call_tmp[7507389])
    }
    {
      (7507400 'move' tmp[7507378] 0)
    }
    val tmp[1649611]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7507378]
    {
      (1649629 'move' tmp[1649611] 1)
    }
    {
      const-val tmp[7521631]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7521633 'move' tmp[7521631](7521635 '<' 9223372036854775807 0))
      val tmp[7521638]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if tmp[7521631]
      {
        (7521642 'move' tmp[7521638] 1)
      }
      {
        const-val call_tmp[7521646]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521648 'move' call_tmp[7521646](7521650 'cast' uint(64)[86] 9223372036854775807))
        const-val call_tmp[7521653]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7521655 'move' call_tmp[7521653](7521657 '>' call_tmp[7637419] call_tmp[7521646]))
        (7521660 'move' tmp[7521638] call_tmp[7521653])
      }
      (1649657 'move' tmp[1649611] tmp[7521638])
    }
    if tmp[1649611]
    {
      const-val call_tmp[1649717]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5549214]:string[244] "temp"
      (1649722 call :[1631991] this[1649341] ret_tmp[5549214])
      (5549217 'move' call_tmp[1649717] ret_tmp[5549214])
      const-val call_tmp[1649725]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539368]:string[244] "temp"
      (1649730 call +[28065] "range.size exceeds max(int(64)) for: '" call_tmp[1649717] ret_tmp[5539368])
      (5539371 'move' call_tmp[1649725] ret_tmp[5539368])
      const-val call_tmp[1649733]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539374]:string[244] "temp"
      (1649738 call +[28065] call_tmp[1649725] "'" ret_tmp[5539374])
      (5539377 'move' call_tmp[1649733] ret_tmp[5539374])
      (1649742 call boundsCheckHalt[404] call_tmp[1649733])
      ref i_x[7336678]:string[244] "temp"
      (7336682 'move' i_x[7336678](7336680 'set reference' call_tmp[1649733]))
      (7336686 call deinit[21354] i_x[7336678])
      ref i_x[7336690]:string[244] "temp"
      (7336694 'move' i_x[7336690](7336692 'set reference' call_tmp[1649725]))
      (7336698 call deinit[21354] i_x[7336690])
      ref i_x[7336702]:string[244] "temp"
      (7336706 'move' i_x[7336702](7336704 'set reference' call_tmp[1649717]))
      (7336710 call deinit[21354] i_x[7336702])
    }
    const-val call_tmp[7443588]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7443590 'move' call_tmp[7443588](7443592 'cast' int(64)[10] call_tmp[7637419]))
    (1650005 '=' ret[1649371] call_tmp[7443588])
    label _end_sizeAsHelp[1649764]
    (1649766 return ret[1649371])
  }
  function ==[1639102](const in arg r1[1639104]:range(int(64),both,one)[1610039], const in arg r2[1639106]:range(int(64),both,one)[1610039]) : bool[19] "instantiated generic" "invisible fn" "operator" "resolved"
  {
    val ret[1639131]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1639256]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (1639258 'move' call_tmp[1639256](1639264 call sizeAs[1630327] r1[1639104]))
    const-val call_tmp[1639271]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (1639273 'move' call_tmp[1639271](1639279 call sizeAs[1630327] r2[1639106]))
    const-val call_tmp[7496892]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7496894 'move' call_tmp[7496892](7496896 '!=' call_tmp[1639256] call_tmp[1639271]))
    if call_tmp[7496892]
    {
      (1639304 'move' ret[1639131] 0)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    const-val tmp[7507271]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7507273 'move' tmp[7507271](7507275 '<' 0 0))
    const-val call_tmp[7507278]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7507280 'move' call_tmp[7507278](7507282 'u!' tmp[7507271]))
    val tmp[7507284]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7507278]
    {
      const-val call_tmp[7507288]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507290 'move' call_tmp[7507288](7507292 'cast' uint(64)[86] 0))
      const-val call_tmp[7507295]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507297 'move' call_tmp[7507295](7507299 '==' call_tmp[1639256] call_tmp[7507288]))
      (7507302 'move' tmp[7507284] call_tmp[7507295])
    }
    {
      (7507306 'move' tmp[7507284] 0)
    }
    if tmp[7507284]
    {
      (1639329 'move' ret[1639131] 1)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    val ret[7799548]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7799550 'move' ret[7799548](7799552 '.v' r1[1639104] _low[1610001]))
    val ret[7799558]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7799560 'move' ret[7799558](7799562 '.v' r2[1639106] _low[1610001]))
    const-val call_tmp[7495672]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7495674 'move' call_tmp[7495672](7495676 '!=' ret[7799548] ret[7799558]))
    if call_tmp[7495672]
    {
      (1639370 'move' ret[1639131] 0)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    const-val tmp[7507318]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7507320 'move' tmp[7507318](7507322 '<' 1 0))
    const-val call_tmp[7507325]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7507327 'move' call_tmp[7507325](7507329 'u!' tmp[7507318]))
    val tmp[7507331]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7507325]
    {
      const-val call_tmp[7507335]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507337 'move' call_tmp[7507335](7507339 'cast' uint(64)[86] 1))
      const-val call_tmp[7507342]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7507344 'move' call_tmp[7507342](7507346 '==' call_tmp[1639256] call_tmp[7507335]))
      (7507349 'move' tmp[7507331] call_tmp[7507342])
    }
    {
      (7507353 'move' tmp[7507331] 0)
    }
    if tmp[7507331]
    {
      (1639395 'move' ret[1639131] 1)
      gotoReturn _end_==[1639621] _end_==[1639621]
    }
    (1639444 'move' ret[1639131] 1)
    label _end_==[1639621]
    (1639623 return ret[1639131])
  }
  function !=[4369284](const in arg r1[4369286]:range(int(64),both,one)[1610039], const in arg r2[4369288]:range(int(64),both,one)[1610039]) : bool[19] "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val call_tmp[4369684]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (4369686 'move' call_tmp[4369684](4369689 call ==[1639102] r1[4369286] r2[4369288]))
    const-val call_tmp[7352354]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7352356 'move' call_tmp[7352354](7352358 'u!' call_tmp[4369684]))
    (4369703 return call_tmp[7352354])
  }
  function :[1661372](const in arg r[1661374]:range(byteIndex,both,one)[1655317], ref arg _retArg[5550123]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    (1661648 call checkBounds[1662128] r[1661374])
    (1661653 call checkEnumIdx[1662223] r[1661374])
    const-val call_tmp[1661681]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1662470]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1662473 call init[1662481] initTemp[1662470])
    (1661683 'move' call_tmp[1661681] initTemp[1662470])
    val tmp[1661691]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1661693 'move' tmp[1661691] call_tmp[1661681])
    const-val call_tmp[1661745]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7804861]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7804863 'move' coerce_tmp[7804861](7804865 '.v' r[1661374] _low[1655279]))
    const-val ret[7804868]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7804870]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7804873 call init[18499] cpi[7804870])
    (7804875 '.=' cpi[7804870] _bindex[18495] coerce_tmp[7804861])
    (7804879 'move' ret[7804868] cpi[7804870])
    (5550018 'move' call_tmp[1661745] ret[7804868])
    val ret[7362357]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362359 'move' ret[7362357](7362361 '.v' call_tmp[1661745] _bindex[18495]))
    (9198820 '.=' tmp[1661691] _low[1610001] ret[7362357])
    const-val call_tmp[1661839]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7805631]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7805633 'move' coerce_tmp[7805631](7805635 '.v' r[1661374] _high[1655284]))
    const-val ret[7805638]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7805640]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7805643 call init[18499] cpi[7805640])
    (7805645 '.=' cpi[7805640] _bindex[18495] coerce_tmp[7805631])
    (7805649 'move' ret[7805638] cpi[7805640])
    (5550102 'move' call_tmp[1661839] ret[7805638])
    val ret[7362373]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362375 'move' ret[7362373](7362377 '.v' call_tmp[1661839] _bindex[18495]))
    (9198829 '.=' tmp[1661691] _high[1610006] ret[7362373])
    const-val call_tmp[1661920]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550129]:owned IllegalArgumentError?[1471812] "temp"
    (1661928 call chpl_checkStrides[1662840] r[1661374] ret_tmp[5550129])
    (5550132 'move' call_tmp[1661920] ret_tmp[5550129])
    ref i_arg[7322887]:owned IllegalArgumentError?[1471812] "temp"
    (7322891 'move' i_arg[7322887](7322889 'set reference' call_tmp[1661920]))
    val call_tmp[7322896]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7322898 'move' call_tmp[7322896](7322901 call borrow[1479886] i_arg[7322887]))
    val coerce_tmp[7334437]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7334439 'move' coerce_tmp[7334437](7334441 'cast' RootClass[236] call_tmp[7322896]))
    const-val call_tmp[7334444]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7334446 'move' call_tmp[7334444](7334448 '!=' coerce_tmp[7334437] nil[32]))
    if call_tmp[7334444]
    {
      const-val call_tmp[1661955]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1663995]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1664001 'move' coerce_tmp[1663995](1663997 'cast' Error[85511] call_tmp[7322896]))
      val _virtual_method_tmp_[5469282]:int(32)[66] "temp"
      (5469286 'move' _virtual_method_tmp_[5469282](5469284 'getcid' coerce_tmp[1663995]))
      val ret_tmp[5541555]:string[244] "temp"
      (1661963 'virtual method call' message[85497] _virtual_method_tmp_[5469282] coerce_tmp[1663995] ret_tmp[5541555])
      (5541558 'move' call_tmp[1661955] ret_tmp[5541555])
      (1661965 call boundsCheckHalt[404] call_tmp[1661955])
      ref i_x[7336858]:string[244] "temp"
      (7336862 'move' i_x[7336858](7336860 'set reference' call_tmp[1661955]))
      (7336866 call deinit[21354] i_x[7336858])
    }
    (5612136 call chpl__autoDestroy[3929258] call_tmp[1661920])
    label _end_:[1662123]
    (5550125 '=' _retArg[5550123] tmp[1661691])
    (5550127 return _void[46])
  }
  function :[1702383](const in arg r[1702385]:range(byteIndex,low,one)[1698271], ref arg _retArg[5550561]:range(int(64),low,one)[1576928]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    (1702500 call checkBounds[1702980] r[1702385])
    (1702505 call checkEnumIdx[1703075] r[1702385])
    const-val call_tmp[1702533]:range(int(64),low,one)[1576928] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1703322]:range(int(64),low,one)[1576928] "dead at end of block" "delay instantiation" "temp"
    (1703325 call init[1703333] initTemp[1703322])
    (1702535 'move' call_tmp[1702533] initTemp[1703322])
    val tmp[1702543]:range(int(64),low,one)[1576928] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1702545 'move' tmp[1702543] call_tmp[1702533])
    const-val call_tmp[1702597]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7807588]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7807590 'move' coerce_tmp[7807588](7807592 '.v' r[1702385] _low[1698233]))
    const-val ret[7807595]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7807597]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7807600 call init[18499] cpi[7807597])
    (7807602 '.=' cpi[7807597] _bindex[18495] coerce_tmp[7807588])
    (7807606 'move' ret[7807595] cpi[7807597])
    (5550522 'move' call_tmp[1702597] ret[7807595])
    val ret[7362421]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362423 'move' ret[7362421](7362425 '.v' call_tmp[1702597] _bindex[18495]))
    (9199351 '.=' tmp[1702543] _low[1576890] ret[7362421])
    const-val coerce_tmp[1704445]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1704449 'move' coerce_tmp[1704445](9199364 '.v' r[1702385] _high[1698238]))
    (9199371 '.=' tmp[1702543] _high[1576895] coerce_tmp[1704445])
    const-val call_tmp[1702772]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5550567]:owned IllegalArgumentError?[1471812] "temp"
    (1702780 call chpl_checkStrides[1704454] r[1702385] ret_tmp[5550567])
    (5550570 'move' call_tmp[1702772] ret_tmp[5550567])
    ref i_arg[7322910]:owned IllegalArgumentError?[1471812] "temp"
    (7322914 'move' i_arg[7322910](7322912 'set reference' call_tmp[1702772]))
    val call_tmp[7322919]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7322921 'move' call_tmp[7322919](7322924 call borrow[1479886] i_arg[7322910]))
    val coerce_tmp[7334461]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7334463 'move' coerce_tmp[7334461](7334465 'cast' RootClass[236] call_tmp[7322919]))
    const-val call_tmp[7334468]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7334470 'move' call_tmp[7334468](7334472 '!=' coerce_tmp[7334461] nil[32]))
    if call_tmp[7334468]
    {
      const-val call_tmp[1702807]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1705247]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1705253 'move' coerce_tmp[1705247](1705249 'cast' Error[85511] call_tmp[7322919]))
      val _virtual_method_tmp_[5469289]:int(32)[66] "temp"
      (5469293 'move' _virtual_method_tmp_[5469289](5469291 'getcid' coerce_tmp[1705247]))
      val ret_tmp[5541561]:string[244] "temp"
      (1702815 'virtual method call' message[85497] _virtual_method_tmp_[5469289] coerce_tmp[1705247] ret_tmp[5541561])
      (5541564 'move' call_tmp[1702807] ret_tmp[5541561])
      (1702817 call boundsCheckHalt[404] call_tmp[1702807])
      ref i_x[7337230]:string[244] "temp"
      (7337234 'move' i_x[7337230](7337232 'set reference' call_tmp[1702807]))
      (7337238 call deinit[21354] i_x[7337230])
    }
    (5612523 call chpl__autoDestroy[3929258] call_tmp[1702772])
    label _end_:[1702975]
    (5550563 '=' _retArg[5550561] tmp[1702543])
    (5550565 return _void[46])
  }
  function :[1731022](const in arg r[1731024]:range(byteIndex,high,one)[1726799], ref arg _retArg[5551335]:range(int(64),high,one)[1730829]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    (1731191 call checkBounds[1731671] r[1731024])
    (1731196 call checkEnumIdx[1732024] r[1731024])
    const-val call_tmp[1731224]:range(int(64),high,one)[1730829] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1732324]:range(int(64),high,one)[1730829] "dead at end of block" "delay instantiation" "temp"
    (1732327 call init[1732335] initTemp[1732324])
    (1731226 'move' call_tmp[1731224] initTemp[1732324])
    val tmp[1731234]:range(int(64),high,one)[1730829] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1731236 'move' tmp[1731234] call_tmp[1731224])
    const-val coerce_tmp[1733680]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1733684 'move' coerce_tmp[1733680](9199578 '.v' r[1731024] _low[1726761]))
    (9199585 '.=' tmp[1731234] _low[1730791] coerce_tmp[1733680])
    const-val call_tmp[1731382]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7810459]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7810461 'move' coerce_tmp[7810459](7810463 '.v' r[1731024] _high[1726766]))
    const-val ret[7810466]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7810468]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7810471 call init[18499] cpi[7810468])
    (7810473 '.=' cpi[7810468] _bindex[18495] coerce_tmp[7810459])
    (7810477 'move' ret[7810466] cpi[7810468])
    (5551302 'move' call_tmp[1731382] ret[7810466])
    val ret[7362479]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7362481 'move' ret[7362479](7362483 '.v' call_tmp[1731382] _bindex[18495]))
    (9199594 '.=' tmp[1731234] _high[1730796] ret[7362479])
    const-val call_tmp[1731463]:owned IllegalArgumentError?[1471812] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5551341]:owned IllegalArgumentError?[1471812] "temp"
    (1731471 call chpl_checkStrides[1733727] r[1731024] ret_tmp[5551341])
    (5551344 'move' call_tmp[1731463] ret_tmp[5551341])
    ref i_arg[7322933]:owned IllegalArgumentError?[1471812] "temp"
    (7322937 'move' i_arg[7322933](7322935 'set reference' call_tmp[1731463]))
    val call_tmp[7322942]:IllegalArgumentError[85616] "dead after last mention" "expr temp" "maybe param" "temp"
    (7322944 'move' call_tmp[7322942](7322947 call borrow[1479886] i_arg[7322933]))
    val coerce_tmp[7334485]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7334487 'move' coerce_tmp[7334485](7334489 'cast' RootClass[236] call_tmp[7322942]))
    const-val call_tmp[7334492]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7334494 'move' call_tmp[7334492](7334496 '!=' coerce_tmp[7334485] nil[32]))
    if call_tmp[7334492]
    {
      const-val call_tmp[1731498]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1734520]:Error[85511] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1734526 'move' coerce_tmp[1734520](1734522 'cast' Error[85511] call_tmp[7322942]))
      val _virtual_method_tmp_[5469296]:int(32)[66] "temp"
      (5469300 'move' _virtual_method_tmp_[5469296](5469298 'getcid' coerce_tmp[1734520]))
      val ret_tmp[5541567]:string[244] "temp"
      (1731506 'virtual method call' message[85497] _virtual_method_tmp_[5469296] coerce_tmp[1734520] ret_tmp[5541567])
      (5541570 'move' call_tmp[1731498] ret_tmp[5541567])
      (1731508 call boundsCheckHalt[404] call_tmp[1731498])
      ref i_x[7337470]:string[244] "temp"
      (7337474 'move' i_x[7337470](7337472 'set reference' call_tmp[1731498]))
      (7337478 call deinit[21354] i_x[7337470])
    }
    (5612733 call chpl__autoDestroy[3929258] call_tmp[1731463])
    label _end_:[1731666]
    (5551337 '=' _retArg[5551335] tmp[1731234])
    (5551339 return _void[46])
  }
  function checkBounds[1662128](const in arg from[1662132]:range(byteIndex,both,one)[1655317]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1662212 return _void[46])
  }
  function checkBounds[1702980](const in arg from[1702984]:range(byteIndex,low,one)[1698271]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1703064 return _void[46])
  }
  function checkBounds[1731671](const in arg from[1731675]:range(byteIndex,high,one)[1726799]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1731755 return _void[46])
  }
  function checkEnumIdx[1662223](const in arg from[1662227]:range(byteIndex,both,one)[1655317]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1662447 return _void[46])
  }
  function checkEnumIdx[1703075](const in arg from[1703079]:range(byteIndex,low,one)[1698271]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1703299 return _void[46])
  }
  function checkEnumIdx[1732024](const in arg from[1732028]:range(byteIndex,high,one)[1726799]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1732248 return _void[46])
  }
  function range(byteIndex,both,one)[1655317].chpl_checkStrides[1662840](const in arg this[1662846]:range(byteIndex,both,one)[1655317], ref arg _retArg[5550135]:owned IllegalArgumentError?[1471812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1662854]:owned IllegalArgumentError?[1471812] "dead after last mention" "RVV" "temp"
    if 0
    {
      val call_tmp[1663213]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[1663935]:IllegalArgumentError[85616] "dead after last mention" "temp"
      (1663937 'move' new_temp[1663935](1663922 call _new[1475209] "bad cast from stride 1 to strideKind.one"))
      const-val initTemp[1663944]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
      (1663947 call init[1475364] initTemp[1663944] new_temp[1663935])
      (1663215 'move' call_tmp[1663213] initTemp[1663944])
      (1663977 call init=[1477891] ret[1662854] call_tmp[1663213])
      (5612139 call chpl__autoDestroy[3929468] call_tmp[1663213])
      gotoReturn _end_chpl_checkStrides[1663250] _end_chpl_checkStrides[1663250]
    }
    {
      (1663982 call init=[1479108] ret[1662854] nil[32])
      gotoReturn _end_chpl_checkStrides[1663250] _end_chpl_checkStrides[1663250]
    }
    label _end_chpl_checkStrides[1663250]
    (5550137 '=' _retArg[5550135] ret[1662854])
    (5550139 return _void[46])
  }
  function range(byteIndex,low,one)[1698271].chpl_checkStrides[1704454](const in arg this[1704460]:range(byteIndex,low,one)[1698271], ref arg _retArg[5550573]:owned IllegalArgumentError?[1471812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1704468]:owned IllegalArgumentError?[1471812] "dead after last mention" "RVV" "temp"
    if 0
    {
      val call_tmp[1704827]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[1705187]:IllegalArgumentError[85616] "dead after last mention" "temp"
      (1705189 'move' new_temp[1705187](1705174 call _new[1475209] "bad cast from stride 1 to strideKind.one"))
      const-val initTemp[1705196]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
      (1705199 call init[1475364] initTemp[1705196] new_temp[1705187])
      (1704829 'move' call_tmp[1704827] initTemp[1705196])
      (1705229 call init=[1477891] ret[1704468] call_tmp[1704827])
      (5612526 call chpl__autoDestroy[3929468] call_tmp[1704827])
      gotoReturn _end_chpl_checkStrides[1704864] _end_chpl_checkStrides[1704864]
    }
    {
      (1705234 call init=[1479108] ret[1704468] nil[32])
      gotoReturn _end_chpl_checkStrides[1704864] _end_chpl_checkStrides[1704864]
    }
    label _end_chpl_checkStrides[1704864]
    (5550575 '=' _retArg[5550573] ret[1704468])
    (5550577 return _void[46])
  }
  function range(byteIndex,high,one)[1726799].chpl_checkStrides[1733727](const in arg this[1733733]:range(byteIndex,high,one)[1726799], ref arg _retArg[5551347]:owned IllegalArgumentError?[1471812]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1733741]:owned IllegalArgumentError?[1471812] "dead after last mention" "RVV" "temp"
    if 0
    {
      val call_tmp[1734100]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[1734460]:IllegalArgumentError[85616] "dead after last mention" "temp"
      (1734462 'move' new_temp[1734460](1734447 call _new[1475209] "bad cast from stride 1 to strideKind.one"))
      const-val initTemp[1734469]:owned IllegalArgumentError[1475882] "dead after last mention" "delay instantiation" "temp"
      (1734472 call init[1475364] initTemp[1734469] new_temp[1734460])
      (1734102 'move' call_tmp[1734100] initTemp[1734469])
      (1734502 call init=[1477891] ret[1733741] call_tmp[1734100])
      (5612736 call chpl__autoDestroy[3929468] call_tmp[1734100])
      gotoReturn _end_chpl_checkStrides[1734137] _end_chpl_checkStrides[1734137]
    }
    {
      (1734507 call init=[1479108] ret[1733741] nil[32])
      gotoReturn _end_chpl_checkStrides[1734137] _end_chpl_checkStrides[1734137]
    }
    label _end_chpl_checkStrides[1734137]
    (5551349 '=' _retArg[5551347] ret[1733741])
    (5551351 return _void[46])
  }
  function range(int(64),both,one)[1610039].orderToIndex[1719284](const in arg this[1719290]:range(int(64),both,one)[1610039], const in arg ord[1719292]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "method" "resolved" "@unstable"
  {
    val ret[7810159]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7810161 'move' ret[7810159](7810163 '.v' this[1719290] _low[1610001]))
    val ret[7810166]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7810168 'move' ret[7810166](7810170 '.v' this[1719290] _high[1610006]))
    const-val call_tmp[7810173]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7810175 'move' call_tmp[7810173](7810177 '>' ret[7810159] ret[7810166]))
    val tmp[7810180]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7810173]
    {
      (7810184 'move' tmp[7810180] 0)
    }
    {
      (7810188 'move' tmp[7810180] 1)
    }
    const-val call_tmp[7349960]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7349962 'move' call_tmp[7349960](7349964 'u!' tmp[7810180]))
    if call_tmp[7349960]
    {
      (1719348 call boundsCheckHalt[404] "invoking orderToIndex on a range that has no first index")
    }
    const-val tmp[7319508]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319510 'move' tmp[7319508](7319512 '<' ord[1719292] 0))
    if tmp[7319508]
    {
      const-val call_tmp[1719405]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546419]:string[244] "temp"
      (1719410 call :[1496816] ord[1719292] ret_tmp[5546419])
      (5546422 'move' call_tmp[1719405] ret_tmp[5546419])
      const-val call_tmp[1719413]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539452]:string[244] "temp"
      (1719418 call +[28065] "invoking orderToIndex on a negative integer: " call_tmp[1719405] ret_tmp[5539452])
      (5539455 'move' call_tmp[1719413] ret_tmp[5539452])
      (1719422 call boundsCheckHalt[404] call_tmp[1719413])
      ref i_x[7337302]:string[244] "temp"
      (7337306 'move' i_x[7337302](7337304 'set reference' call_tmp[1719413]))
      (7337310 call deinit[21354] i_x[7337302])
      ref i_x[7337314]:string[244] "temp"
      (7337318 'move' i_x[7337314](7337316 'set reference' call_tmp[1719405]))
      (7337322 call deinit[21354] i_x[7337314])
    }
    const-val call_tmp[1719476]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (1719478 'move' call_tmp[1719476](1719484 call sizeAs[1630327] this[1719290]))
    const-val tmp[7522446]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7522448 'move' tmp[7522446](7522450 '<' ord[1719292] 0))
    const-val call_tmp[7522453]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7522455 'move' call_tmp[7522453](7522457 'u!' tmp[7522446]))
    val tmp[7522459]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7522453]
    {
      const-val call_tmp[7522463]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7522465 'move' call_tmp[7522463](7522467 'cast' uint(64)[86] ord[1719292]))
      const-val call_tmp[7522470]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7522472 'move' call_tmp[7522470](7522474 '>=' call_tmp[7522463] call_tmp[1719476]))
      (7522477 'move' tmp[7522459] call_tmp[7522470])
    }
    {
      (7522481 'move' tmp[7522459] 0)
    }
    if tmp[7522459]
    {
      const-val call_tmp[1719522]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5546425]:string[244] "temp"
      (1719527 call :[1496816] ord[1719292] ret_tmp[5546425])
      (5546428 'move' call_tmp[1719522] ret_tmp[5546425])
      const-val call_tmp[1719530]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539458]:string[244] "temp"
      (1719535 call +[28065] "invoking orderToIndex on an integer " call_tmp[1719522] ret_tmp[5539458])
      (5539461 'move' call_tmp[1719530] ret_tmp[5539458])
      const-val call_tmp[1719538]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539464]:string[244] "temp"
      (1719543 call +[28065] call_tmp[1719530] " that is larger than the range's number of indices " ret_tmp[5539464])
      (5539467 'move' call_tmp[1719538] ret_tmp[5539464])
      const-val call_tmp[1719546]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (1719548 'move' call_tmp[1719546](1719554 call sizeAs[1630327] this[1719290]))
      const-val call_tmp[1719556]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5551152]:string[244] "temp"
      (1719561 call :[1721023] call_tmp[1719546] ret_tmp[5551152])
      (5551155 'move' call_tmp[1719556] ret_tmp[5551152])
      const-val call_tmp[1719564]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539470]:string[244] "temp"
      (1719569 call +[28065] call_tmp[1719538] call_tmp[1719556] ret_tmp[5539470])
      (5539473 'move' call_tmp[1719564] ret_tmp[5539470])
      (1719573 call boundsCheckHalt[404] call_tmp[1719564])
      ref i_x[7337326]:string[244] "temp"
      (7337330 'move' i_x[7337326](7337328 'set reference' call_tmp[1719564]))
      (7337334 call deinit[21354] i_x[7337326])
      ref i_x[7337338]:string[244] "temp"
      (7337342 'move' i_x[7337338](7337340 'set reference' call_tmp[1719556]))
      (7337346 call deinit[21354] i_x[7337338])
      ref i_x[7337350]:string[244] "temp"
      (7337354 'move' i_x[7337350](7337352 'set reference' call_tmp[1719538]))
      (7337358 call deinit[21354] i_x[7337350])
      ref i_x[7337362]:string[244] "temp"
      (7337366 'move' i_x[7337362](7337364 'set reference' call_tmp[1719530]))
      (7337370 call deinit[21354] i_x[7337362])
      ref i_x[7337374]:string[244] "temp"
      (7337378 'move' i_x[7337374](7337376 'set reference' call_tmp[1719522]))
      (7337382 call deinit[21354] i_x[7337374])
    }
    val ret[7745904]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7745906 'move' ret[7745904](7745908 '.v' this[1719290] _low[1610001]))
    const-val call_tmp[1719595]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1719597 'move' call_tmp[1719595](1719600 call chpl__addRangeStrides[1722025] ret[7745904] 1 ord[1719292]))
    (1719627 return call_tmp[1719595])
  }
  function chpl_by_help[3461277](const in arg r[3461279]:range(int(64),both,one)[1610039], const in arg step[3461281]:int(64)[10], ref arg _retArg[5590470]:range(int(64),both,any)[3464570]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[3461285]:range(int(64),both,any)[3464570] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[3461951]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3461955 'move' coerce_tmp[3461951](9223115 '.v' r[3461279] _low[1610001]))
    (3461307 'noop')
    const-val coerce_tmp[3461962]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (3461966 'move' coerce_tmp[3461962](9223122 '.v' r[3461279] _high[1610006]))
    (3461320 'noop')
    const-val call_tmp[7975825]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7975827 'move' call_tmp[7975825](7975829 '*' 1 step[3461281]))
    (3461378 call compilerAssert[1518488])
    const-val call_tmp[8486440]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8486442 'move' call_tmp[8486440](8486444 '>' call_tmp[7975825] 0))
    if call_tmp[8486440]
    {
      const-val tmp[3461558]:range(int(64),both,any)[3464570] "dead after last mention" "expr temp" "delay instantiation" "maybe param" "no auto destroy" "temp"
      val ret[8486452]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8486454 'move' ret[8486452](8486456 '.v' r[3461279] _low[1610001]))
      const-val initTemp[3462571]:range(int(64),both,any)[3464570] "dead after last mention" "delay instantiation" "temp"
      (3462574 call init[3462587] initTemp[3462571] coerce_tmp[3461951] coerce_tmp[3461962] call_tmp[7975825] ret[8486452] 1)
      (3461582 'move' tmp[3461558] initTemp[3462571])
      (3461650 'move' ret[3461285] tmp[3461558])
      gotoReturn _end_chpl_by_help[3461942] _end_chpl_by_help[3461942]
    }
    {
      const-val tmp[3461679]:range(int(64),both,any)[3464570] "dead after last mention" "expr temp" "delay instantiation" "maybe param" "no auto destroy" "temp"
      val ret[8486469]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8486471 'move' ret[8486469](8486473 '.v' r[3461279] _high[1610006]))
      const-val initTemp[3465402]:range(int(64),both,any)[3464570] "dead after last mention" "delay instantiation" "temp"
      (3465405 call init[3462587] initTemp[3465402] coerce_tmp[3461951] coerce_tmp[3461962] call_tmp[7975825] ret[8486469] 1)
      (3461703 'move' tmp[3461679] initTemp[3465402])
      (3461778 'move' ret[3461285] tmp[3461679])
      gotoReturn _end_chpl_by_help[3461942] _end_chpl_by_help[3461942]
    }
    label _end_chpl_by_help[3461942]
    (5590472 '=' _retArg[5590470] ret[3461285])
    (5590474 return _void[46])
  }
  function range(int(64),both,one)[1610039].this[1633175](const in arg this[1633181]:range(int(64),both,one)[1610039], const in arg other[1633183]:range(int(64),both,one)[1610039], ref arg _retArg[5549703]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1636537]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1636541 'move' coerce_tmp[1636537](9198709 '.v' this[1633181] _low[1610001]))
    (1633772 'noop')
    const-val coerce_tmp[1636551]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1636555 'move' coerce_tmp[1636551](9198719 '.v' this[1633181] _high[1610006]))
    (1633826 'noop')
    const-val coerce_tmp[1636569]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1636573 'move' coerce_tmp[1636569](9198729 '.v' other[1633183] _low[1610001]))
    (1633901 'noop')
    const-val coerce_tmp[1636583]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1636587 'move' coerce_tmp[1636583](9198739 '.v' other[1633183] _high[1610006]))
    (1633955 'noop')
    const-val call_tmp[1634398]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "temp"
    (1634400 'move' call_tmp[1634398](1634403 call myMax[1634344] coerce_tmp[1636537] coerce_tmp[1636569]))
    val newlo[1634422]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1634424 'move' newlo[1634422] call_tmp[1634398])
    const-val call_tmp[1634428]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "temp"
    (1634430 'move' call_tmp[1634428](1634433 call myMin[1634168] coerce_tmp[1636551] coerce_tmp[1636583]))
    val newhi[1634452]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1634454 'move' newhi[1634452] call_tmp[1634428])
    if 0
    {
      (7362830 '=' newlo[1634422] 1)
      (7362847 '=' newhi[1634452] 0)
    }
    (1634942 call compilerAssert[1518488])
    const-val call_tmp[1635002]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1638147]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1638150 call init[1638161] initTemp[1638147] newlo[1634422] newhi[1634452] 1 0)
    (1635004 'move' call_tmp[1635002] initTemp[1638147])
    label _end_this[1636205]
    (5549705 '=' _retArg[5549703] call_tmp[1635002])
    (5549707 return _void[46])
  }
  function range(int(64),low,one)[1576928].this[1692702](const in arg this[1692708]:range(int(64),low,one)[1576928], const in arg other[1692710]:range(int(64),both,one)[1610039], ref arg _retArg[5550441]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1696066]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1696070 'move' coerce_tmp[1696066](9199231 '.v' this[1692708] _low[1576890]))
    (1693299 'noop')
    const-val coerce_tmp[1696080]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1696084 'move' coerce_tmp[1696080](9199241 '.v' other[1692710] _high[1610006]))
    (1693353 'noop')
    const-val coerce_tmp[1696098]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1696102 'move' coerce_tmp[1696098](9199251 '.v' other[1692710] _low[1610001]))
    (1693428 'noop')
    const-val coerce_tmp[1696112]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1696116 'move' coerce_tmp[1696112](9199261 '.v' other[1692710] _high[1610006]))
    (1693482 'noop')
    const-val call_tmp[1693925]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "temp"
    (1693927 'move' call_tmp[1693925](1693930 call myMax[1693871] coerce_tmp[1696066] coerce_tmp[1696098]))
    val newlo[1693949]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1693951 'move' newlo[1693949] call_tmp[1693925])
    const-val call_tmp[1693955]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "temp"
    (1693957 'move' call_tmp[1693955](1693960 call myMin[1693695] coerce_tmp[1696080] coerce_tmp[1696112]))
    val newhi[1693979]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1693981 'move' newhi[1693979] call_tmp[1693955])
    if 0
    {
      (7362918 '=' newlo[1693949] 1)
      (7362935 '=' newhi[1693979] 0)
    }
    (1694469 call compilerAssert[1518488])
    const-val call_tmp[1694529]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1696247]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1696250 call init[1638161] initTemp[1696247] newlo[1693949] newhi[1693979] 1 0)
    (1694531 'move' call_tmp[1694529] initTemp[1696247])
    label _end_this[1695732]
    (5550443 '=' _retArg[5550441] call_tmp[1694529])
    (5550445 return _void[46])
  }
  function range(int(64),high,one)[1730829].this[1744685](const in arg this[1744691]:range(int(64),high,one)[1730829], const in arg other[1744693]:range(int(64),both,one)[1610039], ref arg _retArg[5551434]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1748049]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1748053 'move' coerce_tmp[1748049](9199677 '.v' other[1744693] _low[1610001]))
    (1745282 'noop')
    const-val coerce_tmp[1748063]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1748067 'move' coerce_tmp[1748063](9199687 '.v' this[1744691] _high[1730796]))
    (1745336 'noop')
    const-val coerce_tmp[1748288]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1748292 'move' coerce_tmp[1748288](9199697 '.v' other[1744693] _low[1610001]))
    (1745411 'noop')
    const-val coerce_tmp[1748302]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1748306 'move' coerce_tmp[1748302](9199707 '.v' other[1744693] _high[1610006]))
    (1745465 'noop')
    const-val call_tmp[1745908]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "temp"
    (1745910 'move' call_tmp[1745908](1745913 call myMax[1745854] coerce_tmp[1748049] coerce_tmp[1748288]))
    val newlo[1745932]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1745934 'move' newlo[1745932] call_tmp[1745908])
    const-val call_tmp[1745938]:int(64)[10] "dead at end of block" "expr temp" "maybe param" "temp"
    (1745940 'move' call_tmp[1745938](1745943 call myMin[1745678] coerce_tmp[1748063] coerce_tmp[1748302]))
    val newhi[1745962]:int(64)[10] "dead at end of block" "insert auto destroy"
    (1745964 'move' newhi[1745962] call_tmp[1745938])
    if 0
    {
      (7363114 '=' newlo[1745932] 1)
      (7363131 '=' newhi[1745962] 0)
    }
    (1746452 call compilerAssert[1518488])
    const-val call_tmp[1746512]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1748437]:range(int(64),both,one)[1610039] "dead at end of block" "delay instantiation" "temp"
    (1748440 call init[1638161] initTemp[1748437] newlo[1745932] newhi[1745962] 1 0)
    (1746514 'move' call_tmp[1746512] initTemp[1748437])
    label _end_this[1747715]
    (5551436 '=' _retArg[5551434] call_tmp[1746512])
    (5551438 return _void[46])
  }
  function chpl_count_help[1714296](const in arg r[1714298]:range(int(64),low,one)[1576928], const in arg count[1714300]:int(64)[10], ref arg _retArg[5551146]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1714302]:range(int(64),both,one)[1610039] "dead after last mention" "RVV" "temp"
    const-val call_tmp[7379599]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7379601 'move' call_tmp[7379599](7379603 '==' count[1714300] 0))
    if call_tmp[7379599]
    {
      const-val call_tmp[1714563]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1714565 'move' call_tmp[1714563](1714568 call absSameType[1716263] r[1714298]))
      const-val coerce_tmp[1716455]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1716459 'move' coerce_tmp[1716455](9199454 '.v' r[1714298] _low[1576890]))
      const-val call_tmp[7377710]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7377712 'move' call_tmp[7377710](7377714 '-' coerce_tmp[1716455] call_tmp[1714563]))
      none[48]
      const-val call_tmp[1714595]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1716466]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
      const-val coerce_tmp[1716984]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1716988 'move' coerce_tmp[1716984](9199447 '.v' r[1714298] _low[1576890]))
      (1716469 call init[1716487] initTemp[1716466] coerce_tmp[1716984] call_tmp[7377710] 1)
      (1714597 'move' call_tmp[1714595] initTemp[1716466])
      (1714615 'move' ret[1714302] call_tmp[1714595])
      gotoReturn _end_chpl_count_help[1716232] _end_chpl_count_help[1716232]
    }
    const-val call_tmp[7315158]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315160 'move' call_tmp[7315158](7315162 '>' count[1714300] 0))
    val tmp[1714858]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7315158]
    {
      (1714899 'move' tmp[1714858] 0)
    }
    {
      (1714905 'move' tmp[1714858] 0)
    }
    if tmp[1714858]
    {
      (1714921 call boundsCheckHalt[404] "With a positive count, the range must have a first index.")
    }
    const-val tmp[7319438]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319440 'move' tmp[7319438](7319442 '<' count[1714300] 0))
    val tmp[1714945]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7319438]
    {
      (1714986 'move' tmp[1714945] 1)
    }
    {
      (1714992 'move' tmp[1714945] 0)
    }
    if tmp[1714945]
    {
      (1715008 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val call_tmp[7807755]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7807757 'move' call_tmp[7807755](7807759 '*' count[1714300] 1))
    val tmp[1715766]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[7315173]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315175 'move' call_tmp[7315173](7315177 '>' call_tmp[7807755] 0))
    if call_tmp[7315173]
    {
      (1719270 '=' tmp[1715766](9199461 '.v' r[1714298] _low[1576890]))
    }
    {
      const-val tmp[1715799]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[7479370]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7479372 'move' call_tmp[7479370](7479374 '+' call_tmp[7807755] 1))
      const-val coerce_tmp[1719159]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1719163 'move' coerce_tmp[1719159](9199471 '.v' r[1714298] _high[1576895]))
      (1715833 'move' tmp[1715799](1715836 call chpl__add[1718211] coerce_tmp[1719159] call_tmp[7479370]))
      (1715840 'move' tmp[1715766] tmp[1715799])
    }
    val tmp[1715853]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[7319493]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319495 'move' tmp[7319493](7319497 '<' call_tmp[7807755] 0))
    if tmp[7319493]
    {
      (1719274 '=' tmp[1715853](9199478 '.v' r[1714298] _high[1576895]))
    }
    {
      const-val tmp[1715886]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[7444878]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444880 'move' call_tmp[7444878](7444882 '-' call_tmp[7807755] 1))
      const-val coerce_tmp[1719212]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1719216 'move' coerce_tmp[1719212](9199488 '.v' r[1714298] _low[1576890]))
      (1715920 'move' tmp[1715886](1715923 call chpl__add[1718211] coerce_tmp[1719212] call_tmp[7444878]))
      (1715927 'move' tmp[1715853] tmp[1715886])
    }
    none[48]
    none[48]
    const-val call_tmp[1716205]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1719234]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1719237 call init[1629805] initTemp[1719234] tmp[1715766] tmp[1715853])
    (1716207 'move' call_tmp[1716205] initTemp[1719234])
    (1716223 'move' ret[1714302] call_tmp[1716205])
    label _end_chpl_count_help[1716232]
    (5551148 '=' _retArg[5551146] ret[1714302])
    (5551150 return _void[46])
  }
  function chpl_count_help[1909396](const in arg r[1909398]:range(int(64),low,one)[1576928], const in arg count[1909400]:uint(32)[81], ref arg _retArg[5557298]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1909402]:range(int(64),both,one)[1610039] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[1911351]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1911357 'move' coerce_tmp[1911351](1911353 'cast' int(32)[66] 0))
    const-val tmp[7520556]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7520558 'move' tmp[7520556](7520560 '<' coerce_tmp[1911351] 0))
    const-val call_tmp[7520563]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7520565 'move' call_tmp[7520563](7520567 'u!' tmp[7520556]))
    val tmp[7520569]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7520563]
    {
      const-val call_tmp[7520573]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520575 'move' call_tmp[7520573](7520577 'cast' uint(32)[81] coerce_tmp[1911351]))
      const-val call_tmp[7520580]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7520582 'move' call_tmp[7520580](7520584 '==' count[1909400] call_tmp[7520573]))
      (7520587 'move' tmp[7520569] call_tmp[7520580])
    }
    {
      (7520591 'move' tmp[7520569] 0)
    }
    if tmp[7520569]
    {
      const-val call_tmp[1909663]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1909665 'move' call_tmp[1909663](1909668 call absSameType[1911871] r[1909398]))
      const-val coerce_tmp[1911970]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1911974 'move' coerce_tmp[1911970](9200878 '.v' r[1909398] _low[1576890]))
      const-val call_tmp[7377760]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7377762 'move' call_tmp[7377760](7377764 '-' coerce_tmp[1911970] call_tmp[1909663]))
      none[48]
      const-val call_tmp[1909695]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1911981]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
      const-val coerce_tmp[1912004]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1912008 'move' coerce_tmp[1912004](9200871 '.v' r[1909398] _low[1576890]))
      (1911984 call init[1716487] initTemp[1911981] coerce_tmp[1912004] call_tmp[7377760] 1)
      (1909697 'move' call_tmp[1909695] initTemp[1911981])
      (1909715 'move' ret[1909402] call_tmp[1909695])
      gotoReturn _end_chpl_count_help[1911332] _end_chpl_count_help[1911332]
    }
    const-val coerce_tmp[1912019]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1912025 'move' coerce_tmp[1912019](1912021 'cast' int(32)[66] 0))
    const-val tmp[7521590]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7521592 'move' tmp[7521590](7521594 '<' coerce_tmp[1912019] 0))
    val tmp[7521597]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7521590]
    {
      (7521601 'move' tmp[7521597] 1)
    }
    {
      const-val call_tmp[7521605]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
      (7521607 'move' call_tmp[7521605](7521609 'cast' uint(32)[81] coerce_tmp[1912019]))
      const-val call_tmp[7521612]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7521614 'move' call_tmp[7521612](7521616 '>' count[1909400] call_tmp[7521605]))
      (7521619 'move' tmp[7521597] call_tmp[7521612])
    }
    val tmp[1909958]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7521597]
    {
      (1909999 'move' tmp[1909958] 0)
    }
    {
      (1910005 'move' tmp[1909958] 0)
    }
    if tmp[1909958]
    {
      (1910021 call boundsCheckHalt[404] "With a positive count, the range must have a first index.")
    }
    const-val call_tmp[1910826]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1910828 'move' call_tmp[1910826](1910831 'cast' int(64)[10] count[1909400]))
    const-val call_tmp[7807765]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7807767 'move' call_tmp[7807765](7807769 '*' call_tmp[1910826] 1))
    val tmp[1910866]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[7315383]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315385 'move' call_tmp[7315383](7315387 '>' call_tmp[7807765] 0))
    if call_tmp[7315383]
    {
      (1913566 '=' tmp[1910866](9200885 '.v' r[1909398] _low[1576890]))
    }
    {
      const-val tmp[1910899]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[7479470]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7479472 'move' call_tmp[7479470](7479474 '+' call_tmp[7807765] 1))
      const-val coerce_tmp[1913495]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1913499 'move' coerce_tmp[1913495](9200895 '.v' r[1909398] _high[1576895]))
      (1910933 'move' tmp[1910899](1910936 call chpl__add[1718211] coerce_tmp[1913495] call_tmp[7479470]))
      (1910940 'move' tmp[1910866] tmp[1910899])
    }
    val tmp[1910953]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[7319668]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319670 'move' tmp[7319668](7319672 '<' call_tmp[7807765] 0))
    if tmp[7319668]
    {
      (1913570 '=' tmp[1910953](9200902 '.v' r[1909398] _high[1576895]))
    }
    {
      const-val tmp[1910986]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[7444978]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7444980 'move' call_tmp[7444978](7444982 '-' call_tmp[7807765] 1))
      const-val coerce_tmp[1913508]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1913512 'move' coerce_tmp[1913508](9200912 '.v' r[1909398] _low[1576890]))
      (1911020 'move' tmp[1910986](1911023 call chpl__add[1718211] coerce_tmp[1913508] call_tmp[7444978]))
      (1911027 'move' tmp[1910953] tmp[1910986])
    }
    none[48]
    none[48]
    const-val call_tmp[1911305]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1913530]:range(int(64),both,one)[1610039] "dead after last mention" "delay instantiation" "temp"
    (1913533 call init[1629805] initTemp[1913530] tmp[1910866] tmp[1910953])
    (1911307 'move' call_tmp[1911305] initTemp[1913530])
    (1911323 'move' ret[1909402] call_tmp[1911305])
    label _end_chpl_count_help[1911332]
    (5557300 '=' _retArg[5557298] ret[1909402])
    (5557302 return _void[46])
  }
  function #[1714265](const in arg r[1714267]:range(int(64),low,one)[1576928], const in arg count[1714269]:int(64)[10], ref arg _retArg[5551134]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1714281]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5551140]:range(int(64),both,one)[1610039] "temp"
    (1714286 call chpl_count_help[1714296] r[1714267] count[1714269] ret_tmp[5551140])
    (5551143 'move' call_tmp[1714281] ret_tmp[5551140])
    (5551136 '=' _retArg[5551134] call_tmp[1714281])
    (5551138 return _void[46])
  }
  function #[1909365](const in arg r[1909367]:range(int(64),low,one)[1576928], const in arg count[1909369]:uint(32)[81], ref arg _retArg[5557286]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val call_tmp[1909381]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5557292]:range(int(64),both,one)[1610039] "temp"
    (1909386 call chpl_count_help[1909396] r[1909367] count[1909369] ret_tmp[5557292])
    (5557295 'move' call_tmp[1909381] ret_tmp[5557292])
    (5557288 '=' _retArg[5557286] call_tmp[1909381])
    (5557290 return _void[46])
  }
  function chpl_checkIfRangeIterWillOverflow[1518856](const in arg low[1518860]:int(64)[10], const in arg high[1518862]:int(64)[10], const in arg stride[1518864]:int(64)[10], const in arg first[1518870]:int(64)[10], const in arg last[1518876]:int(64)[10], const in arg shouldHalt[1518882]:bool[19]) : bool[19] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1518884]:bool[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[7315008]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315010 'move' call_tmp[7315008](7315012 '>' low[1518860] high[1518862]))
    if call_tmp[7315008]
    {
      (1518915 'move' ret[1518884] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1519396] _end_chpl_checkIfRangeIterWillOverflow[1519396]
    }
    val willOverFlow[1518922]:bool[19] "dead at end of block" "insert auto destroy"
    (1518924 'move' willOverFlow[1518922] 0)
    const-val call_tmp[7315023]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315025 'move' call_tmp[7315023](7315027 '>' last[1518876] 0))
    val tmp[1518965]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7315023]
    {
      const-val call_tmp[7315038]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315040 'move' call_tmp[7315038](7315042 '>' stride[1518864] 0))
      (1518998 'move' tmp[1518965] call_tmp[7315038])
    }
    {
      (1519004 'move' tmp[1518965] 0)
    }
    if tmp[1518965]
    {
      const-val call_tmp[7641764]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7641766 'move' call_tmp[7641764](7641768 '-' 9223372036854775807 last[1518876]))
      const-val call_tmp[7315048]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315050 'move' call_tmp[7315048](7315052 '>' stride[1518864] call_tmp[7641764]))
      if call_tmp[7315048]
      {
        (7392283 '=' willOverFlow[1518922] 1)
      }
    }
    {
      const-val tmp[7319178]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7319180 'move' tmp[7319178](7319182 '<' last[1518876] 0))
      val tmp[1519080]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if tmp[7319178]
      {
        const-val tmp[7319193]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7319195 'move' tmp[7319193](7319197 '<' stride[1518864] 0))
        (1519113 'move' tmp[1519080] tmp[7319193])
      }
      {
        (1519119 'move' tmp[1519080] 0)
      }
      if tmp[1519080]
      {
        const-val call_tmp[7641734]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (7641736 'move' call_tmp[7641734](7641738 '-' -9223372036854775808 last[1518876]))
        const-val tmp[7319203]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (7319205 'move' tmp[7319203](7319207 '<' stride[1518864] call_tmp[7641734]))
        if tmp[7319203]
        {
          (7392300 '=' willOverFlow[1518922] 1)
        }
      }
    }
    val tmp[1519334]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1518922]
    {
      (1519359 'move' tmp[1519334] shouldHalt[1518882])
    }
    {
      (1519365 'move' tmp[1519334] 0)
    }
    if tmp[1519334]
    {
      (1519383 call boundsCheckHalt[404] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (1519388 'move' ret[1518884] willOverFlow[1518922])
    label _end_chpl_checkIfRangeIterWillOverflow[1519396]
    (1519398 return ret[1518884])
  }
  function range(int(64),both,one)[1610039].checkIfIterWillOverflow[1612304](const in arg this[1612310]:range(int(64),both,one)[1610039], const in arg shouldHalt[1612316]:bool[19]) : bool[19] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    val ret[7745916]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7745918 'move' ret[7745916](7745920 '.v' this[1612310] _low[1610001]))
    val ret[7746057]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7746059 'move' ret[7746057](7746061 '.v' this[1612310] _high[1610006]))
    const-val call_tmp[1612405]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1614891]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1614895 'move' coerce_tmp[1614891](9198436 '.v' this[1612310] _low[1610001]))
    const-val coerce_tmp[1614897]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1614901 'move' coerce_tmp[1614897](9198443 '.v' this[1612310] _high[1610006]))
    (1612407 'move' call_tmp[1612405](1612410 call chpl_checkIfRangeIterWillOverflow[1518856] coerce_tmp[1614891] coerce_tmp[1614897] 1 ret[7745916] ret[7746057] shouldHalt[1612316]))
    label _end_checkIfIterWillOverflow[1612422]
    (1612424 return call_tmp[1612405])
  }
  function range(int(64),both,any)[3464570].checkIfIterWillOverflow[3466948](const in arg this[3466954]:range(int(64),both,any)[3464570], const in arg shouldHalt[3466960]:bool[19]) : bool[19] "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    val ret[8489246]:int(64)[10] "dead after last mention" "RVV" "temp"
    (8489248 'move' ret[8489246](8489250 '.v' this[3466954] _stride[3464542]))
    val tmp[8490379]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[8490381]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8490383 'move' call_tmp[8490381](8490386 call hasPositiveStride[3467799] this[3466954]))
    if call_tmp[8490381]
    {
      const-val coerce_tmp[8490390]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490392 'move' coerce_tmp[8490390](8490394 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8490397]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490399 'move' call_tmp[8490397](8490401 '!=' coerce_tmp[8490390] -1))
      const-val call_tmp[8490404]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490406 'move' call_tmp[8490404](8490408 'u!' call_tmp[8490397]))
      if call_tmp[8490404]
      {
        (8490413 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range")
      }
      val ret[8490416]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8490418 'move' ret[8490416](8490420 '.v' this[3466954] _stride[3464542]))
      const-val coerce_tmp[8490423]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490425 'move' coerce_tmp[8490423](8490427 '.v' this[3466954] _low[3464532]))
      const-val coerce_tmp[8490430]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490432 'move' coerce_tmp[8490430](8490434 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8490437]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490439 'move' call_tmp[8490437](8490442 call chpl__diffMod[3468213] coerce_tmp[8490430] coerce_tmp[8490423] ret[8490416]))
      const-val call_tmp[8490446]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490448 'move' call_tmp[8490446](8490450 '+' coerce_tmp[8490423] call_tmp[8490437]))
      (8490453 'move' tmp[8490379] call_tmp[8490446])
    }
    {
      const-val coerce_tmp[8490457]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490459 'move' coerce_tmp[8490457](8490461 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8490464]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490466 'move' call_tmp[8490464](8490468 '!=' coerce_tmp[8490457] -1))
      const-val call_tmp[8490471]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490473 'move' call_tmp[8490471](8490475 'u!' call_tmp[8490464]))
      if call_tmp[8490471]
      {
        (8490480 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range")
      }
      val ret[8490483]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8490485 'move' ret[8490483](8490487 '.v' this[3466954] _stride[3464542]))
      const-val coerce_tmp[8490490]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490492 'move' coerce_tmp[8490490](8490494 '.v' this[3466954] _high[3464537]))
      const-val coerce_tmp[8490497]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8490499 'move' coerce_tmp[8490497](8490501 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8490504]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490506 'move' call_tmp[8490504](8490509 call chpl__diffMod[3468213] coerce_tmp[8490490] coerce_tmp[8490497] ret[8490483]))
      const-val call_tmp[8490513]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8490515 'move' call_tmp[8490513](8490517 '-' coerce_tmp[8490490] call_tmp[8490504]))
      (8490520 'move' tmp[8490379] call_tmp[8490513])
    }
    val tmp[8494402]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[8494404]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (8494406 'move' call_tmp[8494404](8494409 call hasPositiveStride[3467799] this[3466954]))
    if call_tmp[8494404]
    {
      const-val coerce_tmp[8494413]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494415 'move' coerce_tmp[8494413](8494417 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8494420]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494422 'move' call_tmp[8494420](8494424 '!=' coerce_tmp[8494413] -1))
      const-val call_tmp[8494427]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494429 'move' call_tmp[8494427](8494431 'u!' call_tmp[8494420]))
      if call_tmp[8494427]
      {
        (8494436 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range")
      }
      val ret[8494439]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8494441 'move' ret[8494439](8494443 '.v' this[3466954] _stride[3464542]))
      const-val coerce_tmp[8494446]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494448 'move' coerce_tmp[8494446](8494450 '.v' this[3466954] _high[3464537]))
      const-val coerce_tmp[8494453]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494455 'move' coerce_tmp[8494453](8494457 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8494460]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494462 'move' call_tmp[8494460](8494465 call chpl__diffMod[3468213] coerce_tmp[8494446] coerce_tmp[8494453] ret[8494439]))
      const-val call_tmp[8494469]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494471 'move' call_tmp[8494469](8494473 '-' coerce_tmp[8494446] call_tmp[8494460]))
      (8494476 'move' tmp[8494402] call_tmp[8494469])
    }
    {
      const-val coerce_tmp[8494480]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494482 'move' coerce_tmp[8494480](8494484 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8494487]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494489 'move' call_tmp[8494487](8494491 '!=' coerce_tmp[8494480] -1))
      const-val call_tmp[8494494]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494496 'move' call_tmp[8494494](8494498 'u!' call_tmp[8494487]))
      if call_tmp[8494494]
      {
        (8494503 call halt[88131] "Can't query the aligned bounds of an ambiguously aligned range")
      }
      val ret[8494506]:int(64)[10] "dead after last mention" "RVV" "temp"
      (8494508 'move' ret[8494506](8494510 '.v' this[3466954] _stride[3464542]))
      const-val coerce_tmp[8494513]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494515 'move' coerce_tmp[8494513](8494517 '.v' this[3466954] _low[3464532]))
      const-val coerce_tmp[8494520]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (8494522 'move' coerce_tmp[8494520](8494524 '.v' this[3466954] _alignment[3464556]))
      const-val call_tmp[8494527]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494529 'move' call_tmp[8494527](8494532 call chpl__diffMod[3468213] coerce_tmp[8494520] coerce_tmp[8494513] ret[8494506]))
      const-val call_tmp[8494536]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (8494538 'move' call_tmp[8494536](8494540 '+' coerce_tmp[8494513] call_tmp[8494527]))
      (8494543 'move' tmp[8494402] call_tmp[8494536])
    }
    const-val call_tmp[3467049]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[3468971]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3468975 'move' coerce_tmp[3468971](9223132 '.v' this[3466954] _low[3464532]))
    const-val coerce_tmp[3468977]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (3468981 'move' coerce_tmp[3468977](9223139 '.v' this[3466954] _high[3464537]))
    (3467051 'move' call_tmp[3467049](3467054 call chpl_checkIfRangeIterWillOverflow[1518856] coerce_tmp[3468971] coerce_tmp[3468977] ret[8489246] tmp[8490379] tmp[8494402] shouldHalt[3466960]))
    label _end_checkIfIterWillOverflow[3467066]
    (3467068 return call_tmp[3467049])
  }
  type _ic_chpl_direct_range_iter[1924407] val super[1924408]:RootClass[236] "super class" val more[1924410]:int(64)[10] val F0__iterator[6849178]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6849180]:int(64)[10] const-val F2_low[6849182]:int(64)[10] val value[6849184]:int(64)[10]
  type _ir_chpl_direct_range_iter[1924413]
  type _ic_chpl_direct_range_iter[1989415] val super[1989416]:RootClass[236] "super class" val more[1989418]:int(64)[10] val F0__iterator[6850080]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6850082]:int(64)[10] const-val F2_low[6850084]:int(64)[10] val value[6850086]:int(64)[10]
  type _ir_chpl_direct_range_iter[1989421]
  type _ic_chpl_direct_range_iter[2100643] val super[2100644]:RootClass[236] "super class" val more[2100646]:int(64)[10] val F0__iterator[6868022]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6868024]:int(64)[10] const-val F2_low[6868026]:int(64)[10] val value[6868028]:int(64)[10]
  type _ir_chpl_direct_range_iter[2100649]
  type _ic_chpl_direct_range_iter[2134197] val super[2134198]:RootClass[236] "super class" val more[2134200]:int(64)[10] val F0__iterator[6882126]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6882128]:int(64)[10] const-val F2_low[6882130]:int(64)[10] val value[6882132]:int(64)[10]
  type _ir_chpl_direct_range_iter[2134203]
  type _ic_chpl_direct_range_iter[2205360] val super[2205361]:RootClass[236] "super class" val more[2205363]:int(64)[10] val F0__iterator[6883028]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6883030]:int(64)[10] const-val F2_low[6883032]:int(64)[10] val value[6883034]:int(64)[10]
  type _ir_chpl_direct_range_iter[2205366]
  type _ic_chpl_direct_range_iter[2320592] val super[2320593]:RootClass[236] "super class" val more[2320595]:int(64)[10] val F0__iterator[6924681]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6924683]:int(64)[10] const-val F2_low[6924685]:int(64)[10] val value[6924687]:int(64)[10]
  type _ir_chpl_direct_range_iter[2320598]
  type _ic_chpl_direct_range_iter[2350672] val super[2350673]:RootClass[236] "super class" val more[2350675]:int(64)[10] val F0__iterator[6926157]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6926159]:int(64)[10] const-val F2_low[6926161]:int(64)[10] val value[6926163]:int(64)[10]
  type _ir_chpl_direct_range_iter[2350678]
  type _ic_chpl_direct_range_iter[2471354] val super[2471355]:RootClass[236] "super class" val more[2471357]:int(64)[10] val F0__iterator[6942207]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6942209]:int(64)[10] const-val F2_low[6942211]:int(64)[10] val value[6942213]:int(64)[10]
  type _ir_chpl_direct_range_iter[2471360]
  type _ic_chpl_direct_range_iter[2502241] val super[2502242]:RootClass[236] "super class" val more[2502244]:int(64)[10] val F0__iterator[6943921]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6943923]:int(64)[10] const-val F2_low[6943925]:int(64)[10] val value[6943927]:int(64)[10]
  type _ir_chpl_direct_range_iter[2502247]
  type _ic_chpl_direct_range_iter[2698439] val super[2698440]:RootClass[236] "super class" val more[2698442]:int(64)[10] val F0__iterator[6976936]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6976938]:int(64)[10] const-val F2_low[6976940]:int(64)[10] val value[6976942]:int(64)[10]
  type _ir_chpl_direct_range_iter[2698445]
  type _ic_chpl_direct_range_iter[2730940] val super[2730941]:RootClass[236] "super class" val more[2730943]:int(64)[10] val F0__iterator[6979147]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[6979149]:int(64)[10] const-val F2_low[6979151]:int(64)[10] val value[6979153]:int(64)[10]
  type _ir_chpl_direct_range_iter[2730946]
  type _ic_chpl_direct_range_iter[2870256] val super[2870257]:RootClass[236] "super class" val more[2870259]:int(64)[10] val F0__iterator[7014501]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[7014503]:int(64)[10] const-val F2_low[7014505]:int(64)[10] val value[7014507]:int(64)[10]
  type _ir_chpl_direct_range_iter[2870262]
  type _ic_chpl_direct_range_iter[2903564] val super[2903565]:RootClass[236] "super class" val more[2903567]:int(64)[10] val F0__iterator[7016971]:_ic_chpl_direct_param_stride_range_iter[1519526] val F1_i[7016973]:int(64)[10] const-val F2_low[7016975]:int(64)[10] val value[7016977]:int(64)[10]
  type _ir_chpl_direct_range_iter[2903570]
  type _ic_chpl_direct_range_iter[1600114] val super[1600115]:RootClass[236] "super class" val more[1600117]:int(64)[10] const-val F0_low[6827421]:int(64)[10] const-val F1_high[6827425]:int(64)[10] val F2__iterator[6827429]:_ic_chpl_direct_param_stride_range_iter[1519526] val F3_i[6827431]:int(64)[10] const-val F4_low[6827433]:int(64)[10] val value[6827435]:int(64)[10]
  type _ir_chpl_direct_range_iter[1600120] const-val F0_low[6827423]:int(64)[10] const-val F1_high[6827427]:int(64)[10]
  type _ic_chpl_direct_strided_range_iter[2059852] val super[2059853]:RootClass[236] "super class" val more[2059855]:int(64)[10] const-val F0_low[6857233]:int(64)[10] const-val F1_high[6857237]:int(64)[10] val F2__iterator[6857241]:_ic_chpl_direct_param_stride_range_iter[2059581] val F3_i[6857243]:int(64)[10] const-val F4_high[6857245]:int(64)[10] val value[6857247]:int(64)[10]
  type _ir_chpl_direct_strided_range_iter[2059858] const-val F0_low[6857235]:int(64)[10] const-val F1_high[6857239]:int(64)[10]
  type _ic_chpl_direct_counted_range_iter[1520064] val super[1520065]:RootClass[236] "super class" val more[1520067]:int(64)[10] const-val F0_low[6832410]:int(64)[10] const-val F1_count[6832414]:int(64)[10] val F2__iterator[6832418]:_ic_chpl_direct_counted_range_iter_helper[1519797] val F3__iterator[6832420]:_ic_chpl_direct_param_stride_range_iter[1519526] val F4_i[6832422]:int(64)[10] const-val F5_low[6832424]:int(64)[10] val value[6832426]:int(64)[10]
  type _ir_chpl_direct_counted_range_iter[1520070] const-val F0_low[6832412]:int(64)[10] const-val F1_count[6832416]:int(64)[10]
  type _ic_chpl_direct_counted_range_iter_helper[1519797] val super[1519798]:RootClass[236] "super class" val more[1519800]:int(64)[10] const-val F0_low[6834174]:int(64)[10] const-val F1_count[6834178]:int(64)[10] val F2__iterator[6834182]:_ic_chpl_direct_param_stride_range_iter[1519526] val F3_i[6834184]:int(64)[10] const-val F4_low[6834186]:int(64)[10] val value[6834188]:int(64)[10]
  type _ir_chpl_direct_counted_range_iter_helper[1519803] const-val F0_low[6834176]:int(64)[10] const-val F1_count[6834180]:int(64)[10]
  type _ic_chpl_direct_pos_stride_range_iter[1881076] val super[1881077]:RootClass[236] "super class" val more[1881079]:int(64)[10] const-val F0_low[6846157]:int(64)[10] const-val F1_high[6846161]:int(64)[10] const-val F2_stride[6846165]:int(64)[10] val value[6846169]:int(64)[10]
  type _ir_chpl_direct_pos_stride_range_iter[1881082] const-val F0_low[6846159]:int(64)[10] const-val F1_high[6846163]:int(64)[10] const-val F2_stride[6846167]:int(64)[10]
  type _ic_chpl_direct_param_stride_range_iter[1519526] val super[1519527]:RootClass[236] "super class" val more[1519529]:int(64)[10] const-val F0_low[6835591]:int(64)[10] const-val F1_high[6835595]:int(64)[10] val value[6835599]:int(64)[10]
  type _ir_chpl_direct_param_stride_range_iter[1519532] const-val F0_low[6835593]:int(64)[10] const-val F1_high[6835597]:int(64)[10]
  type _ic_chpl_direct_param_stride_range_iter[2059581] val super[2059582]:RootClass[236] "super class" val more[2059584]:int(64)[10] const-val F0_low[6858171]:int(64)[10] const-val F1_high[6858175]:int(64)[10] val value[6858179]:int(64)[10]
  type _ir_chpl_direct_param_stride_range_iter[2059587] const-val F0_low[6858173]:int(64)[10] const-val F1_high[6858177]:int(64)[10]
  type _ic_these_range_int64_t_low_one[3025015] val super[3025016]:RootClass[236] "super class" val more[3025018]:int(64)[10] const-val F0_this[7060091]:range(int(64),low,one)[1576928] val F1_i[7060095]:int(64)[10] const F2_end[7060097]:int(64)[10] val F3_call_tmp[7060099]:int(64)[10] val value[7060101]:int(64)[10]
  type _ir_these_range_int64_t_low_one[3025021] const-val F0_this[7060093]:range(int(64),low,one)[1576928]
  type _ic_these_range_int64_t_both_any[3469199] val super[3469200]:RootClass[236] "super class" val more[3469202]:int(64)[10] const-val F0_this[7095014]:range(int(64),both,any)[3464570] val F1_i[7095018]:int(64)[10] const F2_end[7095020]:int(64)[10] const F3_start[7095022]:int(64)[10] val value[7095024]:int(64)[10]
  type _ir_these_range_int64_t_both_any[3469205] const-val F0_this[7095016]:range(int(64),both,any)[3464570]
  function _ic_these_range_int64_t_both_one[1615692].advance[1615718](const in arg this[1615720]:_ic_these_range_int64_t_both_one[1615692]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[6836714]:int(64)[10]
    (6836742 'move' more[6836714](6836739 '.v' this[1615720] more[1615695]))
    const-val tmp[6836717]:bool[19] "temp"
    (6836724 'move' tmp[6836717](6836721 '==' more[6836714] 2))
    if tmp[6836717]
    {
      gotoIterResume _jump_2[6836706] _jump_2[6836706]
    }
    const-val tmp[6836729]:bool[19] "temp"
    (6836734 'move' tmp[6836729](6836731 '==' more[6836714] -2))
    if tmp[6836729]
    {
      gotoIterResume _jump_break_2[6836708] _jump_break_2[6836708]
    }
    const-val tmp[6836155]:range(int(64),both,one)[1610039] "temp"
    (6836160 'move' tmp[6836155](6836157 '.v' this[1615720] F0_this[6836143]))
    (1611920 call checkIfIterWillOverflow[1612304] tmp[6836155] 1)
    (6836164 '.=' this[1615720] F1_i[6836147] 0)
    const-val tmp[6836168]:range(int(64),both,one)[1610039] "temp"
    (6836173 'move' tmp[6836168](6836170 '.v' this[1615720] F0_this[6836143]))
    const-val coerce_tmp[7759150]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7759152 'move' coerce_tmp[7759150](7759154 '.v' tmp[6836168] _low[1610001]))
    (6836177 '.=' this[1615720] F3_call_tmp[6836151] coerce_tmp[7759150])
    const-val tmp[6836188]:range(int(64),both,one)[1610039] "temp"
    (6836193 'move' tmp[6836188](6836190 '.v' this[1615720] F0_this[6836143]))
    const-val coerce_tmp[7775529]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7775531 'move' coerce_tmp[7775529](7775533 '.v' tmp[6836188] _high[1610006]))
    (6836197 '.=' this[1615720] F2_end[6836149] coerce_tmp[7775529])
    CForLoop[1612001]
    {
      const-val tmp[6836214]:int(64)[10] "temp"
      (6836219 'move' tmp[6836214](6836216 '.v' this[1615720] F1_i[6836147]))
      (6836203 '.=' this[1615720] value[6836153] tmp[6836214])
      (6836700 '.=' this[1615720] more[1615695] 2)
      gotoIterEnd _end[6836698] _end[6836698]
      label _jump_break_2[6836708]
      gotoReturn _end_these[1612184] _end_these[1612184]
      label _jump_2[6836706]
      {
        const-val tmp[6836234]:int(64)[10] "temp"
        (6836239 'move' tmp[6836234](6836236 '.v' this[1615720] F3_call_tmp[6836151]))
        (6836230 '.=' this[1615720] F1_i[6836147] tmp[6836234])
      }
      {
        val tmp[6836241]:int(64)[10] "temp"
        (6836246 'move' tmp[6836241](6836243 '.v' this[1615720] F1_i[6836147]))
        const tmp[6836248]:int(64)[10] "temp"
        (6836253 'move' tmp[6836248](6836250 '.v' this[1615720] F2_end[6836149]))
        (1612010 '<=' tmp[6836241] tmp[6836248])
      }
      {
        val tmp[6836255]:int(64)[10] "temp"
        (6836260 'move' tmp[6836255](6836257 '.v' this[1615720] F1_i[6836147]))
        (1612033 '+=' tmp[6836255] 1)
        (6836262 '.=' this[1615720] F1_i[6836147] tmp[6836255])
      }
    }
    label _end_these[1612184]
    (6836710 '.=' this[1615720] more[1615695] 0)
    label _end[6836698]
    (6836745 return _void[46])
  }
  type _ic_these_range_int64_t_both_one[1615692] val super[1615693]:RootClass[236] "super class" val more[1615695]:int(64)[10] const-val F0_this[6836143]:range(int(64),both,one)[1610039] val F1_i[6836147]:int(64)[10] const F2_end[6836149]:int(64)[10] val F3_call_tmp[6836151]:int(64)[10] val value[6836153]:int(64)[10]
  type _ir_these_range_int64_t_both_one[1615698] const-val F0_this[6836145]:range(int(64),both,one)[1610039]
  type _ic_these_range_int64_t_both_one[3810170] val super[3810171]:RootClass[236] "super class" val more[3810173]:int(64)[10] const-val F0_this[7160920]:range(int(64),both,one)[1610039] const-ref F1_followThis[7160924]:1*range(int(64),both,one)[1760857] val F2_myFollowThis[7160928]:range(int(64),both,one)[1610039] const-val F3_r[7160930]:range(int(64),both,one)[1610039] val F4__iterator[7160932]:_ic_these_range_int64_t_both_one[1615692] val F5_i[7160934]:int(64)[10] const F6_end[7160936]:int(64)[10] val F7_call_tmp[7160938]:int(64)[10] val value[7160940]:int(64)[10]
  type _ir_these_range_int64_t_both_one[3810176] const-val F0_this[7160922]:range(int(64),both,one)[1610039] const-ref F1_followThis[7160926]:1*range(int(64),both,one)[1760857]
  function :[1631991](const in arg x[1631993]:range(int(64),both,one)[1610039], ref arg _retArg[5549538]:string[244]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1631997]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1632054]:string[244] "dead at end of block" "insert auto destroy"
    (1632594 call init[21321] ret[1632054])
    const-val coerce_tmp[7748259]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7748261 'move' coerce_tmp[7748259](7748263 '.v' x[1631993] _low[1610001]))
    const-val call_tmp[1632086]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546365]:string[244] "temp"
    (1632091 call :[1496816] coerce_tmp[7748259] ret_tmp[5546365])
    (5546368 'move' call_tmp[1632086] ret_tmp[5546365])
    (1632095 call +=[28600] ret[1632054] call_tmp[1632086])
    ref i_x[7336606]:string[244] "temp"
    (7336610 'move' i_x[7336606](7336608 'set reference' call_tmp[1632086]))
    (7336614 call deinit[21354] i_x[7336606])
    (1632102 call +=[28600] ret[1632054] "..")
    const-val coerce_tmp[7761810]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7761812 'move' coerce_tmp[7761810](7761814 '.v' x[1631993] _high[1610006]))
    const-val call_tmp[1632262]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546371]:string[244] "temp"
    (1632267 call :[1496816] coerce_tmp[7761810] ret_tmp[5546371])
    (5546374 'move' call_tmp[1632262] ret_tmp[5546371])
    (1632271 call +=[28600] ret[1632054] call_tmp[1632262])
    ref i_x[7336618]:string[244] "temp"
    (7336622 'move' i_x[7336618](7336620 'set reference' call_tmp[1632262]))
    (7336626 call deinit[21354] i_x[7336618])
    (1632527 'move' ret[1631997] ret[1632054])
    label _end_:[1632535]
    (5549540 '=' _retArg[5549538] ret[1631997])
    (5549542 return _void[46])
  }
  function :[1672374](const in arg x[1672376]:range(byteIndex,both,one)[1655317], ref arg _retArg[5550210]:string[244]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1672380]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1672437]:string[244] "dead at end of block" "insert auto destroy"
    (1672995 call init[21321] ret[1672437])
    const-val call_tmp[1672461]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7804894]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7804896 'move' coerce_tmp[7804894](7804898 '.v' x[1672376] _low[1655279]))
    const-val ret[7804901]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7804903]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7804906 call init[18499] cpi[7804903])
    (7804908 '.=' cpi[7804903] _bindex[18495] coerce_tmp[7804894])
    (7804912 'move' ret[7804901] cpi[7804903])
    (5550024 'move' call_tmp[1672461] ret[7804901])
    const-val call_tmp[1672469]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538164]:string[244] "temp"
    (1672474 call :[18585] call_tmp[1672461] ret_tmp[5538164])
    (5538167 'move' call_tmp[1672469] ret_tmp[5538164])
    (1672478 call +=[28600] ret[1672437] call_tmp[1672469])
    ref i_x[7336918]:string[244] "temp"
    (7336922 'move' i_x[7336918](7336920 'set reference' call_tmp[1672469]))
    (7336926 call deinit[21354] i_x[7336918])
    (1672485 call +=[28600] ret[1672437] "..")
    const-val call_tmp[1672637]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7805671]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7805673 'move' coerce_tmp[7805671](7805675 '.v' x[1672376] _high[1655284]))
    const-val ret[7805678]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7805680]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7805683 call init[18499] cpi[7805680])
    (7805685 '.=' cpi[7805680] _bindex[18495] coerce_tmp[7805671])
    (7805689 'move' ret[7805678] cpi[7805680])
    (5550108 'move' call_tmp[1672637] ret[7805678])
    const-val call_tmp[1672645]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538170]:string[244] "temp"
    (1672650 call :[18585] call_tmp[1672637] ret_tmp[5538170])
    (5538173 'move' call_tmp[1672645] ret_tmp[5538170])
    (1672654 call +=[28600] ret[1672437] call_tmp[1672645])
    ref i_x[7336930]:string[244] "temp"
    (7336934 'move' i_x[7336930](7336932 'set reference' call_tmp[1672645]))
    (7336938 call deinit[21354] i_x[7336930])
    (1672910 'move' ret[1672380] ret[1672437])
    label _end_:[1672918]
    (5550212 '=' _retArg[5550210] ret[1672380])
    (5550214 return _void[46])
  }
  function :[1691857](const in arg x[1691859]:range(int(64),low,one)[1576928], ref arg _retArg[5550417]:string[244]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1691863]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1691920]:string[244] "dead at end of block" "insert auto destroy"
    (1692549 call init[21321] ret[1691920])
    const-val coerce_tmp[7807290]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7807292 'move' coerce_tmp[7807290](7807294 '.v' x[1691859] _low[1576890]))
    const-val call_tmp[1691952]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5546407]:string[244] "temp"
    (1691957 call :[1496816] coerce_tmp[7807290] ret_tmp[5546407])
    (5546410 'move' call_tmp[1691952] ret_tmp[5546407])
    (1691961 call +=[28600] ret[1691920] call_tmp[1691952])
    ref i_x[7337038]:string[244] "temp"
    (7337042 'move' i_x[7337038](7337040 'set reference' call_tmp[1691952]))
    (7337046 call deinit[21354] i_x[7337038])
    (1691968 call +=[28600] ret[1691920] "..")
    (1692393 'move' ret[1691863] ret[1691920])
    label _end_:[1692401]
    (5550419 '=' _retArg[5550417] ret[1691863])
    (5550421 return _void[46])
  }
  function :[1713457](const in arg x[1713459]:range(byteIndex,low,one)[1698271], ref arg _retArg[5550648]:string[244]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1713463]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1713520]:string[244] "dead at end of block" "insert auto destroy"
    (1714051 call init[21321] ret[1713520])
    const-val call_tmp[1713544]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7807621]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7807623 'move' coerce_tmp[7807621](7807625 '.v' x[1713459] _low[1698233]))
    const-val ret[7807628]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7807630]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7807633 call init[18499] cpi[7807630])
    (7807635 '.=' cpi[7807630] _bindex[18495] coerce_tmp[7807621])
    (7807639 'move' ret[7807628] cpi[7807630])
    (5550528 'move' call_tmp[1713544] ret[7807628])
    const-val call_tmp[1713552]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538182]:string[244] "temp"
    (1713557 call :[18585] call_tmp[1713544] ret_tmp[5538182])
    (5538185 'move' call_tmp[1713552] ret_tmp[5538182])
    (1713561 call +=[28600] ret[1713520] call_tmp[1713552])
    ref i_x[7337290]:string[244] "temp"
    (7337294 'move' i_x[7337290](7337292 'set reference' call_tmp[1713552]))
    (7337298 call deinit[21354] i_x[7337290])
    (1713568 call +=[28600] ret[1713520] "..")
    (1713993 'move' ret[1713463] ret[1713520])
    label _end_:[1714001]
    (5550650 '=' _retArg[5550648] ret[1713463])
    (5550652 return _void[46])
  }
  function :[1743926](const in arg x[1743928]:range(byteIndex,high,one)[1726799], ref arg _retArg[5551422]:string[244]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "operator" "resolved"
  {
    const-val ret[1743932]:string[244] "dead after last mention" "RVV" "temp"
    val ret[1743989]:string[244] "dead at end of block" "insert auto destroy"
    (1744532 call init[21321] ret[1743989])
    (1744037 call +=[28600] ret[1743989] "..")
    const-val call_tmp[1744189]:byteIndex[18611] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[7810499]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7810501 'move' coerce_tmp[7810499](7810503 '.v' x[1743928] _high[1726766]))
    const-val ret[7810506]:byteIndex[18611] "dead after last mention" "RVV" "temp"
    val cpi[7810508]:byteIndex[18611] "dead at end of block" "insert auto destroy"
    (7810511 call init[18499] cpi[7810508])
    (7810513 '.=' cpi[7810508] _bindex[18495] coerce_tmp[7810499])
    (7810517 'move' ret[7810506] cpi[7810508])
    (5551308 'move' call_tmp[1744189] ret[7810506])
    const-val call_tmp[1744197]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[5538194]:string[244] "temp"
    (1744202 call :[18585] call_tmp[1744189] ret_tmp[5538194])
    (5538197 'move' call_tmp[1744197] ret_tmp[5538194])
    (1744206 call +=[28600] ret[1743989] call_tmp[1744197])
    ref i_x[7337530]:string[244] "temp"
    (7337534 'move' i_x[7337530](7337532 'set reference' call_tmp[1744197]))
    (7337538 call deinit[21354] i_x[7337530])
    (1744462 'move' ret[1743932] ret[1743989])
    label _end_:[1744470]
    (5551424 '=' _retArg[5551422] ret[1743932])
    (5551426 return _void[46])
  }
  function chpl__mod[3462785](const in arg dividend[3462787]:int(64)[10], const in arg modulus[3462789]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[3462822]:int(64)[10] "dead after last mention" "RVV" "temp"
    val m[3463771]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3463773 'move' m[3463771] modulus[3462789])
    const-val tmp[7320748]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320750 'move' tmp[7320748](7320752 '<' modulus[3462789] 0))
    val tmp[3463860]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7320748]
    {
      const-val call_tmp[7496362]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7496364 'move' call_tmp[7496362](7496366 '!=' modulus[3462789] -9223372036854775808))
      (3463900 'move' tmp[3463860] call_tmp[7496362])
    }
    {
      (3463906 'move' tmp[3463860] 0)
    }
    if tmp[3463860]
    {
      const-val call_tmp[7627874]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7627876 'move' call_tmp[7627874](7627878 'u-' modulus[3462789]))
      (7366955 '=' m[3463771] call_tmp[7627874])
    }
    const-val call_tmp[7509400]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7509402 'move' call_tmp[7509400](7509404 '==' m[3463771] 0))
    if call_tmp[7509400]
    {
      (7509410 call halt[88131] "Attempt to compute a modulus by zero")
    }
    const-val call_tmp[7509413]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7509415 'move' call_tmp[7509413](7509417 '%' dividend[3462787] m[3463771]))
    val tmp[3463957]:int(64)[10] "dead at end of block" "insert auto destroy"
    (3463959 'move' tmp[3463957] call_tmp[7509413])
    const-val tmp[7320763]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320765 'move' tmp[7320763](7320767 '<' call_tmp[7509413] 0))
    if tmp[7320763]
    {
      ref i_lhs[7512769]:int(64)[10] "temp"
      (7512773 'move' i_lhs[7512769](7512771 'set reference' tmp[3463957]))
      (7512776 '+=' i_lhs[7512769] m[3463771])
    }
    (3464020 'move' ret[3462822] tmp[3463957])
    label _end_chpl__mod[3464028]
    (3464030 return ret[3462822])
  }
  function chpl__diffMod[3468213](const in arg minuend[3468215]:int(64)[10], const in arg subtrahend[3468217]:int(64)[10], const in arg modulus[3468219]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val tmp[7627892]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[7627894]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7627896 'move' tmp[7627894](7627898 '<' modulus[3468219] 0))
    if tmp[7627894]
    {
      const-val call_tmp[7627903]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7627905 'move' call_tmp[7627903](7627907 'u-' modulus[3468219]))
      (7627909 'move' tmp[7627892] call_tmp[7627903])
    }
    {
      (7627913 'move' tmp[7627892] modulus[3468219])
    }
    const-val call_tmp[3468282]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3468284 'move' call_tmp[3468282](3468287 call chpl__mod[3462785] minuend[3468215] tmp[7627892]))
    const-val call_tmp[3468296]:int(64)[10] "dead at end of block" "maybe param" "temp"
    (3468298 'move' call_tmp[3468296](3468301 call chpl__mod[3462785] subtrahend[3468217] tmp[7627892]))
    val tmp[3468311]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[7320788]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7320790 'move' tmp[7320788](7320792 '<' call_tmp[3468282] call_tmp[3468296]))
    if tmp[7320788]
    {
      const-val call_tmp[7378110]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378112 'move' call_tmp[7378110](7378114 '-' call_tmp[3468296] call_tmp[3468282]))
      const-val call_tmp[7378120]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378122 'move' call_tmp[7378120](7378124 '-' tmp[7627892] call_tmp[7378110]))
      (3468360 'move' tmp[3468311] call_tmp[7378120])
    }
    {
      const-val call_tmp[7378130]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7378132 'move' call_tmp[7378130](7378134 '-' call_tmp[3468282] call_tmp[3468296]))
      (3468374 'move' tmp[3468311] call_tmp[7378130])
    }
    label _end_chpl__diffMod[3468398]
    (3468400 return tmp[3468311])
  }
  function chpl__add[1718211](const in arg a[1718213]:int(64)[10], const in arg b[1718218]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1718222]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[7315188]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7315190 'move' call_tmp[7315188](7315192 '>' a[1718213] 0))
    val tmp[1718288]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[7315188]
    {
      const-val call_tmp[7315203]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315205 'move' call_tmp[7315203](7315207 '>' b[1718218] 0))
      (1718321 'move' tmp[1718288] call_tmp[7315203])
    }
    {
      (1718327 'move' tmp[1718288] 0)
    }
    val tmp[1718349]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1718288]
    {
      const-val call_tmp[7641774]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7641776 'move' call_tmp[7641774](7641778 '-' 9223372036854775807 a[1718213]))
      const-val call_tmp[7315213]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (7315215 'move' call_tmp[7315213](7315217 '>' b[1718218] call_tmp[7641774]))
      (1718403 'move' tmp[1718349] call_tmp[7315213])
    }
    {
      (1718409 'move' tmp[1718349] 0)
    }
    if tmp[1718349]
    {
      (1718431 'move' ret[1718222] 9223372036854775807)
      gotoReturn _end_chpl__add[1719155] _end_chpl__add[1719155]
    }
    const-val tmp[7319453]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7319455 'move' tmp[7319453](7319457 '<' a[1718213] 0))
    val tmp[1718461]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[7319453]
    {
      const-val tmp[7319468]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7319470 'move' tmp[7319468](7319472 '<' b[1718218] 0))
      (1718494 'move' tmp[1718461] tmp[7319468])
    }
    {
      (1718500 'move' tmp[1718461] 0)
    }
    val tmp[1718522]:bool[19] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1718461]
    {
      const-val call_tmp[7641744]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7641746 'move' call_tmp[7641744](7641748 '-' -9223372036854775808 a[1718213]))
      const-val tmp[7319478]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7319480 'move' tmp[7319478](7319482 '<' b[1718218] call_tmp[7641744]))
      (1718576 'move' tmp[1718522] tmp[7319478])
    }
    {
      (1718582 'move' tmp[1718522] 0)
    }
    if tmp[1718522]
    {
      (1718604 'move' ret[1718222] -9223372036854775808)
      gotoReturn _end_chpl__add[1719155] _end_chpl__add[1719155]
    }
    const-val call_tmp[7373305]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7373307 'move' call_tmp[7373305](7373309 '+' a[1718213] b[1718218]))
    (1719151 'move' ret[1718222] call_tmp[7373305])
    label _end_chpl__add[1719155]
    (1719157 return ret[1718222])
  }
  function chpl__addRangeStrides[1722025](const in arg start[1722027]:int(64)[10], const in arg stride[1722029]:int(64)[10], const in arg count[1722031]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1722457]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1722459 'move' call_tmp[1722457](1722462 call mul[1722501] stride[1722029] count[1722031]))
    const-val call_tmp[1722465]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1722467 'move' call_tmp[1722465](1722470 call add[1722856] start[1722027] call_tmp[1722457]))
    (1722498 return call_tmp[1722465])
  }
  function adjustedSlice[1633050](const  ref arg slice[5491308]:range(int(64),both,one)[1610039], ref arg _retArg[5549550]:range(int(64),both,one)[1610039]) : void[4] "fn returns via _retArg" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[1633053]:range(int(64),both,one)[1610039] "dead after last mention" "RVV" "temp"
    (1633102 'move' ret[1633053] slice[5491308])
    (5549552 '=' _retArg[5549550] ret[1633053])
    (5549557 return _void[46])
  }
  function myMin[1634168](const in arg x[1634170]:int(64)[10], const in arg y[1634172]:int(64)[10]) : int(64)[10] "resolved" "fn synchronization free"
  {
    val tmp[7322534]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[7322536]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7322538 'move' tmp[7322536](7322540 '<' x[1634170] y[1634172]))
    if tmp[7322536]
    {
      (7322545 'move' tmp[7322534] x[1634170])
    }
    {
      (7322549 'move' tmp[7322534] y[1634172])
    }
    (1634189 return tmp[7322534])
  }
  function myMax[1634344](const in arg x[1634346]:int(64)[10], const in arg y[1634348]:int(64)[10]) : int(64)[10] "resolved" "fn synchronization free"
  {
    val tmp[7318532]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[7318534]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7318536 'move' call_tmp[7318534](7318538 '>' x[1634346] y[1634348]))
    if call_tmp[7318534]
    {
      (7318543 'move' tmp[7318532] x[1634346])
    }
    {
      (7318547 'move' tmp[7318532] y[1634348])
    }
    (1634365 return tmp[7318532])
  }
  function myMin[1693695](const in arg x[1693697]:int(64)[10], const in arg y[1693699]:int(64)[10]) : int(64)[10] "resolved" "fn synchronization free"
  {
    val tmp[7322556]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[7322558]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7322560 'move' tmp[7322558](7322562 '<' x[1693697] y[1693699]))
    if tmp[7322558]
    {
      (7322567 'move' tmp[7322556] x[1693697])
    }
    {
      (7322571 'move' tmp[7322556] y[1693699])
    }
    (1693716 return tmp[7322556])
  }
  function myMax[1693871](const in arg x[1693873]:int(64)[10], const in arg y[1693875]:int(64)[10]) : int(64)[10] "resolved" "fn synchronization free"
  {
    val tmp[7318554]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[7318556]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7318558 'move' call_tmp[7318556](7318560 '>' x[1693873] y[1693875]))
    if call_tmp[7318556]
    {
      (7318565 'move' tmp[7318554] x[1693873])
    }
    {
      (7318569 'move' tmp[7318554] y[1693875])
    }
    (1693892 return tmp[7318554])
  }
  function absSameType[1716263](const in arg r[1716265]:range(int(64),low,one)[1576928]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    label _end_absSameType[1716350]
    (1716352 return 1)
  }
  function mul[1722501](const in arg a[1722503]:int(64)[10], const in arg b[1722505]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7501792]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7501794 'move' call_tmp[7501792](7501796 '*' a[1722503] b[1722505]))
    (1722598 return call_tmp[7501792])
  }
  function add[1722856](const in arg a[1722858]:int(64)[10], const in arg b[1722860]:int(64)[10]) : int(64)[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[7374195]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7374197 'move' call_tmp[7374195](7374199 '+' a[1722858] b[1722860]))
    (1722953 return call_tmp[7374195])
  }
  function myMin[1745678](const in arg x[1745680]:int(64)[10], const in arg y[1745682]:int(64)[10]) : int(64)[10] "resolved" "fn synchronization free"
  {
    val tmp[7322578]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[7322580]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7322582 'move' tmp[7322580](7322584 '<' x[1745680] y[1745682]))
    if tmp[7322580]
    {
      (7322589 'move' tmp[7322578] x[1745680])
    }
    {
      (7322593 'move' tmp[7322578] y[1745682])
    }
    (1745699 return tmp[7322578])
  }
  function myMax[1745854](const in arg x[1745856]:int(64)[10], const in arg y[1745858]:int(64)[10]) : int(64)[10] "resolved" "fn synchronization free"
  {
    val tmp[7318576]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[7318578]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7318580 'move' call_tmp[7318578](7318582 '>' x[1745856] y[1745858]))
    if call_tmp[7318578]
    {
      (7318587 'move' tmp[7318576] x[1745856])
    }
    {
      (7318591 'move' tmp[7318576] y[1745858])
    }
    (1745875 return tmp[7318576])
  }
  function absSameType[1911871](const in arg r[1911873]:range(int(64),low,one)[1576928]) : int(64)[10] "instantiated generic" "invisible fn" "resolved"
  {
    label _end_absSameType[1911958]
    (1911960 return 1)
  }
}
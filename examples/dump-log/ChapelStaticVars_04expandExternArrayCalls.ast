AST dump for ChapelStaticVars after pass expandExternArrayCalls.
Module use list: 

{
  (314668 'use' OwnedObject)
  (314671 'use' Atomics)
  (314674 'use' ChapelLocale)
  type sharingKind[314681] def computeOrRetrieve[314677]:sharingKind[314681] def computePerLocale[314679]:sharingKind[314681]
  type _staticWrapperContainer[314690](?) unknown value[314686]
  type _staticWrapper[314874](?) unknown valueType[314694] "type variable" unknown container[314697](314699 call _owned(314703 'to nilable class from type'(314701 call _staticWrapperContainer valueType))) unknown inited[314707](314709 call chpl__atomicType int[10]) function _staticWrapper[314874](?).init[314713](arg _mt[314719]:_MT[201], arg this[314715]:_staticWrapper[314874](?), arg valueType[314717]:_any[141](?)) : _unknown[42] "method" "primary method"
  {
    (314722 call =(314727 call . this c"valueType") valueType)
    (314731 call =(314736 call . this c"container") nil[32])
    (314740 call =(314745 call . this c"inited") 0)
  } function _staticWrapper[314874](?).setValue[314751](arg _mt[314759]:_MT[201], ref arg this[314753]:_staticWrapper[314874](?), in arg v[314756] :
  valueType) : _unknown[42] "inline" "method" "primary method"
  {
    (314762 call =(314765 call . this c"container")(314768 'new'(314770 call _staticWrapperContainer v)))
    (314779 call(314776 call .(314773 call . this c"inited") c"write") 2)
  } function _staticWrapper[314874](?).getValue[314783](arg _mt[314787]:_MT[201], ref arg this[314785]:_staticWrapper[314874](?)) ref : _unknown[42] "inline" "method" "primary method"
  {
    (314798 call(314795 call .(314792 call . this c"inited") c"waitFor") 2)
    (314800 return(314807 call .(314801 call postfix!(314804 call . this c"container")) c"value"))
  }
  { scopeless type
    valueType
  } function _staticWrapper[314874](?).callerShouldComputeValue[314813](arg _mt[314817]:_MT[201], ref arg this[314815]:_staticWrapper[314874](?)) : _unknown[42] "inline" "method" "primary method"
  {
    if(314834 call _cond_test(314823 call ==(314832 call(314829 call .(314826 call . this c"inited") c"read")) 2))
    {
      { scopeless
        (314820 return 0)
      }
    }
    { scopeless
      unknown expected[314840] 0
      (314843 'end of statement')
    }
    (314844 return(314852 call(314849 call .(314846 call . this c"inited") c"compareExchange") expected 1))
  } function _staticWrapper[314874](?).reset[314857](arg _mt[314861]:_MT[201], ref arg this[314859]:_staticWrapper[314874](?)) : _unknown[42] "method" "primary method"
  {
    (314864 call =(314867 call . this c"container") nil[32])
  }
  function chpl__functionStaticVariableWrapperType[314876](arg valueType[314878]:_any[141](?)) type : _unknown[42]
  {
    (314881 return(314883 call _staticWrapper valueType))
  }
  function chpl__executeStaticWrapperCleanupEverywhere[314887](arg fn[314894] :
  function [314889]() : _unknown[42] "anonymous fn" "no fn body"
  {
  }
  { scopeless type
    void[4]
  }) : _unknown[42]
  {
    {
      unknown _indexOfInterest[314916] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[314917] "expr temp" "temp"
      (314926 'move' _iterator[314917](314924 call _getIterator Locales))
      Defer
      {
        {
          (314941 call _freeIterator _iterator[314917])
        }
      }
      { scopeless type
        (314931 'move' _indexOfInterest[314916](314928 call iteratorIndex _iterator[314917]))
      }
      ForLoop[314918]
      {
        unknown loc[314898] "index var" "insert auto destroy"
        (314936 'move' loc[314898] _indexOfInterest[314916])
        { scopeless
          {
            const tmp[314908] "const" "temp"
            (314909 'move' tmp[314908](314906 'deref'(314905 '_wide_get_locale' loc)))
            { scopeless
              (314903 call fn)
            }
            (314912 'elided on block' 0 tmp[314908])
          }
        }
        label _continueLabel[314921]
        _indexOfInterest[314916]
        _iterator[314917]
      }
      label _breakLabel[314922]
    }
  }
}
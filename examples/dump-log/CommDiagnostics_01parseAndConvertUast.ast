AST dump for CommDiagnostics after pass parseAndConvertUast.
Module use list: 

{
  (387010 'use' ChapelStandard)
  { scopeless
    unknown commDiagsStacktrace[77911] "config" "param" 0
    (77914 'end of statement')
  }
  { scopeless
    unknown commDiagsPrintUnstable[77916] "config" "param" 0
    (77919 'end of statement')
  }
  type chpl_commDiagnostics[78233] unknown get[77922](77924 call uint[86] 64) unknown get_nb[77929](77931 call uint[86] 64) unknown put[77936](77938 call uint[86] 64) unknown put_nb[77943](77945 call uint[86] 64) unknown test_nb[77950](77952 call uint[86] 64) unknown wait_nb[77957](77959 call uint[86] 64) unknown try_nb[77964](77966 call uint[86] 64) unknown amo[77971](77973 call uint[86] 64) unknown execute_on[77978](77980 call uint[86] 64) unknown execute_on_fast[77985](77987 call uint[86] 64) unknown execute_on_nb[77992](77994 call uint[86] 64) unknown cache_get_hits[77999](78001 call uint[86] 64) unknown cache_get_misses[78006](78008 call uint[86] 64) unknown cache_put_hits[78013](78015 call uint[86] 64) unknown cache_put_misses[78020](78022 call uint[86] 64) unknown cache_num_prefetches[78027](78029 call uint[86] 64) unknown cache_num_page_readaheads[78034](78036 call uint[86] 64) unknown cache_prefetch_unused[78041](78043 call uint[86] 64) unknown cache_prefetch_waited[78048](78050 call uint[86] 64) unknown cache_readahead_unused[78055](78057 call uint[86] 64) unknown cache_readahead_waited[78062](78064 call uint[86] 64) function chpl_commDiagnostics[78233].serialize[78068](arg _mt[78076]:_MT[201], arg this[78070]:chpl_commDiagnostics[78233], arg writer[78072]:_any[141](?), ref arg serializer[78074]:_any[141](?)) : _unknown[42] throws "method" "primary method"
  {
    (78080 'use' Reflection)
    { scopeless
      unknown first[78083] 1
      (78086 'end of statement')
    }
    (78091 call(78088 call . writer c"write") "(")
    {
      unknown i[78093] "index var" 0
      unknown tmp[78172] "maybe param" "temp"
      (78184 'move' tmp[78172](78182 call chpl_compute_low_param_loop_bound 0(78099 call chpl__nudgeHighBound(78097 call getNumFields chpl_commDiagnostics))))
      unknown tmp[78173] "maybe param" "temp"
      (78195 'move' tmp[78173](78193 call chpl_compute_high_param_loop_bound 0(78189 call chpl__nudgeHighBound(78191 call getNumFields chpl_commDiagnostics))))
      unknown tmp[78174] "maybe param" "temp"
      (78198 'move' tmp[78174] 1)
      ParamForLoop[78200]
      { i[78093] tmp[78172] tmp[78173] tmp[78174]
        {
          { scopeless
            unknown name[78105] "param"(78107 call getFieldName chpl_commDiagnostics i)
            (78111 'end of statement')
          }
          { scopeless
            const val[78113] "const"(78115 call getField this i)
            (78119 'end of statement')
          }
          if(78168 call _cond_test(78164 call != val 0))
          {
            if(78160 call _cond_test(78151 call || commDiagsPrintUnstable(78154 call != name "amo")))
            {
              if(78135 call _cond_test first)
              {
                { scopeless
                  (78122 call = first 0)
                }
              }
              {
                { scopeless
                  (78131 call(78128 call . writer c"write") ", ")
                }
              }
              (78145 call(78142 call . writer c"write") name " = " val)
            }
          }
        }
      }
      label _unused_continueLabel[78176]
      label _breakLabel[78175]
    }
    if(78219 call _cond_test first)
    {
      { scopeless
        (78213 call(78210 call . writer c"write") "<no communication>")
      }
    }
    (78228 call(78225 call . writer c"write") ")")
  }
  unknown commDiagnostics[78236] "type variable" chpl_commDiagnostics writeSerializable commDiagnostics
  {
  }
  function chpl_comm_startVerbose[78246](arg stacktrace[78249] :
  bool, arg print_unstable[78253] :
  bool) : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopVerbose[78258]() : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startVerboseHere[78262](arg stacktrace[78265] :
  bool, arg print_unstable[78269] :
  bool) : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopVerboseHere[78274]() : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startDiagnostics[78278](arg print_unstable[78281] :
  bool) : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopDiagnostics[78286]() : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startDiagnosticsHere[78290](arg print_unstable[78293] :
  bool) : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopDiagnosticsHere[78298]() : void[4] "extern" "insert line file info" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_resetDiagnosticsHere[78302]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_getDiagnosticsHere[78306](ref arg cd[78309] :
  commDiagnostics) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function startVerboseComm[78314]() : _unknown[42]
  {
    (78318 call chpl_comm_startVerbose commDiagsStacktrace commDiagsPrintUnstable)
  }
  function stopVerboseComm[78323]() : _unknown[42]
  {
    (78327 call chpl_comm_stopVerbose)
  }
  function startVerboseCommHere[78330]() : _unknown[42]
  {
    (78334 call chpl_comm_startVerboseHere commDiagsStacktrace commDiagsPrintUnstable)
  }
  function stopVerboseCommHere[78339]() : _unknown[42]
  {
    (78343 call chpl_comm_stopVerboseHere)
  }
  function startCommDiagnostics[78346]() : _unknown[42]
  {
    (78350 call chpl_comm_startDiagnostics commDiagsPrintUnstable)
  }
  function stopCommDiagnostics[78354]() : _unknown[42]
  {
    (78358 call chpl_comm_stopDiagnostics)
  }
  function startCommDiagnosticsHere[78361]() : _unknown[42]
  {
    (78365 call chpl_comm_startDiagnosticsHere commDiagsPrintUnstable)
  }
  function stopCommDiagnosticsHere[78369]() : _unknown[42]
  {
    (78373 call chpl_comm_stopDiagnosticsHere)
  }
  function resetCommDiagnostics[78376]() : _unknown[42]
  {
    {
      unknown _indexOfInterest[78397] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[78398] "expr temp" "temp"
      (78407 'move' _iterator[78398](78405 call _getIterator Locales))
      Defer
      {
        {
          (78422 call _freeIterator _iterator[78398])
        }
      }
      { scopeless type
        (78412 'move' _indexOfInterest[78397](78409 call iteratorIndex _iterator[78398]))
      }
      ForLoop[78399]
      {
        unknown loc[78379] "index var" "insert auto destroy"
        (78417 'move' loc[78379] _indexOfInterest[78397])
        { scopeless
          {
            const tmp[78389] "const" "temp"
            (78390 'move' tmp[78389](78387 'deref'(78386 '_wide_get_locale' loc)))
            { scopeless
              (78384 call resetCommDiagnosticsHere)
            }
            (78393 'elided on block' 0 tmp[78389])
          }
        }
        label _continueLabel[78402]
        _indexOfInterest[78397]
        _iterator[78398]
      }
      label _breakLabel[78403]
    }
  }
  function resetCommDiagnosticsHere[78431]() : _unknown[42] "inline"
  {
    (78435 call chpl_comm_resetDiagnosticsHere)
  }
  function getCommDiagnostics[78438]() : _unknown[42]
  {
    { scopeless
      unknown D[78442](78447 call chpl__buildArrayRuntimeType(78444 call chpl__ensureDomainExpr LocaleSpace) commDiagnostics)
      (78450 'end of statement')
    }
    {
      unknown _indexOfInterest[78477] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[78478] "expr temp" "temp"
      (78487 'move' _iterator[78478](78485 call _getIterator Locales))
      Defer
      {
        {
          (78502 call _freeIterator _iterator[78478])
        }
      }
      { scopeless type
        (78492 'move' _indexOfInterest[78477](78489 call iteratorIndex _iterator[78478]))
      }
      ForLoop[78479]
      {
        unknown loc[78451] "index var" "insert auto destroy"
        (78497 'move' loc[78451] _indexOfInterest[78477])
        { scopeless
          {
            const tmp[78469] "const" "temp"
            (78470 'move' tmp[78469](78467 'deref'(78466 '_wide_get_locale' loc)))
            {
              (78456 call =(78459 call D(78461 call . loc c"id"))(78465 call getCommDiagnosticsHere))
            }
            (78473 'elided on block' 0 tmp[78469])
          }
        }
        label _continueLabel[78482]
        _indexOfInterest[78477]
        _iterator[78478]
      }
      label _breakLabel[78483]
    }
    (78509 return D)
  }
  function getCommDiagnosticsHere[78513]() : _unknown[42]
  {
    { scopeless
      unknown cd[78517] commDiagnostics
      (78520 'end of statement')
    }
    (78522 call chpl_comm_getDiagnosticsHere cd)
    (78524 return cd)
  }
  function printCommDiagnosticsTable[78528](arg printEmptyColumns[78531] =
  0) : _unknown[42]
  {
    { scopeless
      (78537 'use' Reflection)
      (78539 'use' Math)
    }
    { scopeless
      unknown unstable[78541] "param" "unstable"
      (78546 'end of statement')
    }
    { scopeless
      unknown CommDiags[78548](78550 call getCommDiagnostics)
      (78552 'end of statement')
    }
    { scopeless
      unknown nFields[78554] "param"(78556 call getNumFields chpl_commDiagnostics)
      (78559 'end of statement')
    }
    { scopeless
      unknown fieldWidth[78561](78571 call chpl__buildArrayRuntimeType(78568 call chpl__ensureDomainExpr(78566 call chpl_build_bounded_range 0(78564 call chpl__nudgeHighBound nFields))) int[10])
      (78574 'end of statement')
    }
    (78576 call writef "| %6s " "locale")
    {
      unknown fieldID[78583] "index var" 0
      unknown tmp[78725] "maybe param" "temp"
      (78737 'move' tmp[78725](78735 call chpl_compute_low_param_loop_bound 0(78587 call chpl__nudgeHighBound nFields)))
      unknown tmp[78726] "maybe param" "temp"
      (78746 'move' tmp[78726](78744 call chpl_compute_high_param_loop_bound 0(78742 call chpl__nudgeHighBound nFields)))
      unknown tmp[78727] "maybe param" "temp"
      (78749 'move' tmp[78727] 1)
      ParamForLoop[78751]
      { fieldID[78583] tmp[78725] tmp[78726] tmp[78727]
        {
          { scopeless
            unknown name[78593] "param"(78595 call getFieldName chpl_commDiagnostics fieldID)
            (78599 'end of statement')
          }
          { scopeless
            unknown maxval[78601] 0
            (78604 'end of statement')
          }
          {
            unknown _indexOfInterest[78626] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[78627] "expr temp" "temp"
            (78636 'move' _iterator[78627](78634 call _getIterator LocaleSpace))
            Defer
            {
              {
                (78651 call _freeIterator _iterator[78627])
              }
            }
            { scopeless type
              (78641 'move' _indexOfInterest[78626](78638 call iteratorIndex _iterator[78627]))
            }
            ForLoop[78628]
            {
              unknown locID[78605] "index var" "insert auto destroy"
              (78646 'move' locID[78605] _indexOfInterest[78626])
              { scopeless
                (78608 call = maxval(78612 call max maxval(78623 call(78620 call .(78615 call getField(78617 call CommDiags locID) fieldID) c"safeCast") int[10])))
              }
              label _continueLabel[78631]
              _indexOfInterest[78626]
              _iterator[78627]
            }
            label _breakLabel[78632]
          }
          if(78721 call _cond_test(78714 call || printEmptyColumns(78717 call != maxval 0)))
          {
            { scopeless
              const width[78660] "const"(78694 IfExpr (78661 call &&(78663 call == commDiagsPrintUnstable 0)(78667 call == name "amo")) then
              { scopeless
                (78671 call -(78674 call . unstable c"size"))
              } else
              { scopeless
                (78678 call max(78680 call . name c"size")(78683 call :(78686 call ceil(78688 call log10(78689 call + maxval 1))) int[10]))
              } )
              (78698 'end of statement')
            }
            (78699 call =(78702 call fieldWidth fieldID) width)
            (78706 call writef "| %*s "(78711 call abs width) name)
          }
        }
      }
      label _unused_continueLabel[78729]
      label _breakLabel[78728]
    }
    (78761 call writeln "|")
    (78766 call writef "| -----: ")
    {
      unknown fieldID[78770] "index var" 0
      unknown tmp[78809] "maybe param" "temp"
      (78821 'move' tmp[78809](78819 call chpl_compute_low_param_loop_bound 0(78774 call chpl__nudgeHighBound nFields)))
      unknown tmp[78810] "maybe param" "temp"
      (78830 'move' tmp[78810](78828 call chpl_compute_high_param_loop_bound 0(78826 call chpl__nudgeHighBound nFields)))
      unknown tmp[78811] "maybe param" "temp"
      (78833 'move' tmp[78811] 1)
      ParamForLoop[78835]
      { fieldID[78770] tmp[78809] tmp[78810] tmp[78811]
        {
          { scopeless
            const width[78780] "const"(78782 call abs(78784 call fieldWidth fieldID))
            (78787 'end of statement')
          }
          if(78805 call _cond_test(78801 call != width 0))
          {
            (78790 call writef "| %.*s: "(78794 call - width 1) "------------------")
          }
        }
      }
      label _unused_continueLabel[78813]
      label _breakLabel[78812]
    }
    (78845 call writeln "|")
    {
      unknown _indexOfInterest[78950] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[78951] "expr temp" "temp"
      (78960 'move' _iterator[78951](78958 call _getIterator LocaleSpace))
      Defer
      {
        {
          (78975 call _freeIterator _iterator[78951])
        }
      }
      { scopeless type
        (78965 'move' _indexOfInterest[78950](78962 call iteratorIndex _iterator[78951]))
      }
      ForLoop[78952]
      {
        unknown locID[78847] "index var" "insert auto destroy"
        (78970 'move' locID[78847] _indexOfInterest[78950])
        {
          (78852 call writef "| %6s "(78854 call : locID string[244]))
          {
            unknown fieldID[78858] "index var" 0
            unknown tmp[78912] "maybe param" "temp"
            (78924 'move' tmp[78912](78922 call chpl_compute_low_param_loop_bound 0(78862 call chpl__nudgeHighBound nFields)))
            unknown tmp[78913] "maybe param" "temp"
            (78933 'move' tmp[78913](78931 call chpl_compute_high_param_loop_bound 0(78929 call chpl__nudgeHighBound nFields)))
            unknown tmp[78914] "maybe param" "temp"
            (78936 'move' tmp[78914] 1)
            ParamForLoop[78938]
            { fieldID[78858] tmp[78912] tmp[78913] tmp[78914]
              {
                { scopeless
                  unknown width[78868](78870 call fieldWidth fieldID)
                  (78873 'end of statement')
                }
                { scopeless
                  const count[78875] "const"(78890 IfExpr (78876 call < width 0) then
                  { scopeless
                    unstable
                  } else
                  { scopeless
                    (78881 call :(78884 call getField(78886 call CommDiags locID) fieldID) string[244])
                  } )
                  (78894 'end of statement')
                }
                if(78907 call _cond_test(78903 call != width 0))
                {
                  { scopeless
                    (78896 call writef "| %*s "(78899 call abs width) count)
                  }
                }
              }
            }
            label _unused_continueLabel[78916]
            label _breakLabel[78915]
          }
          (78948 call writeln "|")
        }
        label _continueLabel[78955]
        _indexOfInterest[78950]
        _iterator[78951]
      }
      label _breakLabel[78956]
    }
  }
  { scopeless
    unknown printInitVerboseComm[78985] "config" "param" 0
    (78988 'end of statement')
  }
  { scopeless
    unknown printInitCommCounts[78990] "config" "param" 0
    (78993 'end of statement')
  }
}
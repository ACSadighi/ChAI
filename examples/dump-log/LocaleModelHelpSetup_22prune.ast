AST dump for LocaleModelHelpSetup after pass prune.
Module use list: ChapelLocale DefaultRectangular ChapelNumLocales POSIX CTypes ChplConfig 

{
  type _class_localscoforall_fn[7260132] val _runtime_hdr[7260133]:chpl_task_bundle_t[306459] val _0__coforallCount[7260135]:_EndCount(atomic int(64),int(64))[1525461] val _1_locIdx[7260137]:int(64)[10] val _2_dst[7260139]:RootLocale[309500]
  type _class_localscoforall_fn[7260017] val _runtime_hdr[7260018]:chpl_task_bundle_t[306459] val _0__coforallCount[7260020]:_EndCount(atomic int(64),int(64))[1525461] val _1_locIdx[7260022]:int(64)[10] val _2_dst[7260024]:RootLocale[309500] ref _3_root_accum[7260026]:chpl_root_locale_accum[305326]
  function chpl__init_LocaleModelHelpSetup[468555]() : void[4] "insert line file info" "module init" "resolved"
  {
    (630600 return _void[46])
  }
  function chpl_nodeID[305038]() : int(32)[66] "extern" "local args" "no fn body" "no parens" "resolved" "fn synchronization free"
  {
  }
  function _ref(chpl_root_locale_accum)[1478659].init[305083](ref arg this[305085]:_ref(chpl_root_locale_accum)[1478659]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val nPUsPhysAcc[533603]:atomic int(64)[1523042] "dead after last mention" "temp"
    val call_tmp[934914]:atomic int(64)[1523042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1916132 call init[1525492] nPUsPhysAcc[533603])
    (533610 '.=' this[305085] nPUsPhysAcc[305049] nPUsPhysAcc[533603])
    val nPUsPhysAll[533614]:atomic int(64)[1523042] "dead after last mention" "temp"
    val call_tmp[934919]:atomic int(64)[1523042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1916141 call init[1525492] nPUsPhysAll[533614])
    (533621 '.=' this[305085] nPUsPhysAll[305056] nPUsPhysAll[533614])
    val nPUsLogAcc[533625]:atomic int(64)[1523042] "dead after last mention" "temp"
    val call_tmp[934924]:atomic int(64)[1523042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1916150 call init[1525492] nPUsLogAcc[533625])
    (533632 '.=' this[305085] nPUsLogAcc[305063] nPUsLogAcc[533625])
    val nPUsLogAll[533636]:atomic int(64)[1523042] "dead after last mention" "temp"
    val call_tmp[934929]:atomic int(64)[1523042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1916159 call init[1525492] nPUsLogAll[533636])
    (533643 '.=' this[305085] nPUsLogAll[305070] nPUsLogAll[533636])
    val maxTaskPar[533647]:atomic int(64)[1523042] "dead after last mention" "temp"
    val call_tmp[934934]:atomic int(64)[1523042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1916168 call init[1525492] maxTaskPar[533647])
    (533654 '.=' this[305085] maxTaskPar[305077] maxTaskPar[533647])
    (630546 return _void[46])
  }
  function _ref(chpl_root_locale_accum)[1478659].accum[305198](ref arg this[305200]:_ref(chpl_root_locale_accum)[1478659], const  ref arg loc[305203]:locale[234]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[935081]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935084 'move' call_tmp[935081](410264 call nPUsPhysAcc[1292722] this[305200]))
    const-ref call_tmp[935090]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    const _chpl_forward_tgt[1915562]:BaseLocale[136243] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
    (1915568 'move' _chpl_forward_tgt[1915562](1915565 call chpl_forwarding_expr1[135313] loc[305203]))
    val coerce_tmp[1915571]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915576 'move' coerce_tmp[1915571] _chpl_forward_tgt[1915562])
    (935093 'move' call_tmp[935090](305215 call nPUsPhysAcc[1083788] coerce_tmp[1915571]))
    const-val coerce_tmp[1915583]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915587 'move' coerce_tmp[1915583](1915585 'deref' call_tmp[935090]))
    val default_arg_order[1915590]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (305213 call add[1584585] call_tmp[935081] coerce_tmp[1915583])
    ref call_tmp[935097]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935100 'move' call_tmp[935097](410270 call nPUsPhysAll[1292748] this[305200]))
    const-ref call_tmp[935106]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    const _chpl_forward_tgt[1915607]:BaseLocale[136243] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
    (1915613 'move' _chpl_forward_tgt[1915607](1915610 call chpl_forwarding_expr1[135313] loc[305203]))
    val coerce_tmp[1915616]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915621 'move' coerce_tmp[1915616] _chpl_forward_tgt[1915607])
    (935109 'move' call_tmp[935106](305224 call nPUsPhysAll[1083814] coerce_tmp[1915616]))
    const-val coerce_tmp[1915628]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915632 'move' coerce_tmp[1915628](1915630 'deref' call_tmp[935106]))
    val default_arg_order[1915635]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (305222 call add[1584585] call_tmp[935097] coerce_tmp[1915628])
    ref call_tmp[935113]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935116 'move' call_tmp[935113](410276 call nPUsLogAcc[1292774] this[305200]))
    const-ref call_tmp[935122]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    const _chpl_forward_tgt[1915652]:BaseLocale[136243] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
    (1915658 'move' _chpl_forward_tgt[1915652](1915655 call chpl_forwarding_expr1[135313] loc[305203]))
    val coerce_tmp[1915661]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915666 'move' coerce_tmp[1915661] _chpl_forward_tgt[1915652])
    (935125 'move' call_tmp[935122](305233 call nPUsLogAcc[1083736] coerce_tmp[1915661]))
    const-val coerce_tmp[1915673]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915677 'move' coerce_tmp[1915673](1915675 'deref' call_tmp[935122]))
    val default_arg_order[1915680]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (305231 call add[1584585] call_tmp[935113] coerce_tmp[1915673])
    ref call_tmp[935129]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935132 'move' call_tmp[935129](410282 call nPUsLogAll[1292800] this[305200]))
    const-ref call_tmp[935138]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    const _chpl_forward_tgt[1915697]:BaseLocale[136243] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
    (1915703 'move' _chpl_forward_tgt[1915697](1915700 call chpl_forwarding_expr1[135313] loc[305203]))
    val coerce_tmp[1915706]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915711 'move' coerce_tmp[1915706] _chpl_forward_tgt[1915697])
    (935141 'move' call_tmp[935138](305242 call nPUsLogAll[1083762] coerce_tmp[1915706]))
    const-val coerce_tmp[1915718]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915722 'move' coerce_tmp[1915718](1915720 'deref' call_tmp[935138]))
    val default_arg_order[1915725]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (305240 call add[1584585] call_tmp[935129] coerce_tmp[1915718])
    ref call_tmp[935145]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935148 'move' call_tmp[935145](410288 call maxTaskPar[1292826] this[305200]))
    const-val call_tmp[935154]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (935157 'move' call_tmp[935154](305251 call maxTaskPar[135667] loc[305203]))
    val default_arg_order[1915743]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (305249 call add[1584585] call_tmp[935145] call_tmp[935154])
    (630550 return _void[46])
  }
  function _ref(chpl_root_locale_accum)[1478659].setRootLocaleValues[305256](const  ref arg this[305258]:_ref(chpl_root_locale_accum)[1478659], const in arg dst[305262]:RootLocale[309500]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[935161]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1915755]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915761 'move' coerce_tmp[1915755](1915757 'cast' BaseLocale[136243] dst[305262]))
    (935164 'move' call_tmp[935161](305271 call nPUsPhysAcc[1083788] coerce_tmp[1915755]))
    const-ref call_tmp[935168]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935171 'move' call_tmp[935168](410295 call nPUsPhysAcc[1292722] this[305258]))
    const-val call_tmp[935175]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_order[1915950]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (935178 'move' call_tmp[935175](305278 call read[1915765] call_tmp[935168]))
    (305268 call =[52229] call_tmp[935161] call_tmp[935175])
    ref call_tmp[935182]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1916000]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1916006 'move' coerce_tmp[1916000](1916002 'cast' BaseLocale[136243] dst[305262]))
    (935185 'move' call_tmp[935182](305282 call nPUsPhysAll[1083814] coerce_tmp[1916000]))
    const-ref call_tmp[935189]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935192 'move' call_tmp[935189](410301 call nPUsPhysAll[1292748] this[305258]))
    const-val call_tmp[935196]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_order[1916014]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (935199 'move' call_tmp[935196](305289 call read[1915765] call_tmp[935189]))
    (305279 call =[52229] call_tmp[935182] call_tmp[935196])
    ref call_tmp[935203]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1916026]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1916032 'move' coerce_tmp[1916026](1916028 'cast' BaseLocale[136243] dst[305262]))
    (935206 'move' call_tmp[935203](305293 call nPUsLogAcc[1083736] coerce_tmp[1916026]))
    const-ref call_tmp[935210]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935213 'move' call_tmp[935210](410307 call nPUsLogAcc[1292774] this[305258]))
    const-val call_tmp[935217]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_order[1916040]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (935220 'move' call_tmp[935217](305300 call read[1915765] call_tmp[935210]))
    (305290 call =[52229] call_tmp[935203] call_tmp[935217])
    ref call_tmp[935224]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1916052]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1916058 'move' coerce_tmp[1916052](1916054 'cast' BaseLocale[136243] dst[305262]))
    (935227 'move' call_tmp[935224](305304 call nPUsLogAll[1083762] coerce_tmp[1916052]))
    const-ref call_tmp[935231]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935234 'move' call_tmp[935231](410313 call nPUsLogAll[1292800] this[305258]))
    const-val call_tmp[935238]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_order[1916066]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (935241 'move' call_tmp[935238](305311 call read[1915765] call_tmp[935231]))
    (305301 call =[52229] call_tmp[935224] call_tmp[935238])
    ref call_tmp[935245]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1916078]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1916084 'move' coerce_tmp[1916078](1916080 'cast' BaseLocale[136243] dst[305262]))
    (935248 'move' call_tmp[935245](305315 call maxTaskPar[1083840] coerce_tmp[1916078]))
    const-ref call_tmp[935252]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (935255 'move' call_tmp[935252](410319 call maxTaskPar[1292826] this[305258]))
    const-val call_tmp[935259]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val default_arg_order[1916092]:memoryOrder[81226] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
    (935262 'move' call_tmp[935259](305322 call read[1915765] call_tmp[935252]))
    (305312 call =[52229] call_tmp[935245] call_tmp[935259])
    (630552 return _void[46])
  }
  function _ref(chpl_root_locale_accum)[1478659].nPUsPhysAcc[1292722](ref arg this[1292726]:_ref(chpl_root_locale_accum)[1478659]) ref : _ref(atomic int(64))[1523051] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1292736]:_ref(atomic int(64))[1523051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1292743]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (1292746 'move' call_tmp[1292743](1292730 '.' this[1292726] nPUsPhysAcc[305049]))
    (1292741 'move' ret[1292736] call_tmp[1292743])
    (1292738 return ret[1292736])
  }
  function _ref(chpl_root_locale_accum)[1478659].nPUsPhysAll[1292748](ref arg this[1292752]:_ref(chpl_root_locale_accum)[1478659]) ref : _ref(atomic int(64))[1523051] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1292762]:_ref(atomic int(64))[1523051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1292769]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (1292772 'move' call_tmp[1292769](1292756 '.' this[1292752] nPUsPhysAll[305056]))
    (1292767 'move' ret[1292762] call_tmp[1292769])
    (1292764 return ret[1292762])
  }
  function _ref(chpl_root_locale_accum)[1478659].nPUsLogAcc[1292774](ref arg this[1292778]:_ref(chpl_root_locale_accum)[1478659]) ref : _ref(atomic int(64))[1523051] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1292788]:_ref(atomic int(64))[1523051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1292795]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (1292798 'move' call_tmp[1292795](1292782 '.' this[1292778] nPUsLogAcc[305063]))
    (1292793 'move' ret[1292788] call_tmp[1292795])
    (1292790 return ret[1292788])
  }
  function _ref(chpl_root_locale_accum)[1478659].nPUsLogAll[1292800](ref arg this[1292804]:_ref(chpl_root_locale_accum)[1478659]) ref : _ref(atomic int(64))[1523051] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1292814]:_ref(atomic int(64))[1523051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1292821]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (1292824 'move' call_tmp[1292821](1292808 '.' this[1292804] nPUsLogAll[305070]))
    (1292819 'move' ret[1292814] call_tmp[1292821])
    (1292816 return ret[1292814])
  }
  function _ref(chpl_root_locale_accum)[1478659].maxTaskPar[1292826](ref arg this[1292830]:_ref(chpl_root_locale_accum)[1478659]) ref : _ref(atomic int(64))[1523051] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1292840]:_ref(atomic int(64))[1523051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1292847]:_ref(atomic int(64))[1523051] "dead after last mention" "maybe param" "temp"
    (1292850 'move' call_tmp[1292847](1292834 '.' this[1292830] maxTaskPar[305077]))
    (1292845 'move' ret[1292840] call_tmp[1292847])
    (1292842 return ret[1292840])
  }
  function _ref(chpl_root_locale_accum)[1478659].deinit[1292852](const  ref arg this[1292856]:_ref(chpl_root_locale_accum)[1478659]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[5526492]
    ref _field_destructor_tmp_[5526490]:_ref(atomic int(64))[1523051] "temp"
    (5526497 'move' _field_destructor_tmp_[5526490](5526494 '.' this[1292856] maxTaskPar[305077]))
    (5526499 call deinit[3933904] _field_destructor_tmp_[5526490])
    ref _field_destructor_tmp_[5526502]:_ref(atomic int(64))[1523051] "temp"
    (5526507 'move' _field_destructor_tmp_[5526502](5526504 '.' this[1292856] nPUsLogAll[305070]))
    (5526509 call deinit[3933904] _field_destructor_tmp_[5526502])
    ref _field_destructor_tmp_[5526512]:_ref(atomic int(64))[1523051] "temp"
    (5526517 'move' _field_destructor_tmp_[5526512](5526514 '.' this[1292856] nPUsLogAcc[305063]))
    (5526519 call deinit[3933904] _field_destructor_tmp_[5526512])
    ref _field_destructor_tmp_[5526522]:_ref(atomic int(64))[1523051] "temp"
    (5526527 'move' _field_destructor_tmp_[5526522](5526524 '.' this[1292856] nPUsPhysAll[305056]))
    (5526529 call deinit[3933904] _field_destructor_tmp_[5526522])
    ref _field_destructor_tmp_[5526532]:_ref(atomic int(64))[1523051] "temp"
    (5526537 'move' _field_destructor_tmp_[5526532](5526534 '.' this[1292856] nPUsPhysAcc[305049]))
    (5526539 call deinit[3933904] _field_destructor_tmp_[5526532])
    (1292864 return _void[46])
  }
  type chpl_root_locale_accum[305326] val nPUsPhysAcc[305049]:atomic int(64)[1523042] val nPUsPhysAll[305056]:atomic int(64)[1523042] val nPUsLogAcc[305063]:atomic int(64)[1523042] val nPUsLogAll[305070]:atomic int(64)[1523042] val maxTaskPar[305077]:atomic int(64)[1523042]
  function helpSetupRootLocaleFlat[305328](const in arg dst[305332]:RootLocale[309500]) : void[4] "resolved" "no return value for void"
  {
    val root_accum[305337]:chpl_root_locale_accum[305326] "dead at end of block" "insert auto destroy"
    (1916104 call init[305083] root_accum[305337])
    val coerce_tmp[1884368]:AbstractRootLocale[136746] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1884374 'move' coerce_tmp[1884368](1884370 'cast' AbstractRootLocale[136746] dst[305332]))
    {
      const-val dst[5661073]:RootLocale[309500] "concurrently accessed" "const"
      (5661076 'move' dst[5661073](5661079 call chpl__initCopy[1884292] dst[305332] 1))
      {
        val ret[5660865]:nothing[7] "dead after last mention" "RVV" "temp"
        {
          const-val tmpIter[5660868]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
          const-val call_tmp[5660870]:range(int(64),low,one)[1576928] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[5660872]:range(int(64),low,one)[1576928] "temp"
          (5660875 call chpl_build_low_bounded_range[1576395] 0 ret_tmp[5660872])
          (5660878 'move' call_tmp[5660870] ret_tmp[5660872])
          const-val ret_tmp[5660881]:range(int(64),both,one)[1610039] "temp"
          (5660884 call #[1714265] call_tmp[5660870] numLocales[305007] ret_tmp[5660881])
          (5660888 'move' tmpIter[5660868] ret_tmp[5660881])
          val isBounded[5660891]:bool[19] "dead after last mention" "maybe param" "temp"
          {
            const _coforallCount[5660894]:_EndCount(atomic int(64),int(64))[1525461] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            (5660896 'move' _coforallCount[5660894](5660899 call _endCountAlloc[1798297]))
            const-val numTasks[5660900]:int(64)[10] "dead after last mention" "temp"
            (5660902 'move' numTasks[5660900](5660905 call chpl_boundedCoforallSize[1798510] tmpIter[5660868]))
            (5660908 call _upEndCount[1798802] _coforallCount[5660894] numTasks[5660900])
            (5660912 call chpl_resetTaskSpawn[1801388] numTasks[5660900])
            val _indexOfInterest[5660914]:int(64)[10] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[5660916]:_ic_these_range_int64_t_both_one[1615692] "dead at end of block" "expr temp" "temp"
            (5660918 'move' _iterator[5660916](5660921 call _getIterator[1610553] tmpIter[5660868]))
            {
              val ret[6127768]:_ir_these_range_int64_t_both_one[1615698] "dead after last mention" "RVV" "temp"
              val call_tmp[6127770]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6127772]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127774]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127776]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127778]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val default_arg_shouldHalt[6127780]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6127782]:bool[19] "dead after last mention" "temp"
              const-val this[6127901]:range(int(64),both,one)[1610039] "temp"
              (6127906 'move' this[6127901](6127903 '.v' _iterator[5660916] F0_this[6836143]))
              (6127784 'move' _return_tmp_[6127782](6127787 call checkIfIterWillOverflow[1612304] this[6127901] 1))
              val i[6127790]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6127792]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6127794 'move' i[6127790] 0)
              const-val call_tmp[6127797]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[6127908]:range(int(64),both,one)[1610039] "temp"
              (6127913 'move' this[6127908](6127910 '.v' _iterator[5660916] F0_this[6836143]))
              (6127799 'move' call_tmp[6127797](6127802 call lowBoundForIter[1614907] this[6127908]))
              const-val call_tmp[6127804]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (6127806 'move' call_tmp[6127804](6127809 call chpl__idxToInt[1577032] call_tmp[6127797]))
              const-val start[6127811]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (6127813 'move' start[6127811] call_tmp[6127804])
              const-val call_tmp[6127816]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[6127915]:range(int(64),both,one)[1610039] "temp"
              (6127920 'move' this[6127915](6127917 '.v' _iterator[5660916] F0_this[6836143]))
              (6127818 'move' call_tmp[6127816](6127821 call highBoundForIter[1615150] this[6127915]))
              const-val call_tmp[6127823]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (6127825 'move' call_tmp[6127823](6127828 call chpl__idxToInt[1577032] call_tmp[6127816]))
              const end[6127830]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (6127832 'move' end[6127830] call_tmp[6127823])
              val call_tmp[6127835]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127837]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127839]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              CForLoop[6127841] hazard
              {
                const-val yret[6127858]:int(64)[10] "dead after last mention" "YVV" "temp"
                const-val call_tmp[6127860]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val this[6127922]:range(int(64),both,one)[1610039] "temp"
                (6127927 'move' this[6127922](6127924 '.v' _iterator[5660916] F0_this[6836143]))
                (6127862 'move' call_tmp[6127860](6127865 call chpl_intToIdx[1615092] this[6127922] i[6127790]))
                (6127868 'move' yret[6127858] call_tmp[6127860])
                const-val _yieldedIndex[6127882]:int(64)[10] "coforall index var" "temp"
                (6127899 'move' _yieldedIndex[6127882] call_tmp[6127860])
                {
                  const-val locIdx[6127884]:int(64)[10] "coforall index var" "const" "index var" "insert auto destroy"
                  (6127886 'move' locIdx[6127884] _yieldedIndex[6127882])
                  val _args_forcoforall_fn[7260029]:_class_localscoforall_fn[7260017] "temp"
                  (7260033 'move' _args_forcoforall_fn[7260029](7260031 'stack allocate class' _class_localscoforall_fn[7260017]))
                  (7260035 '.=' _args_forcoforall_fn[7260029] _0__coforallCount[7260020] _coforallCount[5660894])
                  (7260039 '.=' _args_forcoforall_fn[7260029] _1_locIdx[7260022] locIdx[6127884])
                  (7260043 '.=' _args_forcoforall_fn[7260029] _2_dst[7260024] dst[5661073])
                  ref tmp[7260047]:chpl_root_locale_accum[305326] "temp"
                  (7260051 'move' tmp[7260047](7260049 'set reference' root_accum[305337]))
                  (7260053 '.=' _args_forcoforall_fn[7260029] _3_root_accum[7260026] tmp[7260047])
                  val _args_vforcoforall_fn[7260057]:chpl__c_void_ptr[120] "temp"
                  (7260061 'move' _args_vforcoforall_fn[7260057](7260059 'cast_to_void_star' _args_forcoforall_fn[7260029]))
                  val _args_sizecoforall_fn[7260063]:int(64)[10] "temp"
                  (7260067 'move' _args_sizecoforall_fn[7260063](7260065 'sizeof_bundle' _class_localscoforall_fn[7260017]))
                  (7260126 call wrapcoforall_fn[7260069] _args_vforcoforall_fn[7260057] _args_sizecoforall_fn[7260063] _args_forcoforall_fn[7260029])
                  {
                  }
                  label _continueLabel[6127896]
                }
                {
                  (6127843 '=' i[6127790] call_tmp[6127804])
                }
                {
                  (6127847 '<=' i[6127790] end[6127830])
                }
                {
                  val call_tmp[6127851]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6127853]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6127855 '+=' i[6127790] 1)
                }
              }
              label _end_these[6127878]
            }
            label _breakLabel[5660938]
            val error[5660940]:Error[85511] "error variable" "temp"
            (5660942 'move' error[5660940] nil[32])
            (5660946 call _waitEndCount[1804599] _coforallCount[5660894] numTasks[5660900] error[5660940])
            val errorExists[7309256]:bool[19] "temp"
            (7309261 'move' errorExists[7309256](7309258 '!=' error[5660940] nil[32]))
            if errorExists[7309256]
            {
              (5660954 call chpl_propagate_error[87613] error[5660940])
            }
            (5660958 call _endCountFree[1803483] _coforallCount[5660894])
            (5660961 call _freeIterator[1622361] _iterator[5660916])
          }
          (5660964 call chpl__autoDestroy[1802624] tmpIter[5660868])
          (5660967 call chpl__autoDestroy[3968601] call_tmp[5660870])
        }
        {
          const-val tmpIter[5660970]:range(int(64),both,one)[1610039] "dead after last mention" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
          const-val call_tmp[5660972]:range(int(64),low,one)[1576928] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[5660974]:range(int(64),low,one)[1576928] "temp"
          (5660977 call chpl_build_low_bounded_range[1576395] 0 ret_tmp[5660974])
          (5660980 'move' call_tmp[5660972] ret_tmp[5660974])
          const-val ret_tmp[5660983]:range(int(64),both,one)[1610039] "temp"
          (5660986 call #[1714265] call_tmp[5660972] numLocales[305007] ret_tmp[5660983])
          (5660990 'move' tmpIter[5660970] ret_tmp[5660983])
          val isBounded[5660993]:bool[19] "dead after last mention" "maybe param" "temp"
          {
            const _coforallCount[5660996]:_EndCount(atomic int(64),int(64))[1525461] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            (5660998 'move' _coforallCount[5660996](5661001 call _endCountAlloc[1798297]))
            const-val numTasks[5661002]:int(64)[10] "dead after last mention" "temp"
            (5661004 'move' numTasks[5661002](5661007 call chpl_boundedCoforallSize[1798510] tmpIter[5660970]))
            (5661010 call _upEndCount[1798802] _coforallCount[5660996] numTasks[5661002])
            (5661014 call chpl_resetTaskSpawn[1801388] numTasks[5661002])
            val _indexOfInterest[5661016]:int(64)[10] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[5661018]:_ic_these_range_int64_t_both_one[1615692] "dead at end of block" "expr temp" "temp"
            (5661020 'move' _iterator[5661018](5661023 call _getIterator[1610553] tmpIter[5660970]))
            {
              val ret[6127930]:_ir_these_range_int64_t_both_one[1615698] "dead after last mention" "RVV" "temp"
              val call_tmp[6127932]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[6127934]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127936]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127938]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127940]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val default_arg_shouldHalt[6127942]:bool[19] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
              const-val _return_tmp_[6127944]:bool[19] "dead after last mention" "temp"
              const-val this[6128062]:range(int(64),both,one)[1610039] "temp"
              (6128067 'move' this[6128062](6128064 '.v' _iterator[5661018] F0_this[6836143]))
              (6127946 'move' _return_tmp_[6127944](6127949 call checkIfIterWillOverflow[1612304] this[6128062] 1))
              val i[6127952]:int(64)[10] "dead at end of block" "insert auto destroy"
              val call_tmp[6127954]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (6127956 'move' i[6127952] 0)
              const-val call_tmp[6127959]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[6128069]:range(int(64),both,one)[1610039] "temp"
              (6128074 'move' this[6128069](6128071 '.v' _iterator[5661018] F0_this[6836143]))
              (6127961 'move' call_tmp[6127959](6127964 call lowBoundForIter[1614907] this[6128069]))
              const-val call_tmp[6127966]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (6127968 'move' call_tmp[6127966](6127971 call chpl__idxToInt[1577032] call_tmp[6127959]))
              const-val start[6127973]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (6127975 'move' start[6127973] call_tmp[6127966])
              const-val call_tmp[6127978]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[6128076]:range(int(64),both,one)[1610039] "temp"
              (6128081 'move' this[6128076](6128078 '.v' _iterator[5661018] F0_this[6836143]))
              (6127980 'move' call_tmp[6127978](6127983 call highBoundForIter[1615150] this[6128076]))
              const-val call_tmp[6127985]:int(64)[10] "dead at end of block" "maybe param" "temp"
              (6127987 'move' call_tmp[6127985](6127990 call chpl__idxToInt[1577032] call_tmp[6127978]))
              const end[6127992]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
              (6127994 'move' end[6127992] call_tmp[6127985])
              val call_tmp[6127997]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6127999]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              val call_tmp[6128001]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
              CForLoop[6128003] hazard
              {
                const-val yret[6128020]:int(64)[10] "dead after last mention" "YVV" "temp"
                const-val call_tmp[6128022]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val this[6128083]:range(int(64),both,one)[1610039] "temp"
                (6128088 'move' this[6128083](6128085 '.v' _iterator[5661018] F0_this[6836143]))
                (6128024 'move' call_tmp[6128022](6128027 call chpl_intToIdx[1615092] this[6128083] i[6127952]))
                (6128030 'move' yret[6128020] call_tmp[6128022])
                const-val _yieldedIndex[6128044]:int(64)[10] "coforall index var" "temp"
                (6128060 'move' _yieldedIndex[6128044] call_tmp[6128022])
                {
                  const-val locIdx[6128046]:int(64)[10] "coforall index var" "const" "index var" "insert auto destroy"
                  (6128048 'move' locIdx[6128046] _yieldedIndex[6128044])
                  val _args_forcoforall_fn[7260142]:_class_localscoforall_fn[7260132] "temp"
                  (7260146 'move' _args_forcoforall_fn[7260142](7260144 'stack allocate class' _class_localscoforall_fn[7260132]))
                  (7260148 '.=' _args_forcoforall_fn[7260142] _0__coforallCount[7260135] _coforallCount[5660996])
                  (7260152 '.=' _args_forcoforall_fn[7260142] _1_locIdx[7260137] locIdx[6128046])
                  (7260156 '.=' _args_forcoforall_fn[7260142] _2_dst[7260139] dst[5661073])
                  val _args_vforcoforall_fn[7260160]:chpl__c_void_ptr[120] "temp"
                  (7260164 'move' _args_vforcoforall_fn[7260160](7260162 'cast_to_void_star' _args_forcoforall_fn[7260142]))
                  val _args_sizecoforall_fn[7260166]:int(64)[10] "temp"
                  (7260170 'move' _args_sizecoforall_fn[7260166](7260168 'sizeof_bundle' _class_localscoforall_fn[7260132]))
                  (7260221 call wrapcoforall_fn[7260172] _args_vforcoforall_fn[7260160] _args_sizecoforall_fn[7260166] _args_forcoforall_fn[7260142])
                  {
                  }
                  label _continueLabel[6128057]
                }
                {
                  (6128005 '=' i[6127952] call_tmp[6127966])
                }
                {
                  (6128009 '<=' i[6127952] end[6127992])
                }
                {
                  val call_tmp[6128013]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[6128015]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
                  (6128017 '+=' i[6127952] 1)
                }
              }
              label _end_these[6128040]
            }
            label _breakLabel[5661040]
            val error[5661042]:Error[85511] "error variable" "temp"
            (5661044 'move' error[5661042] nil[32])
            (5661048 call _waitEndCount[1804599] _coforallCount[5660996] numTasks[5661002] error[5661042])
            val errorExists[7309264]:bool[19] "temp"
            (7309269 'move' errorExists[7309264](7309266 '!=' error[5661042] nil[32]))
            if errorExists[7309264]
            {
              (5661056 call chpl_propagate_error[87613] error[5661042])
            }
            (5661060 call _endCountFree[1803483] _coforallCount[5660996])
            (5661063 call _freeIterator[1622361] _iterator[5661018])
          }
          (5661066 call chpl__autoDestroy[1802624] tmpIter[5660970])
          (5661069 call chpl__autoDestroy[3968601] call_tmp[5660972])
        }
      }
      val coerce_tmp[5661083]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (5661085 'move' coerce_tmp[5661083](5661087 'cast' RootClass[236] dst[5661073]))
      (5661091 call chpl__autoDestroy[71736] coerce_tmp[5661083])
    }
    (5658938 call chpl_after_forall_fence[69473])
    (305403 call setRootLocaleValues[305256] root_accum[305337] dst[305332])
    (5610994 call chpl__autoDestroy[3918887] root_accum[305337])
    (630554 return _void[46])
  }
  function localSpawn[305665]() : bool[19] "inline" "private" "resolved" "fn synchronization free"
  {
    val ret[630564]:bool[19] "dead after last mention" "RVV" "temp"
    val call_tmp[935383]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[935388]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    (630579 'move' ret[630564] 0)
    label _end_localSpawn[630562]
    (630566 return ret[630564])
  }
  function getNodeName[305753](ref arg _retArg[5545808]:_ref(string)[1466327]) : void[4] "fn returns via _retArg" "inline" "private" "resolved"
  {
    const-val ret[630583]:string[244] "dead after last mention" "RVV" "temp"
    const-val _node_name[305765]:string[244] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[653718]:string[244] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[5498432]:Error[85511] "error variable" "temp"
      (5498448 'move' error[5498432] nil[32])
      val call_tmp[935447]:c_ptrConst(int(8))[1466333] "dead after last mention" "expr temp" "maybe param" "temp"
      (935450 'move' call_tmp[935447](305779 call chpl_nodeName[305756]))
      const-val call_tmp[935452]:string[244] "dead after last mention" "maybe param" "temp"
      const-val default_arg_length[1914899]:int(64)[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1914906 'move' default_arg_length[1914899](1914901 call createCopyingBuffer_default_length[1513064] call_tmp[935447] error[5498432]))
      val errorExists[7297368]:bool[19] "temp"
      (7297373 'move' errorExists[7297368](7297370 '!=' error[5498432] nil[32]))
      if errorExists[7297368]
      {
        gotoErrorHandling handler[5498433] handler[5498433]
      }
      val default_arg_policy[1914910]:decodePolicy[37984] "dead after last mention" "default actual temp" "expr temp" "maybe param" "maybe type" "suppress lvalue error" "temp"
      const-val ret_tmp[5547493]:string[244] "temp"
      (305777 call createCopyingBuffer[1511294] call_tmp[935447] default_arg_length[1914899] strict[37976] error[5498432] ret_tmp[5547493])
      (5547496 'move' call_tmp[935452] ret_tmp[5547493])
      val errorExists[7297376]:bool[19] "temp"
      (7297381 'move' errorExists[7297376](7297378 '!=' error[5498432] nil[32]))
      if errorExists[7297376]
      {
        gotoErrorHandling handler[5498433] handler[5498433]
      }
      (653726 'move' _node_name[305765] call_tmp[935452])
      label handler[5498433]
      const-val shouldHandleError[5498457]:bool[19] "temp"
      val errorExists[7297384]:bool[19] "temp"
      (7297389 'move' errorExists[7297384](7297386 '!=' error[5498432] nil[32]))
      (5498461 'move' shouldHandleError[5498457] errorExists[7297384])
      if shouldHandleError[5498457]
      {
        (5498454 call chpl_uncaught_error[87456] error[5498432])
      }
    }
    const-val call_tmp[935457]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (935460 'move' call_tmp[935457](459074 call chpl_nodeID[305038]))
    const-val call_tmp[935462]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (935465 'move' call_tmp[935462](305787 'cast' int(64)[10] call_tmp[935457]))
    const-val call_tmp[935467]:string[244] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[5546305]:string[244] "temp"
    (305785 call :[1496816] call_tmp[935462] ret_tmp[5546305])
    (5546308 'move' call_tmp[935467] ret_tmp[5546305])
    const-val _node_id[305784]:string[244] "dead at end of block" "const" "insert auto destroy"
    (653729 'move' _node_id[305784] call_tmp[935467])
    val tmp[707379]:string[244] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[707380]:bool[19] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[935472]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (935475 'move' call_tmp[935472](305796 call localSpawn[305665]))
    (707385 'move' tmp[707380] call_tmp[935472])
    if tmp[707380]
    {
      const-val tmp[707387]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[935477]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[5539218]:string[244] "temp"
      (305799 call +[28065] _node_name[305765] "-" ret_tmp[5539218])
      (5539221 'move' call_tmp[935477] ret_tmp[5539218])
      const-val ret_tmp[5539212]:string[244] "temp"
      (305797 call +[28065] call_tmp[935477] _node_id[305784] ret_tmp[5539212])
      (5539215 'move' tmp[707387] ret_tmp[5539212])
      (707394 'move' tmp[707379] tmp[707387])
      (5610998 call chpl__autoDestroy[3262688] call_tmp[935477])
    }
    {
      const-ref _fold_tmp[1915217]:_ref(string)[1466327] "dead after last mention" "ref to immutable" "temp"
      (1915220 'move' _fold_tmp[1915217](1915219 'addr of' _node_name[305765]))
      (707399 'move' tmp[707379](1915223 call chpl__autoCopy[1480464] _fold_tmp[1915217] 0))
    }
    (630588 'move' ret[630583] tmp[707379])
    (5611001 call chpl__autoDestroy[3262688] _node_id[305784])
    (5611004 call chpl__autoDestroy[3262688] _node_name[305765])
    gotoReturn _end_getNodeName[630581] _end_getNodeName[630581]
    label _end_getNodeName[630581]
    (5545810 '=' _retArg[5545808] ret[630583])
    (5545812 return _void[46])
  }
  function helpSetupLocaleFlat[305812](const in arg dst[305816]:LocaleModel[309075], ref arg local_name[305820]:string[244]) : void[4] "resolved" "no return value for void"
  {
    const-val _formal_tmp_local_name[1914871]:string[244] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    const-val call_tmp[935482]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    const-val ret_tmp[5545802]:string[244] "temp"
    (305828 call getNodeName[305753] ret_tmp[5545802])
    (5545805 'move' call_tmp[935482] ret_tmp[5545802])
    (1915324 'move' _formal_tmp_local_name[1914871] call_tmp[935482])
    ref call_tmp[935489]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1915228]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915234 'move' coerce_tmp[1915228](1915230 'cast' BaseLocale[136243] dst[305816]))
    (935492 'move' call_tmp[935489](305842 call nPUsPhysAcc[1083788] coerce_tmp[1915228]))
    const-val call_tmp[935494]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (935497 'move' call_tmp[935494](305846 call chpl_topo_getNumCPUsPhysical[305829] 1))
    const-val coerce_tmp[1915238]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915244 'move' coerce_tmp[1915238](1915240 'cast' int(64)[10] call_tmp[935494]))
    (305839 call =[52229] call_tmp[935489] coerce_tmp[1915238])
    ref call_tmp[935501]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1915247]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915253 'move' coerce_tmp[1915247](1915249 'cast' BaseLocale[136243] dst[305816]))
    (935504 'move' call_tmp[935501](305851 call nPUsPhysAll[1083814] coerce_tmp[1915247]))
    const-val call_tmp[935506]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (935509 'move' call_tmp[935506](305855 call chpl_topo_getNumCPUsPhysical[305829] 0))
    const-val coerce_tmp[1915257]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915263 'move' coerce_tmp[1915257](1915259 'cast' int(64)[10] call_tmp[935506]))
    (305848 call =[52229] call_tmp[935501] coerce_tmp[1915257])
    ref call_tmp[935513]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1915266]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915272 'move' coerce_tmp[1915266](1915268 'cast' BaseLocale[136243] dst[305816]))
    (935516 'move' call_tmp[935513](305870 call nPUsLogAcc[1083736] coerce_tmp[1915266]))
    const-val call_tmp[935518]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (935521 'move' call_tmp[935518](305874 call chpl_topo_getNumCPUsLogical[305857] 1))
    const-val coerce_tmp[1915276]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915282 'move' coerce_tmp[1915276](1915278 'cast' int(64)[10] call_tmp[935518]))
    (305867 call =[52229] call_tmp[935513] coerce_tmp[1915276])
    ref call_tmp[935525]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1915285]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915291 'move' coerce_tmp[1915285](1915287 'cast' BaseLocale[136243] dst[305816]))
    (935528 'move' call_tmp[935525](305879 call nPUsLogAll[1083762] coerce_tmp[1915285]))
    const-val call_tmp[935530]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
    (935533 'move' call_tmp[935530](305883 call chpl_topo_getNumCPUsLogical[305857] 0))
    const-val coerce_tmp[1915295]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915301 'move' coerce_tmp[1915295](1915297 'cast' int(64)[10] call_tmp[935530]))
    (305876 call =[52229] call_tmp[935525] coerce_tmp[1915295])
    ref call_tmp[935537]:_ref(int(64))[1465689] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1915304]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915310 'move' coerce_tmp[1915304](1915306 'cast' BaseLocale[136243] dst[305816]))
    (935540 'move' call_tmp[935537](305896 call maxTaskPar[1083840] coerce_tmp[1915304]))
    const-val call_tmp[935542]:uint(32)[81] "dead after last mention" "expr temp" "maybe param" "temp"
    (935545 'move' call_tmp[935542](305900 call chpl_task_getMaxPar[305885]))
    const-val coerce_tmp[1915315]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1915321 'move' coerce_tmp[1915315](1915317 'cast' int(64)[10] call_tmp[935542]))
    (305893 call =[52229] call_tmp[935537] coerce_tmp[1915315])
    label _endhelpSetupLocaleFlat[1914881]
    (5611007 '=' local_name[305820] _formal_tmp_local_name[1914871])
    (630592 return _void[46])
  }
  function chpl_nodeName[305756]() : c_ptrConst(int(8))[1466333] "extern" "local args" "no fn body" "resolved"
  {
  }
  function chpl_topo_getNumCPUsPhysical[305829](const in arg accessible_only[305832]:bool[19]) : int(32)[66] "extern" "local args" "no fn body" "resolved"
  {
  }
  function chpl_topo_getNumCPUsLogical[305857](const in arg accessible_only[305860]:bool[19]) : int(32)[66] "extern" "local args" "no fn body" "resolved"
  {
  }
  function chpl_task_getMaxPar[305885]() : uint(32)[81] "extern" "local args" "no fn body" "resolved"
  {
  }
  function coforall_fn[5661093](const in arg _coforallCount[5661095]:_EndCount(atomic int(64),int(64))[1525461], const in arg locIdx[5661097]:int(64)[10], const in arg dst[5661157]:RootLocale[309500], const?  ref arg root_accum[5661259]:_ref(chpl_root_locale_accum)[1478659]) : void[4] "cobegin or coforall" "inlined function" "outside try" "resolved" "task fn from iterator fn" "wrapper needs start fence"
  {
    {
      const-val tmp[5661101]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[5661103]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (5661105 'move' call_tmp[5661103](5661108 call :[1513418] locIdx[5661097]))
      const-val call_tmp[5661110]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (5661112 'move' call_tmp[5661110](5661115 call chpl_buildLocaleID[306518] call_tmp[5661103] c_sublocid_any[135202]))
      const-val call_tmp[5661118]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (5661120 'move' call_tmp[5661118](5661122 'chpl_on_locale_num' call_tmp[5661110]))
      (5661124 'move' tmp[5661101] call_tmp[5661118])
      {
        (5661129 call chpl_defaultDistInitPrivate[288298])
        const-val yret[5661130]:int(64)[10] "dead after last mention" "YVV" "temp"
        (5661132 'move' yret[5661130] locIdx[5661097])
        const-val locIdx[5661170]:int(64)[10] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
        (5661172 'move' locIdx[5661170] yret[5661130])
        {
          const-val call_tmp[5661175]:locale[234] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
          const-val initTemp[5661177]:locale[234] "dead after last mention" "temp"
          val coerce_tmp[5661179]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (5661181 'move' coerce_tmp[5661179](5661183 'cast' BaseLocale[136243] dst[5661157]))
          (5661187 call init[1914636] initTemp[5661177] coerce_tmp[5661179])
          (5661190 'move' call_tmp[5661175] initTemp[5661177])
          val call_tmp[5661193]:LocaleModel[309075] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
          { scopeless
            val new_temp[5661196]:LocaleModel[309075] "dead after last mention" "temp"
            (5661198 'move' new_temp[5661196](5661201 call _new[1915339] call_tmp[5661175]))
          }
          (5661203 'move' call_tmp[5661193] new_temp[5661196])
          const-val call_tmp[5661206]:locale[234] "dead at end of block" "maybe param" "temp"
          const-val initTemp[5661208]:locale[234] "dead at end of block" "temp"
          val coerce_tmp[5661210]:BaseLocale[136243] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (5661212 'move' coerce_tmp[5661210](5661214 'cast' BaseLocale[136243] call_tmp[5661193]))
          (5661218 call init[1915427] initTemp[5661208] coerce_tmp[5661210])
          (5661221 'move' call_tmp[5661206] initTemp[5661208])
          const-val node[5661224]:locale[234] "dead at end of block" "const" "insert auto destroy"
          (5661226 'move' node[5661224] call_tmp[5661206])
          (5661230 call chpl__autoDestroy[3885511] call_tmp[5661175])
          ref call_tmp[5661232]:_ref(locale)[1467958] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[5661234]:_ref(_array(unmanaged [domain(1,int(64),one)] locale))[1780432] "dead after last mention" "temp"
          (5661236 'move' _this_tmp_[5661234](5661239 call myLocales[1299240] dst[5661157]))
          (5661241 'move' call_tmp[5661232](5661244 call this[1895191] _this_tmp_[5661234] locIdx[5661170]))
          (5661248 call =[135747] call_tmp[5661232] node[5661224])
          (5661252 call accum[305198] root_accum[5661259] node[5661224])
          (5661256 call chpl__autoDestroy[3885511] node[5661224])
        }
      }
    }
    label _endcoforall_fn[5661146]
    val coerce_tmp[5661160]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (5661162 'move' coerce_tmp[5661160](5661164 'cast' RootClass[236] dst[5661157]))
    (5661168 call chpl__autoDestroy[71736] coerce_tmp[5661160])
    (5661148 return _void[46])
  }
  function coforall_fn[5661261](const in arg _coforallCount[5661263]:_EndCount(atomic int(64),int(64))[1525461], const in arg locIdx[5661265]:int(64)[10], const in arg dst[5661321]:RootLocale[309500]) : void[4] "cobegin or coforall" "inlined function" "outside try" "resolved" "task fn from iterator fn" "wrapper needs start fence"
  {
    {
      const-val tmp[5661269]:chpl_localeID_t[306449] "dead after last mention" "const" "temp"
      const-val call_tmp[5661271]:int(32)[66] "dead after last mention" "expr temp" "maybe param" "temp"
      (5661273 'move' call_tmp[5661271](5661276 call :[1513418] locIdx[5661265]))
      const-val call_tmp[5661278]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (5661280 'move' call_tmp[5661278](5661283 call chpl_buildLocaleID[306518] call_tmp[5661271] c_sublocid_any[135202]))
      const-val call_tmp[5661286]:chpl_localeID_t[306449] "dead after last mention" "expr temp" "maybe param" "temp"
      (5661288 'move' call_tmp[5661286](5661290 'chpl_on_locale_num' call_tmp[5661278]))
      (5661292 'move' tmp[5661269] call_tmp[5661286])
      {
        (5661297 call chpl_rootLocaleInitPrivate[1894059] locIdx[5661265])
        (5661300 call chpl_defaultLocaleInitPrivate[136975])
        (5661302 call chpl_singletonCurrentLocaleInitPrivate[1907584] locIdx[5661265])
        (5661305 call warmupRuntime[136748])
      }
    }
    label _endcoforall_fn[5661317]
    val coerce_tmp[5661324]:RootClass[236] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (5661326 'move' coerce_tmp[5661324](5661328 'cast' RootClass[236] dst[5661321]))
    (5661332 call chpl__autoDestroy[71736] coerce_tmp[5661324])
    (5661310 return _void[46])
  }
  function wrapcoforall_fn[7260069](in arg buf[7260071]:chpl__c_void_ptr[120], in arg buf_size[7260073]:int(64)[10], in arg c[7260075]:_class_localscoforall_fn[7260017]) : void[4] "cobegin or coforall block" "wrapper needs start fence"
  {
    (7260078 'chpl_rmem_consist_acquire')
    val _0__coforallCount[7260081]:_EndCount(atomic int(64),int(64))[1525461] "temp"
    (7260086 'move' _0__coforallCount[7260081](7260083 '.v' c[7260075] _0__coforallCount[7260020]))
    val _1_locIdx[7260089]:int(64)[10] "temp"
    (7260094 'move' _1_locIdx[7260089](7260091 '.v' c[7260075] _1_locIdx[7260022]))
    val _2_dst[7260097]:RootLocale[309500] "temp"
    (7260102 'move' _2_dst[7260097](7260099 '.v' c[7260075] _2_dst[7260024]))
    ref _3_root_accum[7260105]:chpl_root_locale_accum[305326] "temp"
    (7260110 'move' _3_root_accum[7260105](7260107 '.v' c[7260075] _3_root_accum[7260026]))
    (7260079 call coforall_fn[5661093] _0__coforallCount[7260081] _1_locIdx[7260089] _2_dst[7260097] _3_root_accum[7260105])
    val endcount[7260113]:_EndCount(atomic int(64),int(64))[1525461] "temp"
    (7260118 'move' endcount[7260113](7260115 '.v' c[7260075] _0__coforallCount[7260020]))
    (7260120 call _downEndCount[1802638] endcount[7260113] nil[32])
    (7260124 return _void[46])
  }
  function wrapcoforall_fn[7260172](in arg buf[7260174]:chpl__c_void_ptr[120], in arg buf_size[7260176]:int(64)[10], in arg c[7260178]:_class_localscoforall_fn[7260132]) : void[4] "cobegin or coforall block" "wrapper needs start fence"
  {
    (7260181 'chpl_rmem_consist_acquire')
    val _0__coforallCount[7260184]:_EndCount(atomic int(64),int(64))[1525461] "temp"
    (7260189 'move' _0__coforallCount[7260184](7260186 '.v' c[7260178] _0__coforallCount[7260135]))
    val _1_locIdx[7260192]:int(64)[10] "temp"
    (7260197 'move' _1_locIdx[7260192](7260194 '.v' c[7260178] _1_locIdx[7260137]))
    val _2_dst[7260200]:RootLocale[309500] "temp"
    (7260205 'move' _2_dst[7260200](7260202 '.v' c[7260178] _2_dst[7260139]))
    (7260182 call coforall_fn[5661261] _0__coforallCount[7260184] _1_locIdx[7260192] _2_dst[7260200])
    val endcount[7260208]:_EndCount(atomic int(64),int(64))[1525461] "temp"
    (7260213 'move' endcount[7260208](7260210 '.v' c[7260178] _0__coforallCount[7260135]))
    (7260215 call _downEndCount[1802638] endcount[7260208] nil[32])
    (7260219 return _void[46])
  }
}
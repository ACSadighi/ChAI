AST dump for ChapelHashing after pass inlineFunctions.
Module use list: ChapelBase Reflection 

{
  function chpl__init_ChapelHashing[468540]() : void[4] "insert line file info" "module init" "resolved"
  {
    (628301 return _void[46])
  }
  function chpl__defaultHashWrapperInner[3259938](const  ref arg x[3259940]:string[244]) : uint(64)[86] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[3259944]:uint(64)[86] "dead after last mention" "RVV" "temp"
    val call_tmp[3259955]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3259963]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3259970]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3260005]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3260012]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    val call_tmp[3260020]:bool[19] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3260177]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[7478102]:int(32)[66] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (7478104 'move' coerce_tmp[7478102](7478106 '.v' x[3259940] locale_id[21317]))
    (7478110 call chpl_buildLocaleID[306518] coerce_tmp[7478102] c_sublocid_any[135202])
    val locHash[7478113]:int(64)[10] "dead at end of block" "insert auto destroy"
    (7478115 'move' locHash[7478113] 5381)
    val _iterator[7478118]:_ic_chpl_direct_counted_range_iter[1520064] "dead at end of block" "expr temp" "temp"
    val ret[7478120]:int(64)[10] "dead after last mention" "RVV" "temp"
    (7478122 '=' ret[7478120](7478124 '.v' x[3259940] buffLen[21281]))
    const-val call_tmp[7478127]:_ir_chpl_direct_counted_range_iter[1520070] "dead at end of block" "expr temp" "maybe param" "temp"
    val _ir[7478129]:_ir_chpl_direct_counted_range_iter[1520070] "temp"
    (7478131 '.=' _ir[7478129] F0_low[6832412] 0)
    (7478135 '.=' _ir[7478129] F1_count[6832416] ret[7478120])
    (7478139 'move' call_tmp[7478127] _ir[7478129])
    val ret[7478142]:_ic_chpl_direct_counted_range_iter[1520064] "dead after last mention" "RVV" "temp"
    val _ic_[7478144]:_ic_chpl_direct_counted_range_iter[1520064] "dead after last mention" "temp"
    const-val call_tmp[7478146]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7478148 'move' call_tmp[7478146](7478150 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1520064]))
    val cast_tmp[7478152]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (7478154 'move' cast_tmp[7478152](7478157 call chpl_here_alloc[308303] call_tmp[7478146] 5))
    (7478160 'move' _ic_[7478144](7478162 'cast' _ic_chpl_direct_counted_range_iter[1520064] cast_tmp[7478152]))
    (7478165 'setcid' _ic_[7478144])
    (7478167 'move' ret[7478142] _ic_[7478144])
    (7478170 '.=' ret[7478142] more[1520067] 1)
    const-val tmp[7478174]:int(64)[10] "temp"
    (7478176 'move' tmp[7478174](7478178 '.v' call_tmp[7478127] F0_low[6832412]))
    (7478181 '.=' ret[7478142] F0_low[6832410] tmp[7478174])
    const-val tmp[7478185]:int(64)[10] "temp"
    (7478187 'move' tmp[7478185](7478189 '.v' call_tmp[7478127] F1_count[6832416]))
    (7478192 '.=' ret[7478142] F1_count[6832414] tmp[7478185])
    (7478196 'move' _iterator[7478118] ret[7478142])
    val _iterator[7478199]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[7478201]:_ir_chpl_direct_counted_range_iter_helper[1519803] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[7478203]:int(64)[10] "temp"
    (7478205 'move' low[7478203](7478207 '.v' _iterator[7478118] F0_low[6832410]))
    const-val count[7478210]:int(64)[10] "temp"
    (7478212 'move' count[7478210](7478214 '.v' _iterator[7478118] F1_count[6832414]))
    val _ir[7478217]:_ir_chpl_direct_counted_range_iter_helper[1519803] "temp"
    (7478219 '.=' _ir[7478217] F0_low[6834176] low[7478203])
    (7478223 '.=' _ir[7478217] F1_count[6834180] count[7478210])
    (7478227 'move' call_tmp[7478201] _ir[7478217])
    val ret[7478230]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead after last mention" "RVV" "temp"
    val _ic_[7478232]:_ic_chpl_direct_counted_range_iter_helper[1519797] "dead after last mention" "temp"
    const-val call_tmp[7478234]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7478236 'move' call_tmp[7478234](7478238 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1519797]))
    val cast_tmp[7478240]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (7478242 'move' cast_tmp[7478240](7478245 call chpl_here_alloc[308303] call_tmp[7478234] 4))
    (7478248 'move' _ic_[7478232](7478250 'cast' _ic_chpl_direct_counted_range_iter_helper[1519797] cast_tmp[7478240]))
    (7478253 'setcid' _ic_[7478232])
    (7478255 'move' ret[7478230] _ic_[7478232])
    (7478258 '.=' ret[7478230] more[1519800] 1)
    const-val tmp[7478262]:int(64)[10] "temp"
    (7478264 'move' tmp[7478262](7478266 '.v' call_tmp[7478201] F0_low[6834176]))
    (7478269 '.=' ret[7478230] F0_low[6834174] tmp[7478262])
    const-val tmp[7478273]:int(64)[10] "temp"
    (7478275 'move' tmp[7478273](7478277 '.v' call_tmp[7478201] F1_count[6834180]))
    (7478280 '.=' ret[7478230] F1_count[6834178] tmp[7478273])
    (7478284 'move' _iterator[7478199] ret[7478230])
    const-val count[7478287]:int(64)[10] "temp"
    (7478289 'move' count[7478287](7478291 '.v' _iterator[7478199] F1_count[6834178]))
    const-val tmp[7478294]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (7478296 'move' tmp[7478294](7478298 '<' count[7478287] 0))
    if tmp[7478294]
    {
      (7478304 call boundsCheckHalt[404] "With a negative count, the range must have a last index.")
    }
    const-val start[7478307]:int(64)[10] "dead at end of block" "const" "insert auto destroy"
    const-val low[7478309]:int(64)[10] "temp"
    (7478311 'move' low[7478309](7478313 '.v' _iterator[7478199] F0_low[6834174]))
    (7478316 'move' start[7478307] low[7478309])
    val tmp[7478319]:int(64)[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val count[7478321]:int(64)[10] "temp"
    (7478323 'move' count[7478321](7478325 '.v' _iterator[7478199] F1_count[6834178]))
    const-val call_tmp[7478328]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (7478330 'move' call_tmp[7478328](7478332 '==' count[7478321] 0))
    if call_tmp[7478328]
    {
      const-val call_tmp[7478337]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val low[7478339]:int(64)[10] "temp"
      (7478341 'move' low[7478339](7478343 '.v' _iterator[7478199] F0_low[6834174]))
      (7478346 'move' call_tmp[7478337](7478348 'cast' uint(64)[86] low[7478339]))
      const-val call_tmp[7478351]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7478353 'move' call_tmp[7478351](7478355 '-' call_tmp[7478337] 1))
      const-val call_tmp[7478358]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7478360 'move' call_tmp[7478358](7478362 'cast' int(64)[10] call_tmp[7478351]))
      (7478365 'move' tmp[7478319] call_tmp[7478358])
    }
    {
      const-val count[7478369]:int(64)[10] "temp"
      (7478371 'move' count[7478369](7478373 '.v' _iterator[7478199] F1_count[6834178]))
      const-val call_tmp[7478376]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7478378 'move' call_tmp[7478376](7478380 '-' count[7478369] 1))
      const-val low[7478383]:int(64)[10] "temp"
      (7478385 'move' low[7478383](7478387 '.v' _iterator[7478199] F0_low[6834174]))
      const-val call_tmp[7478390]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7478392 'move' call_tmp[7478390](7478394 '+' low[7478383] call_tmp[7478376]))
      (7478397 'move' tmp[7478319] call_tmp[7478390])
    }
    val _iterator[7478401]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[7478403]:_ir_chpl_direct_param_stride_range_iter[1519532] "dead at end of block" "expr temp" "maybe param" "temp"
    val _ir[7478405]:_ir_chpl_direct_param_stride_range_iter[1519532] "temp"
    (7478407 '.=' _ir[7478405] F0_low[6835593] start[7478307])
    (7478411 '.=' _ir[7478405] F1_high[6835597] tmp[7478319])
    (7478415 'move' call_tmp[7478403] _ir[7478405])
    val ret[7478418]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead after last mention" "RVV" "temp"
    val _ic_[7478420]:_ic_chpl_direct_param_stride_range_iter[1519526] "dead after last mention" "temp"
    const-val call_tmp[7478422]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7478424 'move' call_tmp[7478422](7478426 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1519526]))
    val cast_tmp[7478428]:c_ptr(void)[1465614] "dead after last mention" "temp"
    (7478430 'move' cast_tmp[7478428](7478433 call chpl_here_alloc[308303] call_tmp[7478422] 3))
    (7478436 'move' _ic_[7478420](7478438 'cast' _ic_chpl_direct_param_stride_range_iter[1519526] cast_tmp[7478428]))
    (7478441 'setcid' _ic_[7478420])
    (7478443 'move' ret[7478418] _ic_[7478420])
    (7478446 '.=' ret[7478418] more[1519529] 1)
    const-val tmp[7478450]:int(64)[10] "temp"
    (7478452 'move' tmp[7478450](7478454 '.v' call_tmp[7478403] F0_low[6835593]))
    (7478457 '.=' ret[7478418] F0_low[6835591] tmp[7478450])
    const-val tmp[7478461]:int(64)[10] "temp"
    (7478463 'move' tmp[7478461](7478465 '.v' call_tmp[7478403] F1_high[6835597]))
    (7478468 '.=' ret[7478418] F1_high[6835595] tmp[7478461])
    (7478472 'move' _iterator[7478401] ret[7478418])
    val i[7478475]:int(64)[10] "dead at end of block" "insert auto destroy"
    (7478477 'move' i[7478475] 0)
    const-val low[7478480]:int(64)[10] "temp"
    (7478482 'move' low[7478480](7478484 '.v' _iterator[7478401] F0_low[6835591]))
    const-val high[7478487]:int(64)[10] "temp"
    (7478489 'move' high[7478487](7478491 '.v' _iterator[7478401] F1_high[6835595]))
    const-val low[7478494]:int(64)[10] "temp"
    (7478496 'move' low[7478494](7478498 '.v' _iterator[7478401] F0_low[6835591]))
    const-val high[7478501]:int(64)[10] "temp"
    (7478503 'move' high[7478501](7478505 '.v' _iterator[7478401] F1_high[6835595]))
    (7478509 call chpl_checkIfRangeIterWillOverflow[1518856] low[7478494] high[7478501] 1 low[7478480] high[7478487] 1)
    CForLoop[7478516]
    {
      const-val c[7478543]:int(64)[10] "const" "index var" "insert auto destroy"
      (7478545 'move' c[7478543] i[7478475])
      val inlineImm[7478548]:int(64)[10] "temp"
      (7478550 'move' inlineImm[7478548] 5)
      const-val tmp[7478553]:bool[19] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (7478555 'move' tmp[7478553](7478557 '<' 5 0))
      if tmp[7478553]
      {
        const-val call_tmp[7478562]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478564]:string[244] "temp"
        (7478567 call :[1496816] locHash[7478113] ret_tmp[7478564])
        (7478570 'move' call_tmp[7478562] ret_tmp[7478564])
        const-val call_tmp[7478573]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478575]:string[244] "temp"
        (7478578 call +[28065] "Cannot bitshift " call_tmp[7478562] ret_tmp[7478575])
        (7478582 'move' call_tmp[7478573] ret_tmp[7478575])
        const-val call_tmp[7478585]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478587]:string[244] "temp"
        (7478590 call +[28065] call_tmp[7478573] " by " ret_tmp[7478587])
        (7478594 'move' call_tmp[7478585] ret_tmp[7478587])
        const-val call_tmp[7478597]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478599]:string[244] "temp"
        (7478602 call :[1496816] inlineImm[7478548] ret_tmp[7478599])
        (7478605 'move' call_tmp[7478597] ret_tmp[7478599])
        const-val call_tmp[7478608]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478610]:string[244] "temp"
        (7478613 call +[28065] call_tmp[7478585] call_tmp[7478597] ret_tmp[7478610])
        (7478617 'move' call_tmp[7478608] ret_tmp[7478610])
        const-val call_tmp[7478620]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478622]:string[244] "temp"
        (7478625 call +[28065] call_tmp[7478608] " because " ret_tmp[7478622])
        (7478629 'move' call_tmp[7478620] ret_tmp[7478622])
        const-val call_tmp[7478632]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478634]:string[244] "temp"
        (7478637 call :[1496816] inlineImm[7478548] ret_tmp[7478634])
        (7478640 'move' call_tmp[7478632] ret_tmp[7478634])
        const-val call_tmp[7478643]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[7478645]:string[244] "temp"
        (7478648 call +[28065] call_tmp[7478620] call_tmp[7478632] ret_tmp[7478645])
        (7478652 'move' call_tmp[7478643] ret_tmp[7478645])
        const-val call_tmp[7478655]:string[244] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[7478657]:string[244] "temp"
        (7478660 call +[28065] call_tmp[7478643] " is less than 0" ret_tmp[7478657])
        (7478664 'move' call_tmp[7478655] ret_tmp[7478657])
        const-val msg[7478667]:string[244] "dead at end of block" "insert auto destroy"
        (7478669 'move' msg[7478667] call_tmp[7478655])
        ref i_x[7478672]:string[244] "temp"
        (7478674 'move' i_x[7478672](7478676 'set reference' call_tmp[7478643]))
        (7478679 call deinit[21354] i_x[7478672])
        ref i_x[7478681]:string[244] "temp"
        (7478683 'move' i_x[7478681](7478685 'set reference' call_tmp[7478632]))
        (7478688 call deinit[21354] i_x[7478681])
        ref i_x[7478690]:string[244] "temp"
        (7478692 'move' i_x[7478690](7478694 'set reference' call_tmp[7478620]))
        (7478697 call deinit[21354] i_x[7478690])
        ref i_x[7478699]:string[244] "temp"
        (7478701 'move' i_x[7478699](7478703 'set reference' call_tmp[7478608]))
        (7478706 call deinit[21354] i_x[7478699])
        ref i_x[7478708]:string[244] "temp"
        (7478710 'move' i_x[7478708](7478712 'set reference' call_tmp[7478597]))
        (7478715 call deinit[21354] i_x[7478708])
        ref i_x[7478717]:string[244] "temp"
        (7478719 'move' i_x[7478717](7478721 'set reference' call_tmp[7478585]))
        (7478724 call deinit[21354] i_x[7478717])
        ref i_x[7478726]:string[244] "temp"
        (7478728 'move' i_x[7478726](7478730 'set reference' call_tmp[7478573]))
        (7478733 call deinit[21354] i_x[7478726])
        ref i_x[7478735]:string[244] "temp"
        (7478737 'move' i_x[7478735](7478739 'set reference' call_tmp[7478562]))
        (7478742 call deinit[21354] i_x[7478735])
        (7478745 call boundsCheckHalt[404] msg[7478667])
        ref i_x[7478747]:string[244] "temp"
        (7478749 'move' i_x[7478747](7478751 'set reference' msg[7478667]))
        (7478754 call deinit[21354] i_x[7478747])
      }
      {
        const-val call_tmp[7478757]:bool[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (7478759 'move' call_tmp[7478757](7478761 '>=' inlineImm[7478548] 64))
        if call_tmp[7478757]
        {
          const-val call_tmp[7478766]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478768]:string[244] "temp"
          (7478771 call :[1496816] locHash[7478113] ret_tmp[7478768])
          (7478774 'move' call_tmp[7478766] ret_tmp[7478768])
          const-val call_tmp[7478777]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478779]:string[244] "temp"
          (7478782 call +[28065] "Cannot bitshift " call_tmp[7478766] ret_tmp[7478779])
          (7478786 'move' call_tmp[7478777] ret_tmp[7478779])
          const-val call_tmp[7478789]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478791]:string[244] "temp"
          (7478794 call +[28065] call_tmp[7478777] " by " ret_tmp[7478791])
          (7478798 'move' call_tmp[7478789] ret_tmp[7478791])
          const-val call_tmp[7478801]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478803]:string[244] "temp"
          (7478806 call :[1496816] inlineImm[7478548] ret_tmp[7478803])
          (7478809 'move' call_tmp[7478801] ret_tmp[7478803])
          const-val call_tmp[7478812]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478814]:string[244] "temp"
          (7478817 call +[28065] call_tmp[7478789] call_tmp[7478801] ret_tmp[7478814])
          (7478821 'move' call_tmp[7478812] ret_tmp[7478814])
          const-val call_tmp[7478824]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478826]:string[244] "temp"
          (7478829 call +[28065] call_tmp[7478812] " because " ret_tmp[7478826])
          (7478833 'move' call_tmp[7478824] ret_tmp[7478826])
          const-val call_tmp[7478836]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478838]:string[244] "temp"
          (7478841 call :[1496816] inlineImm[7478548] ret_tmp[7478838])
          (7478844 'move' call_tmp[7478836] ret_tmp[7478838])
          const-val call_tmp[7478847]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478849]:string[244] "temp"
          (7478852 call +[28065] call_tmp[7478824] call_tmp[7478836] ret_tmp[7478849])
          (7478856 'move' call_tmp[7478847] ret_tmp[7478849])
          const-val call_tmp[7478859]:string[244] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[7478861]:string[244] "temp"
          (7478864 call +[28065] call_tmp[7478847] " is >= the bitwidth of " ret_tmp[7478861])
          (7478868 'move' call_tmp[7478859] ret_tmp[7478861])
          const-val call_tmp[7478871]:string[244] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[7478873]:string[244] "temp"
          (7478876 call +[28065] call_tmp[7478859] "int(64)" ret_tmp[7478873])
          (7478880 'move' call_tmp[7478871] ret_tmp[7478873])
          const-val msg[7478883]:string[244] "dead at end of block" "insert auto destroy"
          (7478885 'move' msg[7478883] call_tmp[7478871])
          ref i_x[7478888]:string[244] "temp"
          (7478890 'move' i_x[7478888](7478892 'set reference' call_tmp[7478859]))
          (7478895 call deinit[21354] i_x[7478888])
          ref i_x[7478897]:string[244] "temp"
          (7478899 'move' i_x[7478897](7478901 'set reference' call_tmp[7478847]))
          (7478904 call deinit[21354] i_x[7478897])
          ref i_x[7478906]:string[244] "temp"
          (7478908 'move' i_x[7478906](7478910 'set reference' call_tmp[7478836]))
          (7478913 call deinit[21354] i_x[7478906])
          ref i_x[7478915]:string[244] "temp"
          (7478917 'move' i_x[7478915](7478919 'set reference' call_tmp[7478824]))
          (7478922 call deinit[21354] i_x[7478915])
          ref i_x[7478924]:string[244] "temp"
          (7478926 'move' i_x[7478924](7478928 'set reference' call_tmp[7478812]))
          (7478931 call deinit[21354] i_x[7478924])
          ref i_x[7478933]:string[244] "temp"
          (7478935 'move' i_x[7478933](7478937 'set reference' call_tmp[7478801]))
          (7478940 call deinit[21354] i_x[7478933])
          ref i_x[7478942]:string[244] "temp"
          (7478944 'move' i_x[7478942](7478946 'set reference' call_tmp[7478789]))
          (7478949 call deinit[21354] i_x[7478942])
          ref i_x[7478951]:string[244] "temp"
          (7478953 'move' i_x[7478951](7478955 'set reference' call_tmp[7478777]))
          (7478958 call deinit[21354] i_x[7478951])
          ref i_x[7478960]:string[244] "temp"
          (7478962 'move' i_x[7478960](7478964 'set reference' call_tmp[7478766]))
          (7478967 call deinit[21354] i_x[7478960])
          (7478970 call boundsCheckHalt[404] msg[7478883])
          ref i_x[7478972]:string[244] "temp"
          (7478974 'move' i_x[7478972](7478976 'set reference' msg[7478883]))
          (7478979 call deinit[21354] i_x[7478972])
        }
      }
      const-val call_tmp[7478983]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7478985 'move' call_tmp[7478983](7478987 'cast' uint(64)[86] locHash[7478113]))
      const-val call_tmp[7478990]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
      (7478992 'move' call_tmp[7478990](7478994 '<<' call_tmp[7478983] inlineImm[7478548]))
      const-val call_tmp[7478997]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7478999 'move' call_tmp[7478997](7479001 'cast' int(64)[10] call_tmp[7478990]))
      const-val call_tmp[7479004]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7479006 'move' call_tmp[7479004](7479008 '+' call_tmp[7478997] locHash[7478113]))
      val coerce_tmp[7479011]:c_ptr(uint(8))[1466369] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7479013 'move' coerce_tmp[7479011](7479015 '.v' x[3259940] buff[21299]))
      ref call_tmp[7479018]:uint(8)[71] "dead after last mention" "maybe param" "temp"
      (7479020 'move' call_tmp[7479018](7479022 'array_get' coerce_tmp[7479011] c[7478543]))
      const-val coerce_tmp[7479025]:uint(8)[71] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7479027 'move' coerce_tmp[7479025](7479029 'deref' call_tmp[7479018]))
      const-val coerce_tmp[7479031]:int(64)[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (7479033 'move' coerce_tmp[7479031](7479035 'cast' int(64)[10] coerce_tmp[7479025]))
      const-val call_tmp[7479038]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (7479040 'move' call_tmp[7479038](7479042 '^' call_tmp[7479004] coerce_tmp[7479031]))
      (7479045 '=' locHash[7478113] call_tmp[7479038])
      {
        const-val low[7478518]:int(64)[10] "temp"
        (7478520 'move' low[7478518](7478522 '.v' _iterator[7478401] F0_low[6835591]))
        (7478525 '=' i[7478475] low[7478518])
      }
      {
        const-val high[7478529]:int(64)[10] "temp"
        (7478531 'move' high[7478529](7478533 '.v' _iterator[7478401] F1_high[6835595]))
        (7478536 '<=' i[7478475] high[7478529])
      }
      {
        (7478540 '+=' i[7478475] 1)
      }
    }
    val call_tmp[7479048]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (7479050 'move' call_tmp[7479048](7479052 'cast' c_ptr(void)[1465614] _iterator[7478401]))
    (7479056 call chpl_here_free[308686] call_tmp[7479048])
    val call_tmp[7479058]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (7479060 'move' call_tmp[7479058](7479062 'cast' c_ptr(void)[1465614] _iterator[7478199]))
    (7479066 call chpl_here_free[308686] call_tmp[7479058])
    val call_tmp[7479068]:c_ptr(void)[1465614] "dead after last mention" "expr temp" "maybe param" "temp"
    (7479070 'move' call_tmp[7479068](7479072 'cast' c_ptr(void)[1465614] _iterator[7478118]))
    (7479076 call chpl_here_free[308686] call_tmp[7479068])
    const-val call_tmp[7479078]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7479080 'move' call_tmp[7479078](7479082 'cast' uint(64)[86] locHash[7478113]))
    (3260179 'move' call_tmp[3260177] call_tmp[7479078])
    (3260255 '=' ret[3259944] call_tmp[3260177])
    (3260191 return ret[3259944])
  }
  function chpl__defaultHashWrapper[3259874](const  ref arg x[3259876]:string[244]) : int(64)[10] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[3259880]:int(64)[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[3259888]:uint(64)[86] "dead at end of block" "maybe param" "temp"
    (3259890 'move' call_tmp[3259888](3259893 call chpl__defaultHashWrapperInner[3259938] x[3259876]))
    const-val hash[3259895]:uint(64)[86] "dead at end of block" "const" "insert auto destroy"
    (3259897 'move' hash[3259895] call_tmp[3259888])
    val call_tmp[3259901]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "maybe type" "temp"
    const-val call_tmp[3259908]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[7509468]:int(64)[10] "temp"
    (7509471 'move' inlineImm[7509468] 9223372036854775807)
    const-val call_tmp[7509474]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7509476 'move' call_tmp[7509474](7509478 'cast' uint(64)[86] inlineImm[7509468]))
    const-val call_tmp[7509481]:uint(64)[86] "dead after last mention" "expr temp" "maybe param" "temp"
    (7509483 'move' call_tmp[7509481](7509485 '&' hash[3259895] call_tmp[7509474]))
    (3259910 'move' call_tmp[3259908] call_tmp[7509481])
    const-val call_tmp[3259916]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[7443978]:int(64)[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (7443980 'move' call_tmp[7443978](7443982 'cast' int(64)[10] call_tmp[3259908]))
    (3259918 'move' call_tmp[3259916] call_tmp[7443978])
    (3260264 '=' ret[3259880] call_tmp[3259916])
    label _end_chpl__defaultHashWrapper[3259933]
    (3259935 return ret[3259880])
  }
}